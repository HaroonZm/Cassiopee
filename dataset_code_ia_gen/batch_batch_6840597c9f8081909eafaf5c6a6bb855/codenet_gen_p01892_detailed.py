# 入力されたフォロー数A, フォロワー数B と、制約となるNから、
# A:B の比率を、整数比 x:y (1 ≤ x,y ≤ N) に近づけるために、
# フォロー数の変更量の絶対値を最小化する問題。

# アプローチ：
# 1. x,y を 1 から N まで全探索し、候補となる比として x:y を考える。
# 2. 現状のBを固定し、Aを x/y * B に近づけたい。
# 3. そのため、Aの候補値は k = round(B*x/y) とし、
#    フォロー数Aとの差の絶対値 abs(A - k) を計算。
# 4. これを全ての x,y の組み合わせで最小値を求める。
# 5. 問題文によるとフォロー数は1人以上なので、k ≥ 1 の条件も考慮。
# 6. また、浮動小数点誤差を避けるため整数演算を工夫する。

def main():
    import sys

    A, B, N = map(int, sys.stdin.readline().split())
    ans = 10**18  # 大きめの初期値を設定

    # x,y は整数比の候補で 1 <= x,y <= N
    for x in range(1, N + 1):
        for y in range(1, N + 1):
            # フォロー数Aを (x/y) * B に近づけたい
            # k = B * x / y の近傍で最小の差を探す。
            # k は整数で1以上。

            # kの候補はB * x / y の切り上げ・切り捨てを試す
            # 倍率を整数演算で計算すると誤差がない

            # 基本となる値（小数を含む）
            val = B * x
            # わずかな誤差を考えて、kの候補を2つ試す
            for k_candidate in [val // y, val // y + 1]:
                if k_candidate < 1:
                    continue  # フォロー数は1人以上
                # 比率が正確に x:y であるかは気にせず、最も近い値を求めるだけ
                diff = abs(A - k_candidate)
                # 次に比率が正しく表現できるかは問題文に「どちらの値も 1 以上 N 以下の整数」という条件がある
                # A側は k_candidate、Bは固定のまま
                # k_candidate と B の比が x:y に等しくなるとは限らないが、問題文の条件は
                # 「気に入った整数比とは、比に含まれるどちらの値も1以上N以下で表せる整数比」
                # すなわちx,yが1～Nで、変更後のAがk_candidate、Bは元のB。
                # このとき、 (k_candidate, B) の比を約分した時に、 x:y になるとは限らない。
                # しかし、問題文の例から見て、x:y のあくまで理想の比率。
                # 実際に k_candidate と B が x:y の比になる値でなければならない。
                # つまり、 k_candidate / B == x / y でなければならない。
                # 整数の割り切りを確認するには、
                # k_candidate * y == B * x である必要がある。

                if k_candidate * y == B * x:
                    # 条件を満たすなら差の最小値を更新
                    ans = min(ans, diff)

    print(ans)

if __name__ == '__main__':
    main()