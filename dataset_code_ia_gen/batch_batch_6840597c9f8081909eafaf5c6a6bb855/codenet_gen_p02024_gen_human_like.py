H, W, S, T = map(int, input().split())
# サンタが都市の全ての区画を一度ずつ訪れるには、盤面の一筆書き（ハミルトンパス）が可能でなければならない。
# チェス盤のように区画を色分け（黒と白）すると、一筆書き可能なのは盤が片方の色の区画数より1多いか同じ場合のみ。
# ただし、今回の条件ではスタート地点の位置によって制限がある。
# 幅か高さのどちらかが1の場合、明らかにすべての区画を訪れることは可能（長い直線移動）。
# それ以外の場合、両方とも2以上だが、スタート位置の色によって実現可能かが決まる。
# しかし、この問題の制約でH,Wは2以上なので直線移動はない。
# 実はこの問題は、大きな格子状の区画で、スタート点が白か黒かによってすべてを訪問できるか判定できる格子トラベル問題。

# 白黒判定を次のようにした上で、白マスまたは黒マスが多い数がそれぞれいくつあるかを調べる。
# 色 = (X + Y) の偶奇により決まる
# スタート位置の色と、全体の区画数に合わせて答えを出す。

total = H * W
start_color = (S + T) % 2  # 0 or 1
count_color_0 = (H * W + 1) // 2
count_color_1 = (H * W) // 2

# 訪問可能となるのは、スタート色の区画の数が他の色の区画の数と同じか1多い場合
if start_color == 0:
    if count_color_0 == count_color_1 + 1:
        print("Yes")
    else:
        print("No")
else:
    if count_color_1 == count_color_0 + 1:
        print("Yes")
    else:
        print("No")