import sys

def main():
    input = sys.stdin.readline
    N = int(input())
    A = list(map(int, input().split()))

    # 最小値を求めるための考え方：
    # 品物が新たに登場したら「それまでの履歴の最高値」より小さい値段がつく箇所が、
    # 新しい品物の開始ポイントになる。
    # なぜなら、入札きりの品物は入札価格が単調増加し続け、その後の値段が
    # それより低いときは新しい品物の始まりと考えられるから。
    #
    # 最大値を求めるための考え方：
    # 1つの品物につき最低でも1度は値段をつけられているので、
    # 全ての値段のつけられた回数 N は品物の最大数になる。
    # ただし同じ値段に値上げ無しで続く場合でも、条件4で「より高い値段」がつけられるとあるので
    # 同じ値段は「値上げなし」の状態なのであり、異なる品物として扱える。
    #
    # 入札は必ず値段が増える（より高い値段）か、新しい品物である。
    #
    # よって最大値（品物数の最大）は、入札回数Nそのものである。

    # 最小値の計算
    min_count = 1  # 最初の品物は必ずある
    current_max = A[0]  # 現在の品物の最高値の記録
    for price in A[1:]:
        if price <= current_max:
            # 価格がこれまでの品物の最高値以下なら新しい品物が始まったと判定
            min_count += 1
            current_max = price
        else:
            # 価格が今までより高いなら同じ品物の入札続き
            current_max = price

    # 最大値はすべて別の品物と考える
    max_count = N

    print(min_count)
    print(max_count)

if __name__ == "__main__":
    main()