================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
l = [0, 1]
a = 0
b = 1
c = 1
p = 998244353
i = 2
while i < n:
    l.append(l[p % i] * (p - int(p // i)) % p)
    i += 1
i = n
while i > n // 2:
    a = (a + b * c % p) % p
    b = (b + b % p) % p
    c = c * i * l[n + 1 - i] % p
    i -= 1
print((pow(3, n, p) - 2 * a) % p)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.5027299822540954e-05
    2. '(n' → logprob: -10.750055313110352
    3. '(
' → logprob: -11.750055313110352
    4. ''' → logprob: -12.000055313110352
    5. '`' → logprob: -12.250055313110352
    6. 'n' → logprob: -12.750055313110352
    7. '('' → logprob: -13.125055313110352
    8. '```' → logprob: -13.125055313110352
    9. '\(' → logprob: -13.125055313110352
    10. '("("' → logprob: -13.375055313110352

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07338886708021164
    2. ')' → logprob: -2.8233888149261475
    3. '()' → logprob: -4.698389053344727
    4. '())' → logprob: -6.948389053344727
    5. '```' → logprob: -8.198389053344727
    6. '(
' → logprob: -8.448389053344727
    7. '('' → logprob: -8.823389053344727
    8. '(()' → logprob: -9.073389053344727
    9. '`' → logprob: -9.198389053344727
    10. '("("' → logprob: -9.698389053344727

Token 5: 'l' (ID: 75)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6515942215919495
    2. 'for' → logprob: -1.4015941619873047
    3. 'i' → logprob: -2.1515941619873047
    4. 's' → logprob: -2.7765941619873047
    5. 'x' → logprob: -4.651594161987305
    6. ')' → logprob: -5.151594161987305
    7. 'a' → logprob: -5.401594161987305
    8. '*' → logprob: -5.401594161987305
    9. ' ' → logprob: -5.651594161987305
    10. 'f' → logprob: -5.901594161987305

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.178541660308838
    2. 'i' → logprob: -1.553541660308838
    3. 'ist' → logprob: -1.678541660308838
    4. 's' → logprob: -1.803541660308838
    5. '.' → logprob: -2.928541660308838
    6. '=' → logprob: -4.053541660308838
    7. 'e' → logprob: -4.178541660308838
    8. ' =' → logprob: -4.803541660308838
    9. 'is' → logprob: -4.803541660308838
    10. '[i' → logprob: -5.178541660308838

Token 7: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.26496317982673645
    2. ' []' → logprob: -1.889963150024414
    3. 'list' → logprob: -3.014963150024414
    4. ' list' → logprob: -4.639963150024414
    5. '[' → logprob: -4.764963150024414
    6. ' [' → logprob: -5.139963150024414
    7. '[list' → logprob: -5.514963150024414
    8. '[input' → logprob: -5.514963150024414
    9. '[int' → logprob: -8.014963150024414
    10. 'input' → logprob: -9.764963150024414

Token 8: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.022880859673023224
    2. '0' → logprob: -4.272881031036377
    3. 'i' → logprob: -5.522881031036377
    4. 'input' → logprob: -6.272881031036377
    5. ']' → logprob: -6.647881031036377
    6. ')' → logprob: -6.897881031036377
    7. ']int' → logprob: -8.522880554199219
    8. ' int' → logprob: -9.147880554199219
    9. '(int' → logprob: -9.897880554199219
    10. '])' → logprob: -10.022880554199219

Token 9: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03015829809010029
    2. ',' → logprob: -3.780158281326294
    3. ' for' → logprob: -5.405158519744873
    4. ']*' → logprob: -6.530158519744873
    5. ' ]' → logprob: -7.155158519744873
    6. ')' → logprob: -9.905158042907715
    7. 'for' → logprob: -10.030158042907715
    8. ',
' → logprob: -10.780158042907715
    9. ']*(' → logprob: -10.905158042907715
    10. '']' → logprob: -12.030158042907715

Token 10: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.593393087387085
    2. ' ' → logprob: -0.843393087387085
    3. '0' → logprob: -4.468393325805664
    4. ' n' → logprob: -5.843393325805664
    5. 'n' → logprob: -6.093393325805664
    6. ' ]' → logprob: -8.468393325805664
    7. ']' → logprob: -8.593393325805664
    8. '2' → logprob: -8.968393325805664
    9. ',' → logprob: -10.093393325805664
    10. ' ,' → logprob: -10.593393325805664

Token 11: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.37247225642204285
    2. '0' → logprob: -1.3724722862243652
    3. ' ' → logprob: -3.1224722862243652
    4. 'n' → logprob: -5.122472286224365
    5. ']' → logprob: -5.247472286224365
    6. ' n' → logprob: -7.122472286224365
    7. '2' → logprob: -7.497472286224365
    8. ']*' → logprob: -8.122471809387207
    9. ' ]' → logprob: -8.872471809387207
    10. 'i' → logprob: -8.872471809387207

Token 12: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07947823405265808
    2. ']' → logprob: -2.5794782638549805
    3. ',
' → logprob: -8.32947826385498
    4. ')' → logprob: -8.70447826385498
    5. ' ,' → logprob: -9.20447826385498
    6. ' ]' → logprob: -10.20447826385498
    7. ')]' → logprob: -11.32947826385498
    8. '0' → logprob: -11.95447826385498
    9. ',

' → logprob: -12.07947826385498
    10. '`]' → logprob: -12.07947826385498

Token 13: 'a' (ID: 64)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3493229150772095
    2. 'for' → logprob: -1.8493229150772095
    3. ',
' → logprob: -2.47432279586792
    4. ' for' → logprob: -4.34932279586792
    5. '\n' → logprob: -4.97432279586792
    6. 'while' → logprob: -5.22432279586792
    7. '
' → logprob: -5.34932279586792
    8. ',l' → logprob: -5.34932279586792
    9. '```' → logprob: -6.09932279586792
    10. '+
' → logprob: -6.34932279586792

Token 14: ' =' (ID: 314)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3183526396751404
    2. 'pp' → logprob: -1.3183526992797852
    3. 'd' → logprob: -6.193352699279785
    4. '.' → logprob: -6.443352699279785
    5. '.append' → logprob: -7.693352699279785
    6. ' =' → logprob: -8.193352699279785
    7. '[' → logprob: -8.943352699279785
    8. 'dd' → logprob: -9.193352699279785
    9. ' p' → logprob: -9.318352699279785
    10. '[p' → logprob: -9.818352699279785

Token 15: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8133202791213989
    2. '1' → logprob: -1.563320279121399
    3. '2' → logprob: -1.938320279121399
    4. ' l' → logprob: -2.6883201599121094
    5. 'l' → logprob: -2.9383201599121094
    6. '0' → logprob: -3.1883201599121094
    7. ' [' → logprob: -3.8133201599121094
    8. '[' → logprob: -4.188320159912109
    9. '[l' → logprob: -6.563320159912109
    10. 'n' → logprob: -7.188320159912109

Token 16: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1345987617969513
    2. '1' → logprob: -2.384598731994629
    3. 'l' → logprob: -4.009598731994629
    4. '2' → logprob: -4.259598731994629
    5. ' ' → logprob: -7.634598731994629
    6. '[' → logprob: -8.134598731994629
    7. 'n' → logprob: -8.134598731994629
    8. '[l' → logprob: -8.634598731994629
    9. 'a' → logprob: -9.384598731994629
    10. ' l' → logprob: -9.634598731994629

Token 17: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.941396176815033
    2. ',' → logprob: -1.5663962364196777
    3. '<|end|>' → logprob: -1.8163962364196777
    4. '
' → logprob: -2.5663962364196777
    5. ' 
' → logprob: -3.1913962364196777
    6. 'n' → logprob: -3.9413962364196777
    7. 'while' → logprob: -4.316396236419678
    8. 'b' → logprob: -4.316396236419678
    9. 'for' → logprob: -4.441396236419678
    10. ' ,' → logprob: -4.566396236419678

Token 18: 'b' (ID: 65)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1240524053573608
    2. 'b' → logprob: -1.6240524053573608
    3. 'while' → logprob: -1.7490524053573608
    4. ' while' → logprob: -2.8740525245666504
    5. '<|end|>' → logprob: -2.8740525245666504
    6. 'n' → logprob: -2.9990525245666504
    7. 'for' → logprob: -3.1240525245666504
    8. ',' → logprob: -3.4990525245666504
    9. '
' → logprob: -4.12405252456665
    10. ' 
' → logprob: -4.37405252456665

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025090212002396584
    2. '=' → logprob: -3.900090217590332
    3. ',' → logprob: -6.400090217590332
    4. ' ,' → logprob: -6.525090217590332
    5. ' ' → logprob: -6.650090217590332
    6. '<|end|>' → logprob: -10.650090217590332
    7. ' +' → logprob: -10.900090217590332
    8. '+' → logprob: -11.400090217590332
    9. '  ' → logprob: -11.650090217590332
    10. '_' → logprob: -11.650090217590332

Token 20: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3135163187980652
    2. '1' → logprob: -1.31351637840271
    3. '0' → logprob: -8.438516616821289
    4. '2' → logprob: -10.938516616821289
    5. 'l' → logprob: -11.813516616821289
    6. ' l' → logprob: -12.438516616821289
    7. ' ' → logprob: -12.938516616821289
    8. 'n' → logprob: -13.063516616821289
    9. 'a' → logprob: -14.251016616821289
    10. '`' → logprob: -14.501016616821289

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08941157907247543
    2. ' ' → logprob: -2.464411497116089
    3. '0' → logprob: -7.714411735534668
    4. 'l' → logprob: -11.214411735534668
    5. ' l' → logprob: -12.214411735534668
    6. 'n' → logprob: -13.214411735534668
    7. 'a' → logprob: -13.464411735534668
    8. '2' → logprob: -13.714411735534668
    9. ' ' → logprob: -14.276911735534668
    10. ' n' → logprob: -15.151911735534668

Token 22: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4506138563156128
    2. 'while' → logprob: -2.0756139755249023
    3. '
' → logprob: -2.3256139755249023
    4. ' for' → logprob: -2.5756139755249023
    5. 'n' → logprob: -3.5756139755249023
    6. ' while' → logprob: -4.450613975524902
    7. '\n' → logprob: -5.200613975524902
    8. ' 
' → logprob: -5.575613975524902
    9. '' → logprob: -5.825613975524902
    10. 'c' → logprob: -5.825613975524902

Token 23: 'c' (ID: 66)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0110314404591918
    2. 'while' → logprob: -4.636031627655029
    3. '```' → logprob: -7.136031627655029
    4. ' for' → logprob: -8.511031150817871
    5. '\n' → logprob: -9.011031150817871
    6. 'f' → logprob: -10.386031150817871
    7. '
' → logprob: -10.386031150817871
    8. 'c' → logprob: -10.386031150817871
    9. 'i' → logprob: -10.761031150817871
    10. '``' → logprob: -11.386031150817871

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20149938762187958
    2. '=' → logprob: -1.701499342918396
    3. ' ' → logprob: -10.201498985290527
    4. ',' → logprob: -10.951498985290527
    5. '_' → logprob: -11.701498985290527
    6. '  ' → logprob: -11.826498985290527
    7. '+' → logprob: -12.326498985290527
    8. ' +=' → logprob: -12.451498985290527
    9. ' ==' → logprob: -13.326498985290527
    10. ')' → logprob: -14.201498985290527

Token 25: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6010915040969849
    2. ' ' → logprob: -0.9760915040969849
    3. 'a' → logprob: -3.2260913848876953
    4. ' a' → logprob: -3.3510913848876953
    5. '1' → logprob: -8.601091384887695
    6. 'n' → logprob: -10.976091384887695
    7. '2' → logprob: -11.226091384887695
    8. '  ' → logprob: -12.351091384887695
    9. ' b' → logprob: -12.601091384887695
    10. ' n' → logprob: -12.726091384887695

Token 26: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.025885216891765594
    2. 'a' → logprob: -3.7758851051330566
    3. ' ' → logprob: -6.150885105133057
    4. '1' → logprob: -7.775885105133057
    5. ' a' → logprob: -9.650885581970215
    6. 'b' → logprob: -11.525885581970215
    7. '2' → logprob: -12.650885581970215
    8. 'n' → logprob: -13.025885581970215
    9. 'l' → logprob: -13.025885581970215
    10. '  ' → logprob: -14.650885581970215

Token 27: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18403953313827515
    2. '
' → logprob: -2.30903959274292
    3. ' while' → logprob: -2.93403959274292
    4. 'for' → logprob: -5.05903959274292
    5. '<|end|>' → logprob: -5.55903959274292
    6. '\n' → logprob: -6.43403959274292
    7. '```' → logprob: -7.05903959274292
    8. ' for' → logprob: -7.18403959274292
    9. 'n' → logprob: -7.30903959274292
    10. ' 
' → logprob: -7.93403959274292

Token 28: 'p' (ID: 79)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0922224149107933
    2. '
' → logprob: -3.4672224521636963
    3. 'for' → logprob: -3.4672224521636963
    4. ' while' → logprob: -4.092222213745117
    5. '```' → logprob: -5.467222213745117
    6. '\n' → logprob: -6.842222213745117
    7. ' for' → logprob: -7.467222213745117
    8. 'n' → logprob: -7.467222213745117
    9. 'if' → logprob: -7.717222213745117
    10. ' 
' → logprob: -7.842222213745117

Token 29: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0037075618747621775
    2. ' =' → logprob: -6.378707408905029
    3. '=' → logprob: -7.003707408905029
    4. 'a' → logprob: -8.628707885742188
    5. 'd' → logprob: -8.878707885742188
    6. 'i' → logprob: -9.128707885742188
    7. 'n' → logprob: -9.503707885742188
    8. 'e' → logprob: -9.628707885742188
    9. 'er' → logprob: -9.753707885742188
    10. 'end' → logprob: -10.003707885742188

Token 30: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3878575265407562
    2. '0' → logprob: -1.7628575563430786
    3. '2' → logprob: -2.512857437133789
    4. '1' → logprob: -3.137857437133789
    5. ' []' → logprob: -5.137857437133789
    6. ' [' → logprob: -5.512857437133789
    7. 'a' → logprob: -6.012857437133789
    8. '100' → logprob: -6.012857437133789
    9. '[]' → logprob: -6.012857437133789
    10. '[' → logprob: -6.387857437133789

Token 31: '998' (ID: 34589)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3659438192844391
    2. '0' → logprob: -1.3659437894821167
    3. '1' → logprob: -3.3659439086914062
    4. '[]' → logprob: -5.490943908691406
    5. 'n' → logprob: -5.865943908691406
    6. '[' → logprob: -6.240943908691406
    7. '10' → logprob: -6.365943908691406
    8. 'a' → logprob: -6.365943908691406
    9. ' ' → logprob: -6.490943908691406
    10. '100' → logprob: -6.990943908691406

Token 32: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -2.629921436891891e-05
    2. '243' → logprob: -11.62502670288086
    3. '7' → logprob: -12.37502670288086
    4. '247' → logprob: -12.37502670288086
    5. '```' → logprob: -12.87502670288086
    6. '`' → logprob: -13.87502670288086
    7. '457' → logprob: -14.25002670288086
    8. '447' → logprob: -14.37502670288086
    9. '2' → logprob: -14.62502670288086
    10. '444' → logprob: -14.62502670288086

Token 33: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.41298797726631165
    2. '257' → logprob: -1.7879879474639893
    3. '273' → logprob: -2.9129879474639893
    4. '253' → logprob: -3.4129879474639893
    5. '244' → logprob: -3.6629879474639893
    6. 'd' → logprob: -4.037988185882568
    7. 'f' → logprob: -4.162988185882568
    8. '```' → logprob: -5.162988185882568
    9. '53' → logprob: -5.412988185882568
    10. '457' → logprob: -6.162988185882568

Token 34: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4340943396091461
    2. '
' → logprob: -1.3090943098068237
    3. ' while' → logprob: -3.4340944290161133
    4. 'for' → logprob: -3.8090944290161133
    5. '\n' → logprob: -4.434094429016113
    6. ' 
' → logprob: -5.559094429016113
    7. '<|end|>' → logprob: -6.184094429016113
    8. ' for' → logprob: -6.309094429016113
    9. '' → logprob: -6.309094429016113
    10. 'n' → logprob: -6.434094429016113

Token 35: 'i' (ID: 72)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1874561309814453
    2. 'for' → logprob: -2.5624561309814453
    3. 'while' → logprob: -2.5624561309814453
    4. '\n' → logprob: -5.562456130981445
    5. ' for' → logprob: -5.812456130981445
    6. ' 
' → logprob: -5.812456130981445
    7. ' while' → logprob: -6.187456130981445
    8. '' → logprob: -6.437456130981445
    9. 'n' → logprob: -6.687456130981445
    10. '
' → logprob: -7.437456130981445

Token 36: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18920080363750458
    2. 'n' → logprob: -2.3142008781433105
    3. ' =' → logprob: -2.8142008781433105
    4. ' ' → logprob: -5.1892008781433105
    5. '+' → logprob: -5.8142008781433105
    6. 'f' → logprob: -6.3142008781433105
    7. ' n' → logprob: -6.8142008781433105
    8. ' +=' → logprob: -7.1892008781433105
    9. ' <' → logprob: -7.3142008781433105
    10. '<' → logprob: -8.314200401306152

Token 37: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07920073717832565
    2. '2' → logprob: -2.5792007446289062
    3. '1' → logprob: -8.454200744628906
    4. '3' → logprob: -9.704200744628906
    5. '0' → logprob: -10.329200744628906
    6. ' ' → logprob: -12.829200744628906
    7. ' c' → logprob: -14.579200744628906
    8. '  ' → logprob: -14.704200744628906
    9. 'c' → logprob: -15.829200744628906
    10. ' p' → logprob: -16.141700744628906

Token 38: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0706825852394104
    2. '3' → logprob: -2.6956825256347656
    3. '1' → logprob: -7.945682525634766
    4. '4' → logprob: -8.695682525634766
    5. ' ' → logprob: -8.695682525634766
    6. '0' → logprob: -9.945682525634766
    7. '5' → logprob: -12.570682525634766
    8. '6' → logprob: -12.945682525634766
    9. 'c' → logprob: -12.945682525634766
    10. 'a' → logprob: -15.570682525634766

Token 39: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5598036050796509
    2. '
' → logprob: -1.6848036050796509
    3. ' while' → logprob: -2.3098034858703613
    4. ':' → logprob: -3.3098034858703613
    5. ' ' → logprob: -3.8098034858703613
    6. ')' → logprob: -3.9348034858703613
    7. '<|end|>' → logprob: -3.9348034858703613
    8. ' 
' → logprob: -4.309803485870361
    9. '\n' → logprob: -4.559803485870361
    10. '```' → logprob: -5.434803485870361

Token 40: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.19367827475070953
    2. ' while' → logprob: -1.8186782598495483
    3. '
' → logprob: -5.443678379058838
    4. ' 
' → logprob: -5.568678379058838
    5. '\n' → logprob: -7.068678379058838
    6. '*' → logprob: -7.068678379058838
    7. '```' → logprob: -7.193678379058838
    8. ':' → logprob: -7.318678379058838
    9. ' ' → logprob: -7.443678379058838
    10. '\' → logprob: -8.19367790222168

Token 41: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0031833017710596323
    2. 'i' → logprob: -5.753183364868164
    3. ' ' → logprob: -12.628183364868164
    4. ' ' → logprob: -13.878183364868164
    5. ' n' → logprob: -14.003183364868164
    6. '	i' → logprob: -15.128183364868164
    7. '(i' → logprob: -15.753183364868164
    8. ' (' → logprob: -18.003183364868164
    9. ' <' → logprob: -18.253183364868164
    10. 'n' → logprob: -18.378183364868164

Token 42: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12689943611621857
    2. '<' → logprob: -2.251899480819702
    3. ' <=' → logprob: -4.376899242401123
    4. '<=' → logprob: -7.001899242401123
    5. '<n' → logprob: -7.626899242401123
    6. '<len' → logprob: -11.376899719238281
    7. ' ' → logprob: -13.126899719238281
    8. ' n' → logprob: -14.251899719238281
    9. '<num' → logprob: -14.376899719238281
    10. '<size' → logprob: -14.376899719238281

Token 43: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.038042984902858734
    2. 'n' → logprob: -3.2880430221557617
    3. ' ' → logprob: -14.038043022155762
    4. ' ' → logprob: -15.413043022155762
    5. '=' → logprob: -15.538043022155762
    6. '	n' → logprob: -15.913043022155762
    7. '=n' → logprob: -16.038042068481445
    8. '(n' → logprob: -17.788042068481445
    9. ' =' → logprob: -17.913042068481445
    10. '20' → logprob: -18.163042068481445

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017882289830595255
    2. ' :' → logprob: -6.376788139343262
    3. ':
' → logprob: -9.501788139343262
    4. '+:' → logprob: -12.751788139343262
    5. ':**' → logprob: -13.001788139343262
    6. ' :
' → logprob: -13.376788139343262
    7. '：' → logprob: -13.876788139343262
    8. '+' → logprob: -14.126788139343262
    9. ' ' → logprob: -14.501788139343262
    10. '):' → logprob: -14.751788139343262

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34812256693840027
    2. ' c' → logprob: -2.0981225967407227
    3. ' ' → logprob: -2.8481225967407227
    4. '```' → logprob: -3.3481225967407227
    5. 'c' → logprob: -3.5981225967407227
    6. '<|end|>' → logprob: -4.098122596740723
    7. '    
' → logprob: -4.973122596740723
    8. '	c' → logprob: -5.223122596740723
    9. ' 
' → logprob: -5.223122596740723
    10. ':' → logprob: -5.473122596740723

Token 46: ' l' (ID: 305)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.503021776676178
    2. ' c' → logprob: -1.0030217170715332
    3. 'a' → logprob: -4.253021717071533
    4. ' a' → logprob: -5.378021717071533
    5. 't' → logprob: -5.628021717071533
    6. ' t' → logprob: -6.003021717071533
    7. 'temp' → logprob: -6.878021717071533
    8. ' temp' → logprob: -7.128021717071533
    9. 'tmp' → logprob: -7.503021717071533
    10. 'l' (adapté à ' l') → logprob: -7.753021717071533

Token 47: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.20171046257019043
    2. '.' → logprob: -1.7017104625701904
    3. '[' → logprob: -8.95171070098877
    4. '.extend' → logprob: -9.32671070098877
    5. 'append' → logprob: -10.32671070098877
    6. '[-' → logprob: -11.07671070098877
    7. ' .' → logprob: -11.70171070098877
    8. '.app' → logprob: -12.57671070098877
    9. '_append' → logprob: -12.57671070098877
    10. 'Append' → logprob: -12.70171070098877

Token 48: '(l' (ID: 4179)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.1033196821808815
    2. '(c' → logprob: -2.3533196449279785
    3. '(a' → logprob: -6.2283196449279785
    4. '(' → logprob: -7.1033196449279785
    5. 'c' → logprob: -8.353320121765137
    6. '(b' → logprob: -10.353320121765137
    7. '(((' → logprob: -10.728320121765137
    8. 'a' → logprob: -11.603320121765137
    9. '(l' → logprob: -12.603320121765137
    10. '(
' → logprob: -12.853320121765137

Token 49: '[p' (ID: 23234)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.584628701210022
    2. '[i' → logprob: -0.834628701210022
    3. '[c' → logprob: -4.959628582000732
    4. '[b' → logprob: -6.459628582000732
    5. '[a' → logprob: -9.95962905883789
    6. 'b' → logprob: -11.58462905883789
    7. '[' → logprob: -12.45962905883789
    8. 'c' → logprob: -12.58462905883789
    9. 'i' → logprob: -13.20962905883789
    10. '[j' → logprob: -13.45962905883789

Token 50: ' %' (ID: 1851)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14656786620616913
    2. 'i' → logprob: -2.7715678215026855
    3. 'r' → logprob: -4.0215678215026855
    4. 'c' → logprob: -4.1465678215026855
    5. 'b' → logprob: -4.2715678215026855
    6. ' -' → logprob: -5.3965678215026855
    7. 'a' → logprob: -5.3965678215026855
    8. '[i' → logprob: -5.5215678215026855
    9. ']' → logprob: -5.8965678215026855
    10. '[-' → logprob: -6.1465678215026855

Token 51: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0027889462653547525
    2. '(i' → logprob: -7.00278902053833
    3. 'c' → logprob: -7.37778902053833
    4. '2' → logprob: -7.75278902053833
    5. ' i' → logprob: -8.502788543701172
    6. '])' → logprob: -8.627788543701172
    7. '-' → logprob: -8.877788543701172
    8. ']' → logprob: -9.252788543701172
    9. '1' → logprob: -10.252788543701172
    10. 'p' → logprob: -10.377788543701172

Token 52: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.586013674736023
    2. ']' → logprob: -0.836013674736023
    3. '-' → logprob: -4.7110137939453125
    4. ' -' → logprob: -7.9610137939453125
    5. ' ])' → logprob: -8.711013793945312
    6. 'p' → logprob: -8.961013793945312
    7. ' ]' → logprob: -9.461013793945312
    8. ']+' → logprob: -9.711013793945312
    9. ']*)' → logprob: -10.211013793945312
    10. ']*' → logprob: -10.711013793945312

Token 53: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7688573598861694
    2. '+' → logprob: -1.0188573598861694
    3. ']' → logprob: -2.018857479095459
    4. '*' → logprob: -3.893857479095459
    5. ' +' → logprob: -4.643857479095459
    6. '])' → logprob: -5.018857479095459
    7. '-' → logprob: -6.393857479095459
    8. ']+' → logprob: -6.768857479095459
    9. ' *' → logprob: -7.393857479095459
    10. 'p' → logprob: -8.0188570022583

Token 54: ' (' (ID: 350)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8287025094032288
    2. 'p' → logprob: -1.578702449798584
    3. 'l' → logprob: -1.828702449798584
    4. ' c' → logprob: -2.703702449798584
    5. '2' → logprob: -2.953702449798584
    6. ' p' → logprob: -3.828702449798584
    7. 'b' → logprob: -4.203702449798584
    8. ' l' → logprob: -4.203702449798584
    9. ' ' → logprob: -4.828702449798584
    10. 'i' → logprob: -5.203702449798584

Token 55: 'p' (ID: 79)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5978517532348633
    2. 'p' → logprob: -1.7228517532348633
    3. '2' → logprob: -2.7228517532348633
    4. 'b' → logprob: -2.9728517532348633
    5. 'a' → logprob: -3.2228517532348633
    6. 'i' → logprob: -3.3478517532348633
    7. 'l' → logprob: -3.3478517532348633
    8. ' c' → logprob: -3.8478517532348633
    9. ' p' → logprob: -5.222851753234863
    10. '3' → logprob: -5.847851753234863

Token 56: ' -' (ID: 533)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0114003419876099
    2. 'c' → logprob: -1.2614003419876099
    3. '//' → logprob: -1.8864003419876099
    4. '%' → logprob: -3.1364002227783203
    5. ' //' → logprob: -3.3864002227783203
    6. ' c' → logprob: -4.01140022277832
    7. 'i' → logprob: -4.13640022277832
    8. '+' → logprob: -4.38640022277832
    9. '-' → logprob: -4.38640022277832
    10. 'b' → logprob: -4.76140022277832

Token 57: ' int' (ID: 677)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13123400509357452
    2. 'p' → logprob: -2.8812339305877686
    3. 'i' → logprob: -3.1312339305877686
    4. 'l' → logprob: -5.006234169006348
    5. ' ' → logprob: -5.256234169006348
    6. 'c' → logprob: -5.506234169006348
    7. ' p' → logprob: -6.131234169006348
    8. ' i' → logprob: -6.506234169006348
    9. '(' → logprob: -7.506234169006348
    10. '2' → logprob: -7.631234169006348

Token 58: '(p' (ID: 2407)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.27351298928260803
    2. '(p' → logprob: -1.5235129594802856
    3. '(' → logprob: -4.398512840270996
    4. '(c' → logprob: -5.398512840270996
    5. '(l' → logprob: -6.648512840270996
    6. '((' → logprob: -6.648512840270996
    7. '(n' → logprob: -7.273512840270996
    8. '(a' → logprob: -8.523512840270996
    9. 'p' → logprob: -8.648512840270996
    10. ')' → logprob: -9.023512840270996

Token 59: ' //' (ID: 602)
  Prédit: '/i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/i' → logprob: -0.029852423816919327
    2. '/' → logprob: -3.7798523902893066
    3. ' /' → logprob: -5.404852390289307
    4. 'i' → logprob: -7.529852390289307
    5. '/p' → logprob: -8.029852867126465
    6. '1' → logprob: -8.154852867126465
    7. ')' → logprob: -8.654852867126465
    8. '(i' → logprob: -9.154852867126465
    9. ')/' → logprob: -9.279852867126465
    10. 'p' → logprob: -9.404852867126465

Token 60: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010197168216109276
    2. ' i' → logprob: -5.135197162628174
    3. 'p' → logprob: -6.635197162628174
    4. '(i' → logprob: -6.635197162628174
    5. '(' → logprob: -7.260197162628174
    6. ' (' → logprob: -8.635197639465332
    7. 'n' → logprob: -8.635197639465332
    8. '   ' → logprob: -8.760197639465332
    9. ' ' → logprob: -8.885197639465332
    10. 'c' → logprob: -9.135197639465332

Token 61: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.055646397173404694
    2. ' ))' → logprob: -3.9306464195251465
    3. ')' → logprob: -4.1806464195251465
    4. ' /' → logprob: -5.4306464195251465
    5. '/p' → logprob: -5.8056464195251465
    6. ')))' → logprob: -6.1806464195251465
    7. '/' → logprob: -6.3056464195251465
    8. ' ' → logprob: -6.5556464195251465
    9. 'p' → logprob: -6.8056464195251465
    10. '**' → logprob: -7.1806464195251465

Token 62: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3510214686393738
    2. ' //' → logprob: -2.1010215282440186
    3. '//' → logprob: -2.2260215282440186
    4. '))' → logprob: -3.3510215282440186
    5. ' )' → logprob: -4.7260212898254395
    6. 'p' → logprob: -4.8510212898254395
    7. '])' → logprob: -6.1010212898254395
    8. ' ' → logprob: -6.2260212898254395
    9. 'i' → logprob: -6.3510212898254395
    10. ']' → logprob: -6.4760212898254395

Token 63: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0017107593594118953
    2. ' p' → logprob: -7.001710891723633
    3. 'i' → logprob: -7.251710891723633
    4. '998' → logprob: -10.126710891723633
    5. ' ' → logprob: -10.751710891723633
    6. 'n' → logprob: -12.001710891723633
    7. ' i' → logprob: -12.376710891723633
    8. 'l' → logprob: -12.751710891723633
    9. '(p' → logprob: -13.251710891723633
    10. 'c' → logprob: -13.376710891723633

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004859903361648321
    2. ' )' → logprob: -5.379859924316406
    3. ')
' → logprob: -9.754859924316406
    4. ' ' → logprob: -10.004859924316406
    5. '))' → logprob: -10.004859924316406
    6. ']' → logprob: -10.129859924316406
    7. '')' → logprob: -11.629859924316406
    8. '])' → logprob: -11.879859924316406
    9. '`)' → logprob: -12.004859924316406
    10. '[' → logprob: -12.629859924316406

Token 65: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9404325485229492
    2. ' ' → logprob: -1.5654325485229492
    3. ' 
' → logprob: -1.5654325485229492
    4. ')' → logprob: -2.690432548522949
    5. '+' → logprob: -3.440432548522949
    6. '   ' → logprob: -4.315432548522949
    7. 'i' → logprob: -4.315432548522949
    8. '  
' → logprob: -4.565432548522949
    9. '\' → logprob: -4.815432548522949
    10. '
' → logprob: -5.065432548522949

Token 66: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.03228200599551201
    2. '+' → logprob: -4.032281875610352
    3. ')' → logprob: -4.907281875610352
    4. ' i' → logprob: -6.032281875610352
    5. ' ' → logprob: -6.157281875610352
    6. 'p' → logprob: -6.907281875610352
    7. '(' → logprob: -8.532281875610352
    8. '   ' → logprob: -9.032281875610352
    9. '```' → logprob: -9.032281875610352
    10. '++' → logprob: -9.532281875610352

Token 67: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10560665279626846
    2. '+=' → logprob: -2.3556065559387207
    3. ' +=' → logprob: -5.230606555938721
    4. ' +' → logprob: -10.730607032775879
    5. '=' → logprob: -12.230607032775879
    6. '++' → logprob: -12.355607032775879
    7. ' ' → logprob: -13.105607032775879
    8. '+++' → logprob: -13.480607032775879
    9. '+='' → logprob: -15.230607032775879
    10. '+="' → logprob: -15.480607032775879

Token 68: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.8961017202818766e-05
    2. ' ' → logprob: -9.750059127807617
    3. '   ' → logprob: -16.250059127807617
    4. '```' → logprob: -16.250059127807617
    5. '2' → logprob: -16.625059127807617
    6. '  ' → logprob: -17.562559127807617
    7. '<|end|>' → logprob: -17.625059127807617
    8. '0' → logprob: -17.625059127807617
    9. 'b' → logprob: -18.000059127807617
    10. 'i' → logprob: -18.437559127807617

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -15.937509536743164
    4. '2' → logprob: -16.562509536743164
    5. '   ' → logprob: -16.625009536743164
    6. '  ' → logprob: -17.375009536743164
    7. 'i' → logprob: -17.437509536743164
    8. 'a' → logprob: -18.000009536743164
    9. '0' → logprob: -18.062509536743164
    10. '...' → logprob: -18.187509536743164

Token 70: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0703732892870903
    2. ']' → logprob: -2.945373296737671
    3. '<|end|>' → logprob: -5.320373058319092
    4. ' ' → logprob: -5.445373058319092
    5. ')
' → logprob: -6.445373058319092
    6. '
' → logprob: -6.695373058319092
    7. '```' → logprob: -7.320373058319092
    8. '[' → logprob: -7.570373058319092
    9. '%' → logprob: -7.945373058319092
    10. '[i' → logprob: -8.32037353515625

Token 71: 'i' (ID: 72)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5397087335586548
    2. '[' → logprob: -1.7897087335586548
    3. ' ' → logprob: -1.7897087335586548
    4. ')' → logprob: -3.1647086143493652
    5. '%' → logprob: -4.789708614349365
    6. ' ]' → logprob: -4.789708614349365
    7. '[i' → logprob: -5.164708614349365
    8. '[p' → logprob: -5.289708614349365
    9. ' %' → logprob: -5.664708614349365
    10. 'i' → logprob: -6.164708614349365

Token 72: ' =' (ID: 314)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6828076839447021
    2. ' ' → logprob: -1.8078076839447021
    3. '[' → logprob: -2.057807683944702
    4. ')' → logprob: -2.307807683944702
    5. '%' → logprob: -2.682807683944702
    6. ' %' → logprob: -4.557807922363281
    7. '+' → logprob: -4.807807922363281
    8. ' ]' → logprob: -5.057807922363281
    9. '```' → logprob: -6.057807922363281
    10. '<|end|>' → logprob: -6.057807922363281

Token 73: ' n' (ID: 297)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08410032093524933
    2. '0' → logprob: -3.2091002464294434
    3. '3' → logprob: -3.9591002464294434
    4. '1' → logprob: -4.334100246429443
    5. ' ' → logprob: -4.959100246429443
    6. 'n' → logprob: -7.209100246429443
    7. 'a' → logprob: -8.584100723266602
    8. 'p' → logprob: -10.584100723266602
    9. 'b' → logprob: -10.959100723266602
    10. ' n' → logprob: -11.084100723266602

Token 74: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.046318478882312775
    2. '<|end|>' → logprob: -3.671318531036377
    3. ')' → logprob: -5.671318531036377
    4. '-' → logprob: -6.046318531036377
    5. '**' → logprob: -6.171318531036377
    6. '[' → logprob: -6.296318531036377
    7. '*' → logprob: -6.296318531036377
    8. '%' → logprob: -6.421318531036377
    9. ' +' → logprob: -6.546318531036377
    10. ' ' → logprob: -6.546318531036377

Token 75: 'while' (ID: 7032)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0485689714550972
    2. '-' → logprob: -3.7985689640045166
    3. '<|end|>' → logprob: -4.798569202423096
    4. ')' → logprob: -5.298569202423096
    5. '```' → logprob: -5.798569202423096
    6. '**' → logprob: -7.173569202423096
    7. ' ' → logprob: -7.173569202423096
    8. '*' → logprob: -7.173569202423096
    9. ' +' → logprob: -7.173569202423096
    10. '[' → logprob: -7.423569202423096

Token 76: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6354488730430603
    2. 'i' → logprob: -0.7604488730430603
    3. 'n' → logprob: -7.510448932647705
    4. 'True' → logprob: -7.760448932647705
    5. ' True' → logprob: -7.885448932647705
    6. ' ' → logprob: -8.010448455810547
    7. 'p' → logprob: -8.135448455810547
    8. ' n' → logprob: -8.135448455810547
    9. ' p' → logprob: -8.885448455810547
    10. 'a' → logprob: -9.510448455810547

Token 77: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.30406561493873596
    2. '>' → logprob: -1.6790655851364136
    3. ' >=' → logprob: -2.929065704345703
    4. '>=' → logprob: -3.929065704345703
    5. ' <' → logprob: -6.679065704345703
    6. ' <=' → logprob: -7.179065704345703
    7. '<=' → logprob: -8.429065704345703
    8. '<' → logprob: -8.554065704345703
    9. ' ' → logprob: -9.929065704345703
    10. '%' → logprob: -10.929065704345703

Token 78: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11912750452756882
    2. '1' → logprob: -2.3691275119781494
    3. ' ' → logprob: -3.9941275119781494
    4. '2' → logprob: -8.24412727355957
    5. '=' → logprob: -10.74412727355957
    6. 'p' → logprob: -10.99412727355957
    7. '   ' → logprob: -12.30662727355957
    8. 'n' → logprob: -13.05662727355957
    9. '  ' → logprob: -13.05662727355957
    10. 'b' → logprob: -13.36912727355957

Token 79: ' //' (ID: 602)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04980882257223129
    2. ' -' → logprob: -3.6748087406158447
    3. '2' → logprob: -5.049808979034424
    4. '0' → logprob: -5.299808979034424
    5. '1' → logprob: -5.549808979034424
    6. ' ' → logprob: -5.674808979034424
    7. '+' → logprob: -5.799808979034424
    8. ' and' → logprob: -7.924808979034424
    9. '-i' → logprob: -8.299808502197266
    10. '  ' → logprob: -8.924808502197266

Token 80: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007326744962483644
    2. '1' → logprob: -7.750732898712158
    3. ' ' → logprob: -8.625732421875
    4. '3' → logprob: -9.500732421875
    5. '4' → logprob: -11.250732421875
    6. '0' → logprob: -11.625732421875
    7. '  ' → logprob: -11.875732421875
    8. '   ' → logprob: -12.125732421875
    9. '6' → logprob: -12.750732421875
    10. 'i' → logprob: -12.750732421875

Token 81: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003517894074320793
    2. '1' → logprob: -8.500351905822754
    3. '3' → logprob: -9.500351905822754
    4. 'i' → logprob: -10.750351905822754
    5. ' ' → logprob: -10.875351905822754
    6. '4' → logprob: -11.125351905822754
    7. '0' → logprob: -12.375351905822754
    8. '   ' → logprob: -12.750351905822754
    9. '  ' → logprob: -13.000351905822754
    10. '6' → logprob: -13.437851905822754

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008680520579218864
    2. ':
' → logprob: -5.13368034362793
    3. '-' → logprob: -6.13368034362793
    4. ' :' → logprob: -8.63368034362793
    5. '   ' → logprob: -9.00868034362793
    6. '+' → logprob: -9.25868034362793
    7. ' and' → logprob: -9.50868034362793
    8. ' -' → logprob: -10.63368034362793
    9. 'and' → logprob: -11.50868034362793
    10. ',' → logprob: -11.50868034362793

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0039029077161103487
    2. ' i' → logprob: -6.253902912139893
    3. ' l' → logprob: -7.378902912139893
    4. '<|end|>' → logprob: -7.378902912139893
    5. ':' → logprob: -8.378902435302734
    6. '```' → logprob: -9.128902435302734
    7. 'i' → logprob: -9.628902435302734
    8. ' ' → logprob: -10.253902435302734
    9. '    
' → logprob: -10.628902435302734
    10. ' n' → logprob: -10.753902435302734

Token 84: ' a' (ID: 261)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.19915640354156494
    2. ' l' → logprob: -2.5741562843322754
    3. 'i' → logprob: -2.9491562843322754
    4. 'a' (adapté à ' a') → logprob: -4.199156284332275
    5. '   ' → logprob: -4.324156284332275
    6. ' i' → logprob: -4.449156284332275
    7. 'p' → logprob: -5.824156284332275
    8. 'c' → logprob: -6.199156284332275
    9. ' a' → logprob: -6.324156284332275
    10. 'b' → logprob: -6.574156284332275

Token 85: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0085395574569702
    2. ' =' → logprob: -1.2585395574569702
    3. ' +=' → logprob: -1.7585395574569702
    4. '+=' → logprob: -2.2585396766662598
    5. ' *=' → logprob: -3.1335396766662598
    6. '*=' → logprob: -4.00853967666626
    7. '+' → logprob: -5.75853967666626
    8. '*' → logprob: -5.75853967666626
    9. ' ' → logprob: -6.50853967666626
    10. ' +' → logprob: -7.38353967666626

Token 86: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3124363124370575
    2. 'a' → logprob: -1.9374363422393799
    3. ' (' → logprob: -2.56243634223938
    4. ' a' → logprob: -4.062436103820801
    5. '(' → logprob: -4.187436103820801
    6. '(l' → logprob: -4.812436103820801
    7. 'l' → logprob: -5.562436103820801
    8. ' l' → logprob: -6.312436103820801
    9. '(i' → logprob: -8.4374361038208
    10. ' ' → logprob: -9.1874361038208

Token 87: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1231643483042717
    2. ' a' → logprob: -2.248164415359497
    3. 'l' → logprob: -5.873164176940918
    4. '(a' → logprob: -5.873164176940918
    5. ' l' → logprob: -6.623164176940918
    6. 'b' → logprob: -6.623164176940918
    7. ' b' → logprob: -7.623164176940918
    8. ' (' → logprob: -7.873164176940918
    9. 'c' → logprob: -8.373164176940918
    10. '(' → logprob: -8.498164176940918

Token 88: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9813699126243591
    2. ' +' → logprob: -1.356369972229004
    3. '*' → logprob: -1.481369972229004
    4. '+' → logprob: -1.981369972229004
    5. '-' → logprob: -6.481369972229004
    6. ' -' → logprob: -7.481369972229004
    7. ' ' → logprob: -9.356369972229004
    8. '+l' → logprob: -9.731369972229004
    9. '*l' → logprob: -9.731369972229004
    10. '*a' → logprob: -10.356369972229004

Token 89: ' b' (ID: 287)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7403286099433899
    2. ' l' → logprob: -0.7403286099433899
    3. 'b' → logprob: -4.240328788757324
    4. ' b' → logprob: -4.365328788757324
    5. ' c' → logprob: -4.990328788757324
    6. 'c' → logprob: -5.615328788757324
    7. ' ' → logprob: -6.115328788757324
    8. ' i' → logprob: -6.615328788757324
    9. ' (' → logprob: -7.115328788757324
    10. 'i' → logprob: -7.240328788757324

Token 90: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9593314528465271
    2. '*' → logprob: -1.0843315124511719
    3. ')' → logprob: -1.3343315124511719
    4. '*l' → logprob: -5.209331512451172
    5. '*c' → logprob: -5.709331512451172
    6. ' )' → logprob: -5.709331512451172
    7. '*a' → logprob: -7.334331512451172
    8. '*)' → logprob: -7.584331512451172
    9. '+' → logprob: -7.584331512451172
    10. '*b' → logprob: -7.959331512451172

Token 91: ' c' (ID: 274)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08347225189208984
    2. ' l' → logprob: -3.08347225189209
    3. 'c' → logprob: -3.70847225189209
    4. ' c' → logprob: -5.45847225189209
    5. 'i' → logprob: -5.83347225189209
    6. ' i' → logprob: -7.58347225189209
    7. ' ' → logprob: -7.95847225189209
    8. '   ' → logprob: -8.08347225189209
    9. '  ' → logprob: -8.45847225189209
    10. '(l' → logprob: -8.70847225189209

Token 92: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03324888274073601
    2. ' )' → logprob: -4.2832489013671875
    3. ' *' → logprob: -4.5332489013671875
    4. '*' → logprob: -5.4082489013671875
    5. '*l' → logprob: -6.2832489013671875
    6. ')%' → logprob: -7.2832489013671875
    7. '%' → logprob: -8.158248901367188
    8. '*p' → logprob: -8.408248901367188
    9. 'l' → logprob: -8.658248901367188
    10. '*i' → logprob: -9.283248901367188

Token 93: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.048621658235788345
    2. ' p' → logprob: -3.048621654510498
    3. 'l' → logprob: -10.923622131347656
    4. ' ' → logprob: -11.423622131347656
    5. ' l' → logprob: -13.423622131347656
    6. '<p' → logprob: -13.923622131347656
    7. ' ' → logprob: -14.048622131347656
    8. 'n' → logprob: -14.548622131347656
    9. '  ' → logprob: -15.048622131347656
    10. 'i' → logprob: -15.423622131347656

Token 94: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004307038150727749
    2. ' )' → logprob: -5.504307270050049
    3. ' *' → logprob: -9.37930679321289
    4. '*' → logprob: -9.37930679321289
    5. ')%' → logprob: -10.87930679321289
    6. '   ' → logprob: -11.62930679321289
    7. ' ' → logprob: -12.00430679321289
    8. '')' → logprob: -12.37930679321289
    9. '+' → logprob: -12.87930679321289
    10. '%' → logprob: -13.12930679321289

Token 95: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5963566899299622
    2. '%' → logprob: -1.5963566303253174
    3. ' %' → logprob: -1.8463566303253174
    4. 'i' → logprob: -3.8463566303253174
    5. '%i' → logprob: -4.2213568687438965
    6. ' i' → logprob: -4.7213568687438965
    7. ' ' → logprob: -4.9713568687438965
    8. '   ' → logprob: -4.9713568687438965
    9. 'l' → logprob: -5.3463568687438965
    10. ' *' → logprob: -5.4713568687438965

Token 96: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.011048408225178719
    2. ' p' → logprob: -4.511048316955566
    3. ' ' → logprob: -14.511048316955566
    4. '	p' → logprob: -16.761049270629883
    5. '998' → logprob: -18.011049270629883
    6. '(p' → logprob: -18.636049270629883
    7. '```' → logprob: -18.636049270629883
    8. '<p' → logprob: -19.011049270629883
    9. ' ' → logprob: -19.136049270629883
    10. '<|end|>' → logprob: -19.511049270629883

Token 97: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13073980808258057
    2. ' ' → logprob: -3.005739688873291
    3. ' 
' → logprob: -3.880739688873291
    4. 'i' → logprob: -5.005739688873291
    5. ' i' → logprob: -5.005739688873291
    6. '   ' → logprob: -5.005739688873291
    7. '*i' → logprob: -5.005739688873291
    8. '  
' → logprob: -5.380739688873291
    9. ' -' → logprob: -5.630739688873291
    10. '<|end|>' → logprob: -6.005739688873291

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033827345818281174
    2. '<|end|>' → logprob: -4.158827304840088
    3. 'i' → logprob: -5.283827304840088
    4. '
' → logprob: -5.533827304840088
    5. '    
' → logprob: -5.908827304840088
    6. '```' → logprob: -6.158827304840088
    7. 'b' → logprob: -7.033827304840088
    8. ' i' → logprob: -7.533827304840088
    9. '  
' → logprob: -7.783827304840088
    10. ' 
' → logprob: -7.908827304840088

Token 99: ' b' (ID: 287)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6566019654273987
    2. 'b' (adapté à ' b') → logprob: -0.9066019654273987
    3. 'i' → logprob: -3.156601905822754
    4. ' c' → logprob: -4.531601905822754
    5. 'l' → logprob: -4.656601905822754
    6. ' b' → logprob: -5.281601905822754
    7. 'a' → logprob: -5.406601905822754
    8. 'p' → logprob: -6.156601905822754
    9. ' i' → logprob: -6.406601905822754
    10. '(' → logprob: -8.531601905822754

Token 100: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15931354463100433
    2. ' =' → logprob: -2.034313440322876
    3. '*=' → logprob: -4.409313678741455
    4. ' *=' → logprob: -5.659313678741455
    5. '+=' → logprob: -7.784313678741455
    6. '*' → logprob: -8.534313201904297
    7. ',' → logprob: -9.159313201904297
    8. ' +=' → logprob: -9.534313201904297
    9. ' ' → logprob: -10.534313201904297
    10. ' *' → logprob: -10.784313201904297

Token 101: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.155608057975769
    2. 'c' → logprob: -1.530608057975769
    3. '(a' → logprob: -1.655608057975769
    4. '(b' → logprob: -2.1556081771850586
    5. 'b' → logprob: -3.0306081771850586
    6. ' c' → logprob: -3.4056081771850586
    7. ' (' → logprob: -3.6556081771850586
    8. 'a' → logprob: -3.9056081771850586
    9. '(i' → logprob: -4.280608177185059
    10. '(' → logprob: -4.905608177185059

Token 102: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.652448832988739
    2. 'b' → logprob: -0.777448832988739
    3. 'c' → logprob: -4.152448654174805
    4. '(a' → logprob: -6.652448654174805
    5. 'i' → logprob: -7.152448654174805
    6. ' b' → logprob: -7.652448654174805
    7. ' a' → logprob: -7.902448654174805
    8. '(b' → logprob: -8.277448654174805
    9. 'l' → logprob: -8.777448654174805
    10. 'p' → logprob: -8.902448654174805

Token 103: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12916092574596405
    2. '*' → logprob: -2.1291608810424805
    3. '+' → logprob: -6.8791608810424805
    4. ' +' → logprob: -7.0041608810424805
    5. '*c' → logprob: -8.25416088104248
    6. ' ' → logprob: -11.87916088104248
    7. '*b' → logprob: -12.00416088104248
    8. '*a' → logprob: -12.00416088104248
    9. ' ' → logprob: -12.75416088104248
    10. ' -' → logprob: -12.87916088104248

Token 104: ' b' (ID: 287)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.43930190801620483
    2. ' c' → logprob: -1.3143019676208496
    3. 'a' → logprob: -2.9393019676208496
    4. 'b' → logprob: -4.18930196762085
    5. ' a' → logprob: -4.56430196762085
    6. ' b' → logprob: -5.31430196762085
    7. '1' → logprob: -6.43930196762085
    8. 'l' → logprob: -7.18930196762085
    9. ' ' → logprob: -7.31430196762085
    10. ' l' → logprob: -8.189301490783691

Token 105: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01618979498744011
    2. ' )' → logprob: -4.2661895751953125
    3. ' *' → logprob: -6.7661895751953125
    4. '*' → logprob: -8.016189575195312
    5. ' +' → logprob: -8.641189575195312
    6. '*c' → logprob: -8.766189575195312
    7. ')%' → logprob: -9.016189575195312
    8. 'c' → logprob: -10.516189575195312
    9. '+' → logprob: -10.891189575195312
    10. 'a' → logprob: -12.141189575195312

Token 106: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.008893455378711224
    2. ' p' → logprob: -4.7588934898376465
    3. 'c' → logprob: -8.758893013000488
    4. ' ' → logprob: -10.008893013000488
    5. 'a' → logprob: -10.133893013000488
    6. 'i' → logprob: -11.633893013000488
    7. ' c' → logprob: -11.883893013000488
    8. '  ' → logprob: -12.133893013000488
    9. ' ' → logprob: -12.758893013000488
    10. '   ' → logprob: -13.133893013000488

Token 107: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005828189896419644
    2. ' )' → logprob: -7.625582695007324
    3. ' +' → logprob: -10.000582695007324
    4. '*' → logprob: -10.625582695007324
    5. '+' → logprob: -11.625582695007324
    6. '   ' → logprob: -12.250582695007324
    7. ' *' → logprob: -12.375582695007324
    8. ')%' → logprob: -12.500582695007324
    9. ' ' → logprob: -14.000582695007324
    10. '*c' → logprob: -14.750582695007324

Token 108: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.067747563123703
    2. '%' → logprob: -3.3177475929260254
    3. '%c' → logprob: -3.9427475929260254
    4. ' *' → logprob: -5.442747592926025
    5. '   ' → logprob: -6.192747592926025
    6. ' ' → logprob: -6.692747592926025
    7. '%b' → logprob: -7.942747592926025
    8. 'c' → logprob: -8.067747116088867
    9. ')' → logprob: -8.442747116088867
    10. '
' → logprob: -8.567747116088867

Token 109: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.024604277219623e-05
    2. ' p' → logprob: -10.125040054321289
    3. 'c' → logprob: -16.00004005432129
    4. 'i' → logprob: -18.62504005432129
    5. '```' → logprob: -18.75004005432129
    6. ' ' → logprob: -19.75004005432129
    7. '   ' → logprob: -20.50004005432129
    8. ' ' → logprob: -20.62504005432129
    9. '<p' → logprob: -20.87504005432129
    10. '998' → logprob: -21.12504005432129

Token 110: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035593274515122175
    2. ' i' → logprob: -6.378559112548828
    3. '<|end|>' → logprob: -6.878559112548828
    4. ' ' → logprob: -8.378559112548828
    5. 'c' → logprob: -8.503559112548828
    6. ' c' → logprob: -9.253559112548828
    7. '
' → logprob: -9.628559112548828
    8. 'i' → logprob: -9.878559112548828
    9. ' 
' → logprob: -10.253559112548828
    10. '    
' → logprob: -10.628559112548828

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06538607180118561
    2. '```' → logprob: -3.4403860569000244
    3. ' i' → logprob: -4.4403862953186035
    4. ' ' → logprob: -4.9403862953186035
    5. '<|end|>' → logprob: -5.5653862953186035
    6. 'i' → logprob: -5.9403862953186035
    7. '-' → logprob: -6.5653862953186035
    8. ' 
' → logprob: -7.1903862953186035
    9. '+' → logprob: -7.4403862953186035
    10. 'c' → logprob: -7.5653862953186035

Token 112: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.09660167992115021
    2. ' c' → logprob: -2.846601724624634
    3. 'i' → logprob: -3.721601724624634
    4. '   ' → logprob: -5.221601486206055
    5. ' i' → logprob: -5.596601486206055
    6. '```' → logprob: -7.596601486206055
    7. ' ' → logprob: -8.596601486206055
    8. '  ' → logprob: -11.471601486206055
    9. 'a' → logprob: -11.846601486206055
    10. '	c' → logprob: -11.971601486206055

Token 113: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3915571868419647
    2. ' =' → logprob: -1.141557216644287
    3. ' +=' → logprob: -5.766557216644287
    4. '+=' → logprob: -6.766557216644287
    5. ' *=' → logprob: -8.516556739807129
    6. '*=' → logprob: -9.016556739807129
    7. '   ' → logprob: -10.391556739807129
    8. '*' → logprob: -11.891556739807129
    9. '(' → logprob: -12.016556739807129
    10. ' ' → logprob: -12.016556739807129

Token 114: ' c' (ID: 274)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.017541497945785522
    2. '(' → logprob: -4.767541408538818
    3. ' (' → logprob: -5.142541408538818
    4. '(a' → logprob: -6.267541408538818
    5. '(i' → logprob: -7.892541408538818
    6. '(l' → logprob: -8.267541885375977
    7. '(b' → logprob: -8.767541885375977
    8. 'c' → logprob: -8.892541885375977
    9. '2' → logprob: -10.017541885375977
    10. '(p' → logprob: -10.267541885375977

Token 115: ' *' (ID: 425)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8027517795562744
    2. '+' → logprob: -1.5527517795562744
    3. '*' → logprob: -2.1777517795562744
    4. ' *' → logprob: -2.5527517795562744
    5. '(' → logprob: -2.6777517795562744
    6. '(c' → logprob: -3.5527517795562744
    7. '(p' → logprob: -3.6777517795562744
    8. ' +' → logprob: -4.802751541137695
    9. '(i' → logprob: -4.927751541137695
    10. ' ' → logprob: -5.552751541137695

Token 116: ' i' (ID: 575)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18345874547958374
    2. 'i' → logprob: -2.0584588050842285
    3. 'p' → logprob: -4.1834588050842285
    4. 'a' → logprob: -4.8084588050842285
    5. '(p' → logprob: -5.1834588050842285
    6. 'l' → logprob: -5.6834588050842285
    7. '(i' → logprob: -5.9334588050842285
    8. '3' → logprob: -6.5584588050842285
    9. 'b' → logprob: -6.6834588050842285
    10. '(' → logprob: -7.0584588050842285

Token 117: ' *' (ID: 425)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.00709315063431859
    2. '%' → logprob: -5.0070929527282715
    3. '%c' → logprob: -8.38209342956543
    4. '%i' → logprob: -9.88209342956543
    5. ' %=' → logprob: -10.63209342956543
    6. '   ' → logprob: -11.00709342956543
    7. '```' → logprob: -11.00709342956543
    8. ')' → logprob: -11.50709342956543
    9. '%b' → logprob: -12.13209342956543
    10. ' ' → logprob: -12.25709342956543

Token 118: ' l' (ID: 305)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.05099039524793625
    2. 'p' → logprob: -3.175990343093872
    3. 'i' → logprob: -5.925990581512451
    4. 'inv' → logprob: -6.550990581512451
    5. '(pow' → logprob: -6.675990581512451
    6. ' pow' → logprob: -6.675990581512451
    7. 'int' → logprob: -8.425990104675293
    8. 'c' → logprob: -8.425990104675293
    9. 'b' → logprob: -8.675990104675293
    10. '(' → logprob: -9.175990104675293

Token 119: '[n' (ID: 15433)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0068824379704892635
    2. '[p' → logprob: -5.131882667541504
    3. '[n' → logprob: -7.631882667541504
    4. '[' → logprob: -8.381882667541504
    5. '[(' → logprob: -9.256882667541504
    6. '[c' → logprob: -9.506882667541504
    7. '[-' → logprob: -9.881882667541504
    8. 'i' → logprob: -12.506882667541504
    9. '[j' → logprob: -13.131882667541504
    10. '[l' → logprob: -13.131882667541504

Token 120: ' +' (ID: 659)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.09328217804431915
    2. '-' → logprob: -3.4682822227478027
    3. '[i' → logprob: -3.4682822227478027
    4. 'i' → logprob: -3.8432822227478027
    5. ']' → logprob: -6.593282222747803
    6. ' -' → logprob: -6.843282222747803
    7. '%i' → logprob: -7.343282222747803
    8. '[' → logprob: -7.343282222747803
    9. 'p' → logprob: -7.468282222747803
    10. '-p' → logprob: -8.718281745910645

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29276639223098755
    2. '-i' → logprob: -1.5427663326263428
    3. 'i' → logprob: -3.9177663326263428
    4. '-' → logprob: -4.042766571044922
    5. '(i' → logprob: -7.542766571044922
    6. 'n' → logprob: -7.792766571044922
    7. ' -' → logprob: -7.792766571044922
    8. '(' → logprob: -7.792766571044922
    9. '(-' → logprob: -8.417766571044922
    10. '-n' → logprob: -8.417766571044922

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3376728296279907
    2. '-i' → logprob: -1.3376728296279907
    3. '-' → logprob: -3.962672710418701
    4. 'i' → logprob: -5.712672710418701
    5. '-n' → logprob: -7.337672710418701
    6. '(-' → logprob: -7.962672710418701
    7. 'n' → logprob: -8.33767318725586
    8. '(' → logprob: -8.83767318725586
    9. ' -' → logprob: -9.21267318725586
    10. '(i' → logprob: -9.33767318725586

Token 123: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05919437110424042
    2. '-i' → logprob: -3.059194326400757
    3. ' -' → logprob: -4.559194564819336
    4. ']' → logprob: -9.684194564819336
    5. '-p' → logprob: -12.309194564819336
    6. 'i' → logprob: -13.059194564819336
    7. ' ' → logprob: -13.559194564819336
    8. '-n' → logprob: -13.684194564819336
    9. '-div' → logprob: -13.934194564819336
    10. '   ' → logprob: -14.059194564819336

Token 124: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00027480217977426946
    2. ' i' → logprob: -8.250274658203125
    3. '(i' → logprob: -11.500274658203125
    4. '(' → logprob: -13.875274658203125
    5. '	i' → logprob: -14.250274658203125
    6. 'n' → logprob: -14.500274658203125
    7. ' (' → logprob: -15.000274658203125
    8. '   ' → logprob: -15.500274658203125
    9. 'c' → logprob: -15.625274658203125
    10. ' ' → logprob: -15.625274658203125

Token 125: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0036721639335155487
    2. ']%' → logprob: -5.628672122955322
    3. ' ]' → logprob: -10.50367259979248
    4. '])' → logprob: -11.25367259979248
    5. '%' → logprob: -12.12867259979248
    6. ')' → logprob: -12.37867259979248
    7. ']
' → logprob: -12.50367259979248
    8. '']' → logprob: -12.62867259979248
    9. '-' → logprob: -12.87867259979248
    10. '%c' → logprob: -13.00367259979248

Token 126: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3150599002838135
    2. '%' → logprob: -1.3150599002838135
    3. '   ' → logprob: -6.815059661865234
    4. '%c' → logprob: -8.190059661865234
    5. ')' → logprob: -8.815059661865234
    6. '%i' → logprob: -9.065059661865234
    7. '```' → logprob: -9.315059661865234
    8. '  ' → logprob: -11.315059661865234
    9. ')%' → logprob: -11.315059661865234
    10. ' ' → logprob: -11.440059661865234

Token 127: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.054500666621607e-06
    2. ' p' → logprob: -12.75000286102295
    3. '```' → logprob: -16.125003814697266
    4. '998' → logprob: -18.750003814697266
    5. '<p' → logprob: -19.000003814697266
    6. ' ' → logprob: -19.000003814697266
    7. '(p' → logprob: -19.375003814697266
    8. '	p' → logprob: -20.250003814697266
    9. '   ' → logprob: -20.375003814697266
    10. ' ' → logprob: -21.125003814697266

Token 128: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.214019307051785e-05
    2. 'i' → logprob: -11.625032424926758
    3. '    
' → logprob: -12.125032424926758
    4. '
' → logprob: -12.250032424926758
    5. ' i' → logprob: -12.250032424926758
    6. '```' → logprob: -13.250032424926758
    7. ')' → logprob: -13.375032424926758
    8. '  ' → logprob: -13.750032424926758
    9. '<|end|>' → logprob: -14.125032424926758
    10. '-' → logprob: -14.875032424926758

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28566983342170715
    2. 'i' → logprob: -1.5356698036193848
    3. ' i' → logprob: -3.4106698036193848
    4. '```' → logprob: -9.660670280456543
    5. '	i' → logprob: -10.035670280456543
    6. '-' → logprob: -10.535670280456543
    7. '-i' → logprob: -12.160670280456543
    8. '[i' → logprob: -12.160670280456543
    9. ',i' → logprob: -12.410670280456543
    10. ' ' → logprob: -13.410670280456543

Token 130: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39451688528060913
    2. 'i' (adapté à ' i') → logprob: -1.144516944885254
    3. ' i' → logprob: -4.894516944885254
    4. '```' → logprob: -9.019516944885254
    5. '	i' → logprob: -12.519516944885254
    6. ' ' → logprob: -13.519516944885254
    7. '``' → logprob: -14.144516944885254
    8. '  ' → logprob: -14.394516944885254
    9. ',i' → logprob: -15.394516944885254
    10. '\' → logprob: -15.769516944885254

Token 131: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.2976780831813812
    2. ' -=' → logprob: -1.6726781129837036
    3. '-' → logprob: -2.672677993774414
    4. '=' → logprob: -7.547677993774414
    5. '```' → logprob: -10.172677993774414
    6. '   ' → logprob: -10.297677993774414
    7. ' ' → logprob: -11.047677993774414
    8. '+=' → logprob: -11.297677993774414
    9. ' -' → logprob: -12.047677993774414
    10. '_' → logprob: -12.672677993774414

Token 132: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.25006675720215
    4. '```' → logprob: -17.75006675720215
    5. '<|end|>' → logprob: -19.50006675720215
    6. ' ' → logprob: -19.81256675720215
    7. '2' → logprob: -20.56256675720215
    8. '１' → logprob: -20.62506675720215
    9. '  ' → logprob: -20.62506675720215
    10. '۱' → logprob: -20.81256675720215

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -18.75
    4. '   ' → logprob: -19.125
    5. '１' → logprob: -20.8125
    6. '۱' → logprob: -20.8125
    7. ' ' → logprob: -21.125
    8. '<|end|>' → logprob: -21.4375
    9. '`' → logprob: -21.8125
    10. '  ' → logprob: -21.875

Token 134: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: '((' (ID: 2054)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.011169484816491604
    2. '(' → logprob: -4.51116943359375
    3. '()' → logprob: -9.26116943359375
    4. '((' → logprob: -11.01116943359375
    5. 'a' → logprob: -12.38616943359375
    6. '(n' → logprob: -13.38616943359375
    7. '(
' → logprob: -13.51116943359375
    8. '(abs' → logprob: -14.63616943359375
    9. '(len' → logprob: -14.63616943359375
    10. '(sum' → logprob: -14.88616943359375

Token 137: 'pow' (ID: 30304)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001617930829524994
    2. '(a' → logprob: -6.626617908477783
    3. ' a' → logprob: -8.251618385314941
    4. 'p' → logprob: -11.626618385314941
    5. 'n' → logprob: -12.001618385314941
    6. 'b' → logprob: -12.501618385314941
    7. ' (' → logprob: -12.626618385314941
    8. '(' → logprob: -13.251618385314941
    9. '((' → logprob: -13.751618385314941
    10. '2' → logprob: -13.751618385314941

Token 138: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23801879584789276
    2. '(a' → logprob: -1.6130187511444092
    3. '(b' → logprob: -4.863018989562988
    4. '(p' → logprob: -5.988018989562988
    5. '(n' → logprob: -6.363018989562988
    6. '(c' → logprob: -8.113018989562988
    7. '2' → logprob: -9.113018989562988
    8. '(i' → logprob: -10.113018989562988
    9. 'a' → logprob: -10.238018989562988
    10. '((' → logprob: -10.988018989562988

Token 139: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.027687622234225273
    2. 'a' → logprob: -3.9026875495910645
    3. 'b' → logprob: -6.4026875495910645
    4. '(' → logprob: -6.9026875495910645
    5. '3' → logprob: -7.0276875495910645
    6. '10' → logprob: -7.0276875495910645
    7. 'n' → logprob: -7.1526875495910645
    8. 'p' → logprob: -7.1526875495910645
    9. '4' → logprob: -8.152688026428223
    10. ' ' → logprob: -8.652688026428223

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0885646715760231
    2. ' ,' → logprob: -3.33856463432312
    3. ',n' → logprob: -4.213564872741699
    4. '(n' → logprob: -4.338564872741699
    5. 'n' → logprob: -4.338564872741699
    6. ' n' → logprob: -4.838564872741699
    7. '(' → logprob: -8.3385648727417
    8. ' (' → logprob: -9.3385648727417
    9. ')' → logprob: -9.7135648727417
    10. ',
' → logprob: -11.0885648727417

Token 141: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.020605886355042458
    2. ' n' → logprob: -3.8956058025360107
    3. '(n' → logprob: -10.89560604095459
    4. 'p' → logprob: -11.27060604095459
    5. '2' → logprob: -11.27060604095459
    6. 'a' → logprob: -12.02060604095459
    7. '3' → logprob: -12.52060604095459
    8. ' ' → logprob: -12.64560604095459
    9. '(' → logprob: -13.02060604095459
    10. '   ' → logprob: -13.89560604095459

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003210395807400346
    2. ')' → logprob: -6.503210544586182
    3. ' ,' → logprob: -6.753210544586182
    4. '-' → logprob: -8.003210067749023
    5. ',n' → logprob: -9.003210067749023
    6. ' -' → logprob: -10.628210067749023
    7. ',p' → logprob: -11.128210067749023
    8. '```' → logprob: -11.628210067749023
    9. 'n' → logprob: -12.253210067749023
    10. '}' → logprob: -12.253210067749023

Token 143: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0011705794604495168
    2. ' p' → logprob: -6.751170635223389
    3. '998' → logprob: -15.37617015838623
    4. ' ' → logprob: -16.126171112060547
    5. '   ' → logprob: -18.001171112060547
    6. '  ' → logprob: -18.001171112060547
    7. ')' → logprob: -18.501171112060547
    8. ' ' → logprob: -19.126171112060547
    9. ')p' → logprob: -19.251171112060547
    10. '	p' → logprob: -19.626171112060547

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003336777735967189
    2. ' )' → logprob: -9.000333786010742
    3. '))' → logprob: -9.375333786010742
    4. ')-' → logprob: -9.500333786010742
    5. '-' → logprob: -11.000333786010742
    6. ',' → logprob: -11.375333786010742
    7. ')))' → logprob: -12.250333786010742
    8. ')+' → logprob: -12.250333786010742
    9. ')*' → logprob: -13.375333786010742
    10. '*' → logprob: -13.500333786010742

Token 145: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4336862564086914
    2. '-' → logprob: -1.0586862564086914
    3. ')' → logprob: -5.683686256408691
    4. ',' → logprob: -7.183686256408691
    5. '*' → logprob: -8.308686256408691
    6. '+' → logprob: -8.433686256408691
    7. ' +' → logprob: -9.183686256408691
    8. '))' → logprob: -9.183686256408691
    9. ' *' → logprob: -10.183686256408691
    10. '-p' → logprob: -10.808686256408691

Token 146: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0025487891398370266
    2. ' a' → logprob: -6.002548694610596
    3. '1' → logprob: -9.877549171447754
    4. '(a' → logprob: -11.502549171447754
    5. '(' → logprob: -11.877549171447754
    6. ' (' → logprob: -13.377549171447754
    7. ' ' → logprob: -13.377549171447754
    8. '2' → logprob: -14.377549171447754
    9. ' ' → logprob: -15.127549171447754
    10. '
' → logprob: -16.127548217773438

Token 147: '2' (ID: 17)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0006733550690114498
    2. ' a' → logprob: -7.875673294067383
    3. '1' → logprob: -8.250673294067383
    4. '(' → logprob: -11.125673294067383
    5. '(a' → logprob: -11.375673294067383
    6. ' (' → logprob: -13.375673294067383
    7. 'b' → logprob: -14.000673294067383
    8. '2' → logprob: -14.125673294067383
    9. ' ' → logprob: -14.250673294067383
    10. 'pow' → logprob: -14.750673294067383

Token 148: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5888426899909973
    2. ' *' → logprob: -1.3388426303863525
    3. ')' → logprob: -1.8388426303863525
    4. '))' → logprob: -4.463842868804932
    5. '*p' → logprob: -4.838842868804932
    6. '**' → logprob: -6.213842868804932
    7. ' +' → logprob: -7.338842868804932
    8. '+' → logprob: -7.463842868804932
    9. '*n' → logprob: -8.338842391967773
    10. ' )' → logprob: -8.588842391967773

Token 149: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00011021859245374799
    2. ' a' → logprob: -9.250110626220703
    3. '(a' → logprob: -11.875110626220703
    4. 'pow' → logprob: -12.500110626220703
    5. '(' → logprob: -13.625110626220703
    6. ' ' → logprob: -14.375110626220703
    7. 'b' → logprob: -14.625110626220703
    8. '   ' → logprob: -15.375110626220703
    9. 'i' → logprob: -16.000110626220703
    10. ' (' → logprob: -16.250110626220703

Token 150: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004691306967288256
    2. '%' → logprob: -5.629691123962402
    3. ')%' → logprob: -7.254691123962402
    4. '+' → logprob: -8.129691123962402
    5. ' )' → logprob: -10.879691123962402
    6. '*p' → logprob: -10.879691123962402
    7. '*' → logprob: -11.004691123962402
    8. ' +' → logprob: -11.129691123962402
    9. '+p' → logprob: -11.504691123962402
    10. ' %' → logprob: -12.379691123962402

Token 151: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007917482405900955
    2. '%' → logprob: -4.882917404174805
    3. ')%' → logprob: -8.632917404174805
    4. '))' → logprob: -10.007917404174805
    5. ' %' → logprob: -10.507917404174805
    6. '%)' → logprob: -10.882917404174805
    7. ')`' → logprob: -11.507917404174805
    8. ' )' → logprob: -11.632917404174805
    9. '`)' → logprob: -11.757917404174805
    10. '**' → logprob: -12.132917404174805

Token 152: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.615255839889869e-05
    2. ' p' → logprob: -9.250096321105957
    3. '998' → logprob: -19.12509536743164
    4. '```' → logprob: -19.50009536743164
    5. ' ' → logprob: -20.75009536743164
    6. '(p' → logprob: -21.25009536743164
    7. ' ' → logprob: -22.37509536743164
    8. ')p' → logprob: -22.50009536743164
    9. '`' → logprob: -22.50009536743164
    10. '	p' → logprob: -22.62509536743164

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '))' → logprob: -15.125000953674316
    3. ' )' → logprob: -15.500000953674316
    4. ')
' → logprob: -16.125
    5. '`)' → logprob: -16.375
    6. ')`' → logprob: -16.875
    7. '')' → logprob: -17.75
    8. '")' → logprob: -19.125
    9. '）' → logprob: -19.25
    10. ')))' → logprob: -19.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 151
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 45
Tokens correctement prédits (top 10): 119
Précision stricte (1ère position): 28.48%
Précision adaptée (1ère position): 29.80%
Précision (top 10): 78.81%
================================================================================
