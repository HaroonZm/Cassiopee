================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Variables camelCase et "while" à la place du "for", avec traitement itératif inhabituel

n = int(input())
xValues = [int(v) for v in input().split()]
meanGuess = int((sum(xValues)/n) + 0.5)
weirdAccumulator = 0
i = 0
while i < n:
    diff = xValues[i] - meanGuess
    weirdAccumulator = weirdAccumulator + (diff * diff)
    i += 1
print(weirdAccumulator)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Variables' (ID: 46975)
  → Token d'amorce (pas de prédiction)

Token 2: ' camel' (ID: 83330)
  → Token d'amorce (pas de prédiction)

Token 3: 'Case' (ID: 6187)
  Prédit: 'Case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Case' → logprob: -0.1764269918203354
    2. 'C' → logprob: -1.9264270067214966
    3. 'S' → logprob: -4.926426887512207
    4. 'Ca' → logprob: -6.051426887512207
    5. 's' → logprob: -6.551426887512207
    6. 'Cas' → logprob: -6.676426887512207
    7. 'case' → logprob: -6.801426887512207
    8. '```' → logprob: -7.051426887512207
    9. '_case' → logprob: -7.676426887512207
    10. ' =' → logprob: -8.426426887512207

Token 4: ' et' (ID: 859)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'my' → logprob: -0.16155438125133514
    2. 'variable' → logprob: -3.0365543365478516
    3. ' my' → logprob: -3.5365543365478516
    4. 'user' → logprob: -4.036554336547852
    5. 'example' → logprob: -4.661554336547852
    6. 'var' → logprob: -4.911554336547852
    7. 'a' → logprob: -5.161554336547852
    8. '_' → logprob: -5.286554336547852
    9. 'first' → logprob: -5.661554336547852
    10. 'm' → logprob: -5.911554336547852

Token 5: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8081336617469788
    2. '_' → logprob: -0.9331336617469788
    3. 'space' → logprob: -2.558133602142334
    4. '=' → logprob: -3.433133602142334
    5. '```' → logprob: -4.183133602142334
    6. '_=' → logprob: -5.058133602142334
    7. 'snake' → logprob: -5.058133602142334
    8. 'S' → logprob: -5.308133602142334
    9. 'd' → logprob: -5.808133602142334
    10. ',' → logprob: -6.058133602142334

Token 6: 'while' (ID: 7032)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.36045482754707336
    2. '```' → logprob: -2.360454797744751
    3. 's' → logprob: -2.735454797744751
    4. '_' → logprob: -2.735454797744751
    5. '"""' → logprob: -3.985454797744751
    6. ''' → logprob: -4.61045503616333
    7. '`' → logprob: -5.11045503616333
    8. '=' → logprob: -5.48545503616333
    9. 'string' → logprob: -5.48545503616333
    10. 'space' → logprob: -5.98545503616333

Token 7: '"' (ID: 1)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7903961539268494
    2. '```' → logprob: -1.2903962135314941
    3. ' (' → logprob: -2.040396213531494
    4. ' ' → logprob: -3.415396213531494
    5. 's' → logprob: -3.415396213531494
    6. '_' → logprob: -3.790396213531494
    7. '"' → logprob: -3.790396213531494
    8. ' ```' → logprob: -4.165396213531494
    9. '`' → logprob: -5.790396213531494
    10. ''' → logprob: -6.165396213531494

Token 8: ' à' (ID: 1221)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2480524331331253
    2. '_' → logprob: -1.7480524778366089
    3. 's' → logprob: -4.373052597045898
    4. ' ```' → logprob: -4.623052597045898
    5. '`' → logprob: -5.248052597045898
    6. '``' → logprob: -5.498052597045898
    7. ' ' → logprob: -6.123052597045898
    8. 'i' → logprob: -6.248052597045898
    9. 'a' → logprob: -6.248052597045898
    10. ':' → logprob: -6.498052597045898

Token 9: ' la' (ID: 557)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8755468726158142
    2. '_' → logprob: -1.875546932220459
    3. ' ' → logprob: -2.750546932220459
    4. 'l' → logprob: -2.750546932220459
    5. ' ```' → logprob: -3.250546932220459
    6. '  ' → logprob: -3.250546932220459
    7. ' l' → logprob: -3.375546932220459
    8. ' partir' → logprob: -3.875546932220459
    9. 'u' → logprob: -4.250546932220459
    10. ' espace' → logprob: -4.375546932220459

Token 10: ' place' (ID: 2475)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.003730297088623
    2. '```' → logprob: -1.628730297088623
    3. '_' → logprob: -2.253730297088623
    4. ' ```' → logprob: -2.503730297088623
    5. ' (' → logprob: -3.628730297088623
    6. '`' → logprob: -3.628730297088623
    7. 's' → logprob: -3.628730297088623
    8. ' ' → logprob: -3.878730297088623
    9. 'n' → logprob: -4.003730297088623
    10. ' {' → logprob: -4.128730297088623

Token 11: ' du' (ID: 1462)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17070041596889496
    2. 'w' → logprob: -3.0457003116607666
    3. 'i' → logprob: -3.1707003116607666
    4. '=' → logprob: -3.6707003116607666
    5. 's' → logprob: -4.420700550079346
    6. '```' → logprob: -5.295700550079346
    7. '(' → logprob: -5.420700550079346
    8. 't' → logprob: -5.545700550079346
    9. 'n' → logprob: -6.045700550079346
    10. 'e' → logprob: -6.295700550079346

Token 12: ' "' (ID: 392)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019803646951913834
    2. '#' → logprob: -4.269803524017334
    3. '```' → logprob: -5.769803524017334
    4. ' for' → logprob: -6.394803524017334
    5. 'if' → logprob: -8.144804000854492
    6. '`' → logprob: -9.144804000854492
    7. '_for' → logprob: -9.394804000854492
    8. 'f' → logprob: -9.519804000854492
    9. '_' → logprob: -10.519804000854492
    10. '"' → logprob: -10.644804000854492

Token 13: 'for' (ID: 1938)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.9382675886154175
    2. '"' → logprob: -1.0632675886154175
    3. 'i' → logprob: -3.313267707824707
    4. '}' → logprob: -3.313267707824707
    5. 'f' → logprob: -3.438267707824707
    6. '`' → logprob: -3.438267707824707
    7. 'b' → logprob: -3.813267707824707
    8. '"""' → logprob: -4.313267707824707
    9. 'n' → logprob: -4.438267707824707
    10. '```' → logprob: -4.438267707824707

Token 14: '",' (ID: 672)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.30165818333625793
    2. '_' → logprob: -1.8016581535339355
    3. ' ' → logprob: -3.4266581535339355
    4. 'w' → logprob: -3.6766581535339355
    5. 'n' → logprob: -4.3016581535339355
    6. '```' → logprob: -5.1766581535339355
    7. 'b' → logprob: -5.6766581535339355
    8. ' i' → logprob: -6.0516581535339355
    9. 'a' → logprob: -6.3016581535339355
    10. ' ```' → logprob: -6.3016581535339355

Token 15: ' avec' (ID: 3937)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4039729833602905
    2. '```' → logprob: -1.2789729833602905
    3. 'n' → logprob: -4.40397310256958
    4. 'a' → logprob: -4.40397310256958
    5. ' ```' → logprob: -5.15397310256958
    6. ' ' → logprob: -5.65397310256958
    7. '`' → logprob: -5.77897310256958
    8. '``' → logprob: -5.77897310256958
    9. 'for' → logprob: -5.77897310256958
    10. '_' → logprob: -6.02897310256958

Token 16: ' traitement' (ID: 42434)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.6404733657836914
    2. ' un' → logprob: -1.6404733657836914
    3. ' i' → logprob: -1.7654733657836914
    4. ' des' → logprob: -2.0154733657836914
    5. ' une' → logprob: -2.5154733657836914
    6. 'un' → logprob: -3.7654733657836914
    7. 'une' → logprob: -3.7654733657836914
    8. ' la' → logprob: -4.015473365783691
    9. ' ' → logprob: -4.140473365783691
    10. ' while' → logprob: -4.140473365783691

Token 17: ' it' (ID: 480)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21596282720565796
    2. 'w' → logprob: -2.9659628868103027
    3. 'f' → logprob: -3.5909628868103027
    4. 'n' → logprob: -3.5909628868103027
    5. '_' → logprob: -3.8409628868103027
    6. ' ' → logprob: -4.090962886810303
    7. 't' → logprob: -4.465962886810303
    8. 's' → logprob: -5.340962886810303
    9. 'for' → logprob: -5.340962886810303
    10. 'a' → logprob: -5.590962886810303

Token 18: 'ér' (ID: 2156)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6590563654899597
    2. ' ' → logprob: -1.1590564250946045
    3. '_' → logprob: -3.1590564250946045
    4. ' i' → logprob: -4.034056186676025
    5. 't' → logprob: -4.284056186676025
    6. 'n' → logprob: -4.284056186676025
    7. ' ' → logprob: -4.784056186676025
    8. 'r' → logprob: -4.784056186676025
    9. 'e' → logprob: -5.159056186676025
    10. '=' → logprob: -5.284056186676025

Token 19: 'atif' (ID: 23984)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.25655174255371094
    2. 'ration' → logprob: -1.506551742553711
    3. 'n' → logprob: -6.131551742553711
    4. 'm' → logprob: -6.881551742553711
    5. '```' → logprob: -8.006551742553711
    6. 'ation' → logprob: -8.631551742553711
    7. 'rat' → logprob: -9.131551742553711
    8. 'a' → logprob: -9.131551742553711
    9. '#' → logprob: -9.506551742553711
    10. 'ération' → logprob: -9.506551742553711

Token 20: ' inhabit' (ID: 55277)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.29312384128570557
    2. '_' → logprob: -2.168123722076416
    3. 'n' → logprob: -3.043123722076416
    4. 'w' → logprob: -3.418123722076416
    5. ' ' → logprob: -3.793123722076416
    6. 'b' → logprob: -5.543123722076416
    7. 'x' → logprob: -5.668123722076416
    8. 'a' → logprob: -5.668123722076416
    9. 't' → logprob: -5.918123722076416
    10. 'f' → logprob: -6.043123722076416

Token 21: 'uel' (ID: 4619)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.005091667175293
    2. 'al' → logprob: -1.880091667175293
    3. 'ent' → logprob: -2.005091667175293
    4. 'uel' → logprob: -2.005091667175293
    5. 'ual' → logprob: -3.380091667175293
    6. 'é' → logprob: -3.505091667175293
    7. 'er' → logprob: -3.880091667175293
    8. 'a' → logprob: -4.005091667175293
    9. 'ue' → logprob: -4.130091667175293
    10. 'e' → logprob: -4.130091667175293

Token 22: '

' (ID: 279)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9439972639083862
    2. '_' → logprob: -1.3189972639083862
    3. 'n' → logprob: -1.9439972639083862
    4. '```' → logprob: -2.943997383117676
    5. 'w' → logprob: -3.443997383117676
    6. ' ' → logprob: -3.818997383117676
    7. 'a' → logprob: -4.318997383117676
    8. ':' → logprob: -4.818997383117676
    9. ',' → logprob: -4.943997383117676
    10. 'b' → logprob: -5.068997383117676

Token 23: 'n' (ID: 77)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.795619010925293
    2. '_' → logprob: -1.170619010925293
    3. 'i' → logprob: -2.295619010925293
    4. 'n' → logprob: -3.170619010925293
    5. ' ' → logprob: -4.045619010925293
    6. 'a' → logprob: -4.420619010925293
    7. ':' → logprob: -4.420619010925293
    8. 's' → logprob: -4.795619010925293
    9. ' ```' → logprob: -4.795619010925293
    10. 'x' → logprob: -5.045619010925293

Token 24: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.37456220388412476
    2. 'b' → logprob: -1.7495622634887695
    3. 'umber' → logprob: -2.3745622634887695
    4. 'i' → logprob: -4.6245622634887695
    5. 'a' → logprob: -4.9995622634887695
    6. '=' → logprob: -5.1245622634887695
    7. '#' → logprob: -5.3745622634887695
    8. ' ' → logprob: -5.4995622634887695
    9. 'um' → logprob: -5.8745622634887695
    10. 'e' → logprob: -6.1245622634887695

Token 25: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.041527677327394485
    2. '10' → logprob: -4.04152774810791
    3. '0' → logprob: -4.16652774810791
    4. '5' → logprob: -5.54152774810791
    5. '1' → logprob: -6.04152774810791
    6. '20' → logprob: -7.91652774810791
    7. ' int' → logprob: -8.29152774810791
    8. '100' → logprob: -8.66652774810791
    9. '3' → logprob: -8.91652774810791
    10. 'int' → logprob: -9.16652774810791

Token 26: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5789288282394409
    2. '(' → logprob: -0.8289288282394409
    3. '('' → logprob: -6.2039289474487305
    4. ' (' → logprob: -8.07892894744873
    5. 'input' → logprob: -8.20392894744873
    6. '("' → logprob: -8.57892894744873
    7. '()' → logprob: -8.95392894744873
    8. ' input' → logprob: -11.20392894744873
    9. ' ' → logprob: -11.32892894744873
    10. '(
' → logprob: -11.57892894744873

Token 27: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011209264630451798
    2. ')' → logprob: -8.001120567321777
    3. '()' → logprob: -8.001120567321777
    4. '())' → logprob: -9.126120567321777
    5. '(
' → logprob: -9.376120567321777
    6. '('' → logprob: -9.376120567321777
    7. '("("' → logprob: -9.501120567321777
    8. '("' → logprob: -10.251120567321777
    9. '("")' → logprob: -10.876120567321777
    10. '(""))' → logprob: -10.876120567321777

Token 28: 'x' (ID: 87)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4038120210170746
    2. 'i' → logprob: -2.1538119316101074
    3. ' i' → logprob: -2.4038119316101074
    4. '_' → logprob: -2.7788119316101074
    5. ' 
' → logprob: -3.2788119316101074
    6. ' _' → logprob: -5.028811931610107
    7. 'n' → logprob: -5.153811931610107
    8. '  
' → logprob: -5.653811931610107
    9. ' while' → logprob: -5.903811931610107
    10. 'a' → logprob: -7.153811931610107

Token 29: 'Values' (ID: 8278)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06944333016872406
    2. '=' → logprob: -2.8194432258605957
    3. ' ' → logprob: -5.319443225860596
    4. '_' → logprob: -6.444443225860596
    5. ',' → logprob: -7.444443225860596
    6. ' +=' → logprob: -9.444443702697754
    7. ' ,' → logprob: -9.694443702697754
    8. '  ' → logprob: -10.194443702697754
    9. ' _' → logprob: -10.444443702697754
    10. '   ' → logprob: -10.819443702697754

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024429883807897568
    2. '=' → logprob: -4.524429798126221
    3. '[' → logprob: -4.774429798126221
    4. ',' → logprob: -6.774429798126221
    5. '[:]' → logprob: -7.024429798126221
    6. '_' → logprob: -7.149429798126221
    7. ' ' → logprob: -7.274429798126221
    8. '=[]' → logprob: -7.774429798126221
    9. '[]' → logprob: -7.899429798126221
    10. 's' → logprob: -9.149430274963379

Token 31: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07926242053508759
    2. ' []' → logprob: -2.7042624950408936
    3. '[' → logprob: -4.8292622566223145
    4. ' [' → logprob: -7.5792622566223145
    5. 'list' → logprob: -7.9542622566223145
    6. '[input' → logprob: -8.704262733459473
    7. '[int' → logprob: -9.954262733459473
    8. '[n' → logprob: -10.079262733459473
    9. '[]}' → logprob: -10.204262733459473
    10. '[list' → logprob: -10.454262733459473

Token 32: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5189172625541687
    2. 'int' → logprob: -1.1439173221588135
    3. 'i' → logprob: -3.3939173221588135
    4. 'n' → logprob: -3.3939173221588135
    5. 'float' → logprob: -5.143917083740234
    6. ']' → logprob: -5.393917083740234
    7. ' int' → logprob: -6.393917083740234
    8. 'x' → logprob: -6.518917083740234
    9. '1' → logprob: -6.643917083740234
    10. 'input' → logprob: -7.143917083740234

Token 33: '(v' (ID: 6932)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.625742495059967
    2. '(' → logprob: -0.875742495059967
    3. '(x' → logprob: -3.6257424354553223
    4. '()' → logprob: -4.250742435455322
    5. '(i' → logprob: -5.250742435455322
    6. '()]' → logprob: -6.250742435455322
    7. ']' → logprob: -8.00074291229248
    8. ' ' → logprob: -10.25074291229248
    9. '(
' → logprob: -10.50074291229248
    10. '(s' → logprob: -10.87574291229248

Token 34: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33025071024894714
    2. '(input' → logprob: -1.3302507400512695
    3. '())' → logprob: -4.8302507400512695
    4. '(x' → logprob: -5.4552507400512695
    5. 'input' → logprob: -6.2052507400512695
    6. '(i' → logprob: -7.2052507400512695
    7. '()' → logprob: -7.4552507400512695
    8. '(' → logprob: -7.7052507400512695
    9. ' )' → logprob: -8.08025074005127
    10. '=input' → logprob: -8.83025074005127

Token 35: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.676815927028656
    2. ' for' → logprob: -0.801815927028656
    3. 'for' → logprob: -3.801815986633301
    4. '()' → logprob: -4.676815986633301
    5. '(input' → logprob: -4.926815986633301
    6. 'input' → logprob: -6.676815986633301
    7. ' )' → logprob: -6.926815986633301
    8. ' ' → logprob: -7.926815986633301
    9. '(x' → logprob: -7.926815986633301
    10. ' input' → logprob: -8.3018159866333

Token 36: ' v' (ID: 323)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.01669226586818695
    2. ' range' → logprob: -4.141692161560059
    3. 'input' → logprob: -7.391692161560059
    4. 'range' → logprob: -10.516692161560059
    5. ' ' → logprob: -11.641692161560059
    6. '(input' → logprob: -12.641692161560059
    7. ' ' → logprob: -14.891692161560059
    8. ' in' → logprob: -15.141692161560059
    9. ' raw' → logprob: -15.141692161560059
    10. '(range' → logprob: -15.266692161560059

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024118885397911072
    2. 'in' → logprob: -3.8991189002990723
    3. 'input' → logprob: -6.399118900299072
    4. ' input' → logprob: -6.899118900299072
    5. 'range' → logprob: -8.024118423461914
    6. ' range' → logprob: -8.399118423461914
    7. ' v' → logprob: -9.774118423461914
    8. ')' → logprob: -9.899118423461914
    9. '=input' → logprob: -9.899118423461914
    10. ']' → logprob: -10.399118423461914

Token 38: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.21142078936100006
    2. ' input' → logprob: -1.7114207744598389
    3. 'range' → logprob: -4.961421012878418
    4. ' range' → logprob: -5.836421012878418
    5. '(input' → logprob: -11.086421012878418
    6. ' ' → logprob: -11.836421012878418
    7. 'x' → logprob: -12.086421012878418
    8. '	input' → logprob: -13.836421012878418
    9. '=input' → logprob: -14.461421012878418
    10. 'list' → logprob: -14.461421012878418

Token 39: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0017608561320230365
    2. '()' → logprob: -6.501760959625244
    3. '()]' → logprob: -8.376760482788086
    4. '(' → logprob: -10.626760482788086
    5. '())' → logprob: -13.251760482788086
    6. ' ().' → logprob: -14.251760482788086
    7. '()[' → logprob: -14.876760482788086
    8. '()].' → logprob: -15.001760482788086
    9. 'split' → logprob: -15.001760482788086
    10. ' ()' → logprob: -15.501760482788086

Token 40: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015267637791112065
    2. 'strip' → logprob: -6.501526832580566
    3. 'rstrip' → logprob: -10.751526832580566
    4. ' split' → logprob: -13.126526832580566
    5. 'spl' → logprob: -14.376526832580566
    6. 'replace' → logprob: -15.501526832580566
    7. '(split' → logprob: -16.00152587890625
    8. 's' → logprob: -17.00152587890625
    9. '.split' → logprob: -17.75152587890625
    10. 'plit' → logprob: -18.87652587890625

Token 41: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.004322710447013378
    2. '()' → logprob: -6.129322528839111
    3. '())' → logprob: -6.504322528839111
    4. '(' → logprob: -7.629322528839111
    5. '('' → logprob: -8.87932300567627
    6. ']' → logprob: -12.62932300567627
    7. ')]' → logprob: -12.87932300567627
    8. '("' → logprob: -13.12932300567627
    9. '()]
' → logprob: -13.62932300567627
    10. '()],' → logprob: -13.87932300567627

Token 42: 'mean' (ID: 17033)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018421495333313942
    2. ' i' → logprob: -5.268421649932861
    3. 'n' → logprob: -6.018421649932861
    4. 'x' → logprob: -6.393421649932861
    5. '
' → logprob: -6.393421649932861
    6. 'count' → logprob: -6.768421649932861
    7. 'w' → logprob: -6.768421649932861
    8. 'while' → logprob: -7.518421649932861
    9. ' 
' → logprob: -7.643421649932861
    10. 'index' → logprob: -7.768421649932861

Token 43: 'Guess' (ID: 71500)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09327609837055206
    2. '=' → logprob: -2.843276023864746
    3. 'Value' → logprob: -3.718276023864746
    4. '_' → logprob: -6.468276023864746
    5. 'Val' → logprob: -6.468276023864746
    6. 'X' → logprob: -6.843276023864746
    7. 's' → logprob: -7.343276023864746
    8. ' ' → logprob: -7.593276023864746
    9. 'Index' → logprob: -8.218276023864746
    10. 'Values' → logprob: -8.343276023864746

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09081845730543137
    2. '=' → logprob: -2.465818405151367
    3. 's' → logprob: -6.340818405151367
    4. ',' → logprob: -9.590818405151367
    5. ' ' → logprob: -10.215818405151367
    6. 'Index' → logprob: -13.340818405151367
    7. '_' → logprob: -13.715818405151367
    8. 'ed' → logprob: -14.090818405151367
    9. 'Value' → logprob: -14.215818405151367
    10. ')' → logprob: -14.465818405151367

Token 45: ' int' (ID: 677)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.0380184650421143
    2. '0' → logprob: -1.2880184650421143
    3. ' ' → logprob: -1.2880184650421143
    4. ' x' → logprob: -3.0380184650421143
    5. 'sum' → logprob: -3.2880184650421143
    6. 'x' → logprob: -5.538018226623535
    7. ' int' → logprob: -6.413018226623535
    8. ' n' → logprob: -6.538018226623535
    9. '(sum' → logprob: -7.788018226623535
    10. ' max' → logprob: -7.913018226623535

Token 46: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.053205255419015884
    2. '()' → logprob: -3.3032052516937256
    3. '(x' → logprob: -4.678205490112305
    4. '((' → logprob: -6.553205490112305
    5. '(len' → logprob: -6.928205490112305
    6. '(n' → logprob: -7.303205490112305
    7. '('' → logprob: -7.303205490112305
    8. '(sum' → logprob: -7.428205490112305
    9. ' (' → logprob: -7.553205490112305
    10. '(input' → logprob: -8.428205490112305

Token 47: 'sum' (ID: 12298)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5843743681907654
    2. 'sum' → logprob: -0.8343743681907654
    3. ' n' → logprob: -5.33437442779541
    4. 'n' → logprob: -7.20937442779541
    5. '(sum' → logprob: -7.45937442779541
    6. ')' → logprob: -7.58437442779541
    7. ' max' → logprob: -7.95937442779541
    8. ' x' → logprob: -8.20937442779541
    9. ' min' → logprob: -8.45937442779541
    10. ' ' → logprob: -8.83437442779541

Token 48: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.002518230816349387
    2. '(' → logprob: -6.002518177032471
    3. 'x' → logprob: -10.377518653869629
    4. ' (' → logprob: -11.877518653869629
    5. '(
' → logprob: -13.377518653869629
    6. '(n' → logprob: -13.502518653869629
    7. ' x' → logprob: -14.252518653869629
    8. ')' → logprob: -15.002518653869629
    9. '(s' → logprob: -15.877518653869629
    10. ' ' → logprob: -16.502517700195312

Token 49: 'Values' (ID: 8278)
  Prédit: 'Values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Values' → logprob: -1.3856492842023727e-06
    2. 'values' → logprob: -14.500000953674316
    3. '(x' → logprob: -15.250000953674316
    4. '_values' → logprob: -15.375000953674316
    5. ' Values' → logprob: -15.625000953674316
    6. 'x' → logprob: -16.250001907348633
    7. 'Value' → logprob: -16.750001907348633
    8. ')' → logprob: -17.500001907348633
    9. 'VALUES' → logprob: -17.500001907348633
    10. 'Variables' → logprob: -18.750001907348633

Token 50: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1188645139336586
    2. ' /' → logprob: -2.6188645362854004
    3. ' )' → logprob: -4.2438645362854
    4. ')/' → logprob: -4.3688645362854
    5. '/' → logprob: -4.6188645362854
    6. '))' → logprob: -7.2438645362854
    7. '+' → logprob: -7.9938645362854
    8. ' +' → logprob: -8.618864059448242
    9. '()' → logprob: -8.743864059448242
    10. '/n' → logprob: -8.743864059448242

Token 51: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19671139121055603
    2. ' n' → logprob: -1.9467114210128784
    3. 'len' → logprob: -3.446711301803589
    4. ' len' → logprob: -5.571711540222168
    5. ' ' → logprob: -9.446711540222168
    6. ' ' → logprob: -10.196711540222168
    7. ')n' → logprob: -11.509211540222168
    8. ')' → logprob: -11.696711540222168
    9. '	n' → logprob: -12.259211540222168
    10. '(n' → logprob: -12.634211540222168

Token 52: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2227383553981781
    2. ')+' → logprob: -1.9727383852005005
    3. '))' → logprob: -2.847738265991211
    4. '+' → logprob: -6.722738265991211
    5. ' )' → logprob: -7.597738265991211
    6. ' +' → logprob: -7.972738265991211
    7. '))+' → logprob: -8.222738265991211
    8. ')+(' → logprob: -8.847738265991211
    9. ' ))' → logprob: -9.472738265991211
    10. ')**' → logprob: -11.097738265991211

Token 53: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08880138397216797
    2. '))' → logprob: -2.588801383972168
    3. ')+' → logprob: -5.338801383972168
    4. '+' → logprob: -6.213801383972168
    5. ' )' → logprob: -6.838801383972168
    6. ' +' → logprob: -7.338801383972168
    7. ')))' → logprob: -7.463801383972168
    8. ')/' → logprob: -8.463801383972168
    9. ')**' → logprob: -8.963801383972168
    10. ' ))' → logprob: -9.338801383972168

Token 54: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2265382707118988
    2. ' ' → logprob: -1.6015383005142212
    3. '1' → logprob: -6.851538181304932
    4. ' .' → logprob: -10.72653865814209
    5. '.' → logprob: -10.97653865814209
    6. ')' → logprob: -12.10153865814209
    7. '5' → logprob: -12.35153865814209
    8. ' )' → logprob: -12.91403865814209
    9. '2' → logprob: -13.03903865814209
    10. '50' → logprob: -13.28903865814209

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016706442460417747
    2. ' ' → logprob: -4.266706466674805
    3. '1' → logprob: -6.016706466674805
    4. '.' → logprob: -9.641706466674805
    5. '5' → logprob: -12.016706466674805
    6. '2' → logprob: -12.266706466674805
    7. ' .' → logprob: -12.391706466674805
    8. ')' → logprob: -12.516706466674805
    9. '(' → logprob: -13.266706466674805
    10. '3' → logprob: -13.266706466674805

Token 56: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.000573763158172369
    2. '0' → logprob: -8.000574111938477
    3. ' .' → logprob: -8.375574111938477
    4. '5' → logprob: -12.625574111938477
    5. '1' → logprob: -13.125574111938477
    6. '(.' → logprob: -14.625574111938477
    7. '`.' → logprob: -14.875574111938477
    8. '​.' → logprob: -15.250574111938477
    9. '4' → logprob: -15.375574111938477
    10. ').' → logprob: -15.500574111938477

Token 57: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.004385014064610004
    2. '1' → logprob: -5.504384994506836
    3. '49' → logprob: -9.629384994506836
    4. '000' → logprob: -9.754384994506836
    5. '4' → logprob: -9.879384994506836
    6. '0' → logprob: -10.129384994506836
    7. '05' → logprob: -10.379384994506836
    8. '9' → logprob: -11.004384994506836
    9. '01' → logprob: -11.254384994506836
    10. '2' → logprob: -11.879384994506836

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.578184497309849e-05
    2. '))' → logprob: -9.875085830688477
    3. ' )' → logprob: -10.625085830688477
    4. ')
' → logprob: -11.875085830688477
    5. ')`' → logprob: -14.500085830688477
    6. ')n' → logprob: -15.000085830688477
    7. ')x' → logprob: -15.250085830688477
    8. ')))' → logprob: -15.375085830688477
    9. '0' → logprob: -15.375085830688477
    10. '`)' → logprob: -15.875085830688477

Token 59: 'we' (ID: 854)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1186317205429077
    2. '
' → logprob: -1.2436317205429077
    3. ' 
' → logprob: -2.1186318397521973
    4. ' while' → logprob: -2.4936318397521973
    5. 'while' → logprob: -2.7436318397521973
    6. ' i' → logprob: -2.8686318397521973
    7. '  
' → logprob: -4.368631839752197
    8. 'm' → logprob: -4.618631839752197
    9. 'mean' → logprob: -4.868631839752197
    10. 't' → logprob: -4.993631839752197

Token 60: 'ird' (ID: 2716)
  Prédit: 'ight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ight' → logprob: -0.03494067117571831
    2. 'ights' → logprob: -4.284940719604492
    3. 'ighted' → logprob: -4.534940719604492
    4. 'ak' → logprob: -5.909940719604492
    5. 'ighting' → logprob: -6.159940719604492
    6. 'igh' → logprob: -6.784940719604492
    7. 'i' → logprob: -7.034940719604492
    8. 'ile' → logprob: -7.284940719604492
    9. 'ig' → logprob: -7.909940719604492
    10. 'ek' → logprob: -8.034940719604492

Token 61: 'Accumulator' (ID: 192052)
  Prédit: 'Mean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mean' → logprob: -0.38772451877593994
    2. 'While' → logprob: -2.0127243995666504
    3. 'Sum' → logprob: -3.1377243995666504
    4. 'Index' → logprob: -3.6377243995666504
    5. 'Count' → logprob: -4.01272439956665
    6. 'Loop' → logprob: -4.13772439956665
    7. 'Value' → logprob: -4.38772439956665
    8. 'Guess' → logprob: -4.51272439956665
    9. 'Values' → logprob: -4.63772439956665
    10. ' =' → logprob: -5.26272439956665

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019305398454889655
    2. '=' → logprob: -6.2519307136535645
    3. ' ' → logprob: -14.376930236816406
    4. ' +=' → logprob: -14.501930236816406
    5. ',' → logprob: -15.001930236816406
    6. 's' → logprob: -15.501930236816406
    7. '=int' → logprob: -16.376930236816406
    8. ' ,' → logprob: -16.626930236816406
    9. ' ' → logprob: -17.251930236816406
    10. '0' → logprob: -18.001930236816406

Token 63: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6444514393806458
    2. '0' → logprob: -0.7694514393806458
    3. ' mean' → logprob: -5.26945161819458
    4. 'mean' → logprob: -5.89445161819458
    5. ' [' → logprob: -6.89445161819458
    6. ' sum' → logprob: -7.64445161819458
    7. ' n' → logprob: -7.64445161819458
    8. ' x' → logprob: -7.89445161819458
    9. ' -' → logprob: -8.269451141357422
    10. '[' → logprob: -8.644451141357422

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13895556330680847
    2. 'mean' → logprob: -2.138955593109131
    3. '1' → logprob: -5.638955593109131
    4. 'sum' → logprob: -6.263955593109131
    5. 'x' → logprob: -6.638955593109131
    6. '-' → logprob: -6.888955593109131
    7. 'n' → logprob: -6.888955593109131
    8. ' ' → logprob: -7.138955593109131
    9. '[]' → logprob: -7.763955593109131
    10. '[' → logprob: -8.013955116271973

Token 65: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0686851218342781
    2. 'i' → logprob: -3.0686850547790527
    3. ' i' → logprob: -4.568685054779053
    4. '
' → logprob: -6.068685054779053
    5. ' 
' → logprob: -6.193685054779053
    6. ' while' → logprob: -6.318685054779053
    7. 'while' → logprob: -6.318685054779053
    8. 'w' → logprob: -6.943685054779053
    9. '  
' → logprob: -8.318685531616211
    10. '' → logprob: -9.943685531616211

Token 66: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08671911805868149
    2. ' i' → logprob: -2.711719036102295
    3. 'while' → logprob: -4.961719036102295
    4. ' while' → logprob: -5.336719036102295
    5. '
' → logprob: -6.336719036102295
    6. 'w' → logprob: -6.461719036102295
    7. ' 
' → logprob: -7.836719036102295
    8. '_i' → logprob: -8.711719512939453
    9. 'index' → logprob: -9.086719512939453
    10. 't' → logprob: -9.211719512939453

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016039764508605003
    2. '=' → logprob: -4.141039848327637
    3. ' ' → logprob: -12.266039848327637
    4. ' +=' → logprob: -15.016039848327637
    5. 'n' → logprob: -15.766039848327637
    6. ',' → logprob: -16.14103889465332
    7. ' ' → logprob: -16.39103889465332
    8. 's' → logprob: -16.64103889465332
    9. 'x' → logprob: -17.51603889465332
    10. '  ' → logprob: -17.64103889465332

Token 68: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011849920265376568
    2. ' ' → logprob: -6.751184940338135
    3. '1' → logprob: -11.126185417175293
    4. '۰' → logprob: -19.126184463500977
    5. 'n' → logprob: -19.251184463500977
    6. '2' → logprob: -19.251184463500977
    7. ' n' → logprob: -19.876184463500977
    8. ' ' → logprob: -20.251184463500977
    9. ' i' → logprob: -20.376184463500977
    10. 'i' → logprob: -20.438684463500977

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026848804554902017
    2. '1' → logprob: -8.375268936157227
    3. ' ' → logprob: -10.375268936157227
    4. 'n' → logprob: -12.625268936157227
    5. '-' → logprob: -12.875268936157227
    6. '2' → logprob: -14.500268936157227
    7. 'i' → logprob: -16.750268936157227
    8. '3' → logprob: -17.062768936157227
    9. '4' → logprob: -17.125268936157227
    10. ' -' → logprob: -17.562768936157227

Token 70: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03586670383810997
    2. ' 
' → logprob: -3.7858667373657227
    3. 'while' → logprob: -4.660866737365723
    4. ' while' → logprob: -6.160866737365723
    5. '  
' → logprob: -7.410866737365723
    6. '
' → logprob: -8.660866737365723
    7. ' 

' → logprob: -10.035866737365723
    8. ' ' → logprob: -10.160866737365723
    9. '

' → logprob: -10.410866737365723
    10. '
 
' → logprob: -10.785866737365723

Token 71: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3070797920227051
    2. ' 
' → logprob: -1.807079792022705
    3. 'while' → logprob: -2.932079792022705
    4. ' while' → logprob: -3.307079792022705
    5. '  
' → logprob: -4.807079792022705
    6. '\n' → logprob: -7.432079792022705
    7. ' ' → logprob: -7.432079792022705
    8. ' 

' → logprob: -8.182079315185547
    9. '
' → logprob: -8.682079315185547
    10. '   
' → logprob: -9.432079315185547

Token 72: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005456204991787672
    2. 'i' → logprob: -5.38045597076416
    3. ' ' → logprob: -7.13045597076416
    4. ' ' → logprob: -11.25545597076416
    5. '	i' → logprob: -12.00545597076416
    6. '(i' → logprob: -12.00545597076416
    7. '  ' → logprob: -12.25545597076416
    8. ' (' → logprob: -12.63045597076416
    9. '<|end|>' → logprob: -15.50545597076416
    10. '_i' → logprob: -15.88045597076416

Token 73: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.018498852849006653
    2. '<' → logprob: -4.01849889755249
    3. '<n' → logprob: -8.018498420715332
    4. ' ' → logprob: -11.268498420715332
    5. ' <=' → logprob: -12.393498420715332
    6. ' <
' → logprob: -14.268498420715332
    7. '<len' → logprob: -14.393498420715332
    8. ' n' → logprob: -14.643498420715332
    9. '<=' → logprob: -15.643498420715332
    10. 'n' → logprob: -15.768498420715332

Token 74: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31345173716545105
    2. 'n' → logprob: -1.3134517669677734
    3. ' ' → logprob: -9.438451766967773
    4. ' len' → logprob: -10.063451766967773
    5. 'len' → logprob: -10.313451766967773
    6. '	n' → logprob: -11.688451766967773
    7. ' ' → logprob: -12.188451766967773
    8. '6' → logprob: -12.313451766967773
    9. '10' → logprob: -12.500951766967773
    10. '4' → logprob: -13.438451766967773

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0058546047657728195
    2. ' :' → logprob: -5.505854606628418
    3. ':
' → logprob: -6.380854606628418
    4. ' :
' → logprob: -10.130854606628418
    5. '   ' → logprob: -10.755854606628418
    6. ' and' → logprob: -12.005854606628418
    7. ' ' → logprob: -12.130854606628418
    8. ',' → logprob: -13.380854606628418
    9. ':
' → logprob: -13.880854606628418
    10. ':

' → logprob: -13.880854606628418

Token 76: '   ' (ID: 271)
  Prédit: ' weird'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weird' → logprob: -0.44836199283599854
    2. '   ' → logprob: -1.1983619928359985
    3. ' ' → logprob: -3.698361873626709
    4. ' if' → logprob: -4.573361873626709
    5. '    ' → logprob: -5.198361873626709
    6. ' x' → logprob: -5.573361873626709
    7. ' 
' → logprob: -6.073361873626709
    8. '    
' → logprob: -6.323361873626709
    9. 'we' → logprob: -6.323361873626709
    10. ' strange' → logprob: -6.448361873626709

Token 77: ' diff' (ID: 8868)
  Prédit: ' weird'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' weird' → logprob: -0.05885961279273033
    2. '   ' → logprob: -3.9338595867156982
    3. ' if' → logprob: -3.9338595867156982
    4. 'we' → logprob: -4.933859825134277
    5. ' x' → logprob: -6.183859825134277
    6. ' mean' → logprob: -6.183859825134277
    7. ' ' → logprob: -7.058859825134277
    8. ' we' → logprob: -7.183859825134277
    9. '    
' → logprob: -7.558859825134277
    10. 'if' → logprob: -7.558859825134277

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01129550114274025
    2. '=' → logprob: -5.136295318603516
    3. 'er' → logprob: -5.261295318603516
    4. ' ' → logprob: -10.136295318603516
    5. '   ' → logprob: -10.636295318603516
    6. 'ere' → logprob: -10.761295318603516
    7. 'érence' → logprob: -11.136295318603516
    8. 'eren' → logprob: -11.261295318603516
    9. 'Value' → logprob: -11.886295318603516
    10. 'rence' → logprob: -12.136295318603516

Token 79: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.1577647924423218
    2. 'abs' → logprob: -1.4077647924423218
    3. 'x' → logprob: -1.5327647924423218
    4. ' abs' → logprob: -1.5327647924423218
    5. '   ' → logprob: -5.532764911651611
    6. 'mean' → logprob: -6.282764911651611
    7. '(abs' → logprob: -6.907764911651611
    8. ' mean' → logprob: -7.032764911651611
    9. ' (' → logprob: -7.157764911651611
    10. '(x' → logprob: -7.782764911651611

Token 80: 'Values' (ID: 8278)
  Prédit: 'Values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Values' → logprob: -1.6240566083070007e-06
    2. 'values' → logprob: -13.875001907348633
    3. ' Values' → logprob: -15.250001907348633
    4. '_values' → logprob: -15.875001907348633
    5. '[i' → logprob: -16.500001907348633
    6. 'VALUES' → logprob: -17.125001907348633
    7. '.Values' → logprob: -17.250001907348633
    8. 'Vals' → logprob: -17.500001907348633
    9. '_VALUES' → logprob: -18.000001907348633
    10. '   ' → logprob: -18.000001907348633

Token 81: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.596781946020201e-05
    2. '[' → logprob: -10.125045776367188
    3. ' [' → logprob: -12.375045776367188
    4. 'Values' → logprob: -15.000045776367188
    5. 'i' → logprob: -15.375045776367188
    6. ' ' → logprob: -15.500045776367188
    7. '```' → logprob: -15.625045776367188
    8. '   ' → logprob: -16.000045776367188
    9. ' i' → logprob: -16.125045776367188
    10. '][' → logprob: -16.750045776367188

Token 82: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03034600056707859
    2. '-' → logprob: -3.530345916748047
    3. ')' → logprob: -7.905345916748047
    4. ' ' → logprob: -9.530345916748047
    5. '   ' → logprob: -9.655345916748047
    6. ']' → logprob: -10.030345916748047
    7. '<|end|>' → logprob: -11.905345916748047
    8. 'mean' → logprob: -12.280345916748047
    9. ' )' → logprob: -12.405345916748047
    10. '  ' → logprob: -12.530345916748047

Token 83: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.043144773691892624
    2. '-' → logprob: -3.168144702911377
    3. '   ' → logprob: -9.668145179748535
    4. ' ' → logprob: -10.168145179748535
    5. ' mean' → logprob: -12.043145179748535
    6. 'mean' → logprob: -12.168145179748535
    7. '*' → logprob: -12.418145179748535
    8. ' *' → logprob: -12.418145179748535
    9. ' -
' → logprob: -12.543145179748535
    10. ' ' → logprob: -12.668145179748535

Token 84: ' mean' (ID: 4774)
  Prédit: 'mean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mean' → logprob: -0.0036026788875460625
    2. ' mean' → logprob: -5.628602504730225
    3. '   ' → logprob: -13.878602981567383
    4. '<|end|>' → logprob: -14.003602981567383
    5. ' ' → logprob: -15.378602981567383
    6. '(mean' → logprob: -15.878602981567383
    7. '  ' → logprob: -16.128602981567383
    8. '.mean' → logprob: -16.253602981567383
    9. 'Mean' → logprob: -16.628602981567383
    10. '
' → logprob: -16.878602981567383

Token 85: 'Guess' (ID: 71500)
  Prédit: 'Guess'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Guess' → logprob: -2.5776860184123507e-06
    2. ' Guess' → logprob: -14.12500286102295
    3. '_guess' → logprob: -14.12500286102295
    4. 'Mean' → logprob: -14.50000286102295
    5. 'guess' → logprob: -14.75000286102295
    6. 'Gu' → logprob: -16.250001907348633
    7. ' ' → logprob: -17.625001907348633
    8. 'Value' → logprob: -17.750001907348633
    9. ' guess' → logprob: -17.875001907348633
    10. '```' → logprob: -18.750001907348633

Token 86: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02143934555351734
    2. '   ' → logprob: -5.021439552307129
    3. '    
' → logprob: -5.771439552307129
    4. '<|end|>' → logprob: -5.771439552307129
    5. ' 
' → logprob: -6.646439552307129
    6. 'we' → logprob: -6.646439552307129
    7. '  
' → logprob: -6.896439552307129
    8. ')' → logprob: -7.021439552307129
    9. ' ' → logprob: -7.271439552307129
    10. '**' → logprob: -7.646439552307129

Token 87: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5482285022735596
    2. '   ' → logprob: -1.0482285022735596
    3. '    
' → logprob: -4.0482282638549805
    4. '    ' → logprob: -4.5482282638549805
    5. 'we' → logprob: -4.6732282638549805
    6. '**' → logprob: -5.2982282638549805
    7. '*' → logprob: -5.7982282638549805
    8. 'diff' → logprob: -5.7982282638549805
    9. ' ' → logprob: -5.9232282638549805
    10. ' 
' → logprob: -6.1732282638549805

Token 88: ' weird' (ID: 28783)
  Prédit: ' weird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weird' → logprob: -0.43510639667510986
    2. 'we' → logprob: -1.6851063966751099
    3. '   ' → logprob: -2.5601062774658203
    4. ' if' → logprob: -2.8101062774658203
    5. 'if' → logprob: -4.56010627746582
    6. '    ' → logprob: -5.56010627746582
    7. '    
' → logprob: -6.06010627746582
    8. ' i' → logprob: -6.18510627746582
    9. ' we' → logprob: -6.18510627746582
    10. 'i' → logprob: -6.18510627746582

Token 89: 'Accumulator' (ID: 192052)
  Prédit: 'Accumulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Accumulator' → logprob: -4.320199877838604e-07
    2. 'Accum' → logprob: -15.25
    3. 'Acc' → logprob: -16.25
    4. 'Ac' → logprob: -17.125
    5. 'Aggregator' → logprob: -18.375
    6. ' accumulator' → logprob: -19.0
    7. 'acc' → logprob: -19.125
    8. ' Acc' → logprob: -20.25
    9. 'Allocator' → logprob: -20.625
    10. 'Appender' → logprob: -20.875

Token 90: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.43139559030532837
    2. ' +=' → logprob: -1.0563955307006836
    3. '=' → logprob: -6.181395530700684
    4. ' =' → logprob: -8.431395530700684
    5. '+' → logprob: -8.931395530700684
    6. ' ' → logprob: -9.806395530700684
    7. '+=(' → logprob: -10.056395530700684
    8. '-=' → logprob: -10.431395530700684
    9. ' -=' → logprob: -10.556395530700684
    10. '**' → logprob: -10.806395530700684

Token 91: ' weird' (ID: 28783)
  Prédit: ' weird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weird' → logprob: -0.04545009881258011
    2. 'we' → logprob: -3.920450210571289
    3. ' abs' → logprob: -5.295450210571289
    4. ' diff' → logprob: -5.420450210571289
    5. 'diff' → logprob: -5.545450210571289
    6. 'abs' → logprob: -5.795450210571289
    7. ' (' → logprob: -6.295450210571289
    8. ' ' → logprob: -6.545450210571289
    9. '+' → logprob: -6.795450210571289
    10. ' max' → logprob: -6.920450210571289

Token 92: 'Accumulator' (ID: 192052)
  Prédit: 'Accumulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Accumulator' → logprob: -5.676981345459353e-06
    2. 'Acc' → logprob: -12.875005722045898
    3. 'Accum' → logprob: -13.500005722045898
    4. 'acc' → logprob: -14.125005722045898
    5. 'Ac' → logprob: -14.750005722045898
    6. 'Aggregator' → logprob: -15.375005722045898
    7. 'Allocator' → logprob: -16.8750057220459
    8. 'ACC' → logprob: -17.7500057220459
    9. ' accumulator' → logprob: -17.7500057220459
    10. 'Assembler' → logprob: -18.0000057220459

Token 93: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931850910186768
    2. ' +' → logprob: -0.6931850910186768
    3. ' -' → logprob: -11.068184852600098
    4. '-' → logprob: -11.818184852600098
    5. ' plus' → logprob: -12.443184852600098
    6. ' ' → logprob: -12.443184852600098
    7. ' |' → logprob: -13.818184852600098
    8. 'diff' → logprob: -13.818184852600098
    9. ' or' → logprob: -13.943184852600098
    10. '|' → logprob: -14.193184852600098

Token 94: ' (' (ID: 350)
  Prédit: ' diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.791627824306488
    2. 'diff' → logprob: -0.916627824306488
    3. ' abs' → logprob: -2.541627883911133
    4. 'abs' → logprob: -3.291627883911133
    5. '(diff' → logprob: -4.041627883911133
    6. ' (' → logprob: -5.041627883911133
    7. '(abs' → logprob: -5.666627883911133
    8. ' ' → logprob: -6.916627883911133
    9. '(' → logprob: -6.916627883911133
    10. 'int' → logprob: -7.916627883911133

Token 95: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.30125007033348083
    2. ' diff' → logprob: -1.6762501001358032
    3. 'abs' → logprob: -3.3012499809265137
    4. ' abs' → logprob: -3.6762499809265137
    5. '(diff' → logprob: -5.176249980926514
    6. ' ' → logprob: -6.801249980926514
    7. ' (' → logprob: -7.051249980926514
    8. '(abs' → logprob: -7.426249980926514
    9. '   ' → logprob: -7.676249980926514
    10. '1' → logprob: -7.926249980926514

Token 96: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.15909019112586975
    2. '*' → logprob: -2.909090280532837
    3. ' **' → logprob: -3.284090280532837
    4. ')' → logprob: -3.409090280532837
    5. '**' → logprob: -4.034090042114258
    6. ')**' → logprob: -5.909090042114258
    7. ' )' → logprob: -7.284090042114258
    8. ' ' → logprob: -7.409090042114258
    9. ')*' → logprob: -8.659090042114258
    10. ')*(' → logprob: -10.909090042114258

Token 97: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.7006663084030151
    2. 'diff' → logprob: -0.7006663084030151
    3. '	diff' → logprob: -5.325666427612305
    4. ' abs' → logprob: -6.700666427612305
    5. ' ' → logprob: -7.700666427612305
    6. 'abs' → logprob: -7.950666427612305
    7. '(diff' → logprob: -9.325666427612305
    8. 'd' → logprob: -9.638166427612305
    9. '   ' → logprob: -9.763166427612305
    10. '2' → logprob: -9.825666427612305

Token 98: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0798524022102356
    2. ')' → logprob: -2.579852342605591
    3. ')
' → logprob: -7.95485258102417
    4. ' )
' → logprob: -7.95485258102417
    5. '   ' → logprob: -8.329852104187012
    6. ' )' → logprob: -11.454852104187012
    7. ')i' → logprob: -12.454852104187012
    8. ' ' → logprob: -13.204852104187012
    9. ')

' → logprob: -13.704852104187012
    10. '
' → logprob: -14.454852104187012

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006700247176922858
    2. '
' → logprob: -7.375669956207275
    3. '    
' → logprob: -10.500670433044434
    4. ' i' → logprob: -11.625670433044434
    5. 'i' → logprob: -13.375670433044434
    6. '
' → logprob: -13.750670433044434
    7. '  
' → logprob: -14.375670433044434
    8. '   
' → logprob: -14.500670433044434
    9. '<|end|>' → logprob: -14.625670433044434
    10. '  ' → logprob: -14.750670433044434

Token 100: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053009919822216034
    2. ' i' → logprob: -3.0530099868774414
    3. 'i' (adapté à ' i') → logprob: -5.428009986877441
    4. '	i' → logprob: -11.303009986877441
    5. '   ' → logprob: -12.678009986877441
    6. '    
' → logprob: -13.053009986877441
    7. ' ' → logprob: -13.803009986877441
    8. '  ' → logprob: -14.428009986877441
    9. '    ' → logprob: -15.053009986877441
    10. '       ' → logprob: -15.178009986877441

Token 101: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16335590183734894
    2. '+=' → logprob: -2.038355827331543
    3. '+' → logprob: -4.288355827331543
    4. '=' → logprob: -5.163355827331543
    5. ' =' → logprob: -7.288355827331543
    6. ' +' → logprob: -8.413355827331543
    7. ' ' → logprob: -9.163355827331543
    8. '   ' → logprob: -13.038355827331543
    9. '++' → logprob: -13.163355827331543
    10. '<|end|>' → logprob: -13.538355827331543

Token 102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.00002098083496
    4. '```' → logprob: -19.62502098083496
    5. '  ' → logprob: -20.12502098083496
    6. '<|end|>' → logprob: -21.62502098083496
    7. '１' → logprob: -22.31252098083496
    8. '۱' → logprob: -22.43752098083496
    9. ' ' → logprob: -22.50002098083496
    10. '2' → logprob: -22.68752098083496

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -17.500003814697266
    4. '   ' → logprob: -19.437503814697266
    5. '2' → logprob: -20.375003814697266
    6. '0' → logprob: -20.500003814697266
    7. '  ' → logprob: -21.125003814697266
    8. '１' → logprob: -21.125003814697266
    9. '۱' → logprob: -21.562503814697266
    10. '<|end|>' → logprob: -21.687503814697266

Token 104: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.40774863958358765
    2. '
' → logprob: -1.5327486991882324
    3. 'variance' → logprob: -2.6577486991882324
    4. 'mean' → logprob: -4.032748699188232
    5. '#' → logprob: -5.282748699188232
    6. '<|end|>' → logprob: -5.532748699188232
    7. 'result' → logprob: -5.782748699188232
    8. '```' → logprob: -5.782748699188232
    9. 'standard' → logprob: -6.157748699188232
    10. '  
' → logprob: -6.282748699188232

Token 105: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14943550527095795
    2. 'variance' → logprob: -2.399435520172119
    3. 'mean' → logprob: -4.024435520172119
    4. 'if' → logprob: -5.149435520172119
    5. '
' → logprob: -5.649435520172119
    6. 'standard' → logprob: -5.774435520172119
    7. 'std' → logprob: -5.899435520172119
    8. '#' → logprob: -6.024435520172119
    9. '```' → logprob: -6.149435520172119
    10. 'result' → logprob: -6.274435520172119

Token 106: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012542963959276676
    2. '(int' → logprob: -4.887543201446533
    3. '(round' → logprob: -6.637543201446533
    4. '(math' → logprob: -6.762543201446533
    5. '()' → logprob: -7.012543201446533
    6. ' (' → logprob: -7.262543201446533
    7. '((' → logprob: -8.137542724609375
    8. '("' → logprob: -8.512542724609375
    9. '(abs' → logprob: -8.887542724609375
    10. '(mean' → logprob: -9.762542724609375

Token 107: 'we' (ID: 854)
  Prédit: 'we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.22621005773544312
    2. 'int' → logprob: -1.726210117340088
    3. ' weird' → logprob: -4.476210117340088
    4. 'round' → logprob: -5.726210117340088
    5. '(int' → logprob: -5.851210117340088
    6. 'str' → logprob: -5.851210117340088
    7. ' int' → logprob: -6.101210117340088
    8. '(' → logprob: -7.101210117340088
    9. 'abs' → logprob: -8.60120964050293
    10. 'mean' → logprob: -8.97620964050293

Token 108: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -2.534558552724775e-05
    2. 'ir' → logprob: -10.750025749206543
    3. 'rd' → logprob: -13.125025749206543
    4. 'ard' → logprob: -14.125025749206543
    5. 'irds' → logprob: -14.250025749206543
    6. 'an' → logprob: -15.875025749206543
    7. 'ierd' → logprob: -16.125024795532227
    8. 'd' → logprob: -16.250024795532227
    9. 'ired' → logprob: -16.625024795532227
    10. 'id' → logprob: -16.750024795532227

Token 109: 'Accumulator' (ID: 192052)
  Prédit: 'Accumulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Accumulator' → logprob: 0.0
    2. 'Ac' → logprob: -18.25
    3. 'Aggregator' → logprob: -18.5
    4. 'Allocator' → logprob: -19.5
    5. 'Accum' → logprob: -19.5
    6. 'Accessor' → logprob: -19.625
    7. 'Acc' → logprob: -20.625
    8. 'Assembler' → logprob: -21.125
    9. 'Calculator' → logprob: -21.5
    10. 'acc' → logprob: -22.0

Token 110: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.750000953674316
    3. '))' → logprob: -15.500000953674316
    4. ')`' → logprob: -16.75
    5. ')**' → logprob: -17.0
    6. '**' → logprob: -17.625
    7. ')
' → logprob: -18.125
    8. ')}' → logprob: -18.25
    9. ')#' → logprob: -18.375
    10. '*' → logprob: -18.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 108
Tokens correctement prédits (1ère position, stricte): 50
Tokens correctement prédits (1ère position, avec adaptation): 50
Tokens correctement prédits (top 10): 79
Précision stricte (1ère position): 46.30%
Précision adaptée (1ère position): 46.30%
Précision (top 10): 73.15%
================================================================================
