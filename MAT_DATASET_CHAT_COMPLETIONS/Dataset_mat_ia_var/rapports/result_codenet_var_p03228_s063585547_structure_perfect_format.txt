================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A, B, K = map(int, input().split())
for i in range(K):
    if i % 2 == 0:
        B += A // 2
        A //= 2
    else:
        A += B // 2
        B //= 2
print(A, B)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' B' (ID: 418)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5223684310913086
    2. '+' → logprob: -2.0223684310913086
    3. ';' → logprob: -2.5223684310913086
    4. ',' → logprob: -3.0223684310913086
    5. ')' → logprob: -3.3973684310913086
    6. '.' → logprob: -3.3973684310913086
    7. 'C' → logprob: -3.7723684310913086
    8. '<|end|>' → logprob: -4.022368431091309
    9. '[' → logprob: -4.147368431091309
    10. ':' → logprob: -4.772368431091309

Token 4: ' K' (ID: 658)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7975139021873474
    2. '=' → logprob: -0.9225139021873474
    3. 'C' → logprob: -2.297513961791992
    4. '.' → logprob: -3.922513961791992
    5. ' =' → logprob: -4.297513961791992
    6. ')' → logprob: -5.297513961791992
    7. ' ' → logprob: -5.422513961791992
    8. '<|end|>' → logprob: -5.922513961791992
    9. ',C' → logprob: -6.047513961791992
    10. ';' → logprob: -6.922513961791992

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10674694925546646
    2. '+' → logprob: -3.2317469120025635
    3. '(' → logprob: -3.8567469120025635
    4. ' =' → logprob: -4.606747150421143
    5. '[' → logprob: -4.606747150421143
    6. ')' → logprob: -4.981747150421143
    7. '*' → logprob: -5.481747150421143
    8. ',' → logprob: -5.731747150421143
    9. '.' → logprob: -5.981747150421143
    10. ';' → logprob: -6.606747150421143

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8218111991882324
    2. '0' → logprob: -1.1968111991882324
    3. ' map' → logprob: -2.4468111991882324
    4. 'map' → logprob: -3.0718111991882324
    5. '[]' → logprob: -3.5718111991882324
    6. '1' → logprob: -4.071811199188232
    7. ' []' → logprob: -4.196811199188232
    8. ' [' → logprob: -4.321811199188232
    9. 'input' → logprob: -4.321811199188232
    10. '10' → logprob: -4.821811199188232

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07067525386810303
    2. '(lambda' → logprob: -3.0706753730773926
    3. '<|end|>' → logprob: -4.195675373077393
    4. '```' → logprob: -6.070675373077393
    5. '(int' → logprob: -6.320675373077393
    6. ')' → logprob: -6.695675373077393
    7. '(user' → logprob: -8.445674896240234
    8. '<|end|>' → logprob: -8.570674896240234
    9. '(input' → logprob: -9.195674896240234
    10. 'user' → logprob: -9.320674896240234

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4040532112121582
    2. ')' → logprob: -1.6540532112121582
    3. '(' → logprob: -2.029053211212158
    4. '<|end|>' → logprob: -5.529053211212158
    5. 'input' → logprob: -6.404053211212158
    6. '(user' → logprob: -6.654053211212158
    7. '<|end|>' → logprob: -8.029052734375
    8. '(int' → logprob: -8.654052734375
    9. '```' → logprob: -8.779052734375
    10. '())' → logprob: -8.904052734375

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02325700782239437
    2. ' input' → logprob: -3.77325701713562
    3. '(input' → logprob: -11.6482572555542
    4. ')' → logprob: -13.2732572555542
    5. ',input' → logprob: -14.3982572555542
    6. ' ' → logprob: -14.7732572555542
    7. '=input' → logprob: -17.523256301879883
    8. '	input' → logprob: -18.023256301879883
    9. '```' → logprob: -18.148256301879883
    10. '[input' → logprob: -18.398256301879883

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.40948617458343506
    2. '())' → logprob: -1.159486174583435
    3. '(' → logprob: -4.909486293792725
    4. ')' → logprob: -5.534486293792725
    5. '(()' → logprob: -5.909486293792725
    6. '().' → logprob: -6.034486293792725
    7. '`()' → logprob: -7.034486293792725
    8. '('' → logprob: -7.159486293792725
    9. '();)' → logprob: -7.284486293792725
    10. '()))' → logprob: -7.784486293792725

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00043162284418940544
    2. 'strip' → logprob: -7.875431537628174
    3. ')' → logprob: -10.625432014465332
    4. 'rstrip' → logprob: -11.000432014465332
    5. ' split' → logprob: -12.000432014465332
    6. '(split' → logprob: -13.000432014465332
    7. 'read' → logprob: -14.250432014465332
    8. 'spl' → logprob: -14.375432014465332
    9. 's' → logprob: -15.125432014465332
    10. '```' → logprob: -15.625432014465332

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11501989513635635
    2. '())' → logprob: -2.2400197982788086
    3. '()' → logprob: -6.865019798278809
    4. '))' → logprob: -7.490019798278809
    5. '`)' → logprob: -8.115019798278809
    6. '(' → logprob: -8.865019798278809
    7. '()))' → logprob: -10.615019798278809
    8. '```' → logprob: -10.865019798278809
    9. ')`' → logprob: -10.990019798278809
    10. '('' → logprob: -11.115019798278809

Token 13: 'for' (ID: 1938)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5202219486236572
    2. 'if' → logprob: -2.0202219486236572
    3. '#' → logprob: -2.1452219486236572
    4. '*' → logprob: -2.8952219486236572
    5. '+
' → logprob: -3.2702219486236572
    6. '>' → logprob: -4.645221710205078
    7. '```' → logprob: -5.145221710205078
    8. 'i' → logprob: -5.270221710205078
    9. '.' → logprob: -5.395221710205078
    10. ',' → logprob: -5.645221710205078

Token 14: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.34267133474349976
    2. ' ' → logprob: -1.3426713943481445
    3. '_' → logprob: -3.9676713943481445
    4. 'i' → logprob: -4.7176713943481445
    5. '  ' → logprob: -7.4676713943481445
    6. ' _' → logprob: -7.9676713943481445
    7. ' x' → logprob: -10.342671394348145
    8. '`' → logprob: -10.467671394348145
    9. ' variable' → logprob: -11.092671394348145
    10. ' I' → logprob: -11.217671394348145

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4038045406341553
    2. 'in' → logprob: -1.1538045406341553
    3. ' ' → logprob: -4.278804779052734
    4. '  ' → logprob: -6.653804779052734
    5. 'range' → logprob: -7.403804779052734
    6. 'n' → logprob: -8.028804779052734
    7. '_' → logprob: -8.778804779052734
    8. 'space' → logprob: -9.278804779052734
    9. ',' → logprob: -9.403804779052734
    10. ' n' → logprob: -9.778804779052734

Token 16: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38688886165618896
    2. 'range' → logprob: -1.136888861656189
    3. ' ' → logprob: -11.88688850402832
    4. ' A' → logprob: -12.51188850402832
    5. '	range' → logprob: -12.63688850402832
    6. 'A' → logprob: -13.26188850402832
    7. '(range' → logprob: -14.51188850402832
    8. '```' → logprob: -15.38688850402832
    9. '.range' → logprob: -15.51188850402832
    10. ' xrange' → logprob: -15.51188850402832

Token 17: '(K' (ID: 28797)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036456878297030926
    2. '(A' → logprob: -5.628645896911621
    3. '(len' → logprob: -11.128645896911621
    4. '(i' → logprob: -11.503645896911621
    5. '(B' → logprob: -11.628645896911621
    6. '((' → logprob: -12.753645896911621
    7. '(range' → logprob: -13.128645896911621
    8. '(
' → logprob: -13.628645896911621
    9. '(`' → logprob: -13.753645896911621
    10. '(a' → logprob: -13.878645896911621

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013695230009034276
    2. '+' → logprob: -6.876369476318359
    3. ':' → logprob: -8.62636947631836
    4. ')' → logprob: -9.37636947631836
    5. ' ):' → logprob: -10.25136947631836
    6. ',' → logprob: -11.00136947631836
    7. '):
' → logprob: -11.37636947631836
    8. '+:' → logprob: -13.37636947631836
    9. '**' → logprob: -13.50136947631836
    10. '```' → logprob: -14.12636947631836

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027205940335989
    2. '    
' → logprob: -4.902205944061279
    3. ' ' → logprob: -5.402205944061279
    4. '```' → logprob: -5.527205944061279
    5. '    ' → logprob: -5.652205944061279
    6. ' 
' → logprob: -6.402205944061279
    7. '<|end|>' → logprob: -6.402205944061279
    8. ':' → logprob: -6.652205944061279
    9. '`' → logprob: -7.902205944061279
    10. ',' → logprob: -8.027205467224121

Token 20: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26990628242492676
    2. ' print' → logprob: -2.3949062824249268
    3. ' A' → logprob: -3.2699062824249268
    4. 'print' → logprob: -3.8949062824249268
    5. ' if' → logprob: -4.269906044006348
    6. ' for' → logprob: -4.394906044006348
    7. '```' → logprob: -4.519906044006348
    8. '    ' → logprob: -4.644906044006348
    9. 'A' → logprob: -5.394906044006348
    10. ' ' → logprob: -5.644906044006348

Token 21: ' i' (ID: 575)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.018281515687704086
    2. 'A' → logprob: -5.01828145980835
    3. ' ' → logprob: -5.14328145980835
    4. ' i' → logprob: -5.89328145980835
    5. ' B' → logprob: -6.26828145980835
    6. 'i' → logprob: -7.89328145980835
    7. ' (' → logprob: -8.393281936645508
    8. ' not' → logprob: -9.643281936645508
    9. '<|end|>' → logprob: -9.768281936645508
    10. 'B' → logprob: -9.893281936645508

Token 22: ' %' (ID: 1851)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.1666381359100342
    2. ' %' → logprob: -1.2916381359100342
    3. ' ' → logprob: -1.5416381359100342
    4. ' ==' → logprob: -1.7916381359100342
    5. '%' → logprob: -4.166638374328613
    6. '==' → logprob: -4.916638374328613
    7. '<' → logprob: -5.916638374328613
    8. '+' → logprob: -6.166638374328613
    9. ' >' → logprob: -6.541638374328613
    10. '  ' → logprob: -7.416638374328613

Token 23: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.47422081232070923
    2. 'A' → logprob: -1.9742207527160645
    3. ' A' → logprob: -2.0992207527160645
    4. ' ' → logprob: -2.2242207527160645
    5. 'B' → logprob: -5.4742207527160645
    6. ' B' → logprob: -6.3492207527160645
    7. '3' → logprob: -6.4742207527160645
    8. '(A' → logprob: -8.849221229553223
    9. '4' → logprob: -9.099221229553223
    10. ' (' → logprob: -9.224221229553223

Token 24: '2' (ID: 17)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.305521160364151
    2. '2' → logprob: -1.4305211305618286
    3. 'B' → logprob: -3.930521249771118
    4. '3' → logprob: -5.680521011352539
    5. ' A' → logprob: -7.555521011352539
    6. ' ' → logprob: -8.430521011352539
    7. '4' → logprob: -9.055521011352539
    8. '(A' → logprob: -10.055521011352539
    9. '10' → logprob: -11.180521011352539
    10. '5' → logprob: -11.180521011352539

Token 25: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.013517125509679317
    2. '==' → logprob: -4.638516902923584
    3. ' ' → logprob: -5.638516902923584
    4. ' !=' → logprob: -9.513517379760742
    5. '0' → logprob: -10.138517379760742
    6. ' =' → logprob: -11.013517379760742
    7. ':' → logprob: -11.013517379760742
    8. '=' → logprob: -11.138517379760742
    9. ')' → logprob: -11.763517379760742
    10. ' ===' → logprob: -12.138517379760742

Token 26: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6341622471809387
    2. ' ' → logprob: -0.7591622471809387
    3. '1' → logprob: -6.509162425994873
    4. '2' → logprob: -10.009161949157715
    5. ' A' → logprob: -11.884161949157715
    6. 'A' → logprob: -12.071661949157715
    7. '  ' → logprob: -12.759161949157715
    8. '   ' → logprob: -12.946661949157715
    9. '<|end|>' → logprob: -13.384161949157715
    10. ')' → logprob: -14.009161949157715

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22893841564655304
    2. '2' → logprob: -1.6039384603500366
    3. ' ' → logprob: -5.853938579559326
    4. '1' → logprob: -7.353938579559326
    5. '```' → logprob: -12.603938102722168
    6. 'A' → logprob: -12.978938102722168
    7. '   ' → logprob: -13.603938102722168
    8. '  ' → logprob: -14.416438102722168
    9. '3' → logprob: -14.478938102722168
    10. '==' → logprob: -14.728938102722168

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012303499970585108
    2. ' :' → logprob: -6.751230239868164
    3. ':
' → logprob: -10.376230239868164
    4. '):' → logprob: -11.251230239868164
    5. ':**' → logprob: -11.876230239868164
    6. '>:' → logprob: -13.501230239868164
    7. '   ' → logprob: -14.001230239868164
    8. ',' → logprob: -14.001230239868164
    9. '<|end|>' → logprob: -14.126230239868164
    10. ':

' → logprob: -14.251230239868164

Token 29: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7750263214111328
    2. ':' → logprob: -1.4000263214111328
    3. '    ' → logprob: -1.9000263214111328
    4. ' :' → logprob: -2.650026321411133
    5. '   ' → logprob: -3.400026321411133
    6. '       ' → logprob: -4.400026321411133
    7. '     ' → logprob: -5.025026321411133
    8. ' A' → logprob: -5.400026321411133
    9. '"' → logprob: -5.900026321411133
    10. ',' → logprob: -6.150026321411133

Token 30: ' B' (ID: 418)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6549234986305237
    2. 'print' → logprob: -1.029923439025879
    3. ' A' → logprob: -2.779923439025879
    4. '   ' → logprob: -3.654923439025879
    5. 'A' → logprob: -3.779923439025879
    6. ' ' → logprob: -4.904923439025879
    7. '    ' → logprob: -6.154923439025879
    8. ' B' → logprob: -7.029923439025879
    9. '       ' → logprob: -7.654923439025879
    10. ' for' → logprob: -7.904923439025879

Token 31: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.252402663230896
    2. '+=' → logprob: -2.2524027824401855
    3. ' -=' → logprob: -2.3774027824401855
    4. ' *=' → logprob: -4.0024027824401855
    5. '-=' → logprob: -5.8774027824401855
    6. ' =' → logprob: -6.3774027824401855
    7. '=' → logprob: -6.8774027824401855
    8. '-' → logprob: -7.3774027824401855
    9. '*=' → logprob: -8.377402305603027
    10. ' ' → logprob: -8.752402305603027

Token 32: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0006544163916260004
    2. ' A' → logprob: -7.500654220581055
    3. '1' → logprob: -9.375654220581055
    4. '   ' → logprob: -12.375654220581055
    5. 'B' → logprob: -12.500654220581055
    6. ' ' → logprob: -12.500654220581055
    7. 'a' → logprob: -13.500654220581055
    8. '	A' → logprob: -13.875654220581055
    9. '2' → logprob: -14.375654220581055
    10. '  ' → logprob: -14.750654220581055

Token 33: ' //' (ID: 602)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.13576030731201172
    2. ' else' → logprob: -2.5107603073120117
    3. '<|end|>' → logprob: -4.260760307312012
    4. '
' → logprob: -4.885760307312012
    5. 'print' → logprob: -5.135760307312012
    6. '   ' → logprob: -5.510760307312012
    7. '-' → logprob: -5.635760307312012
    8. '    
' → logprob: -5.760760307312012
    9. '1' → logprob: -6.510760307312012
    10. '*' → logprob: -7.135760307312012

Token 34: ' ' (ID: 220)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.281925767660141
    2. '2' → logprob: -1.4069257974624634
    3. '10' → logprob: -8.031926155090332
    4. '3' → logprob: -8.781926155090332
    5. '6' → logprob: -9.406926155090332
    6. ' B' → logprob: -9.781926155090332
    7. '100' → logprob: -9.781926155090332
    8. '4' → logprob: -10.531926155090332
    9. ' ' → logprob: -10.656926155090332
    10. '7' → logprob: -11.156926155090332

Token 35: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02396443486213684
    2. 'B' → logprob: -3.7739644050598145
    3. '10' → logprob: -7.3989644050598145
    4. '3' → logprob: -9.773964881896973
    5. '7' → logprob: -10.898964881896973
    6. ' ' → logprob: -11.398964881896973
    7. '6' → logprob: -12.148964881896973
    8. '100' → logprob: -12.148964881896973
    9. '5' → logprob: -13.273964881896973
    10. ' B' → logprob: -13.523964881896973

Token 36: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.073346495628357
    2. ' else' → logprob: -1.323346495628357
    3. '<|end|>' → logprob: -1.823346495628357
    4. ' ' → logprob: -2.3233466148376465
    5. 'else' → logprob: -3.5733466148376465
    6. '    ' → logprob: -3.5733466148376465
    7. ' 
' → logprob: -4.0733466148376465
    8. '       ' → logprob: -4.1983466148376465
    9. '
' → logprob: -4.4483466148376465
    10. '    
' → logprob: -4.6983466148376465

Token 37: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035718563944101334
    2. '<|end|>' → logprob: -4.5357184410095215
    3. '       ' → logprob: -4.7857184410095215
    4. ' ' → logprob: -5.1607184410095215
    5. ' else' → logprob: -5.2857184410095215
    6. '    
' → logprob: -6.0357184410095215
    7. '    ' → logprob: -7.2857184410095215
    8. 'else' → logprob: -7.7857184410095215
    9. '  ' → logprob: -8.03571891784668
    10. '	else' → logprob: -8.78571891784668

Token 38: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.08849996328353882
    2. ' A' → logprob: -2.5885000228881836
    3. '   ' → logprob: -5.213500022888184
    4. '       ' → logprob: -5.588500022888184
    5. 'B' → logprob: -8.713500022888184
    6. '1' → logprob: -9.963500022888184
    7. ' ' → logprob: -10.213500022888184
    8. ' B' → logprob: -10.588500022888184
    9. 'else' → logprob: -10.588500022888184
    10. ' else' → logprob: -10.963500022888184

Token 39: ' //' (ID: 602)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6477892398834229
    2. '//=' → logprob: -0.7727892398834229
    3. '-=' → logprob: -4.522789001464844
    4. ' //' → logprob: -6.272789001464844
    5. '//' → logprob: -6.897789001464844
    6. ' =' → logprob: -7.647789001464844
    7. '%=' → logprob: -7.772789001464844
    8. ' -=' → logprob: -8.397789001464844
    9. '-' → logprob: -9.522789001464844
    10. '+=' → logprob: -9.772789001464844

Token 40: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00018041854491457343
    2. '2' → logprob: -8.6251802444458
    3. ' ' → logprob: -14.1251802444458
    4. ' =' → logprob: -16.125181198120117
    5. '=}' → logprob: -17.375181198120117
    6. '4' → logprob: -17.750181198120117
    7. '/=' → logprob: -17.750181198120117
    8. '_' → logprob: -18.875181198120117
    9. '=#' → logprob: -18.875181198120117
    10. '3' → logprob: -18.875181198120117

Token 41: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015047440538182855
    2. ' ' → logprob: -6.501504898071289
    3. '10' → logprob: -13.376504898071289
    4. '3' → logprob: -15.376504898071289
    5. '1' → logprob: -15.501504898071289
    6. '   ' → logprob: -16.12650489807129
    7. '```' → logprob: -16.12650489807129
    8. '  ' → logprob: -16.50150489807129
    9. '4' → logprob: -17.31400489807129
    10. '=' → logprob: -17.68900489807129

Token 42: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023166877508629113
    2. ' ' → logprob: -8.375231742858887
    3. '10' → logprob: -14.750231742858887
    4. '3' → logprob: -15.125231742858887
    5. '1' → logprob: -16.12523078918457
    6. '4' → logprob: -17.00023078918457
    7. '```' → logprob: -17.00023078918457
    8. '２' → logprob: -17.25023078918457
    9. '   ' → logprob: -17.75023078918457
    10. '  ' → logprob: -17.75023078918457

Token 43: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.03952859714627266
    2. ' else' → logprob: -3.4145286083221436
    3. '   ' → logprob: -5.6645283699035645
    4. '```' → logprob: -6.9145283699035645
    5. '<|end|>' → logprob: -7.0395283699035645
    6. ' ' → logprob: -8.664528846740723
    7. ')' → logprob: -9.289528846740723
    8. 'A' → logprob: -9.789528846740723
    9. '#' → logprob: -9.914528846740723
    10. 'elif' → logprob: -10.289528846740723

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09571778774261475
    2. ':
' → logprob: -2.7207179069519043
    3. '       ' → logprob: -3.7207179069519043
    4. '   ' → logprob: -7.220717906951904
    5. '<|end|>' → logprob: -8.595717430114746
    6. 'B' → logprob: -9.595717430114746
    7. '```' → logprob: -9.720717430114746
    8. '):
' → logprob: -10.345717430114746
    9. ' B' → logprob: -10.720717430114746
    10. ':

' → logprob: -10.720717430114746

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.361416220664978
    2. 'A' → logprob: -2.1114163398742676
    3. ' A' → logprob: -2.6114163398742676
    4. 'B' → logprob: -2.9864163398742676
    5. '   ' → logprob: -3.3614163398742676
    6. ' B' → logprob: -3.9864163398742676
    7. 'K' → logprob: -6.486416339874268
    8. '```' → logprob: -6.736416339874268
    9. ' K' → logprob: -7.236416339874268
    10. '    ' → logprob: -7.736416339874268

Token 48: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.0030135957058519125
    2. 'B' → logprob: -6.253013610839844
    3. 'a' → logprob: -7.503013610839844
    4. ' A' → logprob: -8.003013610839844
    5. '       ' → logprob: -9.628013610839844
    6. 'K' → logprob: -9.753013610839844
    7. '   ' → logprob: -10.378013610839844
    8. '(A' → logprob: -11.128013610839844
    9. 'print' → logprob: -12.128013610839844
    10. '```' → logprob: -12.628013610839844

Token 49: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5780070424079895
    2. ' +=' → logprob: -0.8280070424079895
    3. ' //' → logprob: -6.703007221221924
    4. '=' → logprob: -7.953007221221924
    5. '//' → logprob: -8.703006744384766
    6. '//=' → logprob: -9.453006744384766
    7. ' -=' → logprob: -9.828006744384766
    8. ',' → logprob: -10.328006744384766
    9. '+' → logprob: -10.328006744384766
    10. '+=(' → logprob: -10.453006744384766

Token 50: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04859020933508873
    2. ' B' → logprob: -3.0485901832580566
    3. '   ' → logprob: -13.173590660095215
    4. '(B' → logprob: -15.048590660095215
    5. ' ' → logprob: -15.673590660095215
    6. 'b' → logprob: -15.798590660095215
    7. '	B' → logprob: -16.1735897064209
    8. '(' → logprob: -17.0485897064209
    9. 'A' → logprob: -17.1735897064209
    10. ' (' → logprob: -17.1735897064209

Token 51: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0018477243138477206
    2. ' //' → logprob: -7.001847743988037
    3. '1' → logprob: -7.376847743988037
    4. '```' → logprob: -9.251847267150879
    5. '2' → logprob: -9.501847267150879
    6. '`' → logprob: -10.126847267150879
    7. ''' → logprob: -10.501847267150879
    8. '"' → logprob: -10.876847267150879
    9. '//=' → logprob: -11.126847267150879
    10. '#' → logprob: -11.376847267150879

Token 52: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '20' → logprob: -16.750085830688477
    4. '1' → logprob: -16.750085830688477
    5. '10' → logprob: -17.250085830688477
    6. '3' → logprob: -17.750085830688477
    7. '   ' → logprob: -18.250085830688477
    8. '  ' → logprob: -18.375085830688477
    9. '２' → logprob: -20.187585830688477
    10. '0' → logprob: -20.250085830688477

Token 53: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. '20' → logprob: -13.62500286102295
    3. ' ' → logprob: -13.87500286102295
    4. '10' → logprob: -15.12500286102295
    5. '1' → logprob: -15.62500286102295
    6. '3' → logprob: -17.000001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '19' → logprob: -19.125001907348633
    9. '  ' → logprob: -19.250001907348633
    10. '4' → logprob: -19.375001907348633

Token 54: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002519657602533698
    2. '```' → logprob: -6.752519607543945
    3. 'B' → logprob: -7.252519607543945
    4. '2' → logprob: -8.002519607543945
    5. ' B' → logprob: -9.377519607543945
    6. '   ' → logprob: -9.627519607543945
    7. '`' → logprob: -9.752519607543945
    8. ' ' → logprob: -10.627519607543945
    9. '``' → logprob: -10.752519607543945
    10. '1' → logprob: -11.127519607543945

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017310241237282753
    2. '```' → logprob: -4.89231014251709
    3. 'B' → logprob: -5.01731014251709
    4. ' B' → logprob: -5.89231014251709
    5. ' ' → logprob: -9.51731014251709
    6. '``' → logprob: -9.51731014251709
    7. '   ' → logprob: -9.51731014251709
    8. '`' → logprob: -10.76731014251709
    9. '        
' → logprob: -12.39231014251709
    10. ' ' → logprob: -12.51731014251709

Token 56: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.00011355629976605996
    2. ' B' → logprob: -9.125113487243652
    3. '   ' → logprob: -12.875113487243652
    4. '```' → logprob: -13.250113487243652
    5. '       ' → logprob: -16.25011444091797
    6. 'b' → logprob: -16.50011444091797
    7. '``' → logprob: -19.12511444091797
    8. '  ' → logprob: -19.12511444091797
    9. '    ' → logprob: -19.37511444091797
    10. ' ' → logprob: -19.62511444091797

Token 57: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.08490617573261261
    2. ' //' → logprob: -3.0849061012268066
    3. '//' → logprob: -3.3349061012268066
    4. '=' → logprob: -10.084906578063965
    5. '/=' → logprob: -12.584906578063965
    6. ' ' → logprob: -13.334906578063965
    7. '```' → logprob: -13.709906578063965
    8. '+=' → logprob: -14.959906578063965
    9. '-=' → logprob: -15.459906578063965
    10. '%=' → logprob: -15.584906578063965

Token 58: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.719917630311102e-05
    2. '2' → logprob: -9.500077247619629
    3. '/=' → logprob: -13.375077247619629
    4. ' ' → logprob: -15.500077247619629
    5. '=/' → logprob: -15.750077247619629
    6. ' =' → logprob: -15.750077247619629
    7. '4' → logprob: -17.000076293945312
    8. '=}' → logprob: -17.625076293945312
    9. '%=' → logprob: -17.750076293945312
    10. '=
' → logprob: -17.750076293945312

Token 59: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023178798437584192
    2. ' ' → logprob: -8.375231742858887
    3. '   ' → logprob: -13.875231742858887
    4. '```' → logprob: -16.375232696533203
    5. '  ' → logprob: -16.500232696533203
    6. '       ' → logprob: -16.750232696533203
    7. '           ' → logprob: -17.875232696533203
    8. '    ' → logprob: -18.000232696533203
    9. '２' → logprob: -18.625232696533203
    10. '۲' → logprob: -18.625232696533203

Token 60: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.000001907348633
    4. '```' → logprob: -16.375001907348633
    5. '  ' → logprob: -18.750001907348633
    6. '۲' → logprob: -19.062501907348633
    7. '２' → logprob: -19.062501907348633
    8. '       ' → logprob: -20.125001907348633
    9. '1' → logprob: -20.250001907348633
    10. '`' → logprob: -20.500001907348633

Token 61: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005734313745051622
    2. '<|end|>' → logprob: -6.130734443664551
    3. '```' → logprob: -6.130734443664551
    4. '#' → logprob: -7.755734443664551
    5. '
' → logprob: -7.755734443664551
    6. ' print' → logprob: -8.13073444366455
    7. ')' → logprob: -10.00573444366455
    8. '\n' → logprob: -10.50573444366455
    9. '(print' → logprob: -10.50573444366455
    10. '#print' → logprob: -10.63073444366455

Token 62: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08611097186803818
    2. '<|end|>' → logprob: -3.086111068725586
    3. '```' → logprob: -3.586111068725586
    4. '#' → logprob: -5.086111068725586
    5. ' print' → logprob: -7.336111068725586
    6. '\n' → logprob: -7.711111068725586
    7. 'A' → logprob: -7.961111068725586
    8. '
' → logprob: -8.211111068725586
    9. ')' → logprob: -8.461111068725586
    10. '[' → logprob: -8.586111068725586

Token 63: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007846282795071602
    2. '(A' → logprob: -5.007846355438232
    3. '(B' → logprob: -7.257846355438232
    4. '()' → logprob: -7.882846355438232
    5. '((' → logprob: -10.382845878601074
    6. '('' → logprob: -12.007845878601074
    7. '(`' → logprob: -12.757845878601074
    8. '(a' → logprob: -13.007845878601074
    9. '(
' → logprob: -13.882845878601074
    10. '(sum' → logprob: -14.007845878601074

Token 64: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.735893965815194e-05
    2. ',' → logprob: -11.250017166137695
    3. '+' → logprob: -13.500017166137695
    4. ',B' → logprob: -14.250017166137695
    5. '))' → logprob: -14.625017166137695
    6. '+B' → logprob: -15.000017166137695
    7. ',)' → logprob: -15.375017166137695
    8. '),' → logprob: -15.375017166137695
    9. '`)' → logprob: -15.625017166137695
    10. ')
' → logprob: -16.000017166137695

Token 65: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.47892627120018005
    2. 'B' → logprob: -0.9789263010025024
    3. ''' → logprob: -5.978926181793213
    4. ')' → logprob: -6.228926181793213
    5. ' ' → logprob: -8.978926658630371
    6. ' )' → logprob: -9.103926658630371
    7. '`' → logprob: -9.853926658630371
    8. '"' → logprob: -10.478926658630371
    9. '```' → logprob: -12.103926658630371
    10. ' ' → logprob: -13.603926658630371

Token 66: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. '))' → logprob: -16.625
    3. ')`' → logprob: -16.625
    4. ' )' → logprob: -18.125
    5. ')}' → logprob: -18.75
    6. ')**' → logprob: -19.125
    7. '),' → logprob: -19.25
    8. ')#' → logprob: -19.25
    9. '#' → logprob: -19.625
    10. '`)' → logprob: -20.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 64
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 55
Précision stricte (1ère position): 29.69%
Précision adaptée (1ère position): 35.94%
Précision (top 10): 85.94%
================================================================================
