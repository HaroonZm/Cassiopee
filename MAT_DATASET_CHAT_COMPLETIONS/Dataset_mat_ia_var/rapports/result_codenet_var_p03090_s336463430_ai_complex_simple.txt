================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add, mul
from itertools import combinations, product

n = int(input())

# Première partie
def f(k):
    return ((k - 1) * (k - 2) + (k - 1)) // 2

def g(k):
    return k * (k - 2) // 2

actions = [lambda x: print(f(x)), lambda x: print(g(x))]
[actions[(1 - n % 2)](n)]

# Deuxième partie
S = set(combinations(range(1, n + 1), 2))
excl = set(filter(lambda pair: sum(pair) == n - 2 + (0 if n % 2 else 1) + 2, S))
included = S - excl
[list(map(lambda pair: print(*pair), sorted(included)))]
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.12712286412715912
    2. 'partial' → logprob: -2.6271228790283203
    3. ' wraps' → logprob: -3.6271228790283203
    4. 'reduce' → logprob: -4.00212287902832
    5. 'l' → logprob: -6.75212287902832
    6. ' partial' → logprob: -7.62712287902832
    7. 'cached' → logprob: -9.12712287902832
    8. 'cache' → logprob: -9.25212287902832
    9. '```' → logprob: -9.37712287902832
    10. 'cmp' → logprob: -9.37712287902832

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03611566498875618
    2. '(lambda' → logprob: -3.4111156463623047
    3. '.' → logprob: -6.786115646362305
    4. ' (' → logprob: -7.786115646362305
    5. ',' → logprob: -8.036115646362305
    6. 'lambda' → logprob: -9.036115646362305
    7. '```' → logprob: -9.286115646362305
    8. 'a' → logprob: -9.536115646362305
    9. ''' → logprob: -10.036115646362305
    10. '\' → logprob: -10.286115646362305

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.032073184847831726
    2. 'def' → logprob: -4.157073020935059
    3. '\' → logprob: -4.657073020935059
    4. ' ' → logprob: -6.032073020935059
    5. '(
' → logprob: -6.907073020935059
    6. ',' → logprob: -7.157073020935059
    7. '(lambda' → logprob: -7.907073020935059
    8. '```' → logprob: -8.282073020935059
    9. ' (' → logprob: -8.407073020935059
    10. 'd' → logprob: -8.657073020935059

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.1675146520137787
    2. ' itertools' → logprob: -2.2925145626068115
    3. ' math' → logprob: -3.9175145626068115
    4. ' collections' → logprob: -3.9175145626068115
    5. 'operator' → logprob: -4.417514801025391
    6. 'collections' → logprob: -7.792514801025391
    7. 'math' → logprob: -8.04251480102539
    8. ' typing' → logprob: -8.04251480102539
    9. ' os' → logprob: -8.66751480102539
    10. ' ' → logprob: -9.66751480102539

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06862302869558334
    2. 'import' → logprob: -2.8186230659484863
    3. '.' → logprob: -5.193623065948486
    4. ' ' → logprob: -7.068623065948486
    5. '.import' → logprob: -9.693622589111328
    6. ' .' → logprob: -9.693622589111328
    7. '	import' → logprob: -10.068622589111328
    8. '_import' → logprob: -10.943622589111328
    9. '<|end|>' → logprob: -11.193622589111328
    10. '```' → logprob: -12.193622589111328

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.2259282022714615
    2. ' import' → logprob: -1.9759281873703003
    3. ' mul' → logprob: -3.60092830657959
    4. 'add' → logprob: -3.97592830657959
    5. ' ' → logprob: -4.35092830657959
    6. 'import' → logprob: -5.97592830657959
    7. 'mul' → logprob: -6.60092830657959
    8. ' item' → logprob: -8.10092830657959
    9. ' icon' → logprob: -9.35092830657959
    10. ' ad' → logprob: -10.10092830657959

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5358005166053772
    2. '\n' → logprob: -1.5358004570007324
    3. '\' → logprob: -2.4108004570007324
    4. '(
' → logprob: -2.7858004570007324
    5. ',' → logprob: -4.910800457000732
    6. 'newline' → logprob: -5.160800457000732
    7. 'def' → logprob: -5.285800457000732
    8. 'result' → logprob: -5.785800457000732
    9. '
' → logprob: -5.785800457000732
    10. '#' → logprob: -6.035800457000732

Token 10: ' mul' (ID: 9975)
  Prédit: ' mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.7084506154060364
    2. 'mul' → logprob: -0.7084506154060364
    3. 'sub' → logprob: -4.708450794219971
    4. ' sub' → logprob: -5.208450794219971
    5. ' i' → logprob: -8.208450317382812
    6. 'i' → logprob: -9.083450317382812
    7. '```' → logprob: -9.333450317382812
    8. 'getitem' → logprob: -9.583450317382812
    9. 'item' → logprob: -10.708450317382812
    10. ' ' → logprob: -10.833450317382812

Token 11: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06711427122354507
    2. ',' → logprob: -3.6921143531799316
    3. '(
' → logprob: -3.8171143531799316
    4. '\' → logprob: -5.442114353179932
    5. '#' → logprob: -5.442114353179932
    6. '\n' → logprob: -5.942114353179932
    7. 'def' → logprob: -5.942114353179932
    8. '```' → logprob: -7.192114353179932
    9. '(

' → logprob: -7.567114353179932
    10. '`' → logprob: -7.692114353179932

Token 12: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12840749323368073
    2. '(
' → logprob: -2.5034074783325195
    3. '\' → logprob: -4.6284074783325195
    4. 'def' → logprob: -5.1284074783325195
    5. '\n' → logprob: -5.7534074783325195
    6. 'a' → logprob: -5.8784074783325195
    7. '#' → logprob: -5.8784074783325195
    8. ',' → logprob: -6.0034074783325195
    9. '[' → logprob: -6.0034074783325195
    10. 'result' → logprob: -6.1284074783325195

Token 13: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7036314010620117
    2. ' itertools' → logprob: -0.7036314010620117
    3. 'math' → logprob: -4.828631401062012
    4. ' ' → logprob: -7.953631401062012
    5. ' random' → logprob: -8.078631401062012
    6. ' collections' → logprob: -8.078631401062012
    7. 'it' → logprob: -8.078631401062012
    8. ' typing' → logprob: -8.328631401062012
    9. ' functools' → logprob: -8.328631401062012
    10. ' ast' → logprob: -8.828631401062012

Token 14: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7432532906532288
    2. 'import' → logprob: -0.7432532906532288
    3. ' import' → logprob: -3.118253231048584
    4. '.import' → logprob: -5.618253231048584
    5. ' .' → logprob: -7.368253231048584
    6. '.im' → logprob: -8.868253707885742
    7. '	import' → logprob: -9.618253707885742
    8. '<|end|>' → logprob: -10.493253707885742
    9. '_import' → logprob: -10.868253707885742
    10. '.groupby' → logprob: -11.243253707885742

Token 15: ' combinations' (ID: 43835)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.9728806018829346
    2. 'product' → logprob: -1.7228806018829346
    3. 'com' → logprob: -1.9728806018829346
    4. 'count' → logprob: -2.3478806018829346
    5. 'chain' → logprob: -2.4728806018829346
    6. 'cycle' → logprob: -2.7228806018829346
    7. 'per' → logprob: -3.5978806018829346
    8. ' accumulate' → logprob: -4.0978803634643555
    9. 'is' → logprob: -5.5978803634643555
    10. ' chain' → logprob: -6.2228803634643555

Token 16: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11918846517801285
    2. 'def' → logprob: -2.6191885471343994
    3. '(
' → logprob: -3.6191885471343994
    4. '\' → logprob: -5.61918830871582
    5. ',' → logprob: -5.99418830871582
    6. '```' → logprob: -6.24418830871582
    7. '#' → logprob: -7.11918830871582
    8. '(

' → logprob: -7.49418830871582
    9. 'print' → logprob: -7.86918830871582
    10. '`' → logprob: -7.86918830871582

Token 17: ' product' (ID: 1888)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.6312426328659058
    2. ' permutations' → logprob: -1.5062426328659058
    3. 'chain' → logprob: -2.6312427520751953
    4. 'product' → logprob: -2.7562427520751953
    5. ' chain' → logprob: -3.0062427520751953
    6. 'com' → logprob: -3.6312427520751953
    7. ' product' → logprob: -4.131242752075195
    8. 'count' → logprob: -5.256242752075195
    9. 'acc' → logprob: -5.631242752075195
    10. ' accumulate' → logprob: -6.131242752075195

Token 18: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.050232112407684326
    2. '(
' → logprob: -3.300232172012329
    3. 'def' → logprob: -5.17523193359375
    4. '\' → logprob: -6.42523193359375
    5. '#' → logprob: -6.55023193359375
    6. ',' → logprob: -7.55023193359375
    7. '\n' → logprob: -7.67523193359375
    8. '```' → logprob: -8.05023193359375
    9. 'd' → logprob: -8.17523193359375
    10. 'a' → logprob: -8.30023193359375

Token 19: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33149126172065735
    2. '#' → logprob: -2.081491231918335
    3. 'def' → logprob: -2.581491231918335
    4. '(
' → logprob: -3.706491231918335
    5. 'a' → logprob: -3.956491231918335
    6. 'd' → logprob: -4.331491470336914
    7. '[' → logprob: -5.581491470336914
    8. '`' → logprob: -5.831491470336914
    9. '\' → logprob: -5.956491470336914
    10. '*' → logprob: -6.206491470336914

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47881439328193665
    2. ' ' → logprob: -1.3538143634796143
    3. '=' → logprob: -2.3538143634796143
    4. 'u' → logprob: -4.478814601898193
    5. '  ' → logprob: -5.478814601898193
    6. ',' → logprob: -5.603814601898193
    7. '_' → logprob: -5.728814601898193
    8. '.' → logprob: -6.103814601898193
    9. '   ' → logprob: -7.353814601898193
    10. 'a' → logprob: -8.228814125061035

Token 21: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004843646194785833
    2. '5' → logprob: -5.629843711853027
    3. '10' → logprob: -7.254843711853027
    4. '4' → logprob: -8.504843711853027
    5. '3' → logprob: -8.879843711853027
    6. 'int' → logprob: -10.254843711853027
    7. '0' → logprob: -10.254843711853027
    8. '1' → logprob: -10.379843711853027
    9. ' int' → logprob: -10.504843711853027
    10. 'range' → logprob: -11.004843711853027

Token 22: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010236098431050777
    2. '(input' → logprob: -4.8852362632751465
    3. '(n' → logprob: -6.1352362632751465
    4. '()' → logprob: -8.510235786437988
    5. '('' → logprob: -9.385235786437988
    6. ' (' → logprob: -9.885235786437988
    7. '<|end|>' → logprob: -10.135235786437988
    8. '(`' → logprob: -11.760235786437988
    9. 'input' → logprob: -11.760235786437988
    10. '(user' → logprob: -12.010235786437988

Token 23: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5410045385360718
    2. ')' → logprob: -1.2910045385360718
    3. '()' → logprob: -2.2910046577453613
    4. '())' → logprob: -3.6660046577453613
    5. '('' → logprob: -4.291004657745361
    6. '(
' → logprob: -7.041004657745361
    7. '')' → logprob: -7.791004657745361
    8. '(()' → logprob: -8.041004180908203
    9. '`)' → logprob: -8.666004180908203
    10. '(

' → logprob: -9.041004180908203

Token 24: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8767241835594177
    2. 's' → logprob: -2.2517242431640625
    3. 'for' → logprob: -2.3767242431640625
    4. 'nums' → logprob: -2.6267242431640625
    5. 'numbers' → logprob: -2.6267242431640625
    6. 'a' → logprob: -2.8767242431640625
    7. 'lst' → logprob: -4.0017242431640625
    8. 'res' → logprob: -4.1267242431640625
    9. 'count' → logprob: -4.1267242431640625
    10. 'results' → logprob: -4.1267242431640625

Token 25: ' Première' (ID: 179764)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3355207443237305
    2. 'nums' → logprob: -1.7105207443237305
    3. ' numbers' → logprob: -1.9605207443237305
    4. ' nums' → logprob: -2.0855207443237305
    5. ' for' → logprob: -2.9605207443237305
    6. 'numbers' → logprob: -2.9605207443237305
    7. 'arr' → logprob: -3.4605207443237305
    8. 'lst' → logprob: -3.9605207443237305
    9. ' elements' → logprob: -4.0855207443237305
    10. 'elements' → logprob: -4.0855207443237305

Token 26: ' partie' (ID: 22139)
  Prédit: ' étape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étape' → logprob: -1.0522403717041016
    2. '_' → logprob: -1.9272403717041016
    3. ' partie' → logprob: -2.6772403717041016
    4. ' ligne' → logprob: -2.9272403717041016
    5. 'part' → logprob: -3.1772403717041016
    6. ' step' → logprob: -3.4272403717041016
    7. ' combinaison' → logprob: -3.4272403717041016
    8. ' ' → logprob: -3.4272403717041016
    9. 'ligne' → logprob: -3.6772403717041016
    10. ' comb' → logprob: -3.9272403717041016

Token 27: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.793705403804779
    2. 'result' → logprob: -2.043705463409424
    3. ':' → logprob: -2.543705463409424
    4. ')' → logprob: -2.793705463409424
    5. 's' → logprob: -2.918705463409424
    6. 'for' → logprob: -3.043705463409424
    7. 'n' → logprob: -3.043705463409424
    8. '```' → logprob: -4.043705463409424
    9. '
' → logprob: -4.168705463409424
    10. 'x' → logprob: -4.293705463409424

Token 28: 'def' (ID: 1314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7238116264343262
    2. 'result' → logprob: -1.7238116264343262
    3. 'for' → logprob: -1.7238116264343262
    4. 'sum' → logprob: -3.598811626434326
    5. 'a' → logprob: -3.848811626434326
    6. 'res' → logprob: -4.723811626434326
    7. 'factor' → logprob: -4.848811626434326
    8. '#' → logprob: -4.973811626434326
    9. '
' → logprob: -5.098811626434326
    10. 'total' → logprob: -5.223811626434326

Token 29: ' f' (ID: 285)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.8805156350135803
    2. ' factor' → logprob: -1.1305155754089355
    3. ' f' → logprob: -1.6305155754089355
    4. ' add' → logprob: -3.7555155754089355
    5. ' sum' → logprob: -4.7555155754089355
    6. ' ' → logprob: -5.5055155754089355
    7. ' somme' → logprob: -5.5055155754089355
    8. 'factor' → logprob: -5.6305155754089355
    9. ' calculate' → logprob: -5.8805155754089355
    10. ' calcul' → logprob: -6.2555155754089355

Token 30: '(k' (ID: 12125)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.3643317222595215
    2. '(' → logprob: -1.9893317222595215
    3. 'i' → logprob: -2.2393317222595215
    4. 'a' → logprob: -2.3643317222595215
    5. '_' → logprob: -2.7393317222595215
    6. 'n' → logprob: -3.1143317222595215
    7. '():' → logprob: -3.1143317222595215
    8. 'actor' → logprob: -3.3643317222595215
    9. 'u' → logprob: -3.4893317222595215
    10. 'ac' → logprob: -3.8643317222595215

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2054869830608368
    2. ',' → logprob: -1.7054870128631592
    3. ')' → logprob: -5.58048677444458
    4. ':' → logprob: -8.705487251281738
    5. ' ):' → logprob: -10.330487251281738
    6. ',k' → logprob: -10.705487251281738
    7. ' ,' → logprob: -11.580487251281738
    8. '):
' → logprob: -11.705487251281738
    9. 'a' → logprob: -12.080487251281738
    10. '_' → logprob: -12.205487251281738

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6782882213592529
    2. ':' → logprob: -1.303288221359253
    3. ' ' → logprob: -2.553288221359253
    4. ' :' → logprob: -3.428288221359253
    5. ' return' → logprob: -3.428288221359253
    6. '(' → logprob: -3.678288221359253
    7. 'return' → logprob: -4.428288459777832
    8. ' if' → logprob: -4.678288459777832
    9. '):' → logprob: -5.178288459777832
    10. ')' → logprob: -5.178288459777832

Token 33: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0970630645751953
    2. ' ' → logprob: -1.3470630645751953
    3. 'r' → logprob: -1.5970630645751953
    4. 'return' (adapté à ' return') → logprob: -2.8470630645751953
    5. ' if' → logprob: -3.3470630645751953
    6. '   ' → logprob: -3.4720630645751953
    7. 'if' → logprob: -4.097063064575195
    8. '(' → logprob: -4.097063064575195
    9. ' r' → logprob: -4.972063064575195
    10. ')' → logprob: -5.347063064575195

Token 34: ' ((' (ID: 3536)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5219064354896545
    2. 'k' → logprob: -1.3969063758850098
    3. ' sum' → logprob: -3.3969063758850098
    4. '1' → logprob: -3.7719063758850098
    5. 'sum' → logprob: -4.02190637588501
    6. 'mul' → logprob: -4.14690637588501
    7. ' ' → logprob: -4.27190637588501
    8. 'reduce' → logprob: -4.52190637588501
    9. ' mul' → logprob: -4.77190637588501
    10. ' reduce' → logprob: -4.77190637588501

Token 35: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.24243928492069244
    2. 'n' → logprob: -2.4924392700195312
    3. '-' → logprob: -3.2424392700195312
    4. '1' → logprob: -3.4924392700195312
    5. '2' → logprob: -3.6174392700195312
    6. '(k' → logprob: -4.867439270019531
    7. 'mul' → logprob: -4.867439270019531
    8. 'add' → logprob: -4.992439270019531
    9. 'lambda' → logprob: -5.742439270019531
    10. '(n' → logprob: -5.992439270019531

Token 36: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.071732997894287
    2. ' *' → logprob: -1.446732997894287
    3. ' +' → logprob: -1.446732997894287
    4. '*' → logprob: -2.571732997894287
    5. '**' → logprob: -3.196732997894287
    6. '-' → logprob: -4.071732997894287
    7. ')' → logprob: -4.196732997894287
    8. ' -' → logprob: -4.571732997894287
    9. ' **' → logprob: -4.821732997894287
    10. ' )' → logprob: -4.946732997894287

Token 37: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3494836091995239
    2. ' ' → logprob: -1.224483609199524
    3. '2' → logprob: -7.224483489990234
    4. '3' → logprob: -9.099483489990234
    5. ' n' → logprob: -9.724483489990234
    6. '0' → logprob: -10.536983489990234
    7. '4' → logprob: -11.036983489990234
    8. '5' → logprob: -11.099483489990234
    9. '-' → logprob: -11.161983489990234
    10. 'n' → logprob: -11.349483489990234

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005939463619142771
    2. '2' → logprob: -5.630939483642578
    3. '3' → logprob: -7.130939483642578
    4. ' ' → logprob: -8.005939483642578
    5. '5' → logprob: -8.380939483642578
    6. '4' → logprob: -8.505939483642578
    7. 'n' → logprob: -8.880939483642578
    8. '(n' → logprob: -9.380939483642578
    9. '10' → logprob: -9.443439483642578
    10. 'k' → logprob: -9.443439483642578

Token 39: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01698881760239601
    2. ')**' → logprob: -4.266988754272461
    3. ')*' → logprob: -6.266988754272461
    4. ' )' → logprob: -7.391988754272461
    5. ')*(' → logprob: -9.016988754272461
    6. ')//' → logprob: -9.891988754272461
    7. ')%' → logprob: -10.641988754272461
    8. ')!' → logprob: -10.891988754272461
    9. ')#' → logprob: -11.266988754272461
    10. '))' → logprob: -11.266988754272461

Token 40: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08640427142381668
    2. ')*' → logprob: -3.086404323577881
    3. ')**' → logprob: -3.586404323577881
    4. ' )' → logprob: -5.086404323577881
    5. ')*(' → logprob: -6.336404323577881
    6. ')%' → logprob: -7.711404323577881
    7. '*' → logprob: -8.586403846740723
    8. ' +' → logprob: -9.086403846740723
    9. ' *' → logprob: -9.336403846740723
    10. '+' → logprob: -9.336403846740723

Token 41: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.37523311376571655
    2. ' k' → logprob: -2.3752331733703613
    3. '(k' → logprob: -2.5002331733703613
    4. '2' → logprob: -2.7502331733703613
    5. ' (' → logprob: -3.7502331733703613
    6. ' ' → logprob: -4.500233173370361
    7. '(n' → logprob: -4.625233173370361
    8. '(' → logprob: -4.750233173370361
    9. '3' → logprob: -5.625233173370361
    10. 'n' → logprob: -5.625233173370361

Token 42: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09624802321195602
    2. ' k' → logprob: -3.221247911453247
    3. 'n' → logprob: -4.096248149871826
    4. '2' → logprob: -4.346248149871826
    5. ' n' → logprob: -5.221248149871826
    6. ' (' → logprob: -5.596248149871826
    7. '(k' → logprob: -5.596248149871826
    8. '3' → logprob: -6.096248149871826
    9. '(n' → logprob: -6.221248149871826
    10. '(' → logprob: -6.346248149871826

Token 43: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7812631130218506
    2. ' +' → logprob: -0.9062631130218506
    3. '+' → logprob: -3.1562631130218506
    4. '-' → logprob: -3.1562631130218506
    5. ')' → logprob: -3.6562631130218506
    6. ' )' → logprob: -3.9062631130218506
    7. ' ' → logprob: -5.90626335144043
    8. '*' → logprob: -7.28126335144043
    9. ' ))' → logprob: -7.28126335144043
    10. ' *' → logprob: -7.28126335144043

Token 44: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20641683042049408
    2. '2' → logprob: -1.7064168453216553
    3. ' ' → logprob: -5.456416606903076
    4. '3' → logprob: -7.831416606903076
    5. ')' → logprob: -9.081417083740234
    6. '4' → logprob: -9.581417083740234
    7. '0' → logprob: -10.018917083740234
    8. '```' → logprob: -11.331417083740234
    9. 'k' → logprob: -11.393917083740234
    10. '5' → logprob: -11.581417083740234

Token 45: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03914545103907585
    2. '2' → logprob: -3.2891454696655273
    3. '3' → logprob: -7.539145469665527
    4. 'k' → logprob: -9.039145469665527
    5. 'n' → logprob: -9.101645469665527
    6. '4' → logprob: -9.351645469665527
    7. ' ' → logprob: -9.664145469665527
    8. '(n' → logprob: -10.539145469665527
    9. '0' → logprob: -10.601645469665527
    10. '6' → logprob: -10.851645469665527

Token 46: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09300870448350906
    2. ' )' → logprob: -2.5930087566375732
    3. ')//' → logprob: -5.343008518218994
    4. '))' → logprob: -6.093008518218994
    5. ' //' → logprob: -6.218008518218994
    6. ' *' → logprob: -6.218008518218994
    7. '//' → logprob: -7.218008518218994
    8. ' ))' → logprob: -7.343008518218994
    9. ')))' → logprob: -7.968008518218994
    10. ')/' → logprob: -7.968008518218994

Token 47: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11391963064670563
    2. ' )' → logprob: -2.613919734954834
    3. ' *' → logprob: -3.863919734954834
    4. ' //' → logprob: -5.488919734954834
    5. '*' → logprob: -5.988919734954834
    6. '//' → logprob: -6.238919734954834
    7. ')//' → logprob: -6.363919734954834
    8. ' +' → logprob: -6.613919734954834
    9. ' -' → logprob: -7.738919734954834
    10. ' ' → logprob: -7.863919734954834

Token 48: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48185715079307556
    2. '1' → logprob: -1.981857180595398
    3. ' k' → logprob: -2.3568570613861084
    4. ' (' → logprob: -2.3568570613861084
    5. '2' → logprob: -3.8568570613861084
    6. ' n' → logprob: -4.6068572998046875
    7. '3' → logprob: -4.6068572998046875
    8. 'k' → logprob: -5.6068572998046875
    9. '4' → logprob: -5.9818572998046875
    10. ')' → logprob: -6.6068572998046875

Token 49: 'k' (ID: 74)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1736747026443481
    2. ' k' → logprob: -1.1736747026443481
    3. ' (' → logprob: -2.1736745834350586
    4. 'k' → logprob: -2.5486745834350586
    5. ' n' → logprob: -2.7986745834350586
    6. '2' → logprob: -3.0486745834350586
    7. '1' → logprob: -3.5486745834350586
    8. '3' → logprob: -3.6736745834350586
    9. '(k' → logprob: -4.798674583435059
    10. 'n' → logprob: -4.923674583435059

Token 50: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.032670315355062485
    2. ' *' → logprob: -4.782670497894287
    3. '-' → logprob: -5.032670497894287
    4. ' ' → logprob: -5.032670497894287
    5. ' )' → logprob: -5.532670497894287
    6. ' +' → logprob: -5.657670497894287
    7. ')' → logprob: -6.157670497894287
    8. '*' → logprob: -7.657670497894287
    9. '**' → logprob: -9.157670021057129
    10. '+' → logprob: -9.282670021057129

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8398876786231995
    2. '2' → logprob: -1.5898876190185547
    3. ' ' → logprob: -1.5898876190185547
    4. '3' → logprob: -1.8398876190185547
    5. '4' → logprob: -7.089887619018555
    6. ')' → logprob: -8.589887619018555
    7. '0' → logprob: -9.027387619018555
    8. ' n' → logprob: -9.714887619018555
    9. '```' → logprob: -9.839887619018555
    10. '5' → logprob: -10.214887619018555

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1533593088388443
    2. '3' → logprob: -2.5283594131469727
    3. '2' → logprob: -2.9033594131469727
    4. '4' → logprob: -5.528359413146973
    5. '0' → logprob: -6.028359413146973
    6. '5' → logprob: -7.778359413146973
    7. ' ' → logprob: -8.028359413146973
    8. '6' → logprob: -9.528359413146973
    9. '7' → logprob: -9.778359413146973
    10. '-' → logprob: -10.278359413146973

Token 53: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02005617879331112
    2. ' )' → logprob: -4.395056247711182
    3. '))' → logprob: -5.145056247711182
    4. ')*' → logprob: -8.020055770874023
    5. ')**' → logprob: -8.020055770874023
    6. ' ))' → logprob: -8.145055770874023
    7. '*' → logprob: -8.895055770874023
    8. ')))' → logprob: -9.020055770874023
    9. ' *' → logprob: -9.270055770874023
    10. '**' → logprob: -9.395055770874023

Token 54: ' //' (ID: 602)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0031184181571006775
    2. '1' → logprob: -6.128118515014648
    3. '3' → logprob: -7.628118515014648
    4. ' ' → logprob: -7.753118515014648
    5. '6' → logprob: -11.628118515014648
    6. '4' → logprob: -12.003118515014648
    7. 'k' → logprob: -13.878118515014648
    8. '12' → logprob: -14.503118515014648
    9. '5' → logprob: -16.25311851501465
    10. '9' → logprob: -16.75311851501465

Token 56: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002054500626400113
    2. '1' → logprob: -6.252054691314697
    3. '3' → logprob: -9.377054214477539
    4. ' ' → logprob: -10.252054214477539
    5. '4' → logprob: -12.627054214477539
    6. '6' → logprob: -13.627054214477539
    7. 'k' → logprob: -14.627054214477539
    8. '12' → logprob: -15.002054214477539
    9. '5' → logprob: -16.25205421447754
    10. '10' → logprob: -16.56455421447754

Token 57: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6925514936447144
    2. '<|end|>' → logprob: -1.0675514936447144
    3. '*' → logprob: -2.692551612854004
    4. ')' → logprob: -3.317551612854004
    5. '+' → logprob: -3.817551612854004
    6. '\n' → logprob: -4.567551612854004
    7. '<|end|>' → logprob: -5.567551612854004
    8. '\' → logprob: -5.817551612854004
    9. '

' → logprob: -5.942551612854004
    10. '```' → logprob: -6.442551612854004

Token 58: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8422926664352417
    2. '*' → logprob: -1.3422926664352417
    3. '+' → logprob: -1.9672926664352417
    4. '<|end|>' → logprob: -2.3422927856445312
    5. '#' → logprob: -3.4672927856445312
    6. ':' → logprob: -4.842292785644531
    7. '
' → logprob: -5.342292785644531
    8. ' ' → logprob: -5.467292785644531
    9. '(' → logprob: -5.467292785644531
    10. 'n' → logprob: -5.717292785644531

Token 59: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.15865260362625122
    2. ' f' → logprob: -2.1586525440216064
    3. 'g' → logprob: -3.6586525440216064
    4. 'f' → logprob: -6.4086527824401855
    5. ' s' → logprob: -7.1586527824401855
    6. ' n' → logprob: -7.4086527824401855
    7. ' k' → logprob: -7.9086527824401855
    8. '_g' → logprob: -8.408652305603027
    9. 's' → logprob: -8.533652305603027
    10. '(k' → logprob: -8.908652305603027

Token 60: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0007694864762015641
    2. '(' → logprob: -7.87576961517334
    3. '(n' → logprob: -7.87576961517334
    4. '(x' → logprob: -12.25076961517334
    5. ' (' → logprob: -12.87576961517334
    6. '(m' → logprob: -14.75076961517334
    7. '(a' → logprob: -14.87576961517334
    8. '(s' → logprob: -15.12576961517334
    9. '(j' → logprob: -15.25076961517334
    10. '(i' → logprob: -15.25076961517334

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -8.125210297293961e-05
    2. ')' → logprob: -10.250081062316895
    3. '):
' → logprob: -10.500081062316895
    4. '(k' → logprob: -11.250081062316895
    5. ' ):' → logprob: -12.750081062316895
    6. ':' → logprob: -14.000081062316895
    7. '):
' → logprob: -15.125081062316895
    8. ''):' → logprob: -15.750081062316895
    9. ')):' → logprob: -15.875081062316895
    10. '():' → logprob: -15.875081062316895

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14953097701072693
    2. ' return' → logprob: -2.6495308876037598
    3. ' k' → logprob: -3.6495308876037598
    4. '(k' → logprob: -4.14953088760376
    5. 'return' → logprob: -4.52453088760376
    6. 'k' → logprob: -4.64953088760376
    7. ' (' → logprob: -6.02453088760376
    8. ':' → logprob: -7.14953088760376
    9. '    ' → logprob: -7.89953088760376
    10. ' f' → logprob: -8.149531364440918

Token 63: ' return' (ID: 622)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9544170498847961
    2. 'return' (adapté à ' return') → logprob: -1.0794169902801514
    3. ' return' → logprob: -2.0794169902801514
    4. '(k' → logprob: -2.3294169902801514
    5. ' k' → logprob: -3.3294169902801514
    6. ' (' → logprob: -5.3294172286987305
    7. 'f' → logprob: -5.9544172286987305
    8. '(' → logprob: -6.2044172286987305
    9. '2' → logprob: -6.7044172286987305
    10. '   ' → logprob: -7.2044172286987305

Token 64: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5382108688354492
    2. ' (' → logprob: -1.5382108688354492
    3. 'k' → logprob: -2.288210868835449
    4. '(k' → logprob: -3.288210868835449
    5. ' f' → logprob: -4.163210868835449
    6. ' n' → logprob: -4.288210868835449
    7. ' mul' → logprob: -5.288210868835449
    8. ' ' → logprob: -5.288210868835449
    9. '1' → logprob: -5.788210868835449
    10. 'mul' → logprob: -5.913210868835449

Token 65: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.1128838062286377
    2. '**' → logprob: -1.4878838062286377
    3. '*' → logprob: -1.8628838062286377
    4. '(' → logprob: -2.7378838062286377
    5. '<|end|>' → logprob: -2.7378838062286377
    6. '(k' → logprob: -2.9878838062286377
    7. 'def' → logprob: -3.8628838062286377
    8. ' +' → logprob: -4.237883567810059
    9. ' ' → logprob: -4.237883567810059
    10. '+' → logprob: -4.487883567810059

Token 66: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.005974419880658388
    2. 'k' → logprob: -6.005974292755127
    3. '(' → logprob: -6.255974292755127
    4. ' (' → logprob: -7.380974292755127
    5. '(n' → logprob: -7.380974292755127
    6. '2' → logprob: -8.380974769592285
    7. '3' → logprob: -10.505974769592285
    8. '(f' → logprob: -10.880974769592285
    9. 'n' → logprob: -11.130974769592285
    10. 'f' → logprob: -11.755974769592285

Token 67: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0033702077344059944
    2. '(k' → logprob: -5.75337028503418
    3. 'n' → logprob: -9.12837028503418
    4. ' k' → logprob: -10.87837028503418
    5. '3' → logprob: -11.37837028503418
    6. '2' → logprob: -11.50337028503418
    7. '   ' → logprob: -11.87837028503418
    8. '  ' → logprob: -12.00337028503418
    9. '{k' → logprob: -12.00337028503418
    10. ')' → logprob: -12.50337028503418

Token 68: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9056518077850342
    2. ' +' → logprob: -1.2806518077850342
    3. '+' → logprob: -1.7806518077850342
    4. '-' → logprob: -1.9056518077850342
    5. ' ' → logprob: -8.155652046203613
    6. ')' → logprob: -9.530652046203613
    7. '1' → logprob: -9.530652046203613
    8. '   ' → logprob: -10.280652046203613
    9. '<|end|>' → logprob: -10.593152046203613
    10. ' )' → logprob: -10.843152046203613

Token 69: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0055749984458088875
    2. ' ' → logprob: -5.380575180053711
    3. '2' → logprob: -7.380575180053711
    4. '3' → logprob: -8.130575180053711
    5. ')' → logprob: -11.255575180053711
    6. '<|end|>' → logprob: -11.880575180053711
    7. '   ' → logprob: -12.255575180053711
    8. '4' → logprob: -12.380575180053711
    9. '    ' → logprob: -13.255575180053711
    10. '  ' → logprob: -13.318075180053711

Token 70: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005319446790963411
    2. '2' → logprob: -8.000532150268555
    3. '3' → logprob: -8.625532150268555
    4. ' ' → logprob: -11.375532150268555
    5. ')' → logprob: -13.125532150268555
    6. '4' → logprob: -13.500532150268555
    7. '```' → logprob: -15.313032150268555
    8. '5' → logprob: -15.563032150268555
    9. '   ' → logprob: -15.750532150268555
    10. 'k' → logprob: -15.875532150268555

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029000937938690186
    2. ' )' → logprob: -5.877900123596191
    3. '+' → logprob: -10.627900123596191
    4. '<|end|>' → logprob: -11.002900123596191
    5. ')
' → logprob: -11.252900123596191
    6. ' +' → logprob: -11.377900123596191
    7. '-' → logprob: -12.627900123596191
    8. ' -' → logprob: -12.752900123596191
    9. '   ' → logprob: -13.127900123596191
    10. ')/' → logprob: -13.252900123596191

Token 72: ' //' (ID: 602)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006964832078665495
    2. '1' → logprob: -5.006964683532715
    3. ' ' → logprob: -8.381964683532715
    4. '3' → logprob: -11.381964683532715
    5. '4' → logprob: -11.881964683532715
    6. '6' → logprob: -13.756964683532715
    7. '```' → logprob: -15.381964683532715
    8. '   ' → logprob: -15.694464683532715
    9. 'k' → logprob: -16.06946563720703
    10. '8' → logprob: -16.31946563720703

Token 74: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011386843398213387
    2. '1' → logprob: -4.511386871337891
    3. ' ' → logprob: -8.26138687133789
    4. '3' → logprob: -9.76138687133789
    5. '4' → logprob: -11.01138687133789
    6. '6' → logprob: -12.88638687133789
    7. '```' → logprob: -14.76138687133789
    8. 'k' → logprob: -14.88638687133789
    9. '5' → logprob: -15.13638687133789
    10. ')' → logprob: -15.32388687133789

Token 75: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2110121250152588
    2. 'def' → logprob: -1.5860121250152588
    3. '

' → logprob: -1.7110121250152588
    4. 'n' → logprob: -1.8360121250152588
    5. '<|end|>' → logprob: -2.836012125015259
    6. '*' → logprob: -3.586012125015259
    7. '#' → logprob: -3.836012125015259
    8. ')' → logprob: -4.46101188659668
    9. '\n' → logprob: -4.83601188659668
    10. '\' → logprob: -4.96101188659668

Token 76: 'actions' (ID: 6711)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6176385879516602
    2. '#' → logprob: -1.4926385879516602
    3. ')' → logprob: -2.61763858795166
    4. 'print' → logprob: -3.74263858795166
    5. 'n' → logprob: -3.74263858795166
    6. '<|end|>' → logprob: -3.74263858795166
    7. 'for' → logprob: -3.86763858795166
    8. 'result' → logprob: -4.11763858795166
    9. 'k' → logprob: -4.24263858795166
    10. 'f' → logprob: -4.74263858795166

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10157304257154465
    2. '=' → logprob: -2.3515729904174805
    3. '_' → logprob: -8.60157299041748
    4. '(' → logprob: -8.60157299041748
    5. 's' → logprob: -8.60157299041748
    6. '[' → logprob: -8.72657299041748
    7. '=[]' → logprob: -9.22657299041748
    8. ',' → logprob: -9.47657299041748
    9. 'es' → logprob: -9.97657299041748
    10. '_actions' → logprob: -9.97657299041748

Token 78: ' [' (ID: 723)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -1.0007058382034302
    2. ' ['' → logprob: -1.1257058382034302
    3. ' [' → logprob: -2.1257057189941406
    4. '[' → logprob: -2.2507057189941406
    5. ' list' → logprob: -3.5007057189941406
    6. 'list' → logprob: -4.125705718994141
    7. '[]' → logprob: -4.500705718994141
    8. ' []' → logprob: -5.125705718994141
    9. '["' → logprob: -5.250705718994141
    10. '[list' → logprob: -5.250705718994141

Token 79: 'lambda' (ID: 35280)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.8626689314842224
    2. 'add' → logprob: -1.7376689910888672
    3. 'f' → logprob: -2.362668991088867
    4. 'k' → logprob: -3.362668991088867
    5. '(add' → logprob: -3.487668991088867
    6. ''' → logprob: -3.487668991088867
    7. '(lambda' → logprob: -3.612668991088867
    8. '(i' → logprob: -3.862668991088867
    9. 'lambda' → logprob: -3.862668991088867
    10. '(k' → logprob: -3.987668991088867

Token 80: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.37826091051101685
    2. ' k' → logprob: -1.253260850906372
    3. ' i' → logprob: -4.753261089324951
    4. 'x' → logprob: -4.878261089324951
    5. 'k' → logprob: -5.003261089324951
    6. ' n' → logprob: -5.378261089324951
    7. ' s' → logprob: -7.503261089324951
    8. ' a' → logprob: -8.128260612487793
    9. ' j' → logprob: -8.503260612487793
    10. 'i' → logprob: -8.878260612487793

Token 81: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03152260184288025
    2. ',' → logprob: -3.531522512435913
    3. ' :' → logprob: -7.156522750854492
    4. ':x' → logprob: -8.156522750854492
    5. ',k' → logprob: -9.031522750854492
    6. 'x' → logprob: -9.156522750854492
    7. ',i' → logprob: -9.656522750854492
    8. ',x' → logprob: -9.781522750854492
    9. 'i' → logprob: -10.281522750854492
    10. ':i' → logprob: -10.406522750854492

Token 82: ' print' (ID: 2123)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5897403955459595
    2. 'x' → logprob: -0.8397403955459595
    3. ' add' → logprob: -4.71474027633667
    4. 'add' → logprob: -6.08974027633667
    5. ' f' → logprob: -7.46474027633667
    6. ' mul' → logprob: -8.089740753173828
    7. 'mul' → logprob: -8.089740753173828
    8. ' reduce' → logprob: -8.214740753173828
    9. 'f' → logprob: -8.339740753173828
    10. 'reduce' → logprob: -8.464740753173828

Token 83: '(f' (ID: 1526)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2579972743988037
    2. '(' → logprob: -1.6329972743988037
    3. '(f' → logprob: -4.632997512817383
    4. '(k' → logprob: -4.757997512817383
    5. '(i' → logprob: -4.757997512817383
    6. '('' → logprob: -6.007997512817383
    7. '((' → logprob: -6.632997512817383
    8. '(n' → logprob: -8.007997512817383
    9. ')' → logprob: -8.632997512817383
    10. '("' → logprob: -8.757997512817383

Token 84: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.008683355525135994
    2. '(' → logprob: -5.383683204650879
    3. '(k' → logprob: -6.008683204650879
    4. 'x' → logprob: -7.258683204650879
    5. '(n' → logprob: -7.758683204650879
    6. ' (' → logprob: -8.758683204650879
    7. '(i' → logprob: -9.133683204650879
    8. '((' → logprob: -10.008683204650879
    9. '(int' → logprob: -10.633683204650879
    10. '(f' → logprob: -11.133683204650879

Token 85: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.28802403807640076
    2. '))' → logprob: -1.5380240678787231
    3. ')),
' → logprob: -3.5380239486694336
    4. ')' → logprob: -6.038023948669434
    5. ' ' → logprob: -6.538023948669434
    6. '),' → logprob: -6.788023948669434
    7. ')),
' → logprob: -7.413023948669434
    8. '+' → logprob: -8.413023948669434
    9. ')))' → logprob: -8.538023948669434
    10. '))),' → logprob: -9.038023948669434

Token 86: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.07187245786190033
    2. 'lambda' → logprob: -2.6968724727630615
    3. '    ' → logprob: -6.946872234344482
    4. '        ' → logprob: -8.44687271118164
    5. '          ' → logprob: -8.57187271118164
    6. '         ' → logprob: -8.69687271118164
    7. '            ' → logprob: -9.19687271118164
    8. '(lambda' → logprob: -9.44687271118164
    9. '   ' → logprob: -9.57187271118164
    10. '           ' → logprob: -9.94687271118164

Token 87: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.16052693128585815
    2. 'x' → logprob: -1.910526990890503
    3. ' g' → logprob: -8.410527229309082
    4. 'g' → logprob: -10.035527229309082
    5. ' ' → logprob: -10.535527229309082
    6. ' y' → logprob: -12.285527229309082
    7. '(x' → logprob: -14.035527229309082
    8. 'y' → logprob: -14.035527229309082
    9. '(' → logprob: -14.285527229309082
    10. ' ' → logprob: -15.160527229309082

Token 88: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006628761766478419
    2. ' :' → logprob: -7.375662803649902
    3. '+' → logprob: -12.125662803649902
    4. '=' → logprob: -12.250662803649902
    5. '(x' → logprob: -12.500662803649902
    6. ':x' → logprob: -13.000662803649902
    7. ')' → logprob: -13.375662803649902
    8. '-' → logprob: -13.500662803649902
    9. '):' → logprob: -13.500662803649902
    10. ',' → logprob: -13.625662803649902

Token 89: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16118015348911285
    2. ' print' → logprob: -1.9111801385879517
    3. 'g' → logprob: -7.411180019378662
    4. ' g' → logprob: -8.28618049621582
    5. '   ' → logprob: -10.66118049621582
    6. ' ' → logprob: -10.66118049621582
    7. '    ' → logprob: -10.91118049621582
    8. '(print' → logprob: -11.28618049621582
    9. '  ' → logprob: -12.41118049621582
    10. '        ' → logprob: -12.91118049621582

Token 90: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.00080188421998173
    2. '(' → logprob: -7.500802040100098
    3. '(f' → logprob: -9.000802040100098
    4. ' (' → logprob: -9.625802040100098
    5. 'g' → logprob: -10.000802040100098
    6. '((' → logprob: -12.000802040100098
    7. '(m' → logprob: -12.500802040100098
    8. '(x' → logprob: -14.125802040100098
    9. '(a' → logprob: -15.750802040100098
    10. '('' → logprob: -15.875802040100098

Token 91: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0003010233340319246
    2. '(' → logprob: -8.125301361083984
    3. 'x' → logprob: -12.750301361083984
    4. ' (' → logprob: -13.625301361083984
    5. ')' → logprob: -14.125301361083984
    6. ')(' → logprob: -17.000301361083984
    7. ' ' → logprob: -17.375301361083984
    8. ')x' → logprob: -17.625301361083984
    9. '((' → logprob: -18.125301361083984
    10. ' x' → logprob: -18.375301361083984

Token 92: '))]
' (ID: 53695)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0019475567387416959
    2. ')))' → logprob: -6.751947402954102
    3. ')' → logprob: -7.751947402954102
    4. ' ))' → logprob: -8.626947402954102
    5. ')),' → logprob: -9.251947402954102
    6. '),' → logprob: -10.876947402954102
    7. ' ' → logprob: -11.001947402954102
    8. '+' → logprob: -11.001947402954102
    9. '(x' → logprob: -12.501947402954102
    10. '   ' → logprob: -13.251947402954102

Token 93: '[' (ID: 58)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14585785567760468
    2. 'x' → logprob: -3.145857810974121
    3. 'k' → logprob: -3.520857810974121
    4. 'print' → logprob: -4.270857810974121
    5. 'actions' → logprob: -4.270857810974121
    6. 'n' → logprob: -4.520857810974121
    7. '#' → logprob: -5.270857810974121
    8. ' for' → logprob: -5.270857810974121
    9. 'while' → logprob: -5.770857810974121
    10. 'action' → logprob: -5.770857810974121

Token 94: 'actions' (ID: 6711)
  Prédit: 'actions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actions' → logprob: -0.02862153761088848
    2. ' actions' → logprob: -4.028621673583984
    3. '(actions' → logprob: -5.403621673583984
    4. 'int' → logprob: -5.653621673583984
    5. 'action' → logprob: -6.903621673583984
    6. 'print' → logprob: -7.653621673583984
    7. '(int' → logprob: -8.403621673583984
    8. ' int' → logprob: -9.028621673583984
    9. '(' → logprob: -9.778621673583984
    10. 'input' → logprob: -9.903621673583984

Token 95: '[(' (ID: 20542)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3793467283248901
    2. '(n' → logprob: -1.7543467283248901
    3. '(k' → logprob: -1.7543467283248901
    4. '[k' → logprob: -1.8793467283248901
    5. '(i' → logprob: -2.0043468475341797
    6. '[n' → logprob: -2.7543468475341797
    7. '[' → logprob: -4.25434684753418
    8. '](' → logprob: -4.62934684753418
    9. '][' → logprob: -4.75434684753418
    10. '(' → logprob: -5.12934684753418

Token 96: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018105462193489075
    2. 'k' → logprob: -4.768105506896973
    3. '0' → logprob: -5.768105506896973
    4. 'i' → logprob: -6.143105506896973
    5. ' n' → logprob: -6.768105506896973
    6. 'int' → logprob: -6.893105506896973
    7. '1' → logprob: -7.018105506896973
    8. '(n' → logprob: -7.893105506896973
    9. 'x' → logprob: -8.893105506896973
    10. 'input' → logprob: -8.893105506896973

Token 97: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.44401606917381287
    2. ' if' → logprob: -1.6940160989761353
    3. ' +' → logprob: -3.0690159797668457
    4. '-' → logprob: -3.4440159797668457
    5. ')' → logprob: -4.319015979766846
    6. '-n' → logprob: -4.569015979766846
    7. '<n' → logprob: -4.569015979766846
    8. ')]' → logprob: -4.694015979766846
    9. '+' → logprob: -4.944015979766846
    10. ' ' → logprob: -5.069015979766846

Token 98: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5713953375816345
    2. ' n' → logprob: -0.9463953375816345
    3. '(n' → logprob: -3.9463953971862793
    4. ' (' → logprob: -4.571395397186279
    5. '1' → logprob: -4.571395397186279
    6. ' ' → logprob: -5.821395397186279
    7. 'k' → logprob: -7.446395397186279
    8. 'int' → logprob: -7.446395397186279
    9. ' int' → logprob: -7.821395397186279
    10. ' k' → logprob: -8.383894920349121

Token 99: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014100384898483753
    2. ')%' → logprob: -5.389100551605225
    3. ' )' → logprob: -5.639100551605225
    4. ')]' → logprob: -6.014100551605225
    5. ')][' → logprob: -6.014100551605225
    6. ')])' → logprob: -8.264100074768066
    7. ')],' → logprob: -8.889100074768066
    8. ')//' → logprob: -8.889100074768066
    9. ' %' → logprob: -9.889100074768066
    10. '%' → logprob: -10.014100074768066

Token 100: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005730636417865753
    2. ' ' → logprob: -5.505730628967285
    3. '3' → logprob: -6.630730628967285
    4. '4' → logprob: -8.380730628967285
    5. '6' → logprob: -10.130730628967285
    6. '  ' → logprob: -10.880730628967285
    7. '   ' → logprob: -11.005730628967285
    8. '5' → logprob: -12.193230628967285
    9. '7' → logprob: -12.693230628967285
    10. '1' → logprob: -12.693230628967285

Token 101: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004657968878746033
    2. '3' → logprob: -6.254657745361328
    3. ' ' → logprob: -6.254657745361328
    4. '4' → logprob: -7.504657745361328
    5. '6' → logprob: -9.504657745361328
    6. '5' → logprob: -9.879657745361328
    7. '10' → logprob: -9.879657745361328
    8. '7' → logprob: -10.629657745361328
    9. '  ' → logprob: -11.879657745361328
    10. '8' → logprob: -11.942157745361328

Token 102: ')]' (ID: 15710)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.5225908160209656
    2. ')]' → logprob: -1.0225908756256104
    3. '](' → logprob: -3.2725908756256104
    4. '])(' → logprob: -5.147590637207031
    5. ')' → logprob: -6.522590637207031
    6. ')((' → logprob: -7.147590637207031
    7. ' )(' → logprob: -7.897590637207031
    8. ')])' → logprob: -8.022590637207031
    9. ')][' → logprob: -8.147590637207031
    10. ']' → logprob: -9.522590637207031

Token 103: '(' (ID: 7)
  Prédit: ']('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '](' → logprob: -0.4897848665714264
    2. '(n' → logprob: -0.989784836769104
    3. '(' → logprob: -5.2397847175598145
    4. '(i' → logprob: -5.7397847175598145
    5. ']' → logprob: -5.9897847175598145
    6. '(k' → logprob: -6.2397847175598145
    7. '(int' → logprob: -6.2397847175598145
    8. '(x' → logprob: -7.9897847175598145
    9. ')(' → logprob: -9.364785194396973
    10. '((' → logprob: -9.989785194396973

Token 104: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012821465730667114
    2. 'i' → logprob: -5.262821674346924
    3. 'int' → logprob: -5.512821674346924
    4. 'k' → logprob: -6.637821674346924
    5. 'x' → logprob: -7.387821674346924
    6. ')' → logprob: -7.762821674346924
    7. ' n' → logprob: -8.387821197509766
    8. '1' → logprob: -8.387821197509766
    9. '2' → logprob: -8.637821197509766
    10. '(n' → logprob: -8.887821197509766

Token 105: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.6346336007118225
    2. ')' → logprob: -0.7596336007118225
    3. ')])' → logprob: -7.009633541107178
    4. ' )' → logprob: -7.259633541107178
    5. '))' → logprob: -8.259634017944336
    6. ')n' → logprob: -9.634634017944336
    7. ']' → logprob: -10.384634017944336
    8. '-' → logprob: -10.634634017944336
    9. '(n' → logprob: -11.759634017944336
    10. ')}' → logprob: -11.884634017944336

Token 106: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' Deux' (ID: 92086)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9891517162322998
    2. 'for' → logprob: -1.4891517162322998
    3. '[' → logprob: -1.7391517162322998
    4. ')' → logprob: -2.6141517162323
    5. 'n' → logprob: -3.2391517162323
    6. '<|end|>' → logprob: -3.3641517162323
    7. 'def' → logprob: -4.114151954650879
    8. ' for' → logprob: -4.739151954650879
    9. '[
' → logprob: -5.239151954650879
    10. 'actions' → logprob: -5.239151954650879

Token 108: 'ième' (ID: 41126)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.151859998703003
    2. 'part' → logprob: -1.901859998703003
    3. ' part' → logprob: -2.401859998703003
    4. ']' → logprob: -2.526859998703003
    5. ')' → logprob: -2.651859998703003
    6. '_part' → logprob: -2.651859998703003
    7. '[' → logprob: -3.401859998703003
    8. '#' → logprob: -3.526859998703003
    9. '_' → logprob: -3.776859998703003
    10. ' def' → logprob: -4.276860237121582

Token 109: ' partie' (ID: 22139)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.07452724874019623
    2. ' partie' → logprob: -2.9495272636413574
    3. ' part' → logprob: -3.9495272636413574
    4. '_part' → logprob: -9.3245267868042
    5. 'def' → logprob: -10.0745267868042
    6. ' parte' → logprob: -10.8245267868042
    7. '#' → logprob: -11.8245267868042
    8. 'parte' → logprob: -11.8245267868042
    9. 'import' → logprob: -11.9495267868042
    10. ' parti' → logprob: -12.3245267868042

Token 110: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2290228605270386
    2. 'for' → logprob: -1.2290228605270386
    3. 'from' → logprob: -2.604022979736328
    4. 's' → logprob: -3.354022979736328
    5. 'print' → logprob: -3.354022979736328
    6. 'pairs' → logprob: -3.854022979736328
    7. 'dp' → logprob: -3.979022979736328
    8. 'res' → logprob: -3.979022979736328
    9. 'count' → logprob: -4.479022979736328
    10. 'com' → logprob: -4.479022979736328

Token 111: 'S' (ID: 50)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9735257029533386
    2. 'def' → logprob: -1.7235257625579834
    3. 'from' → logprob: -2.5985257625579834
    4. 'res' → logprob: -2.9735257625579834
    5. 's' → logprob: -3.0985257625579834
    6. 'm' → logprob: -3.7235257625579834
    7. 'result' → logprob: -4.098525524139404
    8. 'a' → logprob: -4.098525524139404
    9. 'print' → logprob: -4.098525524139404
    10. 'k' → logprob: -4.223525524139404

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004275938495993614
    2. '=' → logprob: -5.754275798797607
    3. 'et' → logprob: -8.129276275634766
    4. '=input' → logprob: -9.129276275634766
    5. '=set' → logprob: -9.379276275634766
    6. 'um' → logprob: -9.504276275634766
    7. '=int' → logprob: -9.504276275634766
    8. '1' → logprob: -9.754276275634766
    9. ' ' → logprob: -9.879276275634766
    10. 'ets' → logprob: -10.129276275634766

Token 113: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.5638076066970825
    2. ' set' → logprob: -1.5638076066970825
    3. '{' → logprob: -2.563807487487793
    4. 'list' → logprob: -3.188807487487793
    5. ' list' → logprob: -3.688807487487793
    6. 'range' → logprob: -4.438807487487793
    7. ' {' → logprob: -4.563807487487793
    8. '[n' → logprob: -5.063807487487793
    9. '[' → logprob: -5.188807487487793
    10. ' [' → logprob: -5.188807487487793

Token 114: '(com' (ID: 27868)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.05309097468852997
    2. '()' → logprob: -3.053091049194336
    3. '(product' → logprob: -6.178091049194336
    4. '([' → logprob: -7.053091049194336
    5. '(' → logprob: -7.428091049194336
    6. '((' → logprob: -8.178091049194336
    7. '(com' → logprob: -8.803091049194336
    8. '(int' → logprob: -8.928091049194336
    9. '(i' → logprob: -9.053091049194336
    10. 'range' → logprob: -9.678091049194336

Token 115: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.004907108377665281
    2. 'b' → logprob: -5.504907131195068
    3. '(range' → logprob: -7.879907131195068
    4. 'inations' → logprob: -8.25490665435791
    5. '(com' → logprob: -9.75490665435791
    6. '([' → logprob: -10.00490665435791
    7. '(b' → logprob: -10.75490665435791
    8. '(' → logprob: -11.25490665435791
    9. 'bin' → logprob: -11.37990665435791
    10. '[' → logprob: -11.62990665435791

Token 116: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -9.388769103679806e-05
    2. '(list' → logprob: -9.500093460083008
    3. '([' → logprob: -12.000093460083008
    4. '(' → logprob: -12.125093460083008
    5. ' (' → logprob: -12.625093460083008
    6. '((' → logprob: -13.125093460083008
    7. ')' → logprob: -14.375093460083008
    8. '({' → logprob: -14.750093460083008
    9. '(s' → logprob: -15.500093460083008
    10. 'range' → logprob: -15.625093460083008

Token 117: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.14277178049087524
    2. '(' → logprob: -2.0177717208862305
    3. '(k' → logprob: -10.51777172088623
    4. '((' → logprob: -11.01777172088623
    5. '(len' → logprob: -11.26777172088623
    6. '(s' → logprob: -11.26777172088623
    7. '(m' → logprob: -12.26777172088623
    8. ' (' → logprob: -12.51777172088623
    9. '(N' → logprob: -12.76777172088623
    10. 'n' → logprob: -12.89277172088623

Token 118: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06699008494615555
    2. '1' → logprob: -3.5669901371002197
    3. '(n' → logprob: -3.9419901371002197
    4. '(' → logprob: -5.316989898681641
    5. '3' → logprob: -5.566989898681641
    6. '2' → logprob: -5.941989898681641
    7. '4' → logprob: -6.066989898681641
    8. ' n' → logprob: -6.941989898681641
    9. '6' → logprob: -7.191989898681641
    10. '5' → logprob: -7.316989898681641

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22044935822486877
    2. '(n' → logprob: -2.220449447631836
    3. '(' → logprob: -3.220449447631836
    4. ' ,' → logprob: -3.595449447631836
    5. ',n' → logprob: -3.845449447631836
    6. 'n' → logprob: -8.345449447631836
    7. ' ' → logprob: -9.595449447631836
    8. ' (' → logprob: -9.845449447631836
    9. '(),' → logprob: -10.220449447631836
    10. '1' → logprob: -10.470449447631836

Token 120: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25244423747062683
    2. ' n' → logprob: -1.5024442672729492
    3. ' ' → logprob: -9.12744426727295
    4. '6' → logprob: -9.50244426727295
    5. '(n' → logprob: -9.50244426727295
    6. '7' → logprob: -9.62744426727295
    7. '2' → logprob: -9.75244426727295
    8. '4' → logprob: -10.37744426727295
    9. '5' → logprob: -10.75244426727295
    10. '10' → logprob: -11.00244426727295

Token 121: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048603158444166183
    2. ' +' → logprob: -3.048603057861328
    3. '(n' → logprob: -12.048603057861328
    4. '+n' → logprob: -12.923603057861328
    5. ' ' → logprob: -13.423603057861328
    6. 'n' → logprob: -13.423603057861328
    7. '),' → logprob: -13.548603057861328
    8. ',' → logprob: -14.423603057861328
    9. '1' → logprob: -14.673603057861328
    10. '   ' → logprob: -14.798603057861328

Token 122: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003849133790936321
    2. ' ' → logprob: -7.87538480758667
    3. '3' → logprob: -12.875385284423828
    4. '2' → logprob: -13.500385284423828
    5. 'n' → logprob: -15.125385284423828
    6. '   ' → logprob: -15.875385284423828
    7. ' n' → logprob: -16.250385284423828
    8. '(n' → logprob: -16.875385284423828
    9. '+' → logprob: -17.000385284423828
    10. '  ' → logprob: -17.125385284423828

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4617256056226324e-05
    2. '2' → logprob: -12.000014305114746
    3. ' ' → logprob: -12.375014305114746
    4. '3' → logprob: -12.875014305114746
    5. 'n' → logprob: -14.250014305114746
    6. '```' → logprob: -16.312515258789062
    7. '7' → logprob: -16.437515258789062
    8. '   ' → logprob: -16.500015258789062
    9. '4' → logprob: -16.500015258789062
    10. '+' → logprob: -16.625015258789062

Token 124: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0025818434078246355
    2. ',' → logprob: -6.00258207321167
    3. '(n' → logprob: -10.252581596374512
    4. ' ),' → logprob: -11.377581596374512
    5. ')' → logprob: -11.627581596374512
    6. '],' → logprob: -11.877581596374512
    7. ',n' → logprob: -11.877581596374512
    8. ')),' → logprob: -12.252581596374512
    9. '},' → logprob: -12.252581596374512
    10. ')))' → logprob: -12.502581596374512

Token 125: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.24011527001857758
    2. '3' → logprob: -1.7401152849197388
    3. ' ' → logprob: -3.740115165710449
    4. '4' → logprob: -4.615115165710449
    5. 'n' → logprob: -6.115115165710449
    6. ' n' → logprob: -7.240115165710449
    7. '1' → logprob: -7.490115165710449
    8. '5' → logprob: -7.865115165710449
    9. '6' → logprob: -8.99011516571045
    10. 'k' → logprob: -9.49011516571045

Token 126: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3805692195892334
    2. '3' → logprob: -1.2555692195892334
    3. '4' → logprob: -3.7555692195892334
    4. '5' → logprob: -6.0055694580078125
    5. 'n' → logprob: -6.0055694580078125
    6. '1' → logprob: -6.6305694580078125
    7. '6' → logprob: -7.5055694580078125
    8. 'k' → logprob: -7.6305694580078125
    9. ' ' → logprob: -7.7555694580078125
    10. '(' → logprob: -9.380569458007812

Token 127: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -4.56102097814437e-05
    2. ')' → logprob: -10.625045776367188
    3. '))
' → logprob: -11.500045776367188
    4. '),' → logprob: -12.625045776367188
    5. ')))' → logprob: -12.625045776367188
    6. ',' → logprob: -13.875045776367188
    7. ' ))' → logprob: -13.875045776367188
    8. '))

' → logprob: -14.500045776367188
    9. '()))' → logprob: -14.750045776367188
    10. '2' → logprob: -15.125045776367188

Token 128: 'ex' (ID: 490)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.9977343678474426
    2. 'S' → logprob: -2.247734308242798
    3. 'R' → logprob: -2.372734308242798
    4. 'pairs' → logprob: -2.872734308242798
    5. 'for' → logprob: -2.997734308242798
    6. 'U' → logprob: -2.997734308242798
    7. 'M' → logprob: -3.247734308242798
    8. 'print' → logprob: -3.372734308242798
    9. 'A' → logprob: -3.622734308242798
    10. 'def' → logprob: -3.747734308242798

Token 129: 'cl' (ID: 565)
  Prédit: 'cluded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cluded' → logprob: -0.8210448622703552
    2. 'pected' → logprob: -1.321044921875
    3. 'pr' → logprob: -3.071044921875
    4. 'p' → logprob: -3.196044921875
    5. 'pressions' → logprob: -3.196044921875
    6. 'isting' → logprob: -3.446044921875
    7. 'clusions' → logprob: -3.446044921875
    8. 't' → logprob: -4.071044921875
    9. 'tra' → logprob: -4.321044921875
    10. 'pect' → logprob: -4.571044921875

Token 130: ' =' (ID: 314)
  Prédit: 'uded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uded' → logprob: -0.028904497623443604
    2. 'usions' → logprob: -4.528904438018799
    3. 'udes' → logprob: -4.903904438018799
    4. 'ude' → logprob: -5.028904438018799
    5. 'usion' → logprob: -7.028904438018799
    6. 'uding' → logprob: -7.653904438018799
    7. ' =' → logprob: -7.778904438018799
    8. '=' → logprob: -8.028904914855957
    9. 'u' → logprob: -8.153904914855957
    10. '

' → logprob: -8.278904914855957

Token 131: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.3960582911968231
    2. '{' → logprob: -1.1460583209991455
    3. ' set' → logprob: -5.521058082580566
    4. 'com' → logprob: -7.146058082580566
    5. '{k' → logprob: -7.146058082580566
    6. '{s' → logprob: -7.146058082580566
    7. '[]' → logprob: -7.271058082580566
    8. ' {' → logprob: -7.521058082580566
    9. '{}' → logprob: -8.021058082580566
    10. '{x' → logprob: -8.021058082580566

Token 132: '(filter' (ID: 36366)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3257848620414734
    2. '(com' → logprob: -1.3257849216461182
    3. '(product' → logprob: -5.325784683227539
    4. '((' → logprob: -5.950784683227539
    5. '([' → logprob: -6.575784683227539
    6. '(range' → logprob: -6.825784683227539
    7. '(tuple' → logprob: -7.325784683227539
    8. '([(' → logprob: -7.950784683227539
    9. '(' → logprob: -8.075784683227539
    10. '([]' → logprob: -8.575784683227539

Token 133: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -4.811348480870947e-05
    2. '(' → logprob: -10.62504768371582
    3. '(None' → logprob: -11.12504768371582
    4. 'lambda' → logprob: -11.75004768371582
    5. '(
' → logprob: -15.00004768371582
    6. '(l' → logprob: -15.37504768371582
    7. '=lambda' → logprob: -15.37504768371582
    8. '((' → logprob: -15.62504768371582
    9. '(False' → logprob: -17.00004768371582
    10. '   ' → logprob: -17.62504768371582

Token 134: ' pair' (ID: 10610)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5892019867897034
    2. '(lambda' → logprob: -1.4642019271850586
    3. ' lambda' → logprob: -2.4642019271850586
    4. 'x' → logprob: -2.5892019271850586
    5. ' x' → logprob: -4.089201927185059
    6. '   ' → logprob: -4.214201927185059
    7. 'pair' → logprob: -5.089201927185059
    8. 's' → logprob: -5.339201927185059
    9. 'e' → logprob: -6.089201927185059
    10. '=lambda' → logprob: -6.964201927185059

Token 135: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15511849522590637
    2. '(lambda' → logprob: -2.155118465423584
    3. 'lambda' → logprob: -4.155118465423584
    4. '=lambda' → logprob: -4.655118465423584
    5. ' lambda' → logprob: -6.780118465423584
    6. ' :' → logprob: -7.030118465423584
    7. ':
' → logprob: -8.905118942260742
    8. ' (' → logprob: -9.155118942260742
    9. '   ' → logprob: -9.405118942260742
    10. '
' → logprob: -9.405118942260742

Token 136: ' sum' (ID: 4215)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.9827929735183716
    2. '(pair' → logprob: -1.1077929735183716
    3. 'sum' → logprob: -2.732792854309082
    4. '(' → logprob: -3.107792854309082
    5. 'lambda' → logprob: -3.357792854309082
    6. '(lambda' → logprob: -3.732792854309082
    7. ' pair' → logprob: -3.732792854309082
    8. '1' → logprob: -4.107792854309082
    9. 'n' → logprob: -4.232792854309082
    10. ' lambda' → logprob: -4.732792854309082

Token 137: '(pair' (ID: 84884)
  Prédit: '(pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pair' → logprob: -0.00032163821742869914
    2. '=' → logprob: -9.125321388244629
    3. 'pair' → logprob: -9.750321388244629
    4. '(lambda' → logprob: -9.750321388244629
    5. '(' → logprob: -10.375321388244629
    6. '=lambda' → logprob: -10.500321388244629
    7. 'lambda' → logprob: -11.000321388244629
    8. '<pair' → logprob: -12.000321388244629
    9. ' (' → logprob: -12.625321388244629
    10. '
' → logprob: -12.875321388244629

Token 138: ')' (ID: 8)
  Prédit: '(pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pair' → logprob: -0.32749465107917786
    2. ')' → logprob: -1.4524946212768555
    3. '%' → logprob: -4.0774946212768555
    4. 'pair' → logprob: -5.2024946212768555
    5. '>' → logprob: -5.7024946212768555
    6. ')%' → logprob: -5.9524946212768555
    7. '<pair' → logprob: -6.4524946212768555
    8. ' pair' → logprob: -6.5774946212768555
    9. '==' → logprob: -6.7024946212768555
    10. ' not' → logprob: -6.8274946212768555

Token 139: ' ==' (ID: 951)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6821451187133789
    2. '>' → logprob: -1.557145118713379
    3. '==' → logprob: -2.432145118713379
    4. '>=' → logprob: -3.307145118713379
    5. ' >' → logprob: -3.307145118713379
    6. '!=' → logprob: -3.807145118713379
    7. ' ==' → logprob: -3.807145118713379
    8. ' !=' → logprob: -4.057145118713379
    9. ' %' → logprob: -4.057145118713379
    10. ' >=' → logprob: -4.182145118713379

Token 140: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.035200346261262894
    2. ' n' → logprob: -3.410200357437134
    3. '2' → logprob: -7.160200119018555
    4. ' ' → logprob: -8.660200119018555
    5. 'k' → logprob: -9.160200119018555
    6. '10' → logprob: -9.285200119018555
    7. '3' → logprob: -9.535200119018555
    8. '   ' → logprob: -9.785200119018555
    9. '(n' → logprob: -10.160200119018555
    10. '9' → logprob: -10.285200119018555

Token 141: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011083055287599564
    2. ' or' → logprob: -7.876108169555664
    3. ' ,' → logprob: -8.001108169555664
    4. ',S' → logprob: -8.376108169555664
    5. '))' → logprob: -9.876108169555664
    6. '+' → logprob: -10.251108169555664
    7. '),' → logprob: -10.501108169555664
    8. '   ' → logprob: -11.251108169555664
    9. ' +' → logprob: -11.251108169555664
    10. 'S' → logprob: -12.126108169555664

Token 142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013822594191879034
    2. ' ' → logprob: -6.876382350921631
    3. '2' → logprob: -8.126381874084473
    4. '0' → logprob: -10.501381874084473
    5. '3' → logprob: -11.001381874084473
    6. '4' → logprob: -13.563881874084473
    7. '+' → logprob: -13.688881874084473
    8. ')' → logprob: -14.126381874084473
    9. '5' → logprob: -14.563881874084473
    10. '7' → logprob: -14.813881874084473

Token 143: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001188445370644331
    2. '2' → logprob: -6.876188278198242
    3. '0' → logprob: -9.626188278198242
    4. '3' → logprob: -9.876188278198242
    5. ' ' → logprob: -11.251188278198242
    6. '(' → logprob: -12.501188278198242
    7. 'k' → logprob: -12.501188278198242
    8. '4' → logprob: -12.501188278198242
    9. '-' → logprob: -13.251188278198242
    10. '+' → logprob: -13.626188278198242

Token 144: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003712085890583694
    2. ' or' → logprob: -8.250370979309082
    3. ',S' → logprob: -10.125370979309082
    4. ' ,' → logprob: -10.250370979309082
    5. '))' → logprob: -10.750370979309082
    6. '),' → logprob: -11.750370979309082
    7. '   ' → logprob: -13.625370979309082
    8. 'S' → logprob: -13.625370979309082
    9. 'or' → logprob: -14.500370979309082
    10. ',s' → logprob: -14.750370979309082

Token 145: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5519617199897766
    2. 'n' → logprob: -1.3019616603851318
    3. '2' → logprob: -2.426961660385132
    4. 'pair' → logprob: -4.551961898803711
    5. ' ' → logprob: -4.676961898803711
    6. ' n' → logprob: -4.676961898803711
    7. '3' → logprob: -4.926961898803711
    8. 'len' → logprob: -5.176961898803711
    9. '0' → logprob: -5.301961898803711
    10. '4' → logprob: -6.051961898803711

Token 146: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7864707112312317
    2. '1' → logprob: -0.9114707112312317
    3. '2' → logprob: -2.411470651626587
    4. '(' → logprob: -4.286470890045166
    5. 'pair' → logprob: -4.661470890045166
    6. 'len' → logprob: -4.911470890045166
    7. '(n' → logprob: -4.911470890045166
    8. ' n' → logprob: -5.911470890045166
    9. '(pair' → logprob: -6.036470890045166
    10. '3' → logprob: -6.536470890045166

Token 147: ' if' (ID: 538)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.4789321720600128
    2. ' if' → logprob: -1.2289321422576904
    3. 'if' → logprob: -2.6039321422576904
    4. ',' → logprob: -5.2289323806762695
    5. ' ),' → logprob: -6.2289323806762695
    6. ' or' → logprob: -6.3539323806762695
    7. ',),' → logprob: -6.6039323806762695
    8. ')' → logprob: -7.1039323806762695
    9. 'or' → logprob: -7.1039323806762695
    10. ' ' → logprob: -7.6039323806762695

Token 148: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02382790669798851
    2. ' n' → logprob: -4.148828029632568
    3. '(n' → logprob: -5.023828029632568
    4. '1' → logprob: -7.773828029632568
    5. 'not' → logprob: -8.02382755279541
    6. 'len' → logprob: -9.39882755279541
    7. ' not' → logprob: -9.39882755279541
    8. '(not' → logprob: -9.52382755279541
    9. '2' → logprob: -10.27382755279541
    10. ' (' → logprob: -10.52382755279541

Token 149: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.03842218965291977
    2. ' %' → logprob: -3.288422107696533
    3. 'else' → logprob: -8.663422584533691
    4. '==' → logprob: -9.788422584533691
    5. ' else' → logprob: -10.413422584533691
    6. '2' → logprob: -10.788422584533691
    7. ' ' → logprob: -11.288422584533691
    8. ' ==' → logprob: -11.288422584533691
    9. '<=' → logprob: -11.413422584533691
    10. '>' → logprob: -11.413422584533691

Token 150: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00599954416975379
    2. ' ' → logprob: -5.130999565124512
    3. '1' → logprob: -10.755999565124512
    4. '4' → logprob: -11.380999565124512
    5. '3' → logprob: -11.568499565124512
    6. '   ' → logprob: -12.005999565124512
    7. '  ' → logprob: -12.443499565124512
    8. ')' → logprob: -13.318499565124512
    9. '```' → logprob: -13.318499565124512
    10. 'n' → logprob: -13.443499565124512

Token 151: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018220659694634378
    2. '1' → logprob: -9.375182151794434
    3. ' ' → logprob: -10.000182151794434
    4. '4' → logprob: -10.875182151794434
    5. '3' → logprob: -11.000182151794434
    6. '```' → logprob: -12.937682151794434
    7. '0' → logprob: -13.312682151794434
    8. ')' → logprob: -13.500182151794434
    9. 'n' → logprob: -13.937682151794434
    10. '==' → logprob: -14.062682151794434

Token 152: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.1939372569322586
    2. 'else' → logprob: -1.9439373016357422
    3. '==' → logprob: -3.443937301635742
    4. ' ==' → logprob: -6.818937301635742
    5. ' ' → logprob: -10.068937301635742
    6. '0' → logprob: -10.193937301635742
    7. '1' → logprob: -11.068937301635742
    8. '!=' → logprob: -11.818937301635742
    9. '2' → logprob: -12.443937301635742
    10. ')' → logprob: -13.193937301635742

Token 153: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3367016315460205
    2. ' ' → logprob: -1.3367016315460205
    3. '2' → logprob: -4.211701393127441
    4. '0' → logprob: -5.211701393127441
    5. ' -' → logprob: -6.336701393127441
    6. '-' → logprob: -7.336701393127441
    7. '3' → logprob: -8.586701393127441
    8. ' n' → logprob: -9.461701393127441
    9. '4' → logprob: -9.961701393127441
    10. 'n' → logprob: -10.211701393127441

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.037666723132133484
    2. '2' → logprob: -3.6626667976379395
    3. '0' → logprob: -4.6626667976379395
    4. '-' → logprob: -6.6626667976379395
    5. ' ' → logprob: -7.6626667976379395
    6. '3' → logprob: -9.912666320800781
    7. 'n' → logprob: -10.537666320800781
    8. ' -' → logprob: -11.287666320800781
    9. '4' → logprob: -12.162666320800781
    10. '
' → logprob: -12.287666320800781

Token 155: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011481947731226683
    2. '),' → logprob: -7.251148223876953
    3. ' ,' → logprob: -8.626148223876953
    4. ',S' → logprob: -8.626148223876953
    5. ' or' → logprob: -10.251148223876953
    6. ')),' → logprob: -11.376148223876953
    7. ',n' → logprob: -11.626148223876953
    8. '))' → logprob: -12.001148223876953
    9. '   ' → logprob: -12.251148223876953
    10. ',s' → logprob: -13.251148223876953

Token 156: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007270866190083325
    2. ' or' → logprob: -8.375726699829102
    3. ',S' → logprob: -8.500726699829102
    4. ' ,' → logprob: -8.625726699829102
    5. '),' → logprob: -10.000726699829102
    6. '))' → logprob: -10.250726699829102
    7. 'S' → logprob: -11.750726699829102
    8. ')),' → logprob: -12.375726699829102
    9. '   ' → logprob: -12.625726699829102
    10. 'or' → logprob: -12.875726699829102

Token 157: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17021669447422028
    2. '0' → logprob: -3.2952167987823486
    3. '2' → logprob: -3.2952167987823486
    4. 'n' → logprob: -3.5452167987823486
    5. '(n' → logprob: -3.5452167987823486
    6. '(' → logprob: -4.0452165603637695
    7. '(-' → logprob: -6.7952165603637695
    8. ' ' → logprob: -7.4202165603637695
    9. 'int' → logprob: -7.4202165603637695
    10. '-' → logprob: -7.4202165603637695

Token 158: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.37047114968299866
    2. 'n' → logprob: -1.7454711198806763
    3. '2' → logprob: -2.995471239089966
    4. '(' → logprob: -3.495471239089966
    5. '(n' → logprob: -3.620471239089966
    6. '0' → logprob: -3.870471239089966
    7. 'int' → logprob: -6.870471000671387
    8. '(-' → logprob: -6.995471000671387
    9. '3' → logprob: -7.120471000671387
    10. 'k' → logprob: -7.370471000671387

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005848681554198265
    2. '),' → logprob: -5.3808488845825195
    3. '))' → logprob: -7.7558488845825195
    4. ')),' → logprob: -8.50584888458252
    5. ' ,' → logprob: -8.50584888458252
    6. ' or' → logprob: -8.88084888458252
    7. ',S' → logprob: -8.88084888458252
    8. ',n' → logprob: -10.25584888458252
    9. ')))' → logprob: -10.50584888458252
    10. ',p' → logprob: -11.63084888458252

Token 160: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.11288204789161682
    2. ' S' → logprob: -2.237882137298584
    3. 'range' → logprob: -11.362881660461426
    4. ' range' → logprob: -11.487881660461426
    5. '   ' → logprob: -11.612881660461426
    6. '    ' → logprob: -11.862881660461426
    7. ' ' → logprob: -12.362881660461426
    8. '[' → logprob: -13.237881660461426
    9. ' pairs' → logprob: -13.237881660461426
    10. ' combinations' → logprob: -13.237881660461426

Token 161: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -3.5954712075181305e-05
    2. '))
' → logprob: -10.625036239624023
    3. ')))' → logprob: -12.500036239624023
    4. ')' → logprob: -12.750036239624023
    5. ' ))' → logprob: -12.750036239624023
    6. '))

' → logprob: -13.500036239624023
    7. '),' → logprob: -15.250036239624023
    8. '()))' → logprob: -15.750036239624023
    9. '));' → logprob: -16.375036239624023
    10. ')),' → logprob: -16.625036239624023

Token 162: 'included' (ID: 159353)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.45140552520751953
    2. 'R' → logprob: -2.7014055252075195
    3. 'rest' → logprob: -2.9514055252075195
    4. 'print' → logprob: -3.4514055252075195
    5. 'result' → logprob: -3.4514055252075195
    6. 'allowed' → logprob: -3.7014055252075195
    7. 'ex' → logprob: -3.9514055252075195
    8. 'remaining' → logprob: -4.4514055252075195
    9. 'U' → logprob: -4.5764055252075195
    10. 'T' → logprob: -4.5764055252075195

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34846949577331543
    2. '=' → logprob: -1.2234694957733154
    3. 's' → logprob: -11.598469734191895
    4. ' =
' → logprob: -11.973469734191895
    5. ' ' → logprob: -12.348469734191895
    6. '=
' → logprob: -13.598469734191895
    7. '=

' → logprob: -14.223469734191895
    8. 'S' → logprob: -14.473469734191895
    9. ')' → logprob: -14.473469734191895
    10. '=S' → logprob: -14.598469734191895

Token 164: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.05928368493914604
    2. ' S' → logprob: -2.93428373336792
    3. '{' → logprob: -6.30928373336792
    4. 'set' → logprob: -6.43428373336792
    5. ' set' → logprob: -7.55928373336792
    6. ' ' → logprob: -8.934283256530762
    7. '   ' → logprob: -9.434283256530762
    8. '[S' → logprob: -9.934283256530762
    9. '(S' → logprob: -10.434283256530762
    10. '  ' → logprob: -10.434283256530762

Token 165: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3135882616043091
    2. ' -' → logprob: -1.313588261604309
    3. '=' → logprob: -8.18858814239502
    4. ' =' → logprob: -10.68858814239502
    5. '-=' → logprob: -11.68858814239502
    6. ' ' → logprob: -12.56358814239502
    7. '<|end|>' → logprob: -13.18858814239502
    8. '-
' → logprob: -13.18858814239502
    9. '-ex' → logprob: -13.31358814239502
    10. ' ' → logprob: -13.68858814239502

Token 166: ' excl' (ID: 57282)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0015231950674206018
    2. ' excl' → logprob: -6.501523017883301
    3. 'excluded' → logprob: -11.5015230178833
    4. '(ex' → logprob: -12.3765230178833
    5. ' ex' → logprob: -13.1265230178833
    6. 'exclude' → logprob: -13.5015230178833
    7. '{' → logprob: -14.3765230178833
    8. '	ex' → logprob: -14.5015230178833
    9. 'exc' → logprob: -14.5015230178833
    10. '
' → logprob: -15.5015230178833

Token 167: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4767068922519684
    2. '<|end|>' → logprob: -2.4767069816589355
    3. 'included' → logprob: -2.7267069816589355
    4. '#' → logprob: -2.9767069816589355
    5. 'for' → logprob: -3.2267069816589355
    6. 'pairs' → logprob: -3.4767069816589355
    7. 'S' → logprob: -3.9767069816589355
    8. 'excluded' → logprob: -4.4767069816589355
    9. 'product' → logprob: -4.9767069816589355
    10. '[' → logprob: -5.1017069816589355

Token 168: '[list' (ID: 141696)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.1933085918426514
    2. 'result' → logprob: -2.1933085918426514
    3. 'pairs' → logprob: -2.3183085918426514
    4. 'H' → logprob: -2.4433085918426514
    5. 'included' → logprob: -2.6933085918426514
    6. 'for' → logprob: -2.8183085918426514
    7. 'res' → logprob: -3.1933085918426514
    8. 'def' → logprob: -3.1933085918426514
    9. 'count' → logprob: -3.5683085918426514
    10. 'T' → logprob: -3.8183085918426514

Token 169: '(map' (ID: 16946)
  Prédit: '(in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(in' → logprob: -0.6900040507316589
    2. '(map' → logprob: -0.8150040507316589
    3. '(com' → logprob: -4.190003871917725
    4. '(' → logprob: -4.315003871917725
    5. '(product' → logprob: -4.315003871917725
    6. '(filter' → logprob: -5.565003871917725
    7. '(sorted' → logprob: -6.440003871917725
    8. 'included' → logprob: -6.440003871917725
    9. 'in' → logprob: -6.690003871917725
    10. '(ex' → logprob: -6.940003871917725

Token 170: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.45726001262664795
    2. '(print' → logprob: -1.207260012626648
    3. '(' → logprob: -2.9572601318359375
    4. '(actions' → logprob: -5.0822601318359375
    5. '(list' → logprob: -5.5822601318359375
    6. '(int' → logprob: -6.4572601318359375
    7. 'print' → logprob: -6.7072601318359375
    8. '(str' → logprob: -7.3322601318359375
    9. '(
' → logprob: -7.4572601318359375
    10. '(tuple' → logprob: -8.332260131835938

Token 171: ' pair' (ID: 10610)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.2192094326019287
    2. 'x' → logprob: -1.5942094326019287
    3. '(lambda' → logprob: -1.8442094326019287
    4. 'lambda' → logprob: -2.2192094326019287
    5. 'print' → logprob: -3.3442094326019287
    6. ' lambda' → logprob: -3.4692094326019287
    7. 'pair' → logprob: -3.7192094326019287
    8. 'tuple' → logprob: -4.094209671020508
    9. 'list' → logprob: -4.219209671020508
    10. '(x' → logprob: -4.344209671020508

Token 172: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008929980103857815
    2. ' :' → logprob: -7.1258931159973145
    3. ':
' → logprob: -10.500892639160156
    4. ':list' → logprob: -10.875892639160156
    5. ',' → logprob: -11.000892639160156
    6. '[' → logprob: -12.000892639160156
    7. 's' → logprob: -12.500892639160156
    8. '=' → logprob: -12.750892639160156
    9. ':[' → logprob: -13.375892639160156
    10. '=lambda' → logprob: -14.063392639160156

Token 173: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1234251260757446
    2. 'sum' → logprob: -1.6234251260757446
    3. 'actions' → logprob: -2.748425006866455
    4. ' print' → logprob: -2.748425006866455
    5. ' sum' → logprob: -2.873425006866455
    6. 'lambda' → logprob: -3.248425006866455
    7. 'pair' → logprob: -3.248425006866455
    8. ' actions' → logprob: -3.373425006866455
    9. ' lambda' → logprob: -3.748425006866455
    10. ' pair' → logprob: -3.873425006866455

Token 174: '(*' (ID: 9000)
  Prédit: '(pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pair' → logprob: -0.48326992988586426
    2. '(lambda' → logprob: -1.7332699298858643
    3. '(tuple' → logprob: -2.4832699298858643
    4. ' (' → logprob: -3.7332699298858643
    5. '(print' → logprob: -3.7332699298858643
    6. ' tuple' → logprob: -4.483269691467285
    7. '(list' → logprob: -4.983269691467285
    8. '(sum' → logprob: -5.108269691467285
    9. '   ' → logprob: -5.108269691467285
    10. '(str' → logprob: -5.233269691467285

Token 175: 'pair' (ID: 25488)
  Prédit: 'pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.02104826271533966
    2. ' pair' → logprob: -3.8960483074188232
    3. '(pair' → logprob: -7.771048069000244
    4. 'included' → logprob: -10.771048545837402
    5. 'tuple' → logprob: -11.021048545837402
    6. 'list' → logprob: -11.521048545837402
    7. ')' → logprob: -12.146048545837402
    8. ' ' → logprob: -12.146048545837402
    9. '   ' → logprob: -12.521048545837402
    10. 'print' → logprob: -12.771048545837402

Token 176: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03468577191233635
    2. ',in' → logprob: -4.0346856117248535
    3. '),' → logprob: -4.2846856117248535
    4. 'included' → logprob: -6.2846856117248535
    5. '   ' → logprob: -8.534686088562012
    6. ' ,' → logprob: -8.659686088562012
    7. 'in' → logprob: -8.909686088562012
    8. ')),' → logprob: -9.534686088562012
    9. ' included' → logprob: -9.784686088562012
    10. '(in' → logprob: -10.534686088562012

Token 177: ' sorted' (ID: 20099)
  Prédit: 'included'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'included' → logprob: -0.20667894184589386
    2. ' included' → logprob: -1.7066789865493774
    3. 'sorted' → logprob: -5.706678867340088
    4. ' sorted' → logprob: -6.581678867340088
    5. 'list' → logprob: -9.081679344177246
    6. '   ' → logprob: -9.081679344177246
    7. ' ' → logprob: -9.206679344177246
    8. ' list' → logprob: -10.331679344177246
    9. '[' → logprob: -10.706679344177246
    10. 'include' → logprob: -10.831679344177246

Token 178: '(in' (ID: 9573)
  Prédit: '(in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(in' → logprob: -0.011889629997313023
    2. 'included' → logprob: -4.511889457702637
    3. 'in' → logprob: -7.261889457702637
    4. '(list' → logprob: -9.261889457702637
    5. ' included' → logprob: -10.761889457702637
    6. '(' → logprob: -11.511889457702637
    7. '(include' → logprob: -12.386889457702637
    8. 'list' → logprob: -12.636889457702637
    9. ')' → logprob: -13.011889457702637
    10. ' (' → logprob: -13.886889457702637

Token 179: 'cluded' (ID: 15730)
  Prédit: 'cluded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cluded' → logprob: -1.8670179997570813e-05
    2. 'included' → logprob: -11.250019073486328
    3. 'CLUDED' → logprob: -13.500019073486328
    4. '[' → logprob: -13.625019073486328
    5. '(cl' → logprob: -14.125019073486328
    6. ')' → logprob: -14.750019073486328
    7. '{' → logprob: -15.125019073486328
    8. '(' → logprob: -15.125019073486328
    9. 'l' → logprob: -15.500019073486328
    10. 'cl' → logprob: -15.500019073486328

Token 180: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.028753822669386864
    2. '()))' → logprob: -3.6537537574768066
    3. '))]
' → logprob: -6.653753757476807
    4. ')))' → logprob: -7.278753757476807
    5. ',' → logprob: -8.653754234313965
    6. ')]' → logprob: -9.653754234313965
    7. ')' → logprob: -9.778754234313965
    8. '()' → logprob: -10.028754234313965
    9. '))))' → logprob: -10.903754234313965
    10. '())))' → logprob: -11.153754234313965

Token 181: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005587508203461766
    2. ')' → logprob: -8.125558853149414
    3. ']' → logprob: -8.500558853149414
    4. ')]
' → logprob: -11.125558853149414
    5. '))' → logprob: -11.500558853149414
    6. ')])' → logprob: -11.875558853149414
    7. '])]' → logprob: -12.125558853149414
    8. '())' → logprob: -12.125558853149414
    9. '()]' → logprob: -12.250558853149414
    10. ' )' → logprob: -12.625558853149414


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 179
Tokens correctement prédits (1ère position, stricte): 61
Tokens correctement prédits (1ère position, avec adaptation): 61
Tokens correctement prédits (top 10): 135
Précision stricte (1ère position): 34.08%
Précision adaptée (1ère position): 34.08%
Précision (top 10): 75.42%
================================================================================
