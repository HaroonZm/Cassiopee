================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N_K_Q = input().split()
N = int(N_K_Q[0])
K = int(N_K_Q[1])
Q = int(N_K_Q[2])
A = []
i = 0
while i < Q:
    A.append(int(input()))
    i += 1

point_list = []
i = 0
while i < N:
    point_list.append(0)
    i += 1

q = 0
while q < Q:
    point_list[A[q] - 1] += 1
    q += 1

n = 0
while n < N:
    if Q - point_list[n] >= K:
        print('No')
    else:
        print('Yes')
    n += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '_K' (ID: 20555)
  → Token d'amorce (pas de prédiction)

Token 2: '_Q' (ID: 28618)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8956981301307678
    2. '_' → logprob: -1.020698070526123
    3. ' =' → logprob: -1.895698070526123
    4. '[' → logprob: -4.020698070526123
    5. ':' → logprob: -4.270698070526123
    6. ')' → logprob: -4.270698070526123
    7. ' ' → logprob: -5.270698070526123
    8. ',' → logprob: -5.520698070526123
    9. '*' → logprob: -5.520698070526123
    10. '(' → logprob: -5.770698070526123

Token 4: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03350183740258217
    2. '64' → logprob: -5.033501625061035
    3. '8' → logprob: -5.158501625061035
    4. '10' → logprob: -5.283501625061035
    5. '16' → logprob: -5.533501625061035
    6. '9' → logprob: -5.783501625061035
    7. '12' → logprob: -6.533501625061035
    8. '32' → logprob: -6.908501625061035
    9. '0' → logprob: -7.033501625061035
    10. '7' → logprob: -7.283501625061035

Token 5: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10197768360376358
    2. ''' → logprob: -2.726977586746216
    3. '"' → logprob: -4.351977825164795
    4. '[' → logprob: -5.101977825164795
    5. '.' → logprob: -5.351977825164795
    6. '_' → logprob: -6.601977825164795
    7. '```' → logprob: -6.726977825164795
    8. '('' → logprob: -6.976977825164795
    9. '("("' → logprob: -6.976977825164795
    10. '(
' → logprob: -7.101977825164795

Token 6: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6304441094398499
    2. '+' → logprob: -1.505444049835205
    3. '.strip' → logprob: -2.130444049835205
    4. '()' → logprob: -3.130444049835205
    5. ')' → logprob: -3.880444049835205
    6. ' ' → logprob: -5.130444049835205
    7. '.split' → logprob: -5.130444049835205
    8. '*' → logprob: -5.130444049835205
    9. '\n' → logprob: -5.255444049835205
    10. 'strip' → logprob: -5.255444049835205

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04312342777848244
    2. '()' → logprob: -3.168123483657837
    3. '(
' → logprob: -10.168123245239258
    4. '"' → logprob: -10.793123245239258
    5. '(

' → logprob: -11.418123245239258
    6. '('' → logprob: -11.543123245239258
    7. '`' → logprob: -11.793123245239258
    8. '```' → logprob: -12.043123245239258
    9. '`()' → logprob: -12.043123245239258
    10. ' (' → logprob: -12.418123245239258

Token 8: 'N' (ID: 45)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01124587468802929
    2. '=' → logprob: -5.6362457275390625
    3. '.' → logprob: -6.5112457275390625
    4. '#' → logprob: -6.7612457275390625
    5. '_' → logprob: -7.2612457275390625
    6. ' =' → logprob: -7.5112457275390625
    7. 'print' → logprob: -7.5112457275390625
    8. '```' → logprob: -7.6362457275390625
    9. ')' → logprob: -7.8862457275390625
    10. '()' → logprob: -8.136245727539062

Token 9: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05202561989426613
    2. '_K' → logprob: -3.427025556564331
    3. '[' → logprob: -4.05202579498291
    4. '[_' → logprob: -7.42702579498291
    5. '_N' → logprob: -10.05202579498291
    6. '_[' → logprob: -10.30202579498291
    7. '_k' → logprob: -10.67702579498291
    8. '[K' → logprob: -11.17702579498291
    9. ')' → logprob: -11.30202579498291
    10. '\[' → logprob: -11.30202579498291

Token 10: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06199491396546364
    2. ' int' → logprob: -2.811995029449463
    3. ' N' → logprob: -11.561994552612305
    4. 'N' → logprob: -12.061994552612305
    5. 'input' → logprob: -12.311994552612305
    6. 'len' → logprob: -12.561994552612305
    7. '[int' → logprob: -13.436994552612305
    8. ' ' → logprob: -14.186994552612305
    9. ' input' → logprob: -14.936994552612305
    10. '(int' → logprob: -15.311994552612305

Token 11: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4751719832420349
    2. '(N' → logprob: -0.9751719832420349
    3. '(_' → logprob: -7.85017204284668
    4. '('' → logprob: -7.85017204284668
    5. '(K' → logprob: -8.85017204284668
    6. '('_' → logprob: -9.47517204284668
    7. '("("' → logprob: -10.85017204284668
    8. '("' → logprob: -10.97517204284668
    9. '("_' → logprob: -11.35017204284668
    10. '(`' → logprob: -11.47517204284668

Token 12: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -0.07976247370243073
    2. '[' → logprob: -2.8297624588012695
    3. ')' → logprob: -4.0797624588012695
    4. '[_' → logprob: -8.45476245880127
    5. 'K' → logprob: -8.70476245880127
    6. '[K' → logprob: -8.95476245880127
    7. '_)' → logprob: -9.95476245880127
    8. '_N' → logprob: -10.45476245880127
    9. '_Q' → logprob: -10.57976245880127
    10. ')_' → logprob: -10.70476245880127

Token 13: '_Q' (ID: 28618)
  Prédit: '_Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_Q' → logprob: -0.05248621851205826
    2. '_K' → logprob: -3.0524861812591553
    3. '_' → logprob: -5.677486419677734
    4. ')' → logprob: -8.177486419677734
    5. '[' → logprob: -10.052486419677734
    6. ')_' → logprob: -10.302486419677734
    7. '_S' → logprob: -10.302486419677734
    8. '_)' → logprob: -11.052486419677734
    9. 'Q' → logprob: -11.302486419677734
    10. ' _' → logprob: -11.677486419677734

Token 14: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0564331205387134e-05
    2. '[N' → logprob: -11.75001049041748
    3. ')' → logprob: -13.00001049041748
    4. ' [' → logprob: -15.62501049041748
    5. '```' → logprob: -16.500011444091797
    6. '\[' → logprob: -16.625011444091797
    7. '[
' → logprob: -16.750011444091797
    8. '[len' → logprob: -18.500011444091797
    9. '[-' → logprob: -18.625011444091797
    10. ')[' → logprob: -18.875011444091797

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.250001907348633
    3. '1' → logprob: -15.625001907348633
    4. ')' → logprob: -16.375001907348633
    5. '```' → logprob: -16.875001907348633
    6. ']' → logprob: -17.750001907348633
    7. '])' → logprob: -17.937501907348633
    8. '2' → logprob: -18.125001907348633
    9. '`' → logprob: -18.250001907348633
    10. '[' → logprob: -18.625001907348633

Token 16: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016823912039399147
    2. '])' → logprob: -4.141823768615723
    3. ']' → logprob: -7.266823768615723
    4. ')]' → logprob: -10.641823768615723
    5. ')
' → logprob: -10.891823768615723
    6. ')])' → logprob: -11.016823768615723
    7. ''])' → logprob: -12.016823768615723
    8. ' )' → logprob: -12.141823768615723
    9. '`)' → logprob: -12.516823768615723
    10. '）' → logprob: -12.516823768615723

Token 17: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -8.149051427608356e-05
    2. 'M' → logprob: -9.750081062316895
    3. 'Q' → logprob: -11.500081062316895
    4. ' K' → logprob: -11.875081062316895
    5. '```' → logprob: -12.875081062316895
    6. 'k' → logprob: -14.000081062316895
    7. 'N' → logprob: -14.625081062316895
    8. '_K' → logprob: -15.125081062316895
    9. '`' → logprob: -15.250081062316895
    10. '#' → logprob: -15.750081062316895

Token 18: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05094507709145546
    2. '<|end|>' → logprob: -3.6759450435638428
    3. ')' → logprob: -4.175945281982422
    4. '+' → logprob: -5.925945281982422
    5. '[' → logprob: -6.300945281982422
    6. '*' → logprob: -6.800945281982422
    7. '```' → logprob: -7.050945281982422
    8. '=' → logprob: -7.675945281982422
    9. ' ' → logprob: -7.675945281982422
    10. '<|end|>' → logprob: -8.300945281982422

Token 19: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16022644937038422
    2. 'int' → logprob: -1.9102264642715454
    3. ' N' → logprob: -13.660226821899414
    4. '=int' → logprob: -15.035226821899414
    5. ' ' → logprob: -15.285226821899414
    6. '(int' → logprob: -15.660226821899414
    7. '0' → logprob: -16.785226821899414
    8. ' ' → logprob: -16.785226821899414
    9. '	int' → logprob: -16.785226821899414
    10. '32' → logprob: -17.035226821899414

Token 20: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5766745209693909
    2. '(' → logprob: -0.8266745209693909
    3. '(K' → logprob: -7.451674461364746
    4. '("("' → logprob: -9.451674461364746
    5. '('' → logprob: -10.451674461364746
    6. '((' → logprob: -11.826674461364746
    7. ' (' → logprob: -11.826674461364746
    8. '(`' → logprob: -11.826674461364746
    9. '(

' → logprob: -11.826674461364746
    10. ''' → logprob: -13.076674461364746

Token 21: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -0.00015705463010817766
    2. '[' → logprob: -9.375157356262207
    3. '[_' → logprob: -10.250157356262207
    4. ')' → logprob: -11.250157356262207
    5. '[K' → logprob: -11.875157356262207
    6. ')_' → logprob: -12.125157356262207
    7. '_Q' → logprob: -12.750157356262207
    8. '```' → logprob: -13.000157356262207
    9. '_' → logprob: -13.750157356262207
    10. ']_' → logprob: -13.875157356262207

Token 22: '_Q' (ID: 28618)
  Prédit: '_Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_Q' → logprob: -0.31448599696159363
    2. '_K' → logprob: -1.314486026763916
    3. '[' → logprob: -6.814486026763916
    4. '])' → logprob: -9.814485549926758
    5. ']_' → logprob: -11.314485549926758
    6. '_G' → logprob: -11.564485549926758
    7. '[_' → logprob: -11.564485549926758
    8. ' _' → logprob: -11.939485549926758
    9. '```' → logprob: -12.064485549926758
    10. '_' → logprob: -12.064485549926758

Token 23: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.054500666621607e-06
    2. ' [' → logprob: -13.62500286102295
    3. ')' → logprob: -13.87500286102295
    4. '```' → logprob: -15.00000286102295
    5. '1' → logprob: -15.75000286102295
    6. ')[' → logprob: -16.125003814697266
    7. '[
' → logprob: -16.875003814697266
    8. '\[' → logprob: -17.000003814697266
    9. '   ' → logprob: -17.500003814697266
    10. '	' → logprob: -17.625003814697266

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.664371848164592e-05
    2. '])' → logprob: -11.375016212463379
    3. '2' → logprob: -12.750016212463379
    4. ' ' → logprob: -14.125016212463379
    5. '0' → logprob: -14.250016212463379
    6. ']' → logprob: -14.375016212463379
    7. '```' → logprob: -16.375017166137695
    8. ')' → logprob: -17.375017166137695
    9. '+' → logprob: -17.500017166137695
    10. '-' → logprob: -17.625017166137695

Token 25: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13233664631843567
    2. '])' → logprob: -2.1323366165161133
    3. ']' → logprob: -5.257336616516113
    4. ')]' → logprob: -10.132336616516113
    5. '[' → logprob: -10.257336616516113
    6. '）' → logprob: -10.382336616516113
    7. ''])' → logprob: -10.632336616516113
    8. ')
' → logprob: -11.507336616516113
    9. '')' → logprob: -11.507336616516113
    10. ')])' → logprob: -12.007336616516113

Token 26: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.014678503386676311
    2. ' Q' → logprob: -4.764678478240967
    3. '_Q' → logprob: -6.514678478240967
    4. '_' → logprob: -6.639678478240967
    5. ' 
' → logprob: -7.389678478240967
    6. 'N' → logprob: -7.764678478240967
    7. '#' → logprob: -7.764678478240967
    8. ')' → logprob: -7.764678478240967
    9. '_
' → logprob: -8.514678955078125
    10. ' ' → logprob: -8.514678955078125

Token 27: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7172262072563171
    2. ' =' → logprob: -1.342226266860962
    3. '=' → logprob: -1.717226266860962
    4. ')' → logprob: -3.342226266860962
    5. '_' → logprob: -4.092226028442383
    6. '[]' → logprob: -5.092226028442383
    7. ''' → logprob: -5.467226028442383
    8. ']' → logprob: -5.717226028442383
    9. '<|end|>' → logprob: -6.467226028442383
    10. '(' → logprob: -7.092226028442383

Token 28: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2014138251543045
    2. ' int' → logprob: -1.701413869857788
    3. '(int' → logprob: -15.576414108276367
    4. '[int' → logprob: -16.076414108276367
    5. '=int' → logprob: -16.076414108276367
    6. '0' → logprob: -16.201414108276367
    7. ' ' → logprob: -16.826414108276367
    8. ' N' → logprob: -17.201414108276367
    9. '	int' → logprob: -18.076414108276367
    10. '<int' → logprob: -18.326414108276367

Token 29: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.32924163341522217
    2. '(' → logprob: -1.7042416334152222
    3. '(Q' → logprob: -2.3292417526245117
    4. '(K' → logprob: -7.079241752624512
    5. '(input' → logprob: -9.204241752624512
    6. '("("' → logprob: -9.329241752624512
    7. '(int' → logprob: -10.079241752624512
    8. '()' → logprob: -10.204241752624512
    9. '('' → logprob: -10.579241752624512
    10. '(
' → logprob: -10.704241752624512

Token 30: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -6.098748053773306e-05
    2. '_Q' → logprob: -10.62506103515625
    3. 'K' → logprob: -10.75006103515625
    4. '[' → logprob: -12.12506103515625
    5. ')_' → logprob: -12.62506103515625
    6. ')' → logprob: -13.25006103515625
    7. ']_' → logprob: -13.75006103515625
    8. '[K' → logprob: -13.87506103515625
    9. '[_' → logprob: -14.50006103515625
    10. '])' → logprob: -14.62506103515625

Token 31: '_Q' (ID: 28618)
  Prédit: '_Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_Q' → logprob: -0.00013500562636181712
    2. '[' → logprob: -9.75013542175293
    3. 'Q' → logprob: -10.25013542175293
    4. ')' → logprob: -11.62513542175293
    5. '_' → logprob: -11.75013542175293
    6. ']' → logprob: -12.12513542175293
    7. '])' → logprob: -12.25013542175293
    8. ' _' → logprob: -12.62513542175293
    9. '_K' → logprob: -13.50013542175293
    10. '_C' → logprob: -13.75013542175293

Token 32: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00119296764023602
    2. '])' → logprob: -7.376193046569824
    3. ')' → logprob: -8.376193046569824
    4. '2' → logprob: -9.001193046569824
    5. '-' → logprob: -9.501193046569824
    6. '][' → logprob: -10.001193046569824
    7. ']' → logprob: -10.126193046569824
    8. ')[' → logprob: -10.626193046569824
    9. '0' → logprob: -10.876193046569824
    10. ' [' → logprob: -13.501193046569824

Token 33: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.375001907348633
    3. '])' → logprob: -15.625001907348633
    4. '0' → logprob: -16.375001907348633
    5. '   ' → logprob: -16.625001907348633
    6. '1' → logprob: -16.750001907348633
    7. '```' → logprob: -16.750001907348633
    8. ']' → logprob: -17.437501907348633
    9. '3' → logprob: -17.500001907348633
    10. '２' → logprob: -17.750001907348633

Token 34: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '）' → logprob: -15.250000953674316
    3. '))' → logprob: -15.875000953674316
    4. '')' → logprob: -16.0
    5. '`)' → logprob: -16.25
    6. ']' → logprob: -16.625
    7. ' )' → logprob: -16.875
    8. ')}' → logprob: -17.5
    9. '),' → logprob: -17.75
    10. ')]' → logprob: -18.0

Token 35: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32916682958602905
    2. 'A' → logprob: -1.7041668891906738
    3. 'r' → logprob: -4.454166889190674
    4. 'p' → logprob: -4.704166889190674
    5. '' → logprob: -4.704166889190674
    6. 'scores' → logprob: -4.954166889190674
    7. 'for' → logprob: -5.329166889190674
    8. 'players' → logprob: -5.329166889190674
    9. 'n' → logprob: -5.579166889190674
    10. 'N' → logprob: -5.579166889190674

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5997183918952942
    2. '=' → logprob: -1.2247183322906494
    3. '_' → logprob: -2.0997183322906494
    4. '[' → logprob: -3.4747183322906494
    5. ' ' → logprob: -6.3497185707092285
    6. '[]' → logprob: -6.8497185707092285
    7. '.' → logprob: -8.84971809387207
    8. '=[]' → logprob: -9.34971809387207
    9. 'space' → logprob: -9.59971809387207
    10. '[i' → logprob: -9.84971809387207

Token 37: ' []
' (ID: 8911)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.503609836101532
    2. 'list' → logprob: -1.3786098957061768
    3. ' []' → logprob: -3.3786098957061768
    4. '[]' → logprob: -3.3786098957061768
    5. '[' → logprob: -3.6286098957061768
    6. ' [' → logprob: -3.7536098957061768
    7. 'input' → logprob: -4.378609657287598
    8. ' input' → logprob: -4.628609657287598
    9. '[input' → logprob: -6.503609657287598
    10. '[list' → logprob: -6.628609657287598

Token 38: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008875182829797268
    2. ' for' → logprob: -7.500887393951416
    3. '_' → logprob: -8.750887870788574
    4. '=' → logprob: -9.250887870788574
    5. '[' → logprob: -10.625887870788574
    6. '.' → logprob: -11.625887870788574
    7. '0' → logprob: -11.875887870788574
    8. '\n' → logprob: -11.875887870788574
    9. '```' → logprob: -12.250887870788574
    10. '	for' → logprob: -12.500887870788574

Token 39: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5847444534301758
    2. '=' → logprob: -0.8347444534301758
    3. ' =' → logprob: -5.209744453430176
    4. 'nt' → logprob: -6.709744453430176
    5. 'f' → logprob: -7.084744453430176
    6. '_' → logprob: -7.709744453430176
    7. ' n' → logprob: -8.584744453430176
    8. 's' → logprob: -8.709744453430176
    9. ' ' → logprob: -8.834744453430176
    10. 'nd' → logprob: -9.584744453430176

Token 40: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14268061518669128
    2. ' ' → logprob: -2.0176806449890137
    3. '1' → logprob: -12.267680168151855
    4. '<|end|>' → logprob: -15.017680168151855
    5. ' i' → logprob: -15.892680168151855
    6. ' ' → logprob: -16.392681121826172
    7. '۰' → logprob: -17.392681121826172
    8. 'i' → logprob: -17.580181121826172
    9. '2' → logprob: -17.892681121826172
    10. 'int' → logprob: -18.142681121826172

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013377433642745018
    2. ' ' → logprob: -6.62633752822876
    3. '1' → logprob: -11.376338005065918
    4. 'int' → logprob: -15.626338005065918
    5. '2' → logprob: -17.2513370513916
    6. 'N' → logprob: -17.3763370513916
    7. '  ' → logprob: -18.1263370513916
    8. '   ' → logprob: -18.5638370513916
    9. '[' → logprob: -18.5638370513916
    10. '4' → logprob: -18.6263370513916

Token 42: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9210383892059326
    2. '
' → logprob: -1.0460383892059326
    3. '<|end|>' → logprob: -2.0460383892059326
    4. ' while' → logprob: -2.2960383892059326
    5. '\n' → logprob: -4.671038627624512
    6. '<|end|>' → logprob: -5.171038627624512
    7. ' 
' → logprob: -6.671038627624512
    8. '' → logprob: -7.046038627624512
    9. '\' → logprob: -7.171038627624512
    10. ' ' → logprob: -7.671038627624512

Token 43: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.25963565707206726
    2. ' while' → logprob: -2.1346356868743896
    3. '
' → logprob: -2.5096356868743896
    4. '\n' → logprob: -3.7596356868743896
    5. '\' → logprob: -6.6346354484558105
    6. 'w' → logprob: -6.7596354484558105
    7. '' → logprob: -7.1346354484558105
    8. ' 
' → logprob: -7.7596354484558105
    9. '	while' → logprob: -7.7596354484558105
    10. '<|end|>' → logprob: -7.8846354484558105

Token 44: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.003369135083630681
    2. 'i' → logprob: -5.753369331359863
    3. ' ' → logprob: -8.628369331359863
    4. ' ' → logprob: -11.503369331359863
    5. '	i' → logprob: -14.128369331359863
    6. ' N' → logprob: -14.128369331359863
    7. ' ‌' → logprob: -15.628369331359863
    8. ' not' → logprob: -16.003368377685547
    9. '_' → logprob: -16.253368377685547
    10. 'N' → logprob: -16.503368377685547

Token 45: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5760305523872375
    2. '<' → logprob: -0.8260305523872375
    3. '<len' → logprob: -10.576030731201172
    4. '<n' → logprob: -10.826030731201172
    5. '<N' → logprob: -11.076030731201172
    6. ' ' → logprob: -11.076030731201172
    7. '<Q' → logprob: -13.076030731201172
    8. '<size' → logprob: -13.201030731201172
    9. '<num' → logprob: -13.326030731201172
    10. ' less' → logprob: -14.076030731201172

Token 46: ' Q' (ID: 1486)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3137175738811493
    2. ' N' → logprob: -1.3137176036834717
    3. ' ' → logprob: -7.813717365264893
    4. 'K' → logprob: -10.43871784210205
    5. ' K' → logprob: -10.93871784210205
    6. 'Q' → logprob: -13.56371784210205
    7. '	N' → logprob: -13.93871784210205
    8. 'n' → logprob: -14.18871784210205
    9. ' Q' → logprob: -14.56371784210205
    10. ' ' → logprob: -14.81371784210205

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012662561610341072
    2. ' :' → logprob: -4.387662410736084
    3. ':
' → logprob: -9.012662887573242
    4. ' :
' → logprob: -10.637662887573242
    5. '+:' → logprob: -13.387662887573242
    6. '+' → logprob: -13.887662887573242
    7. ':**' → logprob: -14.387662887573242
    8. '：' → logprob: -14.637662887573242
    9. ' ' → logprob: -14.762662887573242
    10. '):' → logprob: -15.012662887573242

Token 48: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.05377105623483658
    2. '
' → logprob: -4.303771018981934
    3. ' ' → logprob: -4.303771018981934
    4. ' A' → logprob: -4.553771018981934
    5. '  
' → logprob: -5.553771018981934
    6. ' i' → logprob: -5.803771018981934
    7. '```' → logprob: -6.303771018981934
    8. 'A' → logprob: -6.428771018981934
    9. '<|end|>' → logprob: -7.303771018981934
    10. 'input' → logprob: -7.553771018981934

Token 49: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3316836953163147
    2. 'A' (adapté à ' A') → logprob: -1.83168363571167
    3. ' ' → logprob: -3.70668363571167
    4. ' line' → logprob: -4.08168363571167
    5. ' a' → logprob: -4.20668363571167
    6. ' 
' → logprob: -4.58168363571167
    7. ' player' → logprob: -4.58168363571167
    8. ' i' → logprob: -4.83168363571167
    9. ' user' → logprob: -4.95668363571167
    10. ' t' → logprob: -5.83168363571167

Token 50: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.38743430376052856
    2. '.' → logprob: -1.1374342441558838
    3. '=' → logprob: -8.387434005737305
    4. '.=' → logprob: -9.262434005737305
    5. ' =' → logprob: -9.887434005737305
    6. '+=' → logprob: -10.137434005737305
    7. '.i' → logprob: -10.387434005737305
    8. '.extend' → logprob: -10.887434005737305
    9. ' +=' → logprob: -11.012434005737305
    10. '.ap' → logprob: -11.262434005737305

Token 51: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.010178163647651672
    2. '(' → logprob: -4.635178089141846
    3. '(list' → logprob: -8.635178565979004
    4. 'int' → logprob: -9.135178565979004
    5. '(input' → logprob: -9.760178565979004
    6. '(tuple' → logprob: -10.885178565979004
    7. ' (' → logprob: -11.260178565979004
    8. '((' → logprob: -11.635178565979004
    9. '()' → logprob: -11.760178565979004
    10. '(
' → logprob: -11.760178565979004

Token 52: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05529520660638809
    2. '(' → logprob: -2.93029522895813
    3. '()' → logprob: -8.43029499053955
    4. '(
' → logprob: -9.18029499053955
    5. ')' → logprob: -10.05529499053955
    6. '(

' → logprob: -10.43029499053955
    7. '())' → logprob: -12.55529499053955
    8. 'input' → logprob: -12.68029499053955
    9. '((' → logprob: -12.80529499053955
    10. ' (' → logprob: -12.93029499053955

Token 53: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3218306005001068
    2. '())' → logprob: -1.3218306303024292
    3. '()' → logprob: -4.821830749511719
    4. '().' → logprob: -8.196830749511719
    5. '())))' → logprob: -9.821830749511719
    6. '()));' → logprob: -10.196830749511719
    7. '())
' → logprob: -10.571830749511719
    8. '()))
' → logprob: -10.696830749511719
    9. '(' → logprob: -10.821830749511719
    10. '()
' → logprob: -11.571830749511719

Token 54: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.134299397468567
    2. '   ' → logprob: -1.259299397468567
    3. 'i' → logprob: -1.384299397468567
    4. ' i' → logprob: -2.1342992782592773
    5. '	i' → logprob: -4.259299278259277
    6. '    
' → logprob: -6.009299278259277
    7. '[i' → logprob: -6.009299278259277
    8. '\n' → logprob: -6.509299278259277
    9. ' 
' → logprob: -6.509299278259277
    10. '  
' → logprob: -6.884299278259277

Token 55: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.31520819664001465
    2. ' i' → logprob: -1.3152081966400146
    3. '   ' → logprob: -6.690208435058594
    4. '	i' → logprob: -7.815208435058594
    5. ' 
' → logprob: -9.190208435058594
    6. '\n' → logprob: -9.565208435058594
    7. '
' → logprob: -10.065208435058594
    8. ' ' → logprob: -10.440208435058594
    9. '    
' → logprob: -10.815208435058594
    10. '_i' → logprob: -11.565208435058594

Token 56: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14470748603343964
    2. ' +=' → logprob: -2.394707441329956
    3. '+=' → logprob: -3.144707441329956
    4. ' +' → logprob: -7.894707679748535
    5. ' ' → logprob: -10.019707679748535
    6. '=' → logprob: -11.644707679748535
    7. '<|end|>' → logprob: -12.019707679748535
    8. '++' → logprob: -12.269707679748535
    9. '+='' → logprob: -13.144707679748535
    10. '+="' → logprob: -13.269707679748535

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008614808320999146
    2. ' ' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.133614540100098
    4. ' ' → logprob: -18.258615493774414
    5. '  ' → logprob: -18.633615493774414
    6. '    ' → logprob: -18.633615493774414
    7. '１' → logprob: -18.883615493774414
    8. '```' → logprob: -19.008615493774414
    9. '+' → logprob: -19.821115493774414
    10. '۱' → logprob: -20.571115493774414

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.5000057220459
    4. '```' → logprob: -18.0000057220459
    5. '１' → logprob: -18.5000057220459
    6. '  ' → logprob: -19.2500057220459
    7. '۱' → logprob: -20.0000057220459
    8. '+' → logprob: -20.0000057220459
    9. '१' → logprob: -20.3125057220459
    10. '`' → logprob: -20.7500057220459

Token 59: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4453149437904358
    2. 'n' → logprob: -2.570314884185791
    3. 'i' → logprob: -2.695314884185791
    4. '\n' → logprob: -3.445314884185791
    5. 'result' → logprob: -3.945314884185791
    6. 'for' → logprob: -4.070314884185791
    7. 'N' → logprob: -4.445314884185791
    8. 'r' → logprob: -4.445314884185791
    9. '  
' → logprob: -4.445314884185791
    10. '#' → logprob: -4.820314884185791

Token 60: 'point' (ID: 4859)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2118147611618042
    2. 'result' → logprob: -2.0868148803710938
    3. 'score' → logprob: -2.7118148803710938
    4. 'i' → logprob: -2.8368148803710938
    5. 'count' → logprob: -2.9618148803710938
    6. 'res' → logprob: -3.0868148803710938
    7. 'p' → logprob: -3.4618148803710938
    8. 'scores' → logprob: -3.5868148803710938
    9. 'points' → logprob: -3.7118148803710938
    10. 'ans' → logprob: -3.9618148803710938

Token 61: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0017898976802825928
    2. '_s' → logprob: -6.6267900466918945
    3. ' =' → logprob: -8.001790046691895
    4. '_' → logprob: -9.626790046691895
    5. '=' → logprob: -10.501790046691895
    6. 'S' → logprob: -11.876790046691895
    7. '[]' → logprob: -12.251790046691895
    8. '_count' → logprob: -12.626790046691895
    9. '_counts' → logprob: -12.751790046691895
    10. '[' → logprob: -13.501790046691895

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04292907565832138
    2. 's' → logprob: -3.292929172515869
    3. '=' → logprob: -5.417929172515869
    4. ' ' → logprob: -8.667928695678711
    5. '_' → logprob: -9.167928695678711
    6. '[' → logprob: -9.167928695678711
    7. '[:]' → logprob: -10.917928695678711
    8. '[]' → logprob: -11.542928695678711
    9. ' =[' → logprob: -11.542928695678711
    10. '_s' → logprob: -12.542928695678711

Token 63: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6993229389190674
    2. '[N' → logprob: -0.9493229389190674
    3. ' [' → logprob: -2.1993229389190674
    4. '[K' → logprob: -5.824322700500488
    5. '[i' → logprob: -6.949322700500488
    6. '[-' → logprob: -7.824322700500488
    7. '[]' → logprob: -8.074322700500488
    8. '[n' → logprob: -8.574322700500488
    9. '[len' → logprob: -9.199322700500488
    10. '[A' → logprob: -9.574322700500488

Token 64: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4537352919578552
    2. 'i' → logprob: -1.0787353515625
    3. ' for' → logprob: -3.8287353515625
    4. ' i' → logprob: -7.0787353515625
    5. 'count' → logprob: -7.5787353515625
    6. 'p' → logprob: -7.9537353515625
    7. 'j' → logprob: -8.2037353515625
    8. 'player' → logprob: -8.7037353515625
    9. 'f' → logprob: -8.8287353515625
    10. 'score' → logprob: -8.9537353515625

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008893693797290325
    2. '=' → logprob: -5.0088934898376465
    3. ' ' → logprob: -6.1338934898376465
    4. ' +=' → logprob: -13.133893966674805
    5. '<|end|>' → logprob: -13.383893966674805
    6. '0' → logprob: -13.758893966674805
    7. ' ' → logprob: -13.883893966674805
    8. 'space' → logprob: -15.258893966674805
    9. ' =)' → logprob: -15.383893966674805
    10. '  ' → logprob: -15.383893966674805

Token 66: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029757777228951454
    2. ' ' → logprob: -3.5297577381134033
    3. '<|end|>' → logprob: -12.904757499694824
    4. '1' → logprob: -13.779757499694824
    5. 'Q' → logprob: -14.592257499694824
    6. ' Q' → logprob: -14.904757499694824
    7. 'N' → logprob: -15.029757499694824
    8. 'K' → logprob: -15.217257499694824
    9. ' K' → logprob: -15.592257499694824
    10. '=' → logprob: -15.654757499694824

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00027420982951298356
    2. ' ' → logprob: -8.250274658203125
    3. 'Q' → logprob: -12.375274658203125
    4. '1' → logprob: -12.750274658203125
    5. 'K' → logprob: -13.250274658203125
    6. 'N' → logprob: -14.437774658203125
    7. '=' → logprob: -14.625274658203125
    8. 'i' → logprob: -14.937774658203125
    9. 'k' → logprob: -15.062774658203125
    10. '(' → logprob: -15.437774658203125

Token 68: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: 'while' (ID: 7032)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5283628702163696
    2. 'while' → logprob: -1.6533628702163696
    3. '<|end|>' → logprob: -1.6533628702163696
    4. '
' → logprob: -4.02836275100708
    5. ' ' → logprob: -5.15336275100708
    6. ' 
' → logprob: -6.27836275100708
    7. '<|end|>' → logprob: -7.02836275100708
    8. ' While' → logprob: -8.028363227844238
    9. 'While' → logprob: -8.528363227844238
    10. '```' → logprob: -8.653363227844238

Token 70: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.026393309235572815
    2. 'i' → logprob: -3.651393413543701
    3. ' ' → logprob: -9.776392936706543
    4. '	i' → logprob: -11.651392936706543
    5. ' K' → logprob: -12.026392936706543
    6. ' N' → logprob: -12.401392936706543
    7. ' Q' → logprob: -12.526392936706543
    8. 'N' → logprob: -12.776392936706543
    9. 'K' → logprob: -13.151392936706543
    10. 'Q' → logprob: -13.151392936706543

Token 71: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.17978554964065552
    2. '<' → logprob: -1.8047854900360107
    3. '<N' → logprob: -11.05478572845459
    4. '<Q' → logprob: -11.17978572845459
    5. ' ' → logprob: -11.80478572845459
    6. '<K' → logprob: -13.67978572845459
    7. '<n' → logprob: -13.80478572845459
    8. '<len' → logprob: -14.67978572845459
    9. ' <=' → logprob: -15.30478572845459
    10. '<|end|>' → logprob: -15.92978572845459

Token 72: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0102843614295125
    2. ' N' → logprob: -5.260284423828125
    3. 'K' → logprob: -5.635284423828125
    4. 'Q' → logprob: -6.635284423828125
    5. ' ' → logprob: -9.510284423828125
    6. ' K' → logprob: -10.260284423828125
    7. 'len' → logprob: -10.885284423828125
    8. ' Q' → logprob: -11.385284423828125
    9. '   ' → logprob: -12.385284423828125
    10. ' len' → logprob: -12.510284423828125

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024034816306084394
    2. ' :' → logprob: -6.127403259277344
    3. ':
' → logprob: -8.502403259277344
    4. ' :
' → logprob: -12.252403259277344
    5. '):' → logprob: -12.627403259277344
    6. ' ' → logprob: -13.502403259277344
    7. '   ' → logprob: -14.002403259277344
    8. '*' → logprob: -14.127403259277344
    9. '+:' → logprob: -14.127403259277344
    10. '<|end|>' → logprob: -14.377403259277344

Token 74: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3836263120174408
    2. '   ' → logprob: -2.0086262226104736
    3. ' 
' → logprob: -2.6336262226104736
    4. '<|end|>' → logprob: -3.6336262226104736
    5. '  ' → logprob: -4.008626461029053
    6. 'point' → logprob: -4.133626461029053
    7. '    ' → logprob: -4.383626461029053
    8. '
' → logprob: -4.383626461029053
    9. '    
' → logprob: -4.633626461029053
    10. ' point' → logprob: -5.008626461029053

Token 75: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.3801040053367615
    2. 'point' (adapté à ' point') → logprob: -1.5051040649414062
    3. ' K' → logprob: -2.6301040649414062
    4. ' ' → logprob: -4.755104064941406
    5. 'K' → logprob: -5.380104064941406
    6. '0' → logprob: -6.630104064941406
    7. ' i' → logprob: -6.880104064941406
    8. 'p' → logprob: -7.130104064941406
    9. ' p' → logprob: -7.380104064941406
    10. '   ' → logprob: -7.505104064941406

Token 76: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.004680511076003313
    2. 's' → logprob: -6.004680633544922
    3. '_' → logprob: -6.379680633544922
    4. ' =' → logprob: -7.879680633544922
    5. '_points' → logprob: -10.629680633544922
    6. '=' → logprob: -10.629680633544922
    7. ' _' → logprob: -10.754680633544922
    8. '_s' → logprob: -11.379680633544922
    9. '_lists' → logprob: -11.504680633544922
    10. '=_' → logprob: -12.129680633544922

Token 77: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6933099031448364
    2. '.append' → logprob: -0.6933099031448364
    3. '=' → logprob: -9.568309783935547
    4. 'append' → logprob: -10.693309783935547
    5. '.extend' → logprob: -10.818309783935547
    6. '.=' → logprob: -11.068309783935547
    7. ' =' → logprob: -12.068309783935547
    8. ' ' → logprob: -12.193309783935547
    9. ' .' → logprob: -12.193309783935547
    10. '+=' → logprob: -12.693309783935547

Token 78: '(' (ID: 7)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.35226547718048096
    2. '(' → logprob: -1.227265477180481
    3. '(Q' → logprob: -6.352265357971191
    4. '0' → logprob: -6.852265357971191
    5. '([' → logprob: -8.227265357971191
    6. '((' → logprob: -8.352265357971191
    7. '(int' → logprob: -8.852265357971191
    8. 'K' → logprob: -8.977265357971191
    9. ' (' → logprob: -9.977265357971191
    10. '(i' → logprob: -10.102265357971191

Token 79: '0' (ID: 15)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.003128640353679657
    2. ' K' → logprob: -6.253128528594971
    3. '0' → logprob: -7.128128528594971
    4. '(K' → logprob: -8.753129005432129
    5. ' ' → logprob: -9.253129005432129
    6. '[K' → logprob: -10.378129005432129
    7. '1' → logprob: -10.503129005432129
    8. '   ' → logprob: -10.503129005432129
    9. '	K' → logprob: -11.753129005432129
    10. 'max' → logprob: -11.753129005432129

Token 80: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025835048872977495
    2. ')
' → logprob: -6.2525835037231445
    3. ' )' → logprob: -7.5025835037231445
    4. '   ' → logprob: -10.002583503723145
    5. ')i' → logprob: -10.252583503723145
    6. ' )
' → logprob: -11.502583503723145
    7. '
' → logprob: -12.752583503723145
    8. ')
' → logprob: -12.752583503723145
    9. ' ' → logprob: -13.252583503723145
    10. '<|end|>' → logprob: -14.502583503723145

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09548896551132202
    2. '
' → logprob: -2.595489025115967
    3. '    
' → logprob: -4.345489025115967
    4. ' 
' → logprob: -6.970489025115967
    5. ' i' → logprob: -7.095489025115967
    6. '\n' → logprob: -7.720489025115967
    7. '   
' → logprob: -8.095488548278809
    8. '  
' → logprob: -8.220488548278809
    9. 'i' → logprob: -8.345488548278809
    10. '<|end|>' → logprob: -8.470488548278809

Token 82: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6248878836631775
    2. '   ' → logprob: -1.1248879432678223
    3. 'i' (adapté à ' i') → logprob: -1.9998879432678223
    4. '	i' → logprob: -6.124887943267822
    5. '    
' → logprob: -6.499887943267822
    6. '
' → logprob: -7.999887943267822
    7. ' 
' → logprob: -8.499887466430664
    8. '\n' → logprob: -9.249887466430664
    9. ' ' → logprob: -9.249887466430664
    10. '[i' → logprob: -9.374887466430664

Token 83: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38908812403678894
    2. ' +=' → logprob: -1.1390881538391113
    3. '+' → logprob: -6.139088153839111
    4. '++' → logprob: -10.389087677001953
    5. '=' → logprob: -11.264087677001953
    6. '<|end|>' → logprob: -12.639087677001953
    7. '+='' → logprob: -12.639087677001953
    8. ' ' → logprob: -13.389087677001953
    9. '+="' → logprob: -13.514087677001953
    10. '+++' → logprob: -13.639087677001953

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011048762127757072
    2. ' ' → logprob: -4.511048793792725
    3. '   ' → logprob: -14.011048316955566
    4. '  ' → logprob: -16.511049270629883
    5. '```' → logprob: -16.823549270629883
    6. '１' → logprob: -17.323549270629883
    7. ' ' → logprob: -17.386049270629883
    8. '<|end|>' → logprob: -17.886049270629883
    9. '    ' → logprob: -18.323549270629883
    10. '۱' → logprob: -19.011049270629883

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014048899174667895
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -14.625140190124512
    4. '```' → logprob: -16.625141143798828
    5. '  ' → logprob: -17.062641143798828
    6. '１' → logprob: -17.187641143798828
    7. ' ' → logprob: -18.375141143798828
    8. '0' → logprob: -18.875141143798828
    9. '۱' → logprob: -18.937641143798828
    10. '    ' → logprob: -19.250141143798828

Token 86: '

' (ID: 279)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.58603435754776
    2. '
' → logprob: -0.83603435754776
    3. 'for' → logprob: -5.461034297943115
    4. 'while' → logprob: -6.711034297943115
    5. '
' → logprob: -6.961034297943115
    6. '

' → logprob: -7.086034297943115
    7. '  
' → logprob: -7.336034297943115
    8. ' i' → logprob: -7.461034297943115
    9. ' 
' → logprob: -7.961034297943115
    10. '\n' → logprob: -8.086034774780273

Token 87: 'q' (ID: 80)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02306901477277279
    2. 'for' → logprob: -3.898068904876709
    3. 'j' → logprob: -6.273068904876709
    4. '
' → logprob: -7.648068904876709
    5. 'while' → logprob: -9.273069381713867
    6. ' for' → logprob: -10.398069381713867
    7. ' i' → logprob: -11.398069381713867
    8. '```' → logprob: -12.023069381713867
    9. '
' → logprob: -12.648069381713867
    10. 'k' → logprob: -13.273069381713867

Token 88: ' =' (ID: 314)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18925219774246216
    2. '=' → logprob: -2.3142521381378174
    3. ' =' → logprob: -2.9392521381378174
    4. 'u' → logprob: -3.9392521381378174
    5. ' i' → logprob: -7.9392523765563965
    6. '_i' → logprob: -7.9392523765563965
    7. '_' → logprob: -8.314251899719238
    8. '_idx' → logprob: -10.064251899719238
    9. '_point' → logprob: -10.939251899719238
    10. 'uire' → logprob: -10.939251899719238

Token 89: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008618000894784927
    2. ' ' → logprob: -4.758617877960205
    3. '   ' → logprob: -13.758618354797363
    4. 'Q' → logprob: -13.883618354797363
    5. 'K' → logprob: -14.758618354797363
    6. '  ' → logprob: -15.133618354797363
    7. ' Q' → logprob: -15.258618354797363
    8. ' K' → logprob: -16.008617401123047
    9. '1' → logprob: -16.133617401123047
    10. 'q' → logprob: -16.508617401123047

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004365102213341743
    2. ' ' → logprob: -7.750436305999756
    3. 'i' → logprob: -13.125436782836914
    4. 'K' → logprob: -13.625436782836914
    5. 'Q' → logprob: -14.125436782836914
    6. '   ' → logprob: -14.875436782836914
    7. '1' → logprob: -15.000436782836914
    8. 'len' → logprob: -15.625436782836914
    9. 'q' → logprob: -16.062936782836914
    10. 'k' → logprob: -16.312936782836914

Token 91: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00035048185964114964
    2. ' while' → logprob: -8.000350952148438
    3. 'q' → logprob: -11.625350952148438
    4. '```' → logprob: -13.500350952148438
    5. 'w' → logprob: -13.625350952148438
    6. '<|end|>' → logprob: -14.250350952148438
    7. 'for' → logprob: -14.500350952148438
    8. '' → logprob: -14.750350952148438
    9. '
' → logprob: -14.875350952148438
    10. '	while' → logprob: -15.000350952148438

Token 93: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.201504185795784
    2. 'q' → logprob: -1.7015042304992676
    3. ' Q' → logprob: -10.20150375366211
    4. 'Q' → logprob: -10.20150375366211
    5. ' <' → logprob: -11.45150375366211
    6. ' ' → logprob: -13.20150375366211
    7. '   ' → logprob: -13.82650375366211
    8. '<' → logprob: -13.82650375366211
    9. '	q' → logprob: -13.95150375366211
    10. '(q' → logprob: -14.57650375366211

Token 94: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00867366511374712
    2. '<' → logprob: -4.758673667907715
    3. '<Q' → logprob: -9.758673667907715
    4. ' ' → logprob: -13.758673667907715
    5. '<len' → logprob: -16.1336727142334
    6. '<K' → logprob: -16.6336727142334
    7. '<N' → logprob: -16.7586727142334
    8. '<n' → logprob: -18.0086727142334
    9. '   ' → logprob: -19.1336727142334
    10. ' <
' → logprob: -19.5086727142334

Token 95: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.000655250798445195
    2. ' Q' → logprob: -7.375655174255371
    3. 'len' → logprob: -11.000655174255371
    4. '   ' → logprob: -11.875655174255371
    5. '	Q' → logprob: -12.500655174255371
    6. '  ' → logprob: -14.625655174255371
    7. ' len' → logprob: -14.875655174255371
    8. 'K' → logprob: -15.500655174255371
    9. ' ' → logprob: -15.750655174255371
    10. '<Q' → logprob: -16.125656127929688

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008656885474920273
    2. ':
' → logprob: -4.758656978607178
    3. ' :' → logprob: -10.38365650177002
    4. ' :
' → logprob: -12.50865650177002
    5. '   ' → logprob: -12.75865650177002
    6. ':

' → logprob: -13.13365650177002
    7. ',' → logprob: -14.75865650177002
    8. ':
' → logprob: -14.75865650177002
    9. ':q' → logprob: -15.00865650177002
    10. '<|end|>' → logprob: -15.00865650177002

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15733639895915985
    2. '
' → logprob: -3.032336473464966
    3. 'point' → logprob: -3.907336473464966
    4. '    
' → logprob: -3.907336473464966
    5. 'p' → logprob: -4.282336235046387
    6. ' 
' → logprob: -4.407336235046387
    7. ' ' → logprob: -5.407336235046387
    8. '  
' → logprob: -5.532336235046387
    9. ' point' → logprob: -6.032336235046387
    10. '```' → logprob: -6.032336235046387

Token 98: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' (adapté à ' point') → logprob: -0.07525414228439331
    2. 'x' → logprob: -3.825254201889038
    3. 'p' → logprob: -4.200253963470459
    4. '   ' → logprob: -4.950253963470459
    5. 'a' → logprob: -5.075253963470459
    6. 'score' → logprob: -5.825253963470459
    7. 'idx' → logprob: -5.825253963470459
    8. 'index' → logprob: -6.325253963470459
    9. 'i' → logprob: -6.450253963470459
    10. ' point' → logprob: -6.450253963470459

Token 99: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.007291293237358332
    2. '_index' → logprob: -5.507291316986084
    3. '_' → logprob: -6.757291316986084
    4. ' =' → logprob: -7.007291316986084
    5. '_idx' → logprob: -7.632291316986084
    6. '=' → logprob: -8.632290840148926
    7. '_q' → logprob: -8.757290840148926
    8. 'q' → logprob: -9.132290840148926
    9. 'idx' → logprob: -11.007290840148926
    10. '_num' → logprob: -11.132290840148926

Token 100: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.0005978313274681568
    2. '[' → logprob: -7.625597953796387
    3. '[int' → logprob: -9.750597953796387
    4. '[N' → logprob: -10.625597953796387
    5. '[q' → logprob: -11.750597953796387
    6. '[(' → logprob: -12.000597953796387
    7. '[
' → logprob: -12.125597953796387
    8. '[K' → logprob: -12.750597953796387
    9. ' [' → logprob: -13.875597953796387
    10. '[min' → logprob: -14.125597953796387

Token 101: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -4.320199877838604e-07
    2. 'q' → logprob: -15.125
    3. '[' → logprob: -16.5
    4. '(q' → logprob: -17.625
    5. '[
' → logprob: -18.125
    6. '[i' → logprob: -18.125
    7. '
' → logprob: -18.75
    8. ' [' → logprob: -19.125
    9. '```' → logprob: -19.375
    10. ' q' → logprob: -19.5

Token 102: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43354690074920654
    2. '[q' → logprob: -1.5585469007492065
    3. '-' → logprob: -2.683547019958496
    4. ' -' → logprob: -2.933547019958496
    5. ']-' → logprob: -4.308547019958496
    6. 'q' → logprob: -6.058547019958496
    7. '[' → logprob: -6.683547019958496
    8. ' ' → logprob: -6.933547019958496
    9. '   ' → logprob: -7.308547019958496
    10. '  ' → logprob: -8.433547019958496

Token 103: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0317319892346859
    2. ' -' → logprob: -3.6567320823669434
    3. ']' → logprob: -5.281732082366943
    4. ']-' → logprob: -8.906731605529785
    5. '   ' → logprob: -9.156731605529785
    6. ' -=' → logprob: -10.406731605529785
    7. ' ' → logprob: -10.531731605529785
    8. ')' → logprob: -11.531731605529785
    9. '  ' → logprob: -12.781731605529785
    10. '-=' → logprob: -12.781731605529785

Token 104: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023251768201589584
    2. ' ' → logprob: -3.77325177192688
    3. '<|end|>' → logprob: -13.0232515335083
    4. '   ' → logprob: -13.2732515335083
    5. '```' → logprob: -14.1482515335083
    6. '>' → logprob: -15.2732515335083
    7. ']' → logprob: -15.5232515335083
    8. ')' → logprob: -15.5232515335083
    9. '  ' → logprob: -15.6482515335083
    10. '`' → logprob: -16.398252487182617

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.125009536743164
    4. '>' → logprob: -17.125009536743164
    5. '<|end|>' → logprob: -17.125009536743164
    6. '```' → logprob: -17.250009536743164
    7. '１' → logprob: -18.000009536743164
    8. ']' → logprob: -18.062509536743164
    9. '=' → logprob: -18.062509536743164
    10. 'to' → logprob: -18.125009536743164

Token 106: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029998427256941795
    2. ']+=' → logprob: -3.529998540878296
    3. ' ]' → logprob: -8.529998779296875
    4. '+=' → logprob: -10.654998779296875
    5. ' +=' → logprob: -10.779998779296875
    6. ')' → logprob: -12.654998779296875
    7. '   ' → logprob: -14.029998779296875
    8. ']+' → logprob: -14.154998779296875
    9. ' ' → logprob: -15.154998779296875
    10. '    ' → logprob: -15.279998779296875

Token 107: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20310504734516144
    2. '+=' → logprob: -1.703105092048645
    3. '=' → logprob: -6.8281049728393555
    4. ' =' → logprob: -7.4531049728393555
    5. ']+=' → logprob: -10.578104972839355
    6. ' ' → logprob: -13.953104972839355
    7. '+' → logprob: -14.078104972839355
    8. '```' → logprob: -15.578104972839355
    9. ' -=' → logprob: -16.328105926513672
    10. ']' → logprob: -16.578105926513672

Token 108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.943783253314905e-05
    2. ' ' → logprob: -9.750059127807617
    3. '   ' → logprob: -13.875059127807617
    4. '  ' → logprob: -16.125059127807617
    5. '+' → logprob: -17.125059127807617
    6. '100' → logprob: -18.375059127807617
    7. '１' → logprob: -18.500059127807617
    8. ' ' → logprob: -18.750059127807617
    9. '```' → logprob: -19.625059127807617
    10. '    ' → logprob: -19.875059127807617

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1160349458805285e-05
    2. ' ' → logprob: -11.500011444091797
    3. '   ' → logprob: -14.375011444091797
    4. '  ' → logprob: -15.875011444091797
    5. '+' → logprob: -16.000011444091797
    6. '１' → logprob: -16.750011444091797
    7. '100' → logprob: -17.750011444091797
    8. ' ' → logprob: -17.875011444091797
    9. '```' → logprob: -18.125011444091797
    10. '۱' → logprob: -19.312511444091797

Token 110: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7174968123435974
    2. '
' → logprob: -0.9674968123435974
    3. 'q' → logprob: -2.217496871948242
    4. ' q' → logprob: -3.842496871948242
    5. ' ' → logprob: -7.092496871948242
    6. '    
' → logprob: -7.717496871948242
    7. '
' → logprob: -9.217496871948242
    8. ' 
' → logprob: -9.342496871948242
    9. '  
' → logprob: -9.967496871948242
    10. '	q' → logprob: -9.967496871948242

Token 111: '   ' (ID: 271)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.022027254104614258
    2. '   ' → logprob: -4.147027015686035
    3. ' q' → logprob: -5.147027015686035
    4. ' ' → logprob: -9.272027015686035
    5. '
' → logprob: -10.272027015686035
    6. '	q' → logprob: -11.272027015686035
    7. 'K' → logprob: -12.022027015686035
    8. ' K' → logprob: -12.897027015686035
    9. 'for' → logprob: -13.022027015686035
    10. '  ' → logprob: -13.272027015686035

Token 112: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.001956467516720295
    2. '   ' → logprob: -6.876956462860107
    3. ' q' → logprob: -7.001956462860107
    4. 'for' → logprob: -12.001956939697266
    5. ' ' → logprob: -13.001956939697266
    6. '
' → logprob: -13.626956939697266
    7. '	q' → logprob: -13.626956939697266
    8. ' for' → logprob: -14.126956939697266
    9. 'K' → logprob: -14.126956939697266
    10. 'i' → logprob: -15.501956939697266

Token 113: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.35400596261024475
    2. '+' → logprob: -1.3540059328079224
    3. ' +=' → logprob: -3.229006052017212
    4. '=' → logprob: -8.979005813598633
    5. '++' → logprob: -9.104005813598633
    6. '<|end|>' → logprob: -10.229005813598633
    7. '+++' → logprob: -10.979005813598633
    8. ' +' → logprob: -11.104005813598633
    9. ' ' → logprob: -11.604005813598633
    10. '+='' → logprob: -12.604005813598633

Token 114: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '   ' → logprob: -17.75048828125
    4. '```' → logprob: -18.00048828125
    5. '１' → logprob: -18.87548828125
    6. '<|end|>' → logprob: -19.37548828125
    7. ' ' → logprob: -20.37548828125
    8. '۱' → logprob: -20.43798828125
    9. '  ' → logprob: -20.75048828125
    10. '	' → logprob: -21.62548828125

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -16.25007438659668
    4. '   ' → logprob: -17.50007438659668
    5. '１' → logprob: -19.00007438659668
    6. '<|end|>' → logprob: -19.43757438659668
    7. '۱' → logprob: -19.62507438659668
    8. '  ' → logprob: -20.06257438659668
    9. '
' → logprob: -20.25007438659668
    10. ' ' → logprob: -20.50007438659668

Token 116: '

' (ID: 279)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06148521974682808
    2. 'p' → logprob: -4.186485290527344
    3. 'j' → logprob: -4.311485290527344
    4. 'result' → logprob: -4.561485290527344
    5. 'r' → logprob: -5.686485290527344
    6. '
' → logprob: -5.811485290527344
    7. 'point' → logprob: -5.811485290527344
    8. 'points' → logprob: -6.061485290527344
    9. 'score' → logprob: -6.186485290527344
    10. 'res' → logprob: -6.436485290527344

Token 117: 'n' (ID: 77)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11830993741750717
    2. 'p' → logprob: -3.11830997467041
    3. 'j' → logprob: -3.36830997467041
    4. 'r' → logprob: -3.99330997467041
    5. 'result' → logprob: -5.24330997467041
    6. 'k' → logprob: -6.24330997467041
    7. 'res' → logprob: -6.74330997467041
    8. 'score' → logprob: -6.86830997467041
    9. 'for' → logprob: -7.49330997467041
    10. 'ans' → logprob: -7.61830997467041

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19642356038093567
    2. '=' → logprob: -2.0714235305786133
    3. ' ' → logprob: -4.071423530578613
    4. 'i' → logprob: -4.446423530578613
    5. '  ' → logprob: -5.446423530578613
    6. '   ' → logprob: -5.696423530578613
    7. ' i' → logprob: -5.821423530578613
    8. 'o' → logprob: -5.946423530578613
    9. 't' → logprob: -6.071423530578613
    10. 'e' → logprob: -6.446423530578613

Token 119: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013728899881243706
    2. ' ' → logprob: -4.388729095458984
    3. 'K' → logprob: -7.388729095458984
    4. 'N' → logprob: -8.013729095458984
    5. ' K' → logprob: -8.513729095458984
    6. ' N' → logprob: -10.013729095458984
    7. '1' → logprob: -11.388729095458984
    8. 'n' → logprob: -12.638729095458984
    9. '=' → logprob: -13.388729095458984
    10. 'Q' → logprob: -13.638729095458984

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010762764140963554
    2. ' ' → logprob: -6.8760762214660645
    3. 'K' → logprob: -10.251076698303223
    4. 'N' → logprob: -12.251076698303223
    5. ' K' → logprob: -13.376076698303223
    6. '1' → logprob: -14.001076698303223
    7. 'n' → logprob: -15.751076698303223
    8. '   ' → logprob: -15.876076698303223
    9. 'max' → logprob: -15.876076698303223
    10. ' N' → logprob: -15.876076698303223

Token 121: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.31803959608078003
    2. ' while' → logprob: -1.3180396556854248
    3. '
' → logprob: -5.693039417266846
    4. 'n' → logprob: -7.568039417266846
    5. ' 
' → logprob: -8.193039894104004
    6. ' ' → logprob: -8.568039894104004
    7. '<|end|>' → logprob: -8.818039894104004
    8. 'While' → logprob: -9.068039894104004
    9. ' n' → logprob: -9.818039894104004
    10. ' While' → logprob: -10.068039894104004

Token 122: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.004079708829522133
    2. ' while' → logprob: -5.504079818725586
    3. 'n' → logprob: -14.379079818725586
    4. '	while' → logprob: -15.254079818725586
    5. '
' → logprob: -15.504079818725586
    6. 'While' → logprob: -16.629079818725586
    7. 'wh' → logprob: -17.379079818725586
    8. ' ' → logprob: -17.879079818725586
    9. 'w' → logprob: -18.004079818725586
    10. 'for' → logprob: -18.004079818725586

Token 123: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.14279669523239136
    2. 'n' → logprob: -2.017796754837036
    3. 'N' → logprob: -9.767796516418457
    4. ' N' → logprob: -10.017796516418457
    5. ' ' → logprob: -11.267796516418457
    6. '   ' → logprob: -13.392796516418457
    7. '	n' → logprob: -13.517796516418457
    8. '<n' → logprob: -14.267796516418457
    9. ' K' → logprob: -14.392796516418457
    10. '_n' → logprob: -14.517796516418457

Token 124: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0060457587242126465
    2. '<' → logprob: -5.131045818328857
    3. '<N' → logprob: -9.1310453414917
    4. ' ' → logprob: -11.8810453414917
    5. '<n' → logprob: -14.0060453414917
    6. ' N' → logprob: -14.2560453414917
    7. 'N' → logprob: -15.3810453414917
    8. '<K' → logprob: -16.631046295166016
    9. ' <
' → logprob: -17.256046295166016
    10. '<Q' → logprob: -17.381046295166016

Token 125: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0011714138090610504
    2. ' N' → logprob: -6.751171588897705
    3. 'n' → logprob: -14.376171112060547
    4. ' ' → logprob: -15.376171112060547
    5. '   ' → logprob: -16.001171112060547
    6. 'K' → logprob: -16.126171112060547
    7. '	N' → logprob: -16.251171112060547
    8. 'len' → logprob: -17.251171112060547
    9. '  ' → logprob: -17.626171112060547
    10. '
' → logprob: -19.376171112060547

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07009882479906082
    2. ':
' → logprob: -2.695098876953125
    3. ' :' → logprob: -9.695098876953125
    4. '   ' → logprob: -10.070098876953125
    5. ' :
' → logprob: -10.195098876953125
    6. ':

' → logprob: -11.320098876953125
    7. ' and' → logprob: -12.945098876953125
    8. '):
' → logprob: -13.945098876953125
    9. ',' → logprob: -14.070098876953125
    10. ' ' → logprob: -14.320098876953125

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0967908501625061
    2. ' if' → logprob: -2.9717907905578613
    3. 'if' → logprob: -3.8467907905578613
    4. ' print' → logprob: -4.471790790557861
    5. 'print' → logprob: -4.846790790557861
    6. '   ' → logprob: -8.59679126739502
    7. '```' → logprob: -9.47179126739502
    8. '    ' → logprob: -10.34679126739502
    9. '
' → logprob: -10.59679126739502
    10. '    
' → logprob: -10.72179126739502

Token 128: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.84297114610672
    2. 'if' (adapté à ' if') → logprob: -1.0929710865020752
    3. '   ' → logprob: -1.9679710865020752
    4. 'print' → logprob: -2.842971086502075
    5. ' print' → logprob: -3.342971086502075
    6. ' ' → logprob: -7.717971324920654
    7. 'point' → logprob: -8.592970848083496
    8. ' point' → logprob: -9.217970848083496
    9. '   ' → logprob: -9.717970848083496
    10. '    ' → logprob: -10.217970848083496

Token 129: ' Q' (ID: 1486)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.40964505076408386
    2. ' point' → logprob: -1.1596450805664062
    3. ' K' → logprob: -4.659645080566406
    4. 'K' → logprob: -5.284645080566406
    5. ' Q' → logprob: -5.659645080566406
    6. '   ' → logprob: -6.284645080566406
    7. 'Q' → logprob: -6.784645080566406
    8. '(point' → logprob: -7.409645080566406
    9. ' (' → logprob: -8.284645080566406
    10. ' ' → logprob: -8.409645080566406

Token 130: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08068488538265228
    2. '-' → logprob: -2.5806849002838135
    3. '-point' → logprob: -6.330684661865234
    4. '+' → logprob: -12.455684661865234
    5. '-K' → logprob: -12.955684661865234
    6. '   ' → logprob: -13.830684661865234
    7. '-k' → logprob: -14.330684661865234
    8. '<' → logprob: -14.580684661865234
    9. ' point' → logprob: -14.580684661865234
    10. ' ' → logprob: -14.580684661865234

Token 131: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.6330248117446899
    2. ' point' → logprob: -0.7580248117446899
    3. ' K' → logprob: -8.508025169372559
    4. ' ' → logprob: -10.008025169372559
    5. ' (' → logprob: -10.008025169372559
    6. '(point' → logprob: -10.258025169372559
    7. 'K' → logprob: -10.383025169372559
    8. '	point' → logprob: -10.633025169372559
    9. '  ' → logprob: -11.633025169372559
    10. '   ' → logprob: -11.633025169372559

Token 132: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.0564331205387134e-05
    2. 's' → logprob: -11.87501049041748
    3. 'list' → logprob: -12.62501049041748
    4. 'List' → logprob: -16.625011444091797
    5. '_' → logprob: -17.625011444091797
    6. '_l' → logprob: -19.500011444091797
    7. 'n' → logprob: -19.625011444091797
    8. '[n' → logprob: -19.625011444091797
    9. '_lists' → logprob: -19.750011444091797
    10. '_LIST' → logprob: -20.250011444091797

Token 133: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.75000286102295
    3. 'n' → logprob: -13.75000286102295
    4. ' [' → logprob: -14.37500286102295
    5. '[
' → logprob: -18.000001907348633
    6. ' n' → logprob: -18.250001907348633
    7. '[s' → logprob: -18.375001907348633
    8. '<n' → logprob: -18.375001907348633
    9. ' ' → logprob: -18.750001907348633
    10. '
' → logprob: -19.250001907348633

Token 134: ']' (ID: 60)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5177801847457886
    2. ' +' → logprob: -1.3927801847457886
    3. '>=' → logprob: -2.267780303955078
    4. ' <' → logprob: -3.767780303955078
    5. '+' → logprob: -4.017780303955078
    6. '    ' → logprob: -5.642780303955078
    7. '   ' → logprob: -5.767780303955078
    8. ' ' → logprob: -6.142780303955078
    9. '<' → logprob: -6.767780303955078
    10. ')>=' → logprob: -7.642780303955078

Token 135: ' >=' (ID: 5064)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2101137936115265
    2. ' <' → logprob: -1.710113763809204
    3. '>=' → logprob: -4.835114002227783
    4. ' >=' → logprob: -7.335114002227783
    5. ' ' → logprob: -10.710113525390625
    6. '<K' → logprob: -10.960113525390625
    7. '<Q' → logprob: -11.585113525390625
    8. '+' → logprob: -12.085113525390625
    9. ' +' → logprob: -12.210113525390625
    10. '<n' → logprob: -13.585113525390625

Token 136: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.11292314529418945
    2. ' K' → logprob: -2.2379231452941895
    3. ' ' → logprob: -9.487922668457031
    4. 'Q' → logprob: -11.362922668457031
    5. '	K' → logprob: -12.237922668457031
    6. '
' → logprob: -12.862922668457031
    7. '   ' → logprob: -13.737922668457031
    8. ' Q' → logprob: -13.862922668457031
    9. ' (' → logprob: -13.987922668457031
    10. '(K' → logprob: -14.112922668457031

Token 137: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15843082964420319
    2. ' :' → logprob: -2.033430814743042
    3. ':
' → logprob: -4.408431053161621
    4. ' :
' → logprob: -5.908431053161621
    5. '+' → logprob: -7.908431053161621
    6. '   ' → logprob: -8.408431053161621
    7. ' ' → logprob: -10.033431053161621
    8. ' +' → logprob: -10.408431053161621
    9. '    ' → logprob: -10.658431053161621
    10. '+:' → logprob: -11.158431053161621

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02012791484594345
    2. ' print' → logprob: -4.145127773284912
    3. '   ' → logprob: -6.270127773284912
    4. 'print' → logprob: -7.145127773284912
    5. '     ' → logprob: -7.520127773284912
    6. ' ' → logprob: -8.52012825012207
    7. '    ' → logprob: -8.52012825012207
    8. ' ' → logprob: -8.89512825012207
    9. '      ' → logprob: -9.27012825012207
    10. '    ' → logprob: -10.39512825012207

Token 139: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.013121877796947956
    2. ' print' → logprob: -4.388122081756592
    3. '   ' → logprob: -7.513122081756592
    4. '"' → logprob: -10.513121604919434
    5. '    ' → logprob: -11.513121604919434
    6. ' ' → logprob: -11.638121604919434
    7. ''' → logprob: -12.263121604919434
    8. 'pr' → logprob: -12.388121604919434
    9. '       ' → logprob: -12.513121604919434
    10. '  ' → logprob: -13.138121604919434

Token 140: '('' (ID: 706)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06759772449731827
    2. '"No' → logprob: -2.8175976276397705
    3. ''' → logprob: -6.19259786605835
    4. ' "' → logprob: -6.31759786605835
    5. '("' → logprob: -7.44259786605835
    6. '0' → logprob: -7.69259786605835
    7. 'No' → logprob: -8.692597389221191
    8. ' ' → logprob: -8.942597389221191
    9. '   ' → logprob: -9.067597389221191
    10. '"D' → logprob: -9.442597389221191

Token 141: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.30572235584259033
    2. ''' → logprob: -1.4307223558425903
    3. '"No' → logprob: -4.555722236633301
    4. '"' → logprob: -4.930722236633301
    5. 'NO' → logprob: -5.555722236633301
    6. ' No' → logprob: -6.680722236633301
    7. ''A' → logprob: -8.0557222366333
    8. 'Lose' → logprob: -8.5557222366333
    9. '0' → logprob: -8.6807222366333
    10. '_No' → logprob: -9.1807222366333

Token 142: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.2282135784626007
    2. '')' → logprob: -1.6032135486602783
    3. 't' → logprob: -6.353213787078857
    4. ' ')
' → logprob: -7.728213787078857
    5. ')
' → logprob: -8.4782133102417
    6. 'else' → logprob: -9.1032133102417
    7. '')
' → logprob: -9.3532133102417
    8. ')' → logprob: -10.2282133102417
    9. 'n' → logprob: -10.4782133102417
    10. 'e' → logprob: -10.6032133102417

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01933581568300724
    2. ' else' → logprob: -4.019335746765137
    3. 'else' → logprob: -6.769335746765137
    4. '	else' → logprob: -11.019335746765137
    5. '   ' → logprob: -11.894335746765137
    6. '
' → logprob: -12.894335746765137
    7. ' ' → logprob: -13.144335746765137
    8. '    
' → logprob: -13.269335746765137
    9. '  ' → logprob: -13.769335746765137
    10. '<|end|>' → logprob: -13.769335746765137

Token 144: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17398102581501007
    2. ' else' → logprob: -1.9239810705184937
    3. 'else' (adapté à ' else') → logprob: -4.298981189727783
    4. '	else' → logprob: -9.548980712890625
    5. '  ' → logprob: -12.673980712890625
    6. ' ' → logprob: -12.923980712890625
    7. '    ' → logprob: -14.298980712890625
    8. '<|end|>' → logprob: -14.298980712890625
    9. '   ' → logprob: -14.423980712890625
    10. '       ' → logprob: -15.048980712890625

Token 145: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0671948567032814
    2. ':' → logprob: -2.817194938659668
    3. ':
' → logprob: -5.317194938659668
    4. '   ' → logprob: -9.192194938659668
    5. ' :' → logprob: -9.192194938659668
    6. ' :
' → logprob: -10.442194938659668
    7. ' print' → logprob: -10.692194938659668
    8. 'print' → logprob: -11.192194938659668
    9. '        
' → logprob: -11.692194938659668
    10. '           ' → logprob: -12.442194938659668

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033439300023019314
    2. 'print' → logprob: -8.125334739685059
    3. '   ' → logprob: -10.500334739685059
    4. ' print' → logprob: -11.625334739685059
    5. '	   ' → logprob: -14.875334739685059
    6. '      ' → logprob: -15.125334739685059
    7. '    ' → logprob: -15.125334739685059
    8. '	print' → logprob: -15.250334739685059
    9. '    ' → logprob: -15.500334739685059
    10. '     ' → logprob: -15.625334739685059

Token 147: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.09610702842473984
    2. '       ' → logprob: -3.096107006072998
    3. ' print' → logprob: -3.096107006072998
    4. '   ' → logprob: -6.971107006072998
    5. '           ' → logprob: -9.471107482910156
    6. ' ' → logprob: -9.971107482910156
    7. '	print' → logprob: -10.346107482910156
    8. ''' → logprob: -10.846107482910156
    9. '        ' → logprob: -11.221107482910156
    10. '    ' → logprob: -11.471107482910156

Token 148: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.04865583777427673
    2. '(' → logprob: -3.0486557483673096
    3. ' ('' → logprob: -9.79865550994873
    4. ' (' → logprob: -12.17365550994873
    5. '("' → logprob: -12.29865550994873
    6. '(
' → logprob: -13.04865550994873
    7. ' ' → logprob: -15.04865550994873
    8. '   ' → logprob: -15.54865550994873
    9. ''' → logprob: -15.54865550994873
    10. '(('' → logprob: -16.173656463623047

Token 149: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -2.2723104848410003e-05
    2. ''' → logprob: -10.875022888183594
    3. ' Yes' → logprob: -12.625022888183594
    4. 'YES' → logprob: -15.500022888183594
    5. 'yes' → logprob: -15.750022888183594
    6. 'Ye' → logprob: -16.875022888183594
    7. 'Yeah' → logprob: -17.250022888183594
    8. 'Oui' → logprob: -17.750022888183594
    9. '   ' → logprob: -18.625022888183594
    10. '"' → logprob: -19.375022888183594

Token 150: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00046606172691099346
    2. ')' → logprob: -8.250466346740723
    3. '')
' → logprob: -8.500466346740723
    4. '   ' → logprob: -14.125466346740723
    5. '")' → logprob: -14.375466346740723
    6. ')
' → logprob: -17.375465393066406
    7. '')
' → logprob: -18.375465393066406
    8. '')

' → logprob: -18.500465393066406
    9. ' ')' → logprob: -18.750465393066406
    10. ''' → logprob: -19.375465393066406

Token 151: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006427348591387272
    2. '   ' → logprob: -5.75642728805542
    3. '\n' → logprob: -6.50642728805542
    4. '	n' → logprob: -7.13142728805542
    5. '
' → logprob: -7.63142728805542
    6. ' n' → logprob: -7.88142728805542
    7. '(n' → logprob: -10.756427764892578
    8. ',n' → logprob: -11.006427764892578
    9. ')n' → logprob: -11.006427764892578
    10. '_n' → logprob: -11.756427764892578

Token 152: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.33035096526145935
    2. '   ' → logprob: -1.3303509950637817
    3. ' n' → logprob: -4.080350875854492
    4. ' ' → logprob: -11.080350875854492
    5. '	n' → logprob: -11.330350875854492
    6. '
' → logprob: -11.580350875854492
    7. '  ' → logprob: -12.330350875854492
    8. '    
' → logprob: -13.955350875854492
    9. '\n' → logprob: -15.080350875854492
    10. ' 
' → logprob: -15.955350875854492

Token 153: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1366734653711319
    2. ' +=' → logprob: -2.6366734504699707
    3. '+' → logprob: -3.0116734504699707
    4. '   ' → logprob: -5.386673450469971
    5. '=' → logprob: -6.261673450469971
    6. '++' → logprob: -8.386673927307129
    7. '1' → logprob: -9.636673927307129
    8. ' +' → logprob: -10.011673927307129
    9. 'n' → logprob: -10.136673927307129
    10. ' ' → logprob: -10.636673927307129

Token 154: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003601140109822154
    2. ' ' → logprob: -5.62860107421875
    3. '   ' → logprob: -13.87860107421875
    4. '```' → logprob: -16.50360107421875
    5. ' ' → logprob: -16.87860107421875
    6. '１' → logprob: -18.50360107421875
    7. '  ' → logprob: -18.75360107421875
    8. '	' → logprob: -18.87860107421875
    9. '​' → logprob: -19.56610107421875
    10. '0' → logprob: -19.81610107421875

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -20.375
    4. '   ' → logprob: -21.375
    5. '１' → logprob: -22.0
    6. '
' → logprob: -22.25
    7. '+' → logprob: -23.0
    8. '0' → logprob: -24.0625
    9. '  ' → logprob: -24.1875
    10. '`' → logprob: -24.5625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 153
Tokens correctement prédits (1ère position, stricte): 69
Tokens correctement prédits (1ère position, avec adaptation): 75
Tokens correctement prédits (top 10): 129
Précision stricte (1ère position): 45.10%
Précision adaptée (1ère position): 49.02%
Précision (top 10): 84.31%
================================================================================
