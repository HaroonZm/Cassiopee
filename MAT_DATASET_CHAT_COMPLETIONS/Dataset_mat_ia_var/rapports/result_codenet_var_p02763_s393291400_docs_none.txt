================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:24:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def initialize(N):
    i=1
    while i<N:
        i*=2
    return [0]*(2*i-1),i

def update(i,x):
    i+=d-1
    bit=ord(x)-97
    SEG[i]=0 | (1<<bit)
    while i>0:
        i=(i-1)//2
        SEG[i]=SEG[i*2+1]|SEG[i*2+2]

def find(a,b,k,l,r):
    if r<=a or b<=l:
        return 0
    if a<=l and r<=b:
        return SEG[k]
    else:
        c1=find(a,b,2*k+1,l,(l+r)//2)
        c2=find(a,b,2*k+2,(l+r)//2,r)
        return c1|c2

N=int(input())
S=input()
Q=int(input())

SEG,d=initialize(N)
for i in range(N):
    update(i,S[i])

for i in range(Q):
    com,s,t=map(str,input().split())
    if com=='1':
        update(int(s)-1,t)
    else:
        cnt=0
        bit=find(int(s)-1,int(t),0,0,d)
        while bit>0:
            if bit&1:
                cnt+=1
            bit//=2
        print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' initialize' (ID: 18400)
  → Token d'amorce (pas de prédiction)

Token 2: '(N' (ID: 10564)
  → Token d'amorce (pas de prédiction)

Token 3: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6460003852844238
    2. '):' → logprob: -0.7710003852844238
    3. ',' → logprob: -4.396000385284424
    4. '_' → logprob: -7.396000385284424
    5. ':' → logprob: -8.520999908447266
    6. '=' → logprob: -10.270999908447266
    7. '[' → logprob: -10.895999908447266
    8. '```' → logprob: -11.020999908447266
    9. '(' → logprob: -11.145999908447266
    10. 's' → logprob: -11.770999908447266

Token 4: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25561800599098206
    2. '```' → logprob: -1.7556179761886597
    3. '\n' → logprob: -3.880618095397949
    4. ':' → logprob: -3.880618095397949
    5. '``' → logprob: -5.505618095397949
    6. '    
' → logprob: -5.880618095397949
    7. '\' → logprob: -6.005618095397949
    8. '  
' → logprob: -8.00561809539795
    9. ':
' → logprob: -8.25561809539795
    10. ''\' → logprob: -8.38061809539795

Token 5: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.986869752407074
    2. 'return' → logprob: -1.2368698120117188
    3. 'result' → logprob: -1.8618698120117188
    4. ' return' → logprob: -3.1118698120117188
    5. '```' → logprob: -3.4868698120117188
    6. '`' → logprob: -3.7368698120117188
    7. 'data' → logprob: -4.486869812011719
    8. ' ' → logprob: -4.736869812011719
    9. 'r' → logprob: -5.236869812011719
    10. ' result' → logprob: -5.361869812011719

Token 6: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42170384526252747
    2. 'n' → logprob: -1.671703815460205
    3. 'f' → logprob: -2.421703815460205
    4. ' =' → logprob: -3.421703815460205
    5. 'nd' → logprob: -4.171703815460205
    6. 's' → logprob: -4.671703815460205
    7. 't' → logprob: -5.046703815460205
    8. ' ' → logprob: -6.671703815460205
    9. 'nt' → logprob: -6.671703815460205
    10. ' n' → logprob: -9.046704292297363

Token 7: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006403654348105192
    2. ' ' → logprob: -5.25640344619751
    3. '1' → logprob: -6.75640344619751
    4. '   ' → logprob: -12.881403923034668
    5. '```' → logprob: -13.506403923034668
    6. '2' → logprob: -13.756403923034668
    7. '`' → logprob: -15.381403923034668
    8. '``' → logprob: -16.13140296936035
    9. '4' → logprob: -16.50640296936035
    10. '=' → logprob: -16.94390296936035

Token 8: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.132751226425171
    2. ':' → logprob: -1.757751226425171
    3. ',' → logprob: -2.257751226425171
    4. '
' → logprob: -2.382751226425171
    5. ' while' → logprob: -2.507751226425171
    6. '<|end|>' → logprob: -2.632751226425171
    7. ' ' → logprob: -3.632751226425171
    8. 'while' → logprob: -3.757751226425171
    9. '    
' → logprob: -4.00775146484375
    10. '  ' → logprob: -4.00775146484375

Token 10: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0394166707992554
    2. ',' → logprob: -1.2894166707992554
    3. ' while' → logprob: -2.164416790008545
    4. 'while' (adapté à ' while') → logprob: -3.039416790008545
    5. '    ' → logprob: -3.289416790008545
    6. '\' → logprob: -3.539416790008545
    7. '```' → logprob: -3.789416790008545
    8. ' ' → logprob: -4.039416790008545
    9. '  ' → logprob: -4.414416790008545
    10. ':' → logprob: -4.414416790008545

Token 11: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09811719506978989
    2. ' ' → logprob: -2.5981171131134033
    3. 'i' → logprob: -4.098117351531982
    4. ' N' → logprob: -6.098117351531982
    5. 'N' → logprob: -10.348116874694824
    6. '  ' → logprob: -10.348116874694824
    7. ' ' → logprob: -10.723116874694824
    8. '<|end|>' → logprob: -10.723116874694824
    9. ' (' → logprob: -10.973116874694824
    10. '    ' → logprob: -11.098116874694824

Token 12: '<N' (ID: 60262)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.055694762617349625
    2. '<=' → logprob: -3.055694818496704
    3. ' <' → logprob: -5.180694580078125
    4. '<' → logprob: -6.805694580078125
    5. ' ' → logprob: -8.305694580078125
    6. ' <<=' → logprob: -10.555694580078125
    7. '```' → logprob: -11.180694580078125
    8. ' ≤' → logprob: -11.430694580078125
    9. '    ' → logprob: -12.055694580078125
    10. ' \<' → logprob: -12.180694580078125

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028147439006716013
    2. ':
' → logprob: -6.002814769744873
    3. ' :' → logprob: -8.877814292907715
    4. '       ' → logprob: -9.502814292907715
    5. '   ' → logprob: -10.002814292907715
    6. '```' → logprob: -11.252814292907715
    7. ':**' → logprob: -11.627814292907715
    8. '**' → logprob: -11.877814292907715
    9. ':i' → logprob: -11.877814292907715
    10. '+:' → logprob: -12.002814292907715

Token 14: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10370907932519913
    2. '    ' → logprob: -2.7287089824676514
    3. '   ' → logprob: -4.6037092208862305
    4. ':' → logprob: -5.1037092208862305
    5. '     
' → logprob: -5.7287092208862305
    6. '```' → logprob: -5.9787092208862305
    7. 'i' → logprob: -6.2287092208862305
    8. '        
' → logprob: -6.7287092208862305
    9. '\n' → logprob: -6.8537092208862305
    10. ' i' → logprob: -6.8537092208862305

Token 15: ' i' (ID: 575)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.5027617812156677
    2. '        ' → logprob: -1.7527618408203125
    3. '       ' → logprob: -2.0027618408203125
    4. '   ' → logprob: -3.8777618408203125
    5. 'i' (adapté à ' i') → logprob: -4.1277618408203125
    6. ' ' → logprob: -4.1277618408203125
    7. ' i' → logprob: -4.7527618408203125
    8. 'print' → logprob: -4.8777618408203125
    9. '     ' → logprob: -5.7527618408203125
    10. '```' → logprob: -6.6277618408203125

Token 16: '*=' (ID: 93955)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.11314193904399872
    2. '+=' → logprob: -2.3631420135498047
    3. ' ' → logprob: -4.738142013549805
    4. '+' → logprob: -6.613142013549805
    5. '```' → logprob: -7.613142013549805
    6. '=' → logprob: -7.863142013549805
    7. '<|end|>' → logprob: -8.238142013549805
    8. ' *=' → logprob: -8.238142013549805
    9. '   ' → logprob: -8.738142013549805
    10. ' <<=' → logprob: -8.738142013549805

Token 17: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010533124441280961
    2. '3' → logprob: -9.875104904174805
    3. ' ' → logprob: -10.625104904174805
    4. '10' → logprob: -11.625104904174805
    5. 'i' → logprob: -11.750104904174805
    6. '4' → logprob: -12.500104904174805
    7. '5' → logprob: -12.500104904174805
    8. '6' → logprob: -13.125104904174805
    9. '   ' → logprob: -13.875104904174805
    10. '```' → logprob: -14.125104904174805

Token 18: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19014011323451996
    2. '<|end|>' → logprob: -2.4401400089263916
    3. '       ' → logprob: -3.1901400089263916
    4. '   ' → logprob: -3.9401400089263916
    5. '\n' → logprob: -4.190140247344971
    6. '    
' → logprob: -6.565140247344971
    7. '<|end|>' → logprob: -6.815140247344971
    8. '  
' → logprob: -6.940140247344971
    9. '        
' → logprob: -6.940140247344971
    10. ',' → logprob: -7.065140247344971

Token 19: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020753370597958565
    2. '   ' → logprob: -5.145753383636475
    3. '<|end|>' → logprob: -5.520753383636475
    4. '       ' → logprob: -5.645753383636475
    5. '\n' → logprob: -6.270753383636475
    6. '    
' → logprob: -6.520753383636475
    7. ' 
' → logprob: -6.645753383636475
    8. '        
' → logprob: -7.645753383636475
    9. '  
' → logprob: -7.645753383636475
    10. ',' → logprob: -8.395752906799316

Token 20: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5801458358764648
    2. '
' → logprob: -1.7051458358764648
    3. '\n' → logprob: -1.7051458358764648
    4. 'return' (adapté à ' return') → logprob: -4.080145835876465
    5. '    
' → logprob: -4.455145835876465
    6. ' return' → logprob: -4.580145835876465
    7. '       ' → logprob: -4.705145835876465
    8. '\' → logprob: -5.080145835876465
    9. '<|end|>' → logprob: -5.080145835876465
    10. '```' → logprob: -5.830145835876465

Token 21: ' [' (ID: 723)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.026970887556672096
    2. 'i' → logprob: -3.651970863342285
    3. ' ' → logprob: -7.401970863342285
    4. ' ' → logprob: -10.651970863342285
    5. ' None' → logprob: -11.276970863342285
    6. ' N' → logprob: -12.026970863342285
    7. '1' → logprob: -13.026970863342285
    8. 'None' → logprob: -13.276970863342285
    9. '  ' → logprob: -13.464470863342285
    10. '0' → logprob: -13.651970863342285

Token 22: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.046310510486364365
    2. '0' → logprob: -3.2963104248046875
    3. ' i' → logprob: -4.9213104248046875
    4. '1' → logprob: -7.6713104248046875
    5. ' ' → logprob: -8.421310424804688
    6. ']' → logprob: -9.296310424804688
    7. 'False' → logprob: -10.046310424804688
    8. 'None' → logprob: -10.421310424804688
    9. 'x' → logprob: -11.296310424804688
    10. '2' → logprob: -11.546310424804688

Token 23: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16470356285572052
    2. ']*' → logprob: -2.539703607559204
    3. ',' → logprob: -2.664703607559204
    4. ' for' → logprob: -6.414703369140625
    5. ' ]' → logprob: -6.789703369140625
    6. 'for' → logprob: -8.664703369140625
    7. ']+' → logprob: -9.039703369140625
    8. ']*(' → logprob: -9.164703369140625
    9. ',i' → logprob: -10.039703369140625
    10. '*i' → logprob: -10.789703369140625

Token 24: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3141286373138428
    2. 'N' → logprob: -1.3141286373138428
    3. ' i' → logprob: -7.564128875732422
    4. ' N' → logprob: -8.064128875732422
    5. ' ' → logprob: -11.189128875732422
    6. '   ' → logprob: -11.689128875732422
    7. '2' → logprob: -11.939128875732422
    8. '  ' → logprob: -13.814128875732422
    9. '1' → logprob: -13.939128875732422
    10. 'n' → logprob: -14.564128875732422

Token 25: '*i' (ID: 51147)
  Prédit: '*N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.7071751356124878
    2. '*' → logprob: -1.2071751356124878
    3. '*i' → logprob: -1.5821751356124878
    4. ' *' → logprob: -6.207175254821777
    5. 'N' → logprob: -8.832175254821777
    6. '**' → logprob: -8.957175254821777
    7. 'i' → logprob: -9.832175254821777
    8. '*(' → logprob: -10.707175254821777
    9. ' ' → logprob: -11.707175254821777
    10. '   ' → logprob: -11.832175254821777

Token 26: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.138441237155348e-05
    2. '*' → logprob: -10.625091552734375
    3. '+' → logprob: -10.625091552734375
    4. ' )' → logprob: -10.625091552734375
    5. '))' → logprob: -11.625091552734375
    6. '-' → logprob: -13.875091552734375
    7. '2' → logprob: -14.000091552734375
    8. ')`' → logprob: -14.000091552734375
    9. '*)' → logprob: -14.125091552734375
    10. ']' → logprob: -14.125091552734375

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.282920129597187e-05
    2. ' ' → logprob: -11.625012397766113
    3. '2' → logprob: -12.500012397766113
    4. '   ' → logprob: -16.12501335144043
    5. '-' → logprob: -17.12501335144043
    6. '  ' → logprob: -17.37501335144043
    7. '۱' → logprob: -18.31251335144043
    8. ' -' → logprob: -18.62501335144043
    9. '```' → logprob: -18.87501335144043
    10. '...' → logprob: -18.93751335144043

Token 28: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ']' → logprob: -14.250003814697266
    3. '))' → logprob: -14.250003814697266
    4. ' )' → logprob: -14.375003814697266
    5. '[' → logprob: -14.500003814697266
    6. ')`' → logprob: -15.375003814697266
    7. '+' → logprob: -16.000003814697266
    8. '`)' → logprob: -16.125003814697266
    9. '')' → logprob: -16.250003814697266
    10. '*' → logprob: -16.625003814697266

Token 29: 'i' (ID: 72)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6193872094154358
    2. '[' → logprob: -1.369387149810791
    3. '<|end|>' → logprob: -1.869387149810791
    4. '0' → logprob: -4.119387149810791
    5. ')' → logprob: -4.744387149810791
    6. ' 
' → logprob: -5.244387149810791
    7. ' [' → logprob: -5.744387149810791
    8. '(' → logprob: -5.869387149810791
    9. '32' → logprob: -6.494387149810791
    10. 'i' → logprob: -6.619387149810791

Token 30: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0716279745101929
    2. '<|end|>' → logprob: -1.1966279745101929
    3. '
' → logprob: -2.3216280937194824
    4. ',' → logprob: -2.9466280937194824
    5. '```' → logprob: -3.1966280937194824
    6. '.' → logprob: -3.3216280937194824
    7. ')' → logprob: -3.6966280937194824
    8. '\' → logprob: -3.9466280937194824
    9. '\n' → logprob: -4.321628093719482
    10. 'newline' → logprob: -4.571628093719482

Token 32: ' update' (ID: 4027)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.5343348383903503
    2. ' update' → logprob: -0.9093348383903503
    3. ' segment' → logprob: -5.159334659576416
    4. 'build' → logprob: -6.659334659576416
    5. 'update' → logprob: -7.034334659576416
    6. ' insert' → logprob: -7.159334659576416
    7. ' query' → logprob: -7.284334659576416
    8. ' initialize' → logprob: -8.034335136413574
    9. 'segment' → logprob: -8.284335136413574
    10. ' tree' → logprob: -8.534335136413574

Token 33: '(i' (ID: 3649)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.3073365092277527
    2. '(' → logprob: -1.5573365688323975
    3. '(node' → logprob: -3.8073365688323975
    4. '(arr' → logprob: -4.682336330413818
    5. '(root' → logprob: -4.932336330413818
    6. '(index' → logprob: -5.307336330413818
    7. '(Tree' → logprob: -5.932336330413818
    8. '(array' → logprob: -6.432336330413818
    9. '_tree' → logprob: -7.432336330413818
    10. '(data' → logprob: -7.432336330413818

Token 34: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01108153723180294
    2. ' ,' → logprob: -4.886081695556641
    3. ',index' → logprob: -6.136081695556641
    4. ',n' → logprob: -8.13608169555664
    5. ',pos' → logprob: -8.76108169555664
    6. ',node' → logprob: -9.26108169555664
    7. ',j' → logprob: -9.26108169555664
    8. ',i' → logprob: -9.26108169555664
    9. ',N' → logprob: -9.51108169555664
    10. ',p' → logprob: -9.51108169555664

Token 35: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0048150536604225636
    2. ',index' → logprob: -6.629815101623535
    3. ' ,' → logprob: -6.754815101623535
    4. ',n' → logprob: -7.129815101623535
    5. ',i' → logprob: -7.879815101623535
    6. ',value' → logprob: -8.254815101623535
    7. ',p' → logprob: -8.504815101623535
    8. ',pos' → logprob: -9.504815101623535
    9. ',N' → logprob: -9.879815101623535
    10. ',val' → logprob: -9.879815101623535

Token 36: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.260288119316101
    2. '   ' → logprob: -1.760288119316101
    3. ',' → logprob: -1.885288119316101
    4. '[i' → logprob: -2.0102882385253906
    5. ' =' → logprob: -2.6352882385253906
    6. ' ' → logprob: -3.0102882385253906
    7. ' i' → logprob: -3.3852882385253906
    8. '=' → logprob: -3.6352882385253906
    9. '<|end|>' → logprob: -4.135288238525391
    10. ' def' → logprob: -4.510288238525391

Token 37: ' i' (ID: 575)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.9327720403671265
    2. 'i' (adapté à ' i') → logprob: -1.9327720403671265
    3. ' tree' → logprob: -2.432772159576416
    4. '   ' → logprob: -2.682772159576416
    5. 'if' → logprob: -3.057772159576416
    6. ' while' → logprob: -3.182772159576416
    7. ' if' → logprob: -3.557772159576416
    8. ' i' → logprob: -3.557772159576416
    9. 'node' → logprob: -3.807772159576416
    10. 'while' → logprob: -3.807772159576416

Token 38: '+=' (ID: 18287)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.850113570690155
    2. '+=' → logprob: -1.2251136302947998
    3. '=' → logprob: -1.7251136302947998
    4. ' =' → logprob: -3.1001136302948
    5. ' *=' → logprob: -4.350113391876221
    6. '+' → logprob: -4.350113391876221
    7. '[' → logprob: -4.600113391876221
    8. '*' → logprob: -5.100113391876221
    9. '*=' → logprob: -5.100113391876221
    10. ',' → logprob: -6.225113391876221

Token 39: 'd' (ID: 67)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10241182893514633
    2. 'x' → logprob: -2.9774117469787598
    3. 'i' → logprob: -3.3524117469787598
    4. 'len' → logprob: -5.72741174697876
    5. 'n' → logprob: -6.10241174697876
    6. '(' → logprob: -6.22741174697876
    7. ' ' → logprob: -7.22741174697876
    8. 'size' → logprob: -7.60241174697876
    9. '0' → logprob: -7.85241174697876
    10. '2' → logprob: -7.97741174697876

Token 40: '-' (ID: 12)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9373655915260315
    2. '[i' → logprob: -1.4373655319213867
    3. 'x' → logprob: -2.0623655319213867
    4. 'ata' → logprob: -2.4373655319213867
    5. '[x' → logprob: -3.1873655319213867
    6. ' ' → logprob: -3.4373655319213867
    7. 'f' → logprob: -3.6873655319213867
    8. 'i' → logprob: -4.312365531921387
    9. '[]' → logprob: -5.187365531921387
    10. 'l' → logprob: -5.437365531921387

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028353430330753326
    2. 'x' → logprob: -3.778353452682495
    3. ' ' → logprob: -5.778353214263916
    4. 'i' → logprob: -7.028353214263916
    5. '2' → logprob: -7.403353214263916
    6. 'n' → logprob: -8.278353691101074
    7. ' x' → logprob: -9.403353691101074
    8. 'N' → logprob: -9.903353691101074
    9. 'l' → logprob: -10.653353691101074
    10. 'len' → logprob: -10.903353691101074

Token 42: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6409841179847717
    2. '<|end|>' → logprob: -1.015984058380127
    3. '[i' → logprob: -2.765984058380127
    4. '   ' → logprob: -3.390984058380127
    5. 'def' → logprob: -6.640984058380127
    6. '[
' → logprob: -6.640984058380127
    7. ' ' → logprob: -6.640984058380127
    8. 's' → logprob: -7.015984058380127
    9. '[]' → logprob: -7.015984058380127
    10. '[index' → logprob: -7.015984058380127

Token 44: ' bit' (ID: 3546)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3198161125183105
    2. 'tree' → logprob: -1.8198161125183105
    3. 'i' → logprob: -2.1948161125183105
    4. 'd' → logprob: -2.4448161125183105
    5. 'a' → logprob: -2.6948161125183105
    6. 'while' → logprob: -2.8198161125183105
    7. 'def' → logprob: -2.9448161125183105
    8. '<|end|>' → logprob: -3.3198161125183105
    9. '[' → logprob: -3.4448161125183105
    10. 'x' → logprob: -3.8198161125183105

Token 45: '=' (ID: 28)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0012954773847013712
    2. '[x' → logprob: -7.376295566558838
    3. '[' → logprob: -7.876295566558838
    4. 'ree' → logprob: -9.25129508972168
    5. 's' → logprob: -9.75129508972168
    6. '[s' → logprob: -10.12629508972168
    7. '[idx' → logprob: -11.37629508972168
    8. '[index' → logprob: -11.75129508972168
    9. '[a' → logprob: -11.87629508972168
    10. '\[' → logprob: -12.00129508972168

Token 46: 'ord' (ID: 604)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39930224418640137
    2. 'x' → logprob: -1.5243022441864014
    3. '[' → logprob: -3.1493022441864014
    4. '[i' → logprob: -3.8993022441864014
    5. '[x' → logprob: -4.3993024826049805
    6. '1' → logprob: -4.5243024826049805
    7. ' i' → logprob: -4.7743024826049805
    8. ' [' → logprob: -5.2743024826049805
    9. '0' → logprob: -5.7743024826049805
    10. ' x' → logprob: -5.8993024826049805

Token 47: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0032093229237943888
    2. 'x' → logprob: -6.253209114074707
    3. '(' → logprob: -7.128209114074707
    4. '('' → logprob: -7.753209114074707
    5. '(s' → logprob: -11.253209114074707
    6. '[x' → logprob: -12.003209114074707
    7. '("("' → logprob: -12.378209114074707
    8. '(a' → logprob: -12.753209114074707
    9. ' x' → logprob: -12.753209114074707
    10. '`' → logprob: -13.003209114074707

Token 48: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2139023393392563
    2. '')' → logprob: -2.213902235031128
    3. ')-' → logprob: -2.588902235031128
    4. ' )' → logprob: -5.463902473449707
    5. '-)' → logprob: -6.588902473449707
    6. '   ' → logprob: -7.088902473449707
    7. '-' → logprob: -8.088902473449707
    8. ' ' → logprob: -8.213902473449707
    9. '")' → logprob: -8.213902473449707
    10. '`)' → logprob: -8.463902473449707

Token 49: '97' (ID: 5170)
  Prédit: '64'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -0.9041365385055542
    2. 'ord' → logprob: -1.5291365385055542
    3. '96' → logprob: -1.6541365385055542
    4. '48' → logprob: -2.9041366577148438
    5. '97' → logprob: -3.0291366577148438
    6. '32' → logprob: -3.4041366577148438
    7. ' ord' → logprob: -3.5291366577148438
    8. 'a' → logprob: -4.779136657714844
    9. '65' → logprob: -5.404136657714844
    10. ' ' → logprob: -5.779136657714844

Token 50: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17945854365825653
    2. ' while' → logprob: -2.8044586181640625
    3. '<|end|>' → logprob: -2.8044586181640625
    4. 'while' → logprob: -4.3044586181640625
    5. ' ' → logprob: -5.0544586181640625
    6. '
' → logprob: -5.5544586181640625
    7. '    
' → logprob: -5.8044586181640625
    8. '[' → logprob: -5.9294586181640625
    9. '	while' → logprob: -6.0544586181640625
    10. ',' → logprob: -6.0544586181640625

Token 52: ' SEG' (ID: 90192)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8009823560714722
    2. 'TREE' → logprob: -0.8009823560714722
    3. 'tree' → logprob: -3.5509824752807617
    4. 'MENT' → logprob: -3.5509824752807617
    5. '[' → logprob: -4.050982475280762
    6. '_TREE' → logprob: -4.300982475280762
    7. '   ' → logprob: -5.800982475280762
    8. 'T' → logprob: -5.925982475280762
    9. '[id' → logprob: -6.925982475280762
    10. '[T' → logprob: -7.050982475280762

Token 54: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7242963910102844
    2. '][' → logprob: -1.0992963314056396
    3. ']+=' → logprob: -2.3492963314056396
    4. ']=' → logprob: -2.7242963314056396
    5. '].' → logprob: -4.474296569824219
    6. ']|' → logprob: -5.099296569824219
    7. ']+' → logprob: -6.724296569824219
    8. ']=(' → logprob: -6.724296569824219
    9. '|' → logprob: -8.224296569824219
    10. '[' → logprob: -8.474296569824219

Token 55: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7333338260650635
    2. 'bit' → logprob: -0.8583338260650635
    3. '(' → logprob: -2.4833338260650635
    4. '[' → logprob: -4.983333587646484
    5. '(bit' → logprob: -6.108333587646484
    6. '{' → logprob: -6.233333587646484
    7. 'seg' → logprob: -7.733333587646484
    8. 'set' → logprob: -8.358333587646484
    9. ' ' → logprob: -9.233333587646484
    10. ' bit' → logprob: -9.733333587646484

Token 56: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.1813846379518509
    2. 'b' → logprob: -2.306384563446045
    3. ' |' → logprob: -3.056384563446045
    4. '
' → logprob: -4.431384563446045
    5. '|
' → logprob: -6.681384563446045
    6. 'xffffffff' → logprob: -6.806384563446045
    7. 'x' → logprob: -7.056384563446045
    8. '<|end|>' → logprob: -7.056384563446045
    9. ' |=' → logprob: -7.556384563446045
    10. 'xff' → logprob: -7.556384563446045

Token 57: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3856848478317261
    2. ' (' → logprob: -1.635684847831726
    3. '1' → logprob: -2.2606849670410156
    4. ' bit' → logprob: -4.885684967041016
    5. ' ' → logprob: -5.260684967041016
    6. 'bit' → logprob: -5.260684967041016
    7. '(bit' → logprob: -5.885684967041016
    8. '{' → logprob: -10.635684967041016
    9. '=' → logprob: -10.760684967041016
    10. '_bit' → logprob: -11.260684967041016

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00274223112501204
    2. ' ' → logprob: -6.502742290496826
    3. '(' → logprob: -7.377742290496826
    4. 'bit' → logprob: -7.502742290496826
    5. '(bit' → logprob: -10.752741813659668
    6. ' bit' → logprob: -10.877741813659668
    7. ' (' → logprob: -11.752741813659668
    8. '   ' → logprob: -12.252741813659668
    9. '  ' → logprob: -12.627741813659668
    10. ')' → logprob: -14.065241813659668

Token 59: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.003013119101524353
    2. ' <<' → logprob: -5.8780131340026855
    3. '<' → logprob: -8.628012657165527
    4. '<<(' → logprob: -10.628012657165527
    5. '1' → logprob: -13.253012657165527
    6. ' ' → logprob: -13.753012657165527
    7. '```' → logprob: -14.628012657165527
    8. '&lt' → logprob: -14.753012657165527
    9. ' ' → logprob: -15.128012657165527
    10. '<<<' → logprob: -15.753012657165527

Token 60: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -9.639096970204264e-05
    2. ' bit' → logprob: -9.250096321105957
    3. 'bitr' → logprob: -17.000097274780273
    4. 'bi' → logprob: -17.125097274780273
    5. '(bit' → logprob: -17.500097274780273
    6. 'b' → logprob: -18.625097274780273
    7. 'bin' → logprob: -18.750097274780273
    8. 'bits' → logprob: -19.125097274780273
    9. '_bit' → logprob: -19.625097274780273
    10. '   ' → logprob: -19.875097274780273

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003322676522657275
    2. ')
' → logprob: -5.878322601318359
    3. ' )' → logprob: -7.878322601318359
    4. '<|end|>' → logprob: -9.87832260131836
    5. ')return' → logprob: -10.12832260131836
    6. '   ' → logprob: -10.75332260131836
    7. ' )
' → logprob: -12.12832260131836
    8. ')
' → logprob: -12.62832260131836
    9. ')

' → logprob: -12.75332260131836
    10. ')i' → logprob: -13.12832260131836

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41487330198287964
    2. 'while' → logprob: -1.6648733615875244
    3. ' while' → logprob: -2.1648733615875244
    4. 'i' → logprob: -3.5398733615875244
    5. ' i' → logprob: -6.289873123168945
    6. ' ' → logprob: -6.414873123168945
    7. '	while' → logprob: -6.789873123168945
    8. '<|end|>' → logprob: -7.414873123168945
    9. 'def' → logprob: -7.664873123168945
    10. '  ' → logprob: -7.664873123168945

Token 63: ' while' (ID: 2049)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20167478919029236
    2. 'while' (adapté à ' while') → logprob: -2.451674699783325
    3. '   ' → logprob: -2.576674699783325
    4. ' while' → logprob: -4.076674938201904
    5. ' i' → logprob: -5.951674938201904
    6. '```' → logprob: -8.076674461364746
    7. 'def' → logprob: -8.701674461364746
    8. ' ' → logprob: -8.826674461364746
    9. '	while' → logprob: -9.326674461364746
    10. '  ' → logprob: -9.451674461364746

Token 64: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0009159822366200387
    2. 'i' → logprob: -7.000916004180908
    3. '	i' → logprob: -13.12591552734375
    4. ' ' → logprob: -14.12591552734375
    5. '(i' → logprob: -14.25091552734375
    6. '   ' → logprob: -14.37591552734375
    7. ' ' → logprob: -15.50091552734375
    8. '(' → logprob: -15.62591552734375
    9. ' (' → logprob: -15.87591552734375
    10. '  ' → logprob: -16.62591552734375

Token 65: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -4.3822154111694545e-05
    2. '>>' → logprob: -10.500043869018555
    3. ' >' → logprob: -11.125043869018555
    4. '">' → logprob: -14.125043869018555
    5. '>>>' → logprob: -15.625043869018555
    6. '＞' → logprob: -15.875043869018555
    7. '```' → logprob: -16.125043869018555
    8. '>//' → logprob: -16.500043869018555
    9. '//' → logprob: -16.750043869018555
    10. '&gt' → logprob: -17.000043869018555

Token 66: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004732602741569281
    2. ' ' → logprob: -5.379732608795166
    3. '0' → logprob: -9.129732131958008
    4. '   ' → logprob: -13.254732131958008
    5. '>' → logprob: -14.004732131958008
    6. '=' → logprob: -14.004732131958008
    7. 'd' → logprob: -15.379732131958008
    8. '  ' → logprob: -15.629732131958008
    9. '-' → logprob: -16.692232131958008
    10. '/' → logprob: -16.879732131958008

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15550193190574646
    2. ':
' → logprob: -2.0305018424987793
    3. '   ' → logprob: -5.030501842498779
    4. ' :
' → logprob: -6.155501842498779
    5. ' :' → logprob: -6.405501842498779
    6. '       ' → logprob: -6.655501842498779
    7. '>' → logprob: -8.530502319335938
    8. ' and' → logprob: -8.780502319335938
    9. ',' → logprob: -8.905502319335938
    10. '    ' → logprob: -9.155502319335938

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06217707321047783
    2. '   ' → logprob: -3.0621771812438965
    3. ' i' → logprob: -4.4371771812438965
    4. 'i' → logprob: -6.9371771812438965
    5. '    ' → logprob: -7.9371771812438965
    6. ' ' → logprob: -8.687176704406738
    7. '      ' → logprob: -10.312176704406738
    8. '  ' → logprob: -10.687176704406738
    9. '     ' → logprob: -10.687176704406738
    10. '```' → logprob: -11.062176704406738

Token 69: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.2971552610397339
    2. ' i' → logprob: -1.4221552610397339
    3. '   ' → logprob: -4.172155380249023
    4. '       ' → logprob: -8.047155380249023
    5. '	i' → logprob: -10.047155380249023
    6. ' ' → logprob: -10.922155380249023
    7. ',i' → logprob: -10.922155380249023
    8. '    ' → logprob: -11.297155380249023
    9. '```' → logprob: -11.297155380249023
    10. '/' → logprob: -12.297155380249023

Token 70: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0403907299041748
    2. '=(' → logprob: -1.1653907299041748
    3. '//=' → logprob: -1.7903907299041748
    4. '>>' → logprob: -1.9153907299041748
    5. '=i' → logprob: -4.165390968322754
    6. ' =' → logprob: -6.415390968322754
    7. '//' → logprob: -6.415390968322754
    8. '>' → logprob: -7.665390968322754
    9. ' //' → logprob: -7.790390968322754
    10. '   ' → logprob: -8.540390968322754

Token 71: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.017573002725839615
    2. ' i' → logprob: -4.26757287979126
    3. '(i' → logprob: -5.76757287979126
    4. ' (' → logprob: -8.517573356628418
    5. ')i' → logprob: -10.392573356628418
    6. '_i' → logprob: -11.392573356628418
    7. '	i' → logprob: -11.642573356628418
    8. '-' → logprob: -12.392573356628418
    9. ')' → logprob: -12.392573356628418
    10. ' ' → logprob: -12.517573356628418

Token 72: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000714935187716037
    2. ' -' → logprob: -7.2507147789001465
    3. '>>' → logprob: -12.625715255737305
    4. '1' → logprob: -14.375715255737305
    5. '2' → logprob: -14.375715255737305
    6. '"-' → logprob: -15.875715255737305
    7. '>-' → logprob: -16.250715255737305
    8. ' ' → logprob: -16.250715255737305
    9. '"' → logprob: -16.750715255737305
    10. '>' → logprob: -16.750715255737305

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.750003814697266
    3. ')' → logprob: -14.125003814697266
    4. '2' → logprob: -15.125003814697266
    5. '   ' → logprob: -18.750003814697266
    6. ')/' → logprob: -19.000003814697266
    7. ')>>' → logprob: -19.250003814697266
    8. '```' → logprob: -19.625003814697266
    9. '-' → logprob: -20.125003814697266
    10. '(' → logprob: -20.375003814697266

Token 74: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.42644909024238586
    2. ')>>' → logprob: -1.5514490604400635
    3. ')' → logprob: -2.4264490604400635
    4. '>>' → logprob: -3.1764490604400635
    5. '//' → logprob: -5.301449298858643
    6. ' )' → logprob: -10.301448822021484
    7. ' >>' → logprob: -10.426448822021484
    8. ' //' → logprob: -10.926448822021484
    9. '```' → logprob: -11.051448822021484
    10. '>//' → logprob: -11.426448822021484

Token 75: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '<|end|>' → logprob: -16.125017166137695
    4. '1' → logprob: -18.750017166137695
    5. '```' → logprob: -18.875017166137695
    6. '   ' → logprob: -19.375017166137695
    7. '>' → logprob: -19.875017166137695
    8. '۲' → logprob: -20.625017166137695
    9. '`' → logprob: -20.625017166137695
    10. '<|end|>' → logprob: -21.312517166137695

Token 76: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005266484338790178
    2. '   ' → logprob: -5.3802666664123535
    3. 'SEG' → logprob: -8.130266189575195
    4. ',' → logprob: -9.255266189575195
    5. ' SEG' → logprob: -9.505266189575195
    6. 'def' → logprob: -10.130266189575195
    7. 'seg' → logprob: -10.380266189575195
    8. '    ' → logprob: -11.130266189575195
    9. '           ' → logprob: -11.255266189575195
    10. ' ' → logprob: -11.255266189575195

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008814993314445019
    2. '   ' → logprob: -4.883814811706543
    3. ',' → logprob: -7.758814811706543
    4. 'def' → logprob: -7.883814811706543
    5. 's' → logprob: -9.133814811706543
    6. 'seg' → logprob: -10.383814811706543
    7. '    ' → logprob: -10.383814811706543
    8. 'SEG' → logprob: -10.383814811706543
    9. 'd' → logprob: -10.633814811706543
    10. '<|end|>' → logprob: -11.008814811706543

Token 78: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' (adapté à ' SEG') → logprob: -0.0027578065637499094
    2. ' SEG' → logprob: -6.252758026123047
    3. '   ' → logprob: -7.377758026123047
    4. '       ' → logprob: -9.502758026123047
    5. ' ' → logprob: -9.877758026123047
    6. '           ' → logprob: -10.752758026123047
    7. 'SE' → logprob: -10.877758026123047
    8. '_SEG' → logprob: -10.877758026123047
    9. '  ' → logprob: -12.377758026123047
    10. '    ' → logprob: -12.877758026123047

Token 79: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17564454674720764
    2. '[i' → logprob: -2.050644636154175
    3. ']=' → logprob: -4.550644397735596
    4. '=[' → logprob: -4.675644397735596
    5. '=' → logprob: -5.175644397735596
    6. ']' → logprob: -5.925644397735596
    7. '][' → logprob: -7.175644397735596
    8. '```' → logprob: -7.550644397735596
    9. '[S' → logprob: -7.675644397735596
    10. '>[' → logprob: -8.550644874572754

Token 80: ']=' (ID: 9539)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.038181375712156296
    2. ']=' → logprob: -4.163181304931641
    3. '=' → logprob: -5.163181304931641
    4. ')=' → logprob: -5.288181304931641
    5. '|=
' → logprob: -5.538181304931641
    6. ']' → logprob: -6.038181304931641
    7. ')' → logprob: -6.413181304931641
    8. ' |=' → logprob: -6.913181304931641
    9. ']=(' → logprob: -7.538181304931641
    10. ']|' → logprob: -7.788181304931641

Token 81: 'SEG' (ID: 128217)
  Prédit: 'SEG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.002337708603590727
    2. ' SEG' → logprob: -6.25233793258667
    3. '(' → logprob: -8.502337455749512
    4. '   ' → logprob: -9.252337455749512
    5. 'SE' → logprob: -9.752337455749512
    6. '_SEG' → logprob: -11.002337455749512
    7. 'seg' → logprob: -11.627337455749512
    8. ' ' → logprob: -12.502337455749512
    9. 'Seg' → logprob: -12.627337455749512
    10. '0' → logprob: -12.752337455749512

Token 82: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012332366895861924
    2. '[i' → logprob: -9.125123023986816
    3. '2' → logprob: -11.375123023986816
    4. '(' → logprob: -13.375123023986816
    5. 'i' → logprob: -14.875123023986816
    6. '```' → logprob: -15.250123023986816
    7. '[(' → logprob: -16.500123977661133
    8. '1' → logprob: -16.500123977661133
    9. '[left' → logprob: -16.500123977661133
    10. 's' → logprob: -16.625123977661133

Token 83: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0047289221547544
    2. '<<' → logprob: -5.3797287940979
    3. '1' → logprob: -9.379729270935059
    4. '|' → logprob: -11.754729270935059
    5. '2' → logprob: -12.129729270935059
    6. '0' → logprob: -12.254729270935059
    7. ']' → logprob: -13.629729270935059
    8. '+i' → logprob: -13.754729270935059
    9. ']<<' → logprob: -14.004729270935059
    10. '+' → logprob: -14.504729270935059

Token 84: '2' (ID: 17)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007125468924641609
    2. '2' → logprob: -5.007125377655029
    3. ' +' → logprob: -8.382125854492188
    4. '1' → logprob: -9.007125854492188
    5. '   ' → logprob: -10.132125854492188
    6. '*' → logprob: -12.257125854492188
    7. ' ' → logprob: -12.257125854492188
    8. '    ' → logprob: -12.507125854492188
    9. '+i' → logprob: -13.132125854492188
    10. '+j' → logprob: -14.007125854492188

Token 85: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004626649431884289
    2. ' +' → logprob: -5.379626750946045
    3. '   ' → logprob: -12.629626274108887
    4. '1' → logprob: -13.629626274108887
    5. ' ' → logprob: -14.129626274108887
    6. '＋' → logprob: -15.004626274108887
    7. '  ' → logprob: -15.379626274108887
    8. '    ' → logprob: -15.379626274108887
    9. '```' → logprob: -15.879626274108887
    10. ' plus' → logprob: -16.379627227783203

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015231950674206018
    2. '+' → logprob: -6.751523017883301
    3. ' ' → logprob: -8.1265230178833
    4. '   ' → logprob: -10.6265230178833
    5. ' +' → logprob: -11.3765230178833
    6. '0' → logprob: -11.5015230178833
    7. ']+' → logprob: -12.1265230178833
    8. '  ' → logprob: -13.0015230178833
    9. '2' → logprob: -13.7515230178833
    10. '    ' → logprob: -14.2515230178833

Token 87: ']|' (ID: 70489)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0008189192740246654
    2. ' |' → logprob: -7.375818729400635
    3. ']|' → logprob: -9.125819206237793
    4. ']' → logprob: -10.875819206237793
    5. ')|' → logprob: -11.250819206237793
    6. '"|' → logprob: -11.625819206237793
    7. '}|' → logprob: -11.750819206237793
    8. '1' → logprob: -11.750819206237793
    9. ')' → logprob: -12.750819206237793
    10. '0' → logprob: -12.875819206237793

Token 88: 'SEG' (ID: 128217)
  Prédit: 'SEG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.001803938066586852
    2. ' SEG' → logprob: -6.376803874969482
    3. '_SEG' → logprob: -9.62680435180664
    4. 'SE' → logprob: -10.37680435180664
    5. 'seg' → logprob: -13.87680435180664
    6. '  ' → logprob: -13.87680435180664
    7. 'Seg' → logprob: -13.87680435180664
    8. '   ' → logprob: -14.75180435180664
    9. 'SG' → logprob: -15.00180435180664
    10. 'SIG' → logprob: -15.37680435180664

Token 89: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013364320620894432
    2. '[' → logprob: -6.626336574554443
    3. ' [' → logprob: -12.876336097717285
    4. '   ' → logprob: -13.751336097717285
    5. '[I' → logprob: -14.251336097717285
    6. '[(' → logprob: -14.251336097717285
    7. 'code' → logprob: -14.376336097717285
    8. '`' → logprob: -14.376336097717285
    9. '```' → logprob: -14.376336097717285
    10. 'i' → logprob: -14.876336097717285

Token 90: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47824499011039734
    2. '2' → logprob: -0.9782450199127197
    3. '+' → logprob: -6.478244781494141
    4. ' ' → logprob: -6.603244781494141
    5. '[' → logprob: -7.228244781494141
    6. '   ' → logprob: -8.35324478149414
    7. ' *' → logprob: -9.10324478149414
    8. '  ' → logprob: -10.10324478149414
    9. '    ' → logprob: -10.22824478149414
    10. '.' → logprob: -10.97824478149414

Token 91: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.35837464465294e-05
    2. ' ' → logprob: -10.375043869018555
    3. '+' → logprob: -11.625043869018555
    4. '0' → logprob: -14.000043869018555
    5. 'x' → logprob: -14.250043869018555
    6. '1' → logprob: -14.250043869018555
    7. '   ' → logprob: -14.625043869018555
    8. ']' → logprob: -15.000043869018555
    9. '  ' → logprob: -16.125043869018555
    10. '    ' → logprob: -16.500043869018555

Token 92: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0020991105120629072
    2. '2' → logprob: -6.37709903717041
    3. ']' → logprob: -8.00209903717041
    4. ' +' → logprob: -10.62709903717041
    5. '+]' → logprob: -11.25209903717041
    6. ')' → logprob: -12.50209903717041
    7. ' ' → logprob: -12.62709903717041
    8. '   ' → logprob: -12.87709903717041
    9. '<|end|>' → logprob: -12.87709903717041
    10. '0' → logprob: -13.12709903717041

Token 93: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.2855416066013277e-05
    2. ' ' → logprob: -10.500032424926758
    3. '0' → logprob: -12.250032424926758
    4. '1' → logprob: -16.000032424926758
    5. '22' → logprob: -16.375032424926758
    6. '۲' → logprob: -16.375032424926758
    7. '   ' → logprob: -16.750032424926758
    8. '  ' → logprob: -17.750032424926758
    9. '210' → logprob: -18.312532424926758
    10. '<|end|>' → logprob: -18.375032424926758

Token 94: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08972623199224472
    2. '<|end|>' → logprob: -2.464726209640503
    3. '<|end|>' → logprob: -7.839726448059082
    4. ']' → logprob: -8.339726448059082
    5. ')return' → logprob: -9.839726448059082
    6. '```' → logprob: -10.214726448059082
    7. '
' → logprob: -11.214726448059082
    8. ')
' → logprob: -11.464726448059082
    9. '}' → logprob: -11.839726448059082
    10. 'def' → logprob: -11.964726448059082

Token 95: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3420708477497101
    2. '<|end|>' → logprob: -1.7170708179473877
    3. 'd' → logprob: -2.7170708179473877
    4. 'def' → logprob: -3.4670708179473877
    5. '

' → logprob: -5.092071056365967
    6. ' 
' → logprob: -6.467071056365967
    7. '  
' → logprob: -6.842071056365967
    8. '    
' → logprob: -6.967071056365967
    9. ' ' → logprob: -7.217071056365967
    10. ' d' → logprob: -7.592071056365967

Token 96: ' find' (ID: 1646)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9849498271942139
    2. 'query' → logprob: -1.4849498271942139
    3. ' query' → logprob: -1.4849498271942139
    4. 'main' → logprob: -3.234949827194214
    5. ' build' → logprob: -3.484949827194214
    6. 'build' → logprob: -3.484949827194214
    7. ' update' → logprob: -4.484950065612793
    8. 'update' → logprob: -4.734950065612793
    9. 'count' → logprob: -4.859950065612793
    10. 'range' → logprob: -5.109950065612793

Token 97: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10524126142263412
    2. '_unique' → logprob: -3.480241298675537
    3. '(i' → logprob: -3.730241298675537
    4. '(_' → logprob: -4.230241298675537
    5. '_' → logprob: -5.355241298675537
    6. '(x' → logprob: -5.480241298675537
    7. '_(' → logprob: -5.605241298675537
    8. '_char' → logprob: -6.105241298675537
    9. '_first' → logprob: -6.605241298675537
    10. 'unique' → logprob: -6.730241298675537

Token 98: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.22847571969032288
    2. ',' → logprob: -1.6034756898880005
    3. ',l' → logprob: -6.853475570678711
    4. ' ,' → logprob: -7.978475570678711
    5. 'b' → logprob: -7.978475570678711
    6. '):' → logprob: -8.603475570678711
    7. ',n' → logprob: -8.978475570678711
    8. ',a' → logprob: -9.228475570678711
    9. ',d' → logprob: -9.228475570678711
    10. '_,' → logprob: -9.228475570678711

Token 99: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3204614520072937
    2. '):' → logprob: -1.3204615116119385
    3. ',i' → logprob: -5.820461273193359
    4. ' ,' → logprob: -6.445461273193359
    5. ',a' → logprob: -7.445461273193359
    6. '):
' → logprob: -7.820461273193359
    7. ' ):' → logprob: -7.945461273193359
    8. ',n' → logprob: -8.07046127319336
    9. ',index' → logprob: -8.32046127319336
    10. ',d' → logprob: -9.07046127319336

Token 100: ',l' (ID: 45198)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24159693717956543
    2. ',' → logprob: -1.6165969371795654
    3. ',i' → logprob: -4.4915971755981445
    4. ',a' → logprob: -6.4915971755981445
    5. ',index' → logprob: -6.8665971755981445
    6. ',l' → logprob: -7.9915971755981445
    7. ')' → logprob: -8.366597175598145
    8. ',d' → logprob: -8.366597175598145
    9. ',n' → logprob: -8.616597175598145
    10. ' ,' → logprob: -8.616597175598145

Token 101: ',r' (ID: 33654)
  Prédit: ',r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.002945132553577423
    2. ',n' → logprob: -6.6279449462890625
    3. ',' → logprob: -7.5029449462890625
    4. ',s' → logprob: -8.377944946289062
    5. ',u' → logprob: -8.752944946289062
    6. ',l' → logprob: -9.002944946289062
    7. ',c' → logprob: -9.252944946289062
    8. ',d' → logprob: -9.252944946289062
    9. ',b' → logprob: -9.252944946289062
    10. ',m' → logprob: -9.627944946289062

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.313486784696579
    2. '):
' → logprob: -1.3134868144989014
    3. '   ' → logprob: -9.68848705291748
    4. ')' → logprob: -9.81348705291748
    5. ' ):' → logprob: -10.06348705291748
    6. ',' → logprob: -10.93848705291748
    7. '):
' → logprob: -11.31348705291748
    8. '):

' → logprob: -11.31348705291748
    9. ' ):
' → logprob: -11.31348705291748
    10. '=' → logprob: -12.31348705291748

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010094137862324715
    2. ' if' → logprob: -4.885094165802002
    3. 'if' → logprob: -6.010094165802002
    4. '	if' → logprob: -11.760093688964844
    5. '       ' → logprob: -11.760093688964844
    6. ')' → logprob: -12.635093688964844
    7. '    ' → logprob: -12.760093688964844
    8. '  ' → logprob: -13.135093688964844
    9. '<|end|>' → logprob: -13.135093688964844
    10. ',' → logprob: -13.260093688964844

Token 104: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00031949623371474445
    2. ' if' → logprob: -8.500319480895996
    3. '   ' → logprob: -9.125319480895996
    4. '       ' → logprob: -12.500319480895996
    5. '	if' → logprob: -13.750319480895996
    6. '#' → logprob: -14.500319480895996
    7. '1' → logprob: -14.500319480895996
    8. '
' → logprob: -15.000319480895996
    9. ' ' → logprob: -15.750319480895996
    10. 'return' → logprob: -15.750319480895996

Token 105: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3145144581794739
    2. 'b' → logprob: -1.314514398574829
    3. ' r' → logprob: -7.439514636993408
    4. 'a' → logprob: -7.689514636993408
    5. ' b' → logprob: -8.93951416015625
    6. '   ' → logprob: -9.56451416015625
    7. 'l' → logprob: -13.31451416015625
    8. '[r' → logprob: -14.18951416015625
    9. '[b' → logprob: -14.43951416015625
    10. '(r' → logprob: -14.56451416015625

Token 106: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.00013965457037556916
    2. '<' → logprob: -9.500139236450195
    3. '<a' → logprob: -10.500139236450195
    4. 'a' → logprob: -10.625139236450195
    5. '```' → logprob: -12.125139236450195
    6. ' <=' → logprob: -13.125139236450195
    7. ')<=' → logprob: -13.375139236450195
    8. '   ' → logprob: -14.000139236450195
    9. '≤' → logprob: -14.375139236450195
    10. 'k' → logprob: -14.875139236450195

Token 107: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.306760805164231e-05
    2. ' a' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.62501335144043
    4. ' ' → logprob: -20.37501335144043
    5. 'b' → logprob: -21.37501335144043
    6. '  ' → logprob: -21.75001335144043
    7. '	a' → logprob: -22.00001335144043
    8. '    ' → logprob: -22.50001335144043
    9. 'l' → logprob: -22.62501335144043
    10. '>a' → logprob: -23.25001335144043

Token 108: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5759574770927429
    2. 'or' → logprob: -0.8259574770927429
    3. '   ' → logprob: -11.450957298278809
    4. '	or' → logprob: -12.575957298278809
    5. ' ' → logprob: -13.450957298278809
    6. ':' → logprob: -13.575957298278809
    7. ''or' → logprob: -14.950957298278809
    8. ')' → logprob: -15.575957298278809
    9. ':return' → logprob: -15.825957298278809
    10. '    ' → logprob: -16.325958251953125

Token 109: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0014048750745132565
    2. 'l' → logprob: -7.251404762268066
    3. 'a' → logprob: -7.501404762268066
    4. ' b' → logprob: -8.876404762268066
    5. ' l' → logprob: -14.001404762268066
    6. '   ' → logprob: -14.001404762268066
    7. 'r' → logprob: -14.126404762268066
    8. ' a' → logprob: -15.501404762268066
    9. ' ' → logprob: -16.751405715942383
    10. 'k' → logprob: -16.751405715942383

Token 110: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0004427051462698728
    2. '>=' → logprob: -9.125442504882812
    3. ')<=' → logprob: -9.125442504882812
    4. ']<=' → logprob: -9.500442504882812
    5. ' <=' → logprob: -9.625442504882812
    6. '```' → logprob: -10.375442504882812
    7. '<|end|>' → logprob: -11.125442504882812
    8. 'k' → logprob: -11.750442504882812
    9. 'a' → logprob: -12.125442504882812
    10. '[' → logprob: -12.250442504882812

Token 111: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.44443862256594e-05
    2. 'k' → logprob: -10.375064849853516
    3. ' l' → logprob: -10.625064849853516
    4. 'r' → logprob: -11.750064849853516
    5. '   ' → logprob: -15.125064849853516
    6. '[l' → logprob: -15.500064849853516
    7. 'q' → logprob: -15.875064849853516
    8. '	l' → logprob: -16.000064849853516
    9. 'L' → logprob: -16.875064849853516
    10. '       ' → logprob: -17.000064849853516

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11542315781116486
    2. ':
' → logprob: -2.3654232025146484
    3. ':return' → logprob: -4.240423202514648
    4. '   ' → logprob: -7.740423202514648
    5. '       ' → logprob: -8.365423202514648
    6. ' or' → logprob: -10.990423202514648
    7. ' :' → logprob: -12.115423202514648
    8. 'return' → logprob: -12.865423202514648
    9. ' :
' → logprob: -12.865423202514648
    10. ':
' → logprob: -13.740423202514648

Token 113: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6172394156455994
    2. '       ' → logprob: -0.8672394156455994
    3. 'return' → logprob: -3.242239475250244
    4. ' return' → logprob: -6.617239475250244
    5. '	return' → logprob: -11.117238998413086
    6. '0' → logprob: -11.367238998413086
    7. ':return' → logprob: -11.492238998413086
    8. ' ' → logprob: -12.992238998413086
    9. '    ' → logprob: -12.992238998413086
    10. '1' → logprob: -14.367238998413086

Token 114: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.040164604783058167
    2. '0' → logprob: -3.7901647090911865
    3. '   ' → logprob: -4.290164470672607
    4. ' return' → logprob: -5.790164470672607
    5. ' ' → logprob: -12.040164947509766
    6. '       ' → logprob: -12.290164947509766
    7. '1' → logprob: -12.915164947509766
    8. '  ' → logprob: -13.790164947509766
    9. '
' → logprob: -14.415164947509766
    10. '    ' → logprob: -14.540164947509766

Token 115: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001176416757516563
    2. ' ' → logprob: -6.751176357269287
    3. '   ' → logprob: -12.751176834106445
    4. '-' → logprob: -13.501176834106445
    5. '(' → logprob: -14.376176834106445
    6. '  ' → logprob: -15.001176834106445
    7. '    ' → logprob: -15.376176834106445
    8. ' -' → logprob: -15.376176834106445
    9. '~' → logprob: -16.563676834106445
    10. '1' → logprob: -16.563676834106445

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -10.875021934509277
    3. '-' → logprob: -13.250021934509277
    4. '(' → logprob: -13.875021934509277
    5. '   ' → logprob: -16.375022888183594
    6. '000' → logprob: -16.750022888183594
    7. ' -' → logprob: -17.875022888183594
    8. '00' → logprob: -18.312522888183594
    9. '[' → logprob: -18.312522888183594
    10. '~' → logprob: -18.437522888183594

Token 117: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027956105768680573
    2. '
' → logprob: -6.252795696258545
    3. '<|end|>' → logprob: -8.127795219421387
    4. '    
' → logprob: -8.502795219421387
    5. '  ' → logprob: -8.502795219421387
    6. '  
' → logprob: -10.002795219421387
    7. 'if' → logprob: -11.002795219421387
    8. ' ' → logprob: -11.127795219421387
    9. '    ' → logprob: -11.252795219421387
    10. ' if' → logprob: -11.377795219421387

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2291594296693802
    2. 'if' → logprob: -1.7291594743728638
    3. ' if' → logprob: -3.604159355163574
    4. '  ' → logprob: -10.354159355163574
    5. ' ' → logprob: -10.979159355163574
    6. 'elif' → logprob: -11.229159355163574
    7. '    ' → logprob: -11.354159355163574
    8. 'res' → logprob: -11.354159355163574
    9. '    
' → logprob: -11.729159355163574
    10. 'token' → logprob: -11.729159355163574

Token 119: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0003663212701212615
    2. ' if' → logprob: -8.1253662109375
    3. 'elif' → logprob: -9.7503662109375
    4. '   ' → logprob: -11.3753662109375
    5. ' ' → logprob: -15.1253662109375
    6. ';if' → logprob: -15.7503662109375
    7. 'If' → logprob: -16.2503662109375
    8. '	if' → logprob: -17.6253662109375
    9. '  ' → logprob: -17.6253662109375
    10. '```' → logprob: -17.8753662109375

Token 120: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00010402000043541193
    2. ' a' → logprob: -9.250103950500488
    3. '   ' → logprob: -12.125103950500488
    4. ' ' → logprob: -13.625103950500488
    5. '[a' → logprob: -14.250103950500488
    6. 'l' → logprob: -15.375103950500488
    7. '(a' → logprob: -16.750104904174805
    8. '  ' → logprob: -16.875104904174805
    9. '    ' → logprob: -17.125104904174805
    10. '	a' → logprob: -17.250104904174805

Token 121: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.005266245920211077
    2. '>=' → logprob: -5.255266189575195
    3. ' <=' → logprob: -10.380266189575195
    4. ']<=' → logprob: -14.380266189575195
    5. ')<=' → logprob: -14.880266189575195
    6. ' >=' → logprob: -15.880266189575195
    7. ']>=' → logprob: -16.380266189575195
    8. '≤' → logprob: -16.630266189575195
    9. '```' → logprob: -16.755266189575195
    10. ')>=' → logprob: -17.630266189575195

Token 122: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -7.226628895296017e-06
    2. 'k' → logprob: -11.875007629394531
    3. ' l' → logprob: -15.500007629394531
    4. '	l' → logprob: -19.37500762939453
    5. '_l' → logprob: -19.50000762939453
    6. '[l' → logprob: -19.62500762939453
    7. '   ' → logprob: -21.25000762939453
    8. '
' → logprob: -21.50000762939453
    9. '```' → logprob: -21.75000762939453
    10. ' ' → logprob: -21.75000762939453

Token 123: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3868720829486847
    2. ' and' → logprob: -1.1368720531463623
    3. ' ' → logprob: -15.136872291564941
    4. '   ' → logprob: -15.261872291564941
    5. '	and' → logprob: -16.011871337890625
    6. '    ' → logprob: -16.261871337890625
    7. '<|end|>' → logprob: -16.261871337890625
    8. '       ' → logprob: -16.636871337890625
    9. '&&' → logprob: -17.136871337890625
    10. '```' → logprob: -17.136871337890625

Token 124: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00024358915106859058
    2. ' r' → logprob: -8.500243186950684
    3. 'b' → logprob: -10.125243186950684
    4. '   ' → logprob: -18.375244140625
    5. ' b' → logprob: -18.375244140625
    6. 'a' → logprob: -18.750244140625
    7. ' ' → logprob: -19.500244140625
    8. '	r' → logprob: -19.750244140625
    9. 'k' → logprob: -20.750244140625
    10. '_r' → logprob: -21.375244140625

Token 125: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -5.466968650580384e-05
    2. '>=' → logprob: -10.125054359436035
    3. ' <=' → logprob: -12.125054359436035
    4. ')<=' → logprob: -12.500054359436035
    5. ']<=' → logprob: -12.875054359436035
    6. 'and' → logprob: -13.750054359436035
    7. '```' → logprob: -13.875054359436035
    8. 'b' → logprob: -14.750054359436035
    9. '<|end|>' → logprob: -16.12505531311035
    10. '>' → logprob: -16.87505531311035

Token 126: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.5491004129871726e-05
    2. ' b' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.250045776367188
    4. ' ' → logprob: -19.125045776367188
    5. '	b' → logprob: -19.500045776367188
    6. 'k' → logprob: -20.250045776367188
    7. '<b' → logprob: -20.375045776367188
    8. '  ' → logprob: -20.375045776367188
    9. '>b' → logprob: -21.000045776367188
    10. '[b' → logprob: -21.250045776367188

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29017922282218933
    2. ':
' → logprob: -1.5401792526245117
    3. ':return' → logprob: -3.2901792526245117
    4. '   ' → logprob: -8.665179252624512
    5. 'return' → logprob: -9.540179252624512
    6. '       ' → logprob: -10.790179252624512
    7. ':

' → logprob: -12.040179252624512
    8. ' return' → logprob: -12.415179252624512
    9. ':
' → logprob: -13.290179252624512
    10. ' :' → logprob: -13.665179252624512

Token 128: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12640497088432312
    2. '       ' → logprob: -2.6264050006866455
    3. '   ' → logprob: -3.1264050006866455
    4. ' return' → logprob: -6.001404762268066
    5. '	return' → logprob: -10.751404762268066
    6. 'SEG' → logprob: -11.251404762268066
    7. '{return' → logprob: -12.251404762268066
    8. '           ' → logprob: -12.251404762268066
    9. ':return' → logprob: -12.876404762268066
    10. ' SEG' → logprob: -13.376404762268066

Token 129: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0036950893700122833
    2. 'SEG' → logprob: -6.003695011138916
    3. ' return' → logprob: -6.753695011138916
    4. ' SEG' → logprob: -10.378695487976074
    5. '   ' → logprob: -11.003695487976074
    6. '       ' → logprob: -12.503695487976074
    7. 'RETURN' → logprob: -15.753695487976074
    8. '
' → logprob: -15.753695487976074
    9. '           ' → logprob: -15.878695487976074
    10. '{return' → logprob: -16.378694534301758

Token 130: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.0181527491658926
    2. ' SEG' → logprob: -4.018152713775635
    3. 'k' → logprob: -13.018153190612793
    4. ' k' → logprob: -15.393153190612793
    5. ' ' → logprob: -15.393153190612793
    6. 'seg' → logprob: -15.518153190612793
    7. 'SE' → logprob: -16.518152236938477
    8. '   ' → logprob: -17.018152236938477
    9. '  ' → logprob: -19.018152236938477
    10. '_SEG' → logprob: -19.518152236938477

Token 131: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.3504686653614044
    2. '[i' → logprob: -1.225468635559082
    3. 'k' → logprob: -7.100468635559082
    4. '[l' → logprob: -7.475468635559082
    5. '[r' → logprob: -7.975468635559082
    6. '[' → logprob: -8.600468635559082
    7. '[a' → logprob: -9.975468635559082
    8. '[int' → logprob: -11.975468635559082
    9. '[I' → logprob: -12.100468635559082
    10. ' [' → logprob: -12.225468635559082

Token 132: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013917810283601284
    2. '<|end|>' → logprob: -6.751391887664795
    3. ' ]' → logprob: -8.751391410827637
    4. ']
' → logprob: -9.876391410827637
    5. '<|end|>' → logprob: -12.251391410827637
    6. ']

' → logprob: -12.501391410827637
    7. '
' → logprob: -14.501391410827637
    8. '[' → logprob: -14.751391410827637
    9. '']' → logprob: -14.876391410827637
    10. ']>' → logprob: -15.126391410827637

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04546228423714638
    2. 'mid' → logprob: -3.4204623699188232
    3. 'm' → logprob: -4.545462131500244
    4. 'left' → logprob: -7.795462131500244
    5. ' mid' → logprob: -7.920462131500244
    6. ' left' → logprob: -9.045462608337402
    7. 'pm' → logprob: -9.670462608337402
    8. ' m' → logprob: -9.920462608337402
    9. ' ' → logprob: -10.545462608337402
    10. '       ' → logprob: -11.545462608337402

Token 134: ' else' (ID: 1203)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7942352294921875
    2. 'mid' → logprob: -0.7942352294921875
    3. 'else' (adapté à ' else') → logprob: -3.4192352294921875
    4. 'left' → logprob: -3.7942352294921875
    5. '   ' → logprob: -3.9192352294921875
    6. ' mid' → logprob: -4.7942352294921875
    7. ' left' → logprob: -5.5442352294921875
    8. 'vl' → logprob: -6.0442352294921875
    9. 'pm' → logprob: -6.2942352294921875
    10. ' else' → logprob: -7.1692352294921875

Token 135: ':
' (ID: 734)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4205133616924286
    2. '       ' → logprob: -1.795513391494751
    3. ':
' → logprob: -2.295513391494751
    4. 'return' → logprob: -3.045513391494751
    5. '   ' → logprob: -4.170513153076172
    6. ' left' → logprob: -5.670513153076172
    7. ':return' → logprob: -5.795513153076172
    8. '
' → logprob: -6.045513153076172
    9. ':' → logprob: -6.670513153076172
    10. ' ' → logprob: -7.045513153076172

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4885151982307434
    2. '   ' → logprob: -2.2385151386260986
    3. 'return' → logprob: -2.4885151386260986
    4. 'mid' → logprob: -3.1135151386260986
    5. ' return' → logprob: -3.2385151386260986
    6. ' left' → logprob: -3.2385151386260986
    7. 'left' → logprob: -3.6135151386260986
    8. 'm' → logprob: -3.6135151386260986
    9. ' mid' → logprob: -4.488515377044678
    10. ' m' → logprob: -5.488515377044678

Token 137: ' c' (ID: 274)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6127309203147888
    2. 'vl' → logprob: -0.8627309203147888
    3. 'return' → logprob: -4.612730979919434
    4. 'mid' → logprob: -4.987730979919434
    5. 'm' → logprob: -5.612730979919434
    6. 'p' → logprob: -5.862730979919434
    7. ' left' → logprob: -5.987730979919434
    8. 'v' → logprob: -6.112730979919434
    9. 'lv' → logprob: -6.237730979919434
    10. 'lc' → logprob: -6.362730979919434

Token 138: '1' (ID: 16)
  Prédit: '=('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=(' → logprob: -0.1858527958393097
    2. '=k' → logprob: -2.1858527660369873
    3. '=' → logprob: -3.3108527660369873
    4. '=c' → logprob: -4.060853004455566
    5. ' =' → logprob: -5.935853004455566
    6. '=int' → logprob: -7.935853004455566
    7. '=l' → logprob: -8.935853004455566
    8. '=f' → logprob: -8.935853004455566
    9. '=cut' → logprob: -9.685853004455566
    10. '=((' → logprob: -10.185853004455566

Token 139: '=find' (ID: 88179)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8376400470733643
    2. ' =' → logprob: -1.5876400470733643
    3. '=k' → logprob: -1.8376400470733643
    4. '=(' → logprob: -2.0876400470733643
    5. '=c' → logprob: -2.5876400470733643
    6. '=find' → logprob: -6.337639808654785
    7. '=f' → logprob: -6.837639808654785
    8. ' =(' → logprob: -6.962639808654785
    9. '=l' → logprob: -8.962639808654785
    10. '=int' → logprob: -8.962639808654785

Token 140: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.15441757265944e-05
    2. '(' → logprob: -11.125031471252441
    3. 'a' → logprob: -11.125031471252441
    4. ' (' → logprob: -13.375031471252441
    5. ' a' → logprob: -15.500031471252441
    6. ' ' → logprob: -15.750031471252441
    7. '((' → logprob: -16.750032424926758
    8. '   ' → logprob: -17.250032424926758
    9. '```' → logprob: -17.250032424926758
    10. '(k' → logprob: -18.500032424926758

Token 141: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.0020362993236631155
    2. ',' → logprob: -6.252036094665527
    3. 'b' → logprob: -9.877036094665527
    4. ' ,' → logprob: -10.252036094665527
    5. ' b' → logprob: -11.502036094665527
    6. ',k' → logprob: -12.252036094665527
    7. ',c' → logprob: -12.502036094665527
    8. '   ' → logprob: -14.127036094665527
    9. ' ' → logprob: -14.627036094665527
    10. ',m' → logprob: -15.502036094665527

Token 142: ',' (ID: 11)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.0038473401218652725
    2. ',' → logprob: -5.628847122192383
    3. ' ,' → logprob: -8.503847122192383
    4. 'k' → logprob: -10.503847122192383
    5. ' ' → logprob: -11.878847122192383
    6. ',c' → logprob: -13.003847122192383
    7. ',l' → logprob: -13.378847122192383
    8. '   ' → logprob: -13.378847122192383
    9. ',(' → logprob: -13.628847122192383
    10. ' k' → logprob: -13.753847122192383

Token 143: '2' (ID: 17)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.009762698784470558
    2. '2' → logprob: -4.634762763977051
    3. ' k' → logprob: -12.63476276397705
    4. '   ' → logprob: -14.00976276397705
    5. ' ' → logprob: -14.25976276397705
    6. '(k' → logprob: -14.38476276397705
    7. '(' → logprob: -14.88476276397705
    8. '    ' → logprob: -14.88476276397705
    9. '  ' → logprob: -16.009761810302734
    10. '3' → logprob: -16.384761810302734

Token 144: '*k' (ID: 81061)
  Prédit: '*k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.01420193538069725
    2. 'k' → logprob: -4.264202117919922
    3. ' *' → logprob: -10.764202117919922
    4. ' k' → logprob: -11.389202117919922
    5. '   ' → logprob: -13.264202117919922
    6. '
' → logprob: -13.389202117919922
    7. '+k' → logprob: -14.389202117919922
    8. '*' → logprob: -14.764202117919922
    9. '*c' → logprob: -15.139202117919922
    10. '```' → logprob: -15.389202117919922

Token 145: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00023119196703191847
    2. ' +' → logprob: -8.37523078918457
    3. '1' → logprob: -15.25023078918457
    4. '   ' → logprob: -16.00023078918457
    5. ' ' → logprob: -16.37523078918457
    6. '+l' → logprob: -17.00023078918457
    7. '＋' → logprob: -17.50023078918457
    8. '  ' → logprob: -18.12523078918457
    9. ' plus' → logprob: -18.25023078918457
    10. '```' → logprob: -19.00023078918457

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.782141569303349e-05
    2. ' ' → logprob: -9.25009822845459
    3. '   ' → logprob: -14.37509822845459
    4. '2' → logprob: -14.37509822845459
    5. '  ' → logprob: -15.93759822845459
    6. ',' → logprob: -17.000097274780273
    7. '۱' → logprob: -17.062597274780273
    8. '0' → logprob: -17.187597274780273
    9. '１' → logprob: -17.250097274780273
    10. '
' → logprob: -17.937597274780273

Token 147: ',l' (ID: 45198)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.5213361978530884
    2. ',l' → logprob: -1.0213361978530884
    3. ',' → logprob: -3.146336078643799
    4. ' ,' → logprob: -5.771336078643799
    5. 'k' → logprob: -11.271336555480957
    6. 'l' → logprob: -11.896336555480957
    7. '   ' → logprob: -12.271336555480957
    8. ' ' → logprob: -13.021336555480957
    9. ',c' → logprob: -13.146336555480957
    10. ',ll' → logprob: -13.396336555480957

Token 148: ',(' (ID: 27243)
  Prédit: ',('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',(' → logprob: -0.06250882148742676
    2. '(m' → logprob: -3.4375088214874268
    3. ',m' → logprob: -4.562508583068848
    4. ',' → logprob: -4.812508583068848
    5. '(c' → logprob: -4.812508583068848
    6. ',c' → logprob: -7.187508583068848
    7. '(r' → logprob: -8.312508583068848
    8. '(mid' → logprob: -8.312508583068848
    9. ' (' → logprob: -8.562508583068848
    10. 'm' → logprob: -9.437508583068848

Token 149: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -5.676981345459353e-06
    2. 'r' → logprob: -12.875005722045898
    3. '(l' → logprob: -13.250005722045898
    4. ' l' → logprob: -13.750005722045898
    5. '   ' → logprob: -16.1250057220459
    6. '	l' → logprob: -17.3750057220459
    7. '(r' → logprob: -19.0000057220459
    8. ' (' → logprob: -19.1250057220459
    9. ' ' → logprob: -19.2500057220459
    10. '
' → logprob: -19.3750057220459

Token 150: '+r' (ID: 133712)
  Prédit: '+r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+r' → logprob: -2.15310683415737e-05
    2. '+' → logprob: -11.625021934509277
    3. 'r' → logprob: -11.625021934509277
    4. ' +' → logprob: -12.625021934509277
    5. '+
' → logprob: -16.00002098083496
    6. '+(' → logprob: -16.50002098083496
    7. '[r' → logprob: -17.37502098083496
    8. '(r' → logprob: -18.00002098083496
    9. '   ' → logprob: -18.12502098083496
    10. '*r' → logprob: -18.50002098083496

Token 151: ')//' (ID: 60375)
  Prédit: '+r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+r' → logprob: -0.0015605698572471738
    2. ')//' → logprob: -7.376560688018799
    3. ' +' → logprob: -8.00156021118164
    4. ')' → logprob: -8.25156021118164
    5. '+l' → logprob: -8.62656021118164
    6. '+' → logprob: -9.75156021118164
    7. ')+(' → logprob: -10.37656021118164
    8. '//' → logprob: -10.50156021118164
    9. '+c' → logprob: -11.00156021118164
    10. '+(' → logprob: -12.00156021118164

Token 152: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.3750057220459
    4. '```' → logprob: -18.7500057220459
    5. '۲' → logprob: -19.6250057220459
    6. ')' → logprob: -19.8750057220459
    7. '  ' → logprob: -19.8750057220459
    8. '२' → logprob: -20.1250057220459
    9. '    ' → logprob: -20.5000057220459
    10. '２' → logprob: -20.5625057220459

Token 153: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.049921322613954544
    2. ')' → logprob: -3.0499212741851807
    3. ')c' → logprob: -6.79992151260376
    4. ' )
' → logprob: -9.299921035766602
    5. ')
' → logprob: -9.549921035766602
    6. '   ' → logprob: -10.049921035766602
    7. ' )' → logprob: -12.424921035766602
    8. ')

' → logprob: -12.549921035766602
    9. ',c' → logprob: -12.924921035766602
    10. 'c' → logprob: -13.924921035766602

Token 154: '       ' (ID: 309)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.009982611984014511
    2. ' |' → logprob: -5.009982585906982
    3. 'c' → logprob: -6.384982585906982
    4. ' c' → logprob: -6.634982585906982
    5. ' ' → logprob: -8.88498306274414
    6. ' ^' → logprob: -10.13498306274414
    7. '^' → logprob: -10.88498306274414
    8. ',c' → logprob: -11.25998306274414
    9. '   ' → logprob: -11.25998306274414
    10. '
' → logprob: -11.38498306274414

Token 155: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0005530327325686812
    2. ' c' → logprob: -7.500553131103516
    3. '   ' → logprob: -18.250553131103516
    4. '  ' → logprob: -20.375553131103516
    5. '	c' → logprob: -20.375553131103516
    6. ' ' → logprob: -21.375553131103516
    7. ',c' → logprob: -22.375553131103516
    8. '
' → logprob: -23.125553131103516
    9. '       ' → logprob: -23.250553131103516
    10. '    ' → logprob: -23.250553131103516

Token 156: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6047699318733066e-05
    2. '=find' → logprob: -11.125016212463379
    3. '=' → logprob: -14.375016212463379
    4. 'find' → logprob: -15.875016212463379
    5. '1' → logprob: -16.000015258789062
    6. '(find' → logprob: -16.375015258789062
    7. '２' → logprob: -16.750015258789062
    8. ' ' → logprob: -16.750015258789062
    9. 'c' → logprob: -16.875015258789062
    10. '₂' → logprob: -18.250015258789062

Token 157: '=find' (ID: 88179)
  Prédit: '=find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=find' → logprob: -4.5491004129871726e-05
    2. '=' → logprob: -10.000045776367188
    3. ' =' → logprob: -18.625045776367188
    4. '=
' → logprob: -18.875045776367188
    5. '=

' → logprob: -19.625045776367188
    6. '=get' → logprob: -19.875045776367188
    7. ')find' → logprob: -20.125045776367188
    8. '(find' → logprob: -20.375045776367188
    9. '=require' → logprob: -21.500045776367188
    10. ' find' → logprob: -22.000045776367188

Token 158: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.125000953674316
    3. ' (' → logprob: -18.25
    4. '(
' → logprob: -18.25
    5. 'a' → logprob: -19.75
    6. '```' → logprob: -21.25
    7. '((' → logprob: -21.625
    8. '(A' → logprob: -22.625
    9. '(ai' → logprob: -22.75
    10. '<a' → logprob: -23.875

Token 159: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -2.2961512513575144e-05
    2. ',' → logprob: -11.250022888183594
    3. ' ,' → logprob: -12.125022888183594
    4. 'b' → logprob: -12.375022888183594
    5. ',c' → logprob: -16.250022888183594
    6. '+' → logprob: -16.500022888183594
    7. '(b' → logprob: -17.000022888183594
    8. ' b' → logprob: -17.875022888183594
    9. '+b' → logprob: -18.000022888183594
    10. ',r' → logprob: -18.125022888183594

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031520487391389906
    2. ',k' → logprob: -8.12531566619873
    3. ' ,' → logprob: -11.37531566619873
    4. 'k' → logprob: -12.37531566619873
    5. ',c' → logprob: -13.50031566619873
    6. '2' → logprob: -13.62531566619873
    7. ',
' → logprob: -15.75031566619873
    8. 'c' → logprob: -15.87531566619873
    9. ' ' → logprob: -15.87531566619873
    10. ')' → logprob: -16.250314712524414

Token 161: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4285862057004124e-05
    2. ' ' → logprob: -10.50003433227539
    3. 'k' → logprob: -12.00003433227539
    4. '   ' → logprob: -15.37503433227539
    5. 'c' → logprob: -15.75003433227539
    6. '  ' → logprob: -16.37503433227539
    7. ',' → logprob: -17.25003433227539
    8. '
' → logprob: -17.50003433227539
    9. ' k' → logprob: -17.87503433227539
    10. ')' → logprob: -18.00003433227539

Token 162: '*k' (ID: 81061)
  Prédit: '*k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -1.0802738870552275e-05
    2. 'k' → logprob: -11.50001049041748
    3. '*' → logprob: -14.75001049041748
    4. '*c' → logprob: -15.62501049041748
    5. '+' → logprob: -18.500011444091797
    6. '+k' → logprob: -18.750011444091797
    7. ' *' → logprob: -18.875011444091797
    8. '*x' → logprob: -19.125011444091797
    9. '	k' → logprob: -19.250011444091797
    10. '
' → logprob: -19.625011444091797

Token 163: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.688212614681106e-05
    2. '+c' → logprob: -11.625017166137695
    3. ' +' → logprob: -12.375017166137695
    4. '2' → logprob: -12.750017166137695
    5. '+k' → logprob: -14.750017166137695
    6. 'c' → logprob: -15.125017166137695
    7. 'k' → logprob: -18.375017166137695
    8. ')+' → logprob: -18.375017166137695
    9. '   ' → logprob: -18.625017166137695
    10. '+C' → logprob: -18.750017166137695

Token 164: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.511406809295295e-06
    2. '1' → logprob: -12.375006675720215
    3. '
' → logprob: -13.875006675720215
    4. ' ' → logprob: -14.250006675720215
    5. '

' → logprob: -15.250006675720215
    6. '   ' → logprob: -15.875006675720215
    7. '  ' → logprob: -16.6875057220459
    8. '
' → logprob: -17.5000057220459
    9. 'c' → logprob: -17.8750057220459
    10. '+' → logprob: -18.1250057220459

Token 165: ',(' (ID: 27243)
  Prédit: ',l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',l' → logprob: -0.0014902232214808464
    2. ',' → logprob: -6.626490116119385
    3. ' ,' → logprob: -9.001490592956543
    4. ',(' → logprob: -10.751490592956543
    5. '   ' → logprob: -12.001490592956543
    6. 'l' → logprob: -12.251490592956543
    7. ',r' → logprob: -12.751490592956543
    8. ',ll' → logprob: -13.626490592956543
    9. '	l' → logprob: -14.251490592956543
    10. ')' → logprob: -14.376490592956543

Token 166: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.003190666902810335
    2. '(l' → logprob: -5.753190517425537
    3. 'r' → logprob: -11.503190994262695
    4. '(r' → logprob: -13.253190994262695
    5. ' l' → logprob: -14.753190994262695
    6. ' (' → logprob: -14.753190994262695
    7. '	l' → logprob: -15.878190994262695
    8. '+l' → logprob: -16.128190994262695
    9. '   ' → logprob: -16.878190994262695
    10. '```' → logprob: -18.503190994262695

Token 167: '+r' (ID: 133712)
  Prédit: '+r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+r' → logprob: -0.00014025058771949261
    2. '+' → logprob: -9.625140190124512
    3. 'r' → logprob: -9.875140190124512
    4. ' +' → logprob: -10.750140190124512
    5. '
' → logprob: -14.250140190124512
    6. '+(' → logprob: -15.375140190124512
    7. '+
' → logprob: -15.500140190124512
    8. '[r' → logprob: -16.250141143798828
    9. '(r' → logprob: -16.625141143798828
    10. '   ' → logprob: -16.750141143798828

Token 168: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -5.061676347395405e-05
    2. ')' → logprob: -10.00005054473877
    3. '//' → logprob: -12.87505054473877
    4. ' )' → logprob: -13.25005054473877
    5. ')>>' → logprob: -14.50005054473877
    6. ')/' → logprob: -15.50005054473877
    7. ')#' → logprob: -16.875051498413086
    8. '   ' → logprob: -17.625051498413086
    9. '>//' → logprob: -17.750051498413086
    10. '}//' → logprob: -17.750051498413086

Token 169: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.250001907348633
    4. '  ' → logprob: -19.625001907348633
    5. 'def' → logprob: -19.812501907348633
    6. '```' → logprob: -20.125001907348633
    7. 'int' → logprob: -20.312501907348633
    8. '       ' → logprob: -20.312501907348633
    9. '２' → logprob: -20.375001907348633
    10. '           ' → logprob: -20.500001907348633

Token 170: ',r' (ID: 33654)
  Prédit: ',r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.006045639514923096
    2. 'r' → logprob: -5.506045818328857
    3. ',' → logprob: -6.381045818328857
    4. '   ' → logprob: -8.8810453414917
    5. ' ,' → logprob: -9.6310453414917
    6. ')' → logprob: -9.8810453414917
    7. ' r' → logprob: -12.2560453414917
    8. '	r' → logprob: -12.5060453414917
    9. ',c' → logprob: -12.6310453414917
    10. ')
' → logprob: -13.0060453414917

Token 171: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0490105040371418
    2. ')' → logprob: -3.0490105152130127
    3. '   ' → logprob: -8.424010276794434
    4. '
' → logprob: -9.174010276794434
    5. ')
' → logprob: -9.674010276794434
    6. ')return' → logprob: -10.924010276794434
    7. 'return' → logprob: -11.924010276794434
    8. '       ' → logprob: -12.799010276794434
    9. ' )
' → logprob: -12.799010276794434
    10. ')c' → logprob: -13.174010276794434

Token 172: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23688925802707672
    2. ' return' → logprob: -1.6118892431259155
    3. '   ' → logprob: -4.611889362335205
    4. 'c' → logprob: -7.361889362335205
    5. '	return' → logprob: -7.861889362335205
    6. ' c' → logprob: -8.736888885498047
    7. '
' → logprob: -9.111888885498047
    8. ' ' → logprob: -9.611888885498047
    9. '       ' → logprob: -9.861888885498047
    10. ':return' → logprob: -10.611888885498047

Token 173: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0015093892579898238
    2. ' return' → logprob: -6.501509189605713
    3. '
' → logprob: -12.501509666442871
    4. 'c' → logprob: -13.251509666442871
    5. '   ' → logprob: -14.251509666442871
    6. '       ' → logprob: -14.626509666442871
    7. '	return' → logprob: -15.751509666442871
    8. ':return' → logprob: -16.251508712768555
    9. ' ' → logprob: -16.626508712768555
    10. '```' → logprob: -16.876508712768555

Token 174: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007118358626030385
    2. ' c' → logprob: -7.250711917877197
    3. '(c' → logprob: -13.250711441040039
    4. '   ' → logprob: -17.12571144104004
    5. ' ' → logprob: -17.62571144104004
    6. '(' → logprob: -17.87571144104004
    7. ' (' → logprob: -18.62571144104004
    8. '	c' → logprob: -19.12571144104004
    9. ' ' → logprob: -19.25071144104004
    10. '  ' → logprob: -19.75071144104004

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -15.375
    3. '１' → logprob: -18.3125
    4. ' ' → logprob: -18.5625
    5. 'l' → logprob: -19.3125
    6. 'c' → logprob: -19.4375
    7. '```' → logprob: -19.4375
    8. '۱' → logprob: -19.6875
    9. 'ode' → logprob: -20.125
    10. '१' → logprob: -20.25

Token 176: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.00033558503491804004
    2. ' |' → logprob: -8.000335693359375
    3. '|get' → logprob: -16.750335693359375
    4. '|string' → logprob: -17.000335693359375
    5. 'c' → logprob: -17.125335693359375
    6. '│' → logprob: -17.375335693359375
    7. '|
' → logprob: -17.875335693359375
    8. '|max' → logprob: -17.875335693359375
    9. ' ' → logprob: -17.875335693359375
    10. ' c' → logprob: -19.000335693359375

Token 177: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005929154809564352
    2. ' c' → logprob: -5.130928993225098
    3. '   ' → logprob: -15.505928993225098
    4. ' ' → logprob: -16.005929946899414
    5. '	c' → logprob: -16.380929946899414
    6. '
' → logprob: -17.005929946899414
    7. '  ' → logprob: -17.380929946899414
    8. '```' → logprob: -17.630929946899414
    9. ')c' → logprob: -18.005929946899414
    10. '       ' → logprob: -18.255929946899414

Token 178: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.615255839889869e-05
    2. 'c' → logprob: -9.250096321105957
    3. ' ' → logprob: -17.62509536743164
    4. 's' → logprob: -18.25009536743164
    5. '２' → logprob: -18.25009536743164
    6. '۲' → logprob: -18.25009536743164
    7. ' c' → logprob: -18.50009536743164
    8. '```' → logprob: -19.00009536743164
    9. '212' → logprob: -19.62509536743164
    10. '22' → logprob: -19.75009536743164

Token 179: '

' (ID: 279)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2600986659526825
    2. '<|end|>' → logprob: -1.8850986957550049
    3. 'N' → logprob: -3.135098695755005
    4. '[' → logprob: -4.385098457336426
    5. 'def' → logprob: -4.885098457336426
    6. '#' → logprob: -5.260098457336426
    7. '
' → logprob: -6.385098457336426
    8. '[N' → logprob: -6.885098457336426
    9. 'SEG' → logprob: -6.885098457336426
    10. '```' → logprob: -7.385098457336426

Token 180: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7218020558357239
    2. 'd' → logprob: -0.7218020558357239
    3. 'def' → logprob: -3.846801996231079
    4. '#' → logprob: -5.471802234649658
    5. 'if' → logprob: -7.721802234649658
    6. ',' → logprob: -7.846802234649658
    7. 's' → logprob: -8.0968017578125
    8. '
' → logprob: -8.0968017578125
    9. 'SEG' → logprob: -8.0968017578125
    10. 'n' → logprob: -8.9718017578125

Token 181: '=int' (ID: 37431)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2751631438732147
    2. '=' → logprob: -2.525163173675537
    3. '=int' → logprob: -2.650163173675537
    4. ' =' → logprob: -3.150163173675537
    5. ',d' → logprob: -4.025163173675537
    6. ',k' → logprob: -4.525163173675537
    7. '=input' → logprob: -5.400163173675537
    8. ',Q' → logprob: -5.900163173675537
    9. ',int' → logprob: -6.150163173675537
    10. ',N' → logprob: -6.400163173675537

Token 182: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0026603161823004484
    2. '(' → logprob: -6.502660274505615
    3. '()' → logprob: -6.877660274505615
    4. 'input' → logprob: -9.002660751342773
    5. '=input' → logprob: -13.377660751342773
    6. ' ()' → logprob: -14.502660751342773
    7. ' input' → logprob: -14.502660751342773
    8. '(
' → logprob: -14.752660751342773
    9. ' (' → logprob: -15.252660751342773
    10. '('' → logprob: -16.002660751342773

Token 183: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.006818497087806463
    2. '()' → logprob: -5.0068182945251465
    3. '())
' → logprob: -9.631818771362305
    4. ')' → logprob: -10.631818771362305
    5. '(' → logprob: -12.381818771362305
    6. '().' → logprob: -12.506818771362305
    7. '()
' → logprob: -12.631818771362305
    8. '())

' → logprob: -14.131818771362305
    9. ' ())' → logprob: -14.631818771362305
    10. '();)' → logprob: -15.506818771362305

Token 184: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.009662708267569542
    2. 's' → logprob: -4.884662628173828
    3. 'd' → logprob: -6.634662628173828
    4. 'A' → logprob: -8.259662628173828
    5. 'SEG' → logprob: -8.509662628173828
    6. 'x' → logprob: -9.009662628173828
    7. 'Q' → logprob: -10.384662628173828
    8. 'data' → logprob: -10.509662628173828
    9. 'SEQ' → logprob: -10.884662628173828
    10. 'a' → logprob: -11.259662628173828

Token 185: '=input' (ID: 87911)
  Prédit: '=input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=input' → logprob: -0.3888261914253235
    2. '=' → logprob: -1.3888261318206787
    3. ' =' → logprob: -2.6388261318206787
    4. '=list' → logprob: -6.638826370239258
    5. '=int' → logprob: -11.013826370239258
    6. ' ' → logprob: -12.763826370239258
    7. '=data' → logprob: -14.013826370239258
    8. '=line' → logprob: -14.138826370239258
    9. '=open' → logprob: -14.388826370239258
    10. '=sys' → logprob: -14.513826370239258

Token 186: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5928495486150496e-05
    2. ' ()' → logprob: -11.875016212463379
    3. '().' → logprob: -12.750016212463379
    4. '()
' → logprob: -13.250016212463379
    5. '())' → logprob: -13.750016212463379
    6. '(' → logprob: -14.125016212463379
    7. '()>' → logprob: -14.250016212463379
    8. '()]' → logprob: -14.500016212463379
    9. '()`' → logprob: -15.000016212463379
    10. '()

' → logprob: -15.125016212463379

Token 187: 'Q' (ID: 48)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.16046945750713348
    2. 'd' → logprob: -1.91046941280365
    3. 'global' → logprob: -9.160469055175781
    4. 'seg' → logprob: -10.035469055175781
    5. 'print' → logprob: -11.160469055175781
    6. ' SEG' → logprob: -11.285469055175781
    7. 'D' → logprob: -11.285469055175781
    8. 'for' → logprob: -11.910469055175781
    9. 'SE' → logprob: -12.035469055175781
    10. 'segment' → logprob: -12.160469055175781

Token 188: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014612135477364063
    2. '=int' → logprob: -4.514612197875977
    3. ' =' → logprob: -5.639612197875977
    4. '=input' → logprob: -12.764612197875977
    5. '=
' → logprob: -15.139612197875977
    6. '=

' → logprob: -15.389612197875977
    7. '＝' → logprob: -15.889612197875977
    8. ',' → logprob: -17.264612197875977
    9. '=i' → logprob: -17.514612197875977
    10. ' ' → logprob: -17.639612197875977

Token 189: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.009880512952804565
    2. '()' → logprob: -5.259880542755127
    3. '(' → logprob: -5.384880542755127
    4. 'input' → logprob: -10.259880065917969
    5. '=input' → logprob: -11.384880065917969
    6. '(
' → logprob: -13.884880065917969
    7. ' (' → logprob: -14.384880065917969
    8. ' input' → logprob: -15.009880065917969
    9. '()>' → logprob: -15.009880065917969
    10. ' ()' → logprob: -15.259880065917969

Token 190: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05947566404938698
    2. '()' → logprob: -3.0594756603240967
    3. '())
' → logprob: -4.559475898742676
    4. ')' → logprob: -8.434475898742676
    5. '()
' → logprob: -9.184475898742676
    6. ' ())' → logprob: -10.684475898742676
    7. '())
' → logprob: -11.809475898742676
    8. '(' → logprob: -12.434475898742676
    9. '();)' → logprob: -13.059475898742676
    10. '())

' → logprob: -13.684475898742676

Token 191: 'SEG' (ID: 128217)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31403371691703796
    2. 'SEG' → logprob: -1.3140337467193604
    3. 'seg' → logprob: -8.189033508300781
    4. 'def' → logprob: -9.064033508300781
    5. 'SE' → logprob: -9.564033508300781
    6. 'segment' → logprob: -9.939033508300781
    7. 'global' → logprob: -10.189033508300781
    8. ' SEG' → logprob: -10.564033508300781
    9. 'segments' → logprob: -10.939033508300781
    10. 'D' → logprob: -11.064033508300781

Token 192: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39087003469467163
    2. ',i' → logprob: -1.1408700942993164
    3. ',S' → logprob: -6.640870094299316
    4. ',N' → logprob: -6.765870094299316
    5. ',d' → logprob: -7.140870094299316
    6. ',I' → logprob: -7.890870094299316
    7. ',n' → logprob: -9.140870094299316
    8. ' ,' → logprob: -9.640870094299316
    9. ',k' → logprob: -10.640870094299316
    10. ',len' → logprob: -10.890870094299316

Token 193: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4478330910205841
    2. '=' → logprob: -1.3228330612182617
    3. ',d' → logprob: -2.5728330612182617
    4. ',N' → logprob: -5.072833061218262
    5. ',S' → logprob: -5.697833061218262
    6. ',num' → logprob: -5.947833061218262
    7. ',n' → logprob: -6.322833061218262
    8. ',i' → logprob: -6.322833061218262
    9. ' =' → logprob: -7.697833061218262
    10. ' ,' → logprob: -8.197833061218262

Token 194: 'initialize' (ID: 44151)
  Prédit: 'initialize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.00029637437546625733
    2. ' initialize' → logprob: -8.125296592712402
    3. 'initial' → logprob: -16.500295639038086
    4. '	initialize' → logprob: -16.625295639038086
    5. 'itialize' → logprob: -17.375295639038086
    6. ' ' → logprob: -17.500295639038086
    7. 'in' → logprob: -17.750295639038086
    8. '.initialize' → logprob: -18.250295639038086
    9. '_initialize' → logprob: -18.250295639038086
    10. 'int' → logprob: -19.125295639038086

Token 195: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.9146995327901095e-05
    2. '(len' → logprob: -11.750019073486328
    3. '(' → logprob: -12.000019073486328
    4. 'N' → logprob: -12.250019073486328
    5. ' (' → logprob: -16.500019073486328
    6. '(int' → logprob: -16.500019073486328
    7. '(n' → logprob: -16.750019073486328
    8. '((' → logprob: -17.000019073486328
    9. '(
' → logprob: -17.500019073486328
    10. '(S' → logprob: -17.875019073486328

Token 196: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.225939872208983e-05
    2. ')
' → logprob: -10.375032424926758
    3. ' )' → logprob: -14.250032424926758
    4. ')

' → logprob: -15.875032424926758
    5. ')d' → logprob: -17.250032424926758
    6. '*' → logprob: -17.375032424926758
    7. '(N' → logprob: -17.375032424926758
    8. '())' → logprob: -17.625032424926758
    9. ')n' → logprob: -17.875032424926758
    10. '*)' → logprob: -18.125032424926758

Token 197: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.881560041918419e-05
    2. 'def' → logprob: -10.375039100646973
    3. ' for' → logprob: -12.875039100646973
    4. 'd' → logprob: -13.125039100646973
    5. 'from' → logprob: -13.750039100646973
    6. 'import' → logprob: -14.500039100646973
    7. 'print' → logprob: -14.750039100646973
    8. 'SEG' → logprob: -15.250039100646973
    9. 'seg' → logprob: -15.500039100646973
    10. 'S' → logprob: -15.875039100646973

Token 198: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04469049349427223
    2. 'i' → logprob: -3.1696906089782715
    3. ' range' → logprob: -7.4196906089782715
    4. ' _' → logprob: -7.7946906089782715
    5. '_' → logprob: -8.169690132141113
    6. 'range' → logprob: -8.919690132141113
    7. ' in' → logprob: -9.169690132141113
    8. ' idx' → logprob: -9.169690132141113
    9. ' index' → logprob: -11.169690132141113
    10. 'idx' → logprob: -11.169690132141113

Token 199: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017528491094708443
    2. ' range' → logprob: -4.142528533935547
    3. ',' → logprob: -6.767528533935547
    4. 'in' → logprob: -8.392528533935547
    5. 'range' → logprob: -9.392528533935547
    6. ' ' → logprob: -10.517528533935547
    7. ' ,' → logprob: -12.767528533935547
    8. '(range' → logprob: -13.392528533935547
    9. '  ' → logprob: -14.892528533935547
    10. ')' → logprob: -15.392528533935547

Token 200: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. ' ' → logprob: -19.000431060791016
    4. '(range' → logprob: -19.750431060791016
    5. '   ' → logprob: -19.750431060791016
    6. '  ' → logprob: -20.375431060791016
    7. '	range' → logprob: -20.375431060791016
    8. 'r' → logprob: -21.750431060791016
    9. 'rang' → logprob: -21.875431060791016
    10. '[' → logprob: -22.500431060791016

Token 201: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.002491706982254982
    2. '(len' → logprob: -6.002491474151611
    3. '(' → logprob: -11.37749195098877
    4. ' (' → logprob: -12.37749195098877
    5. '(n' → logprob: -15.25249195098877
    6. '(
' → logprob: -17.002490997314453
    7. ' N' → logprob: -18.252490997314453
    8. '(d' → logprob: -18.377490997314453
    9. 'N' → logprob: -19.002490997314453
    10. '(Q' → logprob: -19.377490997314453

Token 202: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10025098919868469
    2. '):' → logprob: -2.3502509593963623
    3. ' ):
' → logprob: -10.725251197814941
    4. ')' → logprob: -11.475251197814941
    5. ' ):' → logprob: -12.225251197814941
    6. '):
' → logprob: -12.600251197814941
    7. ':
' → logprob: -13.475251197814941
    8. ':' → logprob: -13.725251197814941
    9. '):

' → logprob: -15.350251197814941
    10. '():
' → logprob: -15.350251197814941

Token 203: '   ' (ID: 271)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.8829938769340515
    2. '   ' → logprob: -1.0079939365386963
    3. 'update' → logprob: -1.5079939365386963
    4. '	update' → logprob: -9.132993698120117
    5. ' ' → logprob: -11.382993698120117
    6. '.update' → logprob: -11.507993698120117
    7. '  ' → logprob: -11.882993698120117
    8. ' SEG' → logprob: -12.507993698120117
    9. '(update' → logprob: -12.757993698120117
    10. '    
' → logprob: -13.132993698120117

Token 204: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.004130403511226177
    2. ' update' → logprob: -5.5041303634643555
    3. '   ' → logprob: -9.879130363464355
    4. ' ' → logprob: -14.879130363464355
    5. '	update' → logprob: -15.129130363464355
    6. '  ' → logprob: -16.879131317138672
    7. ' SEG' → logprob: -17.254131317138672
    8. 'SEG' → logprob: -17.379131317138672
    9. '(update' → logprob: -18.379131317138672
    10. '.update' → logprob: -18.504131317138672

Token 205: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.75000286102295
    3. ' (' → logprob: -18.000003814697266
    4. '(
' → logprob: -19.375003814697266
    5. 'i' → logprob: -20.750003814697266
    6. '(I' → logprob: -21.500003814697266
    7. '(ii' → logprob: -22.750003814697266
    8. '((' → logprob: -23.125003814697266
    9. ',i' → logprob: -23.375003814697266
    10. '(in' → logprob: -23.500003814697266

Token 206: ',S' (ID: 42097)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6962156295776367
    2. ' S' → logprob: -0.6962156295776367
    3. ',S' → logprob: -6.321215629577637
    4. ',' → logprob: -6.696215629577637
    5. ' ,' → logprob: -11.071215629577637
    6. ' ' → logprob: -11.696215629577637
    7. ')' → logprob: -12.571215629577637
    8. '(S' → logprob: -13.821215629577637
    9. '>S' → logprob: -14.821215629577637
    10. 's' → logprob: -14.821215629577637

Token 207: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002627662615850568
    2. '[' → logprob: -8.250263214111328
    3. '[
' → logprob: -14.125263214111328
    4. 'i' → logprob: -15.250263214111328
    5. '[I' → logprob: -15.625263214111328
    6. ' [' → logprob: -15.750263214111328
    7. '```' → logprob: -16.250263214111328
    8. '[int' → logprob: -17.125263214111328
    9. '\[' → logprob: -17.750263214111328
    10. '[u' → logprob: -17.875263214111328

Token 208: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03992660343647003
    2. '])' → logprob: -3.289926528930664
    3. ' )' → logprob: -6.539926528930664
    4. '))' → logprob: -8.664926528930664
    5. ')])' → logprob: -8.914926528930664
    6. '[' → logprob: -9.914926528930664
    7. ' ])' → logprob: -10.289926528930664
    8. ')]' → logprob: -11.039926528930664
    9. '[i' → logprob: -11.539926528930664
    10. ')
' → logprob: -11.914926528930664

Token 209: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.702754474943504e-05
    2. '
' → logprob: -10.37503719329834
    3. ' for' → logprob: -12.12503719329834
    4. 'print' → logprob: -16.250036239624023
    5. '    
' → logprob: -16.500036239624023
    6. 'def' → logprob: -16.625036239624023
    7. '	for' → logprob: -17.375036239624023
    8. 'output' → logprob: -17.625036239624023
    9. 'result' → logprob: -18.000036239624023
    10. 'results' → logprob: -18.750036239624023

Token 210: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3132631778717041
    2. '_' → logprob: -1.313263177871704
    3. '__' → logprob: -14.813262939453125
    4. ' ' → logprob: -15.063262939453125
    5. '_i' → logprob: -15.188262939453125
    6. '_=' → logprob: -15.563262939453125
    7. '_q' → logprob: -16.063262939453125
    8. '_j' → logprob: -16.188262939453125
    9. ' ' → logprob: -16.188262939453125
    10. '＿' → logprob: -17.938262939453125

Token 211: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.17984789609909058
    2. ' in' → logprob: -1.8048479557037354
    3. '_' → logprob: -9.804847717285156
    4. ' ' → logprob: -11.679847717285156
    5. 'range' → logprob: -11.929847717285156
    6. '   ' → logprob: -12.054847717285156
    7. ',' → logprob: -12.679847717285156
    8. '_in' → logprob: -13.054847717285156
    9. '	in' → logprob: -13.054847717285156
    10. '```' → logprob: -13.179847717285156

Token 212: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038042064756155014
    2. ' range' → logprob: -3.2880420684814453
    3. 'Q' → logprob: -15.163042068481445
    4. ' ' → logprob: -15.538042068481445
    5. 'ran' → logprob: -16.663042068481445
    6. 'r' → logprob: -17.038042068481445
    7. '(range' → logprob: -17.288042068481445
    8. 'rang' → logprob: -17.538042068481445
    9. 'in' → logprob: -17.663042068481445
    10. '  ' → logprob: -18.288042068481445

Token 213: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.07907407730817795
    2. 'Q' → logprob: -2.8290741443634033
    3. ' range' → logprob: -4.704073905944824
    4. 'range' → logprob: -5.579073905944824
    5. ' Q' → logprob: -5.704073905944824
    6. ' (' → logprob: -7.579073905944824
    7. '(' → logprob: -8.579073905944824
    8. '(range' → logprob: -10.079073905944824
    9. ' in' → logprob: -10.954073905944824
    10. 'in' → logprob: -11.329073905944824

Token 214: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009224005974829197
    2. '):
' → logprob: -4.884223937988281
    3. ' ):' → logprob: -7.134223937988281
    4. ':' → logprob: -7.759223937988281
    5. '():' → logprob: -8.384223937988281
    6. ',' → logprob: -9.134223937988281
    7. '):
' → logprob: -10.884223937988281
    8. '():
' → logprob: -11.009223937988281
    9. ')' → logprob: -11.884223937988281
    10. '(' → logprob: -12.634223937988281

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04618997499346733
    2. ' line' → logprob: -3.796190023422241
    3. ' s' → logprob: -4.671189785003662
    4. ' parts' → logprob: -5.296189785003662
    5. 's' → logprob: -5.546189785003662
    6. ' inputs' → logprob: -7.046189785003662
    7. ' t' → logprob: -7.171189785003662
    8. ' query' → logprob: -7.796189785003662
    9. 't' → logprob: -7.921189785003662
    10. ' op' → logprob: -8.17119026184082

Token 216: ' com' (ID: 452)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8045390248298645
    2. 'c' → logprob: -1.6795389652252197
    3. 'q' → logprob: -2.1795389652252197
    4. 'cmd' → logprob: -2.4295389652252197
    5. 'query' → logprob: -2.5545389652252197
    6. 'line' → logprob: -3.5545389652252197
    7. 'l' → logprob: -3.8045389652252197
    8. 'tmp' → logprob: -4.804539203643799
    9. 'com' (adapté à ' com') → logprob: -5.179539203643799
    10. 's' → logprob: -5.429539203643799

Token 217: ',s' (ID: 20379)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6823789477348328
    2. '=input' → logprob: -2.0573790073394775
    3. ',p' → logprob: -2.3073790073394775
    4. ',' → logprob: -2.4323790073394775
    5. ',val' → logprob: -3.0573790073394775
    6. ',a' → logprob: -3.1823790073394775
    7. '=' → logprob: -3.8073790073394775
    8. ' =' → logprob: -4.182378768920898
    9. ',s' → logprob: -4.682378768920898
    10. ',line' → logprob: -4.807378768920898

Token 218: ',t' (ID: 26927)
  Prédit: '=input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=input' → logprob: -0.17177130281925201
    2. '=' → logprob: -1.9217712879180908
    3. ' =' → logprob: -4.67177152633667
    4. 'input' → logprob: -7.04677152633667
    5. '=list' → logprob: -7.04677152633667
    6. '=line' → logprob: -9.296771049499512
    7. 'p' → logprob: -9.546771049499512
    8. 'plit' → logprob: -10.296771049499512
    9. ',input' → logprob: -10.671771049499512
    10. '_=' → logprob: -10.796771049499512

Token 219: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5781551003456116
    2. '=input' → logprob: -0.8281551003456116
    3. ' =' → logprob: -6.453155040740967
    4. '=list' → logprob: -7.453155040740967
    5. 'input' → logprob: -10.828155517578125
    6. '=line' → logprob: -10.953155517578125
    7. '=com' → logprob: -11.953155517578125
    8. '=s' → logprob: -12.828155517578125
    9. '_=' → logprob: -13.328155517578125
    10. '=_' → logprob: -13.578155517578125

Token 220: 'map' (ID: 3726)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0012497581774368882
    2. 'map' → logprob: -7.12624979019165
    3. ' input' → logprob: -7.75124979019165
    4. 'list' → logprob: -11.876249313354492
    5. '(input' → logprob: -12.251249313354492
    6. '=input' → logprob: -13.126249313354492
    7. '[input' → logprob: -14.626249313354492
    8. ' map' → logprob: -14.626249313354492
    9. ',input' → logprob: -16.001249313354492
    10. ' ' → logprob: -16.501249313354492

Token 221: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.4457121789455414
    2. 'str' → logprob: -1.1957122087478638
    3. '(int' → logprob: -3.195712089538574
    4. 'input' → logprob: -4.445712089538574
    5. 'int' → logprob: -5.945712089538574
    6. '(input' → logprob: -6.320712089538574
    7. ' str' → logprob: -9.945712089538574
    8. '=str' → logprob: -11.820712089538574
    9. ' input' → logprob: -13.320712089538574
    10. '[str' → logprob: -13.695712089538574

Token 222: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.002397889969870448
    2. ',' → logprob: -6.7523980140686035
    3. '().' → logprob: -7.3773980140686035
    4. 'input' → logprob: -7.7523980140686035
    5. '.split' → logprob: -9.502397537231445
    6. ' input' → logprob: -10.252397537231445
    7. '=input' → logprob: -11.002397537231445
    8. '(input' → logprob: -11.127397537231445
    9. ',int' → logprob: -11.377397537231445
    10. ',str' → logprob: -12.127397537231445

Token 223: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2664456789934775e-06
    2. ' ().' → logprob: -14.250000953674316
    3. '()' → logprob: -15.250000953674316
    4. '.split' → logprob: -15.500000953674316
    5. '.' → logprob: -16.000001907348633
    6. 'split' → logprob: -17.625001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '(' → logprob: -17.750001907348633
    9. '('').' → logprob: -18.375001907348633
    10. ' .' → logprob: -18.375001907348633

Token 224: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00026264708139933646
    2. 'strip' → logprob: -8.250262260437012
    3. 'rstrip' → logprob: -13.750262260437012
    4. ' split' → logprob: -15.125262260437012
    5. '(split' → logprob: -16.875263214111328
    6. 'spl' → logprob: -18.500263214111328
    7. 's' → logprob: -19.375263214111328
    8. '.split' → logprob: -19.500263214111328
    9. 'plit' → logprob: -21.250263214111328
    10. ' ' → logprob: -21.375263214111328

Token 225: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05167881399393082
    2. '())' → logprob: -3.0516788959503174
    3. '()' → logprob: -5.801678657531738
    4. ')
' → logprob: -10.426678657531738
    5. '(' → logprob: -11.051678657531738
    6. ' )' → logprob: -11.551678657531738
    7. '())
' → logprob: -12.301678657531738
    8. ')`' → logprob: -13.801678657531738
    9. '()
' → logprob: -14.301678657531738
    10. ' ' → logprob: -14.926678657531738

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00793073046952486
    2. '<|end|>' → logprob: -5.132930755615234
    3. ' if' → logprob: -6.632930755615234
    4. 'if' → logprob: -7.882930755615234
    5. '
' → logprob: -9.257930755615234
    6. '    
' → logprob: -9.382930755615234
    7. '	if' → logprob: -10.382930755615234
    8. '<|end|>' → logprob: -10.757930755615234
    9. '\n' → logprob: -11.007930755615234
    10. ' ' → logprob: -11.007930755615234

Token 227: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18061690032482147
    2. ' if' → logprob: -1.930616855621338
    3. 'if' (adapté à ' if') → logprob: -3.930616855621338
    4. '<|end|>' → logprob: -8.305617332458496
    5. '    
' → logprob: -9.305617332458496
    6. ' ' → logprob: -9.680617332458496
    7. '	if' → logprob: -9.805617332458496
    8. ' 
' → logprob: -10.055617332458496
    9. '    ' → logprob: -10.930617332458496
    10. '\n' → logprob: -11.305617332458496

Token 228: ' com' (ID: 452)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.17975547909736633
    2. ' com' → logprob: -1.804755449295044
    3. ' ' → logprob: -12.554755210876465
    4. '   ' → logprob: -12.554755210876465
    5. '(com' → logprob: -13.429755210876465
    6. '  ' → logprob: -14.679755210876465
    7. '	com' → logprob: -14.679755210876465
    8. '<com' → logprob: -14.804755210876465
    9. 'int' → logprob: -15.179755210876465
    10. '=com' → logprob: -15.929755210876465

Token 229: '=='' (ID: 20651)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12366538494825363
    2. '=='' → logprob: -2.3736653327941895
    3. '=="' → logprob: -3.8736653327941895
    4. ' ==' → logprob: -6.7486653327941895
    5. '=' → logprob: -6.9986653327941895
    6. '[' → logprob: -9.373665809631348
    7. ''' → logprob: -9.623665809631348
    8. '"' → logprob: -10.373665809631348
    9. '==
' → logprob: -10.623665809631348
    10. '='' → logprob: -11.123665809631348

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022074952721595764
    2. 's' → logprob: -3.8970749378204346
    3. 'Q' → logprob: -7.522075176239014
    4. 'q' → logprob: -8.647074699401855
    5. '?' → logprob: -8.897074699401855
    6. '0' → logprob: -8.897074699401855
    7. '2' → logprob: -8.897074699401855
    8. 'update' → logprob: -9.022074699401855
    9. 'c' → logprob: -9.397074699401855
    10. ''' → logprob: -9.647074699401855

Token 231: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018224159255623817
    2. ':
' → logprob: -4.018224239349365
    3. '):' → logprob: -10.018223762512207
    4. '):
' → logprob: -11.143223762512207
    5. ' :' → logprob: -11.643223762512207
    6. '':' → logprob: -12.893223762512207
    7. ' :
' → logprob: -13.643223762512207
    8. '():
' → logprob: -13.643223762512207
    9. ':
' → logprob: -15.018223762512207
    10. '   ' → logprob: -15.518223762512207

Token 232: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16826872527599335
    2. ' update' → logprob: -1.9182686805725098
    3. 'update' → logprob: -5.66826868057251
    4. ' ' → logprob: -5.79326868057251
    5. '       ' → logprob: -7.29326868057251
    6. '	update' → logprob: -8.168269157409668
    7. '    ' → logprob: -9.543269157409668
    8. '  ' → logprob: -9.668269157409668
    9. '.update' → logprob: -9.793269157409668
    10. ' s' → logprob: -10.043269157409668

Token 233: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.021060874685645103
    2. ' update' → logprob: -4.021060943603516
    3. '   ' → logprob: -6.771060943603516
    4. 'i' → logprob: -7.271060943603516
    5. 'x' → logprob: -7.896060943603516
    6. 's' → logprob: -8.396060943603516
    7. 'p' → logprob: -9.021060943603516
    8. 'idx' → logprob: -9.146060943603516
    9. 'index' → logprob: -9.271060943603516
    10. ' ' → logprob: -9.646060943603516

Token 234: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20141461491584778
    2. 'int' → logprob: -1.7014145851135254
    3. ' int' → logprob: -14.576415061950684
    4. '(' → logprob: -15.076415061950684
    5. '[int' → logprob: -15.326415061950684
    6. '	int' → logprob: -15.826415061950684
    7. '<int' → logprob: -16.951414108276367
    8. '(
' → logprob: -17.201414108276367
    9. '   ' → logprob: -17.201414108276367
    10. '=int' → logprob: -17.576414108276367

Token 235: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.4855663721391466e-05
    2. 's' → logprob: -11.625015258789062
    3. '(int' → logprob: -13.125015258789062
    4. '(' → logprob: -13.125015258789062
    5. '(t' → logprob: -13.625015258789062
    6. '((' → logprob: -15.125015258789062
    7. '(i' → logprob: -15.750015258789062
    8. ' (' → logprob: -16.000015258789062
    9. ')(' → logprob: -16.000015258789062
    10. '(
' → logprob: -18.500015258789062

Token 236: ')-' (ID: 14080)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004540130961686373
    2. ',' → logprob: -6.254539966583252
    3. ' -' → logprob: -6.629539966583252
    4. ',int' → logprob: -7.129539966583252
    5. ',s' → logprob: -8.87954044342041
    6. ')-' → logprob: -8.87954044342041
    7. '-,' → logprob: -10.37954044342041
    8. 'int' → logprob: -10.37954044342041
    9. ' ,' → logprob: -10.50454044342041
    10. ')' → logprob: -10.87954044342041

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3915141355246305e-05
    2. ' ' → logprob: -10.75002384185791
    3. 's' → logprob: -13.87502384185791
    4. ',' → logprob: -14.37502384185791
    5. 'int' → logprob: -14.75002384185791
    6. 't' → logprob: -15.87502384185791
    7. '   ' → logprob: -16.625024795532227
    8. '0' → logprob: -16.875024795532227
    9. 'ord' → logprob: -17.000024795532227
    10. '```' → logprob: -17.250024795532227

Token 238: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.0017464581178501248
    2. ',' → logprob: -6.376746654510498
    3. ',s' → logprob: -10.75174617767334
    4. 't' → logprob: -11.12674617767334
    5. ',str' → logprob: -12.37674617767334
    6. ' ,' → logprob: -13.00174617767334
    7. ',
' → logprob: -14.50174617767334
    8. ',int' → logprob: -15.62674617767334
    9. ',c' → logprob: -15.87674617767334
    10. '   ' → logprob: -16.251747131347656

Token 239: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014205586165189743
    2. ')
' → logprob: -4.264205455780029
    3. '   ' → logprob: -10.139205932617188
    4. '')' → logprob: -13.889205932617188
    5. ')
' → logprob: -14.264205932617188
    6. ' )' → logprob: -15.014205932617188
    7. ')

' → logprob: -15.389205932617188
    8. '       ' → logprob: -16.264205932617188
    9. '))' → logprob: -17.014205932617188
    10. '")' → logprob: -17.014205932617188

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008736420422792435
    2. 'else' → logprob: -4.758736610412598
    3. 'elif' → logprob: -9.508736610412598
    4. ' else' → logprob: -10.008736610412598
    5. '```' → logprob: -13.758736610412598
    6. '<|end|>' → logprob: -13.883736610412598
    7. ' elif' → logprob: -15.008736610412598
    8. '       ' → logprob: -16.50873565673828
    9. '	else' → logprob: -16.88373565673828
    10. 'continue' → logprob: -17.13373565673828

Token 241: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0032882285304367542
    2. '   ' → logprob: -6.378288269042969
    3. 'elif' → logprob: -6.503288269042969
    4. ' else' → logprob: -9.378288269042969
    5. '	else' → logprob: -14.253288269042969
    6. 'if' → logprob: -14.378288269042969
    7. ' elif' → logprob: -15.628288269042969
    8. '```' → logprob: -15.878288269042969
    9. '	elif' → logprob: -16.87828826904297
    10. ' ' → logprob: -17.12828826904297

Token 242: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07042251527309418
    2. ':
' → logprob: -2.695422410964966
    3. '       ' → logprob: -8.570422172546387
    4. '   ' → logprob: -9.445422172546387
    5. ' :' → logprob: -9.820422172546387
    6. ':int' → logprob: -10.070422172546387
    7. '<|end|>' → logprob: -10.320422172546387
    8. ' :
' → logprob: -10.695422172546387
    9. ':

' → logprob: -11.570422172546387
    10. 'int' → logprob: -11.695422172546387

Token 243: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2232272624969482
    2. 's' → logprob: -1.7232272624969482
    3. ' s' → logprob: -1.8482272624969482
    4. ' l' → logprob: -1.9732272624969482
    5. ' print' → logprob: -2.7232272624969482
    6. 'print' → logprob: -2.8482272624969482
    7. 'l' → logprob: -3.5982272624969482
    8. 'a' → logprob: -3.8482272624969482
    9. ' res' → logprob: -4.098227500915527
    10. ' a' → logprob: -4.223227500915527

Token 244: ' cnt' (ID: 27340)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5199813842773438
    2. 's' → logprob: -1.5199813842773438
    3. 'res' → logprob: -2.3949813842773438
    4. 'ans' → logprob: -3.1449813842773438
    5. 'l' → logprob: -3.8949813842773438
    6. 'a' → logprob: -4.519981384277344
    7. ' print' → logprob: -4.894981384277344
    8. ' s' → logprob: -5.519981384277344
    9. ' res' → logprob: -5.769981384277344
    10. 'x' → logprob: -6.519981384277344

Token 245: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11447251588106155
    2. '=find' → logprob: -2.2394726276397705
    3. ' =' → logprob: -6.989472389221191
    4. '=len' → logprob: -8.489472389221191
    5. '=(' → logprob: -9.114472389221191
    6. '=f' → logprob: -9.239472389221191
    7. '=int' → logprob: -9.239472389221191
    8. '=count' → logprob: -9.614472389221191
    9. '=set' → logprob: -10.239472389221191
    10. '=s' → logprob: -10.364472389221191

Token 246: '0' (ID: 15)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.0363166444003582
    2. '0' → logprob: -3.9113166332244873
    3. 'find' → logprob: -4.161316871643066
    4. ' bin' → logprob: -10.661316871643066
    5. '(bin' → logprob: -10.661316871643066
    6. '(find' → logprob: -12.536316871643066
    7. 'bit' → logprob: -13.161316871643066
    8. 'len' → logprob: -13.286316871643066
    9. 'pop' → logprob: -13.286316871643066
    10. 'bins' → logprob: -13.536316871643066

Token 247: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2360204458236694
    2. 'res' → logprob: -1.6110204458236694
    3. 'mask' → logprob: -1.6110204458236694
    4. 'for' → logprob: -2.361020565032959
    5. 'bit' → logprob: -2.486020565032959
    6. 'bits' → logprob: -3.986020565032959
    7. 'result' → logprob: -4.361020565032959
    8. 'seg' → logprob: -4.736020565032959
    9. '   ' → logprob: -4.861020565032959
    10. 'char' → logprob: -4.986020565032959

Token 248: '       ' (ID: 309)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0213818550109863
    2. 'for' → logprob: -1.8963818550109863
    3. '       ' → logprob: -2.1463818550109863
    4. 'mask' → logprob: -2.1463818550109863
    5. 'bit' → logprob: -2.6463818550109863
    6. 'result' → logprob: -3.5213818550109863
    7. 'l' → logprob: -3.6463818550109863
    8. 'seg' → logprob: -3.8963818550109863
    9. 'bits' → logprob: -4.021381855010986
    10. 'find' → logprob: -4.271381855010986

Token 249: ' bit' (ID: 3546)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.31476902961730957
    2. 'x' → logprob: -2.9397690296173096
    3. 'val' → logprob: -2.9397690296173096
    4. 'bit' (adapté à ' bit') → logprob: -2.9397690296173096
    5. 'v' → logprob: -3.9397690296173096
    6. 'c' → logprob: -4.3147687911987305
    7. 'mask' → logprob: -4.4397687911987305
    8. 'ans' → logprob: -4.6897687911987305
    9. 'seg' → logprob: -4.8147687911987305
    10. 'r' → logprob: -4.8147687911987305

Token 250: '=find' (ID: 88179)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3281695544719696
    2. '=find' → logprob: -1.328169584274292
    3. 'mask' → logprob: -5.078169345855713
    4. ' =' → logprob: -6.078169345855713
    5. 's' → logprob: -6.203169345855713
    6. '=set' → logprob: -6.703169345855713
    7. '=s' → logprob: -7.078169345855713
    8. '=(' → logprob: -7.578169345855713
    9. '=S' → logprob: -7.703169345855713
    10. '=f' → logprob: -8.078169822692871

Token 251: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.484132169745862e-05
    2. 'int' → logprob: -9.375094413757324
    3. '(' → logprob: -11.750094413757324
    4. '((' → logprob: -14.000094413757324
    5. '   ' → logprob: -14.875094413757324
    6. '<int' → logprob: -15.500094413757324
    7. ' (' → logprob: -15.500094413757324
    8. '(
' → logprob: -15.625094413757324
    9. '(i' → logprob: -15.875094413757324
    10. '(in' → logprob: -16.25009536743164

Token 252: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.6240566083070007e-06
    2. 's' → logprob: -13.500001907348633
    3. '(int' → logprob: -16.250001907348633
    4. '(str' → logprob: -17.375001907348633
    5. '(' → logprob: -17.500001907348633
    6. '(t' → logprob: -19.125001907348633
    7. '(
' → logprob: -19.375001907348633
    8. '   ' → logprob: -19.875001907348633
    9. ' ' → logprob: -20.125001907348633
    10. 'int' → logprob: -20.250001907348633

Token 253: ')-' (ID: 14080)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8090935945510864
    2. ')-' → logprob: -1.3090935945510864
    3. '-' → logprob: -1.5590935945510864
    4. '(' → logprob: -3.934093475341797
    5. '2' → logprob: -4.309093475341797
    6. '0' → logprob: -4.559093475341797
    7. '()-' → logprob: -4.684093475341797
    8. ')' → logprob: -4.684093475341797
    9. 'int' → logprob: -6.559093475341797
    10. ''-' → logprob: -6.559093475341797

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.375
    3. '2' → logprob: -16.25
    4. 'int' → logprob: -17.875
    5. '0' → logprob: -18.25
    6. '   ' → logprob: -18.75
    7. '```' → logprob: -18.75
    8. ',' → logprob: -21.125
    9. '
' → logprob: -21.25
    10. '  ' → logprob: -21.375

Token 255: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.004955035634338856
    2. ',' → logprob: -5.504954814910889
    3. 'int' → logprob: -7.129954814910889
    4. ' ,' → logprob: -9.504955291748047
    5. ' int' → logprob: -14.879955291748047
    6. '(int' → logprob: -15.629955291748047
    7. '<int' → logprob: -16.379955291748047
    8. '   ' → logprob: -16.504955291748047
    9. ':int' → logprob: -16.879955291748047
    10. ',
' → logprob: -17.004955291748047

Token 256: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0003364158037584275
    2. 't' → logprob: -8.000336647033691
    3. '	t' → logprob: -14.250336647033691
    4. '
' → logprob: -16.375335693359375
    5. '2' → logprob: -17.250335693359375
    6. '[t' → logprob: -17.625335693359375
    7. '1' → logprob: -18.000335693359375
    8. '0' → logprob: -18.125335693359375
    9. '```' → logprob: -18.125335693359375
    10. '3' → logprob: -18.250335693359375

Token 257: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7277370691299438
    2. '),' → logprob: -0.8527370691299438
    3. ')' → logprob: -2.6027369499206543
    4. ',int' → logprob: -4.977736949920654
    5. '))' → logprob: -5.602736949920654
    6. ' ,' → logprob: -6.227736949920654
    7. 'int' → logprob: -6.602736949920654
    8. ',N' → logprob: -7.227736949920654
    9. '0' → logprob: -8.102737426757812
    10. '   ' → logprob: -8.352737426757812

Token 258: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -17.125001907348633
    4. '۰' → logprob: -17.875001907348633
    5. '０' → logprob: -18.625001907348633
    6. '     ' → logprob: -19.125001907348633
    7. '  ' → logprob: -19.250001907348633
    8. '    ' → logprob: -20.125001907348633
    9. ',' → logprob: -20.312501907348633
    10. '```' → logprob: -20.375001907348633

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16035096347332
    2. '0' → logprob: -1.9103509187698364
    3. ' ,' → logprob: -9.785350799560547
    4. '   ' → logprob: -10.160350799560547
    5. ',d' → logprob: -11.410350799560547
    6. ' ' → logprob: -11.785350799560547
    7. 'd' → logprob: -12.160350799560547
    8. '  ' → logprob: -13.410350799560547
    9. '1' → logprob: -13.410350799560547
    10. '     ' → logprob: -13.785350799560547

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.25000286102295
    3. '   ' → logprob: -13.87500286102295
    4. 'd' → logprob: -16.125003814697266
    5. '  ' → logprob: -18.875003814697266
    6. '    ' → logprob: -19.250003814697266
    7. '     ' → logprob: -19.375003814697266
    8. '       ' → logprob: -19.500003814697266
    9. '           ' → logprob: -19.875003814697266
    10. '               ' → logprob: -20.375003814697266

Token 261: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.0004581942630466074
    2. 'd' → logprob: -8.000457763671875
    3. ',' → logprob: -9.500457763671875
    4. ',N' → logprob: -10.250457763671875
    5. '   ' → logprob: -11.875457763671875
    6. ' ,' → logprob: -13.250457763671875
    7. ',int' → logprob: -14.125457763671875
    8. '       ' → logprob: -14.250457763671875
    9. '           ' → logprob: -14.750457763671875
    10. ',len' → logprob: -14.875457763671875

Token 262: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04100697487592697
    2. ')
' → logprob: -3.7910070419311523
    3. ')[' → logprob: -4.291007041931152
    4. ',' → logprob: -6.041007041931152
    5. ').' → logprob: -6.666007041931152
    6. '//' → logprob: -9.916007041931152
    7. ')//' → logprob: -10.416007041931152
    8. ')\' → logprob: -10.666007041931152
    9. ' )' → logprob: -11.166007041931152
    10. ')**' → logprob: -11.166007041931152

Token 263: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5061227679252625
    2. '       ' → logprob: -1.5061228275299072
    3. 'while' → logprob: -2.1311228275299072
    4. '
' → logprob: -3.8811228275299072
    5. ')
' → logprob: -4.756122589111328
    6. 'print' → logprob: -5.006122589111328
    7. ')' → logprob: -5.131122589111328
    8. ' for' → logprob: -5.131122589111328
    9. 'cnt' → logprob: -5.256122589111328
    10. 'count' → logprob: -7.131122589111328

Token 264: ' while' (ID: 2049)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.4591916799545288
    2. 'for' → logprob: -1.7091916799545288
    3. 'while' (adapté à ' while') → logprob: -1.7091916799545288
    4. ' for' → logprob: -5.959191799163818
    5. ' while' → logprob: -6.584191799163818
    6. ' cnt' → logprob: -6.709191799163818
    7. '       ' → logprob: -8.08419132232666
    8. 'count' → logprob: -8.33419132232666
    9. '
' → logprob: -8.45919132232666
    10. '   ' → logprob: -8.95919132232666

Token 265: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0003357006062287837
    2. ' bit' → logprob: -8.000335693359375
    3. '(bit' → logprob: -15.375335693359375
    4. '   ' → logprob: -18.000335693359375
    5. 'bin' → logprob: -19.250335693359375
    6. 'bitr' → logprob: -19.250335693359375
    7. 'bits' → logprob: -19.750335693359375
    8. ' ' → logprob: -19.750335693359375
    9. '0' → logprob: -20.125335693359375
    10. 'b' → logprob: -20.500335693359375

Token 266: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0036857128143310547
    2. ':
' → logprob: -6.50368595123291
    3. ':' → logprob: -6.62868595123291
    4. '!=' → logprob: -7.62868595123291
    5. '>:' → logprob: -8.50368595123291
    6. '&gt' → logprob: -9.00368595123291
    7. '```' → logprob: -11.75368595123291
    8. '">' → logprob: -12.00368595123291
    9. ' >' → logprob: -12.12868595123291
    10. '):
' → logprob: -12.75368595123291

Token 267: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.500012397766113
    3. '=' → logprob: -13.875012397766113
    4. '>' → logprob: -14.875012397766113
    5. '```' → logprob: -15.250012397766113
    6. '           ' → logprob: -15.875012397766113
    7. '   ' → logprob: -16.000011444091797
    8. '       ' → logprob: -17.375011444091797
    9. 'bit' → logprob: -17.500011444091797
    10. '
' → logprob: -17.500011444091797

Token 268: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3885878026485443
    2. ':
' → logprob: -1.1385878324508667
    3. '       ' → logprob: -6.763587951660156
    4. '           ' → logprob: -8.388587951660156
    5. '):
' → logprob: -9.263587951660156
    6. ' and' → logprob: -9.638587951660156
    7. '   ' → logprob: -9.888587951660156
    8. ',' → logprob: -9.888587951660156
    9. ':

' → logprob: -10.638587951660156
    10. '<|end|>' → logprob: -11.388587951660156

Token 269: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04876120388507843
    2. 'bit' → logprob: -3.1737611293792725
    3. ' bit' → logprob: -5.798761367797852
    4. 'count' → logprob: -7.298761367797852
    5. '```' → logprob: -7.673761367797852
    6. 'cnt' → logprob: -8.048761367797852
    7. '   ' → logprob: -8.173761367797852
    8. '
' → logprob: -8.423761367797852
    9. ' ' → logprob: -8.673761367797852
    10. '       ' → logprob: -9.048761367797852

Token 270: ' if' (ID: 538)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.5691486597061157
    2. 'cnt' → logprob: -0.9441486597061157
    3. '           ' → logprob: -3.694148540496826
    4. ' bit' → logprob: -4.569148540496826
    5. ' cnt' → logprob: -4.694148540496826
    6. 'count' → logprob: -8.069149017333984
    7. '	cnt' → logprob: -8.694149017333984
    8. ' ' → logprob: -10.819149017333984
    9. '(cnt' → logprob: -10.944149017333984
    10. '               ' → logprob: -10.944149017333984

Token 271: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.006742723751813173
    2. ' bit' → logprob: -5.00674295425415
    3. '(bit' → logprob: -10.506742477416992
    4. 'b' → logprob: -19.631742477416992
    5. ' ' → logprob: -19.756742477416992
    6. ' (' → logprob: -20.006742477416992
    7. 'bits' → logprob: -20.256742477416992
    8. '_bit' → logprob: -20.631742477416992
    9. 'bin' → logprob: -20.631742477416992
    10. '(' → logprob: -20.631742477416992

Token 272: '&' (ID: 5)
  Prédit: '&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -4.56102097814437e-05
    2. '&
' → logprob: -10.250045776367188
    3. ' &' → logprob: -11.875045776367188
    4. '%' → logprob: -13.625045776367188
    5. '&amp' → logprob: -14.250045776367188
    6. '&_' → logprob: -14.500045776367188
    7. '&id' → logprob: -15.250045776367188
    8. '&t' → logprob: -15.875045776367188
    9. '＆' → logprob: -16.375045776367188
    10. '&p' → logprob: -16.375045776367188

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000493937055580318
    2. '-' → logprob: -8.625494003295898
    3. ' ' → logprob: -9.000494003295898
    4. '(' → logprob: -9.500494003295898
    5. '(bit' → logprob: -10.000494003295898
    6. 'bit' → logprob: -10.125494003295898
    7. '(-' → logprob: -10.750494003295898
    8. ' bit' → logprob: -12.375494003295898
    9. ' (' → logprob: -13.125494003295898
    10. ' -' → logprob: -13.125494003295898

Token 274: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16097772121429443
    2. '==' → logprob: -2.160977840423584
    3. ':' → logprob: -3.410977840423584
    4. ' ==' → logprob: -8.660977363586426
    5. '>' → logprob: -9.035977363586426
    6. '==
' → logprob: -9.160977363586426
    7. '=' → logprob: -11.035977363586426
    8. '!=' → logprob: -11.410977363586426
    9. ':

' → logprob: -11.535977363586426
    10. '           ' → logprob: -11.660977363586426

Token 275: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25267621874809265
    2. 'cnt' → logprob: -2.002676248550415
    3. ' cnt' → logprob: -2.502676248550415
    4. '
' → logprob: -5.627676010131836
    5. 'count' → logprob: -7.002676010131836
    6. '           ' → logprob: -7.252676010131836
    7. '	cnt' → logprob: -7.377676010131836
    8. '   ' → logprob: -8.877676010131836
    9. '[cnt' → logprob: -9.627676010131836
    10. ' ' → logprob: -9.752676010131836

Token 276: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.00822057481855154
    2. '               ' → logprob: -5.883220672607422
    3. ' cnt' → logprob: -6.133220672607422
    4. 'count' → logprob: -6.883220672607422
    5. '	cnt' → logprob: -7.133220672607422
    6. '           ' → logprob: -7.633220672607422
    7. '
' → logprob: -7.758220672607422
    8. 'counter' → logprob: -8.508220672607422
    9. '   ' → logprob: -9.133220672607422
    10. '+' → logprob: -10.133220672607422

Token 277: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00026169343618676066
    2. ' +=' → logprob: -8.250261306762695
    3. ']+=' → logprob: -14.625261306762695
    4. '   ' → logprob: -17.125261306762695
    5. '+=(' → logprob: -18.250261306762695
    6. '=' → logprob: -19.500261306762695
    7. '+="' → logprob: -19.500261306762695
    8. '
' → logprob: -19.750261306762695
    9. '+='' → logprob: -20.000261306762695
    10. '  ' → logprob: -20.250261306762695

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -18.250001907348633
    4. '0' → logprob: -18.625001907348633
    5. '```' → logprob: -19.187501907348633
    6. 'bit' → logprob: -19.562501907348633
    7. '１' → logprob: -19.937501907348633
    8. '
' → logprob: -20.250001907348633
    9. '  ' → logprob: -20.250001907348633
    10. ' ' → logprob: -20.625001907348633

Token 279: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003074566484428942
    2. 'bit' → logprob: -8.250307083129883
    3. '       ' → logprob: -10.875307083129883
    4. '          ' → logprob: -11.375307083129883
    5. '   ' → logprob: -12.250307083129883
    6. ' bit' → logprob: -12.500307083129883
    7. '1' → logprob: -13.500307083129883
    8. '0' → logprob: -14.500307083129883
    9. '16' → logprob: -14.625307083129883
    10. '               ' → logprob: -14.625307083129883

Token 280: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03488714620471001
    2. 'bit' → logprob: -3.4098870754241943
    3. ' bit' → logprob: -7.784887313842773
    4. '          ' → logprob: -8.784887313842773
    5. '            ' → logprob: -8.909887313842773
    6. '```' → logprob: -9.034887313842773
    7. '>>>' → logprob: -9.409887313842773
    8. '>>' → logprob: -10.034887313842773
    9. 'bitr' → logprob: -10.409887313842773
    10. '               ' → logprob: -10.409887313842773

Token 281: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.0003218766360078007
    2. ' bit' → logprob: -8.250322341918945
    3. '           ' → logprob: -9.750322341918945
    4. 'bitr' → logprob: -14.125322341918945
    5. 'bits' → logprob: -14.375322341918945
    6. '          ' → logprob: -14.625322341918945
    7. '(bit' → logprob: -15.750322341918945
    8. '-bit' → logprob: -16.000322341918945
    9. '>>' → logprob: -16.625322341918945
    10. 'Bit' → logprob: -17.125322341918945

Token 282: '//=' (ID: 171954)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.002311073010787368
    2. '=' → logprob: -6.1273112297058105
    3. '//=' → logprob: -9.627310752868652
    4. ' >>=' → logprob: -9.752310752868652
    5. '>' → logprob: -14.377310752868652
    6. ' =' → logprob: -14.877310752868652
    7. '/=' → logprob: -15.377310752868652
    8. '>>
' → logprob: -15.502310752868652
    9. '>>>' → logprob: -15.752310752868652
    10. '≫' → logprob: -16.25231170654297

Token 283: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. '10' → logprob: -15.250000953674316
    4. '```' → logprob: -18.75
    5. '２' → logprob: -20.25
    6. '>' → logprob: -21.25
    7. 'bit' → logprob: -21.625
    8. '   ' → logprob: -21.625
    9. '``' → logprob: -21.625
    10. '=' → logprob: -21.75

Token 284: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006759425159543753
    2. 'print' → logprob: -5.0067596435546875
    3. '   ' → logprob: -10.506759643554688
    4. ' print' → logprob: -11.131759643554688
    5. '
' → logprob: -13.631759643554688
    6. '```' → logprob: -14.756759643554688
    7. '           ' → logprob: -15.506759643554688
    8. '	print' → logprob: -16.131759643554688
    9. '<|end|>' → logprob: -16.631759643554688
    10. '        
' → logprob: -16.881759643554688

Token 285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02725001983344555
    2. 'print' → logprob: -3.777250051498413
    3. '   ' → logprob: -5.527249813079834
    4. ' print' → logprob: -10.902250289916992
    5. '```' → logprob: -14.027250289916992
    6. '	print' → logprob: -15.527250289916992
    7. '           ' → logprob: -16.152250289916992
    8. '
' → logprob: -17.152250289916992
    9. '	   ' → logprob: -18.277250289916992
    10. '#print' → logprob: -18.402250289916992

Token 286: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.641841820150148e-05
    2. '   ' → logprob: -11.00002670288086
    3. '       ' → logprob: -11.75002670288086
    4. ' print' → logprob: -13.37502670288086
    5. '
' → logprob: -16.00002670288086
    6. '```' → logprob: -16.25002670288086
    7. '	print' → logprob: -17.87502670288086
    8. '           ' → logprob: -20.25002670288086
    9. 'printf' → logprob: -20.50002670288086
    10. '``' → logprob: -20.62502670288086

Token 287: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -1.747814349073451e-05
    2. 'cnt' → logprob: -11.000017166137695
    3. '[cnt' → logprob: -14.625017166137695
    4. '(' → logprob: -16.000017166137695
    5. '(count' → logprob: -17.125017166137695
    6. '(ct' → logprob: -18.875017166137695
    7. '	cnt' → logprob: -19.000017166137695
    8. '(cmd' → logprob: -19.000017166137695
    9. ' (' → logprob: -19.375017166137695
    10. ' cnt' → logprob: -19.625017166137695

Token 288: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -15.000000953674316
    3. ' )' → logprob: -15.375000953674316
    4. '())' → logprob: -16.75
    5. '))' → logprob: -17.375
    6. '()' → logprob: -17.5
    7. ')`' → logprob: -18.0
    8. '`)' → logprob: -19.625
    9. '）' → logprob: -19.625
    10. '(' → logprob: -19.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 286
Tokens correctement prédits (1ère position, stricte): 134
Tokens correctement prédits (1ère position, avec adaptation): 148
Tokens correctement prédits (top 10): 246
Précision stricte (1ère position): 46.85%
Précision adaptée (1ère position): 51.75%
Précision (top 10): 86.01%
================================================================================
