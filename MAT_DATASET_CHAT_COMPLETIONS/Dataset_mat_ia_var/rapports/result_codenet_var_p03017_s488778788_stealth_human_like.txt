================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def iwa_check(start, end):
    for idx in range(start, end):
        # hmm, I'm just checking consecutive rocks here
        if s[idx] == '#' and s[idx + 1] == '#':
            return False
    return True  # so if no consecutive found, all good

# main
n, a, b, c, d = map(int, input().split())
s = list(input())
s.insert(0, '#')  # for easy boundary handling...
s.append('#')

# check if double rocks exist in the way for a or b
if (iwa_check(a, c) == False) or (iwa_check(b, d) == False):
    print("No")
    exit()

# overtaking case... kinda tricky
if c > d:
    overtaken = False
    for pos in range(b, d+1):  # I guess d+1 is safe with the padding
        if s[pos-1] == '.' and s[pos] == '.' and s[pos+1] == '.':
            overtaken = True
            break
    if overtaken == False:
        print("No")
        exit()

# if all is fine then yes, whatever...
print("Yes")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' i' (ID: 575)
  → Token d'amorce (pas de prédiction)

Token 2: 'wa' (ID: 1708)
  → Token d'amorce (pas de prédiction)

Token 3: '_check' (ID: 15847)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.46601155400276184
    2. 'l' → logprob: -2.2160115242004395
    3. 'f' → logprob: -2.4660115242004395
    4. '_' → logprob: -2.8410115242004395
    5. 'r' → logprob: -3.2160115242004395
    6. 'd' → logprob: -3.8410115242004395
    7. 'n' → logprob: -4.2160115242004395
    8. '(' → logprob: -4.5910115242004395
    9. 's' → logprob: -4.5910115242004395
    10. 'w' → logprob: -4.8410115242004395

Token 4: '(start' (ID: 20008)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2557811141014099
    2. '(' → logprob: -1.5057811737060547
    3. '_:' → logprob: -6.505781173706055
    4. '```' → logprob: -6.505781173706055
    5. '(_' → logprob: -8.380781173706055
    6. '_(' → logprob: -9.005781173706055
    7. '(_:' → logprob: -9.380781173706055
    8. 'def' → logprob: -9.630781173706055
    9. 's' → logprob: -9.880781173706055
    10. '_a' → logprob: -10.505781173706055

Token 5: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.30637699365615845
    2. '_' → logprob: -1.9313769340515137
    3. ')' → logprob: -2.1813769340515137
    4. 's' → logprob: -6.931376934051514
    5. '(' → logprob: -7.056376934051514
    6. '_:' → logprob: -7.056376934051514
    7. ')_' → logprob: -7.181376934051514
    8. ',' → logprob: -7.181376934051514
    9. ':' → logprob: -8.306377410888672
    10. '=' → logprob: -8.431377410888672

Token 6: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.7801116108894348
    2. 'end' → logprob: -1.15511155128479
    3. ' stop' → logprob: -2.53011155128479
    4. ')' → logprob: -2.90511155128479
    5. 'stop' → logprob: -3.40511155128479
    6. ' current' → logprob: -4.530111789703369
    7. ' input' → logprob: -4.905111789703369
    8. 'input' → logprob: -5.780111789703369
    9. ' step' → logprob: -5.780111789703369
    10. 's' → logprob: -5.780111789703369

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005057279486209154
    2. ':' → logprob: -5.505057334899902
    3. ')' → logprob: -7.505057334899902
    4. ',' → logprob: -7.880057334899902
    5. ''):' → logprob: -10.880057334899902
    6. '```' → logprob: -11.630057334899902
    7. '):
' → logprob: -12.505057334899902
    8. '**' → logprob: -12.630057334899902
    9. '   ' → logprob: -13.380057334899902
    10. '"):' → logprob: -13.380057334899902

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07435164600610733
    2. '```' → logprob: -3.0743515491485596
    3. '   ' → logprob: -4.324351787567139
    4. '\' → logprob: -5.449351787567139
    5. '\n' → logprob: -5.574351787567139
    6. ':
' → logprob: -5.949351787567139
    7. '``' → logprob: -7.574351787567139
    8. ':\' → logprob: -8.69935131072998
    9. '    
' → logprob: -8.82435131072998
    10. ''\' → logprob: -8.82435131072998

Token 9: ' for' (ID: 395)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4063766598701477
    2. '\n' → logprob: -1.656376600265503
    3. '   ' → logprob: -2.406376600265503
    4. '`' → logprob: -4.031376838684082
    5. '``' → logprob: -4.656376838684082
    6. '\' → logprob: -4.781376838684082
    7. '    
' → logprob: -5.281376838684082
    8. ' 
' → logprob: -6.406376838684082
    9. '
' → logprob: -6.531376838684082
    10. ''' → logprob: -6.781376838684082

Token 10: ' idx' (ID: 14016)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007006979081779718
    2. ' i' → logprob: -5.132007122039795
    3. '  ' → logprob: -7.257007122039795
    4. '_' → logprob: -8.507006645202637
    5. 'i' → logprob: -10.132006645202637
    6. ' range' → logprob: -10.507006645202637
    7. ' token' → logprob: -10.507006645202637
    8. ' item' → logprob: -10.882006645202637
    9. ' _' → logprob: -11.632006645202637
    10. ' x' → logprob: -12.132006645202637

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12744341790676117
    2. 'in' → logprob: -2.127443313598633
    3. ' ' → logprob: -8.002443313598633
    4. '_' → logprob: -10.002443313598633
    5. '  ' → logprob: -10.627443313598633
    6. '_in' → logprob: -11.002443313598633
    7. ',' → logprob: -11.127443313598633
    8. 'space' → logprob: -11.127443313598633
    9. '```' → logprob: -11.377443313598633
    10. 's' → logprob: -11.752443313598633

Token 12: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.474099338054657
    2. ' range' → logprob: -0.974099338054657
    3. '	range' → logprob: -11.974099159240723
    4. ' ' → logprob: -12.349099159240723
    5. '(range' → logprob: -12.474099159240723
    6. 'start' → logprob: -12.599099159240723
    7. ' start' → logprob: -13.724099159240723
    8. '```' → logprob: -14.099099159240723
    9. 'rang' → logprob: -14.724099159240723
    10. ' xrange' → logprob: -14.724099159240723

Token 13: '(start' (ID: 20008)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22785066068172455
    2. '(start' → logprob: -1.6028506755828857
    3. ' (' → logprob: -6.102850437164307
    4. '(
' → logprob: -10.352850914001465
    5. ')' → logprob: -10.477850914001465
    6. '(end' → logprob: -10.977850914001465
    7. '(

' → logprob: -11.227850914001465
    8. '(s' → logprob: -11.477850914001465
    9. '(int' → logprob: -11.477850914001465
    10. '   ' → logprob: -11.477850914001465

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003413031517993659
    2. ' ,' → logprob: -8.000341415405273
    3. '+' → logprob: -13.625341415405273
    4. ')' → logprob: -13.875341415405273
    5. '   ' → logprob: -14.000341415405273
    6. ',
' → logprob: -14.000341415405273
    7. '‌,' → logprob: -15.625341415405273
    8. ',start' → logprob: -15.625341415405273
    9. ',next' → logprob: -15.750341415405273
    10. ',n' → logprob: -16.000341415405273

Token 15: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.11286745220422745
    2. 'end' → logprob: -2.2378673553466797
    3. ' ' → logprob: -10.98786735534668
    4. '(end' → logprob: -11.48786735534668
    5. '   ' → logprob: -11.98786735534668
    6. ',end' → logprob: -12.86286735534668
    7. '    ' → logprob: -13.48786735534668
    8. '_end' → logprob: -13.48786735534668
    9. '	end' → logprob: -13.61286735534668
    10. ')' → logprob: -14.23786735534668

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005230206064879894
    2. ')' → logprob: -5.63023042678833
    3. ',' → logprob: -7.13023042678833
    4. '):
' → logprob: -7.38023042678833
    5. '+' → logprob: -9.005229949951172
    6. '   ' → logprob: -10.505229949951172
    7. ':' → logprob: -10.630229949951172
    8. ' ):' → logprob: -10.880229949951172
    9. ' ' → logprob: -13.255229949951172
    10. ''):' → logprob: -13.755229949951172

Token 17: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3703693449497223
    2. ':' → logprob: -2.1203694343566895
    3. '    ' → logprob: -2.3703694343566895
    4. '   ' → logprob: -2.9953694343566895
    5. ' :' → logprob: -4.2453694343566895
    6. ' ' → logprob: -5.2453694343566895
    7. '\' → logprob: -5.7453694343566895
    8. '        
' → logprob: -5.7453694343566895
    9. '    
' → logprob: -5.9953694343566895
    10. '     
' → logprob: -6.1203694343566895

Token 18: ' #' (ID: 1069)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.494521141052246
    2. ' if' → logprob: -1.494521141052246
    3. 'i' → logprob: -1.994521141052246
    4. ' ' → logprob: -2.369521141052246
    5. 'if' → logprob: -2.494521141052246
    6. '       ' → logprob: -2.619521141052246
    7. '   ' → logprob: -2.619521141052246
    8. ' i' → logprob: -3.119521141052246
    9. 's' → logprob: -5.119521141052246
    10. '```' → logprob: -5.369521141052246

Token 19: ' hmm' (ID: 186402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9654040336608887
    2. ' if' → logprob: -1.2154040336608887
    3. '        ' → logprob: -2.0904040336608887
    4. 'if' → logprob: -2.7154040336608887
    5. '    ' → logprob: -3.3404040336608887
    6. ' i' → logprob: -3.5904040336608887
    7. ' pass' → logprob: -4.090404033660889
    8. 'i' → logprob: -4.215404033660889
    9. '       ' → logprob: -4.715404033660889
    10. 'pass' → logprob: -5.340404033660889

Token 20: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39383402466773987
    2. '        ' → logprob: -2.643834114074707
    3. '    ' → logprob: -2.643834114074707
    4. ' if' → logprob: -2.893834114074707
    5. '       ' → logprob: -3.268834114074707
    6. ' :' → logprob: -3.643834114074707
    7. ':' → logprob: -3.893834114074707
    8. '   ' → logprob: -4.393834114074707
    9. 'if' → logprob: -5.268834114074707
    10. '(' → logprob: -5.768834114074707

Token 21: ' I'm' (ID: 5477)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1087532788515091
    2. ' if' → logprob: -2.733753204345703
    3. ' idx' → logprob: -5.358753204345703
    4. '        ' → logprob: -5.608753204345703
    5. ' I' → logprob: -5.733753204345703
    6. '    ' → logprob: -5.733753204345703
    7. ' pass' → logprob: -5.858753204345703
    8. ' '' → logprob: -5.983753204345703
    9. ' i' → logprob: -6.108753204345703
    10. ')' → logprob: -6.358753204345703

Token 22: ' just' (ID: 1327)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.22772060334682465
    2. ' thinking' → logprob: -2.8527204990386963
    3. 'not' → logprob: -2.9777204990386963
    4. ' curious' → logprob: -3.2277204990386963
    5. ' unsure' → logprob: -3.9777204990386963
    6. ' wondering' → logprob: -4.727720737457275
    7. ' ' → logprob: -4.852720737457275
    8. ' trying' → logprob: -5.352720737457275
    9. ' considering' → logprob: -5.727720737457275
    10. ' sure' → logprob: -6.352720737457275

Token 23: ' checking' (ID: 19141)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6741821765899658
    2. ' thinking' → logprob: -1.4241821765899658
    3. ' curious' → logprob: -1.7991821765899658
    4. ' checking' → logprob: -3.674182176589966
    5. ' wondering' → logprob: -4.049181938171387
    6. ' unsure' → logprob: -4.424181938171387
    7. ' trying' → logprob: -5.174181938171387
    8. 'not' → logprob: -5.174181938171387
    9. ' looking' → logprob: -5.549181938171387
    10. ' considering' → logprob: -5.674181938171387

Token 24: ' consecutive' (ID: 40840)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18617185950279236
    2. ' ' → logprob: -2.061171770095825
    3. 'if' → logprob: -4.561172008514404
    4. ':' → logprob: -4.686172008514404
    5. '    ' → logprob: -4.811172008514404
    6. ' :' → logprob: -5.561172008514404
    7. '   ' → logprob: -5.936172008514404
    8. '  ' → logprob: -6.811172008514404
    9. '<|end|>' → logprob: -6.811172008514404
    10. ' ,' → logprob: -7.186172008514404

Token 25: ' rocks' (ID: 35257)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5435093641281128
    2. ' ' → logprob: -1.1685093641281128
    3. ' _' → logprob: -3.6685094833374023
    4. 's' → logprob: -3.7935094833374023
    5. ' elements' → logprob: -4.918509483337402
    6. ' characters' → logprob: -5.043509483337402
    7. ' tokens' → logprob: -5.293509483337402
    8. '_chars' → logprob: -5.293509483337402
    9. '_s' → logprob: -5.668509483337402
    10. ' indices' → logprob: -5.793509483337402

Token 26: ' here' (ID: 2105)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9438358545303345
    2. ' if' → logprob: -1.3188358545303345
    3. '   ' → logprob: -2.068835735321045
    4. ':' → logprob: -2.693835735321045
    5. ' ' → logprob: -2.943835735321045
    6. 'if' → logprob: -3.693835735321045
    7. ',' → logprob: -4.318835735321045
    8. '<|end|>' → logprob: -4.443835735321045
    9. '    ' → logprob: -4.943835735321045
    10. '.' → logprob: -5.193835735321045

Token 27: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3157355785369873
    2. ':' → logprob: -1.6907355785369873
    3. '   ' → logprob: -3.9407355785369873
    4. ' if' → logprob: -4.315735816955566
    5. ' :' → logprob: -4.565735816955566
    6. '\' → logprob: -4.940735816955566
    7. ' ' → logprob: -5.190735816955566
    8. '           ' → logprob: -5.315735816955566
    9. 'if' → logprob: -5.565735816955566
    10. '    ' → logprob: -5.565735816955566

Token 28: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2820471525192261
    2. '       ' → logprob: -1.907047152519226
    3. '   ' → logprob: -3.0320472717285156
    4. ' :' → logprob: -3.9070472717285156
    5. ' ' → logprob: -4.782047271728516
    6. ' if' → logprob: -5.157047271728516
    7. ':
' → logprob: -5.532047271728516
    8. '    ' → logprob: -6.407047271728516
    9. '           ' → logprob: -6.657047271728516
    10. ',' → logprob: -6.782047271728516

Token 29: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3520109951496124
    2. '   ' → logprob: -2.72701096534729
    3. ' if' → logprob: -2.85201096534729
    4. 'r' → logprob: -3.35201096534729
    5. 'if' (adapté à ' if') → logprob: -3.47701096534729
    6. ' ' → logprob: -3.72701096534729
    7. 'i' → logprob: -3.85201096534729
    8. '           ' → logprob: -4.102011203765869
    9. ' i' → logprob: -4.477011203765869
    10. '    ' → logprob: -4.602011203765869

Token 30: ' s' (ID: 265)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.32264983654022217
    2. ' rocks' → logprob: -2.0726499557495117
    3. ' ' → logprob: -2.4476499557495117
    4. 'idx' → logprob: -3.8226499557495117
    5. ' i' → logprob: -4.697649955749512
    6. ' rock' → logprob: -4.822649955749512
    7. ' not' → logprob: -5.072649955749512
    8. ' (' → logprob: -5.697649955749512
    9. 'rocks' → logprob: -5.822649955749512
    10. ' data' → logprob: -6.447649955749512

Token 31: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.1326218992471695
    2. '[' → logprob: -2.132622003555298
    3. 't' → logprob: -5.757621765136719
    4. 'tr' → logprob: -6.882621765136719
    5. '[i' → logprob: -6.882621765136719
    6. ' [' → logprob: -9.382621765136719
    7. 'tring' → logprob: -9.757621765136719
    8. '```' → logprob: -9.757621765136719
    9. '[t' → logprob: -10.132621765136719
    10. '   ' → logprob: -10.382621765136719

Token 32: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020202452316880226
    2. ' ]' → logprob: -4.39520263671875
    3. ']==' → logprob: -5.39520263671875
    4. '+' → logprob: -6.52020263671875
    5. ' ' → logprob: -7.64520263671875
    6. ':' → logprob: -8.39520263671875
    7. '[' → logprob: -8.64520263671875
    8. ' ==' → logprob: -8.77020263671875
    9. '-' → logprob: -9.02020263671875
    10. '==' → logprob: -9.14520263671875

Token 33: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.19908753037452698
    2. '+' → logprob: -2.824087619781494
    3. '==' → logprob: -2.824087619781494
    4. ' ' → logprob: -3.574087619781494
    5. ']' → logprob: -4.199087619781494
    6. '[' → logprob: -4.574087619781494
    7. '=' → logprob: -5.574087619781494
    8. ' +' → logprob: -6.949087619781494
    9. ' !=' → logprob: -7.824087619781494
    10. ' ]' → logprob: -7.949087619781494

Token 34: ' '#'' (ID: 139870)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47127625346183777
    2. ''' → logprob: -1.3462762832641602
    3. ''s' → logprob: -3.34627628326416
    4. ' ' → logprob: -3.59627628326416
    5. ' '' → logprob: -3.84627628326416
    6. ' s' → logprob: -4.09627628326416
    7. '"' → logprob: -5.09627628326416
    8. '"s' → logprob: -5.97127628326416
    9. ''r' → logprob: -7.22127628326416
    10. ''i' → logprob: -7.22127628326416

Token 35: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018170781433582306
    2. 'and' → logprob: -4.1431708335876465
    3. ' ' → logprob: -6.2681708335876465
    4. ':' → logprob: -9.643170356750488
    5. '#' → logprob: -10.518170356750488
    6. '           ' → logprob: -10.893170356750488
    7. '    ' → logprob: -11.018170356750488
    8. '        ' → logprob: -11.268170356750488
    9. '   ' → logprob: -11.268170356750488
    10. '       ' → logprob: -11.393170356750488

Token 36: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.007884134538471699
    2. 's' → logprob: -4.8828840255737305
    3. ' ' → logprob: -8.25788402557373
    4. ' ' → logprob: -12.50788402557373
    5. ''s' → logprob: -12.75788402557373
    6. '    ' → logprob: -12.94538402557373
    7. ' '' → logprob: -13.19538402557373
    8. ''' → logprob: -13.38288402557373
    9. ' (' → logprob: -13.88288402557373
    10. '(s' → logprob: -14.13288402557373

Token 37: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.006713955197483301
    2. ' [' → logprob: -5.7567138671875
    3. '[' → logprob: -5.8817138671875
    4. 'idx' → logprob: -8.0067138671875
    5. ' idx' → logprob: -8.2567138671875
    6. 's' → logprob: -10.1317138671875
    7. ' ' → logprob: -10.5067138671875
    8. '[next' → logprob: -11.2567138671875
    9. '```' → logprob: -11.8817138671875
    10. '[
' → logprob: -12.0692138671875

Token 38: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05186999961733818
    2. ' +' → logprob: -3.176870107650757
    3. ']' → logprob: -5.051869869232178
    4. '-' → logprob: -6.301869869232178
    5. '   ' → logprob: -8.676870346069336
    6. ' -' → logprob: -8.926870346069336
    7. ' ' → logprob: -9.676870346069336
    8. ']==' → logprob: -10.176870346069336
    9. '1' → logprob: -10.301870346069336
    10. '']' → logprob: -10.801870346069336

Token 39: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04951820895075798
    2. ' ' → logprob: -3.04951810836792
    3. ''' → logprob: -7.17451810836792
    4. ' '' → logprob: -9.799518585205078
    5. ''s' → logprob: -10.549518585205078
    6. '2' → logprob: -10.799518585205078
    7. '  ' → logprob: -11.299518585205078
    8. ''#' → logprob: -11.799518585205078
    9. '   ' → logprob: -11.924518585205078
    10. '0' → logprob: -12.362018585205078

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010596160776913166
    2. ''#' → logprob: -4.63559627532959
    3. ' ' → logprob: -7.76059627532959
    4. '#' → logprob: -8.76059627532959
    5. ''' → logprob: -9.26059627532959
    6. ' '#' → logprob: -10.26059627532959
    7. '"#' → logprob: -10.76059627532959
    8. ' '#'' → logprob: -10.76059627532959
    9. '```' → logprob: -11.51059627532959
    10. ''s' → logprob: -11.57309627532959

Token 41: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003375791944563389
    2. ']==' → logprob: -6.003376007080078
    3. ' ]' → logprob: -7.753376007080078
    4. '']' → logprob: -8.003376007080078
    5. ' ==' → logprob: -10.003376007080078
    6. ']=='' → logprob: -10.253376007080078
    7. '==' → logprob: -10.503376007080078
    8. '<|end|>' → logprob: -12.003376007080078
    9. '`]' → logprob: -12.628376007080078
    10. ' ']' → logprob: -13.378376007080078

Token 42: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1437753140926361
    2. '==' → logprob: -2.018775224685669
    3. '=' → logprob: -7.768775463104248
    4. '=='' → logprob: -7.768775463104248
    5. ' =='' → logprob: -9.76877498626709
    6. ''' → logprob: -10.14377498626709
    7. ' ' → logprob: -10.26877498626709
    8. ' =' → logprob: -11.26877498626709
    9. ']' → logprob: -11.26877498626709
    10. '#' → logprob: -11.51877498626709

Token 43: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.13061586022377014
    2. ''' → logprob: -2.1306159496307373
    3. ' '#'' → logprob: -5.880615711212158
    4. ' '#' → logprob: -7.630615711212158
    5. ' '' → logprob: -8.255616188049316
    6. ' ' → logprob: -10.005616188049316
    7. '  ' → logprob: -11.255616188049316
    8. ''s' → logprob: -11.380616188049316
    9. '('#' → logprob: -11.630616188049316
    10. '#' → logprob: -11.630616188049316

Token 44: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02211296558380127
    2. '':' → logprob: -4.522112846374512
    3. '):' → logprob: -4.772112846374512
    4. '#' → logprob: -6.897112846374512
    5. '#:' → logprob: -7.647112846374512
    6. ')' → logprob: -7.897112846374512
    7. ' :' → logprob: -8.022112846374512
    8. ''):' → logprob: -9.147112846374512
    9. ' ':' → logprob: -9.397112846374512
    10. ' and' → logprob: -10.272112846374512

Token 45: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11520847678184509
    2. '           ' → logprob: -2.490208387374878
    3. '       ' → logprob: -4.615208625793457
    4. ' :' → logprob: -5.365208625793457
    5. '<|end|>' → logprob: -5.740208625793457
    6. ':
' → logprob: -5.865208625793457
    7. ':return' → logprob: -6.740208625793457
    8. '               ' → logprob: -6.740208625793457
    9. ' ' → logprob: -7.615208625793457
    10. ' and' → logprob: -7.990208625793457

Token 46: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.44634804129600525
    2. '           ' → logprob: -1.6963480710983276
    3. 'return' (adapté à ' return') → logprob: -1.8213480710983276
    4. '               ' → logprob: -4.446348190307617
    5. '       ' → logprob: -7.196348190307617
    6. ' continue' → logprob: -7.446348190307617
    7. ' ' → logprob: -7.446348190307617
    8. '   ' → logprob: -8.571348190307617
    9. ' ' → logprob: -8.946348190307617
    10. 'continue' → logprob: -9.071348190307617

Token 47: ' False' (ID: 7983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.28320685029029846
    2. ' True' → logprob: -1.533206820487976
    3. 'False' → logprob: -3.6582069396972656
    4. ' False' → logprob: -5.658206939697266
    5. 'idx' → logprob: -7.158206939697266
    6. ' ' → logprob: -8.408206939697266
    7. '"' → logprob: -8.658206939697266
    8. ' idx' → logprob: -8.783206939697266
    9. 'None' → logprob: -10.033206939697266
    10. ''' → logprob: -10.158206939697266

Token 48: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.25192946195602417
    2. ' True' → logprob: -1.501929521560669
    3. '(True' → logprob: -15.50192928314209
    4. '   ' → logprob: -16.376930236816406
    5. ' ' → logprob: -16.626930236816406
    6. '=True' → logprob: -17.376930236816406
    7. 'None' → logprob: -18.251930236816406
    8. ' ' → logprob: -19.376930236816406
    9. 'False' → logprob: -20.126930236816406
    10. '.True' → logprob: -20.876930236816406

Token 52: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' so' (ID: 813)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' no' (ID: 860)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0219537019729614
    2. ' the' → logprob: -1.3969537019729614
    3. ' s' → logprob: -2.146953582763672
    4. ' ' → logprob: -2.271953582763672
    5. 'the' → logprob: -3.146953582763672
    6. '<|end|>' → logprob: -3.146953582763672
    7. ' all' → logprob: -4.146953582763672
    8. ' there' → logprob: -4.646953582763672
    9. ' not' → logprob: -5.021953582763672
    10. '_' → logprob: -5.271953582763672

Token 57: ' consecutive' (ID: 40840)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3519326448440552
    2. '<|end|>' → logprob: -1.7269326448440552
    3. '#' → logprob: -2.6019325256347656
    4. '```' → logprob: -4.726932525634766
    5. ' rocks' → logprob: -5.101932525634766
    6. '`' → logprob: -5.476932525634766
    7. ')' → logprob: -5.476932525634766
    8. 's' → logprob: -5.976932525634766
    9. ' consecutive' → logprob: -5.976932525634766
    10. ' #' → logprob: -6.226932525634766

Token 58: ' found' (ID: 2491)
  Prédit: 'rocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rocks' → logprob: -0.5425258278846741
    2. '#' → logprob: -1.6675257682800293
    3. ' rocks' → logprob: -1.7925257682800293
    4. ' '#'' → logprob: -4.542525768280029
    5. ' #' → logprob: -4.542525768280029
    6. ' hashes' → logprob: -4.667525768280029
    7. 'hash' → logprob: -4.792525768280029
    8. ' ' → logprob: -5.917525768280029
    9. 'rock' → logprob: -5.980025768280029
    10. '```' → logprob: -6.042525768280029

Token 59: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' all' (ID: 722)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' good' (ID: 1899)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.8790055513381958
    2. 'good' → logprob: -1.7540055513381958
    3. ' good' → logprob: -2.0040054321289062
    4. ' is' → logprob: -2.3790054321289062
    5. ''s' → logprob: -2.7540054321289062
    6. 'rocks' → logprob: -3.0040054321289062
    7. 's' → logprob: -3.8790054321289062
    8. ' rocks' → logprob: -4.379005432128906
    9. 'tokens' → logprob: -4.754005432128906
    10. ' are' → logprob: -5.254005432128906

Token 62: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0907992124557495
    2. '<|end|>' → logprob: -1.0907992124557495
    3. '
' → logprob: -1.7157992124557495
    4. '\n' → logprob: -2.715799331665039
    5. ')' → logprob: -3.215799331665039
    6. '```' → logprob: -4.465799331665039
    7. 'newline' → logprob: -5.340799331665039
    8. ',' → logprob: -5.590799331665039
    9. ' ' → logprob: -5.715799331665039
    10. '\' → logprob: -5.840799331665039

Token 63: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.785773515701294
    2. '<|end|>' → logprob: -0.785773515701294
    3. '
' → logprob: -2.785773515701294
    4. '```' → logprob: -4.660773277282715
    5. '\n' → logprob: -5.410773277282715
    6. ' ' → logprob: -5.535773277282715
    7. ')' → logprob: -5.660773277282715
    8. '\' → logprob: -7.035773277282715
    9. '<|end|>' → logprob: -7.285773277282715
    10. '#' → logprob: -7.285773277282715

Token 64: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2799878120422363
    2. '_' → logprob: -1.5299878120422363
    3. '#' → logprob: -1.6549878120422363
    4. 'def' → logprob: -2.2799878120422363
    5. '<|end|>' → logprob: -2.6549878120422363
    6. 's' → logprob: -3.1549878120422363
    7. '```' → logprob: -3.4049878120422363
    8. ':' → logprob: -3.6549878120422363
    9. 'd' → logprob: -4.654987812042236
    10. ')' → logprob: -4.779987812042236

Token 65: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6988504528999329
    2. 's' → logprob: -1.698850393295288
    3. '<|end|>' → logprob: -1.948850393295288
    4. 'def' → logprob: -3.198850393295288
    5. ':' → logprob: -3.323850393295288
    6. '
' → logprob: -3.323850393295288
    7. '```' → logprob: -3.698850393295288
    8. ' ' → logprob: -4.198850631713867
    9. '()' → logprob: -5.823850631713867
    10. '(s' → logprob: -5.948850631713867

Token 66: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9673622846603394
    2. 's' → logprob: -0.9673622846603394
    3. ' s' → logprob: -2.467362403869629
    4. ' n' → logprob: -2.467362403869629
    5. 'i' → logprob: -3.717362403869629
    6. '```' → logprob: -3.842362403869629
    7. ' for' → logprob: -5.092362403869629
    8. ' i' → logprob: -5.717362403869629
    9. 'for' → logprob: -5.842362403869629
    10. 'def' → logprob: -6.217362403869629

Token 67: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013423740165308118
    2. '=' → logprob: -6.751342296600342
    3. ',' → logprob: -9.0013427734375
    4. ' ' → logprob: -10.2513427734375
    5. 's' → logprob: -12.1263427734375
    6. ' ,' → logprob: -12.5013427734375
    7. '  ' → logprob: -13.1263427734375
    8. '=int' → logprob: -14.5013427734375
    9. '_' → logprob: -14.7513427734375
    10. ' =
' → logprob: -15.1263427734375

Token 68: ' a' (ID: 261)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.11404546350240707
    2. 's' → logprob: -2.3640453815460205
    3. ' ' → logprob: -4.9890456199646
    4. ' k' → logprob: -5.7390456199646
    5. 'k' → logprob: -6.4890456199646
    6. 'm' → logprob: -7.4890456199646
    7. ' m' → logprob: -7.6140456199646
    8. ' =' → logprob: -8.364045143127441
    9. '=' → logprob: -8.364045143127441
    10. ' t' → logprob: -8.739045143127441

Token 69: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4812786877155304
    2. ' =' → logprob: -1.106278657913208
    3. ',' → logprob: -2.981278657913208
    4. 's' → logprob: -8.856278419494629
    5. '<|end|>' → logprob: -9.481278419494629
    6. 'l' → logprob: -10.106278419494629
    7. ' ' → logprob: -10.481278419494629
    8. ',b' → logprob: -10.606278419494629
    9. 'b' → logprob: -10.606278419494629
    10. 'd' → logprob: -10.731278419494629

Token 70: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08035062998533249
    2. ' b' → logprob: -2.580350637435913
    3. 'd' → logprob: -7.455350399017334
    4. 'k' → logprob: -8.205350875854492
    5. ' ' → logprob: -8.705350875854492
    6. ' d' → logprob: -9.455350875854492
    7. 's' → logprob: -9.580350875854492
    8. 'q' → logprob: -9.830350875854492
    9. ' k' → logprob: -10.080350875854492
    10. 't' → logprob: -10.205350875854492

Token 71: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2819361388683319
    2. '=' → logprob: -1.4069361686706543
    3. ',' → logprob: -7.156936168670654
    4. '=input' → logprob: -12.531935691833496
    5. ' ' → logprob: -13.406935691833496
    6. ')' → logprob: -15.531935691833496
    7. '=int' → logprob: -16.031936645507812
    8. ' ,' → logprob: -16.281936645507812
    9. '=s' → logprob: -16.594436645507812
    10. ' =
' → logprob: -16.781936645507812

Token 72: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.28923761844635
    2. ' s' → logprob: -1.28923761844635
    3. 's' → logprob: -1.91423761844635
    4. ' c' → logprob: -2.0392374992370605
    5. ' =' → logprob: -2.4142374992370605
    6. '=' → logprob: -2.9142374992370605
    7. ' k' → logprob: -4.9142374992370605
    8. 'k' → logprob: -4.9142374992370605
    9. 't' → logprob: -6.6017374992370605
    10. ' t' → logprob: -6.8517374992370605

Token 73: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3224283456802368
    2. '=' → logprob: -1.3224283456802368
    3. ',' → logprob: -4.697428226470947
    4. '=input' → logprob: -13.072428703308105
    5. ' ,' → logprob: -13.697428703308105
    6. ' ' → logprob: -13.697428703308105
    7. '=int' → logprob: -14.822428703308105
    8. ')' → logprob: -15.822428703308105
    9. '<|end|>' → logprob: -15.822428703308105
    10. ' =
' → logprob: -16.13492774963379

Token 74: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1493067592382431
    2. ' d' → logprob: -2.0243067741394043
    3. 's' → logprob: -5.399306774139404
    4. ' s' → logprob: -6.774306774139404
    5. ' =' → logprob: -8.274306297302246
    6. '=' → logprob: -9.024306297302246
    7. 'k' → logprob: -9.524306297302246
    8. 't' → logprob: -9.649306297302246
    9. 'm' → logprob: -9.774306297302246
    10. ' ' → logprob: -9.899306297302246

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17991772294044495
    2. '=' → logprob: -1.8049176931381226
    3. ',' → logprob: -8.804917335510254
    4. ' ' → logprob: -11.054917335510254
    5. '=input' → logprob: -12.179917335510254
    6. '=int' → logprob: -15.054917335510254
    7. '<|end|>' → logprob: -15.304917335510254
    8. '=s' → logprob: -15.742417335510254
    9. ' ,' → logprob: -15.742417335510254
    10. ')' → logprob: -15.867417335510254

Token 76: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.013130349107086658
    2. 'map' → logprob: -4.388130187988281
    3. ' ' → logprob: -7.888130187988281
    4. ' input' → logprob: -8.888130187988281
    5. ' list' → logprob: -10.513130187988281
    6. '	map' → logprob: -10.763130187988281
    7. 'input' → logprob: -10.888130187988281
    8. ' [' → logprob: -10.888130187988281
    9. '0' → logprob: -12.263130187988281
    10. '[' → logprob: -12.763130187988281

Token 77: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.021951109170913696
    2. '(' → logprob: -3.896951198577881
    3. '(input' → logprob: -6.896951198577881
    4. '(str' → logprob: -8.271950721740723
    5. 'int' → logprob: -10.396950721740723
    6. '<|end|>' → logprob: -10.396950721740723
    7. '(eval' → logprob: -10.771950721740723
    8. '(list' → logprob: -11.146950721740723
    9. '(lambda' → logprob: -11.271950721740723
    10. '<int' → logprob: -11.521950721740723

Token 78: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02419765293598175
    2. '(' → logprob: -4.649197578430176
    3. ',input' → logprob: -4.649197578430176
    4. ',' → logprob: -6.399197578430176
    5. 'input' → logprob: -6.649197578430176
    6. ')' → logprob: -7.274197578430176
    7. ' input' → logprob: -7.524197578430176
    8. '(int' → logprob: -8.649197578430176
    9. '=input' → logprob: -8.774197578430176
    10. '<|end|>' → logprob: -9.649197578430176

Token 79: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.31326693296432495
    2. 'input' → logprob: -1.3132669925689697
    3. ' ' → logprob: -12.68826675415039
    4. ' s' → logprob: -14.68826675415039
    5. '=input' → logprob: -14.81326675415039
    6. '	input' → logprob: -14.93826675415039
    7. '(input' → logprob: -15.06326675415039
    8. 's' → logprob: -15.81326675415039
    9. ')' → logprob: -15.81326675415039
    10. ' )' → logprob: -16.68826675415039

Token 80: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17722299695014954
    2. '().' → logprob: -2.052222967147827
    3. '())' → logprob: -3.427222967147827
    4. '(' → logprob: -7.302223205566406
    5. '()>' → logprob: -7.927223205566406
    6. '());' → logprob: -9.927223205566406
    7. '();)' → logprob: -10.052223205566406
    8. '()<' → logprob: -10.177223205566406
    9. '()-' → logprob: -10.552223205566406
    10. ')' → logprob: -10.677223205566406

Token 81: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00141440040897578
    2. 'strip' → logprob: -6.6264142990112305
    3. '(split' → logprob: -10.12641429901123
    4. ')' → logprob: -10.50141429901123
    5. 'rstrip' → logprob: -11.50141429901123
    6. '()' → logprob: -12.50141429901123
    7. 'read' → logprob: -12.62641429901123
    8. ' split' → logprob: -13.87641429901123
    9. '```' → logprob: -14.25141429901123
    10. '())' → logprob: -14.25141429901123

Token 82: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020948927849531174
    2. '())' → logprob: -4.395948886871338
    3. '))' → logprob: -4.895948886871338
    4. '()' → logprob: -7.145948886871338
    5. '(' → logprob: -9.270949363708496
    6. '()))' → logprob: -11.145949363708496
    7. '('' → logprob: -11.645949363708496
    8. ')))' → logprob: -11.645949363708496
    9. ')")' → logprob: -13.145949363708496
    10. '(','' → logprob: -13.895949363708496

Token 83: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010366715490818024
    2. '<|end|>' → logprob: -5.010366916656494
    3. '
' → logprob: -5.760366916656494
    4. ' s' → logprob: -8.010366439819336
    5. '```' → logprob: -9.510366439819336
    6. '<|end|>' → logprob: -10.760366439819336
    7. ' 
' → logprob: -11.385366439819336
    8. 'n' → logprob: -11.385366439819336
    9. ')' → logprob: -11.885366439819336
    10. '\' → logprob: -12.260366439819336

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0011712945997714996
    2. '=' → logprob: -6.751171112060547
    3. ' ' → logprob: -15.376171112060547
    4. ' ' → logprob: -15.626171112060547
    5. '_' → logprob: -15.751171112060547
    6. ' =)' → logprob: -15.751171112060547
    7. '=input' → logprob: -16.126171112060547
    8. 's' → logprob: -16.251171112060547
    9. '  ' → logprob: -16.751171112060547
    10. '.' → logprob: -17.126171112060547

Token 85: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3132933974266052
    2. 'input' → logprob: -1.31329345703125
    3. ' str' → logprob: -11.56329345703125
    4. ' list' → logprob: -11.81329345703125
    5. ' '' → logprob: -12.68829345703125
    6. ' ' → logprob: -13.06329345703125
    7. ''' → logprob: -13.18829345703125
    8. 'list' → logprob: -13.31329345703125
    9. '=input' → logprob: -13.43829345703125
    10. 'str' → logprob: -13.81329345703125

Token 86: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0004902417422272265
    2. '(' → logprob: -7.750490188598633
    3. '(str' → logprob: -9.750490188598633
    4. 'input' → logprob: -15.125490188598633
    5. '=input' → logprob: -15.750490188598633
    6. '(eval' → logprob: -15.875490188598633
    7. ' (' → logprob: -16.000490188598633
    8. '()' → logprob: -16.125490188598633
    9. '('' → logprob: -16.625490188598633
    10. '(list' → logprob: -16.750490188598633

Token 87: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014188768342137337
    2. '()' → logprob: -4.264188766479492
    3. '().' → logprob: -11.139188766479492
    4. '();)' → logprob: -12.514188766479492
    5. ' ())' → logprob: -12.889188766479492
    6. ')' → logprob: -13.764188766479492
    7. '()))' → logprob: -14.139188766479492
    8. '()]' → logprob: -14.264188766479492
    9. '()>' → logprob: -14.389188766479492
    10. '());' → logprob: -14.514188766479492

Token 88: 's' (ID: 82)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: '.insert' (ID: 13222)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15318502485752106
    2. '<|end|>' → logprob: -2.7781851291656494
    3. '[:]' → logprob: -3.1531851291656494
    4. '.' → logprob: -4.02818489074707
    5. '[]' → logprob: -5.40318489074707
    6. ' ' → logprob: -5.65318489074707
    7. '<|end|>' → logprob: -6.52818489074707
    8. ')' → logprob: -6.77818489074707
    9. '=' → logprob: -7.02818489074707
    10. '```' → logprob: -7.02818489074707

Token 90: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.306760805164231e-05
    2. '(
' → logprob: -11.50001335144043
    3. '(-' → logprob: -13.37501335144043
    4. '0' → logprob: -14.50001335144043
    5. ' (' → logprob: -15.00001335144043
    6. '()' → logprob: -16.12501335144043
    7. '(a' → logprob: -16.25001335144043
    8. '((' → logprob: -16.37501335144043
    9. 'a' → logprob: -17.12501335144043
    10. '(

' → logprob: -17.37501335144043

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017818065825849771
    2. 'a' → logprob: -6.876781940460205
    3. ''a' → logprob: -8.376781463623047
    4. ''' → logprob: -8.626781463623047
    5. ' ' → logprob: -8.876781463623047
    6. ')' → logprob: -10.126781463623047
    7. '1' → logprob: -10.376781463623047
    8. '(' → logprob: -10.626781463623047
    9. ''b' → logprob: -10.876781463623047
    10. 'b' → logprob: -11.001781463623047

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011620076838880777
    2. ','' → logprob: -7.001162052154541
    3. '(' → logprob: -9.126161575317383
    4. ' ,' → logprob: -9.251161575317383
    5. ''' → logprob: -10.751161575317383
    6. ',"' → logprob: -12.126161575317383
    7. '('' → logprob: -12.126161575317383
    8. ' ,'' → logprob: -12.251161575317383
    9. ''s' → logprob: -13.376161575317383
    10. '(),'' → logprob: -13.626161575317383

Token 93: ' '#' (ID: 11284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002911146730184555
    2. '"' → logprob: -6.62791109085083
    3. ''.' → logprob: -8.002911567687988
    4. ''-' → logprob: -8.252911567687988
    5. ''s' → logprob: -8.377911567687988
    6. ''a' → logprob: -8.627911567687988
    7. ' '' → logprob: -8.752911567687988
    8. ')' → logprob: -9.252911567687988
    9. ''_' → logprob: -9.377911567687988
    10. ''*' → logprob: -10.252911567687988

Token 94: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0054443469271063805
    2. '')' → logprob: -5.380444526672363
    3. '<|end|>' → logprob: -7.505444526672363
    4. '#' → logprob: -9.380444526672363
    5. ')#' → logprob: -9.505444526672363
    6. ''' → logprob: -10.880444526672363
    7. ' )' → logprob: -11.005444526672363
    8. '")' → logprob: -11.255444526672363
    9. '<|end|>' → logprob: -11.505444526672363
    10. ')s' → logprob: -11.755444526672363

Token 95: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0238134860992432
    2. '#' → logprob: -1.1488134860992432
    3. 'Adding' → logprob: -1.5238134860992432
    4. ' to' → logprob: -4.148813247680664
    5. 'Add' → logprob: -4.523813247680664
    6. '<|end|>' → logprob: -4.648813247680664
    7. ' adding' → logprob: -4.898813247680664
    8. 'I' → logprob: -5.023813247680664
    9. ' Adding' → logprob: -5.023813247680664
    10. 'The' → logprob: -5.398813247680664

Token 98: ' easy' (ID: 4224)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8149710893630981
    2. '1' → logprob: -1.1899710893630981
    3. 'index' → logprob: -2.6899709701538086
    4. 'safe' → logprob: -3.5649709701538086
    5. ' safe' → logprob: -3.5649709701538086
    6. ' indexing' → logprob: -3.5649709701538086
    7. 's' → logprob: -3.6899709701538086
    8. ' easier' → logprob: -4.189970970153809
    9. ' index' → logprob: -4.314970970153809
    10. ' boundary' → logprob: -4.439970970153809

Token 99: ' boundary' (ID: 35021)
  Prédit: ' indexing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' indexing' → logprob: -0.17359258234500885
    2. 'index' → logprob: -1.9235925674438477
    3. '1' → logprob: -4.548592567443848
    4. ' index' → logprob: -6.048592567443848
    5. ' ' → logprob: -8.673592567443848
    6. '#index' → logprob: -9.548592567443848
    7. '-index' → logprob: -10.798592567443848
    8. 's' → logprob: -11.548592567443848
    9. '0' → logprob: -11.673592567443848
    10. 'indexed' → logprob: -11.798592567443848

Token 100: ' handling' (ID: 17491)
  Prédit: ' handling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' handling' → logprob: -0.9770768284797668
    2. ' checking' → logprob: -1.602076768875122
    3. ' checks' → logprob: -1.852076768875122
    4. 'handling' → logprob: -1.977076768875122
    5. ' management' → logprob: -2.852076768875122
    6. 'checking' → logprob: -4.102077007293701
    7. ' conditions' → logprob: -4.227077007293701
    8. 's' → logprob: -4.227077007293701
    9. '<|end|>' → logprob: -4.977077007293701
    10. 'checks' → logprob: -4.977077007293701

Token 101: '...
' (ID: 4908)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: 's' (ID: 82)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: '.append' (ID: 3709)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: '('#' (ID: 6801)
  Prédit: '('#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('#' → logprob: -0.0030362976249307394
    2. '('' → logprob: -6.1280364990234375
    3. '(' → logprob: -7.1280364990234375
    4. '('.')' → logprob: -10.878036499023438
    5. '('/')' → logprob: -11.628036499023438
    6. '('_' → logprob: -11.878036499023438
    7. ''#' → logprob: -12.003036499023438
    8. '("#' → logprob: -12.753036499023438
    9. ' ('' → logprob: -14.128036499023438
    10. '('?' → logprob: -14.253036499023438

Token 105: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.06536485254764557
    2. ')' → logprob: -2.8153648376464844
    3. '#' → logprob: -5.690364837646484
    4. ''' → logprob: -12.565364837646484
    5. ')#' → logprob: -12.690364837646484
    6. '')
' → logprob: -13.315364837646484
    7. '")' → logprob: -13.565364837646484
    8. ']' → logprob: -13.815364837646484
    9. ')'' → logprob: -14.190364837646484
    10. ' ')' → logprob: -14.815364837646484

Token 106: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14894600212574005
    2. 'for' → logprob: -2.1489460468292236
    3. '#' → logprob: -4.8989458084106445
    4. ' if' → logprob: -5.0239458084106445
    5. ' for' → logprob: -5.3989458084106445
    6. 'i' → logprob: -7.1489458084106445
    7. '<|end|>' → logprob: -7.6489458084106445
    8. 'result' → logprob: -7.8989458084106445
    9. 'valid' → logprob: -8.023945808410645
    10. 'idx' → logprob: -8.773945808410645

Token 107: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008517174050211906
    2. '#' → logprob: -5.758517265319824
    3. 'print' → logprob: -6.008517265319824
    4. 'result' → logprob: -6.758517265319824
    5. ' if' → logprob: -7.508517265319824
    6. 'for' → logprob: -7.633517265319824
    7. 'flag' → logprob: -8.883517265319824
    8. 'possible' → logprob: -9.008517265319824
    9. 'ok' → logprob: -9.133517265319824
    10. 'res' → logprob: -9.133517265319824

Token 108: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0011224760673940182
    2. ' if' → logprob: -7.12612247467041
    3. '<|end|>' → logprob: -8.37612247467041
    4. 'i' → logprob: -10.37612247467041
    5. 'for' → logprob: -10.62612247467041
    6. 'a' → logprob: -11.50112247467041
    7. 'all' → logprob: -12.25112247467041
    8. '<|end|>' → logprob: -12.37612247467041
    9. '#' → logprob: -13.37612247467041
    10. 'not' → logprob: -13.50112247467041

Token 109: ' double' (ID: 3503)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.6756240129470825
    2. ' not' → logprob: -1.9256240129470825
    3. ' i' → logprob: -2.050623893737793
    4. 'a' → logprob: -2.050623893737793
    5. ' c' → logprob: -2.300623893737793
    6. ' a' → logprob: -2.800623893737793
    7. 'c' → logprob: -2.925623893737793
    8. 'b' → logprob: -3.300623893737793
    9. 'not' → logprob: -3.425623893737793
    10. '(' → logprob: -3.550623893737793

Token 110: ' rocks' (ID: 35257)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9946140050888062
    2. '_' → logprob: -1.6196140050888062
    3. '##' → logprob: -2.1196141242980957
    4. '__' → logprob: -2.3696141242980957
    5. 'hash' → logprob: -2.3696141242980957
    6. 's' → logprob: -3.7446141242980957
    7. ' '#'' → logprob: -4.119614124298096
    8. ' #' → logprob: -4.244614124298096
    9. '.' → logprob: -4.619614124298096
    10. ' ' → logprob: -4.744614124298096

Token 111: ' exist' (ID: 4310)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.42871302366256714
    2. ' or' → logprob: -1.553713083267212
    3. ' if' → logprob: -2.928713083267212
    4. ' and' → logprob: -3.678713083267212
    5. 'or' → logprob: -3.803713083267212
    6. 'and' → logprob: -4.428712844848633
    7. ' ' → logprob: -4.803712844848633
    8. 'for' → logprob: -5.178712844848633
    9. 's' → logprob: -5.803712844848633
    10. ' for' → logprob: -6.053712844848633

Token 112: ' in' (ID: 306)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13460032641887665
    2. ' or' → logprob: -3.0096004009246826
    3. 'and' → logprob: -3.7596004009246826
    4. 'for' → logprob: -3.8846004009246826
    5. 'or' → logprob: -4.5096001625061035
    6. ' and' → logprob: -4.7596001625061035
    7. ' if' → logprob: -4.7596001625061035
    8. '<|end|>' → logprob: -5.7596001625061035
    9. ' for' → logprob: -7.1346001625061035
    10. 'i' → logprob: -9.009600639343262

Token 113: ' the' (ID: 290)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8491214513778687
    2. ' range' → logprob: -1.5991214513778687
    3. 'a' → logprob: -2.224121570587158
    4. 'the' → logprob: -2.974121570587158
    5. 's' → logprob: -3.224121570587158
    6. '[a' → logprob: -3.474121570587158
    7. ' the' → logprob: -3.599121570587158
    8. ' a' → logprob: -3.849121570587158
    9. 'any' → logprob: -3.974121570587158
    10. ' any' → logprob: -4.099121570587158

Token 114: ' way' (ID: 2006)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7071175575256348
    2. 'path' → logprob: -1.7071175575256348
    3. 'segment' → logprob: -2.0821175575256348
    4. 'middle' → logprob: -3.4571175575256348
    5. 'segments' → logprob: -3.7071175575256348
    6. 'a' → logprob: -3.8321175575256348
    7. 'section' → logprob: -4.332117557525635
    8. 'interval' → logprob: -4.332117557525635
    9. 'ranges' → logprob: -4.457117557525635
    10. 'given' → logprob: -5.082117557525635

Token 115: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18350625038146973
    2. '<|end|>' → logprob: -2.5585062503814697
    3. 'for' → logprob: -2.5585062503814697
    4. ' if' → logprob: -5.183506011962891
    5. ' for' → logprob: -6.058506011962891
    6. '<|end|>' → logprob: -7.058506011962891
    7. 'i' → logprob: -7.058506011962891
    8. 'and' → logprob: -7.183506011962891
    9. '```' → logprob: -7.808506011962891
    10. '#' → logprob: -7.933506011962891

Token 116: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.165414497256279
    2. ' a' → logprob: -2.915414571762085
    3. 'b' → logprob: -3.665414571762085
    4. 'i' → logprob: -3.915414571762085
    5. '(' → logprob: -4.665414333343506
    6. ' any' → logprob: -5.290414333343506
    7. '(a' → logprob: -5.415414333343506
    8. ' i' → logprob: -5.415414333343506
    9. 'any' → logprob: -5.415414333343506
    10. 'the' → logprob: -5.790414333343506

Token 117: ' or' (ID: 503)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1492968797683716
    2. ' or' → logprob: -1.2742968797683716
    3. ' if' → logprob: -2.149296760559082
    4. '<|end|>' → logprob: -2.274296760559082
    5. ' and' → logprob: -2.399296760559082
    6. ' for' → logprob: -3.649296760559082
    7. 'if' → logprob: -3.649296760559082
    8. ',' → logprob: -4.899296760559082
    9. 'for' → logprob: -4.899296760559082
    10. ':' → logprob: -5.524296760559082

Token 118: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0896061509847641
    2. ' b' → logprob: -2.5896060466766357
    3. 'c' → logprob: -4.714606285095215
    4. ' c' → logprob: -6.589606285095215
    5. 'd' → logprob: -8.714606285095215
    6. ' ' → logprob: -9.089606285095215
    7. ' d' → logprob: -10.464606285095215
    8. '#' → logprob: -12.339606285095215
    9. '+' → logprob: -13.089606285095215
    10. 'e' → logprob: -13.214606285095215

Token 119: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44592148065567017
    2. ' or' → logprob: -1.8209214210510254
    3. ' and' → logprob: -2.3209214210510254
    4. 'and' → logprob: -2.5709214210510254
    5. 'or' → logprob: -4.570921421051025
    6. 'if' → logprob: -5.695921421051025
    7. ',' → logprob: -5.945921421051025
    8. '.' → logprob: -6.320921421051025
    9. '<|end|>' → logprob: -6.445921421051025
    10. ' if' → logprob: -6.820921421051025

Token 120: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005562512087635696
    2. 'for' → logprob: -8.000555992126465
    3. ' if' → logprob: -9.500555992126465
    4. 'print' → logprob: -9.625555992126465
    5. 'and' → logprob: -10.250555992126465
    6. 'i' → logprob: -11.125555992126465
    7. 'a' → logprob: -11.625555992126465
    8. 'result' → logprob: -12.750555992126465
    9. 'valid' → logprob: -13.000555992126465
    10. 'or' → logprob: -13.125555992126465

Token 121: ' (' (ID: 350)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.090430848300457
    2. 'not' → logprob: -2.590430736541748
    3. '(not' → logprob: -6.090430736541748
    4. ' a' → logprob: -6.090430736541748
    5. ' (' → logprob: -6.465430736541748
    6. ' i' → logprob: -6.590430736541748
    7. 'a' → logprob: -6.715430736541748
    8. ' any' → logprob: -7.090430736541748
    9. 'i' → logprob: -8.090431213378906
    10. ' ' → logprob: -8.090431213378906

Token 122: 'iwa' (ID: 41792)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.19629083573818207
    2. ' not' → logprob: -1.9462908506393433
    3. 'i' → logprob: -4.696290969848633
    4. 'a' → logprob: -5.071290969848633
    5. 'iwa' → logprob: -5.196290969848633
    6. '(not' → logprob: -5.196290969848633
    7. 'any' → logprob: -6.571290969848633
    8. '(i' → logprob: -6.696290969848633
    9. 'b' → logprob: -6.821290969848633
    10. '   ' → logprob: -7.446290969848633

Token 123: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -3.650518920039758e-06
    2. '_' → logprob: -13.750003814697266
    3. '_che' → logprob: -14.000003814697266
    4. ')_' → logprob: -14.750003814697266
    5. '_chk' → logprob: -15.000003814697266
    6. '_ch' → logprob: -15.875003814697266
    7. 'check' → logprob: -16.000003814697266
    8. ' _' → logprob: -16.250003814697266
    9. '_checks' → logprob: -16.250003814697266
    10. ')' → logprob: -16.750003814697266

Token 124: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0001732663222355768
    2. '(' → logprob: -8.750173568725586
    3. 'a' → logprob: -12.250173568725586
    4. ' (' → logprob: -12.750173568725586
    5. ')' → logprob: -13.000173568725586
    6. ')(' → logprob: -13.125173568725586
    7. '(n' → logprob: -13.875173568725586
    8. '(b' → logprob: -14.375173568725586
    9. '((' → logprob: -15.500173568725586
    10. '(s' → logprob: -15.625173568725586

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015085102990269661
    2. '-' → logprob: -5.015085220336914
    3. '+' → logprob: -5.765085220336914
    4. ' -' → logprob: -5.765085220336914
    5. ' +' → logprob: -7.265085220336914
    6. ' ,' → logprob: -7.515085220336914
    7. ',b' → logprob: -8.015085220336914
    8. '   ' → logprob: -8.015085220336914
    9. ',a' → logprob: -9.890085220336914
    10. ' ' → logprob: -10.640085220336914

Token 126: ' c' (ID: 274)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.17607417702674866
    2. 'c' → logprob: -1.9260741472244263
    3. ' b' → logprob: -5.051074028015137
    4. 'a' → logprob: -5.176074028015137
    5. ' c' → logprob: -5.676074028015137
    6. ' ' → logprob: -9.551074028015137
    7. ' a' → logprob: -9.676074028015137
    8. 'd' → logprob: -10.176074028015137
    9. 'max' → logprob: -10.426074028015137
    10. '   ' → logprob: -11.426074028015137

Token 127: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026781832799315453
    2. ' )' → logprob: -4.401782035827637
    3. ' -' → logprob: -5.151782035827637
    4. '+' → logprob: -5.776782035827637
    5. ' +' → logprob: -5.901782035827637
    6. '-' → logprob: -6.276782035827637
    7. '))' → logprob: -7.526782035827637
    8. '())' → logprob: -10.776782035827637
    9. ' ))' → logprob: -10.776782035827637
    10. ')
' → logprob: -11.026782035827637

Token 128: ' ==' (ID: 951)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2586221694946289
    2. 'and' → logprob: -1.508622169494629
    3. ')' → logprob: -5.258622169494629
    4. '==' → logprob: -6.883622169494629
    5. ' or' → logprob: -8.508622169494629
    6. ' ' → logprob: -9.633622169494629
    7. ' is' → logprob: -9.758622169494629
    8. ' )' → logprob: -9.883622169494629
    9. 'or' → logprob: -10.383622169494629
    10. ' ==' → logprob: -11.508622169494629

Token 129: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.5778157711029053
    2. 'False' → logprob: -0.8278157711029053
    3. ' True' → logprob: -6.827816009521484
    4. 'True' → logprob: -7.202816009521484
    5. ' ' → logprob: -10.202816009521484
    6. '=False' → logprob: -12.452816009521484
    7. '(False' → logprob: -12.702816009521484
    8. '   ' → logprob: -13.827816009521484
    9. ')' → logprob: -15.077816009521484
    10. '  ' → logprob: -15.077816009521484

Token 130: ')' (ID: 8)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0063796136528253555
    2. ')' → logprob: -5.6313796043396
    3. 'or' → logprob: -6.0063796043396
    4. ' )' → logprob: -8.131380081176758
    5. ' ' → logprob: -11.006380081176758
    6. ' and' → logprob: -14.256380081176758
    7. '):' → logprob: -14.506380081176758
    8. '    ' → logprob: -15.006380081176758
    9. '	or' → logprob: -15.381380081176758
    10. ' ' → logprob: -15.881380081176758

Token 131: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.001744200591929257
    2. 'or' → logprob: -6.376744270324707
    3. ' ' → logprob: -10.751744270324707
    4. ':' → logprob: -11.626744270324707
    5. ' and' → logprob: -11.626744270324707
    6. '   ' → logprob: -14.001744270324707
    7. ')' → logprob: -14.501744270324707
    8. ':
' → logprob: -14.876744270324707
    9. 'and' → logprob: -15.376744270324707
    10. '    ' → logprob: -15.376744270324707

Token 132: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.02730257250368595
    2. '(i' → logprob: -3.6523025035858154
    3. '(' → logprob: -7.2773027420043945
    4. ' i' → logprob: -9.027302742004395
    5. ' not' → logprob: -9.027302742004395
    6. ' iw' → logprob: -10.902302742004395
    7. '(w' → logprob: -11.277302742004395
    8. '(s' → logprob: -11.527302742004395
    9. ' ' → logprob: -12.277302742004395
    10. '(not' → logprob: -12.652302742004395

Token 133: 'iwa' (ID: 41792)
  Prédit: 'iwa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iwa' → logprob: -0.17928427457809448
    2. ' i' → logprob: -2.0542843341827393
    3. 'b' → logprob: -4.55428409576416
    4. ' b' → logprob: -4.55428409576416
    5. 'i' → logprob: -5.05428409576416
    6. 'iw' → logprob: -5.67928409576416
    7. 'wia' → logprob: -7.05428409576416
    8. ' ' → logprob: -7.17928409576416
    9. ' iw' → logprob: -7.17928409576416
    10. '   ' → logprob: -7.55428409576416

Token 134: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -3.392824874026701e-05
    2. 'check' → logprob: -10.50003433227539
    3. 'Check' → logprob: -13.00003433227539
    4. '_' → logprob: -13.62503433227539
    5. 'a' → logprob: -13.87503433227539
    6. 'b' → logprob: -14.00003433227539
    7. 'c' → logprob: -15.62503433227539
    8. ')' → logprob: -16.25003433227539
    9. '_CHECK' → logprob: -16.37503433227539
    10. ' ' → logprob: -16.50003433227539

Token 135: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.005699108354747295
    2. '(' → logprob: -5.255699157714844
    3. ' (' → logprob: -7.755699157714844
    4. '(d' → logprob: -10.380699157714844
    5. '(
' → logprob: -13.005699157714844
    6. ' b' → logprob: -13.505699157714844
    7. 'b' → logprob: -13.755699157714844
    8. '((' → logprob: -15.130699157714844
    9. '(B' → logprob: -15.380699157714844
    10. '(s' → logprob: -15.755699157714844

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006486945785582066
    2. ',c' → logprob: -8.000648498535156
    3. ' ,' → logprob: -8.125648498535156
    4. ',
' → logprob: -11.625648498535156
    5. 'c' → logprob: -12.500648498535156
    6. ',d' → logprob: -13.250648498535156
    7. ',b' → logprob: -14.250648498535156
    8. ')' → logprob: -14.625648498535156
    9. ',

' → logprob: -14.875648498535156
    10. ' ' → logprob: -15.250648498535156

Token 137: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005239445250481367
    2. ' d' → logprob: -5.255239486694336
    3. 'c' → logprob: -12.755239486694336
    4. ' ' → logprob: -13.880239486694336
    5. '	d' → logprob: -14.005239486694336
    6. '
' → logprob: -15.255239486694336
    7. '   ' → logprob: -15.630239486694336
    8. '  ' → logprob: -16.130239486694336
    9. ''d' → logprob: -16.130239486694336
    10. ' c' → logprob: -16.130239486694336

Token 138: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002765902318060398
    2. ')==' → logprob: -8.750276565551758
    3. ' )' → logprob: -9.500276565551758
    4. '))' → logprob: -11.500276565551758
    5. '+' → logprob: -11.625276565551758
    6. ' ==' → logprob: -11.750276565551758
    7. '==' → logprob: -11.875276565551758
    8. '-' → logprob: -12.625276565551758
    9. ')
' → logprob: -14.125276565551758
    10. ' ' → logprob: -14.250276565551758

Token 139: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4747978448867798
    2. ' ==' → logprob: -0.9747978448867798
    3. ')' → logprob: -7.34979772567749
    4. ')==' → logprob: -9.974798202514648
    5. ' ' → logprob: -11.224798202514648
    6. ' )' → logprob: -11.599798202514648
    7. '==
' → logprob: -12.099798202514648
    8. '=' → logprob: -13.599798202514648
    9. ']==' → logprob: -14.474798202514648
    10. ' is' → logprob: -14.474798202514648

Token 140: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.005246568005532026
    2. ' False' → logprob: -5.255246639251709
    3. 'True' → logprob: -11.50524616241455
    4. '=False' → logprob: -13.13024616241455
    5. ' ' → logprob: -15.00524616241455
    6. '   ' → logprob: -15.75524616241455
    7. '(False' → logprob: -16.130247116088867
    8. ' True' → logprob: -16.755247116088867
    9. '    ' → logprob: -17.880247116088867
    10. ')' → logprob: -17.880247116088867

Token 141: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013564052991569042
    2. ')' → logprob: -4.388564109802246
    3. ':' → logprob: -7.888564109802246
    4. ' or' → logprob: -8.138564109802246
    5. ' ):' → logprob: -8.513564109802246
    6. '):
' → logprob: -8.638564109802246
    7. ' )' → logprob: -12.388564109802246
    8. 'or' → logprob: -12.638564109802246
    9. '   ' → logprob: -15.388564109802246
    10. '):

' → logprob: -15.513564109802246

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35489529371261597
    2. 'print' → logprob: -1.2298953533172607
    3. ' print' → logprob: -5.229895114898682
    4. '
' → logprob: -7.604895114898682
    5. ':
' → logprob: -8.72989559173584
    6. ':' → logprob: -9.10489559173584
    7. '    
' → logprob: -9.22989559173584
    8. 'False' → logprob: -9.85489559173584
    9. '       ' → logprob: -10.35489559173584
    10. ' ' → logprob: -10.85489559173584

Token 143: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009080066229216754
    2. ' print' → logprob: -7.625907897949219
    3. '   ' → logprob: -7.875907897949219
    4. '
' → logprob: -10.375907897949219
    5. '```' → logprob: -12.125907897949219
    6. '``' → logprob: -14.000907897949219
    7. '    
' → logprob: -14.125907897949219
    8. '	print' → logprob: -14.625907897949219
    9. '    ' → logprob: -14.750907897949219
    10. 'exit' → logprob: -15.500907897949219

Token 144: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.020841054618358612
    2. '('' → logprob: -4.270841121673584
    3. '(' → logprob: -5.020841121673584
    4. '(-' → logprob: -9.895840644836426
    5. '(False' → logprob: -12.895840644836426
    6. '(
' → logprob: -13.270840644836426
    7. '(NO' → logprob: -14.270840644836426
    8. '(

' → logprob: -15.020840644836426
    9. '(":' → logprob: -15.270840644836426
    10. ' ("' → logprob: -15.270840644836426

Token 145: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0008048642775975168
    2. 'NO' → logprob: -8.375804901123047
    3. '"No' → logprob: -8.375804901123047
    4. 'Impossible' → logprob: -8.500804901123047
    5. 'Fail' → logprob: -9.375804901123047
    6. ' No' → logprob: -11.500804901123047
    7. '"' → logprob: -11.625804901123047
    8. '_No' → logprob: -12.375804901123047
    9. 'Un' → logprob: -12.625804901123047
    10. '0' → logprob: -12.750804901123047

Token 146: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -3.03521392197581e-05
    2. ')' → logprob: -11.000030517578125
    3. '")
' → logprob: -11.500030517578125
    4. '"' → logprob: -13.625030517578125
    5. ' ")' → logprob: -14.125030517578125
    6. ')")' → logprob: -14.500030517578125
    7. '!")' → logprob: -14.625030517578125
    8. '");' → logprob: -15.375030517578125
    9. '#' → logprob: -15.750030517578125
    10. '')' → logprob: -15.875030517578125

Token 147: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.018195247277617455
    2. 'elif' → logprob: -4.018195152282715
    3. ' else' → logprob: -10.518195152282715
    4. '<|end|>' → logprob: -11.143195152282715
    5. '#else' → logprob: -13.893195152282715
    6. '_else' → logprob: -14.643195152282715
    7. '```' → logprob: -14.768195152282715
    8. 'continue' → logprob: -15.143195152282715
    9. 'elses' → logprob: -15.268195152282715
    10. 'elseif' → logprob: -15.268195152282715

Token 148: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.010787463746964931
    2. 'elif' → logprob: -4.635787487030029
    3. '<|end|>' → logprob: -7.510787487030029
    4. 'exit' (adapté à ' exit') → logprob: -8.260787010192871
    5. ' else' → logprob: -9.260787010192871
    6. '   ' → logprob: -9.885787010192871
    7. '#else' → logprob: -10.260787010192871
    8. '\n' → logprob: -11.885787010192871
    9. '
' → logprob: -12.135787010192871
    10. ')' → logprob: -12.135787010192871

Token 149: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.453737710718997e-05
    2. '(' → logprob: -10.250044822692871
    3. '()
' → logprob: -12.500044822692871
    4. '()(' → logprob: -14.000044822692871
    5. '()`' → logprob: -14.125044822692871
    6. '())' → logprob: -14.125044822692871
    7. '()]' → logprob: -14.250044822692871
    8. '()\' → logprob: -14.375044822692871
    9. ' ()' → logprob: -14.625044822692871
    10. '()

' → logprob: -14.750044822692871

Token 150: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21192124485969543
    2. '#' → logprob: -1.961921215057373
    3. ' 
' → logprob: -4.461921215057373
    4. 'i' → logprob: -4.586921215057373
    5. '<|end|>' → logprob: -4.836921215057373
    6. ' if' → logprob: -5.086921215057373
    7. ' ' → logprob: -5.711921215057373
    8. '\n' → logprob: -6.336921215057373
    9. '\' → logprob: -6.711921215057373
    10. '  
' → logprob: -6.836921215057373

Token 151: ' overt' (ID: 64535)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.018883787095546722
    2. '#' → logprob: -4.01888370513916
    3. 'print' → logprob: -8.01888370513916
    4. 'for' → logprob: -8.14388370513916
    5. ' if' → logprob: -10.76888370513916
    6. 'result' → logprob: -10.89388370513916
    7. 'elif' → logprob: -11.14388370513916
    8. 'def' → logprob: -11.51888370513916
    9. 'answer' → logprob: -11.76888370513916
    10. 'If' → logprob: -11.89388370513916

Token 152: 'aking' (ID: 5016)
  Prédit: 'ake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ake' → logprob: -0.023623596876859665
    2. 'aking' → logprob: -3.7736237049102783
    3. 'a' → logprob: -9.2736234664917
    4. 'take' → logprob: -9.6486234664917
    5. 'aken' → logprob: -9.7736234664917
    6. 'akes' → logprob: -9.8986234664917
    7. 'ak' → logprob: -10.2736234664917
    8. '#' → logprob: -10.7736234664917
    9. '```' → logprob: -11.2736234664917
    10. ' ake' → logprob: -11.3986234664917

Token 153: ' case' (ID: 1890)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00462972279638052
    2. 'for' → logprob: -6.254629611968994
    3. ' if' → logprob: -6.629629611968994
    4. '#' → logprob: -7.504629611968994
    5. 'elif' → logprob: -7.879629611968994
    6. 'possible' → logprob: -8.754630088806152
    7. ':' → logprob: -10.379630088806152
    8. 'and' → logprob: -10.379630088806152
    9. ' for' → logprob: -10.504630088806152
    10. 'def' → logprob: -10.629630088806152

Token 154: '...' (ID: 1008)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0029741376638412476
    2. 'for' → logprob: -6.502974033355713
    3. 'elif' → logprob: -8.127974510192871
    4. 'i' → logprob: -8.252974510192871
    5. 'can' → logprob: -8.377974510192871
    6. 'def' → logprob: -8.627974510192871
    7. '#' → logprob: -8.752974510192871
    8. 'possible' → logprob: -9.377974510192871
    9. 'flag' → logprob: -9.502974510192871
    10. 'found' → logprob: -9.877974510192871

Token 155: ' kinda' (ID: 49923)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06205194070935249
    2. 'for' → logprob: -3.437052011489868
    3. ' if' → logprob: -3.937052011489868
    4. ' for' → logprob: -5.562051773071289
    5. '<|end|>' → logprob: -5.937051773071289
    6. '#' → logprob: -7.187051773071289
    7. 'def' → logprob: -7.812051773071289
    8. '...' → logprob: -8.812051773071289
    9. 'i' → logprob: -8.937051773071289
    10. 'elif' → logprob: -9.312051773071289

Token 156: ' tricky' (ID: 53009)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005367395002394915
    2. 'for' → logprob: -5.755367279052734
    3. ' if' → logprob: -6.630367279052734
    4. 'i' → logprob: -8.130367279052734
    5. '<|end|>' → logprob: -8.880367279052734
    6. '#' → logprob: -9.005367279052734
    7. 'elif' → logprob: -9.505367279052734
    8. 'idx' → logprob: -9.880367279052734
    9. 's' → logprob: -10.255367279052734
    10. '...' → logprob: -10.505367279052734

Token 157: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.055151037871837616
    2. 'for' → logprob: -3.0551509857177734
    3. 'i' → logprob: -5.680150985717773
    4. '#' → logprob: -7.055150985717773
    5. 'can' → logprob: -7.305150985717773
    6. 'def' → logprob: -7.805150985717773
    7. 'idx' → logprob: -8.180150985717773
    8. 'elif' → logprob: -8.555150985717773
    9. 'found' → logprob: -9.055150985717773
    10. 'possible' → logprob: -9.305150985717773

Token 158: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04603881388902664
    2. 'for' → logprob: -3.421038866043091
    3. 'can' → logprob: -5.046038627624512
    4. 'ok' → logprob: -6.421038627624512
    5. 'possible' → logprob: -6.546038627624512
    6. 'def' → logprob: -7.421038627624512
    7. 'flag' → logprob: -7.671038627624512
    8. 'i' → logprob: -7.796038627624512
    9. '#' → logprob: -8.046038627624512
    10. 'elif' → logprob: -8.421038627624512

Token 159: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.24133923649787903
    2. ' d' → logprob: -1.8663392066955566
    3. 'c' → logprob: -3.7413392066955566
    4. ' (' → logprob: -4.616339206695557
    5. ' b' → logprob: -4.616339206695557
    6. 'd' → logprob: -4.991339206695557
    7. '(c' → logprob: -5.741339206695557
    8. ' s' → logprob: -6.116339206695557
    9. '(d' → logprob: -6.616339206695557
    10. ' not' → logprob: -7.241339206695557

Token 160: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.1222469806671143
    2. '<' → logprob: -1.4972469806671143
    3. ' <' → logprob: -1.6222469806671143
    4. ' >' → logprob: -1.6222469806671143
    5. '+' → logprob: -4.247246742248535
    6. ' -' → logprob: -4.747246742248535
    7. '>=' → logprob: -4.872246742248535
    8. '-' → logprob: -4.997246742248535
    9. '<=' → logprob: -5.122246742248535
    10. ' >=' → logprob: -5.497246742248535

Token 161: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02064337767660618
    2. ' d' → logprob: -3.895643472671509
    3. '	d' → logprob: -9.39564323425293
    4. '=d' → logprob: -11.52064323425293
    5. '_d' → logprob: -13.02064323425293
    6. '>d' → logprob: -13.27064323425293
    7. 'b' → logprob: -13.77064323425293
    8. '=' → logprob: -14.02064323425293
    9. ' ' → logprob: -14.02064323425293
    10. 's' → logprob: -14.77064323425293

Token 162: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3947640657424927
    2. ':' → logprob: -1.1447640657424927
    3. 'and' → logprob: -4.894763946533203
    4. ' :' → logprob: -8.644763946533203
    5. ':
' → logprob: -9.269763946533203
    6. ' ' → logprob: -9.644763946533203
    7. '>' → logprob: -11.144763946533203
    8. '+' → logprob: -11.894763946533203
    9. ' or' → logprob: -11.894763946533203
    10. '.' → logprob: -12.769763946533203

Token 163: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.516504168510437
    2. '   ' → logprob: -1.641504168510437
    3. 'if' → logprob: -1.766504168510437
    4. ' and' → logprob: -1.891504168510437
    5. ' for' → logprob: -2.5165042877197266
    6. ':' → logprob: -3.2665042877197266
    7. 'for' → logprob: -3.5165042877197266
    8. '#' → logprob: -3.8915042877197266
    9. '    
' → logprob: -4.641504287719727
    10. ' ' → logprob: -4.641504287719727

Token 164: ' overt' (ID: 64535)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08755713701248169
    2. 'for' → logprob: -3.837557077407837
    3. ' if' → logprob: -3.962557077407837
    4. '#' → logprob: -4.587557315826416
    5. 's' → logprob: -4.712557315826416
    6. 'c' → logprob: -4.712557315826416
    7. 'max' → logprob: -5.462557315826416
    8. '...' → logprob: -6.212557315826416
    9. 'print' → logprob: -6.337557315826416
    10. 'True' → logprob: -6.712557315826416

Token 165: 'aken' (ID: 8371)
  Prédit: 'aking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aking' → logprob: -0.5245652198791504
    2. 'ake' → logprob: -0.8995652198791504
    3. 'ak' → logprob: -7.14956521987915
    4. 'a' → logprob: -8.149564743041992
    5. 'aken' → logprob: -8.649564743041992
    6. 'akin' → logprob: -9.774564743041992
    7. ' ake' → logprob: -10.649564743041992
    8. 'aki' → logprob: -11.024564743041992
    9. '```' → logprob: -11.399564743041992
    10. 'akings' → logprob: -11.524564743041992

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.617877185344696
    2. '_idx' → logprob: -1.6178772449493408
    3. '=' → logprob: -1.7428772449493408
    4. '_pos' → logprob: -3.367877244949341
    5. '_start' → logprob: -4.492877006530762
    6. '_area' → logprob: -4.867877006530762
    7. '_index' → logprob: -5.242877006530762
    8. '_' → logprob: -5.742877006530762
    9. '_possible' → logprob: -5.867877006530762
    10. '_range' → logprob: -5.992877006530762

Token 167: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.05205763876438141
    2. 'b' → logprob: -3.8020577430725098
    3. '[]' → logprob: -4.55205774307251
    4. ' False' → logprob: -5.67705774307251
    5. 'c' → logprob: -5.80205774307251
    6. '0' → logprob: -5.80205774307251
    7. 'd' → logprob: -5.92705774307251
    8. 'True' → logprob: -6.67705774307251
    9. '[' → logprob: -7.05205774307251
    10. 'a' → logprob: -7.30205774307251

Token 168: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.44984161853790283
    2. '
' → logprob: -1.3248416185379028
    3. 'for' → logprob: -2.5748414993286133
    4. '<|end|>' → logprob: -4.824841499328613
    5. '   ' → logprob: -5.824841499328613
    6. '    
' → logprob: -6.449841499328613
    7. ' and' → logprob: -6.699841499328613
    8. ' if' → logprob: -6.824841499328613
    9. ' 
' → logprob: -7.074841499328613
    10. '  
' → logprob: -7.574841499328613

Token 169: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12958188354969025
    2. 'for' → logprob: -2.129581928253174
    3. '<|end|>' → logprob: -6.504581928253174
    4. '
' → logprob: -7.754581928253174
    5. '   ' → logprob: -8.004581451416016
    6. '	for' → logprob: -8.254581451416016
    7. ' 
' → logprob: -10.129581451416016
    8. '    
' → logprob: -11.004581451416016
    9. '<|end|>' → logprob: -11.004581451416016
    10. 'idx' → logprob: -11.754581451416016

Token 170: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04384029656648636
    2. ' for' → logprob: -3.1688404083251953
    3. 'False' → logprob: -7.793840408325195
    4. 'range' → logprob: -8.668840408325195
    5. 'True' → logprob: -9.418840408325195
    6. 'i' → logprob: -9.543840408325195
    7. 'idx' → logprob: -11.168840408325195
    8. ' False' → logprob: -11.168840408325195
    9. 'c' → logprob: -11.293840408325195
    10. ' ' → logprob: -11.793840408325195

Token 171: ' pos' (ID: 1253)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -1.0956188440322876
    2. ' i' → logprob: -1.2206188440322876
    3. 'idx' → logprob: -1.5956188440322876
    4. ' range' → logprob: -2.595618724822998
    5. 'i' → logprob: -2.845618724822998
    6. 'range' → logprob: -3.470618724822998
    7. 'x' → logprob: -5.970618724822998
    8. ' x' → logprob: -8.095619201660156
    9. 'pos' → logprob: -8.470619201660156
    10. 'r' → logprob: -8.720619201660156

Token 172: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008968125330284238
    2. 'in' → logprob: -7.12589693069458
    3. 'range' → logprob: -10.125896453857422
    4. ' ' → logprob: -10.500896453857422
    5. 's' → logprob: -11.875896453857422
    6. ' range' → logprob: -12.750896453857422
    7. '  ' → logprob: -13.125896453857422
    8. '   ' → logprob: -13.375896453857422
    9. '<|end|>' → logprob: -13.750896453857422
    10. 'd' → logprob: -13.875896453857422

Token 173: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0297784935683012
    2. 'range' → logprob: -3.529778480529785
    3. ' ' → logprob: -11.654778480529785
    4. '(range' → logprob: -11.904778480529785
    5. '   ' → logprob: -12.279778480529785
    6. '[' → logprob: -13.279778480529785
    7. '  ' → logprob: -13.404778480529785
    8. '	range' → logprob: -13.404778480529785
    9. 'r' → logprob: -14.404778480529785
    10. '    ' → logprob: -14.529778480529785

Token 174: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.18799878656864166
    2. '(c' → logprob: -1.8129987716674805
    3. '(d' → logprob: -4.8129987716674805
    4. 'b' → logprob: -10.31299877166748
    5. '(' → logprob: -10.93799877166748
    6. 'c' → logprob: -11.31299877166748
    7. '(max' → logprob: -11.43799877166748
    8. ' (' → logprob: -12.43799877166748
    9. '(min' → logprob: -12.43799877166748
    10. '[b' → logprob: -12.68799877166748

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7229748368263245
    2. ' -' → logprob: -1.0979747772216797
    3. '-' → logprob: -1.9729747772216797
    4. ' ,' → logprob: -3.4729747772216797
    5. ' +' → logprob: -5.09797477722168
    6. '+' → logprob: -5.59797477722168
    7. ',d' → logprob: -7.22297477722168
    8. ' ' → logprob: -8.72297477722168
    9. 'd' → logprob: -8.84797477722168
    10. '   ' → logprob: -9.47297477722168

Token 176: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08900195360183716
    2. ' d' → logprob: -2.4640018939971924
    3. '(d' → logprob: -11.089001655578613
    4. 'c' → logprob: -11.339001655578613
    5. ')d' → logprob: -11.339001655578613
    6. '>d' → logprob: -12.089001655578613
    7. '	d' → logprob: -12.714001655578613
    8. '=d' → logprob: -12.714001655578613
    9. ' ' → logprob: -12.839001655578613
    10. '   ' → logprob: -13.839001655578613

Token 177: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38141968846321106
    2. '):' → logprob: -1.5064196586608887
    3. ' +' → logprob: -2.5064196586608887
    4. '):
' → logprob: -5.006419658660889
    5. ' ):' → logprob: -5.256419658660889
    6. '-' → logprob: -7.006419658660889
    7. ')' → logprob: -7.881419658660889
    8. ' -' → logprob: -8.131420135498047
    9. ' ):
' → logprob: -8.381420135498047
    10. '):

' → logprob: -10.256420135498047

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6335576176643372
    2. '2' → logprob: -0.7585576176643372
    3. ' ' → logprob: -7.0085577964782715
    4. ')' → logprob: -11.008557319641113
    5. '3' → logprob: -11.008557319641113
    6. '+' → logprob: -11.133557319641113
    7. '  ' → logprob: -13.758557319641113
    8. '   ' → logprob: -13.883557319641113
    9. '-' → logprob: -14.508557319641113
    10. '):
' → logprob: -14.696057319641113

Token 179: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023035697638988495
    2. ' ):' → logprob: -4.148035526275635
    3. '):
' → logprob: -5.273035526275635
    4. '+' → logprob: -6.773035526275635
    5. ')' → logprob: -8.023036003112793
    6. ' ):
' → logprob: -9.023036003112793
    7. ' +' → logprob: -9.148036003112793
    8. '):
' → logprob: -9.898036003112793
    9. ' )' → logprob: -10.773036003112793
    10. '   ' → logprob: -10.898036003112793

Token 180: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27459949254989624
    2. '<|end|>' → logprob: -1.649599552154541
    3. ' if' → logprob: -4.024599552154541
    4. ' ' → logprob: -4.524599552154541
    5. '...' → logprob: -5.149599552154541
    6. '+' → logprob: -6.024599552154541
    7. '   ' → logprob: -6.399599552154541
    8. '    ' → logprob: -7.024599552154541
    9. ' s' → logprob: -7.024599552154541
    10. '#' → logprob: -7.274599552154541

Token 181: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06134721264243126
    2. ' if' → logprob: -3.686347246170044
    3. 'if' → logprob: -3.936347246170044
    4. '   ' → logprob: -4.436347007751465
    5. '<|end|>' → logprob: -6.936347007751465
    6. '#' → logprob: -7.186347007751465
    7. '...' → logprob: -7.186347007751465
    8. '           ' → logprob: -9.186347007751465
    9. ' ' → logprob: -9.436347007751465
    10. '
' → logprob: -9.561347007751465

Token 182: ' I' (ID: 357)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8427210450172424
    2. 'if' → logprob: -1.7177209854125977
    3. '<|end|>' → logprob: -1.8427209854125977
    4. '   ' → logprob: -2.2177209854125977
    5. '       ' → logprob: -2.5927209854125977
    6. '#' → logprob: -3.9677209854125977
    7. ' ' → logprob: -5.092720985412598
    8. '...' → logprob: -5.217720985412598
    9. '
' → logprob: -5.717720985412598
    10. '+' → logprob: -5.967720985412598

Token 183: ' guess' (ID: 11915)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.026075122877955437
    2. ' ' → logprob: -4.6510748863220215
    3. 'nd' → logprob: -4.9010748863220215
    4. '<|end|>' → logprob: -6.2760748863220215
    5. ' f' → logprob: -6.5260748863220215
    6. 'n' → logprob: -7.1510748863220215
    7. 's' → logprob: -7.4010748863220215
    8. '+' → logprob: -7.5260748863220215
    9. '  ' → logprob: -7.6510748863220215
    10. '   ' → logprob: -7.9010748863220215

Token 184: ' d' (ID: 272)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7072564363479614
    2. '       ' → logprob: -0.8322564363479614
    3. 'if' → logprob: -3.832256317138672
    4. '<|end|>' → logprob: -3.957256317138672
    5. '   ' → logprob: -4.332256317138672
    6. '    ' → logprob: -5.457256317138672
    7. ' s' → logprob: -5.582256317138672
    8. ' ' → logprob: -5.957256317138672
    9. 's' → logprob: -6.332256317138672
    10. '
' → logprob: -7.082256317138672

Token 185: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3529214560985565
    2. ' +' → logprob: -1.227921485900879
    3. ' -' → logprob: -6.477921485900879
    4. '-' → logprob: -6.477921485900879
    5. '<|end|>' → logprob: -7.102921485900879
    6. ')' → logprob: -8.477921485900879
    7. ' ' → logprob: -9.977921485900879
    8. '<|end|>' → logprob: -10.227921485900879
    9. ' <=' → logprob: -10.727921485900879
    10. '   ' → logprob: -10.915421485900879

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023250321100931615
    2. ' ' → logprob: -8.875232696533203
    3. '2' → logprob: -9.375232696533203
    4. '+' → logprob: -12.250232696533203
    5. '
' → logprob: -14.000232696533203
    6. '   ' → logprob: -14.500232696533203
    7. '```' → logprob: -14.875232696533203
    8. '<|end|>' → logprob: -15.812732696533203
    9. '

' → logprob: -16.375232696533203
    10. '...' → logprob: -16.375232696533203

Token 187: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34072810411453247
    2. '<|end|>' → logprob: -1.7157280445098877
    3. '+' → logprob: -3.3407280445098877
    4. ':
' → logprob: -3.7157280445098877
    5. '   ' → logprob: -4.090728282928467
    6. '<|end|>' → logprob: -4.590728282928467
    7. '       ' → logprob: -4.840728282928467
    8. '):' → logprob: -5.340728282928467
    9. '):
' → logprob: -5.840728282928467
    10. ' ' → logprob: -6.965728282928467

Token 188: ' safe' (ID: 7703)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10770796239376068
    2. ' d' → logprob: -2.357707977294922
    3. 'len' → logprob: -5.982707977294922
    4. '1' → logprob: -6.482707977294922
    5. ' len' → logprob: -6.482707977294922
    6. ' ' → logprob: -7.607707977294922
    7. '+' → logprob: -8.482707977294922
    8. '<|end|>' → logprob: -8.607707977294922
    9. '   ' → logprob: -8.732707977294922
    10. ' correct' → logprob: -9.482707977294922

Token 189: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4848977327346802
    2. '       ' → logprob: -1.2348977327346802
    3. '<|end|>' → logprob: -2.9848976135253906
    4. ':
' → logprob: -3.9848976135253906
    5. '   ' → logprob: -4.109897613525391
    6. ',' → logprob: -6.109897613525391
    7. '<|end|>' → logprob: -6.609897613525391
    8. '):' → logprob: -6.859897613525391
    9. '):
' → logprob: -7.234897613525391
    10. ' if' → logprob: -7.359897613525391

Token 190: ' the' (ID: 290)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.29806387424468994
    2. ' len' → logprob: -1.42306387424469
    3. 'n' → logprob: -4.9230637550354
    4. ' n' → logprob: -5.9230637550354
    5. 'd' → logprob: -6.2980637550354
    6. '(len' → logprob: -6.6730637550354
    7. 'range' → logprob: -6.9230637550354
    8. ' range' → logprob: -7.4230637550354
    9. ' d' → logprob: -8.048064231872559
    10. 's' → logprob: -8.048064231872559

Token 191: ' padding' (ID: 9583)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.036079224199056625
    2. 'range' → logprob: -4.411079406738281
    3. ' len' → logprob: -5.161079406738281
    4. 's' → logprob: -5.161079406738281
    5. ' range' → logprob: -5.411079406738281
    6. 'n' → logprob: -5.411079406738281
    7. '#' → logprob: -6.911079406738281
    8. 'd' → logprob: -7.661079406738281
    9. 'idx' → logprob: -8.411079406738281
    10. 'c' → logprob: -8.536079406738281

Token 192: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006820866838097572
    2. '<|end|>' → logprob: -5.5068206787109375
    3. ' if' → logprob: -6.3818206787109375
    4. ',' → logprob: -8.631820678710938
    5. '        
' → logprob: -8.756820678710938
    6. ' ' → logprob: -9.131820678710938
    7. '
' → logprob: -9.381820678710938
    8. '   ' → logprob: -9.381820678710938
    9. '        ' → logprob: -9.756820678710938
    10. '<|end|>' → logprob: -9.756820678710938

Token 194: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.17134714126586914
    2. ' if' → logprob: -2.296347141265869
    3. '       ' → logprob: -2.921347141265869
    4. '   ' → logprob: -5.921347141265869
    5. '           ' → logprob: -8.796346664428711
    6. '	if' → logprob: -9.421346664428711
    7. '<|end|>' → logprob: -10.671346664428711
    8. '#' → logprob: -11.296346664428711
    9. ' ' → logprob: -11.421346664428711
    10. '    ' → logprob: -12.046346664428711

Token 195: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.42897409200668335
    2. 's' → logprob: -1.0539741516113281
    3. '(s' → logprob: -9.553974151611328
    4. ' ' → logprob: -9.678974151611328
    5. ' (' → logprob: -10.178974151611328
    6. '   ' → logprob: -10.428974151611328
    7. ' not' → logprob: -10.553974151611328
    8. '  ' → logprob: -11.366474151611328
    9. '	s' → logprob: -11.991474151611328
    10. '(' → logprob: -12.241474151611328

Token 196: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -12.750004768371582
    3. 'pos' → logprob: -14.125004768371582
    4. ' [' → logprob: -14.625004768371582
    5. '[position' → logprob: -15.375004768371582
    6. '   ' → logprob: -15.500004768371582
    7. '[idx' → logprob: -16.3750057220459
    8. '[p' → logprob: -16.5000057220459
    9. '[next' → logprob: -17.5000057220459
    10. '[s' → logprob: -17.6250057220459

Token 197: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016211846843361855
    2. ']==' → logprob: -4.141211986541748
    3. ']=='' → logprob: -9.26621150970459
    4. ':' → logprob: -10.39121150970459
    5. '==' → logprob: -10.64121150970459
    6. ' ]' → logprob: -11.64121150970459
    7. 's' → logprob: -12.64121150970459
    8. ']!=' → logprob: -12.89121150970459
    9. '-' → logprob: -13.01621150970459
    10. ':]' → logprob: -13.14121150970459

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004175510257482529
    2. '2' → logprob: -5.504175662994385
    3. ''#' → logprob: -10.129175186157227
    4. ' ' → logprob: -10.379175186157227
    5. ''' → logprob: -12.129175186157227
    6. '-' → logprob: -12.129175186157227
    7. '3' → logprob: -12.504175186157227
    8. ''s' → logprob: -12.629175186157227
    9. ']' → logprob: -13.254175186157227
    10. 's' → logprob: -13.504175186157227

Token 199: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09214087575674057
    2. ']==' → logprob: -2.4671409130096436
    3. ']=='' → logprob: -6.2171406745910645
    4. ' ]' → logprob: -7.4671406745910645
    5. ':' → logprob: -8.217141151428223
    6. ']!=' → logprob: -9.217141151428223
    7. '==' → logprob: -9.467141151428223
    8. ' ==' → logprob: -10.967141151428223
    9. 's' → logprob: -10.967141151428223
    10. '']' → logprob: -11.217141151428223

Token 200: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.13011139631271362
    2. ' ==' → logprob: -2.1301114559173584
    3. 's' → logprob: -6.505111217498779
    4. '=='' → logprob: -7.380111217498779
    5. '!=' → logprob: -7.630111217498779
    6. ' !=' → logprob: -8.505111694335938
    7. '=' → logprob: -9.630111694335938
    8. ''' → logprob: -10.442611694335938
    9. ''s' → logprob: -10.567611694335938
    10. ' s' → logprob: -10.817611694335938

Token 201: ' '.'' (ID: 64762)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.012975155375897884
    2. ''#' → logprob: -4.387975215911865
    3. ''' → logprob: -8.012974739074707
    4. ' '.'' → logprob: -9.387974739074707
    5. '"."' → logprob: -10.637974739074707
    6. ''s' → logprob: -11.012974739074707
    7. ' '#'' → logprob: -12.512974739074707
    8. '.' → logprob: -13.012974739074707
    9. '".' → logprob: -14.387974739074707
    10. 's' → logprob: -14.512974739074707

Token 202: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10021162778139114
    2. 'and' → logprob: -2.3502116203308105
    3. ' ' → logprob: -13.225212097167969
    4. '<|end|>' → logprob: -13.725212097167969
    5. '.' → logprob: -14.725212097167969
    6. '==' → logprob: -15.350212097167969
    7. ' or' → logprob: -15.475212097167969
    8. ')' → logprob: -15.850212097167969
    9. '   ' → logprob: -15.975212097167969
    10. ',' → logprob: -15.975212097167969

Token 203: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.048799920827150345
    2. ' s' → logprob: -3.048799991607666
    3. '   ' → logprob: -9.048799514770508
    4. ' ' → logprob: -10.173799514770508
    5. '  ' → logprob: -10.673799514770508
    6. '       ' → logprob: -11.298799514770508
    7. '    ' → logprob: -11.923799514770508
    8. '     ' → logprob: -12.298799514770508
    9. '           ' → logprob: -12.923799514770508
    10. '	s' → logprob: -13.298799514770508

Token 204: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.0005582740413956344
    2. 'pos' → logprob: -7.750558376312256
    3. '[' → logprob: -9.625557899475098
    4. ' [' → logprob: -10.500557899475098
    5. 's' → logprob: -10.875557899475098
    6. '[s' → logprob: -12.625557899475098
    7. '   ' → logprob: -12.750557899475098
    8. '[
' → logprob: -14.000557899475098
    9. ' s' → logprob: -14.250557899475098
    10. '

' → logprob: -14.375557899475098

Token 205: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01709054224193096
    2. '+' → logprob: -4.142090320587158
    3. '-' → logprob: -8.142090797424316
    4. ' ]' → logprob: -8.392090797424316
    5. '']' → logprob: -8.392090797424316
    6. ']==' → logprob: -8.517090797424316
    7. ' +' → logprob: -10.392090797424316
    8. '   ' → logprob: -10.642090797424316
    9. ' ' → logprob: -11.267090797424316
    10. '+]' → logprob: -11.642090797424316

Token 206: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4287145435810089
    2. ' ==' → logprob: -1.0537145137786865
    3. '=='' → logprob: -12.428714752197266
    4. '  ' → logprob: -12.803714752197266
    5. ' ' → logprob: -13.303714752197266
    6. ']==' → logprob: -13.928714752197266
    7. '=' → logprob: -14.053714752197266
    8. 's' → logprob: -14.553714752197266
    9. '   ' → logprob: -14.553714752197266
    10. '===' → logprob: -14.678714752197266

Token 207: ' '.'' (ID: 64762)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0005562512087635696
    2. ' '.'' → logprob: -7.625556468963623
    3. ''#' → logprob: -9.875555992126465
    4. '"."' → logprob: -12.000555992126465
    5. 's' → logprob: -12.500555992126465
    6. '.' → logprob: -12.750555992126465
    7. ''' → logprob: -12.875555992126465
    8. '('.')' → logprob: -14.250555992126465
    9. ''s' → logprob: -14.625555992126465
    10. '   ' → logprob: -16.50055694580078

Token 208: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03805079311132431
    2. 'and' → logprob: -3.288050889968872
    3. ' ' → logprob: -11.913050651550293
    4. '   ' → logprob: -14.413050651550293
    5. '    ' → logprob: -14.788050651550293
    6. '<|end|>' → logprob: -14.913050651550293
    7. '           ' → logprob: -15.163050651550293
    8. '```' → logprob: -15.788050651550293
    9. '  ' → logprob: -16.03805160522461
    10. '       ' → logprob: -16.28805160522461

Token 209: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0036611182149499655
    2. ' s' → logprob: -5.628661155700684
    3. '       ' → logprob: -10.253661155700684
    4. '           ' → logprob: -10.753661155700684
    5. '               ' → logprob: -13.878661155700684
    6. '   ' → logprob: -14.003661155700684
    7. '          ' → logprob: -14.628661155700684
    8. '        ' → logprob: -14.753661155700684
    9. '         ' → logprob: -14.878661155700684
    10. ' ' → logprob: -15.003661155700684

Token 210: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -6.432518421206623e-05
    2. 'pos' → logprob: -10.6250638961792
    3. ' [' → logprob: -10.8750638961792
    4. '[' → logprob: -11.1250638961792
    5. '[
' → logprob: -13.2500638961792
    6. ' pos' → logprob: -14.2500638961792
    7. '[(' → logprob: -14.5000638961792
    8. '   ' → logprob: -14.7500638961792
    9. '[p' → logprob: -14.7500638961792
    10. '(pos' → logprob: -14.8750638961792

Token 211: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009128442965447903
    2. ' +' → logprob: -5.634128570556641
    3. '[pos' → logprob: -5.759128570556641
    4. '-' → logprob: -6.384128570556641
    5. ']' → logprob: -7.884128570556641
    6. '[' → logprob: -9.25912857055664
    7. ' ==' → logprob: -9.88412857055664
    8. '1' → logprob: -10.13412857055664
    9. '[next' → logprob: -10.88412857055664
    10. '   ' → logprob: -11.13412857055664

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6944665312767029
    2. ']' → logprob: -1.3194665908813477
    3. ''.' → logprob: -1.8194665908813477
    4. '']' → logprob: -3.4444665908813477
    5. ''' → logprob: -3.5694665908813477
    6. '+' → logprob: -5.194466590881348
    7. '-' → logprob: -6.194466590881348
    8. ' '.'' → logprob: -7.194466590881348
    9. ''#' → logprob: -7.319466590881348
    10. ' ' → logprob: -7.319466590881348

Token 213: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006184502970427275
    2. ']==' → logprob: -5.3811845779418945
    3. '==' → logprob: -6.8811845779418945
    4. ' ==' → logprob: -8.256184577941895
    5. '']' → logprob: -8.756184577941895
    6. ' ]' → logprob: -9.256184577941895
    7. ']=='' → logprob: -11.131184577941895
    8. ''' → logprob: -13.131184577941895
    9. '[' → logprob: -13.631184577941895
    10. '"]' → logprob: -13.881184577941895

Token 214: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3872005045413971
    2. '==' → logprob: -1.1372004747390747
    3. '=='' → logprob: -8.637200355529785
    4. ']==' → logprob: -9.512200355529785
    5. ']' → logprob: -10.387200355529785
    6. ' =='' → logprob: -11.387200355529785
    7. ''' → logprob: -12.137200355529785
    8. ' ' → logprob: -12.262200355529785
    9. '[' → logprob: -12.387200355529785
    10. '=' → logprob: -12.887200355529785

Token 215: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.00031508569372817874
    2. ' '.' → logprob: -8.375314712524414
    3. ' '.'' → logprob: -9.500314712524414
    4. '.' → logprob: -12.375314712524414
    5. ''' → logprob: -13.000314712524414
    6. '':' → logprob: -13.750314712524414
    7. '".' → logprob: -14.500314712524414
    8. '"."' → logprob: -14.500314712524414
    9. '.'.' → logprob: -14.500314712524414
    10. ''#' → logprob: -15.625314712524414

Token 216: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22890903055667877
    2. ':
' → logprob: -1.6039090156555176
    3. '):
' → logprob: -6.478909015655518
    4. '):' → logprob: -6.853909015655518
    5. '':' → logprob: -7.853909015655518
    6. '       ' → logprob: -9.353909492492676
    7. ' :
' → logprob: -9.478909492492676
    8. ' :' → logprob: -9.478909492492676
    9. '():
' → logprob: -9.603909492492676
    10. '':
' → logprob: -9.853909492492676

Token 217: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02285650745034218
    2. '               ' → logprob: -4.522856712341309
    3. '       ' → logprob: -5.022856712341309
    4. '<|end|>' → logprob: -6.272856712341309
    5. ':
' → logprob: -6.772856712341309
    6. ':' → logprob: -6.897856712341309
    7. '<|end|>' → logprob: -8.522856712341309
    8. '            
' → logprob: -9.022856712341309
    9. '   ' → logprob: -9.147856712341309
    10. ',' → logprob: -9.147856712341309

Token 218: ' overt' (ID: 64535)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.06442909687757492
    2. '           ' → logprob: -3.5644290447235107
    3. ' overt' → logprob: -3.8144290447235107
    4. '   ' → logprob: -4.68942928314209
    5. '       ' → logprob: -6.56442928314209
    6. ' o' → logprob: -6.93942928314209
    7. 'print' → logprob: -8.43942928314209
    8. ' over' → logprob: -9.56442928314209
    9. '               ' → logprob: -10.31442928314209
    10. 'over' → logprob: -10.43942928314209

Token 219: 'aken' (ID: 8371)
  Prédit: 'aken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aken' → logprob: -2.4987974029500037e-05
    2. 'aking' → logprob: -12.000024795532227
    3. 'taken' → logprob: -12.375024795532227
    4. 'a' → logprob: -12.625024795532227
    5. 'ake' → logprob: -12.625024795532227
    6. 'ak' → logprob: -12.625024795532227
    7. '   ' → logprob: -13.375024795532227
    8. '_taken' → logprob: -13.625024795532227
    9. 'ken' → logprob: -14.875024795532227
    10. 'an' → logprob: -15.500024795532227

Token 220: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760312080383301
    2. ' =' → logprob: -0.8260312080383301
    3. '=True' → logprob: -9.326030731201172
    4. ' ' → logprob: -13.826030731201172
    5. '   ' → logprob: -14.451030731201172
    6. '           ' → logprob: -15.076030731201172
    7. '       ' → logprob: -15.701030731201172
    8. 'e' → logprob: -15.951030731201172
    9. '=true' → logprob: -16.826030731201172
    10. '  ' → logprob: -16.826030731201172

Token 221: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00020354038861114532
    2. ' True' → logprob: -8.500203132629395
    3. '   ' → logprob: -16.75020408630371
    4. '=True' → logprob: -20.00020408630371
    5. '(True' → logprob: -20.12520408630371
    6. 'true' → logprob: -20.75020408630371
    7. 'False' → logprob: -21.25020408630371
    8. 'TRUE' → logprob: -22.00020408630371
    9. ' ' → logprob: -22.12520408630371
    10. '.True' → logprob: -22.62520408630371

Token 222: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001254693343071267
    2. '   ' → logprob: -9.375125885009766
    3. '		' → logprob: -11.625125885009766
    4. ' break' → logprob: -11.625125885009766
    5. '       ' → logprob: -12.000125885009766
    6. ' if' → logprob: -12.875125885009766
    7. '               ' → logprob: -13.000125885009766
    8. '            
' → logprob: -13.000125885009766
    9. '          ' → logprob: -13.125125885009766
    10. '            ' → logprob: -13.375125885009766

Token 223: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000522650487255305
    2. '   ' → logprob: -7.875522613525391
    3. ' if' → logprob: -9.62552261352539
    4. '		' → logprob: -10.75052261352539
    5. ' break' → logprob: -11.12552261352539
    6. '       ' → logprob: -11.50052261352539
    7. 'if' → logprob: -12.00052261352539
    8. '    ' → logprob: -12.50052261352539
    9. '            ' → logprob: -12.50052261352539
    10. '            
' → logprob: -12.75052261352539

Token 224: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03840211033821106
    2. 'break' (adapté à ' break') → logprob: -3.5384020805358887
    3. ' break' → logprob: -4.788402080535889
    4. '		' → logprob: -9.538402557373047
    5. '               ' → logprob: -9.663402557373047
    6. '       ' → logprob: -9.788402557373047
    7. '            ' → logprob: -10.288402557373047
    8. '	break' → logprob: -10.288402557373047
    9. '   ' → logprob: -11.663402557373047
    10. '          ' → logprob: -12.413402557373047

Token 225: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06246750056743622
    2. ' ' → logprob: -4.062467575073242
    3. ' if' → logprob: -4.687467575073242
    4. ' 
' → logprob: -5.187467575073242
    5. '<|end|>' → logprob: -5.187467575073242
    6. ' else' → logprob: -5.437467575073242
    7. '    
' → logprob: -5.937467575073242
    8. '    ' → logprob: -6.062467575073242
    9. '  
' → logprob: -6.187467575073242
    10. '  ' → logprob: -6.312467575073242

Token 226: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17431464791297913
    2. '   ' → logprob: -1.9243146181106567
    3. ' if' → logprob: -4.299314498901367
    4. '
' → logprob: -8.424314498901367
    5. 'else' → logprob: -9.924314498901367
    6. 'print' → logprob: -9.924314498901367
    7. '    
' → logprob: -10.299314498901367
    8. ')' → logprob: -11.424314498901367
    9. '  
' → logprob: -11.549314498901367
    10. ' 
' → logprob: -11.799314498901367

Token 227: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011720094829797745
    2. ' if' → logprob: -4.511720180511475
    3. '   ' → logprob: -7.886720180511475
    4. 'print' → logprob: -8.386719703674316
    5. '
' → logprob: -9.761719703674316
    6. '    
' → logprob: -12.386719703674316
    7. ' 
' → logprob: -13.261719703674316
    8. '  
' → logprob: -13.761719703674316
    9. 'else' → logprob: -13.886719703674316
    10. ')' → logprob: -14.386719703674316

Token 228: ' overt' (ID: 64535)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.37656378746032715
    2. 'not' → logprob: -1.5015637874603271
    3. ' overt' → logprob: -2.501563787460327
    4. 'o' → logprob: -4.751564025878906
    5. '(not' → logprob: -9.251564025878906
    6. ' o' → logprob: -9.251564025878906
    7. ' ' → logprob: -9.814064025878906
    8. 'over' → logprob: -10.376564025878906
    9. 'ot' → logprob: -10.751564025878906
    10. 'n' → logprob: -11.001564025878906

Token 229: 'aken' (ID: 8371)
  Prédit: 'aken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aken' → logprob: -0.0007034952868707478
    2. 'aten' → logprob: -7.37570333480835
    3. 'taken' → logprob: -10.000703811645508
    4. 'ken' → logprob: -11.250703811645508
    5. 'an' → logprob: -11.875703811645508
    6. 'en' → logprob: -12.250703811645508
    7. 'n' → logprob: -13.375703811645508
    8. 'anen' → logprob: -13.375703811645508
    9. '_taken' → logprob: -14.125703811645508
    10. 'ten' → logprob: -14.125703811645508

Token 230: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04304635152220726
    2. '==' → logprob: -3.543046236038208
    3. ':
' → logprob: -4.418046474456787
    4. ' ==' → logprob: -6.793046474456787
    5. '=' → logprob: -11.168045997619629
    6. ' :' → logprob: -11.543045997619629
    7. 'print' → logprob: -14.168045997619629
    8. ':

' → logprob: -14.418045997619629
    9. ' =' → logprob: -14.543045997619629
    10. '=True' → logprob: -14.793045997619629

Token 231: ' False' (ID: 7983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.6749441623687744
    2. 'False' → logprob: -0.9249441623687744
    3. ' True' → logprob: -2.6749441623687744
    4. ' False' → logprob: -3.6749441623687744
    5. '=True' → logprob: -16.299943923950195
    6. '(True' → logprob: -17.924943923950195
    7. '=False' → logprob: -18.049943923950195
    8. ' ' → logprob: -18.174943923950195
    9. 'Yes' → logprob: -19.049943923950195
    10. '(False' → logprob: -19.049943923950195

Token 232: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15286698937416077
    2. ':
' → logprob: -2.027867078781128
    3. '   ' → logprob: -5.027866840362549
    4. '       ' → logprob: -5.652866840362549
    5. 'print' → logprob: -10.027867317199707
    6. '):
' → logprob: -11.902867317199707
    7. ' print' → logprob: -12.027867317199707
    8. ' :' → logprob: -12.402867317199707
    9. '():
' → logprob: -12.527867317199707
    10. '):' → logprob: -12.777867317199707

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0891365259885788
    2. '   ' → logprob: -2.5891366004943848
    3. 'print' → logprob: -4.714136600494385
    4. ' print' → logprob: -6.714136600494385
    5. '
' → logprob: -12.589136123657227
    6. '           ' → logprob: -12.589136123657227
    7. ' ' → logprob: -13.089136123657227
    8. '     ' → logprob: -13.464136123657227
    9. '	print' → logprob: -13.839136123657227
    10. '```' → logprob: -14.339136123657227

Token 234: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0002715873415581882
    2. ' print' → logprob: -8.250271797180176
    3. '   ' → logprob: -11.500271797180176
    4. '       ' → logprob: -16.25027084350586
    5. '	print' → logprob: -16.75027084350586
    6. '
' → logprob: -17.25027084350586
    7. ' ' → logprob: -18.25027084350586
    8. '           ' → logprob: -19.00027084350586
    9. '  ' → logprob: -19.50027084350586
    10. '```' → logprob: -20.00027084350586

Token 235: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0007105246186256409
    2. '(' → logprob: -7.250710487365723
    3. '('' → logprob: -14.250710487365723
    4. '(
' → logprob: -17.12571144104004
    5. '(

' → logprob: -19.75071144104004
    6. '()' → logprob: -19.87571144104004
    7. '("""' → logprob: -19.87571144104004
    8. ' ("' → logprob: -20.12571144104004
    9. '("("' → logprob: -20.12571144104004
    10. '("")' → logprob: -20.25071144104004

Token 236: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.000920869642868638
    2. '"No' → logprob: -7.00092077255249
    3. 'Yes' → logprob: -12.000921249389648
    4. '("' → logprob: -13.375921249389648
    5. '(No' → logprob: -14.125921249389648
    6. '"' → logprob: -14.500921249389648
    7. ' No' → logprob: -15.250921249389648
    8. 'NO' → logprob: -16.00092124938965
    9. '“No' → logprob: -16.62592124938965
    10. '_No' → logprob: -17.50092124938965

Token 237: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05628247931599617
    2. ')
' → logprob: -3.3062825202941895
    3. '")' → logprob: -4.0562825202941895
    4. '")
' → logprob: -7.9312825202941895
    5. '   ' → logprob: -8.056282043457031
    6. ')return' → logprob: -10.931282043457031
    7. '       ' → logprob: -11.181282043457031
    8. '')' → logprob: -11.181282043457031
    9. '<|end|>' → logprob: -11.181282043457031
    10. ')")
' → logprob: -12.306282043457031

Token 238: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16111692786216736
    2. '       ' → logprob: -2.1611168384552
    3. 'else' → logprob: -3.4111168384552
    4. 'print' → logprob: -7.786117076873779
    5. ' else' → logprob: -9.286116600036621
    6. ')' → logprob: -10.661116600036621
    7. '```' → logprob: -11.161116600036621
    8. ' ' → logprob: -11.411116600036621
    9. '
' → logprob: -11.536116600036621
    10. '           ' → logprob: -11.661116600036621

Token 239: ' exit' (ID: 10654)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17658156156539917
    2. '       ' → logprob: -2.176581621170044
    3. 'else' → logprob: -3.176581621170044
    4. 'exit' (adapté à ' exit') → logprob: -5.051581382751465
    5. ' else' → logprob: -9.301581382751465
    6. '	exit' → logprob: -9.426581382751465
    7. ' exit' → logprob: -9.676581382751465
    8. ')' → logprob: -10.301581382751465
    9. ' ' → logprob: -11.051581382751465
    10. '           ' → logprob: -11.301581382751465

Token 240: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1213136836886406
    2. '()

' → logprob: -2.3713135719299316
    3. '()
' → logprob: -3.8713135719299316
    4. '()\' → logprob: -10.12131404876709
    5. '()

' → logprob: -11.99631404876709
    6. '()`' → logprob: -12.74631404876709
    7. '()
' → logprob: -12.87131404876709
    8. '(' → logprob: -13.99631404876709
    9. '()


' → logprob: -14.74631404876709
    10. '())' → logprob: -14.87131404876709

Token 241: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.75
    3. '```' → logprob: -16.75
    4. '
' → logprob: -17.375
    5. 'Print' → logprob: -18.375
    6. '  
' → logprob: -19.875
    7. '#print' → logprob: -19.875
    8. '    
' → logprob: -20.0
    9. '#' → logprob: -20.375
    10. '``' → logprob: -20.75

Token 242: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6240566083070007e-06
    2. ' print' → logprob: -13.625001907348633
    3. '#' → logprob: -16.000001907348633
    4. 'Print' → logprob: -16.500001907348633
    5. '#print' → logprob: -16.625001907348633
    6. 'if' → logprob: -16.875001907348633
    7. '	print' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.625001907348633
    9. 'Yes' → logprob: -18.750001907348633
    10. 'for' → logprob: -19.500001907348633

Token 243: ' all' (ID: 722)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.2688714861869812
    2. ' True' → logprob: -1.768871545791626
    3. 'a' → logprob: -3.268871545791626
    4. 'c' → logprob: -4.268871307373047
    5. '(True' → logprob: -5.018871307373047
    6. 'print' → logprob: -6.393871307373047
    7. ' c' → logprob: -6.643871307373047
    8. ' a' → logprob: -6.768871307373047
    9. 's' → logprob: -6.768871307373047
    10. '"' → logprob: -7.518871307373047

Token 244: ' is' (ID: 382)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3358347415924072
    2. 'right' → logprob: -1.3358347415924072
    3. 'ok' → logprob: -1.8358347415924072
    4. 'conditions' → logprob: -2.8358347415924072
    5. 'checks' → logprob: -3.7108347415924072
    6. 'is' → logprob: -4.085834503173828
    7. 'good' → logprob: -4.085834503173828
    8. '#' → logprob: -4.085834503173828
    9. 'possible' → logprob: -4.210834503173828
    10. 'passed' → logprob: -4.210834503173828

Token 245: ' fine' (ID: 8975)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ok' → logprob: -1.2556406259536743
    2. 'well' → logprob: -1.7556406259536743
    3. 'good' → logprob: -2.1306405067443848
    4. 'okay' → logprob: -2.1306405067443848
    5. 'True' → logprob: -3.0056405067443848
    6. 'Okay' → logprob: -3.3806405067443848
    7. 'Good' → logprob: -3.3806405067443848
    8. 'Yes' → logprob: -3.6306405067443848
    9. ''ok' → logprob: -3.6306405067443848
    10. 'Well' → logprob: -3.7556405067443848

Token 246: ' then' (ID: 1815)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.1008713702030946e-06
    2. ' print' → logprob: -13.250001907348633
    3. '   ' → logprob: -15.500001907348633
    4. '
' → logprob: -17.875001907348633
    5. '.print' → logprob: -18.000001907348633
    6. '	print' → logprob: -18.125001907348633
    7. '(print' → logprob: -18.625001907348633
    8. '```' → logprob: -18.625001907348633
    9. 'Print' → logprob: -18.750001907348633
    10. '    
' → logprob: -19.375001907348633

Token 247: ' yes' (ID: 14531)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.25
    3. '   ' → logprob: -18.875
    4. '
' → logprob: -21.5
    5. '	print' → logprob: -21.875
    6. '.print' → logprob: -22.375
    7. '#print' → logprob: -22.375
    8. '    
' → logprob: -22.5
    9. '```' → logprob: -22.5
    10. 'printf' → logprob: -22.875

Token 248: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.0
    3. '```' → logprob: -20.0
    4. '   ' → logprob: -20.125
    5. '	print' → logprob: -21.25
    6. '
' → logprob: -21.25
    7. 'Print' → logprob: -21.375
    8. '.print' → logprob: -22.125
    9. '#print' → logprob: -22.375
    10. '(print' → logprob: -22.875

Token 249: ' whatever' (ID: 13485)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. ' print' → logprob: -14.250000953674316
    3. '   ' → logprob: -16.25
    4. '	print' → logprob: -21.375
    5. '.print' → logprob: -23.375
    6. 'Print' → logprob: -23.75
    7. '```' → logprob: -23.75
    8. '
' → logprob: -24.625
    9. 'printf' → logprob: -24.75
    10. '       ' → logprob: -25.0

Token 250: '...
' (ID: 4908)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.816093228830141e-06
    2. ' print' → logprob: -13.37500286102295
    3. '```' → logprob: -14.37500286102295
    4. '   ' → logprob: -14.87500286102295
    5. '
' → logprob: -15.62500286102295
    6. '	print' → logprob: -16.625001907348633
    7. 'Print' → logprob: -17.125001907348633
    8. '(print' → logprob: -18.500001907348633
    9. '#print' → logprob: -18.750001907348633
    10. '.print' → logprob: -18.875001907348633

Token 251: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.5941604690160602e-05
    2. ' print' → logprob: -10.625025749206543
    3. 'Print' → logprob: -14.500025749206543
    4. '<|end|>' → logprob: -15.000025749206543
    5. 'Yes' → logprob: -15.125025749206543
    6. '```' → logprob: -15.625025749206543
    7. '	print' → logprob: -15.875025749206543
    8. '#print' → logprob: -16.25002670288086
    9. '.print' → logprob: -16.62502670288086
    10. '(print' → logprob: -17.12502670288086

Token 252: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0002624086628202349
    2. '(' → logprob: -8.250262260437012
    3. '('' → logprob: -14.125262260437012
    4. '("("' → logprob: -14.750262260437012
    5. '(
' → logprob: -17.750263214111328
    6. '("(' → logprob: -18.750263214111328
    7. '"' → logprob: -19.375263214111328
    8. '()' → logprob: -19.875263214111328
    9. '("")' → logprob: -19.875263214111328
    10. ' ("' → logprob: -19.875263214111328

Token 253: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -4.320199877838604e-07
    2. '"' → logprob: -15.0
    3. ' Yes' → logprob: -16.75
    4. 'Ye' → logprob: -17.25
    5. 'YES' → logprob: -17.625
    6. 'Yeah' → logprob: -20.375
    7. 'No' → logprob: -21.5
    8. '“Yes' → logprob: -21.625
    9. 'Oui' → logprob: -21.875
    10. 'Sure' → logprob: -22.125

Token 254: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00044401636114344
    2. ')' → logprob: -7.750443935394287
    3. ')")' → logprob: -11.250444412231445
    4. '")
' → logprob: -15.125444412231445
    5. '')' → logprob: -16.125444412231445
    6. '!")' → logprob: -18.125444412231445
    7. '}")' → logprob: -18.375444412231445
    8. '```' → logprob: -18.625444412231445
    9. ' ")' → logprob: -18.750444412231445
    10. '"' → logprob: -19.000444412231445


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 252
Tokens correctement prédits (1ère position, stricte): 82
Tokens correctement prédits (1ère position, avec adaptation): 87
Tokens correctement prédits (top 10): 171
Précision stricte (1ère position): 32.54%
Précision adaptée (1ère position): 34.52%
Précision (top 10): 67.86%
================================================================================
