================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
get = lambda: int(input())
def calc(n):
    res = 999999
    for i in range(1, n):
        j = n - i
        f = 0
        for el in (str(i)+str(j)):
            f += int(el)
        if f < res:
            res = f
    return res

if __name__=='__main__':
    n = get()
    print(calc(n))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'get' (ID: 522)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' lambda' (ID: 27871)
  → Token d'amorce (pas de prédiction)

Token 3: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2883833646774292
    2. ' s' → logprob: -2.4133834838867188
    3. ' ' → logprob: -2.9133834838867188
    4. ' a' → logprob: -3.2883834838867188
    5. ' space' → logprob: -3.2883834838867188
    6. 'x' → logprob: -5.038383483886719
    7. ' (' → logprob: -5.288383483886719
    8. ' get' → logprob: -5.538383483886719
    9. ' ' → logprob: -5.913383483886719
    10. '_' → logprob: -6.288383483886719

Token 4: ' int' (ID: 677)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.6012745499610901
    2. ' input' → logprob: -1.2262744903564453
    3. 'input' → logprob: -2.8512744903564453
    4. ' ' → logprob: -3.4762744903564453
    5. 'None' → logprob: -3.6012744903564453
    6. ' []' → logprob: -3.7262744903564453
    7. ' True' → logprob: -5.476274490356445
    8. ' int' → logprob: -6.476274490356445
    9. '[]' → logprob: -6.601274490356445
    10. ' '' → logprob: -6.976274490356445

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00023512568441219628
    2. '('' → logprob: -8.875235557556152
    3. ' (' → logprob: -10.500235557556152
    4. '()' → logprob: -11.250235557556152
    5. '(
' → logprob: -11.500235557556152
    6. '("("' → logprob: -12.125235557556152
    7. '.' → logprob: -12.250235557556152
    8. '("")' → logprob: -12.250235557556152
    9. ''' → logprob: -12.375235557556152
    10. '32' → logprob: -12.875235557556152

Token 6: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1804269403219223
    2. '()' → logprob: -2.430426836013794
    3. ')' → logprob: -3.055426836013794
    4. '(' → logprob: -3.555426836013794
    5. '(()' → logprob: -8.305426597595215
    6. ' ())' → logprob: -8.305426597595215
    7. '()))' → logprob: -8.555426597595215
    8. '(""))' → logprob: -9.055426597595215
    9. '();)' → logprob: -9.305426597595215
    10. '()>' → logprob: -9.555426597595215

Token 7: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04350628703832626
    2. '()' → logprob: -3.293506383895874
    3. '(
' → logprob: -6.293506145477295
    4. '_' → logprob: -6.293506145477295
    5. ')' → logprob: -8.043506622314453
    6. '#' → logprob: -8.293506622314453
    7. '\n' → logprob: -8.793506622314453
    8. '*' → logprob: -8.918506622314453
    9. ' ' → logprob: -9.043506622314453
    10. 's' → logprob: -9.043506622314453

Token 8: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.0966310501098633
    2. ' add' → logprob: -1.2216310501098633
    3. ' factorial' → logprob: -1.8466310501098633
    4. ' get' → logprob: -2.4716310501098633
    5. ' space' → logprob: -3.4716310501098633
    6. ' ' → logprob: -3.7216310501098633
    7. ' calculate' → logprob: -4.096631050109863
    8. ' foo' → logprob: -4.221631050109863
    9. ' my' → logprob: -4.846631050109863
    10. ' test' → logprob: -4.846631050109863

Token 9: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1541842222213745
    2. '_' → logprob: -2.404184341430664
    3. '_sum' → logprob: -4.654184341430664
    4. ')' → logprob: -4.779184341430664
    5. '_factor' → logprob: -5.154184341430664
    6. 'ution' → logprob: -5.904184341430664
    7. '_value' → logprob: -6.279184341430664
    8. '```' → logprob: -6.654184341430664
    9. '_area' → logprob: -6.779184341430664
    10. 'ulate' → logprob: -6.779184341430664

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009540624916553497
    2. ')' → logprob: -4.884540557861328
    3. ',' → logprob: -6.759540557861328
    4. '*' → logprob: -8.259540557861328
    5. '**' → logprob: -8.634540557861328
    6. ':' → logprob: -9.009540557861328
    7. '=' → logprob: -10.259540557861328
    8. '):
' → logprob: -10.259540557861328
    9. ' ):' → logprob: -10.384540557861328
    10. ' *' → logprob: -11.259540557861328

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02723574824631214
    2. ':' → logprob: -4.152235984802246
    3. '(n' → logprob: -5.777235984802246
    4. ' return' → logprob: -6.652235984802246
    5. 'n' → logprob: -7.027235984802246
    6. '(' → logprob: -7.027235984802246
    7. '\n' → logprob: -7.027235984802246
    8. '    ' → logprob: -7.277235984802246
    9. '\' → logprob: -7.277235984802246
    10. ' ' → logprob: -7.777235984802246

Token 12: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49917441606521606
    2. ' ' → logprob: -1.7491743564605713
    3. ' return' → logprob: -2.9991743564605713
    4. '    ' → logprob: -3.7491743564605713
    5. '0' → logprob: -4.24917459487915
    6. ' 
' → logprob: -4.24917459487915
    7. 'n' → logprob: -4.24917459487915
    8. ' \' → logprob: -4.24917459487915
    9. '\n' → logprob: -4.37417459487915
    10. 's' → logprob: -4.62417459487915

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017827380448579788
    2. '=' → logprob: -4.51782751083374
    3. ' ' → logprob: -5.26782751083374
    4. ' +=' → logprob: -6.51782751083374
    5. '  ' → logprob: -9.767827033996582
    6. '   ' → logprob: -10.767827033996582
    7. '+=' → logprob: -12.017827033996582
    8. ' *=' → logprob: -12.142827033996582
    9. ' |=' → logprob: -12.392827033996582
    10. ' .=' → logprob: -12.517827033996582

Token 14: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7099896669387817
    2. '0' → logprob: -0.8349896669387817
    3. ' n' → logprob: -2.709989547729492
    4. 'n' → logprob: -4.959989547729492
    5. '1' → logprob: -7.209989547729492
    6. '   ' → logprob: -10.584989547729492
    7. '10' → logprob: -10.772489547729492
    8. ' []' → logprob: -11.084989547729492
    9. 'sum' → logprob: -11.397489547729492
    10. '2' → logprob: -11.459989547729492

Token 15: '999' (ID: 9130)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009049764834344387
    2. 'n' → logprob: -5.009049892425537
    3. '1' → logprob: -6.259049892425537
    4. ' ' → logprob: -8.384049415588379
    5. 'sum' → logprob: -9.509049415588379
    6. ' n' → logprob: -9.884049415588379
    7. '[' → logprob: -11.134049415588379
    8. '2' → logprob: -11.634049415588379
    9. '10' → logprob: -12.259049415588379
    10. '[n' → logprob: -12.384049415588379

Token 16: '999' (ID: 9130)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.47707119584083557
    2. '999' → logprob: -1.2270711660385132
    3. ')' → logprob: -3.1020712852478027
    4. '99' → logprob: -3.6020712852478027
    5. '+' → logprob: -4.602071285247803
    6. '<|end|>' → logprob: -6.602071285247803
    7. '**' → logprob: -7.352071285247803
    8. ' +' → logprob: -7.852071285247803
    9. '*' → logprob: -7.852071285247803
    10. '<|end|>' → logprob: -8.602070808410645

Token 17: '
' (ID: 198)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.22586362063884735
    2. '999' → logprob: -1.7258635759353638
    3. '99' → logprob: -4.350863456726074
    4. '+' → logprob: -4.850863456726074
    5. ')' → logprob: -6.850863456726074
    6. '_' → logprob: -7.350863456726074
    7. '<|end|>' → logprob: -7.975863456726074
    8. ' ' → logprob: -7.975863456726074
    9. '```' → logprob: -8.475863456726074
    10. '**' → logprob: -8.600863456726074

Token 18: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 19: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17521411180496216
    2. ' ' → logprob: -2.1752140522003174
    3. 'for' (adapté à ' for') → logprob: -3.8002140522003174
    4. '   ' → logprob: -4.5502142906188965
    5. ' 
' → logprob: -5.4252142906188965
    6. ':' → logprob: -6.5502142906188965
    7. '\' → logprob: -6.5502142906188965
    8. '    ' → logprob: -6.8002142906188965
    9. ' \' → logprob: -7.5502142906188965
    10. '    
' → logprob: -7.5502142906188965

Token 20: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008478998206555843
    2. ' ' → logprob: -5.258479118347168
    3. 'i' → logprob: -6.008479118347168
    4. '_' → logprob: -8.133479118347168
    5. ' _' → logprob: -8.258479118347168
    6. ' x' → logprob: -9.133479118347168
    7. ' range' → logprob: -10.133479118347168
    8. ' n' → logprob: -10.258479118347168
    9. ' ' → logprob: -10.883479118347168
    10. ' in' → logprob: -11.758479118347168

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01506772544234991
    2. 'in' → logprob: -4.2650675773620605
    3. ' ' → logprob: -7.1400675773620605
    4. 'n' → logprob: -9.890068054199219
    5. ',' → logprob: -10.890068054199219
    6. 'range' → logprob: -11.265068054199219
    7. '  ' → logprob: -11.390068054199219
    8. ' n' → logprob: -12.640068054199219
    9. '   ' → logprob: -13.140068054199219
    10. ' range' → logprob: -13.140068054199219

Token 22: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.033838871866464615
    2. 'range' → logprob: -3.408838987350464
    3. ' ' → logprob: -8.783839225769043
    4. '   ' → logprob: -11.533839225769043
    5. '  ' → logprob: -12.158839225769043
    6. '	range' → logprob: -12.158839225769043
    7. '(range' → logprob: -12.783839225769043
    8. ' xrange' → logprob: -12.908839225769043
    9. 'n' → logprob: -13.033839225769043
    10. ' n' → logprob: -13.158839225769043

Token 23: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4292480945587158
    2. '(' → logprob: -1.0542480945587158
    3. ' (' → logprob: -7.679247856140137
    4. '(len' → logprob: -10.179247856140137
    5. ' ' → logprob: -11.804247856140137
    6. '(s' → logprob: -12.179247856140137
    7. '(i' → logprob: -12.179247856140137
    8. 'n' → logprob: -12.304247856140137
    9. ' n' → logprob: -12.429247856140137
    10. '(max' → logprob: -12.804247856140137

Token 24: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6774264574050903
    2. '1' → logprob: -0.8024264574050903
    3. ' n' → logprob: -3.427426338195801
    4. ' ' → logprob: -5.677426338195801
    5. '10' → logprob: -5.927426338195801
    6. '(n' → logprob: -6.552426338195801
    7. '0' → logprob: -6.802426338195801
    8. '(' → logprob: -6.802426338195801
    9. '2' → logprob: -7.677426338195801
    10. '100' → logprob: -7.927426338195801

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024591932073235512
    2. ' ,' → logprob: -3.8995919227600098
    3. ',n' → logprob: -5.52459192276001
    4. ' ' → logprob: -10.524592399597168
    5. 'n' → logprob: -11.149592399597168
    6. ' n' → logprob: -12.024592399597168
    7. '   ' → logprob: -12.899592399597168
    8. '  ' → logprob: -14.399592399597168
    9. '(n' → logprob: -14.524592399597168
    10. '```' → logprob: -14.649592399597168

Token 26: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18042972683906555
    2. ' n' → logprob: -1.8054296970367432
    3. '100' → logprob: -7.930429935455322
    4. '10' → logprob: -8.930429458618164
    5. ' ' → logprob: -9.805429458618164
    6. 'int' → logprob: -10.430429458618164
    7. '101' → logprob: -10.555429458618164
    8. ' int' → logprob: -10.930429458618164
    9. '999' → logprob: -11.180429458618164
    10. '9' → logprob: -11.555429458618164

Token 27: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16207119822502136
    2. ' +' → logprob: -2.1620712280273438
    3. '):' → logprob: -3.6620712280273438
    4. '//' → logprob: -4.912071228027344
    5. ' //' → logprob: -6.912071228027344
    6. ' ):' → logprob: -8.037071228027344
    7. '):
' → logprob: -9.537071228027344
    8. ' ' → logprob: -10.662071228027344
    9. ')' → logprob: -10.662071228027344
    10. '**' → logprob: -11.037071228027344

Token 28: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6250351667404175
    2. '+' → logprob: -1.5000351667404175
    3. '    ' → logprob: -2.625035285949707
    4. '   ' → logprob: -2.625035285949707
    5. ' ' → logprob: -3.375035285949707
    6. ' :' → logprob: -4.000035285949707
    7. '):' → logprob: -4.000035285949707
    8. ' +' → logprob: -4.750035285949707
    9. ':
' → logprob: -5.750035285949707
    10. '       ' → logprob: -5.875035285949707

Token 29: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2313816249370575
    2. '<|end|>' → logprob: -2.10638165473938
    3. ' if' → logprob: -2.98138165473938
    4. '       ' → logprob: -4.731381416320801
    5. '    ' → logprob: -4.856381416320801
    6. '   ' → logprob: -4.981381416320801
    7. 'if' → logprob: -6.356381416320801
    8. ':' → logprob: -6.606381416320801
    9. '<|end|>' → logprob: -6.606381416320801
    10. ' 
' → logprob: -6.606381416320801

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39730995893478394
    2. '=' → logprob: -1.1473100185394287
    3. ' ' → logprob: -5.52230978012085
    4. '+' → logprob: -6.27230978012085
    5. ' in' → logprob: -6.52230978012085
    6. ',' → logprob: -6.77230978012085
    7. ')' → logprob: -6.89730978012085
    8. 'n' → logprob: -8.522310256958008
    9. ' +' → logprob: -9.022310256958008
    10. ' ==' → logprob: -9.522310256958008

Token 31: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6271514892578125
    2. ' i' → logprob: -1.5021514892578125
    3. 'n' → logprob: -2.0021514892578125
    4. 'i' → logprob: -2.2521514892578125
    5. ' ' → logprob: -6.2521514892578125
    6. ' (' → logprob: -7.0021514892578125
    7. '(i' → logprob: -9.877151489257812
    8. '1' → logprob: -10.627151489257812
    9. '(n' → logprob: -11.127151489257812
    10. '(' → logprob: -11.127151489257812

Token 32: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.3509588241577148
    2. ' //' → logprob: -1.6009588241577148
    3. '-i' → logprob: -1.7259588241577148
    4. '-' → logprob: -1.9759588241577148
    5. '//' → logprob: -2.100958824157715
    6. '%i' → logprob: -2.850958824157715
    7. ' %' → logprob: -3.725958824157715
    8. '%' → logprob: -4.350958824157715
    9. ' ' → logprob: -5.600958824157715
    10. '/i' → logprob: -7.475958824157715

Token 33: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005958898924291134
    2. ' i' → logprob: -5.1309590339660645
    3. '1' → logprob: -11.130958557128906
    4. ' ' → logprob: -12.005958557128906
    5. '   ' → logprob: -12.380958557128906
    6. '	i' → logprob: -13.630958557128906
    7. '<|end|>' → logprob: -13.630958557128906
    8. '    ' → logprob: -15.005958557128906
    9. '<|end|>' → logprob: -15.130958557128906
    10. ')' → logprob: -15.130958557128906

Token 34: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31818079948425293
    2. ' if' → logprob: -2.693180799484253
    3. '<|end|>' → logprob: -2.943180799484253
    4. '
' → logprob: -3.318180799484253
    5. '        
' → logprob: -3.318180799484253
    6. ' ' → logprob: -3.568180799484253
    7. ' 
' → logprob: -4.193181037902832
    8. '        ' → logprob: -4.818181037902832
    9. ')' → logprob: -4.943181037902832
    10. 'if' → logprob: -5.818181037902832

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27631044387817383
    2. '<|end|>' → logprob: -1.9013104438781738
    3. '
' → logprob: -3.651310443878174
    4. ' if' → logprob: -3.776310443878174
    5. ' ' → logprob: -4.151310443878174
    6. '   ' → logprob: -4.651310443878174
    7. ')' → logprob: -5.776310443878174
    8. ' 
' → logprob: -5.776310443878174
    9. '<|end|>' → logprob: -5.776310443878174
    10. '  
' → logprob: -6.401310443878174

Token 36: ' f' (ID: 285)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8442623019218445
    2. 'res' → logprob: -1.8442623615264893
    3. '       ' → logprob: -1.9692623615264893
    4. ' res' → logprob: -2.4692623615264893
    5. 'if' → logprob: -2.7192623615264893
    6. ' ' → logprob: -3.5942623615264893
    7. ' 
' → logprob: -3.8442623615264893
    8. '   ' → logprob: -4.09426212310791
    9. '        
' → logprob: -4.21926212310791
    10. '    
' → logprob: -4.84426212310791

Token 37: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.5522230267524719
    2. 'o' → logprob: -1.3022229671478271
    3. 'i' → logprob: -2.927222967147827
    4. ' =' → logprob: -3.302222967147827
    5. 'a' → logprob: -3.427222967147827
    6. '1' → logprob: -4.302223205566406
    7. 'actor' → logprob: -6.052223205566406
    8. '_' → logprob: -6.802223205566406
    9. 'r' → logprob: -6.802223205566406
    10. 'irst' → logprob: -6.802223205566406

Token 38: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7013428211212158
    2. ' i' → logprob: -1.4513428211212158
    3. 'abs' → logprob: -1.8263428211212158
    4. ' abs' → logprob: -2.826342821121216
    5. 'max' → logprob: -4.076342582702637
    6. ' max' → logprob: -4.701342582702637
    7. '(i' → logprob: -4.701342582702637
    8. ' (' → logprob: -5.576342582702637
    9. 'min' → logprob: -5.701342582702637
    10. ' ' → logprob: -6.326342582702637

Token 39: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6591640710830688
    2. 'abs' → logprob: -1.0341640710830688
    3. 'max' → logprob: -2.6591639518737793
    4. '(i' → logprob: -3.9091639518737793
    5. 'min' → logprob: -4.284163951873779
    6. 'calc' → logprob: -4.534163951873779
    7. '(' → logprob: -6.034163951873779
    8. 'res' → logprob: -6.534163951873779
    9. ' i' → logprob: -6.784163951873779
    10. '(abs' → logprob: -6.909163951873779

Token 40: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ' el' (ID: 650)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.40281885862350464
    2. 'k' → logprob: -1.5278189182281494
    3. ' x' → logprob: -3.0278189182281494
    4. ' d' → logprob: -3.6528189182281494
    5. 'x' → logprob: -4.15281867980957
    6. 'd' → logprob: -5.02781867980957
    7. ' ' → logprob: -5.65281867980957
    8. ' _' → logprob: -5.90281867980957
    9. ' a' → logprob: -6.15281867980957
    10. '_' → logprob: -6.27781867980957

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04813600331544876
    2. 'in' → logprob: -3.173135995864868
    3. ' ' → logprob: -5.673136234283447
    4. 's' → logprob: -6.798136234283447
    5. '<|end|>' → logprob: -8.923135757446289
    6. '  ' → logprob: -9.173135757446289
    7. 'i' → logprob: -9.423135757446289
    8. ' i' → logprob: -9.798135757446289
    9. ',' → logprob: -10.173135757446289
    10. '<|end|>' → logprob: -10.423135757446289

Token 45: ' (' (ID: 350)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.6498209238052368
    2. 'str' → logprob: -1.5248209238052368
    3. ' [' → logprob: -2.0248208045959473
    4. '[' → logprob: -2.7748208045959473
    5. '[str' → logprob: -3.8998208045959473
    6. ' range' → logprob: -4.274820804595947
    7. '[i' → logprob: -4.774820804595947
    8. ' ' → logprob: -5.024820804595947
    9. 'range' → logprob: -5.524820804595947
    10. ' (' → logprob: -5.649820804595947

Token 46: 'str' (ID: 689)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3302578926086426
    2. 'i' → logprob: -2.4552578926086426
    3. '(i' → logprob: -3.3302578926086426
    4. ' str' → logprob: -3.3302578926086426
    5. ' [' → logprob: -3.4552578926086426
    6. ' i' → logprob: -3.5802578926086426
    7. 'str' → logprob: -3.5802578926086426
    8. ' (' → logprob: -4.330257892608643
    9. '[str' → logprob: -4.455257892608643
    10. '(str' → logprob: -4.705257892608643

Token 47: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0016449532704427838
    2. '(' → logprob: -7.001645088195801
    3. '(j' → logprob: -7.751645088195801
    4. 'i' → logprob: -8.7516450881958
    5. '(n' → logprob: -9.6266450881958
    6. ' i' → logprob: -9.8766450881958
    7. 'j' → logprob: -11.7516450881958
    8. ' (' → logprob: -12.1266450881958
    9. ')i' → logprob: -12.1266450881958
    10. '   ' → logprob: -13.2516450881958

Token 48: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4615776836872101
    2. '),' → logprob: -1.4615776538848877
    3. ')):' → logprob: -2.8365776538848877
    4. ')+' → logprob: -3.5865776538848877
    5. ')),' → logprob: -3.9615776538848877
    6. '))' → logprob: -4.586577892303467
    7. '+' → logprob: -4.836577892303467
    8. '+j' → logprob: -5.211577892303467
    9. ')):
' → logprob: -5.586577892303467
    10. ')+(' → logprob: -7.086577892303467

Token 49: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.07040863484144211
    2. ' str' → logprob: -2.695408582687378
    3. '   ' → logprob: -8.695408821105957
    4. ''' → logprob: -9.445408821105957
    5. ' ' → logprob: -9.445408821105957
    6. '(str' → logprob: -9.945408821105957
    7. '  ' → logprob: -10.820408821105957
    8. '    ' → logprob: -10.945408821105957
    9. ' '' → logprob: -11.445408821105957
    10. '"' → logprob: -11.820408821105957

Token 50: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -8.602024900028482e-05
    2. '(' → logprob: -9.500085830688477
    3. 'j' → logprob: -11.750085830688477
    4. '	j' → logprob: -13.625085830688477
    5. ' (' → logprob: -13.875085830688477
    6. '   ' → logprob: -15.000085830688477
    7. ')' → logprob: -15.625085830688477
    8. '(i' → logprob: -16.000085830688477
    9. '(
' → logprob: -16.500085830688477
    10. '    ' → logprob: -16.500085830688477

Token 51: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.10972156375646591
    2. '))' → logprob: -2.6097216606140137
    3. ')):
' → logprob: -3.9847216606140137
    4. ')' → logprob: -4.984721660614014
    5. '):' → logprob: -6.359721660614014
    6. ')).' → logprob: -6.484721660614014
    7. ')))' → logprob: -7.359721660614014
    8. ')):
' → logprob: -7.484721660614014
    9. ':' → logprob: -8.359721183776855
    10. '))[' → logprob: -10.234721183776855

Token 52: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7891829013824463
    2. ':' → logprob: -0.9141829013824463
    3. '       ' → logprob: -3.2891829013824463
    4. 'if' → logprob: -3.5391829013824463
    5. ' if' → logprob: -3.7891829013824463
    6. ')' → logprob: -5.039182662963867
    7. '          ' → logprob: -5.289182662963867
    8. '   ' → logprob: -5.414182662963867
    9. ' ' → logprob: -5.414182662963867
    10. '+' → logprob: -5.664182662963867

Token 53: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.6718007922172546
    2. 'f' (adapté à ' f') → logprob: -1.0468008518218994
    3. ' if' → logprob: -2.4218008518218994
    4. 'if' → logprob: -3.5468008518218994
    5. '           ' → logprob: -4.29680061340332
    6. '+' → logprob: -6.29680061340332
    7. ' ' → logprob: -6.29680061340332
    8. '       ' → logprob: -6.79680061340332
    9. '   ' → logprob: -7.04680061340332
    10. '    ' → logprob: -8.17180061340332

Token 54: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005099626258015633
    2. ' +=' → logprob: -5.630099773406982
    3. '=' → logprob: -6.755099773406982
    4. '+' → logprob: -8.880099296569824
    5. '-=' → logprob: -9.380099296569824
    6. '+=(' → logprob: -10.005099296569824
    7. '|' → logprob: -11.130099296569824
    8. '==' → logprob: -11.630099296569824
    9. ']+=' → logprob: -11.755099296569824
    10. ' =' → logprob: -11.755099296569824

Token 55: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.23747406899929047
    2. ' int' → logprob: -2.487473964691162
    3. '1' → logprob: -2.612473964691162
    4. 'abs' → logprob: -3.737473964691162
    5. 'ord' → logprob: -4.487473964691162
    6. ' ' → logprob: -4.987473964691162
    7. ' abs' → logprob: -5.237473964691162
    8. 'el' → logprob: -5.862473964691162
    9. ' ord' → logprob: -6.487473964691162
    10. '(int' → logprob: -7.362473964691162

Token 56: '(el' (ID: 35872)
  Prédit: '(el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(el' → logprob: -6.921253225300461e-05
    2. '(' → logprob: -9.625069618225098
    3. 'el' → logprob: -12.875069618225098
    4. '(ele' → logprob: -15.000069618225098
    5. '	el' → logprob: -16.37506866455078
    6. '(e' → logprob: -16.62506866455078
    7. '(
' → logprob: -17.25006866455078
    8. '(en' → logprob: -17.37506866455078
    9. '(x' → logprob: -17.87506866455078
    10. '(er' → logprob: -18.00006866455078

Token 57: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009759013773873448
    2. '**' → logprob: -8.000975608825684
    3. ')**' → logprob: -8.250975608825684
    4. '))' → logprob: -8.875975608825684
    5. '*' → logprob: -9.250975608825684
    6. ' )' → logprob: -10.000975608825684
    7. ')))' → logprob: -10.750975608825684
    8. '       ' → logprob: -11.250975608825684
    9. '   ' → logprob: -11.750975608825684
    10. ' ' → logprob: -11.875975608825684

Token 58: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46841734647750854
    2. ' if' → logprob: -1.8434174060821533
    3. 'if' → logprob: -2.2184174060821533
    4. '   ' → logprob: -3.3434174060821533
    5. '       ' → logprob: -3.9684174060821533
    6. '+' → logprob: -4.093417167663574
    7. '**' → logprob: -4.843417167663574
    8. ' ' → logprob: -5.718417167663574
    9. '+
' → logprob: -5.718417167663574
    10. '
' → logprob: -5.843417167663574

Token 59: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5729029774665833
    2. '
' → logprob: -1.8229029178619385
    3. 'if' (adapté à ' if') → logprob: -2.5729029178619385
    4. '       ' → logprob: -2.6979029178619385
    5. '   ' → logprob: -3.0729029178619385
    6. '+' → logprob: -3.0729029178619385
    7. '*' → logprob: -4.822903156280518
    8. '%' → logprob: -5.322903156280518
    9. ' ' → logprob: -5.572903156280518
    10. '           ' → logprob: -5.697903156280518

Token 60: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.00864187441766262
    2. 'f' → logprob: -4.758641719818115
    3. '(f' → logprob: -11.758642196655273
    4. ' ' → logprob: -12.133642196655273
    5. ' (' → logprob: -12.508642196655273
    6. ' res' → logprob: -12.758642196655273
    7. '(' → logprob: -13.383642196655273
    8. '    ' → logprob: -13.383642196655273
    9. 'res' → logprob: -14.071142196655273
    10. ' ' → logprob: -14.133642196655273

Token 61: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.22613473236560822
    2. '<' → logprob: -1.6011347770690918
    3. ' ' → logprob: -7.851134777069092
    4. ' <=' → logprob: -9.226134300231934
    5. ' >' → logprob: -9.476134300231934
    6. '>' → logprob: -10.226134300231934
    7. '<=' → logprob: -10.476134300231934
    8. '==' → logprob: -10.851134300231934
    9. ' ==' → logprob: -11.226134300231934
    10. '0' → logprob: -11.726134300231934

Token 62: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.3132725954055786
    2. 'res' → logprob: -1.3132725954055786
    3. ' ' → logprob: -11.938272476196289
    4. '	res' → logprob: -13.438272476196289
    5. '(res' → logprob: -14.438272476196289
    6. '=' → logprob: -14.563272476196289
    7. '=res' → logprob: -14.563272476196289
    8. '   ' → logprob: -14.938272476196289
    9. '  ' → logprob: -15.688272476196289
    10. '<|end|>' → logprob: -15.938272476196289

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007052833680063486
    2. ':
' → logprob: -7.375705242156982
    3. ' :' → logprob: -9.87570571899414
    4. '):' → logprob: -11.62570571899414
    5. '       ' → logprob: -12.37570571899414
    6. '           ' → logprob: -12.50070571899414
    7. ':
' → logprob: -12.75070571899414
    8. '   ' → logprob: -13.25070571899414
    9. '=' → logprob: -13.50070571899414
    10. ',' → logprob: -14.62570571899414

Token 64: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0095970630645752
    2. ':' → logprob: -1.5095970630645752
    3. ' res' → logprob: -1.7595970630645752
    4. '       ' → logprob: -2.009597063064575
    5. 'res' → logprob: -2.259597063064575
    6. '<|end|>' → logprob: -7.009596824645996
    7. '               ' → logprob: -7.134596824645996
    8. '   ' → logprob: -7.759596824645996
    9. '	res' → logprob: -8.134596824645996
    10. '=' → logprob: -8.134596824645996

Token 65: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.008124323561787605
    2. 'res' (adapté à ' res') → logprob: -4.883124351501465
    3. '               ' → logprob: -8.508124351501465
    4. ' f' → logprob: -8.758124351501465
    5. '           ' → logprob: -9.258124351501465
    6. ' ' → logprob: -10.508124351501465
    7. '       ' → logprob: -11.258124351501465
    8. '            ' → logprob: -11.633124351501465
    9. '	res' → logprob: -13.133124351501465
    10. '    ' → logprob: -13.258124351501465

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132750391960144
    2. '=' → logprob: -1.3132750988006592
    3. '=f' → logprob: -11.313275337219238
    4. ' ' → logprob: -13.938275337219238
    5. '＝' → logprob: -16.063274383544922
    6. '=

' → logprob: -16.563274383544922
    7. ',' → logprob: -17.688274383544922
    8. '.=' → logprob: -18.188274383544922
    9. ' f' → logprob: -18.313274383544922
    10. '=int' → logprob: -18.438274383544922

Token 67: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.018150178715586662
    2. ' f' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.643150329589844
    4. '	f' → logprob: -15.768150329589844
    5. '   ' → logprob: -17.893150329589844
    6. ' ' → logprob: -19.393150329589844
    7. '           ' → logprob: -19.518150329589844
    8. '<f' → logprob: -19.768150329589844
    9. '$f' → logprob: -19.768150329589844
    10. '       ' → logprob: -20.143150329589844

Token 68: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0832386389374733
    2. '   ' → logprob: -3.3332386016845703
    3. ' 
' → logprob: -4.70823860168457
    4. '    
' → logprob: -4.95823860168457
    5. ' return' → logprob: -5.08323860168457
    6. '<|end|>' → logprob: -5.08323860168457
    7. '
' → logprob: -5.20823860168457
    8. '	return' → logprob: -5.58323860168457
    9. '  
' → logprob: -6.20823860168457
    10. 'return' → logprob: -6.83323860168457

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8905573487281799
    2. ' return' → logprob: -1.3905572891235352
    3. '
' → logprob: -1.5155572891235352
    4. 'return' → logprob: -2.640557289123535
    5. '    
' → logprob: -4.265557289123535
    6. ' 
' → logprob: -4.515557289123535
    7. '	return' → logprob: -5.140557289123535
    8. '<|end|>' → logprob: -5.390557289123535
    9. '  
' → logprob: -5.515557289123535
    10. ' ' → logprob: -6.140557289123535

Token 70: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3541643023490906
    2. ' return' → logprob: -1.3541643619537354
    3. '   ' → logprob: -3.2291643619537354
    4. '	return' → logprob: -8.354164123535156
    5. ' ' → logprob: -8.979164123535156
    6. '    
' → logprob: -10.229164123535156
    7. '<|end|>' → logprob: -10.604164123535156
    8. ' 
' → logprob: -11.104164123535156
    9. '  ' → logprob: -11.354164123535156
    10. '
' → logprob: -11.854164123535156

Token 71: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6931476593017578
    2. ' res' → logprob: -0.6931476593017578
    3. '(res' → logprob: -15.568147659301758
    4. '	res' → logprob: -15.693147659301758
    5. ' ' → logprob: -16.693147659301758
    6. ' ' → logprob: -18.568147659301758
    7. '   ' → logprob: -18.693147659301758
    8. 're' → logprob: -18.818147659301758
    9. '$res' → logprob: -18.943147659301758
    10. ',res' → logprob: -19.443147659301758

Token 72: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: 'if' (ID: 366)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3029862642288208
    2. '#' → logprob: -2.6779861450195312
    3. 'print' → logprob: -3.0529861450195312
    4. '<|end|>' → logprob: -3.3029861450195312
    5. '_' → logprob: -3.4279861450195312
    6. '\n' → logprob: -3.8029861450195312
    7. ')' → logprob: -4.052986145019531
    8. '\' → logprob: -4.552986145019531
    9. ' ' → logprob: -5.177986145019531
    10. '+' → logprob: -5.177986145019531

Token 74: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -3.7385154428193346e-05
    2. '__' → logprob: -10.37503719329834
    3. ' ' → logprob: -12.12503719329834
    4. ' ' → logprob: -14.87503719329834
    5. ' _' → logprob: -15.00003719329834
    6. ' ___' → logprob: -16.875038146972656
    7. '_' → logprob: -17.750038146972656
    8. ' ____' → logprob: -18.500038146972656
    9. ' True' → logprob: -18.625038146972656
    10. '  ' → logprob: -18.625038146972656

Token 75: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1820864975452423
    2. '==' → logprob: -1.93208646774292
    3. '__' → logprob: -4.30708646774292
    4. '.' → logprob: -5.55708646774292
    5. ' __' → logprob: -6.68208646774292
    6. '.__' → logprob: -7.30708646774292
    7. '=="' → logprob: -7.55708646774292
    8. '_' → logprob: -8.057086944580078
    9. '```' → logprob: -8.307086944580078
    10. ' ' → logprob: -8.432086944580078

Token 76: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0002501343551557511
    2. '_' → logprob: -8.375249862670898
    3. '==' → logprob: -11.375249862670898
    4. '___' → logprob: -12.250249862670898
    5. '____' → logprob: -13.625249862670898
    6. '__

' → logprob: -14.500249862670898
    7. '__.__' → logprob: -14.750249862670898
    8. '__
' → logprob: -15.000249862670898
    9. '=' → logprob: -15.375249862670898
    10. '=="' → logprob: -16.3752498626709

Token 77: '=='' (ID: 20651)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.32049182057380676
    2. '==' → logprob: -1.9454917907714844
    3. '__' → logprob: -2.0704917907714844
    4. '=="' → logprob: -5.320491790771484
    5. '=='' → logprob: -8.570491790771484
    6. '=' → logprob: -10.945491790771484
    7. ' =="' → logprob: -11.070491790771484
    8. ' =' → logprob: -11.445491790771484
    9. '_' → logprob: -11.570491790771484
    10. '"' → logprob: -12.070491790771484

Token 78: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.8550976164988242e-05
    2. ' __' → logprob: -11.000018119812012
    3. ''' → logprob: -13.375018119812012
    4. '"' → logprob: -15.875018119812012
    5. 'main' → logprob: -17.250019073486328
    6. ' "__' → logprob: -18.375019073486328
    7. '___' → logprob: -18.500019073486328
    8. '/__' → logprob: -19.625019073486328
    9. ' '__' → logprob: -19.750019073486328
    10. '```' → logprob: -20.125019073486328

Token 79: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.619311974034645e-05
    2. 'name' → logprob: -10.375036239624023
    3. 'ma' → logprob: -12.375036239624023
    4. 'm' → logprob: -14.750036239624023
    5. ' main' → logprob: -16.250036239624023
    6. 'mai' → logprob: -17.125036239624023
    7. ''' → logprob: -17.875036239624023
    8. 'maine' → logprob: -18.000036239624023
    9. 'built' → logprob: -18.000036239624023
    10. '_main' → logprob: -18.250036239624023

Token 80: '__':
' (ID: 39314)
  Prédit: '__:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__:' → logprob: -0.35238298773765564
    2. '__' → logprob: -1.227383017539978
    3. ':' → logprob: -5.852383136749268
    4. '__':
' → logprob: -6.977383136749268
    5. '_' → logprob: -9.97738265991211
    6. '':' → logprob: -10.10238265991211
    7. '__":
' → logprob: -11.72738265991211
    8. '__.' → logprob: -11.85238265991211
    9. '__
' → logprob: -12.10238265991211
    10. '_:' → logprob: -12.72738265991211

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0506666824221611
    2. '    
' → logprob: -4.175666809082031
    3. '<|end|>' → logprob: -4.175666809082031
    4. '
' → logprob: -5.300666809082031
    5. 'n' → logprob: -5.550666809082031
    6. '	n' → logprob: -6.050666809082031
    7. '(n' → logprob: -6.800666809082031
    8. '  
' → logprob: -6.925666809082031
    9. '<|end|>' → logprob: -7.050666809082031
    10. ' n' → logprob: -7.300666809082031

Token 82: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.030855095013976097
    2. 'print' → logprob: -4.030855178833008
    3. ' n' → logprob: -4.780855178833008
    4. '   ' → logprob: -5.780855178833008
    5. 'get' → logprob: -6.905855178833008
    6. ' print' → logprob: -9.655855178833008
    7. 'a' → logprob: -10.155855178833008
    8. 'x' → logprob: -11.530855178833008
    9. 'for' → logprob: -11.780855178833008
    10. ' get' → logprob: -12.155855178833008

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022706031799316
    2. '=' → logprob: -1.9102270603179932
    3. ' ' → logprob: -13.660226821899414
    4. ',' → logprob: -14.535226821899414
    5. '=get' → logprob: -15.535226821899414
    6. ')' → logprob: -15.660226821899414
    7. '=input' → logprob: -15.785226821899414
    8. ':' → logprob: -15.785226821899414
    9. '=int' → logprob: -15.910226821899414
    10. '  ' → logprob: -15.910226821899414

Token 84: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.1602257490158081
    2. 'get' → logprob: -1.910225749015808
    3. '	get' → logprob: -14.285225868225098
    4. '(get' → logprob: -14.660225868225098
    5. ' ' → logprob: -15.285225868225098
    6. '=get' → logprob: -16.03522491455078
    7. '[get' → logprob: -16.28522491455078
    8. ')get' → logprob: -16.41022491455078
    9. '_get' → logprob: -16.78522491455078
    10. ' int' → logprob: -18.03522491455078

Token 85: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1756367712223437e-05
    2. '()
' → logprob: -12.125011444091797
    3. '(' → logprob: -12.375011444091797
    4. '()

' → logprob: -14.250011444091797
    5. ' ()' → logprob: -14.625011444091797
    6. '()(' → logprob: -15.750011444091797
    7. '()\' → logprob: -15.750011444091797
    8. '()<' → logprob: -16.500011444091797
    9. '()`' → logprob: -16.750011444091797
    10. '()
' → logprob: -16.875011444091797

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13030877709388733
    2. 'print' → logprob: -2.1303088665008545
    3. '    
' → logprob: -6.380308628082275
    4. '
' → logprob: -7.755308628082275
    5. '<|end|>' → logprob: -8.005309104919434
    6. ' print' → logprob: -8.380309104919434
    7. ')' → logprob: -8.505309104919434
    8. '  
' → logprob: -9.755309104919434
    9. '  ' → logprob: -10.130309104919434
    10. '' → logprob: -10.130309104919434

Token 87: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.901345038088039e-05
    2. ' print' → logprob: -9.375099182128906
    3. '   ' → logprob: -11.750099182128906
    4. 'pr' → logprob: -12.875099182128906
    5. 'res' → logprob: -13.500099182128906
    6. 'result' → logprob: -14.000099182128906
    7. 'p' → logprob: -14.125099182128906
    8. 'r' → logprob: -15.375099182128906
    9. 's' → logprob: -16.500099182128906
    10. ' ' → logprob: -16.500099182128906

Token 88: '(calc' (ID: 190074)
  Prédit: '(calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(calc' → logprob: -0.00407923199236393
    2. '(' → logprob: -5.504079341888428
    3. '(cal' → logprob: -14.37907886505127
    4. '(c' → logprob: -17.129079818725586
    5. ' (' → logprob: -17.254079818725586
    6. '(
' → logprob: -17.254079818725586
    7. '((' → logprob: -17.379079818725586
    8. '('' → logprob: -17.754079818725586
    9. '(call' → logprob: -17.879079818725586
    10. '()' → logprob: -18.004079818725586

Token 89: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02326003834605217
    2. '(' → logprob: -3.7732601165771484
    3. ')' → logprob: -11.273260116577148
    4. '(
' → logprob: -14.273260116577148
    5. ' (' → logprob: -14.523260116577148
    6. ')n' → logprob: -15.273260116577148
    7. ')(' → logprob: -15.398260116577148
    8. '))' → logprob: -16.27326011657715
    9. '(

' → logprob: -16.89826011657715
    10. '((' → logprob: -16.89826011657715

Token 90: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12693166732788086
    2. ')' → logprob: -2.126931667327881
    3. ')))' → logprob: -13.501932144165039
    4. '))
' → logprob: -14.126932144165039
    5. ' ))' → logprob: -15.126932144165039
    6. ' )' → logprob: -15.251932144165039
    7. '()))' → logprob: -15.501932144165039
    8. '())' → logprob: -15.626932144165039
    9. ')
' → logprob: -16.25193214416504
    10. '()' → logprob: -16.37693214416504


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 88
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 67
Précision stricte (1ère position): 44.32%
Précision adaptée (1ère position): 47.73%
Précision (top 10): 76.14%
================================================================================
