================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import numpy as np
import collections as col
import math
n, m, d = map(int, input().split())
ans = 0.0
if d == 0:
    ans = (m - 1)/n
else:
    ans = 2.0 * (n - d) * (m - 1) / n / n
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0009220616775564849
    2. 'np' → logprob: -7.000922203063965
    3. ' ' → logprob: -12.000922203063965
    4. ' numpy' → logprob: -12.375922203063965
    5. ' ' → logprob: -15.750922203063965
    6. '```' → logprob: -17.75092124938965
    7. 'numpy' → logprob: -17.87592124938965
    8. '_np' → logprob: -18.12592124938965
    9. '(np' → logprob: -18.62592124938965
    10. ' n' → logprob: -18.75092124938965

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.605406641960144
    2. '\n' → logprob: -1.480406641960144
    3. 'newline' → logprob: -2.3554067611694336
    4. 'import' → logprob: -3.2304067611694336
    5. '\' → logprob: -3.2304067611694336
    6. '<|end|>' → logprob: -3.8554067611694336
    7. '```' → logprob: -4.480406761169434
    8. '
' → logprob: -5.480406761169434
    9. '[' → logprob: -5.855406761169434
    10. '<|end|>' → logprob: -6.480406761169434

Token 5: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01564916968345642
    2. '\n' → logprob: -5.140649318695068
    3. '\' → logprob: -6.015649318695068
    4. '```' → logprob: -6.140649318695068
    5. '<|end|>' → logprob: -6.890649318695068
    6. 'import' → logprob: -6.890649318695068
    7. 'newline' → logprob: -7.390649318695068
    8. '
' → logprob: -7.640649318695068
    9. '#' → logprob: -8.01564884185791
    10. '[' → logprob: -8.26564884185791

Token 6: ' collections' (ID: 22690)
  Prédit: ' pandas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pandas' → logprob: -0.0006502442411147058
    2. ' tensorflow' → logprob: -7.750650405883789
    3. 'p' → logprob: -8.875650405883789
    4. ' scipy' → logprob: -10.250650405883789
    5. ' sys' → logprob: -10.875650405883789
    6. ' torch' → logprob: -11.750650405883789
    7. ' math' → logprob: -11.875650405883789
    8. ' matplotlib' → logprob: -12.375650405883789
    9. ' sklearn' → logprob: -13.000650405883789
    10. ' os' → logprob: -13.625650405883789

Token 7: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.180467426776886
    2. '\' → logprob: -2.930467367172241
    3. '\n' → logprob: -3.305467367172241
    4. '
' → logprob: -3.430467367172241
    5. 'import' → logprob: -4.80546760559082
    6. '```' → logprob: -4.93046760559082
    7. '.
' → logprob: -5.18046760559082
    8. '

' → logprob: -5.68046760559082
    9. 'newline' → logprob: -5.68046760559082
    10. '.

' → logprob: -5.68046760559082

Token 8: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.6139964461326599
    2. ' col' → logprob: -1.3639965057373047
    3. 'collections' → logprob: -2.6139965057373047
    4. 'cl' → logprob: -3.2389965057373047
    5. ' ' → logprob: -3.8639965057373047
    6. ' co' → logprob: -3.9889965057373047
    7. ' cole' → logprob: -3.9889965057373047
    8. 'c' → logprob: -4.363996505737305
    9. 'co' → logprob: -5.488996505737305
    10. ' cl' → logprob: -5.488996505737305

Token 9: '
' (ID: 198)
  Prédit: 'lections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lections' → logprob: -0.8363450765609741
    2. '.' → logprob: -1.9613450765609741
    3. 'ect' → logprob: -2.3363451957702637
    4. 'lection' → logprob: -2.4613451957702637
    5. 'newline' → logprob: -3.3363451957702637
    6. 'ection' → logprob: -3.5863451957702637
    7. 'ections' → logprob: -3.7113451957702637
    8. 'l' → logprob: -4.086345195770264
    9. '' → logprob: -4.086345195770264
    10. '\n' → logprob: -4.211345195770264

Token 10: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7925702333450317
    2. '.' → logprob: -1.5425702333450317
    3. '

' → logprob: -1.6675702333450317
    4. '' → logprob: -3.417570114135742
    5. '\n' → logprob: -3.792570114135742
    6. '
' → logprob: -3.917570114135742
    7. 'newline' → logprob: -4.292570114135742
    8. 'import' → logprob: -4.542570114135742
    9. '.

' → logprob: -4.917570114135742
    10. 'np' → logprob: -5.417570114135742

Token 11: ' math' (ID: 13324)
  Prédit: ' pandas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pandas' → logprob: -0.13663022220134735
    2. ' sys' → logprob: -3.1366302967071533
    3. ' math' → logprob: -3.1366302967071533
    4. ' itertools' → logprob: -4.386630058288574
    5. ' os' → logprob: -4.511630058288574
    6. ' re' → logprob: -5.636630058288574
    7. ' tensorflow' → logprob: -5.886630058288574
    8. ' random' → logprob: -5.886630058288574
    9. ' sklearn' → logprob: -6.011630058288574
    10. ' torch' → logprob: -6.511630058288574

Token 12: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.027722278609871864
    2. '\' → logprob: -4.902722358703613
    3. 'import' → logprob: -5.527722358703613
    4. '\n' → logprob: -5.527722358703613
    5. '
' → logprob: -5.902722358703613
    6. '<|end|>' → logprob: -5.902722358703613
    7. '```' → logprob: -6.152722358703613
    8. ',' → logprob: -7.027722358703613
    9. '

' → logprob: -7.402722358703613
    10. '.
' → logprob: -7.527722358703613

Token 13: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2328413724899292
    2. '
' → logprob: -2.6078414916992188
    3. '

' → logprob: -3.2328414916992188
    4. '.

' → logprob: -3.8578414916992188
    5. '.
' → logprob: -4.482841491699219
    6. '\n' → logprob: -4.482841491699219
    7. '```' → logprob: -4.607841491699219
    8. '\' → logprob: -4.607841491699219
    9. 'def' → logprob: -4.857841491699219
    10. '
' → logprob: -5.607841491699219

Token 14: ',' (ID: 11)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0025760135613381863
    2. 'u' → logprob: -7.377575874328613
    3. 'umpy' → logprob: -7.502575874328613
    4. 'um' → logprob: -7.627575874328613
    5. ' =' → logprob: -7.877575874328613
    6. '.' → logprob: -9.377575874328613
    7. '_' → logprob: -9.627575874328613
    8. '=' → logprob: -9.627575874328613
    9. ' ' → logprob: -9.752575874328613
    10. ' p' → logprob: -9.877575874328613

Token 15: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8319699764251709
    2. ' m' → logprob: -0.9569699764251709
    3. ' ' → logprob: -2.206969976425171
    4. 'k' → logprob: -3.331969976425171
    5. ' k' → logprob: -3.831969976425171
    6. '=' → logprob: -6.08197021484375
    7. 'd' → logprob: -6.58197021484375
    8. 'a' → logprob: -7.08197021484375
    9. ' =' → logprob: -7.08197021484375
    10. ')' → logprob: -7.33197021484375

Token 16: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08012092113494873
    2. '=' → logprob: -2.5801210403442383
    3. ',' → logprob: -6.830121040344238
    4. ' ' → logprob: -9.705121040344238
    5. ' ,' → logprob: -9.955121040344238
    6. ' =
' → logprob: -10.955121040344238
    7. ')' → logprob: -11.330121040344238
    8. '<|end|>' → logprob: -12.330121040344238
    9. '  ' → logprob: -13.830121040344238
    10. '=

' → logprob: -13.955121040344238

Token 17: ' d' (ID: 272)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.12405572086572647
    2. 'k' → logprob: -2.7490556240081787
    3. ' p' → logprob: -3.2490556240081787
    4. ' ' → logprob: -5.249055862426758
    5. ' =' → logprob: -5.499055862426758
    6. 'p' → logprob: -6.124055862426758
    7. '=' → logprob: -7.499055862426758
    8. ' l' → logprob: -7.749055862426758
    9. ' d' → logprob: -8.624055862426758
    10. ' q' → logprob: -8.874055862426758

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134040832519531
    2. '=' → logprob: -1.3134040832519531
    3. ',' → logprob: -8.938404083251953
    4. ')' → logprob: -12.313404083251953
    5. ' ' → logprob: -12.563404083251953
    6. '=input' → logprob: -14.563404083251953
    7. ' ,' → logprob: -14.688404083251953
    8. ' =
' → logprob: -14.688404083251953
    9. '_' → logprob: -14.938404083251953
    10. 's' → logprob: -15.438404083251953

Token 19: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16706599295139313
    2. 'map' → logprob: -1.917065978050232
    3. ' np' → logprob: -5.6670660972595215
    4. ' ' → logprob: -7.0420660972595215
    5. 'input' → logprob: -7.2920660972595215
    6. ' input' → logprob: -7.5420660972595215
    7. 'np' → logprob: -7.7920660972595215
    8. '0' → logprob: -7.9170660972595215
    9. ' list' → logprob: -8.542065620422363
    10. 'list' → logprob: -9.167065620422363

Token 20: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15729759633541107
    2. '(int' → logprob: -2.0322976112365723
    3. '(str' → logprob: -5.032297611236572
    4. '(lambda' → logprob: -5.032297611236572
    5. '<|end|>' → logprob: -7.782297611236572
    6. '(input' → logprob: -8.532297134399414
    7. '()' → logprob: -8.657297134399414
    8. '(np' → logprob: -9.407297134399414
    9. '(range' → logprob: -9.657297134399414
    10. 'int' → logprob: -9.657297134399414

Token 21: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07446262240409851
    2. 'input' → logprob: -2.699462652206421
    3. ',input' → logprob: -6.199462413787842
    4. ')' → logprob: -6.824462413787842
    5. '(' → logprob: -7.199462413787842
    6. ' input' → logprob: -7.574462413787842
    7. ',' → logprob: -9.324462890625
    8. '=input' → logprob: -10.949462890625
    9. ')(' → logprob: -11.449462890625
    10. ' (' → logprob: -12.074462890625

Token 22: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38687923550605774
    2. ' input' → logprob: -1.1368792057037354
    3. ')' → logprob: -12.136878967285156
    4. '(input' → logprob: -14.011878967285156
    5. ' ' → logprob: -14.386878967285156
    6. '=input' → logprob: -15.011878967285156
    7. '```' → logprob: -15.261878967285156
    8. ' )' → logprob: -15.261878967285156
    9. ',input' → logprob: -15.386878967285156
    10. '	input' → logprob: -15.886878967285156

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.032050102949142456
    2. '()' → logprob: -3.532050132751465
    3. '())' → logprob: -6.282050132751465
    4. ')' → logprob: -8.157050132751465
    5. '(' → logprob: -9.282050132751465
    6. '());' → logprob: -11.657050132751465
    7. '('').' → logprob: -11.907050132751465
    8. '(),' → logprob: -12.157050132751465
    9. '();' → logprob: -12.407050132751465
    10. '()))' → logprob: -12.657050132751465

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003186743939295411
    2. 'strip' → logprob: -5.7531867027282715
    3. 'rstrip' → logprob: -12.37818717956543
    4. ' split' → logprob: -12.62818717956543
    5. ')' → logprob: -14.37818717956543
    6. '(split' → logprob: -14.62818717956543
    7. 'read' → logprob: -14.87818717956543
    8. 'spl' → logprob: -16.50318717956543
    9. ' strip' → logprob: -17.25318717956543
    10. '().' → logprob: -17.87818717956543

Token 25: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036904551088809967
    2. '())' → logprob: -6.128690242767334
    3. '))' → logprob: -6.628690242767334
    4. '()' → logprob: -9.753690719604492
    5. '(' → logprob: -10.253690719604492
    6. '('' → logprob: -10.878690719604492
    7. '),' → logprob: -11.003690719604492
    8. '')' → logprob: -11.128690719604492
    9. '`)' → logprob: -11.503690719604492
    10. '(','' → logprob: -12.003690719604492

Token 26: 'ans' (ID: 616)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.707826554775238
    2. '
' → logprob: -1.0828266143798828
    3. 'data' → logprob: -2.957826614379883
    4. '\' → logprob: -3.457826614379883
    5. 'a' → logprob: -3.582826614379883
    6. ' 
' → logprob: -4.207826614379883
    7. ')' → logprob: -4.957826614379883
    8. '
' → logprob: -5.207826614379883
    9. 'n' → logprob: -5.707826614379883
    10. 'if' → logprob: -5.832826614379883

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2025202065706253
    2. '=' → logprob: -1.7025202512741089
    3. '_' → logprob: -7.577520370483398
    4. ' ' → logprob: -8.077520370483398
    5. ',' → logprob: -8.952520370483398
    6. ' +=' → logprob: -10.327520370483398
    7. 's' → logprob: -10.577520370483398
    8. ')' → logprob: -10.702520370483398
    9. '[' → logprob: -11.327520370483398
    10. '.' → logprob: -11.452520370483398

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7745898962020874
    2. ' ' → logprob: -0.8995898962020874
    3. ' math' → logprob: -3.024590015411377
    4. '[]' → logprob: -4.024590015411377
    5. 'math' → logprob: -4.024590015411377
    6. ' [' → logprob: -4.524590015411377
    7. ' []' → logprob: -4.649590015411377
    8. '[' → logprob: -5.149590015411377
    9. ' float' → logprob: -5.274590015411377
    10. 'float' → logprob: -5.774590015411377

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23082995414733887
    2. 'math' → logprob: -2.105829954147339
    3. 'max' → logprob: -3.855829954147339
    4. 'float' → logprob: -3.855829954147339
    5. '[' → logprob: -4.480830192565918
    6. 'abs' → logprob: -5.355830192565918
    7. '[]' → logprob: -5.355830192565918
    8. '(' → logprob: -5.980830192565918
    9. '-' → logprob: -6.105830192565918
    10. 'n' → logprob: -6.355830192565918

Token 30: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06200476363301277
    2. '\n' → logprob: -3.437004804611206
    3. ' 
' → logprob: -4.187004566192627
    4. '' → logprob: -6.062004566192627
    5. '\' → logprob: -6.187004566192627
    6. 'for' → logprob: -6.187004566192627
    7. '<|end|>' → logprob: -6.187004566192627
    8. '
' → logprob: -6.562004566192627
    9. ' ' → logprob: -6.687004566192627
    10. ' for' → logprob: -7.437004566192627

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3592841327190399
    2. ' ' → logprob: -1.3592841625213623
    3. '5' → logprob: -3.7342841625213623
    4. 'pow' → logprob: -6.234283924102783
    5. 'rstrip' → logprob: -6.609283924102783
    6. 'split' → logprob: -6.734283924102783
    7. '1' → logprob: -6.734283924102783
    8. 'count' → logprob: -6.734283924102783
    9. '' → logprob: -6.859283924102783
    10. '.' → logprob: -6.859283924102783

Token 32: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01746745966374874
    2. '\n' → logprob: -5.267467498779297
    3. 'for' → logprob: -5.767467498779297
    4. '' → logprob: -6.017467498779297
    5. '
' → logprob: -6.142467498779297
    6. ' 
' → logprob: -6.142467498779297
    7. '<|end|>' → logprob: -7.017467498779297
    8. ' for' → logprob: -7.892467498779297
    9. ' ' → logprob: -8.017467498779297
    10. '\' → logprob: -8.017467498779297

Token 33: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23321162164211273
    2. '
' → logprob: -1.733211636543274
    3. 'if' → logprob: -3.8582115173339844
    4. ' for' → logprob: -5.983211517333984
    5. 'a' → logprob: -6.483211517333984
    6. '\n' → logprob: -6.858211517333984
    7. 'n' → logprob: -7.108211517333984
    8. 'i' → logprob: -7.233211517333984
    9. 'x' → logprob: -7.608211517333984
    10. '' → logprob: -7.733211517333984

Token 34: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1300411820411682
    2. 'd' → logprob: -2.3800411224365234
    3. ' n' → logprob: -4.005041122436523
    4. ' m' → logprob: -5.130041122436523
    5. 'n' → logprob: -6.005041122436523
    6. ' ' → logprob: -6.505041122436523
    7. 'm' → logprob: -7.255041122436523
    8. ' abs' → logprob: -8.380041122436523
    9. ' math' → logprob: -9.130041122436523
    10. 'abs' → logprob: -9.130041122436523

Token 35: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.35763755440711975
    2. ' >' → logprob: -1.8576375246047974
    3. '==' → logprob: -2.482637643814087
    4. ' <=' → logprob: -4.107637405395508
    5. ' !=' → logprob: -4.357637405395508
    6. '>' → logprob: -4.482637405395508
    7. ' <' → logprob: -4.857637405395508
    8. ' >=' → logprob: -5.482637405395508
    9. ' ' → logprob: -5.857637405395508
    10. '!=' → logprob: -6.607637405395508

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.633447527885437
    2. '0' → logprob: -0.758447527885437
    3. '1' → logprob: -7.133447647094727
    4. ' n' → logprob: -11.133447647094727
    5. ' -' → logprob: -11.945947647094727
    6. '=' → logprob: -12.258447647094727
    7. 'n' → logprob: -12.383447647094727
    8. ' m' → logprob: -12.570947647094727
    9. '-' → logprob: -12.633447647094727
    10. '2' → logprob: -13.008447647094727

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010216168593615294
    2. ' ' → logprob: -7.376021385192871
    3. '1' → logprob: -7.876021385192871
    4. '-' → logprob: -12.376021385192871
    5. 'n' → logprob: -12.876021385192871
    6. ' -' → logprob: -13.251021385192871
    7. '2' → logprob: -13.876021385192871
    8. 'm' → logprob: -14.063521385192871
    9. '100' → logprob: -14.876021385192871
    10. 'd' → logprob: -14.938521385192871

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00021331508469302207
    2. ':
' → logprob: -9.000213623046875
    3. ' :' → logprob: -9.375213623046875
    4. ',' → logprob: -13.250213623046875
    5. ':

' → logprob: -14.000213623046875
    6. '):' → logprob: -15.000213623046875
    7. ')' → logprob: -15.250213623046875
    8. ''s' → logprob: -15.250213623046875
    9. ':
' → logprob: -15.375213623046875
    10. ' :
' → logprob: -15.500213623046875

Token 39: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2764111757278442
    2. '
' → logprob: -1.2764111757278442
    3. '   ' → logprob: -1.7764111757278442
    4. 'print' → logprob: -2.5264110565185547
    5. ' ans' → logprob: -2.9014110565185547
    6. ':
' → logprob: -3.5264110565185547
    7. '\n' → logprob: -4.026411056518555
    8. ' print' → logprob: -4.151411056518555
    9. 'ans' → logprob: -4.276411056518555
    10. '    
' → logprob: -4.776411056518555

Token 40: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11665467917919159
    2. 'ans' (adapté à ' ans') → logprob: -2.866654634475708
    3. ' ans' → logprob: -3.491654634475708
    4. ' print' → logprob: -3.991654634475708
    5. '   ' → logprob: -6.241654872894287
    6. 'n' → logprob: -7.616654872894287
    7. '	ans' → logprob: -7.866654872894287
    8. '(ans' → logprob: -8.116654396057129
    9. ' n' → logprob: -8.741654396057129
    10. '    ' → logprob: -8.991654396057129

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4805913269519806
    2. '=' → logprob: -0.9805912971496582
    3. '+=' → logprob: -5.355591297149658
    4. ' +=' → logprob: -6.355591297149658
    5. '=int' → logprob: -11.230591773986816
    6. '=n' → logprob: -11.605591773986816
    7. '+' → logprob: -13.230591773986816
    8. ' ' → logprob: -13.480591773986816
    9. '=max' → logprob: -13.480591773986816
    10. '=m' → logprob: -14.230591773986816

Token 42: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.647688090801239
    2. 'n' → logprob: -1.6476881504058838
    3. ' n' → logprob: -2.397688150405884
    4. 'm' → logprob: -2.522688150405884
    5. ' ' → logprob: -2.647688150405884
    6. ' m' → logprob: -4.022687911987305
    7. ' float' → logprob: -4.397687911987305
    8. 'float' → logprob: -4.647687911987305
    9. '0' → logprob: -7.022687911987305
    10. 'np' → logprob: -8.272687911987305

Token 43: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5882313847541809
    2. 'n' → logprob: -1.0882313251495361
    3. '1' → logprob: -3.088231325149536
    4. ' n' → logprob: -3.838231325149536
    5. ' m' → logprob: -3.963231325149536
    6. 'math' → logprob: -4.588231563568115
    7. ' ' → logprob: -5.463231563568115
    8. ' math' → logprob: -5.838231563568115
    9. 'np' → logprob: -6.588231563568115
    10. 'pow' → logprob: -7.088231563568115

Token 44: ' -' (ID: 533)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.6501511931419373
    2. '**' → logprob: -0.7751511931419373
    3. '/n' → logprob: -5.275151252746582
    4. ')' → logprob: -5.400151252746582
    5. ')**' → logprob: -5.900151252746582
    6. ' *' → logprob: -6.775151252746582
    7. ' /' → logprob: -6.900151252746582
    8. '/' → logprob: -7.275151252746582
    9. '*n' → logprob: -7.525151252746582
    10. '*' → logprob: -7.775151252746582

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004114969167858362
    2. ' ' → logprob: -5.504115104675293
    3. 'n' → logprob: -11.504115104675293
    4. '0' → logprob: -12.066615104675293
    5. ' n' → logprob: -12.066615104675293
    6. '   ' → logprob: -12.504115104675293
    7. '  ' → logprob: -13.191615104675293
    8. '2' → logprob: -13.629115104675293
    9. '-' → logprob: -13.629115104675293
    10. ')' → logprob: -14.129115104675293

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012237003829795867
    2. ' ' → logprob: -9.5001220703125
    3. 'n' → logprob: -10.6251220703125
    4. '2' → logprob: -11.7501220703125
    5. '0' → logprob: -12.8751220703125
    6. '   ' → logprob: -13.0626220703125
    7. '  ' → logprob: -13.5626220703125
    8. '

' → logprob: -13.7501220703125
    9. 'ans' → logprob: -13.9376220703125
    10. '```' → logprob: -14.0001220703125

Token 47: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03979440778493881
    2. ')**' → logprob: -3.539794445037842
    3. ')*' → logprob: -4.789794445037842
    4. ' )' → logprob: -6.664794445037842
    5. ')*(' → logprob: -9.539793968200684
    6. '*' → logprob: -9.539793968200684
    7. ')/' → logprob: -9.664793968200684
    8. '**' → logprob: -10.039793968200684
    9. ' ' → logprob: -10.539793968200684
    10. ' *' → logprob: -11.164793968200684

Token 48: 'n' (ID: 77)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.28731057047843933
    2. 'n' → logprob: -1.4123106002807617
    3. '2' → logprob: -5.162310600280762
    4. '(' → logprob: -9.037310600280762
    5. ' n' → logprob: -9.037310600280762
    6. ' m' → logprob: -9.037310600280762
    7. 'float' → logprob: -10.412310600280762
    8. ' ' → logprob: -11.787310600280762
    9. '(n' → logprob: -11.912310600280762
    10. '3' → logprob: -13.037310600280762

Token 49: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5221922993659973
    2. ' else' → logprob: -1.5221922397613525
    3. '
' → logprob: -2.0221922397613525
    4. '\n' → logprob: -3.1471922397613525
    5. 'elif' → logprob: -5.772192478179932
    6. '<|end|>' → logprob: -6.147192478179932
    7. ' 
' → logprob: -6.272192478179932
    8. '*' → logprob: -6.272192478179932
    9. ')' → logprob: -6.897192478179932
    10. ' elif' → logprob: -7.772192478179932

Token 50: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5374088883399963
    2. ' else' → logprob: -1.5374088287353516
    3. '\n' → logprob: -2.2874088287353516
    4. '
' → logprob: -3.6624088287353516
    5. ' 
' → logprob: -3.6624088287353516
    6. 'elif' → logprob: -3.9124088287353516
    7. ')' → logprob: -4.787408828735352
    8. '<|end|>' → logprob: -5.162408828735352
    9. '*' → logprob: -5.662408828735352
    10. ' ' → logprob: -6.287408828735352

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002101133344694972
    2. ' :' → logprob: -6.252100944519043
    3. ':
' → logprob: -8.752100944519043
    4. ',' → logprob: -12.377100944519043
    5. ' :
' → logprob: -12.377100944519043
    6. '   ' → logprob: -13.752100944519043
    7. '[' → logprob: -13.877100944519043
    8. ' ' → logprob: -14.502100944519043
    9. ''s' → logprob: -14.502100944519043
    10. ':

' → logprob: -15.252100944519043

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39608246088027954
    2. ' ' → logprob: -2.0210824012756348
    3. '    ' → logprob: -2.2710824012756348
    4. 'n' → logprob: -3.3960824012756348
    5. ' n' → logprob: -4.271082401275635
    6. ' ans' → logprob: -5.021082401275635
    7. ' (' → logprob: -5.146082401275635
    8. '1' → logprob: -5.396082401275635
    9. '0' → logprob: -5.896082401275635
    10. '(' → logprob: -5.896082401275635

Token 53: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.0167436599731445
    2. 'ans' (adapté à ' ans') → logprob: -1.3917436599731445
    3. 'x' → logprob: -2.8917436599731445
    4. 'a' → logprob: -3.3917436599731445
    5. 'p' → logprob: -3.6417436599731445
    6. 'q' → logprob: -3.8917436599731445
    7. ' x' → logprob: -4.0167436599731445
    8. 't' → logprob: -4.2667436599731445
    9. '1' → logprob: -4.2667436599731445
    10. 'n' → logprob: -4.3917436599731445

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07411413639783859
    2. ' +=' → logprob: -2.6991140842437744
    3. '=' → logprob: -5.6991143226623535
    4. '+=' → logprob: -7.8241143226623535
    5. ' *=' → logprob: -8.824113845825195
    6. ' -=' → logprob: -9.199113845825195
    7. ' /=' → logprob: -9.574113845825195
    8. ' ' → logprob: -9.949113845825195
    9. ' =(' → logprob: -10.699113845825195
    10. '/' → logprob: -12.324113845825195

Token 55: ' ' (ID: 220)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.0804085731506348
    2. ' (' → logprob: -1.5804085731506348
    3. ' ((' → logprob: -2.2054085731506348
    4. '2' → logprob: -2.3304085731506348
    5. '(' → logprob: -2.4554085731506348
    6. '(n' → logprob: -2.8304085731506348
    7. ' ' → logprob: -3.0804085731506348
    8. '(m' → logprob: -3.4554085731506348
    9. '(((' → logprob: -4.580408573150635
    10. '1' → logprob: -5.455408573150635

Token 56: '2' (ID: 17)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.4618750214576721
    2. '(m' → logprob: -1.9618749618530273
    3. '2' → logprob: -2.0868749618530273
    4. '(' → logprob: -2.9618749618530273
    5. '(n' → logprob: -3.4618749618530273
    6. '(((' → logprob: -4.461874961853027
    7. '1' → logprob: -6.086874961853027
    8. 'm' → logprob: -6.461874961853027
    9. '(d' → logprob: -6.586874961853027
    10. '(max' → logprob: -6.961874961853027

Token 57: '.' (ID: 13)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3943723142147064
    2. ' *' → logprob: -1.1443723440170288
    3. '*(' → logprob: -5.394372463226318
    4. '/' → logprob: -6.769372463226318
    5. '.' → logprob: -7.519372463226318
    6. ' /' → logprob: -7.769372463226318
    7. '*m' → logprob: -8.89437198638916
    8. '*((' → logprob: -8.89437198638916
    9. ' ' → logprob: -9.01937198638916
    10. '*n' → logprob: -9.39437198638916

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10247059166431427
    2. '*' → logprob: -2.602470636367798
    3. '*(' → logprob: -4.852470397949219
    4. '(n' → logprob: -4.977470397949219
    5. '(m' → logprob: -5.227470397949219
    6. '(' → logprob: -6.602470397949219
    7. '/' → logprob: -7.477470397949219
    8. '*m' → logprob: -8.102470397949219
    9. '(d' → logprob: -8.602470397949219
    10. 'd' → logprob: -9.227470397949219

Token 59: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.32625964283943176
    2. ' *' → logprob: -1.3262596130371094
    3. '/' → logprob: -5.201259613037109
    4. '*(' → logprob: -5.826259613037109
    5. ' /' → logprob: -6.076259613037109
    6. '/n' → logprob: -7.201259613037109
    7. ' ' → logprob: -8.20125961303711
    8. '/m' → logprob: -8.57625961303711
    9. '*n' → logprob: -8.70125961303711
    10. '*m' → logprob: -8.82625961303711

Token 60: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.13738496601581573
    2. '(n' → logprob: -3.2623848915100098
    3. '(d' → logprob: -3.5123848915100098
    4. 'd' → logprob: -3.7623848915100098
    5. 'm' → logprob: -4.26238489151001
    6. '((' → logprob: -4.51238489151001
    7. '(' → logprob: -4.88738489151001
    8. ' (' → logprob: -6.13738489151001
    9. 'n' → logprob: -6.88738489151001
    10. '(math' → logprob: -7.63738489151001

Token 61: 'n' (ID: 77)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.720647931098938
    2. 'm' → logprob: -1.095647931098938
    3. '(n' → logprob: -2.4706478118896484
    4. 'n' → logprob: -2.5956478118896484
    5. 'd' → logprob: -4.970647811889648
    6. '((' → logprob: -5.095647811889648
    7. '(' → logprob: -6.220647811889648
    8. '(d' → logprob: -6.720647811889648
    9. ' (' → logprob: -6.845647811889648
    10. 'math' → logprob: -7.095647811889648

Token 62: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.21364907920360565
    2. ' -' → logprob: -1.713649034500122
    3. '*' → logprob: -4.588649272918701
    4. ' *' → logprob: -6.838649272918701
    5. ' ' → logprob: -7.963649272918701
    6. 'm' → logprob: -8.963648796081543
    7. '-m' → logprob: -9.088648796081543
    8. 'd' → logprob: -9.088648796081543
    9. ')' → logprob: -9.838648796081543
    10. '**' → logprob: -10.588648796081543

Token 63: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01637696847319603
    2. ' d' → logprob: -4.766376972198486
    3. '1' → logprob: -5.141376972198486
    4. 'm' → logprob: -6.516376972198486
    5. ' ' → logprob: -8.391376495361328
    6. '-d' → logprob: -10.266376495361328
    7. ' m' → logprob: -10.266376495361328
    8. '  ' → logprob: -11.016376495361328
    9. '-' → logprob: -11.266376495361328
    10. '   ' → logprob: -11.266376495361328

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036480571143329144
    2. ' )' → logprob: -5.878648281097412
    3. ')/(' → logprob: -8.378647804260254
    4. '*' → logprob: -8.878647804260254
    5. ')*' → logprob: -9.003647804260254
    6. ' ' → logprob: -9.253647804260254
    7. ')/' → logprob: -9.378647804260254
    8. '-' → logprob: -9.503647804260254
    9. ')*(' → logprob: -10.003647804260254
    10. ' -' → logprob: -11.003647804260254

Token 65: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14599394798278809
    2. ' *' → logprob: -2.020993947982788
    3. '/' → logprob: -6.520994186401367
    4. ' /' → logprob: -7.020994186401367
    5. ' ' → logprob: -7.770994186401367
    6. '*(' → logprob: -8.895994186401367
    7. '*m' → logprob: -9.520994186401367
    8. '/m' → logprob: -9.895994186401367
    9. '*d' → logprob: -10.145994186401367
    10. '**' → logprob: -10.145994186401367

Token 66: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.02788819931447506
    2. '(d' → logprob: -4.652888298034668
    3. 'm' → logprob: -4.902888298034668
    4. 'd' → logprob: -5.402888298034668
    5. '(' → logprob: -5.902888298034668
    6. ' (' → logprob: -6.277888298034668
    7. '1' → logprob: -7.527888298034668
    8. '((' → logprob: -8.402888298034668
    9. ' ' → logprob: -8.777888298034668
    10. '(n' → logprob: -9.027888298034668

Token 67: 'm' (ID: 76)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.5286054611206055
    2. 'm' → logprob: -0.9036054611206055
    3. ' (' → logprob: -6.1536054611206055
    4. '(' → logprob: -7.2786054611206055
    5. ' m' → logprob: -7.2786054611206055
    6. 'd' → logprob: -7.5286054611206055
    7. ' ' → logprob: -7.9036054611206055
    8. '1' → logprob: -8.028605461120605
    9. '((' → logprob: -8.903605461120605
    10. '(d' → logprob: -9.028605461120605

Token 68: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6328163743019104
    2. '-' → logprob: -0.7578163743019104
    3. ' ' → logprob: -8.757816314697266
    4. '  ' → logprob: -10.757816314697266
    5. ')' → logprob: -11.132816314697266
    6. ' ' → logprob: -11.257816314697266
    7. '   ' → logprob: -12.757816314697266
    8. '*' → logprob: -13.007816314697266
    9. '−' → logprob: -13.757816314697266
    10. ' *' → logprob: -13.882816314697266

Token 69: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012750726193189621
    2. ' ' → logprob: -4.387750625610352
    3. '2' → logprob: -8.512750625610352
    4. ')' → logprob: -10.887750625610352
    5. '-' → logprob: -11.762750625610352
    6. '  ' → logprob: -13.012750625610352
    7. '   ' → logprob: -13.075250625610352
    8. ' ' → logprob: -13.262750625610352
    9. 'm' → logprob: -14.012750625610352
    10. '	' → logprob: -14.387750625610352

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.943783253314905e-05
    2. ' ' → logprob: -10.000059127807617
    3. '2' → logprob: -11.500059127807617
    4. '   ' → logprob: -14.312559127807617
    5. '```' → logprob: -14.562559127807617
    6. ')' → logprob: -14.750059127807617
    7. '-' → logprob: -15.187559127807617
    8. ' ' → logprob: -15.375059127807617
    9. 'm' → logprob: -15.500059127807617
    10. '{' → logprob: -15.687559127807617

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.041023217141628265
    2. ')/' → logprob: -3.7910232543945312
    3. ')/(' → logprob: -4.291023254394531
    4. ' )' → logprob: -5.791023254394531
    5. '/' → logprob: -7.416023254394531
    6. '/n' → logprob: -9.166023254394531
    7. ' ' → logprob: -9.791023254394531
    8. ' /' → logprob: -10.166023254394531
    9. '*' → logprob: -11.166023254394531
    10. '))' → logprob: -12.603523254394531

Token 72: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.17914845049381256
    2. ' /' → logprob: -2.0541484355926514
    3. '*' → logprob: -4.0541486740112305
    4. '/n' → logprob: -4.1791486740112305
    5. '/(' → logprob: -6.0541486740112305
    6. ' *' → logprob: -8.55414867401123
    7. ' /(' → logprob: -9.42914867401123
    8. '/d' → logprob: -9.55414867401123
    9. ' ' → logprob: -9.92914867401123
    10. ')' → logprob: -10.05414867401123

Token 73: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.365731418132782
    2. ' (' → logprob: -1.3657314777374268
    3. '(' → logprob: -3.2407314777374268
    4. 'n' → logprob: -4.990731239318848
    5. ' n' → logprob: -5.365731239318848
    6. '(math' → logprob: -7.990731239318848
    7. ' math' → logprob: -10.115731239318848
    8. ' ' → logprob: -10.490731239318848
    9. '(np' → logprob: -10.865731239318848
    10. '<|end|>' → logprob: -11.240731239318848

Token 74: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -1.399856686592102
    2. '**' → logprob: -1.774856686592102
    3. '<|end|>' → logprob: -1.774856686592102
    4. '/' → logprob: -2.0248565673828125
    5. '/n' → logprob: -2.1498565673828125
    6. '
' → logprob: -2.5248565673828125
    7. '*' → logprob: -3.8998565673828125
    8. ' ' → logprob: -4.0248565673828125
    9. '```' → logprob: -5.1498565673828125
    10. 'd' → logprob: -5.1498565673828125

Token 75: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1438537836074829
    2. 'n' → logprob: -2.0188536643981934
    3. '**' → logprob: -6.768853664398193
    4. '2' → logprob: -11.518854141235352
    5. ' m' → logprob: -12.268854141235352
    6. '(' → logprob: -12.518854141235352
    7. ' n' → logprob: -12.643854141235352
    8. '(n' → logprob: -12.643854141235352
    9. ' ' → logprob: -13.268854141235352
    10. ' **' → logprob: -14.768854141235352

Token 76: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21260102093219757
    2. '
' → logprob: -1.7126010656356812
    3. '<|end|>' → logprob: -5.837601184844971
    4. '+' → logprob: -6.087601184844971
    5. '
' → logprob: -6.587601184844971
    6. '\n' → logprob: -6.587601184844971
    7. '*' → logprob: -6.962601184844971
    8. ' print' → logprob: -7.712601184844971
    9. '```' → logprob: -7.962601184844971
    10. '  
' → logprob: -8.587600708007812

Token 77: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.3915141355246305e-05
    2. ' print' → logprob: -10.87502384185791
    3. '
' → logprob: -13.37502384185791
    4. '```' → logprob: -14.00002384185791
    5. 'for' → logprob: -14.12502384185791
    6. '*' → logprob: -14.50002384185791
    7. '<|end|>' → logprob: -15.37502384185791
    8. 'pr' → logprob: -15.50002384185791
    9. '+' → logprob: -15.62502384185791
    10. ')' → logprob: -16.000024795532227

Token 78: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023279840126633644
    2. '(ans' → logprob: -3.773279905319214
    3. '()' → logprob: -11.273280143737793
    4. '('' → logprob: -12.023280143737793
    5. '("("' → logprob: -12.273280143737793
    6. '(f' → logprob: -13.148280143737793
    7. '(`' → logprob: -13.148280143737793
    8. '((' → logprob: -13.148280143737793
    9. '(round' → logprob: -13.648280143737793
    10. ' (' → logprob: -13.648280143737793

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ' )' → logprob: -12.625003814697266
    3. ')
' → logprob: -16.875003814697266
    4. '))' → logprob: -17.250003814697266
    5. ')`' → logprob: -17.875003814697266
    6. '')' → logprob: -19.125003814697266
    7. ')**' → logprob: -19.375003814697266
    8. '）' → logprob: -19.375003814697266
    9. ' ' → logprob: -19.500003814697266
    10. '()' → logprob: -19.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 77
Tokens correctement prédits (1ère position, stricte): 28
Tokens correctement prédits (1ère position, avec adaptation): 28
Tokens correctement prédits (top 10): 67
Précision stricte (1ère position): 36.36%
Précision adaptée (1ère position): 36.36%
Précision (top 10): 87.01%
================================================================================
