================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
import collections
import heapq
import itertools

input_stream = sys.stdin

def read_single_line_stripped():
    return input_stream.readline().strip("\n")

def read_line_split():
    return input_stream.readline().strip("\n").split()

def compute_gcd(val_a, val_b):
    val_a, val_b = max(val_a, val_b), min(val_a, val_b)
    while val_a % val_b > 0:
        val_a, val_b = val_b, val_a % val_b
    return val_b

MODULO = 7 + 10 ** 9

def process_solution():
    num_elements = int(read_single_line_stripped())
    input_values = [int(val) for val in read_line_split()]

    xor_dp = [[0, 1] for _ in range(2 ** 20)]
    memoization = [0] * (2 ** 20)
    acc_xor = 0
    zero_sequences = 0

    for idx in range(num_elements):
        acc_xor ^= input_values[idx]
        if acc_xor == 0:
            zero_sequences += 1
        else:
            xor_dp[acc_xor][1] += xor_dp[acc_xor][0] * (zero_sequences - memoization[acc_xor])
            xor_dp[acc_xor][1] %= MODULO
            xor_dp[acc_xor][0] += xor_dp[acc_xor][1]
            xor_dp[acc_xor][0] %= MODULO
            memoization[acc_xor] = zero_sequences

    if acc_xor > 0:
        print(xor_dp[acc_xor][1])
    else:
        result_answer = pow(2, zero_sequences - 1, MODULO)
        for idx in range(2 ** 20):
            result_answer += xor_dp[idx][0]
            result_answer %= MODULO
        print(result_answer)

    return 0

if __name__ == "__main__":
    process_solution()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026953943073749542
    2. '\n' → logprob: -3.901953935623169
    3. '<|end|>' → logprob: -6.651954174041748
    4. 'import' → logprob: -7.151954174041748
    5. 'newline' → logprob: -7.151954174041748
    6. '\' → logprob: -7.151954174041748
    7. '```' → logprob: -7.526954174041748
    8. '' → logprob: -7.901954174041748
    9. '<|end|>' → logprob: -7.901954174041748
    10. 'print' → logprob: -8.27695369720459

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1524793654680252
    2. 'import' → logprob: -3.152479410171509
    3. '\' → logprob: -3.402479410171509
    4. '\n' → logprob: -3.777479410171509
    5. '
' → logprob: -4.02747917175293
    6. '

' → logprob: -5.02747917175293
    7. '```' → logprob: -5.27747917175293
    8. '<|end|>' → logprob: -5.40247917175293
    9. ',' → logprob: -5.90247917175293
    10. '<|end|>' → logprob: -6.90247917175293

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7522240877151489
    2. '\n' → logprob: -1.627224087715149
    3. 'import' → logprob: -2.3772239685058594
    4. '
' → logprob: -2.5022239685058594
    5. '```' → logprob: -3.0022239685058594
    6. '\' → logprob: -3.3772239685058594
    7. '

' → logprob: -3.3772239685058594
    8. '<|end|>' → logprob: -4.002223968505859
    9. ',' → logprob: -5.002223968505859
    10. '' → logprob: -5.877223968505859

Token 7: ' collections' (ID: 22690)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.21260276436805725
    2. ' os' → logprob: -1.7126027345657349
    3. 'random' → logprob: -4.837602615356445
    4. ' random' → logprob: -6.462602615356445
    5. 're' → logprob: -6.962602615356445
    6. ' re' → logprob: -7.962602615356445
    7. 'collections' → logprob: -9.587602615356445
    8. 'time' → logprob: -9.962602615356445
    9. 'json' → logprob: -10.337602615356445
    10. 'numpy' → logprob: -10.337602615356445

Token 8: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3706282675266266
    2. '<|end|>' → logprob: -2.2456283569335938
    3. '\n' → logprob: -2.3706283569335938
    4. 'import' → logprob: -3.1206283569335938
    5. '\' → logprob: -3.4956283569335938
    6. '
' → logprob: -4.620628356933594
    7. ',' → logprob: -5.245628356933594
    8. 'newline' → logprob: -5.370628356933594
    9. '```' → logprob: -5.495628356933594
    10. '<|end|>' → logprob: -5.495628356933594

Token 9: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4953923523426056
    2. 'import' → logprob: -1.7453923225402832
    3. '
' → logprob: -2.870392322540283
    4. '\n' → logprob: -2.995392322540283
    5. '

' → logprob: -3.245392322540283
    6. '```' → logprob: -3.870392322540283
    7. ',' → logprob: -4.370392322540283
    8. '<|end|>' → logprob: -4.495392322540283
    9. '\' → logprob: -4.620392322540283
    10. '<|end|>' → logprob: -5.870392322540283

Token 10: ' heap' (ID: 37237)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.5422787070274353
    2. ' heap' → logprob: -1.29227876663208
    3. 'heap' → logprob: -2.79227876663208
    4. ' os' → logprob: -3.41727876663208
    5. 'it' → logprob: -3.66727876663208
    6. ' functools' → logprob: -4.41727876663208
    7. 'os' → logprob: -4.91727876663208
    8. 're' → logprob: -7.16727876663208
    9. ' re' → logprob: -7.29227876663208
    10. ' threading' → logprob: -7.66727876663208

Token 11: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.4121114822482923e-06
    2. 's' → logprob: -13.625003814697266
    3. '.' → logprob: -14.000003814697266
    4. 'queue' → logprob: -14.375003814697266
    5. 't' → logprob: -15.000003814697266
    6. 'u' → logprob: -16.250003814697266
    7. '_' → logprob: -16.625003814697266
    8. 'n' → logprob: -17.375003814697266
    9. ' queue' → logprob: -17.500003814697266
    10. 'p' → logprob: -17.625003814697266

Token 12: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6665968298912048
    2. '
' → logprob: -1.5415968894958496
    3. 'import' → logprob: -1.9165968894958496
    4. '<|end|>' → logprob: -3.0415968894958496
    5. '```' → logprob: -3.4165968894958496
    6. '\' → logprob: -4.04159688949585
    7. '

' → logprob: -4.66659688949585
    8. '.' → logprob: -4.91659688949585
    9. '<|end|>' → logprob: -6.04159688949585
    10. 'def' → logprob: -6.16659688949585

Token 13: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.75581955909729
    2. '
' → logprob: -2.00581955909729
    3. '\n' → logprob: -2.13081955909729
    4. '```' → logprob: -2.25581955909729
    5. '

' → logprob: -2.50581955909729
    6. '\' → logprob: -3.00581955909729
    7. 'from' → logprob: -4.505819320678711
    8. 'def' → logprob: -4.505819320678711
    9. 'class' → logprob: -5.005819320678711
    10. '.' → logprob: -5.630819320678711

Token 14: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.03409801051020622
    2. ' bis' → logprob: -4.159098148345947
    3. ' functools' → logprob: -5.034098148345947
    4. 'bis' → logprob: -5.534098148345947
    5. 'it' → logprob: -6.034098148345947
    6. ' operator' → logprob: -6.534098148345947
    7. ' queue' → logprob: -7.159098148345947
    8. ' threading' → logprob: -7.409098148345947
    9. 'operator' → logprob: -7.659098148345947
    10. ' os' → logprob: -7.784098148345947

Token 15: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0865873098373413
    2. '

' → logprob: -1.3365873098373413
    3. 'import' → logprob: -1.7115873098373413
    4. '```' → logprob: -2.461587429046631
    5. '\n' → logprob: -2.586587429046631
    6. '.' → logprob: -3.836587429046631
    7. '<|end|>' → logprob: -4.211587429046631
    8. '\' → logprob: -4.586587429046631
    9. '<|end|>' → logprob: -6.086587429046631
    10. '' → logprob: -6.086587429046631

Token 16: 'input' (ID: 2586)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4440399706363678
    2. 'def' → logprob: -1.8190399408340454
    3. 'class' → logprob: -2.944040060043335
    4. 'from' → logprob: -3.069040060043335
    5. '```' → logprob: -3.444040060043335
    6. '\n' → logprob: -3.819040060043335
    7. '
' → logprob: -3.944040060043335
    8. '\' → logprob: -4.944039821624756
    9. 'n' → logprob: -5.819039821624756
    10. '.' → logprob: -5.819039821624756

Token 17: '_stream' (ID: 29670)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010277987457811832
    2. '.' → logprob: -4.635278224945068
    3. ')' → logprob: -8.76027774810791
    4. '=' → logprob: -9.76027774810791
    5. '()' → logprob: -9.88527774810791
    6. '<|end|>' → logprob: -10.01027774810791
    7. '(.)' → logprob: -10.13527774810791
    8. '(
' → logprob: -10.38527774810791
    9. '```' → logprob: -10.51027774810791
    10. '("("' → logprob: -10.88527774810791

Token 18: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12161088734865189
    2. '=' → logprob: -2.3716108798980713
    3. ' =' → logprob: -4.12161111831665
    4. '.readline' → logprob: -6.24661111831665
    5. '(' → logprob: -6.62161111831665
    6. ')' → logprob: -7.37161111831665
    7. '.=' → logprob: -7.74661111831665
    8. '.read' → logprob: -8.621610641479492
    9. '()' → logprob: -9.496610641479492
    10. '[:]' → logprob: -9.496610641479492

Token 19: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5768335461616516
    2. 'sys' → logprob: -0.8268335461616516
    3. ' iter' → logprob: -7.326833724975586
    4. 'iter' → logprob: -9.201833724975586
    5. 'input' → logprob: -9.451833724975586
    6. ' input' → logprob: -10.576833724975586
    7. '(sys' → logprob: -11.576833724975586
    8. '=sys' → logprob: -12.076833724975586
    9. '	sys' → logprob: -12.326833724975586
    10. 'open' → logprob: -12.576833724975586

Token 20: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.049077119678258896
    2. '.' → logprob: -3.049077033996582
    3. '.stdout' → logprob: -8.299077033996582
    4. ' .' → logprob: -9.049077033996582
    5. '.argv' → logprob: -9.549077033996582
    6. '.std' → logprob: -10.674077033996582
    7. '.input' → logprob: -11.174077033996582
    8. '.readline' → logprob: -11.674077033996582
    9. '.standard' → logprob: -13.049077033996582
    10. '.stderr' → logprob: -13.674077033996582

Token 21: '

' (ID: 279)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.25798577070236206
    2. '.' → logprob: -1.5079858303070068
    3. '.read' → logprob: -5.132985591888428
    4. '.readlines' → logprob: -9.132986068725586
    5. 'read' → logprob: -11.757986068725586
    6. '.write' → logprob: -11.757986068725586
    7. '.buffer' → logprob: -12.132986068725586
    8. '.\' → logprob: -12.757986068725586
    9. '.Read' → logprob: -13.882986068725586
    10. '.
' → logprob: -13.882986068725586

Token 22: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04797807335853577
    2. '.readline' → logprob: -3.172978162765503
    3. 'def' → logprob: -5.797977924346924
    4. '.read' → logprob: -6.922977924346924
    5. '=' → logprob: -8.297978401184082
    6. 'read' → logprob: -8.922978401184082
    7. 'data' → logprob: -9.047978401184082
    8. 'for' → logprob: -9.172978401184082
    9. '.readlines' → logprob: -9.672978401184082
    10. '.
' → logprob: -9.797978401184082

Token 23: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.09245295077562332
    2. ' ' → logprob: -3.2174530029296875
    3. ' parse' → logprob: -4.0924530029296875
    4. ' solve' → logprob: -4.3424530029296875
    5. ' read' → logprob: -4.8424530029296875
    6. ' readline' → logprob: -5.8424530029296875
    7. ' dfs' → logprob: -6.7174530029296875
    8. ' factorial' → logprob: -6.7174530029296875
    9. ' process' → logprob: -7.0924530029296875
    10. ' _' → logprob: -7.3424530029296875

Token 24: '_single' (ID: 46053)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.2884114980697632
    2. '():' → logprob: -1.6634114980697632
    3. '_' → logprob: -3.1634116172790527
    4. '(' → logprob: -4.538411617279053
    5. '()' → logprob: -5.288411617279053
    6. '_token' → logprob: -6.413411617279053
    7. '_input' → logprob: -7.413411617279053
    8. 'line' → logprob: -8.663411140441895
    9. ':' → logprob: -9.663411140441895
    10. '():
' → logprob: -9.663411140441895

Token 25: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.011770523153245449
    2. '_token' → logprob: -5.636770725250244
    3. 'line' → logprob: -5.886770725250244
    4. '_word' → logprob: -5.886770725250244
    5. '_' → logprob: -6.761770725250244
    6. '()' → logprob: -7.511770725250244
    7. '(' → logprob: -8.136770248413086
    8. '_char' → logprob: -8.886770248413086
    9. '_int' → logprob: -8.886770248413086
    10. 'int' → logprob: -9.511770248413086

Token 26: '_str' (ID: 6182)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001084374962374568
    2. ' ():' → logprob: -7.001084327697754
    3. '()' → logprob: -9.001084327697754
    4. '():
' → logprob: -10.251084327697754
    5. ' ()' → logprob: -11.626084327697754
    6. '_input' → logprob: -13.501084327697754
    7. '(' → logprob: -13.751084327697754
    8. '):' → logprob: -14.626084327697754
    9. '():

' → logprob: -14.751084327697754
    10. '():
' → logprob: -15.376084327697754

Token 27: 'ipped' (ID: 8193)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.013850589282810688
    2. 'ing' → logprob: -4.388850688934326
    3. '()' → logprob: -7.513850688934326
    4. ' ():' → logprob: -7.888850688934326
    5. '():
' → logprob: -8.013850212097168
    6. '(' → logprob: -10.388850212097168
    7. 'ings' → logprob: -10.888850212097168
    8. 'eam' → logprob: -10.888850212097168
    9. ' ()' → logprob: -11.263850212097168
    10. '():
' → logprob: -12.638850212097168

Token 28: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0008478637901134789
    2. '(' → logprob: -7.375847816467285
    3. '()' → logprob: -8.875847816467285
    4. ' ():' → logprob: -9.500847816467285
    5. '():
' → logprob: -13.000847816467285
    6. ':' → logprob: -13.000847816467285
    7. ' ()' → logprob: -14.125847816467285
    8. '(":' → logprob: -14.750847816467285
    9. '(:' → logprob: -15.250847816467285
    10. '(input' → logprob: -16.1258487701416

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012334931641817093
    2. '():' → logprob: -4.637334823608398
    3. ' return' → logprob: -7.012334823608398
    4. 'return' → logprob: -7.262334823608398
    5. '()' → logprob: -7.512334823608398
    6. ':' → logprob: -8.262334823608398
    7. ':return' → logprob: -9.387334823608398
    8. '	return' → logprob: -10.387334823608398
    9. '(' → logprob: -11.137334823608398
    10. ' ' → logprob: -11.887334823608398

Token 30: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.776624321937561
    2. 'return' (adapté à ' return') → logprob: -0.776624321937561
    3. '   ' → logprob: -2.5266242027282715
    4. ' line' → logprob: -9.02662467956543
    5. 'line' → logprob: -10.90162467956543
    6. ' ' → logprob: -11.40162467956543
    7. '	return' → logprob: -12.77662467956543
    8. '    
' → logprob: -13.27662467956543
    9. 'try' → logprob: -13.65162467956543
    10. ' try' → logprob: -13.77662467956543

Token 31: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5761379599571228
    2. ' input' → logprob: -0.8261379599571228
    3. ' sys' → logprob: -9.07613754272461
    4. 'sys' → logprob: -9.70113754272461
    5. '(input' → logprob: -11.45113754272461
    6. ' ' → logprob: -12.45113754272461
    7. ' ' → logprob: -13.32613754272461
    8. ' (' → logprob: -13.70113754272461
    9. ' next' → logprob: -13.70113754272461
    10. '<input' → logprob: -14.20113754272461

Token 32: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.022850440815091133
    2. '().' → logprob: -4.022850513458252
    3. '()' → logprob: -5.397850513458252
    4. 'stream' → logprob: -9.772850036621094
    5. '(' → logprob: -10.147850036621094
    6. '_' → logprob: -11.022850036621094
    7. '_STREAM' → logprob: -11.897850036621094
    8. '_line' → logprob: -12.022850036621094
    9. '()
' → logprob: -12.147850036621094
    10. 'Stream' → logprob: -12.272850036621094

Token 33: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.490809417096898e-05
    2. '.' → logprob: -9.875055313110352
    3. '.read' → logprob: -12.875055313110352
    4. '().' → logprob: -14.125055313110352
    5. ' readline' → logprob: -16.75005531311035
    6. '.readlines' → logprob: -18.12505531311035
    7. ' .' → logprob: -19.25005531311035
    8. '.next' → logprob: -19.75005531311035
    9. 'read' → logprob: -20.12505531311035
    10. '```' → logprob: -20.87505531311035

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5759687423706055
    2. '()' → logprob: -0.8259687423706055
    3. '(' → logprob: -10.950968742370605
    4. ' ()' → logprob: -12.450968742370605
    5. ' ().' → logprob: -13.325968742370605
    6. '()
' → logprob: -13.450968742370605
    7. '()

' → logprob: -13.950968742370605
    8. '()\' → logprob: -14.325968742370605
    9. '()<' → logprob: -14.575968742370605
    10. '())' → logprob: -14.700968742370605

Token 35: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0003357006062287837
    2. 'rstrip' → logprob: -8.000335693359375
    3. 'str' → logprob: -16.125335693359375
    4. '_strip' → logprob: -16.625335693359375
    5. ' strip' → logprob: -17.500335693359375
    6. '(strip' → logprob: -18.875335693359375
    7. 'decode' → logprob: -20.750335693359375
    8. 'stripe' → logprob: -20.750335693359375
    9. '-strip' → logprob: -21.250335693359375
    10. 'Strip' → logprob: -21.375335693359375

Token 36: '("\' (ID: 9730)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004372254479676485
    2. '(' → logprob: -7.875437259674072
    3. '()
' → logprob: -10.000436782836914
    4. '()

' → logprob: -12.000436782836914
    5. '()\' → logprob: -13.500436782836914
    6. '()`' → logprob: -13.625436782836914
    7. '()"' → logprob: -14.625436782836914
    8. '()(' → logprob: -14.625436782836914
    9. '().' → logprob: -14.750436782836914
    10. '(
' → logprob: -15.000436782836914

Token 37: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31370291113853455
    2. '\n' → logprob: -1.313702940940857
    3. ' \' → logprob: -7.8137030601501465
    4. '
' → logprob: -11.688702583312988
    5. 'r' → logprob: -11.938702583312988
    6. '\' → logprob: -12.063702583312988
    7. '")' → logprob: -12.188702583312988
    8. ')' → logprob: -12.313702583312988
    9. '\u' → logprob: -13.063702583312988
    10. ' ' → logprob: -14.063702583312988

Token 38: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0002390594017924741
    2. ')' → logprob: -8.625239372253418
    3. '")
' → logprob: -10.500239372253418
    4. ')")' → logprob: -11.125239372253418
    5. '')' → logprob: -12.125239372253418
    6. '"' → logprob: -12.125239372253418
    7. ' ")' → logprob: -13.250239372253418
    8. '\"' → logprob: -13.500239372253418
    9. '\")' → logprob: -14.000239372253418
    10. '")
' → logprob: -14.250239372253418

Token 39: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006316631333902478
    2. '
' → logprob: -7.625631809234619
    3. '\' → logprob: -9.625631332397461
    4. '#' → logprob: -10.500631332397461
    5. '

' → logprob: -10.750631332397461
    6. ' def' → logprob: -11.500631332397461
    7. '\n' → logprob: -11.750631332397461
    8. '```' → logprob: -12.875631332397461
    9. '<|end|>' → logprob: -13.875631332397461
    10. 'd' → logprob: -14.125631332397461

Token 40: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.03375185653567314
    2. 'read' → logprob: -3.408751964569092
    3. '_read' → logprob: -10.658751487731934
    4. ' main' → logprob: -10.908751487731934
    5. ' ' → logprob: -11.158751487731934
    6. ' readline' → logprob: -11.283751487731934
    7. ' parse' → logprob: -11.408751487731934
    8. ' split' → logprob: -12.408751487731934
    9. 'split' → logprob: -13.033751487731934
    10. '	read' → logprob: -13.158751487731934

Token 41: '_line' (ID: 14418)
  Prédit: '_single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.008744694292545319
    2. '_line' → logprob: -5.258744716644287
    3. '_' → logprob: -6.508744716644287
    4. '_int' → logprob: -6.633744716644287
    5. '_integer' → logprob: -8.633744239807129
    6. '()' → logprob: -8.883744239807129
    7. '_multiple' → logprob: -9.758744239807129
    8. '_one' → logprob: -10.133744239807129
    9. '_a' → logprob: -10.383744239807129
    10. '_n' → logprob: -10.508744239807129

Token 42: '_split' (ID: 39921)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8363354206085205
    2. '():' → logprob: -0.9613354206085205
    3. '_str' → logprob: -1.8363354206085205
    4. 's' → logprob: -4.961335182189941
    5. '_tokens' → logprob: -5.461335182189941
    6. '_' → logprob: -5.461335182189941
    7. '():
' → logprob: -6.461335182189941
    8. '_split' → logprob: -6.711335182189941
    9. '_list' → logprob: -6.836335182189941
    10. '_s' → logprob: -6.961335182189941

Token 43: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009210065007209778
    2. '():' → logprob: -5.009210109710693
    3. '(' → logprob: -7.009210109710693
    4. 'ted' → logprob: -7.759210109710693
    5. '():
' → logprob: -8.759209632873535
    6. '("("' → logprob: -8.759209632873535
    7. '_' → logprob: -9.259209632873535
    8. 'ped' → logprob: -9.384209632873535
    9. 'ed' → logprob: -9.509209632873535
    10. '("' → logprob: -9.634209632873535

Token 44: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07645128667354584
    2. '   ' → logprob: -2.701451301574707
    3. '()' → logprob: -5.326451301574707
    4. ' ():' → logprob: -7.076451301574707
    5. '():
' → logprob: -7.826451301574707
    6. ' ()' → logprob: -8.326451301574707
    7. ':' → logprob: -9.451451301574707
    8. '[]' → logprob: -11.201451301574707
    9. 'return' → logprob: -11.701451301574707
    10. '().' → logprob: -11.701451301574707

Token 45: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7246447801589966
    2. 'return' (adapté à ' return') → logprob: -0.7246447801589966
    3. ' return' → logprob: -3.474644660949707
    4. ' ' → logprob: -11.099644660949707
    5. '	return' → logprob: -11.724644660949707
    6. '  ' → logprob: -12.849644660949707
    7. '    ' → logprob: -12.974644660949707
    8. 'input' → logprob: -13.224644660949707
    9. '    
' → logprob: -13.724644660949707
    10. ')' → logprob: -13.849644660949707

Token 46: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.9814919829368591
    2. 'read' → logprob: -1.231492042541504
    3. ' read' → logprob: -1.731492042541504
    4. 'input' → logprob: -1.856492042541504
    5. 'list' → logprob: -9.981492042541504
    6. ' ' → logprob: -10.481492042541504
    7. ' list' → logprob: -10.481492042541504
    8. '(input' → logprob: -11.731492042541504
    9. ' readline' → logprob: -11.731492042541504
    10. '(read' → logprob: -12.231492042541504

Token 47: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.00027480217977426946
    2. '_' → logprob: -8.375274658203125
    3. '_split' → logprob: -11.750274658203125
    4. '_str' → logprob: -11.750274658203125
    5. 'stream' → logprob: -12.000274658203125
    6. '_s' → logprob: -12.250274658203125
    7. '_line' → logprob: -12.500274658203125
    8. '_STREAM' → logprob: -13.500274658203125
    9. '_string' → logprob: -13.625274658203125
    10. '_st' → logprob: -13.750274658203125

Token 48: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0009238460334017873
    2. '().' → logprob: -7.0009236335754395
    3. '.read' → logprob: -12.250924110412598
    4. '.' → logprob: -12.500924110412598
    5. '.readlines' → logprob: -12.750924110412598
    6. ' readline' → logprob: -14.875924110412598
    7. '()' → logprob: -15.125924110412598
    8. ' .' → logprob: -15.250924110412598
    9. '().__' → logprob: -17.87592315673828
    10. '._' → logprob: -18.12592315673828

Token 49: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.04973294213414192
    2. '()' → logprob: -3.0497329235076904
    3. '(' → logprob: -6.7997331619262695
    4. ' ().' → logprob: -11.29973316192627
    5. ' ()' → logprob: -12.17473316192627
    6. '.' → logprob: -12.67473316192627
    7. '().'' → logprob: -13.42473316192627
    8. '()

' → logprob: -13.54973316192627
    9. '(.' → logprob: -14.04973316192627
    10. '()`' → logprob: -14.17473316192627

Token 50: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.2521340250968933
    2. 'strip' → logprob: -1.502134084701538
    3. 'rstrip' → logprob: -8.502134323120117
    4. 'read' → logprob: -13.627134323120117
    5. 'decode' → logprob: -14.377134323120117
    6. ' split' → logprob: -17.252134323120117
    7. 'str' → logprob: -17.877134323120117
    8. '(split' → logprob: -17.877134323120117
    9. 'rs' → logprob: -18.252134323120117
    10. 'spl' → logprob: -18.377134323120117

Token 51: '("\' (ID: 9730)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.37708407640457153
    2. '().' → logprob: -1.6270840167999268
    3. '("("' → logprob: -2.3770840167999268
    4. '()' → logprob: -4.377084255218506
    5. '("\' → logprob: -4.627084255218506
    6. '('' → logprob: -6.127084255218506
    7. '(' → logprob: -8.502083778381348
    8. '"' → logprob: -10.877083778381348
    9. '("(' → logprob: -10.877083778381348
    10. '()"' → logprob: -11.002083778381348

Token 52: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.024304118007421494
    2. ' \' → logprob: -4.149303913116455
    3. '"\' → logprob: -5.774303913116455
    4. ')' → logprob: -6.274303913116455
    5. ' "\' → logprob: -6.774303913116455
    6. 'n' → logprob: -7.274303913116455
    7. '()\' → logprob: -7.649303913116455
    8. '("\' → logprob: -8.149304389953613
    9. ')\' → logprob: -8.149304389953613
    10. '()' → logprob: -8.899304389953613

Token 53: '").' (ID: 3172)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.10383883863687515
    2. '()' → logprob: -3.2288389205932617
    3. '()).' → logprob: -3.2288389205932617
    4. '").' → logprob: -4.603838920593262
    5. '().' → logprob: -4.853838920593262
    6. ')' → logprob: -7.228838920593262
    7. ' ).' → logprob: -7.353838920593262
    8. '').' → logprob: -8.978838920593262
    9. '(' → logprob: -9.728838920593262
    10. ' ()' → logprob: -11.353838920593262

Token 54: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. 'spl' → logprob: -17.125
    3. ' split' → logprob: -17.375
    4. 's' → logprob: -19.75
    5. 'strip' → logprob: -19.875
    6. 'rstrip' → logprob: -20.0
    7. '(split' → logprob: -20.25
    8. 'sp' → logprob: -21.375
    9. '.split' → logprob: -21.5
    10. '```' → logprob: -23.0

Token 55: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25208428502082825
    2. '(' → logprob: -1.5020842552185059
    3. '()
' → logprob: -9.502084732055664
    4. '()

' → logprob: -10.252084732055664
    5. '(
' → logprob: -10.877084732055664
    6. '(\' → logprob: -12.002084732055664
    7. '('' → logprob: -12.502084732055664
    8. '()\' → logprob: -12.502084732055664
    9. '(

' → logprob: -13.127084732055664
    10. '()`' → logprob: -13.502084732055664

Token 56: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011827271664515138
    2. '#' → logprob: -7.251182556152344
    3. '\' → logprob: -8.501182556152344
    4. '```' → logprob: -8.751182556152344
    5. ' def' → logprob: -10.126182556152344
    6. '
' → logprob: -11.126182556152344
    7. '

' → logprob: -11.126182556152344
    8. 'd' → logprob: -11.376182556152344
    9. 'de' → logprob: -12.001182556152344
    10. '\n' → logprob: -12.626182556152344

Token 57: ' compute' (ID: 23864)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.1270774006843567
    2. 'read' → logprob: -2.127077341079712
    3. ' main' → logprob: -10.127077102661133
    4. '_read' → logprob: -10.627077102661133
    5. ' int' → logprob: -11.127077102661133
    6. 'int' → logprob: -11.377077102661133
    7. ' readline' → logprob: -11.752077102661133
    8. ' reads' → logprob: -11.877077102661133
    9. '(read' → logprob: -12.127077102661133
    10. ' ' → logprob: -12.627077102661133

Token 58: '_g' (ID: 5439)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.48270511627197266
    2. '_sum' → logprob: -1.9827051162719727
    3. '_' → logprob: -2.7327051162719727
    4. '(' → logprob: -2.9827051162719727
    5. '_max' → logprob: -3.2327051162719727
    6. '_distance' → logprob: -3.4827051162719727
    7. '_dist' → logprob: -4.482705116271973
    8. '_cost' → logprob: -5.232705116271973
    9. '_value' → logprob: -5.857705116271973
    10. '_similarity' → logprob: -5.857705116271973

Token 59: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0009817203972488642
    2. 'reat' → logprob: -7.12598180770874
    3. 'c' → logprob: -10.625981330871582
    4. '_' → logprob: -10.750981330871582
    5. 'e' → logprob: -10.875981330871582
    6. '_c' → logprob: -11.250981330871582
    7. '(n' → logprob: -11.625981330871582
    8. 'g' → logprob: -11.625981330871582
    9. '```' → logprob: -11.750981330871582
    10. '_g' → logprob: -11.875981330871582

Token 60: '(val' (ID: 17391)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05542164295911789
    2. '(a' → logprob: -2.9304215908050537
    3. '(x' → logprob: -8.430421829223633
    4. ' (' → logprob: -8.680421829223633
    5. '_' → logprob: -9.805421829223633
    6. '("("' → logprob: -11.305421829223633
    7. '(n' → logprob: -11.680421829223633
    8. '()' → logprob: -12.180421829223633
    9. '<|end|>' → logprob: -12.305421829223633
    10. '(data' → logprob: -12.430421829223633

Token 61: '_a' (ID: 10852)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.6725325584411621
    2. '1' → logprob: -0.9225325584411621
    3. 'ues' → logprob: -3.172532558441162
    4. ')' → logprob: -3.672532558441162
    5. '):' → logprob: -4.297532558441162
    6. ',' → logprob: -4.922532558441162
    7. 'u' → logprob: -6.547532558441162
    8. '(' → logprob: -7.047532558441162
    9. 'a' → logprob: -7.297532558441162
    10. 's' → logprob: -7.922532558441162

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004921700805425644
    2. ',val' → logprob: -5.379921913146973
    3. ' ,' → logprob: -8.129921913146973
    4. '_,' → logprob: -12.879921913146973
    5. ',a' → logprob: -13.504921913146973
    6. ',b' → logprob: -13.879921913146973
    7. 'a' → logprob: -14.879921913146973
    8. '_val' → logprob: -15.254921913146973
    9. ',
' → logprob: -15.504921913146973
    10. 'val' → logprob: -15.879921913146973

Token 63: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.029755808413028717
    2. 'val' → logprob: -3.5297558307647705
    3. '	val' → logprob: -13.154755592346191
    4. ',val' → logprob: -13.529755592346191
    5. '_val' → logprob: -14.529755592346191
    6. ' ' → logprob: -15.029755592346191
    7. ' ' → logprob: -15.154755592346191
    8. '(val' → logprob: -15.279755592346191
    9. ')' → logprob: -15.404755592346191
    10. '[val' → logprob: -16.029756546020508

Token 64: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0001561009994475171
    2. '_a' → logprob: -8.87515640258789
    3. '_' → logprob: -11.25015640258789
    4. ',' → logprob: -14.62515640258789
    5. '_c' → logprob: -14.62515640258789
    6. '_,' → logprob: -14.62515640258789
    7. ')' → logprob: -15.00015640258789
    8. 'b' → logprob: -15.12515640258789
    9. ')_' → logprob: -15.12515640258789
    10. ',_' → logprob: -15.50015640258789

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00035572313936427236
    2. ')' → logprob: -8.12535572052002
    3. '):
' → logprob: -9.87535572052002
    4. ' ):' → logprob: -12.37535572052002
    5. ':' → logprob: -12.62535572052002
    6. '):
' → logprob: -15.75035572052002
    7. '   ' → logprob: -16.375356674194336
    8. '():' → logprob: -16.375356674194336
    9. ')：' → logprob: -16.875356674194336
    10. ',' → logprob: -17.125356674194336

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03732983395457268
    2. 'g' → logprob: -4.66232967376709
    3. ' return' → logprob: -5.03732967376709
    4. '<|end|>' → logprob: -5.41232967376709
    5. ' gcd' → logprob: -5.53732967376709
    6. ' math' → logprob: -5.53732967376709
    7. 'math' → logprob: -6.03732967376709
    8. ' ' → logprob: -6.03732967376709
    9. 'return' → logprob: -6.66232967376709
    10. '	return' → logprob: -7.28732967376709

Token 67: ' val' (ID: 1459)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.21695517003536224
    2. 'return' → logprob: -1.7169551849365234
    3. '   ' → logprob: -4.216955184936523
    4. ' math' → logprob: -8.091955184936523
    5. '	return' → logprob: -9.091955184936523
    6. ' if' → logprob: -9.466955184936523
    7. 'math' → logprob: -9.466955184936523
    8. 'if' → logprob: -10.341955184936523
    9. ' while' → logprob: -10.591955184936523
    10. '```' → logprob: -10.966955184936523

Token 68: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.3144915699958801
    2. '_' → logprob: -1.3144915103912354
    3. '_b' → logprob: -7.6894917488098145
    4. '_g' → logprob: -8.314491271972656
    5. '_s' → logprob: -8.939491271972656
    6. ' _' → logprob: -9.439491271972656
    7. '_c' → logprob: -10.064491271972656
    8. '_t' → logprob: -10.064491271972656
    9. '   ' → logprob: -10.564491271972656
    10. '_math' → logprob: -10.689491271972656

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01210753619670868
    2. ' ,' → logprob: -4.7621073722839355
    3. '=' → logprob: -6.1371073722839355
    4. ' =' → logprob: -6.8871073722839355
    5. '%' → logprob: -9.012107849121094
    6. ',val' → logprob: -9.387107849121094
    7. ',g' → logprob: -10.012107849121094
    8. ' %' → logprob: -11.637107849121094
    9. ' %=' → logprob: -11.762107849121094
    10. '%,' → logprob: -12.512107849121094

Token 70: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.02975129522383213
    2. 'val' → logprob: -3.5297513008117676
    3. '_val' → logprob: -14.27975082397461
    4. '[val' → logprob: -16.15475082397461
    5. '	val' → logprob: -16.52975082397461
    6. ',val' → logprob: -16.52975082397461
    7. ' ' → logprob: -17.27975082397461
    8. 'Val' → logprob: -17.52975082397461
    9. '(val' → logprob: -18.02975082397461
    10. 'v' → logprob: -19.15475082397461

Token 71: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0006564391660504043
    2. 'b' → logprob: -7.375656604766846
    3. '_' → logprob: -11.250656127929688
    4. '_a' → logprob: -12.125656127929688
    5. '<|end|>' → logprob: -12.375656127929688
    6. ' ' → logprob: -12.750656127929688
    7. '```' → logprob: -14.125656127929688
    8. 'B' → logprob: -14.125656127929688
    9. 'a' → logprob: -14.500656127929688
    10. '   ' → logprob: -14.750656127929688

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023477911949158
    2. '=' → logprob: -1.910234808921814
    3. ',' → logprob: -11.660234451293945
    4. '=min' → logprob: -14.410234451293945
    5. '=max' → logprob: -14.535234451293945
    6. ' ' → logprob: -15.285234451293945
    7. '=g' → logprob: -16.410234451293945
    8. ' =
' → logprob: -16.660234451293945
    9. '=int' → logprob: -16.660234451293945
    10. '   ' → logprob: -16.660234451293945

Token 73: ' max' (ID: 2999)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.8426631093025208
    2. ' math' → logprob: -0.8426631093025208
    3. ' max' → logprob: -3.342663049697876
    4. 'val' → logprob: -3.717663049697876
    5. ' min' → logprob: -3.717663049697876
    6. 'math' → logprob: -3.967663049697876
    7. ' sorted' → logprob: -4.467663288116455
    8. ' (' → logprob: -4.842663288116455
    9. 'max' → logprob: -5.467663288116455
    10. ' abs' → logprob: -5.592663288116455

Token 74: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.0017043406842276454
    2. '(' → logprob: -6.376704216003418
    3. ',val' → logprob: -14.001704216003418
    4. '((' → logprob: -14.751704216003418
    5. ' (' → logprob: -15.001704216003418
    6. '(value' → logprob: -15.751704216003418
    7. '[val' → logprob: -16.001705169677734
    8. 'val' → logprob: -16.251705169677734
    9. '(vals' → logprob: -16.376705169677734
    10. '(len' → logprob: -16.751705169677734

Token 75: '_a' (ID: 10852)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.03293207287788391
    2. '_a' → logprob: -4.782932281494141
    3. 'val' → logprob: -4.907932281494141
    4. 'a' → logprob: -5.032932281494141
    5. ',val' → logprob: -5.282932281494141
    6. '(' → logprob: -6.407932281494141
    7. '[val' → logprob: -6.782932281494141
    8. ')' → logprob: -7.157932281494141
    9. 's' → logprob: -7.907932281494141
    10. '```' → logprob: -8.28293228149414

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1273457109928131
    2. ',val' → logprob: -2.1273458003997803
    3. ' ,' → logprob: -8.25234603881836
    4. '(val' → logprob: -9.37734603881836
    5. 'val' → logprob: -10.25234603881836
    6. '),' → logprob: -10.75234603881836
    7. '[val' → logprob: -12.12734603881836
    8. ' val' → logprob: -12.37734603881836
    9. ')' → logprob: -12.75234603881836
    10. ',value' → logprob: -14.12734603881836

Token 77: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.47407984733581543
    2. 'val' → logprob: -0.9740798473358154
    3. ' ' → logprob: -13.974080085754395
    4. ',val' → logprob: -14.474080085754395
    5. '(val' → logprob: -14.599080085754395
    6. '	val' → logprob: -14.849080085754395
    7. '[val' → logprob: -14.849080085754395
    8. '_val' → logprob: -16.474079132080078
    9. '0' → logprob: -16.974079132080078
    10. '<|end|>' → logprob: -17.349079132080078

Token 78: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00010020548506872728
    2. 'b' → logprob: -9.250100135803223
    3. '_a' → logprob: -13.500100135803223
    4. 'a' → logprob: -13.875100135803223
    5. ')' → logprob: -14.750100135803223
    6. '),' → logprob: -15.500100135803223
    7. '```' → logprob: -15.500100135803223
    8. ',' → logprob: -15.625100135803223
    9. ')_' → logprob: -16.00010108947754
    10. '_,' → logprob: -16.00010108947754

Token 79: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20415017008781433
    2. '),' → logprob: -1.7041501998901367
    3. ' ,' → logprob: -6.329150199890137
    4. ')' → logprob: -7.454150199890137
    5. ' ),' → logprob: -8.454150199890137
    6. ',val' → logprob: -9.204150199890137
    7. ',),' → logprob: -10.579150199890137
    8. '),(' → logprob: -10.954150199890137
    9. ',)' → logprob: -12.204150199890137
    10. ',
' → logprob: -12.954150199890137

Token 80: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.007645559962838888
    2. 'min' → logprob: -4.882645606994629
    3. ' ' → logprob: -10.632645606994629
    4. ' val' → logprob: -12.007645606994629
    5. ' max' → logprob: -12.257645606994629
    6. '	min' → logprob: -13.257645606994629
    7. '(min' → logprob: -13.882645606994629
    8. ' minn' → logprob: -14.882645606994629
    9. '_min' → logprob: -15.382645606994629
    10. ' ' → logprob: -15.507645606994629

Token 81: '(val' (ID: 17391)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5775111317634583
    2. '(val' → logprob: -0.8275111317634583
    3. '<|end|>' → logprob: -6.577511310577393
    4. 'val' → logprob: -9.452510833740234
    5. '<|end|>' → logprob: -10.577510833740234
    6. '[val' → logprob: -11.452510833740234
    7. '(paren' → logprob: -11.702510833740234
    8. '(value' → logprob: -11.827510833740234
    9. ',val' → logprob: -12.202510833740234
    10. '(valor' → logprob: -12.202510833740234

Token 82: '_a' (ID: 10852)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.4151606857776642
    2. '(val' → logprob: -1.1651606559753418
    3. '_val' → logprob: -4.540160655975342
    4. 'a' → logprob: -4.915160655975342
    5. '[val' → logprob: -5.165160655975342
    6. ' val' → logprob: -6.790160655975342
    7. '<|end|>' → logprob: -7.040160655975342
    8. ',val' → logprob: -7.165160655975342
    9. ')' → logprob: -7.665160655975342
    10. '_a' → logprob: -7.790160655975342

Token 83: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6390722393989563
    2. '(val' → logprob: -1.1390721797943115
    3. ')' → logprob: -2.6390721797943115
    4. ',' → logprob: -2.7640721797943115
    5. ',val' → logprob: -4.389072418212891
    6. ' (' → logprob: -6.639072418212891
    7. '),' → logprob: -6.764072418212891
    8. ' (,' → logprob: -7.389072418212891
    9. 'val' → logprob: -7.639072418212891
    10. ' ,' → logprob: -7.764072418212891

Token 84: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.1602563112974167
    2. ' val' → logprob: -1.910256266593933
    3. '(val' → logprob: -10.660256385803223
    4. '[val' → logprob: -12.535256385803223
    5. '<|end|>' → logprob: -13.035256385803223
    6. ',val' → logprob: -13.535256385803223
    7. ' ' → logprob: -14.160256385803223
    8. '	val' → logprob: -14.160256385803223
    9. '_val' → logprob: -15.785256385803223
    10. '.val' → logprob: -17.160255432128906

Token 85: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.1829775720834732
    2. 'b' → logprob: -1.807977557182312
    3. 'val' → logprob: -6.557977676391602
    4. ')' → logprob: -7.807977676391602
    5. '<|end|>' → logprob: -7.932977676391602
    6. ',' → logprob: -8.182977676391602
    7. '_val' → logprob: -8.307977676391602
    8. 'a' → logprob: -9.182977676391602
    9. '-b' → logprob: -9.307977676391602
    10. '```' → logprob: -9.682977676391602

Token 86: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006831637118011713
    2. ' )' → logprob: -5.256831645965576
    3. '   ' → logprob: -7.006831645965576
    4. ')
' → logprob: -7.881831645965576
    5. ' ' → logprob: -8.756831169128418
    6. ' )
' → logprob: -10.256831169128418
    7. '<|end|>' → logprob: -10.381831169128418
    8. '  ' → logprob: -11.256831169128418
    9. ',' → logprob: -11.506831169128418
    10. '),' → logprob: -11.756831169128418

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3150029182434082
    2. '
' → logprob: -1.6900029182434082
    3. '    
' → logprob: -4.065002918243408
    4. '  
' → logprob: -4.065002918243408
    5. ' 
' → logprob: -4.190002918243408
    6. '\n' → logprob: -4.440002918243408
    7. '   
' → logprob: -4.565002918243408
    8. '<|end|>' → logprob: -5.190002918243408
    9. '```' → logprob: -6.315002918243408
    10. ' while' → logprob: -6.565002918243408

Token 88: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2669837474822998
    2. ' while' → logprob: -1.7669837474822998
    3. ' 
' → logprob: -3.7669837474823
    4. 'while' (adapté à ' while') → logprob: -4.391983985900879
    5. '  
' → logprob: -4.516983985900879
    6. '    
' → logprob: -5.016983985900879
    7. '   ' → logprob: -5.266983985900879
    8. '   
' → logprob: -6.266983985900879
    9. '\n' → logprob: -7.266983985900879
    10. '<|end|>' → logprob: -7.266983985900879

Token 89: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.011055364273488522
    2. 'val' → logprob: -4.5110554695129395
    3. '(val' → logprob: -12.386054992675781
    4. 'b' → logprob: -13.886054992675781
    5. ' ' → logprob: -14.011054992675781
    6. '	val' → logprob: -14.636054992675781
    7. '_val' → logprob: -14.636054992675781
    8. '[val' → logprob: -15.136054992675781
    9. 'Val' → logprob: -15.886054992675781
    10. ' b' → logprob: -16.76105499267578

Token 90: '_a' (ID: 10852)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0013108364073559642
    2. '_a' → logprob: -6.7513108253479
    3. '_' → logprob: -8.876311302185059
    4. ' _' → logprob: -15.001311302185059
    5. 'a' → logprob: -15.501311302185059
    6. '```' → logprob: -16.126310348510742
    7. 'b' → logprob: -16.626310348510742
    8. '_
' → logprob: -16.751310348510742
    9. '__' → logprob: -17.126310348510742
    10. ' ' → logprob: -17.376310348510742

Token 91: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6932516098022461
    2. ' %' → logprob: -0.6932516098022461
    3. '!=' → logprob: -9.818251609802246
    4. ' !=' → logprob: -10.193251609802246
    5. ' ' → logprob: -12.568251609802246
    6. ' %=' → logprob: -13.193251609802246
    7. '%i' → logprob: -13.318251609802246
    8. '％' → logprob: -14.318251609802246
    9. '%n' → logprob: -14.318251609802246
    10. ' ' → logprob: -14.318251609802246

Token 92: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.10020806640386581
    2. ' val' → logprob: -2.350208044052124
    3. '	val' → logprob: -14.100208282470703
    4. '[val' → logprob: -14.725208282470703
    5. '(val' → logprob: -15.725208282470703
    6. ',val' → logprob: -17.100208282470703
    7. '_val' → logprob: -17.225208282470703
    8. ' ' → logprob: -17.975208282470703
    9. '<|end|>' → logprob: -19.100208282470703
    10. 'Val' → logprob: -19.350208282470703

Token 93: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.6166903151315637e-05
    2. '_' → logprob: -11.250016212463379
    3. '_a' → logprob: -13.500016212463379
    4. 'b' → logprob: -13.625016212463379
    5. '<|end|>' → logprob: -15.250016212463379
    6. '_
' → logprob: -16.750015258789062
    7. 'a' → logprob: -16.875015258789062
    8. ' _' → logprob: -17.625015258789062
    9. '_

' → logprob: -17.625015258789062
    10. ' ' → logprob: -17.875015258789062

Token 94: ' >' (ID: 1424)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5768272280693054
    2. ' !=' → logprob: -0.8268272280693054
    3. ':' → logprob: -7.326827049255371
    4. '>' → logprob: -8.576827049255371
    5. '!==' → logprob: -11.451827049255371
    6. '!="' → logprob: -11.576827049255371
    7. '!='' → logprob: -12.076827049255371
    8. ')!=' → logprob: -12.576827049255371
    9. ' >' → logprob: -12.701827049255371
    10. 'and' → logprob: -13.201827049255371

Token 95: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47407710552215576
    2. ' ' → logprob: -0.9740771055221558
    3. '  ' → logprob: -16.849077224731445
    4. '<|end|>' → logprob: -17.349077224731445
    5. '```' → logprob: -19.349077224731445
    6. '۰' → logprob: -19.474077224731445
    7. ' ' → logprob: -19.724077224731445
    8. '1' → logprob: -20.349077224731445
    9. '=' → logprob: -20.474077224731445
    10. '   ' → logprob: -20.599077224731445

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. '  ' → logprob: -20.380233764648438
    4. 'zero' → logprob: -21.005233764648438
    5. '۰' → logprob: -21.130233764648438
    6. '<|end|>' → logprob: -21.130233764648438
    7. '```' → logprob: -21.630233764648438
    8. '=' → logprob: -22.005233764648438
    9. '   ' → logprob: -22.380233764648438
    10. ' ' → logprob: -22.505233764648438

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0798560306429863
    2. ':
' → logprob: -2.5798559188842773
    3. ' :
' → logprob: -7.954855918884277
    4. ' :' → logprob: -7.954855918884277
    5. '   ' → logprob: -8.454855918884277
    6. '):
' → logprob: -11.579855918884277
    7. ' ' → logprob: -12.079855918884277
    8. ',' → logprob: -12.079855918884277
    9. ':return' → logprob: -12.079855918884277
    10. '<|end|>' → logprob: -12.204855918884277

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7667040228843689
    2. '
' → logprob: -1.3917040824890137
    3. ' val' → logprob: -2.0167040824890137
    4. 'val' → logprob: -3.2667040824890137
    5. '<|end|>' → logprob: -3.2667040824890137
    6. ' 
' → logprob: -3.8917040824890137
    7. ' ' → logprob: -4.141704082489014
    8. '   ' → logprob: -4.766704082489014
    9. '    
' → logprob: -4.766704082489014
    10. '        
' → logprob: -4.766704082489014

Token 99: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.07849851995706558
    2. ' val' → logprob: -2.828498601913452
    3. 'temp' → logprob: -4.328498363494873
    4. 'tmp' → logprob: -6.328498363494873
    5. ' temp' → logprob: -6.828498363494873
    6. '       ' → logprob: -8.578498840332031
    7. ' tmp' → logprob: -9.453498840332031
    8. 'v' → logprob: -11.203498840332031
    9. '_val' → logprob: -11.203498840332031
    10. '	val' → logprob: -11.453498840332031

Token 100: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.005941479001194239
    2. '_b' → logprob: -5.130941390991211
    3. 'a' → logprob: -11.755941390991211
    4. '_' → logprob: -12.380941390991211
    5. 'b' → logprob: -15.255941390991211
    6. '_val' → logprob: -15.380941390991211
    7. '```' → logprob: -16.25594139099121
    8. '_ab' → logprob: -17.00594139099121
    9. '_ai' → logprob: -17.00594139099121
    10. 'val' → logprob: -17.50594139099121

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004510493890848011
    2. ',val' → logprob: -8.25045108795166
    3. ' ,' → logprob: -8.75045108795166
    4. '%' → logprob: -11.00045108795166
    5. ' %=' → logprob: -12.00045108795166
    6. '%=' → logprob: -12.12545108795166
    7. '%,' → logprob: -13.50045108795166
    8. ',%' → logprob: -14.12545108795166
    9. 'val' → logprob: -16.000450134277344
    10. ',value' → logprob: -16.125450134277344

Token 102: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.3876420259475708
    2. 'val' → logprob: -1.1376420259475708
    3. '<|end|>' → logprob: -7.387641906738281
    4. ' ' → logprob: -10.137641906738281
    5. ' =' → logprob: -10.137641906738281
    6. '=' → logprob: -10.387641906738281
    7. '_val' → logprob: -11.262641906738281
    8. ',val' → logprob: -11.637641906738281
    9. '	val' → logprob: -11.637641906738281
    10. '[val' → logprob: -12.762641906738281

Token 103: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -2.951771421066951e-05
    2. 'b' → logprob: -11.000029563903809
    3. '_a' → logprob: -11.500029563903809
    4. '<|end|>' → logprob: -13.500029563903809
    5. 'a' → logprob: -14.250029563903809
    6. '_' → logprob: -15.000029563903809
    7. 'val' → logprob: -16.500028610229492
    8. ' ' → logprob: -16.625028610229492
    9. '<|end|>' → logprob: -16.625028610229492
    10. '```' → logprob: -17.750028610229492

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141683518886566
    2. '=' → logprob: -1.7014168500900269
    3. ',' → logprob: -12.826416969299316
    4. '<|end|>' → logprob: -14.951416969299316
    5. ' =
' → logprob: -15.951416969299316
    6. ' ' → logprob: -16.451416015625
    7. '=

' → logprob: -16.826416015625
    8. '=
' → logprob: -17.201416015625
    9. '＝' → logprob: -17.576416015625
    10. ')' → logprob: -17.826416015625

Token 105: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.31327250599861145
    2. ' val' → logprob: -1.313272476196289
    3. '(val' → logprob: -12.438272476196289
    4. ',val' → logprob: -13.438272476196289
    5. '	val' → logprob: -13.688272476196289
    6. 'v' → logprob: -13.813272476196289
    7. '   ' → logprob: -14.063272476196289
    8. 'Val' → logprob: -14.063272476196289
    9. '_val' → logprob: -14.563272476196289
    10. 'b' → logprob: -14.563272476196289

Token 106: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -3.1424973713001236e-05
    2. '_a' → logprob: -10.375031471252441
    3. 'b' → logprob: -16.125030517578125
    4. 'val' → logprob: -17.250030517578125
    5. 'a' → logprob: -17.375030517578125
    6. '	b' → logprob: -18.875030517578125
    7. '[val' → logprob: -19.000030517578125
    8. '(val' → logprob: -19.250030517578125
    9. '%b' → logprob: -20.125030517578125
    10. '```' → logprob: -20.125030517578125

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001990255434066057
    2. ' ,' → logprob: -6.62699031829834
    3. ',val' → logprob: -7.37699031829834
    4. 'val' → logprob: -10.50199031829834
    5. ' val' → logprob: -11.50199031829834
    6. ',
' → logprob: -14.37699031829834
    7. ' ' → logprob: -15.00199031829834
    8. 'Val' → logprob: -16.876989364624023
    9. '[val' → logprob: -17.376989364624023
    10. ',value' → logprob: -17.626989364624023

Token 108: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.5759409666061401
    2. 'val' → logprob: -0.8259409666061401
    3. '	val' → logprob: -14.20094108581543
    4. '(val' → logprob: -14.95094108581543
    5. '[val' → logprob: -15.82594108581543
    6. ' ' → logprob: -15.95094108581543
    7. '_val' → logprob: -16.57594108581543
    8. 'Val' → logprob: -16.82594108581543
    9. ',val' → logprob: -17.57594108581543
    10. 'v' → logprob: -17.70094108581543

Token 109: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0001652796781854704
    2. 'a' → logprob: -8.875164985656738
    3. '_b' → logprob: -10.625164985656738
    4. 'val' → logprob: -14.000164985656738
    5. '%' → logprob: -16.125165939331055
    6. '_val' → logprob: -16.500165939331055
    7. 'b' → logprob: -17.375165939331055
    8. 'а' → logprob: -18.000165939331055
    9. '[val' → logprob: -18.250165939331055
    10. '_' → logprob: -18.625165939331055

Token 110: ' %' (ID: 1851)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.4586956202983856
    2. '%' → logprob: -1.458695650100708
    3. ' val' → logprob: -2.083695650100708
    4. ' %' → logprob: -4.583695411682129
    5. '[val' → logprob: -8.083695411682129
    6. ' ' → logprob: -8.333695411682129
    7. '_val' → logprob: -9.708695411682129
    8. 'Val' → logprob: -10.833695411682129
    9. 'v' → logprob: -11.708695411682129
    10. '(val' → logprob: -12.333695411682129

Token 111: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.1269282102584839
    2. ' val' → logprob: -2.1269283294677734
    3. '	val' → logprob: -16.501928329467773
    4. ' ' → logprob: -17.251928329467773
    5. '_val' → logprob: -17.251928329467773
    6. '[val' → logprob: -18.876928329467773
    7. '(val' → logprob: -19.126928329467773
    8. 'Val' → logprob: -20.376928329467773
    9. 'vall' → logprob: -20.376928329467773
    10. 'valu' → logprob: -20.376928329467773

Token 112: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00020783171930816025
    2. 'b' → logprob: -8.750207901000977
    3. 'val' → logprob: -10.000207901000977
    4. '_val' → logprob: -13.875207901000977
    5. '<|end|>' → logprob: -13.875207901000977
    6. '_a' → logprob: -14.250207901000977
    7. '_' → logprob: -14.875207901000977
    8. '```' → logprob: -15.250207901000977
    9. ' ' → logprob: -15.875207901000977
    10. '<|end|>' → logprob: -16.375207901000977

Token 113: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009033462032675743
    2. '
' → logprob: -5.634033679962158
    3. 'return' → logprob: -5.759033679962158
    4. '    
' → logprob: -7.009033679962158
    5. ' 
' → logprob: -7.384033679962158
    6. ' return' → logprob: -7.634033679962158
    7. 'val' → logprob: -9.509033203125
    8. '  
' → logprob: -9.884033203125
    9. '   
' → logprob: -10.134033203125
    10. ' ' → logprob: -11.134033203125

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24557270109653473
    2. 'return' → logprob: -1.6205726861953735
    3. ' return' → logprob: -4.870572566986084
    4. '    
' → logprob: -5.495572566986084
    5. '
' → logprob: -5.995572566986084
    6. 'val' → logprob: -5.995572566986084
    7. ' 
' → logprob: -6.370572566986084
    8. '   
' → logprob: -7.745572566986084
    9. '  
' → logprob: -7.995572566986084
    10. ':return' → logprob: -8.745573043823242

Token 115: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6709146499633789
    2. '   ' → logprob: -1.045914649963379
    3. 'return' (adapté à ' return') → logprob: -2.045914649963379
    4. ' val' → logprob: -5.545914649963379
    5. ' ' → logprob: -6.295914649963379
    6. 'val' → logprob: -6.920914649963379
    7. '	return' → logprob: -7.670914649963379
    8. '    
' → logprob: -8.295914649963379
    9. ' 
' → logprob: -8.920914649963379
    10. '  ' → logprob: -9.045914649963379

Token 116: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.07889000326395035
    2. 'val' → logprob: -2.578890085220337
    3. '_val' → logprob: -15.203889846801758
    4. '(val' → logprob: -17.453889846801758
    5. '	val' → logprob: -17.578889846801758
    6. ' ' → logprob: -17.703889846801758
    7. 'Val' → logprob: -17.828889846801758
    8. '[val' → logprob: -18.703889846801758
    9. ',val' → logprob: -19.578889846801758
    10. 'v' → logprob: -19.828889846801758

Token 117: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.1875571544806007e-05
    2. '_a' → logprob: -11.375011444091797
    3. '_s' → logprob: -16.500011444091797
    4. '_val' → logprob: -16.500011444091797
    5. ' _' → logprob: -16.625011444091797
    6. '_g' → logprob: -17.500011444091797
    7. 'a' → logprob: -17.500011444091797
    8. 'b' → logprob: -18.250011444091797
    9. 'val' → logprob: -18.250011444091797
    10. '"_' → logprob: -18.625011444091797

Token 118: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3980698883533478
    2. '<|end|>' → logprob: -1.8980698585510254
    3. 'def' → logprob: -2.2730698585510254
    4. '\n' → logprob: -3.0230698585510254
    5. '

' → logprob: -3.8980698585510254
    6. '#' → logprob: -6.398069858551025
    7. ' 
' → logprob: -7.023069858551025
    8. '\' → logprob: -7.398069858551025
    9. '  
' → logprob: -7.523069858551025
    10. '```' → logprob: -7.648069858551025

Token 119: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14307372272014618
    2. '
' → logprob: -2.393073797225952
    3. '

' → logprob: -3.518073797225952
    4. '\n' → logprob: -4.768073558807373
    5. '\' → logprob: -6.268073558807373
    6. '```' → logprob: -7.393073558807373
    7. '#' → logprob: -8.018074035644531
    8. '


' → logprob: -8.643074035644531
    9. 'd' → logprob: -9.143074035644531
    10. '' → logprob: -9.143074035644531

Token 120: 'ULO' (ID: 63916)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03341664746403694
    2. '=' → logprob: -3.658416748046875
    3. '_' → logprob: -5.658416748046875
    4. ' ' → logprob: -5.658416748046875
    5. ' _' → logprob: -9.783416748046875
    6. '  ' → logprob: -11.158416748046875
    7. '_SPACE' → logprob: -12.033416748046875
    8. '<|end|>' → logprob: -12.033416748046875
    9. ',' → logprob: -12.158416748046875
    10. ' =)' → logprob: -12.408416748046875

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015218018554151058
    2. '=' → logprob: -4.6402177810668945
    3. ' ' → logprob: -5.2652177810668945
    4. '_' → logprob: -8.265217781066895
    5. ' =
' → logprob: -11.890217781066895
    6. ' _' → logprob: -12.265217781066895
    7. '  ' → logprob: -12.765217781066895
    8. '_SPACE' → logprob: -13.515217781066895
    9. ' =)' → logprob: -13.515217781066895
    10. 'space' → logprob: -14.390217781066895

Token 122: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4198628067970276
    2. '100' → logprob: -1.5448627471923828
    3. '10' → logprob: -2.044862747192383
    4. '998' → logprob: -9.544862747192383
    5. '1' → logprob: -9.919862747192383
    6. '999' → logprob: -13.919862747192383
    7. 'int' → logprob: -14.669862747192383
    8. '109' → logprob: -14.919862747192383
    9. '123' → logprob: -15.169862747192383
    10. ' (' → logprob: -15.294862747192383

Token 123: '7' (ID: 22)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5766831636428833
    2. '10' → logprob: -0.8266831636428833
    3. '998' → logprob: -7.451683044433594
    4. '1' → logprob: -8.951683044433594
    5. 'int' → logprob: -10.826683044433594
    6. ' ' → logprob: -12.076683044433594
    7. '123' → logprob: -13.326683044433594
    8. '(' → logprob: -13.326683044433594
    9. '999' → logprob: -13.576683044433594
    10. '109' → logprob: -14.451683044433594

Token 124: ' +' (ID: 659)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.14909152686595917
    2. '17' → logprob: -2.3990914821624756
    3. '*' → logprob: -4.399091720581055
    4. '3' → logprob: -5.149091720581055
    5. '7' → logprob: -5.399091720581055
    6. '13' → logprob: -5.524091720581055
    7. '+' → logprob: -6.399091720581055
    8. '9' → logprob: -6.649091720581055
    9. '11' → logprob: -6.649091720581055
    10. '77' → logprob: -6.649091720581055

Token 125: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6239953637123108
    2. '000' → logprob: -0.8739953637123108
    3. '100' → logprob: -3.248995304107666
    4. ' ' → logprob: -5.748995304107666
    5. '109' → logprob: -7.998995304107666
    6. '2' → logprob: -7.998995304107666
    7. '_' → logprob: -7.998995304107666
    8. '*' → logprob: -8.123995780944824
    9. '7' → logprob: -8.123995780944824
    10. '1' → logprob: -8.373995780944824

Token 126: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00034964739461429417
    2. '100' → logprob: -8.375349998474121
    3. '7' → logprob: -10.875349998474121
    4. '(' → logprob: -11.000349998474121
    5. '1' → logprob: -11.250349998474121
    6. 'int' → logprob: -11.375349998474121
    7. '999' → logprob: -11.625349998474121
    8. '998' → logprob: -11.750349998474121
    9. '2' → logprob: -12.125349998474121
    10. '109' → logprob: -12.625349998474121

Token 127: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.000872274860739708
    2. '9' → logprob: -7.3758721351623535
    3. '000' → logprob: -8.500872611999512
    4. '^' → logprob: -10.625872611999512
    5. '*' → logprob: -11.500872611999512
    6. ' **' → logprob: -12.750872611999512
    7. '```' → logprob: -13.500872611999512
    8. '7' → logprob: -14.000872611999512
    9. '###' → logprob: -14.000872611999512
    10. '09' → logprob: -14.500872611999512

Token 128: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.625
    3. '8' → logprob: -16.125
    4. ' ' → logprob: -18.375
    5. '+' → logprob: -20.0
    6. '```' → logprob: -20.5
    7. '**' → logprob: -21.5
    8. '7' → logprob: -21.625
    9. '4' → logprob: -22.0
    10. '6' → logprob: -22.375

Token 129: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.512236498361744e-07
    2. '09' → logprob: -15.000000953674316
    3. '8' → logprob: -16.25
    4. ' ' → logprob: -16.875
    5. '```' → logprob: -19.875
    6. '009' → logprob: -21.625
    7. '+' → logprob: -22.125
    8. '4' → logprob: -22.25
    9. '7' → logprob: -22.875
    10. '10' → logprob: -23.0

Token 130: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008125388994812965
    2. '9' → logprob: -4.883125305175781
    3. '7' → logprob: -7.758125305175781
    4. '```' → logprob: -9.758125305175781
    5. '<|end|>' → logprob: -11.383125305175781
    6. ' ' → logprob: -11.883125305175781
    7. ' +' → logprob: -13.008125305175781
    8. '*' → logprob: -13.008125305175781
    9. '-' → logprob: -13.258125305175781
    10. '=' → logprob: -13.258125305175781

Token 131: 'def' (ID: 1314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -6.670925358776003e-05
    2. '7' → logprob: -9.750066757202148
    3. ' +' → logprob: -12.000066757202148
    4. '+
' → logprob: -14.125066757202148
    5. '<|end|>' → logprob: -14.250066757202148
    6. '```' → logprob: -14.750066757202148
    7. '+</' → logprob: -16.00006675720215
    8. '+=' → logprob: -16.12506675720215
    9. ' ' → logprob: -16.50006675720215
    10. '9' → logprob: -16.62506675720215

Token 132: ' process' (ID: 2273)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.5467947125434875
    2. ' main' → logprob: -1.1717946529388428
    3. ' solve' → logprob: -3.0467946529388428
    4. ' ' → logprob: -3.0467946529388428
    5. ' calculate' → logprob: -5.296794891357422
    6. ' factorial' → logprob: -5.671794891357422
    7. '_' → logprob: -6.671794891357422
    8. ' process' → logprob: -6.921794891357422
    9. ' add' → logprob: -6.921794891357422
    10. ' _' → logprob: -7.171794891357422

Token 133: '_solution' (ID: 127649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6391150951385498
    2. '_input' → logprob: -2.13911509513855
    3. '_data' → logprob: -2.51411509513855
    4. '_query' → logprob: -3.01411509513855
    5. '_queries' → logprob: -3.38911509513855
    6. '_line' → logprob: -3.51411509513855
    7. '()' → logprob: -3.76411509513855
    8. '_' → logprob: -4.014115333557129
    9. '(_' → logprob: -4.264115333557129
    10. '(data' → logprob: -4.764115333557129

Token 134: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03820592910051346
    2. '(n' → logprob: -4.663206100463867
    3. ' ():' → logprob: -4.913206100463867
    4. '(input' → logprob: -5.288206100463867
    5. '(' → logprob: -5.663206100463867
    6. '(data' → logprob: -5.788206100463867
    7. '(line' → logprob: -6.538206100463867
    8. '(nums' → logprob: -7.038206100463867
    9. '(array' → logprob: -7.288206100463867
    10. '(args' → logprob: -7.288206100463867

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001091639045625925
    2. 'n' → logprob: -7.876091480255127
    3. '(' → logprob: -8.126091957092285
    4. '    ' → logprob: -8.626091957092285
    5. '()' → logprob: -10.001091957092285
    6. ' ' → logprob: -10.126091957092285
    7. '(n' → logprob: -10.251091957092285
    8. ' n' → logprob: -10.751091957092285
    9. 'input' → logprob: -11.251091957092285
    10. '    
' → logprob: -11.376091957092285

Token 136: ' num' (ID: 2269)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16983070969581604
    2. 'n' → logprob: -2.294830799102783
    3. '   ' → logprob: -3.169830799102783
    4. ' N' → logprob: -4.669830799102783
    5. ' t' → logprob: -6.669830799102783
    6. 'N' → logprob: -7.419830799102783
    7. ' num' → logprob: -7.669830799102783
    8. ' input' → logprob: -8.294830322265625
    9. '	n' → logprob: -8.419830322265625
    10. 't' → logprob: -9.044830322265625

Token 137: '_elements' (ID: 53344)
  Prédit: '_cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -0.8205242156982422
    2. '_elements' → logprob: -1.5705242156982422
    3. '_items' → logprob: -2.445524215698242
    4. 's' → logprob: -2.695524215698242
    5. ' =' → logprob: -3.195524215698242
    6. '_' → logprob: -4.070524215698242
    7. '_s' → logprob: -4.320524215698242
    8. '_queries' → logprob: -4.570524215698242
    9. '_inputs' → logprob: -4.695524215698242
    10. '_lines' → logprob: -4.820524215698242

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02355489507317543
    2. '=' → logprob: -3.773554801940918
    3. ',' → logprob: -8.273554801940918
    4. '=int' → logprob: -10.023554801940918
    5. ' ' → logprob: -11.898554801940918
    6. ' ,' → logprob: -13.148554801940918
    7. '=input' → logprob: -14.648554801940918
    8. '   ' → logprob: -15.898554801940918
    9. ',int' → logprob: -16.523555755615234
    10. ')' → logprob: -16.523555755615234

Token 139: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07889165729284286
    2. 'int' → logprob: -2.5788917541503906
    3. '(int' → logprob: -14.20389175415039
    4. ' ' → logprob: -14.82889175415039
    5. ' read' → logprob: -14.95389175415039
    6. '	int' → logprob: -15.82889175415039
    7. '   ' → logprob: -16.07889175415039
    8. '=int' → logprob: -16.07889175415039
    9. ' len' → logprob: -17.07889175415039
    10. '<int' → logprob: -17.20389175415039

Token 140: '(read' (ID: 45738)
  Prédit: '(read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.026902873069047928
    2. '(input' → logprob: -4.026902675628662
    3. '(' → logprob: -4.776902675628662
    4. ' (' → logprob: -8.27690315246582
    5. 'read' → logprob: -10.27690315246582
    6. '(
' → logprob: -13.27690315246582
    7. '()' → logprob: -14.15190315246582
    8. ' read' → logprob: -14.15190315246582
    9. 'input' → logprob: -15.40190315246582
    10. '(

' → logprob: -16.40190315246582

Token 141: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.10032495856285095
    2. '_line' → logprob: -2.350324869155884
    3. '(' → logprob: -9.850324630737305
    4. '_' → logprob: -10.975324630737305
    5. '()' → logprob: -11.100324630737305
    6. 'single' → logprob: -11.225324630737305
    7. 'Single' → logprob: -11.725324630737305
    8. 'line' → logprob: -12.725324630737305
    9. '_SINGLE' → logprob: -13.100324630737305
    10. '(_' → logprob: -13.975324630737305

Token 142: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00011737081513274461
    2. '()' → logprob: -9.125117301940918
    3. '_' → logprob: -12.375117301940918
    4. 'line' → logprob: -12.750117301940918
    5. '_LINE' → logprob: -14.875117301940918
    6. 'Line' → logprob: -15.125117301940918
    7. ' line' → logprob: -16.000118255615234
    8. '())' → logprob: -16.250118255615234
    9. '_Line' → logprob: -16.250118255615234
    10. ')' → logprob: -16.625118255615234

Token 143: '_str' (ID: 6182)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.09641949832439423
    2. '()' → logprob: -2.4714195728302
    3. ')' → logprob: -5.846419334411621
    4. '_str' → logprob: -5.971419334411621
    5. '_' → logprob: -6.471419334411621
    6. 'str' → logprob: -8.221419334411621
    7. '())
' → logprob: -10.221419334411621
    8. ' ())' → logprob: -10.346419334411621
    9. 'strip' → logprob: -10.721419334411621
    10. '().' → logprob: -10.846419334411621

Token 144: 'ipped' (ID: 8193)
  Prédit: 'ipped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipped' → logprob: -0.005322227720171213
    2. 'ip' → logprob: -5.755322456359863
    3. '()' → logprob: -7.005322456359863
    4. 'iped' → logprob: -7.005322456359863
    5. 'ed' → logprob: -8.630322456359863
    6. '().' → logprob: -9.755322456359863
    7. '())' → logprob: -10.505322456359863
    8. '```' → logprob: -11.005322456359863
    9. '()
' → logprob: -11.505322456359863
    10. 'ped' → logprob: -11.755322456359863

Token 145: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0011829655850306153
    2. '()' → logprob: -6.751183032989502
    3. '())
' → logprob: -11.751182556152344
    4. '()
' → logprob: -13.376182556152344
    5. ')' → logprob: -13.501182556152344
    6. ' ())' → logprob: -13.501182556152344
    7. '())

' → logprob: -16.126182556152344
    8. '(' → logprob: -16.251182556152344
    9. '()]' → logprob: -16.501182556152344
    10. '(),' → logprob: -16.751182556152344

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22294765710830688
    2. '
' → logprob: -1.847947597503662
    3. '    
' → logprob: -3.597947597503662
    4. 'elements' → logprob: -4.972947597503662
    5. '<|end|>' → logprob: -6.222947597503662
    6. 'tokens' → logprob: -6.972947597503662
    7. '_elements' → logprob: -7.097947597503662
    8. ' elements' → logprob: -7.347947597503662
    9. '   
' → logprob: -7.597947597503662
    10. 'indices' → logprob: -7.972947597503662

Token 147: ' input' (ID: 3422)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.4918806850910187
    2. 'values' → logprob: -1.6168806552886963
    3. ' elements' → logprob: -2.2418806552886963
    4. 'numbers' → logprob: -3.7418806552886963
    5. 'data' → logprob: -4.366880893707275
    6. 'arr' → logprob: -4.491880893707275
    7. ' values' → logprob: -4.616880893707275
    8. ' numbers' → logprob: -4.866880893707275
    9. 'array' → logprob: -4.991880893707275
    10. 'element' → logprob: -5.491880893707275

Token 148: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.28834789991378784
    2. '_list' → logprob: -1.7883479595184326
    3. '_vals' → logprob: -3.2883479595184326
    4. '_data' → logprob: -4.1633477210998535
    5. '_elements' → logprob: -4.4133477210998535
    6. '_array' → logprob: -4.7883477210998535
    7. '_line' → logprob: -6.1633477210998535
    8. '_parts' → logprob: -6.2883477210998535
    9. '_lines' → logprob: -6.4133477210998535
    10. '_numbers' → logprob: -6.5383477210998535

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02325083687901497
    2. '=' → logprob: -3.7732508182525635
    3. '_' → logprob: -13.023250579833984
    4. '[' → logprob: -13.898250579833984
    5. '[:]' → logprob: -14.648250579833984
    6. '=[]' → logprob: -14.773250579833984
    7. ',' → logprob: -15.023250579833984
    8. ' =[' → logprob: -15.023250579833984
    9. ' ' → logprob: -15.398250579833984
    10. '[]' → logprob: -15.648250579833984

Token 150: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.006937013473361731
    2. 'list' → logprob: -5.006937026977539
    3. ' [' → logprob: -9.256937026977539
    4. ' read' → logprob: -9.506937026977539
    5. '[' → logprob: -10.756937026977539
    6. ' map' → logprob: -11.381937026977539
    7. '[list' → logprob: -11.631937026977539
    8. 'read' → logprob: -12.006937026977539
    9. ' ' → logprob: -13.381937026977539
    10. ' tuple' → logprob: -14.631937026977539

Token 151: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000492268183734268
    2. ' int' → logprob: -7.625492095947266
    3. '   ' → logprob: -12.625492095947266
    4. ' ' → logprob: -15.375492095947266
    5. ']int' → logprob: -15.500492095947266
    6. '
' → logprob: -16.125492095947266
    7. '  ' → logprob: -16.750492095947266
    8. '    ' → logprob: -17.000492095947266
    9. '(int' → logprob: -17.000492095947266
    10. '0' → logprob: -17.125492095947266

Token 152: '(val' (ID: 17391)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.054899998009204865
    2. '(' → logprob: -3.1798999309539795
    3. '(i' → logprob: -4.679900169372559
    4. '(read' → logprob: -6.554900169372559
    5. '(val' → logprob: -7.804900169372559
    6. '(s' → logprob: -8.304900169372559
    7. '(v' → logprob: -8.554900169372559
    8. '(value' → logprob: -9.929900169372559
    9. '(_)' → logprob: -9.929900169372559
    10. '()' → logprob: -10.304900169372559

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07053549587726593
    2. '()' → logprob: -3.07053542137146
    3. '(x' → logprob: -4.070535659790039
    4. '(read' → logprob: -6.195535659790039
    5. 'read' → logprob: -7.195535659790039
    6. '())' → logprob: -7.695535659790039
    7. ' for' → logprob: -8.445535659790039
    8. 'for' → logprob: -8.570535659790039
    9. '(i' → logprob: -8.695535659790039
    10. '(input' → logprob: -8.945535659790039

Token 154: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4540252685546875
    2. '()' → logprob: -1.4540252685546875
    3. 'for' → logprob: -2.0790252685546875
    4. '(x' → logprob: -5.5790252685546875
    5. ')' → logprob: -6.5790252685546875
    6. '(' → logprob: -7.3290252685546875
    7. ' ()' → logprob: -8.954025268554688
    8. ']' → logprob: -10.204025268554688
    9. '(i' → logprob: -10.454025268554688
    10. ' ' → logprob: -10.454025268554688

Token 155: ' val' (ID: 1459)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.761698842048645
    2. ' val' → logprob: -0.886698842048645
    3. ' in' → logprob: -2.8866987228393555
    4. ' _' → logprob: -3.2616987228393555
    5. '_' → logprob: -4.3866987228393555
    6. 'val' → logprob: -4.8866987228393555
    7. ' ' → logprob: -6.2616987228393555
    8. ' ' → logprob: -6.3866987228393555
    9. 'read' → logprob: -6.6366987228393555
    10. '<|end|>' → logprob: -7.7616987228393555

Token 156: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0038925919216126204
    2. ' ' → logprob: -6.253892421722412
    3. 'in' → logprob: -6.253892421722412
    4. '<|end|>' → logprob: -10.75389289855957
    5. '<|end|>' → logprob: -12.00389289855957
    6. '_' → logprob: -12.62889289855957
    7. '  ' → logprob: -12.87889289855957
    8. ' ' → logprob: -13.62889289855957
    9. ' _' → logprob: -14.69139289855957
    10. '	in' → logprob: -14.69139289855957

Token 157: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.31328776478767395
    2. 'read' → logprob: -1.3132877349853516
    3. ' ' → logprob: -11.313287734985352
    4. ' range' → logprob: -12.313287734985352
    5. '  ' → logprob: -13.063287734985352
    6. 'range' → logprob: -13.188287734985352
    7. '	read' → logprob: -13.438287734985352
    8. '(read' → logprob: -13.563287734985352
    9. '   ' → logprob: -13.938287734985352
    10. '
' → logprob: -14.188287734985352

Token 158: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.8789383830153383e-05
    2. 'line' → logprob: -11.500019073486328
    3. '_' → logprob: -11.875019073486328
    4. '_LINE' → logprob: -14.250019073486328
    5. ' line' → logprob: -15.375019073486328
    6. 'Line' → logprob: -15.500019073486328
    7. ' _' → logprob: -16.125019073486328
    8. '_single' → logprob: -16.125019073486328
    9. '(_' → logprob: -16.250019073486328
    10. '```' → logprob: -16.625019073486328

Token 159: '_split' (ID: 39921)
  Prédit: '_split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_split' → logprob: -0.00012654215970542282
    2. 'split' → logprob: -9.000126838684082
    3. '_' → logprob: -13.375126838684082
    4. '_s' → logprob: -14.875126838684082
    5. '_strip' → logprob: -15.125126838684082
    6. '()' → logprob: -15.375126838684082
    7. 'plit' → logprob: -15.750126838684082
    8. '_str' → logprob: -15.750126838684082
    9. 's' → logprob: -16.500125885009766
    10. '(split' → logprob: -16.625125885009766

Token 160: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0005545823951251805
    2. '()' → logprob: -7.50055456161499
    3. '()]
' → logprob: -14.375555038452148
    4. '())' → logprob: -14.875555038452148
    5. '(' → logprob: -15.375555038452148
    6. ' ()' → logprob: -15.875555038452148
    7. ']' → logprob: -16.50055503845215
    8. '()}' → logprob: -17.12555503845215
    9. '()],' → logprob: -17.12555503845215
    10. '():' → logprob: -17.25055503845215

Token 161: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010803256882354617
    2. ' ]' → logprob: -7.376080513000488
    3. '()]' → logprob: -7.751080513000488
    4. '   ' → logprob: -11.876080513000488
    5. ']
' → logprob: -12.001080513000488
    6. ')]' → logprob: -12.126080513000488
    7. ']()' → logprob: -13.001080513000488
    8. ':]' → logprob: -14.626080513000488
    9. ')' → logprob: -14.876080513000488
    10. '()' → logprob: -14.876080513000488

Token 162: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0659429058432579
    2. '   ' → logprob: -2.9409430027008057
    3. '    
' → logprob: -5.565942764282227
    4. '<|end|>' → logprob: -5.565942764282227
    5. ' 
' → logprob: -6.440942764282227
    6. '  
' → logprob: -7.190942764282227
    7. ' ' → logprob: -8.690942764282227
    8. '#' → logprob: -8.940942764282227
    9. '   
' → logprob: -9.065942764282227
    10. '[' → logprob: -9.190942764282227

Token 163: ' xor' (ID: 106402)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'freq' → logprob: -1.563629150390625
    2. 'dp' → logprob: -1.938629150390625
    3. 'g' → logprob: -2.063629150390625
    4. 'frequency' → logprob: -2.188629150390625
    5. 'counter' → logprob: -2.313629150390625
    6. 'result' → logprob: -2.813629150390625
    7. 'heap' → logprob: -3.063629150390625
    8. 'max' → logprob: -3.438629150390625
    9. 'count' → logprob: -3.688629150390625
    10. 'value' → logprob: -3.688629150390625

Token 164: '_dp' (ID: 133252)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.15330949425697327
    2. '_value' → logprob: -2.2783095836639404
    3. '_val' → logprob: -3.5283095836639404
    4. '_sum' → logprob: -5.403309345245361
    5. '_acc' → logprob: -5.903309345245361
    6. '_' → logprob: -6.153309345245361
    7. '_res' → logprob: -7.653309345245361
    8. '_total' → logprob: -8.02830982208252
    9. '_results' → logprob: -9.40330982208252
    10. '_values' → logprob: -10.27830982208252

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003438865300267935
    2. '=' → logprob: -5.753438949584961
    3. ' ' → logprob: -8.503438949584961
    4. '   ' → logprob: -10.878438949584961
    5. '[' → logprob: -11.128438949584961
    6. '  ' → logprob: -11.753438949584961
    7. ' =[' → logprob: -12.003438949584961
    8. ',' → logprob: -12.628438949584961
    9. '_' → logprob: -13.253438949584961
    10. '0' → logprob: -13.378438949584961

Token 166: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3622206449508667
    2. ' [' → logprob: -1.2372206449508667
    3. '0' → logprob: -5.862220764160156
    4. 'collections' → logprob: -5.862220764160156
    5. '{' → logprob: -5.987220764160156
    6. '[input' → logprob: -5.987220764160156
    7. ' collections' → logprob: -7.237220764160156
    8. '{}' → logprob: -7.362220764160156
    9. ' ' → logprob: -7.612220764160156
    10. ' {' → logprob: -7.987220764160156

Token 167: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22618655860424042
    2. 'False' → logprob: -1.6011865139007568
    3. ' False' → logprob: -7.976186752319336
    4. '-' → logprob: -8.726186752319336
    5. ' ' → logprob: -8.976186752319336
    6. '[' → logprob: -9.726186752319336
    7. '(' → logprob: -10.851186752319336
    8. '(False' → logprob: -10.976186752319336
    9. 'None' → logprob: -11.726186752319336
    10. '
' → logprob: -12.226186752319336

Token 168: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21789982914924622
    2. ' for' → logprob: -1.8428997993469238
    3. ']*' → logprob: -3.717899799346924
    4. 'for' → logprob: -5.092899799346924
    5. ']*(' → logprob: -5.092899799346924
    6. ',' → logprob: -7.967899799346924
    7. ' ]' → logprob: -7.967899799346924
    8. ' ' → logprob: -9.342900276184082
    9. '   ' → logprob: -10.092900276184082
    10. ']+' → logprob: -11.217900276184082

Token 169: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014789627864956856
    2. ' ' → logprob: -4.264789581298828
    3. ']' → logprob: -8.264789581298828
    4. 'False' → logprob: -8.764789581298828
    5. '1' → logprob: -9.264789581298828
    6. ' False' → logprob: -11.139789581298828
    7. 'num' → logprob: -11.139789581298828
    8. 'None' → logprob: -11.264789581298828
    9. ' ]' → logprob: -11.702289581298828
    10. ')' → logprob: -11.889789581298828

Token 170: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000685391016304493
    2. ' ' → logprob: -8.250685691833496
    3. ']' → logprob: -8.625685691833496
    4. 'False' → logprob: -9.375685691833496
    5. '1' → logprob: -9.750685691833496
    6. 'float' → logprob: -10.500685691833496
    7. 'None' → logprob: -11.125685691833496
    8. '-' → logprob: -11.250685691833496
    9. 'math' → logprob: -11.625685691833496
    10. 'sys' → logprob: -12.188185691833496

Token 171: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025111833587288857
    2. ']]' → logprob: -4.025111675262451
    3. '],' → logprob: -5.150111675262451
    4. '],
' → logprob: -7.775111675262451
    5. ' ]' → logprob: -7.900111675262451
    6. '],[' → logprob: -9.02511215209961
    7. ']
' → logprob: -9.52511215209961
    8. ' ]]' → logprob: -9.65011215209961
    9. ')]' → logprob: -10.90011215209961
    10. ',' → logprob: -11.02511215209961

Token 172: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11453618854284286
    2. ' for' → logprob: -2.3645362854003906
    3. ',' → logprob: -4.864536285400391
    4. ' ]' → logprob: -5.864536285400391
    5. 'for' → logprob: -6.239536285400391
    6. '   ' → logprob: -6.614536285400391
    7. '    ' → logprob: -9.61453628540039
    8. ',
' → logprob: -9.86453628540039
    9. ']+' → logprob: -10.11453628540039
    10. ']
' → logprob: -10.61453628540039

Token 173: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.00028648413717746735
    2. '_' → logprob: -8.250286102294922
    3. ' val' → logprob: -11.625286102294922
    4. ' ' → logprob: -11.875286102294922
    5. ' range' → logprob: -12.375286102294922
    6. ' i' → logprob: -13.000286102294922
    7. ' ' → logprob: -13.125286102294922
    8. '_val' → logprob: -15.625286102294922
    9. '_i' → logprob: -15.875286102294922
    10. ' __' → logprob: -16.500286102294922

Token 174: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10199221223592758
    2. 'in' → logprob: -2.851992130279541
    3. 'range' → logprob: -3.726992130279541
    4. ' range' → logprob: -4.226992130279541
    5. 'val' → logprob: -8.7269926071167
    6. ' ' → logprob: -9.1019926071167
    7. ' xrange' → logprob: -9.9769926071167
    8. ' _' → logprob: -10.2269926071167
    9. '_' → logprob: -10.3519926071167
    10. '0' → logprob: -10.3519926071167

Token 175: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1798022836446762
    2. ' range' → logprob: -1.8048022985458374
    3. 'input' → logprob: -10.054801940917969
    4. ' input' → logprob: -12.304801940917969
    5. ' xrange' → logprob: -12.679801940917969
    6. ' ' → logprob: -13.304801940917969
    7. '_' → logprob: -13.429801940917969
    8. '_range' → logprob: -14.429801940917969
    9. 'x' → logprob: -14.554801940917969
    10. '(range' → logprob: -14.929801940917969

Token 176: '(' (ID: 7)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0025739942211657763
    2. '(' → logprob: -6.0025739669799805
    3. '(len' → logprob: -10.37757396697998
    4. ' (' → logprob: -10.50257396697998
    5. 'num' → logprob: -10.75257396697998
    6. ' num' → logprob: -12.00257396697998
    7. '((' → logprob: -12.50257396697998
    8. '(n' → logprob: -12.50257396697998
    9. '   ' → logprob: -13.62757396697998
    10. ' ' → logprob: -14.12757396697998

Token 177: '2' (ID: 17)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.011031560599803925
    2. ' num' → logprob: -4.761031627655029
    3. '(num' → logprob: -6.386031627655029
    4. '   ' → logprob: -8.136031150817871
    5. '(' → logprob: -9.636031150817871
    6. 'len' → logprob: -9.761031150817871
    7. ' ' → logprob: -10.261031150817871
    8. '101' → logprob: -10.886031150817871
    9. '10' → logprob: -11.011031150817871
    10. ')' → logprob: -11.136031150817871

Token 178: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -1.2503331899642944
    2. '*num' → logprob: -1.2503331899642944
    3. '**' → logprob: -1.3753331899642944
    4. ' *' → logprob: -2.125333309173584
    5. '0' → logprob: -3.500333309173584
    6. '5' → logprob: -4.750333309173584
    7. ')]' → logprob: -5.500333309173584
    8. '6' → logprob: -5.875333309173584
    9. ')])' → logprob: -6.000333309173584
    10. ' ' → logprob: -6.125333309173584

Token 179: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.7761287689208984
    2. 'num' → logprob: -0.9011287689208984
    3. '17' → logprob: -2.5261287689208984
    4. '18' → logprob: -4.026128768920898
    5. '(num' → logprob: -4.776128768920898
    6. '16' → logprob: -4.776128768920898
    7. '19' → logprob: -5.151128768920898
    8. '14' → logprob: -5.526128768920898
    9. '15' → logprob: -5.901128768920898
    10. '13' → logprob: -5.901128768920898

Token 180: '20' (ID: 455)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.6242844462394714
    2. '20' → logprob: -1.1242845058441162
    3. '17' → logprob: -2.374284505844116
    4. '18' → logprob: -4.124284267425537
    5. '16' → logprob: -4.749284267425537
    6. '19' → logprob: -5.124284267425537
    7. '(num' → logprob: -5.624284267425537
    8. '15' → logprob: -5.749284267425537
    9. '10' → logprob: -5.874284267425537
    10. '14' → logprob: -5.999284267425537

Token 181: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00013166792632546276
    2. ' )' → logprob: -9.500131607055664
    3. ']' → logprob: -10.625131607055664
    4. ' ]' → logprob: -11.750131607055664
    5. ')' → logprob: -12.125131607055664
    6. ')])' → logprob: -12.625131607055664
    7. '])]' → logprob: -12.750131607055664
    8. '   ' → logprob: -12.750131607055664
    9. ')][' → logprob: -12.875131607055664
    10. ')]
' → logprob: -13.125131607055664

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07458589226007462
    2. '
' → logprob: -3.5745859146118164
    3. '<|end|>' → logprob: -4.324585914611816
    4. '    
' → logprob: -4.699585914611816
    5. ' ' → logprob: -4.949585914611816
    6. '[' → logprob: -5.449585914611816
    7. ']' → logprob: -5.449585914611816
    8. ')' → logprob: -6.949585914611816
    9. ' 
' → logprob: -6.949585914611816
    10. '#' → logprob: -7.074585914611816

Token 183: ' memo' (ID: 46393)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7292978763580322
    2. '
' → logprob: -1.6042978763580322
    3. ' for' → logprob: -1.7292978763580322
    4. ' ' → logprob: -2.7292978763580322
    5. 'for' → logprob: -3.7292978763580322
    6. '[' → logprob: -4.229297637939453
    7. ' 
' → logprob: -4.479297637939453
    8. '  
' → logprob: -5.229297637939453
    9. '    
' → logprob: -5.354297637939453
    10. '<|end|>' → logprob: -5.729297637939453

Token 184: 'ization' (ID: 2860)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31469792127609253
    2. '=' → logprob: -1.3146979808807373
    3. 'ization' → logprob: -7.689697742462158
    4. ' ' → logprob: -8.939698219299316
    5. '_' → logprob: -9.064698219299316
    6. 'ize' → logprob: -9.064698219299316
    7. '   ' → logprob: -9.314698219299316
    8. ':' → logprob: -9.439698219299316
    9. '[' → logprob: -9.439698219299316
    10. 'ized' → logprob: -9.814698219299316

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13476787507534027
    2. '=' → logprob: -2.134767770767212
    3. '_' → logprob: -5.259768009185791
    4. '[' → logprob: -7.509768009185791
    5. '_map' → logprob: -7.759768009185791
    6. '_table' → logprob: -7.884768009185791
    7. ' ' → logprob: -8.134767532348633
    8. '_dp' → logprob: -8.259767532348633
    9. '_states' → logprob: -9.009767532348633
    10. '_size' → logprob: -9.509767532348633

Token 186: ' [' (ID: 723)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.250505268573761
    2. '[' → logprob: -2.000505208969116
    3. ' [' → logprob: -3.375505208969116
    4. ' {}' → logprob: -3.750505208969116
    5. '[-' → logprob: -4.000505447387695
    6. 'collections' → logprob: -5.375505447387695
    7. '{' → logprob: -6.125505447387695
    8. '[[' → logprob: -7.250505447387695
    9. ' [-' → logprob: -7.375505447387695
    10. ' [{}' → logprob: -7.625505447387695

Token 187: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16844291985034943
    2. '0' → logprob: -2.543442964553833
    3. '[-' → logprob: -3.418442964553833
    4. 'False' → logprob: -4.043442726135254
    5. '[' → logprob: -4.543442726135254
    6. 'None' → logprob: -5.293442726135254
    7. ' -' → logprob: -5.668442726135254
    8. '{}' → logprob: -6.543442726135254
    9. '(-' → logprob: -6.668442726135254
    10. 'float' → logprob: -6.918442726135254

Token 188: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021914826706051826
    2. ' for' → logprob: -3.8969147205352783
    3. ' ]' → logprob: -7.771914958953857
    4. ',' → logprob: -7.771914958953857
    5. ']*' → logprob: -7.896914958953857
    6. 'for' → logprob: -9.0219144821167
    7. ' ' → logprob: -11.2719144821167
    8. '[' → logprob: -11.7719144821167
    9. ']*(' → logprob: -12.0219144821167
    10. '   ' → logprob: -12.6469144821167

Token 189: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7778241634368896
    2. ' for' → logprob: -0.9028241634368896
    3. 'for' → logprob: -2.2778241634368896
    4. '<|end|>' → logprob: -3.9028241634368896
    5. '*' → logprob: -5.652824401855469
    6. ' *' → logprob: -6.277824401855469
    7. ']*' → logprob: -6.402824401855469
    8. '[' → logprob: -6.652824401855469
    9. ',' → logprob: -7.277824401855469
    10. '<|end|>' → logprob: -7.402824401855469

Token 190: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013696423266083002
    2. ' (' → logprob: -6.626369476318359
    3. '2' → logprob: -11.37636947631836
    4. '
' → logprob: -12.12636947631836
    5. '100' → logprob: -12.25136947631836
    6. '   ' → logprob: -12.50136947631836
    7. ' ' → logprob: -12.62636947631836
    8. '((' → logprob: -12.75136947631836
    9. '104' → logprob: -12.75136947631836
    10. 'xor' → logprob: -13.25136947631836

Token 191: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14833199977874756
    2. '2' → logprob: -2.148332118988037
    3. ' (' → logprob: -4.023332118988037
    4. ' ' → logprob: -5.898332118988037
    5. '104' → logprob: -8.648331642150879
    6. 'len' → logprob: -9.273331642150879
    7. '1' → logprob: -9.523331642150879
    8. '   ' → logprob: -9.648331642150879
    9. '10' → logprob: -10.148331642150879
    10. '(len' → logprob: -10.523331642150879

Token 192: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1853071004152298
    2. ' **' → logprob: -1.8103071451187134
    3. '0' → logprob: -5.310307025909424
    4. '20' → logprob: -7.685307025909424
    5. '*' → logprob: -10.185307502746582
    6. '000' → logprob: -10.310307502746582
    7. ' *' → logprob: -10.435307502746582
    8. ' ' → logprob: -11.185307502746582
    9. '^' → logprob: -11.810307502746582
    10. ' ' → logprob: -11.935307502746582

Token 193: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.0004942946252413094
    2. ' ' → logprob: -7.625494480133057
    3. '10' → logprob: -12.625494003295898
    4. '19' → logprob: -13.875494003295898
    5. '   ' → logprob: -14.750494003295898
    6. '15' → logprob: -14.875494003295898
    7. '17' → logprob: -15.250494003295898
    8. '21' → logprob: -15.375494003295898
    9. '18' → logprob: -15.875494003295898
    10. '16' → logprob: -16.0004940032959

Token 194: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -1.5048530030981055e-06
    2. '10' → logprob: -14.750001907348633
    3. '19' → logprob: -14.875001907348633
    4. '17' → logprob: -15.875001907348633
    5. '21' → logprob: -15.875001907348633
    6. '18' → logprob: -16.375001907348633
    7. ' ' → logprob: -16.437501907348633
    8. '15' → logprob: -16.500001907348633
    9. '```' → logprob: -17.187501907348633
    10. '16' → logprob: -17.187501907348633

Token 195: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.273621405242011e-05
    2. ')
' → logprob: -11.375032424926758
    3. ' )' → logprob: -11.500032424926758
    4. ')]' → logprob: -12.000032424926758
    5. '))' → logprob: -13.625032424926758
    6. '])' → logprob: -13.750032424926758
    7. '+' → logprob: -14.125032424926758
    8. ']' → logprob: -14.250032424926758
    9. ')])' → logprob: -15.000032424926758
    10. '   ' → logprob: -15.500032424926758

Token 196: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27882134914398193
    2. '   ' → logprob: -1.528821349143982
    3. '<|end|>' → logprob: -4.0288214683532715
    4. '    
' → logprob: -5.2788214683532715
    5. '  
' → logprob: -6.9038214683532715
    6. ' ' → logprob: -7.2788214683532715
    7. ' 
' → logprob: -7.6538214683532715
    8. '[' → logprob: -8.278820991516113
    9. '  ' → logprob: -8.778820991516113
    10. '   
' → logprob: -8.778820991516113

Token 197: ' acc' (ID: 1259)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8464007377624512
    2. 'for' → logprob: -0.8464007377624512
    3. ' for' → logprob: -1.9714007377624512
    4. 'max' → logprob: -7.346400737762451
    5. 'i' → logprob: -7.471400737762451
    6. 'idx' → logprob: -8.59640121459961
    7. ' i' → logprob: -8.84640121459961
    8. 'mask' → logprob: -8.84640121459961
    9. '#' → logprob: -8.97140121459961
    10. ' ' → logprob: -8.97140121459961

Token 198: '_x' (ID: 7054)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.1021512746810913
    2. 'umulate' → logprob: -1.1021512746810913
    3. 'umulator' → logprob: -1.6021512746810913
    4. '=' → logprob: -2.727151393890381
    5. ' =' → logprob: -3.227151393890381
    6. 'umulative' → logprob: -4.102151393890381
    7. 'umul' → logprob: -5.602151393890381
    8. '   ' → logprob: -5.977151393890381
    9. 'umu' → logprob: -6.227151393890381
    10. 'uracy' → logprob: -6.727151393890381

Token 199: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0016501873033121228
    2. 'ors' → logprob: -8.001649856567383
    3. '_or' → logprob: -8.626649856567383
    4. '_x' → logprob: -8.876649856567383
    5. 'xor' → logprob: -8.876649856567383
    6. 'orr' → logprob: -9.126649856567383
    7. '   ' → logprob: -9.251649856567383
    8. '=' → logprob: -9.501649856567383
    9. '_' → logprob: -10.126649856567383
    10. 'o' → logprob: -10.376649856567383

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4295187294483185
    2. '=' → logprob: -1.054518699645996
    3. ' ' → logprob: -8.179518699645996
    4. 's' → logprob: -8.429518699645996
    5. '_val' → logprob: -9.179518699645996
    6. '_' → logprob: -9.804518699645996
    7. ',' → logprob: -9.929518699645996
    8. '_value' → logprob: -10.304518699645996
    9. '_values' → logprob: -10.929518699645996
    10. '  ' → logprob: -11.179518699645996

Token 201: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03806180879473686
    2. ' ' → logprob: -3.2880618572235107
    3. '[' → logprob: -11.66306209564209
    4. '   ' → logprob: -12.03806209564209
    5. ' [' → logprob: -12.91306209564209
    6. '  ' → logprob: -13.97556209564209
    7. '[]' → logprob: -14.35056209564209
    8. ' ' → logprob: -14.35056209564209
    9. '1' → logprob: -15.60056209564209
    10. '000' → logprob: -16.288061141967773

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008111746865324676
    2. ' ' → logprob: -7.2508111000061035
    3. '[' → logprob: -9.500811576843262
    4. '[]' → logprob: -11.500811576843262
    5. ' [' → logprob: -12.250811576843262
    6. 'input' → logprob: -13.000811576843262
    7. '1' → logprob: -13.125811576843262
    8. '   ' → logprob: -13.750811576843262
    9. '[]
' → logprob: -13.938311576843262
    10. '[input' → logprob: -13.938311576843262

Token 203: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06802202016115189
    2. '
' → logprob: -3.1930220127105713
    3. '    
' → logprob: -4.31802225112915
    4. '<|end|>' → logprob: -4.56802225112915
    5. '  
' → logprob: -8.443021774291992
    6. '<|end|>' → logprob: -8.693021774291992
    7. ' 
' → logprob: -8.943021774291992
    8. '	
' → logprob: -9.318021774291992
    9. '\n' → logprob: -9.693021774291992
    10. '   
' → logprob: -10.318021774291992

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07833043485879898
    2. '<|end|>' → logprob: -2.7033305168151855
    3. '
' → logprob: -5.3283305168151855
    4. ' for' → logprob: -6.7033305168151855
    5. '    
' → logprob: -6.8283305168151855
    6. ' ' → logprob: -8.328330039978027
    7. 'for' → logprob: -8.703330039978027
    8. '<|end|>' → logprob: -8.953330039978027
    9. ')' → logprob: -9.078330039978027
    10. '  
' → logprob: -9.078330039978027

Token 205: ' zero' (ID: 12421)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.501255452632904
    2. 'for' → logprob: -1.6262555122375488
    3. ' for' → logprob: -1.6262555122375488
    4. '	for' → logprob: -8.00125503540039
    5. ' ' → logprob: -8.50125503540039
    6. '    
' → logprob: -9.00125503540039
    7. '
' → logprob: -9.62625503540039
    8. '    ' → logprob: -10.12625503540039
    9. ')' → logprob: -10.50125503540039
    10. '  ' → logprob: -10.62625503540039

Token 206: '_sequences' (ID: 153014)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.22808024287223816
    2. '_' → logprob: -2.3530802726745605
    3. '_counts' → logprob: -3.8530802726745605
    4. '_indices' → logprob: -3.9780802726745605
    5. '_mask' → logprob: -4.1030802726745605
    6. '_index' → logprob: -4.8530802726745605
    7. '_x' → logprob: -5.1030802726745605
    8. '_freq' → logprob: -5.1030802726745605
    9. '_found' → logprob: -5.2280802726745605
    10. 'count' → logprob: -5.3530802726745605

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06899615377187729
    2. '=' → logprob: -3.1939961910247803
    3. '_count' → logprob: -3.6939961910247803
    4. '_found' → logprob: -8.19399642944336
    5. 'count' → logprob: -8.69399642944336
    6. '_' → logprob: -8.94399642944336
    7. ' ' → logprob: -9.81899642944336
    8. '_counts' → logprob: -10.19399642944336
    9. '_length' → logprob: -10.69399642944336
    10. '_counter' → logprob: -11.06899642944336

Token 208: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2590365409851074
    2. ' ' → logprob: -1.5090365409851074
    3. '1' → logprob: -5.009036540985107
    4. '[]' → logprob: -9.134037017822266
    5. ' [' → logprob: -9.759037017822266
    6. '[' → logprob: -9.759037017822266
    7. ' []' → logprob: -10.009037017822266
    8. 'True' → logprob: -10.634037017822266
    9. ' True' → logprob: -10.884037017822266
    10. '   ' → logprob: -11.134037017822266

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04673175886273384
    2. '1' → logprob: -3.17173171043396
    3. '[]' → logprob: -6.296731948852539
    4. ' ' → logprob: -7.171731948852539
    5. '[' → logprob: -7.671731948852539
    6. 'num' → logprob: -8.921731948852539
    7. '-' → logprob: -9.046731948852539
    8. '{}' → logprob: -9.046731948852539
    9. 'int' → logprob: -9.796731948852539
    10. 'set' → logprob: -10.296731948852539

Token 210: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2643061876296997
    2. '
' → logprob: -1.6393061876296997
    3. '<|end|>' → logprob: -3.38930606842041
    4. '    
' → logprob: -6.13930606842041
    5. ' for' → logprob: -7.51430606842041
    6. '  
' → logprob: -7.88930606842041
    7. '<|end|>' → logprob: -8.01430606842041
    8. ' ' → logprob: -8.26430606842041
    9. '  ' → logprob: -8.88930606842041
    10. 'for' → logprob: -8.88930606842041

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14471955597400665
    2. '
' → logprob: -2.1447196006774902
    3. '    
' → logprob: -5.39471960067749
    4. '  
' → logprob: -5.64471960067749
    5. ' 
' → logprob: -5.76971960067749
    6. ' for' → logprob: -6.01971960067749
    7. ' ' → logprob: -6.14471960067749
    8. '<|end|>' → logprob: -7.89471960067749
    9. '   
' → logprob: -7.89471960067749
    10. '  ' → logprob: -8.269719123840332

Token 212: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16534417867660522
    2. ' for' → logprob: -1.91534423828125
    3. '   ' → logprob: -5.29034423828125
    4. ' ' → logprob: -10.66534423828125
    5. '	for' → logprob: -10.91534423828125
    6. '
' → logprob: -11.29034423828125
    7. ')' → logprob: -13.29034423828125
    8. '  ' → logprob: -13.66534423828125
    9. 'i' → logprob: -13.91534423828125
    10. '    ' → logprob: -13.91534423828125

Token 213: ' idx' (ID: 14016)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.07098142802715302
    2. ' value' → logprob: -3.695981502532959
    3. ' i' → logprob: -4.320981502532959
    4. ' idx' → logprob: -4.320981502532959
    5. ' num' → logprob: -4.695981502532959
    6. 'val' → logprob: -5.945981502532959
    7. ' index' → logprob: -5.945981502532959
    8. ' _' → logprob: -7.695981502532959
    9. ' input' → logprob: -7.820981502532959
    10. ' x' → logprob: -8.0709810256958

Token 214: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0891585573554039
    2. 'in' → logprob: -2.464158535003662
    3. ',' → logprob: -9.21415901184082
    4. ' ' → logprob: -9.71415901184082
    5. '	in' → logprob: -10.83915901184082
    6. '   ' → logprob: -11.46415901184082
    7. ' ,' → logprob: -12.08915901184082
    8. '+' → logprob: -12.71415901184082
    9. '    ' → logprob: -12.83915901184082
    10. ' :' → logprob: -12.96415901184082

Token 215: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06995899975299835
    2. ' range' → logprob: -2.6949589252471924
    3. 'input' → logprob: -11.444958686828613
    4. '   ' → logprob: -12.444958686828613
    5. ' ' → logprob: -12.819958686828613
    6. '	range' → logprob: -13.194958686828613
    7. '  ' → logprob: -14.069958686828613
    8. ' xrange' → logprob: -14.444958686828613
    9. '(range' → logprob: -14.819958686828613
    10. ' input' → logprob: -14.819958686828613

Token 216: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.00022082125360611826
    2. '(' → logprob: -8.750221252441406
    3. '(len' → logprob: -10.375221252441406
    4. 'num' → logprob: -10.750221252441406
    5. ' num' → logprob: -12.000221252441406
    6. '   ' → logprob: -13.250221252441406
    7. ' (' → logprob: -13.750221252441406
    8. ',num' → logprob: -15.125221252441406
    9. '<num' → logprob: -15.875221252441406
    10. '	num' → logprob: -15.875221252441406

Token 217: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -1.3663626305060461e-05
    2. '_' → logprob: -12.62501335144043
    3. 'elements' → logprob: -12.75001335144043
    4. '_e' → logprob: -12.75001335144043
    5. 'el' → logprob: -13.75001335144043
    6. '_ELEMENTS' → logprob: -13.87501335144043
    7. '_elem' → logprob: -14.62501335144043
    8. ' _' → logprob: -14.87501335144043
    9. '_of' → logprob: -15.00001335144043
    10. 'Elements' → logprob: -15.62501335144043

Token 218: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07048739492893219
    2. '):
' → logprob: -2.6954874992370605
    3. '   ' → logprob: -7.8204874992370605
    4. ' ):' → logprob: -9.570487022399902
    5. '+' → logprob: -10.320487022399902
    6. ')' → logprob: -11.070487022399902
    7. ':' → logprob: -11.445487022399902
    8. '):
' → logprob: -11.445487022399902
    9. ' ):
' → logprob: -12.320487022399902
    10. ' ' → logprob: -13.445487022399902

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00218987581320107
    2. ':' → logprob: -7.002190113067627
    3. ',' → logprob: -7.752190113067627
    4. '    ' → logprob: -8.127189636230469
    5. '        
' → logprob: -9.002189636230469
    6. '   ' → logprob: -9.127189636230469
    7. '<|end|>' → logprob: -9.502189636230469
    8. ' ' → logprob: -9.877189636230469
    9. '      ' → logprob: -10.377189636230469
    10. '     ' → logprob: -11.127189636230469

Token 220: ' acc' (ID: 1259)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.7275793552398682
    2. '       ' → logprob: -1.2275793552398682
    3. ' value' → logprob: -1.7275793552398682
    4. ' current' → logprob: -4.102579116821289
    5. 'value' → logprob: -4.852579116821289
    6. ' acc' → logprob: -4.977579116821289
    7. 'val' → logprob: -5.602579116821289
    8. '   ' → logprob: -5.727579116821289
    9. ' x' → logprob: -6.102579116821289
    10. ' new' → logprob: -6.602579116821289

Token 221: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0006971848197281361
    2. '_' → logprob: -7.500697135925293
    3. ' ^=' → logprob: -9.125697135925293
    4. 'xor' → logprob: -11.125697135925293
    5. '_^' → logprob: -12.375697135925293
    6. '_val' → logprob: -12.625697135925293
    7. ' ^' → logprob: -12.750697135925293
    8. '^' → logprob: -12.875697135925293
    9. '=' → logprob: -13.125697135925293
    10. '_=' → logprob: -13.250697135925293

Token 222: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -8.435139898210764e-05
    2. 'xor' → logprob: -9.750083923339844
    3. '   ' → logprob: -12.250083923339844
    4. '^' → logprob: -12.375083923339844
    5. 'ors' → logprob: -12.625083923339844
    6. '_x' → logprob: -13.125083923339844
    7. '_' → logprob: -13.125083923339844
    8. ' ^=' → logprob: -13.250083923339844
    9. '=' → logprob: -13.375083923339844
    10. '_or' → logprob: -14.125083923339844

Token 223: ' ^=' (ID: 79665)
  Prédit: ' ^='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.1613672375679016
    2. '^' → logprob: -1.9113671779632568
    3. '=' → logprob: -6.786367416381836
    4. ' =' → logprob: -11.786367416381836
    5. ' ' → logprob: -12.786367416381836
    6. '^^' → logprob: -14.536367416381836
    7. 'ˆ' → logprob: -15.036367416381836
    8. '+=' → logprob: -15.161367416381836
    9. '_^' → logprob: -15.161367416381836
    10. ' ^' → logprob: -15.411367416381836

Token 224: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.003180563682690263
    2. ' input' → logprob: -5.753180503845215
    3. '   ' → logprob: -13.128180503845215
    4. '       ' → logprob: -14.628180503845215
    5. '(input' → logprob: -15.878180503845215
    6. 'import' → logprob: -16.75318145751953
    7. ' ' → logprob: -17.00318145751953
    8. 'int' → logprob: -17.37818145751953
    9. '           ' → logprob: -17.37818145751953
    10. '<input' → logprob: -17.50318145751953

Token 225: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -3.7697225252486533e-06
    2. 'values' → logprob: -12.750003814697266
    3. '_' → logprob: -15.375003814697266
    4. '_vals' → logprob: -15.875003814697266
    5. 's' → logprob: -16.000003814697266
    6. '[_' → logprob: -17.000003814697266
    7. '_elements' → logprob: -17.000003814697266
    8. 'Values' → logprob: -17.000003814697266
    9. '_val' → logprob: -17.125003814697266
    10. ' values' → logprob: -17.250003814697266

Token 226: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.128163257315464e-07
    2. 'idx' → logprob: -16.125
    3. '[' → logprob: -16.75
    4. '[val' → logprob: -17.625
    5. ' idx' → logprob: -17.75
    6. ' [' → logprob: -18.625
    7. '```' → logprob: -19.75
    8. '   ' → logprob: -20.0
    9. '[index' → logprob: -20.0
    10. '	idx' → logprob: -20.125

Token 227: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2476552575826645
    2. ']
' → logprob: -1.9976552724838257
    3. ')' → logprob: -2.747655153274536
    4. ')
' → logprob: -3.997655153274536
    5. ')]' → logprob: -7.497655391693115
    6. '       ' → logprob: -7.872655391693115
    7. ']

' → logprob: -8.622654914855957
    8. '])' → logprob: -9.622654914855957
    9. '[' → logprob: -10.372654914855957
    10. ' ]' → logprob: -11.122654914855957

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24194495379924774
    2. '
' → logprob: -1.6169449090957642
    3. '<|end|>' → logprob: -4.741944789886475
    4. '        
' → logprob: -5.116944789886475
    5. ',' → logprob: -7.366944789886475
    6. '[' → logprob: -8.491945266723633
    7. '  
' → logprob: -8.616945266723633
    8. '<|end|>' → logprob: -9.116945266723633
    9. '   ' → logprob: -9.366945266723633
    10. ',
' → logprob: -9.866945266723633

Token 229: ' if' (ID: 538)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.7430494427680969
    2. 'xor' → logprob: -1.7430493831634521
    3. 'prev' → logprob: -2.243049383163452
    4. 'count' → logprob: -2.493049383163452
    5. 'if' (adapté à ' if') → logprob: -3.493049383163452
    6. 'memo' → logprob: -3.743049383163452
    7. 'current' → logprob: -3.993049383163452
    8. 'for' → logprob: -4.618049621582031
    9. 'max' → logprob: -4.743049621582031
    10. 'curr' → logprob: -4.993049621582031

Token 230: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.20152628421783447
    2. ' acc' → logprob: -2.576526165008545
    3. 'xor' → logprob: -2.576526165008545
    4. 'memo' → logprob: -4.201526165008545
    5. 'input' → logprob: -5.326526165008545
    6. ' xor' → logprob: -5.576526165008545
    7. ' memo' → logprob: -5.826526165008545
    8. '(acc' → logprob: -6.701526165008545
    9. ' input' → logprob: -7.451526165008545
    10. 'not' → logprob: -8.201526641845703

Token 231: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -3.7385154428193346e-05
    2. 'xor' → logprob: -10.25003719329834
    3. '=' → logprob: -14.50003719329834
    4. '   ' → logprob: -14.62503719329834
    5. '       ' → logprob: -16.125038146972656
    6. '_' → logprob: -16.625038146972656
    7. '[' → logprob: -16.750038146972656
    8. 'x' → logprob: -17.000038146972656
    9. '==' → logprob: -17.000038146972656
    10. ' ' → logprob: -17.000038146972656

Token 232: 'or' (ID: 267)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.6122990250587463
    2. '_x' → logprob: -0.9872990250587463
    3. 'or' → logprob: -2.4872989654541016
    4. 'x' → logprob: -7.112298965454102
    5. '_or' → logprob: -7.362298965454102
    6. 'ox' → logprob: -8.612298965454102
    7. 'o' → logprob: -8.737298965454102
    8. '_' → logprob: -8.737298965454102
    9. '   ' → logprob: -10.487298965454102
    10. 'r' → logprob: -10.487298965454102

Token 233: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3895037770271301
    2. '==' → logprob: -1.1395037174224854
    3. ' in' → logprob: -6.2645039558410645
    4. ' <' → logprob: -8.264503479003906
    5. '<' → logprob: -9.139503479003906
    6. '[' → logprob: -9.514503479003906
    7. ' not' → logprob: -9.514503479003906
    8. ' ' → logprob: -10.014503479003906
    9. '>=' → logprob: -10.389503479003906
    10. ' >=' → logprob: -10.639503479003906

Token 234: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043102685594931245
    2. ' ' → logprob: -7.750431060791016
    3. 'zero' → logprob: -15.250431060791016
    4. '   ' → logprob: -16.375431060791016
    5. ' zero' → logprob: -17.062931060791016
    6. '
' → logprob: -17.875431060791016
    7. '  ' → logprob: -18.750431060791016
    8. '1' → logprob: -18.812931060791016
    9. '۰' → logprob: -19.375431060791016
    10. '00' → logprob: -19.687931060791016

Token 235: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. 'zero' → logprob: -15.6250581741333
    4. '
' → logprob: -17.000059127807617
    5. '   ' → logprob: -18.125059127807617
    6. '1' → logprob: -18.562559127807617
    7. 'xor' → logprob: -18.750059127807617
    8. ' zero' → logprob: -18.750059127807617
    9. '۰' → logprob: -18.875059127807617
    10. '

' → logprob: -19.125059127807617

Token 236: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12783488631248474
    2. ':' → logprob: -2.1278347969055176
    3. '       ' → logprob: -7.502834796905518
    4. '           ' → logprob: -8.127835273742676
    5. ' or' → logprob: -10.377835273742676
    6. ' and' → logprob: -11.502835273742676
    7. '):
' → logprob: -12.127835273742676
    8. ':
' → logprob: -12.127835273742676
    9. ' :
' → logprob: -13.252835273742676
    10. '   ' → logprob: -13.252835273742676

Token 237: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005866101942956448
    2. ':
' → logprob: -5.755866050720215
    3. ':' → logprob: -7.005866050720215
    4. '
' → logprob: -7.255866050720215
    5. '0' → logprob: -7.380866050720215
    6. '):
' → logprob: -9.130866050720215
    7. 'zero' → logprob: -9.505866050720215
    8. ',' → logprob: -9.630866050720215
    9. '       ' → logprob: -9.880866050720215
    10. ' zero' → logprob: -10.130866050720215

Token 238: ' zero' (ID: 12421)
  Prédit: ' zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.5298946499824524
    2. 'zero' (adapté à ' zero') → logprob: -0.9048946499824524
    3. '               ' → logprob: -5.279894828796387
    4. '           ' → logprob: -7.029894828796387
    5. '
' → logprob: -7.279894828796387
    6. '0' → logprob: -10.404894828796387
    7. '       ' → logprob: -11.154894828796387
    8. '   ' → logprob: -11.529894828796387
    9. '.zero' → logprob: -12.404894828796387
    10. '                
' → logprob: -12.404894828796387

Token 239: '_sequences' (ID: 153014)
  Prédit: '_sequences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequences' → logprob: -6.153795766294934e-06
    2. 'se' → logprob: -13.000005722045898
    3. '_' → logprob: -13.125005722045898
    4. 'Sequences' → logprob: -13.750005722045898
    5. ' sequences' → logprob: -15.000005722045898
    6. '
' → logprob: -15.875005722045898
    7. 's' → logprob: -16.1250057220459
    8. '_se' → logprob: -16.2500057220459
    9. '_s' → logprob: -16.7500057220459
    10. '_sequence' → logprob: -18.3750057220459

Token 240: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2520953118801117
    2. '+=' → logprob: -1.502095341682434
    3. '=' → logprob: -9.377095222473145
    4. ' =' → logprob: -9.502095222473145
    5. ' ' → logprob: -12.752095222473145
    6. ']+=' → logprob: -13.252095222473145
    7. '   ' → logprob: -13.502095222473145
    8. '    ' → logprob: -15.127095222473145
    9. ' ' → logprob: -16.37709617614746
    10. '+' → logprob: -16.50209617614746

Token 241: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009896093979477882
    2. ' ' → logprob: -4.634896278381348
    3. 'idx' → logprob: -9.634896278381348
    4. 'xor' → logprob: -10.259896278381348
    5. 'memo' → logprob: -11.009896278381348
    6. ' idx' → logprob: -12.009896278381348
    7. 'heap' → logprob: -12.509896278381348
    8. ' memo' → logprob: -12.884896278381348
    9. ' xor' → logprob: -13.134896278381348
    10. 'x' → logprob: -13.634896278381348

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004230475169606507
    2. 'xor' → logprob: -8.000423431396484
    3. ' ' → logprob: -10.000423431396484
    4. 'idx' → logprob: -10.250423431396484
    5. '(' → logprob: -13.125423431396484
    6. 'memo' → logprob: -13.250423431396484
    7. 'x' → logprob: -14.125423431396484
    8. ' xor' → logprob: -14.875423431396484
    9. 'dp' → logprob: -15.125423431396484
    10. '(x' → logprob: -15.375423431396484

Token 243: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1619284749031067
    2. '
' → logprob: -1.911928415298462
    3. '<|end|>' → logprob: -7.161928653717041
    4. '        
' → logprob: -7.911928653717041
    5. ',' → logprob: -8.911928176879883
    6. ',
' → logprob: -9.161928176879883
    7. '<|end|>' → logprob: -10.036928176879883
    8. '[' → logprob: -10.161928176879883
    9. '
' → logprob: -10.411928176879883
    10. '           ' → logprob: -10.661928176879883

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019389885710552335
    2. '
' → logprob: -7.001938819885254
    3. '        
' → logprob: -8.126938819885254
    4. '   ' → logprob: -9.376938819885254
    5. '<|end|>' → logprob: -9.376938819885254
    6. ',' → logprob: -9.501938819885254
    7. 'token' → logprob: -9.501938819885254
    8. '[' → logprob: -9.626938819885254
    9. ' token' → logprob: -10.376938819885254
    10. ' ' → logprob: -10.376938819885254

Token 245: ' else' (ID: 1203)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -1.119483470916748
    2. '       ' → logprob: -1.244483470916748
    3. '   ' → logprob: -1.494483470916748
    4. 'max' → logprob: -3.369483470916748
    5. 'mask' → logprob: -3.494483470916748
    6. 'for' → logprob: -3.869483470916748
    7. 'else' (adapté à ' else') → logprob: -4.494483470916748
    8. 'count' → logprob: -4.869483470916748
    9. 'if' → logprob: -4.994483470916748
    10. 'current' → logprob: -5.244483470916748

Token 246: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4221530854701996
    2. '           ' → logprob: -1.422153115272522
    3. '       ' → logprob: -2.9221529960632324
    4. ':' → logprob: -3.1721529960632324
    5. ' if' → logprob: -5.547152996063232
    6. 'if' → logprob: -7.047152996063232
    7. '
' → logprob: -7.672152996063232
    8. ' :
' → logprob: -7.922152996063232
    9. '   ' → logprob: -8.04715347290039
    10. '):
' → logprob: -8.29715347290039

Token 247: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1845867782831192
    2. 'xor' → logprob: -3.059586763381958
    3. 'dp' → logprob: -3.934586763381958
    4. 'count' → logprob: -4.184587001800537
    5. 'x' → logprob: -4.434587001800537
    6. 'zero' → logprob: -4.559587001800537
    7. '       ' → logprob: -4.684587001800537
    8. 'if' → logprob: -4.809587001800537
    9. ' xor' → logprob: -5.059587001800537
    10. 'memo' → logprob: -5.184587001800537

Token 248: ' xor' (ID: 106402)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.35162171721458435
    2. 'xor' (adapté à ' xor') → logprob: -1.6016217470169067
    3. 'memo' → logprob: -2.726621627807617
    4. 'if' → logprob: -4.476621627807617
    5. 'for' → logprob: -6.101621627807617
    6. 'max' → logprob: -6.101621627807617
    7. 'prev' → logprob: -6.226621627807617
    8. 'idx' → logprob: -6.601621627807617
    9. 'min' → logprob: -6.851621627807617
    10. 'count' → logprob: -6.976621627807617

Token 249: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.007476005703210831
    2. 'dp' → logprob: -5.507475852966309
    3. '_val' → logprob: -6.257475852966309
    4. '_sequences' → logprob: -8.257475852966309
    5. '_' → logprob: -8.882475852966309
    6. '_states' → logprob: -9.132475852966309
    7. 'val' → logprob: -9.257475852966309
    8. '_value' → logprob: -9.382475852966309
    9. '_mask' → logprob: -9.382475852966309
    10. '=' → logprob: -9.507475852966309

Token 250: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.031157969729975e-05
    2. '_idx' → logprob: -10.500090599060059
    3. '[idx' → logprob: -11.375090599060059
    4. ' [' → logprob: -12.000090599060059
    5. 'xor' → logprob: -12.375090599060059
    6. '_acc' → logprob: -12.375090599060059
    7. 'acc' → logprob: -12.375090599060059
    8. '=' → logprob: -12.625090599060059
    9. 'idx' → logprob: -12.625090599060059
    10. '_index' → logprob: -12.625090599060059

Token 251: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -5.56233171664644e-05
    2. '0' → logprob: -10.625055313110352
    3. 'idx' → logprob: -11.750055313110352
    4. ' acc' → logprob: -12.250055313110352
    5. '(acc' → logprob: -12.250055313110352
    6. 'xor' → logprob: -12.250055313110352
    7. 'ac' → logprob: -12.750055313110352
    8. '[' → logprob: -13.250055313110352
    9. 'zero' → logprob: -13.625055313110352
    10. ']' → logprob: -14.500055313110352

Token 252: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.20395126938819885
    2. 'xor' → logprob: -2.078951358795166
    3. 'or' → logprob: -2.828951358795166
    4. 'x' → logprob: -8.453950881958008
    5. '_or' → logprob: -10.703950881958008
    6. 'ox' → logprob: -10.828950881958008
    7. 'o' → logprob: -11.078950881958008
    8. '_idx' → logprob: -11.203950881958008
    9. 'orl' → logprob: -11.828950881958008
    10. '   ' → logprob: -11.953950881958008

Token 253: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.11664131283760071
    2. 'xor' → logprob: -2.2416412830352783
    3. 'r' → logprob: -7.116641521453857
    4. 'ox' → logprob: -7.366641521453857
    5. '[' → logprob: -7.491641521453857
    6. '][' → logprob: -7.616641521453857
    7. 'x' → logprob: -7.991641521453857
    8. ']' → logprob: -8.8666410446167
    9. '_x' → logprob: -8.8666410446167
    10. 'ors' → logprob: -9.1166410446167

Token 254: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00022964231902733445
    2. ']' → logprob: -9.250229835510254
    3. '[' → logprob: -9.375229835510254
    4. ' ][' → logprob: -10.125229835510254
    5. '=' → logprob: -13.250229835510254
    6. ']][' → logprob: -13.750229835510254
    7. '][-' → logprob: -14.000229835510254
    8. '
' → logprob: -14.375229835510254
    9. ')][' → logprob: -14.500229835510254
    10. ']=' → logprob: -14.625229835510254

Token 255: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.062003642320632935
    2. '1' → logprob: -2.8120036125183105
    3. ' ' → logprob: -10.562004089355469
    4. '
' → logprob: -11.687004089355469
    5. '-' → logprob: -14.374504089355469
    6. ']' → logprob: -15.437004089355469
    7. '   ' → logprob: -15.687004089355469
    8. '01' → logprob: -15.749504089355469
    9. '=' → logprob: -16.49950408935547
    10. '

' → logprob: -16.74950408935547

Token 256: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004813749808818102
    2. ']+=' → logprob: -5.3798136711120605
    3. ']^' → logprob: -8.879814147949219
    4. ']=' → logprob: -10.754814147949219
    5. '^' → logprob: -11.129814147949219
    6. ' ]' → logprob: -12.129814147949219
    7. ']+' → logprob: -12.629814147949219
    8. ']]' → logprob: -13.129814147949219
    9. '-' → logprob: -13.504814147949219
    10. ' ^=' → logprob: -13.629814147949219

Token 257: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6099618077278137
    2. '+=' → logprob: -1.109961748123169
    3. '^' → logprob: -2.109961748123169
    4. ' ^=' → logprob: -5.359961986541748
    5. '*=' → logprob: -7.859961986541748
    6. ']+=' → logprob: -7.984961986541748
    7. ' +=' → logprob: -8.60996150970459
    8. ' =' → logprob: -9.73496150970459
    9. '|' → logprob: -9.98496150970459
    10. ',' → logprob: -10.10996150970459

Token 258: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.4229393005371094
    2. 'zero' → logprob: -1.2979393005371094
    3. '1' → logprob: -3.0479393005371094
    4. 'memo' → logprob: -4.172939300537109
    5. ' xor' → logprob: -5.422939300537109
    6. '0' → logprob: -6.297939300537109
    7. ' zero' → logprob: -6.422939300537109
    8. ' ' → logprob: -8.42293930053711
    9. ' memo' → logprob: -8.67293930053711
    10. 'one' → logprob: -9.11043930053711

Token 259: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.0018835387891158462
    2. 'dp' → logprob: -6.376883506774902
    3. '_' → logprob: -10.001883506774902
    4. '_sequences' → logprob: -10.876883506774902
    5. 'DP' → logprob: -11.251883506774902
    6. '_idx' → logprob: -11.376883506774902
    7. '0' → logprob: -11.501883506774902
    8. '1' → logprob: -11.626883506774902
    9. 'idx' → logprob: -11.876883506774902
    10. ' ' → logprob: -11.876883506774902

Token 260: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.60414821645827e-06
    2. '[(' → logprob: -13.000004768371582
    3. '   ' → logprob: -14.750004768371582
    4. 'acc' → logprob: -14.875004768371582
    5. '[
' → logprob: -14.875004768371582
    6. ' ' → logprob: -15.375004768371582
    7. '[arr' → logprob: -15.750004768371582
    8. '[...]' → logprob: -16.250003814697266
    9. '(acc' → logprob: -16.500003814697266
    10. '[x' → logprob: -16.500003814697266

Token 261: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.00016229959146585315
    2. '0' → logprob: -8.750162124633789
    3. '(acc' → logprob: -13.750162124633789
    4. '(' → logprob: -13.875162124633789
    5. ' acc' → logprob: -14.125162124633789
    6. '   ' → logprob: -15.125162124633789
    7. 'ac' → logprob: -15.250162124633789
    8. 'zero' → logprob: -15.500162124633789
    9. ' ' → logprob: -16.87516212463379
    10. '1' → logprob: -16.87516212463379

Token 262: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.21403256058692932
    2. 'xor' → logprob: -1.714032530784607
    3. 'or' → logprob: -4.9640326499938965
    4. 'x' → logprob: -5.2140326499938965
    5. 'ox' → logprob: -10.339032173156738
    6. 'o' → logprob: -10.839032173156738
    7. 'acc' → logprob: -11.214032173156738
    8. 'ax' → logprob: -11.589032173156738
    9. 'val' → logprob: -11.839032173156738
    10. '[' → logprob: -12.339032173156738

Token 263: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.040360286831855774
    2. 'xor' → logprob: -3.29036021232605
    3. '[' → logprob: -7.290360450744629
    4. 'acc' → logprob: -7.415360450744629
    5. 'ox' → logprob: -7.915360450744629
    6. 'x' → logprob: -8.415360450744629
    7. '_x' → logprob: -8.665360450744629
    8. 'ax' → logprob: -9.165360450744629
    9. 'os' → logprob: -10.415360450744629
    10. 'ors' → logprob: -10.915360450744629

Token 264: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0022000980097800493
    2. '[' → logprob: -6.127200126647949
    3. ']' → logprob: -12.00220012664795
    4. ' ][' → logprob: -12.12720012664795
    5. '"][' → logprob: -13.87720012664795
    6. '0' → logprob: -13.87720012664795
    7. '-' → logprob: -15.37720012664795
    8. ' [' → logprob: -15.37720012664795
    9. ''][' → logprob: -15.50220012664795
    10. '   ' → logprob: -15.87720012664795

Token 265: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.375001907348633
    3. '1' → logprob: -15.250001907348633
    4. '   ' → logprob: -16.000001907348633
    5. '
' → logprob: -17.937501907348633
    6. '[' → logprob: -18.562501907348633
    7. ']' → logprob: -18.625001907348633
    8. '  ' → logprob: -18.687501907348633
    9. '۰' → logprob: -18.875001907348633
    10. '       ' → logprob: -19.187501907348633

Token 266: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001614365610294044
    2. ']
' → logprob: -6.626614570617676
    3. ' ]' → logprob: -9.001614570617676
    4. '<|end|>' → logprob: -9.001614570617676
    5. ']+' → logprob: -10.876614570617676
    6. '<|end|>' → logprob: -12.126614570617676
    7. ']

' → logprob: -12.626614570617676
    8. '       ' → logprob: -13.251614570617676
    9. ']<<' → logprob: -13.626614570617676
    10. '+' → logprob: -13.751614570617676

Token 267: ' *' (ID: 425)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4052831530570984
    2. '<|end|>' → logprob: -1.2802832126617432
    3. '
' → logprob: -3.405283212661743
    4. '       ' → logprob: -5.155282974243164
    5. '<|end|>' → logprob: -5.655282974243164
    6. ' ' → logprob: -5.655282974243164
    7. '   ' → logprob: -6.405282974243164
    8. '               ' → logprob: -6.530282974243164
    9. '		' → logprob: -7.030282974243164
    10. ' 
' → logprob: -7.405282974243164

Token 268: ' (' (ID: 350)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.7819433212280273
    2. 'memo' → logprob: -1.7819433212280273
    3. 'idx' → logprob: -2.4069433212280273
    4. '2' → logprob: -2.4069433212280273
    5. 'xor' → logprob: -2.7819433212280273
    6. '0' → logprob: -3.7819433212280273
    7. 'acc' → logprob: -4.031943321228027
    8. ' zero' → logprob: -4.156943321228027
    9. 'num' → logprob: -4.406943321228027
    10. '1' → logprob: -4.656943321228027

Token 269: 'zero' (ID: 29221)
  Prédit: 'zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.17516568303108215
    2. '2' → logprob: -2.3001656532287598
    3. 'idx' → logprob: -3.9251656532287598
    4. ' zero' → logprob: -4.30016565322876
    5. 'xor' → logprob: -4.55016565322876
    6. 'num' → logprob: -5.67516565322876
    7. '-' → logprob: -5.92516565322876
    8. '0' → logprob: -6.17516565322876
    9. ' ' → logprob: -6.30016565322876
    10. 'memo' → logprob: -6.55016565322876

Token 270: '_sequences' (ID: 153014)
  Prédit: '_sequences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequences' → logprob: -2.2200749754119897e-06
    2. 'Sequences' → logprob: -13.250001907348633
    3. 'se' → logprob: -15.250001907348633
    4. '_' → logprob: -17.000001907348633
    5. ' sequences' → logprob: -17.500001907348633
    6. 's' → logprob: -17.875001907348633
    7. '+' → logprob: -18.000001907348633
    8. '_zero' → logprob: -18.125001907348633
    9. 'zero' → logprob: -18.125001907348633
    10. '_sequence' → logprob: -18.875001907348633

Token 271: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9139052629470825
    2. '%' → logprob: -1.4139052629470825
    3. ')%' → logprob: -1.6639052629470825
    4. ' %' → logprob: -2.663905143737793
    5. '+' → logprob: -2.913905143737793
    6. ' +' → logprob: -3.788905143737793
    7. ' )' → logprob: -5.288905143737793
    8. '
' → logprob: -5.413905143737793
    9. ']%' → logprob: -5.413905143737793
    10. ']' → logprob: -5.913905143737793

Token 272: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.7679638862609863
    2. 'xor' → logprob: -1.1429638862609863
    3. '1' → logprob: -2.0179638862609863
    4. ' memo' → logprob: -3.3929638862609863
    5. ' xor' → logprob: -3.8929638862609863
    6. 'zero' → logprob: -4.392963886260986
    7. '   ' → logprob: -6.017963886260986
    8. ' ' → logprob: -6.017963886260986
    9. ')' → logprob: -6.392963886260986
    10. '0' → logprob: -6.642963886260986

Token 273: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -13.750003814697266
    3. 'o' → logprob: -13.750003814697266
    4. 'iz' → logprob: -14.375003814697266
    5. 'IZATION' → logprob: -15.125003814697266
    6. 'izat' → logprob: -15.750003814697266
    7. 'z' → logprob: -15.875003814697266
    8. 'iza' → logprob: -16.500003814697266
    9. 'a' → logprob: -17.250003814697266
    10. ' ' → logprob: -17.375003814697266

Token 274: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01626943238079548
    2. '[x' → logprob: -4.141269207000732
    3. ')' → logprob: -9.51626968383789
    4. '[input' → logprob: -9.76626968383789
    5. 'xor' → logprob: -10.01626968383789
    6. '[val' → logprob: -11.39126968383789
    7. ']' → logprob: -12.14126968383789
    8. ' xor' → logprob: -12.26626968383789
    9. '   ' → logprob: -12.51626968383789
    10. ')[' → logprob: -12.64126968383789

Token 275: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.01347394660115242
    2. 'xor' → logprob: -4.388473987579346
    3. 'idx' → logprob: -7.638473987579346
    4. 'zero' → logprob: -7.763473987579346
    5. ' acc' → logprob: -10.763473510742188
    6. 'ac' → logprob: -11.638473510742188
    7. '[' → logprob: -12.013473510742188
    8. 'input' → logprob: -12.013473510742188
    9. '0' → logprob: -12.263473510742188
    10. ' xor' → logprob: -13.263473510742188

Token 276: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.3205498456954956
    2. 'xor' → logprob: -1.5705498456954956
    3. '[' → logprob: -3.820549964904785
    4. 'or' → logprob: -4.070549964904785
    5. 'ization' → logprob: -4.570549964904785
    6. 'ox' → logprob: -4.695549964904785
    7. 'oration' → logprob: -6.070549964904785
    8. 'x' → logprob: -6.820549964904785
    9. 'zor' → logprob: -7.320549964904785
    10. 'oz' → logprob: -7.570549964904785

Token 277: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.282179057598114
    2. 'xor' → logprob: -1.7821791172027588
    3. '[' → logprob: -2.782179117202759
    4. 'acc' → logprob: -5.03217887878418
    5. 'x' → logprob: -5.28217887878418
    6. 'ox' → logprob: -6.78217887878418
    7. 'ор' → logprob: -7.65717887878418
    8. '   ' → logprob: -8.28217887878418
    9. 'ors' → logprob: -8.53217887878418
    10. 'ax' → logprob: -8.53217887878418

Token 278: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.009282346814870834
    2. ')' → logprob: -4.759282112121582
    3. '])
' → logprob: -8.134282112121582
    4. ']' → logprob: -9.009282112121582
    5. ')])' → logprob: -9.634282112121582
    6. '[' → logprob: -9.759282112121582
    7. ' ])' → logprob: -10.134282112121582
    8. ')]' → logprob: -10.634282112121582
    9. ']);' → logprob: -10.759282112121582
    10. ')
' → logprob: -11.134282112121582

Token 279: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0625367164611816
    2. ' 
' → logprob: -1.0625367164611816
    3. '<|end|>' → logprob: -2.1875367164611816
    4. '           ' → logprob: -2.6875367164611816
    5. ' )' → logprob: -2.9375367164611816
    6. ')' → logprob: -3.0625367164611816
    7. ' )
' → logprob: -5.437536716461182
    8. '            ' → logprob: -5.562536716461182
    9. '\n' → logprob: -6.312536716461182
    10. '               ' → logprob: -6.437536716461182

Token 280: ' xor' (ID: 106402)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.4507586359977722
    2. '           ' → logprob: -1.575758695602417
    3. ' memo' → logprob: -2.325758695602417
    4. 'xor' (adapté à ' xor') → logprob: -2.950758695602417
    5. ' xor' → logprob: -5.325758457183838
    6. 'mem' → logprob: -8.200758934020996
    7. '   ' → logprob: -8.200758934020996
    8. '               ' → logprob: -8.575758934020996
    9. '       ' → logprob: -8.950758934020996
    10. 'm' → logprob: -9.575758934020996

Token 281: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -6.034592388459714e-06
    2. 'dp' → logprob: -12.250005722045898
    3. '	dp' → logprob: -15.375005722045898
    4. '[' → logprob: -15.375005722045898
    5. '_' → logprob: -15.500005722045898
    6. '_dt' → logprob: -16.1250057220459
    7. '_DP' → logprob: -16.3750057220459
    8. 'DP' → logprob: -16.5000057220459
    9. '_dc' → logprob: -17.2500057220459
    10. '[_' → logprob: -17.3750057220459

Token 282: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '[val' → logprob: -15.000000953674316
    3. 'acc' → logprob: -15.625000953674316
    4. '[
' → logprob: -15.750000953674316
    5. '_acc' → logprob: -15.750000953674316
    6. '<|end|>' → logprob: -16.250001907348633
    7. ')[' → logprob: -17.000001907348633
    8. '][' → logprob: -17.000001907348633
    9. '(acc' → logprob: -17.250001907348633
    10. '```' → logprob: -17.250001907348633

Token 283: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.0005629229708574712
    2. '[' → logprob: -7.625563144683838
    3. ' acc' → logprob: -10.12556266784668
    4. 'ac' → logprob: -10.50056266784668
    5. '0' → logprob: -13.00056266784668
    6. 'xor' → logprob: -13.12556266784668
    7. '(acc' → logprob: -13.87556266784668
    8. '	acc' → logprob: -14.87556266784668
    9. '
' → logprob: -15.00056266784668
    10. ' ' → logprob: -15.00056266784668

Token 284: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.14847208559513092
    2. 'xor' → logprob: -2.5234720706939697
    3. 'or' → logprob: -3.0234720706939697
    4. 'ox' → logprob: -5.148472309112549
    5. 'ax' → logprob: -7.023472309112549
    6. '[' → logprob: -7.148472309112549
    7. 'x' → logprob: -7.398472309112549
    8. 'val' → logprob: -7.648472309112549
    9. '[val' → logprob: -8.64847183227539
    10. 'acc' → logprob: -9.64847183227539

Token 285: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.005924054887145758
    2. '[' → logprob: -5.505924224853516
    3. 'xor' → logprob: -6.755924224853516
    4. 'ox' → logprob: -7.755924224853516
    5. '][' → logprob: -9.005924224853516
    6. '0' → logprob: -10.380924224853516
    7. '```' → logprob: -11.880924224853516
    8. 'OR' → logprob: -12.255924224853516
    9. 'os' → logprob: -12.255924224853516
    10. 'ор' → logprob: -12.255924224853516

Token 286: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006756199873052537
    2. '[' → logprob: -7.375675678253174
    3. ']' → logprob: -10.250675201416016
    4. ' ][' → logprob: -11.500675201416016
    5. ')[' → logprob: -13.250675201416016
    6. ']][' → logprob: -14.500675201416016
    7. '"][' → logprob: -15.750675201416016
    8. ''][' → logprob: -15.875675201416016
    9. '   ' → logprob: -16.125675201416016
    10. '}[' → logprob: -16.250675201416016

Token 287: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.73446003627032e-05
    2. '1' → logprob: -9.250097274780273
    3. '
' → logprob: -15.000097274780273
    4. ' ' → logprob: -15.000097274780273
    5. '[' → logprob: -15.750097274780273
    6. '   ' → logprob: -15.812597274780273
    7. '۰' → logprob: -16.375097274780273
    8. '```' → logprob: -17.125097274780273
    9. ']' → logprob: -17.375097274780273
    10. '
' → logprob: -18.250097274780273

Token 288: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001358328852802515
    2. ']+=' → logprob: -6.626358509063721
    3. ' ]' → logprob: -11.001358032226562
    4. ']=' → logprob: -11.751358032226562
    5. ']%' → logprob: -12.876358032226562
    6. '[' → logprob: -13.126358032226562
    7. ')' → logprob: -13.501358032226562
    8. '%' → logprob: -13.751358032226562
    9. ']-' → logprob: -15.251358032226562
    10. ']+' → logprob: -16.126358032226562

Token 289: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.020821787416934967
    2. ' %=' → logprob: -4.145821571350098
    3. '%' → logprob: -5.770821571350098
    4. '=' → logprob: -6.770821571350098
    5. '+=' → logprob: -7.645821571350098
    6. ' +=' → logprob: -11.895821571350098
    7. '-=' → logprob: -12.395821571350098
    8. ' %' → logprob: -12.520821571350098
    9. ' =' → logprob: -12.645821571350098
    10. ')' → logprob: -12.645821571350098

Token 290: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.935296834039036e-06
    2. ' MOD' → logprob: -12.75000286102295
    3. 'MO' → logprob: -21.000003814697266
    4. 'MODULE' → logprob: -21.625003814697266
    5. '   ' → logprob: -22.500003814697266
    6. 'MODE' → logprob: -23.625003814697266
    7. '.MOD' → logprob: -23.625003814697266
    8. '_MOD' → logprob: -24.000003814697266
    9. ' ' → logprob: -24.500003814697266
    10. 'MD' → logprob: -24.875003814697266

Token 291: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.001510335598140955
    2. 'O' → logprob: -6.501510143280029
    3. 'ULE' → logprob: -12.376510620117188
    4. 'UL' → logprob: -14.126510620117188
    5. 'LO' → logprob: -14.251510620117188
    6. '0' → logprob: -15.126510620117188
    7. 'U' → logprob: -15.251510620117188
    8. 'US' → logprob: -15.376510620117188
    9. '   ' → logprob: -15.501510620117188
    10. ' O' → logprob: -15.501510620117188

Token 292: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00028040475444868207
    2. '       ' → logprob: -8.375280380249023
    3. '   ' → logprob: -10.625280380249023
    4. '          ' → logprob: -11.750280380249023
    5. '<|end|>' → logprob: -12.250280380249023
    6. '
' → logprob: -12.750280380249023
    7. ',' → logprob: -12.750280380249023
    8. '               ' → logprob: -12.875280380249023
    9. '		' → logprob: -14.625280380249023
    10. '[' → logprob: -14.875280380249023

Token 293: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.458980300929397e-05
    2. '       ' → logprob: -9.62508487701416
    3. '   ' → logprob: -11.50008487701416
    4. '          ' → logprob: -12.50008487701416
    5. '               ' → logprob: -13.25008487701416
    6. '		' → logprob: -13.75008487701416
    7. '            ' → logprob: -15.25008487701416
    8. '    ' → logprob: -15.75008487701416
    9. '         ' → logprob: -15.75008487701416
    10. '<|end|>' → logprob: -15.75008487701416

Token 294: ' xor' (ID: 106402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38903579115867615
    2. 'memo' → logprob: -1.1390358209609985
    3. '   ' → logprob: -6.639035701751709
    4. 'xor' (adapté à ' xor') → logprob: -7.764035701751709
    5. '       ' → logprob: -8.389036178588867
    6. ' memo' → logprob: -8.889036178588867
    7. 'mem' → logprob: -10.264036178588867
    8. 'm' → logprob: -11.514036178588867
    9. '               ' → logprob: -12.264036178588867
    10. '          ' → logprob: -12.639036178588867

Token 295: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.1472419600977446e-06
    2. 'dp' → logprob: -14.000000953674316
    3. '_py' → logprob: -16.875001907348633
    4. '_dt' → logprob: -17.250001907348633
    5. '_dc' → logprob: -17.625001907348633
    6. '_' → logprob: -17.875001907348633
    7. '	dp' → logprob: -18.125001907348633
    8. 'DP' → logprob: -18.375001907348633
    9. '_dx' → logprob: -18.375001907348633
    10. '_ds' → logprob: -19.125001907348633

Token 296: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. '<|end|>' → logprob: -14.625000953674316
    3. '[val' → logprob: -16.000001907348633
    4. 'acc' → logprob: -16.000001907348633
    5. '[
' → logprob: -16.250001907348633
    6. '```' → logprob: -16.875001907348633
    7. '_acc' → logprob: -17.000001907348633
    8. '
' → logprob: -17.750001907348633
    9. '][' → logprob: -17.875001907348633
    10. '=' → logprob: -18.125001907348633

Token 297: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -3.531315314830863e-06
    2. ' acc' → logprob: -13.625003814697266
    3. 'ac' → logprob: -13.875003814697266
    4. '0' → logprob: -14.750003814697266
    5. '(acc' → logprob: -15.000003814697266
    6. 'xor' → logprob: -15.125003814697266
    7. '   ' → logprob: -16.000003814697266
    8. '[' → logprob: -16.375003814697266
    9. '
' → logprob: -17.125003814697266
    10. 'input' → logprob: -17.500003814697266

Token 298: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.002545101335272193
    2. 'xor' → logprob: -6.12754487991333
    3. 'or' → logprob: -9.377545356750488
    4. 'val' → logprob: -9.502545356750488
    5. 'ox' → logprob: -9.877545356750488
    6. '[' → logprob: -9.877545356750488
    7. 'acc' → logprob: -10.377545356750488
    8. 'ax' → logprob: -10.627545356750488
    9. 'x' → logprob: -11.627545356750488
    10. '[val' → logprob: -12.752545356750488

Token 299: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.012915138155221939
    2. '[' → logprob: -4.887915134429932
    3. 'xor' → logprob: -5.762915134429932
    4. '_x' → logprob: -6.762915134429932
    5. 'ox' → logprob: -7.262915134429932
    6. 'x' → logprob: -9.51291561126709
    7. 'ax' → logprob: -9.88791561126709
    8. 'os' → logprob: -10.88791561126709
    9. 'ar' → logprob: -11.01291561126709
    10. 'ors' → logprob: -11.13791561126709

Token 300: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004091342911124229
    2. '[' → logprob: -5.504091262817383
    3. ']' → logprob: -12.004091262817383
    4. ' ][' → logprob: -13.004091262817383
    5. ')[' → logprob: -13.629091262817383
    6. ''][' → logprob: -14.004091262817383
    7. '"][' → logprob: -14.504091262817383
    8. ']][' → logprob: -15.004091262817383
    9. '}[' → logprob: -15.379091262817383
    10. '>[' → logprob: -15.879091262817383

Token 301: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0030707605183124542
    2. '[' → logprob: -5.878070831298828
    3. 'zero' → logprob: -9.253070831298828
    4. '1' → logprob: -9.378070831298828
    5. ' ' → logprob: -10.253070831298828
    6. '][' → logprob: -11.253070831298828
    7. '           ' → logprob: -11.628070831298828
    8. '
' → logprob: -12.503070831298828
    9. ' zero' → logprob: -12.753070831298828
    10. '   ' → logprob: -12.753070831298828

Token 302: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5762645602226257
    2. ']+=' → logprob: -0.9512645602226257
    3. '+=' → logprob: -3.5762646198272705
    4. ',' → logprob: -4.201264381408691
    5. '],' → logprob: -5.576264381408691
    6. ' +=' → logprob: -5.576264381408691
    7. ']=' → logprob: -7.701264381408691
    8. '=' → logprob: -8.076264381408691
    9. ' ]' → logprob: -8.826264381408691
    10. ' ,' → logprob: -9.076264381408691

Token 303: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04476584866642952
    2. '=' → logprob: -3.5447659492492676
    3. ' +=' → logprob: -4.919765949249268
    4. ',' → logprob: -5.044765949249268
    5. '*=' → logprob: -7.169765949249268
    6. ' =' → logprob: -8.29476547241211
    7. ']+=' → logprob: -9.41976547241211
    8. ' ,' → logprob: -10.54476547241211
    9. ' *=' → logprob: -11.91976547241211
    10. '+' → logprob: -12.54476547241211

Token 304: ' xor' (ID: 106402)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.5811360478401184
    2. ' zero' → logprob: -1.7061359882354736
    3. '1' → logprob: -1.8311359882354736
    4. 'xor' → logprob: -2.8311359882354736
    5. ' xor' → logprob: -3.7061359882354736
    6. ' ' → logprob: -4.831136226654053
    7. ' memo' → logprob: -5.831136226654053
    8. 'memo' → logprob: -6.081136226654053
    9. ' (' → logprob: -7.706136226654053
    10. '(' → logprob: -7.831136226654053

Token 305: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -7.219262624857947e-05
    2. 'dp' → logprob: -10.000072479248047
    3. 'DP' → logprob: -11.500072479248047
    4. '[' → logprob: -11.625072479248047
    5. 'Dp' → logprob: -12.750072479248047
    6. 'x' → logprob: -13.375072479248047
    7. '	dp' → logprob: -14.375072479248047
    8. '_dt' → logprob: -14.625072479248047
    9. '_DP' → logprob: -15.625072479248047
    10. '```' → logprob: -15.625072479248047

Token 306: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. 'acc' → logprob: -14.875000953674316
    3. '[val' → logprob: -16.875
    4. ' ' → logprob: -17.25
    5. '[input' → logprob: -17.25
    6. '_acc' → logprob: -17.375
    7. '[x' → logprob: -17.625
    8. ' [' → logprob: -17.875
    9. '[
' → logprob: -18.25
    10. '```' → logprob: -18.75

Token 307: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.00010545044642640278
    2. 'ac' → logprob: -9.625105857849121
    3. ' acc' → logprob: -10.375105857849121
    4. '0' → logprob: -12.375105857849121
    5. 'ax' → logprob: -13.875105857849121
    6. '[' → logprob: -14.000105857849121
    7. '(acc' → logprob: -14.500105857849121
    8. 'zero' → logprob: -15.000105857849121
    9. ' ' → logprob: -15.000105857849121
    10. '   ' → logprob: -15.125105857849121

Token 308: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.05226901173591614
    2. 'val' → logprob: -4.052268981933594
    3. 'xor' → logprob: -4.052268981933594
    4. 'acc' → logprob: -5.052268981933594
    5. '[' → logprob: -5.427268981933594
    6. 'ax' → logprob: -6.302268981933594
    7. 'ox' → logprob: -6.427268981933594
    8. 'x' → logprob: -7.177268981933594
    9. 'or' → logprob: -8.427268981933594
    10. '0' → logprob: -8.427268981933594

Token 309: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.005515723023563623
    2. 'xor' → logprob: -5.6305155754089355
    3. '[' → logprob: -6.8805155754089355
    4. 'ор' → logprob: -8.130516052246094
    5. '_x' → logprob: -8.255516052246094
    6. 'ox' → logprob: -9.380516052246094
    7. 'ur' → logprob: -10.005516052246094
    8. 'x' → logprob: -10.130516052246094
    9. 'os' → logprob: -11.130516052246094
    10. 'acc' → logprob: -11.193016052246094

Token 310: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013305948814377189
    2. '[' → logprob: -6.626330375671387
    3. ']' → logprob: -13.001330375671387
    4. ' ][' → logprob: -13.876330375671387
    5. '0' → logprob: -15.001330375671387
    6. ')[' → logprob: -15.626330375671387
    7. '"][' → logprob: -15.751330375671387
    8. '   ' → logprob: -15.876330375671387
    9. '-' → logprob: -16.001331329345703
    10. '1' → logprob: -16.376331329345703

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017675277777016163
    2. '0' → logprob: -6.501767635345459
    3. '[' → logprob: -8.8767671585083
    4. ' ' → logprob: -9.7517671585083
    5. '][' → logprob: -10.1267671585083
    6. '   ' → logprob: -11.7517671585083
    7. '
' → logprob: -12.5017671585083
    8. ']' → logprob: -12.5642671585083
    9. ' [' → logprob: -13.2517671585083
    10. ' zero' → logprob: -13.8767671585083

Token 312: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09093547612428665
    2. '
' → logprob: -2.590935468673706
    3. ')' → logprob: -5.090935707092285
    4. '%' → logprob: -5.965935707092285
    5. ']' → logprob: -6.840935707092285
    6. ')
' → logprob: -7.715935707092285
    7. '   ' → logprob: -8.340935707092285
    8. ']
' → logprob: -8.340935707092285
    9. '       ' → logprob: -8.590935707092285
    10. '<|end|>' → logprob: -8.715935707092285

Token 313: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.386147626675665e-05
    2. '   ' → logprob: -11.250073432922363
    3. '       ' → logprob: -11.250073432922363
    4. '```' → logprob: -11.500073432922363
    5. '            
' → logprob: -11.875073432922363
    6. '0' → logprob: -11.875073432922363
    7. '
' → logprob: -12.125073432922363
    8. '               ' → logprob: -12.250073432922363
    9. '		' → logprob: -12.750073432922363
    10. '[' → logprob: -13.250073432922363

Token 314: ' xor' (ID: 106402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0715283751487732
    2. 'xor' (adapté à ' xor') → logprob: -3.196528434753418
    3. 'memo' → logprob: -4.071528434753418
    4. ' xor' → logprob: -5.196528434753418
    5. ' memo' → logprob: -5.321528434753418
    6. '       ' → logprob: -8.321528434753418
    7. '   ' → logprob: -8.821528434753418
    8. '```' → logprob: -9.321528434753418
    9. '          ' → logprob: -10.196528434753418
    10. 'mem' → logprob: -10.696528434753418

Token 315: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -12.87500286102295
    3. '[_' → logprob: -15.75000286102295
    4. '_DP' → logprob: -16.750003814697266
    5. 'dp' → logprob: -17.125003814697266
    6. '_' → logprob: -17.125003814697266
    7. 'DP' → logprob: -17.125003814697266
    8. '	dp' → logprob: -17.625003814697266
    9. '```' → logprob: -17.750003814697266
    10. '_dt' → logprob: -18.250003814697266

Token 316: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. 'acc' → logprob: -17.25
    3. '```' → logprob: -17.375
    4. '[val' → logprob: -17.75
    5. '[
' → logprob: -18.125
    6. '[...]' → logprob: -18.625
    7. '_acc' → logprob: -18.625
    8. ' ' → logprob: -18.75
    9. ')[' → logprob: -18.875
    10. '][' → logprob: -18.875

Token 317: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.8193366486229934e-05
    2. ' acc' → logprob: -11.375018119812012
    3. 'ac' → logprob: -12.375018119812012
    4. '[' → logprob: -13.375018119812012
    5. '0' → logprob: -14.875018119812012
    6. '(acc' → logprob: -15.000018119812012
    7. '   ' → logprob: -17.125019073486328
    8. '_acc' → logprob: -17.375019073486328
    9. 'ax' → logprob: -18.000019073486328
    10. ' ' → logprob: -18.000019073486328

Token 318: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.8177241683006287
    2. 'xor' → logprob: -0.9427241683006287
    3. 'or' → logprob: -2.3177242279052734
    4. 'ox' → logprob: -3.4427242279052734
    5. 'x' → logprob: -3.5677242279052734
    6. '[' → logprob: -4.942724227905273
    7. 'ax' → logprob: -6.442724227905273
    8. 'acc' → logprob: -7.317724227905273
    9. 'val' → logprob: -7.567724227905273
    10. 'ors' → logprob: -9.442724227905273

Token 319: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.00354993948712945
    2. '[' → logprob: -6.128550052642822
    3. 'xor' → logprob: -6.878550052642822
    4. 'ox' → logprob: -8.378549575805664
    5. 'ar' → logprob: -9.878549575805664
    6. 'ax' → logprob: -11.628549575805664
    7. 'x' → logprob: -11.878549575805664
    8. 'ors' → logprob: -12.128549575805664
    9. 'ur' → logprob: -12.128549575805664
    10. 'r' → logprob: -12.128549575805664

Token 320: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004673623014241457
    2. '[' → logprob: -5.379673480987549
    3. ']' → logprob: -10.254673957824707
    4. ' ][' → logprob: -11.629673957824707
    5. ')[' → logprob: -12.379673957824707
    6. ']][' → logprob: -13.254673957824707
    7. '>[' → logprob: -14.629673957824707
    8. '"][' → logprob: -14.629673957824707
    9. '[][' → logprob: -14.879673957824707
    10. ''][' → logprob: -15.004673957824707

Token 321: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.236846923828125
    2. '[' → logprob: -1.611846923828125
    3. '1' → logprob: -4.486846923828125
    4. '][' → logprob: -9.486846923828125
    5. ' ' → logprob: -10.861846923828125
    6. ']' → logprob: -11.861846923828125
    7. ' [' → logprob: -12.236846923828125
    8. '   ' → logprob: -13.361846923828125
    9. '=' → logprob: -14.111846923828125
    10. '[
' → logprob: -14.924346923828125

Token 322: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.74201500415802
    2. ' %=' → logprob: -0.99201500415802
    3. '%=' → logprob: -1.99201500415802
    4. ')' → logprob: -4.3670148849487305
    5. '%' → logprob: -5.6170148849487305
    6. ')%' → logprob: -9.49201488494873
    7. ']%' → logprob: -9.99201488494873
    8. ' ' → logprob: -10.24201488494873
    9. ' %' → logprob: -10.61701488494873
    10. ' ]' → logprob: -10.86701488494873

Token 323: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.012073373422026634
    2. ' %=' → logprob: -4.512073516845703
    3. '%' → logprob: -6.887073516845703
    4. '=' → logprob: -13.262073516845703
    5. '+=' → logprob: -14.012073516845703
    6. ' %' → logprob: -14.137073516845703
    7. ')' → logprob: -14.762073516845703
    8. ')%' → logprob: -15.637073516845703
    9. ' ' → logprob: -16.262073516845703
    10. ' ' → logprob: -16.887073516845703

Token 324: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.1472419600977446e-06
    2. ' MOD' → logprob: -13.750000953674316
    3. '   ' → logprob: -21.000001907348633
    4. 'MO' → logprob: -23.250001907348633
    5. ' ' → logprob: -23.625001907348633
    6. '_MOD' → logprob: -23.875001907348633
    7. 'MD' → logprob: -24.250001907348633
    8. 'M' → logprob: -24.375001907348633
    9. 'MODE' → logprob: -24.375001907348633
    10. '           ' → logprob: -24.500001907348633

Token 325: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -2.5822400857578032e-05
    2. 'O' → logprob: -10.875025749206543
    3. 'ULE' → logprob: -12.125025749206543
    4. 'U' → logprob: -13.875025749206543
    5. 'UL' → logprob: -16.00002670288086
    6. 'ulo' → logprob: -16.00002670288086
    7. '   ' → logprob: -16.87502670288086
    8. '0' → logprob: -17.75002670288086
    9. 'UTO' → logprob: -17.87502670288086
    10. '\' → logprob: -18.37502670288086

Token 326: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.9981420336989686e-05
    2. '   ' → logprob: -11.625020027160645
    3. '       ' → logprob: -11.625020027160645
    4. '          ' → logprob: -14.750020027160645
    5. '               ' → logprob: -14.875020027160645
    6. '<|end|>' → logprob: -15.000020027160645
    7. '		' → logprob: -15.375020027160645
    8. '
' → logprob: -15.625020027160645
    9. '```' → logprob: -15.750020027160645
    10. ',' → logprob: -16.250019073486328

Token 327: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.690834273584187e-05
    2. '```' → logprob: -11.62503719329834
    3. '   ' → logprob: -11.87503719329834
    4. '       ' → logprob: -12.12503719329834
    5. '<|end|>' → logprob: -12.50003719329834
    6. '          ' → logprob: -12.87503719329834
    7. '		' → logprob: -12.87503719329834
    8. '               ' → logprob: -13.25003719329834
    9. '
' → logprob: -13.62503719329834
    10. '0' → logprob: -14.50003719329834

Token 328: ' memo' (ID: 46393)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00035786881926469505
    2. 'memo' (adapté à ' memo') → logprob: -8.250357627868652
    3. ' memo' → logprob: -9.375357627868652
    4. '   ' → logprob: -11.750357627868652
    5. '       ' → logprob: -14.000357627868652
    6. 'm' → logprob: -14.000357627868652
    7. '          ' → logprob: -14.250357627868652
    8. '               ' → logprob: -15.125357627868652
    9. '
' → logprob: -15.125357627868652
    10. '		' → logprob: -15.375357627868652

Token 329: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -6.153795766294934e-06
    2. '[' → logprob: -12.250005722045898
    3. 'IZATION' → logprob: -14.000005722045898
    4. '[m' → logprob: -16.2500057220459
    5. 'm' → logprob: -16.3750057220459
    6. 'z' → logprob: -16.7500057220459
    7. 'iz' → logprob: -17.0000057220459
    8. 'imation' → logprob: -17.1250057220459
    9. '```' → logprob: -17.1250057220459
    10. 'iation' → logprob: -18.3750057220459

Token 330: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[val' → logprob: -15.875
    3. '[
' → logprob: -16.375
    4. '```' → logprob: -17.375
    5. '[...]' → logprob: -17.75
    6. '[input' → logprob: -17.75
    7. ' [' → logprob: -18.125
    8. '[arr' → logprob: -18.125
    9. '[idx' → logprob: -18.625
    10. '   ' → logprob: -18.75

Token 331: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.16024981439113617
    2. '[' → logprob: -1.9102498292922974
    3. ' acc' → logprob: -11.285249710083008
    4. 'ac' → logprob: -11.410249710083008
    5. '(acc' → logprob: -14.160249710083008
    6. '[
' → logprob: -14.785249710083008
    7. 'xor' → logprob: -15.035249710083008
    8. '0' → logprob: -15.285249710083008
    9. '	acc' → logprob: -16.160249710083008
    10. '   ' → logprob: -16.535249710083008

Token 332: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0029809102416038513
    2. 'xor' → logprob: -6.002980709075928
    3. 'or' → logprob: -8.627981185913086
    4. '[' → logprob: -8.877981185913086
    5. 'ax' → logprob: -9.252981185913086
    6. 'ox' → logprob: -10.627981185913086
    7. '=' → logprob: -11.627981185913086
    8. '   ' → logprob: -12.127981185913086
    9. 'acc' → logprob: -12.502981185913086
    10. 'o' → logprob: -12.627981185913086

Token 333: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.005487383343279362
    2. '[' → logprob: -5.380487442016602
    3. 'xor' → logprob: -7.755487442016602
    4. 'ор' → logprob: -8.255487442016602
    5. 'ox' → logprob: -9.255487442016602
    6. 'ors' → logprob: -10.130487442016602
    7. 'ax' → logprob: -12.505487442016602
    8. '_x' → logprob: -12.505487442016602
    9. '```' → logprob: -12.505487442016602
    10. '{' → logprob: -12.755487442016602

Token 334: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2569860517978668
    2. ']' → logprob: -1.5069860219955444
    3. '=' → logprob: -6.131986141204834
    4. ']=' → logprob: -6.631986141204834
    5. ' =' → logprob: -6.756986141204834
    6. ' ]' → logprob: -8.381985664367676
    7. '[idx' → logprob: -9.381985664367676
    8. '][' → logprob: -11.131985664367676
    9. '
' → logprob: -11.381985664367676
    10. ')' → logprob: -11.381985664367676

Token 335: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0021343177650123835
    2. ' =' → logprob: -6.252134323120117
    3. '[' → logprob: -8.502134323120117
    4. '[idx' → logprob: -13.502134323120117
    5. '+=' → logprob: -14.127134323120117
    6. '=
' → logprob: -16.127134323120117
    7. '.=' → logprob: -16.502134323120117
    8. '＝' → logprob: -16.877134323120117
    9. '   ' → logprob: -17.252134323120117
    10. ']=' → logprob: -17.377134323120117

Token 336: ' zero' (ID: 12421)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.12697188556194305
    2. ' zero' → logprob: -2.126971960067749
    3. '   ' → logprob: -10.126972198486328
    4. '           ' → logprob: -13.126972198486328
    5. 'zer' → logprob: -14.876972198486328
    6. '            ' → logprob: -15.626972198486328
    7. '0' → logprob: -15.626972198486328
    8. '    ' → logprob: -15.751972198486328
    9. '.zero' → logprob: -15.751972198486328
    10. 'z' → logprob: -15.876972198486328

Token 337: '_sequences' (ID: 153014)
  Prédit: '_sequences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequences' → logprob: -4.513339445111342e-05
    2. 'se' → logprob: -10.125044822692871
    3. 'Sequences' → logprob: -12.250044822692871
    4. ' sequences' → logprob: -16.375045776367188
    5. 's' → logprob: -17.375045776367188
    6. 'zero' → logprob: -17.625045776367188
    7. '_' → logprob: -17.750045776367188
    8. '_sequence' → logprob: -18.125045776367188
    9. '\' → logprob: -18.250045776367188
    10. '[' → logprob: -18.375045776367188

Token 338: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1462496966123581
    2. '<|end|>' → logprob: -2.146249771118164
    3. ')' → logprob: -4.396249771118164
    4. '
' → logprob: -5.396249771118164
    5. '```' → logprob: -7.146249771118164
    6. 'print' → logprob: -7.771249771118164
    7. '    
' → logprob: -8.646249771118164
    8. 'return' → logprob: -9.396249771118164
    9. '[' → logprob: -9.396249771118164
    10. '#' → logprob: -9.396249771118164

Token 340: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20708246529102325
    2. 'result' → logprob: -1.9570825099945068
    3. 'total' → logprob: -3.457082509994507
    4. 'print' → logprob: -4.707082271575928
    5. 'return' → logprob: -6.082082271575928
    6. 'answer' → logprob: -6.457082271575928
    7. ' result' → logprob: -7.082082271575928
    8. ' total' → logprob: -7.957082271575928
    9. 'output' → logprob: -9.332082748413086
    10. ' print' → logprob: -10.707082748413086

Token 341: ' acc' (ID: 1259)
  Prédit: ' zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.03433060646057129
    2. 'zero' → logprob: -4.284330368041992
    3. ' xor' → logprob: -4.534330368041992
    4. ' num' → logprob: -5.284330368041992
    5. 'xor' → logprob: -6.909330368041992
    6. 'num' → logprob: -7.034330368041992
    7. ' len' → logprob: -7.284330368041992
    8. ' ' → logprob: -7.284330368041992
    9. ' True' → logprob: -8.534330368041992
    10. ' acc' → logprob: -8.784330368041992

Token 342: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -6.706686690449715e-05
    2. '_' → logprob: -9.625066757202148
    3. 'xor' → logprob: -14.500066757202148
    4. '_
' → logprob: -15.750066757202148
    5. '_=' → logprob: -16.37506675720215
    6. '__' → logprob: -16.62506675720215
    7. '==' → logprob: -16.75006675720215
    8. '=' → logprob: -17.37506675720215
    9. ' _' → logprob: -17.37506675720215
    10. '_acc' → logprob: -18.12506675720215

Token 343: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0002913678181357682
    2. '_or' → logprob: -8.75029182434082
    3. 'xor' → logprob: -9.75029182434082
    4. '_' → logprob: -9.87529182434082
    5. '   ' → logprob: -12.50029182434082
    6. '_x' → logprob: -12.50029182434082
    7. '=' → logprob: -12.75029182434082
    8. '==' → logprob: -12.87529182434082
    9. 'ar' → logprob: -13.37529182434082
    10. 'ор' → logprob: -13.37529182434082

Token 344: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6277931332588196
    2. ' ==' → logprob: -0.8777931332588196
    3. ' !=' → logprob: -3.377793073654175
    4. '!=' → logprob: -4.127793312072754
    5. ':' → logprob: -9.127793312072754
    6. '[' → logprob: -9.877793312072754
    7. '>' → logprob: -10.002793312072754
    8. ' ' → logprob: -10.127793312072754
    9. '0' → logprob: -11.252793312072754
    10. ' >' → logprob: -11.502793312072754

Token 345: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38715851306915283
    2. ' ' → logprob: -1.1371585130691528
    3. '=' → logprob: -8.387158393859863
    4. '  ' → logprob: -11.012158393859863
    5. '1' → logprob: -11.137158393859863
    6. '   ' → logprob: -11.637158393859863
    7. ' zero' → logprob: -11.762158393859863
    8. 'zero' → logprob: -12.637158393859863
    9. '>' → logprob: -13.262158393859863
    10. '==' → logprob: -13.699658393859863

Token 346: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019680082332342863
    2. ' ' → logprob: -6.251967906951904
    3. '=' → logprob: -10.251968383789062
    4. '1' → logprob: -13.251968383789062
    5. '   ' → logprob: -14.001968383789062
    6. '  ' → logprob: -15.001968383789062
    7. 'zero' → logprob: -15.001968383789062
    8. '==' → logprob: -15.126968383789062
    9. '100' → logprob: -16.876968383789062
    10. '>' → logprob: -16.876968383789062

Token 347: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22640739381313324
    2. ':
' → logprob: -1.6014074087142944
    3. '   ' → logprob: -7.726407527923584
    4. '       ' → logprob: -7.976407527923584
    5. ' and' → logprob: -8.726407051086426
    6. ' or' → logprob: -11.351407051086426
    7. ':return' → logprob: -11.726407051086426
    8. ' :' → logprob: -11.851407051086426
    9. ' :
' → logprob: -12.101407051086426
    10. ':
' → logprob: -12.601407051086426

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12409760802984238
    2. '   ' → logprob: -2.2490975856781006
    3. 'print' → logprob: -4.87409782409668
    4. ' print' → logprob: -6.37409782409668
    5. 'return' → logprob: -7.37409782409668
    6. ' return' → logprob: -7.62409782409668
    7. '
' → logprob: -7.74909782409668
    8. '```' → logprob: -8.87409782409668
    9. ' result' → logprob: -9.74909782409668
    10. 'result' → logprob: -9.74909782409668

Token 349: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.32234856486320496
    2. '   ' → logprob: -2.1973485946655273
    3. 'result' → logprob: -2.4473485946655273
    4. 'return' → logprob: -3.4473485946655273
    5. ' print' → logprob: -3.6973485946655273
    6. ' result' → logprob: -4.822348594665527
    7. 'xor' → logprob: -5.572348594665527
    8. 'answer' → logprob: -5.697348594665527
    9. 'total' → logprob: -6.322348594665527
    10. ' return' → logprob: -6.822348594665527

Token 350: '(x' (ID: 4061)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.2784665822982788
    2. '0' → logprob: -1.7784665822982788
    3. '(x' → logprob: -2.7784667015075684
    4. '(' → logprob: -5.028466701507568
    5. 'x' → logprob: -5.778466701507568
    6. 'sum' → logprob: -7.403466701507568
    7. ' xor' → logprob: -7.403466701507568
    8. '1' → logprob: -8.15346622467041
    9. '((' → logprob: -8.40346622467041
    10. '(sum' → logprob: -9.15346622467041

Token 351: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0004957250785082579
    2. '_or' → logprob: -7.875495910644531
    3. 'o' → logprob: -10.500495910644531
    4. '[' → logprob: -11.000495910644531
    5. '_x' → logprob: -11.000495910644531
    6. ' or' → logprob: -11.375495910644531
    7. '_' → logprob: -12.375495910644531
    8. '0' → logprob: -12.625495910644531
    9. 'xor' → logprob: -12.625495910644531
    10. 'ot' → logprob: -12.875495910644531

Token 352: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.00018244501552544534
    2. 'dp' → logprob: -8.625182151794434
    3. '_' → logprob: -14.125182151794434
    4. '	dp' → logprob: -14.250182151794434
    5. 'DP' → logprob: -14.625182151794434
    6. '_x' → logprob: -15.500182151794434
    7. 'xor' → logprob: -15.875182151794434
    8. '_dx' → logprob: -16.37518310546875
    9. ')' → logprob: -16.50018310546875
    10. '[' → logprob: -16.87518310546875

Token 353: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.747814349073451e-05
    2. '[-' → logprob: -11.500017166137695
    3. '   ' → logprob: -12.375017166137695
    4. ' [' → logprob: -14.125017166137695
    5. ' ' → logprob: -14.625017166137695
    6. ')[' → logprob: -15.125017166137695
    7. '  ' → logprob: -15.625017166137695
    8. '     ' → logprob: -15.750017166137695
    9. '       ' → logprob: -15.875017166137695
    10. '    ' → logprob: -15.875017166137695

Token 354: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.026348842307925224
    2. '0' → logprob: -3.651348829269409
    3. 'ac' → logprob: -10.276349067687988
    4. ' acc' → logprob: -11.901349067687988
    5. ' ' → logprob: -12.776349067687988
    6. '   ' → logprob: -13.776349067687988
    7. '(acc' → logprob: -14.151349067687988
    8. '	acc' → logprob: -15.151349067687988
    9. '1' → logprob: -15.276349067687988
    10. '  ' → logprob: -15.401349067687988

Token 355: '_x' (ID: 7054)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.5751787424087524
    2. 'or' → logprob: -0.9501787424087524
    3. '_x' → logprob: -3.200178623199463
    4. 'x' → logprob: -5.325178623199463
    5. 'ox' → logprob: -5.575178623199463
    6. 'ax' → logprob: -7.825178623199463
    7. 'of' → logprob: -8.700179100036621
    8. 'op' → logprob: -8.825179100036621
    9. 'val' → logprob: -8.950179100036621
    10. 'os' → logprob: -8.950179100036621

Token 356: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0019161454401910305
    2. 'xor' → logprob: -6.50191593170166
    3. 'of' → logprob: -9.00191593170166
    4. 'ar' → logprob: -9.50191593170166
    5. 'ox' → logprob: -10.12691593170166
    6. 'x' → logprob: -10.75191593170166
    7. 'op' → logprob: -11.12691593170166
    8. 'os' → logprob: -11.25191593170166
    9. 'acc' → logprob: -11.25191593170166
    10. '4' → logprob: -11.25191593170166

Token 357: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.016118476167321205
    2. '[' → logprob: -4.14111852645874
    3. ' ][' → logprob: -9.766118049621582
    4. ']' → logprob: -10.891118049621582
    5. ')[' → logprob: -12.641118049621582
    6. '"][' → logprob: -13.641118049621582
    7. '1' → logprob: -13.766118049621582
    8. '   ' → logprob: -13.891118049621582
    9. '0' → logprob: -14.641118049621582
    10. ''][' → logprob: -15.766118049621582

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001427538663847372
    2. '0' → logprob: -8.875143051147461
    3. ' ' → logprob: -12.875143051147461
    4. '   ' → logprob: -15.250143051147461
    5. '[' → logprob: -17.25014305114746
    6. '    ' → logprob: -18.31264305114746
    7. '  ' → logprob: -18.50014305114746
    8. '１' → logprob: -18.81264305114746
    9. '' → logprob: -19.18764305114746
    10. '१' → logprob: -19.25014305114746

Token 359: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001923352392623201
    2. ' )' → logprob: -9.000192642211914
    3. '%' → logprob: -10.375192642211914
    4. ')
' → logprob: -10.500192642211914
    5. ' %' → logprob: -12.625192642211914
    6. ')%' → logprob: -12.875192642211914
    7. '%)' → logprob: -13.500192642211914
    8. '   ' → logprob: -14.000192642211914
    9. '))' → logprob: -14.250192642211914
    10. '*' → logprob: -15.250192642211914

Token 360: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 361: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.02037288434803486
    2. '   ' → logprob: -4.0203728675842285
    3. 'elif' → logprob: -6.7703728675842285
    4. ' else' → logprob: -6.8953728675842285
    5. '<|end|>' → logprob: -10.020373344421387
    6. '	else' → logprob: -11.770373344421387
    7. '
' → logprob: -12.645373344421387
    8. ')' → logprob: -14.270373344421387
    9. '       ' → logprob: -14.395373344421387
    10. '```' → logprob: -14.520373344421387

Token 362: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5238777995109558
    2. ':
' → logprob: -0.8988777995109558
    3. '       ' → logprob: -7.3988776206970215
    4. '   ' → logprob: -9.39887809753418
    5. ' :
' → logprob: -10.02387809753418
    6. ' :' → logprob: -11.64887809753418
    7. ':

' → logprob: -13.77387809753418
    8. ':
' → logprob: -13.89887809753418
    9. '    ' → logprob: -14.14887809753418
    10. ',' → logprob: -14.39887809753418

Token 363: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.48975670337677
    2. '       ' → logprob: -0.98975670337677
    3. ' print' → logprob: -4.3647565841674805
    4. '   ' → logprob: -5.9897565841674805
    5. '
' → logprob: -8.11475658416748
    6. '	print' → logprob: -10.48975658416748
    7. '           ' → logprob: -13.23975658416748
    8. '    
' → logprob: -13.36475658416748
    9. '```' → logprob: -13.36475658416748
    10. '0' → logprob: -13.73975658416748

Token 364: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.877503907773644e-05
    2. ' print' → logprob: -9.375099182128906
    3. '       ' → logprob: -11.500099182128906
    4. '
' → logprob: -13.000099182128906
    5. '0' → logprob: -14.000099182128906
    6. '   ' → logprob: -15.125099182128906
    7. 'xor' → logprob: -15.625099182128906
    8. 'zero' → logprob: -16.125099182128906
    9. '```' → logprob: -16.875099182128906
    10. '           ' → logprob: -17.625099182128906

Token 365: '_answer' (ID: 65702)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043006282299757004
    2. '=' → logprob: -3.168006181716919
    3. ' ' → logprob: -12.79300594329834
    4. ':' → logprob: -14.29300594329834
    5. 's' → logprob: -14.29300594329834
    6. '   ' → logprob: -14.41800594329834
    7. '0' → logprob: -15.04300594329834
    8. '_' → logprob: -15.29300594329834
    9. ',' → logprob: -15.29300594329834
    10. '=int' → logprob: -15.41800594329834

Token 366: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02326364815235138
    2. '=' → logprob: -3.773263692855835
    3. ' ' → logprob: -11.773263931274414
    4. '   ' → logprob: -11.898263931274414
    5. ' +=' → logprob: -13.648263931274414
    6. ' =
' → logprob: -14.273263931274414
    7. '  ' → logprob: -14.773263931274414
    8. ' ' → logprob: -14.773263931274414
    9. ',' → logprob: -15.148263931274414
    10. '[' → logprob: -15.273263931274414

Token 367: ' pow' (ID: 9779)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.2725442945957184
    2. 'xor' → logprob: -2.2725443840026855
    3. 'pow' → logprob: -3.1475443840026855
    4. ' zero' → logprob: -3.6475443840026855
    5. '(z' → logprob: -4.2725443840026855
    6. '0' → logprob: -4.6475443840026855
    7. '(' → logprob: -4.7725443840026855
    8. ' xor' → logprob: -4.8975443840026855
    9. '1' → logprob: -5.0225443840026855
    10. '(x' → logprob: -5.0225443840026855

Token 368: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00383630208671093
    2. '(z' → logprob: -5.878836154937744
    3. '(num' → logprob: -7.378836154937744
    4. '2' → logprob: -8.378836631774902
    5. '(x' → logprob: -9.503836631774902
    6. '(len' → logprob: -10.628836631774902
    7. '(pow' → logprob: -10.628836631774902
    8. '(M' → logprob: -10.878836631774902
    9. '((' → logprob: -11.503836631774902
    10. '(
' → logprob: -12.253836631774902

Token 369: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04984239116311073
    2. '(' → logprob: -3.049842357635498
    3. '
' → logprob: -7.674842357635498
    4. 'num' → logprob: -8.299842834472656
    5. '(num' → logprob: -8.674842834472656
    6. '   ' → logprob: -9.049842834472656
    7. 'zero' → logprob: -9.549842834472656
    8. ' ' → logprob: -9.674842834472656
    9. '0' → logprob: -10.674842834472656
    10. '10' → logprob: -10.924842834472656

Token 370: ',' (ID: 11)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.6309229731559753
    2. 'zero' → logprob: -0.8809229731559753
    3. 'num' → logprob: -3.50592303276062
    4. ',' → logprob: -4.130922794342041
    5. '(num' → logprob: -5.255922794342041
    6. ' zero' → logprob: -7.130922794342041
    7. ',num' → logprob: -7.380922794342041
    8. '(' → logprob: -8.5059232711792
    9. ' (' → logprob: -8.8809232711792
    10. '0' → logprob: -9.3809232711792

Token 371: ' zero' (ID: 12421)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.038165539503097534
    2. 'num' → logprob: -3.28816556930542
    3. ' zero' → logprob: -9.038165092468262
    4. '   ' → logprob: -12.913165092468262
    5. ' num' → logprob: -13.288165092468262
    6. '
' → logprob: -15.288165092468262
    7. 'zer' → logprob: -15.788165092468262
    8. 'n' → logprob: -16.163166046142578
    9. 'number' → logprob: -16.163166046142578
    10. '0' → logprob: -16.288166046142578

Token 372: '_sequences' (ID: 153014)
  Prédit: '_sequences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequences' → logprob: -4.842555426876061e-06
    2. 'zero' → logprob: -12.750004768371582
    3. 'Sequences' → logprob: -13.500004768371582
    4. 'se' → logprob: -15.500004768371582
    5. '_elements' → logprob: -16.7500057220459
    6. '_segments' → logprob: -16.8750057220459
    7. '_sequence' → logprob: -17.2500057220459
    8. '_zero' → logprob: -17.3750057220459
    9. '```' → logprob: -17.8750057220459
    10. '\' → logprob: -18.1250057220459

Token 373: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0045274351723492146
    2. ' ,' → logprob: -5.879527568817139
    3. ')' → logprob: -6.379527568817139
    4. '   ' → logprob: -11.62952709197998
    5. '       ' → logprob: -12.25452709197998
    6. ' -' → logprob: -12.25452709197998
    7. ' )' → logprob: -13.12952709197998
    8. '-' → logprob: -13.62952709197998
    9. ',
' → logprob: -13.87952709197998
    10. ' ' → logprob: -14.37952709197998

Token 374: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005766240647062659
    2. ' ' → logprob: -7.500576496124268
    3. '2' → logprob: -11.750576972961426
    4. '
' → logprob: -12.125576972961426
    5. '   ' → logprob: -12.500576972961426
    6. '0' → logprob: -12.813076972961426
    7. '  ' → logprob: -14.625576972961426
    8. '3' → logprob: -14.813076972961426
    9. ' ' → logprob: -15.000576972961426
    10. 'xor' → logprob: -15.063076972961426

Token 375: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012047011114191264
    2. ' ' → logprob: -9.500120162963867
    3. '2' → logprob: -10.625120162963867
    4. '
' → logprob: -11.250120162963867
    5. '   ' → logprob: -13.812620162963867
    6. '(' → logprob: -14.000120162963867
    7. '0' → logprob: -14.562620162963867
    8. '3' → logprob: -14.562620162963867
    9. '```' → logprob: -15.125120162963867
    10. '
' → logprob: -15.187620162963867

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007837766781449318
    2. ')' → logprob: -5.007837772369385
    3. ' ,' → logprob: -6.882837772369385
    4. '   ' → logprob: -9.757837295532227
    5. '       ' → logprob: -10.507837295532227
    6. ' )' → logprob: -12.382837295532227
    7. ')%' → logprob: -13.132837295532227
    8. ',
' → logprob: -13.257837295532227
    9. ')
' → logprob: -13.882837295532227
    10. '           ' → logprob: -14.632837295532227

Token 377: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.1472419600977446e-06
    2. ' MOD' → logprob: -13.750000953674316
    3. '   ' → logprob: -21.000001907348633
    4. 'MO' → logprob: -22.625001907348633
    5. 'MODULE' → logprob: -22.625001907348633
    6. '           ' → logprob: -23.250001907348633
    7. '_MOD' → logprob: -23.625001907348633
    8. '10' → logprob: -23.750001907348633
    9. 'MODE' → logprob: -23.875001907348633
    10. '       ' → logprob: -24.125001907348633

Token 378: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -2.696889623621246e-06
    2. 'O' → logprob: -13.25000286102295
    3. 'ULE' → logprob: -14.50000286102295
    4. 'U' → logprob: -15.00000286102295
    5. '   ' → logprob: -17.500001907348633
    6. 'UL' → logprob: -17.500001907348633
    7. '0' → logprob: -17.500001907348633
    8. 'ulo' → logprob: -18.125001907348633
    9. '7' → logprob: -18.125001907348633
    10. 'UB' → logprob: -18.250001907348633

Token 379: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4746675491333008
    2. ')' → logprob: -0.9746675491333008
    3. '       ' → logprob: -7.724667549133301
    4. '   ' → logprob: -9.4746675491333
    5. ' )
' → logprob: -10.2246675491333
    6. ')
' → logprob: -11.3496675491333
    7. ' )' → logprob: -11.4746675491333
    8. ',' → logprob: -11.5996675491333
    9. '           ' → logprob: -14.0996675491333
    10. ')`
' → logprob: -14.0996675491333

Token 380: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.786196975852363e-05
    2. 'print' → logprob: -10.500038146972656
    3. '   ' → logprob: -11.500038146972656
    4. '```' → logprob: -15.875038146972656
    5. '           ' → logprob: -17.250038146972656
    6. '        
' → logprob: -18.625038146972656
    7. '
' → logprob: -18.750038146972656
    8. ' print' → logprob: -19.500038146972656
    9. '      ' → logprob: -20.000038146972656
    10. '``' → logprob: -20.375038146972656

Token 381: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005268738139420748
    2. '       ' → logprob: -5.255268573760986
    3. ' print' → logprob: -10.505269050598145
    4. '
' → logprob: -12.130269050598145
    5. '   ' → logprob: -13.130269050598145
    6. '	print' → logprob: -16.880268096923828
    7. 'if' → logprob: -17.880268096923828
    8. '        
' → logprob: -18.380268096923828
    9. 'result' → logprob: -19.255268096923828
    10. 'for' (adapté à ' for') → logprob: -19.505268096923828

Token 382: ' idx' (ID: 14016)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -1.1530582904815674
    2. 'val' → logprob: -1.2780582904815674
    3. 'idx' → logprob: -1.6530582904815674
    4. 'i' → logprob: -1.9030582904815674
    5. 'acc' → logprob: -3.9030582904815674
    6. 'value' → logprob: -4.278058052062988
    7. 'num' → logprob: -5.403058052062988
    8. '_' → logprob: -5.528058052062988
    9. 'index' → logprob: -6.153058052062988
    10. 'x' → logprob: -6.403058052062988

Token 383: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01829778403043747
    2. 'in' → logprob: -4.0182976722717285
    3. ' ' → logprob: -9.268298149108887
    4. ',' → logprob: -10.393298149108887
    5. '	in' → logprob: -12.018298149108887
    6. '_in' → logprob: -12.643298149108887
    7. '_' → logprob: -12.893298149108887
    8. 'In' → logprob: -13.268298149108887
    9. '0' → logprob: -13.643298149108887
    10. '   ' → logprob: -13.768298149108887

Token 384: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0013663081917911768
    2. ' range' → logprob: -6.626366138458252
    3. 'xor' → logprob: -10.50136661529541
    4. 'input' → logprob: -11.75136661529541
    5. '   ' → logprob: -13.25136661529541
    6. '[' → logprob: -14.12636661529541
    7. 'x' → logprob: -14.37636661529541
    8. '(range' → logprob: -14.75136661529541
    9. ' ' → logprob: -15.25136661529541
    10. '	range' → logprob: -15.62636661529541

Token 385: '(' (ID: 7)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.49792471528053284
    2. '(num' → logprob: -1.6229246854782104
    3. '(' → logprob: -1.7479246854782104
    4. '(len' → logprob: -4.1229248046875
    5. '1' → logprob: -7.1229248046875
    6. '(result' → logprob: -7.3729248046875
    7. '(x' → logprob: -7.3729248046875
    8. 'zero' → logprob: -7.3729248046875
    9. '(acc' → logprob: -7.4979248046875
    10. '(n' → logprob: -7.7479248046875

Token 386: '2' (ID: 17)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.49888095259666443
    2. 'num' → logprob: -1.3738809823989868
    3. '1' → logprob: -2.2488808631896973
    4. 'len' → logprob: -4.498880863189697
    5. 'xor' → logprob: -4.498880863189697
    6. '2' → logprob: -4.998880863189697
    7. 'result' → logprob: -6.498880863189697
    8. '0' → logprob: -6.998880863189697
    9. '(' → logprob: -7.623880863189697
    10. '   ' → logprob: -7.748880863189697

Token 387: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2689887583255768
    2. '20' → logprob: -2.393988847732544
    3. ' **' → logprob: -2.518988847732544
    4. '0' → logprob: -2.768988847732544
    5. ' ' → logprob: -7.643988609313965
    6. '   ' → logprob: -8.143988609313965
    7. ',' → logprob: -8.893988609313965
    8. '           ' → logprob: -9.018988609313965
    9. '       ' → logprob: -9.768988609313965
    10. '               ' → logprob: -10.393988609313965

Token 388: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.00014931005716789514
    2. '10' → logprob: -9.750149726867676
    3. '0' → logprob: -10.625149726867676
    4. '17' → logprob: -10.875149726867676
    5. '19' → logprob: -11.250149726867676
    6. '1' → logprob: -11.750149726867676
    7. '18' → logprob: -12.000149726867676
    8. '16' → logprob: -12.250149726867676
    9. '2' → logprob: -12.750149726867676
    10. '15' → logprob: -12.875149726867676

Token 389: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.0008321399218402803
    2. '10' → logprob: -7.8758320808410645
    3. '0' → logprob: -8.625832557678223
    4. '17' → logprob: -9.625832557678223
    5. '19' → logprob: -10.625832557678223
    6. '16' → logprob: -10.625832557678223
    7. '1' → logprob: -10.625832557678223
    8. '18' → logprob: -10.750832557678223
    9. '15' → logprob: -10.875832557678223
    10. '2' → logprob: -11.125832557678223

Token 390: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5246506929397583
    2. '):
' → logprob: -0.8996506929397583
    3. '       ' → logprob: -7.274650573730469
    4. '   ' → logprob: -7.524650573730469
    5. ')' → logprob: -9.399650573730469
    6. ':' → logprob: -9.649650573730469
    7. '):
' → logprob: -9.774650573730469
    8. ',' → logprob: -10.649650573730469
    9. '           ' → logprob: -10.774650573730469
    10. ' ):' → logprob: -11.524650573730469

Token 391: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001596749178133905
    2. ' if' → logprob: -7.126596927642822
    3. 'if' → logprob: -8.126596450805664
    4. '	       ' → logprob: -8.501596450805664
    5. '<|end|>' → logprob: -8.876596450805664
    6. '       ' → logprob: -10.251596450805664
    7. '[' → logprob: -10.626596450805664
    8. '		' → logprob: -10.751596450805664
    9. '   ' → logprob: -11.251596450805664
    10. '```' → logprob: -11.501596450805664

Token 392: ' result' (ID: 1534)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6543876528739929
    2. '           ' → logprob: -1.9043877124786377
    3. 'result' (adapté à ' result') → logprob: -1.9043877124786377
    4. '   ' → logprob: -2.7793877124786377
    5. '       ' → logprob: -2.7793877124786377
    6. ' if' → logprob: -2.9043877124786377
    7. ' result' → logprob: -5.779387474060059
    8. 'for' → logprob: -8.654387474060059
    9. 'print' → logprob: -10.154387474060059
    10. ' for' → logprob: -10.529387474060059

Token 393: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -0.08141878247261047
    2. '[' → logprob: -2.831418752670288
    3. '=' → logprob: -5.081418991088867
    4. '   ' → logprob: -5.956418991088867
    5. '_ans' → logprob: -6.456418991088867
    6. '           ' → logprob: -6.706418991088867
    7. '_' → logprob: -6.831418991088867
    8. '
' → logprob: -6.956418991088867
    9. '_result' → logprob: -7.081418991088867
    10. ' =' → logprob: -7.206418991088867

Token 394: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21306025981903076
    2. '+=' → logprob: -2.2130603790283203
    3. '-=' → logprob: -2.9630603790283203
    4. '*=' → logprob: -4.21306037902832
    5. ' =' → logprob: -4.58806037902832
    6. '   ' → logprob: -6.58806037902832
    7. ' -=' → logprob: -6.58806037902832
    8. ' ^=' → logprob: -6.83806037902832
    9. '%=' → logprob: -7.33806037902832
    10. ' *=' → logprob: -7.83806037902832

Token 395: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.47424253821372986
    2. ' xor' → logprob: -0.9742425680160522
    3. '(x' → logprob: -9.474242210388184
    4. ' (' → logprob: -10.599242210388184
    5. '0' → logprob: -11.224242210388184
    6. ' ' → logprob: -11.474242210388184
    7. 'x' → logprob: -11.599242210388184
    8. '1' → logprob: -12.474242210388184
    9. '(' → logprob: -12.599242210388184
    10. '   ' → logprob: -12.599242210388184

Token 396: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -5.080963092041202e-06
    2. 'dp' → logprob: -12.500004768371582
    3. '	dp' → logprob: -14.500004768371582
    4. '_dt' → logprob: -15.625004768371582
    5. '[' → logprob: -15.750004768371582
    6. '_dx' → logprob: -16.6250057220459
    7. 'DP' → logprob: -17.5000057220459
    8. '_' → logprob: -17.6250057220459
    9. '[_' → logprob: -17.7500057220459
    10. '```' → logprob: -18.1250057220459

Token 397: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0009276605560444295
    2. '[' → logprob: -7.000927448272705
    3. '[i' → logprob: -11.375927925109863
    4. '[val' → logprob: -14.125927925109863
    5. '[x' → logprob: -14.375927925109863
    6. '[index' → logprob: -14.500927925109863
    7. 'idx' → logprob: -14.750927925109863
    8. '[ix' → logprob: -14.750927925109863
    9. '```' → logprob: -15.000927925109863
    10. ' [' → logprob: -15.000927925109863

Token 398: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004907185211777687
    2. '[' → logprob: -7.750490665435791
    3. ' ][' → logprob: -10.50049114227295
    4. ']' → logprob: -10.62549114227295
    5. '0' → logprob: -12.37549114227295
    6. '   ' → logprob: -13.50049114227295
    7. '1' → logprob: -14.25049114227295
    8. ' ' → logprob: -14.75049114227295
    9. ')[' → logprob: -15.00049114227295
    10. '    ' → logprob: -16.187990188598633

Token 399: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010986098641296849
    2. '0' → logprob: -9.125109672546387
    3. ' ' → logprob: -14.375109672546387
    4. '[' → logprob: -15.500109672546387
    5. '   ' → logprob: -15.875109672546387
    6. '][' → logprob: -17.750110626220703
    7. '۱' → logprob: -18.000110626220703
    8. '' → logprob: -18.000110626220703
    9. '１' → logprob: -18.312610626220703
    10. '१' → logprob: -18.687610626220703

Token 400: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028210312128067017
    2. ']%' → logprob: -4.153210163116455
    3. ' ]' → logprob: -4.778210163116455
    4. '           ' → logprob: -6.278210163116455
    5. ']
' → logprob: -7.028210163116455
    6. '       ' → logprob: -8.028210639953613
    7. ')' → logprob: -8.903210639953613
    8. '
' → logprob: -9.278210639953613
    9. '   ' → logprob: -9.403210639953613
    10. '[' → logprob: -9.903210639953613

Token 401: '           ' (ID: 352)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.1321641206741333
    2. ' %' → logprob: -2.2571640014648438
    3. '       ' → logprob: -5.382164001464844
    4. '%
' → logprob: -5.382164001464844
    5. '           ' → logprob: -6.007164001464844
    6. ')%' → logprob: -6.132164001464844
    7. ')' → logprob: -6.257164001464844
    8. '
' → logprob: -6.507164001464844
    9. ' %=' → logprob: -8.132164001464844
    10. ' %
' → logprob: -8.257164001464844

Token 402: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.6229846477508545
    2. ' result' → logprob: -0.9979846477508545
    3. ' %=' → logprob: -2.7479846477508545
    4. '           ' → logprob: -3.7479846477508545
    5. '%=' → logprob: -5.247984886169434
    6. '%' → logprob: -6.997984886169434
    7. '=' → logprob: -8.122984886169434
    8. ' =' → logprob: -8.497984886169434
    9. ' %' → logprob: -8.497984886169434
    10. '=result' → logprob: -9.122984886169434

Token 403: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -6.988221684878226e-06
    2. 'Answer' → logprob: -12.375006675720215
    3. '_' → logprob: -14.250006675720215
    4. '_result' → logprob: -14.250006675720215
    5. '_ans' → logprob: -15.000006675720215
    6. '=' → logprob: -15.375006675720215
    7. 'ANSWER' → logprob: -15.500006675720215
    8. 'answer' → logprob: -15.875006675720215
    9. '_answers' → logprob: -16.25000762939453
    10. '_question' → logprob: -16.25000762939453

Token 404: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.10047084838151932
    2. ' %=' → logprob: -2.350470781326294
    3. '%' → logprob: -8.350470542907715
    4. ')' → logprob: -11.225470542907715
    5. '	' → logprob: -12.475470542907715
    6. '   ' → logprob: -12.725470542907715
    7. ')%' → logprob: -12.850470542907715
    8. ' %' → logprob: -13.350470542907715
    9. ' ' → logprob: -13.475470542907715
    10. '```' → logprob: -14.100470542907715

Token 405: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.01814994215965271
    2. ' MOD' → logprob: -4.0181498527526855
    3. '_MOD' → logprob: -19.018150329589844
    4. '.MOD' → logprob: -20.768150329589844
    5. '   ' → logprob: -21.893150329589844
    6. ' ' → logprob: -22.393150329589844
    7. 'M' → logprob: -23.143150329589844
    8. 'MD' → logprob: -24.268150329589844
    9. 'MO' → logprob: -24.643150329589844
    10. 'MODE' → logprob: -24.643150329589844

Token 406: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.0008078443352133036
    2. 'O' → logprob: -7.125807762145996
    3. 'ULE' → logprob: -13.250807762145996
    4. 'U' → logprob: -14.375807762145996
    5. 'UL' → logprob: -14.750807762145996
    6. ' O' → logprob: -15.625807762145996
    7. '   ' → logprob: -15.750807762145996
    8. 'ulo' → logprob: -16.375808715820312
    9. 'OD' → logprob: -16.875808715820312
    10. '0' → logprob: -17.125808715820312

Token 407: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01798322983086109
    2. '   ' → logprob: -4.392983436584473
    3. 'print' → logprob: -5.517983436584473
    4. '
' → logprob: -6.642983436584473
    5. '```' → logprob: -9.142983436584473
    6. ' print' → logprob: -10.892983436584473
    7. '    
' → logprob: -12.517983436584473
    8. '        
' → logprob: -12.642983436584473
    9. '           ' → logprob: -12.767983436584473
    10. ',' → logprob: -13.767983436584473

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10809621959924698
    2. '<|end|>' → logprob: -2.608096122741699
    3. '
' → logprob: -3.858096122741699
    4. '   ' → logprob: -5.358096122741699
    5. '```' → logprob: -6.733096122741699
    6. 'print' → logprob: -6.858096122741699
    7. '  
' → logprob: -8.7330961227417
    8. '        
' → logprob: -9.3580961227417
    9. '[' → logprob: -9.6080961227417
    10. ' ' → logprob: -9.9830961227417

Token 409: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.20774531364440918
    2. '   ' → logprob: -1.7077453136444092
    3. '       ' → logprob: -5.457745552062988
    4. ' print' → logprob: -6.207745552062988
    5. '```' → logprob: -10.332745552062988
    6. '	print' → logprob: -13.332745552062988
    7. '
' → logprob: -14.457745552062988
    8. ' ' → logprob: -16.082744598388672
    9. '``' → logprob: -16.457744598388672
    10. '  ' → logprob: -17.332744598388672

Token 410: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0009131324477493763
    2. '(' → logprob: -7.000913143157959
    3. 'result' → logprob: -13.6259126663208
    4. '()' → logprob: -16.125913619995117
    5. '(
' → logprob: -16.250913619995117
    6. '((' → logprob: -16.750913619995117
    7. '(results' → logprob: -17.000913619995117
    8. '(res' → logprob: -17.250913619995117
    9. '=result' → logprob: -17.750913619995117
    10. ',result' → logprob: -17.875913619995117

Token 411: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -3.128163257315464e-07
    2. '_result' → logprob: -16.25
    3. '_ans' → logprob: -16.375
    4. '_' → logprob: -16.875
    5. ')_' → logprob: -17.625
    6. ' _' → logprob: -17.75
    7. 'answer' → logprob: -17.875
    8. ')' → logprob: -17.875
    9. 'Answer' → logprob: -17.875
    10. '__' → logprob: -18.375

Token 412: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1637164789135568e-05
    2. ')
' → logprob: -11.625011444091797
    3. '   ' → logprob: -13.125011444091797
    4. ' )' → logprob: -15.375011444091797
    5. '       ' → logprob: -16.125011444091797
    6. ')`' → logprob: -16.250011444091797
    7. '))' → logprob: -16.375011444091797
    8. '())' → logprob: -17.125011444091797
    9. ')}' → logprob: -17.625011444091797
    10. ')**' → logprob: -17.750011444091797

Token 413: '   ' (ID: 271)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.023313960060477257
    2. 'if' → logprob: -3.7733139991760254
    3. ' process' → logprob: -11.148313522338867
    4. 'print' → logprob: -11.398313522338867
    5. '(process' → logprob: -11.523313522338867
    6. '<|end|>' → logprob: -11.523313522338867
    7. 'def' → logprob: -11.773313522338867
    8. 'read' → logprob: -12.648313522338867
    9. '
' → logprob: -12.773313522338867
    10. '#' → logprob: -13.148313522338867

Token 414: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 415: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5802026391029358
    2. '<|end|>' → logprob: -0.8302026391029358
    3. 'if' → logprob: -5.830202579498291
    4. '\n' → logprob: -8.20520305633545
    5. '(
' → logprob: -8.20520305633545
    6. '

' → logprob: -8.58020305633545
    7. '<|end|>' → logprob: -8.95520305633545
    8. '()' → logprob: -9.45520305633545
    9. 'process' → logprob: -9.83020305633545
    10. '```' → logprob: -9.95520305633545

Token 416: '0' (ID: 15)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 417: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21929404139518738
    2. '<|end|>' → logprob: -1.9692940711975098
    3. '
' → logprob: -2.9692940711975098
    4. 'process' → logprob: -6.21929407119751
    5. '```' → logprob: -6.21929407119751
    6. ' if' → logprob: -7.21929407119751
    7. '#' → logprob: -8.094293594360352
    8. '0' → logprob: -8.469293594360352
    9. ')' → logprob: -9.469293594360352
    10. '<|end|>' → logprob: -9.594293594360352

Token 418: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.893480243277736e-05
    2. 'process' → logprob: -10.375039100646973
    3. '```' → logprob: -12.875039100646973
    4. ' if' → logprob: -13.125039100646973
    5. '<|end|>' → logprob: -13.250039100646973
    6. '#' → logprob: -13.875039100646973
    7. '
' → logprob: -15.625039100646973
    8. '#if' → logprob: -16.375038146972656
    9. '\n' → logprob: -17.125038146972656
    10. '(process' → logprob: -17.875038146972656

Token 419: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011056310497224331
    2. '__' → logprob: -4.511056423187256
    3. ' ' → logprob: -12.136055946350098
    4. '_name' → logprob: -13.761055946350098
    5. '___' → logprob: -14.136055946350098
    6. ' ' → logprob: -14.511055946350098
    7. '_' → logprob: -14.761055946350098
    8. 'name' → logprob: -15.136055946350098
    9. ' ___' → logprob: -15.886055946350098
    10. ' ' → logprob: -16.636056900024414

Token 420: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.043026361614465714
    2. ' ==' → logprob: -3.2930264472961426
    3. ' __' → logprob: -5.668026447296143
    4. '==' → logprob: -6.668026447296143
    5. '__[' → logprob: -9.793025970458984
    6. '_' → logprob: -10.543025970458984
    7. '.__' → logprob: -10.668025970458984
    8. '[' → logprob: -10.668025970458984
    9. '__.' → logprob: -10.918025970458984
    10. '__.__' → logprob: -11.293025970458984

Token 421: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.869017852295656e-06
    2. '__.__' → logprob: -12.375006675720215
    3. '==' → logprob: -13.000006675720215
    4. '___' → logprob: -15.750006675720215
    5. '____' → logprob: -16.37500762939453
    6. '__.' → logprob: -16.75000762939453
    7. ' ==' → logprob: -16.87500762939453
    8. '_' → logprob: -17.12500762939453
    9. '=="' → logprob: -17.37500762939453
    10. '__('' → logprob: -18.12500762939453

Token 422: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003777505364269018
    2. ' ==' → logprob: -5.878777503967285
    3. '==' → logprob: -7.253777503967285
    4. '=="' → logprob: -8.753777503967285
    5. '__.__' → logprob: -9.378777503967285
    6. '.__' → logprob: -11.878777503967285
    7. '__.' → logprob: -12.503777503967285
    8. '_' → logprob: -12.878777503967285
    9. '__":
' → logprob: -13.003777503967285
    10. '__["' → logprob: -13.128777503967285

Token 423: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003190666902810335
    2. ''' → logprob: -5.753190517425537
    3. '__' → logprob: -11.753190994262695
    4. ' "__' → logprob: -12.253190994262695
    5. '"name' → logprob: -16.003190994262695
    6. '"_' → logprob: -16.753190994262695
    7. '"user' → logprob: -16.753190994262695
    8. '"class' → logprob: -17.253190994262695
    9. ' '__' → logprob: -17.628190994262695
    10. '"value' → logprob: -18.003190994262695

Token 424: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00012987985974177718
    2. 'name' → logprob: -9.000129699707031
    3. '__' → logprob: -12.000129699707031
    4. ' main' → logprob: -16.00012969970703
    5. '"' → logprob: -16.62512969970703
    6. '_main' → logprob: -16.87512969970703
    7. '(main' → logprob: -18.12512969970703
    8. 'built' → logprob: -18.75012969970703
    9. 'file' → logprob: -19.12512969970703
    10. ''' → logprob: -19.12512969970703

Token 425: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.08242705464363098
    2. '__' → logprob: -2.5824270248413086
    3. '__:' → logprob: -5.832427024841309
    4. '__':
' → logprob: -7.457427024841309
    5. '():
' → logprob: -11.332427024841309
    6. ':' → logprob: -11.957427024841309
    7. '__["' → logprob: -13.832427024841309
    8. '():' → logprob: -13.957427024841309
    9. '__
' → logprob: -14.457427024841309
    10. '__
' → logprob: -15.082427024841309

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18102769553661346
    2. '	process' → logprob: -1.8060276508331299
    3. ' process' → logprob: -6.931027889251709
    4. 'process' → logprob: -8.18102741241455
    5. '(process' → logprob: -11.80602741241455
    6. '	Process' → logprob: -12.18102741241455
    7. '   ' → logprob: -12.68102741241455
    8. '    
' → logprob: -13.18102741241455
    9. '_process' → logprob: -13.68102741241455
    10. '\t' → logprob: -13.68102741241455

Token 427: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -3.0590548703912646e-05
    2. ' process' → logprob: -10.500030517578125
    3. '   ' → logprob: -12.750030517578125
    4. '	process' → logprob: -16.250030517578125
    5. 'exit' → logprob: -17.375030517578125
    6. 'sys' → logprob: -17.500030517578125
    7. 'import' → logprob: -18.750030517578125
    8. '_process' → logprob: -18.750030517578125
    9. '(process' → logprob: -19.250030517578125
    10. '.process' → logprob: -20.250030517578125

Token 428: '_solution' (ID: 127649)
  Prédit: '_solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_solution' → logprob: -0.0005628037615679204
    2. '_' → logprob: -7.50056266784668
    3. '()' → logprob: -11.62556266784668
    4. '_sol' → logprob: -15.12556266784668
    5. 'Solution' → logprob: -16.00056266784668
    6. '_s' → logprob: -16.25056266784668
    7. '_solver' → logprob: -16.25056266784668
    8. '_resolution' → logprob: -17.25056266784668
    9. '__' → logprob: -17.25056266784668
    10. 'solution' → logprob: -17.50056266784668

Token 429: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007508194539695978
    2. '()
' → logprob: -5.507508277893066
    3. '(' → logprob: -5.757508277893066
    4. '
' → logprob: -8.757508277893066
    5. '(
' → logprob: -10.007508277893066
    6. '<|end|>' → logprob: -11.007508277893066
    7. '()\' → logprob: -11.757508277893066
    8. '();' → logprob: -11.757508277893066
    9. ' ()' → logprob: -12.007508277893066
    10. '```' → logprob: -12.132508277893066


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 427
Tokens correctement prédits (1ère position, stricte): 220
Tokens correctement prédits (1ère position, avec adaptation): 227
Tokens correctement prédits (top 10): 372
Précision stricte (1ère position): 51.52%
Précision adaptée (1ère position): 53.16%
Précision (top 10): 87.12%
================================================================================
