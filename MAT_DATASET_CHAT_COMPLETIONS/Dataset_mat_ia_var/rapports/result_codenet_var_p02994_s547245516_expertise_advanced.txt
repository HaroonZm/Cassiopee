================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from operator import itemgetter

n, l = map(int, input().split())

# Liste des goûts des pommes
tastes = [l + i for i in range(n)]
total = sum(tastes)
# Trouver le goût le plus proche de zéro
closest = min(tastes, key=abs)
print(total - closest)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' operator' (ID: 11019)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.14237836003303528
    2. 'item' → logprob: -2.142378330230713
    3. ' import' → logprob: -4.767378330230713
    4. ' attr' → logprob: -5.892378330230713
    5. ' add' → logprob: -7.017378330230713
    6. 'attr' → logprob: -7.392378330230713
    7. 'getitem' → logprob: -7.392378330230713
    8. 'import' → logprob: -7.892378330230713
    9. '```' → logprob: -8.017378807067871
    10. 'add' → logprob: -8.017378807067871

Token 4: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.00033879990223795176
    2. 'get' → logprob: -8.000338554382324
    3. 'getitem' → logprob: -13.000338554382324
    4. 'g' → logprob: -14.875338554382324
    5. 'gett' → logprob: -15.625338554382324
    6. 'setter' → logprob: -16.00033950805664
    7. 'ge' → logprob: -16.12533950805664
    8. 'gte' → logprob: -16.75033950805664
    9. 's' → logprob: -17.12533950805664
    10. 'geta' → logprob: -17.25033950805664

Token 5: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008120184764266014
    2. '.' → logprob: -5.258120059967041
    3. '\(' → logprob: -6.508120059967041
    4. ',' → logprob: -7.133120059967041
    5. ' (' → logprob: -8.5081205368042
    6. '<|end|>' → logprob: -9.2581205368042
    7. '\' → logprob: -9.6331205368042
    8. '(
' → logprob: -9.7581205368042
    9. '[' → logprob: -10.2581205368042
    10. '\n' → logprob: -10.8831205368042

Token 6: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008969316841103137
    2. '.' → logprob: -8.000897407531738
    3. ',' → logprob: -8.375897407531738
    4. '\(' → logprob: -8.875897407531738
    5. '(
' → logprob: -10.250897407531738
    6. '```' → logprob: -10.375897407531738
    7. ':' → logprob: -11.125897407531738
    8. '[' → logprob: -11.125897407531738
    9. ' (' → logprob: -11.500897407531738
    10. 'import' → logprob: -11.625897407531738

Token 7: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6751623749732971
    2. ' =' → logprob: -0.8001623749732971
    3. ' ' → logprob: -3.5501623153686523
    4. ',' → logprob: -4.925162315368652
    5. '.' → logprob: -6.675162315368652
    6. 'a' → logprob: -7.050162315368652
    7. ')' → logprob: -7.175162315368652
    8. 'u' → logprob: -7.300162315368652
    9. '_' → logprob: -7.550162315368652
    10. 't' → logprob: -8.175162315368652

Token 8: ' l' (ID: 305)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.6628193855285645
    2. ' k' → logprob: -1.2878193855285645
    3. 'm' → logprob: -1.9128193855285645
    4. 'k' → logprob: -3.1628193855285645
    5. ' items' → logprob: -4.4128193855285645
    6. 'items' → logprob: -6.2878193855285645
    7. ' ' → logprob: -6.5378193855285645
    8. ' data' → logprob: -7.4128193855285645
    9. ' lst' → logprob: -7.7878193855285645
    10. 'data' → logprob: -8.412818908691406

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.033681780099868774
    2. ' =' → logprob: -3.408681869506836
    3. ',' → logprob: -10.658681869506836
    4. 'ist' → logprob: -12.283681869506836
    5. ')' → logprob: -12.658681869506836
    6. 's' → logprob: -14.158681869506836
    7. '=input' → logprob: -14.283681869506836
    8. 'ine' → logprob: -14.408681869506836
    9. 'i' → logprob: -14.783681869506836
    10. '_' → logprob: -15.158681869506836

Token 10: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4314262270927429
    2. 'map' → logprob: -1.0564262866973877
    3. 'int' → logprob: -7.181426048278809
    4. ' ' → logprob: -7.681426048278809
    5. ' input' → logprob: -7.681426048278809
    6. 'input' → logprob: -7.681426048278809
    7. ' int' → logprob: -8.181426048278809
    8. '5' → logprob: -9.181426048278809
    9. '0' → logprob: -9.306426048278809
    10. '10' → logprob: -10.431426048278809

Token 11: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.18171948194503784
    2. '(' → logprob: -1.8067195415496826
    3. '(str' → logprob: -6.5567193031311035
    4. '(lambda' → logprob: -7.9317193031311035
    5. '(input' → logprob: -9.431719779968262
    6. 'int' → logprob: -9.681719779968262
    7. '()' → logprob: -11.556719779968262
    8. '[int' → logprob: -11.681719779968262
    9. '<int' → logprob: -11.806719779968262
    10. '(
' → logprob: -12.181719779968262

Token 12: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10169559717178345
    2. '(' → logprob: -3.1016955375671387
    3. 'input' → logprob: -3.4766955375671387
    4. ')' → logprob: -4.101695537567139
    5. ',' → logprob: -6.476695537567139
    6. ',input' → logprob: -6.726695537567139
    7. ' input' → logprob: -7.351695537567139
    8. '=input' → logprob: -8.101696014404297
    9. '(raw' → logprob: -9.851696014404297
    10. '(user' → logprob: -9.851696014404297

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.048588961362838745
    2. ' input' → logprob: -3.048588991165161
    3. ')' → logprob: -13.923588752746582
    4. '(input' → logprob: -15.048588752746582
    5. ',input' → logprob: -15.423588752746582
    6. '=input' → logprob: -16.4235897064209
    7. ' )' → logprob: -16.9235897064209
    8. ' ' → logprob: -18.0485897064209
    9. '	input' → logprob: -18.1735897064209
    10. '[input' → logprob: -19.2985897064209

Token 14: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5872171521186829
    2. '().' → logprob: -0.9622171521186829
    3. '()' → logprob: -2.837217092514038
    4. '());' → logprob: -7.212217330932617
    5. ')' → logprob: -7.337217330932617
    6. '(' → logprob: -7.712217330932617
    7. '()))' → logprob: -7.712217330932617
    8. '('' → logprob: -8.587217330932617
    9. '()),' → logprob: -9.087217330932617
    10. '();)' → logprob: -9.087217330932617

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00026777281891554594
    2. 'strip' → logprob: -8.25026798248291
    3. 'rstrip' → logprob: -12.00026798248291
    4. ' split' → logprob: -15.50026798248291
    5. '(split' → logprob: -16.750267028808594
    6. 'spl' → logprob: -16.875267028808594
    7. 'read' → logprob: -16.875267028808594
    8. ')' → logprob: -19.500267028808594
    9. '_split' → logprob: -20.875267028808594
    10. 's' → logprob: -20.875267028808594

Token 16: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12708412110805511
    2. '))' → logprob: -2.1270840167999268
    3. '())' → logprob: -9.377083778381348
    4. '),' → logprob: -10.377083778381348
    5. '()' → logprob: -11.127083778381348
    6. ')))' → logprob: -12.252083778381348
    7. '()))' → logprob: -12.377083778381348
    8. ')`' → logprob: -12.377083778381348
    9. '`)' → logprob: -12.627083778381348
    10. '(' → logprob: -13.127083778381348

Token 17: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9084801077842712
    2. 'items' → logprob: -1.533480167388916
    3. 'data' → logprob: -1.783480167388916
    4. 'array' → logprob: -2.658480167388916
    5. 'arr' → logprob: -3.033480167388916
    6. 'lst' → logprob: -3.658480167388916
    7. 's' → logprob: -4.033480167388916
    8. 'numbers' → logprob: -4.408480167388916
    9. 'list' → logprob: -5.533480167388916
    10. 'houses' → logprob: -5.533480167388916

Token 18: ' Liste' (ID: 61030)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -1.3399052619934082
    2. 'items' → logprob: -2.089905261993408
    3. 'lst' → logprob: -2.089905261993408
    4. ' items' → logprob: -2.214905261993408
    5. 'data' → logprob: -2.589905261993408
    6. ' lst' → logprob: -2.839905261993408
    7. 'arr' → logprob: -2.964905261993408
    8. ' arr' → logprob: -3.464905261993408
    9. 'a' → logprob: -4.214905261993408
    10. ' a' → logprob: -4.339905261993408

Token 19: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8909562826156616
    2. ' =' → logprob: -1.0159562826156616
    3. '=' → logprob: -1.6409562826156616
    4. '_items' → logprob: -4.515956401824951
    5. '_' → logprob: -4.765956401824951
    6. '=[]' → logprob: -5.140956401824951
    7. 'items' → logprob: -6.390956401824951
    8. '(s' → logprob: -7.015956401824951
    9. '(' → logprob: -7.265956401824951
    10. '_elements' → logprob: -7.390956401824951

Token 20: ' goûts' (ID: 184726)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -1.4363764524459839
    2. ' items' → logprob: -2.9363765716552734
    3. 'd' → logprob: -3.0613765716552734
    4. 'notes' → logprob: -3.1863765716552734
    5. ' pairs' → logprob: -3.1863765716552734
    6. ' points' → logprob: -3.3113765716552734
    7. 't' → logprob: -3.4363765716552734
    8. 'items' → logprob: -3.4363765716552734
    9. ' notes' → logprob: -3.4363765716552734
    10. ' tuples' → logprob: -3.4363765716552734

Token 21: ' des' (ID: 731)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.856326162815094
    2. 's' → logprob: -1.7313261032104492
    3. '=' → logprob: -1.8563261032104492
    4. ',' → logprob: -2.481326103210449
    5. ' =' → logprob: -2.606326103210449
    6. 'taste' → logprob: -3.606326103210449
    7. 'g' → logprob: -4.981326103210449
    8. ':' → logprob: -5.231326103210449
    9. 'f' → logprob: -5.356326103210449
    10. 'a' → logprob: -5.481326103210449

Token 22: ' pommes' (ID: 149224)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.4875847101211548
    2. 'j' → logprob: -1.8625847101211548
    3. 'él' → logprob: -2.2375845909118652
    4. 'c' → logprob: -2.6125845909118652
    5. 'élé' → logprob: -3.1125845909118652
    6. 'en' → logprob: -3.1125845909118652
    7. 'p' → logprob: -3.2375845909118652
    8. 'd' → logprob: -3.3625845909118652
    9. 's' → logprob: -3.4875845909118652
    10. 'sal' → logprob: -3.4875845909118652

Token 23: '
' (ID: 198)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.3006311357021332
    2. 's' → logprob: -2.175631046295166
    3. 'apple' → logprob: -3.050631046295166
    4. ' ' → logprob: -3.425631046295166
    5. 'a' → logprob: -3.925631046295166
    6. ',' → logprob: -4.050631046295166
    7. ' apples' → logprob: -4.675631046295166
    8. ' ,' → logprob: -5.300631046295166
    9. 'taste' → logprob: -5.675631046295166
    10. ' =' → logprob: -6.050631046295166

Token 24: 't' (ID: 83)
  Prédit: ' tastes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tastes' → logprob: -1.264312982559204
    2. 'g' → logprob: -1.889312982559204
    3. ' apples' → logprob: -1.889312982559204
    4. 'a' → logprob: -2.389312982559204
    5. ' a' → logprob: -3.014312982559204
    6. ' g' → logprob: -3.014312982559204
    7. 'ap' → logprob: -3.139312982559204
    8. ' t' → logprob: -3.139312982559204
    9. 't' → logprob: -3.264312982559204
    10. 'apple' → logprob: -3.639312982559204

Token 25: 'astes' (ID: 33155)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26599636673927307
    2. 'aste' → logprob: -1.8909963369369507
    3. 'astes' → logprob: -2.8909964561462402
    4. '=' → logprob: -4.51599645614624
    5. 'a' → logprob: -5.76599645614624
    6. 'ast' → logprob: -6.26599645614624
    7. '_' → logprob: -6.39099645614624
    8. 'ates' → logprob: -6.89099645614624
    9. 'o' → logprob: -7.01599645614624
    10. 'r' → logprob: -7.39099645614624

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10026901960372925
    2. '=' → logprob: -2.350269079208374
    3. '_' → logprob: -10.850269317626953
    4. '[' → logprob: -11.100269317626953
    5. ' ' → logprob: -12.100269317626953
    6. ',' → logprob: -12.350269317626953
    7. '=[]' → logprob: -12.350269317626953
    8. 's' → logprob: -12.475269317626953
    9. ' =[' → logprob: -12.725269317626953
    10. '[:]' → logprob: -13.100269317626953

Token 27: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0996280238032341
    2. ' list' → logprob: -2.84962797164917
    3. '[list' → logprob: -3.34962797164917
    4. '[' → logprob: -7.09962797164917
    5. '[]' → logprob: -7.59962797164917
    6. ' [' → logprob: -7.72462797164917
    7. '[int' → logprob: -10.349628448486328
    8. '[input' → logprob: -10.474628448486328
    9. '[item' → logprob: -11.349628448486328
    10. ' []' → logprob: -12.474628448486328

Token 28: 'l' (ID: 75)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0017981117125600576
    2. ' int' → logprob: -6.376798152923584
    3. 'map' → logprob: -9.501797676086426
    4. 'tuple' → logprob: -11.501797676086426
    5. '(int' → logprob: -12.251797676086426
    6. 'input' → logprob: -13.501797676086426
    7. '*' → logprob: -13.751797676086426
    8. ' map' → logprob: -14.126797676086426
    9. '<int' → logprob: -14.251797676086426
    10. 'list' → logprob: -14.501797676086426

Token 29: ' +' (ID: 659)
  Prédit: '+i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+i' → logprob: -0.866237461566925
    2. '+' → logprob: -1.2412374019622803
    3. ' +' → logprob: -1.2412374019622803
    4. '+t' → logprob: -6.866237640380859
    5. '+k' → logprob: -8.86623764038086
    6. '+n' → logprob: -9.36623764038086
    7. '+x' → logprob: -9.74123764038086
    8. '+l' → logprob: -10.36623764038086
    9. '+a' → logprob: -11.36623764038086
    10. '+j' → logprob: -11.36623764038086

Token 30: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17979462444782257
    2. ' i' → logprob: -1.8047946691513062
    3. ' ' → logprob: -11.054794311523438
    4. '_' → logprob: -11.304794311523438
    5. '1' → logprob: -11.929794311523438
    6. '0' → logprob: -12.429794311523438
    7. '_i' → logprob: -12.679794311523438
    8. ' _' → logprob: -13.179794311523438
    9. '2' → logprob: -13.304794311523438
    10. '	i' → logprob: -13.929794311523438

Token 31: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.012631957419216633
    2. 'for' → logprob: -4.387631893157959
    3. '	for' → logprob: -9.387632369995117
    4. ' ' → logprob: -10.887632369995117
    5. ')' → logprob: -11.012632369995117
    6. '
' → logprob: -13.262632369995117
    7. '<|end|>' → logprob: -14.887632369995117
    8. ' fo' → logprob: -15.012632369995117
    9. '<|end|>' → logprob: -15.012632369995117
    10. ' f' → logprob: -15.762632369995117

Token 32: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.006298826541751623
    2. 'range' → logprob: -5.381299018859863
    3. ' i' → logprob: -6.506299018859863
    4. ' ' → logprob: -8.756299018859863
    5. ' xrange' → logprob: -11.756299018859863
    6. '_range' → logprob: -11.881299018859863
    7. '	range' → logprob: -12.381299018859863
    8. 'i' → logprob: -12.506299018859863
    9. ' _' → logprob: -14.006299018859863
    10. '<|end|>' → logprob: -14.381299018859863

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010792653076350689
    2. 'in' → logprob: -4.6357927322387695
    3. 'range' → logprob: -7.8857927322387695
    4. ' range' → logprob: -8.01079273223877
    5. '<|end|>' → logprob: -8.26079273223877
    6. ' ' → logprob: -9.88579273223877
    7. ')' → logprob: -11.51079273223877
    8. '<|end|>' → logprob: -12.13579273223877
    9. ']' → logprob: -14.38579273223877
    10. '_range' → logprob: -14.38579273223877

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.038042064756155014
    2. 'range' → logprob: -3.2880420684814453
    3. '	range' → logprob: -14.788042068481445
    4. ' xrange' → logprob: -15.913042068481445
    5. ' ' → logprob: -17.038042068481445
    6. '(range' → logprob: -17.788042068481445
    7. '_range' → logprob: -18.413042068481445
    8. '.range' → logprob: -18.788042068481445
    9. ' rang' → logprob: -20.413042068481445
    10. ')' → logprob: -20.913042068481445

Token 35: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00011009939044015482
    2. '(' → logprob: -9.125109672546387
    3. 'n' → logprob: -14.375109672546387
    4. ' (' → logprob: -14.625109672546387
    5. ' n' → logprob: -17.125110626220703
    6. ')n' → logprob: -17.750110626220703
    7. ')' → logprob: -18.000110626220703
    8. '(
' → logprob: -19.125110626220703
    9. '	n' → logprob: -20.375110626220703
    10. ' ' → logprob: -21.375110626220703

Token 36: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.574251918005757e-05
    2. ')' → logprob: -10.000055313110352
    3. ']' → logprob: -12.000055313110352
    4. ' )' → logprob: -12.875055313110352
    5. ')])' → logprob: -14.375055313110352
    6. ')}' → logprob: -15.625055313110352
    7. '))' → logprob: -16.00005531311035
    8. ')],' → logprob: -16.25005531311035
    9. ')]
' → logprob: -16.37505531311035
    10. ' ]' → logprob: -16.62505531311035

Token 37: 'total' (ID: 9577)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6106870174407959
    2. ' =' → logprob: -0.8606870174407959
    3. '_t' → logprob: -3.860687017440796
    4. '=' → logprob: -4.610687255859375
    5. '_s' → logprob: -7.485687255859375
    6. '<|end|>' → logprob: -7.610687255859375
    7. '_score' → logprob: -7.985687255859375
    8. ' _' → logprob: -8.235687255859375
    9. '_sum' → logprob: -8.360687255859375
    10. 's' → logprob: -8.485687255859375

Token 39: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5494627356529236
    2. 'sum' → logprob: -1.6744627952575684
    3. '0' → logprob: -1.7994627952575684
    4. ' ' → logprob: -2.6744627952575684
    5. 'abs' → logprob: -7.549462795257568
    6. ' abs' → logprob: -8.54946231842041
    7. '1' → logprob: -9.54946231842041
    8. ' n' → logprob: -9.54946231842041
    9. '(sum' → logprob: -11.04946231842041
    10. '10' → logprob: -11.29946231842041

Token 40: '(t' (ID: 2025)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6942455768585205
    2. '(t' → logprob: -0.6942455768585205
    3. '(item' → logprob: -7.069245338439941
    4. '(items' → logprob: -9.569245338439941
    5. '(total' → logprob: -9.694245338439941
    6. '((' → logprob: -10.569245338439941
    7. '(s' → logprob: -10.944245338439941
    8. '(range' → logprob: -11.319245338439941
    9. 't' → logprob: -11.444245338439941
    10. '([' → logprob: -11.694245338439941

Token 41: 'astes' (ID: 33155)
  Prédit: 'astes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'astes' → logprob: -0.01495147030800581
    2. 'aste' → logprob: -5.264951705932617
    3. 't' → logprob: -5.389951705932617
    4. '(t' → logprob: -6.139951705932617
    5. '(' → logprob: -6.639951705932617
    6. 'asts' → logprob: -8.014951705932617
    7. ' tastes' → logprob: -8.139951705932617
    8. 'ast' → logprob: -8.264951705932617
    9. '_t' → logprob: -8.514951705932617
    10. 'aster' → logprob: -8.639951705932617

Token 42: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008098635007627308
    2. ' )' → logprob: -7.625809669494629
    3. '-' → logprob: -8.625809669494629
    4. ' -' → logprob: -9.500809669494629
    5. '(' → logprob: -11.250809669494629
    6. ')
' → logprob: -11.500809669494629
    7. '(t' → logprob: -11.750809669494629
    8. ')-' → logprob: -11.750809669494629
    9. '))' → logprob: -12.125809669494629
    10. ')t' → logprob: -12.375809669494629

Token 43: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6293721795082092
    2. ' 
' → logprob: -1.5043721199035645
    3. ' if' → logprob: -2.0043721199035645
    4. '<|end|>' → logprob: -3.2543721199035645
    5. 'if' → logprob: -4.5043721199035645
    6. '-' → logprob: -4.5043721199035645
    7. '  
' → logprob: -4.6293721199035645
    8. ')' → logprob: -5.3793721199035645
    9. ' for' → logprob: -5.7543721199035645
    10. '
' → logprob: -5.7543721199035645

Token 44: ' Trou' (ID: 58947)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8131115436553955
    2. ' if' → logprob: -1.3131115436553955
    3. ' for' → logprob: -2.0631115436553955
    4. ' while' → logprob: -3.0631115436553955
    5. ' best' → logprob: -3.1881115436553955
    6. ' total' → logprob: -3.9381115436553955
    7. 'if' → logprob: -4.438111305236816
    8. 'for' → logprob: -4.563111305236816
    9. ' 
' → logprob: -5.063111305236816
    10. 'total' → logprob: -6.563111305236816

Token 45: 'ver' (ID: 445)
  Prédit: 've'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 've' → logprob: -0.11008746922016144
    2. 'ver' → logprob: -2.3600873947143555
    3. 'vez' → logprob: -4.8600873947143555
    4. 'vé' → logprob: -6.8600873947143555
    5. 'v' → logprob: -6.9850873947143555
    6. '#' → logprob: -10.235087394714355
    7. 'te' → logprob: -11.110087394714355
    8. 'vee' → logprob: -11.360087394714355
    9. 'va' → logprob: -11.735087394714355
    10. 'vera' → logprob: -11.735087394714355

Token 46: ' le' (ID: 505)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.146344542503357
    2. ' l' → logprob: -1.271344542503357
    3. ' la' → logprob: -1.521344542503357
    4. ' all' → logprob: -2.2713446617126465
    5. ' min' → logprob: -4.3963446617126465
    6. ' best' → logprob: -4.5213446617126465
    7. ' le' → logprob: -4.6463446617126465
    8. ' a' → logprob: -5.0213446617126465
    9. ' une' → logprob: -5.3963446617126465
    10. ' total' → logprob: -5.5213446617126465

Token 47: ' goût' (ID: 76414)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.3303419351577759
    2. 'p' → logprob: -1.4553419351577759
    3. 'i' → logprob: -1.7053419351577759
    4. ' index' → logprob: -2.5803418159484863
    5. 'minimum' → logprob: -3.0803418159484863
    6. 'apple' → logprob: -3.4553418159484863
    7. 'indice' → logprob: -3.9553418159484863
    8. '```' → logprob: -4.455341815948486
    9. ' p' → logprob: -4.580341815948486
    10. 'go' → logprob: -4.580341815948486

Token 48: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.278550624847412
    2. ' qui' → logprob: -1.528550624847412
    3. '<|end|>' → logprob: -1.778550624847412
    4. 's' → logprob: -2.903550624847412
    5. ' des' → logprob: -3.278550624847412
    6. 'closest' → logprob: -3.653550624847412
    7. ' closest' → logprob: -3.903550624847412
    8. ' avec' → logprob: -3.903550624847412
    9. 'total' → logprob: -4.278550624847412
    10. ' du' → logprob: -4.403550624847412

Token 49: ' plus' (ID: 2932)
  Prédit: 'ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.4341765344142914
    2. 's' → logprob: -2.934176445007324
    3. 'plus' → logprob: -2.934176445007324
    4. 'ss' → logprob: -3.059176445007324
    5. 'ng' → logprob: -3.184176445007324
    6. 'gal' → logprob: -3.934176445007324
    7. 'g' → logprob: -3.934176445007324
    8. 'quel' → logprob: -3.934176445007324
    9. 'ste' → logprob: -4.684176445007324
    10. 'n' → logprob: -4.809176445007324

Token 50: ' proche' (ID: 61089)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -1.152316689491272
    2. 'pet' → logprob: -1.402316689491272
    3. 'm' → logprob: -1.902316689491272
    4. 'é' → logprob: -2.4023165702819824
    5. 'dis' → logprob: -3.0273165702819824
    6. 'fa' → logprob: -3.4023165702819824
    7. 'lé' → logprob: -3.6523165702819824
    8. 'd' → logprob: -3.9023165702819824
    9. 'fort' → logprob: -4.027316570281982
    10. 'loin' → logprob: -4.777316570281982

Token 51: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23814207315444946
    2. '<|end|>' → logprob: -3.1131420135498047
    3. ' (' → logprob: -3.4881420135498047
    4. ' to' → logprob: -4.113142013549805
    5. ' of' → logprob: -4.113142013549805
    6. ' de' → logprob: -4.238142013549805
    7. ',' → logprob: -4.738142013549805
    8. '(' → logprob: -4.738142013549805
    9. ' d' → logprob: -4.863142013549805
    10. ' closest' → logprob: -5.113142013549805

Token 52: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013314292300492525
    2. ' ' → logprob: -6.876331329345703
    3. 'zero' → logprob: -8.501331329345703
    4. 'total' → logprob: -10.126331329345703
    5. '```' → logprob: -10.626331329345703
    6. '10' → logprob: -11.626331329345703
    7. '1' → logprob: -12.251331329345703
    8. ' zero' → logprob: -12.376331329345703
    9. 'l' → logprob: -13.126331329345703
    10. ' ' → logprob: -13.626331329345703

Token 53: '
' (ID: 198)
  Prédit: 'closest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'closest' → logprob: -0.7622817158699036
    2. 'abs' → logprob: -1.3872816562652588
    3. 'min' → logprob: -2.012281656265259
    4. ' closest' → logprob: -2.137281656265259
    5. ' min' → logprob: -5.012281894683838
    6. 'zero' → logprob: -5.262281894683838
    7. ' abs' → logprob: -5.262281894683838
    8. 'index' → logprob: -5.512281894683838
    9. 'minus' → logprob: -6.262281894683838
    10. 'nearest' → logprob: -6.512281894683838

Token 54: 'closest' (ID: 66221)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7021667957305908
    2. 'closest' → logprob: -1.2021667957305908
    3. 'abs' → logprob: -2.202166795730591
    4. ' closest' → logprob: -3.577166795730591
    5. 'index' → logprob: -4.327166557312012
    6. 'best' → logprob: -4.452166557312012
    7. 'idx' → logprob: -4.577166557312012
    8. ' min' → logprob: -4.577166557312012
    9. 'm' → logprob: -5.702166557312012
    10. 'zero' → logprob: -5.827166557312012

Token 55: ' =' (ID: 314)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.7467305660247803
    2. '=' → logprob: -1.2467305660247803
    3. ' =' → logprob: -1.8717305660247803
    4. '_index' → logprob: -2.8717305660247803
    5. '_' → logprob: -4.121730804443359
    6. '_idx' → logprob: -5.246730804443359
    7. '_t' → logprob: -5.871730804443359
    8. '_abs' → logprob: -6.371730804443359
    9. '_value' → logprob: -7.496730804443359
    10. 'to' → logprob: -7.996730804443359

Token 56: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.09011705219745636
    2. ' min' → logprob: -2.4651169776916504
    3. 'abs' → logprob: -7.09011697769165
    4. '0' → logprob: -8.340117454528809
    5. ' abs' → logprob: -10.840117454528809
    6. 'max' → logprob: -10.840117454528809
    7. '(min' → logprob: -11.215117454528809
    8. 'key' → logprob: -11.715117454528809
    9. 't' → logprob: -11.965117454528809
    10. '100' → logprob: -12.465117454528809

Token 57: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.001387262367643416
    2. '(abs' → logprob: -6.876387119293213
    3. '(' → logprob: -8.501387596130371
    4. '(range' → logprob: -9.001387596130371
    5. 't' → logprob: -11.001387596130371
    6. '((' → logprob: -12.501387596130371
    7. '(en' → logprob: -13.376387596130371
    8. 'abs' → logprob: -13.626387596130371
    9. '(key' → logprob: -13.626387596130371
    10. '(lambda' → logprob: -14.251387596130371

Token 58: 'astes' (ID: 33155)
  Prédit: 'astes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'astes' → logprob: -0.003093339502811432
    2. 'aste' → logprob: -6.628093242645264
    3. '(t' → logprob: -7.628093242645264
    4. 't' → logprob: -7.753093242645264
    5. 'ast' → logprob: -8.128093719482422
    6. '(key' → logprob: -8.253093719482422
    7. 'range' → logprob: -10.253093719482422
    8. '(' → logprob: -10.253093719482422
    9. '(range' → logprob: -10.253093719482422
    10. 'asts' → logprob: -10.378093719482422

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016344779869541526
    2. ',key' → logprob: -6.50163459777832
    3. 'key' → logprob: -9.00163459777832
    4. ' ,' → logprob: -12.00163459777832
    5. ' key' → logprob: -12.87663459777832
    6. 'Key' → logprob: -16.87663459777832
    7. '_key' → logprob: -17.37663459777832
    8. 's' → logprob: -18.50163459777832
    9. '	key' → logprob: -18.62663459777832
    10. 'abs' → logprob: -18.75163459777832

Token 60: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.10020849853754044
    2. ' key' → logprob: -2.3502085208892822
    3. ',key' → logprob: -13.350208282470703
    4. '(key' → logprob: -15.475208282470703
    5. '	key' → logprob: -16.475208282470703
    6. '[key' → logprob: -18.725208282470703
    7. ',' → logprob: -18.850208282470703
    8. 'lambda' → logprob: -18.975208282470703
    9. '   ' → logprob: -19.100208282470703
    10. '```' → logprob: -19.725208282470703

Token 61: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01983121782541275
    2. '=lambda' → logprob: -4.01983118057251
    3. 'abs' → logprob: -6.39483118057251
    4. 'lambda' → logprob: -11.769831657409668
    5. ' abs' → logprob: -13.894831657409668
    6. '(abs' → logprob: -14.269831657409668
    7. 's' → logprob: -15.769831657409668
    8. ' lambda' → logprob: -16.01983070373535
    9. 'Abs' → logprob: -16.51983070373535
    10. '_abs' → logprob: -17.01983070373535

Token 62: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0024763736873865128
    2. 'lambda' → logprob: -6.002476215362549
    3. '=lambda' → logprob: -15.127476692199707
    4. ' abs' → logprob: -15.377476692199707
    5. ' lambda' → logprob: -16.25247573852539
    6. '(abs' → logprob: -17.12747573852539
    7. 'key' → logprob: -17.62747573852539
    8. '```' → logprob: -18.62747573852539
    9. '(lambda' → logprob: -18.75247573852539
    10. '   ' → logprob: -18.87747573852539

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0564331205387134e-05
    2. ' )' → logprob: -12.00001049041748
    3. '))' → logprob: -13.12501049041748
    4. ')
' → logprob: -13.25001049041748
    5. ')

' → logprob: -15.62501049041748
    6. ')#' → logprob: -16.125011444091797
    7. ')`' → logprob: -16.750011444091797
    8. '),' → logprob: -17.250011444091797
    9. '())' → logprob: -17.250011444091797
    10. ')return' → logprob: -17.500011444091797

Token 64: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.028983134776353836
    2. '
' → logprob: -4.028983116149902
    3. 'if' → logprob: -5.028983116149902
    4. ')
' → logprob: -6.528983116149902
    5. ')' → logprob: -6.653983116149902
    6. '```' → logprob: -8.278983116149902
    7. '

' → logprob: -8.778983116149902
    8. 'result' → logprob: -8.903983116149902
    9. ' 
' → logprob: -9.278983116149902
    10. '#' → logprob: -9.278983116149902

Token 65: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013712438754737377
    2. '(total' → logprob: -4.388712406158447
    3. '(abs' → logprob: -7.013712406158447
    4. '((' → logprob: -8.888712882995605
    5. '(t' → logprob: -9.388712882995605
    6. ' (' → logprob: -10.263712882995605
    7. '(sum' → logprob: -11.013712882995605
    8. '()' → logprob: -11.638712882995605
    9. '('' → logprob: -12.013712882995605
    10. '(
' → logprob: -12.388712882995605

Token 66: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03994298726320267
    2. ' -' → logprob: -3.289942979812622
    3. ')' → logprob: -6.289943218231201
    4. ' ' → logprob: -11.664942741394043
    5. ' ' → logprob: -11.664942741394043
    6. '-ex' → logprob: -11.914942741394043
    7. '-)' → logprob: -12.039942741394043
    8. ',' → logprob: -12.164942741394043
    9. ' )' → logprob: -12.414942741394043
    10. '   ' → logprob: -13.789942741394043

Token 67: ' closest' (ID: 31179)
  Prédit: 'closest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'closest' → logprob: -0.011068098247051239
    2. ' closest' → logprob: -4.511067867279053
    3. 'abs' → logprob: -10.886068344116211
    4. ' abs' → logprob: -13.886068344116211
    5. 'close' → logprob: -14.886068344116211
    6. 'Closest' → logprob: -16.26106834411621
    7. '.closest' → logprob: -16.63606834411621
    8. 'clos' → logprob: -17.13606834411621
    9. '   ' → logprob: -17.76106834411621
    10. 'c' → logprob: -18.63606834411621

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4259644558478612e-05
    2. ' )' → logprob: -11.625014305114746
    3. '))' → logprob: -12.375014305114746
    4. '*' → logprob: -15.125014305114746
    5. ')
' → logprob: -15.750014305114746
    6. ')`' → logprob: -16.00001335144043
    7. '`)' → logprob: -16.00001335144043
    8. '})' → logprob: -16.50001335144043
    9. '//' → logprob: -16.75001335144043
    10. '}' → logprob: -16.87501335144043


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 66
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 46
Précision stricte (1ère position): 30.30%
Précision adaptée (1ère position): 30.30%
Précision (top 10): 69.70%
================================================================================
