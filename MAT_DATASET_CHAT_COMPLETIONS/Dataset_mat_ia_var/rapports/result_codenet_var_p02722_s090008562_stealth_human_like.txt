================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def make_divisors(n):
    result = []
    for j in range(1, int(n**.5)+1):
        if n % j == 0:
            result.append(j)
            # euh, parfois c'est le même donc faut pas doubler
            if j != n // j:
                result.append(n//j)
    # bon tant pis pour le sort
    return result

X = dict()
N = int(input()) # l'utilisateur doit donner N haha

for elem in make_divisors(N-1):
    X[elem] = 1

# Bon, ici faut traiter N aussi
for y in make_divisors(N):
    n2 = N
    if y == 1:
        continue # 1 c'est pas intéressant là
    while n2 % y == 0:
        n2 //= y # plus simple de faire comme ça je trouve
    if n2 % y == 1:
        X[y] = 1
    else:
        X[y] = 0

# Juste essayé un print, trop verbeux
# for k, v in X.items():
#     if v == 1:
#         print(k)

# on enlève 1 car y'a une occurrence en trop, enfin je crois...
print(sum(X.values())-1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' make' (ID: 1520)
  → Token d'amorce (pas de prédiction)

Token 2: '_div' (ID: 36926)
  → Token d'amorce (pas de prédiction)

Token 3: 'is' (ID: 276)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.099475622177124
    2. 'ision' → logprob: -1.474475622177124
    3. 'i' → logprob: -1.724475622177124
    4. 'er' → logprob: -2.099475622177124
    5. 'ide' → logprob: -3.224475622177124
    6. '```' → logprob: -3.224475622177124
    7. 'e' → logprob: -3.474475622177124
    8. 'ider' → logprob: -4.599475860595703
    9. 's' → logprob: -5.849475860595703
    10. 'isor' → logprob: -5.974475860595703

Token 4: 'ors' (ID: 914)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.19237905740737915
    2. 'o' → logprob: -2.6923789978027344
    3. 'ible' → logprob: -2.6923789978027344
    4. '_' → logprob: -3.9423789978027344
    5. '```' → logprob: -4.817378997802734
    6. 'ion' → logprob: -5.567378997802734
    7. 'e' → logprob: -5.692378997802734
    8. 'b' → logprob: -6.692378997802734
    9. 'i' → logprob: -7.317378997802734
    10. 'ibility' → logprob: -7.442378997802734

Token 5: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02188042551279068
    2. '_' → logprob: -4.271880626678467
    3. '```' → logprob: -5.771880626678467
    4. '(_' → logprob: -6.646880626678467
    5. '_:' → logprob: -6.646880626678467
    6. '(_:' → logprob: -7.021880626678467
    7. '(:' → logprob: -8.271880149841309
    8. '():' → logprob: -8.896880149841309
    9. ' (' → logprob: -9.396880149841309
    10. ''' → logprob: -9.646880149841309

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011139659211039543
    2. ')' → logprob: -4.636139869689941
    3. ':' → logprob: -7.261139869689941
    4. '```' → logprob: -8.261139869689941
    5. ''):' → logprob: -9.261139869689941
    6. '(n' → logprob: -9.511139869689941
    7. '):
' → logprob: -10.136139869689941
    8. '(' → logprob: -10.261139869689941
    9. '   ' → logprob: -10.261139869689941
    10. 'def' → logprob: -11.261139869689941

Token 7: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14171065390110016
    2. '   ' → logprob: -2.3917107582092285
    3. '```' → logprob: -3.7667107582092285
    4. '():' → logprob: -4.3917107582092285
    5. '(' → logprob: -7.2667107582092285
    6. '`:' → logprob: -7.7667107582092285
    7. '    
' → logprob: -8.01671028137207
    8. '':' → logprob: -8.01671028137207
    9. ' :' → logprob: -8.01671028137207
    10. '``' → logprob: -8.14171028137207

Token 8: ' result' (ID: 1534)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.059421081095933914
    2. '   ' → logprob: -3.0594210624694824
    3. ':' → logprob: -5.934421062469482
    4. ' divis' → logprob: -6.309421062469482
    5. 'if' → logprob: -6.434421062469482
    6. 'd' → logprob: -6.684421062469482
    7. '	div' → logprob: -6.809421062469482
    8. 'for' → logprob: -7.309421062469482
    9. '```' → logprob: -7.309421062469482
    10. ' ' → logprob: -8.30942153930664

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10785502195358276
    2. '=' → logprob: -2.3578550815582275
    3. 's' → logprob: -5.732854843139648
    4. '[:]' → logprob: -6.857854843139648
    5. '[' → logprob: -7.107854843139648
    6. '_' → logprob: -7.232854843139648
    7. '.append' → logprob: -7.732854843139648
    8. '.' → logprob: -7.982854843139648
    9. '[]' → logprob: -8.107854843139648
    10. ' +=' → logprob: -8.607854843139648

Token 10: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2532300353050232
    2. '[]' → logprob: -1.503230094909668
    3. '[' → logprob: -6.878230094909668
    4. ' [' → logprob: -8.378230094909668
    5. ' ' → logprob: -10.503230094909668
    6. ' set' → logprob: -11.753230094909668
    7. '[:]' → logprob: -13.878230094909668
    8. 'set' → logprob: -14.003230094909668
    9. ' []
' → logprob: -14.253230094909668
    10. '[n' → logprob: -14.378230094909668

Token 11: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.461951494216919
    2. '\' → logprob: -1.961951494216919
    3. 'for' → logprob: -2.086951494216919
    4. ' for' → logprob: -2.336951494216919
    5. ':' → logprob: -2.336951494216919
    6. '.' → logprob: -2.586951494216919
    7. '   ' → logprob: -2.711951494216919
    8. '    
' → logprob: -2.711951494216919
    9. '\n' → logprob: -3.211951494216919
    10. ':
' → logprob: -4.58695125579834

Token 12: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10644829273223877
    2. 'for' (adapté à ' for') → logprob: -2.356448173522949
    3. '   ' → logprob: -5.356448173522949
    4. '```' → logprob: -6.731448173522949
    5. '    ' → logprob: -8.48144817352295
    6. '    
' → logprob: -9.73144817352295
    7. '`' → logprob: -11.35644817352295
    8. '     
' → logprob: -12.10644817352295
    9. ' ```' → logprob: -12.10644817352295
    10. '``' → logprob: -12.23144817352295

Token 13: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16860546171665192
    2. ' ' → logprob: -1.9186054468154907
    3. 'i' → logprob: -4.793605327606201
    4. '  ' → logprob: -10.66860580444336
    5. ' _' → logprob: -11.54360580444336
    6. '_' → logprob: -11.91860580444336
    7. ' x' → logprob: -12.41860580444336
    8. ' ' → logprob: -12.41860580444336
    9. '   ' → logprob: -12.91860580444336
    10. ' range' → logprob: -13.41860580444336

Token 14: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022864313796162605
    2. 'in' → logprob: -4.02286434173584
    3. ' ' → logprob: -5.52286434173584
    4. ' j' → logprob: -8.14786434173584
    5. 'n' → logprob: -8.77286434173584
    6. '  ' → logprob: -9.27286434173584
    7. ',' → logprob: -10.14786434173584
    8. 'j' → logprob: -10.89786434173584
    9. '_' → logprob: -10.89786434173584
    10. '   ' → logprob: -11.14786434173584

Token 15: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023260852321982384
    2. 'range' → logprob: -3.7732608318328857
    3. ' ' → logprob: -11.523261070251465
    4. '	range' → logprob: -13.148261070251465
    5. ' ' → logprob: -14.398261070251465
    6. ' xrange' → logprob: -14.773261070251465
    7. '(range' → logprob: -14.898261070251465
    8. '  ' → logprob: -15.023261070251465
    9. '   ' → logprob: -15.023261070251465
    10. '```' → logprob: -15.148261070251465

Token 16: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.7968066206085496e-05
    2. '(n' → logprob: -10.875027656555176
    3. ' (' → logprob: -11.750027656555176
    4. '(j' → logprob: -15.250027656555176
    5. '(len' → logprob: -15.500027656555176
    6. '(i' → logprob: -15.625027656555176
    7. '(
' → logprob: -15.875027656555176
    8. ' ' → logprob: -16.375028610229492
    9. '((' → logprob: -16.375028610229492
    10. '```' → logprob: -16.625028610229492

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028954518493264914
    2. ' ' → logprob: -5.877895355224609
    3. '2' → logprob: -9.50289535522461
    4. 'n' → logprob: -11.50289535522461
    5. '   ' → logprob: -12.75289535522461
    6. '(' → logprob: -14.00289535522461
    7. ' n' → logprob: -14.25289535522461
    8. 'int' → logprob: -15.12789535522461
    9. ')' → logprob: -15.25289535522461
    10. '0' → logprob: -15.44039535522461

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006353547796607018
    2. ',n' → logprob: -7.500635147094727
    3. ' ,' → logprob: -9.625635147094727
    4. ',j' → logprob: -11.125635147094727
    5. ',int' → logprob: -14.625635147094727
    6. ',len' → logprob: -15.000635147094727
    7. ',num' → logprob: -15.375635147094727
    8. 'n' → logprob: -16.000635147094727
    9. '1' → logprob: -16.375635147094727
    10. '，' → logprob: -16.500635147094727

Token 19: ' int' (ID: 677)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2587072253227234
    2. 'n' → logprob: -1.5087072849273682
    3. ' int' → logprob: -5.633707046508789
    4. 'int' → logprob: -5.758707046508789
    5. ' ' → logprob: -11.508707046508789
    6. '(n' → logprob: -12.383707046508789
    7. ' (' → logprob: -12.758707046508789
    8. ' ' → logprob: -12.758707046508789
    9. '	n' → logprob: -13.633707046508789
    10. '   ' → logprob: -14.133707046508789

Token 20: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1002621054649353
    2. '(' → logprob: -2.35026216506958
    3. '(s' → logprob: -10.225261688232422
    4. ' (' → logprob: -11.725261688232422
    5. 'n' → logprob: -12.600261688232422
    6. ')' → logprob: -13.100261688232422
    7. ')n' → logprob: -13.600261688232422
    8. '((' → logprob: -13.725261688232422
    9. '(math' → logprob: -14.475261688232422
    10. '(
' → logprob: -14.475261688232422

Token 21: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00814052578061819
    2. ' **' → logprob: -5.258140563964844
    3. '(n' → logprob: -5.883140563964844
    4. '(' → logprob: -9.758140563964844
    5. ')**' → logprob: -11.008140563964844
    6. ' ' → logprob: -11.633140563964844
    7. ' (' → logprob: -11.883140563964844
    8. '(j' → logprob: -12.383140563964844
    9. ' j' → logprob: -12.633140563964844
    10. '/n' → logprob: -12.883140563964844

Token 22: '.' (ID: 13)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001161173335276544
    2. '(' → logprob: -6.876161098480225
    3. ' ' → logprob: -9.251161575317383
    4. '.' → logprob: -10.376161575317383
    5. ' (' → logprob: -14.251161575317383
    6. ')' → logprob: -15.376161575317383
    7. '   ' → logprob: -16.001161575317383
    8. '    ' → logprob: -16.001161575317383
    9. '-' → logprob: -17.376161575317383
    10. ' .' → logprob: -17.751161575317383

Token 23: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.3902033970225602e-05
    2. '```' → logprob: -12.000014305114746
    3. '0' → logprob: -13.125014305114746
    4. '.' → logprob: -13.437514305114746
    5. '

' → logprob: -14.125014305114746
    6. '   ' → logprob: -14.562514305114746
    7. ' ' → logprob: -14.687514305114746
    8. '**' → logprob: -15.125014305114746
    9. '``' → logprob: -15.375014305114746
    10. '(' → logprob: -15.625014305114746

Token 24: ')+' (ID: 16161)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1361209750175476
    2. '()' → logprob: -3.0111210346221924
    3. ')+' → logprob: -3.7611210346221924
    4. ')' → logprob: -4.011120796203613
    5. '(n' → logprob: -4.011120796203613
    6. '()+' → logprob: -4.636120796203613
    7. '+' → logprob: -6.261120796203613
    8. '2' → logprob: -6.386120796203613
    9. '```' → logprob: -6.386120796203613
    10. '())' → logprob: -6.761120796203613

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5822400857578032e-05
    2. ' ' → logprob: -10.625025749206543
    3. '2' → logprob: -13.500025749206543
    4. '   ' → logprob: -17.75002670288086
    5. '```' → logprob: -17.75002670288086
    6. '۱' → logprob: -19.25002670288086
    7. ')' → logprob: -19.50002670288086
    8. '+' → logprob: -19.75002670288086
    9. '１' → logprob: -19.81252670288086
    10. '

' → logprob: -19.93752670288086

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12839606404304504
    2. ':' → logprob: -2.1283960342407227
    3. ')' → logprob: -6.878396034240723
    4. ' ):' → logprob: -8.503396034240723
    5. ':)' → logprob: -9.003396034240723
    6. '):
' → logprob: -10.003396034240723
    7. '   ' → logprob: -10.253396034240723
    8. ':**' → logprob: -12.003396034240723
    9. ' :' → logprob: -12.128396034240723
    10. ':def' → logprob: -13.128396034240723

Token 27: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04921138659119606
    2. '   ' → logprob: -4.174211502075195
    3. ' :' → logprob: -4.174211502075195
    4. ' if' → logprob: -4.799211502075195
    5. ' ' → logprob: -6.424211502075195
    6. ':
' → logprob: -6.424211502075195
    7. '    ' → logprob: -6.549211502075195
    8. '):' → logprob: -6.674211502075195
    9. 'if' → logprob: -7.049211502075195
    10. '<|end|>' → logprob: -7.049211502075195

Token 28: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7103424668312073
    2. ':' → logprob: -1.4603424072265625
    3. ' if' → logprob: -1.7103424072265625
    4. '   ' → logprob: -3.2103424072265625
    5. '       ' → logprob: -3.3353424072265625
    6. '    ' → logprob: -4.9603424072265625
    7. ' ' → logprob: -5.4603424072265625
    8. ' :' → logprob: -5.4603424072265625
    9. '<|end|>' → logprob: -5.9603424072265625
    10. ':
' → logprob: -8.460342407226562

Token 29: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0010401944164186716
    2. 'n' → logprob: -6.876039981842041
    3. ' not' → logprob: -13.0010404586792
    4. ' ' → logprob: -13.0010404586792
    5. ' ' → logprob: -13.5010404586792
    6. '	n' → logprob: -14.3760404586792
    7. ' (' → logprob: -14.7510404586792
    8. '(n' → logprob: -14.8760404586792
    9. '(' → logprob: -16.251039505004883
    10. '_n' → logprob: -17.376039505004883

Token 30: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.20144763588905334
    2. '%' → logprob: -1.701447606086731
    3. ' ' → logprob: -10.951447486877441
    4. '%i' → logprob: -11.201447486877441
    5. ' ' → logprob: -13.826447486877441
    6. '%s' → logprob: -14.951447486877441
    7. '%x' → logprob: -15.076447486877441
    8. '%e' → logprob: -15.451447486877441
    9. '%n' → logprob: -15.701447486877441
    10. '%c' → logprob: -15.826447486877441

Token 31: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02975442260503769
    2. ' j' → logprob: -3.529754400253296
    3. ' ' → logprob: -13.154754638671875
    4. '	j' → logprob: -13.404754638671875
    5. '   ' → logprob: -15.029754638671875
    6. '  ' → logprob: -16.404754638671875
    7. '<|end|>' → logprob: -17.029754638671875
    8. '    ' → logprob: -17.279754638671875
    9. '$j' → logprob: -17.279754638671875
    10. '*j' → logprob: -17.529754638671875

Token 32: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06205630302429199
    2. '==' → logprob: -2.812056303024292
    3. '=' → logprob: -10.562056541442871
    4. ' ' → logprob: -10.562056541442871
    5. ' =' → logprob: -10.687056541442871
    6. ')==' → logprob: -12.062056541442871
    7. ')' → logprob: -12.437056541442871
    8. '===' → logprob: -13.437056541442871
    9. ' ===' → logprob: -14.187056541442871
    10. '  ' → logprob: -14.562056541442871

Token 33: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4740773141384125
    2. ' ' → logprob: -0.9740773439407349
    3. ' ' → logprob: -15.849077224731445
    4. '  ' → logprob: -16.349077224731445
    5. '```' → logprob: -17.099077224731445
    6. '<|end|>' → logprob: -17.599077224731445
    7. '=' → logprob: -17.724077224731445
    8. '    ' → logprob: -18.474077224731445
    9. '۰' → logprob: -18.599077224731445
    10. ' ' → logprob: -19.036577224731445

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002185118617489934
    2. ' ' → logprob: -6.127185344696045
    3. '  ' → logprob: -17.877185821533203
    4. '   ' → logprob: -19.252185821533203
    5. '```' → logprob: -19.252185821533203
    6. '۰' → logprob: -19.627185821533203
    7. '

' → logprob: -20.627185821533203
    8. ' ' → logprob: -20.689685821533203
    9. '    ' → logprob: -20.814685821533203
    10. ' ' → logprob: -20.877185821533203

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.856408536899835e-05
    2. '):' → logprob: -10.750028610229492
    3. ':
' → logprob: -12.875028610229492
    4. ' :' → logprob: -13.000028610229492
    5. ':**' → logprob: -13.875028610229492
    6. ':return' → logprob: -14.750028610229492
    7. '       ' → logprob: -15.125028610229492
    8. ' and' → logprob: -15.125028610229492
    9. ',' → logprob: -15.875028610229492
    10. ':def' → logprob: -16.875028610229492

Token 36: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42382803559303284
    2. ':' → logprob: -1.1738280057907104
    3. '       ' → logprob: -4.048828125
    4. ' :' → logprob: -5.298828125
    5. '            ' → logprob: -5.548828125
    6. '        ' → logprob: -5.798828125
    7. ':
' → logprob: -6.798828125
    8. '<|end|>' → logprob: -6.798828125
    9. ' ' → logprob: -6.923828125
    10. '):' → logprob: -7.048828125

Token 37: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.3886139988899231
    2. ' result' → logprob: -1.3886139392852783
    3. '           ' → logprob: -3.0136139392852783
    4. '               ' → logprob: -3.7636139392852783
    5. ' ' → logprob: -10.1386137008667
    6. '            
' → logprob: -10.2636137008667
    7. '       ' → logprob: -10.2636137008667
    8. '[result' → logprob: -10.8886137008667
    9. ',result' → logprob: -11.0136137008667
    10. '                
' → logprob: -11.0136137008667

Token 38: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6961491107940674
    2. '.append' → logprob: -0.6961491107940674
    3. '.extend' → logprob: -5.946148872375488
    4. ' .' → logprob: -7.946148872375488
    5. '.app' → logprob: -11.946148872375488
    6. '.add' → logprob: -12.071148872375488
    7. '.ap' → logprob: -12.071148872375488
    8. '.py' → logprob: -12.446148872375488
    9. '.Append' → logprob: -13.446148872375488
    10. ' .=' → logprob: -14.071148872375488

Token 39: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0002619318547658622
    2. '(' → logprob: -8.250262260437012
    3. 'j' → logprob: -14.875262260437012
    4. '(n' → logprob: -16.125261306762695
    5. '((' → logprob: -16.375261306762695
    6. '(
' → logprob: -16.625261306762695
    7. ' (' → logprob: -18.625261306762695
    8. '[j' → logprob: -19.000261306762695
    9. '(i' → logprob: -19.750261306762695
    10. '	j' → logprob: -19.875261306762695

Token 40: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004105234984308481
    2. ')
' → logprob: -5.504105091094971
    3. ' )' → logprob: -11.379105567932129
    4. '           ' → logprob: -12.129105567932129
    5. ')
' → logprob: -12.254105567932129
    6. '       ' → logprob: -12.879105567932129
    7. '   ' → logprob: -14.504105567932129
    8. ')

' → logprob: -14.504105567932129
    9. ' )
' → logprob: -15.004105567932129
    10. '))' → logprob: -15.504105567932129

Token 41: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006551594007760286
    2. '            
' → logprob: -5.506551742553711
    3. '<|end|>' → logprob: -6.506551742553711
    4. '       ' → logprob: -7.631551742553711
    5. '```' → logprob: -9.131551742553711
    6. '          ' → logprob: -9.881551742553711
    7. '        
' → logprob: -10.006551742553711
    8. '            ' → logprob: -10.131551742553711
    9. '           
' → logprob: -10.381551742553711
    10. '<|end|>' → logprob: -10.381551742553711

Token 42: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10504788905382156
    2. ' if' → logprob: -2.4800479412078857
    3. '           ' → logprob: -4.230047702789307
    4. 'result' → logprob: -6.605047702789307
    5. '```' → logprob: -10.230048179626465
    6. '               ' → logprob: -11.355048179626465
    7. '            
' → logprob: -11.730048179626465
    8. '            ' → logprob: -11.980048179626465
    9. ' result' → logprob: -11.980048179626465
    10. '
' → logprob: -13.605048179626465

Token 43: ' e' (ID: 319)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38692817091941833
    2. ' if' → logprob: -1.1369282007217407
    3. '           ' → logprob: -10.63692855834961
    4. ' ' → logprob: -11.26192855834961
    5. 'result' → logprob: -11.38692855834961
    6. '            ' → logprob: -12.51192855834961
    7. '```' → logprob: -13.76192855834961
    8. ' result' → logprob: -13.88692855834961
    9. '   ' → logprob: -14.51192855834961
    10. '    ' → logprob: -14.76192855834961

Token 44: 'uh' (ID: 4370)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5731108784675598
    2. '           ' → logprob: -1.948110818862915
    3. 'lif' → logprob: -2.073110818862915
    4. 'lse' → logprob: -2.323110818862915
    5. '       ' → logprob: -3.198110818862915
    6. 'lf' → logprob: -4.698111057281494
    7. ' if' → logprob: -4.823111057281494
    8. '        ' → logprob: -5.573111057281494
    9. '```' → logprob: -6.448111057281494
    10. 'f' → logprob: -6.698111057281494

Token 45: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19442887604236603
    2. 'if' → logprob: -1.9444289207458496
    3. '            ' → logprob: -4.06942892074585
    4. '           ' → logprob: -4.56942892074585
    5. ' ' → logprob: -5.81942892074585
    6. '             
' → logprob: -6.69442892074585
    7. 'result' → logprob: -7.69442892074585
    8. '            
' → logprob: -7.69442892074585
    9. '               ' → logprob: -8.069428443908691
    10. '```' → logprob: -8.569428443908691

Token 46: ' parfois' (ID: 44575)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06468334048986435
    2. 'if' → logprob: -2.814683437347412
    3. ' result' → logprob: -6.314683437347412
    4. 'result' → logprob: -7.314683437347412
    5. '```' → logprob: -9.189682960510254
    6. ' ' → logprob: -10.064682960510254
    7. '            ' → logprob: -10.189682960510254
    8. '           ' → logprob: -11.314682960510254
    9. ' ' → logprob: -11.314682960510254
    10. ' n' → logprob: -11.814682960510254

Token 47: ' c' (ID: 274)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.530775249004364
    2. ' if' → logprob: -1.5307753086090088
    3. 'result' → logprob: -2.155775308609009
    4. ' ' → logprob: -2.905775308609009
    5. 'if' → logprob: -5.53077507019043
    6. '    ' → logprob: -5.53077507019043
    7. '```' → logprob: -5.78077507019043
    8. ' resultat' → logprob: -6.03077507019043
    9. ' a' → logprob: -6.53077507019043
    10. ' ,' → logprob: -6.65577507019043

Token 48: ''est' (ID: 6616)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -2.0250132083892822
    2. 'result' → logprob: -2.4000132083892822
    3. '(result' → logprob: -2.5250132083892822
    4. ' result' → logprob: -2.6500132083892822
    5. '```' → logprob: -2.7750132083892822
    6. 'elif' → logprob: -3.0250132083892822
    7. ' ' → logprob: -3.1500132083892822
    8. 'a' → logprob: -3.1500132083892822
    9. ''' → logprob: -3.2750132083892822
    10. '...' → logprob: -3.7750132083892822

Token 49: ' le' (ID: 505)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.9509607553482056
    2. ' not' → logprob: -1.4509607553482056
    3. 'not' → logprob: -1.8259607553482056
    4. 'j' → logprob: -1.9509607553482056
    5. ' different' → logprob: -3.450960636138916
    6. 'different' → logprob: -3.825960636138916
    7. 'n' → logprob: -4.700960636138916
    8. ' n' → logprob: -5.825960636138916
    9. ' différent' → logprob: -5.825960636138916
    10. ' a' → logprob: -5.950960636138916

Token 50: ' même' (ID: 9679)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.49073973298072815
    2. ' /' → logprob: -1.7407397031784058
    3. ' n' → logprob: -2.4907398223876953
    4. 'n' → logprob: -2.8657398223876953
    5. '```' → logprob: -3.8657398223876953
    6. ' result' → logprob: -4.365739822387695
    7. 'result' → logprob: -4.740739822387695
    8. ' j' → logprob: -5.115739822387695
    9. '    ' → logprob: -5.365739822387695
    10. '/n' → logprob: -5.990739822387695

Token 51: ' donc' (ID: 14206)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' faut' (ID: 17821)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02487732470035553
    2. 'if' → logprob: -4.399877548217773
    3. '           ' → logprob: -4.649877548217773
    4. ' continue' → logprob: -6.524877548217773
    5. '               ' → logprob: -7.774877548217773
    6. '```' → logprob: -8.149877548217773
    7. 'continue' → logprob: -9.024877548217773
    8. '            ' → logprob: -9.149877548217773
    9. '       ' → logprob: -9.399877548217773
    10. ' ' → logprob: -10.149877548217773

Token 53: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.44821232557296753
    2. ' pas' → logprob: -1.0732123851776123
    3. 'aj' → logprob: -4.448212146759033
    4. ' ajouter' → logprob: -5.698212146759033
    5. 'append' → logprob: -7.198212146759033
    6. 'a' → logprob: -7.573212146759033
    7. ' aussi' → logprob: -7.573212146759033
    8. ' ' → logprob: -7.698212146759033
    9. '   ' → logprob: -8.448212623596191
    10. 'not' → logprob: -8.573212623596191

Token 54: ' doub' (ID: 12198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4102039933204651
    2. ' if' → logprob: -1.1602039337158203
    3. 'result' → logprob: -4.66020393371582
    4. '   ' → logprob: -5.66020393371582
    5. '           ' → logprob: -5.78520393371582
    6. 'append' → logprob: -6.16020393371582
    7. '.append' → logprob: -6.28520393371582
    8. '    ' → logprob: -7.53520393371582
    9. '```' → logprob: -7.53520393371582
    10. ' result' → logprob: -7.78520393371582

Token 55: 'ler' (ID: 1639)
  Prédit: 'ler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ler' → logprob: -0.02594934031367302
    2. 'le' → logprob: -4.025949478149414
    3. 'er' → logprob: -5.775949478149414
    4. 'l' → logprob: -6.525949478149414
    5. 'pliquer' → logprob: -7.150949478149414
    6. 'li' → logprob: -7.525949478149414
    7. 'iquer' → logprob: -8.025949478149414
    8. '```' → logprob: -8.150949478149414
    9. '   ' → logprob: -8.400949478149414
    10. 'lexer' → logprob: -9.275949478149414

Token 56: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2031194418668747
    2. '       ' → logprob: -2.4531195163726807
    3. ' if' → logprob: -2.8281195163726807
    4. ' ' → logprob: -4.453119277954102
    5. 'if' → logprob: -4.578119277954102
    6. '```' → logprob: -5.703119277954102
    7. '   ' → logprob: -5.953119277954102
    8. '            
' → logprob: -6.078119277954102
    9. '               ' → logprob: -6.578119277954102
    10. '            ' → logprob: -6.578119277954102

Token 57: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4293965995311737
    2. '           ' → logprob: -1.429396629333496
    3. 'if' → logprob: -2.304396629333496
    4. '```' → logprob: -5.804396629333496
    5. '       ' → logprob: -5.929396629333496
    6. '               ' → logprob: -6.304396629333496
    7. '   ' → logprob: -7.304396629333496
    8. ' ' → logprob: -7.429396629333496
    9. '            
' → logprob: -8.554396629333496
    10. ',' → logprob: -8.554396629333496

Token 58: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5761717557907104
    2. ' if' → logprob: -0.8261717557907104
    3. '           ' → logprob: -8.451171875
    4. '```' → logprob: -11.951171875
    5. '            ' → logprob: -12.576171875
    6. '               ' → logprob: -12.701171875
    7. ' ' → logprob: -12.826171875
    8. 'k' → logprob: -14.451171875
    9. '   ' → logprob: -14.951171875
    10. '            
' → logprob: -15.201171875

Token 59: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.049208324402570724
    2. 'j' → logprob: -3.299208402633667
    3. ' n' → logprob: -4.549208164215088
    4. 'n' → logprob: -7.674208164215088
    5. '    ' → logprob: -10.924208641052246
    6. ' (' → logprob: -11.299208641052246
    7. ' ' → logprob: -11.424208641052246
    8. '   ' → logprob: -11.674208641052246
    9. '(j' → logprob: -11.799208641052246
    10. '	j' → logprob: -13.424208641052246

Token 60: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.045730724930763245
    2. '*' → logprob: -3.4207308292388916
    3. ' !=' → logprob: -4.5457305908203125
    4. '**' → logprob: -8.170730590820312
    5. '()!=' → logprob: -8.170730590820312
    6. '!==' → logprob: -8.170730590820312
    7. ']!=' → logprob: -8.545730590820312
    8. '*j' → logprob: -8.920730590820312
    9. '0' → logprob: -10.170730590820312
    10. '"' → logprob: -11.045730590820312

Token 61: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.38696107268333435
    2. 'n' → logprob: -1.1369611024856567
    3. ' ' → logprob: -10.261960983276367
    4. 'int' → logprob: -10.761960983276367
    5. '	n' → logprob: -11.511960983276367
    6. '    ' → logprob: -11.636960983276367
    7. '(n' → logprob: -11.886960983276367
    8. ' int' → logprob: -12.886960983276367
    9. ' ' → logprob: -13.261960983276367
    10. '  ' → logprob: -13.386960983276367

Token 62: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.08136492967605591
    2. '/j' → logprob: -2.706364870071411
    3. '/' → logprob: -4.58136510848999
    4. ' //' → logprob: -6.83136510848999
    5. ' /' → logprob: -11.331364631652832
    6. ' ' → logprob: -11.956364631652832
    7. '```' → logprob: -11.956364631652832
    8. ' ' → logprob: -12.206364631652832
    9. '/js' → logprob: -13.081364631652832
    10. '   ' → logprob: -13.581364631652832

Token 63: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.8921695047756657e-05
    2. ' j' → logprob: -10.500028610229492
    3. '	j' → logprob: -13.625028610229492
    4. '   ' → logprob: -16.125028610229492
    5. '_j' → logprob: -17.000028610229492
    6. ' ' → logprob: -17.750028610229492
    7. '$j' → logprob: -17.875028610229492
    8. '<|end|>' → logprob: -18.125028610229492
    9. '[j' → logprob: -18.375028610229492
    10. '```' → logprob: -18.375028610229492

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029819828923791647
    2. ':
' → logprob: -6.002982139587402
    3. '):' → logprob: -8.627982139587402
    4. '           ' → logprob: -8.752982139587402
    5. ' :' → logprob: -9.627982139587402
    6. '               ' → logprob: -9.627982139587402
    7. '):
' → logprob: -11.377982139587402
    8. ',' → logprob: -12.127982139587402
    9. '<|end|>' → logprob: -12.502982139587402
    10. ')' → logprob: -12.752982139587402

Token 65: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005738823674619198
    2. 'result' → logprob: -8.125574111938477
    3. '           ' → logprob: -8.500574111938477
    4. ' result' → logprob: -9.875574111938477
    5. '              ' → logprob: -12.000574111938477
    6. '                
' → logprob: -12.125574111938477
    7. '```' → logprob: -13.125574111938477
    8. '<|end|>' → logprob: -13.250574111938477
    9. ',result' → logprob: -13.375574111938477
    10. '	           ' → logprob: -14.250574111938477

Token 66: ' result' (ID: 1534)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9230967164039612
    2. 'result' (adapté à ' result') → logprob: -1.5480966567993164
    3. ' result' → logprob: -1.5480966567993164
    4. '                ' → logprob: -2.1730966567993164
    5. '                   ' → logprob: -2.7980966567993164
    6. ' ' → logprob: -6.798096656799316
    7. '                    ' → logprob: -8.173096656799316
    8. '           ' → logprob: -8.548096656799316
    9. '            ' → logprob: -8.673096656799316
    10. '              ' → logprob: -8.798096656799316

Token 67: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002790935104712844
    2. '.' → logprob: -8.250279426574707
    3. '.extend' → logprob: -11.000279426574707
    4. '.app' → logprob: -14.250279426574707
    5. '.setdefault' → logprob: -15.750279426574707
    6. '.Append' → logprob: -16.25027847290039
    7. 'append' → logprob: -16.25027847290039
    8. ' .' → logprob: -16.87527847290039
    9. '.add' → logprob: -17.37527847290039
    10. '.py' → logprob: -18.00027847290039

Token 68: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00861528143286705
    2. '(' → logprob: -4.758615493774414
    3. 'n' → logprob: -14.508615493774414
    4. ' n' → logprob: -16.508615493774414
    5. ' (' → logprob: -16.508615493774414
    6. '(
' → logprob: -16.758615493774414
    7. '((' → logprob: -17.883615493774414
    8. '(

' → logprob: -19.258615493774414
    9. '()' → logprob: -19.758615493774414
    10. '(N' → logprob: -20.008615493774414

Token 69: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.04307512566447258
    2. ' //' → logprob: -3.1680750846862793
    3. '/j' → logprob: -10.293075561523438
    4. '/' → logprob: -10.418075561523438
    5. ' ' → logprob: -12.168075561523438
    6. '   ' → logprob: -12.793075561523438
    7. ' /' → logprob: -13.168075561523438
    8. ')' → logprob: -14.418075561523438
    9. ' ' → logprob: -14.418075561523438
    10. '//=' → logprob: -14.668075561523438

Token 70: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00023071514442563057
    2. ' j' → logprob: -8.37523078918457
    3. '	j' → logprob: -15.62523078918457
    4. '   ' → logprob: -17.37523078918457
    5. '_j' → logprob: -17.87523078918457
    6. ')' → logprob: -19.25023078918457
    7. ' ' → logprob: -19.62523078918457
    8. ',j' → logprob: -20.25023078918457
    9. '*j' → logprob: -20.37523078918457
    10. '$j' → logprob: -20.37523078918457

Token 71: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9504606825648807e-05
    2. ')
' → logprob: -10.875019073486328
    3. ')return' → logprob: -15.750019073486328
    4. '   ' → logprob: -15.875019073486328
    5. ' )' → logprob: -16.375019073486328
    6. '       ' → logprob: -17.375019073486328
    7. '))' → logprob: -17.500019073486328
    8. ')
' → logprob: -17.750019073486328
    9. ')

' → logprob: -18.000019073486328
    10. '')' → logprob: -18.125019073486328

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007082502357661724
    2. '    
' → logprob: -6.257082462310791
    3. 'return' → logprob: -6.257082462310791
    4. '
' → logprob: -6.382082462310791
    5. ' return' → logprob: -6.632082462310791
    6. ' ' → logprob: -9.88208293914795
    7. '	return' → logprob: -10.13208293914795
    8. ':return' → logprob: -10.63208293914795
    9. '```' → logprob: -10.75708293914795
    10. '  
' → logprob: -11.13208293914795

Token 73: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12755580246448517
    2. 'return' → logprob: -2.2525558471679688
    3. ' return' → logprob: -4.377555847167969
    4. ' ' → logprob: -7.127555847167969
    5. '    
' → logprob: -7.127555847167969
    6. ':return' → logprob: -8.752555847167969
    7. '	return' → logprob: -9.627555847167969
    8. '  
' → logprob: -10.127555847167969
    9. '       ' → logprob: -10.252555847167969
    10. '```' → logprob: -10.502555847167969

Token 74: ' bon' (ID: 4846)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39042922854423523
    2. ' return' → logprob: -1.1404292583465576
    3. '   ' → logprob: -6.0154290199279785
    4. 'result' → logprob: -7.6404290199279785
    5. 'sort' → logprob: -8.640429496765137
    6. ' result' → logprob: -8.890429496765137
    7. 'sorted' → logprob: -9.265429496765137
    8. ' ' → logprob: -9.890429496765137
    9. ' sorted' → logprob: -9.890429496765137
    10. ' sort' → logprob: -9.890429496765137

Token 75: ' tant' (ID: 16235)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7765163779258728
    2. ' return' → logprob: -0.7765163779258728
    3. 'return' → logprob: -3.1515164375305176
    4. ' result' → logprob: -3.4015164375305176
    5. 'result' → logprob: -5.776516437530518
    6. '    ' → logprob: -8.02651596069336
    7. '    
' → logprob: -8.65151596069336
    8. '  ' → logprob: -9.27651596069336
    9. ' ' → logprob: -9.90151596069336
    10. ' sort' → logprob: -10.65151596069336

Token 76: ' pis' (ID: 19525)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8169371485710144
    2. 'result' → logprob: -0.8169371485710144
    3. 'return' → logprob: -2.441937208175659
    4. ' result' → logprob: -5.19193696975708
    5. ' return' → logprob: -5.31693696975708
    6. 'def' → logprob: -5.94193696975708
    7. '    ' → logprob: -6.19193696975708
    8. 'u' → logprob: -6.19193696975708
    9. '       ' → logprob: -6.31693696975708
    10. 'is' → logprob: -6.56693696975708

Token 77: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01278697606176138
    2. ' return' → logprob: -4.762786865234375
    3. 'return' → logprob: -5.512786865234375
    4. '<|end|>' → logprob: -9.637786865234375
    5. '    
' → logprob: -10.387786865234375
    6. ' ' → logprob: -11.762786865234375
    7. ':return' → logprob: -12.262786865234375
    8. '    ' → logprob: -12.387786865234375
    9. '	return' → logprob: -12.387786865234375
    10. '  ' → logprob: -12.762786865234375

Token 78: ' le' (ID: 505)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.9983133673667908
    2. 'result' → logprob: -1.2483134269714355
    3. ' la' → logprob: -1.8733134269714355
    4. ' le' → logprob: -2.3733134269714355
    5. 'sorted' → logprob: -3.4983134269714355
    6. ' sorted' → logprob: -3.9983134269714355
    7. ' les' → logprob: -4.7483134269714355
    8. ' l' → logprob: -5.1233134269714355
    9. 'la' → logprob: -5.1233134269714355
    10. ' ' → logprob: -5.3733134269714355

Token 79: ' sort' (ID: 4506)
  Prédit: ' tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tri' → logprob: -0.5936757922172546
    2. 'tri' → logprob: -1.2186758518218994
    3. 'sort' → logprob: -2.8436758518218994
    4. ' sorting' → logprob: -3.7186758518218994
    5. 'result' → logprob: -3.9686758518218994
    6. 'sorting' → logprob: -4.46867561340332
    7. 'return' → logprob: -4.71867561340332
    8. 'sorted' → logprob: -4.96867561340332
    9. ' return' → logprob: -5.09367561340332
    10. ' sort' → logprob: -5.59367561340332

Token 80: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006901620887219906
    2. 'return' → logprob: -5.506901741027832
    3. '(' → logprob: -6.256901741027832
    4. 'result' → logprob: -7.506901741027832
    5. ' return' → logprob: -8.506901741027832
    6. ' result' → logprob: -9.881901741027832
    7. '(result' → logprob: -10.256901741027832
    8. '    
' → logprob: -11.506901741027832
    9. 'eturn' → logprob: -11.506901741027832
    10. '       ' → logprob: -11.631901741027832

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07488454878330231
    2. 'return' → logprob: -3.0748846530914307
    3. ' return' → logprob: -3.8248846530914307
    4. 'result' → logprob: -5.699884414672852
    5. ' result' → logprob: -7.199884414672852
    6. ' ' → logprob: -11.574884414672852
    7. '    
' → logprob: -11.699884414672852
    8. '```' → logprob: -12.074884414672852
    9. '  ' → logprob: -12.199884414672852
    10. '	return' → logprob: -12.699884414672852

Token 82: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5840250849723816
    2. ' return' → logprob: -1.3340251445770264
    3. '   ' → logprob: -2.2090251445770264
    4. 'result' → logprob: -2.8340251445770264
    5. ' result' → logprob: -4.584024906158447
    6. ' ' → logprob: -9.459025382995605
    7. '  ' → logprob: -10.209025382995605
    8. '    ' → logprob: -11.834025382995605
    9. '	return' → logprob: -12.334025382995605
    10. '    
' → logprob: -12.459025382995605

Token 83: ' result' (ID: 1534)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.07961861044168472
    2. ' sorted' → logprob: -2.5796186923980713
    3. 'result' → logprob: -7.329618453979492
    4. ' result' → logprob: -9.829618453979492
    5. '(sorted' → logprob: -11.204618453979492
    6. ' ' → logprob: -13.079618453979492
    7. '   ' → logprob: -13.329618453979492
    8. 'sort' → logprob: -13.954618453979492
    9. '  ' → logprob: -15.204618453979492
    10. '.sorted' → logprob: -15.829618453979492

Token 84: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: 'X' (ID: 55)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04811793193221092
    2. ' =' → logprob: -3.5481178760528564
    3. '=' → logprob: -4.5481181144714355
    4. '.sort' → logprob: -5.4231181144714355
    5. '_' → logprob: -6.0481181144714355
    6. 's' → logprob: -8.798117637634277
    7. 'sort' → logprob: -9.298117637634277
    8. ',' → logprob: -9.423117637634277
    9. ')' → logprob: -9.673117637634277
    10. '_sorted' → logprob: -9.673117637634277

Token 87: ' dict' (ID: 11878)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.7733193635940552
    2. ' ' → logprob: -1.5233193635940552
    3. 'make' → logprob: -2.2733192443847656
    4. 'int' → logprob: -2.6483192443847656
    5. '10' → logprob: -3.2733192443847656
    6. '42' → logprob: -3.5233192443847656
    7. '36' → logprob: -3.7733192443847656
    8. '[' → logprob: -4.148319244384766
    9. ' int' → logprob: -4.523319244384766
    10. '12' → logprob: -5.523319244384766

Token 88: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4171594977378845
    2. '(' → logprob: -1.2921595573425293
    3. '([(' → logprob: -3.2921595573425293
    4. '.from' → logprob: -4.917159557342529
    5. '.setdefault' → logprob: -5.167159557342529
    6. '({' → logprob: -5.417159557342529
    7. '([' → logprob: -5.417159557342529
    8. '(range' → logprob: -6.417159557342529
    9. '[' → logprob: -6.917159557342529
    10. '(sorted' → logprob: -7.542159557342529

Token 89: 'N' (ID: 45)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011038866825401783
    2. 'X' → logprob: -4.886038780212402
    3. ' for' → logprob: -7.011038780212402
    4. '[' → logprob: -7.636038780212402
    5. 'n' → logprob: -7.761038780212402
    6. 'def' → logprob: -8.011038780212402
    7. 'f' → logprob: -8.136038780212402
    8. 'd' → logprob: -8.886038780212402
    9. 'x' → logprob: -8.886038780212402
    10. '<|end|>' → logprob: -9.011038780212402

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04930489510297775
    2. '=' → logprob: -3.049304962158203
    3. ' ' → logprob: -7.549304962158203
    4. '_' → logprob: -9.174304962158203
    5. ',' → logprob: -10.924304962158203
    6. '.' → logprob: -11.174304962158203
    7. '[' → logprob: -11.424304962158203
    8. '  ' → logprob: -11.799304962158203
    9. 's' → logprob: -12.049304962158203
    10. ' =
' → logprob: -12.299304962158203

Token 91: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4927403926849365
    2. '100' → logprob: -1.2427403926849365
    3. '10' → logprob: -2.4927403926849365
    4. '20' → logprob: -5.492740631103516
    5. '50' → logprob: -5.867740631103516
    6. ' int' → logprob: -5.867740631103516
    7. 'int' → logprob: -5.867740631103516
    8. '[int' → logprob: -6.492740631103516
    9. '0' → logprob: -6.742740631103516
    10. '500' → logprob: -7.742740631103516

Token 92: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5765126347541809
    2. '(input' → logprob: -0.8265126347541809
    3. '()' → logprob: -7.951512813568115
    4. '('' → logprob: -8.826512336730957
    5. '(
' → logprob: -10.326512336730957
    6. 'input' → logprob: -10.826512336730957
    7. ' (' → logprob: -12.326512336730957
    8. '("' → logprob: -12.451512336730957
    9. '(int' → logprob: -12.701512336730957
    10. '(

' → logprob: -13.701512336730957

Token 93: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2792905569076538
    2. '())' → logprob: -1.5292905569076538
    3. '(' → logprob: -3.6542906761169434
    4. '('' → logprob: -7.654290676116943
    5. '("' → logprob: -8.404290199279785
    6. '()>' → logprob: -9.029290199279785
    7. '("("' → logprob: -9.154290199279785
    8. '();)' → logprob: -10.279290199279785
    9. '(()' → logprob: -11.279290199279785
    10. '(),' → logprob: -11.404290199279785

Token 94: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09861116856336594
    2. 'for' → logprob: -3.3486111164093018
    3. ' 
' → logprob: -3.3486111164093018
    4. ' for' → logprob: -4.223611354827881
    5. '<|end|>' → logprob: -5.098611354827881
    6. '  
' → logprob: -7.223611354827881
    7. '\n' → logprob: -7.348611354827881
    8. '' → logprob: -7.723611354827881
    9. '
' → logprob: -7.848611354827881
    10. ' ' → logprob: -8.473610877990723

Token 95: ' l' (ID: 305)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9187606573104858
    2. 'for' → logprob: -0.9187606573104858
    3. ' ' → logprob: -1.7937606573104858
    4. '<|end|>' → logprob: -3.7937607765197754
    5. ' 
' → logprob: -5.043760776519775
    6. '<|end|>' → logprob: -5.793760776519775
    7. '
' → logprob: -6.418760776519775
    8. 'n' → logprob: -8.043760299682617
    9. '  
' → logprob: -8.543760299682617
    10. 'X' → logprob: -8.668760299682617

Token 96: ''utilisateur' (ID: 140803)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.4491245746612549
    2. 'ine' → logprob: -2.324124574661255
    3. 'im' → logprob: -2.699124574661255
    4. 'iste' → logprob: -2.949124574661255
    5. 'ines' → logprob: -3.199124574661255
    6. 'imit' → logprob: -3.699124574661255
    7. 'for' → logprob: -4.199124336242676
    8. 'e' → logprob: -4.824124336242676
    9. 'inea' → logprob: -5.199124336242676
    10. '#' → logprob: -5.574124336242676

Token 97: ' doit' (ID: 21822)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04642181098461151
    2. ' for' → logprob: -3.296421766281128
    3. '
' → logprob: -6.171422004699707
    4. 'n' → logprob: -6.921422004699707
    5. 's' → logprob: -7.296422004699707
    6. '.' → logprob: -7.296422004699707
    7. '<|end|>' → logprob: -7.296422004699707
    8. 'pour' → logprob: -8.171422004699707
    9. 'input' → logprob: -8.296422004699707
    10. '.for' → logprob: -8.421422004699707

Token 98: ' donner' (ID: 32394)
  Prédit: 'entr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.21678243577480316
    2. 's' → logprob: -2.466782331466675
    3. ' saisir' → logprob: -2.841782331466675
    4. ' entrer' → logprob: -3.966782331466675
    5. 'enter' → logprob: -4.966782569885254
    6. ' ' → logprob: -5.341782569885254
    7. ' rentrer' → logprob: -5.341782569885254
    8. 'ent' → logprob: -5.466782569885254
    9. 'mettre' → logprob: -5.716782569885254
    10. 'r' → logprob: -6.341782569885254

Token 99: ' N' (ID: 478)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.1881160736083984
    2. ' ' → logprob: -1.5631160736083984
    3. '<|end|>' → logprob: -2.0631160736083984
    4. 'un' → logprob: -2.4381160736083984
    5. ' la' → logprob: -3.0631160736083984
    6. 'the' → logprob: -3.0631160736083984
    7. ' le' → logprob: -3.1881160736083984
    8. 'le' → logprob: -3.4381160736083984
    9. ' the' → logprob: -4.313116073608398
    10. '<|end|>' → logprob: -4.313116073608398

Token 100: ' haha' (ID: 62947)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02893032133579254
    2. '
' → logprob: -3.653930425643921
    3. ' for' → logprob: -6.028930187225342
    4. ' 
' → logprob: -9.6539306640625
    5. 'while' → logprob: -9.6539306640625
    6. '<|end|>' → logprob: -10.7789306640625
    7. 'n' → logprob: -10.9039306640625
    8. 's' → logprob: -11.7789306640625
    9. '
' → logprob: -12.0289306640625
    10. 'X' → logprob: -12.1539306640625

Token 101: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.501629114151001
    2. '
' → logprob: -1.001629114151001
    3. ' for' → logprob: -4.126628875732422
    4. ' 
' → logprob: -4.626628875732422
    5. '
' → logprob: -8.126628875732422
    6. '<|end|>' → logprob: -8.626628875732422
    7. 'n' → logprob: -8.751628875732422
    8. '  
' → logprob: -8.751628875732422
    9. '\n' → logprob: -9.251628875732422
    10. 'X' → logprob: -9.376628875732422

Token 102: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003912311512976885
    2. ' for' → logprob: -8.250391006469727
    3. 'A' → logprob: -9.750391006469727
    4. 'n' → logprob: -11.250391006469727
    5. 'numbers' → logprob: -11.500391006469727
    6. ' 
' → logprob: -11.750391006469727
    7. '[' → logprob: -11.875391006469727
    8. 'a' → logprob: -12.000391006469727
    9. 'arr' → logprob: -12.250391006469727
    10. '
' → logprob: -12.875391006469727

Token 103: ' elem' (ID: 23108)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0062370989471673965
    2. 'i' → logprob: -5.631237030029297
    3. ' _' → logprob: -6.381237030029297
    4. ' k' → logprob: -8.256237030029297
    5. '_' → logprob: -8.506237030029297
    6. ' x' → logprob: -8.881237030029297
    7. ' n' → logprob: -9.256237030029297
    8. ' j' → logprob: -9.881237030029297
    9. ' d' → logprob: -10.006237030029297
    10. ' ' → logprob: -10.256237030029297

Token 104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033700454980134964
    2. 'in' → logprob: -3.408700466156006
    3. ' ' → logprob: -10.033699989318848
    4. ' i' → logprob: -13.158699989318848
    5. 'ine' → logprob: -13.658699989318848
    6. '	in' → logprob: -13.658699989318848
    7. '  ' → logprob: -14.033699989318848
    8. 's' → logprob: -14.158699989318848
    9. '   ' → logprob: -14.283699989318848
    10. 'e' → logprob: -14.658699989318848

Token 105: ' make' (ID: 1520)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8951376080513
    2. ' range' → logprob: -1.2701375484466553
    3. 'make' → logprob: -1.3951375484466553
    4. ' make' → logprob: -2.7701375484466553
    5. ' ' → logprob: -9.895137786865234
    6. 'list' → logprob: -10.395137786865234
    7. '   ' → logprob: -10.645137786865234
    8. '(make' → logprob: -10.770137786865234
    9. '  ' → logprob: -11.270137786865234
    10. ' list' → logprob: -11.520137786865234

Token 106: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -5.5027299822540954e-05
    2. 'div' → logprob: -9.875055313110352
    3. '_' → logprob: -13.375055313110352
    4. '_def' → logprob: -14.500055313110352
    5. '_di' → logprob: -15.500055313110352
    6. '_dist' → logprob: -15.875055313110352
    7. 's' → logprob: -16.00005531311035
    8. '_dis' → logprob: -16.00005531311035
    9. '_d' → logprob: -16.25005531311035
    10. '_del' → logprob: -16.25005531311035

Token 107: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00040481300675310194
    2. 's' → logprob: -9.000404357910156
    3. '   ' → logprob: -9.750404357910156
    4. 'div' → logprob: -10.000404357910156
    5. 'itors' → logprob: -10.125404357910156
    6. 'ors' → logprob: -10.375404357910156
    7. 'tors' → logprob: -10.750404357910156
    8. '(X' → logprob: -11.500404357910156
    9. 'idors' → logprob: -11.500404357910156
    10. '_div' → logprob: -11.750404357910156

Token 108: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -2.816093228830141e-06
    2. 'tors' → logprob: -13.00000286102295
    3. 'ators' → logprob: -16.000001907348633
    4. 's' → logprob: -16.250001907348633
    5. 'iors' → logprob: -17.125001907348633
    6. 'rors' → logprob: -17.375001907348633
    7. 'itors' → logprob: -17.625001907348633
    8. '[' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.250001907348633
    10. 'or' → logprob: -18.250001907348633

Token 109: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.004567899741232395
    2. '(X' → logprob: -5.754568099975586
    3. '(' → logprob: -6.629568099975586
    4. '(n' → logprob: -10.004568099975586
    5. ' (' → logprob: -11.629568099975586
    6. '((' → logprob: -12.004568099975586
    7. '(s' → logprob: -12.379568099975586
    8. '(range' → logprob: -14.004568099975586
    9. '(
' → logprob: -14.504568099975586
    10. 'X' → logprob: -15.129568099975586

Token 110: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -8.876193169271573e-05
    2. '():' → logprob: -9.875088691711426
    3. ')' → logprob: -10.750088691711426
    4. ' ):' → logprob: -11.375088691711426
    5. '):
' → logprob: -13.125088691711426
    6. ':' → logprob: -13.250088691711426
    7. '()' → logprob: -15.375088691711426
    8. ']:' → logprob: -16.375089645385742
    9. '}:' → logprob: -16.875089645385742
    10. '(' → logprob: -17.750089645385742

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025773211382329464
    2. ' ' → logprob: -6.502577304840088
    3. '2' → logprob: -7.377577304840088
    4. '0' → logprob: -7.752577304840088
    5. ')' → logprob: -12.127577781677246
    6. '   ' → logprob: -12.627577781677246
    7. '```' → logprob: -12.877577781677246
    8. '3' → logprob: -13.127577781677246
    9. '  ' → logprob: -13.940077781677246
    10. 'X' → logprob: -14.565077781677246

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00023929782037157565
    2. '():' → logprob: -9.250239372253418
    3. ')' → logprob: -9.500239372253418
    4. ' ):' → logprob: -10.125239372253418
    5. '):
' → logprob: -10.750239372253418
    6. ':' → logprob: -12.125239372253418
    7. '()' → logprob: -14.500239372253418
    8. '}:' → logprob: -15.750239372253418
    9. ']:' → logprob: -16.1252384185791
    10. '(' → logprob: -16.3752384185791

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013214473437983543
    2. ' if' → logprob: -10.00013256072998
    3. ' X' → logprob: -10.25013256072998
    4. '<|end|>' → logprob: -11.50013256072998
    5. 'X' → logprob: -11.62513256072998
    6. ':' → logprob: -11.62513256072998
    7. '    
' → logprob: -11.87513256072998
    8. '```' → logprob: -12.25013256072998
    9. '[' → logprob: -13.37513256072998
    10. '       ' → logprob: -13.50013256072998

Token 114: ' X' (ID: 2127)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7810990810394287
    2. '   ' → logprob: -0.9060990810394287
    3. 'if' → logprob: -2.5310990810394287
    4. ' X' → logprob: -3.5310990810394287
    5. 'X' (adapté à ' X') → logprob: -3.6560990810394287
    6. '    ' → logprob: -6.406099319458008
    7. ' for' → logprob: -7.656099319458008
    8. ' ' → logprob: -7.781099319458008
    9. 'for' → logprob: -8.781099319458008
    10. 'print' → logprob: -8.906099319458008

Token 115: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.511406809295295e-06
    2. '.setdefault' → logprob: -13.875006675720215
    3. '[int' → logprob: -14.000006675720215
    4. '[f' → logprob: -14.125006675720215
    5. ' [' → logprob: -14.250006675720215
    6. '[len' → logprob: -14.375006675720215
    7. '[e' → logprob: -14.750006675720215
    8. '[obj' → logprob: -15.250006675720215
    9. '[element' → logprob: -15.375006675720215
    10. '[...]' → logprob: -15.375006675720215

Token 116: 'elem' (ID: 35287)
  Prédit: 'elem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elem' → logprob: -2.176947600673884e-05
    2. '(elem' → logprob: -11.250021934509277
    3. ' elem' → logprob: -12.125021934509277
    4. 'ele' → logprob: -13.375021934509277
    5. '	elem' → logprob: -13.875021934509277
    6. 'str' → logprob: -14.750021934509277
    7. '(' → logprob: -16.25002098083496
    8. '[' → logprob: -16.25002098083496
    9. 'N' → logprob: -16.75002098083496
    10. 'X' → logprob: -16.87502098083496

Token 117: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006459566066041589
    2. ']=' → logprob: -7.375646114349365
    3. ' ]' → logprob: -11.500645637512207
    4. '=' → logprob: -12.250645637512207
    5. ']+=' → logprob: -12.750645637512207
    6. ')' → logprob: -14.000645637512207
    7. ' =' → logprob: -14.875645637512207
    8. '+' → logprob: -16.125646591186523
    9. ']=(' → logprob: -16.875646591186523
    10. '1' → logprob: -16.875646591186523

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0486002042889595
    2. ' =' → logprob: -3.048600196838379
    3. '+=' → logprob: -11.548600196838379
    4. ' +=' → logprob: -13.173600196838379
    5. ' ' → logprob: -15.048600196838379
    6. '=

' → logprob: -15.048600196838379
    7. '=True' → logprob: -15.548600196838379
    8. '=
' → logprob: -16.548601150512695
    9. '=}' → logprob: -16.798601150512695
    10. '=None' → logprob: -17.173601150512695

Token 119: ' ' (ID: 220)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.0039935111999512
    2. 'True' → logprob: -1.1289935111999512
    3. '1' → logprob: -1.6289935111999512
    4. '0' → logprob: -2.628993511199951
    5. 'N' → logprob: -4.253993511199951
    6. 'False' → logprob: -4.253993511199951
    7. '(X' → logprob: -5.503993511199951
    8. '(' → logprob: -6.253993511199951
    9. '(N' → logprob: -6.503993511199951
    10. 'elem' → logprob: -6.878993511199951

Token 120: '1' (ID: 16)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.6484605073928833
    2. 'X' → logprob: -1.0234605073928833
    3. '1' → logprob: -2.3984603881835938
    4. 'N' → logprob: -4.648460388183594
    5. 'False' → logprob: -5.523460388183594
    6. '(X' → logprob: -5.523460388183594
    7. '0' → logprob: -5.773460388183594
    8. '(' → logprob: -6.148460388183594
    9. '(True' → logprob: -6.523460388183594
    10. '(N' → logprob: -6.773460388183594

Token 121: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8376332521438599
    2. '
' → logprob: -1.0876332521438599
    3. '<|end|>' → logprob: -2.3376331329345703
    4. ' for' → logprob: -2.4626331329345703
    5. '

' → logprob: -4.33763313293457
    6. ' 
' → logprob: -4.46263313293457
    7. ' ' → logprob: -4.96263313293457
    8. '  
' → logprob: -5.33763313293457
    9. '    
' → logprob: -5.33763313293457
    10. '\n' → logprob: -6.33763313293457

Token 122: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06210000067949295
    2. ' for' → logprob: -3.4370999336242676
    3. '
' → logprob: -3.6870999336242676
    4. '<|end|>' → logprob: -6.812099933624268
    5. ' 
' → logprob: -7.062099933624268
    6. ' ' → logprob: -7.687099933624268
    7. '+' → logprob: -9.187100410461426
    8. '\n' → logprob: -9.312100410461426
    9. '  
' → logprob: -9.562100410461426
    10. '```' → logprob: -9.687100410461426

Token 123: ' Bon' (ID: 12658)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14307434856891632
    2. ' for' → logprob: -2.0180742740631104
    3. 'elem' → logprob: -9.518074035644531
    4. 'print' → logprob: -9.768074035644531
    5. 'def' → logprob: -9.893074035644531
    6. 'from' → logprob: -10.893074035644531
    7. 'i' → logprob: -11.018074035644531
    8. 'X' → logprob: -11.268074035644531
    9. 'M' → logprob: -11.518074035644531
    10. '#' → logprob: -11.518074035644531

Token 124: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026514507830142975
    2. ' for' → logprob: -3.6515145301818848
    3. '
' → logprob: -8.651514053344727
    4. '```' → logprob: -11.526514053344727
    5. 'elem' → logprob: -11.651514053344727
    6. 'n' → logprob: -12.026514053344727
    7. 'div' → logprob: -12.776514053344727
    8. 'def' → logprob: -13.026514053344727
    9. 'i' → logprob: -13.401514053344727
    10. 'm' → logprob: -14.151514053344727

Token 125: ' ici' (ID: 27994)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014251062646508217
    2. ' for' → logprob: -4.514251232147217
    3. 'M' → logprob: -6.139251232147217
    4. 'm' → logprob: -8.514250755310059
    5. 'from' → logprob: -8.889250755310059
    6. 'import' → logprob: -9.389250755310059
    7. ' M' → logprob: -9.389250755310059
    8. 'Y' → logprob: -9.514250755310059
    9. 'i' → logprob: -9.764250755310059
    10. 'div' → logprob: -10.014250755310059

Token 126: ' faut' (ID: 17821)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04305296763777733
    2. ' for' → logprob: -3.168052911758423
    3. 'print' → logprob: -11.543052673339844
    4. '
' → logprob: -11.918052673339844
    5. 'while' → logprob: -12.168052673339844
    6. ':' → logprob: -12.293052673339844
    7. 'i' → logprob: -12.543052673339844
    8. '   ' → logprob: -12.793052673339844
    9. 'result' → logprob: -12.918052673339844
    10. ',' → logprob: -12.918052673339844

Token 127: ' traiter' (ID: 105852)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39312946796417236
    2. ' for' → logprob: -1.1431294679641724
    3. '   ' → logprob: -5.643129348754883
    4. ' ' → logprob: -7.143129348754883
    5. '#' → logprob: -8.018129348754883
    6. 'faire' → logprob: -8.768129348754883
    7. ' continuer' → logprob: -8.893129348754883
    8. ' que' → logprob: -9.518129348754883
    9. 'return' → logprob: -9.768129348754883
    10. ':' → logprob: -9.768129348754883

Token 128: ' N' (ID: 478)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4288121163845062
    2. ' for' → logprob: -1.0538121461868286
    3. 'div' → logprob: -10.678812026977539
    4. '```' → logprob: -10.678812026977539
    5. 'def' → logprob: -11.428812026977539
    6. '.' → logprob: -12.178812026977539
    7. 'result' → logprob: -12.428812026977539
    8. 'diff' → logprob: -12.553812026977539
    9. 'import' → logprob: -12.928812026977539
    10. 'possible' → logprob: -13.053812026977539

Token 129: ' aussi' (ID: 9894)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013958864845335484
    2. ' for' → logprob: -4.513958930969238
    3. '-' → logprob: -6.388958930969238
    4. 'div' → logprob: -7.263958930969238
    5. 'def' → logprob: -8.013958930969238
    6. 'from' → logprob: -10.013958930969238
    7. '#' → logprob: -10.138958930969238
    8. 'while' → logprob: -10.763958930969238
    9. ' -' → logprob: -11.013958930969238
    10. '.' → logprob: -11.638958930969238

Token 130: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.215330409351736e-05
    2. ' for' → logprob: -10.125041961669922
    3. '
' → logprob: -14.375041961669922
    4. 'div' → logprob: -14.625041961669922
    5. 'X' → logprob: -15.000041961669922
    6. 'if' → logprob: -15.625041961669922
    7. '.' → logprob: -16.125041961669922
    8. 'from' → logprob: -16.250041961669922
    9. 'elem' → logprob: -16.375041961669922
    10. ';' → logprob: -17.625041961669922

Token 131: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.061054359131958e-06
    2. ' for' → logprob: -11.750007629394531
    3. '
' → logprob: -15.625007629394531
    4. 'from' → logprob: -18.12500762939453
    5. '```' → logprob: -18.25000762939453
    6. 'if' → logprob: -18.37500762939453
    7. '<|end|>' → logprob: -19.75000762939453
    8. '#' → logprob: -20.25000762939453
    9. ';' → logprob: -20.37500762939453
    10. '	for' → logprob: -20.87500762939453

Token 132: ' y' (ID: 342)
  Prédit: ' elem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elem' → logprob: -0.4037321209907532
    2. 'elem' → logprob: -1.1537320613861084
    3. ' d' → logprob: -4.4037322998046875
    4. 'd' → logprob: -6.5287322998046875
    5. ' i' → logprob: -6.7787322998046875
    6. 'div' → logprob: -7.5287322998046875
    7. ' div' → logprob: -7.7787322998046875
    8. 'i' → logprob: -8.903732299804688
    9. ' x' → logprob: -9.028732299804688
    10. ' k' → logprob: -9.278732299804688

Token 133: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02332082949578762
    2. 'in' → logprob: -3.7733209133148193
    3. ' ' → logprob: -9.773321151733398
    4. '  ' → logprob: -12.273321151733398
    5. ',' → logprob: -12.398321151733398
    6. '   ' → logprob: -12.773321151733398
    7. '	in' → logprob: -13.898321151733398
    8. 'd' → logprob: -14.398321151733398
    9. 'y' → logprob: -14.648321151733398
    10. 'range' → logprob: -14.773321151733398

Token 134: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.421485036611557
    2. ' range' → logprob: -2.04648494720459
    3. 'range' → logprob: -2.17148494720459
    4. ' make' → logprob: -2.29648494720459
    5. '[' → logprob: -10.54648494720459
    6. ' ' → logprob: -10.79648494720459
    7. '(make' → logprob: -10.79648494720459
    8. 'X' → logprob: -11.79648494720459
    9. '  ' → logprob: -11.79648494720459
    10. '   ' → logprob: -11.79648494720459

Token 135: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -1.676292231422849e-05
    2. 'div' → logprob: -11.000017166137695
    3. '_dist' → logprob: -17.875017166137695
    4. '_' → logprob: -17.875017166137695
    5. '_dis' → logprob: -17.875017166137695
    6. '_def' → logprob: -17.875017166137695
    7. '_di' → logprob: -18.750017166137695
    8. '_DIV' → logprob: -19.000017166137695
    9. '<div' → logprob: -19.125017166137695
    10. '_d' → logprob: -19.250017166137695

Token 136: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0180400088429451
    2. 'ors' → logprob: -4.268040180206299
    3. 's' → logprob: -5.768040180206299
    4. 'tors' → logprob: -8.01803970336914
    5. 'itors' → logprob: -9.51803970336914
    6. '(N' → logprob: -9.64303970336914
    7. 'n' → logprob: -9.76803970336914
    8. 'ators' → logprob: -10.26803970336914
    9. 'N' → logprob: -10.39303970336914
    10. 'iors' → logprob: -10.89303970336914

Token 137: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.38185828924179077
    2. 's' → logprob: -1.3818583488464355
    3. 'tors' → logprob: -2.7568583488464355
    4. 'ators' → logprob: -7.2568583488464355
    5. 'rors' → logprob: -7.5068583488464355
    6. 'n' → logprob: -7.8818583488464355
    7. '   ' → logprob: -8.631857872009277
    8. 'rs' → logprob: -9.506857872009277
    9. 'eurs' → logprob: -9.881857872009277
    10. 'se' → logprob: -9.881857872009277

Token 138: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.004634588025510311
    2. '(' → logprob: -5.379634380340576
    3. '((' → logprob: -12.004634857177734
    4. '(n' → logprob: -12.129634857177734
    5. '(
' → logprob: -14.004634857177734
    6. ' (' → logprob: -14.004634857177734
    7. '(X' → logprob: -14.254634857177734
    8. '(int' → logprob: -16.129634857177734
    9. '(y' → logprob: -16.879634857177734
    10. '()' → logprob: -17.129634857177734

Token 139: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004749915096908808
    2. '):
' → logprob: -5.754749774932861
    3. ')' → logprob: -7.629749774932861
    4. '()' → logprob: -8.37975025177002
    5. '():' → logprob: -8.62975025177002
    6. '   ' → logprob: -9.00475025177002
    7. '(' → logprob: -9.12975025177002
    8. '+' → logprob: -9.37975025177002
    9. ' ):' → logprob: -9.62975025177002
    10. '(N' → logprob: -9.62975025177002

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006908706855028868
    2. ':' → logprob: -7.875690937042236
    3. '       ' → logprob: -9.125690460205078
    4. ' if' → logprob: -9.500690460205078
    5. '[' → logprob: -10.500690460205078
    6. ':
' → logprob: -10.750690460205078
    7. '<|end|>' → logprob: -11.000690460205078
    8. '    
' → logprob: -11.625690460205078
    9. 'if' → logprob: -11.750690460205078
    10. '	if' → logprob: -11.750690460205078

Token 141: ' n' (ID: 297)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.042354147881269455
    2. '   ' → logprob: -3.417354106903076
    3. 'if' → logprob: -4.917354106903076
    4. ' X' → logprob: -6.792354106903076
    5. ' if' → logprob: -9.167354583740234
    6. ' ' → logprob: -10.167354583740234
    7. '       ' → logprob: -10.292354583740234
    8. 'print' → logprob: -10.542354583740234
    9. 'Y' → logprob: -12.042354583740234
    10. 'for' → logprob: -12.167354583740234

Token 142: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4193269908428192
    2. '=' → logprob: -1.2943270206451416
    3. 'y' → logprob: -4.1693267822265625
    4. 'if' → logprob: -4.6693267822265625
    5. 'ow' → logprob: -4.7943267822265625
    6. 'ot' → logprob: -5.0443267822265625
    7. 'X' → logprob: -5.1693267822265625
    8. 'um' → logprob: -5.4193267822265625
    9. 'o' → logprob: -5.5443267822265625
    10. 'ame' → logprob: -5.9193267822265625

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1643611490726471
    2. '=' → logprob: -2.0393612384796143
    3. 'y' → logprob: -4.914361000061035
    4. '   ' → logprob: -5.164361000061035
    5. 'ew' → logprob: -5.914361000061035
    6. '=y' → logprob: -7.039361000061035
    7. 'X' → logprob: -7.289361000061035
    8. 'um' → logprob: -7.289361000061035
    9. ',' → logprob: -7.539361000061035
    10. ' ' → logprob: -7.789361000061035

Token 144: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.21766185760498047
    2. 'y' → logprob: -2.0926618576049805
    3. ' y' → logprob: -3.4676618576049805
    4. ' N' → logprob: -3.5926618576049805
    5. '(y' → logprob: -4.9676618576049805
    6. '(N' → logprob: -6.0926618576049805
    7. ' (' → logprob: -6.2176618576049805
    8. 'X' → logprob: -6.7176618576049805
    9. ' ' → logprob: -8.46766185760498
    10. '   ' → logprob: -8.59266185760498

Token 145: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7471060156822205
    2. '//' → logprob: -1.1221060752868652
    3. ' //' → logprob: -1.9971060752868652
    4. ' -' → logprob: -3.4971060752868652
    5. '%' → logprob: -4.247106075286865
    6. '-y' → logprob: -4.747106075286865
    7. 'y' → logprob: -6.372106075286865
    8. ' y' → logprob: -6.372106075286865
    9. '#' → logprob: -6.372106075286865
    10. '+' → logprob: -6.497106075286865

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07719080150127411
    2. 'while' → logprob: -3.32719087600708
    3. ' while' → logprob: -4.45219087600708
    4. '//' → logprob: -4.95219087600708
    5. ' y' → logprob: -5.32719087600708
    6. 'y' → logprob: -5.70219087600708
    7. ' //' → logprob: -5.95219087600708
    8. 'for' → logprob: -6.57719087600708
    9. '
' → logprob: -6.70219087600708
    10. 'if' → logprob: -6.82719087600708

Token 147: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.056413304060697556
    2. ' while' → logprob: -3.306413412094116
    3. 'y' → logprob: -5.306413173675537
    4. 'x' → logprob: -5.806413173675537
    5. 'for' → logprob: -5.931413173675537
    6. '   ' → logprob: -6.806413173675537
    7. '//' → logprob: -7.056413173675537
    8. 'count' → logprob: -7.056413173675537
    9. 'cnt' → logprob: -7.056413173675537
    10. 'c' → logprob: -7.306413173675537

Token 148: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5427021980285645
    2. 'y' → logprob: -1.5427021980285645
    3. 'n' → logprob: -2.6677021980285645
    4. ' n' → logprob: -2.7927021980285645
    5. '(y' → logprob: -3.6677021980285645
    6. 'N' → logprob: -3.9177021980285645
    7. '(n' → logprob: -4.5427021980285645
    8. ' (' → logprob: -4.7927021980285645
    9. ' N' → logprob: -5.0427021980285645
    10. 'X' → logprob: -6.7927021980285645

Token 149: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.2726932764053345
    2. '%' → logprob: -1.5226932764053345
    3. '!=' → logprob: -2.147693157196045
    4. ' ==' → logprob: -2.272693157196045
    5. ' %' → logprob: -2.397693157196045
    6. '==' → logprob: -3.022693157196045
    7. ' >' → logprob: -3.272693157196045
    8. ' not' → logprob: -3.397693157196045
    9. '>' → logprob: -4.022693157196045
    10. ' in' → logprob: -4.272693157196045

Token 150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10251308232545853
    2. 'N' → logprob: -2.477513074874878
    3. 'n' → logprob: -4.977513313293457
    4. ' ' → logprob: -5.352513313293457
    5. '0' → logprob: -6.727513313293457
    6. ' N' → logprob: -7.477513313293457
    7. ' n' → logprob: -9.602513313293457
    8. '2' → logprob: -11.477513313293457
    9. '   ' → logprob: -12.915013313293457
    10. '100' → logprob: -13.290013313293457

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5075787901878357
    2. 'N' → logprob: -1.0075788497924805
    3. '0' → logprob: -3.6325788497924805
    4. 'n' → logprob: -5.1325788497924805
    5. 'y' → logprob: -8.25757884979248
    6. ' ' → logprob: -8.50757884979248
    7. '2' → logprob: -9.75757884979248
    8. ' N' → logprob: -10.25757884979248
    9. '   ' → logprob: -11.75757884979248
    10. '100' → logprob: -12.32007884979248

Token 152: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.031309351325035095
    2. ':
' → logprob: -3.5313093662261963
    3. ' or' → logprob: -6.781309127807617
    4. '   ' → logprob: -9.156309127807617
    5. ' :' → logprob: -9.281309127807617
    6. ':return' → logprob: -9.531309127807617
    7. '       ' → logprob: -9.656309127807617
    8. ' and' → logprob: -10.031309127807617
    9. ' continue' → logprob: -11.656309127807617
    10. ' :
' → logprob: -11.781309127807617

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011585070751607418
    2. 'continue' → logprob: -5.261585235595703
    3. ' continue' → logprob: -5.386585235595703
    4. ':' → logprob: -7.636585235595703
    5. '   ' → logprob: -7.636585235595703
    6. '	continue' → logprob: -8.386585235595703
    7. '           ' → logprob: -9.261585235595703
    8. ':
' → logprob: -9.261585235595703
    9. '
' → logprob: -9.761585235595703
    10. 'n' → logprob: -10.136585235595703

Token 154: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.07420410960912704
    2. '   ' → logprob: -2.824204206466675
    3. ' continue' → logprob: -4.699203968048096
    4. 'print' → logprob: -6.449203968048096
    5. '       ' → logprob: -6.949203968048096
    6. 'pass' → logprob: -9.199204444885254
    7. 'X' → logprob: -9.449204444885254
    8. '	continue' → logprob: -9.449204444885254
    9. 'n' → logprob: -9.574204444885254
    10. ' ' → logprob: -9.699204444885254

Token 155: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013265990652143955
    2. '
' → logprob: -4.888266086578369
    3. '    
' → logprob: -6.013266086578369
    4. ':' → logprob: -6.638266086578369
    5. '       ' → logprob: -7.263266086578369
    6. 'n' → logprob: -7.638266086578369
    7. '        
' → logprob: -9.138265609741211
    8. 'for' → logprob: -9.513265609741211
    9. 'while' → logprob: -9.513265609741211
    10. '    ' → logprob: -9.638265609741211

Token 156: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032513633370399475
    2. 'n' → logprob: -3.6575136184692383
    3. 'y' → logprob: -7.032513618469238
    4. '    
' → logprob: -7.157513618469238
    5. 'while' → logprob: -7.157513618469238
    6. '
' → logprob: -7.282513618469238
    7. ' y' → logprob: -7.407513618469238
    8. 'if' → logprob: -7.657513618469238
    9. 'for' → logprob: -7.782513618469238
    10. ' n' → logprob: -8.157513618469238

Token 157: '1' (ID: 16)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3037383556365967
    2. 'n' → logprob: -2.4287383556365967
    3. 'for' → logprob: -2.6787383556365967
    4. '   ' → logprob: -3.3037383556365967
    5. 'X' → logprob: -3.4287383556365967
    6. 'while' → logprob: -4.053738594055176
    7. '#' → logprob: -4.928738594055176
    8. 'y' → logprob: -5.303738594055176
    9. 'if' → logprob: -5.928738594055176
    10. 'print' → logprob: -7.178738594055176

Token 158: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2701134979724884
    2. '
' → logprob: -1.895113468170166
    3. '    
' → logprob: -3.270113468170166
    4. ':' → logprob: -4.520113468170166
    5. 'for' → logprob: -5.270113468170166
    6. ' for' → logprob: -5.395113468170166
    7. ')' → logprob: -5.520113468170166
    8. '  ' → logprob: -5.645113468170166
    9. '       ' → logprob: -5.895113468170166
    10. ':
' → logprob: -6.145113468170166

Token 159: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.5612151622772217
    2. 'est' → logprob: -0.9362151622772217
    3. 'ont' → logprob: -4.311215400695801
    4. 'continue' → logprob: -4.311215400695801
    5. '#' → logprob: -5.561215400695801
    6. 'e' → logprob: -6.311215400695801
    7. '   ' → logprob: -7.311215400695801
    8. ''' → logprob: -7.311215400695801
    9. 'contin' → logprob: -7.436215400695801
    10. 'on' → logprob: -8.0612154006958

Token 160: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.6558087468147278
    2. 'tr' → logprob: -2.155808687210083
    3. 't' → logprob: -2.280808687210083
    4. 'b' → logprob: -2.280808687210083
    5. 'le' → logprob: -3.405808687210083
    6. 'inut' → logprob: -3.905808687210083
    7. 'un' → logprob: -4.280808925628662
    8. 'nul' → logprob: -4.280808925628662
    9. 'tout' → logprob: -4.530808925628662
    10. 'la' → logprob: -4.905808925628662

Token 161: ' intéressant' (ID: 95099)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.3521159291267395
    2. 'div' → logprob: -1.8521158695220947
    3. 'le' → logprob: -2.7271158695220947
    4. 'a' → logprob: -3.9771158695220947
    5. 'bon' → logprob: -3.9771158695220947
    6. ' un' → logprob: -4.852116107940674
    7. 'la' → logprob: -4.852116107940674
    8. 'une' → logprob: -5.602116107940674
    9. 'valid' → logprob: -6.227116107940674
    10. 'à' → logprob: -6.602116107940674

Token 162: ' là' (ID: 8052)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010897843167185783
    2. 'n' → logprob: -5.510897636413574
    3. '
' → logprob: -6.385897636413574
    4. '    
' → logprob: -7.135897636413574
    5. 'while' → logprob: -7.135897636413574
    6. 'for' → logprob: -7.260897636413574
    7. '  ' → logprob: -7.385897636413574
    8. ' for' → logprob: -7.510897636413574
    9. '       ' → logprob: -7.885897636413574
    10. ' while' → logprob: -8.135897636413574

Token 163: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023534069769084454
    2. 'n' → logprob: -7.627353191375732
    3. '  ' → logprob: -7.627353191375732
    4. '
' → logprob: -7.752353191375732
    5. '    
' → logprob: -7.877353191375732
    6. '<|end|>' → logprob: -8.62735366821289
    7. 'for' → logprob: -9.62735366821289
    8. ' for' → logprob: -9.75235366821289
    9. 'while' → logprob: -9.75235366821289
    10. ' while' → logprob: -10.25235366821289

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014861736446619034
    2. ' while' → logprob: -5.639861583709717
    3. 'n' → logprob: -5.889861583709717
    4. 'while' → logprob: -6.139861583709717
    5. '
' → logprob: -6.264861583709717
    6. '    
' → logprob: -6.514861583709717
    7. ' for' → logprob: -6.764861583709717
    8. ' n' → logprob: -7.639861583709717
    9. 'for' → logprob: -7.764861583709717
    10. ' y' → logprob: -8.514862060546875

Token 165: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8130652904510498
    2. 'while' (adapté à ' while') → logprob: -1.0630652904510498
    3. '   ' → logprob: -1.6880652904510498
    4. 'n' → logprob: -4.313065528869629
    5. 'if' → logprob: -5.688065528869629
    6. '    
' → logprob: -5.938065528869629
    7. ' if' → logprob: -6.438065528869629
    8. '
' → logprob: -6.688065528869629
    9. ' n' → logprob: -6.938065528869629
    10. '    ' → logprob: -6.938065528869629

Token 166: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25201156735420227
    2. ' n' → logprob: -1.5020115375518799
    3. '(n' → logprob: -9.6270112991333
    4. '	n' → logprob: -11.5020112991333
    5. 'True' → logprob: -13.3770112991333
    6. ' (' → logprob: -13.7520112991333
    7. 'N' → logprob: -13.8770112991333
    8. ' ' → logprob: -14.1270112991333
    9. '
' → logprob: -15.2520112991333
    10. ')n' → logprob: -15.3770112991333

Token 167: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. '%' → logprob: -13.625001907348633
    3. '۲' → logprob: -15.875001907348633
    4. '₂' → logprob: -16.000001907348633
    5. ' ' → logprob: -16.625001907348633
    6. '   ' → logprob: -16.875001907348633
    7. '```' → logprob: -17.250001907348633
    8. '²' → logprob: -18.000001907348633
    9. 'n' → logprob: -18.062501907348633
    10. ' %' → logprob: -18.125001907348633

Token 168: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3133985996246338
    2. ' %' → logprob: -1.3133985996246338
    3. '%e' → logprob: -10.188398361206055
    4. '%s' → logprob: -10.313398361206055
    5. '%x' → logprob: -10.938398361206055
    6. '%d' → logprob: -11.063398361206055
    7. '%i' → logprob: -11.688398361206055
    8. '%b' → logprob: -12.188398361206055
    9. '%m' → logprob: -12.188398361206055
    10. '%n' → logprob: -12.938398361206055

Token 169: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004907185211777687
    2. ' y' → logprob: -7.625490665435791
    3. '   ' → logprob: -13.25049114227295
    4. '(y' → logprob: -15.12549114227295
    5. '  ' → logprob: -16.250490188598633
    6. '2' → logprob: -16.250490188598633
    7. '	y' → logprob: -16.500490188598633
    8. 'x' → logprob: -16.625490188598633
    9. '    ' → logprob: -16.625490188598633
    10. ' ' → logprob: -17.000490188598633

Token 170: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12766104936599731
    2. ' ==' → logprob: -2.1276609897613525
    3. '0' → logprob: -7.377661228179932
    4. '=' → logprob: -9.752660751342773
    5. '==
' → logprob: -10.877660751342773
    6. ' ' → logprob: -11.877660751342773
    7. '===' → logprob: -11.877660751342773
    8. '```' → logprob: -12.127660751342773
    9. '**' → logprob: -13.127660751342773
    10. ')==' → logprob: -14.002660751342773

Token 171: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.50020408630371
    4. '  ' → logprob: -16.62520408630371
    5. '1' → logprob: -17.87520408630371
    6. '    ' → logprob: -17.87520408630371
    7. '```' → logprob: -18.37520408630371
    8. '2' → logprob: -18.68770408630371
    9. '۰' → logprob: -19.31270408630371
    10. 'y' → logprob: -19.68770408630371

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.250036239624023
    3. '1' → logprob: -16.187536239624023
    4. '2' → logprob: -16.437536239624023
    5. '   ' → logprob: -17.187536239624023
    6. 'y' → logprob: -17.250036239624023
    7. '  ' → logprob: -17.312536239624023
    8. '```' → logprob: -17.750036239624023
    9. '۰' → logprob: -18.062536239624023
    10. '    ' → logprob: -18.437536239624023

Token 173: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38771507143974304
    2. ':
' → logprob: -1.1377151012420654
    3. ' and' → logprob: -7.637714862823486
    4. '       ' → logprob: -8.762715339660645
    5. '   ' → logprob: -9.887715339660645
    6. 'and' → logprob: -10.137715339660645
    7. '):
' → logprob: -10.137715339660645
    8. ' :
' → logprob: -10.387715339660645
    9. ' :' → logprob: -11.137715339660645
    10. ':n' → logprob: -12.012715339660645

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19201470911502838
    2. ' n' → logprob: -2.067014694213867
    3. 'n' → logprob: -3.067014694213867
    4. '   ' → logprob: -6.567014694213867
    5. '	n' → logprob: -9.192014694213867
    6. ' ' → logprob: -10.692014694213867
    7. '```' → logprob: -11.817014694213867
    8. '
' → logprob: -11.942014694213867
    9. ' ' → logprob: -12.192014694213867
    10. '           ' → logprob: -12.317014694213867

Token 175: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.07129939645528793
    2. ' n' → logprob: -2.6962993144989014
    3. '   ' → logprob: -7.0712995529174805
    4. '       ' → logprob: -7.6962995529174805
    5. 'y' → logprob: -10.94629955291748
    6. '	n' → logprob: -11.44629955291748
    7. ' y' → logprob: -11.69629955291748
    8. '    ' → logprob: -11.82129955291748
    9. '           ' → logprob: -12.19629955291748
    10. ' ' → logprob: -12.94629955291748

Token 176: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.375000953674316
    3. '₂' → logprob: -15.500000953674316
    4. ' ' → logprob: -15.625000953674316
    5. '   ' → logprob: -16.875
    6. '۲' → logprob: -17.75
    7. '２' → logprob: -18.5
    8. '²' → logprob: -18.75
    9. ' /=' → logprob: -19.125
    10. '```' → logprob: -19.25

Token 177: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.3917766809463501
    2. '//=' → logprob: -1.14177668094635
    3. ' /=' → logprob: -5.6417765617370605
    4. '//' → logprob: -7.8917765617370605
    5. '/=' → logprob: -7.8917765617370605
    6. ' =' → logprob: -8.016777038574219
    7. '=' → logprob: -8.266777038574219
    8. ' ' → logprob: -12.766777038574219
    9. 'div' → logprob: -13.016777038574219
    10. '   ' → logprob: -13.016777038574219

Token 178: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009124171338044107
    2. '=y' → logprob: -7.000912189483643
    3. 'y' → logprob: -14.7509126663208
    4. '=}' → logprob: -15.6259126663208
    5. '=

' → logprob: -15.7509126663208
    6. '=n' → logprob: -17.250911712646484
    7. '=_' → logprob: -17.375911712646484
    8. ' y' → logprob: -17.625911712646484
    9. '=
' → logprob: -18.000911712646484
    10. '=/' → logprob: -18.250911712646484

Token 179: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00033546582562848926
    2. ' y' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.125335693359375
    4. '	y' → logprob: -18.375335693359375
    5. '2' → logprob: -20.750335693359375
    6. '10' → logprob: -21.250335693359375
    7. 'x' → logprob: -21.625335693359375
    8. ' ' → logprob: -21.750335693359375
    9. ''y' → logprob: -22.125335693359375
    10. '       ' → logprob: -22.250335693359375

Token 180: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3252805471420288
    2. 'X' → logprob: -1.7002805471420288
    3. 'if' → logprob: -2.4502806663513184
    4. 'else' → logprob: -5.700280666351318
    5. ' if' → logprob: -6.450280666351318
    6. '       ' → logprob: -6.700280666351318
    7. ' X' → logprob: -6.700280666351318
    8. '
' → logprob: -7.950280666351318
    9. 'y' → logprob: -8.95028018951416
    10. 'Y' → logprob: -9.07528018951416

Token 181: ' plus' (ID: 2932)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5379993319511414
    2. ' y' → logprob: -1.7879993915557861
    3. 'y' → logprob: -1.9129993915557861
    4. ' ' → logprob: -3.537999391555786
    5. '       ' → logprob: -3.787999391555786
    6. '2' → logprob: -4.037999153137207
    7. 'n' → logprob: -4.912999153137207
    8. ' n' → logprob: -5.412999153137207
    9. '    ' → logprob: -5.537999153137207
    10. '   ' → logprob: -5.787999153137207

Token 182: ' simple' (ID: 4705)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2920071482658386
    2. '=' → logprob: -1.5420072078704834
    3. '+' → logprob: -4.042006969451904
    4. '.' → logprob: -5.167006969451904
    5. 'y' → logprob: -5.292006969451904
    6. ' ' → logprob: -5.542006969451904
    7. ' y' → logprob: -6.292006969451904
    8. '<|end|>' → logprob: -6.667006969451904
    9. '  ' → logprob: -7.292006969451904
    10. '   ' → logprob: -7.417006969451904

Token 183: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03130623325705528
    2. 'if' → logprob: -3.656306266784668
    3. '       ' → logprob: -6.031306266784668
    4. 'X' → logprob: -6.906306266784668
    5. ' if' → logprob: -6.906306266784668
    6. 'else' → logprob: -8.281306266784668
    7. '
' → logprob: -9.281306266784668
    8. ' X' → logprob: -9.906306266784668
    9. '  ' → logprob: -10.156306266784668
    10. ' ' → logprob: -10.656306266784668

Token 184: ' faire' (ID: 8119)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.41626155376434326
    2. 'y' → logprob: -1.7912615537643433
    3. '1' → logprob: -2.166261672973633
    4. 'n' → logprob: -3.541261672973633
    5. ' n' → logprob: -4.791261672973633
    6. ' continuer' → logprob: -5.291261672973633
    7. ' ' → logprob: -5.791261672973633
    8. 'div' → logprob: -5.916261672973633
    9. 'contin' → logprob: -6.416261672973633
    10. 'continue' → logprob: -6.666261672973633

Token 185: ' comme' (ID: 7971)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8857021927833557
    2. 'y' → logprob: -1.510702133178711
    3. ' n' → logprob: -1.885702133178711
    4. ' y' → logprob: -2.010702133178711
    5. '1' → logprob: -3.385702133178711
    6. '   ' → logprob: -3.510702133178711
    7. '       ' → logprob: -4.260702133178711
    8. ' ' → logprob: -7.385702133178711
    9. '    ' → logprob: -7.510702133178711
    10. '           ' → logprob: -8.260702133178711

Token 186: ' ça' (ID: 13590)
  Prédit: 'ça'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ça' → logprob: -0.22967743873596191
    2. ' ça' → logprob: -1.604677438735962
    3. 'cela' → logprob: -6.229677200317383
    4. 'this' → logprob: -6.979677200317383
    5. 'ca' → logprob: -8.479677200317383
    6. ' ceci' → logprob: -8.729677200317383
    7. 'ç' → logprob: -8.729677200317383
    8. 'cel' → logprob: -8.729677200317383
    9. 'Ça' → logprob: -8.729677200317383
    10. 'Python' → logprob: -9.354677200317383

Token 187: ' je' (ID: 1264)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009410256519913673
    2. 'if' → logprob: -5.259410381317139
    3. '       ' → logprob: -5.759410381317139
    4. ' if' → logprob: -7.509410381317139
    5. 'print' → logprob: -8.75940990447998
    6. 'else' → logprob: -9.13440990447998
    7. '
' → logprob: -9.75940990447998
    8. 'X' → logprob: -10.25940990447998
    9. '    
' → logprob: -10.63440990447998
    10. '    ' → logprob: -10.88440990447998

Token 188: ' trouve' (ID: 30913)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.1902087926864624
    2. 'continue' → logprob: -2.190208911895752
    3. '   ' → logprob: -4.065208911895752
    4. '       ' → logprob: -4.065208911895752
    5. 's' → logprob: -4.815208911895752
    6. ' n' → logprob: -5.315208911895752
    7. ' pense' → logprob: -5.815208911895752
    8. 'n' → logprob: -6.065208911895752
    9. '    ' → logprob: -6.440208911895752
    10. ' while' → logprob: -7.440208911895752

Token 189: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007380400784313679
    2. 'if' → logprob: -5.257380485534668
    3. '       ' → logprob: -7.007380485534668
    4. 'X' → logprob: -7.132380485534668
    5. ' if' → logprob: -8.007380485534668
    6. 'print' → logprob: -10.007380485534668
    7. 'else' → logprob: -10.257380485534668
    8. ' X' → logprob: -11.007380485534668
    9. 'Y' → logprob: -12.507380485534668
    10. '  ' → logprob: -13.757380485534668

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014623175375163555
    2. '       ' → logprob: -4.889623165130615
    3. 'X' → logprob: -5.139623165130615
    4. 'if' → logprob: -7.139623165130615
    5. '
' → logprob: -9.264623641967773
    6. 'else' → logprob: -9.389623641967773
    7. ' X' → logprob: -9.639623641967773
    8. 'Y' → logprob: -10.764623641967773
    9. ' if' → logprob: -10.889623641967773
    10. '    
' → logprob: -11.014623641967773

Token 191: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2077193707227707
    2. '   ' → logprob: -1.707719326019287
    3. ' if' → logprob: -5.082719326019287
    4. ' ' → logprob: -10.332719802856445
    5. '
' → logprob: -10.707719802856445
    6. '  ' → logprob: -11.832719802856445
    7. 'X' → logprob: -12.332719802856445
    8. '    
' → logprob: -12.582719802856445
    9. 'else' → logprob: -12.832719802856445
    10. '       ' → logprob: -13.082719802856445

Token 192: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2821921706199646
    2. ' n' → logprob: -1.4071922302246094
    3. 'y' → logprob: -7.782192230224609
    4. ' y' → logprob: -8.40719223022461
    5. '(n' → logprob: -9.03219223022461
    6. 'X' → logprob: -9.15719223022461
    7. 'N' → logprob: -9.78219223022461
    8. ' (' → logprob: -10.53219223022461
    9. ' ' → logprob: -10.78219223022461
    10. ' ' → logprob: -11.15719223022461

Token 193: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -15.125000953674316
    3. 'ew' → logprob: -15.500000953674316
    4. 'ot' → logprob: -16.0
    5. '   ' → logprob: -16.125
    6. '%' → logprob: -16.625
    7. 'ode' → logprob: -17.4375
    8. 'ow' → logprob: -17.5625
    9. '
' → logprob: -17.875
    10. 'e' → logprob: -18.1875

Token 194: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.02508706972002983
    2. ' %' → logprob: -4.150086879730225
    3. '==' → logprob: -5.400086879730225
    4. ' ==' → logprob: -6.525086879730225
    5. '%n' → logprob: -6.775086879730225
    6. '%x' → logprob: -7.275086879730225
    7. '%e' → logprob: -8.275087356567383
    8. '!=' → logprob: -8.400087356567383
    9. '%i' → logprob: -8.525087356567383
    10. '%d' → logprob: -8.525087356567383

Token 195: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002111597452312708
    2. ' y' → logprob: -6.252111434936523
    3. '(y' → logprob: -9.002111434936523
    4. '1' → logprob: -10.002111434936523
    5. ' (' → logprob: -12.502111434936523
    6. ' ' → logprob: -13.127111434936523
    7. '0' → logprob: -13.502111434936523
    8. '	y' → logprob: -13.627111434936523
    9. ''y' → logprob: -13.752111434936523
    10. 'x' → logprob: -13.752111434936523

Token 196: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.006473775953054428
    2. ' ==' → logprob: -5.256473541259766
    3. '!=' → logprob: -6.756473541259766
    4. '=' → logprob: -10.381473541259766
    5. '==
' → logprob: -10.381473541259766
    6. ' !=' → logprob: -11.631473541259766
    7. '>' → logprob: -13.131473541259766
    8. '>=' → logprob: -14.256473541259766
    9. ')==' → logprob: -14.881473541259766
    10. '==(' → logprob: -15.256473541259766

Token 197: ' ' (ID: 220)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0405539907515049
    2. '1' → logprob: -3.6655540466308594
    3. '0' → logprob: -4.415554046630859
    4. ' y' → logprob: -6.415554046630859
    5. '(y' → logprob: -8.41555404663086
    6. 'N' → logprob: -9.41555404663086
    7. ' ' → logprob: -10.41555404663086
    8. 'x' → logprob: -10.66555404663086
    9. 'n' → logprob: -11.16555404663086
    10. 'elem' → logprob: -11.41555404663086

Token 198: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01133793219923973
    2. '0' → logprob: -4.511337757110596
    3. ' y' → logprob: -8.761338233947754
    4. '1' → logprob: -9.011338233947754
    5. '(y' → logprob: -13.011338233947754
    6. 'None' → logprob: -13.386338233947754
    7. ' ' → logprob: -13.511338233947754
    8. 'x' → logprob: -13.761338233947754
    9. 'elem' → logprob: -13.761338233947754
    10. '   ' → logprob: -13.886338233947754

Token 199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010977078229188919
    2. ':
' → logprob: -4.760977268218994
    3. '==' → logprob: -6.260977268218994
    4. ' ==' → logprob: -7.760977268218994
    5. '=' → logprob: -11.510976791381836
    6. '!=' → logprob: -12.635976791381836
    7. ' :' → logprob: -13.010976791381836
    8. ':

' → logprob: -13.260976791381836
    9. ' and' → logprob: -13.385976791381836
    10. ' !=' → logprob: -13.885976791381836

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6859652996063232
    2. '   ' → logprob: -0.8109652996063232
    3. ':' → logprob: -3.4359652996063232
    4. ':
' → logprob: -3.9359652996063232
    5. '           ' → logprob: -9.435965538024902
    6. '):
' → logprob: -10.060965538024902
    7. '  ' → logprob: -11.185965538024902
    8. '	   ' → logprob: -11.310965538024902
    9. '     ' → logprob: -11.435965538024902
    10. ' or' → logprob: -11.560965538024902

Token 201: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.009766715578734875
    2. ' X' → logprob: -5.009766578674316
    3. '   ' → logprob: -5.884766578674316
    4. '       ' → logprob: -8.884766578674316
    5. '
' → logprob: -10.259766578674316
    6. 'print' → logprob: -10.509766578674316
    7. '	X' → logprob: -10.759766578674316
    8. 'if' → logprob: -11.134766578674316
    9. ' ' → logprob: -11.384766578674316
    10. '           ' → logprob: -11.634766578674316

Token 202: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.004081485792994499
    2. '[' → logprob: -5.5040812492370605
    3. '[x' → logprob: -14.504081726074219
    4. '[val' → logprob: -14.629081726074219
    5. '.setdefault' → logprob: -15.004081726074219
    6. ' [' → logprob: -15.379081726074219
    7. '[key' → logprob: -15.754081726074219
    8. '[col' → logprob: -16.25408172607422
    9. '[obj' → logprob: -16.25408172607422
    10. '[len' → logprob: -16.37908172607422

Token 203: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06024802476167679
    2. ' =' → logprob: -3.1852481365203857
    3. '+=' → logprob: -4.185247898101807
    4. ']' → logprob: -6.685247898101807
    5. ' +=' → logprob: -8.060248374938965
    6. ']+=' → logprob: -8.435248374938965
    7. ']=' → logprob: -9.435248374938965
    8. '*=' → logprob: -12.185248374938965
    9. ' ' → logprob: -12.435248374938965
    10. '	' → logprob: -12.935248374938965

Token 204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08906988799571991
    2. ' =' → logprob: -2.4640698432922363
    3. '+=' → logprob: -9.089070320129395
    4. ' +=' → logprob: -11.089070320129395
    5. ' ' → logprob: -13.464070320129395
    6. '*=' → logprob: -14.964070320129395
    7. '   ' → logprob: -15.589070320129395
    8. '=

' → logprob: -16.589069366455078
    9. '  ' → logprob: -16.714069366455078
    10. '	' → logprob: -17.214069366455078

Token 205: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003212649840861559
    2. ' ' → logprob: -6.1282124519348145
    3. 'X' → logprob: -7.2532124519348145
    4. '0' → logprob: -8.878212928771973
    5. 'True' → logprob: -9.003212928771973
    6. ' X' → logprob: -10.753212928771973
    7. '   ' → logprob: -11.503212928771973
    8. ' True' → logprob: -12.253212928771973
    9. 'x' → logprob: -12.378212928771973
    10. '2' → logprob: -12.628212928771973

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022070204431656748
    2. '0' → logprob: -9.50022029876709
    3. 'X' → logprob: -9.62522029876709
    4. 'True' → logprob: -10.12522029876709
    5. ' ' → logprob: -11.00022029876709
    6. 'max' → logprob: -11.50022029876709
    7. '2' → logprob: -12.12522029876709
    8. 'x' → logprob: -12.75022029876709
    9. 'y' → logprob: -13.87522029876709
    10. '-' → logprob: -14.87522029876709

Token 207: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00623887637630105
    2. 'for' → logprob: -5.50623893737793
    3. '
' → logprob: -6.25623893737793
    4. 'keys' → logprob: -9.00623893737793
    5. ' print' → logprob: -10.00623893737793
    6. '```' → logprob: -11.50623893737793
    7. ' for' → logprob: -11.63123893737793
    8. '<|end|>' → logprob: -11.75623893737793
    9. 'result' → logprob: -12.00623893737793
    10. '#print' → logprob: -12.38123893737793

Token 208: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5982090830802917
    2. 'print' → logprob: -0.8482090830802917
    3. 'keys' → logprob: -4.598208904266357
    4. '
' → logprob: -4.848208904266357
    5. 'sorted' → logprob: -6.723208904266357
    6. ' for' → logprob: -6.848208904266357
    7. 'max' → logprob: -7.223208904266357
    8. 'result' → logprob: -7.848208904266357
    9. ')' → logprob: -8.223209381103516
    10. 'return' → logprob: -9.848209381103516

Token 209: ' else' (ID: 1203)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08633407205343246
    2. 'for' → logprob: -3.086333990097046
    3. 'keys' → logprob: -3.336333990097046
    4. ')' → logprob: -7.461334228515625
    5. 'result' → logprob: -7.961334228515625
    6. ' keys' → logprob: -8.836334228515625
    7. ' for' → logprob: -8.961334228515625
    8. 'sorted' → logprob: -9.336334228515625
    9. ' print' → logprob: -9.586334228515625
    10. 'max' → logprob: -10.586334228515625

Token 210: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05069241300225258
    2. '   ' → logprob: -3.550692319869995
    3. ':' → logprob: -4.050692558288574
    4. ' pass' → logprob: -6.175692558288574
    5. 'pass' → logprob: -7.925692558288574
    6. ' continue' → logprob: -8.050692558288574
    7. ':
' → logprob: -8.675692558288574
    8. ' :' → logprob: -9.175692558288574
    9. '           ' → logprob: -9.800692558288574
    10. '    ' → logprob: -10.425692558288574

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18959477543830872
    2. ' pass' → logprob: -1.9395947456359863
    3. 'pass' → logprob: -3.8145947456359863
    4. '   ' → logprob: -5.189594745635986
    5. ' break' → logprob: -7.439594745635986
    6. ' continue' → logprob: -7.939594745635986
    7. 'continue' → logprob: -8.939595222473145
    8. 'break' → logprob: -9.064595222473145
    9. '	pass' → logprob: -9.689595222473145
    10. ' None' → logprob: -11.189595222473145

Token 212: ' X' (ID: 2127)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.06606956571340561
    2. ' pass' → logprob: -2.8160696029663086
    3. 'continue' → logprob: -6.191069602966309
    4. 'break' → logprob: -6.316069602966309
    5. '   ' → logprob: -9.191069602966309
    6. ' break' → logprob: -9.566069602966309
    7. ' continue' → logprob: -10.066069602966309
    8. 'None' → logprob: -11.691069602966309
    9. 'print' → logprob: -11.941069602966309
    10. '	pass' → logprob: -12.816069602966309

Token 213: '[y' (ID: 34551)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.01978740096092224
    2. '.clear' → logprob: -4.144787311553955
    3. '.' → logprob: -6.519787311553955
    4. '[y' → logprob: -7.019787311553955
    5. ' =' → logprob: -7.769787311553955
    6. '[' → logprob: -7.894787311553955
    7. '=' → logprob: -8.019787788391113
    8. '.setdefault' → logprob: -8.644787788391113
    9. 'pop' → logprob: -11.019787788391113
    10. '.get' → logprob: -11.144787788391113

Token 214: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.136716827750206
    2. '-=' → logprob: -2.761716842651367
    3. ' =' → logprob: -3.011716842651367
    4. '+=' → logprob: -4.636716842651367
    5. ' -=' → logprob: -5.636716842651367
    6. ']' → logprob: -7.261716842651367
    7. '-' → logprob: -7.636716842651367
    8. '*=' → logprob: -8.261716842651367
    9. ' +=' → logprob: -8.511716842651367
    10. ' ' → logprob: -9.011716842651367

Token 215: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17368288338184357
    2. '+=' → logprob: -2.298682928085327
    3. ' =' → logprob: -2.923682928085327
    4. ' +=' → logprob: -5.298682689666748
    5. '-=' → logprob: -8.798683166503906
    6. '*=' → logprob: -9.423683166503906
    7. ' ' → logprob: -10.423683166503906
    8. ' -=' → logprob: -11.798683166503906
    9. '   ' → logprob: -11.923683166503906
    10. '==' → logprob: -12.048683166503906

Token 216: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05498721823096275
    2. ' ' → logprob: -2.9299871921539307
    3. '1' → logprob: -10.304986953735352
    4. '2' → logprob: -10.429986953735352
    5. '-' → logprob: -11.679986953735352
    6. '   ' → logprob: -11.679986953735352
    7. ' -' → logprob: -12.617486953735352
    8. 'max' → logprob: -12.679986953735352
    9. '  ' → logprob: -12.804986953735352
    10. 'False' → logprob: -13.367486953735352

Token 217: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004981054808013141
    2. ' ' → logprob: -7.750498294830322
    3. '-' → logprob: -10.250497817993164
    4. '2' → logprob: -11.000497817993164
    5. 'False' → logprob: -12.000497817993164
    6. '1' → logprob: -12.750497817993164
    7. '   ' → logprob: -13.875497817993164
    8. 'float' → logprob: -14.125497817993164
    9. 'None' → logprob: -14.562997817993164
    10. '999' → logprob: -14.562997817993164

Token 218: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008292826823890209
    2. 'for' → logprob: -7.875829219818115
    3. 'answer' → logprob: -9.125829696655273
    4. 'result' → logprob: -9.375829696655273
    5. 'keys' → logprob: -9.625829696655273
    6. 'ans' → logprob: -9.875829696655273
    7. 'max' → logprob: -10.000829696655273
    8. ' print' → logprob: -10.375829696655273
    9. 'count' → logprob: -10.875829696655273
    10. 'sum' → logprob: -11.500829696655273

Token 219: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001801557606086135
    2. 'for' → logprob: -7.626801490783691
    3. 'result' → logprob: -8.126801490783691
    4. 'keys' → logprob: -8.251801490783691
    5. '
' → logprob: -8.501801490783691
    6. 'answer' → logprob: -9.501801490783691
    7. 'pr' → logprob: -9.626801490783691
    8. ' print' → logprob: -9.751801490783691
    9. ')' → logprob: -10.126801490783691
    10. 'max' → logprob: -10.251801490783691

Token 220: ' Just' (ID: 6214)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0067872474901378155
    2. ' print' → logprob: -6.006787300109863
    3. 'result' → logprob: -6.381787300109863
    4. 'ans' → logprob: -7.006787300109863
    5. 'answer' → logprob: -7.506787300109863
    6. 'for' → logprob: -7.881787300109863
    7. 'count' → logprob: -8.631787300109863
    8. 'sum' → logprob: -9.131787300109863
    9. 'keys' → logprob: -9.381787300109863
    10. 'res' → logprob: -9.381787300109863

Token 221: 'e' (ID: 68)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008795500732958317
    2. ' print' → logprob: -4.758795738220215
    3. 'for' → logprob: -9.133795738220215
    4. 'e' → logprob: -10.383795738220215
    5. ' for' → logprob: -11.258795738220215
    6. 'sum' → logprob: -11.633795738220215
    7. '#' → logprob: -12.383795738220215
    8. 'result' → logprob: -12.508795738220215
    9. 'output' → logprob: -13.258795738220215
    10. '_print' → logprob: -13.508795738220215

Token 222: ' essayé' (ID: 137623)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011334281880408525
    2. ' print' → logprob: -6.876133441925049
    3. '
' → logprob: -9.25113296508789
    4. 'for' → logprob: -13.00113296508789
    5. 's' → logprob: -14.62613296508789
    6. 'result' → logprob: -14.75113296508789
    7. ' 
' → logprob: -14.87613296508789
    8. ' for' → logprob: -15.62613296508789
    9. '#print' → logprob: -15.75113296508789
    10. '
' → logprob: -16.00113296508789

Token 223: ' un' (ID: 537)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014894160442054272
    2. '
' → logprob: -4.889894008636475
    3. 'for' → logprob: -5.139894008636475
    4. 'keys' → logprob: -8.014894485473633
    5. '<|end|>' → logprob: -8.514894485473633
    6. ')' → logprob: -9.014894485473633
    7. '#' → logprob: -9.014894485473633
    8. ' print' → logprob: -9.139894485473633
    9. ' for' → logprob: -9.639894485473633
    10. 'result' → logprob: -9.889894485473633

Token 224: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05555630475282669
    2. 'for' → logprob: -3.305556297302246
    3. 'max' → logprob: -4.305556297302246
    4. 'sum' → logprob: -7.305556297302246
    5. 'best' → logprob: -7.555556297302246
    6. '#' → logprob: -7.805556297302246
    7. 'result' → logprob: -8.055556297302246
    8. 'answer' → logprob: -8.180556297302246
    9. 'if' → logprob: -8.430556297302246
    10. 'sorted' → logprob: -8.555556297302246

Token 225: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20313158631324768
    2. '(print' → logprob: -1.9531315565109253
    3. '(' → logprob: -3.203131675720215
    4. '(sorted' → logprob: -7.078131675720215
    5. '(len' → logprob: -8.453131675720215
    6. '(list' → logprob: -9.328131675720215
    7. '(sum' → logprob: -9.453131675720215
    8. '(
' → logprob: -9.953131675720215
    9. '()' → logprob: -10.453131675720215
    10. '(X' → logprob: -11.203131675720215

Token 226: ' trop' (ID: 14765)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006721630343236029
    2. ' print' → logprob: -7.750672340393066
    3. 'sorted' → logprob: -9.375672340393066
    4. 'for' → logprob: -9.500672340393066
    5. 'sum' → logprob: -9.750672340393066
    6. 'keys' → logprob: -12.000672340393066
    7. '[' → logprob: -12.250672340393066
    8. 'list' → logprob: -12.750672340393066
    9. 'len' → logprob: -12.750672340393066
    10. 'result' → logprob: -13.000672340393066

Token 227: ' ver' (ID: 1245)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20699632167816162
    2. 'for' → logprob: -1.7069963216781616
    3. ' for' → logprob: -5.956996440887451
    4. ' print' → logprob: -6.956996440887451
    5. 'X' → logprob: -7.831996440887451
    6. 'simple' → logprob: -8.206995964050293
    7. '  ' → logprob: -8.331995964050293
    8. 'sorted' → logprob: -8.456995964050293
    9. ' ' → logprob: -8.581995964050293
    10. ' pprint' → logprob: -8.831995964050293

Token 228: 'be' (ID: 1464)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.15042848885059357
    2. 'dict' → logprob: -2.900428533554077
    3. 'bos' → logprob: -3.400428533554077
    4. 'bot' → logprob: -3.775428533554077
    5. 'batim' → logprob: -4.525428295135498
    6. 'print' → logprob: -5.025428295135498
    7. 'for' → logprob: -5.400428295135498
    8. '```' → logprob: -5.650428295135498
    9. 'bo' → logprob: -6.900428295135498
    10. 'BOSE' → logprob: -8.025428771972656

Token 229: 'ux' (ID: 1778)
  Prédit: 'ux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ux' → logprob: -0.03700948506593704
    2. 'ose' → logprob: -3.5370094776153564
    3. 'eux' → logprob: -5.9120097160339355
    4. 'use' → logprob: -6.2870097160339355
    5. 'se' → logprob: -7.2870097160339355
    6. 't' → logprob: -7.6620097160339355
    7. 'uxe' → logprob: -7.9120097160339355
    8. 'print' → logprob: -8.537009239196777
    9. '```' → logprob: -8.787009239196777
    10. '#' → logprob: -9.037009239196777

Token 230: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04092687368392944
    2. '#print' → logprob: -3.290926933288574
    3. 'for' → logprob: -6.040926933288574
    4. '#' → logprob: -7.915926933288574
    5. '
' → logprob: -9.665926933288574
    6. ' print' → logprob: -11.415926933288574
    7. '(print' → logprob: -11.540926933288574
    8. '(
' → logprob: -11.790926933288574
    9. '(' → logprob: -12.040926933288574
    10. '[' → logprob: -12.165926933288574

Token 231: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009949409868568182
    2. 'for' → logprob: -7.25099515914917
    3. '#print' → logprob: -8.250994682312012
    4. ' print' → logprob: -11.750994682312012
    5. 'result' → logprob: -12.250994682312012
    6. '#' → logprob: -12.375994682312012
    7. 'keys' → logprob: -13.750994682312012
    8. '
' → logprob: -13.750994682312012
    9. 'valid' → logprob: -14.125994682312012
    10. ' for' → logprob: -14.125994682312012

Token 232: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0029879247304052114
    2. '#print' → logprob: -6.127987861633301
    3. 'for' → logprob: -8.0029878616333
    4. '#' → logprob: -8.3779878616333
    5. 'result' → logprob: -9.0029878616333
    6. ' print' → logprob: -9.8779878616333
    7. 'count' → logprob: -10.8779878616333
    8. 'sum' → logprob: -10.8779878616333
    9. 'total' → logprob: -12.5029878616333
    10. 'len' → logprob: -13.1279878616333

Token 233: ' k' (ID: 372)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -1.0018669366836548
    2. 'k' → logprob: -1.2518669366836548
    3. ' key' → logprob: -1.2518669366836548
    4. ' k' → logprob: -2.8768668174743652
    5. 'x' → logprob: -6.501866817474365
    6. 'elem' → logprob: -6.501866817474365
    7. ' elem' → logprob: -8.251867294311523
    8. ' x' → logprob: -8.251867294311523
    9. 'i' → logprob: -8.626867294311523
    10. ' clé' → logprob: -8.751867294311523

Token 234: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05625678226351738
    2. ',' → logprob: -3.4312567710876465
    3. 'in' → logprob: -3.8062567710876465
    4. ' ,' → logprob: -10.431257247924805
    5. ',k' → logprob: -11.056257247924805
    6. ' ' → logprob: -11.181257247924805
    7. ',in' → logprob: -11.181257247924805
    8. ',v' → logprob: -11.931257247924805
    9. ',n' → logprob: -12.368757247924805
    10. 'n' → logprob: -12.681257247924805

Token 235: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0004320996522437781
    2. ' v' → logprob: -7.750432014465332
    3. 'val' → logprob: -13.875432014465332
    4. 'value' → logprob: -15.250432014465332
    5. '	v' → logprob: -15.750432014465332
    6. '_v' → logprob: -17.62543296813965
    7. '```' → logprob: -18.00043296813965
    8. ' ' → logprob: -18.25043296813965
    9. 'vj' → logprob: -19.00043296813965
    10. 'va' → logprob: -19.12543296813965

Token 236: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.49520036578178406
    2. 'in' → logprob: -0.9952003955841064
    3. ',' → logprob: -3.8702003955841064
    4. ',v' → logprob: -11.245200157165527
    5. ' ,' → logprob: -11.745200157165527
    6. ',in' → logprob: -11.870200157165527
    7. ' ' → logprob: -12.620200157165527
    8. '_in' → logprob: -12.870200157165527
    9. ',k' → logprob: -12.995200157165527
    10. '	in' → logprob: -12.995200157165527

Token 237: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -3.583550642360933e-05
    2. 'sorted' → logprob: -10.875036239624023
    3. ' X' → logprob: -11.000036239624023
    4. 'list' → logprob: -16.250036239624023
    5. ' sorted' → logprob: -16.375036239624023
    6. 'x' → logprob: -18.875036239624023
    7. '(X' → logprob: -19.250036239624023
    8. 'print' → logprob: -19.625036239624023
    9. '   ' → logprob: -20.875036239624023
    10. 'C' → logprob: -21.000036239624023

Token 238: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.1499234437942505
    2. '.' → logprob: -2.024923324584961
    3. 'items' → logprob: -5.024923324584961
    4. ' in' → logprob: -7.774923324584961
    5. '().' → logprob: -9.399923324584961
    6. '.iteritems' → logprob: -9.899923324584961
    7. 'in' → logprob: -10.524923324584961
    8. ' .' → logprob: -11.399923324584961
    9. '_items' → logprob: -11.399923324584961
    10. '   ' → logprob: -11.649923324584961

Token 239: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006087580695748329
    2. '():
' → logprob: -5.506087779998779
    3. '()' → logprob: -6.256087779998779
    4. ':' → logprob: -10.006087303161621
    5. 'items' → logprob: -10.881087303161621
    6. '():
' → logprob: -11.631087303161621
    7. '):' → logprob: -12.756087303161621
    8. '():

' → logprob: -12.881087303161621
    9. '(' → logprob: -13.506087303161621
    10. '()):
' → logprob: -13.631087303161621

Token 240: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008511618711054325
    2. 'if' → logprob: -5.383511543273926
    3. 'for' → logprob: -6.008511543273926
    4. 'count' → logprob: -8.008511543273926
    5. '
' → logprob: -8.133511543273926
    6. 'result' → logprob: -8.508511543273926
    7. '   ' → logprob: -8.758511543273926
    8. '#' → logprob: -9.008511543273926
    9. '#print' → logprob: -9.008511543273926
    10. ' print' → logprob: -9.883511543273926

Token 241: '    ' (ID: 257)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2369055449962616
    2. ' print' → logprob: -1.861905574798584
    3. ' if' → logprob: -3.611905574798584
    4. 'if' → logprob: -3.736905574798584
    5. 'for' → logprob: -6.361905574798584
    6. ' for' → logprob: -6.611905574798584
    7. '   ' → logprob: -7.111905574798584
    8. '#' → logprob: -7.736905574798584
    9. '#print' → logprob: -8.486905097961426
    10. ' k' → logprob: -10.111905097961426

Token 242: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.44412142038345337
    2. 'print' → logprob: -1.4441213607788086
    3. ' if' → logprob: -2.1941213607788086
    4. '   ' → logprob: -5.194121360778809
    5. ' print' → logprob: -5.194121360778809
    6. 'pass' → logprob: -9.819121360778809
    7. ' ' → logprob: -10.694121360778809
    8. '  ' → logprob: -11.819121360778809
    9. ' pass' → logprob: -12.069121360778809
    10. '#print' → logprob: -12.194121360778809

Token 243: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.02325945533812046
    2. ' v' → logprob: -3.773259401321411
    3. '   ' → logprob: -12.023259162902832
    4. ' ' → logprob: -13.023259162902832
    5. 'k' → logprob: -13.273259162902832
    6. '  ' → logprob: -13.523259162902832
    7. '	v' → logprob: -13.898259162902832
    8. ' ' → logprob: -14.023259162902832
    9. '    ' → logprob: -15.273259162902832
    10. ' not' → logprob: -15.898259162902832

Token 244: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.43006545305252075
    2. ' ==' → logprob: -1.055065393447876
    3. ':' → logprob: -6.680065631866455
    4. ':
' → logprob: -10.680065155029297
    5. '   ' → logprob: -10.805065155029297
    6. '()==' → logprob: -11.055065155029297
    7. ' ' → logprob: -11.430065155029297
    8. ' :' → logprob: -11.680065155029297
    9. ']==' → logprob: -11.930065155029297
    10. 'k' → logprob: -12.430065155029297

Token 245: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.584861744660884e-05
    2. ' ' → logprob: -10.125045776367188
    3. '0' → logprob: -12.250045776367188
    4. '   ' → logprob: -14.000045776367188
    5. 'True' → logprob: -16.625045776367188
    6. '  ' → logprob: -17.625045776367188
    7. '2' → logprob: -19.125045776367188
    8. '    ' → logprob: -19.500045776367188
    9. '=' → logprob: -19.687545776367188
    10. '       ' → logprob: -20.125045776367188

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.490809417096898e-05
    2. ' ' → logprob: -10.250055313110352
    3. '0' → logprob: -11.000055313110352
    4. '   ' → logprob: -13.875055313110352
    5. 'True' → logprob: -14.000055313110352
    6. '  ' → logprob: -16.31255531311035
    7. '2' → logprob: -16.37505531311035
    8. '```' → logprob: -16.43755531311035
    9. '#' → logprob: -16.75005531311035
    10. '>' → logprob: -16.81255531311035

Token 247: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06944666057825089
    2. ':
' → logprob: -2.944446563720703
    3. '       ' → logprob: -4.694446563720703
    4. '   ' → logprob: -6.069446563720703
    5. '#' → logprob: -6.444446563720703
    6. '():
' → logprob: -7.319446563720703
    7. 'print' → logprob: -8.444446563720703
    8. '():' → logprob: -9.069446563720703
    9. ',' → logprob: -9.569446563720703
    10. '):
' → logprob: -9.944446563720703

Token 248: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23503908514976501
    2. '   ' → logprob: -1.7350391149520874
    3. '       ' → logprob: -3.985038995742798
    4. ' print' → logprob: -4.735039234161377
    5. 'for' → logprob: -5.735039234161377
    6. ' for' → logprob: -6.610039234161377
    7. '#' → logprob: -7.110039234161377
    8. 'count' → logprob: -9.735038757324219
    9. 'keys' → logprob: -9.735038757324219
    10. 'pass' → logprob: -9.860038757324219

Token 249: '        ' (ID: 269)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02182479202747345
    2. ' print' → logprob: -4.271824836730957
    3. '       ' → logprob: -5.271824836730957
    4. '   ' → logprob: -6.271824836730957
    5. 'for' → logprob: -8.146824836730957
    6. ' for' → logprob: -9.521824836730957
    7. '#print' → logprob: -9.646824836730957
    8. '#' → logprob: -9.771824836730957
    9. '           ' → logprob: -10.146824836730957
    10. '    ' → logprob: -11.021824836730957

Token 250: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0011717714369297028
    2. ' print' → logprob: -6.751171588897705
    3. '   ' → logprob: -14.376172065734863
    4. '#print' → logprob: -14.626172065734863
    5. 'pass' → logprob: -15.251172065734863
    6. '       ' → logprob: -16.001171112060547
    7. '#' → logprob: -16.751171112060547
    8. 'for' → logprob: -17.251171112060547
    9. 'break' → logprob: -17.626171112060547
    10. '           ' → logprob: -17.751171112060547

Token 251: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0005083533469587564
    2. '(' → logprob: -7.6255083084106445
    3. 'k' → logprob: -11.125508308410645
    4. '("' → logprob: -12.750508308410645
    5. '('' → logprob: -13.375508308410645
    6. '(f' → logprob: -14.500508308410645
    7. ' (' → logprob: -15.000508308410645
    8. '((' → logprob: -16.00050926208496
    9. ' k' → logprob: -16.25050926208496
    10. '(
' → logprob: -16.50050926208496

Token 252: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.9424725148128346e-05
    2. ' )' → logprob: -11.500049591064453
    3. ')
' → logprob: -11.625049591064453
    4. '   ' → logprob: -11.750049591064453
    5. '())' → logprob: -12.625049591064453
    6. '))' → logprob: -12.875049591064453
    7. ')}' → logprob: -13.000049591064453
    8. ')}}' → logprob: -13.000049591064453
    9. '<|end|>' → logprob: -13.125049591064453
    10. '#' → logprob: -13.125049591064453

Token 253: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.584861744660884e-05
    2. 'for' → logprob: -10.625045776367188
    3. 'answer' → logprob: -12.125045776367188
    4. ' print' → logprob: -12.250045776367188
    5. 'result' → logprob: -12.500045776367188
    6. 'count' → logprob: -12.750045776367188
    7. 'keys' → logprob: -13.125045776367188
    8. 'sum' → logprob: -13.875045776367188
    9. 'ans' → logprob: -14.375045776367188
    10. 'max' → logprob: -14.875045776367188

Token 254: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.022322015836834908
    2. 'ans' → logprob: -4.897322177886963
    3. 'answer' → logprob: -5.397322177886963
    4. 'result' → logprob: -5.647322177886963
    5. 'keys' → logprob: -6.022322177886963
    6. 'for' → logprob: -6.522322177886963
    7. 'res' → logprob: -6.647322177886963
    8. 'count' → logprob: -8.147321701049805
    9. 'c' → logprob: -8.772321701049805
    10. 'answers' → logprob: -9.022321701049805

Token 255: ' enl' (ID: 116494)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23884622752666473
    2. ' =' → logprob: -2.6138463020324707
    3. 'for' → logprob: -2.6138463020324707
    4. ' print' → logprob: -3.7388463020324707
    5. '=' → logprob: -4.863846302032471
    6. ' for' → logprob: -4.988846302032471
    7. 'r' → logprob: -5.238846302032471
    8. 'int' → logprob: -5.363846302032471
    9. '
' → logprob: -5.863846302032471
    10. 'pr' → logprob: -6.363846302032471

Token 256: 'ève' (ID: 41151)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.2172656059265137
    2. 't' → logprob: -1.7172656059265137
    3. 'e' → logprob: -1.9672656059265137
    4. '   ' → logprob: -2.5922656059265137
    5. 'ève' → logprob: -2.7172656059265137
    6. 'u' → logprob: -3.4672656059265137
    7. 'umer' → logprob: -3.4672656059265137
    8. 'd' → logprob: -3.8422656059265137
    9. 'ure' → logprob: -4.342265605926514
    10. 'for' → logprob: -4.592265605926514

Token 257: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.904707670211792
    2. 'min' → logprob: -1.154707670211792
    3. '1' → logprob: -1.904707670211792
    4. 'max' → logprob: -2.904707670211792
    5. ' min' → logprob: -4.154707908630371
    6. 'sum' → logprob: -4.529707908630371
    7. ' ' → logprob: -4.904707908630371
    8. ' [' → logprob: -5.154707908630371
    9. 'all' → logprob: -5.404707908630371
    10. '0' → logprob: -5.529707908630371

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1980563998222351
    2. 'X' → logprob: -2.57305645942688
    3. '[' → logprob: -3.57305645942688
    4. 'min' → logprob: -4.073056221008301
    5. 'max' → logprob: -4.198056221008301
    6. 'print' → logprob: -4.698056221008301
    7. '[X' → logprob: -4.823056221008301
    8. 'for' → logprob: -5.073056221008301
    9. 'sum' → logprob: -5.448056221008301
    10. 'k' → logprob: -5.573056221008301

Token 259: ' car' (ID: 1669)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38061776757240295
    2. 'del' → logprob: -1.6306177377700806
    3. 'X' → logprob: -2.38061785697937
    4. ' if' → logprob: -3.88061785697937
    5. ' del' → logprob: -5.255617618560791
    6. '1' → logprob: -6.630617618560791
    7. 'keys' → logprob: -8.13061809539795
    8. '[' → logprob: -8.38061809539795
    9. 'try' → logprob: -8.63061809539795
    10. ' X' → logprob: -9.50561809539795

Token 260: ' y' (ID: 342)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05266425013542175
    2. ' print' → logprob: -3.052664279937744
    3. '1' → logprob: -6.177664279937744
    4. 'X' → logprob: -7.427664279937744
    5. 'result' → logprob: -8.052663803100586
    6. ' ' → logprob: -8.677663803100586
    7. ' result' → logprob: -8.677663803100586
    8. 'len' → logprob: -8.927663803100586
    9. ' X' → logprob: -9.302663803100586
    10. ' for' → logprob: -9.427663803100586

Token 261: ''a' (ID: 10443)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9885010123252869
    2. ' =' → logprob: -0.9885010123252869
    3. ' in' → logprob: -1.6135010719299316
    4. 's' → logprob: -3.4885010719299316
    5. 'from' → logprob: -4.738501071929932
    6. 'for' → logprob: -6.238501071929932
    7. 'in' → logprob: -6.363501071929932
    8. ' not' → logprob: -6.488501071929932
    9. ',' → logprob: -6.738501071929932
    10. ' from' → logprob: -6.988501071929932

Token 262: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37527406215667725
    2. '1' → logprob: -1.2502740621566772
    3. ' X' → logprob: -3.875274181365967
    4. 'X' → logprob: -5.750274181365967
    5. '   ' → logprob: -7.125274181365967
    6. ' len' → logprob: -7.500274181365967
    7. 'len' → logprob: -7.875274181365967
    8. ' result' → logprob: -8.625273704528809
    9. '0' → logprob: -9.375273704528809
    10. ' True' → logprob: -9.500273704528809

Token 263: ' occurrence' (ID: 55807)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4605860412120819
    2. ' ' → logprob: -2.9605860710144043
    3. ')' → logprob: -3.3355860710144043
    4. ' result' → logprob: -3.5855860710144043
    5. ' for' → logprob: -3.5855860710144043
    6. 'sum' → logprob: -3.5855860710144043
    7. '=' → logprob: -3.8355860710144043
    8. ' print' → logprob: -3.9605860710144043
    9. 'print' → logprob: -3.9605860710144043
    10. ' X' → logprob: -4.335586071014404

Token 264: ' en' (ID: 469)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002445317804813385
    2. 'result' → logprob: -8.500244140625
    3. 'answer' → logprob: -10.500244140625
    4. 'ans' → logprob: -12.750244140625
    5. 'count' → logprob: -12.750244140625
    6. ' print' → logprob: -13.000244140625
    7. '#print' → logprob: -13.500244140625
    8. 'res' → logprob: -14.000244140625
    9. 'total' → logprob: -14.000244140625
    10. 's' → logprob: -14.875244140625

Token 265: ' trop' (ID: 14765)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.7502225637435913
    2. ' result' → logprob: -1.3752225637435913
    3. ' ' → logprob: -2.125222682952881
    4. 'X' → logprob: -3.125222682952881
    5. ' sum' → logprob: -3.375222682952881
    6. ' range' → logprob: -3.625222682952881
    7. 'result' → logprob: -4.625222682952881
    8. '   ' → logprob: -4.750222682952881
    9. '[' → logprob: -4.875222682952881
    10. '1' → logprob: -5.125222682952881

Token 266: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003811025235336274
    2. 'del' → logprob: -8.000381469726562
    3. 'ans' → logprob: -11.125381469726562
    4. 'result' → logprob: -11.500381469726562
    5. ' print' → logprob: -12.125381469726562
    6. 'pr' → logprob: -12.375381469726562
    7. 'prin' → logprob: -12.500381469726562
    8. 'sum' → logprob: -13.500381469726562
    9. 'total' → logprob: -13.625381469726562
    10. 'X' → logprob: -13.875381469726562

Token 267: ' enfin' (ID: 50642)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.7146746763028204e-05
    2. ' print' → logprob: -10.25003719329834
    3. 'result' → logprob: -13.50003719329834
    4. '#print' → logprob: -16.125036239624023
    5. '
' → logprob: -16.250036239624023
    6. 'len' → logprob: -17.500036239624023
    7. 'answer' → logprob: -18.000036239624023
    8. '   ' → logprob: -18.375036239624023
    9. '```' → logprob: -19.125036239624023
    10. 'count' → logprob: -19.250036239624023

Token 268: ' je' (ID: 1264)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.625
    3. 'result' → logprob: -16.375
    4. '#print' → logprob: -17.25
    5. 'ans' → logprob: -17.875
    6. 'answer' → logprob: -18.5
    7. 's' → logprob: -19.125
    8. 'total' → logprob: -19.625
    9. '-print' → logprob: -19.875
    10. '```' → logprob: -20.125

Token 269: ' crois' (ID: 65485)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0021044600289314985
    2. ' print' → logprob: -6.25210428237915
    3. '#print' → logprob: -9.252104759216309
    4. '#' → logprob: -10.127104759216309
    5. ')' → logprob: -11.127104759216309
    6. 's' → logprob: -12.752104759216309
    7. '.print' → logprob: -13.002104759216309
    8. ' ' → logprob: -13.252104759216309
    9. ',' → logprob: -13.752104759216309
    10. '_print' → logprob: -13.752104759216309

Token 270: '...
' (ID: 4908)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -16.125
    3. 'result' → logprob: -16.125
    4. 'ans' → logprob: -17.75
    5. 'answer' → logprob: -18.0
    6. '-print' → logprob: -18.5
    7. '#print' → logprob: -18.5
    8. '
' → logprob: -18.625
    9. '```' → logprob: -19.75
    10. 'sum' → logprob: -20.25

Token 271: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. 'result' → logprob: -15.000000953674316
    3. 'answer' → logprob: -16.0
    4. ' print' → logprob: -16.25
    5. 'pr' → logprob: -16.625
    6. '
' → logprob: -16.75
    7. 'ans' → logprob: -16.75
    8. 'prin' → logprob: -16.75
    9. '#print' → logprob: -16.75
    10. 'sum' → logprob: -19.25

Token 272: '(sum' (ID: 45528)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.08203858137130737
    2. '(sum' → logprob: -2.582038640975952
    3. '(' → logprob: -6.207038402557373
    4. '(max' → logprob: -6.957038402557373
    5. 'len' → logprob: -8.832038879394531
    6. 'sum' → logprob: -10.582038879394531
    7. ' len' → logprob: -12.707038879394531
    8. '(sorted' → logprob: -14.082038879394531
    9. '(min' → logprob: -14.332038879394531
    10. '((' → logprob: -15.332038879394531

Token 273: '(X' (ID: 17061)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.3841964602470398
    2. '(k' → logprob: -1.7591965198516846
    3. '(X' → logprob: -2.3841965198516846
    4. '(v' → logprob: -3.6341965198516846
    5. '(x' → logprob: -3.7591965198516846
    6. '(' → logprob: -5.5091962814331055
    7. '(val' → logprob: -7.8841962814331055
    8. '(value' → logprob: -8.509196281433105
    9. '[k' → logprob: -9.759196281433105
    10. '(i' → logprob: -9.884196281433105

Token 274: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.21068178117275238
    2. ')' → logprob: -1.7106817960739136
    3. '.keys' → logprob: -4.835681915283203
    4. '))' → logprob: -6.835681915283203
    5. ' )' → logprob: -9.585681915283203
    6. ' .' → logprob: -10.085681915283203
    7. 'values' → logprob: -10.210681915283203
    8. '.' → logprob: -10.335681915283203
    9. ')-' → logprob: -10.960681915283203
    10. ')+' → logprob: -12.335681915283203

Token 275: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004268458113074303
    2. '()))' → logprob: -5.504268646240234
    3. '()' → logprob: -8.754268646240234
    4. ')' → logprob: -10.504268646240234
    5. '))' → logprob: -13.004268646240234
    6. ' ())' → logprob: -13.379268646240234
    7. '()-' → logprob: -14.004268646240234
    8. '(' → logprob: -16.379268646240234
    9. '())))' → logprob: -17.629268646240234
    10. '()),' → logprob: -18.004268646240234

Token 276: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0047375839203596115
    2. '-' → logprob: -5.504737377166748
    3. '-)' → logprob: -7.754737377166748
    4. ' -' → logprob: -8.629737854003906
    5. ')-' → logprob: -10.754737854003906
    6. ' )' → logprob: -11.004737854003906
    7. '))' → logprob: -11.504737854003906
    8. '()' → logprob: -13.629737854003906
    9. '())' → logprob: -13.629737854003906
    10. ')`' → logprob: -14.629737854003906

Token 277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '0' → logprob: -19.62502670288086
    4. '   ' → logprob: -21.00002670288086
    5. '１' → logprob: -21.12502670288086
    6. '```' → logprob: -21.25002670288086
    7. '[' → logprob: -21.75002670288086
    8. '2' → logprob: -22.00002670288086
    9. '(' → logprob: -23.12502670288086
    10. '  ' → logprob: -23.12502670288086

Token 278: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.375000953674316
    3. '))' → logprob: -17.5
    4. ')
' → logprob: -17.5
    5. ')`' → logprob: -18.625
    6. ')}' → logprob: -21.125
    7. '）' → logprob: -21.25
    8. '')' → logprob: -21.375
    9. '),' → logprob: -21.75
    10. '())' → logprob: -21.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 276
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 89
Tokens correctement prédits (top 10): 174
Précision stricte (1ère position): 28.62%
Précision adaptée (1ère position): 32.25%
Précision (top 10): 63.04%
================================================================================
