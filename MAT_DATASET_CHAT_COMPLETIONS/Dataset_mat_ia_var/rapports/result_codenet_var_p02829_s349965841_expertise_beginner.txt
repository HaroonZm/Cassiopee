================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A = int(input())
B = int(input())

if (A == 1 and B == 2) or (A == 2 and B == 1):
    print(3)
elif (A == 1 and B == 3) or (A == 3 and B == 1):
    print(2)
elif (A == 2 and B == 3) or (A == 3 and B == 2):
    print(1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010536498157307506
    2. ''' → logprob: -7.751053810119629
    3. 'A' → logprob: -8.001053810119629
    4. '(A' → logprob: -9.751053810119629
    5. '```' → logprob: -9.751053810119629
    6. ')' → logprob: -10.376053810119629
    7. '(
' → logprob: -10.501053810119629
    8. '`' → logprob: -10.626053810119629
    9. '\(' → logprob: -10.626053810119629
    10. '"' → logprob: -11.001053810119629

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016779717057943344
    2. ')' → logprob: -4.641779899597168
    3. '()' → logprob: -5.391779899597168
    4. '())' → logprob: -7.266779899597168
    5. '('' → logprob: -7.391779899597168
    6. '(()' → logprob: -8.266779899597168
    7. '("("' → logprob: -8.391779899597168
    8. '(""))' → logprob: -8.891779899597168
    9. '```' → logprob: -9.141779899597168
    10. '(
' → logprob: -9.516779899597168

Token 5: 'B' (ID: 33)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.030654944479465485
    2. '*' → logprob: -3.6556549072265625
    3. '\n' → logprob: -6.4056549072265625
    4. '#' → logprob: -7.4056549072265625
    5. '\' → logprob: -7.6556549072265625
    6. '**' → logprob: -7.7806549072265625
    7. '+
' → logprob: -7.9056549072265625
    8. '%' → logprob: -8.030654907226562
    9. '(' → logprob: -8.155654907226562
    10. ')' → logprob: -9.780654907226562

Token 6: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0281766653060913
    2. ' =' → logprob: -1.0281766653060913
    3. ' ' → logprob: -2.028176784515381
    4. ' +' → logprob: -2.903176784515381
    5. ')' → logprob: -3.278176784515381
    6. '=' → logprob: -3.403176784515381
    7. '[' → logprob: -4.653176784515381
    8. ' +=' → logprob: -5.028176784515381
    9. '*' → logprob: -5.528176784515381
    10. '  ' → logprob: -6.778176784515381

Token 7: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4740850329399109
    2. 'int' → logprob: -0.9740850329399109
    3. 'input' → logprob: -12.724084854125977
    4. ' input' → logprob: -13.224084854125977
    5. ' ' → logprob: -13.474084854125977
    6. '=int' → logprob: -13.974084854125977
    7. ' A' → logprob: -15.474084854125977
    8. '<int' → logprob: -15.724084854125977
    9. '[int' → logprob: -15.724084854125977
    10. '(int' → logprob: -15.974084854125977

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00033272415748797357
    2. '(input' → logprob: -8.750332832336426
    3. '()' → logprob: -9.750332832336426
    4. '(A' → logprob: -9.875332832336426
    5. ')' → logprob: -11.250332832336426
    6. '(

' → logprob: -11.250332832336426
    7. ' (' → logprob: -11.500332832336426
    8. '(
' → logprob: -11.625332832336426
    9. '(B' → logprob: -12.000332832336426
    10. ' ' → logprob: -13.125332832336426

Token 9: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4478706121444702
    2. ')' → logprob: -1.4478706121444702
    3. '()' → logprob: -2.0728707313537598
    4. '(' → logprob: -9.947870254516602
    5. ' ())' → logprob: -10.697870254516602
    6. '()))' → logprob: -11.197870254516602
    7. '))' → logprob: -11.447870254516602
    8. '`)' → logprob: -12.197870254516602
    9. '();)' → logprob: -12.947870254516602
    10. '```' → logprob: -13.072870254516602

Token 10: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19593949615955353
    2. 'if' → logprob: -2.320939540863037
    3. 'C' → logprob: -3.320939540863037
    4. 'result' → logprob: -3.820939540863037
    5. 'sum' → logprob: -4.820939540863037
    6. 's' → logprob: -4.945939540863037
    7. 'c' → logprob: -5.320939540863037
    8. 'total' → logprob: -7.195939540863037
    9. '+' → logprob: -7.945939540863037
    10. 'S' → logprob: -9.320939064025879

Token 11: ' (' (ID: 350)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.31863999366760254
    2. ' ' → logprob: -1.3186399936676025
    3. 'A' → logprob: -5.318639755249023
    4. ' B' → logprob: -8.318639755249023
    5. '  ' → logprob: -9.318639755249023
    6. ' ' → logprob: -9.943639755249023
    7. '<|end|>' → logprob: -10.693639755249023
    8. ' (' → logprob: -11.068639755249023
    9. ' a' → logprob: -11.818639755249023
    10. ''' → logprob: -12.068639755249023

Token 12: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1607176810503006
    2. ' A' → logprob: -1.9107177257537842
    3. 'B' → logprob: -7.910717487335205
    4. ' B' → logprob: -9.410717964172363
    5. ')' → logprob: -10.785717964172363
    6. ' ' → logprob: -11.410717964172363
    7. 'a' → logprob: -12.410717964172363
    8. '(A' → logprob: -13.035717964172363
    9. '	A' → logprob: -13.160717964172363
    10. ' )' → logprob: -13.660717964172363

Token 13: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.009472847916185856
    2. ' <' → logprob: -5.759472846984863
    3. ' >=' → logprob: -6.009472846984863
    4. '>' → logprob: -6.384472846984863
    5. ' <=' → logprob: -6.634472846984863
    6. ' ==' → logprob: -7.759472846984863
    7. ')' → logprob: -8.759472846984863
    8. ' )' → logprob: -8.884472846984863
    9. ' ' → logprob: -10.384472846984863
    10. '<' → logprob: -10.384472846984863

Token 14: ' ' (ID: 220)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.13021858036518097
    2. 'B' → logprob: -2.255218505859375
    3. ' ' → logprob: -4.130218505859375
    4. '0' → logprob: -7.255218505859375
    5. '1' → logprob: -8.630218505859375
    6. '=' → logprob: -9.505218505859375
    7. ' )' → logprob: -9.630218505859375
    8. ')' → logprob: -9.755218505859375
    9. '=B' → logprob: -10.630218505859375
    10. '10' → logprob: -10.880218505859375

Token 15: '1' (ID: 16)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.007332467939704657
    2. ' B' → logprob: -5.7573323249816895
    3. '0' → logprob: -5.8823323249816895
    4. '1' → logprob: -7.0073323249816895
    5. ' ' → logprob: -8.007332801818848
    6. '10' → logprob: -9.882332801818848
    7. '5' → logprob: -11.382332801818848
    8. '2' → logprob: -11.507332801818848
    9. '7' → logprob: -11.757332801818848
    10. '100' → logprob: -11.757332801818848

Token 16: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38856372237205505
    2. ')' → logprob: -1.3885637521743774
    3. '):' → logprob: -3.263563632965088
    4. ' )' → logprob: -3.638563632965088
    5. ' ):' → logprob: -5.513563632965088
    6. ' or' → logprob: -6.263563632965088
    7. 'and' → logprob: -6.263563632965088
    8. ' ' → logprob: -9.138564109802246
    9. ' ' → logprob: -11.013564109802246
    10. 'or' → logprob: -11.638564109802246

Token 17: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.01970663107931614
    2. 'B' → logprob: -4.019706726074219
    3. ' ' → logprob: -6.644706726074219
    4. ')' → logprob: -9.019706726074219
    5. ' ' → logprob: -9.519706726074219
    6. ' (' → logprob: -10.019706726074219
    7. ' A' → logprob: -12.269706726074219
    8. ' )' → logprob: -13.019706726074219
    9. ',' → logprob: -13.519706726074219
    10. '  ' → logprob: -13.644706726074219

Token 18: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.017806299030780792
    2. '==' → logprob: -4.142806529998779
    3. ')' → logprob: -6.892806529998779
    4. ' ' → logprob: -8.017806053161621
    5. ' )' → logprob: -8.517806053161621
    6. ' !=' → logprob: -9.142806053161621
    7. ' >' → logprob: -10.267806053161621
    8. ' ' → logprob: -10.892806053161621
    9. ' >=' → logprob: -11.142806053161621
    10. ' <' → logprob: -11.142806053161621

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014848584309220314
    2. '1' → logprob: -4.264848709106445
    3. '2' → logprob: -7.514848709106445
    4. '0' → logprob: -9.139848709106445
    5. ' )' → logprob: -11.639848709106445
    6. '3' → logprob: -12.139848709106445
    7. '  ' → logprob: -12.514848709106445
    8. ' A' → logprob: -13.077348709106445
    9. ' "' → logprob: -13.389848709106445
    10. ' '' → logprob: -13.514848709106445

Token 20: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47873255610466003
    2. ' ' → logprob: -1.1037325859069824
    3. '2' → logprob: -3.2287325859069824
    4. '0' → logprob: -4.728732585906982
    5. '3' → logprob: -8.603732109069824
    6. '5' → logprob: -9.853732109069824
    7. '4' → logprob: -10.353732109069824
    8. '10' → logprob: -10.853732109069824
    9. '  ' → logprob: -11.603732109069824
    10. '7' → logprob: -11.791232109069824

Token 21: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2521781325340271
    2. '):' → logprob: -1.5021781921386719
    3. ':' → logprob: -8.377178192138672
    4. ' )' → logprob: -11.877178192138672
    5. ' ):' → logprob: -12.252178192138672
    6. ':)' → logprob: -13.002178192138672
    7. ' and' → logprob: -13.252178192138672
    8. '):
' → logprob: -13.377178192138672
    9. 'and' → logprob: -14.752178192138672
    10. ' or' → logprob: -15.752178192138672

Token 22: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.554343366995454e-05
    2. ':
' → logprob: -10.500085830688477
    3. ' :' → logprob: -10.625085830688477
    4. ' and' → logprob: -10.750085830688477
    5. '):' → logprob: -11.750085830688477
    6. ' or' → logprob: -13.500085830688477
    7. 'and' → logprob: -13.750085830688477
    8. ')' → logprob: -14.750085830688477
    9. ':**' → logprob: -14.750085830688477
    10. '   ' → logprob: -15.500085830688477

Token 23: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.004102146718651056
    2. '(A' → logprob: -5.7541022300720215
    3. '(B' → logprob: -7.5041022300720215
    4. '(' → logprob: -8.629101753234863
    5. ' A' → logprob: -9.004101753234863
    6. ' ' → logprob: -10.754101753234863
    7. ' B' → logprob: -11.004101753234863
    8. 'A' → logprob: -11.254101753234863
    9. ' ' → logprob: -11.254101753234863
    10. 'B' → logprob: -12.504101753234863

Token 24: 'A' (ID: 32)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.1924690455198288
    2. 'A' → logprob: -1.8174690008163452
    3. ' B' → logprob: -4.692469120025635
    4. 'B' → logprob: -5.817469120025635
    5. ' (' → logprob: -7.942469120025635
    6. ' ' → logprob: -9.317468643188477
    7. '(A' → logprob: -10.192468643188477
    8. ' ' → logprob: -12.192468643188477
    9. '   ' → logprob: -12.317468643188477
    10. '(' → logprob: -12.942468643188477

Token 25: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006075387354940176
    2. '==' → logprob: -5.131075382232666
    3. ' ' → logprob: -9.756075859069824
    4. ' !=' → logprob: -10.131075859069824
    5. ' ' → logprob: -10.756075859069824
    6. ')' → logprob: -11.131075859069824
    7. ' =' → logprob: -12.631075859069824
    8. '=' → logprob: -13.256075859069824
    9. ' )' → logprob: -13.381075859069824
    10. '1' → logprob: -13.881075859069824

Token 26: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07317781448364258
    2. '1' → logprob: -3.1981778144836426
    3. '2' → logprob: -3.9481778144836426
    4. '3' → logprob: -4.573177814483643
    5. '4' → logprob: -10.573177337646484
    6. 'B' → logprob: -11.073177337646484
    7. ' B' → logprob: -11.198177337646484
    8. ' ' → logprob: -11.385677337646484
    9. '0' → logprob: -11.948177337646484
    10. '```' → logprob: -12.260677337646484

Token 27: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8231999278068542
    2. '2' → logprob: -1.323199987411499
    3. '3' → logprob: -1.698199987411499
    4. ' ' → logprob: -2.198199987411499
    5. '0' → logprob: -8.510700225830078
    6. '4' → logprob: -8.635700225830078
    7. ')' → logprob: -9.510700225830078
    8. '5' → logprob: -9.760700225830078
    9. '  ' → logprob: -10.885700225830078
    10. 'B' → logprob: -11.010700225830078

Token 28: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0014430918963626027
    2. 'and' → logprob: -6.626442909240723
    3. ' ' → logprob: -9.126442909240723
    4. ' )' → logprob: -12.626442909240723
    5. ')' → logprob: -12.876442909240723
    6. ' ==' → logprob: -13.876442909240723
    7. ' a' → logprob: -15.001442909240723
    8. ' ' → logprob: -15.001442909240723
    9. ' &&' → logprob: -15.126442909240723
    10. ' or' → logprob: -15.751442909240723

Token 29: ' B' (ID: 418)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05861366540193558
    2. '1' → logprob: -2.9336137771606445
    3. ' A' → logprob: -5.6836137771606445
    4. 'A' → logprob: -8.933613777160645
    5. '3' → logprob: -9.433613777160645
    6. ' B' → logprob: -9.558613777160645
    7. ' ' → logprob: -10.808613777160645
    8. 'B' → logprob: -12.058613777160645
    9. ')' → logprob: -12.621113777160645
    10. '  ' → logprob: -12.808613777160645

Token 30: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.034098707139492035
    2. '==' → logprob: -3.4090986251831055
    3. ')' → logprob: -7.9090986251831055
    4. ' ' → logprob: -10.034098625183105
    5. ' )' → logprob: -11.034098625183105
    6. ' ' → logprob: -11.159098625183105
    7. '=' → logprob: -13.034098625183105
    8. ')==' → logprob: -13.284098625183105
    9. ' =' → logprob: -13.534098625183105
    10. '<|end|>' → logprob: -14.034098625183105

Token 31: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6621853113174438
    2. ' ' → logprob: -0.7871853113174438
    3. '3' → logprob: -3.5371851921081543
    4. '2' → logprob: -11.037185668945312
    5. '4' → logprob: -11.662185668945312
    6. '0' → logprob: -11.787185668945312
    7. ')' → logprob: -12.724685668945312
    8. ' A' → logprob: -12.849685668945312
    9. ' ' → logprob: -13.099685668945312
    10. '  ' → logprob: -13.224685668945312

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04256973788142204
    2. '3' → logprob: -3.292569637298584
    3. ' ' → logprob: -5.417569637298584
    4. '4' → logprob: -10.292570114135742
    5. '2' → logprob: -10.417570114135742
    6. '5' → logprob: -12.167570114135742
    7. '0' → logprob: -12.667570114135742
    8. ')' → logprob: -13.855070114135742
    9. '6' → logprob: -14.230070114135742
    10. '7' → logprob: -14.355070114135742

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02636195719242096
    2. ')' → logprob: -3.6513619422912598
    3. ':' → logprob: -9.776362419128418
    4. ' ):' → logprob: -13.026362419128418
    5. '):
' → logprob: -13.151362419128418
    6. ''):' → logprob: -15.776362419128418
    7. ')):' → logprob: -16.0263614654541
    8. '):

' → logprob: -16.5263614654541
    9. ')：' → logprob: -16.6513614654541
    10. ' )' → logprob: -16.7763614654541

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27757295966148376
    2. ':' → logprob: -1.5275729894638062
    3. ':
' → logprob: -4.277573108673096
    4. 'print' → logprob: -4.777573108673096
    5. ' print' → logprob: -5.902573108673096
    6. '	print' → logprob: -9.402572631835938
    7. '```' → logprob: -10.027572631835938
    8. ' :' → logprob: -10.277572631835938
    9. ':\' → logprob: -10.402572631835938
    10. ' ' → logprob: -10.777572631835938

Token 35: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0025710216723382473
    2. '   ' → logprob: -6.252571105957031
    3. ' print' → logprob: -7.377571105957031
    4. ' ' → logprob: -11.627571105957031
    5. 'pass' → logprob: -13.252571105957031
    6. '  ' → logprob: -13.627571105957031
    7. '	print' → logprob: -13.752571105957031
    8. '```' → logprob: -13.752571105957031
    9. 'pr' → logprob: -14.252571105957031
    10. '       ' → logprob: -14.752571105957031

Token 36: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20596618950366974
    2. '("' → logprob: -1.7059662342071533
    3. '('' → logprob: -5.580965995788574
    4. '("("' → logprob: -7.580965995788574
    5. '("")' → logprob: -9.330965995788574
    6. '"' → logprob: -9.580965995788574
    7. '("""' → logprob: -10.580965995788574
    8. '()' → logprob: -11.330965995788574
    9. ' (' → logprob: -11.580965995788574
    10. '(""' → logprob: -11.580965995788574

Token 37: '3' (ID: 18)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.344570517539978
    2. '3' → logprob: -1.344570517539978
    3. ''' → logprob: -4.219570636749268
    4. '1' → logprob: -4.844570636749268
    5. '"A' → logprob: -5.969570636749268
    6. '"B' → logprob: -6.969570636749268
    7. '2' → logprob: -7.344570636749268
    8. '"D' → logprob: -7.469570636749268
    9. ''A' → logprob: -7.844570636749268
    10. '"W' → logprob: -7.969570636749268

Token 38: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -14.625001907348633
    4. '))' → logprob: -15.875001907348633
    5. '')' → logprob: -16.250001907348633
    6. '()' → logprob: -16.625001907348633
    7. ')`' → logprob: -16.750001907348633
    8. '`)' → logprob: -17.125001907348633
    9. '```' → logprob: -17.125001907348633
    10. '")' → logprob: -17.375001907348633

Token 39: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.569369375705719
    2. 'else' → logprob: -1.0693693161010742
    3. '```' → logprob: -3.319369316101074
    4. '\n' → logprob: -3.819369316101074
    5. 'e' → logprob: -4.194369316101074
    6. ':' → logprob: -5.194369316101074
    7. ' else' → logprob: -5.444369316101074
    8. ' elif' → logprob: -6.319369316101074
    9. '
' → logprob: -6.819369316101074
    10. '.' → logprob: -6.944369316101074

Token 40: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0369718037545681
    2. ' A' → logprob: -3.4119718074798584
    3. '(A' → logprob: -6.161971569061279
    4. 'A' → logprob: -7.286971569061279
    5. '(' → logprob: -8.036972045898438
    6. ' ' → logprob: -9.161972045898438
    7. ' B' → logprob: -10.161972045898438
    8. ' ' → logprob: -11.286972045898438
    9. 'B' → logprob: -11.911972045898438
    10. '(B' → logprob: -12.036972045898438

Token 41: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.031049257144331932
    2. ' A' → logprob: -3.5310492515563965
    3. ' (' → logprob: -7.2810492515563965
    4. '(A' → logprob: -7.9060492515563965
    5. 'B' → logprob: -8.656049728393555
    6. '(' → logprob: -10.531049728393555
    7. ' ' → logprob: -11.406049728393555
    8. ')' → logprob: -12.281049728393555
    9. '   ' → logprob: -12.281049728393555
    10. ' B' → logprob: -12.531049728393555

Token 42: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02640305645763874
    2. '==' → logprob: -3.6514029502868652
    3. ' ' → logprob: -9.526403427124023
    4. ')' → logprob: -11.776403427124023
    5. ' ' → logprob: -11.901403427124023
    6. '<|end|>' → logprob: -13.276403427124023
    7. '=' → logprob: -13.401403427124023
    8. ' )' → logprob: -13.526403427124023
    9. ' !=' → logprob: -13.526403427124023
    10. '1' → logprob: -13.526403427124023

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2413952350616455
    2. ' ' → logprob: -1.6163952350616455
    3. '3' → logprob: -4.241394996643066
    4. '2' → logprob: -6.616394996643066
    5. '4' → logprob: -10.241394996643066
    6. '0' → logprob: -10.428894996643066
    7. 'A' → logprob: -10.553894996643066
    8. ' A' → logprob: -11.303894996643066
    9. 'B' → logprob: -12.053894996643066
    10. '5' → logprob: -13.303894996643066

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11777956783771515
    2. '3' → logprob: -2.867779493331909
    3. '2' → logprob: -3.617779493331909
    4. ' ' → logprob: -3.617779493331909
    5. '0' → logprob: -8.492779731750488
    6. '4' → logprob: -8.617779731750488
    7. 'A' → logprob: -9.305279731750488
    8. 'B' → logprob: -10.867779731750488
    9. ' A' → logprob: -11.055279731750488
    10. '5' → logprob: -11.180279731750488

Token 45: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06996878236532211
    2. 'and' → logprob: -2.6949687004089355
    3. ' ' → logprob: -10.569969177246094
    4. ' or' → logprob: -12.069969177246094
    5. ' ' → logprob: -15.069969177246094
    6. ' и' → logprob: -15.694969177246094
    7. '<|end|>' → logprob: -15.819969177246094
    8. ')' → logprob: -15.944969177246094
    9. ' a' → logprob: -16.194969177246094
    10. 'or' → logprob: -17.319969177246094

Token 46: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.013941111043095589
    2. 'B' → logprob: -4.513941287994385
    3. ' ' → logprob: -5.888941287994385
    4. ' A' → logprob: -10.263940811157227
    5. '3' → logprob: -10.763940811157227
    6. '2' → logprob: -11.388940811157227
    7. '  ' → logprob: -11.763940811157227
    8. '    ' → logprob: -12.013940811157227
    9. '   ' → logprob: -12.138940811157227
    10. ' and' → logprob: -12.138940811157227

Token 47: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01827460713684559
    2. '==' → logprob: -4.018274784088135
    3. ' ' → logprob: -9.143274307250977
    4. ')' → logprob: -12.018274307250977
    5. ' ' → logprob: -12.143274307250977
    6. '=' → logprob: -13.768274307250977
    7. ' =' → logprob: -14.018274307250977
    8. ' ==
' → logprob: -14.268274307250977
    9. ' )' → logprob: -14.518274307250977
    10. '3' → logprob: -14.518274307250977

Token 48: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.024733005091547966
    2. ' ' → logprob: -3.899733066558838
    3. '1' → logprob: -5.524733066558838
    4. '2' → logprob: -8.89973258972168
    5. '4' → logprob: -10.39973258972168
    6. ')' → logprob: -11.96223258972168
    7. '0' → logprob: -12.58723258972168
    8. '   ' → logprob: -12.83723258972168
    9. '  ' → logprob: -12.89973258972168
    10. '5' → logprob: -13.14973258972168

Token 49: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.006932519841939211
    2. '1' → logprob: -5.006932735443115
    3. ' ' → logprob: -8.756932258605957
    4. '2' → logprob: -10.381932258605957
    5. '4' → logprob: -11.319432258605957
    6. ')' → logprob: -12.569432258605957
    7. '5' → logprob: -13.006932258605957
    8. '0' → logprob: -13.069432258605957
    9. '

' → logprob: -13.444432258605957
    10. '   ' → logprob: -13.944432258605957

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00130094971973449
    2. ' )' → logprob: -7.126300811767578
    3. '):' → logprob: -7.626300811767578
    4. ':' → logprob: -12.251300811767578
    5. ' ):' → logprob: -12.751300811767578
    6. ':)' → logprob: -14.751300811767578
    7. ' or' → logprob: -15.251300811767578
    8. ' ' → logprob: -15.876300811767578
    9. 'or' → logprob: -16.001300811767578
    10. '   ' → logprob: -16.251300811767578

Token 51: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8193012475967407
    2. ' or' → logprob: -1.4443012475967407
    3. ' and' → logprob: -1.5693012475967407
    4. ' :' → logprob: -2.194301128387451
    5. 'and' → logprob: -6.444301128387451
    6. ' ' → logprob: -6.569301128387451
    7. 'or' → logprob: -8.31930160522461
    8. '   ' → logprob: -8.31930160522461
    9. '    ' → logprob: -9.69430160522461
    10. '  ' → logprob: -9.94430160522461

Token 52: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0005710251862183213
    2. '(' → logprob: -7.625571250915527
    3. '(A' → logprob: -9.875571250915527
    4. '<|end|>' → logprob: -10.875571250915527
    5. ' ' → logprob: -11.625571250915527
    6. '(B' → logprob: -12.875571250915527
    7. ' A' → logprob: -14.625571250915527
    8. ' ' → logprob: -15.625571250915527
    9. ' ((' → logprob: -16.00057029724121
    10. ')' → logprob: -16.00057029724121

Token 53: 'A' (ID: 32)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.32966500520706177
    2. ' (' → logprob: -1.329664945602417
    3. ' A' → logprob: -4.829665184020996
    4. '(' → logprob: -5.454665184020996
    5. 'A' → logprob: -5.704665184020996
    6. '(B' → logprob: -7.704665184020996
    7. ' ' → logprob: -9.329665184020996
    8. 'B' → logprob: -9.579665184020996
    9. ' B' → logprob: -10.579665184020996
    10. ')' → logprob: -11.079665184020996

Token 54: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.043129581958055496
    2. '==' → logprob: -3.1681296825408936
    3. '<|end|>' → logprob: -9.293129920959473
    4. ' ' → logprob: -11.168129920959473
    5. ' ' → logprob: -11.793129920959473
    6. ' =' → logprob: -12.043129920959473
    7. '=' → logprob: -12.168129920959473
    8. ')' → logprob: -12.418129920959473
    9. '<|end|>' → logprob: -15.043129920959473
    10. ' #' → logprob: -15.168129920959473

Token 55: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2811603248119354
    2. '3' → logprob: -1.4061603546142578
    3. '1' → logprob: -13.218660354614258
    4. '  ' → logprob: -13.406160354614258
    5. '<|end|>' → logprob: -13.406160354614258
    6. '```' → logprob: -13.593660354614258
    7. '2' → logprob: -13.781160354614258
    8. ' ' → logprob: -13.781160354614258
    9. ')' → logprob: -15.343660354614258
    10. '۳' → logprob: -15.343660354614258

Token 56: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0005537479883059859
    2. ' ' → logprob: -7.500553607940674
    3. '۳' → logprob: -15.375554084777832
    4. '1' → logprob: -15.875554084777832
    5. '  ' → logprob: -16.688053131103516
    6. '৩' → logprob: -16.875553131103516
    7. '३' → logprob: -17.063053131103516
    8. '３' → logprob: -17.063053131103516
    9. '```' → logprob: -17.125553131103516
    10. '   ' → logprob: -17.188053131103516

Token 57: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06206526979804039
    2. 'and' → logprob: -2.812065362930298
    3. ' ==' → logprob: -10.187065124511719
    4. ' ' → logprob: -10.187065124511719
    5. '==' → logprob: -10.812065124511719
    6. ' ' → logprob: -13.937065124511719
    7. '<|end|>' → logprob: -14.812065124511719
    8. ')' → logprob: -15.062065124511719
    9. '1' → logprob: -15.312065124511719
    10. '	and' → logprob: -15.687065124511719

Token 58: ' B' (ID: 418)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.033714283257722855
    2. '1' → logprob: -3.4087142944335938
    3. '<|end|>' → logprob: -9.908714294433594
    4. ' ' → logprob: -11.408714294433594
    5. ' B' → logprob: -12.658714294433594
    6. '  ' → logprob: -13.033714294433594
    7. ' A' → logprob: -13.908714294433594
    8. 'B' → logprob: -14.658714294433594
    9. '```' → logprob: -15.408714294433594
    10. ')' → logprob: -15.783714294433594

Token 59: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6331583261489868
    2. ' ==' → logprob: -0.7581583261489868
    3. ')' → logprob: -8.508158683776855
    4. '=' → logprob: -8.883158683776855
    5. ' ' → logprob: -9.258158683776855
    6. '1' → logprob: -9.758158683776855
    7. ' ' → logprob: -10.883158683776855
    8. ' =' → logprob: -11.133158683776855
    9. '<|end|>' → logprob: -11.383158683776855
    10. ')==' → logprob: -12.008158683776855

Token 60: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.348460853099823
    2. '1' → logprob: -1.2234609127044678
    3. '<|end|>' → logprob: -11.348461151123047
    4. ' ' → logprob: -12.973461151123047
    5. '  ' → logprob: -14.348461151123047
    6. '   ' → logprob: -14.473461151123047
    7. '```' → logprob: -14.848461151123047
    8. ')' → logprob: -15.723461151123047
    9. 'user' → logprob: -16.535961151123047
    10. '2' → logprob: -16.535961151123047

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010342379100620747
    2. ' ' → logprob: -6.876034259796143
    3. '2' → logprob: -13.626033782958984
    4. '<|end|>' → logprob: -16.251033782958984
    5. '```' → logprob: -16.751033782958984
    6. '  ' → logprob: -16.876033782958984
    7. '   ' → logprob: -17.001033782958984
    8. '１' → logprob: -17.501033782958984
    9. ')' → logprob: -17.501033782958984
    10. ' ' → logprob: -18.251033782958984

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032109846360981464
    2. ':' → logprob: -6.12821102142334
    3. ')' → logprob: -7.00321102142334
    4. '):
' → logprob: -9.25321102142334
    5. ' ):' → logprob: -11.00321102142334
    6. '   ' → logprob: -12.75321102142334
    7. ''):' → logprob: -15.50321102142334
    8. ':)' → logprob: -15.87821102142334
    9. ' ' → logprob: -16.003210067749023
    10. '):
' → logprob: -16.128210067749023

Token 63: '   ' (ID: 271)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.6573061347007751
    2. '2' → logprob: -1.03230619430542
    3. '4' → logprob: -3.03230619430542
    4. ' ' → logprob: -3.28230619430542
    5. '   ' → logprob: -3.65730619430542
    6. '    ' → logprob: -5.28230619430542
    7. '3' → logprob: -5.40730619430542
    8. '    
' → logprob: -7.03230619430542
    9. 'print' → logprob: -7.03230619430542
    10. '5' → logprob: -7.78230619430542

Token 64: ' print' (ID: 2123)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005814790725708008
    2. 'print' (adapté à ' print') → logprob: -5.505814552307129
    3. '4' → logprob: -7.130814552307129
    4. '6' → logprob: -7.255814552307129
    5. ' ' → logprob: -8.880814552307129
    6. '   ' → logprob: -9.755814552307129
    7. '3' → logprob: -11.630814552307129
    8. '```' → logprob: -11.630814552307129
    9. ' print' → logprob: -11.630814552307129
    10. '5' → logprob: -13.130814552307129

Token 65: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005083491560071707
    2. '6' → logprob: -5.8800835609436035
    3. '4' → logprob: -6.7550835609436035
    4. '5' → logprob: -7.6300835609436035
    5. '2' → logprob: -7.7550835609436035
    6. ' ' → logprob: -9.130083084106445
    7. '9' → logprob: -10.255083084106445
    8. ' (' → logprob: -10.755083084106445
    9. '7' → logprob: -11.380083084106445
    10. '3' → logprob: -11.880083084106445

Token 66: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002853136509656906
    2. '4' → logprob: -5.877852916717529
    3. '3' → logprob: -10.627853393554688
    4. '5' → logprob: -11.252853393554688
    5. '6' → logprob: -12.127853393554688
    6. ' ' → logprob: -12.377853393554688
    7. '```' → logprob: -14.127853393554688
    8. '   ' → logprob: -15.377853393554688
    9. '

' → logprob: -15.752853393554688
    10. '``' → logprob: -16.252853393554688

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014169624075293541
    2. ')
' → logprob: -4.264169692993164
    3. ' )' → logprob: -13.014169692993164
    4. '   ' → logprob: -14.014169692993164
    5. 'elif' → logprob: -14.139169692993164
    6. ')
' → logprob: -14.389169692993164
    7. 'else' → logprob: -14.889169692993164
    8. '')' → logprob: -15.014169692993164
    9. ' )
' → logprob: -15.139169692993164
    10. ')

' → logprob: -15.389169692993164

Token 68: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.001714093261398375
    2. 'else' → logprob: -6.37671422958374
    3. 'el' → logprob: -11.626713752746582
    4. 'eli' → logprob: -14.126713752746582
    5. ' elif' → logprob: -14.126713752746582
    6. '```' → logprob: -14.376713752746582
    7. 'e' → logprob: -14.501713752746582
    8. '...' → logprob: -15.626713752746582
    9. 'els' → logprob: -15.876713752746582
    10. 'elseif' → logprob: -16.0017147064209

Token 69: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.00011713240382960066
    2. '(' → logprob: -9.625117301940918
    3. '(A' → logprob: -10.000117301940918
    4. ' ' → logprob: -12.875117301940918
    5. '(B' → logprob: -13.000117301940918
    6. ' ((' → logprob: -15.000117301940918
    7. ' A' → logprob: -16.0001163482666
    8. ' ' → logprob: -16.0001163482666
    9. 'A' → logprob: -17.5001163482666
    10. ' "' → logprob: -17.6251163482666

Token 70: 'A' (ID: 32)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.12480486184358597
    2. ' (' → logprob: -2.374804973602295
    3. 'A' → logprob: -4.249804973602295
    4. '(B' → logprob: -5.624804973602295
    5. '(' → logprob: -5.624804973602295
    6. ' A' → logprob: -6.374804973602295
    7. 'B' → logprob: -6.999804973602295
    8. ' ' → logprob: -9.124804496765137
    9. ' B' → logprob: -10.374804496765137
    10. '   ' → logprob: -11.124804496765137

Token 71: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.029847797006368637
    2. '==' → logprob: -3.5298478603363037
    3. ' ' → logprob: -9.404848098754883
    4. ' ' → logprob: -11.904848098754883
    5. '=' → logprob: -12.529848098754883
    6. ' =' → logprob: -13.654848098754883
    7. '  ' → logprob: -14.779848098754883
    8. ')' → logprob: -15.279848098754883
    9. '[' → logprob: -15.467348098754883
    10. '```' → logprob: -15.467348098754883

Token 72: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07950334250926971
    2. '3' → logprob: -3.204503297805786
    3. '2' → logprob: -3.329503297805786
    4. ' (' → logprob: -11.579503059387207
    5. '(' → logprob: -11.829503059387207
    6. '  ' → logprob: -12.204503059387207
    7. ')' → logprob: -12.204503059387207
    8. '1' → logprob: -13.079503059387207
    9. '<|end|>' → logprob: -13.829503059387207
    10. '4' → logprob: -13.954503059387207

Token 73: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011158646084368229
    2. '3' → logprob: -5.136158466339111
    3. ' ' → logprob: -5.261158466339111
    4. '(' → logprob: -10.63615894317627
    5. '  ' → logprob: -13.88615894317627
    6. ' (' → logprob: -14.38615894317627
    7. '<|end|>' → logprob: -14.94865894317627
    8. '```' → logprob: -15.01115894317627
    9. '   ' → logprob: -15.38615894317627
    10. '۲' → logprob: -15.82365894317627

Token 74: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0037553056608885527
    2. 'and' → logprob: -5.62875509262085
    3. ' ' → logprob: -8.878755569458008
    4. ' ==' → logprob: -11.503755569458008
    5. '<|end|>' → logprob: -13.378755569458008
    6. ' ' → logprob: -13.628755569458008
    7. '==' → logprob: -14.128755569458008
    8. ' or' → logprob: -14.253755569458008
    9. ')' → logprob: -14.628755569458008
    10. '```' → logprob: -15.503755569458008

Token 75: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.1510232836008072
    2. 'B' → logprob: -2.1510233879089355
    3. ' ' → logprob: -3.9010233879089355
    4. '3' → logprob: -5.6510233879089355
    5. '  ' → logprob: -10.776022911071777
    6. '<|end|>' → logprob: -11.026022911071777
    7. '1' → logprob: -11.651022911071777
    8. ' ' → logprob: -12.026022911071777
    9. ' (' → logprob: -12.276022911071777
    10. '2' → logprob: -12.401022911071777

Token 76: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4291260838508606
    2. ' ==' → logprob: -1.0541260242462158
    3. ' ' → logprob: -8.179125785827637
    4. '=' → logprob: -9.304125785827637
    5. '3' → logprob: -10.929125785827637
    6. ' ' → logprob: -11.679125785827637
    7. '==
' → logprob: -11.679125785827637
    8. ')' → logprob: -12.179125785827637
    9. 'and' → logprob: -12.929125785827637
    10. ' and' → logprob: -12.929125785827637

Token 77: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.28115323185920715
    2. ' ' → logprob: -1.4061532020568848
    3. '<|end|>' → logprob: -13.406153678894043
    4. '  ' → logprob: -15.031153678894043
    5. '۳' → logprob: -15.281153678894043
    6. '   ' → logprob: -15.406153678894043
    7. '```' → logprob: -15.906153678894043
    8. '1' → logprob: -15.906153678894043
    9. ')' → logprob: -16.281152725219727
    10. ' ' → logprob: -16.468652725219727

Token 78: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.872261317563243e-05
    2. ' ' → logprob: -9.750059127807617
    3. '۳' → logprob: -15.625059127807617
    4. '1' → logprob: -15.750059127807617
    5. '<|end|>' → logprob: -17.125059127807617
    6. '৩' → logprob: -17.375059127807617
    7. '   ' → logprob: -17.375059127807617
    8. '  ' → logprob: -17.937559127807617
    9. '३' → logprob: -17.937559127807617
    10. '３' → logprob: -18.000059127807617

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031837786082178354
    2. ' )' → logprob: -5.753183841705322
    3. ' or' → logprob: -13.253183364868164
    4. '):' → logprob: -13.503183364868164
    5. ' and' → logprob: -14.003183364868164
    6. ' ' → logprob: -14.378183364868164
    7. 'or' → logprob: -15.503183364868164
    8. ':' → logprob: -15.503183364868164
    9. 'and' → logprob: -15.628183364868164
    10. '`)' → logprob: -15.878183364868164

Token 80: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.058753851801157
    2. ' and' → logprob: -3.0587539672851562
    3. ' ' → logprob: -5.308753967285156
    4. ':' → logprob: -5.808753967285156
    5. 'or' → logprob: -6.933753967285156
    6. ' :' → logprob: -7.058753967285156
    7. 'and' → logprob: -8.433753967285156
    8. '  ' → logprob: -10.308753967285156
    9. ')' → logprob: -11.308753967285156
    10. ' ==' → logprob: -11.308753967285156

Token 81: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.026448922231793404
    2. '(' → logprob: -3.651448965072632
    3. ' ' → logprob: -9.276449203491211
    4. '(A' → logprob: -10.651449203491211
    5. ''' → logprob: -11.276449203491211
    6. ')' → logprob: -12.276449203491211
    7. '<|end|>' → logprob: -12.526449203491211
    8. '"' → logprob: -12.776449203491211
    9. '(B' → logprob: -13.276449203491211
    10. '(space' → logprob: -13.276449203491211

Token 82: 'A' (ID: 32)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3070487380027771
    2. '(A' → logprob: -1.5570487976074219
    3. ' (' → logprob: -3.682048797607422
    4. '(B' → logprob: -3.807048797607422
    5. 'A' → logprob: -5.807048797607422
    6. 'B' → logprob: -6.182048797607422
    7. ')' → logprob: -7.557048797607422
    8. ' A' → logprob: -8.057048797607422
    9. ' ' → logprob: -8.682048797607422
    10. ' B' → logprob: -9.182048797607422

Token 83: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.018414702266454697
    2. '==' → logprob: -4.018414497375488
    3. '<|end|>' → logprob: -9.268414497375488
    4. ' ' → logprob: -9.518414497375488
    5. ' =' → logprob: -9.768414497375488
    6. '=' → logprob: -10.643414497375488
    7. ')' → logprob: -12.018414497375488
    8. ' ' → logprob: -13.018414497375488
    9. '```' → logprob: -13.643414497375488
    10. ' ===' → logprob: -13.768414497375488

Token 84: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20365948975086212
    2. '3' → logprob: -2.0786595344543457
    3. '2' → logprob: -2.8286595344543457
    4. '32' → logprob: -10.953659057617188
    5. '(' → logprob: -11.203659057617188
    6. '<|end|>' → logprob: -11.203659057617188
    7. '  ' → logprob: -11.703659057617188
    8. ' (' → logprob: -11.828659057617188
    9. ')' → logprob: -12.953659057617188
    10. '1' → logprob: -13.328659057617188

Token 85: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.002747457940131426
    2. '2' → logprob: -6.002747535705566
    3. ' ' → logprob: -8.252747535705566
    4. '32' → logprob: -11.502747535705566
    5. '  ' → logprob: -14.877747535705566
    6. '1' → logprob: -15.502747535705566
    7. '<|end|>' → logprob: -15.752747535705566
    8. '   ' → logprob: -16.37774658203125
    9. '۳' → logprob: -16.75274658203125
    10. ')' → logprob: -17.12774658203125

Token 86: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02179691195487976
    2. 'and' → logprob: -3.896796941757202
    3. ' ' → logprob: -6.771796703338623
    4. ' ==' → logprob: -10.271797180175781
    5. '<|end|>' → logprob: -10.271797180175781
    6. '==' → logprob: -10.646797180175781
    7. ')' → logprob: -11.896797180175781
    8. ' ' → logprob: -12.271797180175781
    9. ' a' → logprob: -13.396797180175781
    10. ' )' → logprob: -14.521797180175781

Token 87: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.1408199965953827
    2. ' ' → logprob: -2.390820026397705
    3. 'B' → logprob: -3.265820026397705
    4. '2' → logprob: -6.640820026397705
    5. '<|end|>' → logprob: -8.765819549560547
    6. ' ' → logprob: -9.140819549560547
    7. ')' → logprob: -11.015819549560547
    8. '1' → logprob: -11.265819549560547
    9. '  ' → logprob: -11.390819549560547
    10. ' )' → logprob: -12.390819549560547

Token 88: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04365967586636543
    2. '==' → logprob: -3.2936596870422363
    3. ' ' → logprob: -5.918659687042236
    4. '2' → logprob: -6.293659687042236
    5. ')' → logprob: -7.293659687042236
    6. '<|end|>' → logprob: -9.043659210205078
    7. ' =' → logprob: -9.168659210205078
    8. '=' → logprob: -9.543659210205078
    9. '1' → logprob: -10.543659210205078
    10. ' ' → logprob: -10.793659210205078

Token 89: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006717267446219921
    2. ' ' → logprob: -5.006717205047607
    3. '   ' → logprob: -14.506717681884766
    4. '<|end|>' → logprob: -14.756717681884766
    5. '  ' → logprob: -15.131717681884766
    6. ')' → logprob: -15.756717681884766
    7. '۲' → logprob: -15.881717681884766
    8. '```' → logprob: -16.256717681884766
    9. '...' → logprob: -17.069217681884766
    10. '`' → logprob: -17.194217681884766

Token 90: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '<|end|>' → logprob: -17.500015258789062
    4. ')' → logprob: -17.625015258789062
    5. '```' → logprob: -17.875015258789062
    6. '۲' → logprob: -18.062515258789062
    7. '1' → logprob: -18.375015258789062
    8. '   ' → logprob: -18.812515258789062
    9. 'B' → logprob: -19.000015258789062
    10. ''' → logprob: -19.000015258789062

Token 91: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007912635803222656
    2. ')' → logprob: -5.007912635803223
    3. ':' → logprob: -7.382912635803223
    4. '):
' → logprob: -7.757912635803223
    5. ' ):' → logprob: -8.882912635803223
    6. ' )' → logprob: -13.132912635803223
    7. '   ' → logprob: -13.507912635803223
    8. ':)' → logprob: -13.757912635803223
    9. ' ' → logprob: -13.882912635803223
    10. '):

' → logprob: -14.132912635803223

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5193403363227844
    2. '1' → logprob: -1.2693402767181396
    3. 'print' → logprob: -2.3943402767181396
    4. ' print' → logprob: -3.5193402767181396
    5. ' ' → logprob: -6.269340515136719
    6. '    ' → logprob: -7.769340515136719
    7. '4' → logprob: -7.894340515136719
    8. '    
' → logprob: -8.519340515136719
    9. '  ' → logprob: -9.019340515136719
    10. '```' → logprob: -9.519340515136719

Token 93: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006513810250908136
    2. '1' → logprob: -5.131513595581055
    3. ' print' → logprob: -7.506513595581055
    4. 'pr' → logprob: -11.381513595581055
    5. '   ' → logprob: -11.506513595581055
    6. 'prin' → logprob: -12.131513595581055
    7. ' ' → logprob: -12.756513595581055
    8. 'pri' → logprob: -13.381513595581055
    9. 'p' → logprob: -14.131513595581055
    10. '```' → logprob: -14.506513595581055

Token 94: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001468557515181601
    2. '1' → logprob: -6.626468658447266
    3. ' (' → logprob: -9.501468658447266
    4. '(
' → logprob: -9.876468658447266
    5. ' ' → logprob: -11.626468658447266
    6. '('' → logprob: -13.001468658447266
    7. '"' → logprob: -13.376468658447266
    8. '((' → logprob: -14.126468658447266
    9. '("' → logprob: -14.251468658447266
    10. '`' → logprob: -14.751468658447266

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '"' → logprob: -15.875019073486328
    4. ''' → logprob: -16.125019073486328
    5. '```' → logprob: -17.500019073486328
    6. ')' → logprob: -17.625019073486328
    7. '`' → logprob: -17.812519073486328
    8. '(' → logprob: -18.000019073486328
    9. '2' → logprob: -18.250019073486328
    10. '3' → logprob: -19.125019073486328

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.309382373117842e-05
    2. '):' → logprob: -10.750033378601074
    3. ')
' → logprob: -11.875033378601074
    4. ':' → logprob: -12.500033378601074
    5. ' )' → logprob: -14.250033378601074
    6. '))' → logprob: -16.500032424926758
    7. '):
' → logprob: -17.000032424926758
    8. '')' → logprob: -17.375032424926758
    9. '   ' → logprob: -17.750032424926758
    10. ' ' → logprob: -18.250032424926758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 94
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 90
Précision stricte (1ère position): 59.57%
Précision adaptée (1ère position): 61.70%
Précision (top 10): 95.74%
================================================================================
