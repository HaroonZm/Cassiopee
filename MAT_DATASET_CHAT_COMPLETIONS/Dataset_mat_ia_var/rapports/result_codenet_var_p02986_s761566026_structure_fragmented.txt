================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from itertools import combinations, permutations, product, combinations_with_replacement, accumulate
from heapq import heapify, heappop, heappush, heappushpop
from bisect import bisect_left, bisect_right
from collections import Counter, defaultdict, deque
from math import sqrt, log, floor, ceil, factorial, cos, sin, pi
from fractions import gcd
from operator import mul
from functools import reduce

def set_recursion_limit():
    sys.setrecursionlimit(10 ** 8)

def get_input():
    return sys.stdin.readline

def get_constants():
    INF = float('inf')
    LINF = 2 ** 63 - 1
    NIL = -LINF
    MOD = 10 ** 9 + 7
    MGN = 4
    return INF, LINF, NIL, MOD, MGN

def AST(exp: bool, msg: str = ""):
    assert exp, msg

def TAST(exp: bool, msg=""):
    if exp is False:
        print("TAssertionError:", msg)
    while exp is False:
        pass

def EPR(msg):
    print(msg, file=sys.stderr)

def II(input_func):
    return int(input_func())

def IF(input_func):
    return float(input_func())

def IS(input_func):
    return input_func().replace('\n', '')

def ILCI(n: int, input_func):
    return [II(input_func) for _ in range(n)]

def ILCF(n: int, input_func):
    return [IF(input_func) for _ in range(n)]

def ILI(input_func):
    return list(map(int, input_func().split()))

def ILLI(n: int, input_func):
    return [[int(j) for j in input_func().split()] for _ in range(n)]

def ILF(input_func):
    return list(map(float, input_func().split()))

def ILLF(n: int, input_func):
    return [[float(j) for j in input_func().split()] for _ in range(n)]

def LTOS(lst: list, sep: str = ' '):
    return sep.join(map(str, lst))

def DEC(lst: list):
    return list(map(lambda x: x - 1, lst))

def INC(lst: list):
    return list(map(lambda x: x + 1, lst))

class Queue:
    def __init__(self) -> None:
        self.items = deque()
    def is_empty(self) -> bool:
        return len(self.items) == 0
    def enqueue(self, item) -> None:
        self.items.appendleft(item)
    def insert(self, item) -> None:
        self.enqueue(item)
    def dequeue(self):
        return self.items.pop()
    def front(self):
        return self.items[-1]
    def pop(self) -> None:
        self.items.pop()
    def size(self) -> int:
        return len(self.items)

def create_lca(N):
    return LCA(N)

def get_zero_list(n):
    return [0] * n

def add_edges(gr, es, N, input_func):
    for _ in range(N - 1):
        a, b, col, dist = ILI(input_func)
        a, b = a - 1, b - 1
        es[a].append((b, dist, col))
        es[b].append((a, dist, col))
        gr.add_edge(a, b, dist)

def create_LCA_queries(Q, gr, ans, qs, input_func):
    for i in range(Q):
        cx, dy, a, b = ILI(input_func)
        a, b = a - 1, b - 1
        c = gr.lca(a, b)
        ans[i] = gr.costs[a] + gr.costs[b] - gr.costs[c] * 2
        qs[a].append((cx, i, 1, dy))
        qs[b].append((cx, i, 1, dy))
        qs[c].append((cx, i, -2, dy))

def get_list_n_lists(n):
    return [[] for _ in range(n)]

def get_tr_list(N):
    return [{} for _ in range(N+1)]

def get_vis_list(N):
    return [False] * (N+1)

def update_ans_for_query(q, sum_, cnt, ans):
    col, qid, coeff, dist = q
    x = -sum_[col]
    x += dist * cnt[col]
    ans[qid] += x * coeff

def process_single_stack_element(sk, tr, v, p, cl, cs, cnt, sum_, vis, es, qs, ans):
    if len(es[v]) == 1:
        sk.pop()
    if vis[v] and p >= 0:
        cl, cs = tr[p][v]
        cnt[cl] -= 1
        sum_[cl] -= cs
        tr[p].pop(v)
        sk.pop()
        return True
    cnt[cl] += 1
    sum_[cl] += cs
    for q in qs[v]:
        update_ans_for_query(q, sum_, cnt, ans)
    vis[v] = True
    for (to, co, col) in reversed(es[v]):
        if to == p:
            continue
        sk.append((to, v, col, co))
        tr[v][to] = (col, co)
    if len(tr[v]) == 0 and p >= 0:
        cl, cs = tr[p][v]
        cnt[cl] -= 1
        sum_[cl] -= cs
        tr[p].pop(v)
    return False

def dfs2_fragmented(es, qs, cnt, sum_, N, ans):
    sk = []
    tr = get_tr_list(N)
    vis = get_vis_list(N)
    def process_initial(v):
        for q in qs[v]:
            update_ans_for_query(q, sum_, cnt, ans)
        vis[v] = True
        for (to, co, col) in reversed(es[v]):
            if to == -1:
                continue
            sk.append((to, v, col, co))
            tr[v][to] = (col, co)
    process_initial(0)
    while sk:
        v, p, cl, cs = sk[-1]
        stop = process_single_stack_element(sk, tr, v, p, cl, cs, cnt, sum_, vis, es, qs, ans)
        if stop:
            continue

def read_graph_and_queries(N, Q, input_func):
    gr = create_lca(N)
    es = get_list_n_lists(N)
    add_edges(gr, es, N, input_func)
    gr.init()
    ans = get_zero_list(Q)
    qs = get_list_n_lists(N)
    create_LCA_queries(Q, gr, ans, qs, input_func)
    return gr, es, ans, qs

def initialize_count_sum(N):
    cnt = [0] * N
    sum_ = [0] * N
    return cnt, sum_

def print_results(ans):
    print(*ans, sep='\n')

class LCA:
    def __init__(self, N: int) -> None:
        self.N = N
        self.to = [[] for _ in range(N)]
        self.co = [[] for _ in range(N)]
        self.dep = [0] * N
        self.costs = [0] * N
        l = 0
        while (1 << l) < N:
            l += 1
        self.l = l
        self.par = [([0] * l) for _ in range(N + 1)]

    def add_edge(self, a: int, b: int, c=0) -> None:
        self.to[a].append(b)
        self.co[a].append(c)
        self.to[b].append(a)
        self.co[b].append(c)

    def _bfs(self, root: int) -> None:
        que = Queue()
        que.enqueue(root)
        self.dep[root] = 0
        self.costs[root] = 0
        vis = [False] * self.N
        while not que.is_empty():
            v = que.dequeue()
            vis[v] = True
            nd = self.dep[v] + 1
            cs = self.costs[v]
            for i in range(len(self.to[v])):
                nv = self.to[v][i]
                if vis[nv]:
                    continue
                que.enqueue(nv)
                self.dep[nv] = nd
                self.costs[nv] = cs + self.co[v][i]
                self.par[nv][0] = v

    def init(self, root: int = 0) -> None:
        self.root = root
        self._bfs(root)
        for i in range(self.l - 1):
            for v in range(self.N):
                self.par[v][i + 1] = self.par[self.par[v][i]][i]

    def lca(self, a: int, b: int) -> int:
        dep_s, dep_l = self.dep[a], self.dep[b]
        if dep_s > dep_l:
            a, b = b, a
            dep_s, dep_l = dep_l, dep_s
        gap = dep_l - dep_s
        L_1 = self.l - 1
        par = self.par
        for i in range(L_1, -1, -1):
            leng = 1 << i
            if gap >= leng:
                gap -= leng
                b = par[b][i]
        if a == b:
            return a
        for i in range(L_1, -1, -1):
            na = par[a][i]
            nb = par[b][i]
            if na != nb:
                a, b = na, nb
        return par[a][0]

    def length(self, a: int, b: int) -> int:
        c = self.lca(a, b)
        dep = self.dep
        return dep[a] + dep[b] - dep[c] * 2

    def dist(self, a: int, b: int):
        c = self.lca(a, b)
        costs = self.costs
        return costs[a] + costs[b] - costs[c] * 2

def main():
    set_recursion_limit()
    input_func = get_input()
    INF, LINF, NIL, MOD, MGN = get_constants()
    N, Q = ILI(input_func)
    gr, es, ans, qs = read_graph_and_queries(N, Q, input_func)
    cnt, sum_ = initialize_count_sum(N)
    dfs2_fragmented(es, qs, cnt, sum_, N, ans)
    print_results(ans)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1822601556777954
    2. '\n' → logprob: -2.057260036468506
    3. '<|end|>' → logprob: -4.182260036468506
    4. '\' → logprob: -4.432260036468506
    5. 'newline' → logprob: -5.557260036468506
    6. 'import' → logprob: -6.057260036468506
    7. '<|end|>' → logprob: -6.682260036468506
    8. '```' → logprob: -7.432260036468506
    9. ';' → logprob: -7.557260036468506
    10. '' → logprob: -7.682260036468506

Token 4: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.012081976048648357
    2. 'os' → logprob: -4.762082099914551
    3. ' collections' → logprob: -6.887082099914551
    4. ' ' → logprob: -7.512082099914551
    5. ' math' → logprob: -7.887082099914551
    6. ' Py' → logprob: -7.887082099914551
    7. ' pathlib' → logprob: -8.01208209991455
    8. ' typing' → logprob: -8.63708209991455
    9. 'collections' → logprob: -9.38708209991455
    10. ' datetime' → logprob: -9.38708209991455

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.08940079808235168
    2. 'import' → logprob: -2.4644007682800293
    3. '.' → logprob: -7.839400768280029
    4. '	import' → logprob: -10.589401245117188
    5. '.import' → logprob: -11.214401245117188
    6. ' ' → logprob: -11.964401245117188
    7. ' itertools' → logprob: -12.464401245117188
    8. '_import' → logprob: -12.589401245117188
    9. '<|end|>' → logprob: -12.589401245117188
    10. ' .' → logprob: -13.214401245117188

Token 6: ' combinations' (ID: 43835)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0789483785629272
    2. 'chain' → logprob: -2.203948497772217
    3. 'com' → logprob: -2.328948497772217
    4. 'product' → logprob: -2.328948497772217
    5. 'group' → logprob: -2.453948497772217
    6. 'cycle' → logprob: -2.703948497772217
    7. ' group' → logprob: -3.203948497772217
    8. 'per' → logprob: -3.328948497772217
    9. ' chain' → logprob: -3.578948497772217
    10. ' permutations' → logprob: -3.703948497772217

Token 7: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009630238637328148
    2. '(
' → logprob: -5.63463020324707
    3. '\' → logprob: -6.38463020324707
    4. '.' → logprob: -6.75963020324707
    5. '\n' → logprob: -7.00963020324707
    6. '\(' → logprob: -7.38463020324707
    7. 'import' → logprob: -7.63463020324707
    8. '```' → logprob: -7.63463020324707
    9. '(

' → logprob: -8.13463020324707
    10. ' (' → logprob: -9.75963020324707

Token 8: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.4242672920227051
    2. ' permutations' → logprob: -1.424267292022705
    3. 'product' → logprob: -2.549267292022705
    4. 'chain' → logprob: -4.174267292022705
    5. ' product' → logprob: -5.299267292022705
    6. ' chain' → logprob: -5.549267292022705
    7. 'com' → logprob: -6.799267292022705
    8. 'group' → logprob: -7.549267292022705
    9. '```' → logprob: -7.799267292022705
    10. 'count' → logprob: -8.924266815185547

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23524883389472961
    2. '\' → logprob: -2.8602488040924072
    3. '\n' → logprob: -3.1102488040924072
    4. 'import' → logprob: -3.2352488040924072
    5. '(
' → logprob: -3.8602488040924072
    6. '```' → logprob: -3.9852488040924072
    7. ',' → logprob: -5.110249042510986
    8. '<|end|>' → logprob: -5.235249042510986
    9. '.' → logprob: -5.360249042510986
    10. '(

' → logprob: -5.860249042510986

Token 10: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.24546407163143158
    2. 'product' → logprob: -1.6204640865325928
    3. ' chain' → logprob: -4.245463848114014
    4. 'chain' → logprob: -5.995463848114014
    5. ' group' → logprob: -6.370463848114014
    6. 'group' → logprob: -8.495464324951172
    7. ' ' → logprob: -8.745464324951172
    8. '```' → logprob: -8.745464324951172
    9. ' cycle' → logprob: -8.870464324951172
    10. 'cycle' → logprob: -9.120464324951172

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10780899971723557
    2. '(
' → logprob: -3.607809066772461
    3. '\' → logprob: -3.732809066772461
    4. '\n' → logprob: -4.107809066772461
    5. ',' → logprob: -4.482809066772461
    6. '```' → logprob: -4.982809066772461
    7. '<|end|>' → logprob: -5.107809066772461
    8. '.' → logprob: -6.232809066772461
    9. 'import' → logprob: -6.357809066772461
    10. '
' → logprob: -6.732809066772461

Token 12: ' combinations' (ID: 43835)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.649781346321106
    2. 'acc' → logprob: -1.524781346321106
    3. ' chain' → logprob: -2.6497812271118164
    4. 'com' → logprob: -2.7747812271118164
    5. 'cycle' → logprob: -3.6497812271118164
    6. ' accumulate' → logprob: -3.6497812271118164
    7. 'group' → logprob: -3.7747812271118164
    8. '```' → logprob: -4.024781227111816
    9. ' group' → logprob: -4.524781227111816
    10. 'count' → logprob: -5.149781227111816

Token 13: '_with' (ID: 14161)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7264466285705566
    2. '(' → logprob: -1.6014466285705566
    3. '_' → logprob: -1.6014466285705566
    4. '<|end|>' → logprob: -3.2264466285705566
    5. '(
' → logprob: -4.351446628570557
    6. 'import' → logprob: -4.601446628570557
    7. '\' → logprob: -4.726446628570557
    8. ')' → logprob: -5.101446628570557
    9. '```' → logprob: -5.101446628570557
    10. 'newline' → logprob: -5.351446628570557

Token 14: '_re' (ID: 3067)
  Prédit: 'replacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replacement' → logprob: -0.008216315880417824
    2. 're' → logprob: -4.883216381072998
    3. '_re' → logprob: -7.508216381072998
    4. '-re' → logprob: -10.50821590423584
    5. ' replacement' → logprob: -10.88321590423584
    6. 'replace' → logprob: -11.25821590423584
    7. ' Replacement' → logprob: -14.75821590423584
    8. '.re' → logprob: -14.88321590423584
    9. 'Replacement' → logprob: -15.25821590423584
    10. '	re' → logprob: -15.25821590423584

Token 15: 'placement' (ID: 17947)
  Prédit: 'placement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -0.11765419691801071
    2. 'peat' → logprob: -2.8676540851593018
    3. 'pe' → logprob: -3.7426540851593018
    4. 'place' → logprob: -4.492654323577881
    5. 'placements' → logprob: -4.742654323577881
    6. 'm' → logprob: -5.117654323577881
    7. 'turn' → logprob: -6.117654323577881
    8. 'p' → logprob: -7.617654323577881
    9. 'play' → logprob: -7.617654323577881
    10. 'pl' → logprob: -7.992654323577881

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3633781671524048
    2. '<|end|>' → logprob: -1.7383781671524048
    3. '\' → logprob: -1.9883781671524048
    4. '(' → logprob: -2.1133780479431152
    5. '\n' → logprob: -2.4883780479431152
    6. '
' → logprob: -2.6133780479431152
    7. 'import' → logprob: -3.3633780479431152
    8. '```' → logprob: -3.7383780479431152
    9. '(
' → logprob: -4.113378047943115
    10. 'newline' → logprob: -4.238378047943115

Token 17: ' accumulate' (ID: 74226)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.5542514324188232
    2. 'group' → logprob: -1.5542514324188232
    3. 'chain' → logprob: -2.0542514324188232
    4. ' accumulate' → logprob: -3.3042514324188232
    5. ' group' → logprob: -4.054251670837402
    6. ' chain' → logprob: -4.804251670837402
    7. 'count' → logprob: -5.054251670837402
    8. 'cycle' → logprob: -5.304251670837402
    9. 'per' → logprob: -5.804251670837402
    10. 'com' → logprob: -5.929251670837402

Token 18: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7372050881385803
    2. '
' → logprob: -1.8622050285339355
    3. '\' → logprob: -2.1122050285339355
    4. '(' → logprob: -2.9872050285339355
    5. 'import' → logprob: -3.1122050285339355
    6. '<|end|>' → logprob: -3.1122050285339355
    7. '\n' → logprob: -3.2372050285339355
    8. '

' → logprob: -4.1122050285339355
    9. '(
' → logprob: -4.2372050285339355
    10. ',
' → logprob: -4.3622050285339355

Token 19: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.983161985874176
    2. '

' → logprob: -0.983161985874176
    3. '
' → logprob: -2.1081619262695312
    4. 'import' → logprob: -3.6081619262695312
    5. '' → logprob: -3.8581619262695312
    6. ',

' → logprob: -4.233161926269531
    7. ',
' → logprob: -4.233161926269531
    8. '\n' → logprob: -4.483161926269531
    9. '#' → logprob: -4.983161926269531
    10. '\' → logprob: -5.233161926269531

Token 20: ' heap' (ID: 37237)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.6606553196907043
    2. ' math' → logprob: -1.0356552600860596
    3. 'collections' → logprob: -2.5356552600860596
    4. ' collections' → logprob: -3.4106552600860596
    5. ' functools' → logprob: -5.035655498504639
    6. 'operator' → logprob: -5.535655498504639
    7. ' operator' → logprob: -5.910655498504639
    8. 'fun' → logprob: -6.160655498504639
    9. 'heap' → logprob: -7.910655498504639
    10. 'os' → logprob: -9.03565502166748

Token 21: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2664456789934775e-06
    2. 'queue' → logprob: -13.625000953674316
    3. ' queue' → logprob: -17.000001907348633
    4. 'dict' → logprob: -19.375001907348633
    5. '	queue' → logprob: -19.500001907348633
    6. 'import' → logprob: -19.500001907348633
    7. 'Queue' → logprob: -19.750001907348633
    8. '```' → logprob: -20.125001907348633
    9. '<|end|>' → logprob: -20.375001907348633
    10. 'que' → logprob: -20.500001907348633

Token 22: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.011076593771576881
    2. 'import' → logprob: -4.5110764503479
    3. '	import' → logprob: -11.136076927185059
    4. '<|end|>' → logprob: -12.011076927185059
    5. ' ' → logprob: -12.761076927185059
    6. '_import' → logprob: -12.886076927185059
    7. ' imports' → logprob: -14.136076927185059
    8. ' importar' → logprob: -14.886076927185059
    9. ' Import' → logprob: -15.136076927185059
    10. ' impor' → logprob: -15.636076927185059

Token 23: ' heap' (ID: 37237)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.4529818296432495
    2. ' he' → logprob: -1.0779818296432495
    3. 'heap' → logprob: -4.452981948852539
    4. 'nl' → logprob: -4.952981948852539
    5. ' n' → logprob: -6.202981948852539
    6. 'merge' → logprob: -6.327981948852539
    7. 'n' → logprob: -7.202981948852539
    8. ' heap' → logprob: -8.327981948852539
    9. ' ' → logprob: -8.577981948852539
    10. '```' → logprob: -8.952981948852539

Token 24: 'ify' (ID: 1985)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0033684198278933764
    2. 'queue' → logprob: -6.378368377685547
    3. 'ify' → logprob: -6.628368377685547
    4. 'push' → logprob: -9.253368377685547
    5. 'n' → logprob: -10.378368377685547
    6. 'replace' → logprob: -10.503368377685547
    7. 's' → logprob: -10.753368377685547
    8. ' queue' → logprob: -10.753368377685547
    9. '>' → logprob: -10.878368377685547
    10. 'p' → logprob: -11.003368377685547

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018434440717101097
    2. '<|end|>' → logprob: -7.376843452453613
    3. 'import' → logprob: -7.751843452453613
    4. ',
' → logprob: -8.001843452453613
    5. '
' → logprob: -8.126843452453613
    6. ' ,' → logprob: -10.126843452453613
    7. 'heap' → logprob: -10.126843452453613
    8. '(heap' → logprob: -10.626843452453613
    9. 'from' → logprob: -11.376843452453613
    10. '```' → logprob: -11.376843452453613

Token 26: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.11316142231225967
    2. ' he' → logprob: -2.238161325454712
    3. 'heap' → logprob: -8.613161087036133
    4. '.he' → logprob: -9.613161087036133
    5. 'nl' → logprob: -10.363161087036133
    6. '```' → logprob: -10.863161087036133
    7. 'merge' → logprob: -11.363161087036133
    8. '_he' → logprob: -11.488161087036133
    9. ' ' → logprob: -11.863161087036133
    10. ' heap' → logprob: -12.613161087036133

Token 27: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.008694461546838284
    2. 'ap' → logprob: -4.758694648742676
    3. 'a' → logprob: -9.508694648742676
    4. 'aps' → logprob: -13.133694648742676
    5. 'aq' → logprob: -13.633694648742676
    6. 'q' → logprob: -14.383694648742676
    7. 'n' → logprob: -14.508694648742676
    8. 'appen' → logprob: -14.758694648742676
    9. 'apps' → logprob: -15.133694648742676
    10. 'ап' → logprob: -15.758694648742676

Token 28: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.043084487318992615
    2. 'op' → logprob: -3.1680843830108643
    3. 'us' → logprob: -10.793084144592285
    4. 'opleft' → logprob: -10.793084144592285
    5. 'o' → logprob: -11.543084144592285
    6. 'osh' → logprob: -11.918084144592285
    7. '[' → logprob: -12.793084144592285
    8. '```' → logprob: -12.918084144592285
    9. 'opl' → logprob: -13.168084144592285
    10. '

' → logprob: -13.293084144592285

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014089244650676847
    2. ',
' → logprob: -7.25140905380249
    3. 'import' → logprob: -8.751408576965332
    4. 'from' → logprob: -8.751408576965332
    5. '```' → logprob: -9.251408576965332
    6. '<|end|>' → logprob: -9.626408576965332
    7. '
' → logprob: -9.751408576965332
    8. ' ' → logprob: -10.126408576965332
    9. ' ,' → logprob: -10.126408576965332
    10. '' → logprob: -11.001408576965332

Token 30: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.018713926896452904
    2. ' he' → logprob: -4.01871395111084
    3. 'heap' → logprob: -7.51871395111084
    4. '```' → logprob: -11.39371395111084
    5. ' heap' → logprob: -12.26871395111084
    6. '.he' → logprob: -12.64371395111084
    7. '-he' → logprob: -14.89371395111084
    8. ' ' → logprob: -15.26871395111084
    9. '_he' → logprob: -15.51871395111084
    10. 'hep' → logprob: -15.76871395111084

Token 31: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.011120800860226154
    2. 'ap' → logprob: -4.511120796203613
    3. 'a' → logprob: -9.636120796203613
    4. 'ап' → logprob: -12.761120796203613
    5. 'q' → logprob: -13.886120796203613
    6. 'appen' → logprob: -14.386120796203613
    7. 'APP' → logprob: -14.511120796203613
    8. '_app' → logprob: -14.761120796203613
    9. 'apput' → logprob: -15.136120796203613
    10. '	app' → logprob: -15.511120796203613

Token 32: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.11299832165241241
    2. 'op' → logprob: -2.2379982471466064
    3. 'o' → logprob: -9.237998008728027
    4. 'p' → logprob: -9.737998008728027
    5. 'l' → logprob: -11.612998008728027
    6. 'us' → logprob: -12.737998008728027
    7. 'u' → logprob: -12.987998008728027
    8. '```' → logprob: -14.112998008728027
    9. 'e' → logprob: -14.237998008728027
    10. 'ut' → logprob: -14.487998008728027

Token 33: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6493145227432251
    2. '<|end|>' → logprob: -1.524314522743225
    3. ',' → logprob: -1.774314522743225
    4. '

' → logprob: -3.2743144035339355
    5. 'import' → logprob: -3.8993144035339355
    6. ' ' → logprob: -5.3993144035339355
    7. ',
' → logprob: -5.5243144035339355
    8. '' → logprob: -5.5243144035339355
    9. ' 
' → logprob: -5.7743144035339355
    10. '\n' → logprob: -5.7743144035339355

Token 34: ' he' (ID: 501)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.26894184947013855
    2. 'he' → logprob: -1.518941879272461
    3. ' heap' → logprob: -4.768941879272461
    4. ' he' → logprob: -5.643941879272461
    5. 'nl' → logprob: -5.768941879272461
    6. 'n' → logprob: -7.018941879272461
    7. 'merge' → logprob: -7.518941879272461
    8. ' n' → logprob: -8.393941879272461
    9. ' heaps' → logprob: -11.143941879272461
    10. '_heap' → logprob: -11.518941879272461

Token 35: 'app' (ID: 903)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.11295359581708908
    2. 'app' → logprob: -2.2379536628723145
    3. 'a' → logprob: -9.487953186035156
    4. 'q' → logprob: -10.737953186035156
    5. 'aq' → logprob: -11.737953186035156
    6. 'ап' → logprob: -12.112953186035156
    7. 'aps' → logprob: -12.487953186035156
    8. 'qp' → logprob: -12.737953186035156
    9. 'p' → logprob: -12.987953186035156
    10. 'apk' → logprob: -13.112953186035156

Token 36: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.012549209408462048
    2. 'op' → logprob: -4.38754940032959
    3. 'lush' → logprob: -11.76254940032959
    4. '```' → logprob: -11.88754940032959
    5. 'o' → logprob: -12.38754940032959
    6. 'lo' → logprob: -12.51254940032959
    7. 't' → logprob: -12.63754940032959
    8. 'l' → logprob: -13.01254940032959
    9. 'ut' → logprob: -13.51254940032959
    10. 'osh' → logprob: -13.76254940032959

Token 37: 'pop' (ID: 15042)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.58282870054245
    2. 'pop' → logprob: -1.4578287601470947
    3. '_pop' → logprob: -2.4578287601470947
    4. '_unique' → logprob: -3.3328287601470947
    5. '_append' → logprob: -4.332828521728516
    6. '_ex' → logprob: -4.957828521728516
    7. ' ' → logprob: -5.082828521728516
    8. '_p' → logprob: -5.332828521728516
    9. 'x' → logprob: -5.457828521728516
    10. 's' → logprob: -5.582828521728516

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6499373316764832
    2. '<|end|>' → logprob: -1.024937391281128
    3. ',' → logprob: -3.149937391281128
    4. '

' → logprob: -3.899937391281128
    5. 'import' → logprob: -4.274937152862549
    6. ' ' → logprob: -4.399937152862549
    7. ' 
' → logprob: -5.274937152862549
    8. '' → logprob: -5.399937152862549
    9. '\n' → logprob: -5.649937152862549
    10. ' 

' → logprob: -5.899937152862549

Token 39: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7749627828598022
    2. ',' → logprob: -1.5249627828598022
    3. '

' → logprob: -2.149962902069092
    4. '<|end|>' → logprob: -2.149962902069092
    5. 'import' → logprob: -3.649962902069092
    6. ',
' → logprob: -4.149962902069092
    7. '' → logprob: -4.774962902069092
    8. '#' → logprob: -5.149962902069092
    9. ' 
' → logprob: -5.524962902069092
    10. '\n' → logprob: -5.524962902069092

Token 40: ' bis' (ID: 7204)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.11666305363178253
    2. ' math' → logprob: -2.6166629791259766
    3. 'collections' → logprob: -3.3666629791259766
    4. 'math' → logprob: -6.116662979125977
    5. ' operator' → logprob: -8.491662979125977
    6. ' functools' → logprob: -9.741662979125977
    7. ' bis' → logprob: -10.366662979125977
    8. 'bis' → logprob: -10.741662979125977
    9. '_math' → logprob: -11.366662979125977
    10. 'operator' → logprob: -11.991662979125977

Token 41: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -7.465036105713807e-06
    2. 'e' → logprob: -12.750007629394531
    3. 'ec' → logprob: -13.250007629394531
    4. 'ected' → logprob: -13.875007629394531
    5. 'ector' → logprob: -14.250007629394531
    6. 'ecta' → logprob: -15.125007629394531
    7. 'ectl' → logprob: -15.375007629394531
    8. 'ection' → logprob: -15.625007629394531
    9. 'ects' → logprob: -15.875007629394531
    10. 'ectin' → logprob: -16.00000762939453

Token 42: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.012071141041815281
    2. 'import' → logprob: -4.762071132659912
    3. ' ' → logprob: -5.887071132659912
    4. '	import' → logprob: -7.887071132659912
    5. '<|end|>' → logprob: -8.63707160949707
    6. '_import' → logprob: -9.76207160949707
    7. '_' → logprob: -11.26207160949707
    8. ' im' → logprob: -11.51207160949707
    9. ' ' → logprob: -11.51207160949707
    10. '.' → logprob: -12.13707160949707

Token 43: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.023684833198785782
    2. 'bis' → logprob: -3.7736847400665283
    3. ' ins' → logprob: -8.27368450164795
    4. 'ins' → logprob: -8.64868450164795
    5. '	b' → logprob: -12.27368450164795
    6. '```' → logprob: -13.27368450164795
    7. ' b' → logprob: -14.02368450164795
    8. ' ' → logprob: -14.27368450164795
    9. 'b' → logprob: -15.14868450164795
    10. '.b' → logprob: -15.89868450164795

Token 44: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -8.888114098226652e-05
    2. 'e' → logprob: -9.375088691711426
    3. 'ectl' → logprob: -13.500088691711426
    4. 'ec' → logprob: -13.750088691711426
    5. 'ecta' → logprob: -14.625088691711426
    6. 'ectin' → logprob: -15.125088691711426
    7. 'ected' → logprob: -15.500088691711426
    8. 'sect' → logprob: -16.125089645385742
    9. '```' → logprob: -16.125089645385742
    10. '
' → logprob: -16.250089645385742

Token 45: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.020128611475229263
    2. '_' → logprob: -4.2701287269592285
    3. '_right' → logprob: -5.1451287269592285
    4. ',' → logprob: -9.77012825012207
    5. '<|end|>' → logprob: -10.89512825012207
    6. 'left' → logprob: -12.02012825012207
    7. '_,' → logprob: -12.14512825012207
    8. '_LEFT' → logprob: -12.14512825012207
    9. '_ins' → logprob: -12.27012825012207
    10. '_

' → logprob: -12.52012825012207

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005125715397298336
    2. ',b' → logprob: -5.880125522613525
    3. ',
' → logprob: -6.505125522613525
    4. '
' → logprob: -7.880125522613525
    5. 'import' → logprob: -8.880125999450684
    6. '<|end|>' → logprob: -9.005125999450684
    7. '' → logprob: -10.005125999450684
    8. ' ,' → logprob: -10.130125999450684
    9. '```' → logprob: -11.005125999450684
    10. ' ' → logprob: -11.005125999450684

Token 47: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.08900947868824005
    2. 'bis' → logprob: -2.4640095233917236
    3. 'b' → logprob: -10.214009284973145
    4. 'ins' → logprob: -11.214009284973145
    5. '```' → logprob: -11.964009284973145
    6. ' ins' → logprob: -12.089009284973145
    7. 's' → logprob: -13.464009284973145
    8. '	b' → logprob: -13.464009284973145
    9. ' ' → logprob: -14.526509284973145
    10. 'import' → logprob: -14.776509284973145

Token 48: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -9.729906196298543e-06
    2. 'sect' → logprob: -12.625009536743164
    3. 'e' → logprob: -12.875009536743164
    4. 'ec' → logprob: -13.250009536743164
    5. '```' → logprob: -14.000009536743164
    6. 'ected' → logprob: -14.750009536743164
    7. 'ectl' → logprob: -15.000009536743164
    8. 'ext' → logprob: -15.750009536743164
    9. 'ects' → logprob: -16.500009536743164
    10. 'ecta' → logprob: -17.125009536743164

Token 49: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.7522490620613098
    2. 'ght' → logprob: -1.127249002456665
    3. 'right' → logprob: -2.127249002456665
    4. 'ight' → logprob: -2.502249002456665
    5. 't' → logprob: -6.377249240875244
    6. 'Right' → logprob: -6.627249240875244
    7. 'ort' → logprob: -9.002248764038086
    8. 'ect' → logprob: -9.002248764038086
    9. 'igh' → logprob: -9.252248764038086
    10. 'ht' → logprob: -10.127248764038086

Token 50: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16278035938739777
    2. '
' → logprob: -2.287780284881592
    3. ',
' → logprob: -3.787780284881592
    4. 'import' → logprob: -4.537780284881592
    5. '<|end|>' → logprob: -5.162780284881592
    6. '' → logprob: -6.162780284881592
    7. '

' → logprob: -6.287780284881592
    8. '\n' → logprob: -6.412780284881592
    9. ' ' → logprob: -6.662780284881592
    10. 'from' → logprob: -7.537780284881592

Token 51: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7679972052574158
    2. '<|end|>' → logprob: -1.2679972648620605
    3. ',' → logprob: -1.7679972648620605
    4. '

' → logprob: -3.5179972648620605
    5. 'import' → logprob: -3.5179972648620605
    6. ',
' → logprob: -5.5179972648620605
    7. ' 
' → logprob: -6.0179972648620605
    8. '' → logprob: -6.0179972648620605
    9. ' ' → logprob: -6.0179972648620605
    10. '\n' → logprob: -6.1429972648620605

Token 52: ' collections' (ID: 22690)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.20787566900253296
    2. 'math' → logprob: -1.9578757286071777
    3. ' collections' → logprob: -3.7078757286071777
    4. 'collections' → logprob: -3.8328757286071777
    5. '_math' → logprob: -8.08287525177002
    6. ' functools' → logprob: -11.20787525177002
    7. ' array' → logprob: -12.58287525177002
    8. ' operator' → logprob: -12.70787525177002
    9. 'cmath' → logprob: -12.83287525177002
    10. ' itertools' → logprob: -12.83287525177002

Token 53: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.11318612843751907
    2. ' import' → logprob: -2.7381861209869385
    3. 'abc' → logprob: -3.2381861209869385
    4. '.' → logprob: -5.988186359405518
    5. '	import' → logprob: -9.48818588256836
    6. 'a' → logprob: -9.86318588256836
    7. 'odule' → logprob: -9.98818588256836
    8. ' ' → logprob: -10.48818588256836
    9. '_import' → logprob: -10.48818588256836
    10. 'from' → logprob: -10.61318588256836

Token 54: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.02376074157655239
    2. ' deque' → logprob: -3.7737607955932617
    3. 'deque' → logprob: -8.273760795593262
    4. ' Counter' → logprob: -8.523760795593262
    5. 'default' → logprob: -10.398760795593262
    6. ' named' → logprob: -11.023760795593262
    7. ' abc' → logprob: -11.773760795593262
    8. ' default' → logprob: -13.148760795593262
    9. 'Counter' → logprob: -13.398760795593262
    10. ' de' → logprob: -14.023760795593262

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01837410219013691
    2. '<|end|>' → logprob: -4.268373966217041
    3. ' ,' → logprob: -6.643373966217041
    4. ',
' → logprob: -6.768373966217041
    5. '
' → logprob: -7.143373966217041
    6. 'import' → logprob: -7.893373966217041
    7. ' ' → logprob: -8.1433744430542
    8. '

' → logprob: -9.6433744430542
    9. ',

' → logprob: -10.1433744430542
    10. ' as' → logprob: -10.3933744430542

Token 56: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.3632268011569977
    2. 'default' → logprob: -1.3632267713546753
    3. 'deque' → logprob: -3.113226890563965
    4. ' deque' → logprob: -5.488226890563965
    5. 'Ordered' → logprob: -9.738226890563965
    6. 'named' → logprob: -9.988226890563965
    7. ' default' → logprob: -11.113226890563965
    8. ' named' → logprob: -11.613226890563965
    9. ' Ordered' → logprob: -11.863226890563965
    10. 'Deque' → logprob: -12.988226890563965

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04211302101612091
    2. '<|end|>' → logprob: -3.9171130657196045
    3. '
' → logprob: -5.167112827301025
    4. 'import' → logprob: -5.292112827301025
    5. ' ,' → logprob: -5.417112827301025
    6. ',
' → logprob: -5.917112827301025
    7. ' ' → logprob: -6.667112827301025
    8. '

' → logprob: -7.542112827301025
    9. 'from' → logprob: -7.667112827301025
    10. ',

' → logprob: -8.667113304138184

Token 58: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.31352338194847107
    2. ' deque' → logprob: -1.3135234117507935
    3. 'Ordered' → logprob: -9.063523292541504
    4. ' Ordered' → logprob: -9.688523292541504
    5. 'named' → logprob: -10.188523292541504
    6. ' named' → logprob: -10.688523292541504
    7. 'de' → logprob: -11.313523292541504
    8. 'Deque' → logprob: -11.438523292541504
    9. ' de' → logprob: -16.43852424621582
    10. '	de' → logprob: -16.81352424621582

Token 59: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5710592269897461
    2. '<|end|>' → logprob: -1.946059226989746
    3. ',' → logprob: -2.071059226989746
    4. '

' → logprob: -2.196059226989746
    5. 'import' → logprob: -3.196059226989746
    6. ' 

' → logprob: -5.946059226989746
    7. '' → logprob: -6.321059226989746
    8. ' 
' → logprob: -6.446059226989746
    9. ' ' → logprob: -6.446059226989746
    10. ',
' → logprob: -6.696059226989746

Token 60: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4590134024620056
    2. '<|end|>' → logprob: -1.7090134620666504
    3. '

' → logprob: -2.2090134620666504
    4. 'import' → logprob: -3.7090134620666504
    5. ' 

' → logprob: -4.08401346206665
    6. ',' → logprob: -4.58401346206665
    7. ' 
' → logprob: -4.83401346206665
    8. '' → logprob: -5.83401346206665
    9. '#' → logprob: -5.83401346206665
    10. 'def' → logprob: -6.20901346206665

Token 61: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.2553119957447052
    2. 'math' → logprob: -1.5053119659423828
    3. ' functools' → logprob: -6.130311965942383
    4. ' typing' → logprob: -7.755311965942383
    5. ' operator' → logprob: -8.255311965942383
    6. 'operator' → logprob: -9.255311965942383
    7. ' itertools' → logprob: -9.255311965942383
    8. 'typing' → logprob: -9.880311965942383
    9. ' fractions' → logprob: -10.255311965942383
    10. 'fun' → logprob: -10.755311965942383

Token 62: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.05171481519937515
    2. ' ' → logprob: -3.5517148971557617
    3. 'import' → logprob: -4.426714897155762
    4. '<|end|>' → logprob: -4.676714897155762
    5. '.' → logprob: -9.051714897155762
    6. '<|end|>' → logprob: -9.426714897155762
    7. '	import' → logprob: -9.551714897155762
    8. ',' → logprob: -9.926714897155762
    9. ' im' → logprob: -10.301714897155762
    10. ' ' → logprob: -10.801714897155762

Token 63: ' sqrt' (ID: 44237)
  Prédit: ' ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ceil' → logprob: -1.453661561012268
    2. ' sqrt' → logprob: -1.453661561012268
    3. 'sqrt' → logprob: -1.828661561012268
    4. ' gcd' → logprob: -1.828661561012268
    5. ' inf' → logprob: -2.0786614418029785
    6. 'ceil' → logprob: -3.0786614418029785
    7. ' factorial' → logprob: -3.8286614418029785
    8. 'inf' → logprob: -4.9536614418029785
    9. ' comb' → logprob: -6.4536614418029785
    10. 'log' → logprob: -6.4536614418029785

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014036830980330706
    2. ',
' → logprob: -7.12640380859375
    3. ' ,' → logprob: -7.75140380859375
    4. 'import' → logprob: -10.37640380859375
    5. '<|end|>' → logprob: -10.62640380859375
    6. ',s' → logprob: -10.87640380859375
    7. '(' → logprob: -11.25140380859375
    8. ',n' → logprob: -11.50140380859375
    9. ',
' → logprob: -11.62640380859375
    10. ',

' → logprob: -11.62640380859375

Token 65: ' log' (ID: 2142)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.21901512145996094
    2. 'pow' → logprob: -2.844015121459961
    3. 'factor' → logprob: -3.219015121459961
    4. 'floor' → logprob: -3.844015121459961
    5. ' ceil' → logprob: -4.094015121459961
    6. 'log' → logprob: -4.219015121459961
    7. ' factorial' → logprob: -4.469015121459961
    8. 'is' → logprob: -4.594015121459961
    9. 'g' → logprob: -4.844015121459961
    10. 'sin' → logprob: -5.219015121459961

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0677516907453537
    2. '2' → logprob: -2.94275164604187
    3. '10' → logprob: -4.442751884460449
    4. '1' → logprob: -7.442751884460449
    5. ' ,' → logprob: -8.56775188446045
    6. '0' → logprob: -9.31775188446045
    7. ',
' → logprob: -10.19275188446045
    8. ' ' → logprob: -10.94275188446045
    9. '```' → logprob: -11.06775188446045
    10. '(' → logprob: -11.31775188446045

Token 67: ' floor' (ID: 8350)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.11780505627393723
    2. 'exp' → logprob: -3.992805004119873
    3. 'factor' → logprob: -3.992805004119873
    4. ' ceil' → logprob: -4.242805004119873
    5. 'sin' → logprob: -4.367805004119873
    6. 'pow' → logprob: -4.617805004119873
    7. ' factorial' → logprob: -4.742805004119873
    8. 'floor' → logprob: -4.742805004119873
    9. 'log' → logprob: -4.867805004119873
    10. 'inf' → logprob: -5.367805004119873

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003048378275707364
    2. '<|end|>' → logprob: -8.62530517578125
    3. ',
' → logprob: -9.87530517578125
    4. 'import' → logprob: -10.75030517578125
    5. ',s' → logprob: -12.00030517578125
    6. ' ,' → logprob: -12.00030517578125
    7. '
' → logprob: -12.00030517578125
    8. 'from' → logprob: -12.37530517578125
    9. '' → logprob: -12.75030517578125
    10. ',

' → logprob: -12.87530517578125

Token 69: ' ceil' (ID: 35964)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.018679404631257057
    2. ' ceil' → logprob: -4.018679618835449
    3. ' factorial' → logprob: -8.89367961883545
    4. 'inf' → logprob: -9.64367961883545
    5. 'factor' → logprob: -9.64367961883545
    6. 'ce' → logprob: -10.14367961883545
    7. 'atan' → logprob: -10.26867961883545
    8. 'cos' → logprob: -10.26867961883545
    9. 'fabs' → logprob: -10.51867961883545
    10. 'pow' → logprob: -10.76867961883545

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014947418821975589
    2. '<|end|>' → logprob: -7.501494884490967
    3. ',
' → logprob: -7.751494884490967
    4. 'import' → logprob: -8.251494407653809
    5. '
' → logprob: -9.626494407653809
    6. 'def' → logprob: -10.376494407653809
    7. ')' → logprob: -10.501494407653809
    8. '(' → logprob: -10.876494407653809
    9. 'from' → logprob: -11.001494407653809
    10. ' ,' → logprob: -11.376494407653809

Token 71: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -1.1330363750457764
    2. 'pow' → logprob: -1.5080363750457764
    3. 'inf' → logprob: -1.5080363750457764
    4. ' factorial' → logprob: -2.7580363750457764
    5. 'exp' → logprob: -3.0080363750457764
    6. 'fabs' → logprob: -3.2580363750457764
    7. 'sin' → logprob: -3.3830363750457764
    8. 'g' → logprob: -3.5080363750457764
    9. 'cos' → logprob: -5.2580366134643555
    10. 'pi' → logprob: -5.7580366134643555

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015497404150664806
    2. '
' → logprob: -4.640497207641602
    3. ',
' → logprob: -5.765497207641602
    4. '<|end|>' → logprob: -6.890497207641602
    5. 'import' → logprob: -7.640497207641602
    6. '

' → logprob: -7.765497207641602
    7. '' → logprob: -9.015497207641602
    8. 'def' → logprob: -9.640497207641602
    9. '(' → logprob: -9.765497207641602
    10. '\n' → logprob: -9.890497207641602

Token 73: ' cos' (ID: 8974)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.45031267404556274
    2. 'inf' → logprob: -2.200312614440918
    3. 'sin' → logprob: -2.700312614440918
    4. 'g' → logprob: -2.825312614440918
    5. 'exp' → logprob: -2.825312614440918
    6. 'cos' → logprob: -3.700312614440918
    7. 'log' → logprob: -4.575312614440918
    8. 'is' → logprob: -4.950312614440918
    9. 'pi' → logprob: -5.325312614440918
    10. ' pow' → logprob: -5.450312614440918

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0043335105292499065
    2. ',s' → logprob: -5.75433349609375
    3. '<|end|>' → logprob: -7.37933349609375
    4. '(' → logprob: -8.75433349609375
    5. 's' → logprob: -9.00433349609375
    6. ',n' → logprob: -9.87933349609375
    7. ',t' → logprob: -10.00433349609375
    8. ')' → logprob: -10.87933349609375
    9. ' ,' → logprob: -11.25433349609375
    10. ',p' → logprob: -11.62933349609375

Token 75: ' sin' (ID: 2187)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -0.01242547295987606
    2. ' sin' → logprob: -4.637425422668457
    3. 'pi' → logprob: -6.262425422668457
    4. ' pi' → logprob: -8.137425422668457
    5. 'tan' → logprob: -8.887425422668457
    6. 'atan' → logprob: -9.012425422668457
    7. ' acos' → logprob: -9.762425422668457
    8. ' radians' → logprob: -10.137425422668457
    9. 'asin' → logprob: -10.137425422668457
    10. 's' → logprob: -10.887425422668457

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007002840866334736
    2. '<|end|>' → logprob: -7.8757004737854
    3. ',
' → logprob: -9.250699996948242
    4. 't' → logprob: -10.000699996948242
    5. ',t' → logprob: -10.000699996948242
    6. ',s' → logprob: -10.125699996948242
    7. 'import' → logprob: -10.875699996948242
    8. ',n' → logprob: -11.750699996948242
    9. ',r' → logprob: -11.750699996948242
    10. ' ,' → logprob: -11.875699996948242

Token 77: ' pi' (ID: 6404)
  Prédit: 'tan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tan' → logprob: -0.3319275975227356
    2. 'pi' → logprob: -1.9569275379180908
    3. 'atan' → logprob: -2.956927537918091
    4. ' tan' → logprob: -3.081927537918091
    5. ' pi' → logprob: -3.831927537918091
    6. ' radians' → logprob: -4.45692777633667
    7. 't' → logprob: -5.33192777633667
    8. ' acos' → logprob: -5.95692777633667
    9. 'exp' → logprob: -7.20692777633667
    10. 'acos' → logprob: -7.83192777633667

Token 78: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31073543429374695
    2. '
' → logprob: -1.4357354640960693
    3. ',
' → logprob: -4.18573522567749
    4. '

' → logprob: -4.81073522567749
    5. '' → logprob: -6.06073522567749
    6. '<|end|>' → logprob: -6.93573522567749
    7. 'import' → logprob: -7.06073522567749
    8. '\n' → logprob: -7.68573522567749
    9. '
' → logprob: -8.435735702514648
    10. '


' → logprob: -8.685735702514648

Token 79: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.647279679775238
    2. '

' → logprob: -0.772279679775238
    3. 'import' → logprob: -5.147279739379883
    4. '


' → logprob: -6.647279739379883
    5. '<|end|>' → logprob: -6.647279739379883
    6. '\n' → logprob: -6.897279739379883
    7. ',' → logprob: -7.022279739379883
    8. 'def' → logprob: -7.147279739379883
    9. '
' → logprob: -7.272279739379883
    10. ' 

' → logprob: -7.397279739379883

Token 80: ' fractions' (ID: 110523)
  Prédit: ' random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' random' → logprob: -0.1899392008781433
    2. 'random' → logprob: -2.064939260482788
    3. ' operator' → logprob: -4.439939022064209
    4. ' functools' → logprob: -4.564939022064209
    5. ' fractions' → logprob: -4.814939022064209
    6. ' os' → logprob: -5.564939022064209
    7. 'operator' → logprob: -5.939939022064209
    8. ' datetime' → logprob: -6.439939022064209
    9. ' decimal' → logprob: -6.439939022064209
    10. ' typing' → logprob: -6.814939022064209

Token 81: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.027058249339461327
    2. 'import' → logprob: -3.6520583629608154
    3. '<|end|>' → logprob: -7.777058124542236
    4. '	import' → logprob: -8.902058601379395
    5. ' ' → logprob: -9.277058601379395
    6. '_import' → logprob: -10.152058601379395
    7. '<|end|>' → logprob: -10.777058601379395
    8. '.' → logprob: -11.027058601379395
    9. ' ' → logprob: -11.152058601379395
    10. ' _' → logprob: -13.027058601379395

Token 82: ' gcd' (ID: 106918)
  Prédit: ' Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.014185246080160141
    2. 'Fraction' → logprob: -4.264185428619385
    3. ' fractions' → logprob: -11.764184951782227
    4. '	F' → logprob: -11.889184951782227
    5. ' F' → logprob: -13.014184951782227
    6. ' Fra' → logprob: -13.139184951782227
    7. 'Fra' → logprob: -13.389184951782227
    8. '_fraction' → logprob: -14.889184951782227
    9. ' ' → logprob: -15.014184951782227
    10. ' gcd' → logprob: -15.639184951782227

Token 83: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6171476244926453
    2. ',' → logprob: -1.36714768409729
    3. '<|end|>' → logprob: -2.61714768409729
    4. ' as' → logprob: -2.86714768409729
    5. 'as' → logprob: -3.86714768409729
    6. 'import' → logprob: -4.117147445678711
    7. 'from' → logprob: -4.367147445678711
    8. ' ' → logprob: -5.617147445678711
    9. '' → logprob: -5.617147445678711
    10. '.' → logprob: -5.867147445678711

Token 84: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5325575470924377
    2. '
' → logprob: -2.407557487487793
    3. ' as' → logprob: -2.407557487487793
    4. '<|end|>' → logprob: -2.532557487487793
    5. '

' → logprob: -3.157557487487793
    6. 'as' → logprob: -3.782557487487793
    7. '#' → logprob: -4.157557487487793
    8. ',
' → logprob: -4.157557487487793
    9. ')' → logprob: -4.532557487487793
    10. '' → logprob: -4.782557487487793

Token 85: ' operator' (ID: 11019)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.13296855986118317
    2. ' math' → logprob: -2.1329686641693115
    3. 'decimal' → logprob: -5.882968425750732
    4. ' functools' → logprob: -6.382968425750732
    5. ' decimal' → logprob: -7.632968425750732
    6. 'operator' → logprob: -8.00796890258789
    7. 'fun' → logprob: -8.38296890258789
    8. ' itertools' → logprob: -9.13296890258789
    9. 'random' → logprob: -9.13296890258789
    10. 'typing' → logprob: -9.88296890258789

Token 86: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03686518594622612
    2. 'import' → logprob: -3.411865234375
    3. ' ' → logprob: -6.661865234375
    4. '<|end|>' → logprob: -6.661865234375
    5. ',' → logprob: -7.911865234375
    6. '	import' → logprob: -9.161865234375
    7. ' ,' → logprob: -9.286865234375
    8. ' as' → logprob: -9.911865234375
    9. '<|end|>' → logprob: -11.286865234375
    10. '_import' → logprob: -11.786865234375

Token 87: ' mul' (ID: 9975)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.1822439730167389
    2. 'item' → logprob: -1.9322439432144165
    3. ' add' → logprob: -4.682243824005127
    4. ' mul' → logprob: -5.432243824005127
    5. ' attr' → logprob: -5.557243824005127
    6. 'add' → logprob: -6.682243824005127
    7. 'mul' → logprob: -6.932243824005127
    8. 'attr' → logprob: -7.432243824005127
    9. ' ' → logprob: -7.682243824005127
    10. '	item' → logprob: -7.807243824005127

Token 88: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10466951876878738
    2. '
' → logprob: -3.1046695709228516
    3. ',
' → logprob: -3.4796695709228516
    4. '<|end|>' → logprob: -4.104669570922852
    5. ' ' → logprob: -6.479669570922852
    6. '' → logprob: -6.604669570922852
    7. 'import' → logprob: -6.854669570922852
    8. '  
' → logprob: -6.854669570922852
    9. ' ,' → logprob: -7.979669570922852
    10. ' 
' → logprob: -8.104669570922852

Token 89: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24321718513965607
    2. '<|end|>' → logprob: -2.1182172298431396
    3. '
' → logprob: -3.3682172298431396
    4. ',
' → logprob: -4.1182169914245605
    5. 'import' → logprob: -4.7432169914245605
    6. ' ' → logprob: -4.8682169914245605
    7. '' → logprob: -5.1182169914245605
    8. ')' → logprob: -5.2432169914245605
    9. '\n' → logprob: -5.4932169914245605
    10. '  
' → logprob: -6.4932169914245605

Token 90: ' functools' (ID: 142636)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.6962289214134216
    2. ' functools' → logprob: -0.6962289214134216
    3. 'math' → logprob: -6.196228981018066
    4. 'random' → logprob: -8.071228981018066
    5. 'operator' → logprob: -8.446228981018066
    6. ' itertools' → logprob: -8.571228981018066
    7. ' math' → logprob: -8.696228981018066
    8. 'os' → logprob: -10.321228981018066
    9. '_fun' → logprob: -10.321228981018066
    10. ' random' → logprob: -10.571228981018066

Token 91: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.038130421191453934
    2. 'import' → logprob: -3.538130521774292
    3. '<|end|>' → logprob: -5.538130283355713
    4. ' ' → logprob: -5.663130283355713
    5. '.' → logprob: -7.413130283355713
    6. '	import' → logprob: -9.163130760192871
    7. '_' → logprob: -9.663130760192871
    8. '_import' → logprob: -9.788130760192871
    9. '<|end|>' → logprob: -9.913130760192871
    10. ',' → logprob: -11.288130760192871

Token 92: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.09877360612154007
    2. 'reduce' → logprob: -2.723773717880249
    3. ' l' → logprob: -3.598773717880249
    4. 'l' → logprob: -7.09877347946167
    5. ' partial' → logprob: -8.848773956298828
    6. ' wraps' → logprob: -10.848773956298828
    7. 'partial' → logprob: -10.973773956298828
    8. ' cmp' → logprob: -11.348773956298828
    9. 'redu' → logprob: -11.723773956298828
    10. ' cache' → logprob: -11.848773956298828

Token 93: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13669468462467194
    2. '#' → logprob: -2.7616946697235107
    3. '
' → logprob: -3.8866946697235107
    4. 'import' → logprob: -3.8866946697235107
    5. 'n' → logprob: -5.76169490814209
    6. 'g' → logprob: -5.76169490814209
    7. ',' → logprob: -6.01169490814209
    8. 'd' → logprob: -6.01169490814209
    9. 'class' → logprob: -6.38669490814209
    10. '\' → logprob: -6.63669490814209

Token 95: ' set' (ID: 920)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8308739066123962
    2. ' factorial' → logprob: -1.455873966217041
    3. ' main' → logprob: -2.455873966217041
    4. ' factor' → logprob: -2.955873966217041
    5. ' calculate' → logprob: -3.580873966217041
    6. ' solve' → logprob: -3.705873966217041
    7. ' compute' → logprob: -3.830873966217041
    8. ' space' → logprob: -4.080873966217041
    9. ' ' → logprob: -4.205873966217041
    10. ' my' → logprob: -4.330873966217041

Token 96: '_rec' (ID: 35314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.057406432926654816
    2. 's' → logprob: -3.932406425476074
    3. '_up' → logprob: -4.807406425476074
    4. '_union' → logprob: -4.807406425476074
    5. '_name' → logprob: -5.557406425476074
    6. 'up' → logprob: -6.182406425476074
    7. ' _' → logprob: -6.307406425476074
    8. '_cover' → logprob: -6.432406425476074
    9. '_item' → logprob: -6.807406425476074
    10. '_attr' → logprob: -7.182406425476074

Token 97: 'ursion' (ID: 41658)
  Prédit: 'ursive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursive' → logprob: -0.7181717753410339
    2. 'ursion' → logprob: -0.8431717753410339
    3. '_' → logprob: -2.8431718349456787
    4. 'urrent' → logprob: -4.2181715965271
    5. 'ursor' → logprob: -5.0931715965271
    6. 'urr' → logprob: -7.2181715965271
    7. '(' → logprob: -7.4681715965271
    8. 'urs' → logprob: -7.9681715965271
    9. 'urrence' → logprob: -8.218172073364258
    10. 'ursively' → logprob: -8.843172073364258

Token 98: '_limit' (ID: 34361)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.16057738661766052
    2. '_limit' → logprob: -1.910577416419983
    3. '_depth' → logprob: -8.035577774047852
    4. '_' → logprob: -11.660577774047852
    5. 'depth' → logprob: -11.660577774047852
    6. ' limit' → logprob: -12.285577774047852
    7. 'lim' → logprob: -12.660577774047852
    8. '_LIMIT' → logprob: -14.285577774047852
    9. 'limits' → logprob: -14.535577774047852
    10. '_stack' → logprob: -14.535577774047852

Token 99: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005792465526610613
    2. '(limit' → logprob: -8.625578880310059
    3. '(:' → logprob: -9.000578880310059
    4. '():' → logprob: -9.125578880310059
    5. ' (' → logprob: -9.625578880310059
    6. '(n' → logprob: -10.750578880310059
    7. '(depth' → logprob: -10.750578880310059
    8. '(max' → logprob: -11.500578880310059
    9. '(value' → logprob: -11.875578880310059
    10. '(`' → logprob: -12.000578880310059

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03808223456144333
    2. '(' → logprob: -3.4130821228027344
    3. ':' → logprob: -5.538082122802734
    4. '    
' → logprob: -9.038082122802734
    5. '():' → logprob: -9.038082122802734
    6. '    ' → logprob: -9.538082122802734
    7. '  ' → logprob: -9.913082122802734
    8. ' ' → logprob: -10.038082122802734
    9. '       ' → logprob: -11.663082122802734
    10. ' (' → logprob: -11.663082122802734

Token 101: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.9071176648139954
    2. 'import' → logprob: -1.4071176052093506
    3. '   ' → logprob: -1.6571176052093506
    4. 'sys' (adapté à ' sys') → logprob: -2.4071176052093506
    5. ' import' → logprob: -2.6571176052093506
    6. '	sys' → logprob: -8.65711784362793
    7. '    ' → logprob: -8.90711784362793
    8. ' ' → logprob: -9.78211784362793
    9. '    
' → logprob: -10.15711784362793
    10. '
' → logprob: -10.40711784362793

Token 102: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.11757577210664749
    2. '.' → logprob: -2.6175758838653564
    3. '.setdefault' → logprob: -3.3675758838653564
    4. ' .' → logprob: -5.992575645446777
    5. '.argv' → logprob: -8.117575645446777
    6. '.stdout' → logprob: -8.242575645446777
    7. '.exit' → logprob: -8.742575645446777
    8. '.stdin' → logprob: -8.742575645446777
    9. '.stderr' → logprob: -10.117575645446777
    10. ' ' → logprob: -11.367575645446777

Token 103: 'rec' (ID: 9285)
  Prédit: '_rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -0.42773550748825073
    2. 'rec' → logprob: -1.5527355670928955
    3. '_' → logprob: -2.1777355670928955
    4. '_limit' → logprob: -4.177735328674316
    5. '_stack' → logprob: -6.802735328674316
    6. 'ursion' → logprob: -6.802735328674316
    7. '_threshold' → logprob: -6.927735328674316
    8. '_depth' → logprob: -7.052735328674316
    9. '_version' → logprob: -7.427735328674316
    10. '_max' → logprob: -7.552735328674316

Token 104: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -4.1557283111615106e-05
    2. 'limit' → logprob: -11.125041961669922
    3. '_limit' → logprob: -11.125041961669922
    4. 'ursive' → logprob: -12.000041961669922
    5. 'urs' → logprob: -12.875041961669922
    6. 'ur' → logprob: -13.000041961669922
    7. '_' → logprob: -14.750041961669922
    8. 'set' → logprob: -15.375041961669922
    9. 'usion' → logprob: -15.875041961669922
    10. '_set' → logprob: -16.125041961669922

Token 105: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.012246851809322834
    2. 't' → logprob: -4.637247085571289
    3. '_limit' → logprob: -6.137247085571289
    4. 'lt' → logprob: -9.387247085571289
    5. 'lim' → logprob: -9.762247085571289
    6. 'l' → logprob: -10.762247085571289
    7. 'depth' → logprob: -10.762247085571289
    8. 'ursion' → logprob: -11.137247085571289
    9. 'ct' → logprob: -11.262247085571289
    10. '_' → logprob: -11.387247085571289

Token 106: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011248346709180623
    2. ' (' → logprob: -9.500112533569336
    3. '(
' → logprob: -10.875112533569336
    4. '(

' → logprob: -11.500112533569336
    5. '((' → logprob: -12.125112533569336
    6. '()' → logprob: -14.250112533569336
    7. '(int' → logprob: -14.500112533569336
    8. ' ' → logprob: -15.125112533569336
    9. '('' → logprob: -15.125112533569336
    10. ')' → logprob: -15.625112533569336

Token 107: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0019408921943977475
    2. '100' → logprob: -6.251940727233887
    3. ' ' → logprob: -11.876940727233887
    4. '300' → logprob: -13.501940727233887
    5. '500' → logprob: -13.626940727233887
    6. 'int' → logprob: -13.876940727233887
    7. '200' → logprob: -14.251940727233887
    8. '   ' → logprob: -15.001940727233887
    9. '250' → logprob: -15.376940727233887
    10. '400' → logprob: -15.626940727233887

Token 108: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.14756059646606445
    2. '7' → logprob: -2.1475605964660645
    3. '6' → logprob: -3.8975605964660645
    4. '8' → logprob: -9.272560119628906
    5. '000' → logprob: -11.022560119628906
    6. '9' → logprob: -11.772560119628906
    7. '*' → logprob: -12.397560119628906
    8. '07' → logprob: -12.897560119628906
    9. '***' → logprob: -13.522560119628906
    10. '00' → logprob: -13.772560119628906

Token 109: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.04911889135837555
    2. '9' → logprob: -3.049118995666504
    3. '8' → logprob: -7.549118995666504
    4. '6' → logprob: -12.299118995666504
    5. '**' → logprob: -15.674118995666504
    6. '```' → logprob: -16.799118041992188
    7. '

' → logprob: -19.424118041992188
    8. ')' → logprob: -19.674118041992188
    9. ' ' → logprob: -19.674118041992188
    10. '"' → logprob: -20.924118041992188

Token 110: '8' (ID: 23)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.030224677175283432
    2. '9' → logprob: -3.530224561691284
    3. '8' → logprob: -7.655224800109863
    4. '6' → logprob: -14.655224800109863
    5. '```' → logprob: -16.405223846435547
    6. '**' → logprob: -16.905223846435547
    7. ' ' → logprob: -17.405223846435547
    8. '۷' → logprob: -19.780223846435547
    9. '​' → logprob: -20.030223846435547
    10. '

' → logprob: -20.092723846435547

Token 111: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4378848391061183e-05
    2. ')
' → logprob: -11.250014305114746
    3. ' )' → logprob: -13.750014305114746
    4. '))' → logprob: -16.000015258789062
    5. '   ' → logprob: -16.750015258789062
    6. ')

' → logprob: -17.625015258789062
    7. ')
' → logprob: -17.750015258789062
    8. '
' → logprob: -18.750015258789062
    9. ')return' → logprob: -19.125015258789062
    10. '),' → logprob: -19.250015258789062

Token 112: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02721486985683441
    2. '
' → logprob: -3.652214765548706
    3. '<|end|>' → logprob: -8.777215003967285
    4. '\' → logprob: -8.902215003967285
    5. '#' → logprob: -8.902215003967285
    6. '

' → logprob: -9.277215003967285
    7. '    
' → logprob: -9.652215003967285
    8. '<|end|>' → logprob: -9.777215003967285
    9. '  
' → logprob: -10.152215003967285
    10. 'd' → logprob: -10.277215003967285

Token 113: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.097800612449646
    2. ' solve' → logprob: -2.4728007316589355
    3. ' factorial' → logprob: -5.4728007316589355
    4. ' read' → logprob: -7.2228007316589355
    5. ' factor' → logprob: -7.3478007316589355
    6. ' max' → logprob: -7.9728007316589355
    7. ' is' → logprob: -8.097800254821777
    8. 'main' → logprob: -8.222800254821777
    9. ' fast' → logprob: -8.347800254821777
    10. ' input' → logprob: -8.347800254821777

Token 114: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.17237630486488342
    2. '_max' → logprob: -2.6723763942718506
    3. '_' → logprob: -3.0473763942718506
    4. '_user' → logprob: -4.1723761558532715
    5. '_data' → logprob: -5.2973761558532715
    6. '_array' → logprob: -5.5473761558532715
    7. '_system' → logprob: -5.9223761558532715
    8. '_random' → logprob: -6.6723761558532715
    9. '_query' → logprob: -6.7973761558532715
    10. '_factor' → logprob: -7.1723761558532715

Token 115: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00032640635618008673
    2. '()' → logprob: -8.625326156616211
    3. '():
' → logprob: -9.250326156616211
    4. '_line' → logprob: -10.625326156616211
    5. ' ():' → logprob: -11.250326156616211
    6. '_' → logprob: -12.750326156616211
    7. '_lines' → logprob: -13.250326156616211
    8. '().' → logprob: -13.375326156616211
    9. '(prompt' → logprob: -13.750326156616211
    10. '():

' → logprob: -13.875326156616211

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011521556414663792
    2. 'return' → logprob: -5.261521339416504
    3. '():' → logprob: -6.011521339416504
    4. ' return' → logprob: -6.261521339416504
    5. '()' → logprob: -6.511521339416504
    6. '	return' → logprob: -9.011521339416504
    7. '    
' → logprob: -9.386521339416504
    8. '    ' → logprob: -10.386521339416504
    9. '():
' → logprob: -10.511521339416504
    10. '(return' → logprob: -10.511521339416504

Token 117: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6365875005722046
    2. 'return' (adapté à ' return') → logprob: -0.7615875005722046
    3. '   ' → logprob: -6.011587619781494
    4. 'input' → logprob: -7.386587619781494
    5. ' input' → logprob: -7.511587619781494
    6. 's' → logprob: -9.886587142944336
    7. ' s' → logprob: -9.886587142944336
    8. ' line' → logprob: -10.011587142944336
    9. 'n' → logprob: -10.261587142944336
    10. 'data' → logprob: -10.511587142944336

Token 118: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4632433354854584
    2. 'input' → logprob: -1.7132433652877808
    3. ' sys' → logprob: -1.7132433652877808
    4. 'sys' → logprob: -4.58824348449707
    5. ' ' → logprob: -11.46324348449707
    6. ' list' → logprob: -12.21324348449707
    7. 'list' → logprob: -12.33824348449707
    8. 'int' → logprob: -12.58824348449707
    9. ' int' → logprob: -13.33824348449707
    10. ' map' → logprob: -13.96324348449707

Token 119: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00018077615823131055
    2. 'stdin' → logprob: -9.625181198120117
    3. '.' → logprob: -9.875181198120117
    4. '.readline' → logprob: -10.375181198120117
    5. '.stdout' → logprob: -10.625181198120117
    6. '.std' → logprob: -12.125181198120117
    7. ' stdin' → logprob: -13.875181198120117
    8. '.argv' → logprob: -14.000181198120117
    9. '(stdin' → logprob: -15.250181198120117
    10. ' .' → logprob: -16.000181198120117

Token 120: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00014180023572407663
    2. '.' → logprob: -9.375142097473145
    3. '.read' → logprob: -9.875142097473145
    4. '.readlines' → logprob: -12.750142097473145
    5. '.buffer' → logprob: -13.000142097473145
    6. 'read' → logprob: -15.625142097473145
    7. 'buffer' → logprob: -16.250141143798828
    8. '.stdin' → logprob: -16.500141143798828
    9. ' readline' → logprob: -17.125141143798828
    10. '.re' → logprob: -18.750141143798828

Token 121: '

' (ID: 279)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01815064437687397
    2. '()' → logprob: -4.018150806427002
    3. '()\' → logprob: -15.518150329589844
    4. '()

' → logprob: -15.643150329589844
    5. ' ().' → logprob: -15.768150329589844
    6. '()
' → logprob: -16.143150329589844
    7. '(' → logprob: -17.143150329589844
    8. '()?.' → logprob: -17.768150329589844
    9. '().__' → logprob: -17.893150329589844
    10. '()<' → logprob: -18.143150329589844

Token 122: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02492419071495533
    2. 'def' → logprob: -4.274924278259277
    3. '()

' → logprob: -4.649924278259277
    4. '()
' → logprob: -7.524924278259277
    5. '

' → logprob: -8.274924278259277
    6. '(' → logprob: -9.399924278259277
    7. '
' → logprob: -10.024924278259277
    8. '<|end|>' → logprob: -10.649924278259277
    9. '(
' → logprob: -10.774924278259277
    10. '#' → logprob: -11.024924278259277

Token 123: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03429938852787018
    2. ' solve' → logprob: -3.909299373626709
    3. 'main' → logprob: -5.159299373626709
    4. '_main' → logprob: -5.534299373626709
    5. '_' → logprob: -6.659299373626709
    6. 'solve' → logprob: -7.284299373626709
    7. ' parse' → logprob: -7.784299373626709
    8. ' read' → logprob: -8.159299850463867
    9. ' print' → logprob: -8.534299850463867
    10. 's' → logprob: -9.159299850463867

Token 124: '_constants' (ID: 141103)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.39077070355415344
    2. '_output' → logprob: -1.640770673751831
    3. '_data' → logprob: -3.390770673751831
    4. '_input' → logprob: -3.890770673751831
    5. '_tokens' → logprob: -4.01577091217041
    6. '_list' → logprob: -4.26577091217041
    7. '_array' → logprob: -4.39077091217041
    8. '_test' → logprob: -5.64077091217041
    9. 's' → logprob: -5.64077091217041
    10. '_answer' → logprob: -6.01577091217041

Token 125: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0009032421512529254
    2. ' ():' → logprob: -7.750903129577637
    3. '():
' → logprob: -7.875903129577637
    4. '()' → logprob: -9.375903129577637
    5. '(' → logprob: -12.875903129577637
    6. ' ()' → logprob: -14.125903129577637
    7. '():
' → logprob: -14.125903129577637
    8. '_' → logprob: -14.500903129577637
    9. '_params' → logprob: -15.000903129577637
    10. '_values' → logprob: -15.000903129577637

Token 126: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4524419903755188
    2. '():
' → logprob: -1.452441930770874
    3. '   ' → logprob: -2.077441930770874
    4. ':' → logprob: -5.827442169189453
    5. '()' → logprob: -7.452442169189453
    6. ' ():' → logprob: -7.702442169189453
    7. ':
' → logprob: -7.952442169189453
    8. '():
' → logprob: -9.702442169189453
    9. '[]' → logprob: -9.952442169189453
    10. '):' → logprob: -10.202442169189453

Token 127: ' INF' (ID: 69196)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9615994691848755
    2. 'return' → logprob: -1.0865994691848755
    3. ' return' → logprob: -1.3365994691848755
    4. 'A' → logprob: -5.711599349975586
    5. 'a' → logprob: -5.961599349975586
    6. ' A' → logprob: -6.086599349975586
    7. 'n' → logprob: -6.211599349975586
    8. ' MOD' → logprob: -6.211599349975586
    9. 'MOD' → logprob: -6.961599349975586
    10. 'N' → logprob: -6.961599349975586

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008676143363118172
    2. '=' → logprob: -4.758676052093506
    3. ',' → logprob: -9.758676528930664
    4. ' ' → logprob: -13.883676528930664
    5. '   ' → logprob: -14.008676528930664
    6. ' =
' → logprob: -14.133676528930664
    7. ' ,' → logprob: -14.758676528930664
    8. '  ' → logprob: -14.883676528930664
    9. '_' → logprob: -15.383676528930664
    10. ':' → logprob: -16.133676528930664

Token 129: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.6260777711868286
    2. '10' → logprob: -0.8760777711868286
    3. ' float' → logprob: -3.376077651977539
    4. ' ' → logprob: -4.251077651977539
    5. '1' → logprob: -8.251077651977539
    6. 'int' → logprob: -8.626077651977539
    7. '   ' → logprob: -11.751077651977539
    8. '100' → logprob: -12.251077651977539
    9. '	float' → logprob: -12.376077651977539
    10. ' int' → logprob: -12.501077651977539

Token 130: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00022308611369226128
    2. ''' → logprob: -9.250223159790039
    3. '("' → logprob: -9.750223159790039
    4. ''in' → logprob: -9.875223159790039
    5. '(' → logprob: -11.125223159790039
    6. '"' → logprob: -14.250223159790039
    7. ''s' → logprob: -15.625223159790039
    8. ''t' → logprob: -15.625223159790039
    9. ''a' → logprob: -15.625223159790039
    10. '('+' → logprob: -16.12522315979004

Token 131: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.007211160380393267
    2. ''in' → logprob: -5.007211208343506
    3. ''' → logprob: -7.757211208343506
    4. 'in' → logprob: -9.757210731506348
    5. ' inf' → logprob: -12.507210731506348
    6. '"' → logprob: -13.382210731506348
    7. 'info' → logprob: -14.132210731506348
    8. '-inf' → logprob: -14.632210731506348
    9. 'INF' → logprob: -14.632210731506348
    10. '3' → logprob: -15.007210731506348

Token 132: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.07006514817476273
    2. ')' → logprob: -2.6950652599334717
    3. '')
' → logprob: -9.07006549835205
    4. '")' → logprob: -11.94506549835205
    5. '')
' → logprob: -13.32006549835205
    6. '');' → logprob: -13.57006549835205
    7. ')
' → logprob: -13.57006549835205
    8. ''' → logprob: -13.82006549835205
    9. '')

' → logprob: -14.44506549835205
    10. ' ')' → logprob: -14.69506549835205

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02014240063726902
    2. '
' → logprob: -4.270142555236816
    3. '    
' → logprob: -6.270142555236816
    4. ' return' → logprob: -6.770142555236816
    5. 'return' → logprob: -6.770142555236816
    6. ')' → logprob: -7.270142555236816
    7. '<|end|>' → logprob: -8.020142555236816
    8. ' ' → logprob: -8.270142555236816
    9. '    ' → logprob: -9.270142555236816
    10. '	return' → logprob: -9.645142555236816

Token 134: ' L' (ID: 451)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.10356981307268143
    2. ' MOD' → logprob: -2.603569746017456
    3. '   ' → logprob: -3.853569746017456
    4. 'MAX' → logprob: -5.853569984436035
    5. 'mod' → logprob: -9.353569984436035
    6. ' MAX' → logprob: -9.603569984436035
    7. 'EPS' → logprob: -9.853569984436035
    8. 'N' → logprob: -10.603569984436035
    9. '    
' → logprob: -10.853569984436035
    10. 'DEBUG' → logprob: -11.978569984436035

Token 135: 'INF' (ID: 64358)
  Prédit: 'IMIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IMIT' → logprob: -0.27629354596138
    2. 'EN' → logprob: -2.0262935161590576
    3. 'IM' → logprob: -3.1512935161590576
    4. ' =' → logprob: -3.2762935161590576
    5. 'E' → logprob: -4.401293754577637
    6. 'OG' → logprob: -5.776293754577637
    7. 'O' → logprob: -6.026293754577637
    8. ',' → logprob: -6.026293754577637
    9. '=' → logprob: -6.026293754577637
    10. 'ENGTH' → logprob: -6.776293754577637

Token 136: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931529641151428
    2. ' =' → logprob: -0.6931529641151428
    3. '   ' → logprob: -13.568153381347656
    4. '＝' → logprob: -13.943153381347656
    5. ',' → logprob: -14.068153381347656
    6. ' ' → logprob: -14.693153381347656
    7. '	' → logprob: -14.943153381347656
    8. 'O' → logprob: -15.193153381347656
    9. 'A' → logprob: -15.318153381347656
    10. '=

' → logprob: -15.568153381347656

Token 137: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0976443812251091
    2. '10' → logprob: -2.847644329071045
    3. ' float' → logprob: -3.847644329071045
    4. 'int' → logprob: -4.472644329071045
    5. ' ' → logprob: -6.847644329071045
    6. '1' → logprob: -6.972644329071045
    7. ' int' → logprob: -9.097644805908203
    8. 'inf' → logprob: -9.847644805908203
    9. 'sys' → logprob: -10.597644805908203
    10. '(float' → logprob: -10.597644805908203

Token 138: '2' (ID: 17)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0038462711963802576
    2. '10' → logprob: -6.003846168518066
    3. 'int' → logprob: -6.753846168518066
    4. '1' → logprob: -8.878846168518066
    5. 'sys' → logprob: -10.003846168518066
    6. ' float' → logprob: -12.378846168518066
    7. 'inf' → logprob: -12.378846168518066
    8. 'pow' → logprob: -12.503846168518066
    9. '(float' → logprob: -12.753846168518066
    10. 'math' → logprob: -13.753846168518066

Token 139: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00018947436183225363
    2. ' **' → logprob: -9.000189781188965
    3. '*' → logprob: -10.125189781188965
    4. '63' → logprob: -10.750189781188965
    5. '0' → logprob: -13.125189781188965
    6. '<<' → logprob: -13.750189781188965
    7. '_' → logprob: -15.000189781188965
    8. '```' → logprob: -15.125189781188965
    9. '***' → logprob: -15.250189781188965
    10. '000' → logprob: -15.875189781188965

Token 140: ' ' (ID: 220)
  Prédit: '63'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '63' → logprob: -0.0003122247871942818
    2. '60' → logprob: -8.625311851501465
    3. '62' → logprob: -9.375311851501465
    4. ' ' → logprob: -10.500311851501465
    5. '64' → logprob: -10.875311851501465
    6. '61' → logprob: -14.125311851501465
    7. '65' → logprob: -14.500311851501465
    8. '31' → logprob: -17.75031280517578
    9. '59' → logprob: -18.12531280517578
    10. '53' → logprob: -18.12531280517578

Token 141: '63' (ID: 8876)
  Prédit: '63'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '63' → logprob: -3.5954712075181305e-05
    2. '60' → logprob: -10.250036239624023
    3. '64' → logprob: -15.375036239624023
    4. '62' → logprob: -15.500036239624023
    5. '61' → logprob: -18.750036239624023
    6. '31' → logprob: -19.000036239624023
    7. '50' → logprob: -20.250036239624023
    8. '59' → logprob: -20.625036239624023
    9. '53' → logprob: -20.875036239624023
    10. '65' → logprob: -21.750036239624023

Token 142: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005943613592535257
    2. ' -' → logprob: -5.130943775177002
    3. ')' → logprob: -11.880943298339844
    4. '()-' → logprob: -12.130943298339844
    5. ')-' → logprob: -14.380943298339844
    6. '()' → logprob: -15.130943298339844
    7. '>' → logprob: -15.630943298339844
    8. '```' → logprob: -15.630943298339844
    9. 'minus' → logprob: -15.755943298339844
    10. '−' → logprob: -15.880943298339844

Token 143: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020389800192788243
    2. ' ' → logprob: -8.500204086303711
    3. '```' → logprob: -15.875204086303711
    4. '2' → logprob: -16.56270408630371
    5. '-' → logprob: -17.12520408630371
    6. '11' → logprob: -17.75020408630371
    7. '

' → logprob: -18.50020408630371
    8. '  ' → logprob: -18.75020408630371
    9. '<|end|>' → logprob: -18.75020408630371
    10. ' ' → logprob: -18.75020408630371

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.375004768371582
    3. '11' → logprob: -16.000003814697266
    4. '```' → logprob: -16.937503814697266
    5. '111' → logprob: -17.375003814697266
    6. '2' → logprob: -17.750003814697266
    7. '12' → logprob: -18.187503814697266
    8. '-' → logprob: -18.312503814697266
    9. '116' → logprob: -18.562503814697266
    10. '112' → logprob: -18.625003814697266

Token 145: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32404860854148865
    2. '   ' → logprob: -1.324048638343811
    3. '<|end|>' → logprob: -5.6990485191345215
    4. ' return' → logprob: -5.9490485191345215
    5. 'return' → logprob: -6.1990485191345215
    6. '    
' → logprob: -6.5740485191345215
    7. '	return' → logprob: -7.3240485191345215
    8. '
' → logprob: -8.82404899597168
    9. ' ' → logprob: -9.32404899597168
    10. '	
' → logprob: -9.57404899597168

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00555211678147316
    2. '
' → logprob: -5.505552291870117
    3. '<|end|>' → logprob: -6.880552291870117
    4. '    
' → logprob: -8.630552291870117
    5. 'return' → logprob: -8.880552291870117
    6. ' return' → logprob: -9.630552291870117
    7. '	return' → logprob: -11.255552291870117
    8. ')' → logprob: -11.505552291870117
    9. '<|end|>' → logprob: -11.630552291870117
    10. '
' → logprob: -11.880552291870117

Token 147: ' NIL' (ID: 148345)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0030540041625499725
    2. 'MAX' → logprob: -6.253054141998291
    3. 'mod' → logprob: -7.878054141998291
    4. 'EPS' → logprob: -8.003053665161133
    5. '   ' → logprob: -9.253053665161133
    6. 'MD' → logprob: -9.253053665161133
    7. ' MOD' → logprob: -9.503053665161133
    8. 'DEBUG' → logprob: -9.503053665161133
    9. 'M' → logprob: -11.253053665161133
    10. 'MASK' → logprob: -11.503053665161133

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741378426551819
    2. '=' → logprob: -0.9741378426551819
    3. '=-' → logprob: -10.599138259887695
    4. ',' → logprob: -11.224138259887695
    5. '=None' → logprob: -11.724138259887695
    6. '_' → logprob: -13.099138259887695
    7. '   ' → logprob: -13.474138259887695
    8. ' ' → logprob: -13.599138259887695
    9. ' ' → logprob: -13.599138259887695
    10. '_VALUE' → logprob: -13.599138259887695

Token 149: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.048273224383592606
    2. ' -' → logprob: -3.1732733249664307
    3. 'None' → logprob: -5.923273086547852
    4. ' None' → logprob: -6.048273086547852
    5. '0' → logprob: -9.423273086547852
    6. '-none' → logprob: -9.798273086547852
    7. ' ' → logprob: -10.173273086547852
    8. '-n' → logprob: -10.923273086547852
    9. '-s' → logprob: -12.673273086547852
    10. '  ' → logprob: -12.798273086547852

Token 150: 'LIN' (ID: 61147)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002979240380227566
    2. '10' → logprob: -8.375297546386719
    3. '(' → logprob: -9.750297546386719
    4. 'float' → logprob: -12.750297546386719
    5. '922' → logprob: -13.125297546386719
    6. '2' → logprob: -13.625297546386719
    7. '987' → logprob: -14.375297546386719
    8. '999' → logprob: -14.500297546386719
    9. ' ' → logprob: -14.625297546386719
    10. 'sys' → logprob: -14.875297546386719

Token 151: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.00015395533409900963
    2. 'K' → logprob: -9.750153541564941
    3. 'E' → logprob: -9.875153541564941
    4. 'T' → logprob: -10.250153541564941
    5. 'f' → logprob: -12.250153541564941
    6. '
' → logprob: -14.625153541564941
    7. 'EF' → logprob: -14.875153541564941
    8. 'A' → logprob: -15.000153541564941
    9. '```' → logprob: -15.125153541564941
    10. 'C' → logprob: -15.375153541564941

Token 152: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07182419300079346
    2. '   ' → logprob: -2.946824073791504
    3. 'return' → logprob: -4.821824073791504
    4. ' return' → logprob: -5.446824073791504
    5. '    
' → logprob: -6.946824073791504
    6. '
' → logprob: -7.321824073791504
    7. ' 
' → logprob: -7.321824073791504
    8. '<|end|>' → logprob: -7.321824073791504
    9. ' ' → logprob: -7.696824073791504
    10. '	return' → logprob: -7.821824073791504

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005221736500971019
    2. 'return' → logprob: -8.12552261352539
    3. ' return' → logprob: -9.12552261352539
    4. '
' → logprob: -9.75052261352539
    5. '    
' → logprob: -10.50052261352539
    6. '	return' → logprob: -11.00052261352539
    7. '<|end|>' → logprob: -11.62552261352539
    8. ',' → logprob: -14.12552261352539
    9. '  ' → logprob: -14.25052261352539
    10. ')' → logprob: -14.25052261352539

Token 154: ' MOD' (ID: 32868)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07672335207462311
    2. 'return' → logprob: -3.326723337173462
    3. ' return' → logprob: -3.326723337173462
    4. '
' → logprob: -6.951723575592041
    5. '    
' → logprob: -7.826723575592041
    6. '	return' → logprob: -8.326723098754883
    7. ' ' → logprob: -8.576723098754883
    8. 'RETURN' → logprob: -10.201723098754883
    9. ')' → logprob: -10.951723098754883
    10. '  ' → logprob: -11.139223098754883

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04882024973630905
    2. '=' → logprob: -3.0488202571868896
    3. ' ' → logprob: -8.423820495605469
    4. ',' → logprob: -11.923820495605469
    5. ' =
' → logprob: -13.423820495605469
    6. ' ,' → logprob: -13.423820495605469
    7. '  ' → logprob: -13.673820495605469
    8. ':' → logprob: -14.298820495605469
    9. '<|end|>' → logprob: -14.923820495605469
    10. ' =)' → logprob: -15.048820495605469

Token 156: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12713861465454102
    2. ' ' → logprob: -2.127138614654541
    3. '100' → logprob: -8.502138137817383
    4. '1' → logprob: -12.377138137817383
    5. '998' → logprob: -13.377138137817383
    6. 'int' → logprob: -13.502138137817383
    7. ' int' → logprob: -16.127138137817383
    8. 'pow' → logprob: -17.127138137817383
    9. '999' → logprob: -17.502138137817383
    10. ' ' → logprob: -17.502138137817383

Token 157: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.7159857786027715e-05
    2. '100' → logprob: -10.125046730041504
    3. '998' → logprob: -12.125046730041504
    4. ' ' → logprob: -14.125046730041504
    5. 'int' → logprob: -14.500046730041504
    6. '1' → logprob: -14.875046730041504
    7. '(' → logprob: -18.00004768371582
    8. 'pow' → logprob: -18.12504768371582
    9. '１０' → logprob: -18.12504768371582
    10. '```' → logprob: -20.00004768371582

Token 158: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.004804614931344986
    2. '**' → logprob: -5.504804611206055
    3. '09' → logprob: -7.254804611206055
    4. ' ' → logprob: -11.129804611206055
    5. ' **' → logprob: -13.129804611206055
    6. '00' → logprob: -13.879804611206055
    7. '000' → logprob: -14.254804611206055
    8. '+' → logprob: -15.129804611206055
    9. '*' → logprob: -15.629804611206055
    10. '0' → logprob: -15.879804611206055

Token 159: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '09' → logprob: -17.125
    4. '９' → logprob: -21.375
    5. '```' → logprob: -22.125
    6. '
' → logprob: -22.5
    7. '   ' → logprob: -23.25
    8. '+' → logprob: -23.5
    9. '_' → logprob: -23.5
    10. '10' → logprob: -24.5

Token 160: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.75
    3. '```' → logprob: -20.0
    4. '10' → logprob: -20.875
    5. '
' → logprob: -20.875
    6. '18' → logprob: -21.0
    7. ' ' → logprob: -21.125
    8. '９' → logprob: -21.5
    9. '19' → logprob: -22.25
    10. '

' → logprob: -22.5

Token 161: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048667192459106445
    2. ' +' → logprob: -3.0486671924591064
    3. '7' → logprob: -9.548666954040527
    4. ' plus' → logprob: -12.423666954040527
    5. ' ' → logprob: -14.048666954040527
    6. '+
' → logprob: -14.048666954040527
    7. '＋' → logprob: -14.423666954040527
    8. '9' → logprob: -14.423666954040527
    9. 'plus' → logprob: -15.048666954040527
    10. ' +
' → logprob: -15.298666954040527

Token 162: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '+' → logprob: -16.875
    4. '9' → logprob: -18.25
    5. '07' → logprob: -18.75
    6. '   ' → logprob: -19.125
    7. '```' → logprob: -19.125
    8. '79' → logprob: -20.6875
    9. '' → logprob: -20.8125
    10. '  ' → logprob: -20.875

Token 163: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '```' → logprob: -18.875
    4. '   ' → logprob: -19.875
    5. '+' → logprob: -20.125
    6. '07' → logprob: -20.625
    7. '9' → logprob: -20.75
    8. '

' → logprob: -21.375
    9. '７' → logprob: -21.75
    10. '' → logprob: -22.0625

Token 164: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014596158638596535
    2. '
' → logprob: -5.014595985412598
    3. 'return' → logprob: -5.389595985412598
    4. ' return' → logprob: -6.389595985412598
    5. '    
' → logprob: -7.014595985412598
    6. '<|end|>' → logprob: -8.139595985412598
    7. ')' → logprob: -8.764595985412598
    8. '	return' → logprob: -8.764595985412598
    9. ':return' → logprob: -11.139595985412598
    10. '<|end|>' → logprob: -11.139595985412598

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004341261519584805
    2. 'return' → logprob: -8.125433921813965
    3. ' return' → logprob: -9.125433921813965
    4. '	return' → logprob: -11.500433921813965
    5. '<|end|>' → logprob: -12.125433921813965
    6. ')' → logprob: -12.500433921813965
    7. '    
' → logprob: -12.625433921813965
    8. '
' → logprob: -12.875433921813965
    9. ',' → logprob: -14.000433921813965
    10. '  ' → logprob: -14.375433921813965

Token 166: ' M' (ID: 391)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12188562005758286
    2. '   ' → logprob: -2.2468855381011963
    3. ' return' → logprob: -4.746885776519775
    4. '	return' → logprob: -8.871885299682617
    5. '    
' → logprob: -9.746885299682617
    6. ' ' → logprob: -10.246885299682617
    7. ':return' → logprob: -10.371885299682617
    8. '
' → logprob: -10.621885299682617
    9. '  ' → logprob: -10.871885299682617
    10. 'RETURN' → logprob: -11.621885299682617

Token 167: 'GN' (ID: 62482)
  Prédit: 'OD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'OD' → logprob: -1.8550976164988242e-05
    2. '_OD' → logprob: -12.000018119812012
    3. 'ODULE' → logprob: -12.625018119812012
    4. 'AX' → logprob: -13.000018119812012
    5. 'O' → logprob: -13.500018119812012
    6. ' OD' → logprob: -13.750018119812012
    7. 'ODE' → logprob: -13.875018119812012
    8. ' =' → logprob: -13.875018119812012
    9. '=' → logprob: -14.750018119812012
    10. '   ' → logprob: -15.125018119812012

Token 168: ' =' (ID: 314)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.3438739478588104
    2. ' =' → logprob: -1.5938739776611328
    3. '=' → logprob: -2.968873977661133
    4. 'O' → logprob: -4.093873977661133
    5. 'OT' → logprob: -4.843873977661133
    6. 'IC' → logprob: -6.093873977661133
    7. 'ET' → logprob: -6.093873977661133
    8. 'A' → logprob: -6.343873977661133
    9. 'I' → logprob: -6.468873977661133
    10. 'UM' → logprob: -6.968873977661133

Token 169: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4880523383617401
    2. ' ' → logprob: -1.3630523681640625
    3. '100' → logprob: -2.4880523681640625
    4. '998' → logprob: -4.1130523681640625
    5. '20' → logprob: -4.8630523681640625
    6. 'int' → logprob: -5.6130523681640625
    7. '2' → logprob: -6.1130523681640625
    8. '1' → logprob: -6.3630523681640625
    9. '5' → logprob: -6.4880523681640625
    10. '50' → logprob: -6.6130523681640625

Token 170: '4' (ID: 19)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.18086864054203033
    2. '998' → logprob: -2.180868625640869
    3. '100' → logprob: -3.805868625640869
    4. '2' → logprob: -4.930868625640869
    5. 'int' → logprob: -5.180868625640869
    6. '20' → logprob: -6.055868625640869
    7. '3' → logprob: -6.180868625640869
    8. '5' → logprob: -6.305868625640869
    9. '50' → logprob: -6.805868625640869
    10. '200' → logprob: -7.055868625640869

Token 171: '
' (ID: 198)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1392451673746109
    2. '00' → logprob: -2.7642452716827393
    3. '16' → logprob: -3.5142452716827393
    4. '096' → logprob: -5.01424503326416
    5. '04' → logprob: -5.51424503326416
    6. '1' → logprob: -5.76424503326416
    7. '9' → logprob: -5.76424503326416
    8. '5' → logprob: -5.88924503326416
    9. '2' → logprob: -5.88924503326416
    10. '*' → logprob: -6.26424503326416

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01794353500008583
    2. '
' → logprob: -4.767943382263184
    3. ')' → logprob: -6.017943382263184
    4. 'return' → logprob: -6.267943382263184
    5. ' ' → logprob: -6.892943382263184
    6. ' return' → logprob: -7.142943382263184
    7. '    
' → logprob: -7.267943382263184
    8. ',' → logprob: -8.142943382263184
    9. '	return' → logprob: -8.267943382263184
    10. ' 
' → logprob: -8.642943382263184

Token 173: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6119066476821899
    2. ' return' → logprob: -1.23690664768219
    3. '   ' → logprob: -1.86190664768219
    4. 'MG' → logprob: -5.9869065284729
    5. ' ' → logprob: -6.7369065284729
    6. ')' → logprob: -6.9869065284729
    7. 'N' → logprob: -7.2369065284729
    8. 'RETURN' → logprob: -7.4869065284729
    9. '    
' → logprob: -7.8619065284729
    10. ' MG' → logprob: -7.8619065284729

Token 174: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0006458373973146081
    2. ' INF' → logprob: -7.500645637512207
    3. '(IN' → logprob: -9.625645637512207
    4. '   ' → logprob: -11.125645637512207
    5. 'IN' → logprob: -12.250645637512207
    6. '(' → logprob: -13.000645637512207
    7. '_INF' → logprob: -13.875645637512207
    8. '-INF' → logprob: -14.125645637512207
    9. ' ' → logprob: -14.500645637512207
    10. 'INFO' → logprob: -14.625645637512207

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002570481738075614
    2. ',N' → logprob: -9.25025749206543
    3. ',
' → logprob: -9.62525749206543
    4. '<|end|>' → logprob: -9.75025749206543
    5. ',M' → logprob: -10.50025749206543
    6. ' ,' → logprob: -12.75025749206543
    7. ',None' → logprob: -13.62525749206543
    8. ',L' → logprob: -14.12525749206543
    9. ',K' → logprob: -15.12525749206543
    10. ',n' → logprob: -15.25025749206543

Token 176: ' L' (ID: 451)
  Prédit: 'LIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIN' → logprob: -0.08731761574745178
    2. ' L' → logprob: -2.587317705154419
    3. 'L' → logprob: -4.96231746673584
    4. ' LIN' → logprob: -6.58731746673584
    5. 'LINE' → logprob: -11.96231746673584
    6. 'LI' → logprob: -12.33731746673584
    7. 'LEN' → logprob: -13.96231746673584
    8. 'LINK' → logprob: -14.33731746673584
    9. 'LINES' → logprob: -14.46231746673584
    10. 'LN' → logprob: -14.46231746673584

Token 177: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -6.8497312895488e-05
    2. 'IN' → logprob: -9.625068664550781
    3. ' INF' → logprob: -13.500068664550781
    4. 'NF' → logprob: -15.375068664550781
    5. 'N' → logprob: -16.00006866455078
    6. '1' → logprob: -16.25006866455078
    7. 'INFO' → logprob: -16.37506866455078
    8. 'inf' → logprob: -16.50006866455078
    9. '```' → logprob: -16.50006866455078
    10. '
' → logprob: -16.62506866455078

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023731542751193047
    2. ',N' → logprob: -6.127373218536377
    3. ' ,' → logprob: -8.752372741699219
    4. 'N' → logprob: -10.752372741699219
    5. ',L' → logprob: -12.127372741699219
    6. ',n' → logprob: -14.252372741699219
    7. ',None' → logprob: -14.252372741699219
    8. '   ' → logprob: -14.752372741699219
    9. ',
' → logprob: -14.877372741699219
    10. ',M' → logprob: -15.377372741699219

Token 179: ' NIL' (ID: 148345)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.012781442143023014
    2. ' NIL' → logprob: -4.387781620025635
    3. ' N' → logprob: -8.887781143188477
    4. ' ' → logprob: -9.012781143188477
    5. 'MOD' → logprob: -13.012781143188477
    6. '	N' → logprob: -13.137781143188477
    7. '   ' → logprob: -13.762781143188477
    8. '
' → logprob: -13.762781143188477
    9. 'nil' → logprob: -14.262781143188477
    10. '  ' → logprob: -14.450281143188477

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.8126592193730175e-05
    2. ' ,' → logprob: -9.8750581741333
    3. 'MOD' → logprob: -12.8750581741333
    4. ',M' → logprob: -13.0000581741333
    5. ',
' → logprob: -13.8750581741333
    6. ',N' → logprob: -14.6250581741333
    7. '   ' → logprob: -15.7500581741333
    8. ' MOD' → logprob: -16.250057220458984
    9. '```' → logprob: -17.125057220458984
    10. '0' → logprob: -17.500057220458984

Token 181: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.3868718445301056
    2. ' MOD' → logprob: -1.1368718147277832
    3. '_MOD' → logprob: -15.011872291564941
    4. '.MOD' → logprob: -15.636872291564941
    5. ' ' → logprob: -15.761872291564941
    6. 'MO' → logprob: -16.511871337890625
    7. '   ' → logprob: -16.886871337890625
    8. '```' → logprob: -17.136871337890625
    9. 'mod' → logprob: -17.386871337890625
    10. ' ' → logprob: -18.011871337890625

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008543536998331547
    2. ',M' → logprob: -5.258543491363525
    3. ',N' → logprob: -6.633543491363525
    4. 'MG' → logprob: -7.258543491363525
    5. ' ,' → logprob: -7.883543491363525
    6. '<|end|>' → logprob: -8.258543968200684
    7. 'def' → logprob: -8.508543968200684
    8. 'N' → logprob: -8.758543968200684
    9. 'M' → logprob: -10.633543968200684
    10. '#' → logprob: -10.633543968200684

Token 183: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.5233134627342224
    2. 'MG' → logprob: -0.8983134627342224
    3. ' MG' → logprob: -9.023313522338867
    4. 'M' → logprob: -9.648313522338867
    5. 'MC' → logprob: -13.273313522338867
    6. ' ' → logprob: -14.023313522338867
    7. ' ' → logprob: -14.148313522338867
    8. 'MAG' → logprob: -15.523313522338867
    9. 'MN' → logprob: -15.773313522338867
    10. '
' → logprob: -15.773313522338867

Token 184: 'GN' (ID: 62482)
  Prédit: 'GN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GN' → logprob: -1.8550976164988242e-05
    2. 'G' → logprob: -11.000018119812012
    3. ' GN' → logprob: -13.500018119812012
    4. 'N' → logprob: -15.750018119812012
    5. 'OG' → logprob: -16.500019073486328
    6. 'gn' → logprob: -16.875019073486328
    7. 'MG' → logprob: -17.500019073486328
    8. 'GIN' → logprob: -17.750019073486328
    9. 'Gn' → logprob: -18.000019073486328
    10. 'AGN' → logprob: -18.375019073486328

Token 185: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13554640114307404
    2. '
' → logprob: -2.3855464458465576
    3. '

' → logprob: -3.5105464458465576
    4. '<|end|>' → logprob: -6.2605462074279785
    5. ',' → logprob: -7.7605462074279785
    6. 'INF' → logprob: -7.8855462074279785
    7. '#' → logprob: -7.8855462074279785
    8. 'class' → logprob: -8.010546684265137
    9. '```' → logprob: -8.385546684265137
    10. '    
' → logprob: -9.010546684265137

Token 186: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0030372515320777893
    2. 'class' → logprob: -5.878037452697754
    3. '#' → logprob: -9.003037452697754
    4. '
' → logprob: -10.128037452697754
    5. 'import' → logprob: -10.878037452697754
    6. 'if' → logprob: -11.628037452697754
    7. '```' → logprob: -12.128037452697754
    8. '\' → logprob: -12.253037452697754
    9. '  
' → logprob: -12.503037452697754
    10. '    
' → logprob: -12.503037452697754

Token 187: ' AST' (ID: 41607)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12181976437568665
    2. 'main' → logprob: -2.2468197345733643
    3. ' solve' → logprob: -4.996819972991943
    4. 'solve' → logprob: -6.246819972991943
    5. ' parse' → logprob: -9.996819496154785
    6. ' initialize' → logprob: -10.246819496154785
    7. ' read' → logprob: -10.246819496154785
    8. 'parse' → logprob: -10.371819496154785
    9. 'initialize' → logprob: -10.871819496154785
    10. ' binary' → logprob: -11.621819496154785

Token 188: '(exp' (ID: 51367)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1242361068725586
    2. 'ER' → logprob: -1.6242361068725586
    3. '_node' → logprob: -1.8742361068725586
    4. '_nodes' → logprob: -3.2492361068725586
    5. 'Node' → logprob: -3.4992361068725586
    6. 'R' → logprob: -3.6242361068725586
    7. '_parse' → logprob: -3.6242361068725586
    8. '_tree' → logprob: -3.7492361068725586
    9. '_parser' → logprob: -3.7492361068725586
    10. '():' → logprob: -3.7492361068725586

Token 189: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.036164771765470505
    2. '):
' → logprob: -3.6611647605895996
    3. ')' → logprob: -4.9111647605896
    4. ',' → logprob: -6.2861647605896
    5. 'r' → logprob: -8.911165237426758
    6. '):
' → logprob: -9.161165237426758
    7. ' ):' → logprob: -9.161165237426758
    8. 'er' → logprob: -9.911165237426758
    9. '(' → logprob: -10.536165237426758
    10. 's' → logprob: -11.036165237426758

Token 190: ' bool' (ID: 3792)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.018579130992293358
    2. ' str' → logprob: -4.393579006195068
    3. 'object' → logprob: -5.893579006195068
    4. ')' → logprob: -5.893579006195068
    5. 'int' → logprob: -9.018579483032227
    6. ' ' → logprob: -9.393579483032227
    7. 'ast' → logprob: -9.393579483032227
    8. 'expr' → logprob: -9.893579483032227
    9. ' object' → logprob: -10.643579483032227
    10. '):
' → logprob: -10.643579483032227

Token 191: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5506335496902466
    2. ')' → logprob: -1.1756335496902466
    3. ',' → logprob: -2.175633430480957
    4. '):
' → logprob: -8.050633430480957
    5. '=' → logprob: -8.300633430480957
    6. ' ,' → logprob: -8.800633430480957
    7. ')->' → logprob: -8.800633430480957
    8. ' ):' → logprob: -9.050633430480957
    9. ' )' → logprob: -9.300633430480957
    10. ',)' → logprob: -10.425633430480957

Token 192: ' msg' (ID: 6981)
  Prédit: 'msg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'msg' → logprob: -0.9600152969360352
    2. ' msg' → logprob: -1.5850152969360352
    3. ' message' → logprob: -1.8350152969360352
    4. 'message' → logprob: -2.210015296936035
    5. ' true' → logprob: -4.210015296936035
    6. 'name' → logprob: -4.460015296936035
    7. ' cond' → logprob: -4.835015296936035
    8. 'true' → logprob: -4.835015296936035
    9. '   ' → logprob: -4.835015296936035
    10. ' name' → logprob: -4.960015296936035

Token 193: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7494755983352661
    2. '):' → logprob: -0.7494755983352661
    3. '=None' → logprob: -3.3744754791259766
    4. ')' → logprob: -4.874475479125977
    5. '='' → logprob: -4.999475479125977
    6. ',' → logprob: -5.374475479125977
    7. '="' → logprob: -7.624475479125977
    8. ':' → logprob: -8.124475479125977
    9. '):
' → logprob: -8.249475479125977
    10. ' =' → logprob: -8.624475479125977

Token 194: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5236095786094666
    2. ' str' → logprob: -0.8986095786094666
    3. ')' → logprob: -8.148609161376953
    4. '   ' → logprob: -9.523609161376953
    5. '):' → logprob: -10.523609161376953
    6. ' ' → logprob: -11.148609161376953
    7. '):
' → logprob: -11.398609161376953
    8. '...' → logprob: -11.648609161376953
    9. 'None' → logprob: -11.898609161376953
    10. 'Exception' → logprob: -12.023609161376953

Token 195: ' =' (ID: 314)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025792857632040977
    2. ')' → logprob: -3.9007928371429443
    3. ',' → logprob: -5.900793075561523
    4. '=' → logprob: -6.650793075561523
    5. '):
' → logprob: -7.025793075561523
    6. '=None' → logprob: -8.775793075561523
    7. ' ):' → logprob: -10.400793075561523
    8. '   ' → logprob: -10.525793075561523
    9. '):
' → logprob: -10.650793075561523
    10. ')=' → logprob: -10.775793075561523

Token 196: ' "")' (ID: 23805)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2345878630876541
    2. ''' → logprob: -1.8595879077911377
    3. 'None' → logprob: -3.3595879077911377
    4. ' '')' → logprob: -5.109587669372559
    5. ' "")' → logprob: -5.109587669372559
    6. ' None' → logprob: -6.359587669372559
    7. '   ' → logprob: -6.609587669372559
    8. ' "' → logprob: -7.234587669372559
    9. '"No' → logprob: -7.734587669372559
    10. '"",' → logprob: -7.734587669372559

Token 197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024965754710137844
    2. '):' → logprob: -9.250249862670898
    3. '   ' → logprob: -9.500249862670898
    4. ':
' → logprob: -10.500249862670898
    5. ':return' → logprob: -11.125249862670898
    6. ' :' → logprob: -11.500249862670898
    7. ',' → logprob: -11.625249862670898
    8. ':void' → logprob: -12.125249862670898
    9. '->' → logprob: -12.875249862670898
    10. ')' → logprob: -13.250249862670898

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1303708255290985
    2. 'assert' → logprob: -3.130370855331421
    3. ' if' → logprob: -3.380370855331421
    4. ' assert' → logprob: -3.505370855331421
    5. 'if' → logprob: -4.255370616912842
    6. '	assert' → logprob: -8.88037109375
    7. '\t' → logprob: -10.75537109375
    8. '	if' → logprob: -10.75537109375
    9. ' ' → logprob: -11.13037109375
    10. '\' → logprob: -11.50537109375

Token 199: ' assert' (ID: 3696)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5824372172355652
    2. 'assert' (adapté à ' assert') → logprob: -0.8324372172355652
    3. ' assert' → logprob: -5.832437038421631
    4. '   ' → logprob: -5.957437038421631
    5. ' if' → logprob: -6.957437038421631
    6. '	assert' → logprob: -12.207437515258789
    7. '	if' → logprob: -13.707437515258789
    8. ' ' → logprob: -14.332437515258789
    9. 'pass' → logprob: -15.207437515258789
    10. '_assert' → logprob: -15.207437515258789

Token 200: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.10026156902313232
    2. ' exp' → logprob: -2.350261688232422
    3. '(exp' → logprob: -9.850261688232422
    4. 'not' → logprob: -13.975261688232422
    5. ' not' → logprob: -14.100261688232422
    6. ' ' → logprob: -15.475261688232422
    7. '	exp' → logprob: -15.600261688232422
    8. '_exp' → logprob: -16.475261688232422
    9. '.exp' → logprob: -17.350261688232422
    10. 'space' → logprob: -19.600261688232422

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001294030516874045
    2. ' ,' → logprob: -9.375129699707031
    3. ',msg' → logprob: -10.750129699707031
    4. ' or' → logprob: -12.000129699707031
    5. '<|end|>' → logprob: -12.250129699707031
    6. '<|end|>' → logprob: -13.125129699707031
    7. ',"' → logprob: -13.250129699707031
    8. ',message' → logprob: -13.250129699707031
    9. 'or' → logprob: -14.000129699707031
    10. ' ' → logprob: -14.375129699707031

Token 202: ' msg' (ID: 6981)
  Prédit: ' msg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' msg' → logprob: -0.3392658829689026
    2. 'msg' → logprob: -1.7142658233642578
    3. '"' → logprob: -2.464265823364258
    4. ' f' → logprob: -3.964265823364258
    5. ' "' → logprob: -5.964265823364258
    6. 'f' → logprob: -7.339265823364258
    7. ''' → logprob: -8.464265823364258
    8. '(msg' → logprob: -9.589265823364258
    9. ' '' → logprob: -10.964265823364258
    10. '[msg' → logprob: -11.714265823364258

Token 203: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4268819987773895
    2. '<|end|>' → logprob: -1.426882028579712
    3. 'def' → logprob: -2.301882028579712
    4. '

' → logprob: -5.426881790161133
    5. '<|end|>' → logprob: -7.051881790161133
    6. '\n' → logprob: -7.051881790161133
    7. 'newline' → logprob: -7.551881790161133
    8. '#' → logprob: -8.926881790161133
    9. '' → logprob: -9.676881790161133
    10. '    
' → logprob: -9.676881790161133

Token 204: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0631561279296875
    2. 'def' → logprob: -1.0631561279296875
    3. '<|end|>' → logprob: -1.3131561279296875
    4. '#' → logprob: -3.9381561279296875
    5. ')' → logprob: -4.8131561279296875
    6. '<|end|>' → logprob: -5.9381561279296875
    7. ' ' → logprob: -6.0631561279296875
    8. ' 
' → logprob: -6.6881561279296875
    9. '\n' → logprob: -6.9381561279296875
    10. '

' → logprob: -7.0631561279296875

Token 205: ' T' (ID: 353)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.033350810408592224
    2. 'main' → logprob: -4.283350944519043
    3. ' is' → logprob: -4.908350944519043
    4. ' solve' → logprob: -5.783350944519043
    5. ' debug' → logprob: -6.408350944519043
    6. ' input' → logprob: -6.533350944519043
    7. ' max' → logprob: -7.783350944519043
    8. 'is' → logprob: -7.783350944519043
    9. ' print' → logprob: -7.908350944519043
    10. ' l' → logprob: -8.533350944519043

Token 206: 'AST' (ID: 10141)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.720621943473816
    2. 'O' → logprob: -1.970621943473816
    3. 'est' → logprob: -2.0956220626831055
    4. 'ry' → logprob: -2.2206220626831055
    5. 'r' → logprob: -2.3456220626831055
    6. 'RY' → logprob: -2.5956220626831055
    7. 'ype' → logprob: -2.9706220626831055
    8. 'E' → logprob: -2.9706220626831055
    9. 'EST' → logprob: -3.2206220626831055
    10. 'L' → logprob: -3.5956220626831055

Token 207: '(exp' (ID: 51367)
  Prédit: '(exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(exp' → logprob: -0.018452389165759087
    2. '(expr' → logprob: -4.768452167510986
    3. '(condition' → logprob: -6.018452167510986
    4. '(' → logprob: -6.518452167510986
    5. '(expression' → logprob: -6.893452167510986
    6. '(bool' → logprob: -7.143452167510986
    7. '(cond' → logprob: -7.268452167510986
    8. '(assert' → logprob: -7.768452167510986
    9. '(*' → logprob: -8.018452644348145
    10. '()' → logprob: -8.018452644348145

Token 208: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6951438188552856
    2. ':' → logprob: -0.6951438188552856
    3. '):' → logprob: -6.945143699645996
    4. ' :' → logprob: -7.945143699645996
    5. 'exp' → logprob: -8.195143699645996
    6. ' ,' → logprob: -8.570143699645996
    7. '(exp' → logprob: -9.445143699645996
    8. '=' → logprob: -10.820143699645996
    9. ')' → logprob: -10.945143699645996
    10. '):
' → logprob: -11.445143699645996

Token 209: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.07145779579877853
    2. ' bool' → logprob: -2.696457862854004
    3. 'True' → logprob: -7.446457862854004
    4. '(bool' → logprob: -8.321457862854004
    5. 'str' → logprob: -8.696457862854004
    6. 'int' → logprob: -8.821457862854004
    7. ' True' → logprob: -9.571457862854004
    8. 'exp' → logprob: -9.696457862854004
    9. ' str' → logprob: -10.071457862854004
    10. '...' → logprob: -10.821457862854004

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005112084094434977
    2. '):' → logprob: -6.005112171173096
    3. '):
' → logprob: -6.130112171173096
    4. ')' → logprob: -7.880112171173096
    5. ' ,' → logprob: -10.255111694335938
    6. '=' → logprob: -10.380111694335938
    7. ',
' → logprob: -12.880111694335938
    8. ',msg' → logprob: -12.880111694335938
    9. '):
' → logprob: -13.630111694335938
    10. 'def' → logprob: -14.005111694335938

Token 211: ' msg' (ID: 6981)
  Prédit: 'msg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'msg' → logprob: -0.2520890235900879
    2. ' msg' → logprob: -1.502089023590088
    3. 'msgs' → logprob: -10.75208854675293
    4. 'ms' → logprob: -10.87708854675293
    5. ')' → logprob: -11.37708854675293
    6. ' ' → logprob: -11.68958854675293
    7. ' ms' → logprob: -12.06458854675293
    8. '	msg' → logprob: -12.06458854675293
    9. '(msg' → logprob: -12.31458854675293
    10. ' level' → logprob: -12.50208854675293

Token 212: '="' (ID: 580)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.051112622022628784
    2. '="' → logprob: -3.926112651824951
    3. ' =' → logprob: -4.051112651824951
    4. ':' → logprob: -4.426112651824951
    5. '=""' → logprob: -7.926112651824951
    6. '=None' → logprob: -8.426112174987793
    7. ')' → logprob: -9.926112174987793
    8. '"' → logprob: -10.426112174987793
    9. '="",' → logprob: -10.551112174987793
    10. '="""' → logprob: -11.301112174987793

Token 213: '"):
' (ID: 33645)
  Prédit: '"):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"):' → logprob: -0.026234926655888557
    2. '"):
' → logprob: -4.276235103607178
    3. '")' → logprob: -4.526235103607178
    4. '"' → logprob: -8.02623462677002
    5. '""' → logprob: -8.27623462677002
    6. 'assert' → logprob: -8.52623462677002
    7. '"):
' → logprob: -9.27623462677002
    8. 'None' → logprob: -10.02623462677002
    9. '");' → logprob: -10.27623462677002
    10. ' Assertion' → logprob: -10.65123462677002

Token 214: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6301842927932739
    2. '   ' → logprob: -1.130184292793274
    3. ':
' → logprob: -2.0051841735839844
    4. ' assert' → logprob: -5.630184173583984
    5. '):
' → logprob: -6.130184173583984
    6. ' AST' → logprob: -6.630184173583984
    7. 'assert' → logprob: -7.130184173583984
    8. '):' → logprob: -7.255184173583984
    9. '(assert' → logprob: -8.130184173583984
    10. ' :
' → logprob: -8.505184173583984

Token 215: ' if' (ID: 538)
  Prédit: ' assert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' assert' → logprob: -0.9342677593231201
    2. 'try' → logprob: -1.4342677593231201
    3. ' try' → logprob: -2.05926775932312
    4. ' AST' → logprob: -2.18426775932312
    5. 'assert' → logprob: -2.68426775932312
    6. 'AST' → logprob: -3.68426775932312
    7. ' if' → logprob: -3.93426775932312
    8. 'if' (adapté à ' if') → logprob: -4.684267997741699
    9. '   ' → logprob: -5.184267997741699
    10. ' return' → logprob: -7.809267997741699

Token 216: ' exp' (ID: 2794)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.38692009449005127
    2. 'not' → logprob: -1.1369200944900513
    3. 'exp' → logprob: -10.886919975280762
    4. '   ' → logprob: -11.261919975280762
    5. '	not' → logprob: -11.511919975280762
    6. '(not' → logprob: -13.011919975280762
    7. ' ' → logprob: -13.886919975280762
    8. ' exp' → logprob: -13.886919975280762
    9. '__' → logprob: -14.011919975280762
    10. 'type' → logprob: -14.511919975280762

Token 217: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011686278507113457
    2. ':
' → logprob: -4.761686325073242
    3. ' ==' → logprob: -6.636686325073242
    4. ' is' → logprob: -6.886686325073242
    5. '==' → logprob: -7.511686325073242
    6. ' :' → logprob: -9.511686325073242
    7. '   ' → logprob: -9.511686325073242
    8. 'assert' → logprob: -12.011686325073242
    9. '=' → logprob: -12.136686325073242
    10. 'not' → logprob: -12.261686325073242

Token 218: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.32818761467933655
    2. ' not' → logprob: -1.5781875848770142
    3. 'False' → logprob: -2.7031877040863037
    4. 'not' → logprob: -5.953187465667725
    5. ' True' → logprob: -6.203187465667725
    6. ' None' → logprob: -6.453187465667725
    7. 'True' → logprob: -9.203187942504883
    8. 'None' → logprob: -9.328187942504883
    9. '=False' → logprob: -10.828187942504883
    10. '   ' → logprob: -11.328187942504883

Token 219: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08049110323190689
    2. ':
' → logprob: -2.580491065979004
    3. '       ' → logprob: -7.205491065979004
    4. '   ' → logprob: -7.955491065979004
    5. ' :' → logprob: -8.330491065979004
    6. ':return' → logprob: -8.580491065979004
    7. ' :
' → logprob: -10.455491065979004
    8. ',' → logprob: -10.830491065979004
    9. ' or' → logprob: -11.205491065979004
    10. '):' → logprob: -12.330491065979004

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040289413183927536
    2. ' raise' → logprob: -3.5402894020080566
    3. 'raise' → logprob: -4.915289402008057
    4. ' return' → logprob: -6.040289402008057
    5. 'return' → logprob: -8.290289878845215
    6. '   ' → logprob: -8.790289878845215
    7. 'assert' → logprob: -9.040289878845215
    8. '	raise' → logprob: -9.415289878845215
    9. ' assert' → logprob: -9.915289878845215
    10. ',' → logprob: -10.415289878845215

Token 221: ' print' (ID: 2123)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.6746934056282043
    2. 'raise' → logprob: -0.9246934056282043
    3. '       ' → logprob: -2.4246933460235596
    4. '           ' → logprob: -6.674693584442139
    5. ' AST' → logprob: -6.799693584442139
    6. 'print' (adapté à ' print') → logprob: -7.174693584442139
    7. 'assert' → logprob: -7.549693584442139
    8. ' print' → logprob: -7.549693584442139
    9. 'import' → logprob: -8.29969310760498
    10. 'return' → logprob: -8.29969310760498

Token 222: '("' (ID: 568)
  Prédit: '(msg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(msg' → logprob: -0.008893813006579876
    2. '(f' → logprob: -5.508893966674805
    3. '(' → logprob: -5.633893966674805
    4. '("' → logprob: -6.758893966674805
    5. 'msg' → logprob: -10.508893966674805
    6. '("[' → logprob: -10.758893966674805
    7. '('' → logprob: -12.258893966674805
    8. '()' → logprob: -12.883893966674805
    9. '((' → logprob: -13.133893966674805
    10. '("\' → logprob: -13.133893966674805

Token 223: 'T' (ID: 51)
  Prédit: 'msg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'msg' → logprob: -0.74663907289505
    2. 'Assertion' → logprob: -2.1216390132904053
    3. ' msg' → logprob: -2.4966390132904053
    4. '"' → logprob: -2.6216390132904053
    5. '(msg' → logprob: -3.3716390132904053
    6. 'AST' → logprob: -3.4966390132904053
    7. '",' → logprob: -3.4966390132904053
    8. 'Error' → logprob: -4.121639251708984
    9. ' Assertion' → logprob: -4.371639251708984
    10. 'assert' → logprob: -4.496639251708984

Token 224: 'Assertion' (ID: 80434)
  Prédit: 'AST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AST' → logprob: -0.25005224347114563
    2. 'Assertion' → logprob: -2.6250522136688232
    3. 'A' → logprob: -3.1250522136688232
    4. ' Assertion' → logprob: -3.8750522136688232
    5. 'ASTE' → logprob: -4.500052452087402
    6. ' AST' → logprob: -4.500052452087402
    7. 'AS' → logprob: -4.875052452087402
    8. ':' → logprob: -5.125052452087402
    9. '_ASSERT' → logprob: -5.625052452087402
    10. 'EST' → logprob: -5.875052452087402

Token 225: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.738595187664032
    2. ' failed' → logprob: -1.2385952472686768
    3. ' Failed' → logprob: -1.9885952472686768
    4. ' Error' → logprob: -2.7385952472686768
    5. 'Failed' → logprob: -4.238595008850098
    6. ' error' → logprob: -4.613595008850098
    7. ' ' → logprob: -6.613595008850098
    8. 'ion' → logprob: -6.863595008850098
    9. ' Failure' → logprob: -7.238595008850098
    10. ' ",' → logprob: -7.613595008850098

Token 226: ':",' (ID: 25704)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4211898744106293
    2. ':",' → logprob: -1.2961899042129517
    3. '")' → logprob: -3.171189785003662
    4. '",' → logprob: -3.671189785003662
    5. ' :",' → logprob: -6.546189785003662
    6. '(",' → logprob: -7.296189785003662
    7. ' :' → logprob: -8.54619026184082
    8. ',' → logprob: -9.67119026184082
    9. '(msg' → logprob: -9.79619026184082
    10. ' ",' → logprob: -9.92119026184082

Token 227: ' msg' (ID: 6981)
  Prédit: ' msg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' msg' → logprob: -0.47410231828689575
    2. 'msg' → logprob: -0.9741023182868958
    3. ',msg' → logprob: -11.474102020263672
    4. '(msg' → logprob: -11.599102020263672
    5. ' f' → logprob: -13.474102020263672
    6. '"' → logprob: -13.474102020263672
    7. '[msg' → logprob: -13.974102020263672
    8. '	msg' → logprob: -14.224102020263672
    9. '$msg' → logprob: -14.974102020263672
    10. ',' → logprob: -15.099102020263672

Token 228: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4001026749610901
    2. ')' → logprob: -1.1501026153564453
    3. '       ' → logprob: -4.400102615356445
    4. '   ' → logprob: -7.775102615356445
    5. ',' → logprob: -8.400102615356445
    6. ' )
' → logprob: -9.650102615356445
    7. ' )' → logprob: -9.900102615356445
    8. ');' → logprob: -10.525102615356445
    9. ')
' → logprob: -10.775102615356445
    10. 'def' → logprob: -11.900102615356445

Token 229: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02791602537035942
    2. '   ' → logprob: -3.7779159545898438
    3. 'def' → logprob: -5.902915954589844
    4. 'import' → logprob: -7.402915954589844
    5. 'raise' → logprob: -7.527915954589844
    6. ' raise' → logprob: -8.027915954589844
    7. '<|end|>' → logprob: -8.152915954589844
    8. '
' → logprob: -10.152915954589844
    9. ',' → logprob: -10.652915954589844
    10. '	raise' → logprob: -10.777915954589844

Token 230: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04678397253155708
    2. '   ' → logprob: -4.046783924102783
    3. 'def' → logprob: -4.171783924102783
    4. 'import' → logprob: -4.921783924102783
    5. 'return' → logprob: -6.171783924102783
    6. '<|end|>' → logprob: -6.421783924102783
    7. ' return' → logprob: -7.296783924102783
    8. 'exit' → logprob: -8.296784400939941
    9. 'assert' → logprob: -8.546784400939941
    10. 'raise' → logprob: -8.546784400939941

Token 231: ' exp' (ID: 2794)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.553198516368866
    2. ' True' → logprob: -1.4281985759735107
    3. 'False' → logprob: -1.8031985759735107
    4. ' False' → logprob: -3.9281985759735107
    5. '0' → logprob: -8.30319881439209
    6. '1' → logprob: -8.67819881439209
    7. 'exp' → logprob: -9.30319881439209
    8. ' not' → logprob: -9.55319881439209
    9. 'not' → logprob: -9.67819881439209
    10. '(True' → logprob: -10.42819881439209

Token 232: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2011684775352478
    2. '==' → logprob: -2.5761685371398926
    3. ':' → logprob: -2.8261685371398926
    4. 'is' → logprob: -3.9511685371398926
    5. ' False' → logprob: -4.826168537139893
    6. 'False' → logprob: -4.826168537139893
    7. ' ==' → logprob: -5.201168537139893
    8. '   ' → logprob: -6.201168537139893
    9. ' not' → logprob: -7.076168537139893
    10. ' ' → logprob: -7.201168537139893

Token 233: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.226846382021904
    2. ' False' → logprob: -1.6018463373184204
    3. 'True' → logprob: -7.226846218109131
    4. ' not' → logprob: -7.851846218109131
    5. ' True' → logprob: -8.351846694946289
    6. 'not' → logprob: -9.476846694946289
    7. '(False' → logprob: -13.351846694946289
    8. '   ' → logprob: -14.101846694946289
    9. '_false' → logprob: -14.851846694946289
    10. '=False' → logprob: -14.976846694946289

Token 234: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6628122329711914
    2. ':
' → logprob: -1.2878122329711914
    3. '   ' → logprob: -2.0378122329711914
    4. '       ' → logprob: -2.7878122329711914
    5. ' and' → logprob: -5.037812232971191
    6. ' :' → logprob: -5.537812232971191
    7. ',' → logprob: -5.912812232971191
    8. ' :
' → logprob: -6.162812232971191
    9. 'and' → logprob: -7.662812232971191
    10. ' or' → logprob: -8.037812232971191

Token 235: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.537129282951355
    2. '       ' → logprob: -0.912129282951355
    3. ' pass' → logprob: -5.0371294021606445
    4. ' break' → logprob: -5.4121294021606445
    5. 'pass' → logprob: -7.7871294021606445
    6. ' raise' → logprob: -7.9121294021606445
    7. '1' → logprob: -8.162129402160645
    8. '    ' → logprob: -8.412129402160645
    9. ' import' → logprob: -8.537129402160645
    10. 'import' → logprob: -8.787129402160645

Token 236: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.6769460439682007
    2. 'pass' (adapté à ' pass') → logprob: -0.9269460439682007
    3. '   ' → logprob: -2.8019461631774902
    4. 'break' → logprob: -3.8019461631774902
    5. ' break' → logprob: -4.55194616317749
    6. 'import' → logprob: -6.55194616317749
    7. '       ' → logprob: -8.426945686340332
    8. ' import' → logprob: -8.801945686340332
    9. 'continue' → logprob: -9.301945686340332
    10. '	pass' → logprob: -9.301945686340332

Token 237: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19929373264312744
    2. '<|end|>' → logprob: -1.8242937326431274
    3. '
' → logprob: -4.074293613433838
    4. '

' → logprob: -7.199293613433838
    5. '<|end|>' → logprob: -7.324293613433838
    6. '#' → logprob: -8.699294090270996
    7. '    
' → logprob: -8.949294090270996
    8. ')' → logprob: -8.949294090270996
    9. '\n' → logprob: -9.199294090270996
    10. ' def' → logprob: -9.449294090270996

Token 238: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00857994332909584
    2. '<|end|>' → logprob: -5.258579730987549
    3. '
' → logprob: -6.508579730987549
    4. 'class' → logprob: -6.758579730987549
    5. '#' → logprob: -8.508580207824707
    6. 'import' → logprob: -9.258580207824707
    7. '\n' → logprob: -9.383580207824707
    8. '

' → logprob: -9.508580207824707
    9. '<|end|>' → logprob: -9.508580207824707
    10. '```' → logprob: -10.633580207824707

Token 239: ' E' (ID: 457)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.013618950732052326
    2. 'main' → logprob: -4.7636189460754395
    3. ' solve' → logprob: -6.7636189460754395
    4. ' is' → logprob: -6.8886189460754395
    5. ' debug' → logprob: -7.2636189460754395
    6. ' test' → logprob: -8.263619422912598
    7. ' factorial' → logprob: -8.388619422912598
    8. ' binary' → logprob: -8.513619422912598
    9. ' input' → logprob: -9.138619422912598
    10. ' dfs' → logprob: -9.263619422912598

Token 240: 'PR' (ID: 8621)
  Prédit: 'RR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'RR' → logprob: -0.4598665237426758
    2. 'XP' → logprob: -1.9598665237426758
    3. 'R' → logprob: -3.209866523742676
    4. 'X' → logprob: -3.334866523742676
    5. 'x' → logprob: -3.709866523742676
    6. 'rror' → logprob: -3.834866523742676
    7. 'N' → logprob: -3.959866523742676
    8. 'xp' → logprob: -4.209866523742676
    9. 'VAL' → logprob: -4.584866523742676
    10. 'ND' → logprob: -4.959866523742676

Token 241: '(msg' (ID: 15182)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.767613172531128
    2. '(error' → logprob: -1.767613172531128
    3. 'ror' → logprob: -2.267613172531128
    4. 'ROR' → logprob: -2.392613172531128
    5. '(exp' → logprob: -2.517613172531128
    6. 'o' → logprob: -2.517613172531128
    7. '(op' → logprob: -3.392613172531128
    8. 'O' → logprob: -3.767613172531128
    9. 'OR' → logprob: -3.767613172531128
    10. 'ot' → logprob: -3.892613172531128

Token 242: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7669979333877563
    2. '=' → logprob: -1.3919979333877563
    3. '):' → logprob: -1.3919979333877563
    4. '):
' → logprob: -4.266997814178467
    5. '="' → logprob: -4.391997814178467
    6. ' :' → logprob: -5.016997814178467
    7. ' =' → logprob: -6.266997814178467
    8. '=None' → logprob: -7.016997814178467
    9. ')' → logprob: -7.266997814178467
    10. ',' → logprob: -7.641997814178467

Token 243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009425606578588486
    2. ' raise' → logprob: -4.884425640106201
    3. 'raise' → logprob: -6.509425640106201
    4. '	raise' → logprob: -8.259425163269043
    5. '   ' → logprob: -10.634425163269043
    6. ' print' → logprob: -11.509425163269043
    7. ':' → logprob: -11.759425163269043
    8. 'print' → logprob: -12.134425163269043
    9. 'def' → logprob: -12.384425163269043
    10. ',' → logprob: -12.509425163269043

Token 244: ' print' (ID: 2123)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.31836217641830444
    2. 'print' (adapté à ' print') → logprob: -1.3183622360229492
    3. ' raise' → logprob: -6.193362236022949
    4. '   ' → logprob: -6.443362236022949
    5. 'import' → logprob: -6.943362236022949
    6. 'exit' → logprob: -8.56836223602295
    7. 'assert' → logprob: -8.56836223602295
    8. ' print' → logprob: -9.81836223602295
    9. 'sys' → logprob: -11.06836223602295
    10. 'pass' → logprob: -11.31836223602295

Token 245: '(msg' (ID: 15182)
  Prédit: '(msg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(msg' → logprob: -0.07911956310272217
    2. '(' → logprob: -2.5791196823120117
    3. '(f' → logprob: -8.704119682312012
    4. '()' → logprob: -10.579119682312012
    5. '(message' → logprob: -11.454119682312012
    6. '("' → logprob: -12.704119682312012
    7. '((' → logprob: -12.829119682312012
    8. '(stderr' → logprob: -12.829119682312012
    9. '('' → logprob: -12.954119682312012
    10. '(
' → logprob: -13.204119682312012

Token 246: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.845798710244708e-05
    2. ',' → logprob: -10.625038146972656
    3. ' )' → logprob: -12.375038146972656
    4. ')
' → logprob: -12.625038146972656
    5. '())' → logprob: -13.125038146972656
    6. ');' → logprob: -13.500038146972656
    7. '()' → logprob: -13.625038146972656
    8. '))' → logprob: -14.625038146972656
    9. ',)' → logprob: -15.000038146972656
    10. '   ' → logprob: -15.250038146972656

Token 247: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.008420956321060658
    2. ' file' → logprob: -4.883420944213867
    3. 'flush' → logprob: -7.258420944213867
    4. 'end' → logprob: -9.633420944213867
    5. ')' → logprob: -11.258420944213867
    6. ' flush' → logprob: -11.883420944213867
    7. ')
' → logprob: -12.258420944213867
    8. ',file' → logprob: -12.508420944213867
    9. ' ' → logprob: -13.008420944213867
    10. 'fl' → logprob: -13.383420944213867

Token 248: '=sys' (ID: 149200)
  Prédit: '=sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sys' → logprob: -4.584861744660884e-05
    2. '=' → logprob: -10.000045776367188
    3. '=subprocess' → logprob: -15.375045776367188
    4. ' =' → logprob: -16.750045776367188
    5. 'sys' → logprob: -18.500045776367188
    6. '=s' → logprob: -18.750045776367188
    7. '=file' → logprob: -18.875045776367188
    8. '=torch' → logprob: -18.875045776367188
    9. '(sys' → logprob: -19.000045776367188
    10. '=open' → logprob: -19.125045776367188

Token 249: '.stderr' (ID: 87058)
  Prédit: '.stderr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stderr' → logprob: -8.494741632603109e-05
    2. '.stdout' → logprob: -9.50008487701416
    3. '.' → logprob: -12.12508487701416
    4. 'stderr' → logprob: -12.75008487701416
    5. '.stdin' → logprob: -14.25008487701416
    6. '._' → logprob: -15.12508487701416
    7. '.__' → logprob: -15.12508487701416
    8. '.st' → logprob: -15.62508487701416
    9. ' .' → logprob: -16.500085830688477
    10. '(stderr' → logprob: -16.500085830688477

Token 250: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -13.875001907348633
    3. ')
' → logprob: -15.250001907348633
    4. ',' → logprob: -16.625001907348633
    5. '))' → logprob: -17.125001907348633
    6. '),' → logprob: -17.375001907348633
    7. ')`' → logprob: -17.375001907348633
    8. '`)' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.750001907348633
    10. '())' → logprob: -18.875001907348633

Token 251: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013965567573904991
    2. 'class' → logprob: -4.388965606689453
    3. '#' → logprob: -7.513965606689453
    4. 'if' → logprob: -8.388965606689453
    5. '<|end|>' → logprob: -8.513965606689453
    6. 'import' → logprob: -8.888965606689453
    7. '
' → logprob: -9.763965606689453
    8. '@' → logprob: -9.888965606689453
    9. 'from' → logprob: -10.013965606689453
    10. '<|end|>' → logprob: -10.638965606689453

Token 252: ' II' (ID: 9839)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07688784599304199
    2. 'main' → logprob: -2.826887845993042
    3. ' debug' → logprob: -4.451888084411621
    4. 'debug' → logprob: -6.701888084411621
    5. ' solve' → logprob: -7.451888084411621
    6. 'DEBUG' → logprob: -8.451888084411621
    7. ' dbg' → logprob: -8.451888084411621
    8. ' is' → logprob: -9.076888084411621
    9. 'dbg' → logprob: -9.076888084411621
    10. ' DEBUG' → logprob: -9.201888084411621

Token 253: '(input' (ID: 10054)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02650916390120983
    2. '()' → logprob: -3.6515090465545654
    3. '():
' → logprob: -8.776509284973145
    4. ' ()' → logprob: -10.526509284973145
    5. ' ():' → logprob: -11.026509284973145
    6. '(' → logprob: -12.401509284973145
    7. '():

' → logprob: -13.776509284973145
    8. '().' → logprob: -14.026509284973145
    9. '()`' → logprob: -14.026509284973145
    10. '=' → logprob: -14.276509284973145

Token 254: '_func' (ID: 22252)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6763463020324707
    2. ')' → logprob: -0.8013463020324707
    3. '()' → logprob: -3.5513463020324707
    4. '())' → logprob: -5.176346302032471
    5. '=' → logprob: -5.676346302032471
    6. '):
' → logprob: -6.051346302032471
    7. '():' → logprob: -6.676346302032471
    8. '_' → logprob: -8.301345825195312
    9. '().' → logprob: -8.426345825195312
    10. '()):
' → logprob: -8.676345825195312

Token 255: '):
' (ID: 1883)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5076888203620911
    2. '):' → logprob: -1.0076887607574463
    3. '()' → logprob: -3.7576887607574463
    4. ')' → logprob: -5.382688999176025
    5. '():' → logprob: -6.257688999176025
    6. '=None' → logprob: -6.757688999176025
    7. ' =' → logprob: -7.507688999176025
    8. '):
' → logprob: -7.632688999176025
    9. '=input' → logprob: -8.007688522338867
    10. '=get' → logprob: -8.507688522338867

Token 256: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.115224003791809
    2. '   ' → logprob: -1.615224003791809
    3. '=' → logprob: -1.740224003791809
    4. ' =' → logprob: -2.1152238845825195
    5. 'int' → logprob: -2.9902238845825195
    6. ':' → logprob: -3.6152238845825195
    7. '=int' → logprob: -3.7402238845825195
    8. 'return' → logprob: -3.8652238845825195
    9. ':int' → logprob: -4.2402238845825195
    10. ' return' → logprob: -4.7402238845825195

Token 257: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5437426567077637
    2. ' return' → logprob: -1.2937426567077637
    3. 'int' → logprob: -2.1687426567077637
    4. ' int' → logprob: -3.7937426567077637
    5. '   ' → logprob: -4.793742656707764
    6. 'input' → logprob: -10.543743133544922
    7. ' input' → logprob: -11.668743133544922
    8. '(int' → logprob: -11.793743133544922
    9. ' ' → logprob: -12.043743133544922
    10. '	return' → logprob: -12.168743133544922

Token 258: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0010803256882354617
    2. ' int' → logprob: -6.876080513000488
    3. 'input' → logprob: -10.001080513000488
    4. '(int' → logprob: -13.626080513000488
    5. '   ' → logprob: -15.001080513000488
    6. '<int' → logprob: -15.876080513000488
    7. ' input' → logprob: -15.876080513000488
    8. '	int' → logprob: -16.001079559326172
    9. '  ' → logprob: -16.501079559326172
    10. '=int' → logprob: -16.626079559326172

Token 259: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25203943252563477
    2. '(' → logprob: -1.5020394325256348
    3. 'input' → logprob: -9.752038955688477
    4. '(
' → logprob: -10.377038955688477
    5. '(next' → logprob: -11.502038955688477
    6. '((' → logprob: -12.252038955688477
    7. ' (' → logprob: -13.377038955688477
    8. '()' → logprob: -13.752038955688477
    9. ' input' → logprob: -14.377038955688477
    10. '(

' → logprob: -15.002038955688477

Token 260: '_func' (ID: 22252)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7504103779792786
    2. '().' → logprob: -1.5004103183746338
    3. '_func' → logprob: -1.5004103183746338
    4. '())' → logprob: -2.625410318374634
    5. '(' → logprob: -5.250410556793213
    6. 'func' → logprob: -6.125410556793213
    7. '()
' → logprob: -7.125410556793213
    8. '(input' → logprob: -8.000410079956055
    9. '()(' → logprob: -8.625410079956055
    10. ')' → logprob: -9.250410079956055

Token 261: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.20250648260116577
    2. '().' → logprob: -1.7025065422058105
    3. '()' → logprob: -6.8275065422058105
    4. ' ())' → logprob: -12.577506065368652
    5. ')' → logprob: -13.452506065368652
    6. '();)' → logprob: -14.077506065368652
    7. '()))' → logprob: -14.202506065368652
    8. '(),' → logprob: -14.327506065368652
    9. '())
' → logprob: -14.702506065368652
    10. '(' → logprob: -15.077506065368652

Token 262: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0549702644348145
    2. '<|end|>' → logprob: -1.3049702644348145
    3. 'def' → logprob: -2.0549702644348145
    4. ')' → logprob: -2.3049702644348145
    5. '
' → logprob: -2.6799702644348145
    6. '(
' → logprob: -3.5549702644348145
    7. '()' → logprob: -4.0549702644348145
    8. '#' → logprob: -4.8049702644348145
    9. '\n' → logprob: -5.0549702644348145
    10. ' ' → logprob: -5.4299702644348145

Token 263: ' IF' (ID: 20505)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.5568748712539673
    2. 'MI' → logprob: -1.5568748712539673
    3. ' MI' → logprob: -1.8068748712539673
    4. ' LI' → logprob: -3.9318747520446777
    5. 'SI' → logprob: -4.056874752044678
    6. 'I' → logprob: -5.306874752044678
    7. 'LS' → logprob: -5.931874752044678
    8. ' SI' → logprob: -6.306874752044678
    9. 'IS' → logprob: -6.681874752044678
    10. ' LS' → logprob: -6.931874752044678

Token 264: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.5570885807392187e-05
    2. 'loat' → logprob: -11.625015258789062
    3. 'input' → logprob: -13.000015258789062
    4. 'unc' → logprob: -13.625015258789062
    5. '=input' → logprob: -13.625015258789062
    6. 'unction' → logprob: -14.125015258789062
    7. ' (' → logprob: -14.375015258789062
    8. '(' → logprob: -15.375015258789062
    9. ',input' → logprob: -16.375015258789062
    10. '[input' → logprob: -16.500015258789062

Token 265: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00017553119687363505
    2. '_' → logprob: -9.125175476074219
    3. 'func' → logprob: -10.375175476074219
    4. '_FUNC' → logprob: -11.125175476074219
    5. ')' → logprob: -11.625175476074219
    6. ')_' → logprob: -12.125175476074219
    7. '_function' → logprob: -13.375175476074219
    8. 'unction' → logprob: -13.625175476074219
    9. 'unc' → logprob: -14.000175476074219
    10. '_fun' → logprob: -14.250175476074219

Token 266: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6955337524414062
    2. '):' → logprob: -0.6955337524414062
    3. ')' → logprob: -6.195533752441406
    4. '()' → logprob: -8.820533752441406
    5. '()):
' → logprob: -9.695533752441406
    6. '():
' → logprob: -10.070533752441406
    7. '):
' → logprob: -10.195533752441406
    8. '):

' → logprob: -10.195533752441406
    9. '():' → logprob: -11.070533752441406
    10. ' ):' → logprob: -13.570533752441406

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.706009030342102
    2. 'return' → logprob: -0.706009030342102
    3. ' return' → logprob: -4.4560089111328125
    4. 'def' → logprob: -6.9560089111328125
    5. 'float' → logprob: -9.581008911132812
    6. '	return' → logprob: -10.081008911132812
    7. ' ' → logprob: -10.206008911132812
    8. ')' → logprob: -10.456008911132812
    9. '()' → logprob: -11.831008911132812
    10. ':return' → logprob: -11.956008911132812

Token 268: ' return' (ID: 622)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.4843958914279938
    2. 'return' (adapté à ' return') → logprob: -0.9843958616256714
    3. '   ' → logprob: -4.609395980834961
    4. 'int' → logprob: -9.234395980834961
    5. ' return' → logprob: -9.359395980834961
    6. 'def' → logprob: -10.234395980834961
    7. ' float' → logprob: -10.359395980834961
    8. 'flo' → logprob: -11.234395980834961
    9. 'input' → logprob: -11.359395980834961
    10. '    ' → logprob: -11.734395980834961

Token 269: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0002441741817165166
    2. 'list' → logprob: -9.250244140625
    3. ' float' → logprob: -9.250244140625
    4. 'input' → logprob: -10.000244140625
    5. 'int' → logprob: -12.000244140625
    6. 'flo' → logprob: -16.125244140625
    7. ' list' → logprob: -16.500244140625
    8. '(float' → logprob: -16.625244140625
    9. ' input' → logprob: -17.250244140625
    10. '	float' → logprob: -17.375244140625

Token 270: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00020449401927180588
    2. '(' → logprob: -8.500204086303711
    3. ' (' → logprob: -14.625204086303711
    4. 'input' → logprob: -16.00020408630371
    5. ',input' → logprob: -16.00020408630371
    6. '=input' → logprob: -16.00020408630371
    7. '(
' → logprob: -16.75020408630371
    8. '<input' → logprob: -17.25020408630371
    9. '[input' → logprob: -17.25020408630371
    10. '(import' → logprob: -18.12520408630371

Token 271: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.25349560379981995
    2. '(input' → logprob: -1.5034955739974976
    3. 'func' → logprob: -6.503495693206787
    4. '(' → logprob: -10.128495216369629
    5. ')' → logprob: -11.628495216369629
    6. 'input' → logprob: -12.378495216369629
    7. '=input' → logprob: -12.378495216369629
    8. '()' → logprob: -13.128495216369629
    9. '[input' → logprob: -13.128495216369629
    10. 'Func' → logprob: -13.753495216369629

Token 272: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003348224563524127
    2. ')' → logprob: -5.753348350524902
    3. '()' → logprob: -9.378348350524902
    4. ' ())' → logprob: -9.378348350524902
    5. '())
' → logprob: -14.128348350524902
    6. '(' → logprob: -15.378348350524902
    7. '())

' → logprob: -15.503348350524902
    8. '();)' → logprob: -16.128347396850586
    9. ' )' → logprob: -16.253347396850586
    10. ' ()' → logprob: -16.878347396850586

Token 273: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.598092684522271e-05
    2. 'D' → logprob: -10.750056266784668
    3. ' def' → logprob: -10.750056266784668
    4. '	def' → logprob: -12.250056266784668
    5. 'DI' → logprob: -13.875056266784668
    6. 'DF' → logprob: -14.000056266784668
    7. '#' → logprob: -14.375056266784668
    8. 'I' → logprob: -14.750056266784668
    9. '_def' → logprob: -14.750056266784668
    10. 'DL' → logprob: -14.875056266784668

Token 274: ' IS' (ID: 5436)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -1.0893782377243042
    2. 'IS' → logprob: -1.2143782377243042
    3. 'LS' → logprob: -1.7143782377243042
    4. 'SI' → logprob: -1.8393782377243042
    5. 'S' → logprob: -4.339378356933594
    6. 'SS' → logprob: -5.464378356933594
    7. 'I' → logprob: -5.964378356933594
    8. 'L' → logprob: -6.714378356933594
    9. 'MI' → logprob: -6.714378356933594
    10. 'SSI' → logprob: -6.839378356933594

Token 275: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.31507712602615356
    2. 'tr' → logprob: -1.3150770664215088
    3. 'tring' → logprob: -6.440077304840088
    4. 'TR' → logprob: -8.69007682800293
    5. '(str' → logprob: -11.69007682800293
    6. '(tr' → logprob: -11.81507682800293
    7. ' (' → logprob: -12.19007682800293
    8. 'input' → logprob: -12.31507682800293
    9. 'tri' → logprob: -12.31507682800293
    10. '=input' → logprob: -12.44007682800293

Token 276: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -3.292907877039397e-06
    2. 'func' → logprob: -12.75000286102295
    3. '_FUNC' → logprob: -16.250003814697266
    4. '_str' → logprob: -17.625003814697266
    5. '(func' → logprob: -17.625003814697266
    6. ')' → logprob: -17.875003814697266
    7. '):' → logprob: -17.875003814697266
    8. 'Func' → logprob: -18.000003814697266
    9. '_function' → logprob: -18.375003814697266
    10. '_f' → logprob: -18.375003814697266

Token 277: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.024698466062545776
    2. '):' → logprob: -3.774698495864868
    3. ')' → logprob: -6.774698257446289
    4. '():
' → logprob: -9.149698257446289
    5. '()):
' → logprob: -9.399698257446289
    6. '):

' → logprob: -10.024698257446289
    7. '):
' → logprob: -10.649698257446289
    8. '()' → logprob: -10.774698257446289
    9. ' ):
' → logprob: -10.774698257446289
    10. ' ):' → logprob: -13.149698257446289

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7662644386291504
    2. 'return' → logprob: -1.0162644386291504
    3. 'input' → logprob: -1.7662644386291504
    4. ' return' → logprob: -6.64126443862915
    5. ' input' → logprob: -7.39126443862915
    6. '(input' → logprob: -8.266263961791992
    7. 'def' → logprob: -9.016263961791992
    8. 'str' → logprob: -10.766263961791992
    9. '  ' → logprob: -12.516263961791992
    10. '=input' → logprob: -12.766263961791992

Token 279: ' return' (ID: 622)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.054776210337877274
    2. 'return' (adapté à ' return') → logprob: -3.054776191711426
    3. ' input' → logprob: -5.304776191711426
    4. '   ' → logprob: -7.554776191711426
    5. 'str' → logprob: -7.804776191711426
    6. 'lambda' → logprob: -9.054776191711426
    7. ' return' → logprob: -9.179776191711426
    8. '(input' → logprob: -10.554776191711426
    9. 'strip' → logprob: -11.179776191711426
    10. '=input' → logprob: -13.179776191711426

Token 280: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020735491125378758
    2. ' input' → logprob: -8.50020694732666
    3. 'str' → logprob: -12.62520694732666
    4. '(input' → logprob: -14.62520694732666
    5. 'strip' → logprob: -16.625207901000977
    6. '=input' → logprob: -17.375207901000977
    7. 'string' → logprob: -17.500207901000977
    8. '	input' → logprob: -18.500207901000977
    9. '[input' → logprob: -18.875207901000977
    10. 's' → logprob: -19.000207901000977

Token 281: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -1.4021237802808173e-05
    2. '_function' → logprob: -12.250014305114746
    3. 'func' → logprob: -12.375014305114746
    4. '(' → logprob: -13.250014305114746
    5. '_str' → logprob: -13.500014305114746
    6. '()' → logprob: -14.250014305114746
    7. '_string' → logprob: -15.250014305114746
    8. '_fun' → logprob: -15.250014305114746
    9. '_line' → logprob: -15.375014305114746
    10. '(_' → logprob: -15.750014305114746

Token 282: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0013267839094623923
    2. '()' → logprob: -6.626326560974121
    3. '(' → logprob: -14.626326560974121
    4. ' ().' → logprob: -15.876326560974121
    5. '()).' → logprob: -16.876327514648438
    6. '("").' → logprob: -17.001327514648438
    7. '()
' → logprob: -17.126327514648438
    8. '()

' → logprob: -17.376327514648438
    9. '>().' → logprob: -17.751327514648438
    10. '('').' → logprob: -18.126327514648438

Token 283: 'replace' (ID: 15208)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.029750484973192215
    2. 'rstrip' → logprob: -3.5297505855560303
    3. ' strip' → logprob: -16.77975082397461
    4. 'split' → logprob: -17.27975082397461
    5. '.rstrip' → logprob: -20.02975082397461
    6. '_strip' → logprob: -20.15475082397461
    7. 'str' → logprob: -20.65475082397461
    8. '-strip' → logprob: -21.02975082397461
    9. '.strip' → logprob: -21.15475082397461
    10. '(strip' → logprob: -21.27975082397461

Token 284: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.012623244896531105
    2. '("\' → logprob: -4.512623310089111
    3. '(' → logprob: -6.512623310089111
    4. '(
' → logprob: -9.387622833251953
    5. '('' → logprob: -12.387622833251953
    6. '('\\' → logprob: -14.137622833251953
    7. '(\' → logprob: -15.262622833251953
    8. '(/\' → logprob: -15.387622833251953
    9. '("' → logprob: -15.887622833251953
    10. ''\' → logprob: -16.137622833251953

Token 285: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006371436640620232
    2. '\n' → logprob: -5.13137149810791
    3. 'r' → logprob: -8.25637149810791
    4. ' n' → logprob: -9.63137149810791
    5. ''\' → logprob: -10.13137149810791
    6. '('\' → logprob: -10.75637149810791
    7. '
' → logprob: -11.00637149810791
    8. '\r' → logprob: -11.63137149810791
    9. ' \' → logprob: -11.75637149810791
    10. 'newline' → logprob: -12.00637149810791

Token 286: '',' (ID: 787)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.31459471583366394
    2. '',' → logprob: -1.3145947456359863
    3. '',"' → logprob: -7.189594745635986
    4. ''',' → logprob: -8.064594268798828
    5. ''' → logprob: -8.814594268798828
    6. ',' → logprob: -10.189594268798828
    7. '","' → logprob: -10.564594268798828
    8. '''' → logprob: -10.939594268798828
    9. '",' → logprob: -11.689594268798828
    10. '')' → logprob: -11.689594268798828

Token 287: ' ''' (ID: 8686)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0012910704826936126
    2. '"' → logprob: -7.376291275024414
    3. '''' → logprob: -7.501291275024414
    4. ' '')' → logprob: -9.626291275024414
    5. ''',' → logprob: -10.126291275024414
    6. ')' → logprob: -12.751291275024414
    7. ' '').' → logprob: -13.876291275024414
    8. ''''' → logprob: -13.876291275024414
    9. '''.' → logprob: -14.876291275024414
    10. '""' → logprob: -15.376291275024414

Token 288: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012631602585315704
    2. '())' → logprob: -4.387631416320801
    3. '()' → logprob: -9.1376314163208
    4. '')' → logprob: -12.3876314163208
    5. ').' → logprob: -12.6376314163208
    6. '<|end|>' → logprob: -12.6376314163208
    7. ' )' → logprob: -13.6376314163208
    8. ')
' → logprob: -13.7626314163208
    9. '().' → logprob: -15.5126314163208
    10. ')#' → logprob: -15.5126314163208

Token 289: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00034392563975416124
    2. '
' → logprob: -8.500344276428223
    3. '<|end|>' → logprob: -10.250344276428223
    4. '\' → logprob: -10.375344276428223
    5. '#' → logprob: -10.625344276428223
    6. '\n' → logprob: -11.500344276428223
    7. ' def' → logprob: -11.875344276428223
    8. 'd' → logprob: -12.000344276428223
    9. '

' → logprob: -12.000344276428223
    10. '```' → logprob: -12.500344276428223

Token 290: ' I' (ID: 357)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.7861655950546265
    2. 'MI' → logprob: -1.5361655950546265
    3. 'main' → logprob: -2.911165714263916
    4. 'MS' → logprob: -3.286165714263916
    5. 'LS' → logprob: -3.411165714263916
    6. 'I' → logprob: -3.536165714263916
    7. 'SS' → logprob: -4.161165714263916
    8. ' main' → logprob: -4.161165714263916
    9. 'ID' → logprob: -4.286165714263916
    10. 'S' → logprob: -4.286165714263916

Token 291: 'LC' (ID: 10566)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.46535447239875793
    2. 'V' → logprob: -1.9653544425964355
    3. 'S' → logprob: -2.2153544425964355
    4. 'A' → logprob: -3.2153544425964355
    5. 'LS' → logprob: -3.2153544425964355
    6. 'LI' → logprob: -4.8403544425964355
    7. 'I' → logprob: -5.3403544425964355
    8. 'N' → logprob: -5.5903544425964355
    9. 'M' → logprob: -5.9653544425964355
    10. 'AL' → logprob: -6.0903544425964355

Token 292: 'I' (ID: 40)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -7.374227425316349e-05
    2. 'input' → logprob: -9.750073432922363
    3. '(' → logprob: -12.375073432922363
    4. '(in' → logprob: -12.500073432922363
    5. ' (' → logprob: -13.125073432922363
    6. '(list' → logprob: -13.875073432922363
    7. ' input' → logprob: -14.125073432922363
    8. 'ut' → logprob: -14.125073432922363
    9. '=input' → logprob: -14.250073432922363
    10. '(line' → logprob: -14.625073432922363

Token 293: '(n' (ID: 2406)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0010834212880581617
    2. 'n' → logprob: -7.2510833740234375
    3. '(n' → logprob: -8.251083374023438
    4. 'input' → logprob: -9.501083374023438
    5. '(in' → logprob: -11.626083374023438
    6. 'N' → logprob: -11.876083374023438
    7. '(' → logprob: -12.126083374023438
    8. 'put' → logprob: -12.751083374023438
    9. ' (' → logprob: -12.876083374023438
    10. '(line' → logprob: -13.751083374023438

Token 294: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06044352054595947
    2. '):' → logprob: -3.06044340133667
    3. '):
' → logprob: -5.31044340133667
    4. ',input' → logprob: -5.31044340133667
    5. ' ,' → logprob: -7.31044340133667
    6. 'n' → logprob: -7.93544340133667
    7. ')' → logprob: -8.060443878173828
    8. 'nt' → logprob: -8.810443878173828
    9. 'input' → logprob: -9.435443878173828
    10. ':' → logprob: -9.560443878173828

Token 295: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0032648153137415648
    2. ' int' → logprob: -5.753264904022217
    3. ')' → logprob: -10.878264427185059
    4. '[int' → logprob: -10.878264427185059
    5. '=int' → logprob: -11.253264427185059
    6. '(int' → logprob: -11.878264427185059
    7. 'list' → logprob: -11.878264427185059
    8. 'List' → logprob: -12.128264427185059
    9. ':int' → logprob: -13.128264427185059
    10. ' ' → logprob: -13.253264427185059

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.082424096763134
    2. '):' → logprob: -2.7074241638183594
    3. '):
' → logprob: -4.707424163818359
    4. ',input' → logprob: -6.207424163818359
    5. ')' → logprob: -7.207424163818359
    6. ' ,' → logprob: -7.582424163818359
    7. ' ):' → logprob: -9.95742416381836
    8. '=input' → logprob: -11.20742416381836
    9. 'input' → logprob: -11.58242416381836
    10. '   ' → logprob: -11.58242416381836

Token 297: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3488599956035614
    2. ' input' → logprob: -1.2238600254058838
    3. ' ' → logprob: -9.598859786987305
    4. 'delimiter' → logprob: -9.598859786987305
    5. ')' → logprob: -9.973859786987305
    6. 'func' → logprob: -10.473859786987305
    7. ' delimiter' → logprob: -11.098859786987305
    8. '	input' → logprob: -11.098859786987305
    9. 'int' → logprob: -11.161359786987305
    10. 'sep' → logprob: -11.411359786987305

Token 298: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -6.2729995988775045e-06
    2. 'func' → logprob: -12.750006675720215
    3. '_' → logprob: -13.875006675720215
    4. '_f' → logprob: -14.125006675720215
    5. ')' → logprob: -15.375006675720215
    6. '):' → logprob: -15.625006675720215
    7. '_function' → logprob: -15.625006675720215
    8. '_fun' → logprob: -15.625006675720215
    9. '_FUNC' → logprob: -15.750006675720215
    10. '):
' → logprob: -15.750006675720215

Token 299: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014987638220191002
    2. '):
' → logprob: -4.639987468719482
    3. ')' → logprob: -5.264987468719482
    4. '):
' → logprob: -10.88998794555664
    5. ' ):' → logprob: -11.13998794555664
    6. ':' → logprob: -12.26498794555664
    7. '=' → logprob: -12.63998794555664
    8. '):

' → logprob: -12.88998794555664
    9. ',' → logprob: -13.88998794555664
    10. '=None' → logprob: -14.26498794555664

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05218766629695892
    2. 'return' → logprob: -3.92718768119812
    3. ' return' → logprob: -4.427187442779541
    4. 'lst' → logprob: -5.302187442779541
    5. ')' → logprob: -5.427187442779541
    6. ' lst' → logprob: -6.052187442779541
    7. ' =' → logprob: -6.927187442779541
    8. '[]' → logprob: -7.302187442779541
    9. ':
' → logprob: -7.302187442779541
    10. '):
' → logprob: -7.427187442779541

Token 301: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0880657210946083
    2. '[' → logprob: -3.4630656242370605
    3. '[int' → logprob: -4.2130656242370605
    4. ' return' → logprob: -4.3380656242370605
    5. '[str' → logprob: -5.8380656242370605
    6. '[l' → logprob: -5.8380656242370605
    7. '[i' → logprob: -5.8380656242370605
    8. '   ' → logprob: -6.0880656242370605
    9. '[line' → logprob: -6.0880656242370605
    10. '[input' → logprob: -6.0880656242370605

Token 302: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.19576935470104218
    2. '[int' → logprob: -1.9457693099975586
    3. '[input' → logprob: -3.4457693099975586
    4. 'list' → logprob: -6.445769309997559
    5. '[' → logprob: -6.695769309997559
    6. '[List' → logprob: -9.570769309997559
    7. '[i' → logprob: -10.445769309997559
    8. '[line' → logprob: -10.820769309997559
    9. '[str' → logprob: -10.820769309997559
    10. '[index' → logprob: -11.070769309997559

Token 303: 'II' (ID: 6013)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1047208309173584
    2. 'list' → logprob: -2.3547208309173584
    3. 'input' → logprob: -5.7297210693359375
    4. 'IS' → logprob: -6.9797210693359375
    5. '[int' → logprob: -9.354721069335938
    6. ' int' → logprob: -9.604721069335938
    7. 'IL' → logprob: -9.979721069335938
    8. 'tuple' → logprob: -10.229721069335938
    9. 'II' → logprob: -10.854721069335938
    10. ' list' → logprob: -10.854721069335938

Token 304: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0001347672223346308
    2. ' (' → logprob: -9.250134468078613
    3. 'input' → logprob: -10.250134468078613
    4. ',input' → logprob: -13.625134468078613
    5. ' input' → logprob: -14.250134468078613
    6. '[input' → logprob: -14.500134468078613
    7. '=input' → logprob: -15.000134468078613
    8. '(
' → logprob: -15.500134468078613
    9. '(' → logprob: -15.875134468078613
    10. '<input' → logprob: -16.37513542175293

Token 305: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.0008066523587331176
    2. 'func' → logprob: -7.12580680847168
    3. '_function' → logprob: -14.37580680847168
    4. '(func' → logprob: -14.62580680847168
    5. '(input' → logprob: -15.00080680847168
    6. ')' → logprob: -15.37580680847168
    7. 'Func' → logprob: -15.37580680847168
    8. '_FUNC' → logprob: -16.12580680847168
    9. '_' → logprob: -16.50080680847168
    10. 'f' → logprob: -16.75080680847168

Token 306: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.455048449221067e-05
    2. ' )' → logprob: -10.000054359436035
    3. ')]' → logprob: -12.250054359436035
    4. ')
' → logprob: -13.375054359436035
    5. ' ' → logprob: -13.750054359436035
    6. '())' → logprob: -14.375054359436035
    7. '()' → logprob: -15.625054359436035
    8. '),' → logprob: -15.875054359436035
    9. '))' → logprob: -16.00005531311035
    10. '  ' → logprob: -16.00005531311035

Token 307: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005104611162096262
    2. 'for' → logprob: -5.6301045417785645
    3. ' for' → logprob: -6.5051045417785645
    4. ' ()' → logprob: -12.505105018615723
    5. '	for' → logprob: -13.505105018615723
    6. '(' → logprob: -14.005105018615723
    7. '   ' → logprob: -14.130105018615723
    8. ')' → logprob: -14.755105018615723
    9. ' ' → logprob: -15.505105018615723
    10. '()]' → logprob: -15.880105018615723

Token 308: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00013393278641160578
    2. '_range' → logprob: -9.250133514404297
    3. ' _' → logprob: -11.000133514404297
    4. ' range' → logprob: -11.125133514404297
    5. '_in' → logprob: -13.125133514404297
    6. '_i' → logprob: -13.250133514404297
    7. 'range' → logprob: -13.500133514404297
    8. ' in' → logprob: -14.375133514404297
    9. '_
' → logprob: -16.000133514404297
    10. '_iter' → logprob: -16.000133514404297

Token 309: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03953581675887108
    2. ' range' → logprob: -3.9145357608795166
    3. ' in' → logprob: -4.414535999298096
    4. 'in' → logprob: -5.414535999298096
    5. '_' → logprob: -6.164535999298096
    6. '_range' → logprob: -9.289535522460938
    7. '	range' → logprob: -10.539535522460938
    8. ' ' → logprob: -11.414535522460938
    9. 'i' → logprob: -11.539535522460938
    10. '(range' → logprob: -11.914535522460938

Token 310: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.505351095460355e-05
    2. ' range' → logprob: -9.500075340270996
    3. '	range' → logprob: -16.87507438659668
    4. '_range' → logprob: -17.25007438659668
    5. '(range' → logprob: -17.87507438659668
    6. '_' → logprob: -18.62507438659668
    7. ' ' → logprob: -20.00007438659668
    8. '   ' → logprob: -20.25007438659668
    9. '  ' → logprob: -21.00007438659668
    10. '[' → logprob: -21.12507438659668

Token 311: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.388769103679806e-05
    2. '(' → logprob: -9.500093460083008
    3. ' n' → logprob: -11.250093460083008
    4. 'n' → logprob: -12.125093460083008
    5. ' (' → logprob: -15.000093460083008
    6. '	n' → logprob: -15.750093460083008
    7. '(
' → logprob: -16.875093460083008
    8. ')n' → logprob: -18.875093460083008
    9. ',n' → logprob: -20.500093460083008
    10. '_n' → logprob: -20.750093460083008

Token 312: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.3451433409936726e-05
    2. ')' → logprob: -11.125033378601074
    3. ']' → logprob: -11.375033378601074
    4. ')]
' → logprob: -12.750033378601074
    5. ' )' → logprob: -12.875033378601074
    6. ')
' → logprob: -14.750033378601074
    7. ' ]' → logprob: -15.000033378601074
    8. '   ' → logprob: -15.000033378601074
    9. ' ' → logprob: -15.375033378601074
    10. '
' → logprob: -15.625033378601074

Token 313: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023592274636030197
    2. '<|end|>' → logprob: -3.773592233657837
    3. '
' → logprob: -8.523591995239258
    4. '<|end|>' → logprob: -9.398591995239258
    5. '```' → logprob: -11.023591995239258
    6. '[' → logprob: -11.398591995239258
    7. '#' → logprob: -11.523591995239258
    8. ')' → logprob: -11.523591995239258
    9. ' def' → logprob: -12.148591995239258
    10. '

' → logprob: -12.773591995239258

Token 314: ' I' (ID: 357)
  Prédit: 'IL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.396865576505661
    2. 'IS' → logprob: -1.7718656063079834
    3. 'IF' → logprob: -2.7718656063079834
    4. 'ILS' → logprob: -3.6468656063079834
    5. 'IM' → logprob: -3.7718656063079834
    6. 'S' → logprob: -4.521865367889404
    7. 'I' → logprob: -4.646865367889404
    8. 'LS' → logprob: -5.521865367889404
    9. 'ISC' → logprob: -6.146865367889404
    10. 'IFS' → logprob: -6.146865367889404

Token 315: 'LC' (ID: 10566)
  Prédit: 'LC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LC' → logprob: -0.03382043167948723
    2. 'L' → logprob: -4.158820629119873
    3. 'LS' → logprob: -5.033820629119873
    4. 'C' → logprob: -5.658820629119873
    5. 'SC' → logprob: -6.283820629119873
    6. 'LI' → logprob: -7.158820629119873
    7. 'S' → logprob: -7.158820629119873
    8. 'MC' → logprob: -7.283820629119873
    9. 'IC' → logprob: -7.658820629119873
    10. 'LM' → logprob: -8.283820152282715

Token 316: 'F' (ID: 37)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0033721078652888536
    2. 'S' → logprob: -6.5033721923828125
    3. 'F' → logprob: -7.2533721923828125
    4. 'IS' → logprob: -8.378372192382812
    5. '(input' → logprob: -8.503372192382812
    6. '(n' → logprob: -8.753372192382812
    7. 'II' → logprob: -9.003372192382812
    8. 'R' → logprob: -9.128372192382812
    9. 'CI' → logprob: -9.378372192382812
    10. 'SI' → logprob: -10.003372192382812

Token 317: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.250004768371582
    3. ' (' → logprob: -15.875004768371582
    4. 'I' → logprob: -16.1250057220459
    5. '(int' → logprob: -17.6250057220459
    6. 'n' → logprob: -18.5000057220459
    7. '(N' → logprob: -18.7500057220459
    8. 'def' → logprob: -18.8750057220459
    9. '(i' → logprob: -19.1250057220459
    10. '((' → logprob: -19.3750057220459

Token 318: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6614350080490112
    2. ',' → logprob: -1.1614350080490112
    3. ':int' → logprob: -2.411435127258301
    4. '(int' → logprob: -3.036435127258301
    5. '(n' → logprob: -4.161435127258301
    6. 'int' → logprob: -4.286435127258301
    7. '=int' → logprob: -6.661435127258301
    8. '<int' → logprob: -6.661435127258301
    9. ',int' → logprob: -7.911435127258301
    10. '):' → logprob: -8.0364351272583

Token 319: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0018007232574746013
    2. ' int' → logprob: -6.751800537109375
    3. '(int' → logprob: -7.376800537109375
    4. 'n' → logprob: -13.001800537109375
    5. '=int' → logprob: -13.876800537109375
    6. '<int' → logprob: -14.251800537109375
    7. '[int' → logprob: -14.751800537109375
    8. ':int' → logprob: -14.751800537109375
    9. '	int' → logprob: -16.501800537109375
    10. ',int' → logprob: -17.001800537109375

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ' ,' → logprob: -10.875019073486328
    3. ',input' → logprob: -16.125019073486328
    4. ',int' → logprob: -16.500019073486328
    5. ',
' → logprob: -18.125019073486328
    6. ',n' → logprob: -18.750019073486328
    7. ')' → logprob: -18.875019073486328
    8. ' ' → logprob: -19.125019073486328
    9. '‌,' → logprob: -19.250019073486328
    10. '):' → logprob: -19.250019073486328

Token 321: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0788951888680458
    2. ' input' → logprob: -2.578895092010498
    3. '(input' → logprob: -12.453895568847656
    4. 'int' → logprob: -14.203895568847656
    5. '[input' → logprob: -15.203895568847656
    6. 'float' → logprob: -15.453895568847656
    7. ' ' → logprob: -16.078895568847656
    8. '=input' → logprob: -16.203895568847656
    9. ',input' → logprob: -16.453895568847656
    10. '<input' → logprob: -16.703895568847656

Token 322: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.004081959370523691
    2. 'func' → logprob: -5.504081726074219
    3. '(func' → logprob: -13.254081726074219
    4. ')' → logprob: -14.504081726074219
    5. 'def' → logprob: -14.879081726074219
    6. '_FUNC' → logprob: -14.879081726074219
    7. 'Func' → logprob: -16.50408172607422
    8. '):' → logprob: -16.50408172607422
    9. 'f' → logprob: -16.75408172607422
    10. ' func' → logprob: -16.75408172607422

Token 323: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05060039460659027
    2. '):' → logprob: -3.300600290298462
    3. '):
' → logprob: -4.425600528717041
    4. ')' → logprob: -8.675600051879883
    5. '(n' → logprob: -9.175600051879883
    6. ',input' → logprob: -9.300600051879883
    7. ':' → logprob: -9.925600051879883
    8. ',n' → logprob: -10.050600051879883
    9. ' ,' → logprob: -10.800600051879883
    10. ',
' → logprob: -11.550600051879883

Token 324: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001765382126905024
    2. 'return' → logprob: -6.501765251159668
    3. ' return' → logprob: -8.251765251159668
    4. '	return' → logprob: -14.001765251159668
    5. '
' → logprob: -15.001765251159668
    6. ' ' → logprob: -15.376765251159668
    7. ')' → logprob: -15.376765251159668
    8. '  ' → logprob: -15.626765251159668
    9. '       ' → logprob: -16.251766204833984
    10. ':return' → logprob: -16.251766204833984

Token 325: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3158213794231415
    2. 'return' (adapté à ' return') → logprob: -1.3158214092254639
    3. '   ' → logprob: -6.065821170806885
    4. ' return' → logprob: -8.565821647644043
    5. '[f' → logprob: -10.565821647644043
    6. 'def' → logprob: -12.315821647644043
    7. ' [' → logprob: -12.565821647644043
    8. '[int' → logprob: -12.940821647644043
    9. '	return' → logprob: -13.190821647644043
    10. '{return' → logprob: -13.565821647644043

Token 326: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00026753442944027483
    2. ' [' → logprob: -8.25026798248291
    3. '[f' → logprob: -13.00026798248291
    4. '   ' → logprob: -13.37526798248291
    5. '[df' → logprob: -13.75026798248291
    6. '[input' → logprob: -14.12526798248291
    7. '[int' → logprob: -15.50026798248291
    8. ' ' → logprob: -15.62526798248291
    9. '[list' → logprob: -16.750267028808594
    10. '[get' → logprob: -17.500267028808594

Token 327: 'IF' (ID: 4648)
  Prédit: 'IF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IF' → logprob: -0.009301366284489632
    2. 'FF' → logprob: -5.25930118560791
    3. 'float' → logprob: -5.50930118560791
    4. ' IF' → logprob: -12.13430118560791
    5. 'F' → logprob: -12.88430118560791
    6. 'int' → logprob: -14.25930118560791
    7. 'FL' → logprob: -14.38430118560791
    8. '
' → logprob: -15.00930118560791
    9. '(IF' → logprob: -15.63430118560791
    10. ' float' → logprob: -16.009302139282227

Token 328: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -5.438573680294212e-06
    2. 'input' → logprob: -12.250005722045898
    3. '[input' → logprob: -15.250005722045898
    4. ',input' → logprob: -16.1250057220459
    5. '(' → logprob: -16.1250057220459
    6. ' (' → logprob: -16.3750057220459
    7. '=input' → logprob: -17.0000057220459
    8. ' input' → logprob: -17.0000057220459
    9. '(
' → logprob: -18.0000057220459
    10. '<input' → logprob: -18.1250057220459

Token 329: '_func' (ID: 22252)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.25429248809814453
    2. '_func' → logprob: -1.5042924880981445
    3. '(input' → logprob: -6.2542924880981445
    4. ')' → logprob: -8.629292488098145
    5. '(func' → logprob: -9.004292488098145
    6. 'input' → logprob: -9.129292488098145
    7. 'f' → logprob: -11.754292488098145
    8. '```' → logprob: -12.504292488098145
    9. 'Func' → logprob: -12.754292488098145
    10. '=input' → logprob: -13.129292488098145

Token 330: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7610454708337784e-05
    2. 'for' → logprob: -11.000027656555176
    3. ' )' → logprob: -12.125027656555176
    4. '()' → logprob: -12.875027656555176
    5. ' for' → logprob: -13.125027656555176
    6. ')
' → logprob: -15.250027656555176
    7. ' ' → logprob: -15.250027656555176
    8. '())' → logprob: -16.00002670288086
    9. '   ' → logprob: -16.50002670288086
    10. '(n' → logprob: -16.62502670288086

Token 331: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3134966194629669
    2. ' for' → logprob: -1.3134965896606445
    3. '()' → logprob: -8.563496589660645
    4. '(' → logprob: -10.438496589660645
    5. '(input' → logprob: -12.063496589660645
    6. ')' → logprob: -12.563496589660645
    7. '	for' → logprob: -12.563496589660645
    8. '(for' → logprob: -14.063496589660645
    9. '   ' → logprob: -14.688496589660645
    10. ']' → logprob: -15.688496589660645

Token 332: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0015502138994634151
    2. ' range' → logprob: -6.751550197601318
    3. ' _' → logprob: -8.001550674438477
    4. 'range' → logprob: -10.501550674438477
    5. '_range' → logprob: -11.001550674438477
    6. ' in' → logprob: -14.001550674438477
    7. '(range' → logprob: -17.626550674438477
    8. '_
' → logprob: -17.751550674438477
    9. ' ' → logprob: -18.126550674438477
    10. '
' → logprob: -18.251550674438477

Token 333: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038620397448539734
    2. ' range' → logprob: -3.2886204719543457
    3. '_range' → logprob: -7.913620471954346
    4. '_' → logprob: -8.788619995117188
    5. '(range' → logprob: -9.913619995117188
    6. ' in' → logprob: -11.663619995117188
    7. 'ange' → logprob: -14.413619995117188
    8. '	range' → logprob: -14.538619995117188
    9. 'in' → logprob: -14.913619995117188
    10. 'n' → logprob: -14.913619995117188

Token 334: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0042762961238622665
    2. ' range' → logprob: -5.504276275634766
    3. '(range' → logprob: -9.254276275634766
    4. '(n' → logprob: -9.379276275634766
    5. 'n' → logprob: -11.004276275634766
    6. '_range' → logprob: -14.254276275634766
    7. '	range' → logprob: -16.379276275634766
    8. '(' → logprob: -16.504276275634766
    9. '[n' → logprob: -16.629276275634766
    10. ' ' → logprob: -17.254276275634766

Token 335: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02975187823176384
    2. 'n' → logprob: -3.529751777648926
    3. 'range' → logprob: -13.779751777648926
    4. '(' → logprob: -15.904751777648926
    5. 'int' → logprob: -16.654752731323242
    6. ' n' → logprob: -17.279752731323242
    7. '_n' → logprob: -17.654752731323242
    8. ' (' → logprob: -18.029752731323242
    9. '	n' → logprob: -18.279752731323242
    10. 's' → logprob: -18.529752731323242

Token 336: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.07171978801488876
    2. ')' → logprob: -3.0717198848724365
    3. ']' → logprob: -3.8217198848724365
    4. '(n' → logprob: -7.196719646453857
    5. 'n' → logprob: -8.446720123291016
    6. ' n' → logprob: -12.946720123291016
    7. '   ' → logprob: -13.196720123291016
    8. ')]
' → logprob: -13.696720123291016
    9. ')n' → logprob: -13.696720123291016
    10. 'for' → logprob: -13.821720123291016

Token 337: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.4121114822482923e-06
    2. '<|end|>' → logprob: -13.375003814697266
    3. '
' → logprob: -13.750003814697266
    4. ' def' → logprob: -14.750003814697266
    5. 'from' → logprob: -16.625003814697266
    6. '<|end|>' → logprob: -16.875003814697266
    7. '#' → logprob: -17.250003814697266
    8. '```' → logprob: -17.875003814697266
    9. 'ndef' → logprob: -18.500003814697266
    10. 'class' → logprob: -18.625003814697266

Token 338: ' I' (ID: 357)
  Prédit: 'IL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.5866782069206238
    2. 'ILS' → logprob: -0.8366782069206238
    3. 'IS' → logprob: -4.8366780281066895
    4. 'S' → logprob: -7.0866780281066895
    5. 'ISC' → logprob: -7.7116780281066895
    6. 'LS' → logprob: -7.9616780281066895
    7. 'IC' → logprob: -8.586678504943848
    8. 'ISS' → logprob: -8.836678504943848
    9. 'IM' → logprob: -8.961678504943848
    10. 'ILLS' → logprob: -9.086678504943848

Token 339: 'LI' (ID: 14313)
  Prédit: 'SC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SC' → logprob: -0.5706943273544312
    2. 'LS' → logprob: -1.6956943273544312
    3. 'LC' → logprob: -1.6956943273544312
    4. 'S' → logprob: -2.9456944465637207
    5. 'SL' → logprob: -4.820694446563721
    6. 'L' → logprob: -5.570694446563721
    7. 'C' → logprob: -7.195694446563721
    8. 'LI' → logprob: -7.695694446563721
    9. 'MC' → logprob: -8.445693969726562
    10. 'SI' → logprob: -8.445693969726562

Token 340: '(input' (ID: 10054)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.33904609084129333
    2. '(n' → logprob: -1.4640461206436157
    3. 'ST' → logprob: -3.714046001434326
    4. 'st' → logprob: -4.089046001434326
    5. 'n' → logprob: -4.714046001434326
    6. 'I' → logprob: -5.964046001434326
    7. 'CI' → logprob: -6.589046001434326
    8. 'S' → logprob: -7.214046001434326
    9. 'L' → logprob: -8.339046478271484
    10. 's' → logprob: -8.714046478271484

Token 341: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.2050110548734665
    2. '(n' → logprob: -2.2050111293792725
    3. 'C' → logprob: -3.3300111293792725
    4. 'CI' → logprob: -4.080010890960693
    5. 'c' → logprob: -5.080010890960693
    6. 'func' → logprob: -5.580010890960693
    7. 'n' → logprob: -5.705010890960693
    8. 'f' → logprob: -6.080010890960693
    9. 'nt' → logprob: -6.330010890960693
    10. '(int' → logprob: -6.705010890960693

Token 342: '):
' (ID: 1883)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011803978122770786
    2. '(input' → logprob: -4.886804103851318
    3. '):' → logprob: -5.761804103851318
    4. '):
' → logprob: -7.136804103851318
    5. ' (' → logprob: -9.01180362701416
    6. '(' → logprob: -9.88680362701416
    7. ')' → logprob: -11.01180362701416
    8. '():' → logprob: -11.38680362701416
    9. ':' → logprob: -11.51180362701416
    10. '():
' → logprob: -11.76180362701416

Token 343: '   ' (ID: 271)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.05850236490368843
    2. 'return' → logprob: -2.933502435684204
    3. '   ' → logprob: -6.433502197265625
    4. ' list' → logprob: -7.683502197265625
    5. 'map' → logprob: -7.683502197265625
    6. '[int' → logprob: -8.183502197265625
    7. 'input' → logprob: -8.308502197265625
    8. '[list' → logprob: -8.433502197265625
    9. 'int' → logprob: -9.183502197265625
    10. '[input' → logprob: -9.308502197265625

Token 344: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07998292148113251
    2. 'return' (adapté à ' return') → logprob: -2.5799829959869385
    3. 'input' → logprob: -7.329982757568359
    4. 'map' → logprob: -8.57998275756836
    5. '[input' → logprob: -9.07998275756836
    6. '[list' → logprob: -9.82998275756836
    7. ' list' → logprob: -10.57998275756836
    8. '   ' → logprob: -11.07998275756836
    9. '[' → logprob: -11.45498275756836
    10. ' return' → logprob: -11.82998275756836

Token 345: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0015764019917696714
    2. '[list' → logprob: -6.5015764236450195
    3. '[input' → logprob: -10.50157642364502
    4. 'map' → logprob: -10.75157642364502
    5. ' list' → logprob: -11.00157642364502
    6. '[int' → logprob: -12.25157642364502
    7. '[' → logprob: -13.37657642364502
    8. 'input' → logprob: -13.62657642364502
    9. '(list' → logprob: -14.50157642364502
    10. '[len' → logprob: -16.001575469970703

Token 346: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.9292415749514475e-05
    2. 'map' → logprob: -10.375039100646973
    3. '(' → logprob: -11.750039100646973
    4. ' map' → logprob: -16.00004005432129
    5. '	map' → logprob: -17.37504005432129
    6. '(int' → logprob: -17.87504005432129
    7. '()' → logprob: -18.12504005432129
    8. '.map' → logprob: -18.37504005432129
    9. '(input' → logprob: -18.62504005432129
    10. '
' → logprob: -18.87504005432129

Token 347: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007139815716072917
    2. 'int' → logprob: -7.25071382522583
    3. '(' → logprob: -12.750714302062988
    4. ',int' → logprob: -15.250714302062988
    5. '<int' → logprob: -15.500714302062988
    6. ' int' → logprob: -15.750714302062988
    7. '   ' → logprob: -15.750714302062988
    8. '=int' → logprob: -16.500713348388672
    9. '	int' → logprob: -16.875713348388672
    10. ':int' → logprob: -17.375713348388672

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1006442978978157
    2. ',input' → logprob: -2.35064435005188
    3. 'input' → logprob: -7.850644111633301
    4. '(input' → logprob: -10.1006441116333
    5. ' input' → logprob: -13.1006441116333
    6. ' ,' → logprob: -13.6006441116333
    7. '(' → logprob: -13.7256441116333
    8. ',get' → logprob: -14.3506441116333
    9. ',(' → logprob: -14.6006441116333
    10. '=input' → logprob: -15.1006441116333

Token 349: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0010081578511744738
    2. ' input' → logprob: -7.001008033752441
    3. 'get' → logprob: -9.251008033752441
    4. '   ' → logprob: -15.251008033752441
    5. '(input' → logprob: -15.751008033752441
    6. ' get' → logprob: -16.501008987426758
    7. '
' → logprob: -17.001008987426758
    8. ',input' → logprob: -17.626008987426758
    9. '<input' → logprob: -18.001008987426758
    10. '	input' → logprob: -18.126008987426758

Token 350: '_func' (ID: 22252)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.016672099009156227
    2. '(input' → logprob: -4.266672134399414
    3. ',input' → logprob: -6.516672134399414
    4. ' input' → logprob: -7.516672134399414
    5. 'func' → logprob: -8.391672134399414
    6. '   ' → logprob: -9.141672134399414
    7. ',' → logprob: -10.391672134399414
    8. '=input' → logprob: -10.516672134399414
    9. 'function' → logprob: -10.891672134399414
    10. ')' → logprob: -11.391672134399414

Token 351: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9361264946837764e-07
    2. '()' → logprob: -16.25
    3. '))' → logprob: -17.5
    4. '().__' → logprob: -18.25
    5. ' ().' → logprob: -18.375
    6. '.readline' → logprob: -18.625
    7. '()))' → logprob: -19.0
    8. '.split' → logprob: -19.875
    9. 'split' → logprob: -20.125
    10. '   ' → logprob: -20.25

Token 352: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.10045261681079865
    2. 'strip' → logprob: -2.3504526615142822
    3. 'rstrip' → logprob: -8.350452423095703
    4. 'replace' → logprob: -11.600452423095703
    5. ' split' → logprob: -14.975452423095703
    6. ' strip' → logprob: -15.975452423095703
    7. 'spl' → logprob: -16.975452423095703
    8. '(split' → logprob: -18.350452423095703
    9. '.strip' → logprob: -18.475452423095703
    10. '.split' → logprob: -18.600452423095703

Token 353: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.004974135663360357
    2. '))' → logprob: -5.379974365234375
    3. '()' → logprob: -8.004974365234375
    4. '()))
' → logprob: -11.004974365234375
    5. '(' → logprob: -13.629974365234375
    6. '()));' → logprob: -14.004974365234375
    7. '()))

' → logprob: -14.754974365234375
    8. '())' → logprob: -14.754974365234375
    9. '(),' → logprob: -15.629974365234375
    10. ' ))' → logprob: -15.879974365234375

Token 354: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.735893965815194e-05
    2. '#' → logprob: -11.750017166137695
    3. '<|end|>' → logprob: -12.125017166137695
    4. ' def' → logprob: -13.375017166137695
    5. 'from' → logprob: -14.250017166137695
    6. '[]' → logprob: -15.000017166137695
    7. ')' → logprob: -15.000017166137695
    8. '```' → logprob: -15.250017166137695
    9. '<|end|>' → logprob: -15.875017166137695
    10. '[' → logprob: -16.125017166137695

Token 355: ' I' (ID: 357)
  Prédit: 'IS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IS' → logprob: -0.8055049180984497
    2. 'ILS' → logprob: -1.1805049180984497
    3. 'S' → logprob: -1.6805049180984497
    4. 'LS' → logprob: -3.80550479888916
    5. 'IL' → logprob: -4.05550479888916
    6. ' IS' → logprob: -5.18050479888916
    7. 'SL' → logprob: -5.43050479888916
    8. 'L' → logprob: -6.68050479888916
    9. 'I' → logprob: -6.68050479888916
    10. 'F' → logprob: -6.80550479888916

Token 356: 'LL' (ID: 7454)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.2084474563598633
    2. 'LI' → logprob: -1.7084474563598633
    3. 'L' → logprob: -1.8334474563598633
    4. 'LS' → logprob: -1.9584474563598633
    5. 'SI' → logprob: -1.9584474563598633
    6. 'LC' → logprob: -3.5834474563598633
    7. 'SL' → logprob: -4.208447456359863
    8. 'I' → logprob: -4.958447456359863
    9. 'N' → logprob: -5.833447456359863
    10. 'C' → logprob: -5.958447456359863

Token 357: 'I' (ID: 40)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00019817621796391904
    2. 'input' → logprob: -9.125198364257812
    3. 'I' → logprob: -9.375198364257812
    4. '=input' → logprob: -13.125198364257812
    5. 'C' → logprob: -14.125198364257812
    6. ' input' → logprob: -14.750198364257812
    7. 'CI' → logprob: -15.250198364257812
    8. '(' → logprob: -15.500198364257812
    9. '(n' → logprob: -15.625198364257812
    10. 'put' → logprob: -16.625198364257812

Token 358: '(n' (ID: 2406)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.2664456789934775e-06
    2. 'input' → logprob: -14.500000953674316
    3. '(' → logprob: -15.125000953674316
    4. ' (' → logprob: -15.375000953674316
    5. '=input' → logprob: -16.500001907348633
    6. ' input' → logprob: -18.125001907348633
    7. ',input' → logprob: -18.125001907348633
    8. '(n' → logprob: -19.250001907348633
    9. '[input' → logprob: -19.375001907348633
    10. '(inp' → logprob: -19.500001907348633

Token 359: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.635108470916748
    2. ':' → logprob: -0.760108470916748
    3. ':int' → logprob: -6.635108470916748
    4. '(n' → logprob: -8.260108947753906
    5. '(input' → logprob: -8.510108947753906
    6. 'int' → logprob: -8.760108947753906
    7. ',input' → logprob: -8.885108947753906
    8. 'input' → logprob: -9.385108947753906
    9. ' :' → logprob: -9.635108947753906
    10. 'n' → logprob: -9.635108947753906

Token 360: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00010556964843999594
    2. ' int' → logprob: -9.375105857849121
    3. 'n' → logprob: -11.375105857849121
    4. '(int' → logprob: -12.375105857849121
    5. 'input' → logprob: -13.000105857849121
    6. '[int' → logprob: -13.625105857849121
    7. 'def' → logprob: -14.875105857849121
    8. '   ' → logprob: -15.125105857849121
    9. '	int' → logprob: -15.875105857849121
    10. 'nt' → logprob: -16.000104904174805

Token 361: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.538490950129926e-05
    2. ' ,' → logprob: -10.000055313110352
    3. ',n' → logprob: -12.125055313110352
    4. ',input' → logprob: -12.375055313110352
    5. '):' → logprob: -16.37505531311035
    6. ',int' → logprob: -16.50005531311035
    7. 'n' → logprob: -18.25005531311035
    8. '   ' → logprob: -18.37505531311035
    9. ',
' → logprob: -18.37505531311035
    10. ' ' → logprob: -18.75005531311035

Token 362: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.020703045651316643
    2. ' input' → logprob: -3.895703077316284
    3. 'int' → logprob: -8.770703315734863
    4. ' int' → logprob: -13.645703315734863
    5. 'n' → logprob: -13.895703315734863
    6. '(input' → logprob: -14.020703315734863
    7. '	input' → logprob: -14.270703315734863
    8. ' ' → logprob: -14.520703315734863
    9. '  ' → logprob: -15.395703315734863
    10. '   ' → logprob: -15.395703315734863

Token 363: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.04306884482502937
    2. 'func' → logprob: -3.1680688858032227
    3. 'def' → logprob: -11.168068885803223
    4. 'f' → logprob: -11.168068885803223
    5. 'Func' → logprob: -11.543068885803223
    6. '```' → logprob: -12.168068885803223
    7. '(func' → logprob: -12.418068885803223
    8. 'n' → logprob: -12.793068885803223
    9. ',' → logprob: -12.918068885803223
    10. 'put' → logprob: -13.168068885803223

Token 364: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6991882920265198
    2. '):' → logprob: -0.6991882920265198
    3. ',' → logprob: -5.574188232421875
    4. ')' → logprob: -6.324188232421875
    5. '(n' → logprob: -7.949188232421875
    6. ',n' → logprob: -10.699188232421875
    7. ':' → logprob: -10.824188232421875
    8. '):
' → logprob: -10.949188232421875
    9. '):

' → logprob: -12.074188232421875
    10. ',input' → logprob: -12.574188232421875

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006366660236380994
    2. ' return' → logprob: -8.00063705444336
    3. 'return' → logprob: -8.12563705444336
    4. '	return' → logprob: -12.37563705444336
    5. 'def' → logprob: -14.50063705444336
    6. ' ' → logprob: -15.12563705444336
    7. '  ' → logprob: -16.25063705444336
    8. '   ' → logprob: -16.50063705444336
    9. '       ' → logprob: -17.50063705444336
    10. ':return' → logprob: -17.50063705444336

Token 366: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.36066821217536926
    2. '[' → logprob: -1.3606681823730469
    3. '[list' → logprob: -3.610668182373047
    4. '   ' → logprob: -4.860668182373047
    5. '[List' → logprob: -5.860668182373047
    6. '[int' → logprob: -6.360668182373047
    7. ' [' → logprob: -6.735668182373047
    8. '[line' → logprob: -6.735668182373047
    9. '[np' → logprob: -7.110668182373047
    10. ' return' → logprob: -7.610668182373047

Token 367: ' [[' (ID: 9237)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.01814631186425686
    2. '[' → logprob: -4.518146514892578
    3. '[int' → logprob: -5.268146514892578
    4. '[List' → logprob: -6.768146514892578
    5. ' [' → logprob: -7.643146514892578
    6. '[line' → logprob: -9.268146514892578
    7. '[array' → logprob: -10.893146514892578
    8. '[n' → logprob: -11.143146514892578
    9. '[label' → logprob: -11.143146514892578
    10. '[np' → logprob: -11.143146514892578

Token 368: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.392202976712724e-06
    2. 'II' → logprob: -12.125006675720215
    3. '
' → logprob: -15.375006675720215
    4. ' int' → logprob: -15.625006675720215
    5. '	int' → logprob: -15.625006675720215
    6. 'ii' → logprob: -16.0000057220459
    7. '*' → logprob: -16.0000057220459
    8. ']int' → logprob: -17.1250057220459
    9. '   ' → logprob: -17.2500057220459
    10. 'INT' → logprob: -17.5000057220459

Token 369: '(j' (ID: 4997)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0017987078754231334
    2. '(i' → logprob: -6.626798629760742
    3. '(e' → logprob: -9.126798629760742
    4. '(_)' → logprob: -9.251798629760742
    5. '(c' → logprob: -9.376798629760742
    6. 'x' → logprob: -10.126798629760742
    7. '(num' → logprob: -10.501798629760742
    8. '(k' → logprob: -11.001798629760742
    9. '(s' → logprob: -11.126798629760742
    10. '(j' → logprob: -11.251798629760742

Token 370: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033186037093400955
    2. '(input' → logprob: -3.6581859588623047
    3. '(x' → logprob: -6.033185958862305
    4. '(j' → logprob: -6.158185958862305
    5. 'input' → logprob: -7.408185958862305
    6. '()' → logprob: -7.908185958862305
    7. '(i' → logprob: -8.158185958862305
    8. 'for' → logprob: -8.158185958862305
    9. 's' → logprob: -8.783185958862305
    10. 'token' → logprob: -9.033185958862305

Token 371: ' for' (ID: 395)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.14244121313095093
    2. 'for' → logprob: -2.6424412727355957
    3. ' for' → logprob: -2.8924412727355957
    4. 'input' → logprob: -6.517441272735596
    5. '(x' → logprob: -6.642441272735596
    6. '()' → logprob: -6.767441272735596
    7. ')' → logprob: -7.142441272735596
    8. '(j' → logprob: -7.892441272735596
    9. ']' → logprob: -8.267440795898438
    10. ' ' → logprob: -8.267440795898438

Token 372: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10119691491127014
    2. ' j' → logprob: -2.4761970043182373
    3. '_' → logprob: -4.601196765899658
    4. '_j' → logprob: -6.226196765899658
    5. ' _' → logprob: -9.476197242736816
    6. '	j' → logprob: -10.351197242736816
    7. '__' → logprob: -10.601197242736816
    8. ' in' → logprob: -10.976197242736816
    9. 'in' → logprob: -11.976197242736816
    10. '(j' → logprob: -13.726197242736816

Token 373: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4740851819515228
    2. ' in' → logprob: -0.9740852117538452
    3. ' ' → logprob: -12.474084854125977
    4. '	in' → logprob: -13.599084854125977
    5. 'j' → logprob: -13.974084854125977
    6. 'inp' → logprob: -15.099084854125977
    7. '  ' → logprob: -15.224084854125977
    8. ' ' → logprob: -15.474084854125977
    9. 'In' → logprob: -15.974084854125977
    10. 'input' → logprob: -15.974084854125977

Token 374: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0045616114512085915
    2. 'IS' → logprob: -5.879561424255371
    3. ' input' → logprob: -6.754561424255371
    4. 'I' → logprob: -7.504561424255371
    5. 'range' → logprob: -10.754561424255371
    6. '_input' → logprob: -11.879561424255371
    7. '_' → logprob: -12.504561424255371
    8. '(input' → logprob: -13.379561424255371
    9. ' IS' → logprob: -13.504561424255371
    10. 'is' → logprob: -14.129561424255371

Token 375: '_func' (ID: 22252)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.034146636724472046
    2. 'input' → logprob: -3.409146547317505
    3. 'in' → logprob: -8.284146308898926
    4. ' in' → logprob: -9.284146308898926
    5. '(' → logprob: -9.909146308898926
    6. '()' → logprob: -10.659146308898926
    7. '(in' → logprob: -10.784146308898926
    8. ' input' → logprob: -11.409146308898926
    9. '(line' → logprob: -11.909146308898926
    10. '(_' → logprob: -12.159146308898926

Token 376: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.128163257315464e-07
    2. '()' → logprob: -16.375
    3. ' ().' → logprob: -16.5
    4. '()]' → logprob: -18.625
    5. '(' → logprob: -19.0
    6. '().__' → logprob: -19.375
    7. '.split' → logprob: -19.625
    8. '()].' → logprob: -20.125
    9. '()[' → logprob: -20.25
    10. '].' → logprob: -21.0

Token 377: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0021319445222616196
    2. 'strip' → logprob: -6.252131938934326
    3. 'rstrip' → logprob: -8.502132415771484
    4. ' split' → logprob: -15.377132415771484
    5. 'replace' → logprob: -18.002132415771484
    6. '().' → logprob: -18.377132415771484
    7. ' strip' → logprob: -18.752132415771484
    8. '(split' → logprob: -18.752132415771484
    9. '.split' → logprob: -18.877132415771484
    10. 'spl' → logprob: -19.502132415771484

Token 378: '()]' (ID: 59063)
  Prédit: '()]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0003519086167216301
    2. '()' → logprob: -8.000351905822754
    3. '()]
' → logprob: -11.125351905822754
    4. '(n' → logprob: -14.000351905822754
    5. '(' → logprob: -15.125351905822754
    6. '()[' → logprob: -15.875351905822754
    7. '())' → logprob: -16.00035285949707
    8. ']' → logprob: -16.25035285949707
    9. '()][' → logprob: -16.62535285949707
    10. '()}' → logprob: -17.12535285949707

Token 379: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12700559198856354
    2. 'for' → logprob: -2.1270055770874023
    3. '   ' → logprob: -9.627005577087402
    4. '	for' → logprob: -11.877005577087402
    5. ' in' → logprob: -12.502005577087402
    6. '    ' → logprob: -14.627005577087402
    7. 'in' → logprob: -15.502005577087402
    8. '       ' → logprob: -16.00200653076172
    9. ' ' → logprob: -16.62700653076172
    10. ']' → logprob: -17.00200653076172

Token 380: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.630610641877865e-06
    2. '_range' → logprob: -12.500006675720215
    3. ' _' → logprob: -13.000006675720215
    4. ' range' → logprob: -15.000006675720215
    5. 'range' → logprob: -16.0000057220459
    6. '_i' → logprob: -16.0000057220459
    7. ' in' → logprob: -16.8750057220459
    8. '_in' → logprob: -18.0000057220459
    9. '   ' → logprob: -19.0000057220459
    10. '_
' → logprob: -19.0000057220459

Token 381: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6735588312149048
    2. '_' → logprob: -1.1735588312149048
    3. 'range' → logprob: -1.9235588312149048
    4. 'in' → logprob: -3.4235587120056152
    5. ' range' → logprob: -6.173558712005615
    6. '_range' → logprob: -10.173559188842773
    7. ' _' → logprob: -10.298559188842773
    8. '_in' → logprob: -12.548559188842773
    9. ' ' → logprob: -13.673559188842773
    10. '(range' → logprob: -14.173559188842773

Token 382: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002661039761733264
    2. ' range' → logprob: -8.250266075134277
    3. '_range' → logprob: -12.500266075134277
    4. '_' → logprob: -13.750266075134277
    5. '	range' → logprob: -18.125267028808594
    6. '(range' → logprob: -18.875267028808594
    7. '.range' → logprob: -21.375267028808594
    8. '
' → logprob: -22.125267028808594
    9. 'rang' → logprob: -23.250267028808594
    10. '_r' → logprob: -23.375267028808594

Token 383: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1602337658405304
    2. 'n' → logprob: -1.910233736038208
    3. ' n' → logprob: -11.910233497619629
    4. '(' → logprob: -13.535233497619629
    5. '	n' → logprob: -13.660233497619629
    6. ' (' → logprob: -14.910233497619629
    7. '   ' → logprob: -16.910234451293945
    8. '_n' → logprob: -18.035234451293945
    9. ')n' → logprob: -19.285234451293945
    10. ',n' → logprob: -19.660234451293945

Token 384: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002488737925887108
    2. ')' → logprob: -6.252488613128662
    3. ']' → logprob: -7.502488613128662
    4. '()]' → logprob: -12.25248908996582
    5. '   ' → logprob: -14.12748908996582
    6. ' )' → logprob: -14.75248908996582
    7. ')]
' → logprob: -15.00248908996582
    8. ')])' → logprob: -15.00248908996582
    9. ')],' → logprob: -15.25248908996582
    10. '])]' → logprob: -15.62748908996582

Token 385: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004008793330285698
    2. '#' → logprob: -8.50040054321289
    3. 'class' → logprob: -9.12540054321289
    4. 'from' → logprob: -10.12540054321289
    5. '<|end|>' → logprob: -11.00040054321289
    6. '
' → logprob: -11.62540054321289
    7. '<|end|>' → logprob: -12.00040054321289
    8. ')' → logprob: -12.25040054321289
    9. 'import' → logprob: -12.62540054321289
    10. ' def' → logprob: -13.87540054321289

Token 386: ' IL' (ID: 16067)
  Prédit: 'IL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.9571003913879395
    2. 'ILS' → logprob: -1.0821003913879395
    3. 'ILL' → logprob: -2.5821003913879395
    4. 'main' → logprob: -2.9571003913879395
    5. 'S' → logprob: -3.2071003913879395
    6. 'IS' → logprob: -3.3321003913879395
    7. 'ILI' → logprob: -4.0821003913879395
    8. 'IM' → logprob: -4.8321003913879395
    9. 'IC' → logprob: -5.0821003913879395
    10. 'LS' → logprob: -5.3321003913879395

Token 387: 'F' (ID: 37)
  Prédit: 'CI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CI' → logprob: -0.6012121438980103
    2. 'I' → logprob: -1.8512121438980103
    3. 'C' → logprob: -1.9762121438980103
    4. 'LI' → logprob: -2.1012120246887207
    5. 'L' → logprob: -4.851212024688721
    6. 'CF' → logprob: -4.976212024688721
    7. 'S' → logprob: -5.101212024688721
    8. 'SI' → logprob: -5.851212024688721
    9. 'OI' → logprob: -6.476212024688721
    10. '(n' → logprob: -7.101212024688721

Token 388: '(input' (ID: 10054)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01708456315100193
    2. 'C' → logprob: -4.89208459854126
    3. 'def' → logprob: -5.14208459854126
    4. 'F' → logprob: -6.51708459854126
    5. 'I' → logprob: -6.89208459854126
    6. '(input' → logprob: -7.76708459854126
    7. '(' → logprob: -8.392084121704102
    8. 'loat' → logprob: -8.517084121704102
    9. 'L' → logprob: -9.017084121704102
    10. 'CF' → logprob: -10.517084121704102

Token 389: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.007949299179017544
    2. '(input' → logprob: -5.132949352264404
    3. '(n' → logprob: -6.507949352264404
    4. 'func' → logprob: -8.507948875427246
    5. '(func' → logprob: -9.882948875427246
    6. '_FUNC' → logprob: -9.882948875427246
    7. 'def' → logprob: -10.257948875427246
    8. 'C' → logprob: -10.257948875427246
    9. '(defun' → logprob: -10.382948875427246
    10. '```' → logprob: -10.507948875427246

Token 390: '):
' (ID: 1883)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.010304655879735947
    2. '):' → logprob: -4.6353044509887695
    3. '):
' → logprob: -8.26030445098877
    4. ')' → logprob: -8.63530445098877
    5. 'input' → logprob: -9.63530445098877
    6. '=input' → logprob: -10.76030445098877
    7. ',input' → logprob: -11.38530445098877
    8. ':' → logprob: -12.51030445098877
    9. '(' → logprob: -12.63530445098877
    10. ' input' → logprob: -12.63530445098877

Token 391: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.31672847270965576
    2. 'def' → logprob: -1.3167284727096558
    3. '   ' → logprob: -5.691728591918945
    4. ' return' → logprob: -9.941728591918945
    5. '
' → logprob: -10.816728591918945
    6. 'lambda' → logprob: -11.191728591918945
    7. 'float' → logprob: -13.441728591918945
    8. ' def' → logprob: -14.066728591918945
    9. '	return' → logprob: -14.316728591918945
    10. '=lambda' → logprob: -14.566728591918945

Token 392: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005280365236103535
    2. 'def' → logprob: -5.255280494689941
    3. '   ' → logprob: -11.255280494689941
    4. ' return' → logprob: -11.255280494689941
    5. 'list' → logprob: -11.505280494689941
    6. 'lambda' → logprob: -11.505280494689941
    7. 'float' → logprob: -16.005279541015625
    8. 'map' → logprob: -16.255279541015625
    9. '```' → logprob: -16.255279541015625
    10. '
' → logprob: -16.505279541015625

Token 393: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.320199877838604e-07
    2. 'float' → logprob: -16.0
    3. ' list' → logprob: -16.375
    4. '[list' → logprob: -16.75
    5. 'lambda' → logprob: -18.0
    6. 'map' → logprob: -19.25
    7. '[' → logprob: -19.625
    8. '(list' → logprob: -20.5
    9. '
' → logprob: -21.75
    10. '   ' → logprob: -22.0

Token 394: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0036336849443614483
    2. '(float' → logprob: -5.878633499145508
    3. '(lambda' → logprob: -7.753633499145508
    4. 'map' → logprob: -8.003633499145508
    5. '(' → logprob: -9.878633499145508
    6. '(IF' → logprob: -11.628633499145508
    7. '(filter' → logprob: -14.253633499145508
    8. '(input' → logprob: -14.503633499145508
    9. 'float' → logprob: -14.753633499145508
    10. 'IF' → logprob: -14.878633499145508

Token 395: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -2.570319702499546e-05
    2. 'float' → logprob: -10.625025749206543
    3. '=float' → logprob: -14.750025749206543
    4. ',float' → logprob: -15.000025749206543
    5. '(' → logprob: -15.500025749206543
    6. '(f' → logprob: -16.250024795532227
    7. ' float' → logprob: -16.500024795532227
    8. '<float' → logprob: -16.500024795532227
    9. '(int' → logprob: -16.875024795532227
    10. '	float' → logprob: -17.250024795532227

Token 396: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.1022305116057396
    2. ',' → logprob: -2.3522305488586426
    3. '(input' → logprob: -6.227230548858643
    4. 'input' → logprob: -10.352230072021484
    5. ' ,' → logprob: -12.352230072021484
    6. '(' → logprob: -12.727230072021484
    7. '=input' → logprob: -12.977230072021484
    8. ',function' → logprob: -13.727230072021484
    9. '<input' → logprob: -13.852230072021484
    10. ' input' → logprob: -14.477230072021484

Token 397: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007565005216747522
    2. ' input' → logprob: -7.50075626373291
    3. '(input' → logprob: -8.50075626373291
    4. ',input' → logprob: -16.500757217407227
    5. '=input' → logprob: -18.250757217407227
    6. '<input' → logprob: -18.500757217407227
    7. '[input' → logprob: -19.500757217407227
    8. '	input' → logprob: -20.000757217407227
    9. '_input' → logprob: -20.500757217407227
    10. '(' → logprob: -20.750757217407227

Token 398: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -4.024604277219623e-05
    2. 'func' → logprob: -10.125040054321289
    3. '(input' → logprob: -16.75004005432129
    4. '_function' → logprob: -17.00004005432129
    5. '(func' → logprob: -17.87504005432129
    6. '```' → logprob: -17.87504005432129
    7. '_fun' → logprob: -18.12504005432129
    8. '()' → logprob: -18.37504005432129
    9. '_FUNC' → logprob: -18.62504005432129
    10. ')' → logprob: -18.87504005432129

Token 399: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '()' → logprob: -14.500000953674316
    3. ' ().' → logprob: -20.0
    4. '()[' → logprob: -20.875
    5. '().__' → logprob: -21.125
    6. '.split' → logprob: -21.25
    7. '.' → logprob: -22.0
    8. '()
' → logprob: -22.5
    9. '(' → logprob: -22.5
    10. ' .' → logprob: -23.125

Token 400: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.246537173457909e-06
    2. '(split' → logprob: -13.375003814697266
    3. ' split' → logprob: -13.375003814697266
    4. '().' → logprob: -14.500003814697266
    5. ')' → logprob: -15.375003814697266
    6. '.split' → logprob: -16.000003814697266
    7. 'strip' → logprob: -16.375003814697266
    8. '()' → logprob: -16.625003814697266
    9. 'spl' → logprob: -18.625003814697266
    10. '_split' → logprob: -20.000003814697266

Token 401: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5763565301895142
    2. '()))' → logprob: -0.8263565301895142
    3. '()' → logprob: -7.826356410980225
    4. '()))
' → logprob: -11.701356887817383
    5. '())' → logprob: -12.326356887817383
    6. '()))

' → logprob: -13.701356887817383
    7. '(' → logprob: -14.076356887817383
    8. ' ))' → logprob: -14.076356887817383
    9. ')' → logprob: -14.201356887817383
    10. '))
' → logprob: -14.326356887817383

Token 402: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004521222144830972
    2. '#' → logprob: -8.125452041625977
    3. '<|end|>' → logprob: -9.750452041625977
    4. ')' → logprob: -10.000452041625977
    5. '<|end|>' → logprob: -10.875452041625977
    6. '```' → logprob: -12.000452041625977
    7. 'from' → logprob: -12.125452041625977
    8. '[' → logprob: -12.500452041625977
    9. '[]' → logprob: -12.875452041625977
    10. ' def' → logprob: -12.875452041625977

Token 403: ' I' (ID: 357)
  Prédit: 'IS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IS' → logprob: -1.0062021017074585
    2. 'IL' → logprob: -1.3812021017074585
    3. 'ILS' → logprob: -1.8812021017074585
    4. 'def' → logprob: -3.006202220916748
    5. 'S' → logprob: -3.506202220916748
    6. 'ILL' → logprob: -4.131202220916748
    7. 'IFS' → logprob: -4.256202220916748
    8. 'IM' → logprob: -4.256202220916748
    9. 'IF' → logprob: -4.506202220916748
    10. 'ILI' → logprob: -4.506202220916748

Token 404: 'LL' (ID: 7454)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.5653095841407776
    2. 'L' → logprob: -1.8153095245361328
    3. 'S' → logprob: -1.8153095245361328
    4. 'LC' → logprob: -3.315309524536133
    5. 'LI' → logprob: -4.440309524536133
    6. 'SC' → logprob: -4.940309524536133
    7. 'MS' → logprob: -4.940309524536133
    8. 'SI' → logprob: -4.940309524536133
    9. 'SL' → logprob: -5.815309524536133
    10. 'C' → logprob: -5.815309524536133

Token 405: 'F' (ID: 37)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.002024758607149124
    2. '(n' → logprob: -6.2520246505737305
    3. 'def' → logprob: -10.00202465057373
    4. 'LI' → logprob: -11.37702465057373
    5. 'L' → logprob: -12.25202465057373
    6. '[n' → logprob: -12.37702465057373
    7. 'n' → logprob: -13.00202465057373
    8. '(input' → logprob: -13.00202465057373
    9. '```' → logprob: -13.12702465057373
    10. 'input' → logprob: -13.37702465057373

Token 406: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.023255961015820503
    2. '(input' → logprob: -3.7732560634613037
    3. ' (' → logprob: -12.398256301879883
    4. '(' → logprob: -12.648256301879883
    5. 'n' → logprob: -13.398256301879883
    6. '=input' → logprob: -14.023256301879883
    7. 'def' → logprob: -15.023256301879883
    8. '(lambda' → logprob: -16.398256301879883
    9. ' n' → logprob: -16.773256301879883
    10. '(def' → logprob: -17.023256301879883

Token 407: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005210040137171745
    2. '(n' → logprob: -5.505209922790527
    3. ':int' → logprob: -7.630209922790527
    4. ',' → logprob: -8.880209922790527
    5. '<|end|>' → logprob: -9.005209922790527
    6. 'int' → logprob: -9.130209922790527
    7. ')' → logprob: -9.505209922790527
    8. '(int' → logprob: -9.630209922790527
    9. '):' → logprob: -9.880209922790527
    10. '<|end|>' → logprob: -10.505209922790527

Token 408: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.941850526549388e-06
    2. ' int' → logprob: -12.250007629394531
    3. '(int' → logprob: -12.750007629394531
    4. '[int' → logprob: -16.50000762939453
    5. '=int' → logprob: -16.62500762939453
    6. ':int' → logprob: -17.62500762939453
    7. '<int' → logprob: -18.00000762939453
    8. 'def' → logprob: -18.37500762939453
    9. 'n' → logprob: -18.75000762939453
    10. ')' → logprob: -20.62500762939453

Token 409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.511406809295295e-06
    2. ' ,' → logprob: -12.625006675720215
    3. ',n' → logprob: -13.500006675720215
    4. ',input' → logprob: -13.625006675720215
    5. 'def' → logprob: -15.000006675720215
    6. ',
' → logprob: -15.250006675720215
    7. '(n' → logprob: -17.7500057220459
    8. 'n' → logprob: -18.3750057220459
    9. ',int' → logprob: -18.3750057220459
    10. ':' → logprob: -18.7500057220459

Token 410: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018211519345641136
    2. ' input' → logprob: -4.018211364746094
    3. 'def' → logprob: -10.143211364746094
    4. '(input' → logprob: -11.018211364746094
    5. 'n' → logprob: -13.143211364746094
    6. '[input' → logprob: -13.518211364746094
    7. 'int' → logprob: -14.018211364746094
    8. '=input' → logprob: -14.268211364746094
    9. ',input' → logprob: -14.393211364746094
    10. '_input' → logprob: -15.518211364746094

Token 411: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.17801180481910706
    2. 'func' → logprob: -2.053011894226074
    3. '(input' → logprob: -3.803011894226074
    4. 'input' → logprob: -4.678011894226074
    5. 'put' → logprob: -5.928011894226074
    6. 'function' → logprob: -9.553011894226074
    7. 'def' → logprob: -9.678011894226074
    8. 'Func' → logprob: -10.053011894226074
    9. '(n' → logprob: -10.178011894226074
    10. ' input' → logprob: -10.428011894226074

Token 412: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009749596007168293
    2. '):
' → logprob: -4.759749412536621
    3. ')' → logprob: -6.884749412536621
    4. ':' → logprob: -9.134749412536621
    5. '(n' → logprob: -14.134749412536621
    6. '):

' → logprob: -14.259749412536621
    7. 'def' → logprob: -14.509749412536621
    8. '):
' → logprob: -14.759749412536621
    9. '():' → logprob: -15.134749412536621
    10. ' ):' → logprob: -15.134749412536621

Token 413: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00894308090209961
    2. ' return' → logprob: -5.3839430809021
    3. 'return' → logprob: -5.5089430809021
    4. 'def' → logprob: -8.758943557739258
    5. ' ' → logprob: -9.633943557739258
    6. '	return' → logprob: -10.758943557739258
    7. '(n' → logprob: -12.508943557739258
    8. '[
' → logprob: -12.633943557739258
    9. '[n' → logprob: -12.883943557739258
    10. ')' → logprob: -13.383943557739258

Token 414: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2001960724592209
    2. '[[' → logprob: -2.2001960277557373
    3. '   ' → logprob: -2.7001960277557373
    4. ' return' → logprob: -5.825196266174316
    5. 'def' → logprob: -7.700196266174316
    6. '	return' → logprob: -10.950196266174316
    7. '       ' → logprob: -11.950196266174316
    8. '[' → logprob: -12.075196266174316
    9. ' [[' → logprob: -12.075196266174316
    10. '=[[' → logprob: -12.325196266174316

Token 415: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.00198121415451169
    2. '[' → logprob: -6.251981258392334
    3. '[list' → logprob: -10.251980781555176
    4. ' [[' → logprob: -11.001980781555176
    5. '[List' → logprob: -15.876980781555176
    6. '[np' → logprob: -15.876980781555176
    7. ' [' → logprob: -16.126981735229492
    8. '[line' → logprob: -16.876981735229492
    9. '[f' → logprob: -16.876981735229492
    10. '[n' → logprob: -17.001981735229492

Token 416: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -3.128163257315464e-07
    2. 'flo' → logprob: -15.75
    3. ' float' → logprob: -15.875
    4. '   ' → logprob: -19.5
    5. '
' → logprob: -20.125
    6. 'f' → logprob: -20.125
    7. 'list' → logprob: -20.875
    8. '	float' → logprob: -20.875
    9. '  ' → logprob: -21.375
    10. ' ' → logprob: -21.625

Token 417: '(j' (ID: 4997)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5760300159454346
    2. '(j' → logprob: -0.8260300159454346
    3. 'j' → logprob: -10.076029777526855
    4. '(i' → logprob: -10.326029777526855
    5. 'input' → logprob: -12.076029777526855
    6. '(n' → logprob: -13.076029777526855
    7. ' (' → logprob: -13.076029777526855
    8. '(x' → logprob: -13.326029777526855
    9. '(' → logprob: -14.326029777526855
    10. ' j' → logprob: -14.451029777526855

Token 418: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14504854381084442
    2. ' for' → logprob: -2.0200486183166504
    3. ')' → logprob: -6.52004861831665
    4. '(input' → logprob: -7.39504861831665
    5. '	for' → logprob: -9.145048141479492
    6. 'input' → logprob: -9.770048141479492
    7. ' in' → logprob: -10.895048141479492
    8. 'in' → logprob: -11.145048141479492
    9. ']' → logprob: -11.395048141479492
    10. ' ' → logprob: -11.520048141479492

Token 419: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16026028990745544
    2. ' for' → logprob: -1.9102603197097778
    3. '(input' → logprob: -10.910260200500488
    4. 'input' → logprob: -11.285260200500488
    5. '	for' → logprob: -13.410260200500488
    6. '[input' → logprob: -13.910260200500488
    7. 'in' → logprob: -14.410260200500488
    8. ')' → logprob: -14.410260200500488
    9. ']' → logprob: -14.910260200500488
    10. 'from' → logprob: -15.535260200500488

Token 420: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06206224486231804
    2. ' j' → logprob: -2.8120622634887695
    3. '_j' → logprob: -9.43706226348877
    4. '_' → logprob: -11.68706226348877
    5. '	j' → logprob: -12.31206226348877
    6. ' _' → logprob: -13.68706226348877
    7. ' in' → logprob: -14.56206226348877
    8. '$j' → logprob: -15.93706226348877
    9. 'in' → logprob: -16.187061309814453
    10. ' ' → logprob: -17.062061309814453

Token 421: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02993827499449253
    2. 'in' → logprob: -3.529938220977783
    3. 'input' → logprob: -9.029938697814941
    4. 'j' → logprob: -10.654938697814941
    5. ' j' → logprob: -11.279938697814941
    6. '(input' → logprob: -11.404938697814941
    7. 'import' → logprob: -11.779938697814941
    8. 'inp' → logprob: -13.029938697814941
    9. ' input' → logprob: -13.279938697814941
    10. '	in' → logprob: -13.779938697814941

Token 422: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007100477814674377
    2. ' input' → logprob: -7.2507100105285645
    3. '(input' → logprob: -16.500709533691406
    4. '_input' → logprob: -19.250709533691406
    5. '	input' → logprob: -19.625709533691406
    6. '<input' → logprob: -20.000709533691406
    7. ' ' → logprob: -20.125709533691406
    8. '[input' → logprob: -20.625709533691406
    9. '=input' → logprob: -21.000709533691406
    10. 'in' → logprob: -21.000709533691406

Token 423: '_func' (ID: 22252)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.706572413444519
    2. 'func' → logprob: -1.206572413444519
    3. '_func' → logprob: -1.956572413444519
    4. 'input' → logprob: -2.9565725326538086
    5. '()' → logprob: -5.081572532653809
    6. '(input' → logprob: -5.331572532653809
    7. 'in' → logprob: -6.831572532653809
    8. ' in' → logprob: -7.581572532653809
    9. 'import' → logprob: -7.831572532653809
    10. '()]' → logprob: -7.956572532653809

Token 424: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007049257401376963
    2. '()' → logprob: -7.500704765319824
    3. '(input' → logprob: -9.750704765319824
    4. ' in' → logprob: -9.875704765319824
    5. 'in' → logprob: -11.250704765319824
    6. 'input' → logprob: -11.250704765319824
    7. 'import' → logprob: -11.500704765319824
    8. '()[' → logprob: -13.250704765319824
    9. '.input' → logprob: -13.875704765319824
    10. '(in' → logprob: -14.625704765319824

Token 425: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. 'strip' → logprob: -16.25
    3. ' split' → logprob: -16.25
    4. '.split' → logprob: -16.75
    5. 'replace' → logprob: -17.5
    6. '(split' → logprob: -18.25
    7. 'rstrip' → logprob: -20.375
    8. 'spl' → logprob: -20.5
    9. '().' → logprob: -21.25
    10. '_split' → logprob: -22.75

Token 426: '()]' (ID: 59063)
  Prédit: '()]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0006361891864798963
    2. ']' → logprob: -7.375636100769043
    3. '()' → logprob: -11.625636100769043
    4. '()]
' → logprob: -15.000636100769043
    5. ')]' → logprob: -16.00063705444336
    6. '(n' → logprob: -16.25063705444336
    7. '']' → logprob: -16.50063705444336
    8. ' ]' → logprob: -17.62563705444336
    9. '`]' → logprob: -17.62563705444336
    10. ']()' → logprob: -17.75063705444336

Token 427: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3132956027984619
    2. 'for' → logprob: -1.313295602798462
    3. '	for' → logprob: -11.313295364379883
    4. '   ' → logprob: -11.563295364379883
    5. 'n' → logprob: -12.438295364379883
    6. ']' → logprob: -12.563295364379883
    7. '(n' → logprob: -13.438295364379883
    8. ' n' → logprob: -13.813295364379883
    9. ')' → logprob: -14.438295364379883
    10. ' ' → logprob: -14.688295364379883

Token 428: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.946405094116926e-05
    2. ' _' → logprob: -9.500079154968262
    3. '_range' → logprob: -12.875079154968262
    4. ' in' → logprob: -13.250079154968262
    5. ' range' → logprob: -15.125079154968262
    6. '_in' → logprob: -17.875080108642578
    7. 'range' → logprob: -18.500080108642578
    8. ' ' → logprob: -19.500080108642578
    9. 'in' → logprob: -20.375080108642578
    10. '_n' → logprob: -21.375080108642578

Token 429: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11113287508487701
    2. ' range' → logprob: -2.611132860183716
    3. '_' → logprob: -3.611132860183716
    4. '_range' → logprob: -5.361133098602295
    5. '	range' → logprob: -12.361132621765137
    6. '(range' → logprob: -12.611132621765137
    7. ' _' → logprob: -12.861132621765137
    8. ' in' → logprob: -13.736132621765137
    9. '_in' → logprob: -14.986132621765137
    10. '
' → logprob: -15.736132621765137

Token 430: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014164801687002182
    2. ' range' → logprob: -4.264164924621582
    3. '_range' → logprob: -13.764164924621582
    4. '(range' → logprob: -15.889164924621582
    5. '_' → logprob: -16.014163970947266
    6. '	range' → logprob: -16.764163970947266
    7. '
' → logprob: -19.764163970947266
    8. '   ' → logprob: -20.264163970947266
    9. '.range' → logprob: -20.264163970947266
    10. ' ' → logprob: -20.389163970947266

Token 431: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3133818805217743
    2. ' range' → logprob: -1.3133819103240967
    3. 'n' → logprob: -9.313382148742676
    4. '(range' → logprob: -10.938382148742676
    5. '(n' → logprob: -12.438382148742676
    6. '_' → logprob: -12.438382148742676
    7. '_range' → logprob: -12.688382148742676
    8. 'in' → logprob: -14.563382148742676
    9. ' in' → logprob: -15.063382148742676
    10. 'ange' → logprob: -16.06338119506836

Token 432: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00017600801947992295
    2. ']' → logprob: -8.750176429748535
    3. ')' → logprob: -11.250176429748535
    4. ')]
' → logprob: -14.000176429748535
    5. 'def' → logprob: -14.250176429748535
    6. 'n' → logprob: -14.375176429748535
    7. '(n' → logprob: -14.375176429748535
    8. '()]' → logprob: -14.625176429748535
    9. '')]' → logprob: -15.375176429748535
    10. '   ' → logprob: -15.500176429748535

Token 433: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005858635529875755
    2. '<|end|>' → logprob: -5.505858421325684
    3. '#' → logprob: -6.880858421325684
    4. '
' → logprob: -8.005858421325684
    5. 'class' → logprob: -8.755858421325684
    6. '<|end|>' → logprob: -9.755858421325684
    7. '```' → logprob: -10.005858421325684
    8. ')' → logprob: -10.130858421325684
    9. 'from' → logprob: -10.630858421325684
    10. 'import' → logprob: -11.130858421325684

Token 434: ' LT' (ID: 56250)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.525231659412384
    2. 'main' → logprob: -1.2752315998077393
    3. 'IS' → logprob: -3.5252315998077393
    4. 'IL' → logprob: -4.525231838226318
    5. 'I' → logprob: -4.650231838226318
    6. ' solve' → logprob: -4.900231838226318
    7. 'ID' → logprob: -5.150231838226318
    8. 'solve' → logprob: -5.275231838226318
    9. 'LS' → logprob: -5.400231838226318
    10. 'S' → logprob: -5.462731838226318

Token 435: 'OS' (ID: 3360)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.055725324898958206
    2. 'S' → logprob: -4.43072509765625
    3. '(*' → logprob: -4.55572509765625
    4. '(iter' → logprob: -5.05572509765625
    5. 'L' → logprob: -5.55572509765625
    6. '(list' → logprob: -6.05572509765625
    7. '():' → logprob: -6.05572509765625
    8. '(line' → logprob: -6.05572509765625
    9. 'def' → logprob: -6.43072509765625
    10. '():
' → logprob: -6.80572509765625

Token 436: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.07074743509292603
    2. '(s' → logprob: -3.6957473754882812
    3. '(l' → logprob: -3.8207473754882812
    4. '(line' → logprob: -4.945747375488281
    5. '(list' → logprob: -5.070747375488281
    6. '(ls' → logprob: -5.570747375488281
    7. '(L' → logprob: -6.945747375488281
    8. '(li' → logprob: -6.945747375488281
    9. '(strings' → logprob: -7.570747375488281
    10. '(lines' → logprob: -8.070747375488281

Token 437: ':' (ID: 25)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.5266556143760681
    2. '):' → logprob: -0.9016556143760681
    3. '):
' → logprob: -6.026655673980713
    4. ':' → logprob: -7.776655673980713
    5. ')' → logprob: -8.026655197143555
    6. '(l' → logprob: -9.151655197143555
    7. ' ):' → logprob: -9.526655197143555
    8. ':list' → logprob: -9.776655197143555
    9. 'lst' → logprob: -10.776655197143555
    10. '(ls' → logprob: -10.901655197143555

Token 438: ' list' (ID: 1562)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.32542726397514343
    2. 'list' → logprob: -1.3254272937774658
    3. '[str' → logprob: -5.700427055358887
    4. ' str' → logprob: -5.700427055358887
    5. 'List' → logprob: -6.450427055358887
    6. ' list' → logprob: -6.825427055358887
    7. 'lambda' → logprob: -7.200427055358887
    8. 'lst' → logprob: -7.450427055358887
    9. '(str' → logprob: -7.700427055358887
    10. ')' → logprob: -8.200427055358887

Token 439: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3737396001815796
    2. '):
' → logprob: -1.7487396001815796
    3. '):' → logprob: -1.9987396001815796
    4. ',' → logprob: -6.623739719390869
    5. ')->' → logprob: -7.248739719390869
    6. '):
' → logprob: -8.248739242553711
    7. '   ' → logprob: -11.123739242553711
    8. '):

' → logprob: -12.248739242553711
    9. '[str' → logprob: -12.248739242553711
    10. ' )' → logprob: -13.123739242553711

Token 440: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.06742489337921143
    2. ' sep' → logprob: -3.067424774169922
    3. 'd' → logprob: -4.942424774169922
    4. 'delimiter' → logprob: -5.567424774169922
    5. 'del' → logprob: -5.942424774169922
    6. ' delim' → logprob: -6.692424774169922
    7. 'sp' → logprob: -6.942424774169922
    8. 'ch' → logprob: -7.692424774169922
    9. 's' → logprob: -7.942424774169922
    10. 'de' → logprob: -7.942424774169922

Token 441: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09406081587076187
    2. '='' → logprob: -2.5940608978271484
    3. '=',' → logprob: -4.719060897827148
    4. '="' → logprob: -5.844060897827148
    5. '=None' → logprob: -6.344060897827148
    6. '=",' → logprob: -6.844060897827148
    7. '=''' → logprob: -9.469060897827148
    8. '='\' → logprob: -9.594060897827148
    9. '=str' → logprob: -9.719060897827148
    10. '="""' → logprob: -10.594060897827148

Token 442: ' str' (ID: 989)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.35030511021614075
    2. '"' → logprob: -1.2253050804138184
    3. 'str' → logprob: -6.850305080413818
    4. ' '' → logprob: -7.725305080413818
    5. ' "' → logprob: -9.350305557250977
    6. ')' → logprob: -9.725305557250977
    7. '"""' → logprob: -9.975305557250977
    8. ' str' → logprob: -10.600305557250977
    9. ''s' → logprob: -10.725305557250977
    10. '""' → logprob: -10.975305557250977

Token 443: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4359889328479767
    2. '='' → logprob: -1.3109889030456543
    3. '=',' → logprob: -2.9359889030456543
    4. '="' → logprob: -4.310988903045654
    5. '=",' → logprob: -4.560988903045654
    6. ' =' → logprob: -6.060988903045654
    7. '):' → logprob: -6.185988903045654
    8. ')' → logprob: -6.935988903045654
    9. '=None' → logprob: -7.310988903045654
    10. '='\' → logprob: -7.935988903045654

Token 444: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.28130602836608887
    2. '"' → logprob: -1.4063060283660889
    3. ''\' → logprob: -9.781306266784668
    4. ' '' → logprob: -10.031306266784668
    5. '',' → logprob: -11.156306266784668
    6. '"\' → logprob: -11.531306266784668
    7. ' "' → logprob: -11.531306266784668
    8. '''' → logprob: -12.031306266784668
    9. ')' → logprob: -12.781306266784668
    10. '",' → logprob: -12.781306266784668

Token 445: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.011946523562073708
    2. '')' → logprob: -5.011946678161621
    3. ''):' → logprob: -6.136946678161621
    4. ' '' → logprob: -6.761946678161621
    5. ''\' → logprob: -7.386946678161621
    6. ' ')' → logprob: -7.886946678161621
    7. '"' → logprob: -8.136946678161621
    8. ' '')' → logprob: -8.761946678161621
    9. '''' → logprob: -8.761946678161621
    10. ')' → logprob: -9.386946678161621

Token 446: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47533363103866577
    2. '):' → logprob: -1.2253336906433105
    3. '):
' → logprob: -2.4753336906433105
    4. '')' → logprob: -8.975333213806152
    5. ')=' → logprob: -9.100333213806152
    6. ')->' → logprob: -9.225333213806152
    7. ''):' → logprob: -9.725333213806152
    8. '='' → logprob: -9.850333213806152
    9. '):
' → logprob: -10.850333213806152
    10. '=' → logprob: -11.225333213806152

Token 447: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2171168476343155
    2. 'return' → logprob: -1.7171168327331543
    3. ' return' → logprob: -4.217116832733154
    4. '	return' → logprob: -7.092116832733154
    5. ')' → logprob: -13.217117309570312
    6. ':return' → logprob: -13.217117309570312
    7. ' ' → logprob: -13.592117309570312
    8. ')return' → logprob: -13.842117309570312
    9. '  ' → logprob: -13.967117309570312
    10. 'def' → logprob: -14.967117309570312

Token 448: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.547789674485102e-05
    2. ' return' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.875036239624023
    4. '	return' → logprob: -19.125036239624023
    5. 'eturn' → logprob: -20.750036239624023
    6. '```' → logprob: -20.750036239624023
    7. 'ret' → logprob: -21.375036239624023
    8. ':return' → logprob: -21.625036239624023
    9. ')return' → logprob: -21.750036239624023
    10. '"""' → logprob: -22.000036239624023

Token 449: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -5.676981345459353e-06
    2. ' sep' → logprob: -12.250005722045898
    3. 'str' → logprob: -14.000005722045898
    4. ' ' → logprob: -19.1250057220459
    5. 'se' → logprob: -19.7500057220459
    6. 'f' → logprob: -19.8750057220459
    7. '.sep' → logprob: -20.0000057220459
    8. 'sept' → logprob: -20.3750057220459
    9. '   ' → logprob: -21.1250057220459
    10. 'separator' → logprob: -21.1250057220459

Token 450: '.join' (ID: 11004)
  Prédit: '.join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.14294953644275665
    2. '.' → logprob: -2.0179495811462402
    3. 'join' → logprob: -8.392949104309082
    4. ' .' → logprob: -10.267949104309082
    5. '.j' → logprob: -11.767949104309082
    6. '.Join' → logprob: -13.767949104309082
    7. ').' → logprob: -14.142949104309082
    8. '<|end|>' → logprob: -14.642949104309082
    9. ''.' → logprob: -14.892949104309082
    10. '.to' → logprob: -15.142949104309082

Token 451: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.04802817106246948
    2. '(str' → logprob: -3.2980282306671143
    3. 'map' → logprob: -4.798027992248535
    4. 'str' → logprob: -6.798027992248535
    5. '[str' → logprob: -7.548027992248535
    6. '([' → logprob: -10.798027992248535
    7. '(list' → logprob: -11.048027992248535
    8. 'list' → logprob: -12.298027992248535
    9. ' map' → logprob: -12.298027992248535
    10. '	map' → logprob: -13.548027992248535

Token 452: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0009125363430939615
    2. 'str' → logprob: -7.000912666320801
    3. '```' → logprob: -14.6259126663208
    4. '=str' → logprob: -15.2509126663208
    5. '[str' → logprob: -15.7509126663208
    6. '(' → logprob: -16.250911712646484
    7. ' str' → logprob: -16.750911712646484
    8. '	str' → logprob: -17.000911712646484
    9. '
' → logprob: -18.125911712646484
    10. ':str' → logprob: -18.375911712646484

Token 453: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002543558832257986
    2. '(lst' → logprob: -6.6275434494018555
    3. ',l' → logprob: -6.7525434494018555
    4. 'lst' → logprob: -10.627543449401855
    5. ' ,' → logprob: -11.377543449401855
    6. ',
' → logprob: -12.127543449401855
    7. ',list' → logprob: -12.252543449401855
    8. ',ll' → logprob: -13.752543449401855
    9. ',List' → logprob: -14.252543449401855
    10. ',(' → logprob: -14.877543449401855

Token 454: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.0031784253660589457
    2. ' lst' → logprob: -5.753178596496582
    3. '(lst' → logprob: -14.878178596496582
    4. ' ' → logprob: -15.878178596496582
    5. '   ' → logprob: -15.878178596496582
    6. '  ' → logprob: -17.253177642822266
    7. '    ' → logprob: -17.378177642822266
    8. '.lst' → logprob: -18.753177642822266
    9. 'list' → logprob: -18.878177642822266
    10. '_lst' → logprob: -19.378177642822266

Token 455: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -7.3458322731312364e-06
    2. ')' → logprob: -12.500007629394531
    3. '))
' → logprob: -13.125007629394531
    4. ' ))' → logprob: -14.375007629394531
    5. ')))' → logprob: -14.625007629394531
    6. '()))' → logprob: -14.750007629394531
    7. '));' → logprob: -17.25000762939453
    8. '))

' → logprob: -17.50000762939453
    9. '))+' → logprob: -18.62500762939453
    10. ' ' → logprob: -18.62500762939453

Token 456: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15819688141345978
    2. '<|end|>' → logprob: -2.5331969261169434
    3. ')' → logprob: -3.0331969261169434
    4. '
' → logprob: -4.908196926116943
    5. '#' → logprob: -4.908196926116943
    6. 'newline' → logprob: -6.533196926116943
    7. '<|end|>' → logprob: -7.408196926116943
    8. '\n' → logprob: -7.533196926116943
    9. '```' → logprob: -8.283196449279785
    10. '

' → logprob: -8.908196449279785

Token 457: ' DEC' (ID: 65456)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3353685140609741
    2. 'L' → logprob: -2.9603686332702637
    3. 'LS' → logprob: -3.0853686332702637
    4. 'LT' → logprob: -3.2103686332702637
    5. 'print' → logprob: -3.4603686332702637
    6. 'ST' → logprob: -3.8353686332702637
    7. 'OTS' → logprob: -4.960368633270264
    8. 'LO' → logprob: -4.960368633270264
    9. ' main' → logprob: -4.960368633270264
    10. 'list' → logprob: -4.960368633270264

Token 458: '(lst' (ID: 95688)
  Prédit: 'IMAL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IMAL' → logprob: -0.8134229779243469
    2. 'ODE' → logprob: -1.4384229183197021
    3. '(' → logprob: -2.188422918319702
    4. '()' → logprob: -2.813422918319702
    5. 'def' → logprob: -3.063422918319702
    6. 'imal' → logprob: -3.813422918319702
    7. '(def' → logprob: -5.188423156738281
    8. ')' → logprob: -5.313423156738281
    9. 'IM' → logprob: -5.438423156738281
    10. 'O' → logprob: -5.688423156738281

Token 459: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.296764075756073
    2. '):' → logprob: -1.4217641353607178
    3. '):
' → logprob: -4.546763896942139
    4. ':list' → logprob: -5.546763896942139
    5. ',' → logprob: -7.296763896942139
    6. ' :' → logprob: -9.171764373779297
    7. ' ):' → logprob: -9.421764373779297
    8. '(lst' → logprob: -10.046764373779297
    9. '):
' → logprob: -10.546764373779297
    10. ')' → logprob: -10.671764373779297

Token 460: ' list' (ID: 1562)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.11947242170572281
    2. ' lst' → logprob: -2.4944725036621094
    3. 'list' → logprob: -3.7444725036621094
    4. 'List' → logprob: -5.869472503662109
    5. ' list' → logprob: -6.994472503662109
    6. 'st' → logprob: -8.11947250366211
    7. '(lst' → logprob: -8.11947250366211
    8. '[List' → logprob: -8.24447250366211
    9. '[' → logprob: -8.61947250366211
    10. ' List' → logprob: -8.61947250366211

Token 461: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0472462959587574
    2. '):
' → logprob: -3.547246217727661
    3. ')' → logprob: -4.17224645614624
    4. ',' → logprob: -6.29724645614624
    5. ' ):' → logprob: -10.172245979309082
    6. '[]):' → logprob: -11.172245979309082
    7. '):
' → logprob: -11.422245979309082
    8. ')->' → logprob: -12.297245979309082
    9. '):

' → logprob: -12.297245979309082
    10. ':' → logprob: -12.922245979309082

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4571380019187927
    2. 'd' → logprob: -2.2071380615234375
    3. 'return' → logprob: -2.2071380615234375
    4. 'for' → logprob: -2.2071380615234375
    5. 'cnt' → logprob: -4.4571380615234375
    6. 'c' → logprob: -5.2071380615234375
    7. 'counter' → logprob: -5.8321380615234375
    8. 'res' → logprob: -6.0821380615234375
    9. 'ret' → logprob: -6.0821380615234375
    10. 'lst' → logprob: -6.3321380615234375

Token 463: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5797371864318848
    2. 'for' → logprob: -0.9547371864318848
    3. 'd' → logprob: -3.5797371864318848
    4. 'lst' → logprob: -4.579737186431885
    5. '   ' → logprob: -5.329737186431885
    6. 'counter' → logprob: -5.954737186431885
    7. 'cnt' → logprob: -5.954737186431885
    8. 'c' → logprob: -6.829737186431885
    9. 'res' → logprob: -7.079737186431885
    10. 'ret' → logprob: -7.079737186431885

Token 464: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5142862200737
    2. 'Counter' → logprob: -1.7642862796783447
    3. 'list' → logprob: -3.1392862796783447
    4. 'deque' → logprob: -3.1392862796783447
    5. '[min' → logprob: -3.5142862796783447
    6. '[len' → logprob: -3.5142862796783447
    7. 'lst' → logprob: -3.8892862796783447
    8. '[l' → logprob: -4.764286041259766
    9. 'sum' → logprob: -4.889286041259766
    10. '[list' → logprob: -4.889286041259766

Token 465: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.5541930794715881
    2. '(re' → logprob: -1.0541930198669434
    3. '(acc' → logprob: -3.5541930198669434
    4. '(sorted' → logprob: -4.304193019866943
    5. '(set' → logprob: -5.054193019866943
    6. '(de' → logprob: -5.054193019866943
    7. '(' → logprob: -5.179193019866943
    8. '(dict' → logprob: -5.304193019866943
    9. '(range' → logprob: -6.179193019866943
    10. '(counter' → logprob: -6.554193019866943

Token 466: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.014094396494328976
    2. '(int' → logprob: -4.639094352722168
    3. '(operator' → logprob: -5.764094352722168
    4. '(chr' → logprob: -7.514094352722168
    5. '(' → logprob: -8.889094352722168
    6. '(abs' → logprob: -9.264094352722168
    7. '(bool' → logprob: -9.389094352722168
    8. '(re' → logprob: -9.639094352722168
    9. '(f' → logprob: -10.014094352722168
    10. '(de' → logprob: -10.389094352722168

Token 467: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.26255908608436584
    2. 'lambda' → logprob: -1.5125590562820435
    3. ' x' → logprob: -5.512558937072754
    4. 'e' → logprob: -5.762558937072754
    5. ' lambda' → logprob: -6.887558937072754
    6. '(lambda' → logprob: -7.262558937072754
    7. 'int' → logprob: -7.762558937072754
    8. 'a' → logprob: -7.762558937072754
    9. 'i' → logprob: -8.512558937072754
    10. 's' → logprob: -9.387558937072754

Token 468: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016372520476579666
    2. ' :' → logprob: -4.1413726806640625
    3. ':x' → logprob: -9.016372680664062
    4. ',' → logprob: -9.516372680664062
    5. ' x' → logprob: -9.766372680664062
    6. 'x' → logprob: -10.391372680664062
    7. ':int' → logprob: -10.516372680664062
    8. ':
' → logprob: -12.016372680664062
    9. ':-' → logprob: -12.141372680664062
    10. '-' → logprob: -12.391372680664062

Token 469: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.028613194823265076
    2. 'int' → logprob: -4.278613090515137
    3. ' x' → logprob: -5.653613090515137
    4. 'max' → logprob: -5.903613090515137
    5. '-' → logprob: -6.028613090515137
    6. '1' → logprob: -6.278613090515137
    7. 'str' → logprob: -7.278613090515137
    8. 'chr' → logprob: -7.278613090515137
    9. 'not' → logprob: -7.778613090515137
    10. 'float' → logprob: -8.403613090515137

Token 470: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1925261914730072
    2. ' -' → logprob: -1.9425262212753296
    3. ':' → logprob: -3.56752610206604
    4. '+' → logprob: -6.067526340484619
    5. ':x' → logprob: -7.567526340484619
    6. '-x' → logprob: -8.817525863647461
    7. ' +' → logprob: -8.942525863647461
    8. ' :' → logprob: -9.192525863647461
    9. 'x' → logprob: -9.317525863647461
    10. ',' → logprob: -10.442525863647461

Token 471: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021877337712794542
    2. ' ' → logprob: -6.127187728881836
    3. '=' → logprob: -13.252187728881836
    4. '   ' → logprob: -15.002187728881836
    5. '0' → logprob: -15.752187728881836
    6. '  ' → logprob: -16.002187728881836
    7. '<|end|>' → logprob: -16.377187728881836
    8. '2' → logprob: -16.877187728881836
    9. '[' → logprob: -17.252187728881836
    10. '-' → logprob: -17.814687728881836

Token 472: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.6087021473795176e-05
    2. ' ' → logprob: -10.000045776367188
    3. '=' → logprob: -15.125045776367188
    4. '0' → logprob: -15.625045776367188
    5. '(' → logprob: -16.875045776367188
    6. '[' → logprob: -17.250045776367188
    7. '2' → logprob: -17.750045776367188
    8. '１' → logprob: -17.750045776367188
    9. 'int' → logprob: -17.875045776367188
    10. '   ' → logprob: -18.312545776367188

Token 473: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.65707261255011e-06
    2. ',l' → logprob: -12.000008583068848
    3. ' ,' → logprob: -13.375008583068848
    4. 'lst' → logprob: -15.000008583068848
    5. ',
' → logprob: -15.125008583068848
    6. ',list' → logprob: -16.500009536743164
    7. ',ll' → logprob: -17.625009536743164
    8. '(lst' → logprob: -18.125009536743164
    9. ',n' → logprob: -18.125009536743164
    10. ',x' → logprob: -18.625009536743164

Token 474: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.0002613358374219388
    2. ' lst' → logprob: -8.250261306762695
    3. '(lst' → logprob: -17.500261306762695
    4. 'list' → logprob: -19.250261306762695
    5. '.lst' → logprob: -20.125261306762695
    6. '_lst' → logprob: -20.500261306762695
    7. 'ls' → logprob: -21.375261306762695
    8. ' ' → logprob: -22.000261306762695
    9. 'Lst' → logprob: -22.500261306762695
    10. '   ' → logprob: -22.750261306762695

Token 475: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00023393364972434938
    2. ')' → logprob: -8.75023365020752
    3. ',' → logprob: -9.75023365020752
    4. ' ))' → logprob: -12.12523365020752
    5. '))
' → logprob: -12.25023365020752
    6. ')))' → logprob: -13.12523365020752
    7. '),' → logprob: -13.25023365020752
    8. '));' → logprob: -14.25023365020752
    9. 'lst' → logprob: -14.37523365020752
    10. '<|end|>' → logprob: -15.00023365020752

Token 476: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006333059631288052
    2. '<|end|>' → logprob: -5.131332874298096
    3. '#' → logprob: -8.881333351135254
    4. 'class' → logprob: -9.506333351135254
    5. '[' → logprob: -10.006333351135254
    6. '<|end|>' → logprob: -10.131333351135254
    7. ')' → logprob: -10.631333351135254
    8. '0' → logprob: -11.006333351135254
    9. '[]' → logprob: -11.381333351135254
    10. ' def' → logprob: -11.756333351135254

Token 477: ' INC' (ID: 37525)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3722388744354248
    2. ' main' → logprob: -2.247238874435425
    3. 'D' → logprob: -3.997238874435425
    4. 'L' → logprob: -4.997239112854004
    5. 'DEC' → logprob: -4.997239112854004
    6. 'LC' → logprob: -5.122239112854004
    7. 'input' → logprob: -5.122239112854004
    8. 'INC' → logprob: -5.372239112854004
    9. 'BIT' → logprob: -5.434739112854004
    10. 'DC' → logprob: -5.434739112854004

Token 478: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -1.981667537620524e-06
    2. '(list' → logprob: -14.625001907348633
    3. '(ls' → logprob: -14.625001907348633
    4. 'lst' → logprob: -15.125001907348633
    5. '(lambda' → logprob: -15.125001907348633
    6. '(lista' → logprob: -15.250001907348633
    7. '(' → logprob: -15.500001907348633
    8. '(arr' → logprob: -17.875001907348633
    9. '(s' → logprob: -18.000001907348633
    10. 'def' → logprob: -18.000001907348633

Token 479: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06925514340400696
    2. '(lst' → logprob: -2.8192551136016846
    3. ':list' → logprob: -5.194255352020264
    4. '):' → logprob: -6.694255352020264
    5. ',' → logprob: -8.069254875183105
    6. ' :' → logprob: -9.444254875183105
    7. '(list' → logprob: -10.569254875183105
    8. 'lst' → logprob: -11.569254875183105
    9. ' lst' → logprob: -12.194254875183105
    10. '):
' → logprob: -12.444254875183105

Token 480: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00377133977599442
    2. ' list' → logprob: -5.7537713050842285
    3. 'lst' → logprob: -8.378771781921387
    4. '(list' → logprob: -8.503771781921387
    5. 'lambda' → logprob: -9.503771781921387
    6. 'List' → logprob: -10.378771781921387
    7. '=list' → logprob: -11.003771781921387
    8. ':list' → logprob: -11.003771781921387
    9. '[list' → logprob: -11.753771781921387
    10. '_list' → logprob: -13.253771781921387

Token 481: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2449456751346588
    2. '(lst' → logprob: -1.7449456453323364
    3. '):
' → logprob: -3.244945764541626
    4. ':list' → logprob: -6.619945526123047
    5. ')' → logprob: -6.869945526123047
    6. '(list' → logprob: -7.369945526123047
    7. ':' → logprob: -8.369945526123047
    8. '[]):' → logprob: -9.744945526123047
    9. '):

' → logprob: -9.869945526123047
    10. 'lst' → logprob: -9.994945526123047

Token 482: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04775500297546387
    2. 'return' → logprob: -3.172755002975464
    3. ' return' → logprob: -5.797755241394043
    4. ')' → logprob: -6.672755241394043
    5. '	return' → logprob: -8.797755241394043
    6. ':' → logprob: -9.547755241394043
    7. '):
' → logprob: -9.922755241394043
    8. ':return' → logprob: -9.922755241394043
    9. '=' → logprob: -10.297755241394043
    10. ' =' → logprob: -10.797755241394043

Token 483: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004090508911758661
    2. ' return' → logprob: -5.504090309143066
    3. '   ' → logprob: -11.629090309143066
    4. 'list' → logprob: -13.629090309143066
    5. 'def' → logprob: -13.879090309143066
    6. '	return' → logprob: -15.129090309143066
    7. 'eturn' → logprob: -15.504090309143066
    8. ')' → logprob: -15.879090309143066
    9. ':return' → logprob: -15.879090309143066
    10. ')return' → logprob: -16.004091262817383

Token 484: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0003528622619342059
    2. ' list' → logprob: -8.00035285949707
    3. '[list' → logprob: -11.00035285949707
    4. '[' → logprob: -14.12535285949707
    5. ' [' → logprob: -17.12535285949707
    6. '(list' → logprob: -17.75035285949707
    7. 'lst' → logprob: -17.75035285949707
    8. '	list' → logprob: -19.50035285949707
    9. 'List' → logprob: -19.87535285949707
    10. '   ' → logprob: -20.50035285949707

Token 485: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -8.895480277715251e-06
    2. 'map' → logprob: -12.000008583068848
    3. '(lambda' → logprob: -12.875008583068848
    4. '(' → logprob: -17.000009536743164
    5. '	map' → logprob: -18.000009536743164
    6. '(range' → logprob: -18.750009536743164
    7. ' map' → logprob: -19.625009536743164
    8. ',map' → logprob: -19.625009536743164
    9. '   ' → logprob: -20.000009536743164
    10. '(list' → logprob: -20.000009536743164

Token 486: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -9.579495235811919e-05
    2. '(' → logprob: -9.50009536743164
    3. ' (' → logprob: -11.25009536743164
    4. 'lambda' → logprob: -11.87509536743164
    5. '   ' → logprob: -14.62509536743164
    6. '=lambda' → logprob: -15.75009536743164
    7. '(
' → logprob: -15.87509536743164
    8. ' lambda' → logprob: -16.12509536743164
    9. '(l' → logprob: -16.37509536743164
    10. '```' → logprob: -18.25009536743164

Token 487: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.10278449952602386
    2. 'x' → logprob: -2.3527843952178955
    3. '(x' → logprob: -5.977784633636475
    4. ' lambda' → logprob: -11.352784156799316
    5. ' (' → logprob: -11.477784156799316
    6. '(lambda' → logprob: -11.602784156799316
    7. 'lambda' → logprob: -12.102784156799316
    8. '	x' → logprob: -13.477784156799316
    9. ' ' → logprob: -13.977784156799316
    10. '   ' → logprob: -14.352784156799316

Token 488: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002141458389814943
    2. ' :' → logprob: -8.750214576721191
    3. ':x' → logprob: -10.125214576721191
    4. ' x' → logprob: -11.750214576721191
    5. '   ' → logprob: -13.250214576721191
    6. 'x' → logprob: -13.250214576721191
    7. '(x' → logprob: -13.500214576721191
    8. '(' → logprob: -13.625214576721191
    9. '+' → logprob: -14.875214576721191
    10. ',' → logprob: -14.875214576721191

Token 489: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0036087436601519585
    2. ' x' → logprob: -5.628608703613281
    3. 'lambda' → logprob: -12.378608703613281
    4. '   ' → logprob: -12.503608703613281
    5. '	x' → logprob: -15.378608703613281
    6. '(x' → logprob: -15.378608703613281
    7. '  ' → logprob: -15.753608703613281
    8. ' ' → logprob: -16.00360870361328
    9. '    ' → logprob: -17.75360870361328
    10. ' lambda' → logprob: -17.75360870361328

Token 490: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6022384762763977
    2. '+' → logprob: -0.9772384762763977
    3. 'x' → logprob: -3.102238416671753
    4. ' +' → logprob: -3.727238416671753
    5. ' x' → logprob: -5.477238655090332
    6. '   ' → logprob: -6.602238655090332
    7. '+x' → logprob: -7.477238655090332
    8. ' ' → logprob: -8.477238655090332
    9. '(x' → logprob: -8.602238655090332
    10. '+:' → logprob: -8.852238655090332

Token 491: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005773392622359097
    2. ' ' → logprob: -7.500577449798584
    3. 'x' → logprob: -11.250576972961426
    4. ' x' → logprob: -11.625576972961426
    5. '   ' → logprob: -13.750576972961426
    6. ',' → logprob: -14.625576972961426
    7. '  ' → logprob: -15.000576972961426
    8. '```' → logprob: -15.500576972961426
    9. '(x' → logprob: -16.125577926635742
    10. '(' → logprob: -16.500577926635742

Token 492: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00039492646465077996
    2. 'x' → logprob: -7.875394821166992
    3. ' ' → logprob: -11.250394821166992
    4. ' x' → logprob: -14.250394821166992
    5. 'lst' → logprob: -14.750394821166992
    6. '   ' → logprob: -15.375394821166992
    7. '(x' → logprob: -15.500394821166992
    8. '(' → logprob: -16.125394821166992
    9. ',' → logprob: -16.500394821166992
    10. '-' → logprob: -16.500394821166992

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.465036105713807e-06
    2. ' ,' → logprob: -12.125007629394531
    3. ',l' → logprob: -13.875007629394531
    4. 'lst' → logprob: -14.500007629394531
    5. ',
' → logprob: -15.625007629394531
    6. '(lst' → logprob: -15.875007629394531
    7. ',list' → logprob: -16.00000762939453
    8. ' lst' → logprob: -17.75000762939453
    9. '),' → logprob: -18.25000762939453
    10. ',List' → logprob: -18.75000762939453

Token 494: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.005234832875430584
    2. ' lst' → logprob: -5.255234718322754
    3. '(lst' → logprob: -14.380234718322754
    4. 'list' → logprob: -14.880234718322754
    5. ' ' → logprob: -16.50523567199707
    6. 'ls' → logprob: -16.88023567199707
    7. '.lst' → logprob: -17.50523567199707
    8. '    ' → logprob: -18.00523567199707
    9. '  ' → logprob: -18.00523567199707
    10. '   ' → logprob: -18.00523567199707

Token 495: '))

' (ID: 9746)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001970150275155902
    2. ',l' → logprob: -7.126970291137695
    3. '),' → logprob: -7.501970291137695
    4. '(lst' → logprob: -7.876970291137695
    5. 'lst' → logprob: -9.251970291137695
    6. ' ,' → logprob: -9.876970291137695
    7. ')' → logprob: -10.376970291137695
    8. '))' → logprob: -10.626970291137695
    9. ',list' → logprob: -11.501970291137695
    10. ',
' → logprob: -11.876970291137695

Token 496: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003514667972922325
    2. '#' → logprob: -6.003514766693115
    3. '<|end|>' → logprob: -7.628514766693115
    4. 'class' → logprob: -8.003514289855957
    5. 'if' → logprob: -10.128514289855957
    6. ')' → logprob: -10.628514289855957
    7. 'from' → logprob: -10.753514289855957
    8. '[' → logprob: -10.753514289855957
    9. 'de' → logprob: -11.128514289855957
    10. 'import' → logprob: -11.253514289855957

Token 497: ' Queue' (ID: 35581)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.6756072640419006
    2. ' deque' → logprob: -0.8006072640419006
    3. ' defaultdict' → logprob: -3.800607204437256
    4. ' list' → logprob: -5.050607204437256
    5. ' Counter' → logprob: -5.300607204437256
    6. 'list' → logprob: -6.175607204437256
    7. 'Counter' → logprob: -6.425607204437256
    8. 'Deque' → logprob: -6.550607204437256
    9. ' dict' → logprob: -6.675607204437256
    10. 'dict' → logprob: -7.175607204437256

Token 498: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00027921271976083517
    2. '():' → logprob: -8.875279426574707
    3. '(object' → logprob: -10.000279426574707
    4. ':
' → logprob: -10.250279426574707
    5. '(' → logprob: -10.375279426574707
    6. 'deque' → logprob: -11.500279426574707
    7. '):' → logprob: -12.250279426574707
    8. '>:' → logprob: -12.875279426574707
    9. ':def' → logprob: -13.250279426574707
    10. '(queue' → logprob: -13.250279426574707

Token 499: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06942242383956909
    2. ':' → logprob: -3.444422483444214
    3. 'deque' → logprob: -4.194422245025635
    4. '(object' → logprob: -5.069422245025635
    5. 'def' → logprob: -5.319422245025635
    6. ' deque' → logprob: -5.944422245025635
    7. '	def' → logprob: -6.194422245025635
    8. ':
' → logprob: -6.694422245025635
    9. '(' → logprob: -7.069422245025635
    10. ' def' → logprob: -7.444422245025635

Token 500: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.49186182022094727
    2. ' def' → logprob: -0.9918618202209473
    3. '   ' → logprob: -4.116861820220947
    4. 'deque' → logprob: -7.616861820220947
    5. ' deque' → logprob: -7.741861820220947
    6. '	def' → logprob: -8.866861343383789
    7. ' __' → logprob: -9.366861343383789
    8. 'from' → logprob: -9.741861343383789
    9. '__' → logprob: -10.366861343383789
    10. 'de' → logprob: -10.491861343383789

Token 501: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10783510655164719
    2. ' __' → logprob: -2.857835054397583
    3. 'init' → logprob: -3.107835054397583
    4. '_init' → logprob: -9.107834815979004
    5. ' init' → logprob: -11.482834815979004
    6. 'def' → logprob: -11.857834815979004
    7. '___' → logprob: -13.232834815979004
    8. '_' → logprob: -13.607834815979004
    9. '.__' → logprob: -14.357834815979004
    10. 'append' → logprob: -14.482834815979004

Token 502: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. 'ini' → logprob: -15.500000953674316
    3. 'in' → logprob: -15.875000953674316
    4. 'i' → logprob: -16.375
    5. 'inite' → logprob: -18.0
    6. 'innit' → logprob: -18.5
    7. 'inti' → logprob: -19.25
    8. 'int' → logprob: -20.0
    9. 'initi' → logprob: -20.375
    10. '_init' → logprob: -20.75

Token 503: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0804554671049118
    2. '(self' → logprob: -2.5804555416107178
    3. '(' → logprob: -6.705455303192139
    4. '__' → logprob: -8.330455780029297
    5. ' (' → logprob: -10.580455780029297
    6. '__(
' → logprob: -10.705455780029297
    7. '_(' → logprob: -11.455455780029297
    8. 'self' → logprob: -11.455455780029297
    9. '(this' → logprob: -12.205455780029297
    10. '(s' → logprob: -12.955455780029297

Token 504: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.180258191714529e-06
    2. ')' → logprob: -12.250008583068848
    3. ' self' → logprob: -12.750008583068848
    4. '):
' → logprob: -15.250008583068848
    5. '	self' → logprob: -16.87500762939453
    6. '
' → logprob: -17.37500762939453
    7. '(self' → logprob: -18.00000762939453
    8. ')(' → logprob: -18.00000762939453
    9. '):' → logprob: -18.12500762939453
    10. 's' → logprob: -18.25000762939453

Token 505: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00438667880371213
    2. ',' → logprob: -6.504386901855469
    3. ')(' → logprob: -7.129386901855469
    4. '):' → logprob: -7.129386901855469
    5. 'self' → logprob: -7.629386901855469
    6. '__(' → logprob: -8.004386901855469
    7. '):
' → logprob: -9.254386901855469
    8. '():' → logprob: -9.254386901855469
    9. ' (' → logprob: -9.379386901855469
    10. '(' → logprob: -9.754386901855469

Token 506: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017317025922238827
    2. '():' → logprob: -7.251731872558594
    3. '():
' → logprob: -7.501731872558594
    4. '(' → logprob: -7.751731872558594
    5. 'self' → logprob: -10.626731872558594
    6. '()' → logprob: -12.001731872558594
    7. ' (' → logprob: -12.751731872558594
    8. '(Self' → logprob: -13.001731872558594
    9. ':' → logprob: -13.501731872558594
    10. '(se' → logprob: -14.251731872558594

Token 507: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.1002068892121315
    2. ' None' → logprob: -2.3502068519592285
    3. 'object' → logprob: -15.225207328796387
    4. '_None' → logprob: -17.35020637512207
    5. '(None' → logprob: -18.35020637512207
    6. 'none' → logprob: -18.72520637512207
    7. ' object' → logprob: -19.35020637512207
    8. 'void' → logprob: -19.47520637512207
    9. '   ' → logprob: -19.60020637512207
    10. 'self' → logprob: -19.85020637512207

Token 508: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002875369042158127
    2. '       ' → logprob: -6.752875328063965
    3. '   ' → logprob: -7.627875328063965
    4. ':' → logprob: -7.627875328063965
    5. '(' → logprob: -7.752875328063965
    6. ':
' → logprob: -9.002875328063965
    7. ' (' → logprob: -10.002875328063965
    8. 'self' → logprob: -10.377875328063965
    9. '(s' → logprob: -10.502875328063965
    10. ',' → logprob: -11.252875328063965

Token 509: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09653370082378387
    2. 'self' → logprob: -2.59653377532959
    3. '   ' → logprob: -4.97153377532959
    4. ' self' → logprob: -5.59653377532959
    5. '
' → logprob: -5.72153377532959
    6. ' ' → logprob: -6.84653377532959
    7. '	self' → logprob: -7.97153377532959
    8. 'def' → logprob: -8.34653377532959
    9. '    
' → logprob: -8.47153377532959
    10. '	' → logprob: -8.47153377532959

Token 510: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.16419394314289093
    2. '       ' → logprob: -1.9141939878463745
    3. 'from' → logprob: -5.914194107055664
    4. ' self' → logprob: -6.789194107055664
    5. '   ' → logprob: -9.789194107055664
    6. 'import' → logprob: -10.039194107055664
    7. '	self' → logprob: -11.414194107055664
    8. 'super' → logprob: -11.539194107055664
    9. '	' → logprob: -11.914194107055664
    10. ' from' → logprob: -12.039194107055664

Token 511: '.items' (ID: 19607)
  Prédit: '.queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.queue' → logprob: -0.10250694304704666
    2. '._' → logprob: -2.9775068759918213
    3. '.' → logprob: -3.3525068759918213
    4. '.dequeue' → logprob: -4.9775071144104
    5. 'deque' → logprob: -7.1025071144104
    6. ':' → logprob: -7.1025071144104
    7. '.q' → logprob: -7.2275071144104
    8. '.Queue' → logprob: -7.3525071144104
    9. '.data' → logprob: -8.477506637573242
    10. '.stack' → logprob: -8.477506637573242

Token 512: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011057018302381039
    2. ' =' → logprob: -4.511056900024414
    3. ':' → logprob: -11.761056900024414
    4. '=[]' → logprob: -13.761056900024414
    5. 'deque' → logprob: -15.261056900024414
    6. ' ' → logprob: -16.761056900024414
    7. '＝' → logprob: -17.011056900024414
    8. '   ' → logprob: -17.511056900024414
    9. '	' → logprob: -18.886056900024414
    10. '.' → logprob: -19.261056900024414

Token 513: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.008619893342256546
    2. ' deque' → logprob: -4.758619785308838
    3. 'de' → logprob: -12.383620262145996
    4. '[]' → logprob: -13.883620262145996
    5. '	de' → logprob: -15.883620262145996
    6. ' []' → logprob: -16.38361930847168
    7. 'Deque' → logprob: -16.38361930847168
    8. ' dequeue' → logprob: -20.13361930847168
    9. ' de' → logprob: -20.25861930847168
    10. '.dequeue' → logprob: -20.63361930847168

Token 514: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.703443770878948e-06
    2. '()
' → logprob: -12.375007629394531
    3. '()

' → logprob: -13.500007629394531
    4. '([]' → logprob: -13.500007629394531
    5. '(' → logprob: -15.000007629394531
    6. '[]' → logprob: -15.875007629394531
    7. '()]' → logprob: -16.62500762939453
    8. '()\' → logprob: -16.62500762939453
    9. '（）' → logprob: -17.50000762939453
    10. ' ()' → logprob: -17.87500762939453

Token 515: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 516: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 517: ' is' (ID: 382)
  Prédit: 'enqueue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enqueue' → logprob: -0.5488463044166565
    2. ' enqueue' → logprob: -0.9238463044166565
    3. 'empty' → logprob: -5.048846244812012
    4. ' empty' → logprob: -5.048846244812012
    5. 'push' → logprob: -5.298846244812012
    6. ' push' → logprob: -6.048846244812012
    7. ' is' → logprob: -6.548846244812012
    8. ' en' → logprob: -7.048846244812012
    9. 'put' → logprob: -7.048846244812012
    10. 'en' → logprob: -7.798846244812012

Token 518: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -0.00029351349803619087
    2. '_' → logprob: -8.750293731689453
    3. 'empty' → logprob: -9.625293731689453
    4. 'Empty' → logprob: -9.625293731689453
    5. '_EMPTY' → logprob: -13.375293731689453
    6. ' empty' → logprob: -13.625293731689453
    7. '_emp' → logprob: -16.625293731689453
    8. '_em' → logprob: -17.000293731689453
    9. ' Empty' → logprob: -17.625293731689453
    10. '_full' → logprob: -17.750293731689453

Token 519: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03006032481789589
    2. '()' → logprob: -4.155060291290283
    3. '(' → logprob: -4.280060291290283
    4. 'self' → logprob: -9.905060768127441
    5. '():' → logprob: -10.530060768127441
    6. '(s' → logprob: -12.780060768127441
    7. ' (' → logprob: -13.030060768127441
    8. '(Self' → logprob: -14.405060768127441
    9. ' ' → logprob: -14.655060768127441
    10. 's' → logprob: -14.655060768127441

Token 520: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22821252048015594
    2. '():' → logprob: -1.8532124757766724
    3. '()' → logprob: -3.353212594985962
    4. ')' → logprob: -4.478212356567383
    5. '())' → logprob: -7.978212356567383
    6. '):
' → logprob: -8.478212356567383
    7. '(' → logprob: -9.228212356567383
    8. 'self' → logprob: -9.353212356567383
    9. '()):
' → logprob: -9.478212356567383
    10. '(self' → logprob: -9.603212356567383

Token 521: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0036594532430171967
    2. '(' → logprob: -6.253659248352051
    3. 'self' → logprob: -6.628659248352051
    4. ':' → logprob: -8.37865924835205
    5. '():' → logprob: -8.87865924835205
    6. '(s' → logprob: -11.50365924835205
    7. '->' → logprob: -11.87865924835205
    8. '()' → logprob: -12.25365924835205
    9. '(se' → logprob: -12.62865924835205
    10. 's' → logprob: -12.75365924835205

Token 522: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.016406873241066933
    2. ' bool' → logprob: -4.266407012939453
    3. 'True' → logprob: -6.141407012939453
    4. ' True' → logprob: -9.516407012939453
    5. 'False' → logprob: -12.391407012939453
    6. 'Bool' → logprob: -12.516407012939453
    7. '(bool' → logprob: -13.141407012939453
    8. '<bool' → logprob: -13.266407012939453
    9. ' ' → logprob: -14.141407012939453
    10. '	bool' → logprob: -14.266407012939453

Token 523: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6567568182945251
    2. '(self' → logprob: -0.7817568182945251
    3. ':' → logprob: -3.90675687789917
    4. '(' → logprob: -5.90675687789917
    5. 'self' → logprob: -7.15675687789917
    6. '():
' → logprob: -8.656756401062012
    7. '()' → logprob: -9.906756401062012
    8. '):' → logprob: -11.031756401062012
    9. '(s' → logprob: -12.781756401062012
    10. ' self' → logprob: -12.906756401062012

Token 524: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07907881587743759
    2. 'return' → logprob: -2.7040789127349854
    3. ' return' → logprob: -4.704078674316406
    4. '	return' → logprob: -10.829078674316406
    5. '   ' → logprob: -11.829078674316406
    6. '	' → logprob: -12.204078674316406
    7. '{return' → logprob: -12.704078674316406
    8. ':return' → logprob: -12.954078674316406
    9. '
' → logprob: -13.829078674316406
    10. '<|end|>' → logprob: -14.079078674316406

Token 525: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011146031320095062
    2. ' return' → logprob: -4.511146068572998
    3. '       ' → logprob: -9.26114559173584
    4. '	return' → logprob: -12.88614559173584
    5. '   ' → logprob: -14.26114559173584
    6. '{return' → logprob: -18.386146545410156
    7. '    ' → logprob: -18.511146545410156
    8. '	' → logprob: -18.886146545410156
    9. ':return' → logprob: -19.136146545410156
    10. ' ' → logprob: -19.386146545410156

Token 526: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.007106886710971594
    2. 'not' → logprob: -5.007106781005859
    3. ' len' → logprob: -8.00710678100586
    4. ' not' → logprob: -9.75710678100586
    5. 'self' → logprob: -15.00710678100586
    6. '(len' → logprob: -16.50710678100586
    7. '	len' → logprob: -19.00710678100586
    8. 'False' → logprob: -19.63210678100586
    9. '(not' → logprob: -21.13210678100586
    10. '   ' → logprob: -21.25710678100586

Token 527: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009153862483799458
    2. '(' → logprob: -7.00091552734375
    3. 'self' → logprob: -12.62591552734375
    4. ' self' → logprob: -14.75091552734375
    5. ' (' → logprob: -16.37591552734375
    6. '(
' → logprob: -17.50091552734375
    7. '()' → logprob: -18.25091552734375
    8. '(this' → logprob: -18.37591552734375
    9. '	self' → logprob: -18.75091552734375
    10. '(s' → logprob: -19.00091552734375

Token 528: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0010749688372015953
    2. '.' → logprob: -7.75107479095459
    3. 'self' → logprob: -8.00107479095459
    4. 'items' → logprob: -8.62607479095459
    5. '(self' → logprob: -10.12607479095459
    6. '.self' → logprob: -10.62607479095459
    7. '(items' → logprob: -11.00107479095459
    8. ' .' → logprob: -11.00107479095459
    9. ' self' → logprob: -11.62607479095459
    10. '[self' → logprob: -12.37607479095459

Token 529: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11811250448226929
    2. ' ==' → logprob: -2.618112564086914
    3. ')' → logprob: -3.618112564086914
    4. ')==' → logprob: -4.493112564086914
    5. '()==' → logprob: -7.993112564086914
    6. '=' → logprob: -9.868112564086914
    7. '()' → logprob: -10.368112564086914
    8. ' )' → logprob: -11.618112564086914
    9. '===' → logprob: -12.243112564086914
    10. ']==' → logprob: -12.368112564086914

Token 530: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02989199198782444
    2. ' ==' → logprob: -3.5298919677734375
    3. '()==' → logprob: -9.029891967773438
    4. '=' → logprob: -11.904891967773438
    5. ')==' → logprob: -12.029891967773438
    6. '()' → logprob: -12.154891967773438
    7. ')' → logprob: -13.029891967773438
    8. '===' → logprob: -14.029891967773438
    9. '>' → logprob: -15.154891967773438
    10. '0' → logprob: -15.654891967773438

Token 531: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '۰' → logprob: -19.62501335144043
    4. '   ' → logprob: -20.25001335144043
    5. '  ' → logprob: -21.12501335144043
    6. '０' → logprob: -21.37501335144043
    7. '
' → logprob: -21.50001335144043
    8. '00' → logprob: -21.62501335144043
    9. ' ' → logprob: -21.75001335144043
    10. '    ' → logprob: -22.37501335144043

Token 532: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '۰' → logprob: -19.875
    4. '00' → logprob: -20.625
    5. '０' → logprob: -21.25
    6. '   ' → logprob: -22.25
    7. 'zero' → logprob: -22.375
    8. '```' → logprob: -22.5
    9. '٠' → logprob: -22.75
    10. '०' → logprob: -22.875

Token 533: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27888140082359314
    2. '   ' → logprob: -2.028881311416626
    3. '    
' → logprob: -2.278881311416626
    4. '  
' → logprob: -5.528881549835205
    5. '<|end|>' → logprob: -6.028881549835205
    6. ' 
' → logprob: -6.403881549835205
    7. '	
' → logprob: -7.653881549835205
    8. '   
' → logprob: -7.778881549835205
    9. 'def' → logprob: -9.153881072998047
    10. '        
' → logprob: -9.153881072998047

Token 534: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06261385977268219
    2. '
' → logprob: -3.5626139640808105
    3. '<|end|>' → logprob: -3.6876139640808105
    4. '    
' → logprob: -5.3126139640808105
    5. 'def' → logprob: -6.6876139640808105
    6. ' def' → logprob: -7.9376139640808105
    7. '<|end|>' → logprob: -8.312613487243652
    8. ' 
' → logprob: -8.687613487243652
    9. '	def' → logprob: -9.687613487243652
    10. ' ' → logprob: -9.812613487243652

Token 535: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10373176634311676
    2. ' def' → logprob: -2.353731870651245
    3. '   ' → logprob: -5.728731632232666
    4. '	def' → logprob: -8.353732109069824
    5. '    
' → logprob: -11.103732109069824
    6. '
' → logprob: -12.353732109069824
    7. ' ' → logprob: -12.603732109069824
    8. '<|end|>' → logprob: -12.603732109069824
    9. ':def' → logprob: -13.478732109069824
    10. ' 
' → logprob: -13.603732109069824

Token 536: ' enqueue' (ID: 117229)
  Prédit: 'enqueue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enqueue' → logprob: -0.06716487556695938
    2. 'push' → logprob: -3.567164897918701
    3. 'put' → logprob: -3.942164897918701
    4. 'pop' → logprob: -5.317164897918701
    5. 'en' → logprob: -5.442164897918701
    6. ' enqueue' → logprob: -5.692164897918701
    7. 'size' → logprob: -6.567164897918701
    8. 'de' → logprob: -6.942164897918701
    9. 'append' → logprob: -7.317164897918701
    10. 'p' → logprob: -7.317164897918701

Token 537: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00030602619517594576
    2. '(' → logprob: -8.125306129455566
    3. ' (' → logprob: -12.000306129455566
    4. '(item' → logprob: -13.750306129455566
    5. '(value' → logprob: -14.000306129455566
    6. '(s' → logprob: -14.375306129455566
    7. 'self' → logprob: -14.750306129455566
    8. '(
' → logprob: -15.750306129455566
    9. '(element' → logprob: -16.12530517578125
    10. 'def' → logprob: -16.12530517578125

Token 538: ',' (ID: 11)
  Prédit: '(item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.5258535146713257
    2. ')' → logprob: -1.7758535146713257
    3. ',' → logprob: -2.1508536338806152
    4. '(element' → logprob: -2.9008536338806152
    5. '(' → logprob: -3.5258536338806152
    6. '(value' → logprob: -3.9008536338806152
    7. ',item' → logprob: -5.650853633880615
    8. '(self' → logprob: -5.650853633880615
    9. '(token' → logprob: -6.150853633880615
    10. '(x' → logprob: -6.275853633880615

Token 539: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.44938936829566956
    2. ' item' → logprob: -1.4493893384933472
    3. 'x' → logprob: -2.4493894577026367
    4. ' x' → logprob: -3.1993894577026367
    5. 'value' → logprob: -9.699389457702637
    6. ' value' → logprob: -11.074389457702637
    7. ' val' → logprob: -11.324389457702637
    8. 'v' → logprob: -11.574389457702637
    9. 'element' → logprob: -11.824389457702637
    10. ' v' → logprob: -11.949389457702637

Token 540: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00956506934016943
    2. ')' → logprob: -5.2595648765563965
    3. '):
' → logprob: -5.5095648765563965
    4. ':' → logprob: -9.009565353393555
    5. ' ):' → logprob: -9.134565353393555
    6. ',' → logprob: -10.884565353393555
    7. '):

' → logprob: -11.634565353393555
    8. ' )' → logprob: -11.759565353393555
    9. '):
' → logprob: -13.009565353393555
    10. '(item' → logprob: -13.384565353393555

Token 541: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07690518349409103
    2. '):' → logprob: -2.9519052505493164
    3. ':
' → logprob: -4.576905250549316
    4. '(self' → logprob: -4.951905250549316
    5. '):
' → logprob: -6.326905250549316
    6. '():' → logprob: -7.076905250549316
    7. '   ' → logprob: -7.201905250549316
    8. '       ' → logprob: -8.451905250549316
    9. '(' → logprob: -8.576905250549316
    10. 'self' → logprob: -8.576905250549316

Token 542: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0024762547109276056
    2. ' None' → logprob: -6.002476215362549
    3. 'void' → logprob: -14.752476692199707
    4. '_None' → logprob: -15.627476692199707
    5. 'self' → logprob: -17.12747573852539
    6. 'none' → logprob: -17.25247573852539
    7. '(None' → logprob: -17.37747573852539
    8. 'True' → logprob: -17.62747573852539
    9. '_none' → logprob: -18.25247573852539
    10. '=None' → logprob: -19.25247573852539

Token 543: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011691815219819546
    2. ':
' → logprob: -4.511692047119141
    3. '):' → logprob: -8.26169204711914
    4. '       ' → logprob: -8.51169204711914
    5. '   ' → logprob: -9.38669204711914
    6. '(self' → logprob: -10.38669204711914
    7. '):
' → logprob: -10.88669204711914
    8. 'self' → logprob: -11.26169204711914
    9. ' :' → logprob: -11.76169204711914
    10. '():' → logprob: -11.88669204711914

Token 544: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04586734622716904
    2. ' self' → logprob: -3.420867443084717
    3. 'self' → logprob: -4.420867443084717
    4. '<|end|>' → logprob: -9.920866966247559
    5. '   ' → logprob: -11.170866966247559
    6. '	self' → logprob: -11.420866966247559
    7. '        
' → logprob: -11.670866966247559
    8. '(self' → logprob: -12.045866966247559
    9. ' ' → logprob: -12.170866966247559
    10. ' 
' → logprob: -12.170866966247559

Token 545: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0009163398644886911
    2. ' self' → logprob: -7.000916481018066
    3. '       ' → logprob: -12.250916481018066
    4. '   ' → logprob: -17.37591552734375
    5. '	self' → logprob: -17.87591552734375
    6. '(self' → logprob: -22.25091552734375
    7. ' ' → logprob: -22.62591552734375
    8. ' ' → logprob: -22.75091552734375
    9. '```' → logprob: -22.87591552734375
    10. '[self' → logprob: -23.12591552734375

Token 546: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -1.2233183042553719e-05
    2. '.' → logprob: -11.625012397766113
    3. 'items' → logprob: -12.875012397766113
    4. ' .' → logprob: -14.750012397766113
    5. '	items' → logprob: -16.250011444091797
    6. '.enqueue' → logprob: -16.500011444091797
    7. '.append' → logprob: -16.750011444091797
    8. '_items' → logprob: -18.000011444091797
    9. '.tasks' → logprob: -18.125011444091797
    10. '.
' → logprob: -18.250011444091797

Token 547: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.0629870858974755e-05
    2. '.' → logprob: -9.75006103515625
    3. '.app' → logprob: -14.00006103515625
    4. '.extend' → logprob: -14.12506103515625
    5. 'append' → logprob: -14.62506103515625
    6. '.enqueue' → logprob: -15.75006103515625
    7. '_append' → logprob: -16.87506103515625
    8. '.ap' → logprob: -17.12506103515625
    9. '.add' → logprob: -17.75006103515625
    10. '.Append' → logprob: -18.12506103515625

Token 548: 'left' (ID: 4530)
  Prédit: '(item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.0001414426224073395
    2. '(' → logprob: -8.875141143798828
    3. '=item' → logprob: -15.000141143798828
    4. '(
' → logprob: -15.625141143798828
    5. ',item' → logprob: -15.875141143798828
    6. '(Item' → logprob: -15.875141143798828
    7. ' (' → logprob: -16.000141143798828
    8. 'item' → logprob: -16.125141143798828
    9. '(items' → logprob: -16.125141143798828
    10. '(object' → logprob: -16.375141143798828

Token 549: '(item' (ID: 10016)
  Prédit: '(item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -2.236549335066229e-05
    2. '(' → logprob: -10.750021934509277
    3. 'item' → logprob: -14.375021934509277
    4. '=item' → logprob: -16.500022888183594
    5. ')item' → logprob: -16.750022888183594
    6. ',item' → logprob: -17.125022888183594
    7. '(object' → logprob: -17.500022888183594
    8. '(Item' → logprob: -17.625022888183594
    9. '(
' → logprob: -17.625022888183594
    10. '(items' → logprob: -19.000022888183594

Token 550: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.558399319241289e-05
    2. ')
' → logprob: -10.750025749206543
    3. '<|end|>' → logprob: -13.500025749206543
    4. '   ' → logprob: -13.625025749206543
    5. ')

' → logprob: -14.750025749206543
    6. ' )' → logprob: -14.750025749206543
    7. ')return' → logprob: -15.500025749206543
    8. '       ' → logprob: -16.000024795532227
    9. '()' → logprob: -16.000024795532227
    10. '<|end|>' → logprob: -16.000024795532227

Token 551: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012780738063156605
    2. '<|end|>' → logprob: -4.762780666351318
    3. '
' → logprob: -6.137780666351318
    4. ' 
' → logprob: -6.637780666351318
    5. '    
' → logprob: -8.762781143188477
    6. '  
' → logprob: -8.887781143188477
    7. ' ' → logprob: -9.387781143188477
    8. 'def' → logprob: -9.387781143188477
    9. '```' → logprob: -10.262781143188477
    10. '<|end|>' → logprob: -10.387781143188477

Token 552: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041444990783929825
    2. 'def' (adapté à ' def') → logprob: -3.416445016860962
    3. ' def' → logprob: -5.041444778442383
    4. '
' → logprob: -7.666444778442383
    5. '	def' → logprob: -7.916444778442383
    6. '    
' → logprob: -8.416444778442383
    7. ' 
' → logprob: -9.041444778442383
    8. ' ' → logprob: -10.291444778442383
    9. '  
' → logprob: -10.666444778442383
    10. '  ' → logprob: -10.916444778442383

Token 553: ' insert' (ID: 10898)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.00794338621199131
    2. ' dequeue' → logprob: -5.007943153381348
    3. 'deque' → logprob: -6.882943153381348
    4. 'def' → logprob: -9.132943153381348
    5. 'enqueue' → logprob: -9.632943153381348
    6. '.dequeue' → logprob: -11.257943153381348
    7. 'pop' → logprob: -11.257943153381348
    8. '	de' → logprob: -13.757943153381348
    9. ' deque' → logprob: -13.882943153381348
    10. 'p' → logprob: -15.507943153381348

Token 554: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05146663635969162
    2. '(' → logprob: -3.801466703414917
    3. '(item' → logprob: -4.301466464996338
    4. 'right' → logprob: -4.801466464996338
    5. '<|end|>' → logprob: -6.551466464996338
    6. 'self' → logprob: -7.176466464996338
    7. ')' → logprob: -7.426466464996338
    8. '_right' → logprob: -7.426466464996338
    9. 'append' → logprob: -7.551466464996338
    10. '_last' → logprob: -8.301466941833496

Token 555: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.36194443702697754
    2. ')' → logprob: -2.3619444370269775
    3. 'right' → logprob: -2.7369444370269775
    4. ',' → logprob: -3.1119444370269775
    5. '(' → logprob: -3.6119444370269775
    6. 'append' → logprob: -3.7369444370269775
    7. 'item' → logprob: -4.611944198608398
    8. 'left' → logprob: -4.986944198608398
    9. '(item' → logprob: -5.111944198608398
    10. 'self' → logprob: -5.361944198608398

Token 556: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.1274290382862091
    2. ' item' → logprob: -2.1274290084838867
    3. '0' → logprob: -7.752429008483887
    4. 'self' → logprob: -10.377429008483887
    5. 'index' → logprob: -11.252429008483887
    6. ' ' → logprob: -12.627429008483887
    7. '(item' → logprob: -12.627429008483887
    8. ')' → logprob: -12.627429008483887
    9. 'items' → logprob: -12.627429008483887
    10. 'getitem' → logprob: -13.127429008483887

Token 557: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11361929029226303
    2. '(item' → logprob: -2.738619327545166
    3. ',' → logprob: -3.238619327545166
    4. ',item' → logprob: -6.988619327545166
    5. ')item' → logprob: -7.113619327545166
    6. '):
' → logprob: -7.488619327545166
    7. '):' → logprob: -7.738619327545166
    8. '=item' → logprob: -8.488618850708008
    9. 'item' → logprob: -8.988618850708008
    10. '.append' → logprob: -9.238618850708008

Token 558: ' ->' (ID: 2747)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.1493600457906723
    2. 'append' → logprob: -2.649359941482544
    3. 'def' → logprob: -2.899359941482544
    4. '(self' → logprob: -5.524360179901123
    5. '=' → logprob: -6.024360179901123
    6. '<|end|>' → logprob: -6.399360179901123
    7. '   ' → logprob: -6.649360179901123
    8. ')' → logprob: -6.774360179901123
    9. ' append' → logprob: -7.649360179901123
    10. ' =' → logprob: -7.774360179901123

Token 559: ' None' (ID: 4662)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.41685330867767334
    2. ' self' → logprob: -1.4168533086776733
    3. 'append' → logprob: -3.166853427886963
    4. ' None' → logprob: -3.541853427886963
    5. 'None' → logprob: -3.666853427886963
    6. ' append' → logprob: -6.666853427886963
    7. '.append' → logprob: -8.541852951049805
    8. 'deque' → logprob: -9.166852951049805
    9. ' ' → logprob: -10.166852951049805
    10. 'getitem' → logprob: -10.416852951049805

Token 560: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11006173491477966
    2. ':
' → logprob: -2.7350616455078125
    3. 'self' → logprob: -3.7350616455078125
    4. '(self' → logprob: -5.2350616455078125
    5. '.append' → logprob: -5.7350616455078125
    6. ':' → logprob: -5.8600616455078125
    7. ' self' → logprob: -6.6100616455078125
    8. '):
' → logprob: -6.9850616455078125
    9. '   ' → logprob: -7.3600616455078125
    10. '<|end|>' → logprob: -8.735061645507812

Token 561: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040755901485681534
    2. ' self' → logprob: -4.415755748748779
    3. 'self' → logprob: -4.665755748748779
    4. ':' → logprob: -4.790755748748779
    5. ':
' → logprob: -5.415755748748779
    6. '<|end|>' → logprob: -6.290755748748779
    7. '(self' → logprob: -6.415755748748779
    8. ',' → logprob: -7.290755748748779
    9. '):
' → logprob: -7.665755748748779
    10. '	self' → logprob: -8.290756225585938

Token 562: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0029889941215515137
    2. ' self' → logprob: -5.877988815307617
    3. '       ' → logprob: -8.877988815307617
    4. '   ' → logprob: -10.127988815307617
    5. 'append' → logprob: -13.377988815307617
    6. '	self' → logprob: -13.502988815307617
    7. 'return' → logprob: -13.877988815307617
    8. '(self' → logprob: -15.752988815307617
    9. 'items' → logprob: -16.127988815307617
    10. ' ' → logprob: -16.127988815307617

Token 563: '.enqueue' (ID: 91071)
  Prédit: '.items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0002326224057469517
    2. '.enqueue' → logprob: -8.750232696533203
    3. 'items' → logprob: -10.125232696533203
    4. '.' → logprob: -10.375232696533203
    5. '.append' → logprob: -14.375232696533203
    6. '.insert' → logprob: -14.750232696533203
    7. ' .' → logprob: -15.125232696533203
    8. 'enqueue' → logprob: -15.375232696533203
    9. '	items' → logprob: -15.625232696533203
    10. '.dequeue' → logprob: -15.875232696533203

Token 564: '(item' (ID: 10016)
  Prédit: '(item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.000667044660076499
    2. '(' → logprob: -7.500667095184326
    3. '<|end|>' → logprob: -9.750666618347168
    4. 'item' → logprob: -11.000666618347168
    5. '(items' → logprob: -11.500666618347168
    6. ')' → logprob: -11.875666618347168
    7. '()' → logprob: -12.125666618347168
    8. '=item' → logprob: -12.750666618347168
    9. ')item' → logprob: -12.875666618347168
    10. '(token' → logprob: -13.125666618347168

Token 565: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016313401283696294
    2. ')
' → logprob: -8.750163078308105
    3. '   ' → logprob: -13.250163078308105
    4. '<|end|>' → logprob: -13.500163078308105
    5. ')

' → logprob: -14.125163078308105
    6. ' )' → logprob: -15.250163078308105
    7. '())' → logprob: -15.500163078308105
    8. '()' → logprob: -15.875163078308105
    9. '       ' → logprob: -16.250164031982422
    10. ')return' → logprob: -16.375164031982422

Token 566: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007906484417617321
    2. '<|end|>' → logprob: -4.882906436920166
    3. 'def' → logprob: -9.132906913757324
    4. '<|end|>' → logprob: -9.632906913757324
    5. ' def' → logprob: -9.757906913757324
    6. '	def' → logprob: -10.507906913757324
    7. '
' → logprob: -11.007906913757324
    8. '    
' → logprob: -11.757906913757324
    9. '       ' → logprob: -13.007906913757324
    10. '   ' → logprob: -13.132906913757324

Token 567: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04044569656252861
    2. 'def' (adapté à ' def') → logprob: -3.4154458045959473
    3. ' def' → logprob: -5.040445804595947
    4. '	def' → logprob: -8.665445327758789
    5. '
' → logprob: -9.165445327758789
    6. '    
' → logprob: -10.665445327758789
    7. '        
' → logprob: -13.665445327758789
    8. '<|end|>' → logprob: -14.040445327758789
    9. '<|end|>' → logprob: -14.165445327758789
    10. ' ' → logprob: -14.415445327758789

Token 568: ' dequeue' (ID: 118122)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.07449571788311005
    2. ' dequeue' → logprob: -2.699495792388916
    3. 'enqueue' → logprob: -5.824495792388916
    4. 'deque' → logprob: -6.574495792388916
    5. ' enqueue' → logprob: -10.074495315551758
    6. 'def' → logprob: -10.074495315551758
    7. 'pop' → logprob: -10.574495315551758
    8. '.dequeue' → logprob: -10.824495315551758
    9. 'peek' → logprob: -10.949495315551758
    10. ' deque' → logprob: -11.324495315551758

Token 569: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.1875571544806007e-05
    2. '()' → logprob: -11.875011444091797
    3. '(' → logprob: -12.375011444091797
    4. 'self' → logprob: -15.000011444091797
    5. 'def' → logprob: -15.625011444091797
    6. ' (' → logprob: -16.875011444091797
    7. '   ' → logprob: -16.875011444091797
    8. ')' → logprob: -18.125011444091797
    9. '       ' → logprob: -18.250011444091797
    10. '():
' → logprob: -18.375011444091797

Token 570: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07859781384468079
    2. '):' → logprob: -3.0785977840423584
    3. '):
' → logprob: -3.5785977840423584
    4. 'self' → logprob: -7.0785980224609375
    5. '(self' → logprob: -7.5785980224609375
    6. '()' → logprob: -8.703598022460938
    7. '):

' → logprob: -10.328598022460938
    8. '   ' → logprob: -11.078598022460938
    9. '())' → logprob: -11.078598022460938
    10. '()):
' → logprob: -11.578598022460938

Token 571: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.682241678237915
    2. 'return' → logprob: -1.057241678237915
    3. ' return' → logprob: -2.557241678237915
    4. ' self' → logprob: -2.932241678237915
    5. '       ' → logprob: -4.307241439819336
    6. '()' → logprob: -6.307241439819336
    7. '   ' → logprob: -7.682241439819336
    8. '(self' → logprob: -8.432241439819336
    9. '	self' → logprob: -9.182241439819336
    10. '	return' → logprob: -9.932241439819336

Token 572: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03809874504804611
    2. 'self' → logprob: -3.2880988121032715
    3. 'if' → logprob: -10.538098335266113
    4. ' return' → logprob: -10.663098335266113
    5. '       ' → logprob: -12.038098335266113
    6. '   ' → logprob: -14.413098335266113
    7. ' self' → logprob: -14.538098335266113
    8. '	return' → logprob: -15.038098335266113
    9. 'try' → logprob: -16.78809928894043
    10. 'ret' → logprob: -17.66309928894043

Token 573: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004307884373702109
    2. ' self' → logprob: -7.750430583953857
    3. '(self' → logprob: -16.250431060791016
    4. '	self' → logprob: -16.750431060791016
    5. '[self' → logprob: -19.125431060791016
    6. 'Self' → logprob: -19.750431060791016
    7. '`' → logprob: -20.250431060791016
    8. '
' → logprob: -20.500431060791016
    9. '=self' → logprob: -20.750431060791016
    10. '   ' → logprob: -21.000431060791016

Token 574: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.001044124481268227
    2. 'items' → logprob: -7.001044273376465
    3. 'tems' → logprob: -9.251044273376465
    4. 'ems' → logprob: -11.126044273376465
    5. 'em' → logprob: -11.501044273376465
    6. 'm' → logprob: -12.001044273376465
    7. '	items' → logprob: -13.626044273376465
    8. '.em' → logprob: -14.126044273376465
    9. '.tokens' → logprob: -14.376044273376465
    10. 'ms' → logprob: -14.501044273376465

Token 575: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0004438971809577197
    2. 'pop' → logprob: -7.750443935394287
    3. '.p' → logprob: -11.250443458557129
    4. '.' → logprob: -15.875443458557129
    5. '[-' → logprob: -17.000444412231445
    6. 'Pop' → logprob: -17.625444412231445
    7. ' pop' → logprob: -19.125444412231445
    8. '_pop' → logprob: -19.125444412231445
    9. '	pop' → logprob: -19.125444412231445
    10. '(pop' → logprob: -19.375444412231445

Token 576: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 577: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 578: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 579: ' front' (ID: 5567)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.20725680887699127
    2. 'peek' → logprob: -1.83225679397583
    3. '__' → logprob: -4.08225679397583
    4. 'front' → logprob: -5.45725679397583
    5. 'clear' → logprob: -6.70725679397583
    6. 'q' → logprob: -6.95725679397583
    7. 'get' → logprob: -7.08225679397583
    8. 'top' → logprob: -8.082257270812988
    9. 'pop' → logprob: -8.082257270812988
    10. 'length' → logprob: -8.207257270812988

Token 580: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004480692732613534
    2. '()' → logprob: -7.875448226928711
    3. '(' → logprob: -10.125448226928711
    4. '():
' → logprob: -11.750448226928711
    5. 'def' → logprob: -12.000448226928711
    6. '   ' → logprob: -12.375448226928711
    7. 'self' → logprob: -12.875448226928711
    8. '():' → logprob: -13.000448226928711
    9. ')' → logprob: -13.750448226928711
    10. ' (' → logprob: -13.875448226928711

Token 581: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4463041126728058
    2. ')' → logprob: -1.6963040828704834
    3. '):
' → logprob: -1.8213040828704834
    4. '(self' → logprob: -4.4463043212890625
    5. '()' → logprob: -6.8213043212890625
    6. 'self' → logprob: -7.4463043212890625
    7. '():' → logprob: -7.8213043212890625
    8. '():
' → logprob: -7.9463043212890625
    9. '()):
' → logprob: -8.321304321289062
    10. ')_' → logprob: -9.321304321289062

Token 582: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02149115689098835
    2. '()' → logprob: -4.771491050720215
    3. '   ' → logprob: -5.021491050720215
    4. 'return' → logprob: -5.646491050720215
    5. '[]' → logprob: -6.396491050720215
    6. '<|end|>' → logprob: -8.146491050720215
    7. ' return' → logprob: -8.396491050720215
    8. '[' → logprob: -8.896491050720215
    9. ':return' → logprob: -9.146491050720215
    10. '():
' → logprob: -10.021491050720215

Token 583: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004238785710185766
    2. 'if' → logprob: -5.504238605499268
    3. ' return' → logprob: -8.754239082336426
    4. 'try' → logprob: -13.879239082336426
    5. '       ' → logprob: -14.254239082336426
    6. ' if' → logprob: -14.379239082336426
    7. '   ' → logprob: -14.754239082336426
    8. '	return' → logprob: -17.12923812866211
    9. '```' → logprob: -20.75423812866211
    10. ' ' → logprob: -21.62923812866211

Token 584: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.517272024415433e-05
    2. ' self' → logprob: -9.750075340270996
    3. 'None' → logprob: -11.000075340270996
    4. '(self' → logprob: -17.00007438659668
    5. '	self' → logprob: -17.75007438659668
    6. ' None' → logprob: -18.50007438659668
    7. '[self' → logprob: -19.12507438659668
    8. 'len' → logprob: -19.62507438659668
    9. '   ' → logprob: -20.37507438659668
    10. '0' → logprob: -20.75007438659668

Token 585: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0056575024500489235
    2. 'items' → logprob: -5.25565767288208
    3. 'tems' → logprob: -7.88065767288208
    4. 'ems' → logprob: -10.755657196044922
    5. 'ms' → logprob: -11.255657196044922
    6. 's' → logprob: -12.005657196044922
    7. '	items' → logprob: -13.505657196044922
    8. 'ments' → logprob: -14.130657196044922
    9. 'm' → logprob: -14.255657196044922
    10. '.' → logprob: -14.380657196044922

Token 586: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.002812124788761139
    2. '[' → logprob: -5.877811908721924
    3. '[len' → logprob: -12.502812385559082
    4. '.peek' → logprob: -13.127812385559082
    5. '[]' → logprob: -14.377812385559082
    6. ' and' → logprob: -15.002812385559082
    7. '.pop' → logprob: -15.752812385559082
    8. '.' → logprob: -15.877812385559082
    9. 'and' → logprob: -16.002811431884766
    10. '```' → logprob: -16.502811431884766

Token 587: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '0' → logprob: -18.25
    4. ']' → logprob: -18.375
    5. '```' → logprob: -18.75
    6. '   ' → logprob: -19.0625
    7. '-' → logprob: -19.5
    8. '  ' → logprob: -19.6875
    9. '１' → logprob: -20.0625
    10. ')' → logprob: -20.1875

Token 588: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7537078857421875
    2. '<|end|>' → logprob: -0.7537078857421875
    3. ')' → logprob: -2.8787078857421875
    4. '()' → logprob: -6.6287078857421875
    5. '}' → logprob: -7.1287078857421875
    6. '<|end|>' → logprob: -8.753707885742188
    7. ' ]' → logprob: -9.628707885742188
    8. '()]' → logprob: -9.878707885742188
    9. '```' → logprob: -10.753707885742188
    10. '.' → logprob: -10.878707885742188

Token 589: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0320298969745636
    2. '<|end|>' → logprob: -3.532029867172241
    3. 'def' → logprob: -6.90703010559082
    4. '```' → logprob: -7.90703010559082
    5. '
' → logprob: -8.03203010559082
    6. '    
' → logprob: -9.03203010559082
    7. '  ' → logprob: -9.15703010559082
    8. '<|end|>' → logprob: -9.15703010559082
    9. ' ' → logprob: -9.28203010559082
    10. ' def' → logprob: -9.65703010559082

Token 590: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03967743739485741
    2. 'def' (adapté à ' def') → logprob: -3.289677381515503
    3. '<|end|>' → logprob: -7.164677619934082
    4. ' def' → logprob: -7.914677619934082
    5. ' ' → logprob: -8.289677619934082
    6. '  ' → logprob: -9.414677619934082
    7. '```' → logprob: -9.664677619934082
    8. '	def' → logprob: -9.914677619934082
    9. 'class' → logprob: -11.539677619934082
    10. '
' → logprob: -11.664677619934082

Token 591: ' pop' (ID: 2735)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.5929176807403564
    2. 'back' → logprob: -1.3429176807403564
    3. '__' → logprob: -1.9679176807403564
    4. 'rear' → logprob: -3.4679176807403564
    5. 'empty' → logprob: -4.717917442321777
    6. 'is' → logprob: -6.342917442321777
    7. 'clear' → logprob: -6.467917442321777
    8. 'isempty' → logprob: -7.467917442321777
    9. 'reverse' → logprob: -7.717917442321777
    10. 'tail' → logprob: -8.092917442321777

Token 592: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.051418736577034
    2. '(self' → logprob: -3.6764187812805176
    3. '(' → logprob: -4.176418781280518
    4. 'left' → logprob: -4.801418781280518
    5. '_left' → logprob: -7.676418781280518
    6. '_front' → logprob: -7.926418781280518
    7. 'front' → logprob: -9.67641830444336
    8. 'opleft' → logprob: -9.67641830444336
    9. '(
' → logprob: -9.80141830444336
    10. 'item' → logprob: -9.92641830444336

Token 593: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007500382140278816
    2. '()' → logprob: -5.007500171661377
    3. ']()' → logprob: -7.757500171661377
    4. '_front' → logprob: -9.507500648498535
    5. ')(' → logprob: -9.632500648498535
    6. 'opleft' → logprob: -9.632500648498535
    7. '())' → logprob: -10.507500648498535
    8. 'left' → logprob: -10.632500648498535
    9. 'front' → logprob: -11.007500648498535
    10. '(' → logprob: -11.007500648498535

Token 594: ' ->' (ID: 2747)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2352878600358963
    2. 'def' → logprob: -2.11028790473938
    3. '(self' → logprob: -2.61028790473938
    4. 'self' → logprob: -4.610287666320801
    5. 'return' → logprob: -6.360287666320801
    6. '(' → logprob: -6.985287666320801
    7. 'opleft' → logprob: -6.985287666320801
    8. '   ' → logprob: -8.3602876663208
    9. '()
' → logprob: -8.9852876663208
    10. '_front' → logprob: -9.3602876663208

Token 595: ' None' (ID: 4662)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017703777411952615
    2. ' self' → logprob: -6.501770496368408
    3. 'None' → logprob: -8.37677001953125
    4. 'return' → logprob: -11.25177001953125
    5. 'items' → logprob: -12.25177001953125
    6. 'deque' → logprob: -12.37677001953125
    7. 'getitem' → logprob: -12.62677001953125
    8. '(self' → logprob: -13.12677001953125
    9. '<|end|>' → logprob: -13.12677001953125
    10. 'item' → logprob: -13.37677001953125

Token 596: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4663645029067993
    2. '   ' → logprob: -1.8413645029067993
    3. '       ' → logprob: -2.0913643836975098
    4. ':
' → logprob: -2.7163643836975098
    5. 'self' → logprob: -4.09136438369751
    6. ':' → logprob: -5.96636438369751
    7. 'def' → logprob: -6.34136438369751
    8. '():
' → logprob: -6.96636438369751
    9. ' self' → logprob: -7.46636438369751
    10. '(
' → logprob: -7.46636438369751

Token 597: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2309861034154892
    2. 'self' → logprob: -1.8559861183166504
    3. 'return' → logprob: -3.3559861183166504
    4. '   ' → logprob: -4.35598611831665
    5. ' self' → logprob: -6.73098611831665
    6. ' return' → logprob: -7.35598611831665
    7. '        
' → logprob: -9.480985641479492
    8. 'def' → logprob: -9.605985641479492
    9. '	self' → logprob: -9.605985641479492
    10. '
' → logprob: -10.105985641479492

Token 598: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0003787184541579336
    2. 'return' → logprob: -8.250378608703613
    3. ' self' → logprob: -9.125378608703613
    4. '       ' → logprob: -11.875378608703613
    5. '   ' → logprob: -13.750378608703613
    6. '	self' → logprob: -15.125378608703613
    7. ' return' → logprob: -15.750378608703613
    8. '_self' → logprob: -16.62537956237793
    9. '_' → logprob: -16.87537956237793
    10. ' ' → logprob: -17.62537956237793

Token 599: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0009405235759913921
    2. '.pop' → logprob: -7.875940322875977
    3. '.dequeue' → logprob: -8.000940322875977
    4. 'items' → logprob: -8.625940322875977
    5. '.' → logprob: -10.375940322875977
    6. '.front' → logprob: -12.500940322875977
    7. 'pop' → logprob: -12.875940322875977
    8. '	items' → logprob: -13.375940322875977
    9. '(items' → logprob: -14.000940322875977
    10. 'deque' → logprob: -14.000940322875977

Token 600: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.014370576478540897
    2. '.p' → logprob: -4.264370441436768
    3. '.' → logprob: -8.514370918273926
    4. ' .' → logprob: -12.764370918273926
    5. 'pop' → logprob: -13.514370918273926
    6. '.remove' → logprob: -14.014370918273926
    7. '.dequeue' → logprob: -14.389370918273926
    8. '.
' → logprob: -14.764370918273926
    9. '.Pop' → logprob: -16.13936996459961
    10. '.clear' → logprob: -16.13936996459961

Token 601: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.968934758333489e-05
    2. '()
' → logprob: -9.625069618225098
    3. '<|end|>' → logprob: -13.000069618225098
    4. '()

' → logprob: -15.250069618225098
    5. 'def' → logprob: -15.375069618225098
    6. '   ' → logprob: -15.625069618225098
    7. '()\' → logprob: -15.750069618225098
    8. ' ()' → logprob: -15.750069618225098
    9. '()`' → logprob: -16.375070571899414
    10. '())' → logprob: -16.375070571899414

Token 602: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 603: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040945522487163544
    2. '<|end|>' → logprob: -3.290945529937744
    3. 'def' (adapté à ' def') → logprob: -6.415945529937744
    4. '```' → logprob: -7.290945529937744
    5. ' ' → logprob: -8.290945053100586
    6. '  ' → logprob: -9.290945053100586
    7. 'class' → logprob: -9.415945053100586
    8. '<|end|>' → logprob: -10.040945053100586
    9. ' def' → logprob: -10.540945053100586
    10. ')' → logprob: -11.040945053100586

Token 604: ' size' (ID: 2349)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.38452932238578796
    2. 'p' → logprob: -2.3845293521881104
    3. 'clear' → logprob: -2.5095293521881104
    4. 'append' → logprob: -2.8845293521881104
    5. 'size' → logprob: -3.0095293521881104
    6. 'peek' → logprob: -4.009529113769531
    7. '__' → logprob: -4.884529113769531
    8. 'put' → logprob: -5.259529113769531
    9. 'empty' → logprob: -5.384529113769531
    10. 'pop' → logprob: -6.384529113769531

Token 605: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0270928256213665
    2. '()' → logprob: -3.652092933654785
    3. '(' → logprob: -7.152092933654785
    4. '()>' → logprob: -13.527092933654785
    5. '():' → logprob: -13.777092933654785
    6. ' ()' → logprob: -13.777092933654785
    7. 'self' → logprob: -13.777092933654785
    8. ' (' → logprob: -13.902092933654785
    9. '<|end|>' → logprob: -14.652092933654785
    10. '   ' → logprob: -14.777092933654785

Token 606: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.29311344027519226
    2. '()' → logprob: -1.7931134700775146
    3. ')' → logprob: -2.5431134700775146
    4. '())' → logprob: -5.4181132316589355
    5. '():' → logprob: -6.0431132316589355
    6. '):' → logprob: -7.1681132316589355
    7. 'self' → logprob: -7.2931132316589355
    8. '():
' → logprob: -8.918113708496094
    9. '(' → logprob: -9.043113708496094
    10. '()>' → logprob: -9.168113708496094

Token 607: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005838976241648197
    2. '(' → logprob: -5.380838871002197
    3. '()' → logprob: -6.755838871002197
    4. 'self' → logprob: -10.380839347839355
    5. '=' → logprob: -12.130839347839355
    6. ' (' → logprob: -12.755839347839355
    7. '   ' → logprob: -12.880839347839355
    8. '():' → logprob: -13.005839347839355
    9. '(
' → logprob: -13.380839347839355
    10. ')' → logprob: -13.505839347839355

Token 608: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005628037615679204
    2. ' int' → logprob: -7.50056266784668
    3. '(int' → logprob: -11.87556266784668
    4. '[int' → logprob: -14.25056266784668
    5. 'len' → logprob: -14.50056266784668
    6. '()' → logprob: -14.50056266784668
    7. '0' → logprob: -14.87556266784668
    8. '<int' → logprob: -15.25056266784668
    9. ':int' → logprob: -15.75056266784668
    10. '	int' → logprob: -16.37556266784668

Token 609: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003995680599473417
    2. '(' → logprob: -7.875399589538574
    3. 'self' → logprob: -11.250399589538574
    4. '(
' → logprob: -12.500399589538574
    5. '   ' → logprob: -14.250399589538574
    6. '(s' → logprob: -14.625399589538574
    7. '()' → logprob: -14.625399589538574
    8. '(Self' → logprob: -15.000399589538574
    9. ' (' → logprob: -15.125399589538574
    10. '():
' → logprob: -15.750399589538574

Token 610: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.27254149317741394
    2. '       ' → logprob: -1.5225415229797363
    3. ' return' → logprob: -3.8975415229797363
    4. 'len' → logprob: -10.022541046142578
    5. '	return' → logprob: -10.397541046142578
    6. '   ' → logprob: -10.897541046142578
    7. '{return' → logprob: -12.647541046142578
    8. 'Return' → logprob: -13.022541046142578
    9. ':return' → logprob: -13.522541046142578
    10. '        
' → logprob: -13.522541046142578

Token 611: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009881501318886876
    2. ' return' → logprob: -7.000988006591797
    3. 'len' → logprob: -9.500988006591797
    4. '       ' → logprob: -13.250988006591797
    5. ' len' → logprob: -17.250988006591797
    6. '	return' → logprob: -18.250988006591797
    7. '   ' → logprob: -18.250988006591797
    8. ' ' → logprob: -22.500988006591797
    9. '{return' → logprob: -22.500988006591797
    10. 'ret' → logprob: -22.625988006591797

Token 612: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.3868711292743683
    2. 'len' → logprob: -1.136871099472046
    3. '	len' → logprob: -16.011871337890625
    4. '(len' → logprob: -18.011871337890625
    5. '   ' → logprob: -19.636871337890625
    6. ' self' → logprob: -20.011871337890625
    7. 'self' → logprob: -20.136871337890625
    8. ' ' → logprob: -20.761871337890625
    9. '=len' → logprob: -22.136871337890625
    10. ' ' → logprob: -22.761871337890625

Token 613: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.3425219549390022e-05
    2. '(' → logprob: -11.25001335144043
    3. 'self' → logprob: -15.00001335144043
    4. ' (' → logprob: -18.87501335144043
    5. '(
' → logprob: -19.75001335144043
    6. '	self' → logprob: -20.50001335144043
    7. '()' → logprob: -20.62501335144043
    8. ' self' → logprob: -21.25001335144043
    9. '(this' → logprob: -21.50001335144043
    10. '```' → logprob: -21.50001335144043

Token 614: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -8.554343366995454e-05
    2. 'items' → logprob: -9.500085830688477
    3. '(items' → logprob: -12.125085830688477
    4. '.' → logprob: -12.625085830688477
    5. ')' → logprob: -13.375085830688477
    6. ' .' → logprob: -16.125085830688477
    7. ').' → logprob: -16.250085830688477
    8. '	items' → logprob: -16.625085830688477
    9. ' items' → logprob: -16.750085830688477
    10. '.Items' → logprob: -18.250085830688477

Token 615: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006054567056708038
    2. '())' → logprob: -7.625605583190918
    3. '()' → logprob: -9.125605583190918
    4. ')
' → logprob: -11.750605583190918
    5. '<|end|>' → logprob: -15.375605583190918
    6. ' )' → logprob: -15.875605583190918
    7. '())
' → logprob: -16.1256046295166
    8. '()
' → logprob: -16.6256046295166
    9. '   ' → logprob: -17.0006046295166
    10. ')return' → logprob: -17.3756046295166

Token 616: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 617: ' create' (ID: 2501)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5445281863212585
    2. ' main' → logprob: -0.9195281863212585
    3. 'binary' → logprob: -5.044528007507324
    4. ' binary' → logprob: -5.919528007507324
    5. ' stack' → logprob: -6.044528007507324
    6. 'stack' → logprob: -6.294528007507324
    7. 'dfs' → logprob: -6.544528007507324
    8. 'Stack' → logprob: -6.669528007507324
    9. ' dfs' → logprob: -7.419528007507324
    10. 'solve' → logprob: -7.669528007507324

Token 618: '_l' (ID: 1478)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.18571707606315613
    2. '_stack' → logprob: -2.3107171058654785
    3. '_list' → logprob: -4.1857171058654785
    4. '_de' → logprob: -4.1857171058654785
    5. '_set' → logprob: -4.4357171058654785
    6. '_array' → logprob: -4.4357171058654785
    7. '_counter' → logprob: -4.9357171058654785
    8. '_' → logprob: -6.3107171058654785
    9. '_priority' → logprob: -6.3107171058654785
    10. '_class' → logprob: -6.9357171058654785

Token 619: 'ca' (ID: 3743)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.027338875457644463
    2. 'ambda' → logprob: -3.652338981628418
    3. 'ine' → logprob: -8.152338981628418
    4. 'ink' → logprob: -8.402338981628418
    5. 'ast' → logprob: -9.277338981628418
    6. 'e' → logprob: -9.777338981628418
    7. 'ayer' → logprob: -9.777338981628418
    8. 'ocal' → logprob: -9.902338981628418
    9. 'inear' → logprob: -10.152338981628418
    10. 'ength' → logprob: -10.402338981628418

Token 620: '(N' (ID: 10564)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.19166862964630127
    2. '(depth' → logprob: -3.0666685104370117
    3. '(parent' → logprob: -3.6916685104370117
    4. '(root' → logprob: -4.191668510437012
    5. '(nodes' → logprob: -4.316668510437012
    6. '():' → logprob: -4.441668510437012
    7. '(N' → logprob: -4.566668510437012
    8. '(tree' → logprob: -4.566668510437012
    9. '(node' → logprob: -4.691668510437012
    10. '(' → logprob: -4.691668510437012

Token 621: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0911526009440422
    2. ',' → logprob: -2.9661526679992676
    3. ':' → logprob: -3.4661526679992676
    4. '):
' → logprob: -5.466152667999268
    5. ')' → logprob: -9.84115219116211
    6. ':int' → logprob: -10.34115219116211
    7. '):
' → logprob: -10.46615219116211
    8. ' ):' → logprob: -11.09115219116211
    9. '   ' → logprob: -11.96615219116211
    10. ' :' → logprob: -12.46615219116211

Token 622: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01986815221607685
    2. 'parent' → logprob: -4.14486837387085
    3. 'parents' → logprob: -7.14486837387085
    4. 'par' → logprob: -7.26986837387085
    5. 'LOG' → logprob: -7.26986837387085
    6. 'depth' → logprob: -7.64486837387085
    7. 'graph' → logprob: -8.269867897033691
    8. 'class' → logprob: -8.769867897033691
    9. ' ' → logprob: -8.894867897033691
    10. '	parent' → logprob: -8.894867897033691

Token 623: ' return' (ID: 622)
  Prédit: 'LOG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LOG' → logprob: -0.12370331585407257
    2. 'import' → logprob: -3.2487032413482666
    3. 'MAX' → logprob: -3.4987032413482666
    4. 'log' → logprob: -3.9987032413482666
    5. '   ' → logprob: -4.373703479766846
    6. 'max' → logprob: -4.873703479766846
    7. 'depth' → logprob: -5.748703479766846
    8. 'parent' → logprob: -6.498703479766846
    9. ' LOG' → logprob: -6.998703479766846
    10. 'def' → logprob: -7.373703479766846

Token 624: ' L' (ID: 451)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23305244743824005
    2. '[[' → logprob: -1.7330524921417236
    3. '[-' → logprob: -3.7330524921417236
    4. '[]' → logprob: -5.4830522537231445
    5. '(lambda' → logprob: -6.8580522537231445
    6. 'lambda' → logprob: -7.8580522537231445
    7. '{"' → logprob: -8.108052253723145
    8. '([' → logprob: -8.358052253723145
    9. '{' → logprob: -8.483052253723145
    10. '[n' → logprob: -8.858052253723145

Token 625: 'CA' (ID: 6781)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.20886299014091492
    2. 'ambda' → logprob: -2.7088630199432373
    3. '[' → logprob: -3.4588630199432373
    4. 'CA' → logprob: -3.7088630199432373
    5. 'L' → logprob: -3.8338630199432373
    6. '[-' → logprob: -4.458862781524658
    7. 'IST' → logprob: -5.083862781524658
    8. '[L' → logprob: -5.458862781524658
    9. 'ca' → logprob: -5.583862781524658
    10. 'azy' → logprob: -5.833862781524658

Token 626: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.22641366720199585
    2. '(' → logprob: -1.6014137268066406
    3. '()' → logprob: -7.851413726806641
    4. '<|end|>' → logprob: -8.85141372680664
    5. ')' → logprob: -9.72641372680664
    6. '(
' → logprob: -9.97641372680664
    7. '(None' → logprob: -10.60141372680664
    8. '(L' → logprob: -10.60141372680664
    9. 'def' → logprob: -10.72641372680664
    10. '()(' → logprob: -10.72641372680664

Token 627: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ',' → logprob: -13.375003814697266
    3. ' )' → logprob: -13.500003814697266
    4. '())' → logprob: -15.250003814697266
    5. '),' → logprob: -15.500003814697266
    6. ',)' → logprob: -16.125003814697266
    7. ')
' → logprob: -16.500003814697266
    8. '))' → logprob: -16.625003814697266
    9. '()' → logprob: -17.000003814697266
    10. ');' → logprob: -17.500003814697266

Token 628: 'def' (ID: 1314)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.01725975051522255
    2. '
' → logprob: -4.26725959777832
    3. '(
' → logprob: -5.89225959777832
    4. '(' → logprob: -8.76725959777832
    5. ':' → logprob: -9.26725959777832
    6. '(class' → logprob: -10.51725959777832
    7. ':
' → logprob: -11.14225959777832
    8. ' class' → logprob: -11.14225959777832
    9. '

' → logprob: -11.39225959777832
    10. '  
' → logprob: -12.39225959777832

Token 629: ' get' (ID: 717)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.19234836101531982
    2. 'class' → logprob: -2.6923484802246094
    3. 'main' → logprob: -2.9423484802246094
    4. 'l' → logprob: -4.067348480224609
    5. ' L' → logprob: -4.192348480224609
    6. ' main' → logprob: -5.567348480224609
    7. 'build' → logprob: -5.692348480224609
    8. 'def' → logprob: -5.692348480224609
    9. 'create' → logprob: -5.817348480224609
    10. 'get' → logprob: -6.692348480224609

Token 630: '_zero' (ID: 53468)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.07655597478151321
    2. '_depth' → logprob: -3.7015559673309326
    3. 'L' → logprob: -4.326556205749512
    4. '_L' → logprob: -4.451556205749512
    5. '_parent' → logprob: -5.326556205749512
    6. '_max' → logprob: -5.951556205749512
    7. 'l' → logprob: -6.076556205749512
    8. '_input' → logprob: -6.701556205749512
    9. 'depth' → logprob: -6.826556205749512
    10. '_distance' → logprob: -6.951556205749512

Token 631: '_list' (ID: 4162)
  Prédit: '_based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_based' → logprob: -0.3244520127773285
    2. '_index' → logprob: -2.1994519233703613
    3. '()' → logprob: -2.8244519233703613
    4. 'based' → logprob: -3.4494519233703613
    5. '_count' → logprob: -3.5744519233703613
    6. '_indices' → logprob: -4.949451923370361
    7. '_array' → logprob: -5.074451923370361
    8. 's' → logprob: -5.199451923370361
    9. '_list' → logprob: -5.449451923370361
    10. '_initialized' → logprob: -5.574451923370361

Token 632: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1199287697672844
    2. '(size' → logprob: -2.2449288368225098
    3. '(N' → logprob: -5.36992883682251
    4. '(' → logprob: -6.36992883682251
    5. '(length' → logprob: -7.86992883682251
    6. '(sz' → logprob: -8.244928359985352
    7. '(
' → logprob: -10.744928359985352
    8. '(s' → logprob: -11.619928359985352
    9. '(lst' → logprob: -11.744928359985352
    10. '(m' → logprob: -11.744928359985352

Token 633: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03289101645350456
    2. ':' → logprob: -3.532891035079956
    3. '):
' → logprob: -6.032890796661377
    4. ')' → logprob: -7.282890796661377
    5. ',' → logprob: -11.407891273498535
    6. ' ):' → logprob: -11.407891273498535
    7. ':int' → logprob: -12.032891273498535
    8. '():' → logprob: -12.282891273498535
    9. '):
' → logprob: -12.532891273498535
    10. '=' → logprob: -12.532891273498535

Token 634: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5148302912712097
    2. '   ' → logprob: -1.0148303508758545
    3. '[' → logprob: -3.5148303508758545
    4. ' return' → logprob: -4.639830112457275
    5. '[n' → logprob: -7.639830112457275
    6. '	return' → logprob: -11.639830589294434
    7. ':return' → logprob: -12.639830589294434
    8. ' [' → logprob: -12.764830589294434
    9. '[]
' → logprob: -13.139830589294434
    10. '
' → logprob: -13.139830589294434

Token 635: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3871125280857086
    2. '[' → logprob: -1.1371124982833862
    3. ' return' → logprob: -8.387112617492676
    4. ' [' → logprob: -11.762112617492676
    5. '   ' → logprob: -12.512112617492676
    6. '[n' → logprob: -13.512112617492676
    7. '{return' → logprob: -15.387112617492676
    8. '	return' → logprob: -15.637112617492676
    9. '[a' → logprob: -16.13711166381836
    10. '[N' → logprob: -16.13711166381836

Token 636: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018849631771445274
    2. ' [' → logprob: -4.018849849700928
    3. '[n' → logprob: -7.268849849700928
    4. '[N' → logprob: -13.76884937286377
    5. '[int' → logprob: -14.51884937286377
    6. '[num' → logprob: -15.14384937286377
    7. '[m' → logprob: -15.64384937286377
    8. '[a' → logprob: -16.143850326538086
    9. '   ' → logprob: -16.518850326538086
    10. '[name' → logprob: -16.643850326538086

Token 637: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. 'int' → logprob: -16.250003814697266
    4. 'False' → logprob: -17.000003814697266
    5. '[' → logprob: -17.375003814697266
    6. '
' → logprob: -18.000003814697266
    7. '   ' → logprob: -18.500003814697266
    8. '00' → logprob: -18.687503814697266
    9. '۰' → logprob: -18.812503814697266
    10. '０' → logprob: -19.062503814697266

Token 638: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.049828097224235535
    2. ']*' → logprob: -3.049828052520752
    3. ' for' → logprob: -6.799828052520752
    4. 'for' → logprob: -9.04982852935791
    5. ']*(' → logprob: -11.92482852935791
    6. ' ]' → logprob: -13.54982852935791
    7. ']+' → logprob: -14.67482852935791
    8. ')' → logprob: -16.299827575683594
    9. '	for' → logprob: -16.674827575683594
    10. ']int' → logprob: -17.049827575683594

Token 639: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2187608480453491
    2. ']*' → logprob: -1.3437608480453491
    3. '*' → logprob: -1.4687608480453491
    4. 'for' → logprob: -1.7187608480453491
    5. ']' → logprob: -3.4687609672546387
    6. '*n' → logprob: -7.218760967254639
    7. ' *' → logprob: -7.218760967254639
    8. ')' → logprob: -7.343760967254639
    9. ')*' → logprob: -7.718760967254639
    10. '	for' → logprob: -9.21876049041748

Token 640: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.64708495605737e-05
    2. ' n' → logprob: -9.625066757202148
    3. '(n' → logprob: -14.875066757202148
    4. '	n' → logprob: -17.37506675720215
    5. '(' → logprob: -20.37506675720215
    6. ')n' → logprob: -20.75006675720215
    7. '   ' → logprob: -21.00006675720215
    8. '_n' → logprob: -21.50006675720215
    9. ' (' → logprob: -22.12506675720215
    10. ' ' → logprob: -22.37506675720215

Token 641: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027950558811426163
    2. '<|end|>' → logprob: -3.6529505252838135
    3. '
' → logprob: -7.027950763702393
    4. 'class' → logprob: -7.277950763702393
    5. '```' → logprob: -10.402950286865234
    6. 'from' → logprob: -10.527950286865234
    7. '<|end|>' → logprob: -11.652950286865234
    8. ')' → logprob: -13.902950286865234
    9. '

' → logprob: -14.277950286865234
    10. ' def' → logprob: -14.277950286865234

Token 642: 'def' (ID: 1314)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0017308680107817054
    2. 'def' → logprob: -6.376730918884277
    3. 'from' → logprob: -11.251730918884277
    4. '<|end|>' → logprob: -12.126730918884277
    5. '
' → logprob: -12.751730918884277
    6. ' class' → logprob: -13.001730918884277
    7. '#' → logprob: -13.126730918884277
    8. 'import' → logprob: -13.626730918884277
    9. '```' → logprob: -14.126730918884277
    10. '<|end|>' → logprob: -15.001730918884277

Token 643: ' add' (ID: 1147)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.29907047748565674
    2. 'main' → logprob: -1.7990704774856567
    3. 'create' → logprob: -2.924070358276367
    4. 'pow' → logprob: -5.174070358276367
    5. 'binary' → logprob: -5.299070358276367
    6. 'is' → logprob: -5.549070358276367
    7. 'bit' → logprob: -5.799070358276367
    8. 'factor' → logprob: -6.174070358276367
    9. 'ceil' → logprob: -6.424070358276367
    10. 'dfs' → logprob: -6.549070358276367

Token 644: '_edges' (ID: 68870)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.011348784901201725
    2. '(x' → logprob: -5.011348724365234
    3. '<|end|>' → logprob: -6.261348724365234
    4. '(' → logprob: -7.011348724365234
    5. '_numbers' → logprob: -7.886348724365234
    6. '_' → logprob: -8.511348724365234
    7. '_lists' → logprob: -8.511348724365234
    8. ' (' → logprob: -8.761348724365234
    9. '_one' → logprob: -9.136348724365234
    10. 'def' → logprob: -9.136348724365234

Token 645: '(gr' (ID: 64506)
  Prédit: '(graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.8003289103507996
    2. '(edges' → logprob: -0.8003289103507996
    3. '(G' → logprob: -3.4253289699554443
    4. '(n' → logprob: -4.175328731536865
    5. '(g' → logprob: -4.300328731536865
    6. '(adj' → logprob: -4.675328731536865
    7. '(nodes' → logprob: -5.050328731536865
    8. '(' → logprob: -5.175328731536865
    9. '(parent' → logprob: -5.300328731536865
    10. '(edge' → logprob: -5.925328731536865

Token 646: ',' (ID: 11)
  Prédit: 'aph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aph' → logprob: -3.786196975852363e-05
    2. ',' → logprob: -11.000038146972656
    3. 'ap' → logprob: -12.000038146972656
    4. 'ph' → logprob: -12.500038146972656
    5. '   ' → logprob: -12.875038146972656
    6. ' aph' → logprob: -13.250038146972656
    7. ')' → logprob: -13.750038146972656
    8. 'ah' → logprob: -13.875038146972656
    9. 'af' → logprob: -13.875038146972656
    10. '```' → logprob: -14.375038146972656

Token 647: ' es' (ID: 878)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.20383800566196442
    2. 'a' → logprob: -2.3288381099700928
    3. ' u' → logprob: -3.3288381099700928
    4. 'edges' → logprob: -4.453837871551514
    5. ' edges' → logprob: -4.703837871551514
    6. 'frm' → logprob: -4.828837871551514
    7. 'fr' → logprob: -4.828837871551514
    8. 'from' → logprob: -4.828837871551514
    9. ' a' → logprob: -5.703837871551514
    10. 'v' → logprob: -7.453837871551514

Token 648: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17574934661388397
    2. '):
' → logprob: -2.3007493019104004
    3. 't' → logprob: -2.9257493019104004
    4. ',' → logprob: -5.9257493019104
    5. 'ts' → logprob: -6.0507493019104
    6. ')' → logprob: -6.3007493019104
    7. '):
' → logprob: -8.425749778747559
    8. 's' → logprob: -9.300749778747559
    9. '):

' → logprob: -10.175749778747559
    10. ':' → logprob: -10.675749778747559

Token 649: ' N' (ID: 478)
  Prédit: 'direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direct' → logprob: -0.09465211629867554
    2. 'und' → logprob: -2.9696521759033203
    3. 'u' → logprob: -4.34465217590332
    4. 'bid' → logprob: -5.46965217590332
    5. 'or' → logprob: -5.84465217590332
    6. 'rev' → logprob: -6.21965217590332
    7. 'n' → logprob: -6.34465217590332
    8. 'is' → logprob: -6.46965217590332
    9. 'bi' → logprob: -6.59465217590332
    10. 'dir' → logprob: -6.84465217590332

Token 650: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08985939621925354
    2. '):
' → logprob: -2.4648594856262207
    3. ',' → logprob: -7.214859485626221
    4. ')' → logprob: -8.964859008789062
    5. '):
' → logprob: -10.214859008789062
    6. '=None' → logprob: -12.214859008789062
    7. ' ):' → logprob: -12.464859008789062
    8. '=' → logprob: -12.589859008789062
    9. '):

' → logprob: -13.089859008789062
    10. 'def' → logprob: -13.589859008789062

Token 651: ' input' (ID: 3422)
  Prédit: 'direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direct' → logprob: -0.09564139693975449
    2. 'und' → logprob: -3.5956413745880127
    3. 'M' → logprob: -3.8456413745880127
    4. 'D' → logprob: -5.095641613006592
    5. 'is' → logprob: -5.345641613006592
    6. 'direction' → logprob: -5.595641613006592
    7. 'dir' → logprob: -5.720641613006592
    8. ' directed' → logprob: -5.720641613006592
    9. 'd' → logprob: -6.095641613006592
    10. ' undir' → logprob: -6.470641613006592

Token 652: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -5.013994814362377e-05
    2. 'func' → logprob: -10.00005054473877
    3. ')' → logprob: -13.62505054473877
    4. '_f' → logprob: -13.62505054473877
    5. '_' → logprob: -14.37505054473877
    6. '_funcs' → logprob: -15.37505054473877
    7. '):' → logprob: -15.50005054473877
    8. 'f' → logprob: -15.62505054473877
    9. '_function' → logprob: -15.62505054473877
    10. '_FUNC' → logprob: -15.75005054473877

Token 653: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030319631099700928
    2. '):
' → logprob: -3.5303196907043457
    3. ')' → logprob: -7.655319690704346
    4. '):
' → logprob: -9.530319213867188
    5. '=None' → logprob: -11.280319213867188
    6. ',' → logprob: -12.655319213867188
    7. '=' → logprob: -12.780319213867188
    8. '   ' → logprob: -12.780319213867188
    9. ' ):' → logprob: -14.155319213867188
    10. '):

' → logprob: -15.530319213867188

Token 654: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01706569269299507
    2. ' for' → logprob: -4.142065525054932
    3. 'for' → logprob: -7.142065525054932
    4. '	for' → logprob: -8.39206600189209
    5. '
' → logprob: -11.89206600189209
    6. '   ' → logprob: -12.64206600189209
    7. '    
' → logprob: -13.14206600189209
    8. ' ' → logprob: -14.51706600189209
    9. '    ' → logprob: -15.89206600189209
    10. '  ' → logprob: -16.267065048217773

Token 655: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.36902686953544617
    2. '   ' → logprob: -1.8690268993377686
    3. ' for' → logprob: -1.8690268993377686
    4. '	for' → logprob: -10.119027137756348
    5. 'def' → logprob: -12.744027137756348
    6. ' ' → logprob: -13.744027137756348
    7. '
' → logprob: -14.494027137756348
    8. '   ' → logprob: -14.744027137756348
    9. '```' → logprob: -15.869027137756348
    10. '  ' → logprob: -16.36902618408203

Token 656: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27657845616340637
    2. 'u' → logprob: -1.776578426361084
    3. ' _' → logprob: -3.401578426361084
    4. ' u' → logprob: -4.151578426361084
    5. 'e' → logprob: -5.026578426361084
    6. 'i' → logprob: -5.276578426361084
    7. '_u' → logprob: -6.151578426361084
    8. '_i' → logprob: -6.276578426361084
    9. '(u' → logprob: -6.276578426361084
    10. '_e' → logprob: -6.401578426361084

Token 657: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002203070791438222
    2. 'in' → logprob: -6.127202987670898
    3. ' ' → logprob: -11.252202987670898
    4. 'i' → logprob: -13.377202987670898
    5. '  ' → logprob: -14.002202987670898
    6. 'input' → logprob: -14.127202987670898
    7. 'range' → logprob: -14.252202987670898
    8. 'n' → logprob: -14.627202987670898
    9. 'e' → logprob: -16.0022029876709
    10. '   ' → logprob: -16.2522029876709

Token 658: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14760728180408478
    2. 'es' → logprob: -2.0226073265075684
    3. ' range' → logprob: -5.397607326507568
    4. ' es' → logprob: -8.02260684967041
    5. 'input' → logprob: -10.02260684967041
    6. '(es' → logprob: -11.14760684967041
    7. 'r' → logprob: -13.77260684967041
    8. '(range' → logprob: -13.89760684967041
    9. 'rang' → logprob: -14.89760684967041
    10. '	range' → logprob: -14.89760684967041

Token 659: '(N' (ID: 10564)
  Prédit: '(es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(es' → logprob: -0.5477719902992249
    2. 'es' → logprob: -1.92277193069458
    3. '(N' → logprob: -2.29777193069458
    4. 'N' → logprob: -2.29777193069458
    5. '(n' → logprob: -3.17277193069458
    6. '(len' → logprob: -4.29777193069458
    7. 'n' → logprob: -5.04777193069458
    8. '(' → logprob: -5.29777193069458
    9. ' es' → logprob: -6.17277193069458
    10. '(_' → logprob: -6.92277193069458

Token 660: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35004597902297974
    2. '):
' → logprob: -1.225045919418335
    3. ',' → logprob: -7.100046157836914
    4. ')' → logprob: -7.850046157836914
    5. ' ):' → logprob: -8.725046157836914
    6. '):
' → logprob: -9.225046157836914
    7. '   ' → logprob: -9.725046157836914
    8. ' ):
' → logprob: -10.350046157836914
    9. ' ,' → logprob: -11.725046157836914
    10. ':' → logprob: -12.600046157836914

Token 661: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0069894613698124886
    2. ' ' → logprob: -5.006989479064941
    3. 'len' → logprob: -8.756989479064941
    4. ' len' → logprob: -10.381989479064941
    5. '2' → logprob: -10.881989479064941
    6. ' es' → logprob: -11.131989479064941
    7. 'es' → logprob: -11.131989479064941
    8. '   ' → logprob: -11.256989479064941
    9. ')' → logprob: -11.256989479064941
    10. '0' → logprob: -11.756989479064941

Token 662: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001548545085825026
    2. ' ' → logprob: -6.501548767089844
    3. '0' → logprob: -10.626548767089844
    4. ')' → logprob: -12.001548767089844
    5. '2' → logprob: -12.251548767089844
    6. '   ' → logprob: -12.501548767089844
    7. 'len' → logprob: -12.501548767089844
    8. '=' → logprob: -14.751548767089844
    9. '  ' → logprob: -14.751548767089844
    10. 'm' → logprob: -15.126548767089844

Token 663: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.030204789713025093
    2. '):' → logprob: -3.5302047729492188
    3. ',' → logprob: -8.905204772949219
    4. ')' → logprob: -9.155204772949219
    5. ':
' → logprob: -9.655204772949219
    6. '):
' → logprob: -9.905204772949219
    7. ':' → logprob: -10.030204772949219
    8. '   ' → logprob: -10.030204772949219
    9. ' ):
' → logprob: -11.780204772949219
    10. ' ' → logprob: -14.530204772949219

Token 664: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007187842391431332
    2. '   ' → logprob: -5.882187843322754
    3. ' es' → logprob: -5.882187843322754
    4. 'e' → logprob: -7.007187843322754
    5. 'es' → logprob: -7.632187843322754
    6. ' s' → logprob: -10.007187843322754
    7. ' e' → logprob: -10.132187843322754
    8. 'a' → logprob: -10.632187843322754
    9. ',' → logprob: -10.632187843322754
    10. 'u' → logprob: -11.757187843322754

Token 665: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.474753201007843
    2. 'a' (adapté à ' a') → logprob: -0.974753201007843
    3. ' u' → logprob: -7.974753379821777
    4. '   ' → logprob: -8.724753379821777
    5. ' a' → logprob: -9.849753379821777
    6. 'x' → logprob: -9.974753379821777
    7. 's' → logprob: -10.224753379821777
    8. 'v' → logprob: -10.724753379821777
    9. 'f' → logprob: -12.474753379821777
    10. '	u' → logprob: -13.099753379821777

Token 666: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0171730425208807
    2. ',b' → logprob: -4.142172813415527
    3. ' ,' → logprob: -7.142172813415527
    4. 'b' → logprob: -8.017172813415527
    5. '_,' → logprob: -12.517172813415527
    6. ' b' → logprob: -13.017172813415527
    7. ' =' → logprob: -13.142172813415527
    8. 's' → logprob: -13.267172813415527
    9. ',a' → logprob: -13.767172813415527
    10. '=' → logprob: -13.892172813415527

Token 667: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015023599844425917
    2. ' b' → logprob: -6.501502513885498
    3. '	b' → logprob: -19.626502990722656
    4. ',b' → logprob: -20.251502990722656
    5. '=' → logprob: -21.001502990722656
    6. 's' → logprob: -21.251502990722656
    7. '=b' → logprob: -21.376502990722656
    8. 'e' → logprob: -22.001502990722656
    9. '_b' → logprob: -22.001502990722656
    10. ' ' → logprob: -22.126502990722656

Token 668: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022635996341705
    2. ' =' → logprob: -1.9102263450622559
    3. '=input' → logprob: -13.285226821899414
    4. '＝' → logprob: -15.410226821899414
    5. ',' → logprob: -16.410226821899414
    6. '   ' → logprob: -16.910226821899414
    7. '=int' → logprob: -17.160226821899414
    8. '=_' → logprob: -17.535226821899414
    9. ' ' → logprob: -17.910226821899414
    10. '=
' → logprob: -18.035226821899414

Token 669: ' col' (ID: 996)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5914193987846375
    2. 'c' → logprob: -0.8414193987846375
    3. ' =' → logprob: -4.466419219970703
    4. ' c' → logprob: -6.591419219970703
    5. '_=' → logprob: -6.966419219970703
    6. '_' → logprob: -7.091419219970703
    7. '_c' → logprob: -8.216419219970703
    8. '*' → logprob: -8.466419219970703
    9. '=c' → logprob: -10.216419219970703
    10. '=input' → logprob: -10.216419219970703

Token 670: ',' (ID: 11)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.478409081697464
    2. '=' → logprob: -0.9784090518951416
    3. ' =' → logprob: -5.478409290313721
    4. ',' → logprob: -8.978408813476562
    5. 'o' → logprob: -11.603408813476562
    6. 'ors' → logprob: -13.228408813476562
    7. '(or' → logprob: -13.728408813476562
    8. ']' → logprob: -13.978408813476562
    9. ')' → logprob: -13.978408813476562
    10. '=None' → logprob: -14.103408813476562

Token 671: ' dist' (ID: 3601)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.9373512268066406
    2. 'cost' → logprob: -1.4373512268066406
    3. 'c' → logprob: -1.8123512268066406
    4. 'weight' → logprob: -2.6873512268066406
    5. ' =' → logprob: -2.8123512268066406
    6. '=' → logprob: -3.5623512268066406
    7. 'wt' → logprob: -4.562351226806641
    8. '_' → logprob: -4.937351226806641
    9. '_=' → logprob: -5.187351226806641
    10. 'wei' → logprob: -5.312351226806641

Token 672: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002226322889328
    2. ' =' → logprob: -2.350222587585449
    3. '=input' → logprob: -11.10022258758545
    4. ' ' → logprob: -15.22522258758545
    5. '   ' → logprob: -15.60022258758545
    6. '＝' → logprob: -15.85022258758545
    7. '=line' → logprob: -16.850223541259766
    8. 'a' → logprob: -17.100223541259766
    9. '=_' → logprob: -17.225223541259766
    10. ')' → logprob: -17.350223541259766

Token 673: ' I' (ID: 357)
  Prédit: 'ILI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ILI' → logprob: -0.7915354371070862
    2. 'ILLI' → logprob: -0.9165354371070862
    3. 'IL' → logprob: -2.5415353775024414
    4. 'ILL' → logprob: -3.2915353775024414
    5. 'map' → logprob: -3.7915353775024414
    6. ' I' → logprob: -6.041535377502441
    7. ' map' → logprob: -6.541535377502441
    8. '	IL' → logprob: -6.791535377502441
    9. 'ili' → logprob: -7.666535377502441
    10. '[' → logprob: -7.666535377502441

Token 674: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.024034617468714714
    2. '(input' → logprob: -4.52403450012207
    3. 'LL' → logprob: -4.64903450012207
    4. 'L' → logprob: -6.02403450012207
    5. '(' → logprob: -7.89903450012207
    6. 'ILI' → logprob: -8.89903450012207
    7. 'LS' → logprob: -9.27403450012207
    8. 'input' → logprob: -9.52403450012207
    9. 'LC' → logprob: -9.52403450012207
    10. 'I' → logprob: -9.64903450012207

Token 675: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.700132997939363e-05
    2. 'input' → logprob: -11.000017166137695
    3. '(' → logprob: -16.625017166137695
    4. ' (' → logprob: -16.750017166137695
    5. ',input' → logprob: -18.000017166137695
    6. '=input' → logprob: -18.000017166137695
    7. '[input' → logprob: -18.875017166137695
    8. ' input' → logprob: -19.250017166137695
    9. '```' → logprob: -20.250017166137695
    10. '(inp' → logprob: -21.000017166137695

Token 676: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.4050590991973877
    2. '(input' → logprob: -1.6550590991973877
    3. 'func' → logprob: -2.5300590991973877
    4. 'input' → logprob: -2.7800590991973877
    5. 'f' → logprob: -9.280058860778809
    6. 'Func' → logprob: -9.905058860778809
    7. '=input' → logprob: -10.030058860778809
    8. ' input' → logprob: -10.405058860778809
    9. '_input' → logprob: -10.780058860778809
    10. '```' → logprob: -10.905058860778809

Token 677: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.253728985786438
    2. '())' → logprob: -1.503728985786438
    3. '()' → logprob: -6.878728866577148
    4. '())
' → logprob: -8.003728866577148
    5. ')
' → logprob: -8.128728866577148
    6. ' )' → logprob: -9.503728866577148
    7. ' ())' → logprob: -11.003728866577148
    8. '))' → logprob: -12.128728866577148
    9. '());' → logprob: -12.128728866577148
    10. '(' → logprob: -12.253728866577148

Token 678: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09404442459344864
    2. '   ' → logprob: -2.8440444469451904
    3. '	gr' → logprob: -3.8440444469451904
    4. '<|end|>' → logprob: -5.344044208526611
    5. ',' → logprob: -6.094044208526611
    6. '
' → logprob: -7.344044208526611
    7. 'gr' → logprob: -7.469044208526611
    8. '	' → logprob: -7.844044208526611
    9. '        
' → logprob: -7.969044208526611
    10. '(gr' → logprob: -8.71904468536377

Token 679: ' a' (ID: 261)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.16615794599056244
    2. '   ' → logprob: -2.0411579608917236
    3. ' gr' → logprob: -4.4161577224731445
    4. 'a' (adapté à ' a') → logprob: -4.9161577224731445
    5. '	gr' → logprob: -6.1661577224731445
    6. ' a' → logprob: -6.7911577224731445
    7. 'add' → logprob: -8.166157722473145
    8. '       ' → logprob: -8.916157722473145
    9. 'es' → logprob: -9.916157722473145
    10. ' add' → logprob: -10.666157722473145

Token 680: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6009808778762817
    2. ' -=' → logprob: -1.1009808778762817
    3. '-=' → logprob: -2.600980758666992
    4. '-' → logprob: -3.225980758666992
    5. ' -' → logprob: -5.850980758666992
    6. ' ,' → logprob: -6.600980758666992
    7. ',b' → logprob: -7.975980758666992
    8. '-,' → logprob: -8.350980758666992
    9. ' =' → logprob: -8.975980758666992
    10. ',a' → logprob: -9.225980758666992

Token 681: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.061967797577381134
    2. ' b' → logprob: -2.8119678497314453
    3. '	b' → logprob: -16.686967849731445
    4. '   ' → logprob: -17.811967849731445
    5. ' ' → logprob: -17.936967849731445
    6. ' 
' → logprob: -18.186967849731445
    7. '    ' → logprob: -19.436967849731445
    8. ' ' → logprob: -19.436967849731445
    9. '
' → logprob: -19.561967849731445
    10. ',b' → logprob: -19.811967849731445

Token 682: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03754181042313576
    2. '=' → logprob: -3.4125418663024902
    3. ' =' → logprob: -5.91254186630249
    4. '-=' → logprob: -7.16254186630249
    5. ' -=' → logprob: -8.412541389465332
    6. ',a' → logprob: -9.412541389465332
    7. ' ,' → logprob: -10.287541389465332
    8. '-' → logprob: -10.662541389465332
    9. ',b' → logprob: -10.787541389465332
    10. 'a' → logprob: -11.037541389465332

Token 683: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0024768433067947626
    2. ' a' → logprob: -6.002476692199707
    3. '	a' → logprob: -14.127476692199707
    4. '(a' → logprob: -15.502476692199707
    5. '   ' → logprob: -16.377477645874023
    6. ' ' → logprob: -17.127477645874023
    7. '[a' → logprob: -17.127477645874023
    8. 'DEC' → logprob: -17.627477645874023
    9. 'dec' → logprob: -18.002477645874023
    10. '  ' → logprob: -18.377477645874023

Token 684: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931480169296265
    2. ' -' → logprob: -0.6931480169296265
    3. ' ' → logprob: -15.193147659301758
    4. ',' → logprob: -15.318147659301758
    5. '−' → logprob: -16.568147659301758
    6. '–' → logprob: -17.443147659301758
    7. '--' → logprob: -17.443147659301758
    8. 'a' → logprob: -17.568147659301758
    9. '   ' → logprob: -17.818147659301758
    10. ' ' → logprob: -18.068147659301758

Token 685: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -18.25037956237793
    4. ',' → logprob: -18.62537956237793
    5. '１' → logprob: -19.56287956237793
    6. '	' → logprob: -19.68787956237793
    7. '```' → logprob: -19.68787956237793
    8. '[' → logprob: -19.81287956237793
    9. '2' → logprob: -20.31287956237793
    10. ' ' → logprob: -20.37537956237793

Token 686: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. 'a' → logprob: -18.7500057220459
    4. '   ' → logprob: -19.6250057220459
    5. '[' → logprob: -20.0000057220459
    6. '```' → logprob: -20.2500057220459
    7. '１' → logprob: -20.3750057220459
    8. 'def' → logprob: -21.0000057220459
    9. '<|end|>' → logprob: -21.0000057220459
    10. ',' → logprob: -21.6250057220459

Token 687: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010640407708706334
    2. ',b' → logprob: -9.500106811523438
    3. ' ,' → logprob: -10.500106811523438
    4. ',
' → logprob: -12.500106811523438
    5. 'b' → logprob: -16.375106811523438
    6. '_,' → logprob: -17.625106811523438
    7. '```' → logprob: -17.875106811523438
    8. '       ' → logprob: -18.250106811523438
    9. '   ' → logprob: -18.500106811523438
    10. '‌,' → logprob: -18.625106811523438

Token 688: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020667314529419
    2. ' b' → logprob: -2.3502066135406494
    3. '	b' → logprob: -17.47520637512207
    4. '   ' → logprob: -17.85020637512207
    5. ' ' → logprob: -18.35020637512207
    6. '    ' → logprob: -19.35020637512207
    7. '       ' → logprob: -20.35020637512207
    8. '(b' → logprob: -20.47520637512207
    9. ')b' → logprob: -20.85020637512207
    10. '  ' → logprob: -20.97520637512207

Token 689: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01251224149018526
    2. '-' → logprob: -4.38751220703125
    3. ' ' → logprob: -13.76251220703125
    4. 'b' → logprob: -14.38751220703125
    5. 'def' → logprob: -14.63751220703125
    6. ' -
' → logprob: -15.63751220703125
    7. '<|end|>' → logprob: -16.38751220703125
    8. '   ' → logprob: -17.01251220703125
    9. '[' → logprob: -17.13751220703125
    10. 'a' → logprob: -17.26251220703125

Token 690: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000553151941858232
    2. ' ' → logprob: -7.500553131103516
    3. '<|end|>' → logprob: -16.625553131103516
    4. ' col' → logprob: -17.250553131103516
    5. '   ' → logprob: -17.500553131103516
    6. 'col' → logprob: -17.625553131103516
    7. '2' → logprob: -18.438053131103516
    8. 'a' → logprob: -18.813053131103516
    9. '  ' → logprob: -18.813053131103516
    10. 'b' → logprob: -19.563053131103516

Token 691: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '2' → logprob: -18.000085830688477
    4. 'a' → logprob: -18.000085830688477
    5. '   ' → logprob: -18.625085830688477
    6. '```' → logprob: -19.000085830688477
    7. '１' → logprob: -19.000085830688477
    8. 'col' → logprob: -19.812585830688477
    9. '<|end|>' → logprob: -19.812585830688477
    10. 'b' → logprob: -20.000085830688477

Token 692: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023250321100931615
    2. '   ' → logprob: -9.000232696533203
    3. 'gr' → logprob: -9.750232696533203
    4. '<|end|>' → logprob: -10.375232696533203
    5. ',' → logprob: -12.000232696533203
    6. '	gr' → logprob: -12.375232696533203
    7. '	' → logprob: -12.625232696533203
    8. '
' → logprob: -13.250232696533203
    9. '           ' → logprob: -14.250232696533203
    10. '(gr' → logprob: -14.375232696533203

Token 693: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008529895567335188
    2. 'gr' → logprob: -7.375853061676025
    3. '   ' → logprob: -8.500852584838867
    4. '	gr' → logprob: -11.125852584838867
    5. '<|end|>' → logprob: -13.125852584838867
    6. '	' → logprob: -13.125852584838867
    7. '
' → logprob: -14.000852584838867
    8. '           ' → logprob: -14.250852584838867
    9. '(gr' → logprob: -14.500852584838867
    10. ' gr' → logprob: -14.625852584838867

Token 694: ' es' (ID: 878)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.00047071068547666073
    2. '       ' → logprob: -8.250471115112305
    3. '   ' → logprob: -8.500471115112305
    4. '	gr' → logprob: -12.125471115112305
    5. ' gr' → logprob: -15.000471115112305
    6. 'add' → logprob: -16.750471115112305
    7. '_gr' → logprob: -17.000471115112305
    8. 'es' (adapté à ' es') → logprob: -17.250471115112305
    9. '(gr' → logprob: -17.750471115112305
    10. 'if' → logprob: -17.875471115112305

Token 695: '[a' (ID: 32035)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006937717087566853
    2. '.' → logprob: -5.131937503814697
    3. 'append' → logprob: -7.131937503814697
    4. '.setdefault' → logprob: -10.006937980651855
    5. ' =' → logprob: -10.631937980651855
    6. 'pp' → logprob: -10.756937980651855
    7. 'd' → logprob: -11.256937980651855
    8. '.extend' → logprob: -11.381937980651855
    9. '.
' → logprob: -11.506937980651855
    10. '[' → logprob: -11.631937980651855

Token 696: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.055027954280376434
    2. '.append' → logprob: -2.930027961730957
    3. 'append' → logprob: -10.055027961730957
    4. '.' → logprob: -10.305027961730957
    5. ']' → logprob: -10.680027961730957
    6. ',' → logprob: -10.805027961730957
    7. ').' → logprob: -11.805027961730957
    8. '][' → logprob: -12.055027961730957
    9. '.add' → logprob: -13.055027961730957
    10. '   ' → logprob: -13.180027961730957

Token 697: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. '.append' → logprob: -16.625
    3. 'add' → logprob: -17.125
    4. ' append' → logprob: -17.25
    5. 'push' → logprob: -19.0
    6. 'app' → logprob: -19.625
    7. '_append' → logprob: -20.25
    8. 'insert' → logprob: -20.5
    9. '	append' → logprob: -21.125
    10. 'Append' → logprob: -21.625

Token 698: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.011083542369306087
    2. '(b' → logprob: -4.511083602905273
    3. '(' → logprob: -10.261083602905273
    4. 'b' → logprob: -15.011083602905273
    5. '([' → logprob: -15.011083602905273
    6. '(
' → logprob: -16.386083602905273
    7. '   ' → logprob: -18.511083602905273
    8. '({'' → logprob: -18.511083602905273
    9. ' (' → logprob: -18.761083602905273
    10. '(((' → logprob: -18.886083602905273

Token 699: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.688212614681106e-05
    2. ' b' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.750017166137695
    4. '(b' → logprob: -18.000017166137695
    5. '	b' → logprob: -18.125017166137695
    6. ' ' → logprob: -19.750017166137695
    7. '    ' → logprob: -19.875017166137695
    8. ')b' → logprob: -19.875017166137695
    9. 'col' → logprob: -20.750017166137695
    10. '  ' → logprob: -20.750017166137695

Token 700: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000418040988733992
    2. ' ,' → logprob: -8.500417709350586
    3. ',col' → logprob: -8.500417709350586
    4. ',
' → logprob: -11.750417709350586
    5. ')' → logprob: -13.875417709350586
    6. 'col' → logprob: -14.875417709350586
    7. '),' → logprob: -15.000417709350586
    8. '‌,' → logprob: -15.125417709350586
    9. '[col' → logprob: -15.250417709350586
    10. ' col' → logprob: -15.250417709350586

Token 701: ' dist' (ID: 3601)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.00686952518299222
    2. ' col' → logprob: -5.006869316101074
    3. 'dist' → logprob: -9.006869316101074
    4. 'color' → logprob: -11.256869316101074
    5. '	col' → logprob: -12.256869316101074
    6. '   ' → logprob: -12.756869316101074
    7. ' dist' → logprob: -12.756869316101074
    8. 'cost' → logprob: -13.131869316101074
    9. '(col' → logprob: -13.506869316101074
    10. 'coll' → logprob: -14.006869316101074

Token 702: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004143456753809005
    2. '))' → logprob: -8.62541389465332
    3. ' ,' → logprob: -8.87541389465332
    4. ',col' → logprob: -9.37541389465332
    5. 'col' → logprob: -12.62541389465332
    6. ' col' → logprob: -12.75041389465332
    7. ',
' → logprob: -13.37541389465332
    8. '))
' → logprob: -14.37541389465332
    9. ')' → logprob: -15.00041389465332
    10. ',color' → logprob: -15.37541389465332

Token 703: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.004086355213075876
    2. ' col' → logprob: -5.504086494445801
    3. 'color' → logprob: -12.3790864944458
    4. '	col' → logprob: -13.6290864944458
    5. '   ' → logprob: -15.1290864944458
    6. 'coll' → logprob: -15.2540864944458
    7. ')' → logprob: -15.3790864944458
    8. ' ' → logprob: -15.6290864944458
    9. 'cost' → logprob: -15.6290864944458
    10. '0' → logprob: -15.7540864944458

Token 704: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3133070170879364
    2. '))
' → logprob: -1.3133070468902588
    3. '))
' → logprob: -10.93830680847168
    4. '))

' → logprob: -11.56330680847168
    5. ')' → logprob: -12.43830680847168
    6. ' ))' → logprob: -12.43830680847168
    7. ',' → logprob: -12.56330680847168
    8. ' ))
' → logprob: -13.06330680847168
    9. '));' → logprob: -13.18830680847168
    10. '       ' → logprob: -13.93830680847168

Token 705: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006751431501470506
    2. 'es' → logprob: -7.500675201416016
    3. '   ' → logprob: -9.875675201416016
    4. ' es' → logprob: -10.500675201416016
    5. '<|end|>' → logprob: -10.625675201416016
    6. '	es' → logprob: -11.625675201416016
    7. '	' → logprob: -12.000675201416016
    8. '           ' → logprob: -13.250675201416016
    9. '<|end|>' → logprob: -14.500675201416016
    10. 'e' → logprob: -15.125675201416016

Token 706: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' (adapté à ' es') → logprob: -0.0005801965016871691
    2. '       ' → logprob: -7.500580310821533
    3. ' es' → logprob: -10.750579833984375
    4. '   ' → logprob: -12.250579833984375
    5. '	es' → logprob: -14.125579833984375
    6. '           ' → logprob: -15.375579833984375
    7. 'esi' → logprob: -19.250579833984375
    8. '               ' → logprob: -19.375579833984375
    9. '	' → logprob: -19.625579833984375
    10. 'Es' → logprob: -19.625579833984375

Token 707: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.054500666621607e-06
    2. 'b' → logprob: -12.75000286102295
    3. '[a' → logprob: -17.875003814697266
    4. '[' → logprob: -17.875003814697266
    5. '   ' → logprob: -20.375003814697266
    6. '```' → logprob: -20.625003814697266
    7. ' [' → logprob: -20.875003814697266
    8. '	b' → logprob: -21.375003814697266
    9. '\b' → logprob: -22.125003814697266
    10. '       ' → logprob: -22.250003814697266

Token 708: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -3.9650025428272784e-05
    2. ').' → logprob: -10.375040054321289
    3. '.' → logprob: -12.875040054321289
    4. ']' → logprob: -13.000040054321289
    5. ' ].' → logprob: -13.375040054321289
    6. '.append' → logprob: -14.000040054321289
    7. '       ' → logprob: -14.250040054321289
    8. '   ' → logprob: -14.875040054321289
    9. '}.' → logprob: -17.00004005432129
    10. '[' → logprob: -17.00004005432129

Token 709: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.0280383548888494e-06
    2. ' append' → logprob: -14.750000953674316
    3. '.append' → logprob: -14.875000953674316
    4. 'appen' → logprob: -15.500000953674316
    5. '	append' → logprob: -17.250001907348633
    6. 'a' → logprob: -17.750001907348633
    7. 'app' → logprob: -17.750001907348633
    8. 'Append' → logprob: -19.500001907348633
    9. 'prepend' → logprob: -19.875001907348633
    10. '_append' → logprob: -20.125001907348633

Token 710: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.0280383548888494e-06
    2. '(a' → logprob: -14.000000953674316
    3. ' ((' → logprob: -16.625001907348633
    4. '(' → logprob: -18.125001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '       ' → logprob: -18.250001907348633
    7. '[(' → logprob: -18.500001907348633
    8. ' (' → logprob: -18.750001907348633
    9. '(
' → logprob: -19.500001907348633
    10. '```' → logprob: -19.625001907348633

Token 711: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.038087960332632065
    2. 'a' → logprob: -3.288087844848633
    3. ' (' → logprob: -10.038087844848633
    4. '(
' → logprob: -13.288087844848633
    5. ' a' → logprob: -14.788087844848633
    6. '   ' → logprob: -15.413087844848633
    7. '(' → logprob: -15.413087844848633
    8. '	a' → logprob: -16.288087844848633
    9. '[a' → logprob: -16.663087844848633
    10. ')a' → logprob: -16.913087844848633

Token 712: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.670925358776003e-05
    2. ' ,' → logprob: -9.625066757202148
    3. '<|end|>' → logprob: -15.250066757202148
    4. ',
' → logprob: -16.12506675720215
    5. ')' → logprob: -16.37506675720215
    6. '[' → logprob: -16.75006675720215
    7. '),' → logprob: -17.00006675720215
    8. ' ' → logprob: -17.37506675720215
    9. ',d' → logprob: -17.50006675720215
    10. '‌,' → logprob: -17.87506675720215

Token 713: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08894796669483185
    2. ' dist' → logprob: -2.4639480113983154
    3. '	dist' → logprob: -12.963948249816895
    4. '(dist' → logprob: -13.088948249816895
    5. '   ' → logprob: -14.213948249816895
    6. 'distance' → logprob: -14.838948249816895
    7. ' ' → logprob: -14.838948249816895
    8. '0' → logprob: -14.838948249816895
    9. ',' → logprob: -14.963948249816895
    10. '    ' → logprob: -15.088948249816895

Token 714: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018208740220870823
    2. ' ,' → logprob: -8.625182151794434
    3. ',col' → logprob: -13.375182151794434
    4. ',
' → logprob: -14.625182151794434
    5. '))' → logprob: -15.500182151794434
    6. ' col' → logprob: -16.125181198120117
    7. 'col' → logprob: -17.500181198120117
    8. '),' → logprob: -17.750181198120117
    9. ')),' → logprob: -17.750181198120117
    10. ')' → logprob: -18.250181198120117

Token 715: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.038061000406742096
    2. ' col' → logprob: -3.2880609035491943
    3. 'dist' → logprob: -11.788061141967773
    4. ' dist' → logprob: -12.413061141967773
    5. 'coll' → logprob: -12.538061141967773
    6. 'color' → logprob: -14.038061141967773
    7. ',' → logprob: -14.163061141967773
    8. ',col' → logprob: -14.663061141967773
    9. '	col' → logprob: -14.913061141967773
    10. ' ' → logprob: -15.538061141967773

Token 716: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5027299822540954e-05
    2. ')
' → logprob: -9.875055313110352
    3. '))' → logprob: -13.250055313110352
    4. ' )' → logprob: -13.750055313110352
    5. '       ' → logprob: -15.000055313110352
    6. ')return' → logprob: -16.12505531311035
    7. '   ' → logprob: -16.25005531311035
    8. ')

' → logprob: -16.75005531311035
    9. ')}' → logprob: -16.75005531311035
    10. '),' → logprob: -17.25005531311035

Token 717: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 718: ' gr' (ID: 984)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 719: '.add' (ID: 1950)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0006086751818656921
    2. '[' → logprob: -8.125608444213867
    3. '.append' → logprob: -8.875608444213867
    4. '.' → logprob: -9.000608444213867
    5. '[s' → logprob: -11.500608444213867
    6. 'a' → logprob: -11.875608444213867
    7. '.[' → logprob: -12.500608444213867
    8. '[e' → logprob: -12.500608444213867
    9. '[b' → logprob: -12.625608444213867
    10. '.a' → logprob: -13.000608444213867

Token 720: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.25796520709991455
    2. '(a' → logprob: -2.382965087890625
    3. '(' → logprob: -2.757965087890625
    4. '((' → logprob: -3.257965087890625
    5. 'ed' → logprob: -4.132965087890625
    6. '(edge' → logprob: -5.007965087890625
    7. 'edge' → logprob: -5.757965087890625
    8. '()' → logprob: -6.132965087890625
    9. '_edges' → logprob: -6.382965087890625
    10. '(ed' → logprob: -6.757965087890625

Token 721: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.362307223957032e-05
    2. '(' → logprob: -9.875073432922363
    3. '<|end|>' → logprob: -11.500073432922363
    4. '((' → logprob: -12.000073432922363
    5. '()' → logprob: -12.375073432922363
    6. '(b' → logprob: -14.125073432922363
    7. '(
' → logprob: -16.25007438659668
    8. '(ans' → logprob: -16.37507438659668
    9. '(ab' → logprob: -16.37507438659668
    10. '(an' → logprob: -16.37507438659668

Token 722: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022570860164705664
    2. ' ,' → logprob: -9.000226020812988
    3. ',b' → logprob: -9.500226020812988
    4. ',
' → logprob: -11.000226020812988
    5. ')' → logprob: -12.000226020812988
    6. '<|end|>' → logprob: -12.750226020812988
    7. ',a' → logprob: -14.250226020812988
    8. 'b' → logprob: -15.125226020812988
    9. 'a' → logprob: -16.500225067138672
    10. ',
' → logprob: -16.750225067138672

Token 723: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03804183006286621
    2. ' b' → logprob: -3.288041830062866
    3. ')b' → logprob: -15.663042068481445
    4. '	b' → logprob: -16.538042068481445
    5. ')' → logprob: -16.663042068481445
    6. ' ' → logprob: -16.788042068481445
    7. '   ' → logprob: -16.788042068481445
    8. '<|end|>' → logprob: -17.913042068481445
    9. '(b' → logprob: -18.038042068481445
    10. '    ' → logprob: -18.288042068481445

Token 724: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014370749704539776
    2. ',' → logprob: -9.500144004821777
    3. ')
' → logprob: -10.125144004821777
    4. '<|end|>' → logprob: -10.875144004821777
    5. ' )' → logprob: -11.875144004821777
    6. '   ' → logprob: -13.750144004821777
    7. '))' → logprob: -15.375144004821777
    8. '<|end|>' → logprob: -15.625144004821777
    9. ')return' → logprob: -15.750144004821777
    10. '),' → logprob: -15.875144004821777

Token 725: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.015243254601955414
    2. ' dist' → logprob: -4.765243053436279
    3. 'col' → logprob: -5.140243053436279
    4. '(dist' → logprob: -7.640243053436279
    5. ' col' → logprob: -8.890243530273438
    6. '   ' → logprob: -10.140243530273438
    7. '1' → logprob: -10.515243530273438
    8. '	dist' → logprob: -11.390243530273438
    9. 'cost' → logprob: -11.640243530273438
    10. '  ' → logprob: -11.765243530273438

Token 726: ')

' (ID: 1029)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08949989080429077
    2. ')' → logprob: -2.4644999504089355
    3. ' ,' → logprob: -7.8394999504089355
    4. '<|end|>' → logprob: -9.964499473571777
    5. '   ' → logprob: -10.214499473571777
    6. ' )' → logprob: -11.089499473571777
    7. ',col' → logprob: -11.089499473571777
    8. ',)' → logprob: -11.339499473571777
    9. '<|end|>' → logprob: -11.464499473571777
    10. ',
' → logprob: -11.839499473571777

Token 727: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 728: ' create' (ID: 2501)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.057387113571167
    2. 'main' → logprob: -1.057387113571167
    3. 'def' → logprob: -2.932387113571167
    4. 'add' → logprob: -3.307387113571167
    5. 'build' → logprob: -3.307387113571167
    6. 'create' → logprob: -3.682387113571167
    7. 'd' → logprob: -3.807387113571167
    8. 'solve' → logprob: -4.057387351989746
    9. 'get' → logprob: -4.182387351989746
    10. ' build' → logprob: -4.432387351989746

Token 729: '_L' (ID: 4258)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.1333612203598022
    2. '_gr' → logprob: -1.5083612203598022
    3. '_graph' → logprob: -2.133361339569092
    4. 'L' → logprob: -2.133361339569092
    5. '_edges' → logprob: -3.008361339569092
    6. '_edge' → logprob: -3.508361339569092
    7. '_queue' → logprob: -3.883361339569092
    8. '<|end|>' → logprob: -4.008361339569092
    9. 'Graph' → logprob: -4.133361339569092
    10. 'class' → logprob: -4.383361339569092

Token 730: 'CA' (ID: 6781)
  Prédit: 'CA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -0.004532657563686371
    2. 'ca' → logprob: -6.004532814025879
    3. 'IST' → logprob: -7.504532814025879
    4. 'ist' → logprob: -8.004532814025879
    5. 'CAP' → logprob: -8.754532814025879
    6. 'INK' → logprob: -8.879532814025879
    7. 'ink' → logprob: -9.254532814025879
    8. 'C' → logprob: -9.379532814025879
    9. 'E' → logprob: -9.504532814025879
    10. 'CAT' → logprob: -9.879532814025879

Token 731: '_queries' (ID: 172558)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.013636477291584015
    2. '():' → logprob: -5.263636589050293
    3. '<|end|>' → logprob: -6.388636589050293
    4. 'class' → logprob: -6.513636589050293
    5. '(' → logprob: -6.638636589050293
    6. '(n' → logprob: -6.888636589050293
    7. 'def' → logprob: -6.888636589050293
    8. '(gr' → logprob: -7.763636589050293
    9. '():
' → logprob: -8.138636589050293
    10. ':' → logprob: -8.888636589050293

Token 732: '(Q' (ID: 14437)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.34589552879333496
    2. '(N' → logprob: -1.845895528793335
    3. '(n' → logprob: -2.345895528793335
    4. '(gr' → logprob: -3.720895528793335
    5. '():
' → logprob: -5.720895767211914
    6. '(' → logprob: -5.970895767211914
    7. '(query' → logprob: -6.220895767211914
    8. '(size' → logprob: -6.470895767211914
    9. '(q' → logprob: -7.220895767211914
    10. '(name' → logprob: -7.220895767211914

Token 733: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3949939012527466
    2. ',' → logprob: -1.1449939012527466
    3. '):
' → logprob: -5.269993782043457
    4. ')' → logprob: -6.769993782043457
    5. '(n' → logprob: -7.644993782043457
    6. ':' → logprob: -7.769993782043457
    7. '(' → logprob: -8.519993782043457
    8. ' ):' → logprob: -9.019993782043457
    9. '(N' → logprob: -9.269993782043457
    10. '=' → logprob: -9.519993782043457

Token 734: ' gr' (ID: 984)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16180619597434998
    2. ' input' → logprob: -1.9118062257766724
    3. 'n' → logprob: -7.286806106567383
    4. 'N' → logprob: -8.286806106567383
    5. ')' → logprob: -9.286806106567383
    6. 'gr' → logprob: -9.661806106567383
    7. ' n' → logprob: -9.661806106567383
    8. '(input' → logprob: -9.911806106567383
    9. 'query' → logprob: -10.161806106567383
    10. 'lst' → logprob: -10.286806106567383

Token 735: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00070397206582129
    2. '):
' → logprob: -8.125703811645508
    3. '):' → logprob: -8.625703811645508
    4. ' ,' → logprob: -8.875703811645508
    5. ',
' → logprob: -9.750703811645508
    6. ',input' → logprob: -12.000703811645508
    7. ')' → logprob: -12.125703811645508
    8. '):
' → logprob: -12.375703811645508
    9. ':' → logprob: -12.875703811645508
    10. 'def' → logprob: -13.000703811645508

Token 736: ' ans' (ID: 3345)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04359874129295349
    2. ' input' → logprob: -3.5435986518859863
    3. 'es' → logprob: -5.293598651885986
    4. 'queries' → logprob: -5.543598651885986
    5. 'query' → logprob: -6.668598651885986
    6. 'N' → logprob: -6.918598651885986
    7. ' queries' → logprob: -7.168598651885986
    8. 'gr' → logprob: -7.668598651885986
    9. 'Q' → logprob: -8.293599128723145
    10. ' es' → logprob: -8.543599128723145

Token 737: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13883447647094727
    2. '):
' → logprob: -2.6388344764709473
    3. '):' → logprob: -3.7638344764709473
    4. 'w' → logprob: -4.263834476470947
    5. ')' → logprob: -5.013834476470947
    6. 's' → logprob: -5.263834476470947
    7. 'es' → logprob: -5.638834476470947
    8. '_list' → logprob: -6.638834476470947
    9. '=' → logprob: -7.013834476470947
    10. '):
' → logprob: -7.263834476470947

Token 738: ' qs' (ID: 75083)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02488790452480316
    2. ' input' → logprob: -4.274888038635254
    3. 'es' → logprob: -5.399888038635254
    4. 'N' → logprob: -5.774888038635254
    5. 'query' → logprob: -6.899888038635254
    6. 'queries' → logprob: -7.149888038635254
    7. 'Q' → logprob: -9.024888038635254
    8. 'gr' → logprob: -9.024888038635254
    9. ' queries' → logprob: -9.399888038635254
    10. 'L' → logprob: -9.524888038635254

Token 739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08077000081539154
    2. '):
' → logprob: -2.7057700157165527
    3. '):' → logprob: -4.830770015716553
    4. 'u' → logprob: -7.080770015716553
    5. '):
' → logprob: -7.455770015716553
    6. '=' → logprob: -7.830770015716553
    7. ',
' → logprob: -8.830769538879395
    8. '_input' → logprob: -8.955769538879395
    9. '_func' → logprob: -9.205769538879395
    10. ')' → logprob: -9.330769538879395

Token 740: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05600028485059738
    2. 'N' → logprob: -3.556000232696533
    3. ' input' → logprob: -4.556000232696533
    4. 'es' → logprob: -4.806000232696533
    5. 'qs' → logprob: -7.056000232696533
    6. 'L' → logprob: -7.306000232696533
    7. 'Q' → logprob: -7.431000232696533
    8. 'gr' → logprob: -7.431000232696533
    9. ' N' → logprob: -7.806000232696533
    10. 'query' → logprob: -7.931000232696533

Token 741: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.0002625278721097857
    2. 'func' → logprob: -8.250262260437012
    3. '_funcs' → logprob: -14.875262260437012
    4. ')' → logprob: -15.500262260437012
    5. 'Func' → logprob: -16.000263214111328
    6. 'def' → logprob: -16.250263214111328
    7. '_fun' → logprob: -16.250263214111328
    8. '_function' → logprob: -16.500263214111328
    9. '_FUNC' → logprob: -16.750263214111328
    10. 'f' → logprob: -17.375263214111328

Token 742: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6344241499900818
    2. '):
' → logprob: -0.7594241499900818
    3. '):
' → logprob: -7.009424209594727
    4. ')' → logprob: -7.384424209594727
    5. 'def' → logprob: -9.634424209594727
    6. ',' → logprob: -9.634424209594727
    7. ':' → logprob: -9.884424209594727
    8. '   ' → logprob: -10.009424209594727
    9. '=' → logprob: -10.759424209594727
    10. 'Q' → logprob: -10.759424209594727

Token 743: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47489407658576965
    2. '   ' → logprob: -0.9748940467834473
    3. ' for' → logprob: -7.599894046783447
    4. 'def' → logprob: -8.099894523620605
    5. '	for' → logprob: -11.349894523620605
    6. '
' → logprob: -14.349894523620605
    7. ' ' → logprob: -15.974894523620605
    8. '```' → logprob: -16.47489356994629
    9. '  ' → logprob: -17.59989356994629
    10. '    
' → logprob: -18.09989356994629

Token 744: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0015694992616772652
    2. '   ' → logprob: -6.5015692710876465
    3. ' for' → logprob: -10.001569747924805
    4. 'def' → logprob: -10.751569747924805
    5. '	for' → logprob: -15.376569747924805
    6. '
' → logprob: -16.501569747924805
    7. 'qs' → logprob: -17.376569747924805
    8. '```' → logprob: -17.626569747924805
    9. 'from' → logprob: -18.501569747924805
    10. '_for' → logprob: -18.626569747924805

Token 745: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.8550976164988242e-05
    2. ' _' → logprob: -11.000018119812012
    3. '_i' → logprob: -14.250018119812012
    4. ' in' → logprob: -15.375018119812012
    5. '_q' → logprob: -15.375018119812012
    6. '_=' → logprob: -15.375018119812012
    7. '_range' → logprob: -15.875018119812012
    8. 'i' → logprob: -16.375019073486328
    9. '   ' → logprob: -17.000019073486328
    10. '_
' → logprob: -17.125019073486328

Token 746: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15091931819915771
    2. 'in' → logprob: -2.0259194374084473
    3. '_' → logprob: -4.900919437408447
    4. 'n' → logprob: -7.650919437408447
    5. ' ' → logprob: -8.775918960571289
    6. ' _' → logprob: -9.775918960571289
    7. '_in' → logprob: -10.525918960571289
    8. '   ' → logprob: -11.400918960571289
    9. 'range' → logprob: -11.400918960571289
    10. ',' → logprob: -11.525918960571289

Token 747: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006284446571953595
    2. ' range' → logprob: -7.375628471374512
    3. '_' → logprob: -14.250628471374512
    4. 'ange' → logprob: -15.000628471374512
    5. 'rang' → logprob: -15.750628471374512
    6. 'r' → logprob: -16.000627517700195
    7. '	range' → logprob: -16.250627517700195
    8. ' ' → logprob: -16.375627517700195
    9. '(range' → logprob: -16.375627517700195
    10. 'in' → logprob: -16.500627517700195

Token 748: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.0019305398454889655
    2. 'Q' → logprob: -6.2519307136535645
    3. ' Q' → logprob: -14.126930236816406
    4. '(' → logprob: -14.251930236816406
    5. '	Q' → logprob: -14.751930236816406
    6. '   ' → logprob: -15.751930236816406
    7. ',Q' → logprob: -17.876930236816406
    8. '<Q' → logprob: -19.126930236816406
    9. '1' → logprob: -19.251930236816406
    10. '
' → logprob: -19.376930236816406

Token 749: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0028397070709615946
    2. '):' → logprob: -5.8778395652771
    3. ' ):
' → logprob: -11.127840042114258
    4. '):
' → logprob: -11.252840042114258
    5. '   ' → logprob: -12.377840042114258
    6. ')' → logprob: -12.877840042114258
    7. ' ):' → logprob: -15.627840042114258
    8. '():
' → logprob: -16.502840042114258
    9. ',' → logprob: -16.502840042114258
    10. ':
' → logprob: -16.877840042114258

Token 750: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23272357881069183
    2. '       ' → logprob: -1.607723593711853
    3. 'a' → logprob: -5.732723712921143
    4. ',' → logprob: -5.982723712921143
    5. ' a' → logprob: -7.107723712921143
    6. 'q' → logprob: -9.107723236083984
    7. ',a' → logprob: -9.357723236083984
    8. '(a' → logprob: -9.607723236083984
    9. ' q' → logprob: -9.857723236083984
    10. ')' → logprob: -10.107723236083984

Token 751: ' cx' (ID: 44448)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.49054422974586487
    2. 'u' → logprob: -1.1155441999435425
    3. '   ' → logprob: -3.240544319152832
    4. 'v' → logprob: -4.740544319152832
    5. 'x' → logprob: -5.615544319152832
    6. 'q' → logprob: -5.990544319152832
    7. 'l' → logprob: -6.365544319152832
    8. 's' → logprob: -6.990544319152832
    9. 'p' → logprob: -7.365544319152832
    10. ' u' → logprob: -7.365544319152832

Token 752: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16299894452095032
    2. 's' → logprob: -1.912998914718628
    3. ' =' → logprob: -6.912999153137207
    4. '=' → logprob: -7.662999153137207
    5. ',s' → logprob: -8.162999153137207
    6. ',q' → logprob: -8.662999153137207
    7. ' ,' → logprob: -8.912999153137207
    8. '_,' → logprob: -9.162999153137207
    9. 'x' → logprob: -9.412999153137207
    10. 'q' → logprob: -9.537999153137207

Token 753: ' dy' (ID: 11996)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.007271878886967897
    2. ' cy' → logprob: -5.007271766662598
    3. 'cz' → logprob: -8.882271766662598
    4. 'cx' → logprob: -9.507271766662598
    5. 'cs' → logprob: -10.007271766662598
    6. 'cv' → logprob: -10.132271766662598
    7. 'ct' → logprob: -10.257271766662598
    8. 'dy' → logprob: -10.257271766662598
    9. 'dx' → logprob: -10.632271766662598
    10. '   ' → logprob: -11.007271766662598

Token 754: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32174816727638245
    2. ' =' → logprob: -1.57174813747406
    3. ',' → logprob: -2.6967482566833496
    4. ' ,' → logprob: -12.196747779846191
    5. '   ' → logprob: -13.196747779846191
    6. 'x' → logprob: -13.321747779846191
    7. ' ' → logprob: -13.821747779846191
    8. '=input' → logprob: -14.321747779846191
    9. 'a' → logprob: -15.196747779846191
    10. 't' → logprob: -15.321747779846191

Token 755: ' a' (ID: 261)
  Prédit: 'cz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cz' → logprob: -0.8424453139305115
    2. 'ex' → logprob: -1.9674453735351562
    3. 'cx' → logprob: -2.4674453735351562
    4. ' cz' → logprob: -3.0924453735351562
    5. 'col' → logprob: -3.2174453735351562
    6. 'qx' → logprob: -3.9674453735351562
    7. 'w' → logprob: -4.217445373535156
    8. 'lx' → logprob: -4.217445373535156
    9. 'lz' → logprob: -4.217445373535156
    10. 'sz' → logprob: -4.217445373535156

Token 756: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011095333844423294
    2. '=' → logprob: -5.2610955238342285
    3. ' =' → logprob: -5.2610955238342285
    4. 'b' → logprob: -7.6360955238342285
    5. 'x' → logprob: -9.63609504699707
    6. 'c' → logprob: -10.51109504699707
    7. 'w' → logprob: -10.88609504699707
    8. 'd' → logprob: -11.26109504699707
    9. ',b' → logprob: -11.76109504699707
    10. ' ,' → logprob: -12.01109504699707

Token 757: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.022833548486232758
    2. ' b' → logprob: -3.8978335857391357
    3. 'k' → logprob: -7.897833347320557
    4. 'x' → logprob: -8.397833824157715
    5. '_' → logprob: -8.647833824157715
    6. 'col' → logprob: -8.647833824157715
    7. '_=' → logprob: -8.772833824157715
    8. 'z' → logprob: -9.147833824157715
    9. 'l' → logprob: -9.272833824157715
    10. ' =' → logprob: -9.397833824157715

Token 758: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326285004615784
    2. ' =' → logprob: -1.3132628202438354
    3. ',' → logprob: -14.188262939453125
    4. ' ' → logprob: -15.938262939453125
    5. '   ' → logprob: -16.063262939453125
    6. 'c' → logprob: -17.063262939453125
    7. '＝' → logprob: -17.063262939453125
    8. 'x' → logprob: -17.813262939453125
    9. '    ' → logprob: -18.188262939453125
    10. 'a' → logprob: -18.188262939453125

Token 759: ' I' (ID: 357)
  Prédit: 'ILI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ILI' → logprob: -0.0002562137378845364
    2. 'IL' → logprob: -9.000256538391113
    3. ' I' → logprob: -9.125256538391113
    4. 'I' → logprob: -10.875256538391113
    5. 'ILLI' → logprob: -12.500256538391113
    6. '	IL' → logprob: -14.375256538391113
    7. 'ILL' → logprob: -15.750256538391113
    8. 'ili' → logprob: -15.875256538391113
    9. 'ILY' → logprob: -16.375255584716797
    10. 'ILS' → logprob: -16.500255584716797

Token 760: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.012579227797687054
    2. 'ILI' → logprob: -5.137579441070557
    3. '(' → logprob: -5.262579441070557
    4. 'LL' → logprob: -7.262579441070557
    5. '(L' → logprob: -8.762578964233398
    6. '[' → logprob: -9.012578964233398
    7. ' LI' → logprob: -10.137578964233398
    8. '   ' → logprob: -10.137578964233398
    9. 'L' → logprob: -10.262578964233398
    10. '(x' → logprob: -10.512578964233398

Token 761: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.1472419600977446e-06
    2. 'input' → logprob: -13.750000953674316
    3. '[input' → logprob: -18.125001907348633
    4. ',input' → logprob: -18.500001907348633
    5. '=input' → logprob: -19.250001907348633
    6. '(' → logprob: -19.875001907348633
    7. ' input' → logprob: -20.000001907348633
    8. ' (' → logprob: -20.625001907348633
    9. '<input' → logprob: -21.625001907348633
    10. '(inp' → logprob: -23.000001907348633

Token 762: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.004206852056086063
    2. 'func' → logprob: -5.504206657409668
    3. '(input' → logprob: -9.004206657409668
    4. 'input' → logprob: -12.629206657409668
    5. ')' → logprob: -14.004206657409668
    6. 'Func' → logprob: -14.254206657409668
    7. '```' → logprob: -15.004206657409668
    8. '[input' → logprob: -16.254207611083984
    9. '(' → logprob: -16.629207611083984
    10. '=input' → logprob: -16.754207611083984

Token 763: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015192650025710464
    2. ')
' → logprob: -6.501519203186035
    3. '())' → logprob: -11.751519203186035
    4. '()' → logprob: -12.251519203186035
    5. ' )' → logprob: -13.126519203186035
    6. ')
' → logprob: -13.751519203186035
    7. '))' → logprob: -15.251519203186035
    8. '   ' → logprob: -15.251519203186035
    9. '),' → logprob: -16.00152015686035
    10. ');' → logprob: -16.25152015686035

Token 764: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030540376901626587
    2. '<|end|>' → logprob: -4.030540466308594
    3. '   ' → logprob: -5.155540466308594
    4. ',' → logprob: -5.530540466308594
    5. 'a' → logprob: -6.780540466308594
    6. ',c' → logprob: -8.155540466308594
    7. '
' → logprob: -8.155540466308594
    8. '<|end|>' → logprob: -8.780540466308594
    9. ' ' → logprob: -9.155540466308594
    10. '(cx' → logprob: -9.155540466308594

Token 765: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23906981945037842
    2. 'cx' → logprob: -1.7390698194503784
    3. ' cx' → logprob: -3.864069938659668
    4. 'a' (adapté à ' a') → logprob: -4.864069938659668
    5. '   ' → logprob: -5.489069938659668
    6. 'qs' → logprob: -6.239069938659668
    7. 'x' → logprob: -7.614069938659668
    8. 'c' → logprob: -8.114069938659668
    9. 'qx' → logprob: -8.114069938659668
    10. ' a' → logprob: -8.364069938659668

Token 766: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020532844064291567
    2. ' ,' → logprob: -9.500205039978027
    3. ' -=' → logprob: -9.750205039978027
    4. '-=' → logprob: -10.250205039978027
    5. '-' → logprob: -11.000205039978027
    6. 'a' → logprob: -12.125205039978027
    7. ',b' → logprob: -12.125205039978027
    8. ',a' → logprob: -12.500205039978027
    9. '=' → logprob: -13.500205039978027
    10. ',
' → logprob: -13.625205039978027

Token 767: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04858759790658951
    2. ' b' → logprob: -3.0485875606536865
    3. '   ' → logprob: -15.923587799072266
    4. '    ' → logprob: -16.923587799072266
    5. '	b' → logprob: -17.423587799072266
    6. '       ' → logprob: -17.673587799072266
    7. ' ' → logprob: -17.673587799072266
    8. '<|end|>' → logprob: -17.798587799072266
    9. '  ' → logprob: -18.673587799072266
    10. ' ' → logprob: -18.798587799072266

Token 768: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012658209539949894
    2. ' =' → logprob: -4.38765811920166
    3. ',' → logprob: -8.88765811920166
    4. 'a' → logprob: -11.63765811920166
    5. '=a' → logprob: -14.38765811920166
    6. '   ' → logprob: -14.76265811920166
    7. '-=' → logprob: -15.88765811920166
    8. ',a' → logprob: -16.512659072875977
    9. ' ' → logprob: -16.637659072875977
    10. '[' → logprob: -17.137659072875977

Token 769: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0021853535436093807
    2. ' a' → logprob: -6.127185344696045
    3. '	a' → logprob: -16.252185821533203
    4. '(a' → logprob: -16.502185821533203
    5. ' ' → logprob: -17.002185821533203
    6. '   ' → logprob: -19.002185821533203
    7. 'DEC' → logprob: -19.127185821533203
    8. '  ' → logprob: -19.502185821533203
    9. ' (' → logprob: -20.002185821533203
    10. ' DEC' → logprob: -20.252185821533203

Token 770: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16040892899036407
    2. '-' → logprob: -1.9104089736938477
    3. 'a' → logprob: -9.285408973693848
    4. '[' → logprob: -10.410408973693848
    5. ' ' → logprob: -10.535408973693848
    6. '0' → logprob: -11.035408973693848
    7. 'b' → logprob: -12.410408973693848
    8. ',' → logprob: -12.535408973693848
    9. 'def' → logprob: -12.535408973693848
    10. '1' → logprob: -13.285408973693848

Token 771: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013266648165881634
    2. ' ' → logprob: -6.626326560974121
    3. ',' → logprob: -15.001326560974121
    4. '<|end|>' → logprob: -15.126326560974121
    5. '   ' → logprob: -16.813827514648438
    6. '2' → logprob: -17.188827514648438
    7. '(' → logprob: -17.438827514648438
    8. '[' → logprob: -17.938827514648438
    9. '１' → logprob: -18.001327514648438
    10. '```' → logprob: -18.063827514648438

Token 772: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. ',' → logprob: -15.875027656555176
    4. '<|end|>' → logprob: -16.375028610229492
    5. '2' → logprob: -16.750028610229492
    6. '   ' → logprob: -16.937528610229492
    7. '１' → logprob: -18.687528610229492
    8. '```' → logprob: -18.875028610229492
    9. '[' → logprob: -19.187528610229492
    10. '-' → logprob: -19.250028610229492

Token 773: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ',b' → logprob: -11.625019073486328
    3. ' ,' → logprob: -11.625019073486328
    4. ',
' → logprob: -14.375019073486328
    5. 'b' → logprob: -15.500019073486328
    6. '<|end|>' → logprob: -16.000019073486328
    7. '       ' → logprob: -16.250019073486328
    8. 'a' → logprob: -16.375019073486328
    9. ',c' → logprob: -16.500019073486328
    10. '_,' → logprob: -16.625019073486328

Token 774: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01815205067396164
    2. ' b' → logprob: -4.018152236938477
    3. 'a' → logprob: -13.768152236938477
    4. '   ' → logprob: -14.768152236938477
    5. '<|end|>' → logprob: -15.643152236938477
    6. '    ' → logprob: -15.893152236938477
    7. '       ' → logprob: -16.018152236938477
    8. ' ' → logprob: -16.393152236938477
    9. '  ' → logprob: -17.143152236938477
    10. '	b' → logprob: -17.268152236938477

Token 775: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2849394679069519
    2. '-' → logprob: -1.4099395275115967
    3. ',' → logprob: -5.659939289093018
    4. ' ' → logprob: -8.409939765930176
    5. '<|end|>' → logprob: -10.034939765930176
    6. '   ' → logprob: -11.784939765930176
    7. '  ' → logprob: -12.284939765930176
    8. ')' → logprob: -12.534939765930176
    9. 'def' → logprob: -12.784939765930176
    10. '
' → logprob: -13.284939765930176

Token 776: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '-' → logprob: -18.250051498413086
    4. '   ' → logprob: -19.125051498413086
    5. '１' → logprob: -19.250051498413086
    6. '2' → logprob: -19.625051498413086
    7. '۱' → logprob: -19.750051498413086
    8. '  ' → logprob: -20.125051498413086
    9. '[' → logprob: -20.312551498413086
    10. '<|end|>' → logprob: -20.312551498413086

Token 777: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.228561349213123e-05
    2. ' ' → logprob: -9.875052452087402
    3. '-' → logprob: -15.500052452087402
    4. '2' → logprob: -16.000051498413086
    5. 'b' → logprob: -16.625051498413086
    6. '１' → logprob: -16.687551498413086
    7. '0' → logprob: -17.000051498413086
    8. '   ' → logprob: -17.062551498413086
    9. 'a' → logprob: -17.375051498413086
    10. '۱' → logprob: -17.687551498413086

Token 778: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02172483317553997
    2. '<|end|>' → logprob: -4.021724700927734
    3. '
' → logprob: -5.771724700927734
    4. ',' → logprob: -8.521724700927734
    5. '   ' → logprob: -9.271724700927734
    6. '<|end|>' → logprob: -10.271724700927734
    7. '
' → logprob: -10.646724700927734
    8. ')' → logprob: -10.771724700927734
    9. '	' → logprob: -11.396724700927734
    10. '#' → logprob: -11.521724700927734

Token 779: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001234428636962548
    2. '   ' → logprob: -9.750123023986816
    3. '<|end|>' → logprob: -9.750123023986816
    4. 'qs' → logprob: -13.875123023986816
    5. ' ' → logprob: -14.000123023986816
    6. '
' → logprob: -14.125123023986816
    7. '	' → logprob: -14.250123023986816
    8. 'def' → logprob: -14.625123023986816
    9. '      ' → logprob: -15.000123023986816
    10. 'q' → logprob: -15.000123023986816

Token 780: ' c' (ID: 274)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.06659690290689468
    2. '       ' → logprob: -2.9415969848632812
    3. '   ' → logprob: -4.816596984863281
    4. 'cx' → logprob: -5.816596984863281
    5. 'gr' → logprob: -8.691596984863281
    6. 'ans' → logprob: -9.191596984863281
    7. 'ques' → logprob: -9.566596984863281
    8. 'q' → logprob: -9.816596984863281
    9. 'qx' → logprob: -10.191596984863281
    10. ' qs' → logprob: -10.441596984863281

Token 781: ' =' (ID: 314)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05676870420575142
    2. ',' → logprob: -2.9317686557769775
    3. '=' → logprob: -6.681768894195557
    4. ' =' → logprob: -7.431768894195557
    5. ',x' → logprob: -11.181768417358398
    6. 's' → logprob: -12.431768417358398
    7. 'y' → logprob: -12.431768417358398
    8. ',s' → logprob: -13.056768417358398
    9. ' ,' → logprob: -13.681768417358398
    10. '_,' → logprob: -14.056768417358398

Token 782: ' gr' (ID: 984)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005018008523620665
    2. 'y' → logprob: -9.62550163269043
    3. 'xs' → logprob: -9.75050163269043
    4. ' cx' → logprob: -9.87550163269043
    5. 'int' → logprob: -10.25050163269043
    6. '[' → logprob: -10.25050163269043
    7. '0' → logprob: -10.37550163269043
    8. 'cx' → logprob: -10.75050163269043
    9. '[]' → logprob: -10.87550163269043
    10. '[]
' → logprob: -11.00050163269043

Token 783: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.06029257923364639
    2. '.get' → logprob: -3.0602924823760986
    3. '.find' → logprob: -5.310292720794678
    4. '.L' → logprob: -5.935292720794678
    5. '.low' → logprob: -6.560292720794678
    6. '.calc' → logprob: -6.935292720794678
    7. '.query' → logprob: -7.310292720794678
    8. '.color' → logprob: -7.810292720794678
    9. '.' → logprob: -8.43529224395752
    10. '.closest' → logprob: -9.68529224395752

Token 784: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.004813630599528551
    2. 'e' → logprob: -5.7548136711120605
    3. 'ift' → logprob: -8.504813194274902
    4. 'ast' → logprob: -8.504813194274902
    5. 'ev' → logprob: -8.629813194274902
    6. 'a' → logprob: -9.004813194274902
    7. '   ' → logprob: -9.129813194274902
    8. 'ow' → logprob: -9.254813194274902
    9. 'ead' → logprob: -9.504813194274902
    10. 'c' → logprob: -9.629813194274902

Token 785: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.906711546937004e-05
    2. '(' → logprob: -10.875048637390137
    3. '.a' → logprob: -11.750048637390137
    4. '(c' → logprob: -12.500048637390137
    5. '.l' → logprob: -13.250048637390137
    6. '.find' → logprob: -13.375048637390137
    7. '((' → logprob: -13.875048637390137
    8. 'query' → logprob: -13.875048637390137
    9. '.query' → logprob: -13.875048637390137
    10. '.get' → logprob: -13.875048637390137

Token 786: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002919945865869522
    2. ',b' → logprob: -5.877920150756836
    3. 'b' → logprob: -9.752920150756836
    4. ' ,' → logprob: -10.127920150756836
    5. ',
' → logprob: -11.252920150756836
    6. 'a' → logprob: -14.127920150756836
    7. ')' → logprob: -14.377920150756836
    8. '[b' → logprob: -14.877920150756836
    9. ' b' → logprob: -15.002920150756836
    10. '[' → logprob: -15.002920150756836

Token 787: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0010330495424568653
    2. ' b' → logprob: -6.876032829284668
    3. '   ' → logprob: -16.126033782958984
    4. ')b' → logprob: -16.376033782958984
    5. '	b' → logprob: -17.251033782958984
    6. ' ' → logprob: -17.501033782958984
    7. ')' → logprob: -17.876033782958984
    8. '       ' → logprob: -18.501033782958984
    9. 'c' → logprob: -18.626033782958984
    10. '[b' → logprob: -18.626033782958984

Token 788: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0069300392642617226
    2. ')
' → logprob: -5.131929874420166
    3. ',' → logprob: -7.006929874420166
    4. ' )' → logprob: -10.006930351257324
    5. ')c' → logprob: -11.506930351257324
    6. '       ' → logprob: -11.631930351257324
    7. '<|end|>' → logprob: -12.881930351257324
    8. ')
' → logprob: -12.881930351257324
    9. ' ,' → logprob: -13.131930351257324
    10. ')return' → logprob: -13.131930351257324

Token 789: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007218453683890402
    2. '<|end|>' → logprob: -7.7507219314575195
    3. '   ' → logprob: -8.50072193145752
    4. 'if' → logprob: -10.50072193145752
    5. 's' → logprob: -10.87572193145752
    6. ' if' → logprob: -12.25072193145752
    7. '<|end|>' → logprob: -12.37572193145752
    8. '
' → logprob: -12.37572193145752
    9. 'qs' → logprob: -12.50072193145752
    10. '```' → logprob: -12.62572193145752

Token 790: ' ans' (ID: 3345)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25170814990997314
    2. 'ans' (adapté à ' ans') → logprob: -2.3767080307006836
    3. '   ' → logprob: -3.0017080307006836
    4. 'gr' → logprob: -4.126708030700684
    5. 'd' → logprob: -4.251708030700684
    6. 'col' → logprob: -4.501708030700684
    7. 'qs' → logprob: -4.626708030700684
    8. '       ' → logprob: -5.376708030700684
    9. ' if' → logprob: -5.626708030700684
    10. 'e' → logprob: -6.251708030700684

Token 791: '[i' (ID: 1768)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.6342194080352783
    2. '[i' → logprob: -0.7592194080352783
    3. '[c' → logprob: -7.134219169616699
    4. '.' → logprob: -7.509219169616699
    5. '[' → logprob: -8.6342191696167
    6. 'append' → logprob: -10.3842191696167
    7. '[a' → logprob: -11.1342191696167
    8. '.insert' → logprob: -11.6342191696167
    9. '.extend' → logprob: -12.5092191696167
    10. ',' → logprob: -12.6342191696167

Token 792: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.44781798124313354
    2. '=' → logprob: -1.6978180408477783
    3. ' =' → logprob: -2.3228180408477783
    4. ',' → logprob: -3.1978180408477783
    5. '[' → logprob: -3.8228180408477783
    6. ']=' → logprob: -4.572817802429199
    7. '],' → logprob: -6.072817802429199
    8. '][' → logprob: -6.322817802429199
    9. ')' → logprob: -7.197817802429199
    10. ' +=' → logprob: -7.697817802429199

Token 793: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6350258588790894
    2. ' =' → logprob: -0.7600258588790894
    3. ',' → logprob: -6.135025978088379
    4. ' +=' → logprob: -9.010025978088379
    5. '+=' → logprob: -9.885025978088379
    6. '[' → logprob: -10.010025978088379
    7. ' ,' → logprob: -11.135025978088379
    8. '.=' → logprob: -12.260025978088379
    9. ' *=' → logprob: -13.260025978088379
    10. ' ' → logprob: -13.260025978088379

Token 794: ' gr' (ID: 984)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.008232160471379757
    2. 'c' → logprob: -6.258232116699219
    3. '0' → logprob: -6.883232116699219
    4. 'abs' → logprob: -7.008232116699219
    5. '(gr' → logprob: -7.133232116699219
    6. '(c' → logprob: -7.258232116699219
    7. 'cx' → logprob: -7.383232116699219
    8. '[' → logprob: -7.383232116699219
    9. '(' → logprob: -8.133232116699219
    10. ' gr' → logprob: -8.508232116699219

Token 795: '.cost' (ID: 80655)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.get' → logprob: -1.1512538194656372
    2. '.query' → logprob: -1.6512538194656372
    3. '.count' → logprob: -2.2762537002563477
    4. '.dist' → logprob: -2.6512537002563477
    5. '.sum' → logprob: -2.9012537002563477
    6. '.l' → logprob: -3.0262537002563477
    7. '.calc' → logprob: -3.1512537002563477
    8. '.distance' → logprob: -3.4012537002563477
    9. '.add' → logprob: -4.651253700256348
    10. '.update' → logprob: -4.651253700256348

Token 796: 's' (ID: 82)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.237494096159935
    2. '(c' → logprob: -1.8624941110610962
    3. '[c' → logprob: -3.6124939918518066
    4. '[a' → logprob: -4.487493991851807
    5. 's' → logprob: -4.862493991851807
    6. '(cx' → logprob: -5.862493991851807
    7. '_sum' → logprob: -6.362493991851807
    8. 'sum' → logprob: -6.862493991851807
    9. '_between' → logprob: -6.862493991851807
    10. '(' → logprob: -6.987493991851807

Token 797: '[a' (ID: 32035)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.15091021358966827
    2. '[a' → logprob: -2.1509101390838623
    3. '(c' → logprob: -4.400910377502441
    4. '(a' → logprob: -4.650910377502441
    5. 'c' → logprob: -7.275910377502441
    6. 'a' → logprob: -7.275910377502441
    7. '[' → logprob: -8.150910377502441
    8. '[(' → logprob: -10.650910377502441
    9. '```' → logprob: -10.650910377502441
    10. '[l' → logprob: -10.900910377502441

Token 798: ']' (ID: 60)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.09004504978656769
    2. ']' → logprob: -3.0900449752807617
    3. '][' → logprob: -4.090044975280762
    4. '[' → logprob: -4.465044975280762
    5. '-' → logprob: -5.465044975280762
    6. ']+' → logprob: -6.215044975280762
    7. '+' → logprob: -6.465044975280762
    8. ')' → logprob: -6.840044975280762
    9. ']-' → logprob: -7.340044975280762
    10. '[]' → logprob: -7.465044975280762

Token 799: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3534039556980133
    2. ' +' → logprob: -2.1034040451049805
    3. '[c' → logprob: -2.3534040451049805
    4. '-' → logprob: -3.1034040451049805
    5. ' -' → logprob: -4.2284040451049805
    6. '[' → logprob: -4.4784040451049805
    7. '+c' → logprob: -4.8534040451049805
    8. '[-' → logprob: -7.3534040451049805
    9. '[a' → logprob: -8.47840404510498
    10. 'c' → logprob: -9.35340404510498

Token 800: ' gr' (ID: 984)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.00012439649435691535
    2. ' gr' → logprob: -9.000123977661133
    3. '-gr' → logprob: -14.500123977661133
    4. '	gr' → logprob: -15.625123977661133
    5. '(gr' → logprob: -15.750123977661133
    6. '   ' → logprob: -17.125123977661133
    7. '_gr' → logprob: -17.875123977661133
    8. '-' → logprob: -18.125123977661133
    9. ' ' → logprob: -18.375123977661133
    10. '           ' → logprob: -18.500123977661133

Token 801: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.00013786651834379882
    2. 'cost' → logprob: -9.125138282775879
    3. '.c' → logprob: -11.250138282775879
    4. ' .' → logprob: -11.750138282775879
    5. '.' → logprob: -13.625138282775879
    6. '.dist' → logprob: -13.625138282775879
    7. '-cost' → logprob: -14.125138282775879
    8. ' costs' → logprob: -14.250138282775879
    9. '```' → logprob: -14.375138282775879
    10. '_cost' → logprob: -14.875138282775879

Token 802: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00023607931507285684
    2. '[s' → logprob: -8.625236511230469
    3. '[c' → logprob: -10.375236511230469
    4. '[b' → logprob: -11.125236511230469
    5. 'cost' → logprob: -11.875236511230469
    6. 'Costs' → logprob: -13.875236511230469
    7. ' costs' → logprob: -14.125236511230469
    8. '[' → logprob: -15.000236511230469
    9. 'c' → logprob: -15.125236511230469
    10. '[a' → logprob: -15.625236511230469

Token 803: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.00010580805974313989
    2. 'b' → logprob: -9.625105857849121
    3. '[c' → logprob: -10.250105857849121
    4. '[' → logprob: -13.375105857849121
    5. '[a' → logprob: -14.250105857849121
    6. ' [' → logprob: -14.500105857849121
    7. '```' → logprob: -15.000105857849121
    8. '	b' → logprob: -15.625105857849121
    9. '[i' → logprob: -15.625105857849121
    10. '   ' → logprob: -16.000104904174805

Token 804: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.048604849725961685
    2. '-' → logprob: -3.048604965209961
    3. ' ' → logprob: -11.423604965209961
    4. '   ' → logprob: -12.298604965209961
    5. ')' → logprob: -13.923604965209961
    6. '       ' → logprob: -15.673604965209961
    7. ',' → logprob: -15.923604965209961
    8. '  ' → logprob: -16.29860496520996
    9. '    ' → logprob: -16.42360496520996
    10. ' ' → logprob: -16.54860496520996

Token 805: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17977111041545868
    2. '-' → logprob: -1.804771065711975
    3. ' ' → logprob: -11.429771423339844
    4. '   ' → logprob: -11.929771423339844
    5. '[' → logprob: -13.054771423339844
    6. ')' → logprob: -13.804771423339844
    7. ' -
' → logprob: -13.929771423339844
    8. '-gr' → logprob: -14.679771423339844
    9. ' ' → logprob: -14.804771423339844
    10. '       ' → logprob: -14.804771423339844

Token 806: ' gr' (ID: 984)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0016655426006764174
    2. ' ' → logprob: -7.2516655921936035
    3. '(gr' → logprob: -7.8766655921936035
    4. '(' → logprob: -8.126665115356445
    5. 'gr' → logprob: -8.251665115356445
    6. '   ' → logprob: -11.876665115356445
    7. ' (' → logprob: -12.001665115356445
    8. '(
' → logprob: -13.501665115356445
    9. ' gr' → logprob: -13.751665115356445
    10. '
' → logprob: -14.376665115356445

Token 807: '.cost' (ID: 80655)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016563178971409798
    2. '.cost' → logprob: -4.766563415527344
    3. 'cost' → logprob: -4.891563415527344
    4. '[' → logprob: -8.141563415527344
    5. ' ' → logprob: -10.641563415527344
    6. '.gr' → logprob: -10.641563415527344
    7. '.' → logprob: -10.891563415527344
    8. ' costs' → logprob: -11.641563415527344
    9. 's' → logprob: -12.141563415527344
    10. '   ' → logprob: -12.766563415527344

Token 808: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0280383548888494e-06
    2. '[s' → logprob: -13.875000953674316
    3. '[' → logprob: -17.000001907348633
    4. '[c' → logprob: -17.750001907348633
    5. ' s' → logprob: -20.000001907348633
    6. 'cost' → logprob: -20.375001907348633
    7. '[i' → logprob: -20.375001907348633
    8. '[a' → logprob: -21.125001907348633
    9. ' costs' → logprob: -22.250001907348633
    10. '[start' → logprob: -22.250001907348633

Token 809: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -12.500004768371582
    3. 'c' → logprob: -14.125004768371582
    4. ' [' → logprob: -14.375004768371582
    5. '[
' → logprob: -17.8750057220459
    6. '```' → logprob: -18.1250057220459
    7. '[C' → logprob: -18.5000057220459
    8. '[m' → logprob: -19.7500057220459
    9. '[l' → logprob: -19.7500057220459
    10. '[col' → logprob: -19.8750057220459

Token 810: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04162658751010895
    2. '-' → logprob: -3.9166266918182373
    3. '*' → logprob: -4.541626453399658
    4. ')' → logprob: -5.416626453399658
    5. ' *' → logprob: -5.791626453399658
    6. ']' → logprob: -6.291626453399658
    7. ' ' → logprob: -8.791626930236816
    8. '[' → logprob: -8.916626930236816
    9. 'def' → logprob: -8.916626930236816
    10. '   ' → logprob: -9.291626930236816

Token 811: ' *' (ID: 425)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8052979111671448
    2. '-' → logprob: -0.9302979111671448
    3. '*' → logprob: -1.9302978515625
    4. ' *' → logprob: -5.0552978515625
    5. '2' → logprob: -6.0552978515625
    6. '<|end|>' → logprob: -6.0552978515625
    7. 'def' → logprob: -7.5552978515625
    8. '   ' → logprob: -7.9302978515625
    9. ')' → logprob: -7.9302978515625
    10. ' ' → logprob: -8.6802978515625

Token 812: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.576873758807778e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.500075340270996
    4. '  ' → logprob: -16.000076293945312
    5. '۲' → logprob: -17.000076293945312
    6. '    ' → logprob: -17.375076293945312
    7. '２' → logprob: -17.500076293945312
    8. '
' → logprob: -18.375076293945312
    9. '     ' → logprob: -18.875076293945312
    10. '(' → logprob: -19.000076293945312

Token 813: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.250009536743164
    4. '  ' → logprob: -17.000009536743164
    5. '۲' → logprob: -18.125009536743164
    6. '２' → logprob: -18.250009536743164
    7. '    ' → logprob: -18.375009536743164
    8. '
' → logprob: -19.000009536743164
    9. 'two' → logprob: -19.500009536743164
    10. '     ' → logprob: -19.750009536743164

Token 814: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 815: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 816: ' qs' (ID: 75083)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 817: '[a' (ID: 32035)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009877678006887436
    2. '.append' → logprob: -4.634877681732178
    3. '[c' → logprob: -9.75987720489502
    4. '[' → logprob: -10.25987720489502
    5. '[a' → logprob: -11.13487720489502
    6. '.' → logprob: -11.88487720489502
    7. 'append' → logprob: -13.25987720489502
    8. '```' → logprob: -13.25987720489502
    9. '.setdefault' → logprob: -15.00987720489502
    10. '.push' → logprob: -15.00987720489502

Token 818: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.016603980213403702
    2. '.append' → logprob: -4.141603946685791
    3. ']' → logprob: -8.51660442352295
    4. '.' → logprob: -8.64160442352295
    5. ').' → logprob: -9.64160442352295
    6. '][' → logprob: -9.89160442352295
    7. 'append' → logprob: -10.64160442352295
    8. ',' → logprob: -11.14160442352295
    9. ' ].' → logprob: -11.51660442352295
    10. '[' → logprob: -12.26660442352295

Token 819: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.080963092041202e-06
    2. 'add' → logprob: -13.000004768371582
    3. '.append' → logprob: -13.000004768371582
    4. ' append' → logprob: -15.250004768371582
    5. 'push' → logprob: -16.1250057220459
    6. 'insert' → logprob: -16.2500057220459
    7. 'app' → logprob: -17.1250057220459
    8. 'appen' → logprob: -17.3750057220459
    9. '	append' → logprob: -17.6250057220459
    10. 'enqueue' → logprob: -17.8750057220459

Token 820: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.008661486208438873
    2. '(i' → logprob: -4.758661270141602
    3. '(' → logprob: -10.008661270141602
    4. '(((' → logprob: -13.758661270141602
    5. '(c' → logprob: -15.133661270141602
    6. ' ((' → logprob: -15.883661270141602
    7. '(a' → logprob: -15.883661270141602
    8. '(b' → logprob: -16.3836612701416
    9. '([' → logprob: -16.6336612701416
    10. 'i' → logprob: -16.7586612701416

Token 821: 'cx' (ID: 47207)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6271657943725586
    2. 'b' → logprob: -1.2521657943725586
    3. 'c' → logprob: -1.7521657943725586
    4. 'a' → logprob: -5.752165794372559
    5. '(i' → logprob: -6.377165794372559
    6. '(c' → logprob: -7.877165794372559
    7. '0' → logprob: -8.377165794372559
    8. 'cx' → logprob: -8.627165794372559
    9. ' i' → logprob: -8.752165794372559
    10. '(b' → logprob: -9.002165794372559

Token 822: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003552319947630167
    2. '-' → logprob: -5.878552436828613
    3. ' -' → logprob: -8.003552436828613
    4. ' ,' → logprob: -8.128552436828613
    5. ',i' → logprob: -10.378552436828613
    6. ',b' → logprob: -10.628552436828613
    7. ' ' → logprob: -11.878552436828613
    8. '   ' → logprob: -11.878552436828613
    9. 'b' → logprob: -12.003552436828613
    10. ',c' → logprob: -12.128552436828613

Token 823: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05751257762312889
    2. 'b' → logprob: -3.5575125217437744
    3. '1' → logprob: -4.8075127601623535
    4. '(i' → logprob: -4.9325127601623535
    5. 'c' → logprob: -5.3075127601623535
    6. ' i' → logprob: -5.4325127601623535
    7. '+' → logprob: -6.6825127601623535
    8. 'dy' → logprob: -8.182512283325195
    9. 'a' → logprob: -8.682512283325195
    10. '(' → logprob: -8.932512283325195

Token 824: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1301991045475006
    2. '))
' → logprob: -2.1301991939544678
    3. ',' → logprob: -5.755198955535889
    4. ' ))' → logprob: -10.505199432373047
    5. '))

' → logprob: -10.880199432373047
    6. ')' → logprob: -11.130199432373047
    7. '))
' → logprob: -11.130199432373047
    8. ' ))
' → logprob: -11.755199432373047
    9. ',b' → logprob: -12.380199432373047
    10. ',))
' → logprob: -12.755199432373047

Token 825: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.509861171245575
    2. '-' → logprob: -2.0098612308502197
    3. 'b' → logprob: -2.2598612308502197
    4. '0' → logprob: -3.0098612308502197
    5. '+' → logprob: -3.2598612308502197
    6. 'dy' → logprob: -3.5098612308502197
    7. 'True' → logprob: -4.134860992431641
    8. 'a' → logprob: -4.509860992431641
    9. ' ' → logprob: -4.884860992431641
    10. 'c' → logprob: -6.509860992431641

Token 826: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6120941042900085
    2. '-' → logprob: -1.9870941638946533
    3. '0' → logprob: -1.9870941638946533
    4. 'dy' → logprob: -2.7370941638946533
    5. 'b' → logprob: -2.8620941638946533
    6. '+' → logprob: -3.7370941638946533
    7. 'True' → logprob: -3.9870941638946533
    8. 'a' → logprob: -4.487093925476074
    9. ' ' → logprob: -6.612093925476074
    10. 'False' → logprob: -6.737093925476074

Token 827: ',' (ID: 11)
  Prédit: '))
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.576385498046875
    2. '))' → logprob: -0.826385498046875
    3. '))
' → logprob: -8.201385498046875
    4. ' ))
' → logprob: -9.451385498046875
    5. ' ))' → logprob: -9.951385498046875
    6. '))

' → logprob: -10.951385498046875
    7. ',' → logprob: -11.826385498046875
    8. ')' → logprob: -12.201385498046875
    9. ' ' → logprob: -12.451385498046875
    10. '   ' → logprob: -12.451385498046875

Token 828: ' dy' (ID: 11996)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.034081220626831
    2. 'b' → logprob: -1.159081220626831
    3. '0' → logprob: -2.284081220626831
    4. 'dy' → logprob: -3.409081220626831
    5. 'dx' → logprob: -3.409081220626831
    6. 'dist' → logprob: -3.409081220626831
    7. '))' → logprob: -3.534081220626831
    8. 'c' → logprob: -3.534081220626831
    9. '1' → logprob: -3.659081220626831
    10. '-' → logprob: -3.909081220626831

Token 829: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.16048793494701385
    2. '))' → logprob: -1.9104878902435303
    3. ' ))
' → logprob: -9.03548812866211
    4. '))
' → logprob: -9.16048812866211
    5. ' ))' → logprob: -10.91048812866211
    6. '))

' → logprob: -12.16048812866211
    7. '   ' → logprob: -12.41048812866211
    8. '       ' → logprob: -12.41048812866211
    9. ' ' → logprob: -13.03548812866211
    10. ',))
' → logprob: -13.53548812866211

Token 830: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007468560361303389
    2. '   ' → logprob: -7.250746726989746
    3. '<|end|>' → logprob: -10.375746726989746
    4. '
' → logprob: -13.375746726989746
    5. '           ' → logprob: -14.250746726989746
    6. '	' → logprob: -14.250746726989746
    7. '```' → logprob: -14.625746726989746
    8. ')' → logprob: -14.750746726989746
    9. ',' → logprob: -14.875746726989746
    10. ' ' → logprob: -15.000746726989746

Token 831: ' qs' (ID: 75083)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2650226354598999
    2. 'qs' (adapté à ' qs') → logprob: -1.8900226354599
    3. ' qs' → logprob: -2.7650227546691895
    4. '   ' → logprob: -4.0150227546691895
    5. ' ' → logprob: -7.6400227546691895
    6. 'q' → logprob: -9.390022277832031
    7. '           ' → logprob: -9.515022277832031
    8. '  ' → logprob: -11.140022277832031
    9. '      ' → logprob: -11.265022277832031
    10. '     ' → logprob: -11.515022277832031

Token 832: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.2246291337069124e-05
    2. '[a' → logprob: -11.250021934509277
    3. '[' → logprob: -12.625021934509277
    4. 'b' → logprob: -12.875021934509277
    5. ' [' → logprob: -13.375021934509277
    6. '[c' → logprob: -14.375021934509277
    7. '   ' → logprob: -14.375021934509277
    8. '```' → logprob: -14.875021934509277
    9. '	b' → logprob: -16.750022888183594
    10. '(b' → logprob: -17.250022888183594

Token 833: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.003032255917787552
    2. ').' → logprob: -6.378032207489014
    3. '.append' → logprob: -6.878032207489014
    4. '.' → logprob: -8.253032684326172
    5. '       ' → logprob: -11.253032684326172
    6. ']' → logprob: -11.628032684326172
    7. '][' → logprob: -12.503032684326172
    8. ' ].' → logprob: -12.753032684326172
    9. '[' → logprob: -12.878032684326172
    10. '   ' → logprob: -13.378032684326172

Token 834: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.3080716346157715e-05
    2. '.append' → logprob: -10.750022888183594
    3. ' append' → logprob: -13.500022888183594
    4. '	append' → logprob: -16.250022888183594
    5. 'appen' → logprob: -16.625022888183594
    6. '_append' → logprob: -18.250022888183594
    7. 'Append' → logprob: -18.375022888183594
    8. '```' → logprob: -18.625022888183594
    9. 'prepend' → logprob: -19.250022888183594
    10. 'app' → logprob: -19.375022888183594

Token 835: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -3.173704271830502e-06
    2. '(cx' → logprob: -13.50000286102295
    3. ' ((' → logprob: -13.75000286102295
    4. '(' → logprob: -14.62500286102295
    5. '(c' → logprob: -16.625003814697266
    6. ' (' → logprob: -17.500003814697266
    7. '```' → logprob: -17.625003814697266
    8. '((-' → logprob: -17.625003814697266
    9. '[(' → logprob: -17.750003814697266
    10. '   ' → logprob: -17.750003814697266

Token 836: 'cx' (ID: 47207)
  Prédit: 'cx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.08031993359327316
    2. '(cx' → logprob: -2.955319881439209
    3. 'cy' → logprob: -3.705319881439209
    4. '(c' → logprob: -8.080320358276367
    5. 'dy' → logprob: -9.705320358276367
    6. 'dx' → logprob: -9.955320358276367
    7. '(' → logprob: -10.205320358276367
    8. ' cx' → logprob: -10.705320358276367
    9. '(dx' → logprob: -11.330320358276367
    10. '.cx' → logprob: -11.830320358276367

Token 837: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.957014556974173e-05
    2. ' ,' → logprob: -9.625069618225098
    3. '<|end|>' → logprob: -12.875069618225098
    4. '‌,' → logprob: -15.500069618225098
    5. ',
' → logprob: -15.875069618225098
    6. ' ' → logprob: -16.12506866455078
    7. '<|end|>' → logprob: -16.12506866455078
    8. ',i' → logprob: -16.37506866455078
    9. ',user' → logprob: -16.75006866455078
    10. '),' → logprob: -17.37506866455078

Token 838: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00975998304784298
    2. ' i' → logprob: -4.634759902954102
    3. ' ' → logprob: -13.884759902954102
    4. '   ' → logprob: -14.134759902954102
    5. '	i' → logprob: -14.634759902954102
    6. 'b' → logprob: -14.759759902954102
    7. ',' → logprob: -15.384759902954102
    8. '    ' → logprob: -15.509759902954102
    9. ',i' → logprob: -15.509759902954102
    10. '     ' → logprob: -16.0097599029541

Token 839: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023071514442563057
    2. ' ,' → logprob: -8.37523078918457
    3. '),' → logprob: -17.25023078918457
    4. '   ' → logprob: -17.62523078918457
    5. ' ' → logprob: -17.75023078918457
    6. '1' → logprob: -17.87523078918457
    7. ',
' → logprob: -17.87523078918457
    8. '0' → logprob: -18.12523078918457
    9. ')' → logprob: -18.12523078918457
    10. '‌,' → logprob: -19.00023078918457

Token 840: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004242395516484976
    2. '0' → logprob: -8.6254243850708
    3. '1' → logprob: -8.6254243850708
    4. ' -' → logprob: -9.7504243850708
    5. '2' → logprob: -13.0004243850708
    6. ' ' → logprob: -13.7504243850708
    7. '-
' → logprob: -14.2504243850708
    8. '   ' → logprob: -14.5629243850708
    9. '−' → logprob: -14.7504243850708
    10. '
' → logprob: -15.3754243850708

Token 841: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0206720617134124e-05
    2. '0' → logprob: -11.87501049041748
    3. ' -' → logprob: -13.50001049041748
    4. '1' → logprob: -14.75001049041748
    5. '-
' → logprob: -14.75001049041748
    6. '−' → logprob: -15.00001049041748
    7. '2' → logprob: -15.25001049041748
    8. '
' → logprob: -16.500009536743164
    9. '' → logprob: -17.000009536743164
    10. '(-' → logprob: -17.125009536743164

Token 842: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037132782745175064
    2. ' ,' → logprob: -8.125370979309082
    3. '-' → logprob: -10.250370979309082
    4. ' -' → logprob: -11.250370979309082
    5. '))' → logprob: -12.125370979309082
    6. ',d' → logprob: -12.750370979309082
    7. ',-' → logprob: -12.750370979309082
    8. '0' → logprob: -12.875370979309082
    9. ',
' → logprob: -12.875370979309082
    10. ')' → logprob: -13.000370979309082

Token 843: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0017773995641618967
    2. ' dy' → logprob: -6.501777172088623
    3. '-' → logprob: -8.501777648925781
    4. '-d' → logprob: -10.751777648925781
    5. '   ' → logprob: -11.376777648925781
    6. '0' → logprob: -11.626777648925781
    7. ' -' → logprob: -11.876777648925781
    8. ')' → logprob: -12.251777648925781
    9. 'd' → logprob: -12.876777648925781
    10. '  ' → logprob: -12.876777648925781

Token 844: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001387850963510573
    2. ')
' → logprob: -6.626388072967529
    3. '       ' → logprob: -10.251387596130371
    4. '))' → logprob: -10.876387596130371
    5. '   ' → logprob: -12.876387596130371
    6. ' )' → logprob: -13.251387596130371
    7. ')}' → logprob: -13.751387596130371
    8. ')
' → logprob: -14.501387596130371
    9. ')`' → logprob: -15.126387596130371
    10. '<|end|>' → logprob: -15.376387596130371

Token 845: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3149642050266266
    2. '<|end|>' → logprob: -1.3149641752243042
    3. ')' → logprob: -6.814964294433594
    4. '   ' → logprob: -8.189964294433594
    5. '<|end|>' → logprob: -9.064964294433594
    6. '```' → logprob: -9.564964294433594
    7. '	' → logprob: -10.564964294433594
    8. ',' → logprob: -11.064964294433594
    9. '#' → logprob: -11.314964294433594
    10. ' ' → logprob: -11.439964294433594

Token 846: ' qs' (ID: 75083)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17125453054904938
    2. 'qs' (adapté à ' qs') → logprob: -2.4212546348571777
    3. 'q' → logprob: -3.0462546348571777
    4. 'c' → logprob: -4.171254634857178
    5. '<|end|>' → logprob: -6.546254634857178
    6. '   ' → logprob: -7.171254634857178
    7. '```' → logprob: -7.421254634857178
    8. ' qs' → logprob: -7.921254634857178
    9. '
' → logprob: -8.17125415802002
    10. 'ql' → logprob: -8.29625415802002

Token 847: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.25000286102295
    3. 'c' → logprob: -15.50000286102295
    4. '[a' → logprob: -15.50000286102295
    5. ' [' → logprob: -16.375001907348633
    6. '[q' → logprob: -17.250001907348633
    7. '```' → logprob: -17.375001907348633
    8. '
' → logprob: -17.625001907348633
    9. '[
' → logprob: -17.875001907348633
    10. '[s' → logprob: -18.000001907348633

Token 848: '].' (ID: 1651)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.2837875783443451
    2. '].' → logprob: -1.9087876081466675
    3. '[a' → logprob: -2.783787488937378
    4. '][' → logprob: -3.908787488937378
    5. '[i' → logprob: -5.033787727355957
    6. ').' → logprob: -5.908787727355957
    7. '[b' → logprob: -6.408787727355957
    8. '```' → logprob: -6.783787727355957
    9. '[' → logprob: -7.033787727355957
    10. '.' → logprob: -7.408787727355957

Token 849: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.4849443838757e-06
    2. '.append' → logprob: -12.625004768371582
    3. ' append' → logprob: -13.875004768371582
    4. '	append' → logprob: -16.250003814697266
    5. 'appen' → logprob: -16.500003814697266
    6. 'Append' → logprob: -17.000003814697266
    7. 'app' → logprob: -17.000003814697266
    8. '_append' → logprob: -17.500003814697266
    9. 'insert' → logprob: -17.625003814697266
    10. '```' → logprob: -18.000003814697266

Token 850: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00022475497098639607
    2. '(' → logprob: -8.625225067138672
    3. '(cx' → logprob: -10.250225067138672
    4. '(c' → logprob: -12.375225067138672
    5. ' ' → logprob: -13.375225067138672
    6. ' (' → logprob: -13.750225067138672
    7. '(
' → logprob: -14.500225067138672
    8. '(None' → logprob: -14.500225067138672
    9. '[(' → logprob: -14.875225067138672
    10. '((-' → logprob: -15.125225067138672

Token 851: 'cx' (ID: 47207)
  Prédit: '(cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cx' → logprob: -0.1002570316195488
    2. 'cx' → logprob: -2.35025691986084
    3. ' cx' → logprob: -10.47525691986084
    4. '0' → logprob: -12.22525691986084
    5. '(' → logprob: -12.47525691986084
    6. ' (' → logprob: -12.60025691986084
    7. '(c' → logprob: -12.85025691986084
    8. '.cx' → logprob: -13.22525691986084
    9. '(cs' → logprob: -14.10025691986084
    10. 'c' → logprob: -14.22525691986084

Token 852: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.576873758807778e-05
    2. ',i' → logprob: -10.125075340270996
    3. ' ,' → logprob: -10.250075340270996
    4. '‌,' → logprob: -16.500076293945312
    5. ',
' → logprob: -17.125076293945312
    6. '<|end|>' → logprob: -17.250076293945312
    7. '`,' → logprob: -17.375076293945312
    8. ' ' → logprob: -18.000076293945312
    9. 'i' → logprob: -18.000076293945312
    10. '	' → logprob: -18.000076293945312

Token 853: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0036017363891005516
    2. ' i' → logprob: -5.628601551055908
    3. ' ' → logprob: -14.003602027893066
    4. '   ' → logprob: -14.753602027893066
    5. '	i' → logprob: -16.25360107421875
    6. '0' → logprob: -16.50360107421875
    7. '  ' → logprob: -16.62860107421875
    8. '    ' → logprob: -17.25360107421875
    9. '1' → logprob: -17.75360107421875
    10. '     ' → logprob: -17.75360107421875

Token 854: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0564331205387134e-05
    2. ' ,' → logprob: -11.50001049041748
    3. ',
' → logprob: -15.50001049041748
    4. '           ' → logprob: -17.000011444091797
    5. '       ' → logprob: -17.250011444091797
    6. '0' → logprob: -17.375011444091797
    7. '   ' → logprob: -17.875011444091797
    8. '```' → logprob: -18.125011444091797
    9. '),' → logprob: -18.250011444091797
    10. ')' → logprob: -18.250011444091797

Token 855: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05143877863883972
    2. '2' → logprob: -3.676438808441162
    3. '0' → logprob: -3.801438808441162
    4. '1' → logprob: -6.301438808441162
    5. ' -' → logprob: -7.551438808441162
    6. ' ' → logprob: -9.926438331604004
    7. '
' → logprob: -11.301438331604004
    8. '−' → logprob: -11.426438331604004
    9. ',' → logprob: -11.738938331604004
    10. '3' → logprob: -11.801438331604004

Token 856: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.106736039626412e-05
    2. ' ' → logprob: -10.750031471252441
    3. '2' → logprob: -11.625031471252441
    4. ',' → logprob: -14.875031471252441
    5. ')' → logprob: -16.437530517578125
    6. '   ' → logprob: -17.375030517578125
    7. '-' → logprob: -17.625030517578125
    8. '0' → logprob: -18.187530517578125
    9. '3' → logprob: -18.250030517578125
    10. '```' → logprob: -18.250030517578125

Token 857: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.084206375409849e-05
    2. ' ,' → logprob: -10.125041007995605
    3. ',
' → logprob: -14.750041007995605
    4. ')' → logprob: -16.00004005432129
    5. '       ' → logprob: -16.87504005432129
    6. ',d' → logprob: -16.87504005432129
    7. ',b' → logprob: -18.00004005432129
    8. ',y' → logprob: -18.25004005432129
    9. '<|end|>' → logprob: -18.37504005432129
    10. '),' → logprob: -18.50004005432129

Token 858: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.012602537870407104
    2. ' dy' → logprob: -4.38760232925415
    3. '0' → logprob: -9.387602806091309
    4. 'd' → logprob: -12.637602806091309
    5. ' ' → logprob: -13.012602806091309
    6. '   ' → logprob: -13.637602806091309
    7. ')' → logprob: -14.262602806091309
    8. '  ' → logprob: -15.012602806091309
    9. '	d' → logprob: -15.387602806091309
    10. '1' → logprob: -15.762602806091309

Token 859: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.400689305039123e-05
    2. ')
' → logprob: -9.625094413757324
    3. '       ' → logprob: -11.000094413757324
    4. '))' → logprob: -12.250094413757324
    5. ' )' → logprob: -12.875094413757324
    6. '   ' → logprob: -13.875094413757324
    7. '<|end|>' → logprob: -14.250094413757324
    8. ')}' → logprob: -14.750094413757324
    9. ')`' → logprob: -14.750094413757324
    10. ')return' → logprob: -16.125093460083008

Token 860: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 861: ' get' (ID: 717)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.46355295181274414
    2. ' main' → logprob: -1.0885529518127441
    3. 'def' → logprob: -4.463552951812744
    4. 'solve' → logprob: -4.713552951812744
    5. ' solve' → logprob: -5.588552951812744
    6. 'create' → logprob: -5.838552951812744
    7. 'dfs' → logprob: -6.713552951812744
    8. 'process' → logprob: -7.088552951812744
    9. ' create' → logprob: -7.088552951812744
    10. ' dfs' → logprob: -7.713552951812744

Token 862: '_list' (ID: 4162)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.769826889038086
    2. '_l' → logprob: -1.894826889038086
    3. '_answer' → logprob: -3.394826889038086
    4. '_cost' → logprob: -3.519826889038086
    5. '_L' → logprob: -3.519826889038086
    6. '_distance' → logprob: -3.644826889038086
    7. '_input' → logprob: -3.644826889038086
    8. '_zero' → logprob: -3.644826889038086
    9. '_path' → logprob: -3.644826889038086
    10. '_query' → logprob: -3.769826889038086

Token 863: '_n' (ID: 2170)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5329196453094482
    2. '(input' → logprob: -2.1579196453094482
    3. '(size' → logprob: -2.2829196453094482
    4. 'def' → logprob: -3.0329196453094482
    5. '(length' → logprob: -3.5329196453094482
    6. '():' → logprob: -4.157919883728027
    7. '(' → logprob: -4.282919883728027
    8. '<|end|>' → logprob: -4.282919883728027
    9. 's' → logprob: -4.532919883728027
    10. '(name' → logprob: -4.907919883728027

Token 864: '_lists' (ID: 93609)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04210284724831581
    2. 'def' → logprob: -4.042102813720703
    3. 'ame' → logprob: -4.667102813720703
    4. 'um' → logprob: -5.542102813720703
    5. '(' → logprob: -6.417102813720703
    6. 'ot' → logprob: -6.917102813720703
    7. '0' → logprob: -7.167102813720703
    8. '```' → logprob: -7.417102813720703
    9. '_' → logprob: -7.667102813720703
    10. 'o' → logprob: -7.917102813720703

Token 865: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000835120037663728
    2. '(' → logprob: -8.375835418701172
    3. '(input' → logprob: -9.000835418701172
    4. '(size' → logprob: -9.250835418701172
    5. '(lst' → logprob: -9.250835418701172
    6. 'def' → logprob: -9.875835418701172
    7. '():' → logprob: -9.875835418701172
    8. '(N' → logprob: -10.250835418701172
    9. '(m' → logprob: -10.500835418701172
    10. '(lines' → logprob: -11.125835418701172

Token 866: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2309107631444931
    2. ',' → logprob: -2.4809107780456543
    3. ':' → logprob: -2.8559107780456543
    4. '):
' → logprob: -2.9809107780456543
    5. '(n' → logprob: -4.605910778045654
    6. ')' → logprob: -5.730910778045654
    7. ':int' → logprob: -7.855910778045654
    8. ',n' → logprob: -8.480910301208496
    9. '=' → logprob: -8.730910301208496
    10. ':n' → logprob: -9.855910301208496

Token 867: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37193790078163147
    2. 'return' → logprob: -1.746937870979309
    3. '[]' → logprob: -2.6219379901885986
    4. 'def' → logprob: -3.1219379901885986
    5. ' return' → logprob: -4.2469377517700195
    6. '[]
' → logprob: -5.6219377517700195
    7. '=[]' → logprob: -7.1219377517700195
    8. '=[]
' → logprob: -8.12193775177002
    9. ' =' → logprob: -9.37193775177002
    10. '	return' → logprob: -9.74693775177002

Token 868: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4011087715625763
    2. '[]' → logprob: -1.151108741760254
    3. '[' → logprob: -4.776108741760254
    4. '[]
' → logprob: -6.026108741760254
    5. ' return' → logprob: -6.151108741760254
    6. '   ' → logprob: -7.026108741760254
    7. 'def' → logprob: -8.776108741760254
    8. '=[]' → logprob: -10.276108741760254
    9. '[][]' → logprob: -11.151108741760254
    10. '	return' → logprob: -11.651108741760254

Token 869: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006542971823364496
    2. '[]' → logprob: -7.750654220581055
    3. '[[' → logprob: -9.000654220581055
    4. ' [[]' → logprob: -9.250654220581055
    5. '[list' → logprob: -13.000654220581055
    6. '[n' → logprob: -13.625654220581055
    7. '[List' → logprob: -15.500654220581055
    8. '[:]' → logprob: -16.375654220581055
    9. '[][]' → logprob: -16.625654220581055
    10. '[]
' → logprob: -16.875654220581055

Token 870: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07895731180906296
    2. ' for' → logprob: -2.5789573192596436
    3. '()' → logprob: -9.703957557678223
    4. '   ' → logprob: -12.953957557678223
    5. '	for' → logprob: -13.203957557678223
    6. ']' → logprob: -13.828957557678223
    7. ')' → logprob: -14.703957557678223
    8. ' ' → logprob: -14.828957557678223
    9. '    ' → logprob: -16.078956604003906
    10. 'n' → logprob: -16.703956604003906

Token 871: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.676981345459353e-06
    2. '_range' → logprob: -12.125005722045898
    3. ' _' → logprob: -16.1250057220459
    4. '_in' → logprob: -17.3750057220459
    5. ' range' → logprob: -17.5000057220459
    6. '_i' → logprob: -17.7500057220459
    7. 'range' → logprob: -18.0000057220459
    8. '_
' → logprob: -18.5000057220459
    9. '_=' → logprob: -19.1250057220459
    10. '__' → logprob: -20.1250057220459

Token 872: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10553919523954391
    2. 'in' → logprob: -2.855539083480835
    3. '_' → logprob: -3.605539083480835
    4. ' range' → logprob: -4.355539321899414
    5. ' in' → logprob: -5.980539321899414
    6. '_range' → logprob: -9.355539321899414
    7. 'i' → logprob: -11.605539321899414
    8. ' _' → logprob: -14.105539321899414
    9. 'ange' → logprob: -14.355539321899414
    10. '(range' → logprob: -14.355539321899414

Token 873: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.698698704596609e-05
    2. ' range' → logprob: -9.250097274780273
    3. '_range' → logprob: -14.250097274780273
    4. '_' → logprob: -15.625097274780273
    5. '(range' → logprob: -21.000097274780273
    6. '	range' → logprob: -21.250097274780273
    7. '__' → logprob: -22.625097274780273
    8. '0' → logprob: -23.125097274780273
    9. '
' → logprob: -23.250097274780273
    10. '   ' → logprob: -24.250097274780273

Token 874: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011875375173985958
    2. 'n' → logprob: -4.511875152587891
    3. '(n' → logprob: -7.261875152587891
    4. ' range' → logprob: -9.01187515258789
    5. '(range' → logprob: -12.63687515258789
    6. '[n' → logprob: -15.26187515258789
    7. ' n' → logprob: -16.88687515258789
    8. '	range' → logprob: -19.01187515258789
    9. '(' → logprob: -19.51187515258789
    10. 'Range' → logprob: -19.51187515258789

Token 875: ')]

' (ID: 56882)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.048981670290231705
    2. ')]' → logprob: -3.0489816665649414
    3. ')' → logprob: -8.298981666564941
    4. '()]' → logprob: -8.923981666564941
    5. ' ]' → logprob: -12.298981666564941
    6. ']
' → logprob: -12.548981666564941
    7. '>]' → logprob: -13.923981666564941
    8. '}]' → logprob: -14.173981666564941
    9. '`]' → logprob: -14.548981666564941
    10. '<|end|>' → logprob: -14.548981666564941

Token 876: 'def' (ID: 1314)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.05269783362746239
    2. 'def' → logprob: -3.3026978969573975
    3. '<|end|>' → logprob: -4.552697658538818
    4. '<|end|>' → logprob: -5.677697658538818
    5. '```' → logprob: -8.302698135375977
    6. '#' → logprob: -8.677698135375977
    7. ' class' → logprob: -9.552698135375977
    8. 'from' → logprob: -10.802698135375977
    9. ')' → logprob: -11.177698135375977
    10. 'import' → logprob: -11.177698135375977

Token 877: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5735701322555542
    2. 'main' → logprob: -0.9485701322555542
    3. 'create' → logprob: -4.948570251464844
    4. ' create' → logprob: -4.948570251464844
    5. 'get' → logprob: -5.323570251464844
    6. ' solve' → logprob: -5.823570251464844
    7. ' get' → logprob: -6.073570251464844
    8. 'pow' → logprob: -6.073570251464844
    9. 'binary' → logprob: -6.198570251464844
    10. 'solve' → logprob: -6.198570251464844

Token 878: '_tr' (ID: 7410)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.04987993836402893
    2. 'list' → logprob: -3.924880027770996
    3. 'input' → logprob: -5.049880027770996
    4. 'default' → logprob: -5.799880027770996
    5. '_input' → logprob: -6.049880027770996
    6. '_counter' → logprob: -6.049880027770996
    7. '_zero' → logprob: -6.049880027770996
    8. '_max' → logprob: -6.549880027770996
    9. 'dict' → logprob: -7.299880027770996
    10. '_default' → logprob: -7.299880027770996

Token 879: '_list' (ID: 4162)
  Prédit: 'ee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ee' → logprob: -0.0011202149325981736
    2. 'ees' → logprob: -7.126120090484619
    3. 'e' → logprob: -8.751120567321777
    4. 'ans' → logprob: -9.876120567321777
    5. 'ie' → logprob: -10.501120567321777
    6. 'ip' → logprob: -11.126120567321777
    7. 'ue' → logprob: -11.251120567321777
    8. 'iple' → logprob: -11.626120567321777
    9. 'avers' → logprob: -11.876120567321777
    10. 'iangle' → logprob: -12.251120567321777

Token 880: '(N' (ID: 10564)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0017123052384704351
    2. 's' → logprob: -6.876712322235107
    3. '()' → logprob: -8.37671184539795
    4. '(' → logprob: -8.50171184539795
    5. '_list' → logprob: -9.62671184539795
    6. '_n' → logprob: -10.37671184539795
    7. 'def' → logprob: -11.12671184539795
    8. '(size' → logprob: -11.37671184539795
    9. '_s' → logprob: -11.62671184539795
    10. '_' → logprob: -11.87671184539795

Token 881: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04550294950604439
    2. '):
' → logprob: -3.2955029010772705
    3. ')' → logprob: -4.92050313949585
    4. ',' → logprob: -10.420502662658691
    5. '):
' → logprob: -10.670502662658691
    6. '(n' → logprob: -10.670502662658691
    7. '=' → logprob: -10.920502662658691
    8. ':' → logprob: -11.045502662658691
    9. ' ):' → logprob: -11.670502662658691
    10. '):

' → logprob: -11.920502662658691

Token 882: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35631516575813293
    2. 'return' → logprob: -1.2313151359558105
    3. ' return' → logprob: -4.8563151359558105
    4. '
' → logprob: -11.106315612792969
    5. 'def' → logprob: -11.106315612792969
    6. '	return' → logprob: -11.481315612792969
    7. ' ' → logprob: -12.606315612792969
    8. '[]' → logprob: -12.606315612792969
    9. '[' → logprob: -12.856315612792969
    10. '  ' → logprob: -12.981315612792969

Token 883: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09855671226978302
    2. '[' → logprob: -2.7235567569732666
    3. '[[' → logprob: -3.7235567569732666
    4. '[n' → logprob: -7.0985565185546875
    5. ' return' → logprob: -7.3485565185546875
    6. '[(' → logprob: -7.7235565185546875
    7. '[get' → logprob: -7.9735565185546875
    8. '[-' → logprob: -8.098556518554688
    9. '   ' → logprob: -8.098556518554688
    10. 'def' → logprob: -8.223556518554688

Token 884: ' [{}' (ID: 170238)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.16505171358585358
    2. '[' → logprob: -1.9150516986846924
    3. '[get' → logprob: -5.6650519371032715
    4. '[(' → logprob: -8.165051460266113
    5. 'default' → logprob: -8.665051460266113
    6. '[list' → logprob: -8.790051460266113
    7. '[n' → logprob: -9.040051460266113
    8. ' [[' → logprob: -9.040051460266113
    9. '[N' → logprob: -9.915051460266113
    10. '[List' → logprob: -9.915051460266113

Token 885: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5760671496391296
    2. 'for' → logprob: -0.8260671496391296
    3. '	for' → logprob: -9.951066970825195
    4. ']' → logprob: -10.326066970825195
    5. '   ' → logprob: -11.076066970825195
    6. ')' → logprob: -11.076066970825195
    7. ' ' → logprob: -11.701066970825195
    8. '()' → logprob: -12.576066970825195
    9. '
' → logprob: -13.826066970825195
    10. '  ' → logprob: -13.826066970825195

Token 886: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3652048707008362
    2. '_' → logprob: -1.3652048110961914
    3. 'range' → logprob: -3.2402048110961914
    4. ' _' → logprob: -4.740204811096191
    5. '_range' → logprob: -5.990204811096191
    6. ' in' → logprob: -8.490204811096191
    7. '(range' → logprob: -11.740204811096191
    8. ' ' → logprob: -12.740204811096191
    9. '	range' → logprob: -13.240204811096191
    10. 'in' → logprob: -14.990204811096191

Token 887: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015051016816869378
    2. ' range' → logprob: -6.501504898071289
    3. '_range' → logprob: -13.251504898071289
    4. 'in' → logprob: -14.751504898071289
    5. ' in' → logprob: -15.376504898071289
    6. '_' → logprob: -15.376504898071289
    7. '(range' → logprob: -16.12650489807129
    8. '	range' → logprob: -18.50150489807129
    9. 'i' → logprob: -19.37650489807129
    10. ' ' → logprob: -19.62650489807129

Token 888: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007101670489646494
    2. ' range' → logprob: -7.2507100105285645
    3. '(range' → logprob: -15.125710487365723
    4. '(N' → logprob: -21.250709533691406
    5. '	range' → logprob: -21.875709533691406
    6. '
' → logprob: -22.375709533691406
    7. ' ' → logprob: -22.750709533691406
    8. '   ' → logprob: -22.750709533691406
    9. 'N' → logprob: -23.500709533691406
    10. '  ' → logprob: -23.750709533691406

Token 889: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.008627460338175297
    2. 'N' → logprob: -4.758627414703369
    3. '(' → logprob: -11.508627891540527
    4. ' (' → logprob: -13.508627891540527
    5. '((' → logprob: -14.133627891540527
    6. ' N' → logprob: -15.008627891540527
    7. '(n' → logprob: -16.50862693786621
    8. '	N' → logprob: -17.00862693786621
    9. '   ' → logprob: -17.13362693786621
    10. '
' → logprob: -17.50862693786621

Token 890: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.184812031686306e-05
    2. ']' → logprob: -9.625082015991211
    3. '])' → logprob: -11.500082015991211
    4. ')' → logprob: -13.125082015991211
    5. ')]
' → logprob: -13.250082015991211
    6. '}]' → logprob: -14.000082015991211
    7. '])]' → logprob: -14.875082015991211
    8. '()]' → logprob: -15.250082015991211
    9. ')])' → logprob: -15.750082015991211
    10. '')]' → logprob: -16.50008201599121

Token 891: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017267030489165336
    2. '10' → logprob: -9.12517261505127
    3. '2' → logprob: -10.00017261505127
    4. 'N' → logprob: -12.12517261505127
    5. ' ' → logprob: -12.25017261505127
    6. '5' → logprob: -12.62517261505127
    7. '100' → logprob: -13.50017261505127
    8. '0' → logprob: -14.00017261505127
    9. ')' → logprob: -14.00017261505127
    10. '])' → logprob: -15.00017261505127

Token 892: ')]

' (ID: 56882)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.47488296031951904
    2. ')]' → logprob: -0.974882960319519
    3. '])' → logprob: -7.224883079528809
    4. ')' → logprob: -9.724883079528809
    5. '()]' → logprob: -12.349883079528809
    6. '}]' → logprob: -12.474883079528809
    7. ']
' → logprob: -12.474883079528809
    8. ' ]' → logprob: -12.724883079528809
    9. '])]' → logprob: -13.724883079528809
    10. ']}' → logprob: -14.474883079528809

Token 893: 'def' (ID: 1314)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.007609108928591013
    2. 'def' → logprob: -5.132608890533447
    3. '<|end|>' → logprob: -6.757608890533447
    4. '
' → logprob: -8.257609367370605
    5. '#' → logprob: -9.507609367370605
    6. '<|end|>' → logprob: -10.007609367370605
    7. 'from' → logprob: -10.257609367370605
    8. 'import' → logprob: -10.507609367370605
    9. ' class' → logprob: -11.007609367370605
    10. '```' → logprob: -11.132609367370605

Token 894: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.0906403064727783
    2. ' get' → logprob: -1.9656403064727783
    3. 'get' → logprob: -2.2156403064727783
    4. 'main' → logprob: -2.3406403064727783
    5. 'L' → logprob: -3.0906403064727783
    6. 'class' → logprob: -3.0906403064727783
    7. 'def' → logprob: -3.5906403064727783
    8. ' create' → logprob: -3.7156403064727783
    9. 'create' → logprob: -3.8406403064727783
    10. 'tr' → logprob: -3.9656403064727783

Token 895: '_vis' (ID: 113669)
  Prédit: '_tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tr' → logprob: -0.3347415030002594
    2. '_tree' → logprob: -3.2097415924072266
    3. '_dist' → logprob: -3.8347415924072266
    4. '_counter' → logprob: -3.9597415924072266
    5. '_list' → logprob: -4.334741592407227
    6. '_edge' → logprob: -4.459741592407227
    7. '_dict' → logprob: -4.709741592407227
    8. '_edges' → logprob: -4.709741592407227
    9. '_dp' → logprob: -4.709741592407227
    10. '_graph' → logprob: -4.834741592407227

Token 896: '_list' (ID: 4162)
  Prédit: 'ited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -0.003132324432954192
    2. '_list' → logprob: -6.253132343292236
    3. 'isted' → logprob: -7.628132343292236
    4. 'it' → logprob: -7.878132343292236
    5. 'list' → logprob: -8.753131866455078
    6. 'ist' → logprob: -9.878131866455078
    7. 'ible' → logprob: -10.753131866455078
    8. 'ed' → logprob: -10.878131866455078
    9. 'itor' → logprob: -11.003131866455078
    10. 'its' → logprob: -11.003131866455078

Token 897: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.007042736280709505
    2. '(n' → logprob: -5.00704288482666
    3. '(' → logprob: -8.25704288482666
    4. ' (' → logprob: -9.88204288482666
    5. 'def' → logprob: -11.38204288482666
    6. '_list' → logprob: -13.50704288482666
    7. '(L' → logprob: -13.88204288482666
    8. '((' → logprob: -14.75704288482666
    9. 'list' → logprob: -14.88204288482666
    10. 'n' → logprob: -15.13204288482666

Token 898: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.050036534667015076
    2. '):
' → logprob: -3.3000364303588867
    3. '(n' → logprob: -4.800036430358887
    4. '(N' → logprob: -5.800036430358887
    5. ')' → logprob: -7.800036430358887
    6. ',' → logprob: -9.550036430358887
    7. ':' → logprob: -10.050036430358887
    8. ' ):' → logprob: -10.175036430358887
    9. '):
' → logprob: -10.675036430358887
    10. '(' → logprob: -10.800036430358887

Token 899: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16447584331035614
    2. 'return' → logprob: -2.289475917816162
    3. ' return' → logprob: -3.039475917816162
    4. '(N' → logprob: -6.789475917816162
    5. '[N' → logprob: -7.914475917816162
    6. '([' → logprob: -8.539475440979004
    7. 'def' → logprob: -8.539475440979004
    8. '[' → logprob: -9.164475440979004
    9. '
' → logprob: -9.289475440979004
    10. ' =' → logprob: -9.664475440979004

Token 900: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01668393984436989
    2. '[' → logprob: -4.516684055328369
    3. '   ' → logprob: -5.516684055328369
    4. ' return' → logprob: -6.516684055328369
    5. '[N' → logprob: -9.141683578491211
    6. '[n' → logprob: -11.516683578491211
    7. '
' → logprob: -13.641683578491211
    8. '	return' → logprob: -14.141683578491211
    9. ' ' → logprob: -14.516683578491211
    10. '[a' → logprob: -14.641683578491211

Token 901: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04201918840408325
    2. '[N' → logprob: -3.2920191287994385
    3. '[get' → logprob: -5.542019367218018
    4. '[n' → logprob: -10.04201889038086
    5. ' [' → logprob: -12.79201889038086
    6. '[new' → logprob: -14.41701889038086
    7. '[node' → logprob: -14.66701889038086
    8. '[class' → logprob: -15.04201889038086
    9. '[f' → logprob: -15.16701889038086
    10. '[list' → logprob: -15.29201889038086

Token 902: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0013723729643970728
    2. '0' → logprob: -6.626372337341309
    3. '[' → logprob: -10.376372337341309
    4. ' False' → logprob: -11.501372337341309
    5. '[]' → logprob: -12.876372337341309
    6. 'True' → logprob: -14.001372337341309
    7. '(False' → logprob: -14.376372337341309
    8. '   ' → logprob: -14.751372337341309
    9. '-' → logprob: -15.251372337341309
    10. 'set' → logprob: -15.376372337341309

Token 903: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2562079131603241
    2. ' for' → logprob: -1.5062079429626465
    3. 'for' → logprob: -6.0062079429626465
    4. ']*' → logprob: -6.3812079429626465
    5. ' ]' → logprob: -9.631207466125488
    6. '   ' → logprob: -10.631207466125488
    7. '	for' → logprob: -11.506207466125488
    8. ']*(' → logprob: -11.506207466125488
    9. ')' → logprob: -14.006207466125488
    10. ' ' → logprob: -15.006207466125488

Token 904: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3929558992385864
    2. ' *' → logprob: -1.1429558992385864
    3. ' for' → logprob: -5.392955780029297
    4. '*(' → logprob: -7.642955780029297
    5. '   ' → logprob: -7.892955780029297
    6. ']' → logprob: -8.517955780029297
    7. ']*' → logprob: -8.892955780029297
    8. ')' → logprob: -9.517955780029297
    9. '*N' → logprob: -9.517955780029297
    10. 'for' → logprob: -9.642955780029297

Token 905: ' (' (ID: 350)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5761664509773254
    2. '(N' → logprob: -0.8261664509773254
    3. '(' → logprob: -8.576166152954102
    4. ' (' → logprob: -10.326166152954102
    5. ' N' → logprob: -12.201166152954102
    6. '_N' → logprob: -15.826166152954102
    7. '(n' → logprob: -16.3261661529541
    8. '(
' → logprob: -16.5761661529541
    9. '((' → logprob: -16.5761661529541
    10. '	N' → logprob: -16.5761661529541

Token 906: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0076309931464493275
    2. '(N' → logprob: -4.882630825042725
    3. ' N' → logprob: -11.257631301879883
    4. ' (' → logprob: -11.757631301879883
    5. '(' → logprob: -12.757631301879883
    6. '   ' → logprob: -13.882631301879883
    7. '_N' → logprob: -16.382631301879883
    8. '	N' → logprob: -16.382631301879883
    9. ' ' → logprob: -17.757631301879883
    10. '
' → logprob: -17.757631301879883

Token 907: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011261084116995335
    2. ')' → logprob: -4.511260986328125
    3. '(N' → logprob: -9.261260986328125
    4. 'N' → logprob: -10.011260986328125
    5. '+)' → logprob: -10.636260986328125
    6. '1' → logprob: -11.136260986328125
    7. ' +' → logprob: -11.386260986328125
    8. '+
' → logprob: -11.761260986328125
    9. '0' → logprob: -12.511260986328125
    10. '(' → logprob: -12.886260986328125

Token 908: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024126346688717604
    2. 'N' → logprob: -6.127412796020508
    3. ' ' → logprob: -9.002412796020508
    4. '(N' → logprob: -10.502412796020508
    5. '100' → logprob: -10.752412796020508
    6. '   ' → logprob: -11.502412796020508
    7. '2' → logprob: -11.752412796020508
    8. '(' → logprob: -11.877412796020508
    9. '10' → logprob: -12.002412796020508
    10. ' N' → logprob: -12.127412796020508

Token 909: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ')
' → logprob: -13.25000286102295
    3. ' )' → logprob: -14.62500286102295
    4. '<|end|>' → logprob: -16.750001907348633
    5. ')return' → logprob: -17.125001907348633
    6. '))' → logprob: -17.625001907348633
    7. ')`' → logprob: -17.750001907348633
    8. ')

' → logprob: -17.750001907348633
    9. '')' → logprob: -17.875001907348633
    10. '),' → logprob: -18.125001907348633

Token 910: 'def' (ID: 1314)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00010819212911883369
    2. 'def' → logprob: -9.875107765197754
    3. 'from' → logprob: -10.875107765197754
    4. '<|end|>' → logprob: -11.250107765197754
    5. 'import' → logprob: -11.625107765197754
    6. ' class' → logprob: -12.375107765197754
    7. '<|end|>' → logprob: -12.375107765197754
    8. '#' → logprob: -12.750107765197754
    9. '
' → logprob: -12.750107765197754
    10. '<class' → logprob: -15.375107765197754

Token 911: ' update' (ID: 4027)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7711589336395264
    2. ' get' → logprob: -2.0211589336395264
    3. 'main' → logprob: -2.0211589336395264
    4. 'get' → logprob: -2.7711589336395264
    5. ' create' → logprob: -2.7711589336395264
    6. 'create' → logprob: -3.3961589336395264
    7. 'L' → logprob: -3.6461589336395264
    8. ' L' → logprob: -4.1461591720581055
    9. 'def' → logprob: -4.2711591720581055
    10. 'input' → logprob: -5.3961591720581055

Token 912: '_ans' (ID: 146254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5222392082214355
    2. '(gr' → logprob: -2.5222392082214355
    3. '_cost' → logprob: -2.6472392082214355
    4. '_gr' → logprob: -3.1472392082214355
    5. '_counts' → logprob: -3.5222392082214355
    6. '(' → logprob: -4.0222392082214355
    7. '_counter' → logprob: -4.1472392082214355
    8. '_dist' → logprob: -4.3972392082214355
    9. '_vis' → logprob: -4.3972392082214355
    10. '(vis' → logprob: -4.3972392082214355

Token 913: '_for' (ID: 11903)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00198787497356534
    2. '(' → logprob: -6.251987934112549
    3. '(i' → logprob: -11.12698745727539
    4. '((' → logprob: -11.62698745727539
    5. '(answer' → logprob: -11.87698745727539
    6. '(q' → logprob: -12.00198745727539
    7. '(idx' → logprob: -12.37698745727539
    8. '(args' → logprob: -12.62698745727539
    9. '(a' → logprob: -12.62698745727539
    10. '(arr' → logprob: -12.75198745727539

Token 914: '_query' (ID: 13012)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -1.2142138481140137
    2. 'col' → logprob: -2.4642138481140137
    3. 'node' → logprob: -2.4642138481140137
    4. '(i' → logprob: -2.5892138481140137
    5. 'all' → logprob: -2.8392138481140137
    6. '(a' → logprob: -2.9642138481140137
    7. '(ans' → logprob: -2.9642138481140137
    8. '(c' → logprob: -3.8392138481140137
    9. 'queries' → logprob: -3.8392138481140137
    10. 'query' → logprob: -3.8392138481140137

Token 915: '(q' (ID: 21479)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.2971494197845459
    2. '(q' → logprob: -1.422149419784546
    3. '(cx' → logprob: -5.297149658203125
    4. '(a' → logprob: -5.672149658203125
    5. '(' → logprob: -5.797149658203125
    6. '(gr' → logprob: -6.422149658203125
    7. '(c' → logprob: -7.047149658203125
    8. '(i' → logprob: -7.547149658203125
    9. '(query' → logprob: -7.922149658203125
    10. '((' → logprob: -8.172149658203125

Token 916: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006564979907125235
    2. ',' → logprob: -6.006565093994141
    3. ')' → logprob: -6.506565093994141
    4. 'u' → logprob: -6.506565093994141
    5. 'ues' → logprob: -7.256565093994141
    6. '):' → logprob: -8.75656509399414
    7. 'uries' → logprob: -10.00656509399414
    8. '[' → logprob: -10.25656509399414
    9. 'uest' → logprob: -10.50656509399414
    10. 'uer' → logprob: -10.63156509399414

Token 917: ' sum' (ID: 4215)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -1.1401065587997437
    2. 'ans' → logprob: -1.6401065587997437
    3. 'qs' → logprob: -2.390106678009033
    4. 'x' → logprob: -2.890106678009033
    5. 'v' → logprob: -3.015106678009033
    6. 'es' → logprob: -3.140106678009033
    7. 'val' → logprob: -3.515106678009033
    8. 'node' → logprob: -3.765106678009033
    9. 'q' → logprob: -3.765106678009033
    10. 'a' → logprob: -3.890106678009033

Token 918: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.47865936160087585
    2. 's' → logprob: -1.6036593914031982
    3. '_val' → logprob: -2.6036593914031982
    4. ',' → logprob: -2.9786593914031982
    5. 'val' → logprob: -4.353659152984619
    6. '_value' → logprob: -5.103659152984619
    7. 'ry' → logprob: -5.228659152984619
    8. 'v' → logprob: -5.603659152984619
    9. '_' → logprob: -5.728659152984619
    10. 'q' → logprob: -6.228659152984619

Token 919: ' cnt' (ID: 27340)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.093454122543335
    2. 'cnt' → logprob: -1.343454122543335
    3. 'val' → logprob: -2.843454122543335
    4. 'count' → logprob: -3.468454122543335
    5. 'pos' → logprob: -3.843454122543335
    6. 'add' → logprob: -3.843454122543335
    7. 'mul' → logprob: -3.968454122543335
    8. 'ans' → logprob: -4.093454360961914
    9. ' idx' → logprob: -4.218454360961914
    10. 'q' → logprob: -4.218454360961914

Token 920: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41178226470947266
    2. '):' → logprob: -1.7867822647094727
    3. '):
' → logprob: -1.7867822647094727
    4. '):
' → logprob: -6.911782264709473
    5. ')' → logprob: -7.036782264709473
    6. '   ' → logprob: -9.411782264709473
    7. '1' → logprob: -9.411782264709473
    8. ' ,' → logprob: -9.411782264709473
    9. '):

' → logprob: -10.036782264709473
    10. 'def' → logprob: -10.286782264709473

Token 921: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6521169543266296
    2. 'idx' → logprob: -2.0271170139312744
    3. 'col' → logprob: -2.9021170139312744
    4. 'qs' → logprob: -3.4021170139312744
    5. 'val' → logprob: -3.6521170139312744
    6. 'res' → logprob: -3.6521170139312744
    7. 'c' → logprob: -3.7771170139312744
    8. 'i' → logprob: -3.9021170139312744
    9. 'q' → logprob: -4.027116775512695
    10. 'x' → logprob: -4.027116775512695

Token 922: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2978946566581726
    2. '):' → logprob: -1.6728947162628174
    3. '):
' → logprob: -2.6728947162628174
    4. '):
' → logprob: -7.672894477844238
    5. 's' → logprob: -9.172894477844238
    6. ')' → logprob: -9.172894477844238
    7. ',i' → logprob: -9.672894477844238
    8. ':' → logprob: -9.922894477844238
    9. ' ,' → logprob: -11.047894477844238
    10. '):

' → logprob: -11.297894477844238

Token 923: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030550695955753326
    2. ':' → logprob: -6.378055095672607
    3. ':
' → logprob: -7.378055095672607
    4. '):' → logprob: -8.25305461883545
    5. ',' → logprob: -8.62805461883545
    6. '):
' → logprob: -8.87805461883545
    7. '    
' → logprob: -10.37805461883545
    8. ')' → logprob: -10.75305461883545
    9. '<|end|>' → logprob: -10.87805461883545
    10. 'def' → logprob: -11.12805461883545

Token 924: ' col' (ID: 996)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19041654467582703
    2. 'for' → logprob: -2.5654165744781494
    3. 'if' → logprob: -3.6904165744781494
    4. 'q' → logprob: -3.9404165744781494
    5. 'c' → logprob: -4.19041633605957
    6. 'cx' → logprob: -4.19041633605957
    7. 'idx' → logprob: -4.31541633605957
    8. 'ans' → logprob: -6.19041633605957
    9. 'x' → logprob: -7.06541633605957
    10. '_,' → logprob: -7.19041633605957

Token 925: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5313151478767395
    2. '=' → logprob: -1.0313150882720947
    3. ' =' → logprob: -2.9063150882720947
    4. 'or' → logprob: -7.531315326690674
    5. '   ' → logprob: -8.656314849853516
    6. 'o' → logprob: -9.281314849853516
    7. '_idx' → logprob: -10.406314849853516
    8. 'u' → logprob: -11.031314849853516
    9. '_,' → logprob: -11.031314849853516
    10. '       ' → logprob: -11.406314849853516

Token 926: ' q' (ID: 2335)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.520866334438324
    2. 'i' → logprob: -2.6458663940429688
    3. 'pos' → logprob: -2.8958663940429688
    4. 'sign' → logprob: -3.2708663940429688
    5. 'val' → logprob: -3.6458663940429688
    6. 'q' → logprob: -3.8958663940429688
    7. 'op' → logprob: -3.8958663940429688
    8. 'num' → logprob: -3.8958663940429688
    9. 'mul' → logprob: -4.020866394042969
    10. 'cnt' → logprob: -4.520866394042969

Token 927: 'id' (ID: 315)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.8069382905960083
    2. ',' → logprob: -2.3069381713867188
    3. ' =' → logprob: -2.3069381713867188
    4. 'idx' → logprob: -2.4319381713867188
    5. 'u' → logprob: -2.6819381713867188
    6. '=' → logprob: -3.0569381713867188
    7. '_id' → logprob: -3.5569381713867188
    8. '_cnt' → logprob: -3.6819381713867188
    9. '_col' → logprob: -3.8069381713867188
    10. 'id' → logprob: -4.181938171386719

Token 928: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3284791111946106
    2. '=' → logprob: -1.3284790515899658
    3. ' =' → logprob: -4.203479290008545
    4. ' ,' → logprob: -8.828478813171387
    5. '   ' → logprob: -11.828478813171387
    6. ' ' → logprob: -13.953478813171387
    7. ')' → logprob: -14.328478813171387
    8. '_,' → logprob: -14.328478813171387
    9. ',q' → logprob: -15.078478813171387
    10. '    ' → logprob: -15.703478813171387

Token 929: ' coeff' (ID: 34539)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -1.0663948059082031
    2. 'coef' → logprob: -1.6913948059082031
    3. 'mul' → logprob: -1.6913948059082031
    4. 'val' → logprob: -3.066394805908203
    5. 'mult' → logprob: -3.566394805908203
    6. 'coeff' → logprob: -3.566394805908203
    7. 'flag' → logprob: -4.066394805908203
    8. 'op' → logprob: -4.316394805908203
    9. 'sg' → logprob: -4.441394805908203
    10. 'w' → logprob: -4.566394805908203

Token 930: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09594588726758957
    2. '=' → logprob: -2.4709458351135254
    3. ' =' → logprob: -4.970945835113525
    4. ' ,' → logprob: -10.720946311950684
    5. '_,' → logprob: -11.095946311950684
    6. ',_' → logprob: -12.595946311950684
    7. 't' → logprob: -14.095946311950684
    8. '   ' → logprob: -14.220946311950684
    9. 'a' → logprob: -14.595946311950684
    10. 'y' → logprob: -15.220946311950684

Token 931: ' dist' (ID: 3601)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dy' → logprob: -1.0231224298477173
    2. 'dist' → logprob: -1.2731224298477173
    3. 'd' → logprob: -2.0231223106384277
    4. 'y' → logprob: -2.5231223106384277
    5. 'val' → logprob: -2.8981223106384277
    6. 'w' → logprob: -4.773122310638428
    7. 'x' → logprob: -4.773122310638428
    8. 'col' → logprob: -4.898122310638428
    9. 'target' → logprob: -5.273122310638428
    10. 'v' → logprob: -5.523122310638428

Token 932: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4745320677757263
    2. ' =' → logprob: -0.9745320677757263
    3. ',' → logprob: -7.724532127380371
    4. '   ' → logprob: -11.724532127380371
    5. ' ' → logprob: -12.724532127380371
    6. ')' → logprob: -14.349532127380371
    7. '  ' → logprob: -14.474532127380371
    8. '_' → logprob: -14.974532127380371
    9. '	' → logprob: -15.599532127380371
    10. ' ' → logprob: -16.349531173706055

Token 933: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0010490043787285686
    2. ' q' → logprob: -6.876049041748047
    3. '   ' → logprob: -11.126049041748047
    4. '	q' → logprob: -13.876049041748047
    5. ' ' → logprob: -15.501049041748047
    6. '  ' → logprob: -15.751049041748047
    7. '    ' → logprob: -16.251049041748047
    8. 'qid' → logprob: -17.126049041748047
    9. ' ' → logprob: -18.126049041748047
    10. '$q' → logprob: -18.126049041748047

Token 934: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3147082030773163
    2. ' =' → logprob: -1.3147082328796387
    3. '   ' → logprob: -6.689708232879639
    4. ',' → logprob: -8.56470775604248
    5. ' ' → logprob: -12.68970775604248
    6. '    ' → logprob: -13.43970775604248
    7. '=color' → logprob: -13.81470775604248
    8. ')' → logprob: -13.93970775604248
    9. '=
' → logprob: -14.18970775604248
    10. ';' → logprob: -14.31470775604248

Token 935: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03784603998064995
    2. '
' → logprob: -3.912846088409424
    3. '<|end|>' → logprob: -5.162846088409424
    4. ')' → logprob: -5.537846088409424
    5. ' 
' → logprob: -6.162846088409424
    6. ',' → logprob: -6.287846088409424
    7. '    
' → logprob: -6.412846088409424
    8. '	token' → logprob: -8.662845611572266
    9. ')
' → logprob: -8.787845611572266
    10. '<|end|>' → logprob: -8.912845611572266

Token 936: ' x' (ID: 1215)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.23720677196979523
    2. '   ' → logprob: -1.7372068166732788
    3. 'if' → logprob: -3.7372066974639893
    4. 'sum' → logprob: -5.487206935882568
    5. ' ans' → logprob: -5.862206935882568
    6. 'cnt' → logprob: -6.237206935882568
    7. ' if' → logprob: -7.112206935882568
    8. '	ans' → logprob: -7.862206935882568
    9. 'val' → logprob: -7.987206935882568
    10. 'total' → logprob: -8.86220645904541

Token 937: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07967408746480942
    2. '=' → logprob: -2.829674005508423
    3. ',' → logprob: -4.204674243927002
    4. '   ' → logprob: -6.954674243927002
    5. 'sum' → logprob: -7.204674243927002
    6. '_sum' → logprob: -7.954674243927002
    7. '=sum' → logprob: -8.204673767089844
    8. ',sum' → logprob: -10.579673767089844
    9. '_val' → logprob: -10.704673767089844
    10. '=int' → logprob: -10.954673767089844

Token 938: ' -' (ID: 533)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3735777735710144
    2. 'dist' → logprob: -1.8735778331756592
    3. 'cnt' → logprob: -2.373577833175659
    4. 'col' → logprob: -3.498577833175659
    5. '(sum' → logprob: -4.62357759475708
    6. '(dist' → logprob: -5.12357759475708
    7. '(cnt' → logprob: -5.37357759475708
    8. ' sum' → logprob: -5.87357759475708
    9. ' dist' → logprob: -6.24857759475708
    10. 'ans' → logprob: -6.24857759475708

Token 939: 'sum' (ID: 12298)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3917360007762909
    2. 'coeff' → logprob: -1.7667360305786133
    3. '1' → logprob: -2.5167360305786133
    4. 'sum' → logprob: -3.5167360305786133
    5. '(-' → logprob: -5.016736030578613
    6. 'col' → logprob: -5.141736030578613
    7. '((' → logprob: -5.516736030578613
    8. '(dist' → logprob: -5.516736030578613
    9. '(' → logprob: -5.516736030578613
    10. 'log' → logprob: -5.641736030578613

Token 940: '_[' (ID: 27517)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014823337085545063
    2. '_,' → logprob: -4.7648234367370605
    3. '_[' → logprob: -5.8898234367370605
    4. '[' → logprob: -7.1398234367370605
    5. ' if' → logprob: -7.2648234367370605
    6. 'if' → logprob: -7.6398234367370605
    7. ',' → logprob: -8.014822959899902
    8. '_
' → logprob: -8.764822959899902
    9. '[col' → logprob: -8.764822959899902
    10. ' +' → logprob: -9.014822959899902

Token 941: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.5099620223045349
    2. 'dist' → logprob: -1.6349620819091797
    3. '[col' → logprob: -1.6349620819091797
    4. '[' → logprob: -5.88496208190918
    5. '(col' → logprob: -6.75996208190918
    6. '][' → logprob: -6.88496208190918
    7. '(dist' → logprob: -7.38496208190918
    8. '0' → logprob: -7.50996208190918
    9. ']' → logprob: -7.50996208190918
    10. '1' → logprob: -8.00996208190918

Token 942: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018023921875283122
    2. '][' → logprob: -7.126802444458008
    3. ']
' → logprob: -7.626802444458008
    4. ']*' → logprob: -8.501802444458008
    5. ' ]' → logprob: -8.626802444458008
    6. ']+' → logprob: -10.126802444458008
    7. ',' → logprob: -10.751802444458008
    8. '[' → logprob: -11.376802444458008
    9. '],' → logprob: -12.001802444458008
    10. '*' → logprob: -12.376802444458008

Token 943: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1642478704452515
    2. ' +' → logprob: -1.5392478704452515
    3. '<|end|>' → logprob: -1.5392478704452515
    4. ' if' → logprob: -2.039247989654541
    5. '+' → logprob: -2.914247989654541
    6. '
' → logprob: -3.039247989654541
    7. ' *' → logprob: -4.539247989654541
    8. 'if' → logprob: -5.539247989654541
    9. '[' → logprob: -5.789247989654541
    10. ' ' → logprob: -6.539247989654541

Token 944: ' x' (ID: 1215)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 945: ' +=' (ID: 2757)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.8460848927497864
    2. '*=' → logprob: -1.0960848331451416
    3. ' +=' → logprob: -2.0960848331451416
    4. '+=' → logprob: -2.2210848331451416
    5. '*' → logprob: -6.471085071563721
    6. ' *' → logprob: -6.971085071563721
    7. '=' → logprob: -6.971085071563721
    8. ' =' → logprob: -7.596085071563721
    9. ' -=' → logprob: -7.846085071563721
    10. '   ' → logprob: -7.971085071563721

Token 946: ' dist' (ID: 3601)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.27984750270843506
    2. 'coeff' → logprob: -2.0298476219177246
    3. 'dist' → logprob: -2.4048476219177246
    4. 'sum' → logprob: -4.154847621917725
    5. 'ans' → logprob: -5.904847621917725
    6. '(cnt' → logprob: -7.029847621917725
    7. ' cnt' → logprob: -7.279847621917725
    8. ' dist' → logprob: -8.154847145080566
    9. 'pow' → logprob: -8.279847145080566
    10. ' coeff' → logprob: -8.529847145080566

Token 947: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2820088565349579
    2. '*' → logprob: -1.4070088863372803
    3. '   ' → logprob: -7.157008647918701
    4. ' ' → logprob: -10.65700912475586
    5. '
' → logprob: -10.78200912475586
    6. '*x' → logprob: -11.65700912475586
    7. 'cnt' → logprob: -12.15700912475586
    8. 'if' → logprob: -13.03200912475586
    9. '[cnt' → logprob: -13.03200912475586
    10. ',' → logprob: -13.15700912475586

Token 948: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0004541486850939691
    2. ' cnt' → logprob: -7.875453948974609
    3. '(cnt' → logprob: -9.62545394897461
    4. 'coeff' → logprob: -12.87545394897461
    5. '   ' → logprob: -13.37545394897461
    6. '[cnt' → logprob: -13.75045394897461
    7. '	cnt' → logprob: -14.12545394897461
    8. 'cn' → logprob: -14.25045394897461
    9. 'ct' → logprob: -15.25045394897461
    10. ' ' → logprob: -15.75045394897461

Token 949: '[col' (ID: 75852)
  Prédit: '[col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -0.07129251211881638
    2. '[' → logprob: -3.1962924003601074
    3. '
' → logprob: -3.8212924003601074
    4. '   ' → logprob: -6.321292400360107
    5. '[
' → logprob: -6.696292400360107
    6. '<|end|>' → logprob: -7.071292400360107
    7. ' ' → logprob: -8.071292877197266
    8. ' col' → logprob: -8.321292877197266
    9. '*' → logprob: -8.571292877197266
    10. ' 
' → logprob: -8.946292877197266

Token 950: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021102898754179478
    2. ']
' → logprob: -6.252110481262207
    3. '   ' → logprob: -9.752110481262207
    4. ')' → logprob: -10.252110481262207
    5. ' ]' → logprob: -10.252110481262207
    6. '<|end|>' → logprob: -10.752110481262207
    7. '
' → logprob: -11.877110481262207
    8. ']

' → logprob: -12.252110481262207
    9. '[' → logprob: -12.377110481262207
    10. 'def' → logprob: -12.752110481262207

Token 951: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6929582357406616
    2. '
' → logprob: -0.9429582357406616
    3. ')' → logprob: -3.192958354949951
    4. '<|end|>' → logprob: -3.442958354949951
    5. ' x' → logprob: -4.442958354949951
    6. 'x' → logprob: -4.942958354949951
    7. '    
' → logprob: -5.567958354949951
    8. '*' → logprob: -6.192958354949951
    9. '.' → logprob: -6.567958354949951
    10. ',' → logprob: -6.567958354949951

Token 952: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5123074054718018
    2. 'ans' (adapté à ' ans') → logprob: -1.1373074054718018
    3. ' ans' → logprob: -3.5123074054718018
    4. '	ans' → logprob: -3.6373074054718018
    5. ' if' → logprob: -5.137307167053223
    6. '
' → logprob: -5.512307167053223
    7. ')' → logprob: -5.637307167053223
    8. 'if' → logprob: -5.887307167053223
    9. '(ans' → logprob: -6.012307167053223
    10. '_ans' → logprob: -6.387307167053223

Token 953: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -8.2994620242971e-06
    2. '[' → logprob: -11.875008583068848
    3. 'qid' → logprob: -13.750008583068848
    4. '[id' → logprob: -17.00000762939453
    5. '
' → logprob: -17.62500762939453
    6. '

' → logprob: -18.00000762939453
    7. '[
' → logprob: -18.12500762939453
    8. ' [' → logprob: -18.50000762939453
    9. '```' → logprob: -18.75000762939453
    10. 'q' → logprob: -18.87500762939453

Token 954: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.03082330897450447
    2. ']' → logprob: -3.655823230743408
    3. '[id' → logprob: -5.780823230743408
    4. '[' → logprob: -6.655823230743408
    5. '[
' → logprob: -9.905823707580566
    6. 'ID' → logprob: -10.280823707580566
    7. '][' → logprob: -11.155823707580566
    8. '[q' → logprob: -12.030823707580566
    9. ']+' → logprob: -12.280823707580566
    10. '_id' → logprob: -12.405823707580566

Token 955: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07105327397584915
    2. ']+=' → logprob: -2.8210532665252686
    3. '+=' → logprob: -4.821053504943848
    4. ' +=' → logprob: -7.696053504943848
    5. '[' → logprob: -7.821053504943848
    6. ' ]' → logprob: -9.321053504943848
    7. '+' → logprob: -11.196053504943848
    8. ')' → logprob: -11.321053504943848
    9. '   ' → logprob: -12.446053504943848
    10. ']+' → logprob: -12.946053504943848

Token 956: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011364451609551907
    2. ' +=' → logprob: -4.511364459991455
    3. '[' → logprob: -8.136363983154297
    4. ']+=' → logprob: -11.386363983154297
    5. '=' → logprob: -12.136363983154297
    6. '+' → logprob: -12.386363983154297
    7. '+=(' → logprob: -13.136363983154297
    8. '   ' → logprob: -15.636363983154297
    9. ' ' → logprob: -16.011363983154297
    10. '	' → logprob: -16.261363983154297

Token 957: ' x' (ID: 1215)
  Prédit: 'coeff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coeff' → logprob: -0.10181016474962234
    2. 'x' → logprob: -2.3518102169036865
    3. ' coeff' → logprob: -6.601809978485107
    4. ' x' → logprob: -8.726810455322266
    5. '(coeff' → logprob: -9.976810455322266
    6. '   ' → logprob: -11.101810455322266
    7. 'coef' → logprob: -11.976810455322266
    8. '    ' → logprob: -12.101810455322266
    9. 'Coeff' → logprob: -12.851810455322266
    10. '(x' → logprob: -13.976810455322266

Token 958: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 959: ' coeff' (ID: 34539)
  Prédit: 'coeff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coeff' → logprob: -0.0003065030323341489
    2. ' coeff' → logprob: -8.125306129455566
    3. '(coeff' → logprob: -11.750306129455566
    4. '   ' → logprob: -14.250306129455566
    5. 'co' → logprob: -14.250306129455566
    6. '_coeff' → logprob: -15.250306129455566
    7. '  ' → logprob: -15.375306129455566
    8. 'coef' → logprob: -15.500306129455566
    9. 'Coeff' → logprob: -15.750306129455566
    10. '.coe' → logprob: -16.125307083129883

Token 960: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 961: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 962: ' process' (ID: 2273)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47796955704689026
    2. 'main' → logprob: -1.9779695272445679
    3. ' main' → logprob: -2.1029696464538574
    4. 'update' → logprob: -2.6029696464538574
    5. ' update' → logprob: -4.727969646453857
    6. 'solve' → logprob: -4.977969646453857
    7. 'process' → logprob: -5.102969646453857
    8. 'get' → logprob: -5.102969646453857
    9. ' def' → logprob: -5.477969646453857
    10. 'set' → logprob: -6.227969646453857

Token 963: '_single' (ID: 46053)
  Prédit: '_queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_queries' → logprob: -0.024207312613725662
    2. '_' → logprob: -4.64920711517334
    3. '(' → logprob: -5.14920711517334
    4. '_query' → logprob: -5.27420711517334
    5. '_gr' → logprob: -7.64920711517334
    6. '_edges' → logprob: -7.77420711517334
    7. 'es' → logprob: -7.89920711517334
    8. '_q' → logprob: -8.02420711517334
    9. '_(' → logprob: -8.14920711517334
    10. '(_' → logprob: -8.39920711517334

Token 964: '_stack' (ID: 35650)
  Prédit: '_query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.004910073708742857
    2. '_node' → logprob: -6.504909992218018
    3. '_edge' → logprob: -6.629909992218018
    4. '_tree' → logprob: -7.379909992218018
    5. '_' → logprob: -7.629909992218018
    6. '_line' → logprob: -8.629910469055176
    7. '_queries' → logprob: -8.879910469055176
    8. '_color' → logprob: -8.879910469055176
    9. '_col' → logprob: -9.504910469055176
    10. '_queue' → logprob: -9.754910469055176

Token 965: '_element' (ID: 21131)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6075234413146973
    2. '(q' → logprob: -1.1075234413146973
    3. '(stack' → logprob: -2.7325234413146973
    4. '(' → logprob: -3.7325234413146973
    5. '(s' → logprob: -4.607523441314697
    6. '_stack' → logprob: -5.607523441314697
    7. '():
' → logprob: -5.982523441314697
    8. '(queue' → logprob: -6.107523441314697
    9. '(lst' → logprob: -6.107523441314697
    10. '(Stack' → logprob: -6.357523441314697

Token 966: '(sk' (ID: 138451)
  Prédit: '(stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(stack' → logprob: -0.5882807970046997
    2. '(s' → logprob: -1.5882807970046997
    3. '(q' → logprob: -1.7132807970046997
    4. '(st' → logprob: -2.96328067779541
    5. '(lst' → logprob: -6.58828067779541
    6. '(p' → logprob: -7.08828067779541
    7. '(queue' → logprob: -7.08828067779541
    8. '(' → logprob: -7.08828067779541
    9. '():' → logprob: -7.33828067779541
    10. '(e' → logprob: -7.71328067779541

Token 967: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2233705222606659
    2. '):
' → logprob: -1.7233705520629883
    3. 'ement' → logprob: -5.098370552062988
    4. 'em' → logprob: -5.723370552062988
    5. 'element' → logprob: -5.848370552062988
    6. 'el' → logprob: -6.098370552062988
    7. '):' → logprob: -6.973370552062988
    8. 'e' → logprob: -7.098370552062988
    9. ':' → logprob: -7.098370552062988
    10. 'elem' → logprob: -7.098370552062988

Token 968: ' tr' (ID: 498)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4152905344963074
    2. 'q' → logprob: -2.165290594100952
    3. ' sum' → logprob: -2.290290594100952
    4. 'col' → logprob: -3.290290594100952
    5. ' q' → logprob: -3.415290594100952
    6. ' col' → logprob: -4.040290355682373
    7. 'cnt' → logprob: -5.290290355682373
    8. 'ans' → logprob: -5.790290355682373
    9. 'sk' → logprob: -5.790290355682373
    10. ')' → logprob: -6.165290355682373

Token 969: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034058038145303726
    2. '):' → logprob: -3.534058094024658
    3. '):
' → logprob: -5.659058094024658
    4. ')' → logprob: -7.659058094024658
    5. 'k' → logprob: -9.5340576171875
    6. 'ack' → logprob: -10.1590576171875
    7. '):
' → logprob: -10.4090576171875
    8. 'e' → logprob: -10.5340576171875
    9. '_,' → logprob: -11.0340576171875
    10. 'idx' → logprob: -11.1590576171875

Token 970: ' v' (ID: 323)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -1.152820110321045
    2. 'sum' → logprob: -1.652820110321045
    3. 'q' → logprob: -2.402820110321045
    4. 'cnt' → logprob: -2.777820110321045
    5. ' col' → logprob: -3.027820110321045
    6. ' sum' → logprob: -3.527820110321045
    7. 'idx' → logprob: -3.777820110321045
    8. 'pos' → logprob: -3.902820110321045
    9. 'qs' → logprob: -4.027820110321045
    10. 'ans' → logprob: -4.152820110321045

Token 971: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6393405795097351
    2. '):
' → logprob: -1.3893406391143799
    3. ',' → logprob: -1.5143406391143799
    4. '):
' → logprob: -6.639340400695801
    5. ')' → logprob: -7.389340400695801
    6. '   ' → logprob: -8.0143404006958
    7. '=' → logprob: -8.5143404006958
    8. '[' → logprob: -8.5143404006958
    9. ':' → logprob: -9.5143404006958
    10. ' ):' → logprob: -10.0143404006958

Token 972: ' p' (ID: 275)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.7550557851791382
    2. 'col' → logprob: -1.8800557851791382
    3. 'q' → logprob: -2.3800559043884277
    4. 'es' → logprob: -3.0050559043884277
    5. 'qs' → logprob: -3.0050559043884277
    6. 'cnt' → logprob: -3.1300559043884277
    7. 'ans' → logprob: -3.5050559043884277
    8. 'gr' → logprob: -3.7550559043884277
    9. 'sk' → logprob: -3.8800559043884277
    10. 'idx' → logprob: -4.192555904388428

Token 973: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.32230088114738464
    2. '):' → logprob: -1.947300910949707
    3. ',' → logprob: -2.072300910949707
    4. '):
' → logprob: -6.072300910949707
    5. '=' → logprob: -6.322300910949707
    6. 'ar' → logprob: -7.197300910949707
    7. 'r' → logprob: -7.322300910949707
    8. 'op' → logprob: -7.947300910949707
    9. 'd' → logprob: -8.822300910949707
    10. ')' → logprob: -9.072300910949707

Token 974: ' cl' (ID: 567)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qs' → logprob: -1.4276269674301147
    2. 'col' → logprob: -1.6776269674301147
    3. 'q' → logprob: -2.3026270866394043
    4. 'es' → logprob: -2.4276270866394043
    5. 'gr' → logprob: -2.6776270866394043
    6. 'sum' → logprob: -3.3026270866394043
    7. 'ans' → logprob: -4.052627086639404
    8. 'cnt' → logprob: -4.052627086639404
    9. 'c' → logprob: -4.427627086639404
    10. 'cost' → logprob: -4.552627086639404

Token 975: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.39010778069496155
    2. ',' → logprob: -2.1401078701019287
    3. '):' → logprob: -2.7651078701019287
    4. 'ass' → logprob: -2.8901078701019287
    5. ')' → logprob: -3.0151078701019287
    6. 'r' → logprob: -4.14010763168335
    7. 's' → logprob: -5.39010763168335
    8. 'v' → logprob: -5.51510763168335
    9. ']' → logprob: -6.26510763168335
    10. '):

' → logprob: -6.39010763168335

Token 976: ' cs' (ID: 14980)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.6123018264770508
    2. 'col' → logprob: -1.7373018264770508
    3. 'sum' → logprob: -1.8623018264770508
    4. 'gr' → logprob: -2.612301826477051
    5. 'qs' → logprob: -2.612301826477051
    6. 'q' → logprob: -2.737301826477051
    7. 'ans' → logprob: -3.237301826477051
    8. 'cnt' → logprob: -3.487301826477051
    9. 'cost' → logprob: -4.862301826477051
    10. 'c' → logprob: -4.862301826477051

Token 977: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12617351114749908
    2. '):
' → logprob: -2.376173496246338
    3. ',' → logprob: -4.001173496246338
    4. 'st' → logprob: -6.001173496246338
    5. 's' → logprob: -6.501173496246338
    6. ')' → logprob: -6.751173496246338
    7. '):
' → logprob: -6.876173496246338
    8. '):

' → logprob: -8.501173973083496
    9. 'd' → logprob: -8.751173973083496
    10. 'r' → logprob: -9.001173973083496

Token 978: ' cnt' (ID: 27340)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -2.099525213241577
    2. 'col' → logprob: -2.224525213241577
    3. 'ans' → logprob: -2.474525213241577
    4. 'q' → logprob: -2.787025213241577
    5. 'cnt' → logprob: -2.787025213241577
    6. 'gr' → logprob: -3.412025213241577
    7. 'es' → logprob: -3.537025213241577
    8. 'qs' → logprob: -3.849525213241577
    9. ' col' → logprob: -3.974525213241577
    10. ' sum' → logprob: -4.224525451660156

Token 979: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5746606588363647
    2. '):' → logprob: -0.9496606588363647
    3. '):
' → logprob: -3.0746607780456543
    4. ')' → logprob: -5.699660778045654
    5. '):
' → logprob: -7.824660778045654
    6. '):

' → logprob: -9.199660301208496
    7. '=' → logprob: -10.699660301208496
    8. ',
' → logprob: -11.074660301208496
    9. '   ' → logprob: -11.074660301208496
    10. ' ):' → logprob: -11.074660301208496

Token 980: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.0533630847930908
    2. 'ans' → logprob: -2.303363084793091
    3. 'col' → logprob: -2.803363084793091
    4. 'qs' → logprob: -2.928363084793091
    5. ' sum' → logprob: -3.178363084793091
    6. 'q' → logprob: -3.178363084793091
    7. 'es' → logprob: -3.803363084793091
    8. 'gr' → logprob: -3.865863084793091
    9. 'dist' → logprob: -3.928363084793091
    10. 'cost' → logprob: -4.240862846374512

Token 981: '_,' (ID: 14152)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03466101735830307
    2. '_,' → logprob: -3.409661054611206
    3. '):' → logprob: -7.284660816192627
    4. '_)' → logprob: -8.659661293029785
    5. ',' → logprob: -9.534661293029785
    6. '_:' → logprob: -10.534661293029785
    7. '_,
' → logprob: -10.909661293029785
    8. '):
' → logprob: -11.159661293029785
    9. '_=' → logprob: -12.284661293029785
    10. '_
' → logprob: -12.659661293029785

Token 982: ' vis' (ID: 1909)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7645252346992493
    2. 'qs' → logprob: -1.6395251750946045
    3. 'q' → logprob: -2.7645251750946045
    4. 'col' → logprob: -3.0145251750946045
    5. 'gr' → logprob: -3.6395251750946045
    6. ' ans' → logprob: -4.514525413513184
    7. 'idx' → logprob: -4.702025413513184
    8. 'dist' → logprob: -4.827025413513184
    9. 'pos' → logprob: -4.952025413513184
    10. 'es' → logprob: -5.077025413513184

Token 983: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.24349401891231537
    2. '):' → logprob: -1.6184940338134766
    3. ',' → logprob: -4.118494033813477
    4. ')' → logprob: -6.993494033813477
    5. '):
' → logprob: -7.368494033813477
    6. '):

' → logprob: -10.243494033813477
    7. 'v' → logprob: -10.868494033813477
    8. ',
' → logprob: -11.368494033813477
    9. '[' → logprob: -12.118494033813477
    10. '=' → logprob: -12.118494033813477

Token 984: ' es' (ID: 878)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -1.1489338874816895
    2. 'ans' → logprob: -1.2739338874816895
    3. 'qs' → logprob: -1.7739338874816895
    4. 'es' → logprob: -2.8989338874816895
    5. 'q' → logprob: -3.2739338874816895
    6. 'col' → logprob: -3.6489338874816895
    7. 'N' → logprob: -3.7739338874816895
    8. 'adj' → logprob: -4.0239338874816895
    9. ')' → logprob: -4.3989338874816895
    10. 'dfs' → logprob: -4.8989338874816895

Token 985: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9085606336593628
    2. '):' → logprob: -0.9085606336593628
    3. ',' → logprob: -1.6585606336593628
    4. '):
' → logprob: -5.783560752868652
    5. ')' → logprob: -8.658560752868652
    6. '   ' → logprob: -9.658560752868652
    7. ':' → logprob: -11.283560752868652
    8. '):

' → logprob: -11.533560752868652
    9. 'def' → logprob: -11.533560752868652
    10. '[' → logprob: -11.908560752868652

Token 986: ' qs' (ID: 75083)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.6691127419471741
    2. 'qs' → logprob: -1.9191126823425293
    3. 'ans' → logprob: -2.2941126823425293
    4. 'q' → logprob: -2.6691126823425293
    5. 'N' → logprob: -3.0441126823425293
    6. ' gr' → logprob: -4.544112682342529
    7. 'col' → logprob: -4.669112682342529
    8. 'depth' → logprob: -5.044112682342529
    9. 'n' → logprob: -5.169112682342529
    10. 'es' → logprob: -5.294112682342529

Token 987: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26448243856430054
    2. '):
' → logprob: -1.5144824981689453
    3. ',' → logprob: -4.514482498168945
    4. '):
' → logprob: -7.014482498168945
    5. ')' → logprob: -7.764482498168945
    6. ':' → logprob: -8.764482498168945
    7. '):

' → logprob: -10.764482498168945
    8. '   ' → logprob: -11.389482498168945
    9. '[' → logprob: -13.514482498168945
    10. 'def' → logprob: -13.639482498168945

Token 988: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.22355146706104279
    2. 'gr' → logprob: -1.8485515117645264
    3. 'N' → logprob: -3.4735515117645264
    4. ')' → logprob: -5.848551273345947
    5. ' gr' → logprob: -6.473551273345947
    6. ' ans' → logprob: -6.848551273345947
    7. '):
' → logprob: -7.223551273345947
    8. 'n' → logprob: -7.348551273345947
    9. 'q' → logprob: -7.348551273345947
    10. 'pos' → logprob: -7.473551273345947

Token 989: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3609108626842499
    2. '):
' → logprob: -1.3609108924865723
    3. ',' → logprob: -3.1109108924865723
    4. '):
' → logprob: -6.485910892486572
    5. ':' → logprob: -8.610910415649414
    6. ')' → logprob: -8.985910415649414
    7. '   ' → logprob: -9.110910415649414
    8. '):

' → logprob: -11.735910415649414
    9. '[' → logprob: -11.860910415649414
    10. '[]):' → logprob: -13.610910415649414

Token 990: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009033815935254097
    2. 'if' → logprob: -6.009033679962158
    3. 'while' → logprob: -6.259033679962158
    4. 'u' → logprob: -6.259033679962158
    5. 'x' → logprob: -7.884033679962158
    6. ' if' → logprob: -8.259034156799316
    7. '	if' → logprob: -8.259034156799316
    8. 'w' → logprob: -8.509034156799316
    9. ' while' → logprob: -8.634034156799316
    10. '	while' → logprob: -8.634034156799316

Token 991: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.1064406633377075
    2. '   ' → logprob: -1.6064406633377075
    3. 'while' → logprob: -1.7314406633377075
    4. 'u' → logprob: -2.231440544128418
    5. 'x' → logprob: -2.981440544128418
    6. 'col' → logprob: -2.981440544128418
    7. 'v' → logprob: -3.356440544128418
    8. 'c' → logprob: -4.481440544128418
    9. 'w' → logprob: -4.856440544128418
    10. 'sk' → logprob: -5.606440544128418

Token 992: ' len' (ID: 4631)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5980624556541443
    2. ' v' → logprob: -1.723062515258789
    3. ' len' → logprob: -2.348062515258789
    4. ' sk' → logprob: -3.223062515258789
    5. 'v' → logprob: -3.348062515258789
    6. ' cl' → logprob: -3.473062515258789
    7. ' vis' → logprob: -4.348062515258789
    8. 'not' → logprob: -4.348062515258789
    9. 'sk' → logprob: -4.473062515258789
    10. ' p' → logprob: -4.848062515258789

Token 993: '(es' (ID: 89947)
  Prédit: '(sk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sk' → logprob: -0.004703414626419544
    2. '(tr' → logprob: -5.879703521728516
    3. '(v' → logprob: -6.379703521728516
    4. '(p' → logprob: -9.379703521728516
    5. '(' → logprob: -10.254703521728516
    6. '(cl' → logprob: -10.754703521728516
    7. 'sk' → logprob: -11.004703521728516
    8. '(vis' → logprob: -11.379703521728516
    9. '(s' → logprob: -11.504703521728516
    10. '(stack' → logprob: -12.254703521728516

Token 994: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0008330935961566865
    2. '[' → logprob: -7.750833034515381
    3. ')' → logprob: -8.000833511352539
    4. ')>' → logprob: -10.500833511352539
    5. '[p' → logprob: -11.000833511352539
    6. 'v' → logprob: -11.750833511352539
    7. '[s' → logprob: -12.500833511352539
    8. ')v' → logprob: -12.625833511352539
    9. '
' → logprob: -13.750833511352539
    10. ')==' → logprob: -13.875833511352539

Token 995: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.12733489274978638
    2. '[v' → logprob: -2.1273348331451416
    3. 'v' → logprob: -8.627334594726562
    4. '[' → logprob: -9.002334594726562
    5. '][' → logprob: -9.752334594726562
    6. ')' → logprob: -11.252334594726562
    7. '   ' → logprob: -12.127334594726562
    8. ' ])' → logprob: -12.627334594726562
    9. '[p' → logprob: -13.002334594726562
    10. ']):
' → logprob: -13.377334594726562

Token 996: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.40840697288513184
    2. '>' → logprob: -1.1584069728851318
    3. ' ==' → logprob: -4.783407211303711
    4. '<=' → logprob: -5.158407211303711
    5. ' >' → logprob: -5.908407211303711
    6. 'and' → logprob: -6.783407211303711
    7. '!=' → logprob: -6.908407211303711
    8. ' and' → logprob: -7.283407211303711
    9. ':' → logprob: -7.783407211303711
    10. ')' → logprob: -8.158407211303711

Token 997: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05085716024041176
    2. '1' → logprob: -3.0508570671081543
    3. 'p' → logprob: -6.300857067108154
    4. ' ' → logprob: -7.925857067108154
    5. 'sk' → logprob: -10.300857543945312
    6. ' p' → logprob: -11.300857543945312
    7. '2' → logprob: -11.925857543945312
    8. '   ' → logprob: -12.300857543945312
    9. '
' → logprob: -12.425857543945312
    10. '(p' → logprob: -13.300857543945312

Token 998: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06296628713607788
    2. '1' → logprob: -2.8129663467407227
    3. 'p' → logprob: -7.562966346740723
    4. '2' → logprob: -8.187966346740723
    5. 'sk' → logprob: -9.062966346740723
    6. '3' → logprob: -10.687966346740723
    7. ' ' → logprob: -11.187966346740723
    8. '4' → logprob: -11.437966346740723
    9. '
' → logprob: -11.812966346740723
    10. 'cl' → logprob: -12.125466346740723

Token 999: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.2258719950914383
    2. ' and' → logprob: -1.6008720397949219
    3. '   ' → logprob: -7.850872039794922
    4. ':' → logprob: -10.225872039794922
    5. '       ' → logprob: -11.225872039794922
    6. '	and' → logprob: -12.225872039794922
    7. ' ' → logprob: -12.350872039794922
    8. ':
' → logprob: -13.350872039794922
    9. '    ' → logprob: -13.475872039794922
    10. 'or' → logprob: -13.600872039794922

Token 1000: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08188239485025406
    2. 'and' → logprob: -3.0818824768066406
    3. '   ' → logprob: -4.206882476806641
    4. '       ' → logprob: -4.956882476806641
    5. ':' → logprob: -5.081882476806641
    6. ':
' → logprob: -6.081882476806641
    7. ' or' → logprob: -7.581882476806641
    8. '	and' → logprob: -7.706882476806641
    9. ' ' → logprob: -8.33188247680664
    10. ':return' → logprob: -8.58188247680664

Token 1001: ' sk' (ID: 1705)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8015781044960022
    2. 'return' → logprob: -1.4265780448913574
    3. '   ' → logprob: -1.6765780448913574
    4. 'if' → logprob: -3.0515780448913574
    5. 'sk' (adapté à ' sk') → logprob: -3.6765780448913574
    6. ' return' → logprob: -4.301578044891357
    7. 'tr' → logprob: -4.426578044891357
    8. 'for' → logprob: -5.301578044891357
    9. ' if' → logprob: -5.676578044891357
    10. 'p' → logprob: -6.051578044891357

Token 1002: '.pop' (ID: 15746)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.133424311876297
    2. '.pop' → logprob: -2.1334242820739746
    3. '.' → logprob: -5.383424282073975
    4. '[-' → logprob: -6.508424282073975
    5. '.clear' → logprob: -8.758424758911133
    6. '.remove' → logprob: -9.883424758911133
    7. 'append' → logprob: -9.883424758911133
    8. '.push' → logprob: -10.508424758911133
    9. '[' → logprob: -11.008424758911133
    10. '=' → logprob: -11.008424758911133

Token 1003: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13722920417785645
    2. '()
' → logprob: -2.3872292041778564
    3. '<|end|>' → logprob: -3.3872292041778564
    4. '
' → logprob: -7.137228965759277
    5. '()\' → logprob: -7.387228965759277
    6. '<|end|>' → logprob: -8.012228965759277
    7. '();' → logprob: -8.512228965759277
    8. '   ' → logprob: -8.762228965759277
    9. '())' → logprob: -9.762228965759277
    10. '       ' → logprob: -9.762228965759277

Token 1004: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7130494117736816
    2. '       ' → logprob: -1.3380494117736816
    3. '<|end|>' → logprob: -2.4630494117736816
    4. '
' → logprob: -2.5880494117736816
    5. ' else' → logprob: -3.2130494117736816
    6. '    
' → logprob: -4.713049411773682
    7. '	else' → logprob: -4.963049411773682
    8. 'else' → logprob: -5.338049411773682
    9. ' ' → logprob: -5.838049411773682
    10. '    ' → logprob: -6.338049411773682

Token 1005: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8943361043930054
    2. '
' → logprob: -1.2693361043930054
    3. ' else' → logprob: -3.144336223602295
    4. '\t' → logprob: -3.144336223602295
    5. '<|end|>' → logprob: -3.269336223602295
    6. '	else' → logprob: -3.894336223602295
    7. '	s' → logprob: -4.019336223602295
    8. 'sk' → logprob: -4.394336223602295
    9. '    
' → logprob: -4.519336223602295
    10. '	elif' → logprob: -4.644336223602295

Token 1006: ' vis' (ID: 1909)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.9110674262046814
    2. ' len' → logprob: -1.7860674858093262
    3. ' not' → logprob: -2.036067485809326
    4. ' sk' → logprob: -2.536067485809326
    5. ' cl' → logprob: -2.536067485809326
    6. ' p' → logprob: -2.786067485809326
    7. ' tr' → logprob: -3.661067485809326
    8. ' vis' → logprob: -3.911067485809326
    9. ' es' → logprob: -4.411067485809326
    10. 'v' → logprob: -5.161067485809326

Token 1007: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0003389190824236721
    2. '[' → logprob: -8.000338554382324
    3. ' [' → logprob: -13.875338554382324
    4. '[p' → logprob: -14.375338554382324
    5. '[V' → logprob: -14.500338554382324
    6. '[q' → logprob: -15.375338554382324
    7. '[i' → logprob: -15.500338554382324
    8. '[val' → logprob: -16.12533950805664
    9. 'v' → logprob: -16.37533950805664
    10. '```' → logprob: -16.50033950805664

Token 1008: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03967468813061714
    2. '[v' → logprob: -4.039674758911133
    3. ']==' → logprob: -4.164674758911133
    4. ']:' → logprob: -5.539674758911133
    5. ']:
' → logprob: -6.664674758911133
    6. ' ]' → logprob: -8.789674758911133
    7. '==' → logprob: -9.039674758911133
    8. '[' → logprob: -9.039674758911133
    9. ']=' → logprob: -9.914674758911133
    10. '   ' → logprob: -10.539674758911133

Token 1009: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.006264567375183
    2. '==' → logprob: -1.131264567375183
    3. ' ==' → logprob: -2.2562646865844727
    4. ':' → logprob: -2.5062646865844727
    5. ' =' → logprob: -2.8812646865844727
    6. ' and' → logprob: -3.6312646865844727
    7. '[' → logprob: -3.6312646865844727
    8. 'and' → logprob: -4.881264686584473
    9. ' is' → logprob: -5.631264686584473
    10. '[v' → logprob: -6.131264686584473

Token 1010: ' p' (ID: 275)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.3829509019851685
    2. 'len' → logprob: -1.8829509019851685
    3. 'p' → logprob: -2.007950782775879
    4. 'cl' → logprob: -2.132950782775879
    5. 'sk' → logprob: -2.507950782775879
    6. 'v' → logprob: -2.632950782775879
    7. 'tr' → logprob: -3.007950782775879
    8. 'es' → logprob: -3.757950782775879
    9. '(tr' → logprob: -3.757950782775879
    10. '(cl' → logprob: -4.007950782775879

Token 1011: ' >=' (ID: 5064)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.755534827709198
    2. '==' → logprob: -1.7555348873138428
    3. ' !=' → logprob: -2.1305348873138428
    4. ' in' → logprob: -3.0055348873138428
    5. ' not' → logprob: -3.0055348873138428
    6. ' ==' → logprob: -3.1305348873138428
    7. 'in' → logprob: -3.2555348873138428
    8. ' is' → logprob: -3.6305348873138428
    9. 'not' → logprob: -4.130534648895264
    10. '[' → logprob: -5.255534648895264

Token 1012: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013119110371917486
    2. 'v' → logprob: -9.625131607055664
    3. '1' → logprob: -10.375131607055664
    4. ' ' → logprob: -10.750131607055664
    5. 'sk' → logprob: -12.375131607055664
    6. 'len' → logprob: -12.500131607055664
    7. '2' → logprob: -13.000131607055664
    8. '
' → logprob: -14.500131607055664
    9. 'p' → logprob: -15.000131607055664
    10. '3' → logprob: -15.375131607055664

Token 1013: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038872790173627436
    2. 'v' → logprob: -8.250389099121094
    3. '1' → logprob: -9.625389099121094
    4. 'len' → logprob: -11.375389099121094
    5. ' ' → logprob: -11.500389099121094
    6. 'cl' → logprob: -11.500389099121094
    7. 'sk' → logprob: -11.500389099121094
    8. '2' → logprob: -11.750389099121094
    9. '-' → logprob: -12.625389099121094
    10. 'p' → logprob: -13.250389099121094

Token 1014: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.24466319382190704
    2. ':' → logprob: -1.9946632385253906
    3. 'and' → logprob: -2.8696632385253906
    4. ':
' → logprob: -3.9946632385253906
    5. '       ' → logprob: -5.619663238525391
    6. '   ' → logprob: -6.494663238525391
    7. '<|end|>' → logprob: -7.994663238525391
    8. ':return' → logprob: -9.36966323852539
    9. ',' → logprob: -9.74466323852539
    10. ' :' → logprob: -9.86966323852539

Token 1015: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00856504775583744
    2. ' and' → logprob: -5.2585649490356445
    3. 'return' → logprob: -7.2585649490356445
    4. ':' → logprob: -7.3835649490356445
    5. '   ' → logprob: -7.5085649490356445
    6. ' return' → logprob: -8.008564949035645
    7. ':
' → logprob: -8.133564949035645
    8. 'and' → logprob: -8.383564949035645
    9. ',' → logprob: -8.883564949035645
    10. 'sk' → logprob: -9.383564949035645

Token 1016: ' cl' (ID: 567)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.0350040197372437
    2. 'if' → logprob: -1.5350040197372437
    3. 'for' → logprob: -2.160004138946533
    4. 'return' → logprob: -2.285004138946533
    5. 'sk' → logprob: -3.035004138946533
    6. 'cnt' → logprob: -3.785004138946533
    7. 'sum' → logprob: -3.910004138946533
    8. '   ' → logprob: -4.160004138946533
    9. 'col' → logprob: -4.285004138946533
    10. 'x' → logprob: -4.285004138946533

Token 1017: ',' (ID: 11)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.780588686466217
    2. '[v' → logprob: -0.905588686466217
    3. '=' → logprob: -2.7805886268615723
    4. ' =' → logprob: -3.6555886268615723
    5. '[' → logprob: -3.7805886268615723
    6. ',' → logprob: -4.280588626861572
    7. '.append' → logprob: -6.155588626861572
    8. ',p' → logprob: -6.405588626861572
    9. '=[' → logprob: -6.405588626861572
    10. ',v' → logprob: -6.780588626861572

Token 1018: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.008343527093529701
    2. ' cs' → logprob: -6.008343696594238
    3. 'cnt' → logprob: -6.383343696594238
    4. 'cl' → logprob: -6.758343696594238
    5. 'sk' → logprob: -7.258343696594238
    6. 'col' → logprob: -7.883343696594238
    7. 'p' → logprob: -8.008343696594238
    8. 'v' → logprob: -8.133343696594238
    9. 'tr' → logprob: -8.258343696594238
    10. 'dist' → logprob: -8.508343696594238

Token 1019: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0487765334546566
    2. ' =' → logprob: -3.173776626586914
    3. '[' → logprob: -5.798776626586914
    4. ',' → logprob: -7.048776626586914
    5. '[p' → logprob: -7.048776626586914
    6. '[v' → logprob: -7.423776626586914
    7. '=p' → logprob: -9.173776626586914
    8. '=v' → logprob: -9.923776626586914
    9. '+=' → logprob: -10.173776626586914
    10. 'v' → logprob: -10.673776626586914

Token 1020: ' tr' (ID: 498)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.21971558034420013
    2. 'sk' → logprob: -2.7197155952453613
    3. 'cl' → logprob: -3.3447155952453613
    4. 'es' → logprob: -3.7197155952453613
    5. 'v' → logprob: -4.719715595245361
    6. 'cnt' → logprob: -4.719715595245361
    7. 'p' → logprob: -4.844715595245361
    8. '0' → logprob: -4.844715595245361
    9. 'cs' → logprob: -5.094715595245361
    10. 'update' → logprob: -5.344715595245361

Token 1021: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.5898500680923462
    2. '[v' → logprob: -0.8398500680923462
    3. '[' → logprob: -4.339849948883057
    4. 'p' → logprob: -8.089850425720215
    5. 'v' → logprob: -8.214850425720215
    6. 'sk' → logprob: -10.589850425720215
    7. '[s' → logprob: -10.714850425720215
    8. '```' → logprob: -10.964850425720215
    9. '[-' → logprob: -11.464850425720215
    10. '[c' → logprob: -11.589850425720215

Token 1022: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.22157442569732666
    2. '].' → logprob: -1.7215744256973267
    3. ']' → logprob: -4.221574306488037
    4. '],' → logprob: -5.721574306488037
    5. '[v' → logprob: -7.221574306488037
    6. '][-' → logprob: -8.346574783325195
    7. ']['' → logprob: -8.846574783325195
    8. 'v' → logprob: -8.846574783325195
    9. ']
' → logprob: -9.221574783325195
    10. '[' → logprob: -9.346574783325195

Token 1023: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.31683579087257385
    2. 'cl' → logprob: -1.3168357610702515
    3. '(v' → logprob: -6.316835880279541
    4. '(cl' → logprob: -7.066835880279541
    5. 'p' → logprob: -8.191835403442383
    6. 'cs' → logprob: -9.316835403442383
    7. '0' → logprob: -9.316835403442383
    8. '(' → logprob: -9.316835403442383
    9. ''' → logprob: -9.566835403442383
    10. '1' → logprob: -9.691835403442383

Token 1024: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014002708718180656
    2. '][' → logprob: -4.639002799987793
    3. '].' → logprob: -6.389002799987793
    4. '],' → logprob: -6.639002799987793
    5. ']
' → logprob: -7.389002799987793
    6. '][]' → logprob: -9.389002799987793
    7. '];' → logprob: -9.389002799987793
    8. ' ]' → logprob: -9.639002799987793
    9. '()]' → logprob: -9.639002799987793
    10. '])' → logprob: -9.764002799987793

Token 1025: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09709476679563522
    2. '       ' → logprob: -2.722094774246216
    3. '	return' → logprob: -4.722094535827637
    4. '    ' → logprob: -5.597094535827637
    5. '	else' → logprob: -6.222094535827637
    6. '	' → logprob: -6.472094535827637
    7. '<|end|>' → logprob: -6.597094535827637
    8. '	s' → logprob: -6.722094535827637
    9. 'return' → logprob: -7.222094535827637
    10. '           ' → logprob: -7.347094535827637

Token 1026: ' cnt' (ID: 27340)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.225504994392395
    2. '       ' → logprob: -1.475504994392395
    3. 'sk' → logprob: -1.725504994392395
    4. 'cnt' (adapté à ' cnt') → logprob: -1.725504994392395
    5. 'cl' → logprob: -3.1005048751831055
    6. 'if' → logprob: -3.6005048751831055
    7. 'sum' → logprob: -3.8505048751831055
    8. 'return' → logprob: -4.4755048751831055
    9. 'tr' → logprob: -4.8505048751831055
    10. 'del' → logprob: -5.9755048751831055

Token 1027: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.050807878375053406
    2. '[col' → logprob: -3.0508079528808594
    3. ' =' → logprob: -7.300807952880859
    4. '[v' → logprob: -8.05080795288086
    5. ',' → logprob: -8.17580795288086
    6. ' +=' → logprob: -8.30080795288086
    7. '[:]' → logprob: -8.67580795288086
    8. '=' → logprob: -9.42580795288086
    9. '+=' → logprob: -9.55080795288086
    10. '[val' → logprob: -9.80080795288086

Token 1028: 'cl' (ID: 565)
  Prédit: 'cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -5.848420551046729e-05
    2. 'col' → logprob: -10.7500581741333
    3. 'c' → logprob: -11.7500581741333
    4. 'p' → logprob: -12.0000581741333
    5. '0' → logprob: -12.1250581741333
    6. 'v' → logprob: -12.3750581741333
    7. ']' → logprob: -12.5000581741333
    8. '[' → logprob: -13.3750581741333
    9. '(cl' → logprob: -13.3750581741333
    10. ' cl' → logprob: -13.5000581741333

Token 1029: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023405728861689568
    2. ']+=' → logprob: -3.7734057903289795
    3. '[' → logprob: -9.148406028747559
    4. ']+' → logprob: -10.773406028747559
    5. '-' → logprob: -11.523406028747559
    6. ' ]' → logprob: -11.898406028747559
    7. ']-' → logprob: -12.023406028747559
    8. '   ' → logprob: -13.273406028747559
    9. '][' → logprob: -13.648406028747559
    10. '],' → logprob: -13.648406028747559

Token 1030: ' -=' (ID: 12583)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.009284000843763351
    2. ' +=' → logprob: -5.134284019470215
    3. '-=' → logprob: -5.759284019470215
    4. '=' → logprob: -9.384284019470215
    5. '[' → logprob: -10.009284019470215
    6. ' -=' → logprob: -10.259284019470215
    7. '-' → logprob: -11.384284019470215
    8. '   ' → logprob: -12.009284019470215
    9. '+' → logprob: -12.134284019470215
    10. ']+=' → logprob: -12.509284019470215

Token 1031: ' ' (ID: 220)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.012682107277214527
    2. '1' → logprob: -4.38768196105957
    3. 'cl' → logprob: -9.01268196105957
    4. '   ' → logprob: -11.26268196105957
    5. ' cs' → logprob: -12.01268196105957
    6. '(cs' → logprob: -12.13768196105957
    7. 'c' → logprob: -12.26268196105957
    8. '	cs' → logprob: -12.88768196105957
    9. 'cnt' → logprob: -13.01268196105957
    10. 'cls' → logprob: -13.51268196105957

Token 1032: '1' (ID: 16)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.3136208653450012
    2. '1' → logprob: -1.3136208057403564
    3. 'cl' → logprob: -8.563620567321777
    4. 'dist' → logprob: -10.438620567321777
    5. 'es' → logprob: -10.688620567321777
    6. 'c' → logprob: -10.938620567321777
    7. 'cnt' → logprob: -11.313620567321777
    8. '   ' → logprob: -11.563620567321777
    9. '(cs' → logprob: -11.813620567321777
    10. ' cs' → logprob: -11.938620567321777

Token 1033: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03683071956038475
    2. '   ' → logprob: -3.4118306636810303
    3. 'sum' → logprob: -7.286830902099609
    4. '<|end|>' → logprob: -7.286830902099609
    5. ',' → logprob: -7.911830902099609
    6. '
' → logprob: -7.911830902099609
    7. '           ' → logprob: -8.03683090209961
    8. ' ' → logprob: -8.41183090209961
    9. '               ' → logprob: -9.91183090209961
    10. ';' → logprob: -9.91183090209961

Token 1034: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004707799293100834
    2. '   ' → logprob: -5.3797078132629395
    3. '           ' → logprob: -10.254707336425781
    4. 'sum' → logprob: -10.629707336425781
    5. '               ' → logprob: -12.004707336425781
    6. '<|end|>' → logprob: -12.254707336425781
    7. ' ' → logprob: -12.879707336425781
    8. ',' → logprob: -12.879707336425781
    9. '	' → logprob: -13.004707336425781
    10. '	   ' → logprob: -13.379707336425781

Token 1035: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.04873951897025108
    2. 'cs' → logprob: -3.048739433288574
    3. '   ' → logprob: -8.798739433288574
    4. '       ' → logprob: -15.048739433288574
    5. '    ' → logprob: -15.048739433288574
    6. '  ' → logprob: -15.548739433288574
    7. ' sum' → logprob: -15.923739433288574
    8. 'c' → logprob: -16.67374038696289
    9. 's' → logprob: -16.79874038696289
    10. '           ' → logprob: -17.29874038696289

Token 1036: '_[' (ID: 27517)
  Prédit: '_['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_[' → logprob: -0.015447858721017838
    2. '_' → logprob: -4.265448093414307
    3. '[' → logprob: -6.890448093414307
    4. '[col' → logprob: -8.640447616577148
    5. '__[' → logprob: -9.515447616577148
    6. '_
' → logprob: -12.890447616577148
    7. '```' → logprob: -13.515447616577148
    8. '_,' → logprob: -13.515447616577148
    9. '_=' → logprob: -13.765447616577148
    10. '\[' → logprob: -13.890447616577148

Token 1037: 'cl' (ID: 565)
  Prédit: 'cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -12.500004768371582
    3. '	cl' → logprob: -15.125004768371582
    4. ' cl' → logprob: -15.250004768371582
    5. '(cl' → logprob: -16.875003814697266
    6. '_cl' → logprob: -17.250003814697266
    7. 'col' → logprob: -17.875003814697266
    8. 'c' → logprob: -18.250003814697266
    9. 'clid' → logprob: -18.500003814697266
    10. 'clr' → logprob: -18.625003814697266

Token 1038: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0800287052989006
    2. ']-' → logprob: -3.330028772354126
    3. '-=' → logprob: -3.330028772354126
    4. ']+=' → logprob: -6.205028533935547
    5. '[' → logprob: -6.580028533935547
    6. '-' → logprob: -7.205028533935547
    7. ' -=' → logprob: -7.330028533935547
    8. '[v' → logprob: -8.330028533935547
    9. '][' → logprob: -9.330028533935547
    10. '+=' → logprob: -9.955028533935547

Token 1039: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0005526751047000289
    2. '-' → logprob: -8.000553131103516
    3. ' -=' → logprob: -8.500553131103516
    4. '+=' → logprob: -11.375553131103516
    5. '=' → logprob: -13.250553131103516
    6. '[' → logprob: -14.625553131103516
    7. '```' → logprob: -16.250553131103516
    8. '[-' → logprob: -16.750553131103516
    9. '   ' → logprob: -17.125553131103516
    10. '*=' → logprob: -18.250553131103516

Token 1040: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.00021259987261146307
    2. ' cs' → logprob: -8.625212669372559
    3. '   ' → logprob: -11.000212669372559
    4. '-' → logprob: -12.875212669372559
    5. '	cs' → logprob: -13.000212669372559
    6. '-c' → logprob: -13.000212669372559
    7. '(cs' → logprob: -13.250212669372559
    8. ' ' → logprob: -13.750212669372559
    9. 'int' → logprob: -13.875212669372559
    10. 'abs' → logprob: -14.000212669372559

Token 1041: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1042: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02575056627392769
    2. '<|end|>' → logprob: -4.650750637054443
    3. '    ' → logprob: -5.525750637054443
    4. 'sk' → logprob: -6.525750637054443
    5. '\t' → logprob: -6.650750637054443
    6. 'v' → logprob: -6.900750637054443
    7. '\n' → logprob: -7.150750637054443
    8. ' sk' → logprob: -7.275750637054443
    9. ' v' → logprob: -7.275750637054443
    10. ')' → logprob: -7.275750637054443

Token 1043: ' tr' (ID: 498)
  Prédit: 'sk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sk' → logprob: -0.7676657438278198
    2. '   ' → logprob: -0.8926657438278198
    3. 'tr' (adapté à ' tr') → logprob: -3.1426658630371094
    4. 'v' → logprob: -3.7676658630371094
    5. 'vis' → logprob: -3.7676658630371094
    6. 'return' → logprob: -4.392665863037109
    7. '       ' → logprob: -4.517665863037109
    8. ' sk' → logprob: -5.892665863037109
    9. 'p' → logprob: -6.267665863037109
    10. ' return' → logprob: -6.517665863037109

Token 1044: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -3.953082341467962e-05
    2. '[' → logprob: -10.250039100646973
    3. '[P' → logprob: -13.625039100646973
    4. 'p' → logprob: -13.750039100646973
    5. '<|end|>' → logprob: -15.000039100646973
    6. '[
' → logprob: -15.750039100646973
    7. '```' → logprob: -16.00004005432129
    8. '[s' → logprob: -16.00004005432129
    9. '[parent' → logprob: -16.00004005432129
    10. '
' → logprob: -16.12504005432129

Token 1045: '].' (ID: 1651)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002023212378844619
    2. ']' → logprob: -6.877023220062256
    3. '[v' → logprob: -7.502023220062256
    4. '].' → logprob: -7.877023220062256
    5. '[' → logprob: -10.752022743225098
    6. ' ][' → logprob: -11.502022743225098
    7. '"][' → logprob: -12.127022743225098
    8. ')[' → logprob: -12.377022743225098
    9. ']][' → logprob: -12.877022743225098
    10. '<|end|>' → logprob: -13.127022743225098

Token 1046: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.0018861611606553197
    2. 'clear' → logprob: -6.501886367797852
    3. '.pop' → logprob: -7.876886367797852
    4. 'v' → logprob: -13.751886367797852
    5. '(pop' → logprob: -14.251886367797852
    6. '.clear' → logprob: -14.501886367797852
    7. '_pop' → logprob: -14.751886367797852
    8. ' pop' → logprob: -14.751886367797852
    9. '[v' → logprob: -14.876886367797852
    10. 'remove' → logprob: -15.251886367797852

Token 1047: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0005653033731505275
    2. 'v' → logprob: -7.500565528869629
    3. '(
' → logprob: -11.875565528869629
    4. '(' → logprob: -12.625565528869629
    5. ' (' → logprob: -14.250565528869629
    6. '   ' → logprob: -14.625565528869629
    7. '```' → logprob: -15.125565528869629
    8. '[v' → logprob: -15.875565528869629
    9. ' v' → logprob: -16.000564575195312
    10. ',v' → logprob: -16.250564575195312

Token 1048: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00323867448605597
    2. ')
' → logprob: -5.753238677978516
    3. ',' → logprob: -10.628238677978516
    4. '()' → logprob: -10.878238677978516
    5. '   ' → logprob: -11.878238677978516
    6. '())' → logprob: -12.003238677978516
    7. ')
' → logprob: -13.378238677978516
    8. '       ' → logprob: -13.628238677978516
    9. '),' → logprob: -14.753238677978516
    10. '')' → logprob: -15.628238677978516

Token 1049: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1050: ' sk' (ID: 1705)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09779887646436691
    2. '<|end|>' → logprob: -2.8477988243103027
    3. 'return' → logprob: -4.097798824310303
    4. 'sk' (adapté à ' sk') → logprob: -4.847798824310303
    5. '       ' → logprob: -5.597798824310303
    6. 'v' → logprob: -5.847798824310303
    7. ' ' → logprob: -7.222798824310303
    8. '  ' → logprob: -7.472798824310303
    9. '	return' → logprob: -7.722798824310303
    10. 'p' → logprob: -7.847798824310303

Token 1051: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.011346656829118729
    2. '.' → logprob: -5.136346817016602
    3. '[-' → logprob: -5.636346817016602
    4. '.append' → logprob: -6.511346817016602
    5. '()' → logprob: -8.386346817016602
    6. '().' → logprob: -9.886346817016602
    7. '.remove' → logprob: -10.261346817016602
    8. 'pop' → logprob: -10.886346817016602
    9. '()
' → logprob: -12.261346817016602
    10. '.p' → logprob: -13.136346817016602

Token 1052: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03582955524325371
    2. '()
' → logprob: -3.410829544067383
    3. '<|end|>' → logprob: -6.535829544067383
    4. '(' → logprob: -7.785829544067383
    5. '
' → logprob: -9.035829544067383
    6. '()\' → logprob: -9.910829544067383
    7. ')' → logprob: -10.285829544067383
    8. '(
' → logprob: -10.535829544067383
    9. '   ' → logprob: -10.785829544067383
    10. '<|end|>' → logprob: -11.535829544067383

Token 1053: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1054: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1055: ' True' (ID: 6432)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1056: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.677028238773346
    2. ':' → logprob: -2.052028179168701
    3. '<|end|>' → logprob: -2.552028179168701
    4. '	else' → logprob: -2.802028179168701
    5. '	' → logprob: -2.802028179168701
    6. '
' → logprob: -3.427028179168701
    7. ')' → logprob: -3.552028179168701
    8. ' else' → logprob: -3.927028179168701
    9. '	elif' → logprob: -4.302028179168701
    10. 'else' → logprob: -4.552028179168701

Token 1057: '   ' (ID: 271)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	' → logprob: -1.4232581853866577
    2. '\n' → logprob: -2.0482583045959473
    3. '
' → logprob: -2.1732583045959473
    4. ':' → logprob: -2.2982583045959473
    5. ' 
' → logprob: -2.4232583045959473
    6. '<|end|>' → logprob: -2.4232583045959473
    7. ' ' → logprob: -3.1732583045959473
    8. ')' → logprob: -3.4232583045959473
    9. '\t' → logprob: -3.7982583045959473
    10. '\' → logprob: -4.048258304595947

Token 1058: ' cnt' (ID: 27340)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8113618493080139
    2. '\t' → logprob: -1.8113617897033691
    3. '	' → logprob: -2.186361789703369
    4. ':' → logprob: -3.186361789703369
    5. 'False' → logprob: -3.186361789703369
    6. '   ' → logprob: -3.311361789703369
    7. '\' → logprob: -3.686361789703369
    8. '
' → logprob: -3.936361789703369
    9. 'else' → logprob: -4.561361789703369
    10. '    
' → logprob: -4.561361789703369

Token 1059: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008252260275185108
    2. '<|end|>' → logprob: -4.883252143859863
    3. '[col' → logprob: -7.508252143859863
    4. '<|end|>' → logprob: -9.633252143859863
    5. '[
' → logprob: -12.133252143859863
    6. '[cnt' → logprob: -12.508252143859863
    7. '[cur' → logprob: -13.008252143859863
    8. '[ind' → logprob: -13.258252143859863
    9. '[count' → logprob: -13.508252143859863
    10. '[class' → logprob: -13.508252143859863

Token 1060: 'cl' (ID: 565)
  Prédit: 'cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.000476786372018978
    2. '[' → logprob: -7.750476837158203
    3. 'cs' → logprob: -11.750476837158203
    4. '(cl' → logprob: -11.750476837158203
    5. '	cl' → logprob: -12.000476837158203
    6. ' cl' → logprob: -12.125476837158203
    7. ']' → logprob: -12.625476837158203
    8. '0' → logprob: -12.625476837158203
    9. ')' → logprob: -12.750476837158203
    10. '-cl' → logprob: -13.375476837158203

Token 1061: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.30200937390327454
    2. '-=' → logprob: -2.427009344100952
    3. ' +=' → logprob: -2.677009344100952
    4. '-' → logprob: -3.177009344100952
    5. ' -=' → logprob: -3.552009344100952
    6. '+' → logprob: -3.677009344100952
    7. '   ' → logprob: -5.302009582519531
    8. '=' → logprob: -7.177009582519531
    9. ')' → logprob: -7.302009582519531
    10. ' +' → logprob: -7.677009582519531

Token 1062: ' +=' (ID: 2757)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.046303682029247284
    2. ' -=' → logprob: -3.5463037490844727
    3. '-' → logprob: -4.296303749084473
    4. '+=' → logprob: -5.921303749084473
    5. ' +=' → logprob: -9.921303749084473
    6. '[' → logprob: -10.546303749084473
    7. '=' → logprob: -11.046303749084473
    8. '   ' → logprob: -11.296303749084473
    9. '[-' → logprob: -11.671303749084473
    10. '```' → logprob: -13.671303749084473

Token 1063: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.000009536743164
    4. '+' → logprob: -17.000009536743164
    5. '```' → logprob: -17.500009536743164
    6. '[' → logprob: -19.375009536743164
    7. '0' → logprob: -19.437509536743164
    8. '-' → logprob: -19.875009536743164
    9. '
' → logprob: -19.937509536743164
    10. '2' → logprob: -20.062509536743164

Token 1064: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004917914047837257
    2. 'cs' → logprob: -7.625491619110107
    3. ' ' → logprob: -12.875492095947266
    4. '   ' → logprob: -15.375492095947266
    5. 'CS' → logprob: -15.500492095947266
    6. 's' → logprob: -16.250492095947266
    7. '(cs' → logprob: -16.250492095947266
    8. '+' → logprob: -16.625492095947266
    9. '```' → logprob: -16.625492095947266
    10. ' cs' → logprob: -16.875492095947266

Token 1065: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1066: '   ' (ID: 271)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.55122971534729
    2. '   ' → logprob: -1.55122971534729
    3. '
' → logprob: -1.80122971534729
    4. ' sum' → logprob: -4.051229476928711
    5. '<|end|>' → logprob: -4.176229476928711
    6. ',' → logprob: -6.051229476928711
    7. ' ' → logprob: -6.426229476928711
    8. ' 
' → logprob: -6.426229476928711
    9. '```' → logprob: -6.426229476928711
    10. '	sum' → logprob: -6.926229476928711

Token 1067: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -5.073596548754722e-05
    2. '   ' → logprob: -10.00005054473877
    3. ' sum' → logprob: -12.25005054473877
    4. 'cs' → logprob: -14.50005054473877
    5. '  ' → logprob: -18.250051498413086
    6. '	sum' → logprob: -18.375051498413086
    7. ' ' → logprob: -18.625051498413086
    8. 'su' → logprob: -18.875051498413086
    9. '       ' → logprob: -19.250051498413086
    10. 'summ' → logprob: -19.875051498413086

Token 1068: '_[' (ID: 27517)
  Prédit: '_['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_[' → logprob: -0.00047416388406418264
    2. '_' → logprob: -7.875473976135254
    3. '[' → logprob: -9.375473976135254
    4. '__[' → logprob: -12.375473976135254
    5. '```' → logprob: -13.250473976135254
    6. '_
' → logprob: -13.625473976135254
    7. '_
' → logprob: -14.500473976135254
    8. '\' → logprob: -15.625473976135254
    9. '_

' → logprob: -15.750473976135254
    10. 'cl' → logprob: -15.750473976135254

Token 1069: 'cl' (ID: 565)
  Prédit: 'cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.00020413640595506877
    2. '[' → logprob: -8.500204086303711
    3. ' cl' → logprob: -14.625204086303711
    4. 'col' → logprob: -16.87520408630371
    5. '(cl' → logprob: -17.37520408630371
    6. '	cl' → logprob: -17.75020408630371
    7. '[col' → logprob: -20.25020408630371
    8. '```' → logprob: -20.50020408630371
    9. '
' → logprob: -20.62520408630371
    10. 'cls' → logprob: -21.00020408630371

Token 1070: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008020264096558094
    2. ' +=' → logprob: -4.883020401000977
    3. '+' → logprob: -8.133020401000977
    4. ']+=' → logprob: -9.133020401000977
    5. '[' → logprob: -12.133020401000977
    6. '   ' → logprob: -12.383020401000977
    7. '```' → logprob: -14.383020401000977
    8. '=' → logprob: -14.383020401000977
    9. ')' → logprob: -14.758020401000977
    10. '+=(' → logprob: -15.383020401000977

Token 1071: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00016206118743866682
    2. ' +=' → logprob: -9.250162124633789
    3. '+' → logprob: -10.375162124633789
    4. '[' → logprob: -10.500162124633789
    5. ']+=' → logprob: -12.125162124633789
    6. '   ' → logprob: -14.250162124633789
    7. '
' → logprob: -14.750162124633789
    8. '=' → logprob: -15.000162124633789
    9. '```' → logprob: -15.500162124633789
    10. '+=(' → logprob: -16.62516212463379

Token 1072: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.0002067588793579489
    2. ' cs' → logprob: -8.50020694732666
    3. 'c' → logprob: -13.62520694732666
    4. 'cl' → logprob: -14.50020694732666
    5. '   ' → logprob: -15.12520694732666
    6. '	cs' → logprob: -15.12520694732666
    7. '(cs' → logprob: -15.12520694732666
    8. ' ' → logprob: -16.375205993652344
    9. 'cls' → logprob: -16.625205993652344
    10. '_cs' → logprob: -16.750205993652344

Token 1073: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005190113093703985
    2. '<|end|>' → logprob: -5.380189895629883
    3. 'sk' → logprob: -8.755189895629883
    4. 'return' → logprob: -8.880189895629883
    5. '
' → logprob: -9.755189895629883
    6. '<|end|>' → logprob: -9.755189895629883
    7. ' sk' → logprob: -10.380189895629883
    8. '[' → logprob: -10.880189895629883
    9. ',' → logprob: -11.130189895629883
    10. ')' → logprob: -11.505189895629883

Token 1074: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02507951110601425
    2. 'sk' → logprob: -3.7750794887542725
    3. '<|end|>' → logprob: -7.150079727172852
    4. ' sk' → logprob: -8.525079727172852
    5. 'return' → logprob: -9.150079727172852
    6. '       ' → logprob: -9.525079727172852
    7. '[' → logprob: -9.525079727172852
    8. '\' → logprob: -9.650079727172852
    9. '    
' → logprob: -9.650079727172852
    10. '
' → logprob: -9.650079727172852

Token 1075: ' for' (ID: 395)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.697128176689148
    2. 'sk' → logprob: -0.822128176689148
    3. '   ' → logprob: -2.8221282958984375
    4. 'tr' → logprob: -5.9471282958984375
    5. 'vis' → logprob: -8.822128295898438
    6. 'if' → logprob: -9.822128295898438
    7. ' return' → logprob: -10.322128295898438
    8. 'cl' → logprob: -10.322128295898438
    9. 'stack' → logprob: -10.697128295898438
    10. '       ' → logprob: -10.947128295898438

Token 1076: ' q' (ID: 2335)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7920538187026978
    2. 'w' → logprob: -1.7920538187026978
    3. 'nv' → logprob: -2.167053699493408
    4. 'nx' → logprob: -2.417053699493408
    5. 'to' → logprob: -2.917053699493408
    6. 'n' → logprob: -3.917053699493408
    7. '(u' → logprob: -3.917053699493408
    8. 'e' → logprob: -4.167053699493408
    9. 'i' → logprob: -4.167053699493408
    10. 'x' → logprob: -4.417053699493408

Token 1077: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07046973705291748
    2. 'in' → logprob: -2.695469856262207
    3. ',' → logprob: -8.820469856262207
    4. 'v' → logprob: -8.820469856262207
    5. ' ' → logprob: -10.195469856262207
    6. '	in' → logprob: -10.445469856262207
    7. '   ' → logprob: -10.570469856262207
    8. '
' → logprob: -10.820469856262207
    9. ' col' → logprob: -11.195469856262207
    10. 's' → logprob: -11.195469856262207

Token 1078: ' qs' (ID: 75083)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -3.368984107510187e-05
    2. ' qs' → logprob: -10.625033378601074
    3. '   ' → logprob: -12.125033378601074
    4. 'es' → logprob: -13.375033378601074
    5. '
' → logprob: -13.875033378601074
    6. '[' → logprob: -14.875033378601074
    7. '  ' → logprob: -15.625033378601074
    8. ' ' → logprob: -15.750033378601074
    9. 'q' → logprob: -16.00003433227539
    10. '       ' → logprob: -16.25003433227539

Token 1079: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.5358694731257856e-05
    2. 'v' → logprob: -10.500035285949707
    3. '[' → logprob: -12.750035285949707
    4. '   ' → logprob: -13.500035285949707
    5. '```' → logprob: -14.125035285949707
    6. '[q' → logprob: -14.500035285949707
    7. '(v' → logprob: -15.000035285949707
    8. '[c' → logprob: -15.500035285949707
    9. '[u' → logprob: -15.625035285949707
    10. ' [' → logprob: -15.875035285949707

Token 1080: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.008897237479686737
    2. ']:
' → logprob: -4.758897304534912
    3. ']' → logprob: -8.508896827697754
    4. ']:
' → logprob: -10.383896827697754
    5. ':' → logprob: -11.133896827697754
    6. '):' → logprob: -11.383896827697754
    7. ']>' → logprob: -12.383896827697754
    8. ']):' → logprob: -12.508896827697754
    9. ':]' → logprob: -12.883896827697754
    10. '],' → logprob: -12.883896827697754

Token 1081: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.145118848304264e-05
    2. 'update' → logprob: -10.000051498413086
    3. '   ' → logprob: -12.375051498413086
    4. '           ' → logprob: -14.000051498413086
    5. ' update' → logprob: -14.875051498413086
    6. '.update' → logprob: -16.250051498413086
    7. '	update' → logprob: -16.625051498413086
    8. '      ' → logprob: -16.875051498413086
    9. '_update' → logprob: -17.000051498413086
    10. '```' → logprob: -17.125051498413086

Token 1082: ' update' (ID: 4027)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13575156033039093
    2. 'update' (adapté à ' update') → logprob: -2.385751485824585
    3. '   ' → logprob: -3.385751485824585
    4. ' update' → logprob: -7.010751724243164
    5. '.update' → logprob: -9.760751724243164
    6. '	update' → logprob: -9.885751724243164
    7. '           ' → logprob: -10.885751724243164
    8. 'if' → logprob: -12.260751724243164
    9. '```' → logprob: -12.385751724243164
    10. '_update' → logprob: -12.635751724243164

Token 1083: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.00025287605240009725
    2. 'ans' → logprob: -8.375252723693848
    3. '(ans' → logprob: -10.750252723693848
    4. 'Ans' → logprob: -14.625252723693848
    5. '	ans' → logprob: -15.750252723693848
    6. ' ans' → logprob: -16.125253677368164
    7. '_ann' → logprob: -16.375253677368164
    8. '_answer' → logprob: -16.875253677368164
    9. '(q' → logprob: -17.000253677368164
    10. 'ANS' → logprob: -17.000253677368164

Token 1084: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.007057761307805777
    2. 'for' → logprob: -5.0070576667785645
    3. '(q' → logprob: -8.132058143615723
    4. '
' → logprob: -11.132058143615723
    5. '   ' → logprob: -11.882058143615723
    6. 'For' → logprob: -12.132058143615723
    7. '(for' → logprob: -13.257058143615723
    8. '

' → logprob: -13.382058143615723
    9. '_' → logprob: -13.507058143615723
    10. '```' → logprob: -13.507058143615723

Token 1085: '_query' (ID: 13012)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.2519839406013489
    2. '_query' → logprob: -1.501983880996704
    3. 'q' → logprob: -10.001983642578125
    4. 'Query' → logprob: -13.001983642578125
    5. ' query' → logprob: -13.001983642578125
    6. 'quer' → logprob: -13.876983642578125
    7. '(query' → logprob: -14.376983642578125
    8. '
' → logprob: -14.376983642578125
    9. '(q' → logprob: -14.501983642578125
    10. 'update' → logprob: -14.501983642578125

Token 1086: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -3.106736039626412e-05
    2. '(' → logprob: -11.125031471252441
    3. 'q' → logprob: -11.750031471252441
    4. ' (' → logprob: -12.500031471252441
    5. '(
' → logprob: -12.625031471252441
    6. '
' → logprob: -14.875031471252441
    7. '(sk' → logprob: -14.875031471252441
    8. ' q' → logprob: -16.000030517578125
    9. '(qu' → logprob: -16.000030517578125
    10. '	q' → logprob: -16.250030517578125

Token 1087: ',' (ID: 11)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.038629114627838135
    2. '(cnt' → logprob: -3.9136290550231934
    3. '(' → logprob: -5.163629055023193
    4. '(sk' → logprob: -5.413629055023193
    5. ')' → logprob: -5.663629055023193
    6. ',' → logprob: -5.788629055023193
    7. ',sum' → logprob: -7.038629055023193
    8. '(s' → logprob: -9.413629531860352
    9. '(count' → logprob: -9.538629531860352
    10. ' (' → logprob: -10.288629531860352

Token 1088: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -9.615255839889869e-05
    2. ' sum' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.50009536743164
    4. '
' → logprob: -17.62509536743164
    5. '  ' → logprob: -18.50009536743164
    6. ' ' → logprob: -18.50009536743164
    7. 's' → logprob: -19.25009536743164
    8. 'summ' → logprob: -19.37509536743164
    9. '    ' → logprob: -20.00009536743164
    10. '	sum' → logprob: -20.50009536743164

Token 1089: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.020220907405018806
    2. '_' → logprob: -4.020220756530762
    3. ',' → logprob: -6.270220756530762
    4. '_,
' → logprob: -8.895220756530762
    5. '_[' → logprob: -10.520220756530762
    6. '_
' → logprob: -12.645220756530762
    7. '_

' → logprob: -12.770220756530762
    8. '_)' → logprob: -13.395220756530762
    9. ',_' → logprob: -14.020220756530762
    10. '[' → logprob: -14.145220756530762

Token 1090: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.00033546582562848926
    2. ' cnt' → logprob: -8.000335693359375
    3. '	cnt' → logprob: -17.500335693359375
    4. 'count' → logprob: -18.500335693359375
    5. '(cnt' → logprob: -19.000335693359375
    6. '   ' → logprob: -19.625335693359375
    7. '[cnt' → logprob: -19.625335693359375
    8. ' ' → logprob: -20.000335693359375
    9. 'ct' → logprob: -20.750335693359375
    10. 'cn' → logprob: -21.250335693359375

Token 1091: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006327360169962049
    2. ' ,' → logprob: -7.3756327629089355
    3. ',
' → logprob: -12.500632286071777
    4. '   ' → logprob: -13.750632286071777
    5. '       ' → logprob: -14.500632286071777
    6. ' ans' → logprob: -15.500632286071777
    7. ' ' → logprob: -16.250633239746094
    8. '  ' → logprob: -16.250633239746094
    9. '```' → logprob: -16.750633239746094
    10. '
' → logprob: -16.875633239746094

Token 1092: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.676292231422849e-05
    2. ' ans' → logprob: -11.000017166137695
    3. '
' → logprob: -18.125017166137695
    4. '   ' → logprob: -18.125017166137695
    5. '	ans' → logprob: -18.125017166137695
    6. '(ans' → logprob: -18.375017166137695
    7. 'answer' → logprob: -20.375017166137695
    8. '           ' → logprob: -21.500017166137695
    9. '       ' → logprob: -21.500017166137695
    10. ' ' → logprob: -21.500017166137695

Token 1093: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4287606179714203
    2. '   ' → logprob: -1.1787606477737427
    3. ')
' → logprob: -3.928760528564453
    4. '<|end|>' → logprob: -3.928760528564453
    5. ')return' → logprob: -7.303760528564453
    6. '<|end|>' → logprob: -7.428760528564453
    7. '
' → logprob: -8.428760528564453
    8. '    
' → logprob: -9.803760528564453
    9. ' )' → logprob: -10.303760528564453
    10. ')

' → logprob: -10.803760528564453

Token 1094: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7170450091362
    2. '\t' → logprob: -1.2170450687408447
    3. '	' → logprob: -2.8420450687408447
    4. '<|end|>' → logprob: -2.9670450687408447
    5. '\' → logprob: -3.3420450687408447
    6. '	return' → logprob: -3.5920450687408447
    7. '\n' → logprob: -5.217044830322266
    8. '    
' → logprob: -5.467044830322266
    9. '
' → logprob: -5.467044830322266
    10. '    ' → logprob: -5.592044830322266

Token 1095: ' vis' (ID: 1909)
  Prédit: '\t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\t' → logprob: -0.2873018980026245
    2. '   ' → logprob: -2.162302017211914
    3. '	' → logprob: -2.787302017211914
    4. '\' → logprob: -3.662302017211914
    5. '	return' → logprob: -3.912302017211914
    6. 'sk' → logprob: -4.662302017211914
    7. '\x' → logprob: -5.662302017211914
    8. '\n' → logprob: -5.912302017211914
    9. '<|end|>' → logprob: -6.037302017211914
    10. 'return' → logprob: -6.287302017211914

Token 1096: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.723352049040841e-06
    2. 'v' → logprob: -12.500004768371582
    3. '=v' → logprob: -15.625004768371582
    4. '[' → logprob: -15.625004768371582
    5. '[val' → logprob: -15.625004768371582
    6. ' =' → logprob: -15.875004768371582
    7. '	v' → logprob: -16.750003814697266
    8. '```' → logprob: -16.875003814697266
    9. '[u' → logprob: -17.125003814697266
    10. '(v' → logprob: -17.875003814697266

Token 1097: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08227115869522095
    2. ' =' → logprob: -2.582271099090576
    3. ']' → logprob: -5.832271099090576
    4. '   ' → logprob: -9.082271575927734
    5. '[v' → logprob: -9.082271575927734
    6. ']=' → logprob: -9.332271575927734
    7. '[' → logprob: -10.082271575927734
    8. ')' → logprob: -10.082271575927734
    9. '=True' → logprob: -10.707271575927734
    10. '=False' → logprob: -12.332271575927734

Token 1098: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0386364571750164
    2. ' =' → logprob: -3.2886364459991455
    3. '=True' → logprob: -7.663636684417725
    4. '=False' → logprob: -9.913636207580566
    5. '[' → logprob: -10.538636207580566
    6. ',' → logprob: -10.538636207580566
    7. '   ' → logprob: -11.663636207580566
    8. '==' → logprob: -13.038636207580566
    9. ')' → logprob: -13.163636207580566
    10. '+=' → logprob: -13.663636207580566

Token 1099: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0009152670972980559
    2. ' True' → logprob: -7.000915050506592
    3. '   ' → logprob: -12.62591552734375
    4. 'False' → logprob: -15.12591552734375
    5. '1' → logprob: -16.25091552734375
    6. 'not' → logprob: -17.62591552734375
    7. '    ' → logprob: -17.75091552734375
    8. '       ' → logprob: -18.12591552734375
    9. '  ' → logprob: -18.25091552734375
    10. '	' → logprob: -18.25091552734375

Token 1100: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1676270961761475
    2. '	' → logprob: -1.2926270961761475
    3. '\t' → logprob: -1.2926270961761475
    4. '	return' → logprob: -2.7926270961761475
    5. '<|end|>' → logprob: -3.2926270961761475
    6. '\' → logprob: -4.667627334594727
    7. '\n' → logprob: -5.167627334594727
    8. '
' → logprob: -5.667627334594727
    9. '\x' → logprob: -6.042627334594727
    10. ')' → logprob: -6.042627334594727

Token 1102: ' for' (ID: 395)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.986686646938324
    2. '	return' → logprob: -1.2366867065429688
    3. 'sk' → logprob: -1.8616867065429688
    4. '\t' → logprob: -2.8616867065429688
    5. '   ' → logprob: -3.1116867065429688
    6. '	' → logprob: -3.4866867065429688
    7. '\' → logprob: -3.6116867065429688
    8. '	s' → logprob: -4.236686706542969
    9. 'v' → logprob: -6.361686706542969
    10. '.' → logprob: -7.486686706542969

Token 1103: ' (' (ID: 350)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6863459348678589
    2. 'w' → logprob: -1.5613459348678589
    3. 'nv' → logprob: -2.4363460540771484
    4. 'nx' → logprob: -2.4363460540771484
    5. 'to' → logprob: -3.0613460540771484
    6. 'n' → logprob: -3.9363460540771484
    7. '(u' → logprob: -4.561346054077148
    8. 'e' → logprob: -5.186346054077148
    9. 'i' → logprob: -5.186346054077148
    10. 'x' → logprob: -5.311346054077148

Token 1104: 'to' (ID: 935)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7098308205604553
    2. 'w' → logprob: -1.8348307609558105
    3. 'nx' → logprob: -2.0848307609558105
    4. 'nv' → logprob: -2.5848307609558105
    5. 'to' → logprob: -2.7098307609558105
    6. 'n' → logprob: -3.0848307609558105
    7. '(u' → logprob: -4.3348307609558105
    8. 'b' → logprob: -4.9598307609558105
    9. 'x' → logprob: -6.0848307609558105
    10. '(n' → logprob: -6.4598307609558105

Token 1105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9054008084349334e-05
    2. ' ,' → logprob: -11.000039100646973
    3. ',col' → logprob: -11.250039100646973
    4. ',d' → logprob: -12.375039100646973
    5. ')' → logprob: -14.125039100646973
    6. '_,' → logprob: -14.375039100646973
    7. 'col' → logprob: -14.750039100646973
    8. 'w' → logprob: -15.000039100646973
    9. ',size' → logprob: -15.125039100646973
    10. ' col' → logprob: -15.375039100646973

Token 1106: ' co' (ID: 1407)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0159797091037035
    2. 'd' → logprob: -4.390979766845703
    3. ' dist' → logprob: -5.890979766845703
    4. 'dis' → logprob: -8.265979766845703
    5. 'cost' → logprob: -9.140979766845703
    6. 'ds' → logprob: -9.390979766845703
    7. 'di' → logprob: -9.890979766845703
    8. ' d' → logprob: -10.265979766845703
    9. 'w' → logprob: -10.515979766845703
    10. 'distance' → logprob: -10.640979766845703

Token 1107: ',' (ID: 11)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.635164754698053e-05
    2. ',' → logprob: -9.875066757202148
    3. 'lor' → logprob: -12.250066757202148
    4. 'll' → logprob: -13.250066757202148
    5. ',l' → logprob: -13.250066757202148
    6. 'ld' → logprob: -13.375066757202148
    7. 'col' → logprob: -13.750066757202148
    8. ' l' → logprob: -14.125066757202148
    9. 'st' → logprob: -14.625066757202148
    10. '1' → logprob: -14.875066757202148

Token 1108: ' col' (ID: 996)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.5365445613861084
    2. 'cl' → logprob: -1.7865445613861084
    3. 'dist' → logprob: -2.5365445613861084
    4. 'col' → logprob: -3.1615445613861084
    5. 'da' → logprob: -3.4115445613861084
    6. 'co' → logprob: -3.7865445613861084
    7. 'de' → logprob: -4.1615447998046875
    8. 'dis' → logprob: -4.2865447998046875
    9. 'ci' → logprob: -4.7865447998046875
    10. 'cd' → logprob: -5.4115447998046875

Token 1109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017202809685841203
    2. 't' → logprob: -7.126720428466797
    3. 'r' → logprob: -7.501720428466797
    4. ',' → logprob: -9.126720428466797
    5. '),' → logprob: -9.126720428466797
    6. 'nt' → logprob: -9.751720428466797
    7. 'd' → logprob: -10.876720428466797
    8. 'n' → logprob: -11.001720428466797
    9. 'rt' → logprob: -11.376720428466797
    10. ' )' → logprob: -11.626720428466797

Token 1110: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3871666193008423
    2. ' in' → logprob: -1.1371666193008423
    3. ',' → logprob: -8.387166976928711
    4. '   ' → logprob: -11.012166976928711
    5. ')' → logprob: -11.137166976928711
    6. '
' → logprob: -11.262166976928711
    7. '	in' → logprob: -11.887166976928711
    8. 's' → logprob: -12.387166976928711
    9. ' ' → logprob: -13.262166976928711
    10. '  ' → logprob: -13.637166976928711

Token 1111: ' reversed' (ID: 57184)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -3.5120287066092715e-05
    2. ' es' → logprob: -10.375035285949707
    3. '   ' → logprob: -13.625035285949707
    4. 'sk' → logprob: -14.375035285949707
    5. 'enumer' → logprob: -14.375035285949707
    6. '	es' → logprob: -15.125035285949707
    7. '[' → logprob: -15.250035285949707
    8. 'sorted' → logprob: -15.500035285949707
    9. ' ' → logprob: -15.750035285949707
    10. '
' → logprob: -15.875035285949707

Token 1112: '(es' (ID: 89947)
  Prédit: '(es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(es' → logprob: -0.00861729308962822
    2. 'es' → logprob: -4.758617401123047
    3. '	es' → logprob: -14.133617401123047
    4. ' es' → logprob: -14.258617401123047
    5. '(sk' → logprob: -15.008617401123047
    6. 'range' → logprob: -15.133617401123047
    7. 'sk' → logprob: -15.883617401123047
    8. '(en' → logprob: -16.258617401123047
    9. '(' → logprob: -16.258617401123047
    10. '-es' → logprob: -16.883617401123047

Token 1113: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.153795766294934e-06
    2. 'v' → logprob: -12.125005722045898
    3. '[' → logprob: -15.500005722045898
    4. '[p' → logprob: -15.750005722045898
    5. '
' → logprob: -16.0000057220459
    6. '[u' → logprob: -17.3750057220459
    7. ' [' → logprob: -17.3750057220459
    8. ')' → logprob: -17.5000057220459
    9. ')[' → logprob: -17.5000057220459
    10. '[q' → logprob: -17.5000057220459

Token 1114: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.11850181221961975
    2. ']):
' → logprob: -2.243501901626587
    3. ']' → logprob: -5.743501663208008
    4. '])' → logprob: -6.118501663208008
    5. '):' → logprob: -9.493501663208008
    6. ')' → logprob: -10.118501663208008
    7. ')]' → logprob: -10.743501663208008
    8. '):
' → logprob: -10.993501663208008
    9. '[v' → logprob: -11.118501663208008
    10. '[' → logprob: -11.243501663208008

Token 1115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002292279154062271
    2. '   ' → logprob: -7.502292156219482
    3. 'if' → logprob: -7.502292156219482
    4. ' if' → logprob: -7.502292156219482
    5. '):
' → logprob: -8.12729263305664
    6. ',' → logprob: -9.12729263305664
    7. ':
' → logprob: -9.87729263305664
    8. '<|end|>' → logprob: -9.87729263305664
    9. ')' → logprob: -10.50229263305664
    10. ':' → logprob: -10.75229263305664

Token 1116: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011332275345921516
    2. '       ' → logprob: -5.3863325119018555
    3. '   ' → logprob: -5.5113325119018555
    4. 'sk' → logprob: -6.2613325119018555
    5. 'process' → logprob: -7.5113325119018555
    6. ' if' → logprob: -9.386332511901855
    7. 'cl' → logprob: -10.261332511901855
    8. 'cs' → logprob: -10.386332511901855
    9. '           ' → logprob: -11.136332511901855
    10. 'tr' → logprob: -11.761332511901855

Token 1117: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.009725158102810383
    2. ' to' → logprob: -4.884725093841553
    3. 'not' → logprob: -6.509725093841553
    4. ' not' → logprob: -8.259725570678711
    5. 'col' → logprob: -8.884725570678711
    6. '   ' → logprob: -9.259725570678711
    7. 'vis' → logprob: -10.259725570678711
    8. 'co' → logprob: -10.384725570678711
    9. ' col' → logprob: -11.384725570678711
    10. 'len' → logprob: -11.509725570678711

Token 1118: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6246822476387024
    2. ' !=' → logprob: -0.8746822476387024
    3. '==' → logprob: -3.4996821880340576
    4. ' ==' → logprob: -4.249682426452637
    5. ' not' → logprob: -5.874682426452637
    6. ' is' → logprob: -9.249682426452637
    7. 'not' → logprob: -9.374682426452637
    8. '()!=' → logprob: -9.999682426452637
    9. ' in' → logprob: -10.999682426452637
    10. 'is' → logprob: -11.624682426452637

Token 1119: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0003012617235071957
    2. ' p' → logprob: -8.125301361083984
    3. 'sk' → logprob: -13.000301361083984
    4. 'cl' → logprob: -13.750301361083984
    5. '   ' → logprob: -14.125301361083984
    6. '
' → logprob: -14.500301361083984
    7. ' ' → logprob: -15.250301361083984
    8. '    ' → logprob: -15.500301361083984
    9. '	p' → logprob: -15.875301361083984
    10. '  ' → logprob: -17.500301361083984

Token 1120: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.2392158508300781
    2. ':
' → logprob: -1.2392158508300781
    3. ':' → logprob: -1.3642158508300781
    4. '           ' → logprob: -1.8642158508300781
    5. ' and' → logprob: -5.614215850830078
    6. '       ' → logprob: -5.614215850830078
    7. ',' → logprob: -6.364215850830078
    8. ' continue' → logprob: -8.364215850830078
    9. ':return' → logprob: -8.364215850830078
    10. '   ' → logprob: -8.989215850830078

Token 1121: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03456186130642891
    2. ' continue' → logprob: -3.6595618724823
    3. ':' → logprob: -5.784561634063721
    4. 'continue' → logprob: -5.784561634063721
    5. '		' → logprob: -7.284561634063721
    6. '	       ' → logprob: -8.159562110900879
    7. ':
' → logprob: -8.284562110900879
    8. ',' → logprob: -8.409562110900879
    9. ' and' → logprob: -8.659562110900879
    10. '	continue' → logprob: -8.909562110900879

Token 1122: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.09069892764091492
    2. ' continue' → logprob: -3.0906989574432373
    3. '           ' → logprob: -3.2156989574432373
    4. 'break' → logprob: -7.590698719024658
    5. '               ' → logprob: -8.090699195861816
    6. 'return' → logprob: -8.590699195861816
    7. '		' → logprob: -10.090699195861816
    8. '	continue' → logprob: -10.590699195861816
    9. ' break' → logprob: -11.090699195861816
    10. ' return' → logprob: -11.590699195861816

Token 1123: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017390385270118713
    2. '           ' → logprob: -4.892390251159668
    3. '        
' → logprob: -6.017390251159668
    4. '
' → logprob: -7.017390251159668
    5. 'sk' → logprob: -7.017390251159668
    6. '		
' → logprob: -7.142390251159668
    7. '	' → logprob: -7.267390251159668
    8. '<|end|>' → logprob: -7.267390251159668
    9. ',' → logprob: -7.767390251159668
    10. ':
' → logprob: -7.892390251159668

Token 1124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06411262601613998
    2. '	' → logprob: -3.314112663269043
    3. '           ' → logprob: -4.064112663269043
    4. '		' → logprob: -5.814112663269043
    5. '	       ' → logprob: -6.314112663269043
    6. 'sk' → logprob: -7.189112663269043
    7. '	   ' → logprob: -7.314112663269043
    8. '        ' → logprob: -7.564112663269043
    9. '	s' → logprob: -8.439112663269043
    10. '               ' → logprob: -8.689112663269043

Token 1125: ' sk' (ID: 1705)
  Prédit: 'sk'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sk' (adapté à ' sk') → logprob: -0.1146509051322937
    2. 'process' → logprob: -2.9896509647369385
    3. 'cl' → logprob: -3.4896509647369385
    4. 'if' → logprob: -3.9896509647369385
    5. '       ' → logprob: -5.364650726318359
    6. 'cs' → logprob: -6.364650726318359
    7. 'res' → logprob: -6.489650726318359
    8. '   ' → logprob: -8.23965072631836
    9. 'tr' → logprob: -8.73965072631836
    10. 'stack' → logprob: -9.23965072631836

Token 1126: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00024500858853571117
    2. '.' → logprob: -8.500245094299316
    3. '.push' → logprob: -10.875245094299316
    4. '[-' → logprob: -11.625245094299316
    5. 'append' → logprob: -12.000245094299316
    6. '.pop' → logprob: -12.500245094299316
    7. '.extend' → logprob: -13.125245094299316
    8. '.app' → logprob: -14.500245094299316
    9. '.insert' → logprob: -14.750245094299316
    10. '.ap' → logprob: -15.375245094299316

Token 1127: '((' (ID: 2054)
  Prédit: '(to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -0.1439744532108307
    2. '((' → logprob: -2.018974542617798
    3. '(v' → logprob: -7.393974304199219
    4. 'to' → logprob: -7.768974304199219
    5. '(' → logprob: -8.893974304199219
    6. '([' → logprob: -9.143974304199219
    7. 'v' → logprob: -12.518974304199219
    8. '(((' → logprob: -12.893974304199219
    9. '([(' → logprob: -13.393974304199219
    10. '(([' → logprob: -13.518974304199219

Token 1128: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.10327795892953873
    2. 'sk' → logprob: -2.7282779216766357
    3. 'v' → logprob: -3.8532779216766357
    4. 'es' → logprob: -5.103278160095215
    5. 'co' → logprob: -6.978278160095215
    6. '0' → logprob: -7.103278160095215
    7. 'len' → logprob: -7.353278160095215
    8. '(to' → logprob: -7.853278160095215
    9. '(v' → logprob: -7.978278160095215
    10. 'tr' → logprob: -7.978278160095215

Token 1129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000587821879889816
    2. ' ,' → logprob: -7.8755879402160645
    3. ',col' → logprob: -8.625587463378906
    4. ',p' → logprob: -11.375587463378906
    5. 'col' → logprob: -11.625587463378906
    6. ' col' → logprob: -12.875587463378906
    7. ',v' → logprob: -13.375587463378906
    8. ',
' → logprob: -14.000587463378906
    9. 'p' → logprob: -14.375587463378906
    10. '
' → logprob: -14.750587463378906

Token 1130: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0013052374124526978
    2. 'co' → logprob: -7.501305103302002
    3. ' v' → logprob: -8.25130558013916
    4. 'p' → logprob: -9.00130558013916
    5. '(v' → logprob: -9.50130558013916
    6. 'len' → logprob: -10.00130558013916
    7. '0' → logprob: -10.12630558013916
    8. 'cl' → logprob: -10.12630558013916
    9. '   ' → logprob: -10.25130558013916
    10. 'col' → logprob: -10.37630558013916

Token 1131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006601344794034958
    2. '))' → logprob: -7.750659942626953
    3. ' ,' → logprob: -8.500659942626953
    4. ',col' → logprob: -11.250659942626953
    5. 'col' → logprob: -12.125659942626953
    6. '))
' → logprob: -13.500659942626953
    7. '   ' → logprob: -13.875659942626953
    8. '  ' → logprob: -14.000659942626953
    9. ')),' → logprob: -14.375659942626953
    10. ')))' → logprob: -14.750659942626953

Token 1132: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.03769347444176674
    2. 'co' → logprob: -3.412693500518799
    3. 'es' → logprob: -6.037693500518799
    4. ' col' → logprob: -7.162693500518799
    5. '0' → logprob: -7.662693500518799
    6. 'len' → logprob: -9.53769302368164
    7. '1' → logprob: -9.66269302368164
    8. 'None' → logprob: -10.03769302368164
    9. '-' → logprob: -10.16269302368164
    10. 'cl' → logprob: -10.28769302368164

Token 1133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001921610557474196
    2. '))' → logprob: -6.626921653747559
    3. ' ,' → logprob: -7.501921653747559
    4. ')),' → logprob: -11.751921653747559
    5. ',
' → logprob: -12.001921653747559
    6. '))
' → logprob: -12.251921653747559
    7. '   ' → logprob: -12.751921653747559
    8. ' ))' → logprob: -13.001921653747559
    9. '),' → logprob: -13.126921653747559
    10. ',(' → logprob: -13.376921653747559

Token 1134: ' co' (ID: 1407)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.036869898438453674
    2. 'cs' → logprob: -3.911870002746582
    3. 'es' → logprob: -4.286870002746582
    4. '1' → logprob: -6.536870002746582
    5. '0' → logprob: -8.161870002746582
    6. 'col' → logprob: -8.911870002746582
    7. 'q' → logprob: -9.286870002746582
    8. 'sum' → logprob: -9.411870002746582
    9. '-' → logprob: -9.786870002746582
    10. 'abs' → logprob: -10.036870002746582

Token 1135: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.017153123393654823
    2. ',' → logprob: -4.392153263092041
    3. '))
' → logprob: -5.392153263092041
    4. ' ))' → logprob: -9.892152786254883
    5. '))

' → logprob: -11.767152786254883
    6. ')' → logprob: -11.892152786254883
    7. '   ' → logprob: -12.517152786254883
    8. ' ,' → logprob: -12.767152786254883
    9. '))
' → logprob: -13.017152786254883
    10. ' ' → logprob: -13.517152786254883

Token 1136: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1137: ' tr' (ID: 498)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8510425686836243
    2. '       ' → logprob: -0.9760425686836243
    3. 'break' → logprob: -1.7260425090789795
    4. 'cl' → logprob: -4.101042747497559
    5. '   ' → logprob: -7.226042747497559
    6. 'False' → logprob: -8.476042747497559
    7. ' return' → logprob: -8.851042747497559
    8. 'v' → logprob: -8.851042747497559
    9. 'sk' → logprob: -9.226042747497559
    10. 'def' → logprob: -9.351042747497559

Token 1138: '[v' (ID: 36561)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.001300830626860261
    2. '.append' → logprob: -7.626300811767578
    3. '[-' → logprob: -8.001300811767578
    4. '[' → logprob: -8.251300811767578
    5. 'p' → logprob: -9.001300811767578
    6. '[v' → logprob: -10.751300811767578
    7. 'append' → logprob: -11.751300811767578
    8. '
' → logprob: -12.001300811767578
    9. '.setdefault' → logprob: -12.001300811767578
    10. ',p' → logprob: -12.126300811767578

Token 1139: '][' (ID: 2696)
  Prédit: '.setdefault'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.setdefault' → logprob: -0.7024401426315308
    2. ',' → logprob: -1.2024401426315308
    3. ')' → logprob: -2.5774402618408203
    4. '[' → logprob: -3.7024402618408203
    5. '])' → logprob: -3.9524402618408203
    6. ')[' → logprob: -4.07744026184082
    7. ').' → logprob: -4.20244026184082
    8. '][' → logprob: -4.32744026184082
    9. '[v' → logprob: -4.82744026184082
    10. '<|end|>' → logprob: -5.20244026184082

Token 1140: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.05497210472822189
    2. 'p' → logprob: -2.9299721717834473
    3. 'v' → logprob: -10.054971694946289
    4. ' to' → logprob: -11.304971694946289
    5. '(to' → logprob: -11.429971694946289
    6. '
' → logprob: -11.679971694946289
    7. 'u' → logprob: -12.804971694946289
    8. 'col' → logprob: -13.054971694946289
    9. ' p' → logprob: -13.429971694946289
    10. '   ' → logprob: -13.554971694946289

Token 1141: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0029514357447624207
    2. ']=' → logprob: -6.252951622009277
    3. '])' → logprob: -7.877951622009277
    4. ')' → logprob: -8.252951622009277
    5. ' ]' → logprob: -8.502951622009277
    6. '=' → logprob: -9.127951622009277
    7. ')]' → logprob: -10.627951622009277
    8. ' =' → logprob: -11.127951622009277
    9. ']=(' → logprob: -11.502951622009277
    10. ',' → logprob: -12.502951622009277

Token 1142: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133605122566223
    2. ' =' → logprob: -1.3133604526519775
    3. ')' → logprob: -9.938360214233398
    4. ']' → logprob: -10.438360214233398
    5. ')=' → logprob: -12.063360214233398
    6. ']=' → logprob: -12.438360214233398
    7. ',' → logprob: -12.813360214233398
    8. '[' → logprob: -13.063360214233398
    9. '=True' → logprob: -13.313360214233398
    10. '=(' → logprob: -13.688360214233398

Token 1143: ' (' (ID: 350)
  Prédit: '(col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(col' → logprob: -0.5726822018623352
    2. '(cl' → logprob: -0.9476822018623352
    3. '(' → logprob: -3.9476821422576904
    4. '(es' → logprob: -4.0726823806762695
    5. '(cs' → logprob: -5.1976823806762695
    6. '(c' → logprob: -6.3226823806762695
    7. '(co' → logprob: -6.9476823806762695
    8. '(C' → logprob: -7.6976823806762695
    9. '(v' → logprob: -7.6976823806762695
    10. '(None' → logprob: -7.6976823806762695

Token 1144: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.16104397177696228
    2. 'cl' → logprob: -1.9110440015792847
    3. '(col' → logprob: -7.661044120788574
    4. '0' → logprob: -9.286044120788574
    5. '(cl' → logprob: -9.411044120788574
    6. 'cs' → logprob: -9.786044120788574
    7. '(' → logprob: -10.036044120788574
    8. 'co' → logprob: -10.161044120788574
    9. ' col' → logprob: -10.911044120788574
    10. '1' → logprob: -12.536044120788574

Token 1145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.763666947837919e-05
    2. ' ,' → logprob: -10.00004768371582
    3. ',
' → logprob: -13.75004768371582
    4. 'co' → logprob: -14.50004768371582
    5. '_,' → logprob: -16.62504768371582
    6. ',c' → logprob: -16.62504768371582
    7. '```' → logprob: -16.75004768371582
    8. '   ' → logprob: -16.87504768371582
    9. '),' → logprob: -16.87504768371582
    10. ' ' → logprob: -17.12504768371582

Token 1146: ' co' (ID: 1407)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.007609824184328318
    2. ' co' → logprob: -4.882609844207764
    3. 'to' → logprob: -13.757609367370605
    4. ' ' → logprob: -13.882609367370605
    5. '   ' → logprob: -15.257609367370605
    6. 'cs' → logprob: -15.382609367370605
    7. '
' → logprob: -15.382609367370605
    8. 'coe' → logprob: -15.507609367370605
    9. '_co' → logprob: -15.632609367370605
    10. '(co' → logprob: -15.757609367370605

Token 1147: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031228174921125174
    2. ')
' → logprob: -5.878122806549072
    3. '       ' → logprob: -8.12812328338623
    4. ')return' → logprob: -11.62812328338623
    5. '<|end|>' → logprob: -12.87812328338623
    6. '   ' → logprob: -13.12812328338623
    7. ')
' → logprob: -13.37812328338623
    8. ',' → logprob: -13.50312328338623
    9. ')#' → logprob: -14.00312328338623
    10. ' )' → logprob: -14.12812328338623

Token 1148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7428075671195984
    2. '<|end|>' → logprob: -1.2428076267242432
    3. ')' → logprob: -2.117807626724243
    4. '	return' → logprob: -3.492807626724243
    5. 'return' → logprob: -3.617807626724243
    6. '\t' → logprob: -3.742807626724243
    7. '\' → logprob: -4.367807388305664
    8. '	' → logprob: -5.117807388305664
    9. '```' → logprob: -6.242807388305664
    10. '...' → logprob: -6.742807388305664

Token 1149: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0009952783584595
    2. ')' → logprob: -1.5009952783584595
    3. '\t' → logprob: -1.6259952783584595
    4. '	return' → logprob: -2.50099515914917
    5. '	' → logprob: -3.00099515914917
    6. '\n' → logprob: -3.75099515914917
    7. '<|end|>' → logprob: -3.87599515914917
    8. '\' → logprob: -5.00099515914917
    9. '```' → logprob: -5.25099515914917
    10. 'return' → logprob: -5.37599515914917

Token 1150: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.56341552734375
    2. 'False' → logprob: -1.31341552734375
    3. 'not' → logprob: -2.31341552734375
    4. 'p' → logprob: -3.43841552734375
    5. 'cl' → logprob: -4.31341552734375
    6. 'sk' → logprob: -4.93841552734375
    7. 'v' → logprob: -5.43841552734375
    8. 'vis' → logprob: -5.43841552734375
    9. 'True' → logprob: -7.56341552734375
    10. '0' → logprob: -7.93841552734375

Token 1151: '(tr' (ID: 14363)
  Prédit: '(sk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sk' → logprob: -0.011159238405525684
    2. '(es' → logprob: -4.511159420013428
    3. '(s' → logprob: -9.38615894317627
    4. '(st' → logprob: -11.88615894317627
    5. '(' → logprob: -11.88615894317627
    6. '(tr' → logprob: -12.51115894317627
    7. '(sc' → logprob: -13.01115894317627
    8. 'sk' → logprob: -13.51115894317627
    9. '(stack' → logprob: -13.76115894317627
    10. 'es' → logprob: -14.38615894317627

Token 1152: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.56233171664644e-05
    2. 'v' → logprob: -10.500055313110352
    3. ')' → logprob: -10.875055313110352
    4. '[' → logprob: -12.625055313110352
    5. '(v' → logprob: -13.250055313110352
    6. ')v' → logprob: -13.375055313110352
    7. '[p' → logprob: -14.125055313110352
    8. 'tr' → logprob: -15.250055313110352
    9. '```' → logprob: -15.750055313110352
    10. ',v' → logprob: -15.750055313110352

Token 1153: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20825208723545074
    2. '])' → logprob: -1.7082520723342896
    3. '[v' → logprob: -5.458251953125
    4. ')==' → logprob: -7.208251953125
    5. ']' → logprob: -7.458251953125
    6. '[' → logprob: -7.708251953125
    7. '[to' → logprob: -8.458251953125
    8. ']==' → logprob: -8.958251953125
    9. ' )' → logprob: -9.208251953125
    10. ')>' → logprob: -9.708251953125

Token 1154: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.19544769823551178
    2. ' ==' → logprob: -1.8204476833343506
    3. '>' → logprob: -4.69544792175293
    4. ')' → logprob: -5.94544792175293
    5. '!=' → logprob: -6.69544792175293
    6. ' >' → logprob: -6.94544792175293
    7. ' !=' → logprob: -7.57044792175293
    8. '<' → logprob: -8.07044792175293
    9. ')==' → logprob: -8.19544792175293
    10. ' <' → logprob: -8.57044792175293

Token 1155: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006358316168189049
    2. ' ' → logprob: -8.000636100769043
    3. 'len' → logprob: -8.250636100769043
    4. '1' → logprob: -10.375636100769043
    5. '   ' → logprob: -13.125636100769043
    6. '
' → logprob: -13.375636100769043
    7. 'es' → logprob: -13.500636100769043
    8. '(len' → logprob: -14.500636100769043
    9. '```' → logprob: -14.875636100769043
    10. '(' → logprob: -14.875636100769043

Token 1156: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006788347964175045
    2. 'len' → logprob: -7.500679016113281
    3. '1' → logprob: -9.375679016113281
    4. ' ' → logprob: -10.625679016113281
    5. 'es' → logprob: -12.000679016113281
    6. '
' → logprob: -12.625679016113281
    7. '2' → logprob: -13.500679016113281
    8. '(' → logprob: -13.875679016113281
    9. '(len' → logprob: -13.875679016113281
    10. '```' → logprob: -14.375679016113281

Token 1157: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.35333317518234253
    2. '       ' → logprob: -1.6033332347869873
    3. '   ' → logprob: -2.9783332347869873
    4. ':' → logprob: -3.2283332347869873
    5. ' and' → logprob: -5.353332996368408
    6. ' or' → logprob: -7.478332996368408
    7. '):
' → logprob: -8.728333473205566
    8. ':return' → logprob: -8.978333473205566
    9. 'and' → logprob: -9.353333473205566
    10. ' :
' → logprob: -9.478333473205566

Token 1158: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4484058618545532
    2. 'len' → logprob: -1.8234058618545532
    3. 'v' → logprob: -2.0734057426452637
    4. 'sk' → logprob: -3.9484057426452637
    5. 'not' → logprob: -3.9484057426452637
    6. ' p' → logprob: -4.073405742645264
    7. ' len' → logprob: -5.573405742645264
    8. ' not' → logprob: -5.573405742645264
    9. ' v' → logprob: -5.823405742645264
    10. 'cl' → logprob: -5.823405742645264

Token 1159: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.08051013201475143
    2. '<' → logprob: -2.705510139465332
    3. '==' → logprob: -4.955510139465332
    4. ' >=' → logprob: -6.330510139465332
    5. '!=' → logprob: -7.080510139465332
    6. '>' → logprob: -7.830510139465332
    7. ' <' → logprob: -8.580510139465332
    8. '==-' → logprob: -8.955510139465332
    9. ' ==' → logprob: -10.455510139465332
    10. '!=-' → logprob: -10.580510139465332

Token 1160: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '1' → logprob: -16.25001335144043
    4. '
' → logprob: -17.00001335144043
    5. '   ' → logprob: -17.25001335144043
    6. '

' → logprob: -18.62501335144043
    7. '۰' → logprob: -18.93751335144043
    8. '```' → logprob: -18.93751335144043
    9. 'v' → logprob: -19.25001335144043
    10. '  ' → logprob: -20.00001335144043

Token 1161: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.566264295950532e-05
    2. ' ' → logprob: -9.375085830688477
    3. '1' → logprob: -14.375085830688477
    4. '
' → logprob: -16.125085830688477
    5. '<|end|>' → logprob: -17.687585830688477
    6. '۰' → logprob: -18.312585830688477
    7. '   ' → logprob: -18.375085830688477
    8. '  ' → logprob: -18.437585830688477
    9. '```' → logprob: -18.437585830688477
    10. '

' → logprob: -18.500085830688477

Token 1162: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5455115437507629
    2. '       ' → logprob: -0.9205115437507629
    3. ':' → logprob: -4.045511722564697
    4. '   ' → logprob: -5.545511722564697
    5. ' and' → logprob: -7.920511722564697
    6. '):
' → logprob: -8.795511245727539
    7. ',' → logprob: -9.670511245727539
    8. ':
' → logprob: -10.420511245727539
    9. '	' → logprob: -10.545511245727539
    10. ':return' → logprob: -10.545511245727539

Token 1163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05373038351535797
    2. '   ' → logprob: -3.1787304878234863
    3. 'sk' → logprob: -4.803730487823486
    4. ' sk' → logprob: -6.428730487823486
    5. 'return' → logprob: -7.428730487823486
    6. ' return' → logprob: -8.428730010986328
    7. '           ' → logprob: -10.553730010986328
    8. '     ' → logprob: -12.678730010986328
    9. '    ' → logprob: -13.053730010986328
    10. ' ' → logprob: -13.053730010986328

Token 1164: ' cl' (ID: 567)
  Prédit: 'sk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sk' → logprob: -0.018772069364786148
    2. '   ' → logprob: -4.268772125244141
    3. 'return' → logprob: -5.893772125244141
    4. 'cl' (adapté à ' cl') → logprob: -6.518772125244141
    5. 'tr' → logprob: -8.76877212524414
    6. '       ' → logprob: -8.89377212524414
    7. ' sk' → logprob: -11.39377212524414
    8. 'if' → logprob: -11.51877212524414
    9. 'stack' → logprob: -11.89377212524414
    10. 'while' → logprob: -12.01877212524414

Token 1165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023441347293555737
    2. '=' → logprob: -6.502344131469727
    3. '-=' → logprob: -7.252344131469727
    4. '+=' → logprob: -9.127344131469727
    5. ',c' → logprob: -12.502344131469727
    6. ',
' → logprob: -12.627344131469727
    7. ' -=' → logprob: -12.627344131469727
    8. '==' → logprob: -13.127344131469727
    9. '<|end|>' → logprob: -13.502344131469727
    10. ' =' → logprob: -13.627344131469727

Token 1166: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.31327494978904724
    2. ' cs' → logprob: -1.3132749795913696
    3. '	cs' → logprob: -12.063275337219238
    4. 'c' → logprob: -13.313275337219238
    5. 's' → logprob: -13.938275337219238
    6. '(cs' → logprob: -13.938275337219238
    7. '_cs' → logprob: -14.063275337219238
    8. '   ' → logprob: -14.313275337219238
    9. ' ' → logprob: -14.438275337219238
    10. '0' → logprob: -14.938275337219238

Token 1167: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009859737940132618
    2. ' =' → logprob: -4.634859561920166
    3. '   ' → logprob: -10.259860038757324
    4. '+=' → logprob: -10.634860038757324
    5. '       ' → logprob: -10.759860038757324
    6. ',' → logprob: -11.384860038757324
    7. '-=' → logprob: -11.634860038757324
    8. ')' → logprob: -14.384860038757324
    9. '    ' → logprob: -14.384860038757324
    10. ' -=' → logprob: -14.634860038757324

Token 1168: ' tr' (ID: 498)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.0006959927850402892
    2. ' tr' → logprob: -7.375696182250977
    3. '0' → logprob: -10.375696182250977
    4. 'es' → logprob: -11.125696182250977
    5. 'gr' → logprob: -12.000696182250977
    6. 'col' → logprob: -12.750696182250977
    7. '(tr' → logprob: -12.875696182250977
    8. '   ' → logprob: -13.000696182250977
    9. 'None' → logprob: -13.500696182250977
    10. '1' → logprob: -13.625696182250977

Token 1169: '[p' (ID: 23234)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0061719478107988834
    2. '[p' → logprob: -5.381172180175781
    3. 'v' → logprob: -6.506172180175781
    4. 'p' → logprob: -9.881172180175781
    5. '   ' → logprob: -13.881172180175781
    6. '	v' → logprob: -14.006172180175781
    7. '(v' → logprob: -14.506172180175781
    8. '```' → logprob: -14.631172180175781
    9. ' v' → logprob: -14.881172180175781
    10. '[' → logprob: -15.131172180175781

Token 1170: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.2828247547149658
    2. '][' → logprob: -1.4078247547149658
    3. ']' → logprob: -7.032824516296387
    4. ')[' → logprob: -8.407824516296387
    5. '.pop' → logprob: -8.782824516296387
    6. '].' → logprob: -9.282824516296387
    7. '```' → logprob: -9.657824516296387
    8. 'v' → logprob: -10.032824516296387
    9. '}[' → logprob: -10.407824516296387
    10. '[p' → logprob: -10.407824516296387

Token 1171: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.088346359931165e-07
    2. ' v' → logprob: -14.125000953674316
    3. 'to' → logprob: -17.0
    4. '(v' → logprob: -17.75
    5. '	v' → logprob: -18.5
    6. '
' → logprob: -18.875
    7. '   ' → logprob: -18.875
    8. '[v' → logprob: -19.0
    9. ')v' → logprob: -19.125
    10. ' ' → logprob: -19.75

Token 1172: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.07679545134305954
    2. ']' → logprob: -3.3267953395843506
    3. '       ' → logprob: -3.3267953395843506
    4. ')
' → logprob: -6.45179557800293
    5. ']
' → logprob: -8.45179557800293
    6. ')' → logprob: -8.45179557800293
    7. '   ' → logprob: -10.07679557800293
    8. '           ' → logprob: -11.20179557800293
    9. ']()
' → logprob: -11.82679557800293
    10. ']

' → logprob: -12.20179557800293

Token 1173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03371934965252876
    2. '   ' → logprob: -3.408719301223755
    3. 'sk' → logprob: -9.783719062805176
    4. '           ' → logprob: -11.658719062805176
    5. 'return' → logprob: -12.283719062805176
    6. 'else' → logprob: -13.658719062805176
    7. 'cnt' → logprob: -13.658719062805176
    8. 'def' → logprob: -15.033719062805176
    9. '```' → logprob: -15.033719062805176
    10. '     ' → logprob: -15.658719062805176

Token 1174: ' cnt' (ID: 27340)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34947291016578674
    2. '   ' → logprob: -1.3494728803634644
    3. 'sk' → logprob: -3.599472999572754
    4. 'cnt' (adapté à ' cnt') → logprob: -4.849472999572754
    5. 'return' → logprob: -8.099472999572754
    6. 'tr' → logprob: -10.724472999572754
    7. 'count' → logprob: -11.349472999572754
    8. ' sk' → logprob: -12.099472999572754
    9. 'counter' → logprob: -12.099472999572754
    10. 'stack' → logprob: -12.349472999572754

Token 1175: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. '[col' → logprob: -13.500001907348633
    3. '       ' → logprob: -15.000001907348633
    4. '   ' → logprob: -15.875001907348633
    5. 'cl' → logprob: -16.125001907348633
    6. '```' → logprob: -16.250001907348633
    7. ' [' → logprob: -16.500001907348633
    8. '-' → logprob: -17.750001907348633
    9. '
' → logprob: -17.875001907348633
    10. '[
' → logprob: -18.125001907348633

Token 1176: 'cl' (ID: 565)
  Prédit: 'cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.125
    3. ' cl' → logprob: -16.5
    4. 'col' → logprob: -18.375
    5. '(cl' → logprob: -18.75
    6. '	cl' → logprob: -19.0
    7. '
' → logprob: -20.875
    8. '   ' → logprob: -22.875
    9. 'l' → logprob: -23.125
    10. ' ' → logprob: -23.25

Token 1177: ']' (ID: 60)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.11835060268640518
    2. ' -=' → logprob: -2.3683505058288574
    3. '-' → logprob: -4.118350505828857
    4. '+=' → logprob: -6.993350505828857
    5. '   ' → logprob: -7.243350505828857
    6. '    ' → logprob: -10.243350982666016
    7. ' +=' → logprob: -10.868350982666016
    8. '       ' → logprob: -12.243350982666016
    9. '=' → logprob: -12.618350982666016
    10. ' -' → logprob: -12.993350982666016

Token 1178: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.1283656507730484
    2. '+=' → logprob: -2.1283657550811768
    3. ' -=' → logprob: -7.128365516662598
    4. '-' → logprob: -7.628365516662598
    5. '   ' → logprob: -9.503365516662598
    6. ' +=' → logprob: -9.628365516662598
    7. '=' → logprob: -12.378365516662598
    8. '    ' → logprob: -13.628365516662598
    9. '```' → logprob: -14.503365516662598
    10. '       ' → logprob: -14.878365516662598

Token 1179: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.500015258789062
    4. '       ' → logprob: -18.250015258789062
    5. '```' → logprob: -18.875015258789062
    6. '0' → logprob: -19.500015258789062
    7. '<|end|>' → logprob: -20.000015258789062
    8. '           ' → logprob: -20.000015258789062
    9. '-' → logprob: -20.500015258789062
    10. '[' → logprob: -21.125015258789062

Token 1180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '<|end|>' → logprob: -18.875
    4. '```' → logprob: -19.75
    5. '   ' → logprob: -20.625
    6. '-' → logprob: -21.25
    7. '[' → logprob: -21.625
    8. '       ' → logprob: -21.625
    9. '0' → logprob: -21.875
    10. 'count' → logprob: -22.125

Token 1181: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.259079363080673e-05
    2. '<|end|>' → logprob: -11.625012397766113
    3. '   ' → logprob: -13.375012397766113
    4. '```' → logprob: -14.125012397766113
    5. '           ' → logprob: -15.000012397766113
    6. '
' → logprob: -15.000012397766113
    7. ' ' → logprob: -15.625012397766113
    8. ',' → logprob: -15.750012397766113
    9. '\' → logprob: -16.50001335144043
    10. '      ' → logprob: -16.50001335144043

Token 1182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.750436007976532e-05
    2. '   ' → logprob: -10.62503719329834
    3. '```' → logprob: -11.87503719329834
    4. '<|end|>' → logprob: -12.75003719329834
    5. '           ' → logprob: -13.37503719329834
    6. '
' → logprob: -14.25003719329834
    7. '      ' → logprob: -14.87503719329834
    8. '               ' → logprob: -15.25003719329834
    9. ' ' → logprob: -15.87503719329834
    10. '``' → logprob: -16.125038146972656

Token 1183: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.015351853333413601
    2. '       ' → logprob: -4.26535177230835
    3. ' sum' → logprob: -6.89035177230835
    4. '```' → logprob: -9.390352249145508
    5. '           ' → logprob: -10.140352249145508
    6. '   ' → logprob: -10.140352249145508
    7. '
' → logprob: -13.140352249145508
    8. '1' → logprob: -13.390352249145508
    9. '               ' → logprob: -14.390352249145508
    10. '     ' → logprob: -14.390352249145508

Token 1184: '_[' (ID: 27517)
  Prédit: '_['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_[' → logprob: -0.0005164555623196065
    2. '[' → logprob: -7.625516414642334
    3. '__[' → logprob: -11.125516891479492
    4. '_' → logprob: -11.375516891479492
    5. '```' → logprob: -13.500516891479492
    6. '_
' → logprob: -15.750516891479492
    7. '\[' → logprob: -16.125516891479492
    8. '@[' → logprob: -16.375516891479492
    9. '\' → logprob: -16.500516891479492
    10. '![' → logprob: -16.875516891479492

Token 1185: 'cl' (ID: 565)
  Prédit: 'cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.000263481488218531
    2. '[' → logprob: -8.250263214111328
    3. '(cl' → logprob: -13.125263214111328
    4. ' cl' → logprob: -16.625263214111328
    5. '
' → logprob: -18.125263214111328
    6. '	cl' → logprob: -18.625263214111328
    7. '(' → logprob: -20.500263214111328
    8. '```' → logprob: -21.000263214111328
    9. '-cl' → logprob: -21.250263214111328
    10. '   ' → logprob: -22.000263214111328

Token 1186: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5391737818717957
    2. '[' → logprob: -0.9141737818717957
    3. ' -=' → logprob: -4.664173603057861
    4. ']-' → logprob: -5.914173603057861
    5. '-=' → logprob: -6.414173603057861
    6. '[-' → logprob: -7.039173603057861
    7. ')' → logprob: -7.164173603057861
    8. '-' → logprob: -8.91417407989502
    9. '[col' → logprob: -9.16417407989502
    10. ']+=' → logprob: -9.91417407989502

Token 1187: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.23518534004688263
    2. ' -=' → logprob: -1.6101853847503662
    3. '-' → logprob: -5.735185146331787
    4. '[col' → logprob: -5.735185146331787
    5. '[' → logprob: -5.860185146331787
    6. '   ' → logprob: -8.860185623168945
    7. '[-' → logprob: -8.860185623168945
    8. ' ' → logprob: -10.735185623168945
    9. 'col' → logprob: -11.110185623168945
    10. '    ' → logprob: -11.235185623168945

Token 1188: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -1.4855663721391466e-05
    2. ' cs' → logprob: -11.125015258789062
    3. '	cs' → logprob: -17.125015258789062
    4. '(cs' → logprob: -18.375015258789062
    5. '   ' → logprob: -18.875015258789062
    6. '```' → logprob: -19.875015258789062
    7. '_cs' → logprob: -20.125015258789062
    8. '
' → logprob: -20.250015258789062
    9. 'CS' → logprob: -20.375015258789062
    10. 'csrf' → logprob: -21.000015258789062

Token 1189: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011614117538556457
    2. '<|end|>' → logprob: -7.251161575317383
    3. '
' → logprob: -8.001161575317383
    4. ',' → logprob: -10.126161575317383
    5. ')' → logprob: -10.876161575317383
    6. '\' → logprob: -11.376161575317383
    7. '        
' → logprob: -11.751161575317383
    8. 'return' → logprob: -12.376161575317383
    9. '   ' → logprob: -12.501161575317383
    10. '```' → logprob: -12.626161575317383

Token 1190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.226628895296017e-06
    2. '   ' → logprob: -12.125007629394531
    3. 'sk' → logprob: -14.500007629394531
    4. '           ' → logprob: -14.625007629394531
    5. ',' → logprob: -15.875007629394531
    6. '               ' → logprob: -15.875007629394531
    7. '<|end|>' → logprob: -16.00000762939453
    8. '```' → logprob: -16.62500762939453
    9. '      ' → logprob: -16.87500762939453
    10. 'return' → logprob: -17.25000762939453

Token 1191: ' tr' (ID: 498)
  Prédit: 'sk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sk' → logprob: -0.04194683954119682
    2. ' sk' → logprob: -3.2919468879699707
    3. '   ' → logprob: -5.666946887969971
    4. 'tr' (adapté à ' tr') → logprob: -8.541946411132812
    5. '       ' → logprob: -8.791946411132812
    6. 'return' → logprob: -10.291946411132812
    7. '(sk' → logprob: -10.791946411132812
    8. 'v' → logprob: -11.791946411132812
    9. 'st' → logprob: -12.041946411132812
    10. 'vis' → logprob: -12.541946411132812

Token 1192: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.013118583709001541
    2. '[v' → logprob: -4.513118743896484
    3. 'p' → logprob: -6.263118743896484
    4. 'v' → logprob: -8.888118743896484
    5. '```' → logprob: -12.388118743896484
    6. ',p' → logprob: -12.638118743896484
    7. '[' → logprob: -12.763118743896484
    8. '	p' → logprob: -12.888118743896484
    9. '[parent' → logprob: -13.638118743896484
    10. '=p' → logprob: -13.763118743896484

Token 1193: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.3990456759929657
    2. '][' → logprob: -1.149045705795288
    3. ']' → logprob: -4.524045467376709
    4. '.pop' → logprob: -7.149045467376709
    5. '[v' → logprob: -7.899045467376709
    6. ']
' → logprob: -10.774045944213867
    7. '[' → logprob: -11.524045944213867
    8. '```' → logprob: -11.649045944213867
    9. '<|end|>' → logprob: -11.774045944213867
    10. '])' → logprob: -12.149045944213867

Token 1194: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -9.088346359931165e-07
    2. '.pop' → logprob: -14.000000953674316
    3. '(pop' → logprob: -17.375
    4. '```' → logprob: -17.5
    5. '	pop' → logprob: -18.5
    6. ' pop' → logprob: -18.5
    7. 'clear' → logprob: -19.5
    8. '_pop' → logprob: -20.875
    9. 'po' → logprob: -21.375
    10. 'remove' → logprob: -21.5

Token 1195: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.014164801687002182
    2. 'v' → logprob: -4.264164924621582
    3. '(' → logprob: -14.139164924621582
    4. ' v' → logprob: -14.764164924621582
    5. ' (' → logprob: -16.764163970947266
    6. '	v' → logprob: -17.014163970947266
    7. '```' → logprob: -17.264163970947266
    8. '(
' → logprob: -17.889163970947266
    9. '[v' → logprob: -18.889163970947266
    10. '.v' → logprob: -19.889163970947266

Token 1196: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5366908311843872
    2. '()' → logprob: -1.1616908311843872
    3. ')
' → logprob: -2.6616907119750977
    4. '())' → logprob: -4.036690711975098
    5. '())
' → logprob: -5.036690711975098
    6. '()
' → logprob: -5.036690711975098
    7. '       ' → logprob: -6.911690711975098
    8. '   ' → logprob: -7.286690711975098
    9. '<|end|>' → logprob: -9.786690711975098
    10. ')return' → logprob: -10.161690711975098

Token 1197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11970776319503784
    2. '<|end|>' → logprob: -2.6197078227996826
    3. '       ' → logprob: -3.2447078227996826
    4. ')' → logprob: -7.4947075843811035
    5. '<|end|>' → logprob: -8.494708061218262
    6. 'sk' → logprob: -9.869708061218262
    7. '
' → logprob: -10.744708061218262
    8. '[' → logprob: -10.744708061218262
    9. '...' → logprob: -10.869708061218262
    10. '```' → logprob: -11.369708061218262

Token 1198: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45154595375061035
    2. '	return' → logprob: -1.9515459537506104
    3. '<|end|>' → logprob: -2.0765459537506104
    4. '	' → logprob: -3.5765459537506104
    5. '\t' → logprob: -3.5765459537506104
    6. '\' → logprob: -4.951545715332031
    7. '\x' → logprob: -5.451545715332031
    8. '
' → logprob: -5.826545715332031
    9. ')' → logprob: -5.826545715332031
    10. '\n' → logprob: -5.951545715332031

Token 1199: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.5772712826728821
    2. 'None' → logprob: -0.8272712826728821
    3. 'True' → logprob: -6.702271461486816
    4. ' None' → logprob: -9.827271461486816
    5. ' False' → logprob: -10.452271461486816
    6. '(False' → logprob: -12.202271461486816
    7. '
' → logprob: -12.577271461486816
    8. '<|end|>' → logprob: -12.577271461486816
    9. '(None' → logprob: -12.702271461486816
    10. '0' → logprob: -13.202271461486816

Token 1200: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1201: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.709857702255249
    2. ':' → logprob: -1.959857702255249
    3. '   ' → logprob: -1.959857702255249
    4. 'def' → logprob: -2.959857702255249
    5. '
' → logprob: -3.209857702255249
    6. ',' → logprob: -3.959857702255249
    7. '	' → logprob: -3.959857702255249
    8. '_' → logprob: -4.334857940673828
    9. '<|end|>' → logprob: -4.834857940673828
    10. ' ' → logprob: -4.959857940673828

Token 1202: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.5744816660881042
    2. ' main' → logprob: -1.949481725692749
    3. ' solve' → logprob: -2.574481725692749
    4. ' process' → logprob: -2.699481725692749
    5. 'dfs' → logprob: -2.824481725692749
    6. ' DFS' → logprob: -4.19948148727417
    7. 'process' → logprob: -4.19948148727417
    8. 'main' → logprob: -4.57448148727417
    9. ' e' → logprob: -4.57448148727417
    10. 'solve' → logprob: -4.69948148727417

Token 1203: '2' (ID: 17)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.010020382702350616
    2. '(sk' → logprob: -4.8850202560424805
    3. '(stack' → logprob: -6.8850202560424805
    4. '(root' → logprob: -7.5100202560424805
    5. '(graph' → logprob: -8.38502025604248
    6. '(gr' → logprob: -8.63502025604248
    7. '(node' → logprob: -9.26002025604248
    8. '(' → logprob: -9.63502025604248
    9. '(st' → logprob: -10.13502025604248
    10. '(u' → logprob: -10.26002025604248

Token 1204: '_fragment' (ID: 89817)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.5774410963058472
    2. '(sk' → logprob: -0.8274410963058472
    3. '(' → logprob: -7.952441215515137
    4. '(stack' → logprob: -8.077441215515137
    5. '(root' → logprob: -8.327441215515137
    6. '(s' → logprob: -8.702441215515137
    7. '(node' → logprob: -8.702441215515137
    8. '(st' → logprob: -9.577441215515137
    9. '(graph' → logprob: -10.452441215515137
    10. '(gr' → logprob: -10.702441215515137

Token 1205: 'ed' (ID: 295)
  Prédit: '(sk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sk' → logprob: -0.01492621935904026
    2. '(v' → logprob: -4.264926433563232
    3. '(' → logprob: -8.514925956726074
    4. '(s' → logprob: -8.639925956726074
    5. '(stack' → logprob: -8.639925956726074
    6. '_sk' → logprob: -10.264925956726074
    7. '(es' → logprob: -10.389925956726074
    8. '(st' → logprob: -10.764925956726074
    9. '(
' → logprob: -10.889925956726074
    10. '():' → logprob: -11.389925956726074

Token 1206: '(es' (ID: 89947)
  Prédit: '(sk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sk' → logprob: -0.10538997501134872
    2. '(v' → logprob: -2.3553900718688965
    3. '(es' → logprob: -6.4803900718688965
    4. '(' → logprob: -7.4803900718688965
    5. '(stack' → logprob: -7.4803900718688965
    6. '(gr' → logprob: -7.6053900718688965
    7. '_sk' → logprob: -7.8553900718688965
    8. '(s' → logprob: -7.9803900718688965
    9. '(_' → logprob: -8.230389595031738
    10. '():' → logprob: -8.480389595031738

Token 1207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005599428550340235
    2. '):' → logprob: -8.25055980682373
    3. '):
' → logprob: -9.50055980682373
    4. '[v' → logprob: -9.62555980682373
    5. ',v' → logprob: -9.62555980682373
    6. ':' → logprob: -10.12555980682373
    7. '(v' → logprob: -10.25055980682373
    8. '   ' → logprob: -11.87555980682373
    9. ',
' → logprob: -12.75055980682373
    10. ' ,' → logprob: -13.50055980682373

Token 1208: ' qs' (ID: 75083)
  Prédit: 'sk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sk' → logprob: -0.5833240747451782
    2. 'v' → logprob: -0.8333240747451782
    3. 'tr' → logprob: -5.333323955535889
    4. 'N' → logprob: -7.583323955535889
    5. 'stack' → logprob: -7.708323955535889
    6. ' v' → logprob: -8.208324432373047
    7. 'vis' → logprob: -8.583324432373047
    8. 'st' → logprob: -8.708324432373047
    9. ')' → logprob: -8.708324432373047
    10. 'es' → logprob: -9.083324432373047

Token 1209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.958325295476243e-05
    2. ',v' → logprob: -10.125079154968262
    3. ' ,' → logprob: -10.875079154968262
    4. '):' → logprob: -11.375079154968262
    5. 'v' → logprob: -12.375079154968262
    6. '):
' → logprob: -13.375079154968262
    7. ',
' → logprob: -13.750079154968262
    8. 'def' → logprob: -14.000079154968262
    9. ':' → logprob: -14.875079154968262
    10. '   ' → logprob: -15.125079154968262

Token 1210: ' cnt' (ID: 27340)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6675880551338196
    2. 'sk' → logprob: -0.7925880551338196
    3. 'tr' → logprob: -4.292588233947754
    4. 'N' → logprob: -4.917588233947754
    5. 'ans' → logprob: -4.917588233947754
    6. 'vis' → logprob: -5.917588233947754
    7. 'cnt' → logprob: -6.292588233947754
    8. 'gr' → logprob: -6.917588233947754
    9. 'st' → logprob: -9.042588233947754
    10. 'stack' → logprob: -9.167588233947754

Token 1211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.226628895296017e-06
    2. ' ,' → logprob: -12.750007629394531
    3. ',sum' → logprob: -13.000007629394531
    4. ',
' → logprob: -13.625007629394531
    5. 'sum' → logprob: -15.500007629394531
    6. ',s' → logprob: -15.625007629394531
    7. ')' → logprob: -15.875007629394531
    8. '_,' → logprob: -16.87500762939453
    9. '   ' → logprob: -16.87500762939453
    10. '):' → logprob: -17.25000762939453

Token 1212: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -6.635164754698053e-05
    2. 'ans' → logprob: -10.250066757202148
    3. ' sum' → logprob: -11.125066757202148
    4. 'tr' → logprob: -11.875066757202148
    5. '
' → logprob: -12.375066757202148
    6. 'sk' → logprob: -13.125066757202148
    7. 'cl' → logprob: -13.875066757202148
    8. 'cnt' → logprob: -14.375066757202148
    9. 'summ' → logprob: -15.625066757202148
    10. '   ' → logprob: -16.00006675720215

Token 1213: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.0018749780720099807
    2. '_' → logprob: -6.376874923706055
    3. '_,
' → logprob: -9.251874923706055
    4. ',' → logprob: -9.751874923706055
    5. '_)' → logprob: -11.626874923706055
    6. '_),' → logprob: -12.501874923706055
    7. '_:' → logprob: -13.751874923706055
    8. '_',' → logprob: -14.126874923706055
    9. '_

' → logprob: -14.251874923706055
    10. '_[' → logprob: -14.251874923706055

Token 1214: ' N' (ID: 478)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7788122296333313
    2. 'vis' → logprob: -0.9038122296333313
    3. 'sk' → logprob: -2.0288121700286865
    4. 'tr' → logprob: -5.528812408447266
    5. ' ans' → logprob: -8.903812408447266
    6. 'cl' → logprob: -9.403812408447266
    7. ' vis' → logprob: -9.778812408447266
    8. 'stack' → logprob: -9.903812408447266
    9. '
' → logprob: -10.028812408447266
    10. 'st' → logprob: -10.903812408447266

Token 1215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028233008924871683
    2. '):
' → logprob: -6.002823352813721
    3. '):' → logprob: -8.252822875976562
    4. ',
' → logprob: -10.252822875976562
    5. ' ,' → logprob: -10.752822875976562
    6. '   ' → logprob: -11.002822875976562
    7. ')' → logprob: -12.377822875976562
    8. 'def' → logprob: -12.877822875976562
    9. ':' → logprob: -13.627822875976562
    10. '):
' → logprob: -13.627822875976562

Token 1216: ' ans' (ID: 3345)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.4961206614971161
    2. 'ans' → logprob: -1.6211206912994385
    3. 'sk' → logprob: -1.8711206912994385
    4. 'tr' → logprob: -3.3711206912994385
    5. 'es' → logprob: -6.246120452880859
    6. 'gr' → logprob: -6.871120452880859
    7. 'v' → logprob: -7.496120452880859
    8. '
' → logprob: -8.37112045288086
    9. 'stack' → logprob: -8.49612045288086
    10. 'visited' → logprob: -8.87112045288086

Token 1217: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002643675310537219
    2. '):
' → logprob: -6.127643585205078
    3. '):' → logprob: -7.877643585205078
    4. ',
' → logprob: -10.752643585205078
    5. ' ,' → logprob: -10.752643585205078
    6. '   ' → logprob: -10.877643585205078
    7. ':' → logprob: -12.127643585205078
    8. ')' → logprob: -12.377643585205078
    9. ',v' → logprob: -13.002643585205078
    10. '):
' → logprob: -13.502643585205078

Token 1218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027670690789818764
    2. 'sk' → logprob: -3.6526706218719482
    3. 'stack' → logprob: -7.402670860290527
    4. 'for' → logprob: -7.902670860290527
    5. 'stk' → logprob: -9.152670860290527
    6. 'from' → logprob: -9.527670860290527
    7. 'v' → logprob: -10.027670860290527
    8. ' sk' → logprob: -10.402670860290527
    9. 'def' → logprob: -10.777670860290527
    10. '```' → logprob: -10.902670860290527

Token 1219: ' sk' (ID: 1705)
  Prédit: 'sk'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sk' (adapté à ' sk') → logprob: -0.13302095234394073
    2. 'for' → logprob: -2.3830208778381348
    3. 'stack' → logprob: -3.7580208778381348
    4. 'from' → logprob: -5.883020877838135
    5. 'st' → logprob: -6.758020877838135
    6. 'cnt' → logprob: -7.008020877838135
    7. 'vis' → logprob: -7.258020877838135
    8. 'stk' → logprob: -7.258020877838135
    9. 'es' → logprob: -7.633020877838135
    10. 'v' → logprob: -7.758020877838135

Token 1220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34869036078453064
    2. '=' → logprob: -1.223690390586853
    3. '=[]' → logprob: -8.598690032958984
    4. '=[' → logprob: -10.223690032958984
    5. '=[]
' → logprob: -11.723690032958984
    6. '.append' → logprob: -12.723690032958984
    7. '   ' → logprob: -12.723690032958984
    8. ',' → logprob: -12.723690032958984
    9. ':' → logprob: -12.973690032958984
    10. ' =[' → logprob: -13.848690032958984

Token 1221: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.32176336646080017
    2. '[]' → logprob: -1.3217633962631226
    3. 'deque' → logprob: -4.821763515472412
    4. '[' → logprob: -7.946763515472412
    5. '[((' → logprob: -10.321763038635254
    6. '[]
' → logprob: -11.196763038635254
    7. 'Deque' → logprob: -12.696763038635254
    8. '[]}' → logprob: -13.071763038635254
    9. ' deque' → logprob: -13.196763038635254
    10. '[-' → logprob: -13.196763038635254

Token 1222: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31983232498168945
    2. '   ' → logprob: -1.6948323249816895
    3. 'sk' → logprob: -2.9448323249816895
    4. 'tr' → logprob: -4.0698323249816895
    5. 'v' → logprob: -4.4448323249816895
    6. 'es' → logprob: -5.1948323249816895
    7. 'cnt' → logprob: -7.1948323249816895
    8. 'vis' → logprob: -7.3198323249816895
    9. 'cl' → logprob: -7.4448323249816895
    10. ' for' → logprob: -7.6948323249816895

Token 1223: ' tr' (ID: 498)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2152942568063736
    2. 'sk' → logprob: -2.215294361114502
    3. 'vis' → logprob: -3.590294361114502
    4. 'v' → logprob: -3.715294361114502
    5. 'tr' (adapté à ' tr') → logprob: -3.840294361114502
    6. 'cnt' → logprob: -5.215294361114502
    7. 'es' → logprob: -5.965294361114502
    8. 'cl' → logprob: -7.090294361114502
    9. 'visited' → logprob: -7.215294361114502
    10. '   ' → logprob: -8.090293884277344

Token 1224: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062297262251377106
    2. ' =' → logprob: -2.8122973442077637
    3. '=[]' → logprob: -8.937296867370605
    4. '=[' → logprob: -9.562296867370605
    5. ',' → logprob: -10.062296867370605
    6. '[' → logprob: -10.187296867370605
    7. '[v' → logprob: -11.187296867370605
    8. '   ' → logprob: -12.187296867370605
    9. 'v' → logprob: -12.187296867370605
    10. '.append' → logprob: -12.312296867370605

Token 1225: ' get' (ID: 717)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011698294430971146
    2. 'get' → logprob: -4.511698246002197
    3. '[get' → logprob: -8.136698722839355
    4. '[{' → logprob: -8.386698722839355
    5. ' [{}' → logprob: -9.636698722839355
    6. '{}' → logprob: -10.011698722839355
    7. '{' → logprob: -11.136698722839355
    8. 'default' → logprob: -12.886698722839355
    9. ' get' → logprob: -14.886698722839355
    10. 'create' → logprob: -15.261698722839355

Token 1226: '_tr' (ID: 7410)
  Prédit: '_tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -0.00020520923135336488
    2. 'tr' → logprob: -8.500205039978027
    3. '<tr' → logprob: -13.625205039978027
    4. 'def' → logprob: -16.625205993652344
    5. 'trl' → logprob: -16.625205993652344
    6. '```' → logprob: -16.750205993652344
    7. '	tr' → logprob: -17.000205993652344
    8. '\' → logprob: -17.125205993652344
    9. '
' → logprob: -17.125205993652344
    10. '`' → logprob: -17.125205993652344

Token 1227: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.895480277715251e-06
    2. '_tr' → logprob: -12.000008583068848
    3. 'list' → logprob: -13.375008583068848
    4. 'List' → logprob: -14.250008583068848
    5. 'tr' → logprob: -15.875008583068848
    6. '_array' → logprob: -17.125009536743164
    7. '_lst' → logprob: -17.125009536743164
    8. '\' → logprob: -17.250009536743164
    9. '_LIST' → logprob: -17.375009536743164
    10. '```' → logprob: -18.375009536743164

Token 1228: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0007130279554985464
    2. 'N' → logprob: -7.250712871551514
    3. '(' → logprob: -13.625713348388672
    4. '
' → logprob: -13.875713348388672
    5. '```' → logprob: -15.375713348388672
    6. '(
' → logprob: -15.625713348388672
    7. '	N' → logprob: -15.875713348388672
    8. '[N' → logprob: -16.250713348388672
    9. ',N' → logprob: -17.000713348388672
    10. ' (' → logprob: -17.125713348388672

Token 1229: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011049943044781685
    2. ')
' → logprob: -4.511049747467041
    3. ')
' → logprob: -14.0110502243042
    4. ' )' → logprob: -14.6360502243042
    5. '   ' → logprob: -15.1360502243042
    6. ')#' → logprob: -15.8860502243042
    7. ')

' → logprob: -16.386049270629883
    8. '())' → logprob: -16.761049270629883
    9. ')`' → logprob: -16.886049270629883
    10. '),' → logprob: -17.011049270629883

Token 1230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036288120318204165
    2. 'vis' → logprob: -5.628628730773926
    3. '```' → logprob: -11.003628730773926
    4. ' vis' → logprob: -12.378628730773926
    5. '   ' → logprob: -12.628628730773926
    6. 'v' → logprob: -13.628628730773926
    7. 'for' → logprob: -14.378628730773926
    8. '       ' → logprob: -14.628628730773926
    9. '  ' → logprob: -15.003628730773926
    10. '(vis' → logprob: -15.003628730773926

Token 1231: ' vis' (ID: 1909)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' (adapté à ' vis') → logprob: -0.0034483722411096096
    2. '   ' → logprob: -5.878448486328125
    3. 'for' → logprob: -7.628448486328125
    4. 'cnt' → logprob: -9.128448486328125
    5. 'v' → logprob: -10.378448486328125
    6. 'vs' → logprob: -11.753448486328125
    7. 'visited' → logprob: -13.628448486328125
    8. '    
' → logprob: -13.878448486328125
    9. '
' → logprob: -13.878448486328125
    10. 'while' → logprob: -14.128448486328125

Token 1232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038107242435216904
    2. ' =' → logprob: -3.28810715675354
    3. '=[' → logprob: -10.163106918334961
    4. '   ' → logprob: -10.913106918334961
    5. '[' → logprob: -13.038106918334961
    6. ' =[' → logprob: -13.538106918334961
    7. '_' → logprob: -13.663106918334961
    8. '=[]' → logprob: -13.913106918334961
    9. '=[]
' → logprob: -14.788106918334961
    10. ' ' → logprob: -14.788106918334961

Token 1233: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.1620454490184784
    2. '[' → logprob: -2.662045478820801
    3. ' get' → logprob: -3.162045478820801
    4. '[get' → logprob: -3.537045478820801
    5. ' [' → logprob: -4.787045478820801
    6. '   ' → logprob: -11.5370454788208
    7. '(get' → logprob: -12.6620454788208
    8. '.get' → logprob: -13.1620454788208
    9. '=get' → logprob: -14.0370454788208
    10. ' ' → logprob: -14.5370454788208

Token 1234: '_vis' (ID: 113669)
  Prédit: '_vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vis' → logprob: -5.88418151892256e-05
    2. 'vis' → logprob: -9.750059127807617
    3. 'Vis' → logprob: -15.625059127807617
    4. '(vis' → logprob: -16.125059127807617
    5. '[' → logprob: -16.250059127807617
    6. '
' → logprob: -16.500059127807617
    7. '\' → logprob: -16.750059127807617
    8. '_v' → logprob: -17.500059127807617
    9. '```' → logprob: -17.875059127807617
    10. '_' → logprob: -18.750059127807617

Token 1235: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00020520923135336488
    2. 'list' → logprob: -8.500205039978027
    3. 'List' → logprob: -13.375205039978027
    4. ' list' → logprob: -17.000205993652344
    5. '[N' → logprob: -17.375205993652344
    6. '[' → logprob: -17.875205993652344
    7. '_LIST' → logprob: -18.000205993652344
    8. '_List' → logprob: -18.375205993652344
    9. '-list' → logprob: -18.875205993652344
    10. '_' → logprob: -19.000205993652344

Token 1236: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.008615161292254925
    2. 'N' → logprob: -4.758615016937256
    3. '(' → logprob: -15.508615493774414
    4. '[N' → logprob: -16.008615493774414
    5. ' N' → logprob: -16.133615493774414
    6. ',N' → logprob: -16.258615493774414
    7. '	N' → logprob: -16.383615493774414
    8. '```' → logprob: -17.008615493774414
    9. '<N' → logprob: -17.633615493774414
    10. '_N' → logprob: -17.883615493774414

Token 1237: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20150835812091827
    2. ')
' → logprob: -1.7015084028244019
    3. '   ' → logprob: -9.451508522033691
    4. ')
' → logprob: -11.701508522033691
    5. '(N' → logprob: -13.451508522033691
    6. '+' → logprob: -13.951508522033691
    7. ')

' → logprob: -14.201508522033691
    8. ')`
' → logprob: -14.201508522033691
    9. ')\
' → logprob: -14.701508522033691
    10. ')(' → logprob: -14.826508522033691

Token 1238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1338055282831192
    2. 'for' → logprob: -2.383805513381958
    3. ' for' → logprob: -3.508805513381958
    4. '```' → logprob: -6.633805751800537
    5. 'v' → logprob: -6.758805751800537
    6. 'sk' → logprob: -7.883805751800537
    7. '	for' → logprob: -9.758805274963379
    8. 'i' → logprob: -9.883805274963379
    9. '    
' → logprob: -10.258805274963379
    10. ' v' → logprob: -10.508805274963379

Token 1239: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004581076558679342
    2. 'sk' → logprob: -5.504580974578857
    3. '   ' → logprob: -7.879580974578857
    4. 'while' → logprob: -9.879581451416016
    5. 'v' → logprob: -10.254581451416016
    6. ' for' → logprob: -11.129581451416016
    7. 'stack' → logprob: -11.504581451416016
    8. 'es' → logprob: -12.129581451416016
    9. 'cnt' → logprob: -13.379581451416016
    10. 'ans' → logprob: -13.629581451416016

Token 1240: ' process' (ID: 2273)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.21574227511882782
    2. ' dfs' → logprob: -1.7157422304153442
    3. 'inner' → logprob: -6.090742111206055
    4. 're' → logprob: -6.340742111206055
    5. 'process' → logprob: -6.465742111206055
    6. '_d' → logprob: -6.590742111206055
    7. ' inner' → logprob: -6.840742111206055
    8. '_inner' → logprob: -6.965742111206055
    9. 'helper' → logprob: -6.965742111206055
    10. ' helper' → logprob: -7.965742111206055

Token 1241: '_initial' (ID: 45740)
  Prédit: '(sk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sk' → logprob: -0.04792386665940285
    2. '(v' → logprob: -3.5479238033294678
    3. 'sk' → logprob: -4.672924041748047
    4. 'def' → logprob: -5.297924041748047
    5. '_single' → logprob: -6.922924041748047
    6. '(s' → logprob: -7.422924041748047
    7. '_sk' → logprob: -7.672924041748047
    8. '(' → logprob: -8.297924041748047
    9. '(
' → logprob: -8.297924041748047
    10. '(stack' → logprob: -8.547924041748047

Token 1242: '(v' (ID: 6932)
  Prédit: '(sk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sk' → logprob: -0.1299489587545395
    2. '_stack' → logprob: -2.879948854446411
    3. '_sk' → logprob: -3.879948854446411
    4. '_vertex' → logprob: -4.62994909286499
    5. '():' → logprob: -4.75494909286499
    6. '():
' → logprob: -4.75494909286499
    7. '(stack' → logprob: -5.62994909286499
    8. '_node' → logprob: -5.75494909286499
    9. '_element' → logprob: -6.00494909286499
    10. 'sk' → logprob: -6.25494909286499

Token 1243: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1031566932797432
    2. '):
' → logprob: -2.353156805038452
    3. ',' → logprob: -5.978156566619873
    4. ')' → logprob: -8.603157043457031
    5. '   ' → logprob: -8.978157043457031
    6. '):
' → logprob: -10.353157043457031
    7. '(v' → logprob: -10.353157043457031
    8. ':' → logprob: -10.978157043457031
    9. '       ' → logprob: -12.478157043457031
    10. '=' → logprob: -13.103157043457031

Token 1244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0356067456305027
    2. '   ' → logprob: -3.660606861114502
    3. '    ' → logprob: -5.785606861114502
    4. '(sk' → logprob: -6.660606861114502
    5. '
' → logprob: -6.910606861114502
    6. '	' → logprob: -7.410606861114502
    7. ':' → logprob: -7.660606861114502
    8. '    
' → logprob: -8.160606384277344
    9. '	   ' → logprob: -8.160606384277344
    10. ' sk' → logprob: -8.535606384277344

Token 1245: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.106953926384449
    2. '       ' → logprob: -3.1069538593292236
    3. 'sk' → logprob: -3.1069538593292236
    4. '	s' → logprob: -4.731954097747803
    5. ' sk' → logprob: -6.731954097747803
    6. 'if' → logprob: -7.106954097747803
    7. ' if' → logprob: -8.106953620910645
    8. '(sk' → logprob: -8.356953620910645
    9. 'for' (adapté à ' for') → logprob: -8.981953620910645
    10. '	if' → logprob: -9.231953620910645

Token 1246: ' q' (ID: 2335)
  Prédit: '(to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(to' → logprob: -0.20820514857769012
    2. 'to' → logprob: -1.8332051038742065
    3. '(u' → logprob: -4.583205223083496
    4. 'u' → logprob: -5.708205223083496
    5. 'w' → logprob: -6.083205223083496
    6. '(v' → logprob: -6.208205223083496
    7. '(ne' → logprob: -6.583205223083496
    8. ' (' → logprob: -6.708205223083496
    9. ' to' → logprob: -6.833205223083496
    10. '(' → logprob: -7.208205223083496

Token 1247: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.579553484916687
    2. ' in' → logprob: -0.829553484916687
    3. ',' → logprob: -6.329553604125977
    4. 'n' → logprob: -7.454553604125977
    5. ')' → logprob: -7.954553604125977
    6. 'v' → logprob: -8.454553604125977
    7. 'u' → logprob: -8.454553604125977
    8. 'i' → logprob: -9.329553604125977
    9. '   ' → logprob: -10.204553604125977
    10. ',v' → logprob: -10.204553604125977

Token 1248: ' qs' (ID: 75083)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.27472424507141113
    2. 'range' → logprob: -1.8997242450714111
    3. 'es' → logprob: -2.524724245071411
    4. 'sk' → logprob: -5.274724006652832
    5. ' range' → logprob: -6.649724006652832
    6. '[' → logprob: -7.274724006652832
    7. '[(' → logprob: -7.274724006652832
    8. ' qs' → logprob: -7.774724006652832
    9. 'enumer' → logprob: -7.899724006652832
    10. 'q' → logprob: -8.024724006652832

Token 1249: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0003398726985324174
    2. 'v' → logprob: -8.12533950805664
    3. '(v' → logprob: -10.37533950805664
    4. '):
' → logprob: -13.25033950805664
    5. ':
' → logprob: -13.50033950805664
    6. ')' → logprob: -13.75033950805664
    7. '[' → logprob: -14.00033950805664
    8. '
' → logprob: -14.00033950805664
    9. ',v' → logprob: -14.00033950805664
    10. ':v' → logprob: -14.12533950805664

Token 1250: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.4777931571006775
    2. ']:
' → logprob: -0.9777931571006775
    3. '):
' → logprob: -7.227793216705322
    4. '):' → logprob: -7.352793216705322
    5. ']' → logprob: -7.477793216705322
    6. '       ' → logprob: -7.727793216705322
    7. ':' → logprob: -7.852793216705322
    8. ']:
' → logprob: -8.102792739868164
    9. '           ' → logprob: -9.227792739868164
    10. ']):' → logprob: -9.477792739868164

Token 1251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006638752296566963
    2. ':' → logprob: -6.131638526916504
    3. '       ' → logprob: -6.381638526916504
    4. '		' → logprob: -7.131638526916504
    5. ':
' → logprob: -7.131638526916504
    6. '          ' → logprob: -8.631638526916504
    7. '   ' → logprob: -8.756638526916504
    8. '	       ' → logprob: -9.131638526916504
    9. '               ' → logprob: -9.381638526916504
    10. '        ' → logprob: -9.381638526916504

Token 1252: ' update' (ID: 4027)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1643698513507843
    2. '           ' → logprob: -2.164369821548462
    3. '       ' → logprob: -3.539369821548462
    4. '   ' → logprob: -5.664370059967041
    5. ' update' → logprob: -6.289370059967041
    6. 'update' (adapté à ' update') → logprob: -6.289370059967041
    7. ' return' → logprob: -9.164369583129883
    8. '                   ' → logprob: -9.289369583129883
    9. ' if' → logprob: -9.664369583129883
    10. 'return' → logprob: -9.664369583129883

Token 1253: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.01116818469017744
    2. 'ans' → logprob: -4.511168003082275
    3. 'Ans' → logprob: -9.886168479919434
    4. '(ans' → logprob: -9.886168479919434
    5. ' ans' → logprob: -12.386168479919434
    6. '_' → logprob: -12.636168479919434
    7. '	ans' → logprob: -12.886168479919434
    8. 'ANS' → logprob: -13.636168479919434
    9. '_answer' → logprob: -13.886168479919434
    10. '_an' → logprob: -14.261168479919434

Token 1254: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.0012829720508307219
    2. '_ans' → logprob: -6.751283168792725
    3. '_' → logprob: -9.501282691955566
    4. 'for' → logprob: -10.501282691955566
    5. ')' → logprob: -14.001282691955566
    6. '
' → logprob: -14.001282691955566
    7. '```' → logprob: -14.251282691955566
    8. '(for' → logprob: -14.251282691955566
    9. '_an' → logprob: -14.501282691955566
    10. '(ans' → logprob: -14.626282691955566

Token 1255: '_query' (ID: 13012)
  Prédit: '_query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.3171088695526123
    2. 'query' → logprob: -1.3171088695526123
    3. 'q' → logprob: -6.067109107971191
    4. 'process' → logprob: -7.317109107971191
    5. '_next' → logprob: -8.817109107971191
    6. ' q' → logprob: -9.067109107971191
    7. '_code' → logprob: -9.192109107971191
    8. '
' → logprob: -9.317109107971191
    9. ' query' → logprob: -9.442109107971191
    10. 'get' → logprob: -9.817109107971191

Token 1256: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00209542247466743
    2. '(sk' → logprob: -6.2520952224731445
    3. 'q' → logprob: -9.002095222473145
    4. '(' → logprob: -10.502095222473145
    5. '(
' → logprob: -11.627095222473145
    6. '(s' → logprob: -13.252095222473145
    7. 'sk' → logprob: -13.752095222473145
    8. ' (' → logprob: -13.877095222473145
    9. '
' → logprob: -14.002095222473145
    10. '```' → logprob: -14.502095222473145

Token 1257: ',' (ID: 11)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.4010106325149536
    2. ',' → logprob: -1.2760106325149536
    3. '(sk' → logprob: -4.026010513305664
    4. ')' → logprob: -4.026010513305664
    5. '(' → logprob: -5.026010513305664
    6. ',q' → logprob: -5.276010513305664
    7. '),' → logprob: -6.776010513305664
    8. ' ,' → logprob: -7.026010513305664
    9. '(s' → logprob: -7.151010513305664
    10. ')
' → logprob: -9.276010513305664

Token 1258: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.005931997671723366
    2. ' sum' → logprob: -5.130931854248047
    3. '
' → logprob: -13.755931854248047
    4. '   ' → logprob: -14.130931854248047
    5. '	sum' → logprob: -15.005931854248047
    6. '(sum' → logprob: -15.130931854248047
    7. '    ' → logprob: -15.255931854248047
    8. ')' → logprob: -15.630931854248047
    9. '       ' → logprob: -15.755931854248047
    10. '  ' → logprob: -15.755931854248047

Token 1259: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.07065436989068985
    2. '_' → logprob: -2.6956543922424316
    3. '_[' → logprob: -7.445654392242432
    4. '_,
' → logprob: -9.445653915405273
    5. '_
' → logprob: -11.195653915405273
    6. ',' → logprob: -11.320653915405273
    7. '_

' → logprob: -11.695653915405273
    8. '_)' → logprob: -11.945653915405273
    9. '_),' → logprob: -12.695653915405273
    10. '_=' → logprob: -13.195653915405273

Token 1260: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.20141831040382385
    2. ' cnt' → logprob: -1.7014182806015015
    3. '(cnt' → logprob: -13.076417922973633
    4. '[cnt' → logprob: -13.701417922973633
    5. '	cnt' → logprob: -13.951417922973633
    6. 'sum' → logprob: -14.451417922973633
    7. '
' → logprob: -16.326417922973633
    8. ' sum' → logprob: -16.701417922973633
    9. ')' → logprob: -16.701417922973633
    10. '_cnt' → logprob: -16.826417922973633

Token 1261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001805377542041242
    2. '_,' → logprob: -8.7501802444458
    3. ' ,' → logprob: -11.7501802444458
    4. '   ' → logprob: -12.2501802444458
    5. ')' → logprob: -13.1251802444458
    6. ',q' → logprob: -13.6251802444458
    7. ',
' → logprob: -14.1251802444458
    8. ',v' → logprob: -14.3751802444458
    9. '_' → logprob: -14.5001802444458
    10. '    ' → logprob: -14.5001802444458

Token 1262: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.005234121344983578
    2. ' ans' → logprob: -5.255234241485596
    3. '(ans' → logprob: -16.380233764648438
    4. ')' → logprob: -16.630233764648438
    5. '	ans' → logprob: -16.880233764648438
    6. '
' → logprob: -18.005233764648438
    7. '_ans' → logprob: -18.005233764648438
    8. ' ' → logprob: -18.505233764648438
    9. '   ' → logprob: -18.630233764648438
    10. 'ann' → logprob: -19.380233764648438

Token 1263: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01664138399064541
    2. ')
' → logprob: -4.641641616821289
    3. '       ' → logprob: -5.141641616821289
    4. '           ' → logprob: -7.641641616821289
    5. '   ' → logprob: -7.766641616821289
    6. ')return' → logprob: -10.391641616821289
    7. '<|end|>' → logprob: -10.766641616821289
    8. '               ' → logprob: -11.141641616821289
    9. '	' → logprob: -12.266641616821289
    10. ')\' → logprob: -12.391641616821289

Token 1264: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10806454718112946
    2. '
' → logprob: -2.358064651489258
    3. '       ' → logprob: -5.733064651489258
    4. '    
' → logprob: -6.358064651489258
    5. '<|end|>' → logprob: -6.983064651489258
    6. '' → logprob: -8.108064651489258
    7. '	return' → logprob: -8.483064651489258
    8. '	s' → logprob: -8.608064651489258
    9. '	for' → logprob: -9.233064651489258
    10. '	' → logprob: -9.233064651489258

Token 1265: ' vis' (ID: 1909)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22401922941207886
    2. 'sk' → logprob: -2.7240192890167236
    3. ' for' → logprob: -2.8490192890167236
    4. ' sk' → logprob: -3.2240192890167236
    5. '       ' → logprob: -3.7240192890167236
    6. 'for' → logprob: -4.7240190505981445
    7. 'return' → logprob: -7.3490190505981445
    8. ' return' → logprob: -7.3490190505981445
    9. 'def' → logprob: -7.5990190505981445
    10. '
' → logprob: -7.7240190505981445

Token 1266: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.723352049040841e-06
    2. '```' → logprob: -13.375004768371582
    3. '   ' → logprob: -14.250004768371582
    4. 'v' → logprob: -14.250004768371582
    5. '
' → logprob: -14.500004768371582
    6. '[' → logprob: -14.625004768371582
    7. ' [' → logprob: -15.500004768371582
    8. '[val' → logprob: -16.000003814697266
    9. '[u' → logprob: -16.500003814697266
    10. '[V' → logprob: -16.875003814697266

Token 1267: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024189040064811707
    2. '[v' → logprob: -4.024188995361328
    3. ')' → logprob: -6.024188995361328
    4. '=' → logprob: -6.649188995361328
    5. ' =' → logprob: -7.024188995361328
    6. ']=' → logprob: -7.024188995361328
    7. '[' → logprob: -8.274188995361328
    8. '   ' → logprob: -8.774188995361328
    9. ' ]' → logprob: -9.899188995361328
    10. '=True' → logprob: -11.149188995361328

Token 1268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01509343832731247
    2. ' =' → logprob: -4.2650933265686035
    3. '[v' → logprob: -7.1400933265686035
    4. '   ' → logprob: -9.765093803405762
    5. '[' → logprob: -10.015093803405762
    6. '=True' → logprob: -10.390093803405762
    7. 'v' → logprob: -13.890093803405762
    8. '=
' → logprob: -14.140093803405762
    9. '       ' → logprob: -14.640093803405762
    10. '=v' → logprob: -14.640093803405762

Token 1269: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.003177952254191041
    2. ' True' → logprob: -5.753178119659424
    3. 'False' → logprob: -16.253177642822266
    4. '(True' → logprob: -16.378177642822266
    5. '=True' → logprob: -18.628177642822266
    6. '1' → logprob: -19.128177642822266
    7. '   ' → logprob: -20.378177642822266
    8. '[' → logprob: -20.878177642822266
    9. '
' → logprob: -21.253177642822266
    10. '	' → logprob: -21.878177642822266

Token 1270: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48217397928237915
    2. '<|end|>' → logprob: -0.9821739792823792
    3. '   ' → logprob: -5.482173919677734
    4. '<|end|>' → logprob: -6.607173919677734
    5. '	return' → logprob: -7.107173919677734
    6. '	' → logprob: -8.357173919677734
    7. '	
' → logprob: -8.732173919677734
    8. '    
' → logprob: -8.732173919677734
    9. '       ' → logprob: -8.982173919677734
    10. '  
' → logprob: -9.107173919677734

Token 1271: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5240787267684937
    2. '
' → logprob: -1.3990787267684937
    3. '	s' → logprob: -2.899078845977783
    4. '	for' → logprob: -3.649078845977783
    5. ' sk' → logprob: -3.649078845977783
    6. 'sk' → logprob: -3.899078845977783
    7. '	return' → logprob: -4.774078845977783
    8. '(sk' → logprob: -4.899078845977783
    9. '<|end|>' → logprob: -5.649078845977783
    10. '       ' → logprob: -5.649078845977783

Token 1272: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11627960205078125
    2. '   ' → logprob: -2.7412796020507812
    3. 'sk' → logprob: -3.1162796020507812
    4. 'if' → logprob: -7.991279602050781
    5. '       ' → logprob: -8.366279602050781
    6. 'es' → logprob: -8.866279602050781
    7. ' for' → logprob: -8.866279602050781
    8. 'return' → logprob: -10.866279602050781
    9. '	for' → logprob: -11.116279602050781
    10. 'import' → logprob: -11.866279602050781

Token 1273: ' (' (ID: 350)
  Prédit: '(to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -0.008516466245055199
    2. 'to' → logprob: -5.008516311645508
    3. ' (' → logprob: -6.383516311645508
    4. '(v' → logprob: -9.508516311645508
    5. '(u' → logprob: -11.508516311645508
    6. '[to' → logprob: -12.008516311645508
    7. ' to' → logprob: -12.133516311645508
    8. '```' → logprob: -13.133516311645508
    9. '(t' → logprob: -13.508516311645508
    10. ',to' → logprob: -13.633516311645508

Token 1274: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -6.749814019713085e-06
    2. ' to' → logprob: -12.625006675720215
    3. 'u' → logprob: -13.625006675720215
    4. '(to' → logprob: -13.750006675720215
    5. '```' → logprob: -15.625006675720215
    6. ',to' → logprob: -15.875006675720215
    7. '[to' → logprob: -15.875006675720215
    8. 'w' → logprob: -16.00000762939453
    9. ',' → logprob: -16.12500762939453
    10. 'sk' → logprob: -16.12500762939453

Token 1275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.438573680294212e-06
    2. ' ,' → logprob: -12.750005722045898
    3. ',v' → logprob: -13.875005722045898
    4. ',
' → logprob: -14.000005722045898
    5. '_,' → logprob: -15.875005722045898
    6. ')' → logprob: -16.5000057220459
    7. '```' → logprob: -16.8750057220459
    8. '		' → logprob: -17.5000057220459
    9. ',to' → logprob: -17.6250057220459
    10. '	' → logprob: -17.7500057220459

Token 1276: ' co' (ID: 1407)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.16816788911819458
    2. ' co' → logprob: -2.29316782951355
    3. 'v' → logprob: -3.54316782951355
    4. ',' → logprob: -3.79316782951355
    5. ' v' → logprob: -6.168168067932129
    6. '_,' → logprob: -9.293168067932129
    7. 'es' → logprob: -10.043168067932129
    8. ',v' → logprob: -10.168168067932129
    9. 'sk' → logprob: -10.418168067932129
    10. 'col' → logprob: -10.668168067932129

Token 1277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4378848391061183e-05
    2. ',col' → logprob: -12.500014305114746
    3. ',v' → logprob: -12.625014305114746
    4. ' ,' → logprob: -13.250014305114746
    5. ')' → logprob: -13.375014305114746
    6. ',tr' → logprob: -14.375014305114746
    7. ',)' → logprob: -14.625014305114746
    8. ',s' → logprob: -14.625014305114746
    9. ',n' → logprob: -15.125014305114746
    10. ',t' → logprob: -15.250014305114746

Token 1278: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.10021496564149857
    2. ' col' → logprob: -2.350214958190918
    3. '	col' → logprob: -13.475214958190918
    4. ',col' → logprob: -13.600214958190918
    5. ',' → logprob: -13.725214958190918
    6. 'color' → logprob: -13.975214958190918
    7. '...' → logprob: -14.850214958190918
    8. ')' → logprob: -14.975214958190918
    9. '
' → logprob: -15.100214958190918
    10. 'co' → logprob: -15.100214958190918

Token 1279: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013488641707226634
    2. 'in' → logprob: -9.000134468078613
    3. ' in' → logprob: -12.625134468078613
    4. ')
' → logprob: -12.625134468078613
    5. '),' → logprob: -13.375134468078613
    6. ' )' → logprob: -13.375134468078613
    7. '```' → logprob: -14.625134468078613
    8. '   ' → logprob: -15.250134468078613
    9. ')`' → logprob: -15.250134468078613
    10. ',' → logprob: -16.00013542175293

Token 1280: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5961471199989319
    2. 'in' → logprob: -0.8461471199989319
    3. ' in' → logprob: -3.971147060394287
    4. '
' → logprob: -8.096147537231445
    5. '),' → logprob: -8.346147537231445
    6. ',' → logprob: -8.471147537231445
    7. ' )' → logprob: -9.346147537231445
    8. '```' → logprob: -9.346147537231445
    9. '):
' → logprob: -9.596147537231445
    10. '   ' → logprob: -10.096147537231445

Token 1281: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.003183420980349183
    2. 'es' → logprob: -5.753183364868164
    3. ' reversed' → logprob: -12.878183364868164
    4. 'reverse' → logprob: -13.003183364868164
    5. 'rev' → logprob: -14.503183364868164
    6. 'enumer' → logprob: -16.503183364868164
    7. 'res' → logprob: -16.753183364868164
    8. 'sorted' → logprob: -17.378183364868164
    9. '[(' → logprob: -17.628183364868164
    10. 'rew' → logprob: -17.753183364868164

Token 1282: '(es' (ID: 89947)
  Prédit: '(es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(es' → logprob: -0.006717147771269083
    2. 'es' → logprob: -5.006717205047607
    3. '	es' → logprob: -13.63171672821045
    4. ' es' → logprob: -14.63171672821045
    5. '
' → logprob: -17.131717681884766
    6. ' (' → logprob: -17.756717681884766
    7. '   ' → logprob: -18.131717681884766
    8. ''es' → logprob: -18.631717681884766
    9. '-es' → logprob: -18.631717681884766
    10. '/es' → logprob: -18.631717681884766

Token 1283: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.054500666621607e-06
    2. 'v' → logprob: -13.75000286102295
    3. ')[' → logprob: -13.87500286102295
    4. '[' → logprob: -15.37500286102295
    5. '
' → logprob: -15.62500286102295
    6. '[
' → logprob: -16.375003814697266
    7. ')v' → logprob: -16.500003814697266
    8. ')' → logprob: -16.500003814697266
    9. '   ' → logprob: -16.875003814697266
    10. '```' → logprob: -17.000003814697266

Token 1284: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.25330212712287903
    2. ']):
' → logprob: -1.5033020973205566
    3. ']' → logprob: -7.503302097320557
    4. '):' → logprob: -8.253302574157715
    5. '])' → logprob: -8.378302574157715
    6. '):
' → logprob: -8.628302574157715
    7. '       ' → logprob: -9.878302574157715
    8. ')' → logprob: -10.128302574157715
    9. ']),' → logprob: -11.253302574157715
    10. '   ' → logprob: -11.753302574157715

Token 1285: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002358286874368787
    2. ':' → logprob: -6.627358436584473
    3. ':
' → logprob: -7.377358436584473
    4. '       ' → logprob: -8.752358436584473
    5. '):
' → logprob: -9.752358436584473
    6. ',' → logprob: -9.877358436584473
    7. '               ' → logprob: -10.377358436584473
    8. '```' → logprob: -10.627358436584473
    9. '		' → logprob: -10.877358436584473
    10. '   ' → logprob: -11.252358436584473

Token 1286: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4387994110584259
    2. 'sk' → logprob: -1.0637993812561035
    3. ' sk' → logprob: -5.3137993812561035
    4. '           ' → logprob: -5.3137993812561035
    5. '(sk' → logprob: -9.688799858093262
    6. '   ' → logprob: -9.813799858093262
    7. '```' → logprob: -10.313799858093262
    8. '                   ' → logprob: -11.063799858093262
    9. '       ' → logprob: -11.438799858093262
    10. '            ' → logprob: -11.563799858093262

Token 1287: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.06197664886713028
    2. ' to' → logprob: -2.811976671218872
    3. '   ' → logprob: -13.061976432800293
    4. 'sk' → logprob: -13.936976432800293
    5. '[to' → logprob: -13.936976432800293
    6. 'False' → logprob: -14.186976432800293
    7. '	to' → logprob: -14.186976432800293
    8. 'not' → logprob: -14.436976432800293
    9. '(to' → logprob: -14.436976432800293
    10. '    ' → logprob: -14.811976432800293

Token 1288: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14272713661193848
    2. ' ==' → logprob: -2.0177271366119385
    3. '==
' → logprob: -10.39272689819336
    4. '!=' → logprob: -11.76772689819336
    5. '=' → logprob: -13.01772689819336
    6. ' !=' → logprob: -13.26772689819336
    7. '```' → logprob: -13.51772689819336
    8. '==(' → logprob: -13.64272689819336
    9. '===' → logprob: -14.01772689819336
    10. ')==' → logprob: -14.01772689819336

Token 1289: ' -' (ID: 533)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.0100624169572257e-05
    2. '-' → logprob: -11.000020027160645
    3. ' v' → logprob: -13.000020027160645
    4. 'p' → logprob: -14.750020027160645
    5. ' -' → logprob: -15.375020027160645
    6. '-v' → logprob: -15.500020027160645
    7. '   ' → logprob: -15.750020027160645
    8. '	v' → logprob: -17.75002098083496
    9. '_' → logprob: -18.00002098083496
    10. '_v' → logprob: -18.12502098083496

Token 1290: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. 'v' → logprob: -12.000009536743164
    3. 'p' → logprob: -13.000009536743164
    4. '2' → logprob: -15.625009536743164
    5. '
' → logprob: -15.875009536743164
    6. ' ' → logprob: -16.000009536743164
    7. '   ' → logprob: -16.687509536743164
    8. '```' → logprob: -16.750009536743164
    9. ',' → logprob: -17.375009536743164
    10. '0' → logprob: -17.687509536743164

Token 1291: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.41845566034317017
    2. '               ' → logprob: -1.5434556007385254
    3. '           ' → logprob: -2.4184556007385254
    4. ':' → logprob: -3.9184556007385254
    5. ' or' → logprob: -4.793455600738525
    6. ',' → logprob: -5.043455600738525
    7. '       ' → logprob: -6.418455600738525
    8. ' and' → logprob: -6.793455600738525
    9. '		' → logprob: -7.418455600738525
    10. '   ' → logprob: -8.043456077575684

Token 1292: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012924784794449806
    2. '           ' → logprob: -4.637924671173096
    3. 'continue' → logprob: -6.512924671173096
    4. ' continue' → logprob: -7.512924671173096
    5. '		' → logprob: -8.012925148010254
    6. '			' → logprob: -8.512925148010254
    7. '                   ' → logprob: -8.637925148010254
    8. '	       ' → logprob: -9.012925148010254
    9. '	           ' → logprob: -9.262925148010254
    10. '	continue' → logprob: -10.137925148010254

Token 1293: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5935747623443604
    2. ' continue' → logprob: -0.9685747623443604
    3. '               ' → logprob: -2.7185747623443604
    4. '			' → logprob: -7.343574523925781
    5. '                   ' → logprob: -7.343574523925781
    6. '	continue' → logprob: -7.593574523925781
    7. '           ' → logprob: -10.093574523925781
    8. '		' → logprob: -10.093574523925781
    9. ' ' → logprob: -10.343574523925781
    10. '				' → logprob: -10.718574523925781

Token 1294: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014293259009718895
    2. '		' → logprob: -4.264293193817139
    3. '<|end|>' → logprob: -10.389293670654297
    4. '	       ' → logprob: -10.514293670654297
    5. '               ' → logprob: -11.264293670654297
    6. '       ' → logprob: -11.389293670654297
    7. 'sk' → logprob: -12.139293670654297
    8. '(sk' → logprob: -12.264293670654297
    9. '    	' → logprob: -12.389293670654297
    10. '	' → logprob: -12.514293670654297

Token 1295: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.049570273607969284
    2. '		' → logprob: -3.049570322036743
    3. '       ' → logprob: -7.799570083618164
    4. '	' → logprob: -8.674570083618164
    5. '               ' → logprob: -9.049570083618164
    6. '	       ' → logprob: -9.549570083618164
    7. 'sk' → logprob: -9.674570083618164
    8. ' sk' → logprob: -10.674570083618164
    9. '<|end|>' → logprob: -10.924570083618164
    10. '(sk' → logprob: -11.299570083618164

Token 1296: ' sk' (ID: 1705)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010274805128574371
    2. 'sk' (adapté à ' sk') → logprob: -5.135274887084961
    3. '               ' → logprob: -6.135274887084961
    4. '		' → logprob: -6.635274887084961
    5. ' sk' → logprob: -8.135274887084961
    6. '
' → logprob: -8.385274887084961
    7. '       ' → logprob: -8.885274887084961
    8. '```' → logprob: -9.510274887084961
    9. '                   ' → logprob: -9.885274887084961
    10. '   ' → logprob: -10.635274887084961

Token 1297: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.0087516784551553e-05
    2. '.' → logprob: -12.00001049041748
    3. '.app' → logprob: -12.87501049041748
    4. 'append' → logprob: -15.12501049041748
    5. '           ' → logprob: -15.25001049041748
    6. '.pop' → logprob: -15.25001049041748
    7. ' .' → logprob: -15.87501049041748
    8. ').' → logprob: -16.250009536743164
    9. '.extend' → logprob: -16.250009536743164
    10. '.ap' → logprob: -16.375009536743164

Token 1298: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -3.15441757265944e-05
    2. '(' → logprob: -11.000031471252441
    3. '(to' → logprob: -11.250031471252441
    4. ' ((' → logprob: -14.375031471252441
    5. '[(' → logprob: -14.750031471252441
    6. '   ' → logprob: -14.875031471252441
    7. '(
' → logprob: -15.375031471252441
    8. ' (' → logprob: -16.000032424926758
    9. '(('' → logprob: -17.125032424926758
    10. '```' → logprob: -17.250032424926758

Token 1299: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -3.7146746763028204e-05
    2. '(to' → logprob: -10.25003719329834
    3. ' to' → logprob: -13.37503719329834
    4. '[to' → logprob: -17.125036239624023
    5. ')' → logprob: -17.375036239624023
    6. '(' → logprob: -17.875036239624023
    7. '	to' → logprob: -18.000036239624023
    8. '0' → logprob: -18.625036239624023
    9. '```' → logprob: -18.625036239624023
    10. 'v' → logprob: -18.875036239624023

Token 1300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012535012501757592
    2. ',v' → logprob: -9.12512493133545
    3. ' ,' → logprob: -11.12512493133545
    4. ',
' → logprob: -14.00012493133545
    5. 'v' → logprob: -15.25012493133545
    6. ',None' → logprob: -15.87512493133545
    7. '<|end|>' → logprob: -16.875125885009766
    8. '           ' → logprob: -16.875125885009766
    9. '   ' → logprob: -17.375125885009766
    10. '```' → logprob: -17.375125885009766

Token 1301: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.011049000546336174
    2. ' v' → logprob: -4.511048793792725
    3. '   ' → logprob: -14.386049270629883
    4. '	v' → logprob: -15.511049270629883
    5. ' ' → logprob: -16.011049270629883
    6. '-' → logprob: -16.386049270629883
    7. '-v' → logprob: -16.636049270629883
    8. '    ' → logprob: -16.761049270629883
    9. ')v' → logprob: -16.761049270629883
    10. ' -' → logprob: -17.823549270629883

Token 1302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.024604277219623e-05
    2. ' ,' → logprob: -10.250040054321289
    3. '		' → logprob: -14.000040054321289
    4. '           ' → logprob: -14.125040054321289
    5. ',
' → logprob: -14.250040054321289
    6. '	' → logprob: -14.500040054321289
    7. '   ' → logprob: -14.500040054321289
    8. ',None' → logprob: -15.000040054321289
    9. '```' → logprob: -15.500040054321289
    10. ',,' → logprob: -16.00004005432129

Token 1303: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.004082554951310158
    2. ' col' → logprob: -5.504082679748535
    3. '0' → logprob: -12.754082679748535
    4. '-' → logprob: -15.004082679748535
    5. 'co' → logprob: -15.379082679748535
    6. '	col' → logprob: -16.00408172607422
    7. ' ' → logprob: -16.12908172607422
    8. '
' → logprob: -16.62908172607422
    9. ' -' → logprob: -17.12908172607422
    10. 'color' → logprob: -17.25408172607422

Token 1304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3319124011322856e-05
    2. ' ,' → logprob: -10.750022888183594
    3. ',
' → logprob: -14.000022888183594
    4. '           ' → logprob: -15.000022888183594
    5. '```' → logprob: -15.375022888183594
    6. '		' → logprob: -16.625022888183594
    7. ')' → logprob: -16.875022888183594
    8. '<|end|>' → logprob: -17.000022888183594
    9. '	' → logprob: -17.125022888183594
    10. '   ' → logprob: -17.125022888183594

Token 1305: ' co' (ID: 1407)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.014163628220558167
    2. ' co' → logprob: -4.264163494110107
    3. ' ' → logprob: -16.514163970947266
    4. '(co' → logprob: -17.764163970947266
    5. 'coe' → logprob: -17.889163970947266
    6. '
' → logprob: -18.639163970947266
    7. '   ' → logprob: -18.639163970947266
    8. '
' → logprob: -19.264163970947266
    9. '_co' → logprob: -19.264163970947266
    10. ' ' → logprob: -19.514163970947266

Token 1306: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03071749024093151
    2. ')' → logprob: -3.780717372894287
    3. '))
' → logprob: -4.905717372894287
    4. ')
' → logprob: -11.155717849731445
    5. '           ' → logprob: -11.405717849731445
    6. ')))' → logprob: -11.780717849731445
    7. '))

' → logprob: -13.280717849731445
    8. '))
' → logprob: -13.530717849731445
    9. ')\' → logprob: -14.280717849731445
    10. ' ))' → logprob: -14.530717849731445

Token 1307: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1308: ' tr' (ID: 498)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' (adapté à ' tr') → logprob: -0.0011708177626132965
    2. '           ' → logprob: -7.376170635223389
    3. '   ' → logprob: -7.626170635223389
    4. '       ' → logprob: -10.501171112060547
    5. 'def' → logprob: -10.626171112060547
    6. 'return' → logprob: -12.501171112060547
    7. 'continue' → logprob: -15.126171112060547
    8. '               ' → logprob: -15.251171112060547
    9. 'for' → logprob: -16.126171112060547
    10. '#' → logprob: -16.501171112060547

Token 1309: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.848420551046729e-05
    2. 'v' → logprob: -9.8750581741333
    3. '[to' → logprob: -12.1250581741333
    4. '[' → logprob: -14.2500581741333
    5. '```' → logprob: -15.6250581741333
    6. '   ' → logprob: -15.8750581741333
    7. '=v' → logprob: -16.125059127807617
    8. 'to' → logprob: -16.375059127807617
    9. '.append' → logprob: -16.625059127807617
    10. ',v' → logprob: -17.000059127807617

Token 1310: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00507009495049715
    2. ']' → logprob: -6.255070209503174
    3. '[to' → logprob: -6.630070209503174
    4. ')[' → logprob: -6.755070209503174
    5. '[' → logprob: -7.880070209503174
    6. '}[' → logprob: -9.630069732666016
    7. '[v' → logprob: -9.630069732666016
    8. ']{' → logprob: -10.380069732666016
    9. '].' → logprob: -10.880069732666016
    10. ')' → logprob: -11.255069732666016

Token 1311: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -3.128163257315464e-07
    2. ' to' → logprob: -15.75
    3. '
' → logprob: -16.625
    4. 'v' → logprob: -17.375
    5. '(to' → logprob: -17.875
    6. '   ' → logprob: -18.5
    7. '[to' → logprob: -18.625
    8. 'sk' → logprob: -19.125
    9. '	to' → logprob: -19.5
    10. '```' → logprob: -20.0

Token 1312: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.570669412612915
    2. '=' → logprob: -1.320669412612915
    3. ')' → logprob: -2.195669412612915
    4. ' =' → logprob: -3.195669412612915
    5. ']=' → logprob: -4.695669174194336
    6. '])' → logprob: -5.195669174194336
    7. ')=' → logprob: -7.945669174194336
    8. ' )' → logprob: -8.070669174194336
    9. ' ]' → logprob: -8.570669174194336
    10. ')]' → logprob: -9.320669174194336

Token 1313: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005233882926404476
    2. ' =' → logprob: -5.2552337646484375
    3. ')' → logprob: -16.755233764648438
    4. ')=' → logprob: -17.255233764648438
    5. '=
' → logprob: -20.005233764648438
    6. ']=' → logprob: -20.505233764648438
    7. '＝' → logprob: -20.755233764648438
    8. ' =)' → logprob: -20.880233764648438
    9. '=True' → logprob: -21.005233764648438
    10. ' ' → logprob: -21.130233764648438

Token 1314: ' (' (ID: 350)
  Prédit: '(col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(col' → logprob: -0.029753616079688072
    2. ' (' → logprob: -3.5297536849975586
    3. '[col' → logprob: -13.529753684997559
    4. '(cl' → logprob: -14.029753684997559
    5. '(' → logprob: -15.279753684997559
    6. '(cols' → logprob: -15.529753684997559
    7. '(None' → logprob: -15.654753684997559
    8. '(co' → logprob: -16.529752731323242
    9. '(column' → logprob: -16.654752731323242
    10. '(coll' → logprob: -17.904752731323242

Token 1315: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -4.5491004129871726e-05
    2. ' col' → logprob: -10.000045776367188
    3. '(col' → logprob: -16.875045776367188
    4. '	col' → logprob: -19.125045776367188
    5. '
' → logprob: -19.875045776367188
    6. '[col' → logprob: -20.000045776367188
    7. 'co' → logprob: -21.375045776367188
    8. 'colon' → logprob: -21.875045776367188
    9. '   ' → logprob: -22.125045776367188
    10. 'cols' → logprob: -22.250045776367188

Token 1316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1008713702030946e-06
    2. ' ,' → logprob: -13.625001907348633
    3. ',col' → logprob: -14.750001907348633
    4. ',
' → logprob: -15.000001907348633
    5. '
' → logprob: -17.500001907348633
    6. ')' → logprob: -17.625001907348633
    7. '```' → logprob: -18.250001907348633
    8. '<|end|>' → logprob: -18.375001907348633
    9. '),' → logprob: -18.625001907348633
    10. ' col' → logprob: -18.750001907348633

Token 1317: ' co' (ID: 1407)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.10020699352025986
    2. ' co' → logprob: -2.3502070903778076
    3. '(co' → logprob: -15.475207328796387
    4. '
' → logprob: -16.60020637512207
    5. 'coe' → logprob: -17.22520637512207
    6. '_co' → logprob: -17.47520637512207
    7. ' ' → logprob: -18.10020637512207
    8. ' ' → logprob: -18.10020637512207
    9. '   ' → logprob: -18.47520637512207
    10. '```' → logprob: -18.72520637512207

Token 1318: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006004538154229522
    2. '       ' → logprob: -7.875600337982178
    3. ')
' → logprob: -8.500600814819336
    4. '   ' → logprob: -11.250600814819336
    5. '           ' → logprob: -12.750600814819336
    6. '))' → logprob: -15.500600814819336
    7. ')`' → logprob: -15.500600814819336
    8. '               ' → logprob: -16.000600814819336
    9. ')#' → logprob: -16.750600814819336
    10. ' )' → logprob: -16.750600814819336

Token 1319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01326575968414545
    2. '
' → logprob: -4.638265609741211
    3. '<|end|>' → logprob: -6.763265609741211
    4. '       ' → logprob: -7.138265609741211
    5. '	return' → logprob: -8.013265609741211
    6. ')' → logprob: -8.138265609741211
    7. '	while' → logprob: -8.763265609741211
    8. '	for' → logprob: -8.763265609741211
    9. '    
' → logprob: -9.388265609741211
    10. '' → logprob: -9.888265609741211

Token 1320: ' process' (ID: 2273)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007740312721580267
    2. 'def' → logprob: -5.382740497589111
    3. '
' → logprob: -6.382740497589111
    4. 'process' (adapté à ' process') → logprob: -7.382740497589111
    5. 'for' → logprob: -9.007740020751953
    6. ' process' → logprob: -9.007740020751953
    7. ' for' → logprob: -9.007740020751953
    8. 'sk' → logprob: -9.757740020751953
    9. '    
' → logprob: -9.757740020751953
    10. '```' → logprob: -9.757740020751953

Token 1321: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -5.1689596148207784e-05
    2. 'initial' → logprob: -9.875051498413086
    3. '(initial' → logprob: -16.625051498413086
    4. '
' → logprob: -17.500051498413086
    5. '```' → logprob: -17.500051498413086
    6. 'Initial' → logprob: -17.625051498413086
    7. '_init' → logprob: -17.625051498413086
    8. '_INITIAL' → logprob: -18.000051498413086
    9. '_final' → logprob: -19.125051498413086
    10. '_internal' → logprob: -19.625051498413086

Token 1322: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005099745467305183
    2. '(es' → logprob: -6.005099773406982
    3. '(sk' → logprob: -6.255099773406982
    4. '(-' → logprob: -7.755099773406982
    5. '0' → logprob: -9.630099296569824
    6. '(_)' → logprob: -9.880099296569824
    7. '((' → logprob: -10.880099296569824
    8. '(start' → logprob: -11.005099296569824
    9. '(i' → logprob: -11.005099296569824
    10. '(s' → logprob: -11.255099296569824

Token 1323: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.125001907348633
    3. ')' → logprob: -15.375001907348633
    4. '(' → logprob: -15.625001907348633
    5. 'sk' → logprob: -16.312501907348633
    6. '1' → logprob: -16.562501907348633
    7. '
' → logprob: -16.812501907348633
    8. '#' → logprob: -17.250001907348633
    9. '```' → logprob: -17.625001907348633
    10. '...' → logprob: -17.937501907348633

Token 1324: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932896375656128
    2. ')
' → logprob: -0.6932896375656128
    3. '   ' → logprob: -9.068289756774902
    4. ')
' → logprob: -10.818289756774902
    5. '
' → logprob: -12.693289756774902
    6. ' )' → logprob: -13.318289756774902
    7. ' )
' → logprob: -13.568289756774902
    8. ')

' → logprob: -15.068289756774902
    9. '(sk' → logprob: -15.818289756774902
    10. '))' → logprob: -16.193288803100586

Token 1325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010000431910157204
    2. 'while' → logprob: -4.760000228881836
    3. ' while' → logprob: -7.510000228881836
    4. '```' → logprob: -7.635000228881836
    5. '
' → logprob: -8.260000228881836
    6. '	while' → logprob: -10.260000228881836
    7. '    
' → logprob: -10.510000228881836
    8. 'for' → logprob: -10.885000228881836
    9. 'v' → logprob: -13.010000228881836
    10. 'While' → logprob: -13.135000228881836

Token 1326: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.10190942883491516
    2. '   ' → logprob: -2.3519093990325928
    3. '```' → logprob: -6.851909637451172
    4. ' while' → logprob: -7.476909637451172
    5. '	while' → logprob: -9.601909637451172
    6. 'While' → logprob: -11.851909637451172
    7. '
' → logprob: -13.476909637451172
    8. '``' → logprob: -14.101909637451172
    9. '       ' → logprob: -14.476909637451172
    10. '    
' → logprob: -15.976909637451172

Token 1327: ' sk' (ID: 1705)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7068765163421631
    2. 'sk' → logprob: -0.7068765163421631
    3. ' len' → logprob: -4.456876754760742
    4. ' sk' → logprob: -6.206876754760742
    5. '(len' → logprob: -12.456876754760742
    6. '   ' → logprob: -12.581876754760742
    7. 'stack' → logprob: -12.581876754760742
    8. 'not' → logprob: -12.956876754760742
    9. '(sk' → logprob: -12.956876754760742
    10. ' not' → logprob: -13.331876754760742

Token 1328: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10383175313472748
    2. ':
' → logprob: -2.3538317680358887
    3. '):
' → logprob: -6.478831768035889
    4. ' and' → logprob: -7.353831768035889
    5. '):' → logprob: -7.728831768035889
    6. '.pop' → logprob: -7.978831768035889
    7. 'and' → logprob: -8.22883129119873
    8. '[-' → logprob: -8.72883129119873
    9. '   ' → logprob: -9.97883129119873
    10. ')' → logprob: -10.10383129119873

Token 1329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021211212500929832
    2. 'v' → logprob: -3.8962111473083496
    3. ' v' → logprob: -8.646211624145508
    4. '(v' → logprob: -8.646211624145508
    5. '	' → logprob: -9.146211624145508
    6. '```' → logprob: -9.396211624145508
    7. '   ' → logprob: -10.271211624145508
    8. '	v' → logprob: -10.396211624145508
    9. ',' → logprob: -11.021211624145508
    10. ',v' → logprob: -11.521211624145508

Token 1330: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.008048638701438904
    2. '       ' → logprob: -4.8830485343933105
    3. '(v' → logprob: -8.508049011230469
    4. ' v' → logprob: -9.008049011230469
    5. '           ' → logprob: -10.383049011230469
    6. 'to' → logprob: -10.383049011230469
    7. '	v' → logprob: -10.508049011230469
    8. '   ' → logprob: -11.883049011230469
    9. 'sk' → logprob: -12.383049011230469
    10. '```' → logprob: -12.508049011230469

Token 1331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.233804303221405e-05
    2. ',v' → logprob: -9.500092506408691
    3. ',p' → logprob: -11.625092506408691
    4. '=' → logprob: -12.500092506408691
    5. ',
' → logprob: -13.375092506408691
    6. ' ,' → logprob: -14.250092506408691
    7. '_,' → logprob: -15.000092506408691
    8. ',w' → logprob: -15.000092506408691
    9. ',_' → logprob: -15.375092506408691
    10. ',x' → logprob: -15.625092506408691

Token 1332: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.306760805164231e-05
    2. ' p' → logprob: -11.25001335144043
    3. 'v' → logprob: -17.12501335144043
    4. 'pv' → logprob: -20.25001335144043
    5. '   ' → logprob: -20.37501335144043
    6. ' ' → logprob: -20.37501335144043
    7. '  ' → logprob: -21.00001335144043
    8. '    ' → logprob: -21.00001335144043
    9. 'sk' → logprob: -21.75001335144043
    10. '	p' → logprob: -23.50001335144043

Token 1333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012773419439326972
    2. '=' → logprob: -9.375127792358398
    3. ',v' → logprob: -10.875127792358398
    4. ')' → logprob: -11.500127792358398
    5. ' ,' → logprob: -12.250127792358398
    6. ' =' → logprob: -12.250127792358398
    7. ',
' → logprob: -14.375127792358398
    8. ',p' → logprob: -14.625127792358398
    9. '),' → logprob: -15.000127792358398
    10. ',_' → logprob: -15.250127792358398

Token 1334: ' cl' (ID: 567)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.5759503245353699
    2. 'cl' → logprob: -0.8259503245353699
    3. ' col' → logprob: -12.075950622558594
    4. 'co' → logprob: -12.325950622558594
    5. ' cl' → logprob: -14.575950622558594
    6. 'c' → logprob: -16.075950622558594
    7. '```' → logprob: -16.450950622558594
    8. '   ' → logprob: -17.325950622558594
    9. '	cl' → logprob: -17.950950622558594
    10. '	col' → logprob: -18.200950622558594

Token 1335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7491250875755213e-05
    2. ' ,' → logprob: -11.375027656555176
    3. '=' → logprob: -11.625027656555176
    4. '_,' → logprob: -12.250027656555176
    5. ',
' → logprob: -14.375027656555176
    6. ')' → logprob: -15.375027656555176
    7. ',_' → logprob: -15.875027656555176
    8. ',col' → logprob: -15.875027656555176
    9. '	' → logprob: -16.00002670288086
    10. '   ' → logprob: -16.00002670288086

Token 1336: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -5.228561349213123e-05
    2. ' cs' → logprob: -9.875052452087402
    3. '	cs' → logprob: -14.250052452087402
    4. 'co' → logprob: -16.000051498413086
    5. '_cs' → logprob: -17.500051498413086
    6. '(cs' → logprob: -17.500051498413086
    7. 'c' → logprob: -18.500051498413086
    8. 'csrf' → logprob: -18.625051498413086
    9. '
' → logprob: -19.375051498413086
    10. 'CS' → logprob: -19.750051498413086

Token 1337: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868875801563263
    2. ' =' → logprob: -1.136887550354004
    3. ')' → logprob: -11.261887550354004
    4. '   ' → logprob: -12.886887550354004
    5. ' ' → logprob: -15.261887550354004
    6. ')=' → logprob: -15.511887550354004
    7. ',' → logprob: -16.01188850402832
    8. '       ' → logprob: -16.13688850402832
    9. '=
' → logprob: -16.38688850402832
    10. '    ' → logprob: -16.51188850402832

Token 1338: ' sk' (ID: 1705)
  Prédit: 'sk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sk' → logprob: -0.3868778347969055
    2. ' sk' → logprob: -1.1368777751922607
    3. 'stack' → logprob: -12.76187801361084
    4. '(sk' → logprob: -13.26187801361084
    5. '   ' → logprob: -14.26187801361084
    6. '_sk' → logprob: -14.38687801361084
    7. 'st' → logprob: -14.76187801361084
    8. 's' → logprob: -15.38687801361084
    9. 'stk' → logprob: -16.011877059936523
    10. '    ' → logprob: -16.011877059936523

Token 1339: '[-' (ID: 17503)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0004362718027550727
    2. '[-' → logprob: -8.000435829162598
    3. 'pop' → logprob: -9.250435829162598
    4. '.' → logprob: -13.000435829162598
    5. '.append' → logprob: -14.625435829162598
    6. ' pop' → logprob: -14.625435829162598
    7. '   ' → logprob: -14.750435829162598
    8. '.p' → logprob: -14.875435829162598
    9. '	pop' → logprob: -15.375435829162598
    10. '```' → logprob: -15.625435829162598

Token 1340: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0034214046318084
    2. '-' → logprob: -6.003421306610107
    3. ']' → logprob: -7.128421306610107
    4. '()]' → logprob: -9.128421783447266
    5. '()' → logprob: -11.753421783447266
    6. '0' → logprob: -11.753421783447266
    7. '(-' → logprob: -11.753421783447266
    8. ']
' → logprob: -12.628421783447266
    9. ']()' → logprob: -13.253421783447266
    10. ')' → logprob: -13.878421783447266

Token 1341: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00047821682528592646
    2. ')
' → logprob: -7.875478267669678
    3. ']' → logprob: -9.87547779083252
    4. '<|end|>' → logprob: -10.62547779083252
    5. ' )' → logprob: -12.00047779083252
    6. '[' → logprob: -12.12547779083252
    7. ')]' → logprob: -13.37547779083252
    8. '),' → logprob: -13.62547779083252
    9. '<|end|>' → logprob: -13.75047779083252
    10. ')return' → logprob: -14.00047779083252

Token 1342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011391390580683947
    2. 'if' → logprob: -9.375113487243652
    3. 'sk' → logprob: -11.250113487243652
    4. ' if' → logprob: -11.750113487243652
    5. '   ' → logprob: -12.625113487243652
    6. '
' → logprob: -13.875113487243652
    7. '           ' → logprob: -14.125113487243652
    8. '...' → logprob: -14.625113487243652
    9. '```' → logprob: -14.750113487243652
    10. 'v' → logprob: -14.875113487243652

Token 1343: ' stop' (ID: 5666)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006400223355740309
    2. '       ' → logprob: -5.881400108337402
    3. 'sk' → logprob: -5.881400108337402
    4. 'res' → logprob: -7.756400108337402
    5. '   ' → logprob: -8.256400108337402
    6. 'done' → logprob: -10.631400108337402
    7. '_sk' → logprob: -10.756400108337402
    8. 'ret' → logprob: -11.506400108337402
    9. '_res' → logprob: -11.756400108337402
    10. '           ' → logprob: -11.881400108337402

Token 1344: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25140440464019775
    2. ' =' → logprob: -1.7514044046401978
    3. '_' → logprob: -3.126404285430908
    4. '_=' → logprob: -6.876404285430908
    5. 'if' → logprob: -7.001404285430908
    6. ',' → logprob: -7.501404285430908
    7. '=False' → logprob: -8.126404762268066
    8. '   ' → logprob: -8.251404762268066
    9. '_continue' → logprob: -8.501404762268066
    10. ':' → logprob: -8.626404762268066

Token 1345: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.002488022670149803
    2. ' process' → logprob: -6.002488136291504
    3. 'False' → logprob: -11.877488136291504
    4. 'not' → logprob: -12.377488136291504
    5. ' not' → logprob: -14.127488136291504
    6. '	process' → logprob: -15.877488136291504
    7. 'None' → logprob: -16.127487182617188
    8. 'True' → logprob: -16.377487182617188
    9. ' False' → logprob: -16.377487182617188
    10. '   ' → logprob: -17.127487182617188

Token 1346: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.001730040879920125
    2. 'single' → logprob: -6.376729965209961
    3. '(v' → logprob: -11.626729965209961
    4. 'v' → logprob: -12.001729965209961
    5. 'Single' → logprob: -12.251729965209961
    6. '
' → logprob: -13.001729965209961
    7. '```' → logprob: -13.251729965209961
    8. '_SINGLE' → logprob: -14.126729965209961
    9. 'ingle' → logprob: -14.251729965209961
    10. '_initial' → logprob: -14.376729965209961

Token 1347: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.006828563753515482
    2. 'stack' → logprob: -5.131828784942627
    3. 'sk' → logprob: -8.381828308105469
    4. '```' → logprob: -8.381828308105469
    5. '_sk' → logprob: -8.506828308105469
    6. '_st' → logprob: -10.131828308105469
    7. '_' → logprob: -10.131828308105469
    8. '(stack' → logprob: -10.381828308105469
    9. '(v' → logprob: -10.631828308105469
    10. '(' → logprob: -11.131828308105469

Token 1348: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.034010790288448334
    2. 'element' → logprob: -3.409010887145996
    3. '(v' → logprob: -8.534010887145996
    4. '```' → logprob: -9.659010887145996
    5. 'v' → logprob: -10.284010887145996
    6. 'Element' → logprob: -11.409010887145996
    7. '[v' → logprob: -11.659010887145996
    8. '[-' → logprob: -11.659010887145996
    9. 'elem' → logprob: -12.159010887145996
    10. ' element' → logprob: -12.159010887145996

Token 1349: '(sk' (ID: 138451)
  Prédit: '(sk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sk' → logprob: -2.2961512513575144e-05
    2. 'sk' → logprob: -12.000022888183594
    3. '(st' → logprob: -12.375022888183594
    4. ' (' → logprob: -12.375022888183594
    5. '(
' → logprob: -12.375022888183594
    6. '(' → logprob: -12.750022888183594
    7. '/sk' → logprob: -15.125022888183594
    8. ' sk' → logprob: -15.375022888183594
    9. '```' → logprob: -15.750022888183594
    10. '(stack' → logprob: -15.875022888183594

Token 1350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0771695002913475
    2. ')' → logprob: -2.827169418334961
    3. '(sk' → logprob: -4.327169418334961
    4. '<|end|>' → logprob: -7.202169418334961
    5. 'sk' → logprob: -8.202169418334961
    6. ',
' → logprob: -8.577169418334961
    7. ' ,' → logprob: -8.952169418334961
    8. ')
' → logprob: -9.202169418334961
    9. '   ' → logprob: -9.452169418334961
    10. '
' → logprob: -9.827169418334961

Token 1351: ' tr' (ID: 498)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.018150178715586662
    2. ' tr' → logprob: -4.018150329589844
    3. '	tr' → logprob: -15.768150329589844
    4. 't' → logprob: -17.893150329589844
    5. '(tr' → logprob: -17.893150329589844
    6. '<tr' → logprob: -18.393150329589844
    7. 'v' → logprob: -18.393150329589844
    8. 'es' → logprob: -19.018150329589844
    9. ' es' → logprob: -19.768150329589844
    10. '
' → logprob: -19.768150329589844

Token 1352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004085083492100239
    2. ',v' → logprob: -7.87540864944458
    3. ',
' → logprob: -11.375408172607422
    4. 'v' → logprob: -11.375408172607422
    5. ' ,' → logprob: -12.875408172607422
    6. '[v' → logprob: -14.125408172607422
    7. '```' → logprob: -14.625408172607422
    8. ')' → logprob: -14.750408172607422
    9. ',p' → logprob: -15.000408172607422
    10. '   ' → logprob: -15.375408172607422

Token 1353: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0206720617134124e-05
    2. ' v' → logprob: -11.50001049041748
    3. 'es' → logprob: -20.375009536743164
    4. '```' → logprob: -20.625009536743164
    5. '	v' → logprob: -21.500009536743164
    6. ')v' → logprob: -21.875009536743164
    7. '   ' → logprob: -22.750009536743164
    8. '(v' → logprob: -22.875009536743164
    9. '
' → logprob: -23.125009536743164
    10. '_v' → logprob: -24.000009536743164

Token 1354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002831464516930282
    2. ',p' → logprob: -8.375283241271973
    3. ' ,' → logprob: -9.875283241271973
    4. ',
' → logprob: -14.125283241271973
    5. 'p' → logprob: -15.500283241271973
    6. '   ' → logprob: -16.625282287597656
    7. '```' → logprob: -17.125282287597656
    8. ' p' → logprob: -18.000282287597656
    9. '[p' → logprob: -18.375282287597656
    10. '       ' → logprob: -18.500282287597656

Token 1355: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00033546582562848926
    2. ' p' → logprob: -8.000335693359375
    3. '
' → logprob: -17.875335693359375
    4. '   ' → logprob: -18.875335693359375
    5. '
' → logprob: -19.500335693359375
    6. '<p' → logprob: -20.125335693359375
    7. ',' → logprob: -20.500335693359375
    8. ' ' → logprob: -20.625335693359375
    9. 's' → logprob: -20.750335693359375
    10. '    ' → logprob: -21.125335693359375

Token 1356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4259644558478612e-05
    2. ' ,' → logprob: -11.250014305114746
    3. ',
' → logprob: -13.750014305114746
    4. ')' → logprob: -16.87501335144043
    5. '   ' → logprob: -16.87501335144043
    6. '<|end|>' → logprob: -17.37501335144043
    7. ',c' → logprob: -18.00001335144043
    8. '```' → logprob: -18.12501335144043
    9. '‌,' → logprob: -18.87501335144043
    10. '_,' → logprob: -19.00001335144043

Token 1357: ' cl' (ID: 567)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -9.088346359931165e-07
    2. ' cl' → logprob: -14.000000953674316
    3. '	cl' → logprob: -19.375
    4. '(cl' → logprob: -23.0
    5. '_cl' → logprob: -25.5
    6. '   ' → logprob: -26.0
    7. 'col' → logprob: -26.125
    8. '.cl' → logprob: -26.125
    9. 'cls' → logprob: -26.5
    10. 'Cl' → logprob: -26.5

Token 1358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.246537173457909e-06
    2. ' ,' → logprob: -12.625003814697266
    3. ',
' → logprob: -14.125003814697266
    4. '   ' → logprob: -17.125003814697266
    5. '```' → logprob: -17.250003814697266
    6. ',s' → logprob: -17.625003814697266
    7. '_,' → logprob: -18.500003814697266
    8. ',c' → logprob: -19.000003814697266
    9. 'cs' → logprob: -19.625003814697266
    10. '[' → logprob: -19.625003814697266

Token 1359: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -9.615255839889869e-05
    2. ' cs' → logprob: -9.250096321105957
    3. '	cs' → logprob: -18.00009536743164
    4. '(cs' → logprob: -19.75009536743164
    5. '_cs' → logprob: -20.37509536743164
    6. '
' → logprob: -20.87509536743164
    7. 'csrf' → logprob: -21.62509536743164
    8. '.cs' → logprob: -22.62509536743164
    9. 'CS' → logprob: -22.75009536743164
    10. '```' → logprob: -23.62509536743164

Token 1360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004128622822463512
    2. ')' → logprob: -5.504128456115723
    3. ',)' → logprob: -10.879128456115723
    4. ' ,' → logprob: -11.504128456115723
    5. ',
' → logprob: -11.879128456115723
    6. '   ' → logprob: -12.504128456115723
    7. '```' → logprob: -13.129128456115723
    8. ')
' → logprob: -13.254128456115723
    9. ',None' → logprob: -13.754128456115723
    10. '       ' → logprob: -13.879128456115723

Token 1361: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0019287518225610256
    2. ' cnt' → logprob: -6.251928806304932
    3. '	cnt' → logprob: -16.501928329467773
    4. '(cnt' → logprob: -18.001928329467773
    5. '[cnt' → logprob: -19.876928329467773
    6. 'count' → logprob: -21.251928329467773
    7. 'cn' → logprob: -21.626928329467773
    8. 'ct' → logprob: -22.376928329467773
    9. '_cnt' → logprob: -22.376928329467773
    10. '   ' → logprob: -23.001928329467773

Token 1362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2948405128554441e-05
    2. ' ,' → logprob: -11.50001335144043
    3. ',sum' → logprob: -13.37501335144043
    4. ',
' → logprob: -13.75001335144043
    5. '```' → logprob: -16.50001335144043
    6. '
' → logprob: -17.87501335144043
    7. ',s' → logprob: -18.00001335144043
    8. 'sum' → logprob: -18.37501335144043
    9. '[' → logprob: -19.87501335144043
    10. '_,' → logprob: -20.00001335144043

Token 1363: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.12692862749099731
    2. 'sum' → logprob: -2.1269285678863525
    3. '
' → logprob: -14.501928329467773
    4. '(sum' → logprob: -18.126928329467773
    5. '```' → logprob: -18.126928329467773
    6. '
' → logprob: -18.376928329467773
    7. '	sum' → logprob: -18.376928329467773
    8. '_sum' → logprob: -18.626928329467773
    9. ' ' → logprob: -19.376928329467773
    10. ',sum' → logprob: -19.501928329467773

Token 1364: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -1.4855663721391466e-05
    2. '_,
' → logprob: -12.000015258789062
    3. '_' → logprob: -12.375015258789062
    4. ',' → logprob: -12.375015258789062
    5. '_[' → logprob: -16.500015258789062
    6. '_
' → logprob: -16.625015258789062
    7. '_

' → logprob: -17.500015258789062
    8. '_)' → logprob: -17.750015258789062
    9. '__,' → logprob: -18.000015258789062
    10. '   ' → logprob: -19.000015258789062

Token 1365: ' vis' (ID: 1909)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.006726264487951994
    2. 'ans' → logprob: -5.006726264953613
    3. ' vis' → logprob: -11.631726264953613
    4. '
' → logprob: -13.756726264953613
    5. 'qs' → logprob: -14.756726264953613
    6. ' ans' → logprob: -16.006725311279297
    7. '   ' → logprob: -16.006725311279297
    8. 'vs' → logprob: -16.756725311279297
    9. 'visi' → logprob: -17.006725311279297
    10. '(vis' → logprob: -17.131725311279297

Token 1366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017982252757064998
    2. ')' → logprob: -8.8751802444458
    3. ',q' → logprob: -10.5001802444458
    4. ' ,' → logprob: -12.3751802444458
    5. '       ' → logprob: -12.8751802444458
    6. '   ' → logprob: -13.0001802444458
    7. ',
' → logprob: -14.1251802444458
    8. '```' → logprob: -14.6251802444458
    9. ')
' → logprob: -14.7501802444458
    10. '(sk' → logprob: -15.3751802444458

Token 1367: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.009766596369445324
    2. ' es' → logprob: -4.634766578674316
    3. '
' → logprob: -12.134766578674316
    4. '   ' → logprob: -13.009766578674316
    5. 'qs' → logprob: -13.509766578674316
    6. '
' → logprob: -14.634766578674316
    7. '	es' → logprob: -14.759766578674316
    8. 'sk' → logprob: -14.884766578674316
    9. ' ' → logprob: -16.509767532348633
    10. '       ' → logprob: -16.634767532348633

Token 1368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.141186450899113e-05
    2. ' ,' → logprob: -10.875020980834961
    3. '   ' → logprob: -14.375020980834961
    4. ',q' → logprob: -14.375020980834961
    5. ',
' → logprob: -14.625020980834961
    6. 'sk' → logprob: -15.250020980834961
    7. ')' → logprob: -16.00002098083496
    8. '       ' → logprob: -16.12502098083496
    9. '(sk' → logprob: -16.25002098083496
    10. ',s' → logprob: -16.37502098083496

Token 1369: ' qs' (ID: 75083)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.002476016292348504
    2. ' qs' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.12747573852539
    4. 'q' → logprob: -17.87747573852539
    5. ' ' → logprob: -17.87747573852539
    6. 'Qs' → logprob: -18.25247573852539
    7. '       ' → logprob: -19.00247573852539
    8. '
' → logprob: -19.87747573852539
    9. '  ' → logprob: -20.12747573852539
    10. '    ' → logprob: -20.37747573852539

Token 1370: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.5491004129871726e-05
    2. ' ,' → logprob: -10.375045776367188
    3. '   ' → logprob: -11.625045776367188
    4. ')' → logprob: -12.750045776367188
    5. ',
' → logprob: -14.000045776367188
    6. ')
' → logprob: -14.500045776367188
    7. '       ' → logprob: -14.625045776367188
    8. '  ' → logprob: -16.125045776367188
    9. '    ' → logprob: -16.625045776367188
    10. '           ' → logprob: -16.875045776367188

Token 1371: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0001584850688232109
    2. ' ans' → logprob: -8.750158309936523
    3. '	ans' → logprob: -18.750158309936523
    4. '(ans' → logprob: -19.875158309936523
    5. '   ' → logprob: -21.750158309936523
    6. '
' → logprob: -21.875158309936523
    7. 'answer' → logprob: -22.250158309936523
    8. ' ' → logprob: -23.625158309936523
    9. '_ans' → logprob: -23.625158309936523
    10. 'ann' → logprob: -24.000158309936523

Token 1372: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001835706876590848
    2. '       ' → logprob: -6.626835823059082
    3. ')
' → logprob: -7.626835823059082
    4. '   ' → logprob: -10.751835823059082
    5. ' )' → logprob: -15.001835823059082
    6. '))' → logprob: -15.876835823059082
    7. ')return' → logprob: -16.001834869384766
    8. ')
' → logprob: -16.251834869384766
    9. ')

' → logprob: -17.251834869384766
    10. ' ' → logprob: -17.376834869384766

Token 1373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018297502538189292
    2. 'if' → logprob: -6.626829624176025
    3. ' if' → logprob: -8.126830101013184
    4. '<|end|>' → logprob: -9.251830101013184
    5. '   ' → logprob: -10.251830101013184
    6. '```' → logprob: -10.626830101013184
    7. '	' → logprob: -11.001830101013184
    8. 'continue' → logprob: -11.126830101013184
    9. '           ' → logprob: -12.001830101013184
    10. '	if' → logprob: -12.501830101013184

Token 1374: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.48572173714637756
    2. '       ' → logprob: -0.9857217073440552
    3. ' if' → logprob: -4.485721588134766
    4. 'continue' → logprob: -8.485721588134766
    5. '	if' → logprob: -9.610721588134766
    6. '	' → logprob: -10.860721588134766
    7. '```' → logprob: -12.235721588134766
    8. '    ' → logprob: -13.485721588134766
    9. '   ' → logprob: -13.610721588134766
    10. 'while' → logprob: -13.610721588134766

Token 1375: ' stop' (ID: 5666)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.18658682703971863
    2. ' not' → logprob: -2.311586856842041
    3. 'stop' → logprob: -2.686586856842041
    4. ' stop' → logprob: -5.811586856842041
    5. '   ' → logprob: -13.686586380004883
    6. '(not' → logprob: -14.186586380004883
    7. ' ' → logprob: -14.686586380004883
    8. '(stop' → logprob: -14.686586380004883
    9. '	not' → logprob: -14.686586380004883
    10. 'no' → logprob: -15.561586380004883

Token 1376: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5392350554466248
    2. ':' → logprob: -1.9142351150512695
    3. ':
' → logprob: -1.9142351150512695
    4. '       ' → logprob: -2.7892351150512695
    5. '           ' → logprob: -3.1642351150512695
    6. ' ==' → logprob: -4.9142351150512695
    7. ' or' → logprob: -5.1642351150512695
    8. '=' → logprob: -6.5392351150512695
    9. '   ' → logprob: -6.6642351150512695
    10. 'continue' → logprob: -6.7892351150512695

Token 1377: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21687790751457214
    2. ' continue' → logprob: -1.8418779373168945
    3. 'continue' → logprob: -3.3418779373168945
    4. ' continues' → logprob: -7.3418779373168945
    5. '       ' → logprob: -8.466877937316895
    6. ' continued' → logprob: -9.591877937316895
    7. '```' → logprob: -9.716877937316895
    8. 'Continue' → logprob: -10.591877937316895
    9. '	continue' → logprob: -10.591877937316895
    10. '_continue' → logprob: -11.466877937316895

Token 1378: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12327142804861069
    2. ' continue' → logprob: -2.9982714653015137
    3. 'continue' (adapté à ' continue') → logprob: -3.1232714653015137
    4. 'sk' → logprob: -4.873271465301514
    5. '               ' → logprob: -4.998271465301514
    6. ' sk' → logprob: -5.248271465301514
    7. '       ' → logprob: -6.998271465301514
    8. '   ' → logprob: -7.248271465301514
    9. '	continue' → logprob: -8.498270988464355
    10. ' continues' → logprob: -9.373270988464355

Token 1379: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1380: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1381: ' read' (ID: 1729)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.4567297697067261
    2. ' main' → logprob: -1.081729769706726
    3. ' def' → logprob: -5.081729888916016
    4. 'main' → logprob: -5.581729888916016
    5. ' process' → logprob: -5.581729888916016
    6. ' _' → logprob: -6.081729888916016
    7. 'dfs' → logprob: -6.081729888916016
    8. '_' → logprob: -6.081729888916016
    9. ' solve' → logprob: -6.706729888916016
    10. ' __' → logprob: -7.081729888916016

Token 1382: '_graph' (ID: 33441)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.8268524408340454
    2. '()' → logprob: -1.9518524408340454
    3. '_input' → logprob: -2.076852321624756
    4. 'input' → logprob: -2.201852321624756
    5. ' =' → logprob: -2.826852321624756
    6. '_line' → logprob: -2.951852321624756
    7. '<|end|>' → logprob: -4.201852321624756
    8. '_lines' → logprob: -5.076852321624756
    9. ' input' → logprob: -5.076852321624756
    10. 'def' → logprob: -5.201852321624756

Token 1383: '_and' (ID: 18645)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10982934385538101
    2. '(N' → logprob: -2.9848294258117676
    3. '(es' → logprob: -2.9848294258117676
    4. '():' → logprob: -7.234829425811768
    5. '(n' → logprob: -7.859829425811768
    6. '(gr' → logprob: -7.859829425811768
    7. '():
' → logprob: -7.984829425811768
    8. '(
' → logprob: -8.10982894897461
    9. '(' → logprob: -9.35982894897461
    10. 'def' → logprob: -9.60982894897461

Token 1384: '_queries' (ID: 172558)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.5788626670837402
    2. 'solve' → logprob: -1.4538626670837402
    3. 'queries' → logprob: -1.8288626670837402
    4. 'query' → logprob: -3.4538626670837402
    5. 'run' → logprob: -4.95386266708374
    6. 'execute' → logprob: -5.95386266708374
    7. '_queries' → logprob: -6.70386266708374
    8. 'return' → logprob: -7.45386266708374
    9. 'Q' → logprob: -8.078863143920898
    10. 'prepare' → logprob: -8.203863143920898

Token 1385: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.15318697690963745
    2. '(Q' → logprob: -2.4031870365142822
    3. '(input' → logprob: -3.2781870365142822
    4. '(es' → logprob: -5.278186798095703
    5. '(n' → logprob: -5.528186798095703
    6. '(' → logprob: -6.528186798095703
    7. '(gr' → logprob: -6.653186798095703
    8. '(
' → logprob: -7.153186798095703
    9. '():' → logprob: -7.528186798095703
    10. '((' → logprob: -9.028186798095703

Token 1386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9795445849886164e-05
    2. '):' → logprob: -10.000060081481934
    3. ' ,' → logprob: -12.250060081481934
    4. 'Q' → logprob: -12.500060081481934
    5. ',
' → logprob: -13.000060081481934
    6. ',Q' → logprob: -13.625060081481934
    7. '):
' → logprob: -13.875060081481934
    8. ')' → logprob: -14.750060081481934
    9. ':' → logprob: -14.875060081481934
    10. '_,' → logprob: -15.625060081481934

Token 1387: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0001487140398239717
    2. ' Q' → logprob: -9.62514877319336
    3. 'es' → logprob: -10.12514877319336
    4. 'M' → logprob: -10.12514877319336
    5. 'input' → logprob: -14.75014877319336
    6. 'INF' → logprob: -14.87514877319336
    7. '   ' → logprob: -15.00014877319336
    8. '	Q' → logprob: -15.25014877319336
    9. ' es' → logprob: -15.62514877319336
    10. 'K' → logprob: -15.62514877319336

Token 1388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.630610641877865e-06
    2. ',input' → logprob: -12.250006675720215
    3. '):' → logprob: -13.375006675720215
    4. '):
' → logprob: -16.2500057220459
    5. 'input' → logprob: -16.7500057220459
    6. ',
' → logprob: -17.0000057220459
    7. ' ,' → logprob: -17.0000057220459
    8. ':' → logprob: -18.5000057220459
    9. ')' → logprob: -19.2500057220459
    10. '_,' → logprob: -19.3750057220459

Token 1389: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00031627772841602564
    2. 'es' → logprob: -8.125316619873047
    3. ' input' → logprob: -10.875316619873047
    4. 'gr' → logprob: -15.250316619873047
    5. '   ' → logprob: -15.750316619873047
    6. 'ES' → logprob: -16.125316619873047
    7. ')' → logprob: -16.250316619873047
    8. ' ' → logprob: -16.625316619873047
    9. '
' → logprob: -16.750316619873047
    10. '_input' → logprob: -16.875316619873047

Token 1390: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -2.176947600673884e-05
    2. 'func' → logprob: -10.750021934509277
    3. '_' → logprob: -16.62502098083496
    4. '_FUNC' → logprob: -17.12502098083496
    5. '_f' → logprob: -17.37502098083496
    6. '	func' → logprob: -17.50002098083496
    7. '_funcs' → logprob: -18.00002098083496
    8. '_function' → logprob: -18.00002098083496
    9. '_fun' → logprob: -18.12502098083496
    10. '_data' → logprob: -18.50002098083496

Token 1391: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2608959972858429
    2. '):
' → logprob: -1.5108959674835205
    3. ',' → logprob: -4.7608962059021
    4. ')' → logprob: -8.010895729064941
    5. '):
' → logprob: -10.885895729064941
    6. '   ' → logprob: -11.260895729064941
    7. '):

' → logprob: -12.760895729064941
    8. ':' → logprob: -13.635895729064941
    9. ' ):' → logprob: -14.885895729064941
    10. ' ' → logprob: -15.010895729064941

Token 1392: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00046153197763487697
    2. 'es' → logprob: -8.37546157836914
    3. '	gr' → logprob: -9.12546157836914
    4. 'gr' → logprob: -9.25046157836914
    5. '	es' → logprob: -11.25046157836914
    6. '   ' → logprob: -11.62546157836914
    7. '```' → logprob: -13.12546157836914
    8. ' es' → logprob: -13.87546157836914
    9. ' gr' → logprob: -15.00046157836914
    10. '(gr' → logprob: -15.50046157836914

Token 1393: ' gr' (ID: 984)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' (adapté à ' gr') → logprob: -0.024941513314843178
    2. 'es' → logprob: -3.7749414443969727
    3. '   ' → logprob: -6.399941444396973
    4. 'import' → logprob: -11.899941444396973
    5. '	gr' → logprob: -12.024941444396973
    6. '
' → logprob: -12.274941444396973
    7. 'INF' → logprob: -12.274941444396973
    8. 'def' → logprob: -12.649941444396973
    9. ' gr' → logprob: -12.774941444396973
    10. '    
' → logprob: -14.274941444396973

Token 1394: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05300969257950783
    2. '=' → logprob: -3.1780097484588623
    3. '.' → logprob: -5.178009510040283
    4. '   ' → logprob: -6.053009510040283
    5. ',' → logprob: -7.178009510040283
    6. '.add' → logprob: -7.928009510040283
    7. '.create' → logprob: -9.178009986877441
    8. '.=' → logprob: -9.178009986877441
    9. '.gr' → logprob: -9.178009986877441
    10. ')' → logprob: -9.428009986877441

Token 1395: ' create' (ID: 2501)
  Prédit: 'Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -0.7544462084770203
    2. 'default' → logprob: -1.379446268081665
    3. 'L' → logprob: -1.504446268081665
    4. 'create' → logprob: -3.754446268081665
    5. 'set' → logprob: -4.879446029663086
    6. 'None' → logprob: -5.004446029663086
    7. 'type' → logprob: -5.879446029663086
    8. ' defaultdict' → logprob: -5.879446029663086
    9. 'Default' → logprob: -6.254446029663086
    10. '[]' → logprob: -6.379446029663086

Token 1396: '_l' (ID: 1478)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.21267813444137573
    2. '_L' → logprob: -2.0876781940460205
    3. '_l' → logprob: -2.9626781940460205
    4. 'Queue' → logprob: -4.962677955627441
    5. 'Graph' → logprob: -5.587677955627441
    6. '_' → logprob: -6.962677955627441
    7. 'l' → logprob: -6.962677955627441
    8. ' L' → logprob: -7.212677955627441
    9. '(' → logprob: -7.337677955627441
    10. 'graph' → logprob: -7.837677955627441

Token 1397: 'ca' (ID: 3743)
  Prédit: 'CA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -0.16136854887008667
    2. 'ca' → logprob: -1.9113686084747314
    3. 'graph' → logprob: -7.911368370056152
    4. '   ' → logprob: -8.411368370056152
    5. 'ist' → logprob: -8.536368370056152
    6. 'a' → logprob: -9.661368370056152
    7. 'C' → logprob: -9.911368370056152
    8. 'c' → logprob: -10.286368370056152
    9. 'Graph' → logprob: -10.536368370056152
    10. '
' → logprob: -10.661368370056152

Token 1398: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0013830940006300807
    2. 'Graph' → logprob: -7.126383304595947
    3. '_graph' → logprob: -8.501382827758789
    4. 'graph' → logprob: -8.751382827758789
    5. '
' → logprob: -9.751382827758789
    6. '(Graph' → logprob: -10.126382827758789
    7. '(' → logprob: -10.251382827758789
    8. 'gr' → logprob: -11.001382827758789
    9. 'def' → logprob: -11.501382827758789
    10. ' =' → logprob: -11.876382827758789

Token 1399: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25431156158447266
    2. ')
' → logprob: -1.5043115615844727
    3. '())
' → logprob: -6.504311561584473
    4. '())' → logprob: -7.504311561584473
    5. '   ' → logprob: -8.504311561584473
    6. '()' → logprob: -9.254311561584473
    7. '()
' → logprob: -10.879311561584473
    8. ')
' → logprob: -11.504311561584473
    9. ')#' → logprob: -13.754311561584473
    10. ')`
' → logprob: -14.004311561584473

Token 1400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06222053989768028
    2. 'es' → logprob: -2.812220573425293
    3. ' es' → logprob: -8.312220573425293
    4. '	es' → logprob: -12.437220573425293
    5. '   ' → logprob: -13.437220573425293
    6. '    
' → logprob: -14.562220573425293
    7. '
' → logprob: -14.687220573425293
    8. '```' → logprob: -14.812220573425293
    9. ' ' → logprob: -15.562220573425293
    10. '  ' → logprob: -15.937220573425293

Token 1401: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' (adapté à ' es') → logprob: -0.0009345670696347952
    2. '   ' → logprob: -7.000934600830078
    3. ' es' → logprob: -10.750934600830078
    4. '	es' → logprob: -14.625934600830078
    5. 'gr' → logprob: -14.750934600830078
    6. ' ' → logprob: -15.750934600830078
    7. 'ans' → logprob: -15.875934600830078
    8. '
' → logprob: -16.250934600830078
    9. 'e' → logprob: -16.375934600830078
    10. '    
' → logprob: -16.625934600830078

Token 1402: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.523952066898346
    2. ' =' → logprob: -0.898952066898346
    3. ',' → logprob: -7.148952007293701
    4. '   ' → logprob: -10.89895248413086
    5. '=
' → logprob: -11.77395248413086
    6. '=[]' → logprob: -12.64895248413086
    7. 'for' → logprob: -12.89895248413086
    8. 'def' → logprob: -13.02395248413086
    9. '=[]
' → logprob: -13.14895248413086
    10. ',
' → logprob: -13.52395248413086

Token 1403: ' get' (ID: 717)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01739366725087166
    2. '[get' → logprob: -4.267393589019775
    3. 'get' → logprob: -5.767393589019775
    4. ' [[]' → logprob: -9.267394065856934
    5. '[[' → logprob: -12.892394065856934
    6. '[]' → logprob: -17.392393112182617
    7. ' get' → logprob: -17.767393112182617
    8. '.get' → logprob: -18.017393112182617
    9. '[
' → logprob: -18.017393112182617
    10. '[new' → logprob: -18.142393112182617

Token 1404: '_list' (ID: 4162)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005867998115718365
    2. '[N' → logprob: -5.755867958068848
    3. '([' → logprob: -7.130867958068848
    4. ' [[]' → logprob: -7.130867958068848
    5. '[]' → logprob: -7.380867958068848
    6. 'es' → logprob: -8.880867958068848
    7. '[n' → logprob: -9.630867958068848
    8. '(' → logprob: -9.880867958068848
    9. '[[' → logprob: -10.005867958068848
    10. '(N' → logprob: -10.380867958068848

Token 1405: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.014332612045109272
    2. '(n' → logprob: -4.5143327713012695
    3. 'n' → logprob: -7.2643327713012695
    4. '([]' → logprob: -7.7643327713012695
    5. '
' → logprob: -8.01433277130127
    6. '(N' → logprob: -8.13933277130127
    7. '   ' → logprob: -8.13933277130127
    8. '```' → logprob: -8.51433277130127
    9. '[]' → logprob: -8.88933277130127
    10. 'of' → logprob: -8.88933277130127

Token 1406: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.5054433941841125
    2. 'lists' → logprob: -1.0054433345794678
    3. 'es' → logprob: -3.5054433345794678
    4. 'list' → logprob: -8.255443572998047
    5. 'Lists' → logprob: -9.005443572998047
    6. 'of' → logprob: -9.130443572998047
    7. '
' → logprob: -9.380443572998047
    8. 's' → logprob: -9.630443572998047
    9. '_es' → logprob: -10.505443572998047
    10. 'ls' → logprob: -10.755443572998047

Token 1407: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -6.825890159234405e-05
    2. 'N' → logprob: -9.625068664550781
    3. '(' → logprob: -13.375068664550781
    4. '(
' → logprob: -15.875068664550781
    5. '((' → logprob: -15.875068664550781
    6. '(n' → logprob: -16.25006866455078
    7. ' (' → logprob: -16.87506866455078
    8. '
' → logprob: -17.50006866455078
    9. '[N' → logprob: -17.62506866455078
    10. '=N' → logprob: -17.75006866455078

Token 1408: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5760435461997986
    2. ')
' → logprob: -0.8260435461997986
    3. '   ' → logprob: -9.451043128967285
    4. '())
' → logprob: -11.451043128967285
    5. ')
' → logprob: -11.826043128967285
    6. 'def' → logprob: -12.576043128967285
    7. '())' → logprob: -13.326043128967285
    8. '()' → logprob: -14.701043128967285
    9. ')`
' → logprob: -14.826043128967285
    10. ')

' → logprob: -15.076043128967285

Token 1409: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29766878485679626
    2. 'qs' → logprob: -1.4226688146591187
    3. 'for' → logprob: -4.297668933868408
    4. ' for' → logprob: -6.297668933868408
    5. ' qs' → logprob: -7.172668933868408
    6. ' ' → logprob: -9.67266845703125
    7. '  ' → logprob: -10.54766845703125
    8. '```' → logprob: -10.79766845703125
    9. '
' → logprob: -11.67266845703125
    10. '   ' → logprob: -12.17266845703125

Token 1410: ' add' (ID: 1147)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.4401489198207855
    2. 'for' → logprob: -1.690148949623108
    3. 'add' (adapté à ' add') → logprob: -1.815148949623108
    4. 'ans' → logprob: -4.940148830413818
    5. '   ' → logprob: -7.065148830413818
    6. 'input' → logprob: -8.940149307250977
    7. 'cnt' → logprob: -8.940149307250977
    8. 'return' → logprob: -9.190149307250977
    9. '
' → logprob: -9.315149307250977
    10. 'answer' → logprob: -10.190149307250977

Token 1411: '_edges' (ID: 68870)
  Prédit: '(es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(es' → logprob: -0.4329022169113159
    2. 'es' → logprob: -1.682902216911316
    3. '_edges' → logprob: -2.0579023361206055
    4. 'edges' → logprob: -3.5579023361206055
    5. '_es' → logprob: -4.9329023361206055
    6. '(edges' → logprob: -7.5579023361206055
    7. '_' → logprob: -7.9329023361206055
    8. '_(' → logprob: -8.182902336120605
    9. '(gr' → logprob: -8.932902336120605
    10. '	es' → logprob: -8.932902336120605

Token 1412: '(gr' (ID: 64506)
  Prédit: '(gr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(gr' → logprob: -2.7610454708337784e-05
    2. '(es' → logprob: -10.500027656555176
    3. '(
' → logprob: -18.00002670288086
    4. 'gr' → logprob: -18.12502670288086
    5. '	gr' → logprob: -19.12502670288086
    6. '(graph' → logprob: -19.62502670288086
    7. ' (' → logprob: -20.00002670288086
    8. '(' → logprob: -20.25002670288086
    9. '```' → logprob: -21.00002670288086
    10. '
' → logprob: -21.12502670288086

Token 1413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7835754988482222e-05
    2. ' ,' → logprob: -11.250018119812012
    3. ',
' → logprob: -13.375018119812012
    4. '   ' → logprob: -14.000018119812012
    5. ' es' → logprob: -14.250018119812012
    6. '(es' → logprob: -14.875018119812012
    7. ')' → logprob: -14.875018119812012
    8. ',(' → logprob: -15.000018119812012
    9. '```' → logprob: -15.375018119812012
    10. 'es' → logprob: -15.625018119812012

Token 1414: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0019294669618830085
    2. ' es' → logprob: -6.25192928314209
    3. '
' → logprob: -14.62692928314209
    4. '	es' → logprob: -14.87692928314209
    5. '(es' → logprob: -16.251930236816406
    6. '
' → logprob: -16.751930236816406
    7. '_es' → logprob: -18.126930236816406
    8. 'esi' → logprob: -18.251930236816406
    9. '-es' → logprob: -19.001930236816406
    10. 'Es' → logprob: -19.126930236816406

Token 1415: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.081584716506768e-05
    2. ',N' → logprob: -11.000020980834961
    3. ' ,' → logprob: -12.750020980834961
    4. ',
' → logprob: -14.375020980834961
    5. '(N' → logprob: -14.875020980834961
    6. ',input' → logprob: -16.50002098083496
    7. '=' → logprob: -17.00002098083496
    8. ',n' → logprob: -17.25002098083496
    9. ',
' → logprob: -18.12502098083496
    10. ',Q' → logprob: -18.25002098083496

Token 1416: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.190178904333152e-05
    2. 'input' → logprob: -10.500031471252441
    3. ' N' → logprob: -12.500031471252441
    4. '   ' → logprob: -14.750031471252441
    5. '	N' → logprob: -15.750031471252441
    6. '```' → logprob: -17.625032424926758
    7. ' input' → logprob: -18.125032424926758
    8. '[N' → logprob: -18.500032424926758
    9. '_N' → logprob: -19.000032424926758
    10. '
' → logprob: -19.875032424926758

Token 1417: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022519570775330067
    2. ',input' → logprob: -6.127252101898193
    3. ' ,' → logprob: -10.002251625061035
    4. 'input' → logprob: -10.877251625061035
    5. '(input' → logprob: -13.627251625061035
    6. '   ' → logprob: -14.627251625061035
    7. ',
' → logprob: -14.877251625061035
    8. ' input' → logprob: -15.002251625061035
    9. '=input' → logprob: -16.37725257873535
    10. ')' → logprob: -16.37725257873535

Token 1418: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002613358374219388
    2. ' input' → logprob: -8.250261306762695
    3. '(input' → logprob: -22.500261306762695
    4. '=input' → logprob: -23.000261306762695
    5. '_input' → logprob: -23.125261306762695
    6. '<input' → logprob: -23.625261306762695
    7. '	input' → logprob: -23.625261306762695
    8. 'Input' → logprob: -23.875261306762695
    9. '[input' → logprob: -24.000261306762695
    10. '   ' → logprob: -24.000261306762695

Token 1419: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00012368128227535635
    2. 'func' → logprob: -9.000123977661133
    3. 'Func' → logprob: -15.250123977661133
    4. '_FUNC' → logprob: -17.375123977661133
    5. '_funcs' → logprob: -19.375123977661133
    6. '```' → logprob: -19.625123977661133
    7. '
' → logprob: -19.750123977661133
    8. ')' → logprob: -20.000123977661133
    9. 'f' → logprob: -20.125123977661133
    10. '_f' → logprob: -20.250123977661133

Token 1420: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001290454383706674
    2. ')
' → logprob: -9.000128746032715
    3. '   ' → logprob: -13.000128746032715
    4. ' )' → logprob: -13.375128746032715
    5. ')return' → logprob: -13.750128746032715
    6. ')#' → logprob: -15.750128746032715
    7. '))' → logprob: -16.50012969970703
    8. ')

' → logprob: -16.50012969970703
    9. '
' → logprob: -17.00012969970703
    10. ')
' → logprob: -17.00012969970703

Token 1421: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024037064576987177
    2. 'def' → logprob: -9.125240325927734
    3. '
' → logprob: -9.250240325927734
    4. '<|end|>' → logprob: -11.625240325927734
    5. '       ' → logprob: -12.125240325927734
    6. '    
' → logprob: -12.500240325927734
    7. ' return' → logprob: -12.750240325927734
    8. '```' → logprob: -12.875240325927734
    9. 'q' → logprob: -13.125240325927734
    10. 'return' → logprob: -13.250240325927734

Token 1422: ' gr' (ID: 984)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.004409348126500845
    2. '   ' → logprob: -5.629409313201904
    3. 'ans' → logprob: -7.754409313201904
    4. 'Q' → logprob: -8.254409790039062
    5. 'return' → logprob: -10.254409790039062
    6. ' qs' → logprob: -10.379409790039062
    7. 'Qs' → logprob: -11.129409790039062
    8. 'q' → logprob: -11.504409790039062
    9. '
' → logprob: -11.879409790039062
    10. 'QS' → logprob: -12.129409790039062

Token 1423: '.init' (ID: 14930)
  Prédit: '.build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.build' → logprob: -0.462182879447937
    2. '.init' → logprob: -2.0871829986572266
    3. '.prepare' → logprob: -2.2121829986572266
    4. '.initialize' → logprob: -2.5871829986572266
    5. '.calc' → logprob: -4.212182998657227
    6. '.pre' → logprob: -4.587182998657227
    7. '.setup' → logprob: -4.837182998657227
    8. '.process' → logprob: -5.587182998657227
    9. '.compute' → logprob: -5.587182998657227
    10. '.make' → logprob: -5.712182998657227

Token 1424: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018052493687719107
    2. '(N' → logprob: -7.876805305480957
    3. '_' → logprob: -8.001805305480957
    4. '()
' → logprob: -8.126805305480957
    5. 'iate' → logprob: -8.126805305480957
    6. '()`' → logprob: -8.501805305480957
    7. '_depth' → logprob: -9.876805305480957
    8. '(' → logprob: -10.251805305480957
    9. '_parent' → logprob: -10.251805305480957
    10. '_tree' → logprob: -10.876805305480957

Token 1425: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015429535415023565
    2. 'qs' → logprob: -7.251543045043945
    3. 'def' → logprob: -7.251543045043945
    4. '
' → logprob: -9.751543045043945
    5. ' qs' → logprob: -10.501543045043945
    6. '```' → logprob: -11.626543045043945
    7. '    
' → logprob: -11.876543045043945
    8. '   ' → logprob: -12.251543045043945
    9. '       ' → logprob: -12.876543045043945
    10. '<|end|>' → logprob: -13.001543045043945

Token 1426: ' ans' (ID: 3345)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.0026362957432866096
    2. '   ' → logprob: -6.127636432647705
    3. 'Q' → logprob: -8.252635955810547
    4. 'ans' (adapté à ' ans') → logprob: -9.377635955810547
    5. 'Qs' → logprob: -10.377635955810547
    6. ' qs' → logprob: -10.627635955810547
    7. 'return' → logprob: -11.252635955810547
    8. 'QS' → logprob: -11.377635955810547
    9. '
' → logprob: -11.752635955810547
    10. 'q' → logprob: -12.627635955810547

Token 1427: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.228324294090271
    2. '=' → logprob: -1.603324294090271
    3. ',' → logprob: -5.8533244132995605
    4. '[' → logprob: -11.103323936462402
    5. '=[]' → logprob: -12.103323936462402
    6. ')' → logprob: -12.728323936462402
    7. '[:]' → logprob: -13.103323936462402
    8. ':' → logprob: -13.103323936462402
    9. '   ' → logprob: -13.853323936462402
    10. ' ' → logprob: -14.103323936462402

Token 1428: ' get' (ID: 717)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03807936608791351
    2. '[get' → logprob: -3.288079261779785
    3. ' [' → logprob: -10.663079261779785
    4. 'get' → logprob: -11.413079261779785
    5. '[N' → logprob: -13.163079261779785
    6. '[-' → logprob: -14.413079261779785
    7. '   ' → logprob: -15.038079261779785
    8. '{' → logprob: -15.413079261779785
    9. '[int' → logprob: -16.4130802154541
    10. '[m' → logprob: -17.0380802154541

Token 1429: '_zero' (ID: 53468)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005145281553268433
    2. '[get' → logprob: -5.505145072937012
    3. '_list' → logprob: -8.130145072937012
    4. 'get' → logprob: -8.255145072937012
    5. '_zero' → logprob: -8.630145072937012
    6. '[N' → logprob: -8.880145072937012
    7. ' [' → logprob: -9.130145072937012
    8. '[L' → logprob: -10.505145072937012
    9. '([' → logprob: -11.005145072937012
    10. '[List' → logprob: -11.755145072937012

Token 1430: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.003474032273516059
    2. '(Q' → logprob: -6.378474235534668
    3. '[' → logprob: -7.128474235534668
    4. 'List' → logprob: -7.753474235534668
    5. 'list' → logprob: -7.753474235534668
    6. '([' → logprob: -10.128474235534668
    7. '(N' → logprob: -10.503474235534668
    8. '[N' → logprob: -10.628474235534668
    9. '_array' → logprob: -12.003474235534668
    10. 's' → logprob: -12.253474235534668

Token 1431: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.0001097417771234177
    2. 'Q' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.250109672546387
    4. '(' → logprob: -15.375109672546387
    5. '	Q' → logprob: -15.750109672546387
    6. '[' → logprob: -16.250110626220703
    7. ' (' → logprob: -16.875110626220703
    8. ' Q' → logprob: -16.875110626220703
    9. '(
' → logprob: -17.500110626220703
    10. '((' → logprob: -17.875110626220703

Token 1432: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10021820664405823
    2. ')
' → logprob: -2.3502182960510254
    3. ')
' → logprob: -11.725217819213867
    4. '   ' → logprob: -13.100217819213867
    5. ' )' → logprob: -14.850217819213867
    6. '()' → logprob: -14.850217819213867
    7. ')return' → logprob: -15.475217819213867
    8. ' )
' → logprob: -15.975217819213867
    9. '())' → logprob: -16.100217819213867
    10. '())
' → logprob: -16.100217819213867

Token 1433: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4291731119155884
    2. 'qs' → logprob: -1.0541731119155884
    3. ' qs' → logprob: -8.429173469543457
    4. 'return' → logprob: -8.554173469543457
    5. ' ' → logprob: -10.929173469543457
    6. 'def' → logprob: -11.554173469543457
    7. '```' → logprob: -11.554173469543457
    8. '
' → logprob: -11.804173469543457
    9. '  ' → logprob: -12.804173469543457
    10. '   ' → logprob: -13.054173469543457

Token 1434: ' qs' (ID: 75083)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' (adapté à ' qs') → logprob: -0.00023965541913639754
    2. 'return' → logprob: -8.375239372253418
    3. '   ' → logprob: -11.875239372253418
    4. ' qs' → logprob: -14.250239372253418
    5. 'q' → logprob: -15.000239372253418
    6. '```' → logprob: -15.000239372253418
    7. 'Qs' → logprob: -15.500239372253418
    8. 'cx' → logprob: -15.625239372253418
    9. 'qx' → logprob: -15.750239372253418
    10. '#' → logprob: -16.250240325927734

Token 1435: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868735730648041
    2. ' =' → logprob: -1.1368736028671265
    3. '=get' → logprob: -13.511873245239258
    4. '=create' → logprob: -14.261873245239258
    5. '＝' → logprob: -15.886873245239258
    6. ',' → logprob: -15.886873245239258
    7. ' ' → logprob: -16.636873245239258
    8. '   ' → logprob: -16.886873245239258
    9. '=query' → logprob: -17.011873245239258
    10. '=q' → logprob: -17.636873245239258

Token 1436: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.2471589798224159e-05
    2. '[get' → logprob: -11.750012397766113
    3. ' get' → logprob: -13.000012397766113
    4. '[' → logprob: -13.000012397766113
    5. ' [[]' → logprob: -17.50001335144043
    6. '(get' → logprob: -17.87501335144043
    7. '	get' → logprob: -18.75001335144043
    8. '.get' → logprob: -19.00001335144043
    9. '   ' → logprob: -19.12501335144043
    10. '[[' → logprob: -20.12501335144043

Token 1437: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.2233183042553719e-05
    2. 'list' → logprob: -11.375012397766113
    3. '_lists' → logprob: -14.875012397766113
    4. 'empty' → logprob: -16.750011444091797
    5. 'List' → logprob: -17.000011444091797
    6. 'get' → logprob: -17.250011444091797
    7. 'n' → logprob: -17.500011444091797
    8. 's' → logprob: -18.000011444091797
    9. '```' → logprob: -18.000011444091797
    10. '   ' → logprob: -18.875011444091797

Token 1438: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -7.3458322731312364e-06
    2. '_lists' → logprob: -13.250007629394531
    3. 'list' → logprob: -13.750007629394531
    4. 's' → logprob: -14.000007629394531
    5. 'lists' → logprob: -14.125007629394531
    6. 'n' → logprob: -14.125007629394531
    7. 'def' → logprob: -14.625007629394531
    8. 'of' → logprob: -15.000007629394531
    9. '_q' → logprob: -15.250007629394531
    10. '[]' → logprob: -15.250007629394531

Token 1439: '_lists' (ID: 93609)
  Prédit: 'lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lists' → logprob: -0.47413310408592224
    2. '_lists' → logprob: -0.9741331338882446
    3. 'Lists' → logprob: -10.224133491516113
    4. 'ists' → logprob: -12.349133491516113
    5. 'list' → logprob: -12.349133491516113
    6. '
' → logprob: -12.474133491516113
    7. '(n' → logprob: -13.224133491516113
    8. 'n' → logprob: -13.849133491516113
    9. ' lists' → logprob: -13.974133491516113
    10. 'for' → logprob: -14.599133491516113

Token 1440: '(N' (ID: 10564)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.002505982294678688
    2. '(N' → logprob: -6.002505779266357
    3. 'Q' → logprob: -10.502506256103516
    4. '(' → logprob: -13.127506256103516
    5. 'N' → logprob: -15.127506256103516
    6. ' (' → logprob: -15.502506256103516
    7. '((' → logprob: -16.127506256103516
    8. '   ' → logprob: -16.502506256103516
    9. '	Q' → logprob: -16.752506256103516
    10. '(
' → logprob: -17.127506256103516

Token 1441: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08026185631752014
    2. ')' → logprob: -3.0802619457244873
    3. '()
' → logprob: -4.205261707305908
    4. '()' → logprob: -4.830261707305908
    5. '   ' → logprob: -5.205261707305908
    6. '())
' → logprob: -5.955261707305908
    7. '())' → logprob: -9.830262184143066
    8. 'def' → logprob: -10.330262184143066
    9. ')
' → logprob: -10.830262184143066
    10. ' )
' → logprob: -10.955262184143066

Token 1442: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017361093778163195
    2. 'def' → logprob: -7.001736164093018
    3. 'for' → logprob: -7.251736164093018
    4. '
' → logprob: -10.00173568725586
    5. '<|end|>' → logprob: -10.37673568725586
    6. ' for' → logprob: -11.00173568725586
    7. 'return' → logprob: -11.37673568725586
    8. '```' → logprob: -13.00173568725586
    9. 'import' → logprob: -13.12673568725586
    10. '    
' → logprob: -13.25173568725586

Token 1443: ' create' (ID: 2501)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09527309983968735
    2. 'create' (adapté à ' create') → logprob: -2.470273017883301
    3. 'def' → logprob: -5.970273017883301
    4. 'return' → logprob: -6.220273017883301
    5. '   ' → logprob: -6.345273017883301
    6. ' for' → logprob: -11.3452730178833
    7. '```' → logprob: -13.8452730178833
    8. '
' → logprob: -14.2202730178833
    9. ' create' → logprob: -14.3452730178833
    10. '	for' → logprob: -14.4702730178833

Token 1444: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -1.1160349458805285e-05
    2. 'L' → logprob: -12.000011444091797
    3. '```' → logprob: -12.875011444091797
    4. '`' → logprob: -14.375011444091797
    5. '(L' → logprob: -15.000011444091797
    6. '_C' → logprob: -15.625011444091797
    7. '_Q' → logprob: -15.625011444091797
    8. '(_' → logprob: -15.875011444091797
    9. '_queries' → logprob: -16.125011444091797
    10. '_S' → logprob: -16.500011444091797

Token 1445: 'CA' (ID: 6781)
  Prédit: 'CA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -3.35706390615087e-05
    2. 'C' → logprob: -11.625033378601074
    3. '_CA' → logprob: -12.000033378601074
    4. 'A' → logprob: -12.875033378601074
    5. 'create' → logprob: -13.000033378601074
    6. '_C' → logprob: -13.250033378601074
    7. 'ca' → logprob: -13.375033378601074
    8. 'L' → logprob: -13.500033378601074
    9. '   ' → logprob: -13.750033378601074
    10. 'LA' → logprob: -14.000033378601074

Token 1446: '_queries' (ID: 172558)
  Prédit: '_queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queries' → logprob: -2.165027217415627e-05
    2. 'queries' → logprob: -10.750021934509277
    3. '_questions' → logprob: -15.875021934509277
    4. '_query' → logprob: -17.25002098083496
    5. 'Queries' → logprob: -17.37502098083496
    6. '_requests' → logprob: -17.62502098083496
    7. ' queries' → logprob: -18.12502098083496
    8. '
' → logprob: -18.62502098083496
    9. '```' → logprob: -19.12502098083496
    10. '_q' → logprob: -19.25002098083496

Token 1447: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.625
    3. ' (' → logprob: -17.5
    4. '(Qt' → logprob: -18.625
    5. '(
' → logprob: -18.75
    6. 'Q' → logprob: -20.25
    7. '```' → logprob: -20.375
    8. '(q' → logprob: -20.5
    9. '((' → logprob: -20.625
    10. '   ' → logprob: -20.75

Token 1448: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005981292575597763
    2. '(gr' → logprob: -5.1309814453125
    3. ',
' → logprob: -10.5059814453125
    4. ' ,' → logprob: -11.6309814453125
    5. ')' → logprob: -11.7559814453125
    6. '(' → logprob: -12.6309814453125
    7. '
' → logprob: -12.8809814453125
    8. ',(' → logprob: -14.1309814453125
    9. ',q' → logprob: -14.2559814453125
    10. '```' → logprob: -14.7559814453125

Token 1449: ' gr' (ID: 984)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.030857983976602554
    2. 'qs' → logprob: -4.030858039855957
    3. ' gr' → logprob: -4.530858039855957
    4. 'es' → logprob: -6.405858039855957
    5. ' qs' → logprob: -9.030858039855957
    6. ' es' → logprob: -10.155858039855957
    7. 'gs' → logprob: -10.780858039855957
    8. '   ' → logprob: -11.280858039855957
    9. '	gr' → logprob: -12.780858039855957
    10. '
' → logprob: -13.155858039855957

Token 1450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.114600834436715e-05
    2. ' ,' → logprob: -10.250091552734375
    3. ',
' → logprob: -10.625091552734375
    4. ',q' → logprob: -11.125091552734375
    5. '(gr' → logprob: -11.875091552734375
    6. '(q' → logprob: -12.750091552734375
    7. '
' → logprob: -13.375091552734375
    8. 'qs' → logprob: -14.000091552734375
    9. '   ' → logprob: -14.000091552734375
    10. ' es' → logprob: -14.250091552734375

Token 1451: ' ans' (ID: 3345)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.0009118211455643177
    2. ' qs' → logprob: -7.000911712646484
    3. '
' → logprob: -15.500911712646484
    4. '   ' → logprob: -16.625911712646484
    5. 'q' → logprob: -18.000911712646484
    6. 'Qs' → logprob: -18.625911712646484
    7. 'ques' → logprob: -19.125911712646484
    8. '
' → logprob: -19.250911712646484
    9. '       ' → logprob: -19.875911712646484
    10. '```' → logprob: -19.875911712646484

Token 1452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001085497424355708
    2. ' ,' → logprob: -9.37510871887207
    3. ',q' → logprob: -10.87510871887207
    4. ',
' → logprob: -12.75010871887207
    5. '   ' → logprob: -14.25010871887207
    6. '=' → logprob: -15.37510871887207
    7. 'q' → logprob: -15.87510871887207
    8. '```' → logprob: -16.00010871887207
    9. 'qs' → logprob: -16.12510871887207
    10. '_,' → logprob: -16.25010871887207

Token 1453: ' qs' (ID: 75083)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.003177952254191041
    2. ' qs' → logprob: -5.753178119659424
    3. '
' → logprob: -15.878177642822266
    4. 'q' → logprob: -17.003177642822266
    5. '
' → logprob: -17.378177642822266
    6. 'Qs' → logprob: -18.378177642822266
    7. 'ques' → logprob: -18.753177642822266
    8. 'es' → logprob: -19.128177642822266
    9. '   ' → logprob: -19.253177642822266
    10. ' ' → logprob: -19.503177642822266

Token 1454: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004952482995577157
    2. ',input' → logprob: -7.625495433807373
    3. ' ,' → logprob: -11.875494956970215
    4. 'input' → logprob: -16.50049591064453
    5. '   ' → logprob: -16.62549591064453
    6. '(input' → logprob: -17.25049591064453
    7. ',
' → logprob: -17.62549591064453
    8. '```' → logprob: -17.75049591064453
    9. ')' → logprob: -18.37549591064453
    10. '=input' → logprob: -18.62549591064453

Token 1455: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011047814972698689
    2. ' input' → logprob: -4.511047840118408
    3. '(input' → logprob: -19.26104736328125
    4. '[input' → logprob: -19.38604736328125
    5. '_input' → logprob: -19.76104736328125
    6. '	input' → logprob: -19.88604736328125
    7. '=input' → logprob: -20.38604736328125
    8. ',input' → logprob: -20.38604736328125
    9. '<input' → logprob: -20.88604736328125
    10. 'Input' → logprob: -21.26104736328125

Token 1456: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.0002036595979006961
    2. 'func' → logprob: -8.500204086303711
    3. 'Func' → logprob: -16.87520408630371
    4. '_FUNC' → logprob: -17.50020408630371
    5. '_function' → logprob: -17.75020408630371
    6. '_fun' → logprob: -18.87520408630371
    7. 'f' → logprob: -19.00020408630371
    8. '_input' → logprob: -19.12520408630371
    9. '	func' → logprob: -19.75020408630371
    10. '```' → logprob: -19.87520408630371

Token 1457: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001470822375267744
    2. ')
' → logprob: -6.751471042633057
    3. '   ' → logprob: -8.126470565795898
    4. ' )' → logprob: -13.501470565795898
    5. ')return' → logprob: -13.501470565795898
    6. '`)' → logprob: -15.501470565795898
    7. ')
' → logprob: -15.501470565795898
    8. '()' → logprob: -15.751470565795898
    9. ')#' → logprob: -15.751470565795898
    10. ')`' → logprob: -15.876470565795898

Token 1458: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0056337895803153515
    2. '<|end|>' → logprob: -6.00563383102417
    3. '	return' → logprob: -6.13063383102417
    4. '
' → logprob: -7.88063383102417
    5. '    
' → logprob: -8.505633354187012
    6. ')' → logprob: -8.755633354187012
    7. 'return' → logprob: -9.380633354187012
    8. '<|end|>' → logprob: -10.130633354187012
    9. 'def' → logprob: -11.005633354187012
    10. '[' → logprob: -11.005633354187012

Token 1459: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01826021820306778
    2. 'return' (adapté à ' return') → logprob: -4.0182600021362305
    3. 'def' → logprob: -9.76826000213623
    4. ' return' → logprob: -10.01826000213623
    5. '	return' → logprob: -12.64326000213623
    6. '
' → logprob: -12.76826000213623
    7. '```' → logprob: -14.01826000213623
    8. '    
' → logprob: -15.14326000213623
    9. 'import' → logprob: -15.39326000213623
    10. '       ' → logprob: -15.51826000213623

Token 1460: ' gr' (ID: 984)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.05573355033993721
    2. ' gr' → logprob: -2.9307334423065186
    3. '(gr' → logprob: -7.555733680725098
    4. 'es' → logprob: -8.180733680725098
    5. ' es' → logprob: -10.930733680725098
    6. '(es' → logprob: -11.305733680725098
    7. '   ' → logprob: -12.305733680725098
    8. '(' → logprob: -12.555733680725098
    9. '	gr' → logprob: -12.680733680725098
    10. ' (' → logprob: -13.055733680725098

Token 1461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012070851516909897
    2. 'def' → logprob: -10.000121116638184
    3. 'es' → logprob: -10.625121116638184
    4. '<|end|>' → logprob: -11.375121116638184
    5. ' es' → logprob: -11.625121116638184
    6. ' ,' → logprob: -11.750121116638184
    7. ',
' → logprob: -11.750121116638184
    8. 'import' → logprob: -13.000121116638184
    9. '	es' → logprob: -13.125121116638184
    10. '_,' → logprob: -13.125121116638184

Token 1462: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -9.686778503237292e-05
    2. ' es' → logprob: -9.250097274780273
    3. 'ans' → logprob: -15.625097274780273
    4. 'Q' → logprob: -15.625097274780273
    5. '(es' → logprob: -15.750097274780273
    6. 'N' → logprob: -17.125097274780273
    7. 'ES' → logprob: -17.500097274780273
    8. 'esh' → logprob: -17.500097274780273
    9. 'Es' → logprob: -18.000097274780273
    10. '	es' → logprob: -18.125097274780273

Token 1463: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1464: ' ans' (ID: 3345)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.07032841444015503
    2. 'ans' → logprob: -2.6953284740448
    3. ' qs' → logprob: -8.570328712463379
    4. ' ans' → logprob: -9.195328712463379
    5. 'Q' → logprob: -9.695328712463379
    6. 'Qs' → logprob: -10.945328712463379
    7. 'cnt' → logprob: -11.570328712463379
    8. 'ques' → logprob: -11.820328712463379
    9. 'q' → logprob: -13.570328712463379
    10. '(ans' → logprob: -14.570328712463379

Token 1465: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1466: ' qs' (ID: 75083)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.0007177923689596355
    2. ' qs' → logprob: -7.250717639923096
    3. 'Qs' → logprob: -12.375718116760254
    4. 'Q' → logprob: -12.750718116760254
    5. 'q' → logprob: -15.125718116760254
    6. '   ' → logprob: -15.875718116760254
    7. 'QS' → logprob: -16.000717163085938
    8. ' ' → logprob: -16.125717163085938
    9. '
' → logprob: -17.000717163085938
    10. ' Q' → logprob: -17.125717163085938

Token 1467: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.001255230512470007
    2. '<|end|>' → logprob: -7.126255035400391
    3. ' class' → logprob: -8.37625503540039
    4. 'def' → logprob: -9.37625503540039
    5. '
' → logprob: -9.75125503540039
    6. 'import' → logprob: -10.12625503540039
    7. '#' → logprob: -11.62625503540039
    8. '<|end|>' → logprob: -11.87625503540039
    9. 'from' → logprob: -12.50125503540039
    10. ')' → logprob: -12.75125503540039

Token 1468: 'def' (ID: 1314)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.001904127886518836
    2. 'def' → logprob: -6.626904010772705
    3. 'import' → logprob: -8.501904487609863
    4. '<|end|>' → logprob: -8.626904487609863
    5. '#' → logprob: -9.251904487609863
    6. '```' → logprob: -10.501904487609863
    7. ' class' → logprob: -10.751904487609863
    8. '
' → logprob: -10.876904487609863
    9. '<|end|>' → logprob: -11.126904487609863
    10. 'from' → logprob: -11.751904487609863

Token 1469: ' initialize' (ID: 18400)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1797802895307541
    2. ' main' → logprob: -1.8047802448272705
    3. '__' → logprob: -11.804780006408691
    4. '_main' → logprob: -12.054780006408691
    5. 'def' → logprob: -12.179780006408691
    6. 'm' → logprob: -12.304780006408691
    7. 'solve' → logprob: -12.804780006408691
    8. ' solve' → logprob: -13.304780006408691
    9. ' __' → logprob: -13.679780006408691
    10. 'process' → logprob: -13.679780006408691

Token 1470: '_count' (ID: 7536)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.9558528065681458
    2. '_cnt' → logprob: -1.705852746963501
    3. '(cnt' → logprob: -1.830852746963501
    4. 'def' → logprob: -2.330852746963501
    5. '_counter' → logprob: -3.080852746963501
    6. '_c' → logprob: -3.080852746963501
    7. '(' → logprob: -4.08085298538208
    8. '_counts' → logprob: -4.08085298538208
    9. '_variables' → logprob: -4.45585298538208
    10. '(
' → logprob: -5.20585298538208

Token 1471: '_sum' (ID: 29859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0010448360117152333
    2. ' =' → logprob: -7.126044750213623
    3. ',' → logprob: -8.876045227050781
    4. '=' → logprob: -10.626045227050781
    5. '_and' → logprob: -10.626045227050781
    6. '   ' → logprob: -12.001045227050781
    7. '_arrays' → logprob: -12.126045227050781
    8. '_,' → logprob: -12.251045227050781
    9. '_s' → logprob: -12.626045227050781
    10. '_c' → logprob: -12.626045227050781

Token 1472: '(N' (ID: 10564)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.21899013221263885
    2. '():
' → logprob: -1.9689900875091553
    3. '(cnt' → logprob: -3.0939900875091553
    4. 's' → logprob: -4.968990325927734
    5. '()' → logprob: -6.343990325927734
    6. '(N' → logprob: -6.593990325927734
    7. '_' → logprob: -7.718990325927734
    8. '(n' → logprob: -8.468990325927734
    9. '(' → logprob: -8.718990325927734
    10. 'def' → logprob: -9.218990325927734

Token 1473: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05581619590520859
    2. '):' → logprob: -2.930816173553467
    3. ',' → logprob: -7.180816173553467
    4. '):
' → logprob: -9.180816650390625
    5. ')' → logprob: -10.680816650390625
    6. '():
' → logprob: -11.055816650390625
    7. '(N' → logprob: -11.805816650390625
    8. '=' → logprob: -12.430816650390625
    9. 'def' → logprob: -12.555816650390625
    10. '   ' → logprob: -12.805816650390625

Token 1474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007130279554985464
    2. 'cnt' → logprob: -7.500712871551514
    3. 'return' → logprob: -8.750713348388672
    4. '(cnt' → logprob: -14.500713348388672
    5. ' return' → logprob: -14.750713348388672
    6. 'def' → logprob: -15.750713348388672
    7. ' cnt' → logprob: -15.875713348388672
    8. '```' → logprob: -15.875713348388672
    9. '	cnt' → logprob: -15.875713348388672
    10. '   ' → logprob: -16.000713348388672

Token 1475: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.1102229654788971
    2. 'return' → logprob: -2.3602230548858643
    3. '   ' → logprob: -4.610222816467285
    4. ' cnt' → logprob: -11.860222816467285
    5. ' return' → logprob: -11.985222816467285
    6. '	cnt' → logprob: -13.985222816467285
    7. 'count' → logprob: -14.110222816467285
    8. 'from' → logprob: -14.860222816467285
    9. 'counter' → logprob: -14.860222816467285
    10. '(cnt' → logprob: -15.110222816467285

Token 1476: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16027621924877167
    2. ' =' → logprob: -1.910276174545288
    3. '=[' → logprob: -10.535276412963867
    4. ',' → logprob: -11.410276412963867
    5. '   ' → logprob: -11.660276412963867
    6. '=[]' → logprob: -13.160276412963867
    7. ' =[' → logprob: -14.410276412963867
    8. '＝' → logprob: -14.660276412963867
    9. '```' → logprob: -15.035276412963867
    10. '=[]
' → logprob: -15.160276412963867

Token 1477: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010735217481851578
    2. 'default' → logprob: -4.885735034942627
    3. '[get' → logprob: -6.260735034942627
    4. 'get' → logprob: -6.885735034942627
    5. ' [' → logprob: -8.760735511779785
    6. '{' → logprob: -10.760735511779785
    7. ' defaultdict' → logprob: -12.510735511779785
    8. '[M' → logprob: -12.635735511779785
    9. 'Counter' → logprob: -12.885735511779785
    10. '{}' → logprob: -13.510735511779785

Token 1478: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.250001907348633
    3. '[' → logprob: -15.625001907348633
    4. 'default' → logprob: -16.250001907348633
    5. '   ' → logprob: -16.750001907348633
    6. 'get' → logprob: -17.125001907348633
    7. '```' → logprob: -17.125001907348633
    8. 'N' → logprob: -17.375001907348633
    9. '(' → logprob: -17.500001907348633
    10. ']' → logprob: -17.750001907348633

Token 1479: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010919779539108276
    2. ']*(' → logprob: -5.260919570922852
    3. ' for' → logprob: -5.635919570922852
    4. ']*' → logprob: -6.260919570922852
    5. 'for' → logprob: -9.135919570922852
    6. ' *' → logprob: -10.760919570922852
    7. '*(' → logprob: -10.760919570922852
    8. ' ]' → logprob: -10.760919570922852
    9. '*' → logprob: -11.385919570922852
    10. '(N' → logprob: -12.635919570922852

Token 1480: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3829098641872406
    2. '*' → logprob: -1.382909893989563
    3. '*(' → logprob: -3.5079097747802734
    4. ' for' → logprob: -4.382909774780273
    5. 'def' → logprob: -4.757909774780273
    6. ',' → logprob: -5.257909774780273
    7. '*N' → logprob: -5.757909774780273
    8. ')' → logprob: -6.507909774780273
    9. 'for' → logprob: -6.632909774780273
    10. '(N' → logprob: -7.257909774780273

Token 1481: ' N' (ID: 478)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.82131028175354
    2. '(' → logprob: -0.94631028175354
    3. '(M' → logprob: -1.94631028175354
    4. 'N' → logprob: -4.196310043334961
    5. '100' → logprob: -5.696310043334961
    6. '101' → logprob: -5.696310043334961
    7. '(MAX' → logprob: -6.071310043334961
    8. '501' → logprob: -6.821310043334961
    9. '500' → logprob: -7.321310043334961
    10. ' (' → logprob: -7.321310043334961

Token 1482: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06377603113651276
    2. ',' → logprob: -3.1887760162353516
    3. ' 
' → logprob: -4.188776016235352
    4. ',
' → logprob: -5.938776016235352
    5. '  
' → logprob: -6.813776016235352
    6. ' ,' → logprob: -7.313776016235352
    7. '    
' → logprob: -7.938776016235352
    8. '	
' → logprob: -8.813776016235352
    9. '   ' → logprob: -8.938776016235352
    10. '   
' → logprob: -9.563776016235352

Token 1483: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3872743248939514
    2. 'sum' → logprob: -1.1372742652893066
    3. ' sum' → logprob: -8.137274742126465
    4. '	sum' → logprob: -9.387274742126465
    5. ',sum' → logprob: -11.137274742126465
    6. '
' → logprob: -11.762274742126465
    7. '_sum' → logprob: -13.762274742126465
    8. ',' → logprob: -14.012274742126465
    9. '   ' → logprob: -14.387274742126465
    10. '(sum' → logprob: -14.512274742126465

Token 1484: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -1.6240566083070007e-06
    2. ' sum' → logprob: -13.625001907348633
    3. '   ' → logprob: -14.750001907348633
    4. '
' → logprob: -18.750001907348633
    5. 'return' → logprob: -19.000001907348633
    6. ' ' → logprob: -21.125001907348633
    7. '  ' → logprob: -21.250001907348633
    8. '	sum' → logprob: -21.750001907348633
    9. '```' → logprob: -22.500001907348633
    10. '(sum' → logprob: -23.375001907348633

Token 1485: '_' (ID: 62)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6516580581665039
    2. '_' → logprob: -0.7766580581665039
    3. '_=' → logprob: -4.401658058166504
    4. ' =' → logprob: -5.026658058166504
    5. '   ' → logprob: -10.276658058166504
    6. '_[' → logprob: -11.651658058166504
    7. '[' → logprob: -12.776658058166504
    8. '=[' → logprob: -12.776658058166504
    9. '_
' → logprob: -13.026658058166504
    10. ' ' → logprob: -13.276658058166504

Token 1486: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008614926598966122
    2. ' =' → logprob: -4.758615016937256
    3. '=
' → logprob: -15.258614540100098
    4. ',' → logprob: -16.258615493774414
    5. '[' → logprob: -17.133615493774414
    6. ')' → logprob: -17.383615493774414
    7. '   ' → logprob: -17.883615493774414
    8. '<|end|>' → logprob: -17.883615493774414
    9. '=[' → logprob: -18.008615493774414
    10. '＝' → logprob: -18.258615493774414

Token 1487: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00038229089113883674
    2. ' [' → logprob: -7.875382423400879
    3. 'cnt' → logprob: -14.000382423400879
    4. '0' → logprob: -14.500382423400879
    5. '[N' → logprob: -14.750382423400879
    6. '[cnt' → logprob: -14.875382423400879
    7. '   ' → logprob: -16.375381469726562
    8. ' ' → logprob: -17.625381469726562
    9. '([' → logprob: -17.750381469726562
    10. '[count' → logprob: -18.000381469726562

Token 1488: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01818072982132435
    2. '[' → logprob: -4.018180847167969
    3. ' [' → logprob: -10.768180847167969
    4. ' ' → logprob: -11.893180847167969
    5. '[N' → logprob: -13.018180847167969
    6. '   ' → logprob: -15.018180847167969
    7. 'N' → logprob: -15.643180847167969
    8. '(' → logprob: -15.768180847167969
    9. '000' → logprob: -17.89318084716797
    10. ')' → logprob: -18.14318084716797

Token 1489: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007207371760159731
    2. ' *' → logprob: -5.38220739364624
    3. '*' → logprob: -6.63220739364624
    4. ' ]' → logprob: -7.25720739364624
    5. ']*' → logprob: -8.132206916809082
    6. '   ' → logprob: -9.007206916809082
    7. ')' → logprob: -10.132206916809082
    8. ' ' → logprob: -10.132206916809082
    9. '(N' → logprob: -11.507206916809082
    10. ' N' → logprob: -11.757206916809082

Token 1490: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1673358678817749
    2. '*' → logprob: -1.917335867881775
    3. '=' → logprob: -6.2923359870910645
    4. ' =' → logprob: -6.6673359870910645
    5. ' ' → logprob: -6.7923359870910645
    6. '[' → logprob: -6.9173359870910645
    7. ' _' → logprob: -7.7923359870910645
    8. '_' → logprob: -8.417335510253906
    9. ' [' → logprob: -8.417335510253906
    10. '   ' → logprob: -8.792335510253906

Token 1491: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0010992534225806594
    2. '(' → logprob: -7.501099109649658
    3. '(N' → logprob: -7.876099109649658
    4. '101' → logprob: -9.501099586486816
    5. '(M' → logprob: -10.251099586486816
    6. '100' → logprob: -10.626099586486816
    7. 'len' → logprob: -11.876099586486816
    8. '10' → logprob: -12.251099586486816
    9. '(len' → logprob: -12.376099586486816
    10. ' (' → logprob: -12.876099586486816

Token 1492: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08850999921560287
    2. '<|end|>' → logprob: -2.963510036468506
    3. '   ' → logprob: -3.463510036468506
    4. '    
' → logprob: -7.338510036468506
    5. '<|end|>' → logprob: -7.463510036468506
    6. ' 
' → logprob: -8.838509559631348
    7. '	return' → logprob: -9.338509559631348
    8. '  
' → logprob: -9.463509559631348
    9. 'return' → logprob: -10.213509559631348
    10. '	
' → logprob: -10.213509559631348

Token 1493: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1201629564166069
    2. '	return' → logprob: -2.8701629638671875
    3. '<|end|>' → logprob: -2.9951629638671875
    4. '
' → logprob: -5.2451629638671875
    5. '<|end|>' → logprob: -7.8701629638671875
    6. '    
' → logprob: -8.495162963867188
    7. '	
' → logprob: -8.745162963867188
    8. ' return' → logprob: -8.870162963867188
    9. ' ' → logprob: -8.870162963867188
    10. 'return' → logprob: -10.495162963867188

Token 1494: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011283244006335735
    2. 'return' (adapté à ' return') → logprob: -4.5112833976745605
    3. ' return' → logprob: -8.386282920837402
    4. '	return' → logprob: -11.886282920837402
    5. 'def' → logprob: -15.136282920837402
    6. '
' → logprob: -16.01128387451172
    7. ' ' → logprob: -16.38628387451172
    8. '  ' → logprob: -17.26128387451172
    9. '{return' → logprob: -18.13628387451172
    10. '   ' → logprob: -18.13628387451172

Token 1495: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0019520643400028348
    2. ' cnt' → logprob: -6.251952171325684
    3. '(cnt' → logprob: -10.751952171325684
    4. '[cnt' → logprob: -13.251952171325684
    5. '	cnt' → logprob: -15.126952171325684
    6. 'count' → logprob: -17.876951217651367
    7. '
' → logprob: -18.876951217651367
    8. ' ' → logprob: -19.501951217651367
    9. '   ' → logprob: -19.876951217651367
    10. 'cn' → logprob: -20.126951217651367

Token 1496: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.061054359131958e-06
    2. ' ,' → logprob: -12.625007629394531
    3. ',
' → logprob: -12.875007629394531
    4. ',sum' → logprob: -14.250007629394531
    5. '`,' → logprob: -14.750007629394531
    6. ',s' → logprob: -15.250007629394531
    7. '```' → logprob: -15.500007629394531
    8. '<|end|>' → logprob: -16.00000762939453
    9. '
' → logprob: -16.12500762939453
    10. 'def' → logprob: -16.62500762939453

Token 1497: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.345273494720459
    2. '[' → logprob: -1.345273494720459
    3. ' sum' → logprob: -3.845273494720459
    4. ' [' → logprob: -4.595273494720459
    5. '[]' → logprob: -11.970273971557617
    6. '	sum' → logprob: -12.595273971557617
    7. '<|end|>' → logprob: -12.720273971557617
    8. '(sum' → logprob: -13.220273971557617
    9. '[s' → logprob: -13.220273971557617
    10. '_sum' → logprob: -13.595273971557617

Token 1498: '_

' (ID: 44557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00034654809860512614
    2. '_
' → logprob: -8.625346183776855
    3. '<|end|>' → logprob: -9.625346183776855
    4. '_,' → logprob: -10.000346183776855
    5. '_[' → logprob: -10.625346183776855
    6. '_

' → logprob: -11.125346183776855
    7. '[' → logprob: -12.250346183776855
    8. '_)' → logprob: -13.000346183776855
    9. '_^(' → logprob: -13.625346183776855
    10. '<|end|>' → logprob: -13.625346183776855

Token 1499: 'def' (ID: 1314)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0025051478296518326
    2. 'def' → logprob: -6.002505302429199
    3. '#' → logprob: -11.1275053024292
    4. 'from' → logprob: -12.0025053024292
    5. 'import' → logprob: -12.3775053024292
    6. '```' → logprob: -13.2525053024292
    7. ' class' → logprob: -13.6275053024292
    8. '
' → logprob: -14.8775053024292
    9. '<|end|>' → logprob: -14.8775053024292
    10. '@dat' → logprob: -15.7525053024292

Token 1500: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07137621194124222
    2. 'main' → logprob: -2.696376323699951
    3. ' solve' → logprob: -7.696376323699951
    4. ' dfs' → logprob: -7.696376323699951
    5. ' read' → logprob: -8.321375846862793
    6. ' initialize' → logprob: -9.946375846862793
    7. 'dfs' → logprob: -10.071375846862793
    8. 'solve' → logprob: -10.196375846862793
    9. ' run' → logprob: -10.321375846862793
    10. ' process' → logprob: -10.446375846862793

Token 1501: '_results' (ID: 31049)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8872525095939636
    2. '(*' → logprob: -1.0122525691986084
    3. '()' → logprob: -2.5122525691986084
    4. '_ans' → logprob: -2.6372525691986084
    5. '(ans' → logprob: -3.8872525691986084
    6. '_' → logprob: -4.512252330780029
    7. '_answer' → logprob: -4.512252330780029
    8. '_answers' → logprob: -4.637252330780029
    9. '_results' → logprob: -4.887252330780029
    10. '_result' → logprob: -5.512252330780029

Token 1502: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.011771932244300842
    2. '(' → logprob: -4.511772155761719
    3. '(
' → logprob: -7.636772155761719
    4. '(*' → logprob: -8.761772155761719
    5. '()' → logprob: -10.386772155761719
    6. '(answer' → logprob: -11.511772155761719
    7. '():' → logprob: -11.761772155761719
    8. '(def' → logprob: -11.761772155761719
    9. '(results' → logprob: -11.886772155761719
    10. '(len' → logprob: -12.261772155761719

Token 1503: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05699821561574936
    2. '(ans' → logprob: -3.1819982528686523
    3. '):' → logprob: -4.431998252868652
    4. ',' → logprob: -6.806998252868652
    5. ')
' → logprob: -8.181998252868652
    6. ')' → logprob: -8.431998252868652
    7. '   ' → logprob: -8.806998252868652
    8. '):
' → logprob: -9.056998252868652
    9. '):

' → logprob: -9.931998252868652
    10. '
' → logprob: -10.681998252868652

Token 1504: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05120096728205681
    2. '   ' → logprob: -3.0512008666992188
    3. '```' → logprob: -6.301200866699219
    4. ' for' → logprob: -8.051200866699219
    5. '
' → logprob: -8.676200866699219
    6. 'def' → logprob: -8.801200866699219
    7. 'print' → logprob: -10.301200866699219
    8. 'ans' → logprob: -10.426200866699219
    9. '``' → logprob: -10.426200866699219
    10. '(ans' → logprob: -11.551200866699219

Token 1505: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00034952821442857385
    2. '
' → logprob: -8.750349998474121
    3. '   ' → logprob: -8.750349998474121
    4. ' for' → logprob: -10.750349998474121
    5. 'def' → logprob: -12.125349998474121
    6. '```' → logprob: -12.750349998474121
    7. 'print' (adapté à ' print') → logprob: -12.875349998474121
    8. '	for' → logprob: -15.875349998474121
    9. '``' → logprob: -16.375349044799805
    10. '    
' → logprob: -17.375349044799805

Token 1506: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.013360097073018551
    2. '()' → logprob: -4.888360023498535
    3. '('\' → logprob: -5.388360023498535
    4. '(' → logprob: -7.638360023498535
    5. '(*(' → logprob: -7.763360023498535
    6. '('' → logprob: -8.638360023498535
    7. '()
' → logprob: -10.513360023498535
    8. '(
' → logprob: -10.888360023498535
    9. '("\' → logprob: -11.263360023498535
    10. '(L' → logprob: -11.888360023498535

Token 1507: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -9.088346359931165e-07
    2. '(ans' → logprob: -14.000000953674316
    3. ' ans' → logprob: -18.375
    4. '	ans' → logprob: -20.375
    5. 'ANS' → logprob: -21.75
    6. 'ann' → logprob: -22.125
    7. 'range' → logprob: -22.625
    8. '[' → logprob: -22.75
    9. 'answer' → logprob: -23.0
    10. '_ans' → logprob: -23.25

Token 1508: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007216068916022778
    2. ',' → logprob: -7.250721454620361
    3. ')
' → logprob: -11.75072193145752
    4. '()' → logprob: -14.25072193145752
    5. ' )' → logprob: -14.25072193145752
    6. '())' → logprob: -14.87572193145752
    7. '<|end|>' → logprob: -14.87572193145752
    8. '   ' → logprob: -15.00072193145752
    9. '}' → logprob: -15.25072193145752
    10. '),' → logprob: -15.62572193145752

Token 1509: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.00014644917973782867
    2. ' sep' → logprob: -9.000146865844727
    3. 'se' → logprob: -10.750146865844727
    4. 'separator' → logprob: -14.000146865844727
    5. 'end' → logprob: -14.250146865844727
    6. ')' → logprob: -18.125146865844727
    7. '   ' → logprob: -18.750146865844727
    8. ' ' → logprob: -18.875146865844727
    9. 'flush' → logprob: -20.000146865844727
    10. '
' → logprob: -20.125146865844727

Token 1510: '='\' (ID: 106410)
  Prédit: '='\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='\' → logprob: -0.019253132864832878
    2. '='' → logprob: -4.019253253936768
    3. ''\' → logprob: -7.019253253936768
    4. '="\' → logprob: -9.01925277709961
    5. ''' → logprob: -9.39425277709961
    6. '=' → logprob: -13.26925277709961
    7. '('\' → logprob: -14.01925277709961
    8. '="' → logprob: -14.64425277709961
    9. '"\' → logprob: -15.01925277709961
    10. '"' → logprob: -15.14425277709961

Token 1511: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004078997299075127
    2. '\n' → logprob: -5.5040788650512695
    3. ' n' → logprob: -15.50407886505127
    4. ''n' → logprob: -15.75407886505127
    5. ''\' → logprob: -15.87907886505127
    6. 'nl' → logprob: -16.379079818725586
    7. ' \' → logprob: -17.254079818725586
    8. '\' → logprob: -17.629079818725586
    9. '"\' → logprob: -17.629079818725586
    10. 'newline' → logprob: -17.754079818725586

Token 1512: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.8961017202818766e-05
    2. '')' → logprob: -9.875059127807617
    3. '")' → logprob: -12.000059127807617
    4. '`)' → logprob: -14.250059127807617
    5. ')
' → logprob: -14.500059127807617
    6. ')`' → logprob: -17.500059127807617
    7. ')")' → logprob: -17.625059127807617
    8. ' )' → logprob: -17.625059127807617
    9. '#' → logprob: -17.750059127807617
    10. ')#' → logprob: -18.125059127807617

Token 1513: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5182836055755615
    2. 'def' → logprob: -1.0182836055755615
    3. 'if' → logprob: -3.1432836055755615
    4. '#' → logprob: -9.76828384399414
    5. 'import' → logprob: -10.39328384399414
    6. 'from' → logprob: -12.51828384399414
    7. ' class' → logprob: -12.76828384399414
    8. '```' → logprob: -12.89328384399414
    9. ' if' → logprob: -13.14328384399414
    10. '
' → logprob: -13.26828384399414

Token 1514: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.5760407447814941
    2. 'L' → logprob: -0.8260407447814941
    3. 'Graph' → logprob: -9.576040267944336
    4. 'Node' → logprob: -11.576040267944336
    5. ' ' → logprob: -12.701040267944336
    6. '   ' → logprob: -12.826040267944336
    7. ' Graph' → logprob: -12.951040267944336
    8. '	L' → logprob: -13.326040267944336
    9. 'Tree' → logprob: -13.451040267944336
    10. '_L' → logprob: -13.576040267944336

Token 1515: 'CA' (ID: 6781)
  Prédit: 'CA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -0.3507075011730194
    2. 'C' → logprob: -1.2257075309753418
    3. 'CAA' → logprob: -7.225707530975342
    4. 'CAP' → logprob: -7.475707530975342
    5. 'class' → logprob: -8.350707054138184
    6. 'A' → logprob: -8.475707054138184
    7. ' C' → logprob: -8.975707054138184
    8. 'CAE' → logprob: -9.725707054138184
    9. 'CAT' → logprob: -10.100707054138184
    10. 'CAL' → logprob: -10.225707054138184

Token 1516: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000788663572166115
    2. ':
' → logprob: -7.250788688659668
    3. '(object' → logprob: -9.625788688659668
    4. '():' → logprob: -12.375788688659668
    5. '(' → logprob: -13.250788688659668
    6. '):' → logprob: -13.500788688659668
    7. ':def' → logprob: -13.625788688659668
    8. '(Abstract' → logprob: -14.125788688659668
    9. '(Base' → logprob: -14.375788688659668
    10. '_:' → logprob: -14.500788688659668

Token 1517: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0043642520904541016
    2. ' def' → logprob: -6.004364013671875
    3. 'def' → logprob: -6.504364013671875
    4. ':' → logprob: -8.629364013671875
    5. '	def' → logprob: -8.629364013671875
    6. '   ' → logprob: -11.254364013671875
    7. 'class' → logprob: -12.254364013671875
    8. ':
' → logprob: -12.379364013671875
    9. ':def' → logprob: -12.629364013671875
    10. '    ' → logprob: -13.129364013671875

Token 1518: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5770862102508545
    2. 'def' (adapté à ' def') → logprob: -0.8270862102508545
    3. '   ' → logprob: -6.827086448669434
    4. '	def' → logprob: -10.077086448669434
    5. 'class' → logprob: -11.077086448669434
    6. 'import' → logprob: -13.077086448669434
    7. '__' → logprob: -13.827086448669434
    8. ' __' → logprob: -14.452086448669434
    9. ':def' → logprob: -14.577086448669434
    10. ' class' → logprob: -15.452086448669434

Token 1519: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004333272110670805
    2. ' __' → logprob: -5.50433349609375
    3. 'init' → logprob: -8.37933349609375
    4. '_init' → logprob: -10.75433349609375
    5. 'def' → logprob: -12.87933349609375
    6. '.__' → logprob: -14.75433349609375
    7. '___' → logprob: -15.25433349609375
    8. '```' → logprob: -15.50433349609375
    9. ' def' → logprob: -15.87933349609375
    10. '__(' → logprob: -16.00433349609375

Token 1520: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0002599053841549903
    2. '__' → logprob: -8.375260353088379
    3. 'it' → logprob: -11.500260353088379
    4. '_init' → logprob: -11.625260353088379
    5. '```' → logprob: -12.000260353088379
    6. 'def' → logprob: -13.500260353088379
    7. 'int' → logprob: -13.875260353088379
    8. ' init' → logprob: -14.500260353088379
    9. 'nit' → logprob: -14.875260353088379
    10. ' __' → logprob: -15.375260353088379

Token 1521: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.22567185759544373
    2. '(self' → logprob: -1.6006718873977661
    3. '__' → logprob: -8.600671768188477
    4. '__(
' → logprob: -10.225671768188477
    5. '(' → logprob: -10.850671768188477
    6. '_(' → logprob: -12.225671768188477
    7. ' (' → logprob: -12.350671768188477
    8. 'self' → logprob: -12.350671768188477
    9. '__((' → logprob: -12.600671768188477
    10. '   ' → logprob: -14.850671768188477

Token 1522: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.849109119386412e-06
    2. ' self' → logprob: -11.750009536743164
    3. '(self' → logprob: -13.375009536743164
    4. '   ' → logprob: -16.000009536743164
    5. '
' → logprob: -16.250009536743164
    6. '	self' → logprob: -17.000009536743164
    7. 'def' → logprob: -17.125009536743164
    8. '```' → logprob: -18.000009536743164
    9. '0' → logprob: -18.125009536743164
    10. ')' → logprob: -18.375009536743164

Token 1523: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09039359539747238
    2. ',' → logprob: -2.465393543243408
    3. 'self' → logprob: -7.590393543243408
    4. ',self' → logprob: -7.590393543243408
    5. ' (' → logprob: -8.215394020080566
    6. ' self' → logprob: -9.715394020080566
    7. '   ' → logprob: -10.340394020080566
    8. ')(' → logprob: -10.715394020080566
    9. '(' → logprob: -10.965394020080566
    10. ')' → logprob: -11.090394020080566

Token 1524: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009193291887640953
    2. 'N' → logprob: -4.759193420410156
    3. 'self' → logprob: -7.509193420410156
    4. ' n' → logprob: -11.384193420410156
    5. '20' → logprob: -11.884193420410156
    6. 'size' → logprob: -13.134193420410156
    7. '   ' → logprob: -13.259193420410156
    8. '250' → logprob: -14.134193420410156
    9. '__' → logprob: -14.259193420410156
    10. 'node' → logprob: -14.259193420410156

Token 1525: ':' (ID: 25)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11387941241264343
    2. '):' → logprob: -2.863879442214966
    3. ',' → logprob: -2.988879442214966
    4. '   ' → logprob: -9.488879203796387
    5. '):
' → logprob: -9.488879203796387
    6. ':' → logprob: -9.988879203796387
    7. ')' → logprob: -10.363879203796387
    8. '       ' → logprob: -11.988879203796387
    9. ':
' → logprob: -12.363879203796387
    10. ' ):
' → logprob: -13.863879203796387

Token 1526: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00044616201194003224
    2. ' int' → logprob: -7.750446319580078
    3. 'self' → logprob: -11.250446319580078
    4. ')' → logprob: -14.000446319580078
    5. 'None' → logprob: -14.125446319580078
    6. '   ' → logprob: -14.625446319580078
    7. 'Int' → logprob: -16.375446319580078
    8. ' self' → logprob: -16.875446319580078
    9. '):
' → logprob: -17.250446319580078
    10. '       ' → logprob: -17.250446319580078

Token 1527: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04472789540886879
    2. '):' → logprob: -3.1697278022766113
    3. ',' → logprob: -7.044727802276611
    4. ')' → logprob: -7.169727802276611
    5. '):
' → logprob: -9.79472827911377
    6. '   ' → logprob: -10.66972827911377
    7. ' ):
' → logprob: -12.54472827911377
    8. ':' → logprob: -14.41972827911377
    9. '):

' → logprob: -14.66972827911377
    10. ' ):' → logprob: -14.79472827911377

Token 1528: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0203419923782349
    2. ':
' → logprob: -1.1453419923782349
    3. '   ' → logprob: -1.8953419923782349
    4. '       ' → logprob: -2.0203418731689453
    5. ',' → logprob: -3.6453418731689453
    6. '):
' → logprob: -5.145341873168945
    7. '():
' → logprob: -5.520341873168945
    8. '<|end|>' → logprob: -8.270341873168945
    9. '->' → logprob: -8.520341873168945
    10. ')' → logprob: -8.520341873168945

Token 1529: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.000712670327629894
    2. ' None' → logprob: -7.250712871551514
    3. 'object' → logprob: -13.250712394714355
    4. 'int' → logprob: -14.750712394714355
    5. '_None' → logprob: -15.625712394714355
    6. 'self' → logprob: -15.750712394714355
    7. '=None' → logprob: -16.125713348388672
    8. '   ' → logprob: -16.875713348388672
    9. '(None' → logprob: -17.250713348388672
    10. ',None' → logprob: -18.000713348388672

Token 1530: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5108696818351746
    2. ':' → logprob: -1.3858697414398193
    3. ':
' → logprob: -2.0108697414398193
    4. '   ' → logprob: -5.38586950302124
    5. ',' → logprob: -5.76086950302124
    6. '():
' → logprob: -6.13586950302124
    7. '):
' → logprob: -6.26086950302124
    8. '(n' → logprob: -6.38586950302124
    9. '<|end|>' → logprob: -7.63586950302124
    10. '(N' → logprob: -8.010869979858398

Token 1531: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002694416616577655
    2. '
' → logprob: -9.500269889831543
    3. 'import' → logprob: -9.500269889831543
    4. '   ' → logprob: -9.625269889831543
    5. '	   ' → logprob: -11.125269889831543
    6. '	' → logprob: -11.625269889831543
    7. '        
' → logprob: -12.375269889831543
    8. 'self' → logprob: -12.500269889831543
    9. '    ' → logprob: -12.625269889831543
    10. '```' → logprob: -12.875269889831543

Token 1532: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07361380755901337
    2. '       ' → logprob: -2.8236138820648193
    3. ' self' → logprob: -4.57361364364624
    4. '   ' → logprob: -6.82361364364624
    5. 'import' → logprob: -8.823614120483398
    6. 'from' → logprob: -11.573614120483398
    7. 'def' → logprob: -11.698614120483398
    8. 'super' → logprob: -12.573614120483398
    9. '	self' → logprob: -14.073614120483398
    10. ' ' → logprob: -15.198614120483398

Token 1533: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.3904123902320862
    2. '.n' → logprob: -1.1404123306274414
    3. '.parent' → logprob: -6.765412330627441
    4. '.LOG' → logprob: -7.390412330627441
    5. '.size' → logprob: -7.515412330627441
    6. '.depth' → logprob: -7.765412330627441
    7. ' .' → logprob: -8.140412330627441
    8. '.MAX' → logprob: -8.890412330627441
    9. '.max' → logprob: -9.390412330627441
    10. '.V' → logprob: -9.640412330627441

Token 1534: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3916749358177185
    2. ' =' → logprob: -1.1416749954223633
    3. '   ' → logprob: -5.516674995422363
    4. ',' → logprob: -8.141674995422363
    5. '       ' → logprob: -8.891674995422363
    6. '    ' → logprob: -9.641674995422363
    7. '=int' → logprob: -9.766674995422363
    8. ' ' → logprob: -9.891674995422363
    9. 'import' → logprob: -10.516674995422363
    10. '  ' → logprob: -10.766674995422363

Token 1535: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0015029559144750237
    2. ' N' → logprob: -6.501502990722656
    3. '   ' → logprob: -14.501502990722656
    4. '	N' → logprob: -16.501502990722656
    5. '[N' → logprob: -17.751502990722656
    6. 'int' → logprob: -18.126502990722656
    7. '(N' → logprob: -18.251502990722656
    8. '[' → logprob: -18.501502990722656
    9. ' ' → logprob: -18.626502990722656
    10. '0' → logprob: -18.751502990722656

Token 1536: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015395533409900963
    2. '   ' → logprob: -9.875153541564941
    3. 'self' → logprob: -9.875153541564941
    4. '	' → logprob: -11.000153541564941
    5. ',' → logprob: -11.125153541564941
    6. 'import' → logprob: -11.750153541564941
    7. '
' → logprob: -12.875153541564941
    8. ' self' → logprob: -12.875153541564941
    9. 'from' → logprob: -13.375153541564941
    10. '	self' → logprob: -13.500153541564941

Token 1537: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000850605487357825
    2. 'self' → logprob: -7.750850677490234
    3. '   ' → logprob: -8.500850677490234
    4. 'from' → logprob: -9.000850677490234
    5. 'import' → logprob: -9.750850677490234
    6. '	' → logprob: -11.125850677490234
    7. ' self' → logprob: -11.250850677490234
    8. ' from' → logprob: -12.500850677490234
    9. '	self' → logprob: -13.875850677490234
    10. 'def' → logprob: -15.000850677490234

Token 1538: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011139659211039543
    2. '   ' → logprob: -5.261139869689941
    3. 'import' → logprob: -5.511139869689941
    4. 'from' → logprob: -6.886139869689941
    5. '       ' → logprob: -7.761139869689941
    6. 'LOG' → logprob: -8.886139869689941
    7. '20' → logprob: -9.386139869689941
    8. 'def' → logprob: -9.511139869689941
    9. ' self' → logprob: -10.261139869689941
    10. 'MAX' → logprob: -10.261139869689941

Token 1539: '.to' (ID: 3552)
  Prédit: '.LOG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.LOG' → logprob: -0.07399424910545349
    2. '.log' → logprob: -2.9489941596984863
    3. 'LOG' → logprob: -4.448994159698486
    4. '.parent' → logprob: -5.698994159698486
    5. '.MAX' → logprob: -6.948994159698486
    6. '.depth' → logprob: -7.198994159698486
    7. '.Log' → logprob: -8.198994636535645
    8. '.L' → logprob: -8.573994636535645
    9. 'log' → logprob: -8.573994636535645
    10. '_LOG' → logprob: -8.698994636535645

Token 1540: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40053558349609375
    2. '=' → logprob: -1.2755355834960938
    3. '=[]' → logprob: -4.150535583496094
    4. '_nodes' → logprob: -5.150535583496094
    5. '=[' → logprob: -5.275535583496094
    6. '=[]
' → logprob: -5.275535583496094
    7. '[' → logprob: -5.650535583496094
    8. 's' → logprob: -6.025535583496094
    9. '_list' → logprob: -6.400535583496094
    10. '_edges' → logprob: -6.775535583496094

Token 1541: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.184812031686306e-05
    2. '[]' → logprob: -9.750082015991211
    3. '[-' → logprob: -11.125082015991211
    4. ' [[]' → logprob: -12.125082015991211
    5. '[N' → logprob: -13.625082015991211
    6. '[[' → logprob: -13.750082015991211
    7. '[]
' → logprob: -14.875082015991211
    8. '[self' → logprob: -15.375082015991211
    9. '[get' → logprob: -15.500082015991211
    10. '[n' → logprob: -16.12508201599121

Token 1542: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6932609677314758
    2. 'for' → logprob: -0.6932609677314758
    3. '()' → logprob: -9.19326114654541
    4. ']' → logprob: -12.44326114654541
    5. '(N' → logprob: -12.44326114654541
    6. '	for' → logprob: -13.44326114654541
    7. '
' → logprob: -14.19326114654541
    8. '[]' → logprob: -14.56826114654541
    9. ' ' → logprob: -15.31826114654541
    10. '(' → logprob: -15.56826114654541

Token 1543: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00019209683523513377
    2. ' _' → logprob: -8.625191688537598
    3. '_range' → logprob: -12.000191688537598
    4. '_i' → logprob: -12.750191688537598
    5. '_N' → logprob: -14.000191688537598
    6. '_
' → logprob: -14.000191688537598
    7. '_=' → logprob: -15.000191688537598
    8. '_in' → logprob: -15.375191688537598
    9. '_s' → logprob: -15.375191688537598
    10. ' range' → logprob: -15.500191688537598

Token 1544: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00038360210601240396
    2. ' _' → logprob: -8.500383377075195
    3. '_range' → logprob: -9.750383377075195
    4. ' range' → logprob: -10.000383377075195
    5. 'range' → logprob: -10.500383377075195
    6. ' in' → logprob: -10.875383377075195
    7. '_i' → logprob: -11.625383377075195
    8. 'in' → logprob: -11.625383377075195
    9. '_N' → logprob: -12.250383377075195
    10. '_in' → logprob: -13.375383377075195

Token 1545: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09035788476467133
    2. '_range' → logprob: -2.840357780456543
    3. ' range' → logprob: -3.590357780456543
    4. '_' → logprob: -7.840357780456543
    5. '_N' → logprob: -12.465357780456543
    6. '
' → logprob: -13.840357780456543
    7. '_n' → logprob: -14.465357780456543
    8. '(range' → logprob: -14.715357780456543
    9. '_in' → logprob: -14.840357780456543
    10. '_id' → logprob: -14.840357780456543

Token 1546: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.010954086668789387
    2. '(N' → logprob: -4.760953903198242
    3. 'range' → logprob: -6.135953903198242
    4. 'self' → logprob: -8.760953903198242
    5. ' range' → logprob: -11.760953903198242
    6. ' N' → logprob: -12.260953903198242
    7. '   ' → logprob: -13.010953903198242
    8. '_N' → logprob: -15.135953903198242
    9. '	N' → logprob: -15.260953903198242
    10. 'n' → logprob: -15.385953903198242

Token 1547: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2025100737810135
    2. ')]' → logprob: -1.702510118484497
    3. '()]' → logprob: -7.327509880065918
    4. ' ]' → logprob: -8.952509880065918
    5. ']
' → logprob: -9.077509880065918
    6. '       ' → logprob: -9.202509880065918
    7. ')' → logprob: -9.577509880065918
    8. ')]
' → logprob: -11.452509880065918
    9. '   ' → logprob: -12.327509880065918
    10. ']]' → logprob: -12.827509880065918

Token 1548: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12170925736427307
    2. 'self' → logprob: -2.3717093467712402
    3. '   ' → logprob: -3.8717093467712402
    4. ' self' → logprob: -7.87170934677124
    5. 'def' → logprob: -11.246708869934082
    6. 'from' → logprob: -11.371708869934082
    7. 'for' → logprob: -11.371708869934082
    8. ' ' → logprob: -11.871708869934082
    9. '	self' → logprob: -11.871708869934082
    10. '           ' → logprob: -12.121708869934082

Token 1549: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005745336879044771
    2. '       ' → logprob: -5.3807454109191895
    3. 'def' → logprob: -8.005744934082031
    4. ' self' → logprob: -8.130744934082031
    5. 'from' → logprob: -8.255744934082031
    6. '   ' → logprob: -8.755744934082031
    7. 'import' → logprob: -10.255744934082031
    8. 'for' → logprob: -10.380744934082031
    9. '
' → logprob: -12.005744934082031
    10. '           ' → logprob: -13.005744934082031

Token 1550: '.co' (ID: 10914)
  Prédit: '.depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.6284788250923157
    2. '.parent' → logprob: -0.8784788250923157
    3. '.par' → logprob: -4.00347900390625
    4. '.dep' → logprob: -4.87847900390625
    5. '.dist' → logprob: -5.25347900390625
    6. 'depth' → logprob: -5.37847900390625
    7. 'parent' → logprob: -5.87847900390625
    8. '.p' → logprob: -6.50347900390625
    9. '.up' → logprob: -6.50347900390625
    10. ' .' → logprob: -6.75347900390625

Token 1551: ' =' (ID: 314)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.005818706005811691
    2. 'sts' → logprob: -5.380818843841553
    3. 's' → logprob: -7.630818843841553
    4. 'l' → logprob: -8.255818367004395
    5. ' =' → logprob: -8.630818367004395
    6. 'ls' → logprob: -9.630818367004395
    7. 'lor' → logprob: -9.880818367004395
    8. '=' → logprob: -10.130818367004395
    9. '[' → logprob: -11.005818367004395
    10. 'def' → logprob: -11.130818367004395

Token 1552: ' [[]' (ID: 182908)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.011083188466727734
    2. '[' → logprob: -4.511083126068115
    3. '[]
' → logprob: -11.011083602905273
    4. '[][]' → logprob: -12.386083602905273
    5. '[:]' → logprob: -12.636083602905273
    6. '[]}' → logprob: -12.761083602905273
    7. '[])' → logprob: -13.011083602905273
    8. '{}' → logprob: -13.511083602905273
    9. ' []' → logprob: -13.886083602905273
    10. '[]

' → logprob: -14.136083602905273

Token 1553: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01416750717908144
    2. ' for' → logprob: -4.264167308807373
    3. ')' → logprob: -13.264167785644531
    4. '()' → logprob: -14.139167785644531
    5. '	for' → logprob: -14.639167785644531
    6. ']' → logprob: -14.764167785644531
    7. '   ' → logprob: -15.639167785644531
    8. '[]' → logprob: -15.639167785644531
    9. '       ' → logprob: -15.889167785644531
    10. ',' → logprob: -16.26416778564453

Token 1554: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3990178406238556
    2. '_range' → logprob: -1.3990178108215332
    3. '_' → logprob: -3.149017810821533
    4. ' range' → logprob: -3.399017810821533
    5. '(range' → logprob: -5.399017810821533
    6. '_tokens' → logprob: -8.024018287658691
    7. '_token' → logprob: -8.649018287658691
    8. '_each' → logprob: -8.774018287658691
    9. '	range' → logprob: -10.149018287658691
    10. '_continue' → logprob: -10.149018287658691

Token 1555: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.643152740551159e-05
    2. ' range' → logprob: -10.250036239624023
    3. '(range' → logprob: -13.875036239624023
    4. '	range' → logprob: -19.500036239624023
    5. '_range' → logprob: -20.375036239624023
    6. 'int' → logprob: -20.875036239624023
    7. '
' → logprob: -21.000036239624023
    8. '   ' → logprob: -22.000036239624023
    9. '=' → logprob: -22.500036239624023
    10. '(' → logprob: -22.500036239624023

Token 1556: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000553151941858232
    2. ' range' → logprob: -7.500553131103516
    3. '(range' → logprob: -15.625553131103516
    4. '	range' → logprob: -18.375553131103516
    5. '
' → logprob: -19.125553131103516
    6. '_range' → logprob: -19.375553131103516
    7. 'int' → logprob: -19.375553131103516
    8. 'length' → logprob: -19.750553131103516
    9. 'size' → logprob: -19.875553131103516
    10. 'N' → logprob: -20.500553131103516

Token 1557: '(N' (ID: 10564)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007162463734857738
    2. ' range' → logprob: -7.250716209411621
    3. '(N' → logprob: -12.625716209411621
    4. '(range' → logprob: -13.375716209411621
    5. 'N' → logprob: -13.625716209411621
    6. '[N' → logprob: -15.875716209411621
    7. '_range' → logprob: -17.625717163085938
    8. 'size' → logprob: -18.125717163085938
    9. '	range' → logprob: -18.625717163085938
    10. '.range' → logprob: -18.750717163085938

Token 1558: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3641035854816437
    2. ']' → logprob: -1.3641035556793213
    3. ')]' → logprob: -3.3641035556793213
    4. ')]
' → logprob: -4.3641037940979
    5. '       ' → logprob: -7.1141037940979
    6. ')' → logprob: -7.4891037940979
    7. '()]
' → logprob: -7.9891037940979
    8. ')
' → logprob: -8.489103317260742
    9. '()]' → logprob: -8.614103317260742
    10. ']
' → logprob: -9.864103317260742

Token 1559: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5796836614608765
    2. 'self' → logprob: -0.8296836614608765
    3. '   ' → logprob: -6.454683780670166
    4. ' self' → logprob: -6.829683780670166
    5. 'def' → logprob: -6.954683780670166
    6. 'from' → logprob: -9.329683303833008
    7. '	self' → logprob: -10.954683303833008
    8. ' ' → logprob: -12.204683303833008
    9. '
' → logprob: -12.579683303833008
    10. 'for' → logprob: -12.829683303833008

Token 1560: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008088610135018826
    2. '       ' → logprob: -4.8830885887146
    3. 'def' → logprob: -8.383089065551758
    4. 'from' → logprob: -9.258089065551758
    5. '   ' → logprob: -9.883089065551758
    6. 'for' → logprob: -9.883089065551758
    7. '
' → logprob: -10.633089065551758
    8. ' self' → logprob: -11.008089065551758
    9. 'import' → logprob: -12.133089065551758
    10. '           ' → logprob: -13.508089065551758

Token 1561: '.dep' (ID: 181964)
  Prédit: '.col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.col' → logprob: -0.16386552155017853
    2. '.par' → logprob: -3.038865566253662
    3. '.fa' → logprob: -4.038865566253662
    4. '.pa' → logprob: -4.163865566253662
    5. 'col' → logprob: -4.288865566253662
    6. '.parent' → logprob: -4.538865566253662
    7. '.cl' → logprob: -5.038865566253662
    8. '.depth' → logprob: -5.413865566253662
    9. '.up' → logprob: -5.538865566253662
    10. '.' → logprob: -5.538865566253662

Token 1562: ' =' (ID: 314)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5381158590316772
    2. 'th' → logprob: -1.0381158590316772
    3. ' =' → logprob: -3.413115978240967
    4. '=' → logprob: -4.038115978240967
    5. '   ' → logprob: -4.913115978240967
    6. 'ths' → logprob: -6.538115978240967
    7. '=[]' → logprob: -7.163115978240967
    8. 'TH' → logprob: -7.913115978240967
    9. '[' → logprob: -8.288115501403809
    10. '=[]
' → logprob: -8.788115501403809

Token 1563: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06206639111042023
    2. ' [' → logprob: -2.8120663166046143
    3. '[N' → logprob: -9.812066078186035
    4. '[-' → logprob: -10.312066078186035
    5. '[get' → logprob: -12.187066078186035
    6. ' [-' → logprob: -12.812066078186035
    7. '   ' → logprob: -13.562066078186035
    8. '[n' → logprob: -14.562066078186035
    9. '0' → logprob: -14.812066078186035
    10. '[self' → logprob: -15.437066078186035

Token 1564: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10031116008758545
    2. '-' → logprob: -2.350311279296875
    3. ' -' → logprob: -9.725311279296875
    4. ' ' → logprob: -10.475311279296875
    5. 'None' → logprob: -11.975311279296875
    6. '-f' → logprob: -12.475311279296875
    7. '   ' → logprob: -13.100311279296875
    8. '
' → logprob: -13.600311279296875
    9. 'False' → logprob: -14.725311279296875
    10. '-depth' → logprob: -15.100311279296875

Token 1565: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0034290081821382046
    2. ' for' → logprob: -6.253428936004639
    3. ']*(' → logprob: -7.128428936004639
    4. ']*' → logprob: -7.878428936004639
    5. ' ]' → logprob: -9.003429412841797
    6. 'for' → logprob: -9.128429412841797
    7. '   ' → logprob: -9.503429412841797
    8. '       ' → logprob: -13.003429412841797
    9. ' *' → logprob: -13.003429412841797
    10. ')' → logprob: -13.378429412841797

Token 1566: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4877504110336304
    2. 'for' → logprob: -1.6127504110336304
    3. '   ' → logprob: -1.8627504110336304
    4. '*' → logprob: -1.9877504110336304
    5. '
' → logprob: -2.23775053024292
    6. ' *' → logprob: -2.36275053024292
    7. ']' → logprob: -3.36275053024292
    8. '       ' → logprob: -4.36275053024292
    9. '[' → logprob: -4.48775053024292
    10. ',' → logprob: -4.73775053024292

Token 1567: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.9160102712921798e-05
    2. '(N' → logprob: -11.000029563903809
    3. ' N' → logprob: -11.500029563903809
    4. 'self' → logprob: -13.250029563903809
    5. '   ' → logprob: -14.750029563903809
    6. '(' → logprob: -17.250028610229492
    7. '	N' → logprob: -18.125028610229492
    8. ' (' → logprob: -18.250028610229492
    9. ' self' → logprob: -19.375028610229492
    10. '       ' → logprob: -19.375028610229492

Token 1568: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07971404492855072
    2. 'self' → logprob: -2.704714059829712
    3. '   ' → logprob: -4.954713821411133
    4. '
' → logprob: -6.204713821411133
    5. ' self' → logprob: -7.579713821411133
    6. ' ' → logprob: -10.204713821411133
    7. 'def' → logprob: -10.579713821411133
    8. '	self' → logprob: -10.704713821411133
    9. '```' → logprob: -11.329713821411133
    10. '	' → logprob: -11.454713821411133

Token 1569: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.017829371616244316
    2. '       ' → logprob: -4.267829418182373
    3. ' self' → logprob: -6.392829418182373
    4. '   ' → logprob: -6.392829418182373
    5. 'def' → logprob: -8.517828941345215
    6. 'for' → logprob: -10.017828941345215
    7. '	self' → logprob: -10.517828941345215
    8. 'from' → logprob: -11.267828941345215
    9. ' ' → logprob: -11.392828941345215
    10. '```' → logprob: -11.767828941345215

Token 1570: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07215797901153564
    2. 'par' → logprob: -3.197157859802246
    3. '       ' → logprob: -4.197157859802246
    4. '   ' → logprob: -5.322157859802246
    5. ' self' → logprob: -5.572157859802246
    6. 'parent' → logprob: -6.322157859802246
    7. 'def' → logprob: -7.447157859802246
    8. 'up' → logprob: -7.697157859802246
    9. 'pa' → logprob: -8.447157859802246
    10. 'fa' → logprob: -8.572157859802246

Token 1571: '.cost' (ID: 80655)
  Prédit: '.par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.par' → logprob: -0.23897512257099152
    2. '.parent' → logprob: -2.2389750480651855
    3. '.pa' → logprob: -2.6139750480651855
    4. '.fa' → logprob: -4.3639750480651855
    5. '.up' → logprob: -5.1139750480651855
    6. '.p' → logprob: -5.1139750480651855
    7. '.pr' → logprob: -6.6139750480651855
    8. 'par' → logprob: -7.1139750480651855
    9. '.dist' → logprob: -7.4889750480651855
    10. '.' → logprob: -7.6139750480651855

Token 1572: 's' (ID: 82)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6428015828132629
    2. ' =' → logprob: -0.7678015828132629
    3. 's' → logprob: -4.642801761627197
    4. '   ' → logprob: -7.892801761627197
    5. '=[]' → logprob: -9.767801284790039
    6. ' ' → logprob: -10.392801284790039
    7. '=[' → logprob: -10.892801284790039
    8. '[' → logprob: -11.392801284790039
    9. '_s' → logprob: -12.017801284790039
    10. '  ' → logprob: -12.267801284790039

Token 1573: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759572386741638
    2. '=' → logprob: -0.8259572386741638
    3. '[' → logprob: -12.575957298278809
    4. '=[]' → logprob: -12.950957298278809
    5. '=[' → logprob: -13.075957298278809
    6. ':' → logprob: -13.075957298278809
    7. '<|end|>' → logprob: -13.325957298278809
    8. '   ' → logprob: -13.450957298278809
    9. ',' → logprob: -13.825957298278809
    10. ' =[' → logprob: -13.950957298278809

Token 1574: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004082909319549799
    2. ' [' → logprob: -5.504082679748535
    3. '[N' → logprob: -13.254082679748535
    4. '[get' → logprob: -13.504082679748535
    5. '   ' → logprob: -14.254082679748535
    6. '[-' → logprob: -14.629082679748535
    7. '[self' → logprob: -15.879082679748535
    8. '[n' → logprob: -16.00408363342285
    9. '0' → logprob: -17.50408363342285
    10. ' ' → logprob: -17.62908363342285

Token 1575: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06202146038413048
    2. '0' → logprob: -2.812021493911743
    3. ' [' → logprob: -10.562021255493164
    4. '(' → logprob: -10.687021255493164
    5. '[N' → logprob: -12.812021255493164
    6. '   ' → logprob: -13.812021255493164
    7. '
' → logprob: -14.687021255493164
    8. '[-' → logprob: -14.812021255493164
    9. ' ' → logprob: -16.437021255493164
    10. '([' → logprob: -16.437021255493164

Token 1576: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030360570177435875
    2. ']*' → logprob: -4.030360698699951
    3. ' *' → logprob: -5.280360698699951
    4. '*' → logprob: -5.905360698699951
    5. ' ]' → logprob: -6.155360698699951
    6. ')' → logprob: -6.905360698699951
    7. '[' → logprob: -7.530360698699951
    8. ' for' → logprob: -8.155360221862793
    9. ',' → logprob: -9.155360221862793
    10. '   ' → logprob: -9.530360221862793

Token 1577: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5248233675956726
    2. ' *' → logprob: -0.8998233675956726
    3. '*N' → logprob: -6.899823188781738
    4. '[' → logprob: -8.524823188781738
    5. ')' → logprob: -8.899823188781738
    6. '*(' → logprob: -9.024823188781738
    7. '*[' → logprob: -9.399823188781738
    8. '   ' → logprob: -10.399823188781738
    9. '*self' → logprob: -11.024823188781738
    10. ' [' → logprob: -11.149823188781738

Token 1578: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.963691804325208e-05
    2. ' N' → logprob: -10.875029563903809
    3. '   ' → logprob: -12.250029563903809
    4. '(N' → logprob: -12.875029563903809
    5. 'self' → logprob: -13.000029563903809
    6. ' (' → logprob: -14.875029563903809
    7. '(' → logprob: -15.000029563903809
    8. '       ' → logprob: -15.875029563903809
    9. ' ' → logprob: -16.375030517578125
    10. '    ' → logprob: -17.500030517578125

Token 1579: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17053809762001038
    2. '   ' → logprob: -2.2955381870269775
    3. 'self' → logprob: -2.9205381870269775
    4. ' self' → logprob: -6.795537948608398
    5. '
' → logprob: -7.420537948608398
    6. 'def' → logprob: -8.545537948608398
    7. ' ' → logprob: -9.170537948608398
    8. ',' → logprob: -10.045537948608398
    9. '	self' → logprob: -10.545537948608398
    10. 'from' → logprob: -10.920537948608398

Token 1580: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5913772583007812
    2. '       ' → logprob: -1.2163772583007812
    3. 'self' → logprob: -1.9663772583007812
    4. ' self' → logprob: -5.466377258300781
    5. 'def' → logprob: -5.841377258300781
    6. '```' → logprob: -5.966377258300781
    7. ' ' → logprob: -8.841377258300781
    8. '
' → logprob: -9.216377258300781
    9. '	self' → logprob: -9.716377258300781
    10. ' def' → logprob: -9.966377258300781

Token 1581: ' l' (ID: 305)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.030485451221466064
    2. '       ' → logprob: -3.5304853916168213
    3. '   ' → logprob: -7.6554856300354
    4. ' self' → logprob: -9.530485153198242
    5. 'import' → logprob: -9.905485153198242
    6. 'def' → logprob: -10.155485153198242
    7. '
' → logprob: -10.530485153198242
    8. 'from' → logprob: -10.530485153198242
    9. '	self' → logprob: -11.030485153198242
    10. '           ' → logprob: -11.905485153198242

Token 1582: ' =' (ID: 314)
  Prédit: 'og'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'og' → logprob: -0.004897027276456356
    2. 'g' → logprob: -6.004897117614746
    3. 'ogs' → logprob: -6.504897117614746
    4. 'ink' → logprob: -8.754897117614746
    5. 'ev' → logprob: -8.879897117614746
    6. 'e' → logprob: -9.129897117614746
    7. 'en' → logprob: -9.379897117614746
    8. 'v' → logprob: -9.504897117614746
    9. 'im' → logprob: -9.879897117614746
    10. 'inks' → logprob: -10.129897117614746

Token 1583: ' ' (ID: 220)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.0034852027893066
    2. '1' → logprob: -2.3784852027893066
    3. '17' → logprob: -2.3784852027893066
    4. '(' → logprob: -2.5034852027893066
    5. 'self' → logprob: -2.6284852027893066
    6. 'N' → logprob: -2.6284852027893066
    7. '[N' → logprob: -2.6284852027893066
    8. '20' → logprob: -3.0034852027893066
    9. '0' → logprob: -3.3784852027893066
    10. '[' → logprob: -4.003485202789307

Token 1584: '0' (ID: 15)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.9157847166061401
    2. 'self' → logprob: -1.1657847166061401
    3. '(self' → logprob: -2.4157848358154297
    4. '(' → logprob: -2.9157848358154297
    5. '1' → logprob: -2.9157848358154297
    6. 'ceil' → logprob: -3.2907848358154297
    7. '20' → logprob: -4.66578483581543
    8. 'N' → logprob: -4.66578483581543
    9. '0' → logprob: -5.04078483581543
    10. 'floor' → logprob: -5.16578483581543

Token 1585: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020848175510764122
    2. 'while' → logprob: -4.020848274230957
    3. '       ' → logprob: -6.270848274230957
    4. ' while' → logprob: -7.270848274230957
    5. '
' → logprob: -9.520848274230957
    6. '	while' → logprob: -11.520848274230957
    7. '   ' → logprob: -12.145848274230957
    8. ';' → logprob: -12.395848274230957
    9. ' 
' → logprob: -12.645848274230957
    10. '        
' → logprob: -13.145848274230957

Token 1586: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.49766674637794495
    2. '
' → logprob: -1.2476667165756226
    3. ' while' → logprob: -2.497666835784912
    4. '       ' → logprob: -3.997666835784912
    5. '	while' → logprob: -5.622666835784912
    6. '   ' → logprob: -8.872666358947754
    7. '	' → logprob: -8.997666358947754
    8. 'self' → logprob: -9.497666358947754
    9. '
' → logprob: -10.122666358947754
    10. ' 
' → logprob: -10.497666358947754

Token 1587: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.005671495106071234
    2. '       ' → logprob: -5.255671501159668
    3. ' while' → logprob: -8.255671501159668
    4. 'self' → logprob: -9.380671501159668
    5. 'l' → logprob: -10.755671501159668
    6. 'n' → logprob: -10.880671501159668
    7. '   ' → logprob: -11.005671501159668
    8. 'for' → logprob: -11.130671501159668
    9. '	while' → logprob: -11.880671501159668
    10. 'temp' → logprob: -12.380671501159668

Token 1588: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001051507773809135
    2. '(l' → logprob: -7.751051425933838
    3. '(N' → logprob: -8.001051902770996
    4. '1' → logprob: -8.376051902770996
    5. '(self' → logprob: -10.501051902770996
    6. ' (' → logprob: -11.126051902770996
    7. '2' → logprob: -11.876051902770996
    8. 'self' → logprob: -13.251051902770996
    9. '(n' → logprob: -13.251051902770996
    10. 'l' → logprob: -13.376051902770996

Token 1589: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023297889158129692
    2. '1' → logprob: -3.7732977867126465
    3. '(self' → logprob: -10.773298263549805
    4. '(N' → logprob: -10.898298263549805
    5. 'self' → logprob: -11.773298263549805
    6. ' (' → logprob: -12.898298263549805
    7. '2' → logprob: -13.273298263549805
    8. '
' → logprob: -15.398298263549805
    9. '(True' → logprob: -15.648298263549805
    10. '(l' → logprob: -15.898298263549805

Token 1590: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0485946387052536
    2. ' <<' → logprob: -3.0485947132110596
    3. '<<(' → logprob: -12.04859447479248
    4. '<' → logprob: -13.79859447479248
    5. ' <<=' → logprob: -15.79859447479248
    6. '   ' → logprob: -16.673595428466797
    7. '1' → logprob: -17.173595428466797
    8. ' <' → logprob: -17.923595428466797
    9. ' ' → logprob: -18.298595428466797
    10. ')<<' → logprob: -18.298595428466797

Token 1591: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0001577698567416519
    2. ' l' → logprob: -8.875157356262207
    3. '(l' → logprob: -11.125157356262207
    4. '	l' → logprob: -13.375157356262207
    5. '(' → logprob: -13.500157356262207
    6. '
' → logprob: -16.125158309936523
    7. ' (' → logprob: -16.375158309936523
    8. '   ' → logprob: -17.250158309936523
    9. ' ' → logprob: -17.250158309936523
    10. '1' → logprob: -18.750158309936523

Token 1592: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003042481606826186
    2. ')<' → logprob: -5.878042697906494
    3. ')<=' → logprob: -8.503042221069336
    4. ' )' → logprob: -10.878042221069336
    5. ')<<' → logprob: -12.003042221069336
    6. '<' → logprob: -12.128042221069336
    7. ')!=' → logprob: -13.753042221069336
    8. '<=' → logprob: -14.503042221069336
    9. '```' → logprob: -14.878042221069336
    10. 'l' → logprob: -15.128042221069336

Token 1593: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08320628106594086
    2. '<' → logprob: -2.7082061767578125
    3. '<n' → logprob: -5.0832061767578125
    4. '<=' → logprob: -5.7082061767578125
    5. ' <=' → logprob: -5.8332061767578125
    6. '<len' → logprob: -8.333206176757812
    7. '<N' → logprob: -8.708206176757812
    8. '<<' → logprob: -9.458206176757812
    9. '<s' → logprob: -9.458206176757812
    10. '<w' → logprob: -10.208206176757812

Token 1594: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011067629791796207
    2. 'self' → logprob: -4.511067867279053
    3. ' N' → logprob: -11.261067390441895
    4. ' self' → logprob: -12.011067390441895
    5. '	N' → logprob: -14.386067390441895
    6. '=N' → logprob: -16.13606834411621
    7. '   ' → logprob: -16.38606834411621
    8. '>N' → logprob: -18.01106834411621
    9. '=' → logprob: -18.26106834411621
    10. '(N' → logprob: -18.38606834411621

Token 1595: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.01239827461540699
    2. ':' → logprob: -4.5123982429504395
    3. '   ' → logprob: -7.1373982429504395
    4. '       ' → logprob: -7.7623982429504395
    5. '):
' → logprob: -9.637398719787598
    6. '           ' → logprob: -10.887398719787598
    7. ' and' → logprob: -11.262398719787598
    8. ':
' → logprob: -11.762398719787598
    9. ' :
' → logprob: -12.012398719787598
    10. ',' → logprob: -12.512398719787598

Token 1596: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1734660118818283
    2. '   ' → logprob: -2.0484659671783447
    3. '       ' → logprob: -3.7984659671783447
    4. ' l' → logprob: -5.548466205596924
    5. ':' → logprob: -6.548466205596924
    6. ':
' → logprob: -7.048466205596924
    7. ',l' → logprob: -8.048465728759766
    8. '	   ' → logprob: -8.423465728759766
    9. '	       ' → logprob: -8.673465728759766
    10. '<|end|>' → logprob: -8.673465728759766

Token 1597: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.7100526094436646
    2. '           ' → logprob: -0.9600526094436646
    3. ' l' → logprob: -2.085052490234375
    4. '   ' → logprob: -7.085052490234375
    5. '       ' → logprob: -9.210052490234375
    6. '
' → logprob: -9.335052490234375
    7. '	l' → logprob: -9.835052490234375
    8. '1' → logprob: -10.335052490234375
    9. '               ' → logprob: -10.335052490234375
    10. ' ' → logprob: -11.460052490234375

Token 1598: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.21501268446445465
    2. ' +=' → logprob: -1.7150126695632935
    3. '=' → logprob: -4.465012550354004
    4. ' =' → logprob: -6.215012550354004
    5. ':=' → logprob: -13.965012550354004
    6. '   ' → logprob: -14.465012550354004
    7. '+' → logprob: -14.840012550354004
    8. '       ' → logprob: -14.965012550354004
    9. '.append' → logprob: -15.215012550354004
    10. ':' → logprob: -15.215012550354004

Token 1599: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.750017166137695
    4. 'l' → logprob: -16.125017166137695
    5. '2' → logprob: -16.500017166137695
    6. '
' → logprob: -17.125017166137695
    7. '  ' → logprob: -18.625017166137695
    8. '+' → logprob: -18.812517166137695
    9. ' ' → logprob: -18.875017166137695
    10. '    ' → logprob: -19.750017166137695

Token 1600: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '2' → logprob: -18.0
    4. '
' → logprob: -20.0
    5. '   ' → logprob: -20.625
    6. '１' → logprob: -21.375
    7. '```' → logprob: -22.125
    8. '7' → logprob: -22.125
    9. 'l' → logprob: -22.625
    10. '3' → logprob: -22.8125

Token 1601: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6917530298233032
    2. '       ' → logprob: -0.8167530298233032
    3. 'self' → logprob: -2.9417529106140137
    4. ' self' → logprob: -5.566752910614014
    5. '   ' → logprob: -7.816752910614014
    6. '<|end|>' → logprob: -8.316753387451172
    7. '
' → logprob: -9.691753387451172
    8. '        
' → logprob: -11.066753387451172
    9. '	' → logprob: -11.191753387451172
    10. '	self' → logprob: -11.691753387451172

Token 1602: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6415063142776489
    2. 'self' → logprob: -0.7665063142776489
    3. '
' → logprob: -5.266506195068359
    4. '   ' → logprob: -6.266506195068359
    5. ' self' → logprob: -6.391506195068359
    6. '```' → logprob: -10.01650619506836
    7. '	self' → logprob: -10.64150619506836
    8. '<|end|>' → logprob: -11.39150619506836
    9. '	' → logprob: -11.51650619506836
    10. '           ' → logprob: -11.64150619506836

Token 1603: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004837718792259693
    2. '       ' → logprob: -5.379837512969971
    3. 'from' → logprob: -8.629837989807129
    4. ' self' → logprob: -10.754837989807129
    5. '
' → logprob: -11.504837989807129
    6. 'import' → logprob: -13.004837989807129
    7. 'def' → logprob: -13.629837989807129
    8. '   ' → logprob: -14.004837989807129
    9. 'l' → logprob: -14.129837989807129
    10. 'class' → logprob: -14.254837989807129

Token 1604: '.l' (ID: 1000)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -1.4942303895950317
    2. '.log' → logprob: -2.119230270385742
    3. '.up' → logprob: -2.244230270385742
    4. '.LOG' → logprob: -2.494230270385742
    5. '.k' → logprob: -2.869230270385742
    6. '.l' → logprob: -2.869230270385742
    7. '.P' → logprob: -2.994230270385742
    8. '.par' → logprob: -2.994230270385742
    9. '.L' → logprob: -3.369230270385742
    10. '.dp' → logprob: -3.494230270385742

Token 1605: ' =' (ID: 314)
  Prédit: 'og'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'og' → logprob: -1.167657732963562
    2. 'v' → logprob: -1.417657732963562
    3. 'vl' → logprob: -2.5426578521728516
    4. 'g' → logprob: -2.5426578521728516
    5. 'ca' → logprob: -2.5426578521728516
    6. 'en' → logprob: -2.7926578521728516
    7. 'e' → logprob: -3.1676578521728516
    8. 'ink' → logprob: -3.4176578521728516
    9. 'n' → logprob: -4.042657852172852
    10. 'ev' → logprob: -4.167657852172852

Token 1606: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0067154900170862675
    2. ' l' → logprob: -5.006715297698975
    3. '	l' → logprob: -15.881715774536133
    4. '   ' → logprob: -17.006715774536133
    5. '[' → logprob: -19.256715774536133
    6. '       ' → logprob: -19.881715774536133
    7. '[l' → logprob: -20.256715774536133
    8. '1' → logprob: -20.881715774536133
    9. '    ' → logprob: -20.881715774536133
    10. ' ' → logprob: -21.381715774536133

Token 1607: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024845344945788383
    2. 'self' → logprob: -4.149845123291016
    3. '
' → logprob: -5.649845123291016
    4. '   ' → logprob: -5.649845123291016
    5. ' self' → logprob: -7.024845123291016
    6. '<|end|>' → logprob: -8.149845123291016
    7. ',' → logprob: -8.274845123291016
    8. '	' → logprob: -9.524845123291016
    9. 'def' → logprob: -9.649845123291016
    10. ' ' → logprob: -9.899845123291016

Token 1608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026360645424574614
    2. 'self' → logprob: -6.377635955810547
    3. '   ' → logprob: -7.127635955810547
    4. ' self' → logprob: -9.877635955810547
    5. 'def' → logprob: -10.127635955810547
    6. '	' → logprob: -11.377635955810547
    7. ' ' → logprob: -11.502635955810547
    8. '	self' → logprob: -11.752635955810547
    9. '<|end|>' → logprob: -12.377635955810547
    10. 'from' → logprob: -13.377635955810547

Token 1609: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0021915410179644823
    2. '       ' → logprob: -6.127191543579102
    3. ' self' → logprob: -12.752191543579102
    4. '   ' → logprob: -13.377191543579102
    5. 'from' → logprob: -14.377191543579102
    6. 'def' → logprob: -14.502191543579102
    7. '
' → logprob: -14.752191543579102
    8. '	self' → logprob: -16.2521915435791
    9. 'import' → logprob: -16.5021915435791
    10. '(self' → logprob: -16.7521915435791

Token 1610: '.par' (ID: 36294)
  Prédit: '.par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -0.40900176763534546
    2. '.parent' → logprob: -1.4090018272399902
    3. '.pa' → logprob: -3.7840018272399902
    4. '.up' → logprob: -3.9090018272399902
    5. '.parents' → logprob: -4.53400182723999
    6. '.dp' → logprob: -4.65900182723999
    7. '.p' → logprob: -4.78400182723999
    8. '.n' → logprob: -6.15900182723999
    9. '.d' → logprob: -6.28400182723999
    10. '.' → logprob: -6.53400182723999

Token 1611: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37704044580459595
    2. 'ents' → logprob: -2.127040386199951
    3. ' =' → logprob: -2.252040386199951
    4. 't' → logprob: -2.877040386199951
    5. 'ent' → logprob: -3.752040386199951
    6. 'ts' → logprob: -4.752040386199951
    7. '=[[' → logprob: -7.502040386199951
    8. '=[' → logprob: -8.50204086303711
    9. '=[]' → logprob: -8.87704086303711
    10. 's' → logprob: -9.25204086303711

Token 1612: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31328821182250977
    2. '[[' → logprob: -1.3132882118225098
    3. '[-' → logprob: -11.313287734985352
    4. ' [[' → logprob: -11.313287734985352
    5. '[['' → logprob: -14.688287734985352
    6. ' [[]' → logprob: -14.813287734985352
    7. '[self' → logprob: -15.438287734985352
    8. '[N' → logprob: -15.438287734985352
    9. '[list' → logprob: -15.563287734985352
    10. ' [' → logprob: -15.938287734985352

Token 1613: '([' (ID: 5194)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.5763676762580872
    2. '[' → logprob: -0.8263676762580872
    3. '[[' → logprob: -8.326367378234863
    4. '[self' → logprob: -8.826367378234863
    5. '[N' → logprob: -10.951367378234863
    6. '[(' → logprob: -12.201367378234863
    7. '[]' → logprob: -12.326367378234863
    8. '   ' → logprob: -13.451367378234863
    9. '[list' → logprob: -13.576367378234863
    10. '[n' → logprob: -13.701367378234863

Token 1614: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002632430987432599
    2. 'None' → logprob: -8.500263214111328
    3. '0' → logprob: -10.000263214111328
    4. '[-' → logprob: -12.125263214111328
    5. '(-' → logprob: -12.750263214111328
    6. '-N' → logprob: -12.750263214111328
    7. ' -' → logprob: -14.000263214111328
    8. 'N' → logprob: -14.000263214111328
    9. ']-' → logprob: -15.250263214111328
    10. '
' → logprob: -15.250263214111328

Token 1615: ']' (ID: 60)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.37923464179039
    2. ']' → logprob: -1.2542346715927124
    3. ']*(' → logprob: -4.254234790802002
    4. '0' → logprob: -4.754234790802002
    5. 'for' → logprob: -5.754234790802002
    6. '[N' → logprob: -6.879234790802002
    7. ']+' → logprob: -7.379234790802002
    8. 'None' → logprob: -7.629234790802002
    9. ']<<' → logprob: -7.754234790802002
    10. '<<' → logprob: -7.879234790802002

Token 1616: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18475456535816193
    2. '[' → logprob: -3.1847546100616455
    3. '[N' → logprob: -3.5597546100616455
    4. ' for' → logprob: -3.9347546100616455
    5. '*' → logprob: -4.059754371643066
    6. '0' → logprob: -4.684754371643066
    7. '*[' → logprob: -4.684754371643066
    8. '(N' → logprob: -4.809754371643066
    9. ']*' → logprob: -4.934754371643066
    10. '(' → logprob: -5.184754371643066

Token 1617: ' l' (ID: 305)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5752332210540771
    2. 'N' → logprob: -1.2002332210540771
    3. 'self' → logprob: -2.575233221054077
    4. '(self' → logprob: -2.825233221054077
    5. ' (' → logprob: -7.825233459472656
    6. '(l' → logprob: -8.700233459472656
    7. 'l' → logprob: -8.825233459472656
    8. '(' → logprob: -9.325233459472656
    9. '((' → logprob: -10.825233459472656
    10. ' N' → logprob: -11.325233459472656

Token 1618: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01508028618991375
    2. 'for' → logprob: -4.640080451965332
    3. ' for' → logprob: -6.015080451965332
    4. ' )' → logprob: -6.640080451965332
    5. ')]' → logprob: -7.015080451965332
    6. ')
' → logprob: -9.140080451965332
    7. '+' → logprob: -9.265080451965332
    8. ' ' → logprob: -9.515080451965332
    9. ',' → logprob: -10.140080451965332
    10. 'N' → logprob: -10.140080451965332

Token 1619: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.160243421792984
    2. 'for' → logprob: -1.9102433919906616
    3. '       ' → logprob: -11.910243034362793
    4. ')' → logprob: -12.285243034362793
    5. '   ' → logprob: -12.660243034362793
    6. '	for' → logprob: -13.660243034362793
    7. ']' → logprob: -13.785243034362793
    8. ' ' → logprob: -14.910243034362793
    9. '[:]' → logprob: -15.035243034362793
    10. '[]' → logprob: -15.535243034362793

Token 1620: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0008340472122654319
    2. ' _' → logprob: -7.625833988189697
    3. ' in' → logprob: -8.250834465026855
    4. ' range' → logprob: -10.750834465026855
    5. '_N' → logprob: -10.750834465026855
    6. '
' → logprob: -11.375834465026855
    7. '_range' → logprob: -11.500834465026855
    8. 'in' → logprob: -12.000834465026855
    9. 'range' → logprob: -12.250834465026855
    10. '_i' → logprob: -12.625834465026855

Token 1621: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0020320152398198843
    2. ' range' → logprob: -6.2520318031311035
    3. '_' → logprob: -9.752032279968262
    4. '_range' → logprob: -10.127032279968262
    5. 'in' → logprob: -13.002032279968262
    6. '
' → logprob: -13.252032279968262
    7. '	range' → logprob: -14.877032279968262
    8. ' in' → logprob: -15.127032279968262
    9. '(range' → logprob: -15.252032279968262
    10. '   ' → logprob: -16.127031326293945

Token 1622: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003362966235727072
    2. ' range' → logprob: -8.000336647033691
    3. '(range' → logprob: -14.375336647033691
    4. '   ' → logprob: -15.875336647033691
    5. '
' → logprob: -16.000335693359375
    6. 'N' → logprob: -17.500335693359375
    7. '       ' → logprob: -18.000335693359375
    8. '           ' → logprob: -19.125335693359375
    9. '[' → logprob: -19.250335693359375
    10. '
' → logprob: -19.750335693359375

Token 1623: '(N' (ID: 10564)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02757338620722294
    2. ' range' → logprob: -3.777573347091675
    3. 'N' → logprob: -5.527573585510254
    4. '(range' → logprob: -8.277573585510254
    5. '(N' → logprob: -9.527573585510254
    6. '[N' → logprob: -11.402573585510254
    7. '   ' → logprob: -12.902573585510254
    8. '       ' → logprob: -14.527573585510254
    9. '
' → logprob: -14.777573585510254
    10. '[' → logprob: -15.152573585510254

Token 1624: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.5804142951965332
    2. ']' → logprob: -0.8304142951965332
    3. ')' → logprob: -5.705414295196533
    4. '])' → logprob: -7.705414295196533
    5. '       ' → logprob: -8.205413818359375
    6. ' ]' → logprob: -8.330413818359375
    7. '()]' → logprob: -9.830413818359375
    8. '])]' → logprob: -10.580413818359375
    9. ']
' → logprob: -10.705413818359375
    10. ')])' → logprob: -11.080413818359375

Token 1625: ' ' (ID: 220)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.013334466144442558
    2. '1' → logprob: -4.513334274291992
    3. 'self' → logprob: -6.138334274291992
    4. '(' → logprob: -10.513334274291992
    5. '2' → logprob: -10.763334274291992
    6. ')' → logprob: -10.763334274291992
    7. '(l' → logprob: -11.013334274291992
    8. '(self' → logprob: -11.138334274291992
    9. ' l' → logprob: -12.138334274291992
    10. '```' → logprob: -13.138334274291992

Token 1626: '1' (ID: 16)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.010973422788083553
    2. 'self' → logprob: -5.2609734535217285
    3. '1' → logprob: -5.8859734535217285
    4. '(l' → logprob: -6.3859734535217285
    5. '(self' → logprob: -7.1359734535217285
    6. '(' → logprob: -8.63597297668457
    7. 'N' → logprob: -9.38597297668457
    8. '(N' → logprob: -9.76097297668457
    9. '2' → logprob: -10.26097297668457
    10. ' (' → logprob: -10.76097297668457

Token 1627: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.028604505583643913
    2. ']' → logprob: -3.653604507446289
    3. '[' → logprob: -6.403604507446289
    4. '])' → logprob: -8.778604507446289
    5. '])]' → logprob: -8.903604507446289
    6. ')]
' → logprob: -9.153604507446289
    7. ')' → logprob: -9.653604507446289
    8. '][' → logprob: -9.903604507446289
    9. ' ]' → logprob: -10.403604507446289
    10. '       ' → logprob: -10.778604507446289

Token 1628: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08400332182645798
    2. 'def' → logprob: -3.584003210067749
    3. ' def' → logprob: -3.834003210067749
    4. '<|end|>' → logprob: -3.959003210067749
    5. '
' → logprob: -4.834003448486328
    6. ')' → logprob: -6.959003448486328
    7. '	def' → logprob: -7.084003448486328
    8. ' ' → logprob: -7.084003448486328
    9. '       ' → logprob: -7.459003448486328
    10. '```' → logprob: -7.584003448486328

Token 1629: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5865076184272766
    2. '   ' → logprob: -1.3365075588226318
    3. ' def' → logprob: -1.7115075588226318
    4. '
' → logprob: -8.086507797241211
    5. ' ' → logprob: -10.711507797241211
    6. '<|end|>' → logprob: -11.211507797241211
    7. '```' → logprob: -11.461507797241211
    8. '	def' → logprob: -11.711507797241211
    9. '       ' → logprob: -12.211507797241211
    10. '    
' → logprob: -12.461507797241211

Token 1630: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.027231918647885323
    2. '_add' → logprob: -4.527231693267822
    3. 'build' → logprob: -5.277231693267822
    4. 'init' → logprob: -5.652231693267822
    5. ' add' → logprob: -5.902231693267822
    6. 'dfs' → logprob: -6.152231693267822
    7. '__' → logprob: -7.152231693267822
    8. '_init' → logprob: -8.27723217010498
    9. 'depth' → logprob: -8.40223217010498
    10. 'make' → logprob: -8.65223217010498

Token 1631: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -3.0948158382670954e-05
    2. 'edge' → logprob: -11.125030517578125
    3. '_' → logprob: -12.375030517578125
    4. '(self' → logprob: -12.625030517578125
    5. '_edges' → logprob: -13.000030517578125
    6. '_node' → logprob: -13.250030517578125
    7. 'self' → logprob: -13.625030517578125
    8. '(_' → logprob: -14.125030517578125
    9. '```' → logprob: -14.750030517578125
    10. '_vertex' → logprob: -14.875030517578125

Token 1632: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02598581090569496
    2. '(' → logprob: -3.7759857177734375
    3. '(a' → logprob: -6.0259857177734375
    4. 'def' → logprob: -9.150985717773438
    5. '   ' → logprob: -9.775985717773438
    6. ' (' → logprob: -9.900985717773438
    7. 'self' → logprob: -10.025985717773438
    8. '(
' → logprob: -11.400985717773438
    9. '```' → logprob: -11.525985717773438
    10. '=' → logprob: -12.150985717773438

Token 1633: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00034476007567718625
    2. '(' → logprob: -8.625345230102539
    3. '(a' → logprob: -9.250345230102539
    4. 'self' → logprob: -10.500345230102539
    5. ')(' → logprob: -10.875345230102539
    6. ')' → logprob: -12.125345230102539
    7. 'def' → logprob: -12.250345230102539
    8. '   ' → logprob: -12.625345230102539
    9. ' (' → logprob: -12.625345230102539
    10. '```' → logprob: -13.000345230102539

Token 1634: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4533858299255371
    2. 'self' → logprob: -1.203385829925537
    3. 'u' → logprob: -2.953385829925537
    4. ' self' → logprob: -5.203385829925537
    5. 'x' → logprob: -6.203385829925537
    6. 'v' → logprob: -6.453385829925537
    7. 'lambda' → logprob: -6.703385829925537
    8. ' a' → logprob: -7.203385829925537
    9. ')' → logprob: -7.703385829925537
    10. ' u' → logprob: -8.578386306762695

Token 1635: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012332366895861924
    2. ',a' → logprob: -9.750123023986816
    3. '[' → logprob: -11.000123023986816
    4. '[],' → logprob: -11.375123023986816
    5. ' ,' → logprob: -11.625123023986816
    6. 'a' → logprob: -12.125123023986816
    7. '):
' → logprob: -12.250123023986816
    8. '   ' → logprob: -12.250123023986816
    9. '[a' → logprob: -12.375123023986816
    10. 'self' → logprob: -13.125123023986816

Token 1636: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25358155369758606
    2. 'b' → logprob: -1.5035815238952637
    3. ' int' → logprob: -7.253581523895264
    4. '(int' → logprob: -7.753581523895264
    5. ' b' → logprob: -7.878581523895264
    6. '[int' → logprob: -10.128582000732422
    7. ',' → logprob: -10.378582000732422
    8. ',int' → logprob: -10.378582000732422
    9. ':int' → logprob: -11.753582000732422
    10. ',b' → logprob: -12.003582000732422

Token 1637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.650518920039758e-06
    2. ' ,' → logprob: -12.750003814697266
    3. ',b' → logprob: -15.375003814697266
    4. '   ' → logprob: -15.625003814697266
    5. ',a' → logprob: -16.000003814697266
    6. '[],' → logprob: -17.500003814697266
    7. ',
' → logprob: -17.750003814697266
    8. '‌,' → logprob: -17.750003814697266
    9. '       ' → logprob: -18.250003814697266
    10. ',int' → logprob: -18.375003814697266

Token 1638: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023247575387358665
    2. ' b' → logprob: -3.773247480392456
    3. '   ' → logprob: -13.523247718811035
    4. '    ' → logprob: -14.523247718811035
    5. '  ' → logprob: -16.52324676513672
    6. ' ' → logprob: -17.02324676513672
    7. 'int' → logprob: -17.39824676513672
    8. 'v' → logprob: -17.64824676513672
    9. '	b' → logprob: -17.89824676513672
    10. '       ' → logprob: -18.52324676513672

Token 1639: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0445127372804563e-05
    2. ' ,' → logprob: -11.62501049041748
    3. '   ' → logprob: -14.12501049041748
    4. ':' → logprob: -14.87501049041748
    5. ',int' → logprob: -16.250009536743164
    6. ':int' → logprob: -16.375009536743164
    7. '_,' → logprob: -16.875009536743164
    8. '):
' → logprob: -16.875009536743164
    9. ')' → logprob: -17.750009536743164
    10. ',
' → logprob: -18.000009536743164

Token 1640: ' int' (ID: 677)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.061751365661621
    2. 'int' → logprob: -1.311751365661621
    3. 'list' → logprob: -1.561751365661621
    4. ' list' → logprob: -3.186751365661621
    5. 'a' → logprob: -3.436751365661621
    6. '[int' → logprob: -3.436751365661621
    7. ' int' → logprob: -3.811751365661621
    8. ')' → logprob: -3.936751365661621
    9. '[' → logprob: -4.561751365661621
    10. ' [' → logprob: -4.936751365661621

Token 1641: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.673547563375905e-05
    2. ' ,' → logprob: -10.125086784362793
    3. '):
' → logprob: -10.625086784362793
    4. ')' → logprob: -11.000086784362793
    5. '   ' → logprob: -12.875086784362793
    6. '):' → logprob: -12.875086784362793
    7. '),' → logprob: -15.625086784362793
    8. '       ' → logprob: -16.250085830688477
    9. ',
' → logprob: -16.375085830688477
    10. '):
' → logprob: -17.250085830688477

Token 1642: ' c' (ID: 274)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.29921942949295044
    2. '1' → logprob: -1.7992193698883057
    3. ' ' → logprob: -2.5492193698883057
    4. 'dist' → logprob: -5.549219608306885
    5. 'c' → logprob: -6.174219608306885
    6. ')' → logprob: -6.299219608306885
    7. 'cost' → logprob: -6.674219608306885
    8. 'a' → logprob: -6.674219608306885
    9. 'b' → logprob: -6.924219608306885
    10. 'None' → logprob: -7.799219608306885

Token 1643: '=' (ID: 28)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11186448484659195
    2. '):' → logprob: -2.3618645668029785
    3. ')' → logprob: -4.6118645668029785
    4. ':' → logprob: -6.9868645668029785
    5. '):
' → logprob: -8.36186408996582
    6. '=' → logprob: -8.73686408996582
    7. '   ' → logprob: -8.73686408996582
    8. ' ):
' → logprob: -9.11186408996582
    9. ' ):' → logprob: -10.73686408996582
    10. '):

' → logprob: -11.36186408996582

Token 1644: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0245469119399786
    2. '1' → logprob: -3.8995468616485596
    3. ' ' → logprob: -5.524547100067139
    4. 'None' → logprob: -12.39954662322998
    5. ' None' → logprob: -12.89954662322998
    6. ')' → logprob: -13.89954662322998
    7. '):
' → logprob: -14.14954662322998
    8. '=' → logprob: -14.52454662322998
    9. '=None' → logprob: -15.64954662322998
    10. '   ' → logprob: -16.524547576904297

Token 1645: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2548518180847168
    2. '):' → logprob: -1.5048518180847168
    3. ')' → logprob: -6.129851818084717
    4. '):
' → logprob: -7.254851818084717
    5. ' ):
' → logprob: -10.879852294921875
    6. ' ):' → logprob: -11.754852294921875
    7. '   ' → logprob: -12.379852294921875
    8. '):

' → logprob: -12.879852294921875
    9. ' )' → logprob: -14.004852294921875
    10. '):

' → logprob: -16.629852294921875

Token 1646: ' ->' (ID: 2747)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.37995263934135437
    2. ':' → logprob: -1.2549526691436768
    3. '):
' → logprob: -3.8799526691436768
    4. '       ' → logprob: -5.129952430725098
    5. '   ' → logprob: -5.754952430725098
    6. '):' → logprob: -7.379952430725098
    7. ')' → logprob: -8.004952430725098
    8. ':
' → logprob: -8.754952430725098
    9. ',' → logprob: -9.629952430725098
    10. '():
' → logprob: -11.004952430725098

Token 1647: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.014164566993713379
    2. ' None' → logprob: -4.264164447784424
    3. '_None' → logprob: -14.139164924621582
    4. '=None' → logprob: -16.014163970947266
    5. '   ' → logprob: -16.264163970947266
    6. '(None' → logprob: -17.264163970947266
    7. '_none' → logprob: -18.389163970947266
    8. ')' → logprob: -18.514163970947266
    9. '):
' → logprob: -18.639163970947266
    10. ',None' → logprob: -18.764163970947266

Token 1648: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8954945802688599
    2. ':
' → logprob: -1.0204945802688599
    3. ':' → logprob: -1.5204945802688599
    4. '):
' → logprob: -4.52049446105957
    5. ',' → logprob: -7.64549446105957
    6. '   ' → logprob: -7.89549446105957
    7. '):' → logprob: -8.14549446105957
    8. '<|end|>' → logprob: -8.64549446105957
    9. '():
' → logprob: -9.14549446105957
    10. ' :
' → logprob: -10.02049446105957

Token 1649: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021521867893170565
    2. ' self' → logprob: -9.125215530395508
    3. 'self' → logprob: -10.500215530395508
    4. '   ' → logprob: -10.875215530395508
    5. '	' → logprob: -11.000215530395508
    6. '        
' → logprob: -12.000215530395508
    7. 'a' → logprob: -12.125215530395508
    8. '<|end|>' → logprob: -12.125215530395508
    9. '```' → logprob: -12.375215530395508
    10. '
' → logprob: -13.000215530395508

Token 1650: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01454340573400259
    2. '       ' → logprob: -4.264543533325195
    3. ' self' → logprob: -7.889543533325195
    4. '   ' → logprob: -12.639543533325195
    5. '	self' → logprob: -13.639543533325195
    6. '```' → logprob: -15.014543533325195
    7. '[self' → logprob: -15.639543533325195
    8. '#' → logprob: -16.264543533325195
    9. '           ' → logprob: -17.014543533325195
    10. '	' → logprob: -17.014543533325195

Token 1651: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -1.9361264946837764e-07
    2. 'to' → logprob: -16.375
    3. ' .' → logprob: -17.625
    4. '.' → logprob: -18.125
    5. '
' → logprob: -19.5
    6. '[to' → logprob: -20.0
    7. '.
' → logprob: -20.875
    8. '.self' → logprob: -21.75
    9. '.To' → logprob: -21.875
    10. 'self' → logprob: -22.125

Token 1652: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -9.088346359931165e-07
    2. 'a' → logprob: -14.000000953674316
    3. '[' → logprob: -18.375
    4. '```' → logprob: -18.375
    5. '
' → logprob: -18.625
    6. '[b' → logprob: -20.0
    7. '   ' → logprob: -20.125
    8. ' [' → logprob: -20.75
    9. '[self' → logprob: -21.25
    10. '[c' → logprob: -21.75

Token 1653: '].' (ID: 1651)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.011546770110726357
    2. '].' → logprob: -4.511546611785889
    3. '.append' → logprob: -7.886546611785889
    4. '   ' → logprob: -9.511547088623047
    5. '][' → logprob: -11.011547088623047
    6. '       ' → logprob: -11.011547088623047
    7. ').' → logprob: -12.261547088623047
    8. '[b' → logprob: -12.761547088623047
    9. 'a' → logprob: -13.386547088623047
    10. ' [' → logprob: -13.511547088623047

Token 1654: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.2664456789934775e-06
    2. '.append' → logprob: -13.750000953674316
    3. ' append' → logprob: -15.750000953674316
    4. '_append' → logprob: -19.500001907348633
    5. 'appen' → logprob: -20.500001907348633
    6. 'Append' → logprob: -20.625001907348633
    7. '	append' → logprob: -20.625001907348633
    8. 'app' → logprob: -22.000001907348633
    9. 'insert' → logprob: -22.250001907348633
    10. 'push' → logprob: -23.125001907348633

Token 1655: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015031944494694471
    2. '(b' → logprob: -6.501502990722656
    3. ' b' → logprob: -14.001502990722656
    4. '	b' → logprob: -16.751502990722656
    5. ')b' → logprob: -18.626502990722656
    6. '   ' → logprob: -19.876502990722656
    7. '_b' → logprob: -20.376502990722656
    8. ',b' → logprob: -20.626502990722656
    9. '(' → logprob: -21.126502990722656
    10. '.b' → logprob: -21.251502990722656

Token 1656: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023389896377921104
    2. ')
' → logprob: -3.7733898162841797
    3. '       ' → logprob: -8.89838981628418
    4. ' )' → logprob: -12.64838981628418
    5. '),' → logprob: -13.77338981628418
    6. ')
' → logprob: -14.27338981628418
    7. '<|end|>' → logprob: -14.39838981628418
    8. '   ' → logprob: -14.77338981628418
    9. ' )
' → logprob: -14.77338981628418
    10. ')

' → logprob: -15.52338981628418

Token 1657: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009984850883483887
    2. '<|end|>' → logprob: -4.759984970092773
    3. '	' → logprob: -7.634984970092773
    4. 'self' → logprob: -8.384984970092773
    5. ')' → logprob: -8.759984970092773
    6. '	self' → logprob: -8.884984970092773
    7. '	       ' → logprob: -9.634984970092773
    8. ',' → logprob: -10.134984970092773
    9. '   ' → logprob: -10.259984970092773
    10. ' self' → logprob: -10.384984970092773

Token 1658: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0007348202052526176
    2. '       ' → logprob: -7.250734806060791
    3. ' self' → logprob: -10.62573528289795
    4. '   ' → logprob: -15.50073528289795
    5. 'return' → logprob: -15.75073528289795
    6. '	self' → logprob: -15.87573528289795
    7. '           ' → logprob: -17.250734329223633
    8. 'def' → logprob: -17.375734329223633
    9. '[self' → logprob: -17.500734329223633
    10. '(self' → logprob: -18.125734329223633

Token 1659: '.co' (ID: 10914)
  Prédit: '.co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.co' → logprob: -0.0014222568133845925
    2. 'co' → logprob: -6.87642240524292
    3. '.to' → logprob: -8.126421928405762
    4. 'to' → logprob: -9.626421928405762
    5. '.coe' → logprob: -11.376421928405762
    6. '.par' → logprob: -11.751421928405762
    7. '.cost' → logprob: -13.126421928405762
    8. '.' → logprob: -13.376421928405762
    9. ' .' → logprob: -13.751421928405762
    10. '
' → logprob: -13.876421928405762

Token 1660: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -4.5491004129871726e-05
    2. 'a' → logprob: -10.000045776367188
    3. '[b' → logprob: -16.750045776367188
    4. '   ' → logprob: -17.250045776367188
    5. '[' → logprob: -18.000045776367188
    6. ' [' → logprob: -18.500045776367188
    7. '```' → logprob: -18.625045776367188
    8. ' a' → logprob: -19.125045776367188
    9. '(a' → logprob: -19.375045776367188
    10. '[c' → logprob: -19.625045776367188

Token 1661: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10789696872234344
    2. ').' → logprob: -2.3578970432281494
    3. '       ' → logprob: -5.73289680480957
    4. '].' → logprob: -6.23289680480957
    5. '.' → logprob: -6.35789680480957
    6. '   ' → logprob: -7.98289680480957
    7. ' .' → logprob: -8.23289680480957
    8. '           ' → logprob: -10.48289680480957
    9. '  ' → logprob: -11.10789680480957
    10. ')' → logprob: -11.23289680480957

Token 1662: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. '.append' → logprob: -15.25
    3. ' append' → logprob: -15.75
    4. 'appen' → logprob: -17.875
    5. 'app' → logprob: -18.875
    6. '	append' → logprob: -19.625
    7. '_append' → logprob: -20.875
    8. 'Append' → logprob: -21.5
    9. 'appe' → logprob: -23.625
    10. 'add' → logprob: -23.875

Token 1663: '(c' (ID: 2410)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00010366239439463243
    2. ' c' → logprob: -9.250103950500488
    3. '   ' → logprob: -13.000103950500488
    4. '(c' → logprob: -13.125103950500488
    5. '	c' → logprob: -13.375103950500488
    6. ')c' → logprob: -14.000103950500488
    7. '0' → logprob: -15.125103950500488
    8. '
' → logprob: -15.625103950500488
    9. ' ' → logprob: -16.750102996826172
    10. '(' → logprob: -16.750102996826172

Token 1664: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027181115001440048
    2. '       ' → logprob: -4.152181148529053
    3. '<|end|>' → logprob: -4.527181148529053
    4. ')
' → logprob: -8.777180671691895
    5. '<|end|>' → logprob: -9.402180671691895
    6. '   ' → logprob: -12.027180671691895
    7. ',' → logprob: -12.152180671691895
    8. '),' → logprob: -12.402180671691895
    9. ' )' → logprob: -12.527180671691895
    10. ')return' → logprob: -12.902180671691895

Token 1665: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.5491004129871726e-05
    2. 'self' → logprob: -10.375045776367188
    3. '   ' → logprob: -12.125045776367188
    4. '```' → logprob: -12.250045776367188
    5. ' ' → logprob: -14.125045776367188
    6. ' self' → logprob: -14.250045776367188
    7. '<|end|>' → logprob: -14.375045776367188
    8. ',' → logprob: -14.375045776367188
    9. '
' → logprob: -14.875045776367188
    10. '	' → logprob: -15.125045776367188

Token 1666: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0040823169983923435
    2. '       ' → logprob: -5.504082202911377
    3. ' self' → logprob: -13.254082679748535
    4. '   ' → logprob: -13.504082679748535
    5. 'def' → logprob: -14.504082679748535
    6. '#' → logprob: -16.87908172607422
    7. '	self' → logprob: -17.37908172607422
    8. '(self' → logprob: -17.87908172607422
    9. '           ' → logprob: -18.25408172607422
    10. '[self' → logprob: -18.37908172607422

Token 1667: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -1.282920129597187e-05
    2. 'to' → logprob: -11.375012397766113
    3. '.par' → logprob: -13.750012397766113
    4. '.' → logprob: -16.12501335144043
    5. 'par' → logprob: -16.87501335144043
    6. '   ' → logprob: -17.75001335144043
    7. 'To' → logprob: -17.75001335144043
    8. ' .' → logprob: -18.00001335144043
    9. '[to' → logprob: -18.00001335144043
    10. '.co' → logprob: -18.62501335144043

Token 1668: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.700132997939363e-05
    2. 'b' → logprob: -11.000017166137695
    3. '[' → logprob: -16.250017166137695
    4. '[a' → logprob: -16.625017166137695
    5. '```' → logprob: -18.000017166137695
    6. '   ' → logprob: -19.250017166137695
    7. ' [' → logprob: -19.375017166137695
    8. '	b' → logprob: -20.000017166137695
    9. '[m' → logprob: -20.000017166137695
    10. '
' → logprob: -20.250017166137695

Token 1669: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.20670442283153534
    2. '.append' → logprob: -1.9567043781280518
    3. ').' → logprob: -3.9567043781280518
    4. '       ' → logprob: -4.706704616546631
    5. '[b' → logprob: -4.831704616546631
    6. '.' → logprob: -5.331704616546631
    7. '[a' → logprob: -5.706704616546631
    8. ' .' → logprob: -7.831704616546631
    9. '[' → logprob: -8.581704139709473
    10. '   ' → logprob: -8.706704139709473

Token 1670: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.8590300139039755e-05
    2. '.append' → logprob: -10.000048637390137
    3. 'app' → logprob: -13.625048637390137
    4. ' append' → logprob: -14.125048637390137
    5. 'a' → logprob: -14.750048637390137
    6. 'appen' → logprob: -15.625048637390137
    7. 'Append' → logprob: -15.875048637390137
    8. '_append' → logprob: -15.875048637390137
    9. 'b' → logprob: -16.25004768371582
    10. '	append' → logprob: -16.25004768371582

Token 1671: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0009117019944824278
    2. '(a' → logprob: -7.000911712646484
    3. ' a' → logprob: -15.125911712646484
    4. '   ' → logprob: -18.125911712646484
    5. '	a' → logprob: -18.750911712646484
    6. '[a' → logprob: -18.875911712646484
    7. ' (' → logprob: -20.125911712646484
    8. '       ' → logprob: -20.250911712646484
    9. 'а' → logprob: -20.500911712646484
    10. '
' → logprob: -20.875911712646484

Token 1672: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08232121914625168
    2. ')' → logprob: -2.5823211669921875
    3. '       ' → logprob: -5.7073211669921875
    4. '<|end|>' → logprob: -9.332321166992188
    5. ')
' → logprob: -12.707321166992188
    6. ' )
' → logprob: -12.707321166992188
    7. 'self' → logprob: -13.332321166992188
    8. '<|end|>' → logprob: -13.707321166992188
    9. '   ' → logprob: -14.207321166992188
    10. ')#' → logprob: -14.332321166992188

Token 1673: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9623810658231378e-05
    2. 'self' → logprob: -11.375020027160645
    3. '<|end|>' → logprob: -12.125020027160645
    4. ',' → logprob: -14.000020027160645
    5. '   ' → logprob: -14.375020027160645
    6. '	' → logprob: -15.375020027160645
    7. '<|end|>' → logprob: -15.875020027160645
    8. '           ' → logprob: -15.875020027160645
    9. 'def' → logprob: -16.125019073486328
    10. '      ' → logprob: -16.375019073486328

Token 1674: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0003633521846495569
    2. '       ' → logprob: -8.12536334991455
    3. ' self' → logprob: -9.62536334991455
    4. '   ' → logprob: -15.00036334991455
    5. '	self' → logprob: -15.00036334991455
    6. '(self' → logprob: -15.75036334991455
    7. '[self' → logprob: -16.000364303588867
    8. ' ' → logprob: -16.875364303588867
    9. '           ' → logprob: -17.000364303588867
    10. '      ' → logprob: -17.375364303588867

Token 1675: '.co' (ID: 10914)
  Prédit: '.co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.co' → logprob: -2.339278580620885e-06
    2. 'co' → logprob: -13.250001907348633
    3. '.coe' → logprob: -15.125001907348633
    4. '.' → logprob: -16.250001907348633
    5. ' .' → logprob: -16.625001907348633
    6. '.c' → logprob: -17.625001907348633
    7. '_co' → logprob: -17.750001907348633
    8. '.CO' → logprob: -18.125001907348633
    9. '.coin' → logprob: -18.125001907348633
    10. '
' → logprob: -18.250001907348633

Token 1676: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -8.602024900028482e-05
    2. 'b' → logprob: -9.375085830688477
    3. '[a' → logprob: -13.875085830688477
    4. '```' → logprob: -16.375085830688477
    5. '[
' → logprob: -17.625085830688477
    6. '	b' → logprob: -17.875085830688477
    7. '[c' → logprob: -18.125085830688477
    8. '[' → logprob: -18.500085830688477
    9. '\b' → logprob: -18.625085830688477
    10. '   ' → logprob: -18.875085830688477

Token 1677: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.17499347031116486
    2. '].' → logprob: -1.9249935150146484
    3. ').' → logprob: -4.674993515014648
    4. '[b' → logprob: -5.299993515014648
    5. '.' → logprob: -9.174993515014648
    6. 'append' → logprob: -9.174993515014648
    7. ' .' → logprob: -9.549993515014648
    8. '   ' → logprob: -11.549993515014648
    9. '[' → logprob: -11.549993515014648
    10. '[].' → logprob: -11.924993515014648

Token 1678: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.00010986098641296849
    2. '.append' → logprob: -9.125109672546387
    3. ' append' → logprob: -14.125109672546387
    4. 'appen' → logprob: -15.750109672546387
    5. '	append' → logprob: -17.250110626220703
    6. 'app' → logprob: -17.875110626220703
    7. '   ' → logprob: -18.125110626220703
    8. 'Append' → logprob: -18.500110626220703
    9. '```' → logprob: -18.750110626220703
    10. 'b' → logprob: -19.875110626220703

Token 1679: '(c' (ID: 2410)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.054893337190151215
    2. '(c' → logprob: -2.9298932552337646
    3. ' c' → logprob: -12.429893493652344
    4. '[c' → logprob: -13.054893493652344
    5. '
' → logprob: -13.429893493652344
    6. ')c' → logprob: -13.929893493652344
    7. 'self' → logprob: -14.554893493652344
    8. '       ' → logprob: -14.804893493652344
    9. '0' → logprob: -15.054893493652344
    10. '	c' → logprob: -15.429893493652344

Token 1680: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008687022142112255
    2. '<|end|>' → logprob: -4.8836870193481445
    3. '       ' → logprob: -7.1336870193481445
    4. '<|end|>' → logprob: -8.758687019348145
    5. ')
' → logprob: -9.758687019348145
    6. '()' → logprob: -11.008687019348145
    7. '())' → logprob: -11.883687019348145
    8. ')return' → logprob: -12.008687019348145
    9. '```' → logprob: -12.508687019348145
    10. '')' → logprob: -12.633687019348145

Token 1681: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002614659257233143
    2. '   ' → logprob: -6.377614498138428
    3. ' def' → logprob: -7.502614498138428
    4. '
' → logprob: -8.002614974975586
    5. '```' → logprob: -11.002614974975586
    6. '	def' → logprob: -12.252614974975586
    7. '    
' → logprob: -13.002614974975586
    8. 'import' → logprob: -14.877614974975586
    9. 'from' → logprob: -15.002614974975586
    10. 'The' → logprob: -15.627614974975586

Token 1682: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.024606114253401756
    2. '   ' → logprob: -4.149606227874756
    3. ' def' → logprob: -4.774606227874756
    4. '
' → logprob: -9.524605751037598
    5. '```' → logprob: -11.524605751037598
    6. '	def' → logprob: -12.024605751037598
    7. ' ' → logprob: -13.274605751037598
    8. 'async' → logprob: -14.399605751037598
    9. '    
' → logprob: -14.524605751037598
    10. 'The' → logprob: -14.524605751037598

Token 1683: ' _' (ID: 1175)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.20946936309337616
    2. 'init' → logprob: -1.8344693183898926
    3. '_init' → logprob: -4.209469318389893
    4. '_d' → logprob: -5.459469318389893
    5. 'build' → logprob: -5.834469318389893
    6. 'b' → logprob: -6.084469318389893
    7. '_b' → logprob: -6.209469318389893
    8. '__' → logprob: -7.084469318389893
    9. 'calc' → logprob: -7.834469318389893
    10. ' dfs' → logprob: -8.58446979522705

Token 1684: 'b' (ID: 65)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.038171395659446716
    2. 'init' → logprob: -3.6631712913513184
    3. 'build' → logprob: -4.913171291351318
    4. '_' → logprob: -6.663171291351318
    5. 'b' → logprob: -7.538171291351318
    6. 'depth' → logprob: -8.038171768188477
    7. '_b' → logprob: -8.038171768188477
    8. 'prepare' → logprob: -8.288171768188477
    9. '_init' → logprob: -8.538171768188477
    10. 'pre' → logprob: -8.663171768188477

Token 1685: 'fs' (ID: 6469)
  Prédit: 'uild'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uild' → logprob: -0.4753555655479431
    2. 'fs' → logprob: -0.9753555655479431
    3. 'dfs' → logprob: -6.850355625152588
    4. 'ld' → logprob: -8.85035514831543
    5. 'uilt' → logprob: -10.10035514831543
    6. 'build' → logprob: -11.35035514831543
    7. 'uilder' → logprob: -12.35035514831543
    8. 'uil' → logprob: -12.35035514831543
    9. '_' → logprob: -12.85035514831543
    10. 'inary' → logprob: -13.85035514831543

Token 1686: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011450992315076292
    2. '   ' → logprob: -9.625114440917969
    3. '(' → logprob: -10.375114440917969
    4. ' (' → logprob: -12.375114440917969
    5. '(s' → logprob: -12.625114440917969
    6. '(root' → logprob: -12.750114440917969
    7. 'self' → logprob: -13.000114440917969
    8. 'def' → logprob: -13.000114440917969
    9. '       ' → logprob: -13.500114440917969
    10. '(
' → logprob: -15.375114440917969

Token 1687: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11742813140153885
    2. 'fs' → logprob: -2.8674280643463135
    3. '   ' → logprob: -3.2424280643463135
    4. 'self' → logprob: -5.242428302764893
    5. ')' → logprob: -5.617428302764893
    6. 'def' → logprob: -5.992428302764893
    7. '(' → logprob: -6.992428302764893
    8. 'f' → logprob: -8.492427825927734
    9. 'd' → logprob: -8.617427825927734
    10. '(root' → logprob: -8.742427825927734

Token 1688: ' root' (ID: 6577)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5686308145523071
    2. 'root' → logprob: -1.4436308145523071
    3. '0' → logprob: -2.6936306953430176
    4. '1' → logprob: -3.3186306953430176
    5. 'start' → logprob: -3.3186306953430176
    6. ')' → logprob: -3.5686306953430176
    7. 'r' → logprob: -3.6936306953430176
    8. 'self' → logprob: -6.943630695343018
    9. 'q' → logprob: -7.568630695343018
    10. 'v' → logprob: -7.693630695343018

Token 1689: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07237911224365234
    2. 'self' → logprob: -3.5723791122436523
    3. '):
' → logprob: -4.072379112243652
    4. '   ' → logprob: -4.197379112243652
    5. '       ' → logprob: -5.447379112243652
    6. '(self' → logprob: -5.447379112243652
    7. ',self' → logprob: -7.572379112243652
    8. '):' → logprob: -7.822379112243652
    9. ' self' → logprob: -10.322379112243652
    10. ')' → logprob: -10.947379112243652

Token 1690: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6171691417694092
    2. '0' → logprob: -0.9921691417694092
    3. 'root' → logprob: -2.492169141769409
    4. ')' → logprob: -5.117169380187988
    5. 'self' → logprob: -7.367169380187988
    6. '):
' → logprob: -9.367169380187988
    7. '...' → logprob: -10.117169380187988
    8. '   ' → logprob: -10.117169380187988
    9. '
' → logprob: -10.242169380187988
    10. '[int' → logprob: -10.367169380187988

Token 1691: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.028330136090517044
    2. '):' → logprob: -3.653330087661743
    3. ')' → logprob: -6.403330326080322
    4. '):
' → logprob: -8.153329849243164
    5. '   ' → logprob: -9.528329849243164
    6. '       ' → logprob: -12.028329849243164
    7. '):

' → logprob: -13.153329849243164
    8. ',' → logprob: -13.528329849243164
    9. ' ):
' → logprob: -14.778329849243164
    10. ')->' → logprob: -14.903329849243164

Token 1692: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6991531848907471
    2. '   ' → logprob: -1.574153184890747
    3. ':
' → logprob: -1.949153184890747
    4. ':' → logprob: -2.199153184890747
    5. '(self' → logprob: -3.324153184890747
    6. '):
' → logprob: -5.449152946472168
    7. ',' → logprob: -7.824152946472168
    8. '):' → logprob: -8.074152946472168
    9. 'self' → logprob: -8.199152946472168
    10. '	self' → logprob: -8.699152946472168

Token 1693: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0044826967641711235
    2. '
' → logprob: -6.629482746124268
    3. 'deque' → logprob: -6.629482746124268
    4. 'def' → logprob: -7.254482746124268
    5. '   ' → logprob: -7.379482746124268
    6. '(None' → logprob: -8.50448226928711
    7. ' None' → logprob: -9.12948226928711
    8. 'from' → logprob: -10.25448226928711
    9. 'queue' → logprob: -10.37948226928711
    10. '    
' → logprob: -11.00448226928711

Token 1694: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27492761611938477
    2. ':' → logprob: -2.1499276161193848
    3. ':
' → logprob: -2.1499276161193848
    4. '   ' → logprob: -5.399927616119385
    5. '):
' → logprob: -6.524927616119385
    6. '	' → logprob: -7.399927616119385
    7. ',' → logprob: -8.024927139282227
    8. '):' → logprob: -9.649927139282227
    9. '```' → logprob: -10.024927139282227
    10. '    ' → logprob: -10.149927139282227

Token 1695: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1292787790298462
    2. '   ' → logprob: -2.1292786598205566
    3. ' queue' → logprob: -6.254278659820557
    4. '	queue' → logprob: -8.879279136657715
    5. '```' → logprob: -9.254279136657715
    6. '    ' → logprob: -10.129279136657715
    7. '	   ' → logprob: -10.379279136657715
    8. ' from' → logprob: -10.879279136657715
    9. ' ' → logprob: -10.879279136657715
    10. '	' → logprob: -11.004279136657715

Token 1696: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7498182654380798
    2. 'q' → logprob: -1.2498183250427246
    3. 'from' → logprob: -1.9998183250427246
    4. 'queue' → logprob: -2.7498183250427246
    5. '       ' → logprob: -3.6248183250427246
    6. 'que' (adapté à ' que') → logprob: -4.374818325042725
    7. 'dq' → logprob: -6.499818325042725
    8. 'Q' → logprob: -8.249817848205566
    9. 'de' → logprob: -9.124817848205566
    10. 'd' → logprob: -9.124817848205566

Token 1697: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16080161929130554
    2. ' =' → logprob: -1.910801649093628
    3. 'ue' → logprob: -7.535801410675049
    4. '   ' → logprob: -10.785801887512207
    5. '       ' → logprob: -12.035801887512207
    6. 'e' → logprob: -12.160801887512207
    7. 'u' → logprob: -12.535801887512207
    8. '=
' → logprob: -13.660801887512207
    9. '=e' → logprob: -13.910801887512207
    10. '=self' → logprob: -14.035801887512207

Token 1698: ' Queue' (ID: 35581)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0008625074988231063
    2. 'Queue' → logprob: -7.2508625984191895
    3. 'Deque' → logprob: -9.375862121582031
    4. ' deque' → logprob: -9.625862121582031
    5. '[(' → logprob: -13.875862121582031
    6. '   ' → logprob: -14.625862121582031
    7. 'de' → logprob: -15.375862121582031
    8. '[' → logprob: -16.75086212158203
    9. '[]
' → logprob: -17.00086212158203
    10. '       ' → logprob: -17.12586212158203

Token 1699: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.002492779865860939
    2. '()' → logprob: -6.002492904663086
    3. '()
' → logprob: -11.002492904663086
    4. '()

' → logprob: -15.627492904663086
    5. 'def' → logprob: -16.002492904663086
    6. '   ' → logprob: -17.252492904663086
    7. '()\' → logprob: -17.377492904663086
    8. '();' → logprob: -18.127492904663086
    9. '       ' → logprob: -18.627492904663086
    10. '().__' → logprob: -19.377492904663086

Token 1700: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00607087928801775
    2. 'que' → logprob: -5.131071090698242
    3. 'queue' → logprob: -9.881071090698242
    4. '   ' → logprob: -9.881071090698242
    5. ' que' → logprob: -10.756071090698242
    6. '```' → logprob: -11.756071090698242
    7. '	' → logprob: -12.381071090698242
    8. 'quee' → logprob: -13.631071090698242
    9. 'ques' → logprob: -13.631071090698242
    10. 'qu' → logprob: -14.131071090698242

Token 1701: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' (adapté à ' que') → logprob: -0.008719051256775856
    2. '       ' → logprob: -4.758718967437744
    3. ' que' → logprob: -9.883719444274902
    4. 'queue' → logprob: -10.758719444274902
    5. '   ' → logprob: -11.008719444274902
    6. 'qu' → logprob: -12.133719444274902
    7. '```' → logprob: -13.008719444274902
    8. 'root' → logprob: -13.758719444274902
    9. 'ques' → logprob: -13.883719444274902
    10. 'quee' → logprob: -14.133719444274902

Token 1702: '.enqueue' (ID: 91071)
  Prédit: '.enqueue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.enqueue' → logprob: -0.0010612714104354382
    2. '.insert' → logprob: -6.87606143951416
    3. '().' → logprob: -11.12606143951416
    4. '.dequeue' → logprob: -12.87606143951416
    5. '.is' → logprob: -13.00106143951416
    6. '   ' → logprob: -13.25106143951416
    7. 'enqueue' → logprob: -13.50106143951416
    8. '=' → logprob: -13.62606143951416
    9. '.front' → logprob: -14.12606143951416
    10. '.push' → logprob: -14.25106143951416

Token 1703: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.012535430490970612
    2. 'root' → logprob: -4.512535572052002
    3. '((' → logprob: -6.512535572052002
    4. '(' → logprob: -13.762535095214844
    5. ' root' → logprob: -14.512535095214844
    6. '[root' → logprob: -15.887535095214844
    7. '	root' → logprob: -17.137535095214844
    8. '=root' → logprob: -18.012535095214844
    9. '(
' → logprob: -18.137535095214844
    10. '/root' → logprob: -18.137535095214844

Token 1704: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.43000948429107666
    2. ')' → logprob: -1.0550094842910767
    3. ',' → logprob: -6.680009365081787
    4. ')
' → logprob: -10.805009841918945
    5. '       ' → logprob: -11.555009841918945
    6. '0' → logprob: -11.930009841918945
    7. '   ' → logprob: -12.555009841918945
    8. '(' → logprob: -13.055009841918945
    9. ' )
' → logprob: -13.430009841918945
    10. ');' → logprob: -13.430009841918945

Token 1705: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00771913630887866
    2. 'while' → logprob: -4.882719039916992
    3. ' while' → logprob: -10.007719039916992
    4. '```' → logprob: -10.382719039916992
    5. '	' → logprob: -11.632719039916992
    6. '   ' → logprob: -11.632719039916992
    7. '
' → logprob: -11.757719039916992
    8. '	while' → logprob: -12.382719039916992
    9. 'self' → logprob: -12.507719039916992
    10. 'While' → logprob: -13.632719039916992

Token 1706: ' self' (ID: 1051)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09342290461063385
    2. 'self' (adapté à ' self') → logprob: -2.4684228897094727
    3. '       ' → logprob: -5.468422889709473
    4. 'v' → logprob: -8.718422889709473
    5. 'root' → logprob: -10.343422889709473
    6. 'node' → logprob: -10.843422889709473
    7. ' while' → logprob: -11.468422889709473
    8. 'visited' → logprob: -11.843422889709473
    9. '   ' → logprob: -12.093422889709473
    10. 'While' → logprob: -13.218422889709473

Token 1707: '.dep' (ID: 181964)
  Prédit: '.dep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dep' → logprob: -0.004316891543567181
    2. '.par' → logprob: -5.504316806793213
    3. '.depth' → logprob: -8.504317283630371
    4. '.vis' → logprob: -10.504317283630371
    5. '.cost' → logprob: -12.754317283630371
    6. 'dep' → logprob: -13.129317283630371
    7. '.parent' → logprob: -13.879317283630371
    8. '.de' → logprob: -14.004317283630371
    9. '.dist' → logprob: -14.504317283630371
    10. '.parents' → logprob: -15.379317283630371

Token 1708: '[root' (ID: 185287)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.5260274410247803
    2. '[' → logprob: -0.9010274410247803
    3. '[root' → logprob: -6.276027679443359
    4. 'self' → logprob: -7.401027679443359
    5. ' =' → logprob: -8.27602767944336
    6. '[-' → logprob: -10.02602767944336
    7. ' [' → logprob: -10.27602767944336
    8. '=' → logprob: -10.77602767944336
    9. '[len' → logprob: -11.77602767944336
    10. '[:]' → logprob: -11.90102767944336

Token 1709: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1271243393421173
    2. ' =' → logprob: -2.127124309539795
    3. '+=' → logprob: -9.127124786376953
    4. ' +=' → logprob: -9.377124786376953
    5. ')' → logprob: -13.252124786376953
    6. '   ' → logprob: -14.002124786376953
    7. ')=' → logprob: -15.502124786376953
    8. ' ' → logprob: -17.252124786376953
    9. '	' → logprob: -17.252124786376953
    10. '.=' → logprob: -17.627124786376953

Token 1710: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029783474281430244
    2. ' =' → logprob: -3.5297834873199463
    3. '+=' → logprob: -10.404783248901367
    4. ' +=' → logprob: -12.904783248901367
    5. '   ' → logprob: -16.029783248901367
    6. '.=' → logprob: -18.404783248901367
    7. '=
' → logprob: -18.779783248901367
    8. ' ' → logprob: -19.154783248901367
    9. '＝' → logprob: -19.279783248901367
    10. '=True' → logprob: -20.404783248901367

Token 1711: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. '1' → logprob: -13.375001907348633
    3. ' ' → logprob: -17.125001907348633
    4. 'root' → logprob: -18.000001907348633
    5. '-' → logprob: -18.875001907348633
    6. '
' → logprob: -20.125001907348633
    7. '０' → logprob: -20.500001907348633
    8. 'zero' → logprob: -20.625001907348633
    9. '   ' → logprob: -21.000001907348633
    10. '[' → logprob: -21.000001907348633

Token 1712: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.253090865968261e-06
    2. '1' → logprob: -11.625009536743164
    3. ' ' → logprob: -15.625009536743164
    4. '-' → logprob: -16.375009536743164
    5. 'root' → logprob: -17.750009536743164
    6. '０' → logprob: -19.250009536743164
    7. '[' → logprob: -19.375009536743164
    8. '00' → logprob: -19.937509536743164
    9. '۰' → logprob: -20.062509536743164
    10. 'zero' → logprob: -20.312509536743164

Token 1713: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22942405939102173
    2. '
' → logprob: -1.854423999786377
    3. '<|end|>' → logprob: -3.354423999786377
    4. '	' → logprob: -5.229423999786377
    5. 'while' → logprob: -6.229423999786377
    6. '	while' → logprob: -6.229423999786377
    7. '```' → logprob: -6.979423999786377
    8. '   ' → logprob: -6.979423999786377
    9. ')' → logprob: -7.229423999786377
    10. ' while' → logprob: -7.354423999786377

Token 1714: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010763171128928661
    2. 'while' → logprob: -4.635763168334961
    3. '```' → logprob: -7.760763168334961
    4. ' while' → logprob: -7.885763168334961
    5. '   ' → logprob: -9.260763168334961
    6. '	while' → logprob: -10.135763168334961
    7. '	' → logprob: -10.510763168334961
    8. '
' → logprob: -10.760763168334961
    9. '           ' → logprob: -12.385763168334961
    10. '``' → logprob: -12.510763168334961

Token 1715: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4892534017562866
    2. 'while' → logprob: -0.9892534017562866
    3. '       ' → logprob: -4.239253520965576
    4. '```' → logprob: -8.489253044128418
    5. 'v' → logprob: -8.739253044128418
    6. 'root' → logprob: -8.864253044128418
    7. '   ' → logprob: -9.864253044128418
    8. ' while' → logprob: -10.739253044128418
    9. '``' → logprob: -11.864253044128418
    10. 'for' → logprob: -11.864253044128418

Token 1716: '.cost' (ID: 80655)
  Prédit: '.par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -0.004062609747052193
    2. '.dep' → logprob: -5.754062652587891
    3. 'par' → logprob: -7.754062652587891
    4. '.cost' → logprob: -8.37906265258789
    5. '.parent' → logprob: -9.00406265258789
    6. '.depth' → logprob: -10.25406265258789
    7. '.parents' → logprob: -10.37906265258789
    8. '.' → logprob: -11.75406265258789
    9. '.p' → logprob: -12.12906265258789
    10. 'cost' → logprob: -12.50406265258789

Token 1717: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016143927350640297
    2. '[root' → logprob: -4.141143798828125
    3. 'root' → logprob: -9.891143798828125
    4. '=' → logprob: -11.016143798828125
    5. '=root' → logprob: -11.141143798828125
    6. ' =' → logprob: -11.641143798828125
    7. '[' → logprob: -12.641143798828125
    8. '(root' → logprob: -12.891143798828125
    9. '<|end|>' → logprob: -13.016143798828125
    10. 'cost' → logprob: -13.391143798828125

Token 1718: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -8.542423165636137e-05
    2. '[' → logprob: -9.500085830688477
    3. '=' → logprob: -12.500085830688477
    4. '(root' → logprob: -12.875085830688477
    5. ' =' → logprob: -13.000085830688477
    6. '=root' → logprob: -13.875085830688477
    7. ' [' → logprob: -14.500085830688477
    8. '   ' → logprob: -15.625085830688477
    9. '```' → logprob: -16.000085830688477
    10. 'root' → logprob: -17.125085830688477

Token 1719: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021529346704483
    2. ' =' → logprob: -2.350215196609497
    3. '   ' → logprob: -12.350214958190918
    4. '[root' → logprob: -13.225214958190918
    5. '=root' → logprob: -14.475214958190918
    6. ']' → logprob: -14.725214958190918
    7. '[' → logprob: -14.975214958190918
    8. ')' → logprob: -15.100214958190918
    9. ']=' → logprob: -15.350214958190918
    10. '	' → logprob: -15.475214958190918

Token 1720: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020774602890015
    2. ' =' → logprob: -2.350207805633545
    3. '   ' → logprob: -14.225207328796387
    4. '	' → logprob: -16.225208282470703
    5. ',' → logprob: -16.350208282470703
    6. ' ' → logprob: -16.600208282470703
    7. '[' → logprob: -17.100208282470703
    8. '=None' → logprob: -17.225208282470703
    9. '=
' → logprob: -17.600208282470703
    10. '    ' → logprob: -17.725208282470703

Token 1721: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '00' → logprob: -20.0
    4. '000' → logprob: -20.125
    5. '   ' → logprob: -20.375
    6. '۰' → logprob: -20.625
    7. 'self' → logprob: -22.125
    8. '[' → logprob: -22.75
    9. 'zero' → logprob: -22.875
    10. '  ' → logprob: -23.125

Token 1722: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.875
    4. '00' → logprob: -18.875
    5. '۰' → logprob: -19.125
    6. '000' → logprob: -19.375
    7. '-' → logprob: -19.625
    8. '  ' → logprob: -20.0
    9. 'self' → logprob: -20.625
    10. '[' → logprob: -20.8125

Token 1723: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06729929894208908
    2. '
' → logprob: -2.9422993659973145
    3. '	' → logprob: -5.3172993659973145
    4. '<|end|>' → logprob: -5.4422993659973145
    5. '   ' → logprob: -7.3172993659973145
    6. '	while' → logprob: -7.4422993659973145
    7. 'while' → logprob: -7.8172993659973145
    8. '```' → logprob: -7.8172993659973145
    9. ')' → logprob: -8.442298889160156
    10. ',' → logprob: -8.567298889160156

Token 1724: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014664154732599854
    2. 'while' → logprob: -6.751466274261475
    3. '   ' → logprob: -9.126466751098633
    4. '	' → logprob: -9.251466751098633
    5. '
' → logprob: -10.376466751098633
    6. ' while' → logprob: -10.751466751098633
    7. '```' → logprob: -10.751466751098633
    8. '	while' → logprob: -11.376466751098633
    9. '           ' → logprob: -13.501466751098633
    10. ',' → logprob: -14.001466751098633

Token 1725: ' vis' (ID: 1909)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.22896820306777954
    2. 'self' → logprob: -1.6039681434631348
    3. '       ' → logprob: -6.103968143463135
    4. 'for' → logprob: -6.728968143463135
    5. '   ' → logprob: -9.728968620300293
    6. ' while' → logprob: -10.603968620300293
    7. 'root' → logprob: -11.853968620300293
    8. 'p' → logprob: -12.228968620300293
    9. 'prev' → logprob: -12.478968620300293
    10. 'parent' → logprob: -12.603968620300293

Token 1726: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023496445268392563
    2. 'ited' → logprob: -4.148496627807617
    3. '=' → logprob: -5.023496627807617
    4. '[' → logprob: -7.648496627807617
    5. '[v' → logprob: -9.023496627807617
    6. '   ' → logprob: -9.148496627807617
    7. '=[' → logprob: -10.148496627807617
    8. 'ity' → logprob: -10.648496627807617
    9. '```' → logprob: -11.273496627807617
    10. '=True' → logprob: -11.523496627807617

Token 1727: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25208204984664917
    2. '[get' → logprob: -1.502082109451294
    3. ' [' → logprob: -9.502081871032715
    4. '[self' → logprob: -10.502081871032715
    5. '[N' → logprob: -10.502081871032715
    6. 'get' → logprob: -10.877081871032715
    7. 'set' → logprob: -12.627081871032715
    8. '{' → logprob: -14.877081871032715
    9. '[start' → logprob: -15.877081871032715
    10. '   ' → logprob: -16.12708282470703

Token 1728: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.8624639324116288e-06
    2. ' False' → logprob: -13.250001907348633
    3. '0' → logprob: -19.625001907348633
    4. '(False' → logprob: -19.875001907348633
    5. '   ' → logprob: -20.875001907348633
    6. 'True' → logprob: -21.250001907348633
    7. 'false' → logprob: -24.250001907348633
    8. '       ' → logprob: -24.500001907348633
    9. '=False' → logprob: -24.875001907348633
    10. '[' → logprob: -24.875001907348633

Token 1729: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010749602690339088
    2. ' *' → logprob: -5.135749816894531
    3. '*' → logprob: -6.385749816894531
    4. ']*' → logprob: -6.510749816894531
    5. ' for' → logprob: -6.885749816894531
    6. '   ' → logprob: -8.135749816894531
    7. ' ]' → logprob: -9.260749816894531
    8. ']*(' → logprob: -10.135749816894531
    9. 'for' → logprob: -10.260749816894531
    10. ' (' → logprob: -10.385749816894531

Token 1730: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2371716946363449
    2. ']' → logprob: -2.3621716499328613
    3. ' for' → logprob: -3.1121716499328613
    4. '*' → logprob: -3.2371716499328613
    5. '[' → logprob: -3.8621716499328613
    6. ')' → logprob: -5.737171649932861
    7. '   ' → logprob: -6.487171649932861
    8. ']*' → logprob: -6.612171649932861
    9. 'for' → logprob: -6.862171649932861
    10. ' [' → logprob: -6.987171649932861

Token 1731: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22585810720920563
    2. '(self' → logprob: -1.6008580923080444
    3. '(len' → logprob: -8.975857734680176
    4. '(' → logprob: -9.475857734680176
    5. 'len' → logprob: -9.475857734680176
    6. ' (' → logprob: -9.475857734680176
    7. ' self' → logprob: -9.475857734680176
    8. '((' → logprob: -12.350857734680176
    9. '[self' → logprob: -13.350857734680176
    10. '   ' → logprob: -13.475857734680176

Token 1732: '.N' (ID: 4439)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.23071996867656708
    2. '(self' → logprob: -1.6057199239730835
    3. '(' → logprob: -6.230720043182373
    4. 'len' → logprob: -6.480720043182373
    5. '(len' → logprob: -6.730720043182373
    6. ' self' → logprob: -8.230719566345215
    7. ' (' → logprob: -8.230719566345215
    8. '
' → logprob: -10.855719566345215
    9. '((' → logprob: -11.730719566345215
    10. '   ' → logprob: -11.980719566345215

Token 1733: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02598847821354866
    2. '
' → logprob: -4.275988578796387
    3. '<|end|>' → logprob: -4.525988578796387
    4. '   ' → logprob: -8.400988578796387
    5. '<|end|>' → logprob: -8.400988578796387
    6. '	' → logprob: -9.025988578796387
    7. '```' → logprob: -9.900988578796387
    8. 'vis' → logprob: -10.275988578796387
    9. '        
' → logprob: -10.275988578796387
    10. '(vis' → logprob: -10.400988578796387

Token 1734: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03193188086152077
    2. 'vis' → logprob: -3.5319318771362305
    3. '```' → logprob: -7.1569318771362305
    4. ' vis' → logprob: -7.5319318771362305
    5. '	' → logprob: -7.6569318771362305
    6. '(vis' → logprob: -8.78193187713623
    7. '   ' → logprob: -8.90693187713623
    8. 'while' → logprob: -10.53193187713623
    9. '``' → logprob: -11.28193187713623
    10. '	   ' → logprob: -11.78193187713623

Token 1735: ' while' (ID: 2049)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.008282754570245743
    2. '       ' → logprob: -4.883282661437988
    3. '```' → logprob: -7.508282661437988
    4. 'while' (adapté à ' while') → logprob: -9.633282661437988
    5. 'que' → logprob: -10.758282661437988
    6. '   ' → logprob: -11.133282661437988
    7. '``' → logprob: -11.633282661437988
    8. ' vis' → logprob: -12.258282661437988
    9. '(vis' → logprob: -12.758282661437988
    10. 'vist' → logprob: -12.758282661437988

Token 1736: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.04011203721165657
    2. ' not' → logprob: -3.290112018585205
    3. 'que' → logprob: -6.290112018585205
    4. ' que' → logprob: -9.040112495422363
    5. '(not' → logprob: -10.040112495422363
    6. '   ' → logprob: -10.790112495422363
    7. '	not' → logprob: -11.540112495422363
    8. 'True' → logprob: -12.165112495422363
    9. 'len' → logprob: -12.540112495422363
    10. '     ' → logprob: -13.165112495422363

Token 1737: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.00016110755677800626
    2. ' que' → logprob: -8.750161170959473
    3. 'ques' → logprob: -13.500161170959473
    4. '(' → logprob: -15.000161170959473
    5. 'qu' → logprob: -15.500161170959473
    6. 'queue' → logprob: -15.750161170959473
    7. '   ' → logprob: -16.250160217285156
    8. 'vis' → logprob: -16.375160217285156
    9. '```' → logprob: -17.000160217285156
    10. '
' → logprob: -17.250160217285156

Token 1738: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.00022415895364247262
    2. 'is' → logprob: -8.625224113464355
    3. ' .' → logprob: -11.125224113464355
    4. '.' → logprob: -11.375224113464355
    5. '().' → logprob: -12.125224113464355
    6. '_.' → logprob: -12.625224113464355
    7. '   ' → logprob: -13.375224113464355
    8. '	is' → logprob: -13.625224113464355
    9. '.empty' → logprob: -13.750224113464355
    10. '.dequeue' → logprob: -13.875224113464355

Token 1739: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -0.0003397535183466971
    2. 'empty' → logprob: -8.00033950805664
    3. 'Empty' → logprob: -12.37533950805664
    4. '_EMPTY' → logprob: -17.12533950805664
    5. 'EMPTY' → logprob: -17.87533950805664
    6. ' empty' → logprob: -18.12533950805664
    7. '-empty' → logprob: -18.25033950805664
    8. '.empty' → logprob: -19.25033950805664
    9. '(empty' → logprob: -20.12533950805664
    10. '_full' → logprob: -20.12533950805664

Token 1740: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.201569065451622
    2. '():
' → logprob: -1.7015690803527832
    3. '()' → logprob: -8.826568603515625
    4. '():
' → logprob: -12.201568603515625
    5. ' ():' → logprob: -13.201568603515625
    6. ':' → logprob: -13.701568603515625
    7. '():

' → logprob: -14.451568603515625
    8. ':
' → logprob: -16.326568603515625
    9. '()):
' → logprob: -16.451568603515625
    10. '();' → logprob: -16.451568603515625

Token 1741: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4443296492099762
    2. 'v' → logprob: -2.1943297386169434
    3. '   ' → logprob: -2.1943297386169434
    4. '	v' → logprob: -2.9443297386169434
    5. '	   ' → logprob: -3.3193297386169434
    6. ' v' → logprob: -3.8193297386169434
    7. '           ' → logprob: -4.569329738616943
    8. '	' → logprob: -4.944329738616943
    9. '	       ' → logprob: -5.819329738616943
    10. '```' → logprob: -5.944329738616943

Token 1742: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0017420548247173429
    2. ' v' → logprob: -7.001741886138916
    3. 'u' → logprob: -7.126741886138916
    4. 'x' → logprob: -11.876742362976074
    5. '   ' → logprob: -11.876742362976074
    6. 'cur' → logprob: -12.376742362976074
    7. '           ' → logprob: -12.876742362976074
    8. ' u' → logprob: -13.126742362976074
    9. 'node' → logprob: -14.126742362976074
    10. '       ' → logprob: -14.251742362976074

Token 1743: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20258446037769318
    2. '=' → logprob: -1.7025845050811768
    3. ',' → logprob: -7.077584266662598
    4. '   ' → logprob: -8.827584266662598
    5. 'v' → logprob: -10.077584266662598
    6. '=v' → logprob: -10.327584266662598
    7. '       ' → logprob: -10.452584266662598
    8. '    ' → logprob: -11.077584266662598
    9. '	' → logprob: -11.327584266662598
    10. ',v' → logprob: -11.827584266662598

Token 1744: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.023249322548508644
    2. ' que' → logprob: -3.773249387741089
    3. 'ques' → logprob: -13.398249626159668
    4. '   ' → logprob: -13.898249626159668
    5. ' ' → logprob: -15.273249626159668
    6. 'quee' → logprob: -15.398249626159668
    7. 'deque' → logprob: -15.648249626159668
    8. 'qu' → logprob: -15.648249626159668
    9. '	' → logprob: -16.27324867248535
    10. 'queue' → logprob: -16.39824867248535

Token 1745: '.dequeue' (ID: 107752)
  Prédit: '.dequeue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dequeue' → logprob: -1.843177233240567e-05
    2. '.pop' → logprob: -11.500018119812012
    3. '.' → logprob: -12.375018119812012
    4. '.enqueue' → logprob: -13.000018119812012
    5. '   ' → logprob: -13.875018119812012
    6. '=' → logprob: -15.500018119812012
    7. '.de' → logprob: -15.625018119812012
    8. ' .' → logprob: -16.000019073486328
    9. '.front' → logprob: -16.625019073486328
    10. ' =' → logprob: -16.625019073486328

Token 1746: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023574524093419313
    2. '
' → logprob: -6.377357482910156
    3. '            
' → logprob: -9.377357482910156
    4. '<|end|>' → logprob: -9.377357482910156
    5. '<|end|>' → logprob: -9.502357482910156
    6. '()
' → logprob: -9.502357482910156
    7. '		' → logprob: -9.752357482910156
    8. ':
' → logprob: -10.377357482910156
    9. '       ' → logprob: -10.502357482910156
    10. '()' → logprob: -10.502357482910156

Token 1747: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05442764237523079
    2. '       ' → logprob: -3.9294276237487793
    3. '   ' → logprob: -4.554427623748779
    4. ' for' → logprob: -4.679427623748779
    5. '	       ' → logprob: -5.429427623748779
    6. '<|end|>' → logprob: -5.679427623748779
    7. '	   ' → logprob: -6.429427623748779
    8. '
' → logprob: -7.179427623748779
    9. '	for' → logprob: -7.179427623748779
    10. 'for' → logprob: -7.679427623748779

Token 1748: ' vis' (ID: 1909)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' (adapté à ' vis') → logprob: -0.36305731534957886
    2. 'for' → logprob: -1.2380573749542236
    3. '           ' → logprob: -4.2380571365356445
    4. '       ' → logprob: -10.113057136535645
    5. '   ' → logprob: -11.113057136535645
    6. ' for' → logprob: -12.988057136535645
    7. '               ' → logprob: -13.113057136535645
    8. 'v' → logprob: -13.613057136535645
    9. 'visi' → logprob: -13.738057136535645
    10. ' vis' → logprob: -13.863057136535645

Token 1749: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -14.125001907348633
    3. 'v' → logprob: -14.750001907348633
    4. '
' → logprob: -15.125001907348633
    5. '```' → logprob: -16.750001907348633
    6. '[
' → logprob: -17.125001907348633
    7. '	v' → logprob: -17.875001907348633
    8. ' [' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.375001907348633
    10. '[V' → logprob: -19.375001907348633

Token 1750: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20812749862670898
    2. ']' → logprob: -1.833127498626709
    3. ' =' → logprob: -3.958127498626709
    4. ']=' → logprob: -4.833127498626709
    5. '=True' → logprob: -7.208127498626709
    6. '       ' → logprob: -9.958127975463867
    7. '=False' → logprob: -10.083127975463867
    8. '   ' → logprob: -10.333127975463867
    9. ')' → logprob: -10.708127975463867
    10. '[' → logprob: -11.208127975463867

Token 1751: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.309382373117842e-05
    2. ' =' → logprob: -10.375033378601074
    3. '=True' → logprob: -13.250033378601074
    4. '   ' → logprob: -17.375032424926758
    5. '=
' → logprob: -17.750032424926758
    6. '       ' → logprob: -18.125032424926758
    7. '=False' → logprob: -18.500032424926758
    8. '[' → logprob: -18.750032424926758
    9. 'v' → logprob: -19.375032424926758
    10. '           ' → logprob: -20.375032424926758

Token 1752: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0040785204619169235
    2. ' True' → logprob: -5.504078388214111
    3. 'False' → logprob: -16.379077911376953
    4. '(True' → logprob: -18.254077911376953
    5. '   ' → logprob: -20.879077911376953
    6. '=True' → logprob: -21.129077911376953
    7. '	' → logprob: -22.254077911376953
    8. 'true' → logprob: -22.504077911376953
    9. '    ' → logprob: -23.254077911376953
    10. '_true' → logprob: -23.879077911376953

Token 1753: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.959636033978313e-05
    2. '
' → logprob: -9.625089645385742
    3. ' for' → logprob: -11.625089645385742
    4. '   ' → logprob: -12.500089645385742
    5. 'for' → logprob: -12.750089645385742
    6. '		' → logprob: -12.875089645385742
    7. '       ' → logprob: -13.250089645385742
    8. '	       ' → logprob: -13.875089645385742
    9. '               ' → logprob: -14.500089645385742
    10. ',' → logprob: -14.750089645385742

Token 1754: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04142828658223152
    2. '       ' → logprob: -3.791428327560425
    3. '	for' → logprob: -5.041428089141846
    4. '   ' → logprob: -5.166428089141846
    5. ' for' → logprob: -6.291428089141846
    6. '	   ' → logprob: -6.791428089141846
    7. '	       ' → logprob: -6.791428089141846
    8. 'for' → logprob: -6.791428089141846
    9. '		' → logprob: -8.041428565979004
    10. '```' → logprob: -9.041428565979004

Token 1755: ' nd' (ID: 5914)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2520681619644165
    2. '           ' → logprob: -1.5020681619644165
    3. ' for' → logprob: -9.502068519592285
    4. '       ' → logprob: -10.377068519592285
    5. '   ' → logprob: -10.627068519592285
    6. '	for' → logprob: -12.252068519592285
    7. '		' → logprob: -13.502068519592285
    8. 'i' → logprob: -14.627068519592285
    9. '```' → logprob: -14.627068519592285
    10. 'idx' → logprob: -14.877068519592285

Token 1756: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5952749848365784
    2. 'ext' → logprob: -1.4702749252319336
    3. 'xt' → logprob: -2.7202749252319336
    4. ' =' → logprob: -3.2202749252319336
    5. 'for' → logprob: -3.4702749252319336
    6. 'bs' → logprob: -4.095274925231934
    7. 's' → logprob: -4.345274925231934
    8. 'ex' → logprob: -4.345274925231934
    9. '=' → logprob: -4.470274925231934
    10. 'x' → logprob: -4.970274925231934

Token 1757: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5906183123588562
    2. '0' → logprob: -0.8406183123588562
    3. 'len' → logprob: -4.965618133544922
    4. 'v' → logprob: -5.340618133544922
    5. '-' → logprob: -6.965618133544922
    6. '1' → logprob: -7.590618133544922
    7. '(v' → logprob: -8.340618133544922
    8. ' self' → logprob: -8.590618133544922
    9. ' ' → logprob: -9.215618133544922
    10. 'deque' → logprob: -9.215618133544922

Token 1758: '.dep' (ID: 181964)
  Prédit: '.dep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dep' → logprob: -0.027614209800958633
    2. '.to' → logprob: -4.152614116668701
    3. '.par' → logprob: -5.027614116668701
    4. 'dep' → logprob: -5.527614116668701
    5. '.cost' → logprob: -8.65261459350586
    6. '.depth' → logprob: -8.77761459350586
    7. 'to' → logprob: -8.77761459350586
    8. 'N' → logprob: -8.90261459350586
    9. 'par' → logprob: -9.27761459350586
    10. '.N' → logprob: -9.65261459350586

Token 1759: '[v' (ID: 36561)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2520839273929596
    2. '[v' → logprob: -1.5020838975906372
    3. '
' → logprob: -10.377083778381348
    4. ' v' → logprob: -10.502083778381348
    5. '	v' → logprob: -10.752083778381348
    6. '=' → logprob: -11.502083778381348
    7. '(v' → logprob: -11.627083778381348
    8. '+' → logprob: -11.877083778381348
    9. '[' → logprob: -11.877083778381348
    10. '=v' → logprob: -12.127083778381348

Token 1760: ']' (ID: 60)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.6863385438919067
    2. ']' → logprob: -1.1863385438919067
    3. '+' → logprob: -1.8113385438919067
    4. ' +' → logprob: -4.186338424682617
    5. '
' → logprob: -5.311338424682617
    6. ']
' → logprob: -5.311338424682617
    7. ')+' → logprob: -6.561338424682617
    8. '           ' → logprob: -7.186338424682617
    9. ')' → logprob: -8.811338424682617
    10. ']+=' → logprob: -9.186338424682617

Token 1761: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20328298211097717
    2. ' +' → logprob: -1.7032829523086548
    3. '           ' → logprob: -6.578282833099365
    4. '
' → logprob: -7.828282833099365
    5. '+
' → logprob: -10.453283309936523
    6. 'for' → logprob: -10.828283309936523
    7. 'import' → logprob: -12.578283309936523
    8. '+=' → logprob: -12.828283309936523
    9. '       ' → logprob: -13.078283309936523
    10. '=' → logprob: -13.203283309936523

Token 1762: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '
' → logprob: -18.125001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '```' → logprob: -20.625001907348633
    6. '           ' → logprob: -21.625001907348633
    7. '  ' → logprob: -22.125001907348633
    8. '<|end|>' → logprob: -22.250001907348633
    9. '       ' → logprob: -22.500001907348633
    10. ' ' → logprob: -23.000001907348633

Token 1763: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '
' → logprob: -16.75
    4. '   ' → logprob: -18.25
    5. '```' → logprob: -20.625
    6. '           ' → logprob: -21.25
    7. '  ' → logprob: -21.5
    8. '

' → logprob: -21.875
    9. '       ' → logprob: -22.0
    10. 'self' → logprob: -22.3125

Token 1764: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015240935317706317
    2. '		' → logprob: -10.000152587890625
    3. '
' → logprob: -10.250152587890625
    4. '<|end|>' → logprob: -10.500152587890625
    5. ' for' → logprob: -11.500152587890625
    6. ',' → logprob: -11.625152587890625
    7. '               ' → logprob: -11.750152587890625
    8. 'for' → logprob: -12.625152587890625
    9. '<|end|>' → logprob: -12.625152587890625
    10. '                   ' → logprob: -12.875152587890625

Token 1765: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.129266067640856e-05
    2. '		' → logprob: -11.000020980834961
    3. 'for' → logprob: -13.500020980834961
    4. '	       ' → logprob: -14.000020980834961
    5. ' for' → logprob: -14.375020980834961
    6. '       ' → logprob: -14.625020980834961
    7. '               ' → logprob: -15.375020980834961
    8. '	   ' → logprob: -15.500020980834961
    9. '		   ' → logprob: -15.750020980834961
    10. '   ' → logprob: -16.00002098083496

Token 1766: ' cs' (ID: 14980)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.869017852295656e-06
    2. '           ' → logprob: -12.250006675720215
    3. '       ' → logprob: -13.375006675720215
    4. ' for' → logprob: -14.750006675720215
    5. '```' → logprob: -16.25000762939453
    6. '
' → logprob: -17.37500762939453
    7. '	for' → logprob: -17.62500762939453
    8. '   ' → logprob: -18.37500762939453
    9. 'idx' → logprob: -19.12500762939453
    10. '﻿' → logprob: -19.12500762939453

Token 1767: ' =' (ID: 314)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06145046278834343
    2. ' =' → logprob: -3.811450481414795
    3. ' for' → logprob: -4.186450481414795
    4. ',' → logprob: -4.686450481414795
    5. 'for' → logprob: -4.936450481414795
    6. '=' → logprob: -5.936450481414795
    7. '   ' → logprob: -7.561450481414795
    8. '       ' → logprob: -7.561450481414795
    9. '		' → logprob: -8.311450004577637
    10. 's' → logprob: -8.561450004577637

Token 1768: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006888004019856453
    2. '0' → logprob: -5.006887912750244
    3. '   ' → logprob: -9.756888389587402
    4. ' self' → logprob: -10.506888389587402
    5. '       ' → logprob: -10.881888389587402
    6. 'next' → logprob: -11.006888389587402
    7. '           ' → logprob: -11.131888389587402
    8. 'None' → logprob: -11.631888389587402
    9. '(self' → logprob: -12.006888389587402
    10. '[self' → logprob: -12.631888389587402

Token 1769: '.cost' (ID: 80655)
  Prédit: '.co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.co' → logprob: -0.03377744182944298
    2. '.cost' → logprob: -3.4087774753570557
    3. 'cost' → logprob: -9.533777236938477
    4. 'co' → logprob: -10.283777236938477
    5. '.to' → logprob: -11.658777236938477
    6. '.coe' → logprob: -11.783777236938477
    7. '.dep' → logprob: -13.033777236938477
    8. '.cos' → logprob: -13.158777236938477
    9. '._' → logprob: -13.533777236938477
    10. '
' → logprob: -14.783777236938477

Token 1770: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0019600363448262215
    2. '[v' → logprob: -6.251959800720215
    3. '[s' → logprob: -10.876959800720215
    4. 'v' → logprob: -12.376959800720215
    5. 'self' → logprob: -13.751959800720215
    6. 'ts' → logprob: -14.251959800720215
    7. '[self' → logprob: -14.251959800720215
    8. 't' → logprob: -14.376959800720215
    9. 'cost' → logprob: -14.376959800720215
    10. '=' → logprob: -14.626959800720215

Token 1771: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0007324361358769238
    2. 'v' → logprob: -7.250732421875
    3. '[' → logprob: -11.000732421875
    4. '(v' → logprob: -13.500732421875
    5. '#' → logprob: -14.250732421875
    6. '[c' → logprob: -14.750732421875
    7. '
' → logprob: -14.750732421875
    8. '	v' → logprob: -14.875732421875
    9. '[self' → logprob: -15.000732421875
    10. '```' → logprob: -15.000732421875

Token 1772: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45994678139686584
    2. '+' → logprob: -1.7099467515945435
    3. ' +' → logprob: -1.9599467515945435
    4. '
' → logprob: -3.459946870803833
    5. ')' → logprob: -5.334946632385254
    6. '       ' → logprob: -5.334946632385254
    7. '   ' → logprob: -5.834946632385254
    8. '<|end|>' → logprob: -7.084946632385254
    9. '               ' → logprob: -7.834946632385254
    10. '<|end|>' → logprob: -8.709946632385254

Token 1773: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001307142956648022
    2. 'for' → logprob: -9.125130653381348
    3. ' for' → logprob: -11.375130653381348
    4. '       ' → logprob: -12.875130653381348
    5. '		' → logprob: -12.875130653381348
    6. '```' → logprob: -13.375130653381348
    7. '	       ' → logprob: -14.125130653381348
    8. '   ' → logprob: -14.125130653381348
    9. '#' → logprob: -14.625130653381348
    10. '	   ' → logprob: -14.750130653381348

Token 1774: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11510372161865234
    2. '           ' → logprob: -2.2401037216186523
    3. 'idx' → logprob: -6.240103721618652
    4. ' for' → logprob: -9.115103721618652
    5. 'i' → logprob: -9.365103721618652
    6. '       ' → logprob: -9.990103721618652
    7. 'indices' → logprob: -10.740103721618652
    8. '```' → logprob: -10.865103721618652
    9. '	for' → logprob: -11.490103721618652
    10. 'indexes' → logprob: -11.990103721618652

Token 1775: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00031854258850216866
    2. 'idx' → logprob: -8.50031852722168
    3. ' i' → logprob: -9.75031852722168
    4. '(i' → logprob: -10.37531852722168
    5. 'to' → logprob: -11.87531852722168
    6. 'ind' → logprob: -12.12531852722168
    7. '_i' → logprob: -12.62531852722168
    8. 'u' → logprob: -13.37531852722168
    9. ',i' → logprob: -13.62531852722168
    10. 'ni' → logprob: -13.75031852722168

Token 1776: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19945935904979706
    2. 'in' → logprob: -1.8244593143463135
    3. ',' → logprob: -3.9494593143463135
    4. ',v' → logprob: -9.199459075927734
    5. ' ,' → logprob: -9.324459075927734
    6. '	in' → logprob: -10.574459075927734
    7. ',in' → logprob: -11.449459075927734
    8. '   ' → logprob: -12.449459075927734
    9. '```' → logprob: -12.699459075927734
    10. '           ' → logprob: -12.824459075927734

Token 1777: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.7697225252486533e-06
    2. ' range' → logprob: -12.500003814697266
    3. '	range' → logprob: -20.750003814697266
    4. '(range' → logprob: -21.625003814697266
    5. 'self' → logprob: -22.125003814697266
    6. 'enumer' → logprob: -23.750003814697266
    7. '
' → logprob: -24.125003814697266
    8. '   ' → logprob: -25.125003814697266
    9. 'len' → logprob: -25.375003814697266
    10. 'r' → logprob: -25.500003814697266

Token 1778: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.320199877838604e-07
    2. '(len' → logprob: -14.75
    3. ' len' → logprob: -17.75
    4. '	len' → logprob: -20.0
    5. '   ' → logprob: -20.25
    6. '[len' → logprob: -23.25
    7. '0' → logprob: -23.25
    8. '           ' → logprob: -23.875
    9. '       ' → logprob: -24.375
    10. ',len' → logprob: -24.75

Token 1779: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004907185211777687
    2. 'self' → logprob: -7.625490665435791
    3. '(' → logprob: -14.12549114227295
    4. ' (' → logprob: -14.25049114227295
    5. ' self' → logprob: -14.50049114227295
    6. '[self' → logprob: -15.50049114227295
    7. '   ' → logprob: -15.62549114227295
    8. '	self' → logprob: -16.000490188598633
    9. '=self' → logprob: -17.000490188598633
    10. '((' → logprob: -17.000490188598633

Token 1780: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -0.0002615742268972099
    2. '.co' → logprob: -8.250261306762695
    3. '[to' → logprob: -16.375261306762695
    4. 'to' → logprob: -16.625261306762695
    5. '.' → logprob: -16.875261306762695
    6. ' .' → logprob: -17.375261306762695
    7. ',to' → logprob: -18.375261306762695
    8. '.coe' → logprob: -18.375261306762695
    9. '(to' → logprob: -18.625261306762695
    10. '.par' → logprob: -18.625261306762695

Token 1781: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0002693224814720452
    2. 'v' → logprob: -8.250268936157227
    3. '(v' → logprob: -12.875268936157227
    4. '   ' → logprob: -12.875268936157227
    5. ')' → logprob: -14.000268936157227
    6. '[' → logprob: -14.750268936157227
    7. '	v' → logprob: -15.250268936157227
    8. '```' → logprob: -15.375268936157227
    9. ')v' → logprob: -15.500268936157227
    10. '[
' → logprob: -15.750268936157227

Token 1782: '])):
' (ID: 145266)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.28184637427330017
    2. ')):
' → logprob: -1.4068464040756226
    3. '])):
' → logprob: -8.531846046447754
    4. ')):' → logprob: -8.531846046447754
    5. 'v' → logprob: -9.031846046447754
    6. '))' → logprob: -9.031846046447754
    7. ')):
' → logprob: -11.281846046447754
    8. ' ' → logprob: -11.406846046447754
    9. '   ' → logprob: -11.531846046447754
    10. '       ' → logprob: -12.406846046447754

Token 1783: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023335738107562065
    2. '	           ' → logprob: -4.648335933685303
    3. '	       ' → logprob: -6.273335933685303
    4. ':
' → logprob: -6.273335933685303
    5. '		       ' → logprob: -6.523335933685303
    6. ':' → logprob: -6.773335933685303
    7. '	            ' → logprob: -6.773335933685303
    8. '    		' → logprob: -7.523335933685303
    9. '    	' → logprob: -7.898335933685303
    10. '                
' → logprob: -7.898335933685303

Token 1784: ' nv' (ID: 68641)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' (adapté à ' nv') → logprob: -0.07934984564781189
    2. 'w' → logprob: -3.5793497562408447
    3. 'u' → logprob: -3.8293497562408447
    4. 'to' → logprob: -4.704349994659424
    5. 'n' → logprob: -5.204349994659424
    6. 'nx' → logprob: -5.704349994659424
    7. '                   ' → logprob: -5.829349994659424
    8. 'nt' → logprob: -6.579349994659424
    9. 't' → logprob: -6.954349994659424
    10. '   ' → logprob: -7.204349994659424

Token 1785: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006133553106337786
    2. '=' → logprob: -5.131133556365967
    3. ',' → logprob: -9.006133079528809
    4. '=v' → logprob: -10.506133079528809
    5. '   ' → logprob: -11.006133079528809
    6. '    ' → logprob: -11.756133079528809
    7. '       ' → logprob: -12.631133079528809
    8. '[' → logprob: -12.756133079528809
    9. '           ' → logprob: -12.881133079528809
    10. '                   ' → logprob: -13.381133079528809

Token 1786: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5332478142227046e-05
    2. ' self' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.125015258789062
    4. '(self' → logprob: -16.250015258789062
    5. '       ' → logprob: -17.000015258789062
    6. '	self' → logprob: -17.750015258789062
    7. '=self' → logprob: -18.000015258789062
    8. '
' → logprob: -18.625015258789062
    9. '           ' → logprob: -18.750015258789062
    10. '[self' → logprob: -19.125015258789062

Token 1787: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -5.264322317088954e-05
    2. 'to' → logprob: -9.875052452087402
    3. 'self' → logprob: -13.875052452087402
    4. '.v' → logprob: -16.87505340576172
    5. ',to' → logprob: -16.87505340576172
    6. '
' → logprob: -17.37505340576172
    7. '.' → logprob: -17.75005340576172
    8. '(to' → logprob: -18.62505340576172
    9. 'To' → logprob: -18.62505340576172
    10. '.from' → logprob: -18.62505340576172

Token 1788: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.011049704626202583
    2. 'v' → logprob: -4.511049747467041
    3. '[' → logprob: -14.261049270629883
    4. '(v' → logprob: -14.636049270629883
    5. '	v' → logprob: -15.636049270629883
    6. ' v' → logprob: -15.636049270629883
    7. '<v' → logprob: -15.886049270629883
    8. '[
' → logprob: -16.511049270629883
    9. '```' → logprob: -16.761049270629883
    10. '   ' → logprob: -17.136049270629883

Token 1789: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0009575550211593509
    2. '][' → logprob: -7.000957489013672
    3. 'v' → logprob: -10.000957489013672
    4. '	v' → logprob: -15.625957489013672
    5. ']' → logprob: -16.125957489013672
    6. '[' → logprob: -16.125957489013672
    7. '   ' → logprob: -16.250957489013672
    8. ' [' → logprob: -16.500957489013672
    9. '
' → logprob: -16.625957489013672
    10. '(v' → logprob: -17.375957489013672

Token 1790: 'i' (ID: 72)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.5048530030981055e-06
    2. ' v' → logprob: -14.500001907348633
    3. '[v' → logprob: -14.750001907348633
    4. '	v' → logprob: -15.375001907348633
    5. 'i' → logprob: -16.375001907348633
    6. '   ' → logprob: -17.000001907348633
    7. '(v' → logprob: -17.625001907348633
    8. ')v' → logprob: -17.875001907348633
    9. '[' → logprob: -18.625001907348633
    10. 'vq' → logprob: -19.000001907348633

Token 1791: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0940530002117157
    2. ']' → logprob: -2.969053030014038
    3. ']
' → logprob: -4.469052791595459
    4. ')' → logprob: -5.094052791595459
    5. '<|end|>' → logprob: -5.094052791595459
    6. '<|end|>' → logprob: -5.594052791595459
    7. '           ' → logprob: -5.969052791595459
    8. '
' → logprob: -6.844052791595459
    9. '       ' → logprob: -6.844052791595459
    10. '                   ' → logprob: -7.219052791595459

Token 1792: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00465606851503253
    2. ' if' → logprob: -6.754655838012695
    3. '<|end|>' → logprob: -6.754655838012695
    4. '                ' → logprob: -7.004655838012695
    5. '			' → logprob: -7.879655838012695
    6. '	           ' → logprob: -8.629655838012695
    7. '	       ' → logprob: -9.254655838012695
    8. '	if' → logprob: -9.379655838012695
    9. '              ' → logprob: -9.504655838012695
    10. '		       ' → logprob: -9.629655838012695

Token 1793: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03449070453643799
    2. ' if' → logprob: -3.5344905853271484
    3. 'cs' → logprob: -6.159490585327148
    4. '           ' → logprob: -6.784490585327148
    5. 'c' → logprob: -7.659490585327148
    6. 'nc' → logprob: -8.034490585327148
    7. '               ' → logprob: -9.159490585327148
    8. 'col' → logprob: -9.409490585327148
    9. 'co' → logprob: -9.534490585327148
    10. 'n' → logprob: -9.534490585327148

Token 1794: ' vis' (ID: 1909)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.5425918102264404
    2. 'not' → logprob: -0.9175918102264404
    3. ' not' → logprob: -4.0425920486450195
    4. ' vis' → logprob: -6.6675920486450195
    5. '(vis' → logprob: -8.66759204864502
    6. '(not' → logprob: -9.41759204864502
    7. 'visited' → logprob: -10.16759204864502
    8. '   ' → logprob: -10.29259204864502
    9. '	not' → logprob: -10.29259204864502
    10. 'nv' → logprob: -11.04259204864502

Token 1795: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.4140441635390744e-05
    2. 'nv' → logprob: -13.000014305114746
    3. '[v' → logprob: -13.125014305114746
    4. '[
' → logprob: -13.125014305114746
    5. '   ' → logprob: -13.875014305114746
    6. 'n' → logprob: -14.125014305114746
    7. '<n' → logprob: -14.125014305114746
    8. '```' → logprob: -14.250014305114746
    9. '	n' → logprob: -14.375014305114746
    10. '       ' → logprob: -14.500014305114746

Token 1796: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0010182792320847511
    2. '[n' → logprob: -7.001018047332764
    3. 'nv' → logprob: -9.626018524169922
    4. '_nv' → logprob: -10.251018524169922
    5. ' nv' → logprob: -12.876018524169922
    6. '[v' → logprob: -13.251018524169922
    7. '[' → logprob: -14.876018524169922
    8. '```' → logprob: -15.001018524169922
    9. 'n' → logprob: -16.126018524169922
    10. '
' → logprob: -16.876018524169922

Token 1797: ']:
' (ID: 22152)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.017284706234931946
    2. ':' → logprob: -5.392284870147705
    3. '[v' → logprob: -5.392284870147705
    4. ':
' → logprob: -5.892284870147705
    5. ']:
' → logprob: -6.142284870147705
    6. ']:' → logprob: -6.267284870147705
    7. '==' → logprob: -7.517284870147705
    8. ']' → logprob: -8.892284393310547
    9. ']==' → logprob: -8.892284393310547
    10. '       ' → logprob: -9.392284393310547

Token 1798: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003980804234743118
    2. ':
' → logprob: -6.25398063659668
    3. ':' → logprob: -7.25398063659668
    4. ' continue' → logprob: -7.62898063659668
    5. '               ' → logprob: -7.87898063659668
    6. '                       ' → logprob: -8.25398063659668
    7. '           ' → logprob: -9.62898063659668
    8. 'continue' → logprob: -9.62898063659668
    9. '		           ' → logprob: -10.87898063659668
    10. '   ' → logprob: -11.00398063659668

Token 1799: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2073306441307068
    2. '                   ' → logprob: -1.7073307037353516
    3. ' continue' → logprob: -5.457330703735352
    4. '           ' → logprob: -7.332330703735352
    5. '                       ' → logprob: -7.832330703735352
    6. '               ' → logprob: -8.207330703735352
    7. '	continue' → logprob: -8.332330703735352
    8. '   ' → logprob: -11.332330703735352
    9. '	               ' → logprob: -11.332330703735352
    10. '_continue' → logprob: -11.457330703735352

Token 1800: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005104849115014076
    2. '                
' → logprob: -6.505105018615723
    3. '
' → logprob: -7.005105018615723
    4. '                   ' → logprob: -7.130105018615723
    5. '           ' → logprob: -7.630105018615723
    6. '<|end|>' → logprob: -8.005105018615723
    7. '  
' → logprob: -8.255105018615723
    8. '```' → logprob: -8.755105018615723
    9. ' 
' → logprob: -8.880105018615723
    10. '                    
' → logprob: -9.880105018615723

Token 1801: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0033867184538394213
    2. '                   ' → logprob: -6.378386497497559
    3. '           ' → logprob: -6.628386497497559
    4. 'self' → logprob: -8.753386497497559
    5. ' self' → logprob: -10.128386497497559
    6. '```' → logprob: -10.253386497497559
    7. '			' → logprob: -10.753386497497559
    8. ' ' → logprob: -11.003386497497559
    9. '<|end|>' → logprob: -11.253386497497559
    10. '                       ' → logprob: -11.378386497497559

Token 1802: ' que' (ID: 661)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13505910336971283
    2. '               ' → logprob: -2.135059118270874
    3. '           ' → logprob: -5.135058879852295
    4. ' self' → logprob: -6.635058879852295
    5. 'que' (adapté à ' que') → logprob: -7.260058879852295
    6. '                   ' → logprob: -9.135059356689453
    7. '   ' → logprob: -10.510059356689453
    8. ' que' → logprob: -11.010059356689453
    9. '       ' → logprob: -11.760059356689453
    10. '              ' → logprob: -12.010059356689453

Token 1803: '.enqueue' (ID: 91071)
  Prédit: '.enqueue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.enqueue' → logprob: -1.1637164789135568e-05
    2. '.append' → logprob: -12.000011444091797
    3. '.' → logprob: -13.250011444091797
    4. '.items' → logprob: -14.125011444091797
    5. '.dequeue' → logprob: -14.375011444091797
    6. '       ' → logprob: -14.500011444091797
    7. '.Enqueue' → logprob: -14.750011444091797
    8. '           ' → logprob: -14.750011444091797
    9. 'enqueue' → logprob: -14.875011444091797
    10. '.insert' → logprob: -15.625011444091797

Token 1804: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.1080467781284824e-05
    2. 'nv' → logprob: -10.250041007995605
    3. '(
' → logprob: -13.125041007995605
    4. '_nv' → logprob: -13.500041007995605
    5. 'n' → logprob: -14.625041007995605
    6. '(' → logprob: -14.625041007995605
    7. ' nv' → logprob: -14.875041007995605
    8. '
' → logprob: -15.500041007995605
    9. '```' → logprob: -15.750041007995605
    10. 'Nv' → logprob: -16.000041961669922

Token 1805: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0012396331876516342
    2. 'nv' → logprob: -6.751239776611328
    3. ' nv' → logprob: -9.626239776611328
    4. '(n' → logprob: -13.376239776611328
    5. '_nv' → logprob: -13.501239776611328
    6. '(v' → logprob: -15.751239776611328
    7. '   ' → logprob: -16.001239776611328
    8. '[n' → logprob: -16.626239776611328
    9. '
' → logprob: -16.876239776611328
    10. '	v' → logprob: -17.626239776611328

Token 1806: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2837364077568054
    2. ')' → logprob: -1.4087364673614502
    3. '               ' → logprob: -6.658736228942871
    4. '(n' → logprob: -7.533736228942871
    5. ')
' → logprob: -8.408736228942871
    6. ')v' → logprob: -8.408736228942871
    7. ')n' → logprob: -9.408736228942871
    8. '(v' → logprob: -9.533736228942871
    9. '       ' → logprob: -10.408736228942871
    10. '())
' → logprob: -10.908736228942871

Token 1807: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00019412329129409045
    2. '       ' → logprob: -9.750194549560547
    3. '<|end|>' → logprob: -9.750194549560547
    4. '			' → logprob: -11.125194549560547
    5. '```' → logprob: -11.250194549560547
    6. '                   ' → logprob: -11.375194549560547
    7. '           ' → logprob: -12.000194549560547
    8. '                       ' → logprob: -12.250194549560547
    9. 'self' → logprob: -12.500194549560547
    10. '              ' → logprob: -12.875194549560547

Token 1808: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005565043538808823
    2. '               ' → logprob: -5.255565166473389
    3. ' self' → logprob: -8.75556468963623
    4. '                   ' → logprob: -9.13056468963623
    5. '           ' → logprob: -10.63056468963623
    6. '   ' → logprob: -10.63056468963623
    7. '       ' → logprob: -12.00556468963623
    8. '```' → logprob: -12.75556468963623
    9. '                       ' → logprob: -13.38056468963623
    10. '                ' → logprob: -13.75556468963623

Token 1809: '.dep' (ID: 181964)
  Prédit: '.dep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dep' → logprob: -0.3868875801563263
    2. '.par' → logprob: -1.136887550354004
    3. '.depth' → logprob: -11.636887550354004
    4. '.parent' → logprob: -13.011887550354004
    5. '.de' → logprob: -13.636887550354004
    6. '.cost' → logprob: -13.636887550354004
    7. 'par' → logprob: -13.886887550354004
    8. '.' → logprob: -14.386887550354004
    9. '.parents' → logprob: -14.761887550354004
    10. 'dep' → logprob: -14.761887550354004

Token 1810: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -8.061054359131958e-06
    2. '
' → logprob: -13.125007629394531
    3. 'nv' → logprob: -13.375007629394531
    4. '```' → logprob: -14.000007629394531
    5. '[
' → logprob: -14.375007629394531
    6. '   ' → logprob: -14.375007629394531
    7. '       ' → logprob: -14.500007629394531
    8. '               ' → logprob: -15.000007629394531
    9. '[' → logprob: -15.375007629394531
    10. '(n' → logprob: -15.750007629394531

Token 1811: 'v' (ID: 85)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.31526368856430054
    2. '[n' → logprob: -1.4402637481689453
    3. 'v' → logprob: -3.6902637481689453
    4. '_nv' → logprob: -5.315263748168945
    5. ' nv' → logprob: -5.815263748168945
    6. '[v' → logprob: -7.440263748168945
    7. '       ' → logprob: -10.565263748168945
    8. 'n' → logprob: -10.815263748168945
    9. '[' → logprob: -11.815263748168945
    10. 'Nv' → logprob: -12.065263748168945

Token 1812: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31559059023857117
    2. ' =' → logprob: -1.3155906200408936
    3. ']' → logprob: -6.3155903816223145
    4. ')' → logprob: -7.9405903816223145
    5. ']=' → logprob: -9.190590858459473
    6. '   ' → logprob: -10.565590858459473
    7. '=
' → logprob: -11.565590858459473
    8. ')=' → logprob: -11.690590858459473
    9. '    ' → logprob: -12.190590858459473
    10. '=v' → logprob: -13.315590858459473

Token 1813: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324792370200157
    2. ' =' → logprob: -3.7732479572296143
    3. '=
' → logprob: -13.273247718811035
    4. '   ' → logprob: -14.273247718811035
    5. '    ' → logprob: -17.64824867248535
    6. ' =
' → logprob: -17.89824867248535
    7. '+=' → logprob: -17.89824867248535
    8. '＝' → logprob: -18.14824867248535
    9. ' ' → logprob: -18.64824867248535
    10. '=v' → logprob: -18.64824867248535

Token 1814: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -7.896309739408025e-07
    2. ' nd' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.625
    4. 'v' → logprob: -17.625
    5. 'self' → logprob: -17.625
    6. 'ndl' → logprob: -18.0
    7. '_nd' → logprob: -18.75
    8. '
' → logprob: -19.75
    9. '(nd' → logprob: -19.75
    10. 'nde' → logprob: -19.875

Token 1815: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011635536793619394
    2. '<|end|>' → logprob: -6.876163482666016
    3. '           ' → logprob: -10.251163482666016
    4. '              ' → logprob: -10.876163482666016
    5. '<|end|>' → logprob: -10.876163482666016
    6. ',' → logprob: -11.501163482666016
    7. '       ' → logprob: -11.501163482666016
    8. '
' → logprob: -11.626163482666016
    9. '                ' → logprob: -11.751163482666016
    10. '                   ' → logprob: -12.251163482666016

Token 1816: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012303499970585108
    2. 'self' → logprob: -7.126230239868164
    3. '```' → logprob: -8.001230239868164
    4. '           ' → logprob: -9.876230239868164
    5. '                   ' → logprob: -11.001230239868164
    6. '       ' → logprob: -11.626230239868164
    7. '              ' → logprob: -12.126230239868164
    8. ' self' → logprob: -13.126230239868164
    9. '                ' → logprob: -13.751230239868164
    10. '``' → logprob: -13.876230239868164

Token 1817: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0002137882256647572
    2. '               ' → logprob: -8.625213623046875
    3. '           ' → logprob: -11.125213623046875
    4. '                   ' → logprob: -11.625213623046875
    5. '       ' → logprob: -12.125213623046875
    6. ' self' → logprob: -12.625213623046875
    7. '   ' → logprob: -13.750213623046875
    8. '              ' → logprob: -15.500213623046875
    9. '                       ' → logprob: -16.125213623046875
    10. '	self' → logprob: -16.625213623046875

Token 1818: '.cost' (ID: 80655)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.04859123006463051
    2. '.cost' → logprob: -3.048591136932373
    3. ' cost' → logprob: -13.548591613769531
    4. ' costs' → logprob: -14.048591613769531
    5. '   ' → logprob: -14.173591613769531
    6. '成本' → logprob: -15.548591613769531
    7. '_cost' → logprob: -15.923591613769531
    8. '           ' → logprob: -16.04859161376953
    9. 'self' → logprob: -16.17359161376953
    10. '       ' → logprob: -16.29859161376953

Token 1819: 's' (ID: 82)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.3140776753425598
    2. 's' → logprob: -1.314077615737915
    3. 'cs' → logprob: -8.689077377319336
    4. '[' → logprob: -9.064077377319336
    5. '               ' → logprob: -9.439077377319336
    6. 'cost' → logprob: -9.814077377319336
    7. '       ' → logprob: -9.939077377319336
    8. '[s' → logprob: -9.939077377319336
    9. '[self' → logprob: -10.064077377319336
    10. '[v' → logprob: -10.064077377319336

Token 1820: '[n' (ID: 15433)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.06835953146219254
    2. '[v' → logprob: -3.068359613418579
    3. 'self' → logprob: -4.193359375
    4. '[n' → logprob: -5.443359375
    5. 'nv' → logprob: -9.568359375
    6. 'v' → logprob: -10.193359375
    7. ' self' → logprob: -11.318359375
    8. '(self' → logprob: -11.443359375
    9. '                   ' → logprob: -11.693359375
    10. '               ' → logprob: -11.818359375

Token 1821: 'v' (ID: 85)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.10314442962408066
    2. 'nv' → logprob: -2.353144407272339
    3. 'v' → logprob: -6.228144645690918
    4. '[v' → logprob: -7.853144645690918
    5. 'n' → logprob: -8.353144645690918
    6. 'self' → logprob: -8.728144645690918
    7. ' nv' → logprob: -9.853144645690918
    8. '_nv' → logprob: -9.853144645690918
    9. '   ' → logprob: -10.853144645690918
    10. '[self' → logprob: -11.478144645690918

Token 1822: ']' (ID: 60)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.5191373229026794
    2. '[n' → logprob: -1.8941373825073242
    3. ' +' → logprob: -2.019137382507324
    4. '+' → logprob: -2.144137382507324
    5. '[' → logprob: -7.019137382507324
    6. '               ' → logprob: -7.144137382507324
    7. '=' → logprob: -7.269137382507324
    8. '                   ' → logprob: -7.769137382507324
    9. ']' → logprob: -8.144137382507324
    10. '       ' → logprob: -8.519137382507324

Token 1823: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7144818305969238
    2. '=' → logprob: -0.7144818305969238
    3. ' +' → logprob: -4.839481830596924
    4. '+=' → logprob: -5.339481830596924
    5. ' =' → logprob: -5.464481830596924
    6. '+self' → logprob: -5.714481830596924
    7. '=self' → logprob: -7.714481830596924
    8. ' +=' → logprob: -8.339481353759766
    9. '+
' → logprob: -9.589481353759766
    10. 'self' → logprob: -9.714481353759766

Token 1824: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -1.700132997939363e-05
    2. 'self' → logprob: -11.000017166137695
    3. ' cs' → logprob: -15.250017166137695
    4. '   ' → logprob: -18.000017166137695
    5. '	cs' → logprob: -18.000017166137695
    6. '(cs' → logprob: -18.750017166137695
    7. 'c' → logprob: -19.000017166137695
    8. 'csrf' → logprob: -19.250017166137695
    9. '_cs' → logprob: -20.375017166137695
    10. 'csr' → logprob: -20.875017166137695

Token 1825: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3138769567012787
    2. '+' → logprob: -1.313876986503601
    3. '+self' → logprob: -7.438877105712891
    4. '+
' → logprob: -11.81387710571289
    5. ' +
' → logprob: -12.18887710571289
    6. ' plus' → logprob: -12.68887710571289
    7. ' ' → logprob: -12.81387710571289
    8. '               ' → logprob: -13.06387710571289
    9. '```' → logprob: -13.93887710571289
    10. '+#' → logprob: -13.93887710571289

Token 1826: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001584850688232109
    2. ' self' → logprob: -8.750158309936523
    3. '1' → logprob: -17.375158309936523
    4. '(self' → logprob: -17.750158309936523
    5. ' ' → logprob: -18.375158309936523
    6. '
' → logprob: -19.375158309936523
    7. '   ' → logprob: -19.375158309936523
    8. '	self' → logprob: -20.250158309936523
    9. '[self' → logprob: -20.750158309936523
    10. '       ' → logprob: -21.000158309936523

Token 1827: '.co' (ID: 10914)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006901971064507961
    2. 'co' → logprob: -5.006901741027832
    3. '.co' → logprob: -8.631901741027832
    4. ' self' → logprob: -12.256901741027832
    5. 'from' → logprob: -14.256901741027832
    6. '[self' → logprob: -14.381901741027832
    7. '	self' → logprob: -14.631901741027832
    8. '   ' → logprob: -14.881901741027832
    9. '(self' → logprob: -15.006901741027832
    10. '
' → logprob: -15.631901741027832

Token 1828: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.60414821645827e-06
    2. 'v' → logprob: -12.375004768371582
    3. '[' → logprob: -15.875004768371582
    4. '(v' → logprob: -17.125003814697266
    5. '	v' → logprob: -17.500003814697266
    6. '```' → logprob: -17.875003814697266
    7. '   ' → logprob: -18.000003814697266
    8. '[self' → logprob: -18.375003814697266
    9. ' v' → logprob: -18.500003814697266
    10. '[u' → logprob: -18.625003814697266

Token 1829: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005864920560270548
    2. '[' → logprob: -5.880865097045898
    3. '][' → logprob: -5.880865097045898
    4. '[v' → logprob: -8.755865097045898
    5. '[n' → logprob: -9.880865097045898
    6. ')[' → logprob: -11.505865097045898
    7. ' [' → logprob: -11.755865097045898
    8. '```' → logprob: -11.880865097045898
    9. '}[' → logprob: -12.005865097045898
    10. '[u' → logprob: -12.630865097045898

Token 1830: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.048656973987817764
    2. 'v' → logprob: -3.048656940460205
    3. '[i' → logprob: -9.923657417297363
    4. ' i' → logprob: -11.423657417297363
    5. '][' → logprob: -12.548657417297363
    6. '[v' → logprob: -12.923657417297363
    7. 'nv' → logprob: -13.048657417297363
    8. ' v' → logprob: -14.798657417297363
    9. '   ' → logprob: -14.923657417297363
    10. '(i' → logprob: -15.673657417297363

Token 1831: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1832: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5582842230796814
    2. '       ' → logprob: -1.0582842826843262
    3. '<|end|>' → logprob: -2.683284282684326
    4. '           ' → logprob: -5.183284282684326
    5. '```' → logprob: -5.183284282684326
    6. '                   ' → logprob: -8.308283805847168
    7. '<|end|>' → logprob: -8.558283805847168
    8. ')' → logprob: -8.933283805847168
    9. '   ' → logprob: -8.933283805847168
    10. 'self' → logprob: -9.683283805847168

Token 1833: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.25259509682655334
    2. '               ' → logprob: -1.502595067024231
    3. ' self' → logprob: -7.752594947814941
    4. '                   ' → logprob: -9.377594947814941
    5. '       ' → logprob: -9.502594947814941
    6. '           ' → logprob: -9.877594947814941
    7. '   ' → logprob: -11.752594947814941
    8. '                       ' → logprob: -12.127594947814941
    9. '```' → logprob: -13.002594947814941
    10. '[self' → logprob: -13.252594947814941

Token 1834: '.par' (ID: 36294)
  Prédit: '.par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -7.052377623040229e-05
    2. 'par' → logprob: -9.750070571899414
    3. '.' → logprob: -12.500070571899414
    4. '	par' → logprob: -13.000070571899414
    5. '
' → logprob: -13.875070571899414
    6. '.parent' → logprob: -14.125070571899414
    7. ').' → logprob: -14.125070571899414
    8. ' .' → logprob: -14.250070571899414
    9. '].' → logprob: -14.250070571899414
    10. '__.' → logprob: -14.625070571899414

Token 1835: '[n' (ID: 15433)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.825890159234405e-05
    2. '[n' → logprob: -10.125068664550781
    3. '[' → logprob: -10.750068664550781
    4. '<|end|>' → logprob: -13.250068664550781
    5. '```' → logprob: -13.625068664550781
    6. '[
' → logprob: -13.875068664550781
    7. 'v' → logprob: -15.000068664550781
    8. ')[' → logprob: -15.000068664550781
    9. '<|end|>' → logprob: -15.250068664550781
    10. '[var' → logprob: -15.500068664550781

Token 1836: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00478479964658618
    2. '[v' → logprob: -5.75478458404541
    3. '[n' → logprob: -7.37978458404541
    4. 'nv' → logprob: -7.50478458404541
    5. '][' → logprob: -8.50478458404541
    6. 'n' → logprob: -9.50478458404541
    7. '[' → logprob: -10.25478458404541
    8. '   ' → logprob: -10.75478458404541
    9. ']' → logprob: -11.37978458404541
    10. '```' → logprob: -11.37978458404541

Token 1837: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0028234198689460754
    2. '][' → logprob: -5.877823352813721
    3. '=' → logprob: -12.502823829650879
    4. '0' → logprob: -13.377823829650879
    5. '
' → logprob: -13.377823829650879
    6. '       ' → logprob: -13.377823829650879
    7. ' [' → logprob: -13.377823829650879
    8. '[v' → logprob: -13.502823829650879
    9. '[self' → logprob: -13.752823829650879
    10. '=[' → logprob: -14.127823829650879

Token 1838: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -17.0
    4. '1' → logprob: -19.625
    5. '۰' → logprob: -19.875
    6. '                   ' → logprob: -20.125
    7. '00' → logprob: -20.625
    8. '
' → logprob: -20.75
    9. '         ' → logprob: -20.75
    10. '[' → logprob: -20.75

Token 1839: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38723433017730713
    2. ' =' → logprob: -1.1372343301773071
    3. ')' → logprob: -8.262234687805176
    4. ')=' → logprob: -10.512234687805176
    5. ']' → logprob: -10.887234687805176
    6. ' =
' → logprob: -11.137234687805176
    7. ']=' → logprob: -11.637234687805176
    8. ' )' → logprob: -11.762234687805176
    9. ' =)' → logprob: -11.762234687805176
    10. '=
' → logprob: -12.137234687805176

Token 1840: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815006136894226
    2. ' =' → logprob: -4.0181498527526855
    3. '=
' → logprob: -16.768150329589844
    4. '   ' → logprob: -17.143150329589844
    5. '＝' → logprob: -17.143150329589844
    6. '    ' → logprob: -17.768150329589844
    7. '[' → logprob: -17.893150329589844
    8. '=True' → logprob: -18.268150329589844
    9. ' ' → logprob: -18.393150329589844
    10. '.=' → logprob: -18.643150329589844

Token 1841: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1472419600977446e-06
    2. ' v' → logprob: -13.750000953674316
    3. '	v' → logprob: -18.125001907348633
    4. '   ' → logprob: -22.500001907348633
    5. '$v' → logprob: -22.750001907348633
    6. ')v' → logprob: -23.375001907348633
    7. 'vq' → logprob: -23.875001907348633
    8. '[v' → logprob: -24.000001907348633
    9. 'vj' → logprob: -24.000001907348633
    10. '<v' → logprob: -24.750001907348633

Token 1842: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1843: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1844: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20754404366016388
    2. '   ' → logprob: -1.7075440883636475
    3. '```' → logprob: -5.582543849945068
    4. ' def' → logprob: -7.082543849945068
    5. '    
' → logprob: -7.207543849945068
    6. 'def' (adapté à ' def') → logprob: -7.832543849945068
    7. ' 
' → logprob: -9.082544326782227
    8. '

' → logprob: -9.582544326782227
    9. '<|end|>' → logprob: -9.832544326782227
    10. ' ' → logprob: -10.207544326782227

Token 1845: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.010327070020139217
    2. '_init' → logprob: -5.010326862335205
    3. 'build' → logprob: -5.760326862335205
    4. ' init' → logprob: -8.135327339172363
    5. '__' → logprob: -10.635327339172363
    6. '_build' → logprob: -10.635327339172363
    7. 'prepare' → logprob: -11.010327339172363
    8. 'pre' → logprob: -11.010327339172363
    9. 'initialize' → logprob: -11.260327339172363
    10. 'calc' → logprob: -11.385327339172363

Token 1846: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.280175097752362e-05
    2. '(' → logprob: -9.625082969665527
    3. '   ' → logprob: -11.125082969665527
    4. 'def' → logprob: -13.875082969665527
    5. '       ' → logprob: -14.750082969665527
    6. 'self' → logprob: -15.000082969665527
    7. '(
' → logprob: -16.00008201599121
    8. ' (' → logprob: -16.00008201599121
    9. ' ' → logprob: -17.00008201599121
    10. '_(' → logprob: -17.25008201599121

Token 1847: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.010201419703662395
    2. '   ' → logprob: -4.760201454162598
    3. '):' → logprob: -7.385201454162598
    4. 'self' → logprob: -8.135201454162598
    5. '):
' → logprob: -8.510201454162598
    6. '(' → logprob: -8.510201454162598
    7. '       ' → logprob: -8.885201454162598
    8. ')' → logprob: -9.760201454162598
    9. ' ' → logprob: -10.635201454162598
    10. 'def' → logprob: -11.385201454162598

Token 1848: ' root' (ID: 6577)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9781756401062012
    2. 'self' → logprob: -1.2281756401062012
    3. '):
' → logprob: -1.7281756401062012
    4. '):' → logprob: -1.9781756401062012
    5. '   ' → logprob: -4.353175640106201
    6. '       ' → logprob: -6.478175640106201
    7. '
' → logprob: -8.72817611694336
    8. ')->' → logprob: -9.10317611694336
    9. ' ' → logprob: -9.47817611694336
    10. '):
' → logprob: -9.47817611694336

Token 1849: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -8.017927029868588e-05
    2. ':' → logprob: -9.500080108642578
    3. ' =' → logprob: -12.875080108642578
    4. '):
' → logprob: -13.875080108642578
    5. '):' → logprob: -14.250080108642578
    6. '   ' → logprob: -14.250080108642578
    7. '=None' → logprob: -15.500080108642578
    8. '=root' → logprob: -15.875080108642578
    9. '=
' → logprob: -16.875080108642578
    10. 'def' → logprob: -18.250080108642578

Token 1850: ' int' (ID: 677)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01059639174491167
    2. 'int' → logprob: -5.13559627532959
    3. '=' → logprob: -5.38559627532959
    4. '   ' → logprob: -10.38559627532959
    5. '=int' → logprob: -10.63559627532959
    6. ' ' → logprob: -11.88559627532959
    7. ' int' → logprob: -12.38559627532959
    8. ' =' → logprob: -13.51059627532959
    9. '
' → logprob: -13.51059627532959
    10. ':int' → logprob: -13.63559627532959

Token 1851: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00015908108616713434
    2. ' =' → logprob: -8.75015926361084
    3. '   ' → logprob: -14.50015926361084
    4. '0' → logprob: -18.875158309936523
    5. '):
' → logprob: -19.000158309936523
    6. '=None' → logprob: -19.125158309936523
    7. ':' → logprob: -19.500158309936523
    8. '=-' → logprob: -20.625158309936523
    9. '):' → logprob: -20.750158309936523
    10. ')' → logprob: -21.375158309936523

Token 1852: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -11.625021934509277
    3. '=' → logprob: -12.000021934509277
    4. '   ' → logprob: -12.375021934509277
    5. ')' → logprob: -14.125021934509277
    6. '	' → logprob: -15.000021934509277
    7. '-' → logprob: -16.12502098083496
    8. '                    ' → logprob: -16.37502098083496
    9. '    ' → logprob: -16.50002098083496
    10. '                   ' → logprob: -16.50002098083496

Token 1853: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.37500286102295
    3. '   ' → logprob: -13.75000286102295
    4. '=' → logprob: -16.250003814697266
    5. '-' → logprob: -17.125003814697266
    6. ')' → logprob: -17.500003814697266
    7. '1' → logprob: -18.125003814697266
    8. '  ' → logprob: -18.125003814697266
    9. '
' → logprob: -18.250003814697266
    10. '    ' → logprob: -18.312503814697266

Token 1854: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.21396730840206146
    2. ')' → logprob: -1.9639673233032227
    3. '):' → logprob: -2.9639673233032227
    4. '   ' → logprob: -7.338967323303223
    5. '):
' → logprob: -9.838967323303223
    6. '=' → logprob: -12.838967323303223
    7. '):

' → logprob: -13.213967323303223
    8. ')->' → logprob: -13.838967323303223
    9. ' ):
' → logprob: -14.338967323303223
    10. ' )' → logprob: -14.463967323303223

Token 1855: ' ->' (ID: 2747)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07809991389513016
    2. ':' → logprob: -2.7030999660491943
    3. '):
' → logprob: -5.578099727630615
    4. '():
' → logprob: -6.203099727630615
    5. '   ' → logprob: -6.453099727630615
    6. '       ' → logprob: -7.328099727630615
    7. '):' → logprob: -9.953100204467773
    8. '```' → logprob: -11.453100204467773
    9. '():' → logprob: -11.578100204467773
    10. ')' → logprob: -11.578100204467773

Token 1856: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.014187951572239399
    2. ' None' → logprob: -4.264187812805176
    3. '(None' → logprob: -11.264187812805176
    4. ')' → logprob: -12.389187812805176
    5. '   ' → logprob: -12.389187812805176
    6. '_None' → logprob: -13.389187812805176
    7. '):
' → logprob: -14.389187812805176
    8. ' ' → logprob: -15.014187812805176
    9. 'void' → logprob: -15.514187812805176
    10. '):' → logprob: -16.014188766479492

Token 1857: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2673245072364807
    2. ':' → logprob: -1.642324447631836
    3. '       ' → logprob: -3.392324447631836
    4. '   ' → logprob: -5.392324447631836
    5. '):
' → logprob: -6.392324447631836
    6. '():
' → logprob: -7.267324447631836
    7. '```' → logprob: -8.142324447631836
    8. '):' → logprob: -9.142324447631836
    9. '():' → logprob: -10.392324447631836
    10. '<|end|>' → logprob: -11.642324447631836

Token 1858: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00867071095854044
    2. '   ' → logprob: -4.758670806884766
    3. '
' → logprob: -10.758670806884766
    4. '```' → logprob: -11.008670806884766
    5. '	' → logprob: -11.758670806884766
    6. '        
' → logprob: -12.883670806884766
    7. '	   ' → logprob: -13.258670806884766
    8. '[' → logprob: -14.008670806884766
    9. '    
' → logprob: -14.133670806884766
    10. ':
' → logprob: -14.133670806884766

Token 1859: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.018469713628292084
    2. '       ' → logprob: -4.26846981048584
    3. '   ' → logprob: -5.76846981048584
    4. ' self' → logprob: -6.76846981048584
    5. '	self' → logprob: -10.89346981048584
    6. '(self' → logprob: -13.76846981048584
    7. '	' → logprob: -13.76846981048584
    8. ' ' → logprob: -14.14346981048584
    9. '```' → logprob: -14.39346981048584
    10. '
' → logprob: -14.39346981048584

Token 1860: '.root' (ID: 25375)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '._' → logprob: -5.228561349213123e-05
    2. '_b' → logprob: -10.250052452087402
    3. '   ' → logprob: -11.250052452087402
    4. '.' → logprob: -14.000052452087402
    5. '_par' → logprob: -14.250052452087402
    6. '.b' → logprob: -14.750052452087402
    7. ' .' → logprob: -15.000052452087402
    8. '.B' → logprob: -15.000052452087402
    9. '_B' → logprob: -15.625052452087402
    10. '.__' → logprob: -15.875052452087402

Token 1861: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9211269021034241
    2. ' =' → logprob: -1.1711268424987793
    3. '._' → logprob: -2.2961268424987793
    4. '   ' → logprob: -2.7961268424987793
    5. '.set' → logprob: -2.9211268424987793
    6. '.enqueue' → logprob: -4.296126842498779
    7. '_set' → logprob: -4.421126842498779
    8. 'def' → logprob: -4.921126842498779
    9. '       ' → logprob: -5.171126842498779
    10. '().' → logprob: -5.421126842498779

Token 1862: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.0008887103176675737
    2. ' root' → logprob: -7.500888824462891
    3. '0' → logprob: -8.00088882446289
    4. ' ' → logprob: -15.62588882446289
    5. '(root' → logprob: -15.75088882446289
    6. '	root' → logprob: -16.25088882446289
    7. '   ' → logprob: -16.25088882446289
    8. '[root' → logprob: -17.75088882446289
    9. '=root' → logprob: -18.75088882446289
    10. '/root' → logprob: -18.87588882446289

Token 1863: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017827287956606597
    2. '
' → logprob: -9.250178337097168
    3. '   ' → logprob: -10.000178337097168
    4. '	' → logprob: -11.000178337097168
    5. 'self' → logprob: -11.875178337097168
    6. ',' → logprob: -12.500178337097168
    7. ' for' → logprob: -13.500178337097168
    8. '```' → logprob: -13.875178337097168
    9. '#' → logprob: -14.125178337097168
    10. ' self' → logprob: -14.250178337097168

Token 1864: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011696293950080872
    2. '   ' → logprob: -7.501169681549072
    3. '
' → logprob: -7.751169681549072
    4. 'for' → logprob: -8.751169204711914
    5. ' for' → logprob: -10.626169204711914
    6. '	' → logprob: -13.376169204711914
    7. 'self' → logprob: -14.376169204711914
    8. '```' → logprob: -14.376169204711914
    9. '           ' → logprob: -15.126169204711914
    10. 'def' → logprob: -15.626169204711914

Token 1865: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.030053619295358658
    2. '       ' → logprob: -3.5300536155700684
    3. ' self' → logprob: -8.155054092407227
    4. '   ' → logprob: -11.280054092407227
    5. '	self' → logprob: -13.530054092407227
    6. '(self' → logprob: -14.405054092407227
    7. 'def' → logprob: -15.030054092407227
    8. 'for' → logprob: -15.280054092407227
    9. '```' → logprob: -15.530054092407227
    10. '	' → logprob: -16.155054092407227

Token 1866: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0015191456768661737
    2. '_b' → logprob: -6.501519203186035
    3. '_par' → logprob: -11.251519203186035
    4. '.b' → logprob: -13.751519203186035
    5. '   ' → logprob: -14.126519203186035
    6. '.' → logprob: -15.001519203186035
    7. '
' → logprob: -15.376519203186035
    8. '->_' → logprob: -15.501519203186035
    9. '_.' → logprob: -15.501519203186035
    10. ' _' → logprob: -15.501519203186035

Token 1867: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.511406809295295e-06
    2. '_b' → logprob: -12.000006675720215
    3. 'dfs' → logprob: -16.0000057220459
    4. ' bfs' → logprob: -16.8750057220459
    5. '   ' → logprob: -17.2500057220459
    6. 'init' → logprob: -17.7500057220459
    7. '```' → logprob: -18.1250057220459
    8. '
' → logprob: -18.2500057220459
    9. '`' → logprob: -19.0000057220459
    10. '_init' → logprob: -19.0000057220459

Token 1868: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -4.008129963040119e-06
    2. '_fs' → logprob: -12.875003814697266
    3. 'FS' → logprob: -13.750003814697266
    4. 'f' → logprob: -15.000003814697266
    5. 'dfs' → logprob: -18.125003814697266
    6. 'fsm' → logprob: -18.375003814697266
    7. 'b' → logprob: -18.500003814697266
    8. 'fsi' → logprob: -18.625003814697266
    9. 's' → logprob: -18.750003814697266
    10. ' fs' → logprob: -19.375003814697266

Token 1869: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.002759464317932725
    2. '(' → logprob: -6.2527594566345215
    3. '(self' → logprob: -7.1277594566345215
    4. 'root' → logprob: -10.50275993347168
    5. '0' → logprob: -15.37775993347168
    6. '(
' → logprob: -16.62775993347168
    7. '[root' → logprob: -16.75275993347168
    8. '(ROOT' → logprob: -17.37775993347168
    9. 'self' → logprob: -17.62775993347168
    10. '((' → logprob: -17.87775993347168

Token 1870: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021435972303152084
    2. ')
' → logprob: -6.627143383026123
    3. '       ' → logprob: -7.127143383026123
    4. '   ' → logprob: -11.252143859863281
    5. ' )' → logprob: -14.502143859863281
    6. '	' → logprob: -16.37714385986328
    7. ')
' → logprob: -16.62714385986328
    8. '           ' → logprob: -17.00214385986328
    9. '
' → logprob: -17.25214385986328
    10. ')

' → logprob: -17.25214385986328

Token 1871: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08490661531686783
    2. 'for' → logprob: -2.584906578063965
    3. ' for' → logprob: -5.334906578063965
    4. '   ' → logprob: -6.834906578063965
    5. '```' → logprob: -9.209906578063965
    6. '	for' → logprob: -13.334906578063965
    7. '``' → logprob: -15.084906578063965
    8. 'For' → logprob: -15.459906578063965
    9. '           ' → logprob: -15.459906578063965
    10. ' ' → logprob: -15.709906578063965

Token 1872: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0011773703154176474
    2. '       ' → logprob: -6.7511773109436035
    3. ' for' → logprob: -12.001177787780762
    4. '```' → logprob: -14.751177787780762
    5. '   ' → logprob: -14.876177787780762
    6. '	for' → logprob: -15.751177787780762
    7. 'from' → logprob: -15.876177787780762
    8. '``' → logprob: -18.251176834106445
    9. '	' → logprob: -18.876176834106445
    10. 'l' → logprob: -19.001176834106445

Token 1873: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.37627094984054565
    2. 'i' → logprob: -1.2512710094451904
    3. 'k' → logprob: -3.6262710094451904
    4. 'l' → logprob: -7.751270771026611
    5. 'd' → logprob: -8.12627124786377
    6. '1' → logprob: -10.25127124786377
    7. ' j' → logprob: -11.00127124786377
    8. 'x' → logprob: -11.75127124786377
    9. 'h' → logprob: -12.00127124786377
    10. '   ' → logprob: -12.25127124786377

Token 1874: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10085511952638626
    2. ' in' → logprob: -2.3508551120758057
    3. '1' → logprob: -7.350855350494385
    4. '   ' → logprob: -13.225854873657227
    5. 'i' → logprob: -13.725854873657227
    6. '	in' → logprob: -13.850854873657227
    7. 'range' → logprob: -14.100854873657227
    8. ' ' → logprob: -14.350854873657227
    9. '```' → logprob: -15.225854873657227
    10. 'import' → logprob: -15.725854873657227

Token 1875: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.941850526549388e-06
    2. ' range' → logprob: -11.750007629394531
    3. '1' → logprob: -17.00000762939453
    4. '(range' → logprob: -19.87500762939453
    5. '   ' → logprob: -20.50000762939453
    6. '[' → logprob: -21.00000762939453
    7. '
' → logprob: -21.00000762939453
    8. '	range' → logprob: -21.62500762939453
    9. '(' → logprob: -23.50000762939453
    10. ' ' → logprob: -24.50000762939453

Token 1876: '(self' (ID: 2402)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011045700375689194
    2. 'self' → logprob: -9.125110626220703
    3. '(' → logprob: -14.250110626220703
    4. '0' → logprob: -15.250110626220703
    5. '   ' → logprob: -15.250110626220703
    6. ' ' → logprob: -15.375110626220703
    7. '(self' → logprob: -15.625110626220703
    8. ' self' → logprob: -17.625110626220703
    9. '
' → logprob: -19.125110626220703
    10. '       ' → logprob: -19.875110626220703

Token 1877: '.l' (ID: 1000)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3080716346157715e-05
    2. '   ' → logprob: -11.750022888183594
    3. 'l' → logprob: -12.625022888183594
    4. '(' → logprob: -12.875022888183594
    5. '[' → logprob: -12.875022888183594
    6. 'self' → logprob: -12.875022888183594
    7. ' ' → logprob: -13.875022888183594
    8. '       ' → logprob: -14.125022888183594
    9. '+' → logprob: -14.250022888183594
    10. '.' → logprob: -14.250022888183594

Token 1878: ' -' (ID: 533)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6969513893127441
    2. '1' → logprob: -0.8219513893127441
    3. '-' → logprob: -3.446951389312744
    4. ' -' → logprob: -4.321951389312744
    5. '):' → logprob: -4.446951389312744
    6. '   ' → logprob: -6.196951389312744
    7. '+' → logprob: -6.946951389312744
    8. '       ' → logprob: -6.946951389312744
    9. '[' → logprob: -7.196951389312744
    10. '):
' → logprob: -7.946951389312744

Token 1879: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -17.625001907348633
    4. '2' → logprob: -19.125001907348633
    5. '0' → logprob: -20.500001907348633
    6. '  ' → logprob: -21.000001907348633
    7. '１' → logprob: -21.250001907348633
    8. '    ' → logprob: -21.500001907348633
    9. '       ' → logprob: -21.625001907348633
    10. '(' → logprob: -21.625001907348633

Token 1880: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '2' → logprob: -17.625001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '(' → logprob: -19.500001907348633
    6. '-' → logprob: -20.000001907348633
    7. '１' → logprob: -20.187501907348633
    8. '
' → logprob: -20.375001907348633
    9. '  ' → logprob: -20.562501907348633
    10. '0' → logprob: -20.562501907348633

Token 1881: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03058176301419735
    2. '):' → logprob: -3.5305817127227783
    3. '   ' → logprob: -8.1555814743042
    4. '-' → logprob: -8.9055814743042
    5. '):
' → logprob: -9.0305814743042
    6. '1' → logprob: -9.0305814743042
    7. ' -' → logprob: -9.4055814743042
    8. ',' → logprob: -10.0305814743042
    9. '0' → logprob: -11.0305814743042
    10. ' ):
' → logprob: -11.6555814743042

Token 1882: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09077708423137665
    2. '   ' → logprob: -2.5907771587371826
    3. '           ' → logprob: -4.4657769203186035
    4. ' for' → logprob: -8.215777397155762
    5. 'for' → logprob: -10.340777397155762
    6. ' ' → logprob: -12.215777397155762
    7. '	   ' → logprob: -12.840777397155762
    8. '	for' → logprob: -13.215777397155762
    9. '     ' → logprob: -13.340777397155762
    10. '	       ' → logprob: -13.340777397155762

Token 1883: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001710014621494338
    2. '   ' → logprob: -9.000170707702637
    3. '           ' → logprob: -10.500170707702637
    4. ' for' → logprob: -10.875170707702637
    5. '       ' → logprob: -14.500170707702637
    6. '	for' → logprob: -14.625170707702637
    7. '               ' → logprob: -16.875171661376953
    8. ' ' → logprob: -17.625171661376953
    9. '  ' → logprob: -19.500171661376953
    10. 'For' → logprob: -20.125171661376953

Token 1884: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1603703498840332
    2. 'j' → logprob: -1.9103703498840332
    3. ' v' → logprob: -9.160369873046875
    4. ' j' → logprob: -10.660369873046875
    5. 'node' → logprob: -11.285369873046875
    6. 'u' → logprob: -12.660369873046875
    7. 'k' → logprob: -14.035369873046875
    8. 'nv' → logprob: -14.910369873046875
    9. '```' → logprob: -15.410369873046875
    10. 'x' → logprob: -15.410369873046875

Token 1885: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009771670214831829
    2. 'in' → logprob: -4.634771823883057
    3. 'v' → logprob: -11.509771347045898
    4. 'n' → logprob: -12.384771347045898
    5. 'range' → logprob: -14.009771347045898
    6. ' ' → logprob: -15.759771347045898
    7. 'import' → logprob: -16.0097713470459
    8. 's' → logprob: -16.1347713470459
    9. '```' → logprob: -16.2597713470459
    10. '0' → logprob: -16.8847713470459

Token 1886: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.935296834039036e-06
    2. ' range' → logprob: -12.75000286102295
    3. '
' → logprob: -20.750003814697266
    4. '(range' → logprob: -20.875003814697266
    5. '	range' → logprob: -21.625003814697266
    6. '   ' → logprob: -22.250003814697266
    7. '0' → logprob: -24.625003814697266
    8. 'r' → logprob: -24.750003814697266
    9. 'ran' → logprob: -25.125003814697266
    10. 'ra' → logprob: -25.125003814697266

Token 1887: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02340317703783512
    2. '(self' → logprob: -3.7734031677246094
    3. '1' → logprob: -9.02340316772461
    4. '0' → logprob: -11.39840316772461
    5. ' self' → logprob: -11.77340316772461
    6. '           ' → logprob: -12.02340316772461
    7. '(' → logprob: -12.02340316772461
    8. '	self' → logprob: -12.89840316772461
    9. '   ' → logprob: -13.02340316772461
    10. '       ' → logprob: -14.64840316772461

Token 1888: '.N' (ID: 4439)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011150039732456207
    2. 'N' → logprob: -4.511149883270264
    3. ' self' → logprob: -9.886150360107422
    4. '0' → logprob: -10.011150360107422
    5. '1' → logprob: -13.011150360107422
    6. '
' → logprob: -13.761150360107422
    7. '(self' → logprob: -13.886150360107422
    8. '   ' → logprob: -14.136150360107422
    9. '	self' → logprob: -15.386150360107422
    10. 'len' → logprob: -15.761150360107422

Token 1889: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05938984081149101
    2. '+' → logprob: -3.55938982963562
    3. '):' → logprob: -3.68438982963562
    4. '           ' → logprob: -5.934390068054199
    5. ' +' → logprob: -7.559390068054199
    6. '               ' → logprob: -7.934390068054199
    7. '       ' → logprob: -8.9343900680542
    8. ':' → logprob: -9.5593900680542
    9. '   ' → logprob: -9.9343900680542
    10. '):
' → logprob: -10.0593900680542

Token 1890: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18372125923633575
    2. '           ' → logprob: -1.8087213039398193
    3. '   ' → logprob: -5.93372106552124
    4. 'for' → logprob: -7.68372106552124
    5. 'self' → logprob: -8.058721542358398
    6. '       ' → logprob: -8.308721542358398
    7. ' for' → logprob: -9.308721542358398
    8. '```' → logprob: -9.433721542358398
    9. '	       ' → logprob: -10.308721542358398
    10. ' self' → logprob: -10.808721542358398

Token 1891: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04997916519641876
    2. '               ' → logprob: -3.0499792098999023
    3. '                   ' → logprob: -7.424979209899902
    4. ' self' → logprob: -7.674979209899902
    5. '   ' → logprob: -8.049979209899902
    6. '           ' → logprob: -11.799979209899902
    7. '       ' → logprob: -13.049979209899902
    8. ' ' → logprob: -14.549979209899902
    9. '	self' → logprob: -15.049979209899902
    10. '  ' → logprob: -15.674979209899902

Token 1892: '.par' (ID: 36294)
  Prédit: '.par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -2.8921695047756657e-05
    2. '               ' → logprob: -11.875028610229492
    3. 'par' → logprob: -12.500028610229492
    4. '.' → logprob: -12.500028610229492
    5. '.self' → logprob: -13.125028610229492
    6. '.v' → logprob: -13.250028610229492
    7. 'self' → logprob: -13.375028610229492
    8. '.p' → logprob: -13.375028610229492
    9. '[' → logprob: -13.625028610229492
    10. ' .' → logprob: -14.125028610229492

Token 1893: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: 0.0
    2. 'v' → logprob: -17.125
    3. '```' → logprob: -17.875
    4. '[' → logprob: -18.375
    5. '[j' → logprob: -19.75
    6. '[i' → logprob: -19.75
    7. '\[' → logprob: -19.75
    8. '[
' → logprob: -20.25
    9. '][' → logprob: -20.25
    10. '=v' → logprob: -20.5

Token 1894: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.010054723359644413
    2. '[' → logprob: -5.260054588317871
    3. '[i' → logprob: -5.385054588317871
    4. '[v' → logprob: -9.260054588317871
    5. '   ' → logprob: -10.760054588317871
    6. '>[' → logprob: -10.760054588317871
    7. '+' → logprob: -10.885054588317871
    8. '
' → logprob: -11.635054588317871
    9. '[j' → logprob: -12.260054588317871
    10. ' [' → logprob: -12.260054588317871

Token 1895: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -14.625000953674316
    3. ' i' → logprob: -15.750000953674316
    4. '(i' → logprob: -18.0
    5. '	i' → logprob: -18.5
    6. '1' → logprob: -19.125
    7. '
' → logprob: -19.5
    8. ' ' → logprob: -20.25
    9. '       ' → logprob: -20.75
    10. '  ' → logprob: -21.375

Token 1896: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003177952254191041
    2. ' +' → logprob: -5.753178119659424
    3. '1' → logprob: -15.128177642822266
    4. '+
' → logprob: -17.128177642822266
    5. ']' → logprob: -18.003177642822266
    6. '＋' → logprob: -18.878177642822266
    7. '+]' → logprob: -19.003177642822266
    8. ' ' → logprob: -19.128177642822266
    9. '   ' → logprob: -19.128177642822266
    10. '[' → logprob: -19.753177642822266

Token 1897: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.25000286102295
    3. '   ' → logprob: -14.50000286102295
    4. '```' → logprob: -15.12500286102295
    5. '
' → logprob: -15.75000286102295
    6. '2' → logprob: -16.312503814697266
    7. '+' → logprob: -17.750003814697266
    8. '  ' → logprob: -17.937503814697266
    9. '0' → logprob: -18.312503814697266
    10. '       ' → logprob: -18.375003814697266

Token 1898: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.125000953674316
    3. '
' → logprob: -15.625000953674316
    4. '   ' → logprob: -16.125
    5. '```' → logprob: -17.25
    6. '+' → logprob: -18.8125
    7. '2' → logprob: -18.875
    8. '0' → logprob: -19.375
    9. '  ' → logprob: -19.6875
    10. '１' → logprob: -19.875

Token 1899: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0030237024184316397
    2. ']=' → logprob: -6.378023624420166
    3. '=' → logprob: -7.128023624420166
    4. ' =' → logprob: -7.753023624420166
    5. ' ]' → logprob: -9.378024101257324
    6. '   ' → logprob: -13.253024101257324
    7. ']+=' → logprob: -13.503024101257324
    8. '[' → logprob: -15.503024101257324
    9. '][' → logprob: -15.503024101257324
    10. ']=(' → logprob: -15.628024101257324

Token 1900: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1004939153790474
    2. ' =' → logprob: -2.350493907928467
    3. '[' → logprob: -8.225494384765625
    4. '=[' → logprob: -12.225494384765625
    5. '   ' → logprob: -12.850494384765625
    6. '               ' → logprob: -12.975494384765625
    7. ']=' → logprob: -13.225494384765625
    8. '           ' → logprob: -13.225494384765625
    9. '=self' → logprob: -14.350494384765625
    10. '=
' → logprob: -14.475494384765625

Token 1901: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015686646802350879
    2. ' self' → logprob: -6.501568794250488
    3. '                   ' → logprob: -10.126568794250488
    4. '               ' → logprob: -10.626568794250488
    5. '(self' → logprob: -13.876568794250488
    6. '[self' → logprob: -14.126568794250488
    7. '   ' → logprob: -15.626568794250488
    8. '                       ' → logprob: -16.376567840576172
    9. '           ' → logprob: -16.626567840576172
    10. '	self' → logprob: -17.001567840576172

Token 1902: '.par' (ID: 36294)
  Prédit: '.par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -2.927930654550437e-05
    2. 'par' → logprob: -11.000029563903809
    3. '	par' → logprob: -11.625029563903809
    4. '.p' → logprob: -13.375029563903809
    5. 'Par' → logprob: -14.750029563903809
    6. '```' → logprob: -14.875029563903809
    7. '.py' → logprob: -15.000029563903809
    8. '_par' → logprob: -15.125029563903809
    9. ' par' → logprob: -15.375029563903809
    10. 'ar' → logprob: -16.500028610229492

Token 1903: '[self' (ID: 33734)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.226628895296017e-06
    2. 'v' → logprob: -11.875007629394531
    3. '```' → logprob: -15.875007629394531
    4. '[' → logprob: -17.12500762939453
    5. '[
' → logprob: -17.75000762939453
    6. '(v' → logprob: -18.25000762939453
    7. '[u' → logprob: -18.37500762939453
    8. '	v' → logprob: -19.12500762939453
    9. '[i' → logprob: -19.50000762939453
    10. '<v' → logprob: -19.62500762939453

Token 1904: '.par' (ID: 36294)
  Prédit: '.par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -0.005217751953750849
    2. 'par' → logprob: -5.505217552185059
    3. '[v' → logprob: -7.005217552185059
    4. '.v' → logprob: -8.505217552185059
    5. 'v' → logprob: -10.505217552185059
    6. '_par' → logprob: -14.380217552185059
    7. 'Par' → logprob: -14.505217552185059
    8. 'ar' → logprob: -15.255217552185059
    9. '	par' → logprob: -15.380217552185059
    10. '<v' → logprob: -16.630218505859375

Token 1905: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0788961797952652
    2. 'v' → logprob: -2.5788962841033936
    3. ' v' → logprob: -13.453896522521973
    4. '```' → logprob: -13.453896522521973
    5. '	v' → logprob: -14.078896522521973
    6. '[' → logprob: -14.328896522521973
    7. '<v' → logprob: -14.328896522521973
    8. ')v' → logprob: -14.453896522521973
    9. '(v' → logprob: -14.703896522521973
    10. ',v' → logprob: -15.703896522521973

Token 1906: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00023488728038500994
    2. 'v' → logprob: -8.375234603881836
    3. '][' → logprob: -12.500234603881836
    4. '[' → logprob: -15.375234603881836
    5. '```' → logprob: -15.375234603881836
    6. '(v' → logprob: -17.250234603881836
    7. '	v' → logprob: -17.625234603881836
    8. '[u' → logprob: -17.625234603881836
    9. '<v' → logprob: -18.125234603881836
    10. ' v' → logprob: -18.375234603881836

Token 1907: 'i' (ID: 72)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.7697225252486533e-06
    2. '[v' → logprob: -13.000003814697266
    3. ' v' → logprob: -13.625003814697266
    4. '   ' → logprob: -16.625003814697266
    5. '	v' → logprob: -17.375003814697266
    6. '```' → logprob: -17.500003814697266
    7. '0' → logprob: -17.500003814697266
    8. '(v' → logprob: -17.750003814697266
    9. '][' → logprob: -18.000003814697266
    10. '           ' → logprob: -18.250003814697266

Token 1908: ']][' (ID: 61032)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.029951108619570732
    2. '[i' → logprob: -3.5299510955810547
    3. ' ][' → logprob: -8.779951095581055
    4. '   ' → logprob: -11.404951095581055
    5. '[v' → logprob: -11.529951095581055
    6. '       ' → logprob: -11.529951095581055
    7. ']' → logprob: -12.404951095581055
    8. '[' → logprob: -12.529951095581055
    9. '           ' → logprob: -13.279951095581055
    10. 'i' → logprob: -14.029951095581055

Token 1909: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5048530030981055e-06
    2. ' i' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.500001907348633
    4. '	i' → logprob: -17.625001907348633
    5. ' ' → logprob: -19.000001907348633
    6. '[i' → logprob: -19.125001907348633
    7. '<|end|>' → logprob: -19.250001907348633
    8. '{i' → logprob: -19.875001907348633
    9. '_i' → logprob: -20.000001907348633
    10. 'I' → logprob: -20.250001907348633

Token 1910: ']

' (ID: 3144)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008846430107951164
    2. ' +' → logprob: -4.758846282958984
    3. ']' → logprob: -8.383846282958984
    4. '1' → logprob: -13.008846282958984
    5. '+]' → logprob: -14.133846282958984
    6. '+i' → logprob: -16.133846282958984
    7. ']+' → logprob: -16.258846282958984
    8. '       ' → logprob: -17.883846282958984
    9. ' ]' → logprob: -18.133846282958984
    10. '＋' → logprob: -18.133846282958984

Token 1911: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9583702087402344
    2. '<|end|>' → logprob: -1.2083702087402344
    3. '   ' → logprob: -1.8333702087402344
    4. '```' → logprob: -2.8333702087402344
    5. ')' → logprob: -2.9583702087402344
    6. '[' → logprob: -4.833370208740234
    7. '.' → logprob: -4.958370208740234
    8. ' for' → logprob: -5.083370208740234
    9. '	' → logprob: -5.458370208740234
    10. 'def' → logprob: -5.708370208740234

Token 1912: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.21171647310256958
    2. '   ' → logprob: -2.086716413497925
    3. ' def' → logprob: -2.711716413497925
    4. '	def' → logprob: -8.711716651916504
    5. '```' → logprob: -9.461716651916504
    6. '
' → logprob: -10.711716651916504
    7. ' ' → logprob: -11.461716651916504
    8. '    
' → logprob: -12.711716651916504
    9. '[' → logprob: -13.586716651916504
    10. ')' → logprob: -13.836716651916504

Token 1913: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.4868770196917467e-05
    2. '_l' → logprob: -11.375024795532227
    3. ' l' → logprob: -12.250024795532227
    4. 'query' → logprob: -12.500024795532227
    5. 'get' → logprob: -13.500024795532227
    6. 'lift' → logprob: -14.125024795532227
    7. 'parent' → logprob: -14.750024795532227
    8. 'lowest' → logprob: -14.875024795532227
    9. 'ancestor' → logprob: -15.375024795532227
    10. 'depth' → logprob: -15.375024795532227

Token 1914: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -2.856408536899835e-05
    2. '   ' → logprob: -11.125028610229492
    3. '_ca' → logprob: -12.250028610229492
    4. 'e' → logprob: -13.250028610229492
    5. 'CA' → logprob: -13.375028610229492
    6. '_' → logprob: -14.125028610229492
    7. '=' → logprob: -14.250028610229492
    8. ' ca' → logprob: -14.375028610229492
    9. '```' → logprob: -14.625028610229492
    10. 'c' → logprob: -14.625028610229492

Token 1915: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -13.500003814697266
    3. 'def' → logprob: -14.125003814697266
    4. '   ' → logprob: -14.500003814697266
    5. '(a' → logprob: -15.000003814697266
    6. '(
' → logprob: -15.250003814697266
    7. 'self' → logprob: -16.250003814697266
    8. '       ' → logprob: -17.500003814697266
    9. ' (' → logprob: -18.125003814697266
    10. ' ' → logprob: -18.250003814697266

Token 1916: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.464193731546402
    2. ',' → logprob: -1.7141937017440796
    3. 'self' → logprob: -1.7141937017440796
    4. 'def' → logprob: -5.589193820953369
    5. '(a' → logprob: -5.964193820953369
    6. ',self' → logprob: -6.714193820953369
    7. 'a' → logprob: -6.839193820953369
    8. '   ' → logprob: -7.339193820953369
    9. ',a' → logprob: -7.714193820953369
    10. ')' → logprob: -7.839193820953369

Token 1917: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14313168823719025
    2. 'self' → logprob: -2.143131732940674
    3. 'u' → logprob: -4.643131732940674
    4. 'x' → logprob: -5.143131732940674
    5. ' a' → logprob: -8.143131256103516
    6. ' self' → logprob: -8.768131256103516
    7. '   ' → logprob: -9.393131256103516
    8. ' u' → logprob: -10.768131256103516
    9. 'v' → logprob: -11.518131256103516
    10. '(self' → logprob: -11.643131256103516

Token 1918: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001721934968372807
    2. ' ,' → logprob: -9.25017261505127
    3. ',b' → logprob: -9.75017261505127
    4. ',a' → logprob: -11.12517261505127
    5. '   ' → logprob: -13.50017261505127
    6. ',
' → logprob: -13.62517261505127
    7. ':' → logprob: -15.25017261505127
    8. ',int' → logprob: -17.125171661376953
    9. 'a' → logprob: -17.250171661376953
    10. ',v' → logprob: -17.250171661376953

Token 1919: ' int' (ID: 677)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004079589620232582
    2. ' b' → logprob: -5.504079818725586
    3. 'int' → logprob: -14.379079818725586
    4. '   ' → logprob: -14.879079818725586
    5. ' ' → logprob: -16.004079818725586
    6. '  ' → logprob: -16.129079818725586
    7. ' int' → logprob: -17.629079818725586
    8. '    ' → logprob: -18.629079818725586
    9. '	b' → logprob: -18.629079818725586
    10. ' ' → logprob: -19.254079818725586

Token 1920: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003217574267182499
    2. ',b' → logprob: -8.125321388244629
    3. ' ,' → logprob: -10.625321388244629
    4. '   ' → logprob: -14.250321388244629
    5. ',
' → logprob: -14.375321388244629
    6. 'b' → logprob: -15.375321388244629
    7. ',int' → logprob: -17.625322341918945
    8. ',a' → logprob: -19.000322341918945
    9. '_,' → logprob: -19.750322341918945
    10. '):
' → logprob: -20.000322341918945

Token 1921: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00317783304490149
    2. ' b' → logprob: -5.753177642822266
    3. '   ' → logprob: -15.878177642822266
    4. '  ' → logprob: -18.878177642822266
    5. ' ' → logprob: -20.878177642822266
    6. '    ' → logprob: -21.003177642822266
    7. 'int' → logprob: -21.378177642822266
    8. '	b' → logprob: -21.503177642822266
    9. '       ' → logprob: -23.378177642822266
    10. ')b' → logprob: -24.253177642822266

Token 1922: ':' (ID: 25)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6169015169143677
    2. ')' → logprob: -1.6169015169143677
    3. ',' → logprob: -1.9919015169143677
    4. '):' → logprob: -2.116901397705078
    5. '   ' → logprob: -5.491901397705078
    6. '):
' → logprob: -7.991901397705078
    7. ':' → logprob: -8.491901397705078
    8. ' )' → logprob: -8.741901397705078
    9. ' ):
' → logprob: -9.116901397705078
    10. ' ):' → logprob: -9.866901397705078

Token 1923: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.896309739408025e-07
    2. ' int' → logprob: -14.500000953674316
    3. ')' → logprob: -16.125
    4. '(int' → logprob: -17.75
    5. ':int' → logprob: -18.0
    6. 'a' → logprob: -18.5
    7. 'b' → logprob: -18.625
    8. '<int' → logprob: -19.0
    9. '[int' → logprob: -19.125
    10. '
' → logprob: -20.125

Token 1924: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12889887392520905
    2. '):
' → logprob: -2.128898859024048
    3. '):' → logprob: -6.253899097442627
    4. '   ' → logprob: -11.003898620605469
    5. '):
' → logprob: -11.003898620605469
    6. ' )' → logprob: -12.128898620605469
    7. ')
' → logprob: -13.003898620605469
    8. '):

' → logprob: -13.003898620605469
    9. ' ):
' → logprob: -13.753898620605469
    10. '       ' → logprob: -14.753898620605469

Token 1925: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.160644993185997
    2. ':
' → logprob: -1.9106450080871582
    3. '):
' → logprob: -8.66064453125
    4. ':
' → logprob: -8.91064453125
    5. '   ' → logprob: -9.78564453125
    6. '=' → logprob: -10.78564453125
    7. '):' → logprob: -11.91064453125
    8. 'def' → logprob: -12.03564453125
    9. '():
' → logprob: -12.16064453125
    10. ' :
' → logprob: -12.53564453125

Token 1926: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.5776860184123507e-06
    2. ' int' → logprob: -13.50000286102295
    3. '(int' → logprob: -14.37500286102295
    4. '[int' → logprob: -14.50000286102295
    5. '<int' → logprob: -17.500001907348633
    6. ':int' → logprob: -18.000001907348633
    7. '=int' → logprob: -19.000001907348633
    8. '	int' → logprob: -19.000001907348633
    9. 'object' → logprob: -19.125001907348633
    10. '   ' → logprob: -19.875001907348633

Token 1927: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4996524155139923
    2. ':
' → logprob: -1.37465238571167
    3. '       ' → logprob: -2.24965238571167
    4. '   ' → logprob: -3.49965238571167
    5. '):
' → logprob: -6.62465238571167
    6. ',' → logprob: -7.24965238571167
    7. '    ' → logprob: -7.49965238571167
    8. ' :
' → logprob: -7.74965238571167
    9. '<|end|>' → logprob: -7.99965238571167
    10. '[' → logprob: -8.249652862548828

Token 1928: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00673135370016098
    2. '	' → logprob: -5.6317315101623535
    3. '    ' → logprob: -6.7567315101623535
    4. '   ' → logprob: -6.8817315101623535
    5. '        ' → logprob: -7.5067315101623535
    6. ' 	' → logprob: -8.881731033325195
    7. ' if' → logprob: -9.881731033325195
    8. '	   ' → logprob: -10.131731033325195
    9. ' ' → logprob: -10.506731033325195
    10. '	       ' → logprob: -10.756731033325195

Token 1929: ' dep' (ID: 2834)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.723973582556937e-05
    2. ' if' → logprob: -11.000017166137695
    3. '       ' → logprob: -14.875017166137695
    4. 'while' → logprob: -16.375017166137695
    5. '   ' → logprob: -17.125017166137695
    6. '	if' → logprob: -19.125017166137695
    7. '#' → logprob: -19.250017166137695
    8. '```' → logprob: -19.500017166137695
    9. 'If' → logprob: -20.000017166137695
    10. '
' → logprob: -22.000017166137695

Token 1930: '_s' (ID: 1278)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.5751535296440125
    2. 'a' → logprob: -1.7001535892486572
    3. '_a' → logprob: -1.7001535892486572
    4. '=' → logprob: -3.3251535892486572
    5. ' =' → logprob: -3.7001535892486572
    6. '[b' → logprob: -5.575153350830078
    7. '_' → logprob: -6.825153350830078
    8. 'b' → logprob: -6.825153350830078
    9. '=a' → logprob: -7.075153350830078
    10. '(a' → logprob: -7.200153350830078

Token 1931: ',' (ID: 11)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.39333242177963257
    2. '[a' → logprob: -1.7683324813842773
    3. 'a' → logprob: -2.5183324813842773
    4. 'elf' → logprob: -3.2683324813842773
    5. ' =' → logprob: -3.8933324813842773
    6. '=a' → logprob: -5.143332481384277
    7. 't' → logprob: -6.143332481384277
    8. '=' → logprob: -6.518332481384277
    9. 'def' → logprob: -6.893332481384277
    10. 'A' → logprob: -7.143332481384277

Token 1932: ' dep' (ID: 2834)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.054581623524427414
    2. 'dep' → logprob: -3.054581642150879
    3. 'if' → logprob: -6.304581642150879
    4. 'da' → logprob: -6.929581642150879
    5. 'depth' → logprob: -7.554581642150879
    6. 'b' → logprob: -7.929581642150879
    7. 'aa' → logprob: -7.929581642150879
    8. 'd' → logprob: -8.304581642150879
    9. 'self' → logprob: -8.429581642150879
    10. 'cost' → logprob: -9.054581642150879

Token 1933: '_l' (ID: 1478)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7609687447547913
    2. 'a' → logprob: -1.1359686851501465
    3. ' =' → logprob: -1.6359686851501465
    4. '_a' → logprob: -5.0109686851501465
    5. 'b' → logprob: -5.5109686851501465
    6. '=a' → logprob: -6.2609686851501465
    7. '       ' → logprob: -6.3859686851501465
    8. '=b' → logprob: -7.0109686851501465
    9. '   ' → logprob: -7.2609686851501465
    10. ',' → logprob: -7.7609686851501465

Token 1934: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08911371976137161
    2. ' =' → logprob: -2.589113712310791
    3. ',' → logprob: -4.589113712310791
    4. '   ' → logprob: -12.33911418914795
    5. ' ,' → logprob: -13.58911418914795
    6. '=a' → logprob: -13.83911418914795
    7. ' ' → logprob: -13.83911418914795
    8. '       ' → logprob: -14.08911418914795
    9. '    ' → logprob: -15.46411418914795
    10. 'a' → logprob: -15.96411418914795

Token 1935: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.027132267132401466
    2. 'self' → logprob: -4.027132034301758
    3. '(a' → logprob: -4.902132034301758
    4. '(b' → logprob: -6.902132034301758
    5. '   ' → logprob: -8.777132034301758
    6. '(min' → logprob: -8.902132034301758
    7. 'a' → logprob: -9.402132034301758
    8. ' (' → logprob: -10.527132034301758
    9. '(sorted' → logprob: -11.027132034301758
    10. '       ' → logprob: -11.027132034301758

Token 1936: '.dep' (ID: 181964)
  Prédit: '.dep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dep' → logprob: -0.05750267207622528
    2. '.a' → logprob: -3.3075027465820312
    3. '.b' → logprob: -4.432502746582031
    4. 'a' → logprob: -5.432502746582031
    5. 'b' → logprob: -6.057502746582031
    6. 'dep' → logprob: -8.182502746582031
    7. '[a' → logprob: -8.557502746582031
    8. '[b' → logprob: -10.057502746582031
    9. '(a' → logprob: -10.807502746582031
    10. '(dep' → logprob: -10.932502746582031

Token 1937: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.11351308971643448
    2. 'a' → logprob: -2.4885129928588867
    3. '[b' → logprob: -3.9885129928588867
    4. 'b' → logprob: -5.488512992858887
    5. ',' → logprob: -6.863512992858887
    6. 'if' → logprob: -8.238512992858887
    7. '   ' → logprob: -9.363512992858887
    8. '
' → logprob: -9.988512992858887
    9. '=' → logprob: -10.363512992858887
    10. ' =' → logprob: -10.613512992858887

Token 1938: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -9.221884101862088e-05
    2. ',b' → logprob: -10.250092506408691
    3. 'a' → logprob: -11.000092506408691
    4. ' ,' → logprob: -11.125092506408691
    5. 'if' → logprob: -11.500092506408691
    6. 'b' → logprob: -11.875092506408691
    7. ',a' → logprob: -12.250092506408691
    8. '>,' → logprob: -13.875092506408691
    9. ' if' → logprob: -14.125092506408691
    10. ',
' → logprob: -14.750092506408691

Token 1939: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002764710516203195
    2. ' self' → logprob: -8.625276565551758
    3. '       ' → logprob: -9.250276565551758
    4. '           ' → logprob: -15.250276565551758
    5. '	self' → logprob: -15.500276565551758
    6. '=self' → logprob: -15.875276565551758
    7. '(self' → logprob: -16.250276565551758
    8. '   ' → logprob: -16.750276565551758
    9. '[self' → logprob: -16.750276565551758
    10. ' ' → logprob: -18.125276565551758

Token 1940: '.dep' (ID: 181964)
  Prédit: '.dep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dep' → logprob: -0.023262368515133858
    2. 'dep' → logprob: -3.7732622623443604
    3. '.depth' → logprob: -11.523262023925781
    4. ' dep' → logprob: -13.023262023925781
    5. 'DEP' → logprob: -13.523262023925781
    6. '.def' → logprob: -13.523262023925781
    7. '(dep' → logprob: -14.273262023925781
    8. '.de' → logprob: -15.398262023925781
    9. 'def' → logprob: -15.523262023925781
    10. 'depth' → logprob: -15.523262023925781

Token 1941: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -4.008129963040119e-06
    2. 'b' → logprob: -12.625003814697266
    3. '[a' → logprob: -14.750003814697266
    4. '[
' → logprob: -16.500003814697266
    5. '	b' → logprob: -16.750003814697266
    6. '
' → logprob: -17.250003814697266
    7. '   ' → logprob: -17.500003814697266
    8. '[' → logprob: -18.250003814697266
    9. '[v' → logprob: -18.500003814697266
    10. '[max' → logprob: -18.500003814697266

Token 1942: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5152067542076111
    2. '       ' → logprob: -1.0152068138122559
    3. ' if' → logprob: -3.515206813812256
    4. 'if' → logprob: -4.890206813812256
    5. ')' → logprob: -6.890206813812256
    6. '<|end|>' → logprob: -7.515206813812256
    7. '
' → logprob: -7.765206813812256
    8. ')
' → logprob: -8.390206336975098
    9. '=' → logprob: -9.015206336975098
    10. '<|end|>' → logprob: -9.140206336975098

Token 1943: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035176169127225876
    2. ' if' → logprob: -4.1601762771606445
    3. ' 
' → logprob: -4.6601762771606445
    4. '
' → logprob: -5.6601762771606445
    5. 'if' → logprob: -6.4101762771606445
    6. '        
' → logprob: -6.4101762771606445
    7. '	' → logprob: -6.4101762771606445
    8. '        ' → logprob: -8.410176277160645
    9. '[' → logprob: -8.535176277160645
    10. '	if' → logprob: -9.035176277160645

Token 1944: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0004670153430197388
    2. ' if' → logprob: -7.750466823577881
    3. '       ' → logprob: -10.250467300415039
    4. '   ' → logprob: -15.250467300415039
    5. '```' → logprob: -15.375467300415039
    6. 'while' → logprob: -16.00046730041504
    7. 'If' → logprob: -16.62546730041504
    8. '
' → logprob: -16.62546730041504
    9. '	if' → logprob: -16.75046730041504
    10. '#' → logprob: -17.25046730041504

Token 1945: ' dep' (ID: 2834)
  Prédit: 'dep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dep' → logprob: -3.726595241460018e-05
    2. 'self' → logprob: -10.62503719329834
    3. ' dep' → logprob: -11.37503719329834
    4. '(dep' → logprob: -14.12503719329834
    5. 'a' → logprob: -14.37503719329834
    6. '   ' → logprob: -16.000038146972656
    7. ' ' → logprob: -17.750038146972656
    8. 'deb' → logprob: -18.500038146972656
    9. '  ' → logprob: -18.500038146972656
    10. '	de' → logprob: -18.875038146972656

Token 1946: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.006125141400843859
    2. 'a' → logprob: -6.131124973297119
    3. 's' → logprob: -6.381124973297119
    4. '[a' → logprob: -6.631124973297119
    5. '_a' → logprob: -7.506124973297119
    6. '_l' → logprob: -8.256125450134277
    7. 'l' → logprob: -9.506125450134277
    8. '(a' → logprob: -11.881125450134277
    9. '[l' → logprob: -12.131125450134277
    10. 'b' → logprob: -12.131125450134277

Token 1947: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16970597207546234
    2. '<' → logprob: -2.044705867767334
    3. ' >' → logprob: -3.919705867767334
    4. ' <' → logprob: -5.044705867767334
    5. '<s' → logprob: -8.419706344604492
    6. '>a' → logprob: -9.919706344604492
    7. 'a' → logprob: -10.294706344604492
    8. '<a' → logprob: -10.669706344604492
    9. '>s' → logprob: -11.294706344604492
    10. '<len' → logprob: -12.169706344604492

Token 1948: ' dep' (ID: 2834)
  Prédit: 'dep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dep' → logprob: -0.001330360071733594
    2. ' dep' → logprob: -6.626330375671387
    3. '   ' → logprob: -13.626330375671387
    4. 'b' → logprob: -13.876330375671387
    5. '       ' → logprob: -14.626330375671387
    6. '  ' → logprob: -15.001330375671387
    7. '      ' → logprob: -15.126330375671387
    8. '     ' → logprob: -15.376330375671387
    9. '    ' → logprob: -15.751330375671387
    10. '(dep' → logprob: -15.751330375671387

Token 1949: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -6.511406809295295e-06
    2. 'l' → logprob: -12.000006675720215
    3. 'L' → logprob: -15.500006675720215
    4. 'b' → logprob: -16.5000057220459
    5. '	l' → logprob: -17.1250057220459
    6. 's' → logprob: -18.1250057220459
    7. '_b' → logprob: -18.3750057220459
    8. '-l' → logprob: -18.5000057220459
    9. '=' → logprob: -19.0000057220459
    10. '   ' → logprob: -19.3750057220459

Token 1950: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22068296372890472
    2. ':' → logprob: -1.970682978630066
    3. ':
' → logprob: -2.9706828594207764
    4. '       ' → logprob: -5.5956830978393555
    5. ',a' → logprob: -6.5956830978393555
    6. 'a' → logprob: -6.8456830978393555
    7. ',
' → logprob: -7.8456830978393555
    8. ' ,' → logprob: -8.220683097839355
    9. ' a' → logprob: -8.970683097839355
    10. '   ' → logprob: -9.220683097839355

Token 1951: '           ' (ID: 352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005306335166096687
    2. ' a' → logprob: -5.255306243896484
    3. '       ' → logprob: -10.380306243896484
    4. '           ' → logprob: -10.505306243896484
    5. ',a' → logprob: -12.255306243896484
    6. '	a' → logprob: -12.630306243896484
    7. '(a' → logprob: -13.130306243896484
    8. ',' → logprob: -13.505306243896484
    9. 's' → logprob: -14.380306243896484
    10. '_a' → logprob: -14.755306243896484

Token 1952: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -4.727905979962088e-05
    2. ' a' → logprob: -10.00004768371582
    3. '           ' → logprob: -13.25004768371582
    4. 'b' → logprob: -16.87504768371582
    5. 's' → logprob: -17.25004768371582
    6. 'dep' → logprob: -17.75004768371582
    7. '(a' → logprob: -18.12504768371582
    8. '_a' → logprob: -19.50004768371582
    9. '	a' → logprob: -19.50004768371582
    10. '>a' → logprob: -19.50004768371582

Token 1953: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009525521309114993
    2. '=' → logprob: -7.12595272064209
    3. ' ,' → logprob: -9.00095272064209
    4. ',b' → logprob: -11.75095272064209
    5. ',
' → logprob: -12.00095272064209
    6. ',a' → logprob: -12.25095272064209
    7. ' =' → logprob: -12.75095272064209
    8. ',v' → logprob: -13.75095272064209
    9. '```' → logprob: -15.12595272064209
    10. '   ' → logprob: -15.75095272064209

Token 1954: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001584850688232109
    2. ' b' → logprob: -8.750158309936523
    3. '       ' → logprob: -18.375158309936523
    4. '   ' → logprob: -19.125158309936523
    5. '           ' → logprob: -19.500158309936523
    6. '	b' → logprob: -20.750158309936523
    7. '    ' → logprob: -21.250158309936523
    8. '        ' → logprob: -21.625158309936523
    9. 'a' → logprob: -22.375158309936523
    10. '         ' → logprob: -23.000158309936523

Token 1955: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09096551686525345
    2. ',' → logprob: -2.465965509414673
    3. ' =' → logprob: -6.215965747833252
    4. ' ,' → logprob: -11.090965270996094
    5. '           ' → logprob: -13.090965270996094
    6. '=
' → logprob: -13.090965270996094
    7. '[' → logprob: -13.340965270996094
    8. '   ' → logprob: -13.465965270996094
    9. ' ' → logprob: -14.215965270996094
    10. '<|end|>' → logprob: -14.590965270996094

Token 1956: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.935296834039036e-06
    2. ' b' → logprob: -12.75000286102295
    3. '	b' → logprob: -18.625003814697266
    4. '   ' → logprob: -18.750003814697266
    5. ')b' → logprob: -22.000003814697266
    6. '       ' → logprob: -22.125003814697266
    7. '           ' → logprob: -22.250003814697266
    8. '    ' → logprob: -23.000003814697266
    9. ' ' → logprob: -23.125003814697266
    10. '
' → logprob: -23.250003814697266

Token 1957: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.180258191714529e-06
    2. ' ,' → logprob: -12.375008583068848
    3. ',
' → logprob: -12.625008583068848
    4. 'a' → logprob: -15.250008583068848
    5. ',b' → logprob: -15.875008583068848
    6. ',a' → logprob: -16.12500762939453
    7. 'import' → logprob: -17.00000762939453
    8. 'def' → logprob: -17.12500762939453
    9. '   ' → logprob: -18.25000762939453
    10. ',
' → logprob: -18.50000762939453

Token 1958: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.4121114822482923e-06
    2. ' a' → logprob: -12.625003814697266
    3. '   ' → logprob: -19.125003814697266
    4. '           ' → logprob: -20.000003814697266
    5. ' ' → logprob: -20.750003814697266
    6. '       ' → logprob: -20.875003814697266
    7. '  ' → logprob: -21.375003814697266
    8. '	a' → logprob: -21.375003814697266
    9. '    ' → logprob: -21.625003814697266
    10. '     ' → logprob: -21.750003814697266

Token 1959: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9247696399688721
    2. ' 
' → logprob: -1.174769639968872
    3. '       ' → logprob: -1.549769639968872
    4. '        
' → logprob: -3.174769639968872
    5. '  
' → logprob: -3.549769639968872
    6. '    
' → logprob: -5.424769401550293
    7. '[' → logprob: -6.549769401550293
    8. '<|end|>' → logprob: -6.799769401550293
    9. '\n' → logprob: -7.299769401550293
    10. '   
' → logprob: -7.299769401550293

Token 1960: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027302691712975502
    2. '
' → logprob: -4.5273027420043945
    3. '        
' → logprob: -4.5273027420043945
    4. ' 
' → logprob: -6.9023027420043945
    5. '    
' → logprob: -7.0273027420043945
    6. '           ' → logprob: -7.2773027420043945
    7. '[' → logprob: -7.5273027420043945
    8. '  
' → logprob: -7.6523027420043945
    9. ' for' → logprob: -8.527302742004395
    10. '<|end|>' → logprob: -8.652302742004395

Token 1961: ' dep' (ID: 2834)
  Prédit: 'dep'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dep' (adapté à ' dep') → logprob: -0.39347249269485474
    2. '       ' → logprob: -1.14347243309021
    3. '           ' → logprob: -5.393472671508789
    4. ' dep' → logprob: -6.768472671508789
    5. 'a' → logprob: -7.393472671508789
    6. 'de' → logprob: -9.893472671508789
    7. 'b' → logprob: -10.268472671508789
    8. 'diff' → logprob: -10.268472671508789
    9. '(dep' → logprob: -10.393472671508789
    10. 'd' → logprob: -10.643472671508789

Token 1962: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0008210649830289185
    2. '_l' → logprob: -7.375821113586426
    3. '_a' → logprob: -9.375821113586426
    4. 's' → logprob: -9.750821113586426
    5. '_b' → logprob: -10.500821113586426
    6. 'a' → logprob: -11.000821113586426
    7. 'l' → logprob: -12.750821113586426
    8. 'b' → logprob: -14.000821113586426
    9. '_' → logprob: -14.500821113586426
    10. '_d' → logprob: -14.688321113586426

Token 1963: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.173704271830502e-06
    2. '=' → logprob: -13.00000286102295
    3. ' ,' → logprob: -15.12500286102295
    4. ',
' → logprob: -15.75000286102295
    5. '+=' → logprob: -16.125003814697266
    6. 'def' → logprob: -16.500003814697266
    7. '           ' → logprob: -16.625003814697266
    8. '0' → logprob: -16.750003814697266
    9. '       ' → logprob: -16.875003814697266
    10. ',b' → logprob: -17.250003814697266

Token 1964: ' dep' (ID: 2834)
  Prédit: 'dep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dep' → logprob: -0.0007160080131143332
    2. ' dep' → logprob: -7.250716209411621
    3. '           ' → logprob: -12.125716209411621
    4. '       ' → logprob: -15.500716209411621
    5. '   ' → logprob: -15.750716209411621
    6. '(dep' → logprob: -16.875715255737305
    7. 'depth' → logprob: -17.125715255737305
    8. 'de' → logprob: -17.375715255737305
    9. ' ' → logprob: -17.625715255737305
    10. '          ' → logprob: -17.750715255737305

Token 1965: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -7.469590491382405e-05
    2. 'l' → logprob: -9.62507438659668
    3. '_s' → logprob: -11.75007438659668
    4. 'dep' → logprob: -15.62507438659668
    5. 'b' → logprob: -15.75007438659668
    6. '=' → logprob: -15.87507438659668
    7. '[' → logprob: -16.75007438659668
    8. '(dep' → logprob: -17.25007438659668
    9. '	l' → logprob: -17.50007438659668
    10. 's' → logprob: -17.87507438659668

Token 1966: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.117345684382599e-05
    2. ' =' → logprob: -10.875020980834961
    3. ',' → logprob: -13.625020980834961
    4. '+=' → logprob: -15.000020980834961
    5. '=
' → logprob: -15.625020980834961
    6. '       ' → logprob: -15.875020980834961
    7. '   ' → logprob: -16.37502098083496
    8. '*=' → logprob: -16.37502098083496
    9. '    ' → logprob: -16.62502098083496
    10. '        ' → logprob: -16.75002098083496

Token 1967: ' dep' (ID: 2834)
  Prédit: 'dep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dep' → logprob: -5.5577775128767826e-06
    2. ' dep' → logprob: -12.125005722045898
    3. '(dep' → logprob: -15.875005722045898
    4. '   ' → logprob: -17.7500057220459
    5. '_dep' → logprob: -19.1250057220459
    6. 'deb' → logprob: -19.5000057220459
    7. 'depth' → logprob: -20.3750057220459
    8. '	de' → logprob: -20.5000057220459
    9. '  ' → logprob: -20.5000057220459
    10. 'dem' → logprob: -20.6250057220459

Token 1968: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.3544423381972592e-05
    2. '_s' → logprob: -11.87501335144043
    3. 'l' → logprob: -12.00001335144043
    4. 's' → logprob: -15.37501335144043
    5. 'b' → logprob: -16.62501335144043
    6. '_b' → logprob: -16.75001335144043
    7. '	l' → logprob: -18.00001335144043
    8. '_' → logprob: -18.06251335144043
    9. '[' → logprob: -18.37501335144043
    10. '```' → logprob: -19.00001335144043

Token 1969: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5822400857578032e-05
    2. 'a' → logprob: -10.750025749206543
    3. ',
' → logprob: -13.125025749206543
    4. ' ,' → logprob: -13.875025749206543
    5. ',a' → logprob: -14.875025749206543
    6. '[' → logprob: -15.375025749206543
    7. 'b' → logprob: -15.625025749206543
    8. ',b' → logprob: -15.875025749206543
    9. 's' → logprob: -16.00002670288086
    10. '           ' → logprob: -16.62502670288086

Token 1970: ' dep' (ID: 2834)
  Prédit: 'dep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dep' → logprob: -4.36574100604048e-06
    2. ' dep' → logprob: -12.375004768371582
    3. '   ' → logprob: -17.125003814697266
    4. '(dep' → logprob: -18.000003814697266
    5. '           ' → logprob: -18.375003814697266
    6. ' ' → logprob: -18.625003814697266
    7. 'deb' → logprob: -18.750003814697266
    8. '       ' → logprob: -18.750003814697266
    9. '  ' → logprob: -19.375003814697266
    10. 'd' → logprob: -19.500003814697266

Token 1971: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.011193180456757545
    2. '_l' → logprob: -4.51119327545166
    3. 's' → logprob: -8.88619327545166
    4. 'l' → logprob: -11.88619327545166
    5. ' s' → logprob: -17.261192321777344
    6. 'S' → logprob: -17.761192321777344
    7. '[' → logprob: -18.261192321777344
    8. 'a' → logprob: -18.386192321777344
    9. 'v' → logprob: -18.386192321777344
    10. '(s' → logprob: -18.636192321777344

Token 1972: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003943304473068565
    2. '
' → logprob: -8.375393867492676
    3. '        
' → logprob: -10.000393867492676
    4. '	' → logprob: -10.250393867492676
    5. 'for' → logprob: -10.875393867492676
    6. ' for' → logprob: -11.000393867492676
    7. '   ' → logprob: -11.000393867492676
    8. '<|end|>' → logprob: -12.000393867492676
    9. ' 
' → logprob: -12.125393867492676
    10. 'while' → logprob: -12.750393867492676

Token 1973: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1562727689743042
    2. 'for' → logprob: -2.1562728881835938
    3. ' for' → logprob: -3.7812728881835938
    4. '
' → logprob: -5.281272888183594
    5. '   ' → logprob: -7.781272888183594
    6. 'while' → logprob: -8.281272888183594
    7. 'diff' → logprob: -8.531272888183594
    8. ' while' → logprob: -10.156272888183594
    9. '```' → logprob: -10.406272888183594
    10. '	for' → logprob: -10.781272888183594

Token 1974: ' gap' (ID: 19953)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004581942630466074
    2. 'diff' → logprob: -7.750458240509033
    3. '       ' → logprob: -10.750457763671875
    4. 'd' → logprob: -13.250457763671875
    5. ' for' → logprob: -13.750457763671875
    6. '#' → logprob: -13.875457763671875
    7. '   ' → logprob: -14.000457763671875
    8. 'res' → logprob: -14.750457763671875
    9. 'while' → logprob: -15.000457763671875
    10. 'b' → logprob: -15.000457763671875

Token 1975: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04861143231391907
    2. ' =' → logprob: -3.0486114025115967
    3. '   ' → logprob: -10.798611640930176
    4. '       ' → logprob: -13.423611640930176
    5. 'd' → logprob: -14.923611640930176
    6. '=d' → logprob: -15.173611640930176
    7. 'for' → logprob: -15.298611640930176
    8. 'diff' → logprob: -15.423611640930176
    9. '=g' → logprob: -15.673611640930176
    10. '=b' → logprob: -16.04861068725586

Token 1976: ' dep' (ID: 2834)
  Prédit: 'dep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dep' → logprob: -4.56102097814437e-05
    2. ' dep' → logprob: -10.000045776367188
    3. '(dep' → logprob: -16.375045776367188
    4. 'self' → logprob: -16.750045776367188
    5. '   ' → logprob: -18.625045776367188
    6. '       ' → logprob: -20.125045776367188
    7. '  ' → logprob: -20.500045776367188
    8. ' ' → logprob: -20.750045776367188
    9. '.dep' → logprob: -21.125045776367188
    10. 'de' → logprob: -21.250045776367188

Token 1977: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -3.214019307051785e-05
    2. '_s' → logprob: -10.375032424926758
    3. '[l' → logprob: -15.375032424926758
    4. 'l' → logprob: -15.750032424926758
    5. 'diff' → logprob: -16.000032424926758
    6. 'difference' → logprob: -16.125032424926758
    7. '_a' → logprob: -16.375032424926758
    8. '[' → logprob: -16.875032424926758
    9. '_b' → logprob: -16.875032424926758
    10. 's' → logprob: -17.250032424926758

Token 1978: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4740813970565796
    2. '-' → logprob: -0.9740813970565796
    3. '-de' → logprob: -13.599081039428711
    4. '-
' → logprob: -14.099081039428711
    5. '-d' → logprob: -14.599081039428711
    6. ' ' → logprob: -14.724081039428711
    7. '
' → logprob: -15.349081039428711
    8. ' ' → logprob: -15.599081039428711
    9. '-=' → logprob: -15.849081039428711
    10. ' -=' → logprob: -15.974081039428711

Token 1979: ' dep' (ID: 2834)
  Prédit: 'dep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dep' → logprob: -0.00033558503491804004
    2. ' dep' → logprob: -8.000335693359375
    3. '(dep' → logprob: -16.125335693359375
    4. 'de' → logprob: -18.500335693359375
    5. ' ' → logprob: -18.750335693359375
    6. '   ' → logprob: -19.000335693359375
    7. 'depth' → logprob: -19.000335693359375
    8. 'deb' → logprob: -19.125335693359375
    9. '_dep' → logprob: -19.375335693359375
    10. '.dep' → logprob: -19.750335693359375

Token 1980: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.0683535037969705e-05
    2. '_l' → logprob: -11.87501049041748
    3. 's' → logprob: -12.50001049041748
    4. 'l' → logprob: -20.375011444091797
    5. '	s' → logprob: -20.375011444091797
    6. '_b' → logprob: -22.125011444091797
    7. '(s' → logprob: -22.500011444091797
    8. '{s' → logprob: -23.125011444091797
    9. '_r' → logprob: -24.000011444091797
    10. '_i' → logprob: -24.250011444091797

Token 1981: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26695436239242554
    2. 'for' → logprob: -1.5169544219970703
    3. ' for' → logprob: -4.89195442199707
    4. '
' → logprob: -5.89195442199707
    5. 'while' → logprob: -6.01695442199707
    6. '   ' → logprob: -6.39195442199707
    7. '=' → logprob: -9.39195442199707
    8. '#' → logprob: -9.64195442199707
    9. '           ' → logprob: -9.64195442199707
    10. '	for' → logprob: -9.89195442199707

Token 1982: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06375813484191895
    2. '       ' → logprob: -2.813758134841919
    3. ' for' → logprob: -6.56375789642334
    4. '   ' → logprob: -8.18875789642334
    5. 'while' → logprob: -9.31375789642334
    6. '	for' → logprob: -12.18875789642334
    7. 'i' → logprob: -12.56375789642334
    8. '	' → logprob: -14.56375789642334
    9. '           ' → logprob: -14.56375789642334
    10. '```' → logprob: -15.18875789642334

Token 1983: ' L' (ID: 451)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.576873758807778e-05
    2. '       ' → logprob: -9.750075340270996
    3. 'while' → logprob: -11.250075340270996
    4. ' for' → logprob: -13.000075340270996
    5. 'i' → logprob: -13.250075340270996
    6. '   ' → logprob: -15.125075340270996
    7. '```' → logprob: -16.500076293945312
    8. '           ' → logprob: -17.500076293945312
    9. '0' → logprob: -18.375076293945312
    10. '	for' → logprob: -19.250076293945312

Token 1984: '_' (ID: 62)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3403627574443817
    2. '=' → logprob: -1.590362787246704
    3. ' =' → logprob: -2.715362787246704
    4. 'while' → logprob: -5.215362548828125
    5. 'def' → logprob: -5.465362548828125
    6. '   ' → logprob: -5.465362548828125
    7. ' for' → logprob: -6.215362548828125
    8. '       ' → logprob: -7.340362548828125
    9. 'a' → logprob: -7.465362548828125
    10. 'b' → logprob: -8.090362548828125

Token 1985: '1' (ID: 16)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6491630673408508
    2. ' =' → logprob: -1.399163007736206
    3. '=' → logprob: -2.149163007736206
    4. '   ' → logprob: -2.399163007736206
    5. 'eft' → logprob: -5.274163246154785
    6. 'a' → logprob: -5.399163246154785
    7. 'while' → logprob: -5.524163246154785
    8. ' for' → logprob: -6.149163246154785
    9. 'def' → logprob: -6.774163246154785
    10. 'L' → logprob: -6.774163246154785

Token 1986: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17846137285232544
    2. '=' → logprob: -1.9284613132476807
    3. '   ' → logprob: -4.80346155166626
    4. '       ' → logprob: -5.17846155166626
    5. 'for' → logprob: -6.42846155166626
    6. 'def' → logprob: -7.67846155166626
    7. ',' → logprob: -8.053461074829102
    8. 'while' → logprob: -8.178461074829102
    9. 'eft' → logprob: -8.303461074829102
    10. 'a' → logprob: -8.803461074829102

Token 1987: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.62240070104599
    2. 'b' → logprob: -1.2474007606506348
    3. 'a' → logprob: -1.9974007606506348
    4. '0' → logprob: -3.9974007606506348
    5. 'dep' → logprob: -5.122400760650635
    6. ' self' → logprob: -5.122400760650635
    7. '[' → logprob: -5.622400760650635
    8. '[a' → logprob: -6.497400760650635
    9. '(a' → logprob: -7.497400760650635
    10. '(self' → logprob: -7.747400760650635

Token 1988: '.l' (ID: 1000)
  Prédit: '.par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -0.028680957853794098
    2. 'par' → logprob: -3.9036810398101807
    3. '.l' → logprob: -4.903680801391602
    4. 'l' → logprob: -7.778680801391602
    5. 'self' → logprob: -9.778680801391602
    6. 'a' → logprob: -10.528680801391602
    7. '	par' → logprob: -10.528680801391602
    8. '.' → logprob: -10.653680801391602
    9. '```' → logprob: -10.653680801391602
    10. '.p' → logprob: -11.028680801391602

Token 1989: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38299036026000977
    2. 'while' → logprob: -1.7579903602600098
    3. '
' → logprob: -3.1329903602600098
    4. '=' → logprob: -3.8829903602600098
    5. ' =' → logprob: -4.00799036026001
    6. '   ' → logprob: -4.38299036026001
    7. '       ' → logprob: -4.50799036026001
    8. ' for' → logprob: -4.75799036026001
    9. '1' → logprob: -4.88299036026001
    10. 'def' → logprob: -5.25799036026001

Token 1990: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.250005722045898
    3. 'gap' → logprob: -15.000005722045898
    4. '2' → logprob: -15.375005722045898
    5. '
' → logprob: -15.875005722045898
    6. 'for' → logprob: -16.3750057220459
    7. 'while' → logprob: -16.6250057220459
    8. '   ' → logprob: -17.1250057220459
    9. 'int' → logprob: -17.8750057220459
    10. '           ' → logprob: -18.6250057220459

Token 1991: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. '2' → logprob: -12.375004768371582
    3. ' ' → logprob: -15.250004768371582
    4. 'gap' → logprob: -16.125003814697266
    5. '3' → logprob: -16.375003814697266
    6. '   ' → logprob: -18.000003814697266
    7. '4' → logprob: -18.750003814697266
    8. '
' → logprob: -18.875003814697266
    9. '0' → logprob: -19.625003814697266
    10. '7' → logprob: -19.750003814697266

Token 1992: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15493862330913544
    2. 'for' → logprob: -2.6549386978149414
    3. 'while' → logprob: -3.0299386978149414
    4. '
' → logprob: -4.529938697814941
    5. ' for' → logprob: -5.029938697814941
    6. '   ' → logprob: -5.779938697814941
    7. ' while' → logprob: -6.904938697814941
    8. '-' → logprob: -7.029938697814941
    9. '<|end|>' → logprob: -7.154938697814941
    10. '+' → logprob: -7.529938697814941

Token 1993: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35753560066223145
    2. '       ' → logprob: -1.3575356006622314
    3. 'while' → logprob: -3.8575356006622314
    4. ' for' → logprob: -3.8575356006622314
    5. '   ' → logprob: -7.607535362243652
    6. '	for' → logprob: -8.482535362243652
    7. ' while' → logprob: -8.482535362243652
    8. '	while' → logprob: -10.232535362243652
    9. '	' → logprob: -10.357535362243652
    10. '```' → logprob: -10.607535362243652

Token 1994: ' par' (ID: 686)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04903751611709595
    2. 'while' → logprob: -3.049037456512451
    3. '       ' → logprob: -7.799037456512451
    4. 'i' → logprob: -10.79903793334961
    5. '   ' → logprob: -11.17403793334961
    6. ' for' → logprob: -12.42403793334961
    7. ' while' → logprob: -14.92403793334961
    8. '```' → logprob: -14.92403793334961
    9. '           ' → logprob: -15.54903793334961
    10. '0' → logprob: -15.79903793334961

Token 1995: ' =' (ID: 314)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.30824047327041626
    2. 'b' → logprob: -2.4332404136657715
    3. 'for' → logprob: -3.1832404136657715
    4. ' =' → logprob: -3.3082404136657715
    5. 'a' → logprob: -3.4332404136657715
    6. '_b' → logprob: -4.4332404136657715
    7. '=' → logprob: -4.4332404136657715
    8. 'g' → logprob: -4.6832404136657715
    9. '[v' → logprob: -5.1832404136657715
    10. '_a' → logprob: -5.6832404136657715

Token 1996: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1517960956552997e-05
    2. ' self' → logprob: -11.500011444091797
    3. '[self' → logprob: -14.750011444091797
    4. '0' → logprob: -15.125011444091797
    5. '(self' → logprob: -15.750011444091797
    6. 'lambda' → logprob: -16.250011444091797
    7. '[' → logprob: -16.625011444091797
    8. '1' → logprob: -17.000011444091797
    9. '	self' → logprob: -17.250011444091797
    10. '   ' → logprob: -17.250011444091797

Token 1997: '.par' (ID: 36294)
  Prédit: '.par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -0.03228547051548958
    2. 'par' → logprob: -3.532285451889038
    3. 'self' → logprob: -6.907285690307617
    4. '[self' → logprob: -7.407285690307617
    5. '	par' → logprob: -8.407285690307617
    6. '
' → logprob: -8.532285690307617
    7. 'a' → logprob: -8.907285690307617
    8. '.' → logprob: -9.407285690307617
    9. '_par' → logprob: -10.407285690307617
    10. '.b' → logprob: -10.407285690307617

Token 1998: '
' (ID: 198)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.7293484210968018
    2. '<|end|>' → logprob: -1.2293484210968018
    3. 'b' → logprob: -1.6043484210968018
    4. '[a' → logprob: -5.104348182678223
    5. '[' → logprob: -5.479348182678223
    6. 'a' → logprob: -5.604348182678223
    7. ',b' → logprob: -5.854348182678223
    8. '<|end|>' → logprob: -5.979348182678223
    9. ',' → logprob: -7.229348182678223
    10. '[v' → logprob: -7.729348182678223

Token 1999: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6903223395347595
    2. '       ' → logprob: -0.8153223395347595
    3. 'while' → logprob: -2.9403223991394043
    4. ' for' → logprob: -5.815322399139404
    5. ' while' → logprob: -9.315321922302246
    6. '   ' → logprob: -9.440321922302246
    7. '
' → logprob: -9.690321922302246
    8. '```' → logprob: -11.690321922302246
    9. '#' → logprob: -12.815321922302246
    10. '	for' → logprob: -13.065321922302246

Token 2000: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06209159642457962
    2. 'while' → logprob: -2.812091588973999
    3. '       ' → logprob: -9.062091827392578
    4. 'i' → logprob: -12.062091827392578
    5. ' for' → logprob: -13.937091827392578
    6. '   ' → logprob: -14.312091827392578
    7. '```' → logprob: -15.187091827392578
    8. 'While' → logprob: -15.687091827392578
    9. ' while' → logprob: -16.312091827392578
    10. 'if' → logprob: -16.687091827392578

Token 2001: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008227667771279812
    2. ' i' → logprob: -5.383227825164795
    3. 'j' → logprob: -6.633227825164795
    4. 'd' → logprob: -7.133227825164795
    5. '_i' → logprob: -7.758227825164795
    6. '_' → logprob: -8.133227348327637
    7. 'k' → logprob: -8.383227348327637
    8. 'x' → logprob: -9.258227348327637
    9. 'p' → logprob: -9.883227348327637
    10. 'bit' → logprob: -10.008227348327637

Token 2002: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05517416447401047
    2. 'in' → logprob: -2.9301741123199463
    3. 'n' → logprob: -8.180173873901367
    4. 'range' → logprob: -12.305173873901367
    5. '   ' → logprob: -13.305173873901367
    6. ',' → logprob: -13.680173873901367
    7. ' ' → logprob: -14.305173873901367
    8. '  ' → logprob: -14.430173873901367
    9. 'd' → logprob: -14.555173873901367
    10. 'In' → logprob: -14.680173873901367

Token 2003: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.45848218582978e-06
    2. ' range' → logprob: -13.00000286102295
    3. 're' → logprob: -15.62500286102295
    4. '(range' → logprob: -19.500001907348633
    5. '	range' → logprob: -20.125001907348633
    6. '
' → logprob: -20.375001907348633
    7. 'rang' → logprob: -21.000001907348633
    8. 'r' → logprob: -21.000001907348633
    9. 'reverse' → logprob: -21.375001907348633
    10. '   ' → logprob: -22.500001907348633

Token 2004: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.530319333076477
    2. 'L' → logprob: -1.030319333076477
    3. 'self' → logprob: -3.0303192138671875
    4. '(self' → logprob: -5.1553192138671875
    5. '(' → logprob: -8.155319213867188
    6. 'gap' → logprob: -8.155319213867188
    7. ' L' → logprob: -11.030319213867188
    8. '0' → logprob: -11.280319213867188
    9. ' self' → logprob: -12.280319213867188
    10. 's' → logprob: -12.905319213867188

Token 2005: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013044699095189571
    2. '1' → logprob: -5.138044834136963
    3. '-' → logprob: -5.388044834136963
    4. '_l' → logprob: -7.138044834136963
    5. ')' → logprob: -7.513044834136963
    6. '_)' → logprob: -8.263044357299805
    7. '_-' → logprob: -8.388044357299805
    8. '(' → logprob: -8.763044357299805
    9. '_s' → logprob: -9.013044357299805
    10. '_:' → logprob: -9.388044357299805

Token 2006: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.692145012086257e-05
    2. '2' → logprob: -10.125046730041504
    3. '0' → logprob: -12.625046730041504
    4. '-' → logprob: -13.875046730041504
    5. ')' → logprob: -14.125046730041504
    6. 'l' → logprob: -14.625046730041504
    7. ' ' → logprob: -14.750046730041504
    8. '7' → logprob: -16.12504768371582
    9. '```' → logprob: -16.12504768371582
    10. '   ' → logprob: -16.25004768371582

Token 2007: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2430444210767746
    2. ' +' → logprob: -1.618044376373291
    3. ',' → logprob: -4.493044376373291
    4. '-' → logprob: -5.368044376373291
    5. ' -' → logprob: -6.743044376373291
    6. ',-' → logprob: -8.49304485321045
    7. ' ,' → logprob: -9.36804485321045
    8. '    ' → logprob: -10.24304485321045
    9. '   ' → logprob: -10.36804485321045
    10. ' ' → logprob: -10.99304485321045

Token 2008: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04968642815947533
    2. 'L' → logprob: -3.0496864318847656
    3. ' -' → logprob: -6.924686431884766
    4. '-L' → logprob: -10.049686431884766
    5. ' L' → logprob: -10.174686431884766
    6. 'gap' → logprob: -10.424686431884766
    7. '   ' → logprob: -13.549686431884766
    8. ' ' → logprob: -14.299686431884766
    9. '_L' → logprob: -14.924686431884766
    10. '	L' → logprob: -15.049686431884766

Token 2009: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. '-' → logprob: -12.625003814697266
    3. ' -' → logprob: -15.250003814697266
    4. ' ' → logprob: -16.125003814697266
    5. '
' → logprob: -17.000003814697266
    6. '```' → logprob: -18.062503814697266
    7. '   ' → logprob: -18.375003814697266
    8. '2' → logprob: -18.500003814697266
    9. '１' → logprob: -18.875003814697266
    10. '(-' → logprob: -19.375003814697266

Token 2010: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015411955304443836
    2. '-' → logprob: -4.265411853790283
    3. ',-' → logprob: -6.890411853790283
    4. ' -' → logprob: -8.890412330627441
    5. ' ,' → logprob: -9.765412330627441
    6. ',
' → logprob: -10.765412330627441
    7. '   ' → logprob: -12.265412330627441
    8. '-,' → logprob: -13.265412330627441
    9. '```' → logprob: -13.390412330627441
    10. '           ' → logprob: -14.015412330627441

Token 2011: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.4855663721391466e-05
    2. ' -' → logprob: -11.125015258789062
    3. '−' → logprob: -21.125015258789062
    4. '   ' → logprob: -21.250015258789062
    5. '	' → logprob: -22.625015258789062
    6. ' ' → logprob: -23.125015258789062
    7. '```' → logprob: -23.125015258789062
    8. '0' → logprob: -23.625015258789062
    9. '       ' → logprob: -23.750015258789062
    10. '-
' → logprob: -23.875015258789062

Token 2012: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. '-' → logprob: -11.50001049041748
    3. ' ' → logprob: -15.62501049041748
    4. ' -' → logprob: -17.125009536743164
    5. '```' → logprob: -17.625009536743164
    6. '   ' → logprob: -18.375009536743164
    7. 'i' → logprob: -19.375009536743164
    8. '``' → logprob: -20.000009536743164
    9. ')' → logprob: -20.125009536743164
    10. '0' → logprob: -20.375009536743164

Token 2013: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38854995369911194
    2. ',' → logprob: -1.2635499238967896
    3. '):' → logprob: -4.2635498046875
    4. '-' → logprob: -5.0135498046875
    5. ':
' → logprob: -5.0135498046875
    6. '   ' → logprob: -5.7635498046875
    7. ',-' → logprob: -6.0135498046875
    8. ':' → logprob: -6.0135498046875
    9. '       ' → logprob: -6.5135498046875
    10. ' -' → logprob: -7.7635498046875

Token 2014: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018895601853728294
    2. '       ' → logprob: -4.518895626068115
    3. ' if' → logprob: -5.393895626068115
    4. '	       ' → logprob: -7.143895626068115
    5. '               ' → logprob: -7.643895626068115
    6. '        ' → logprob: -7.643895626068115
    7. '		' → logprob: -8.393895149230957
    8. 'if' → logprob: -8.518895149230957
    9. '<|end|>' → logprob: -8.643895149230957
    10. '            ' → logprob: -8.643895149230957

Token 2015: ' leng' (ID: 22202)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.015936531126499176
    2. ' if' → logprob: -4.265936374664307
    3. '           ' → logprob: -6.390936374664307
    4. '       ' → logprob: -9.390936851501465
    5. '   ' → logprob: -12.140936851501465
    6. '	if' → logprob: -12.515936851501465
    7. '```' → logprob: -14.390936851501465
    8. '               ' → logprob: -14.765936851501465
    9. 'If' → logprob: -15.015936851501465
    10. '		' → logprob: -15.640936851501465

Token 2016: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07512985169887543
    2. ' =' → logprob: -3.700129747390747
    3. 'if' → logprob: -4.200129985809326
    4. '-=' → logprob: -4.575129985809326
    5. '>=' → logprob: -5.450129985809326
    6. 'th' → logprob: -5.450129985809326
    7. '           ' → logprob: -6.325129985809326
    8. '       ' → logprob: -6.325129985809326
    9. 'f' → logprob: -6.450129985809326
    10. ' if' → logprob: -6.450129985809326

Token 2017: ' ' (ID: 220)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.7100442051887512
    2. '1' → logprob: -0.8350442051887512
    3. '(' → logprob: -2.7100441455841064
    4. '(g' → logprob: -5.4600443840026855
    5. ' gap' → logprob: -6.4600443840026855
    6. ' (' → logprob: -7.0850443840026855
    7. 'par' → logprob: -7.5850443840026855
    8. 'g' → logprob: -7.9600443840026855
    9. ' ' → logprob: -8.085043907165527
    10. '(par' → logprob: -8.960043907165527

Token 2018: '1' (ID: 16)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.577362060546875
    2. '1' → logprob: -1.327362060546875
    3. '(g' → logprob: -2.452362060546875
    4. '(' → logprob: -2.452362060546875
    5. 'g' → logprob: -7.327362060546875
    6. 'par' → logprob: -8.077362060546875
    7. '0' → logprob: -9.077362060546875
    8. '(par' → logprob: -9.202362060546875
    9. ' gap' → logprob: -11.077362060546875
    10. '((' → logprob: -11.202362060546875

Token 2019: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0005567280459217727
    2. ' <<' → logprob: -7.500556945800781
    3. ' <<=' → logprob: -12.875556945800781
    4. '<<<' → logprob: -13.875556945800781
    5. '<' → logprob: -15.875556945800781
    6. '=' → logprob: -17.50055694580078
    7. '&' → logprob: -17.75055694580078
    8. '&lt' → logprob: -17.87555694580078
    9. '<=' → logprob: -18.25055694580078
    10. '<<(' → logprob: -18.37555694580078

Token 2020: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.2729995988775045e-06
    2. ' i' → logprob: -12.000006675720215
    3. '	i' → logprob: -17.8750057220459
    4. ')i' → logprob: -20.0000057220459
    5. '{i' → logprob: -20.5000057220459
    6. '[i' → logprob: -20.5000057220459
    7. '$i' → logprob: -20.6250057220459
    8. '_i' → logprob: -21.0000057220459
    9. '*i' → logprob: -21.3750057220459
    10. '   ' → logprob: -22.0000057220459

Token 2021: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02273484878242016
    2. ' if' → logprob: -4.522734642028809
    3. '
' → logprob: -5.147734642028809
    4. '<|end|>' → logprob: -5.897734642028809
    5. 'if' → logprob: -6.897734642028809
    6. '<|end|>' → logprob: -7.397734642028809
    7. '       ' → logprob: -7.522734642028809
    8. '		' → logprob: -8.522734642028809
    9. '               ' → logprob: -8.772734642028809
    10. ',' → logprob: -9.397734642028809

Token 2022: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00043817906407639384
    2. '	       ' → logprob: -8.75043773651123
    3. '		' → logprob: -9.00043773651123
    4. '               ' → logprob: -9.87543773651123
    5. '       ' → logprob: -10.87543773651123
    6. '   ' → logprob: -11.62543773651123
    7. '          ' → logprob: -11.62543773651123
    8. ' if' → logprob: -11.62543773651123
    9. '	' → logprob: -11.62543773651123
    10. '[' → logprob: -11.87543773651123

Token 2023: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3333907723426819
    2. 'if' (adapté à ' if') → logprob: -1.333390712738037
    3. ' if' → logprob: -3.958390712738037
    4. '		' → logprob: -7.958390712738037
    5. '	if' → logprob: -8.583391189575195
    6. '               ' → logprob: -9.833391189575195
    7. '	       ' → logprob: -10.083391189575195
    8. '[' → logprob: -10.208391189575195
    9. '       ' → logprob: -10.458391189575195
    10. '   ' → logprob: -10.833391189575195

Token 2024: ' gap' (ID: 19953)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.02408583089709282
    2. '(g' → logprob: -3.774085760116577
    3. 'leng' → logprob: -8.024085998535156
    4. '(l' → logprob: -8.274085998535156
    5. ' gap' → logprob: -8.649085998535156
    6. 'length' → logprob: -10.774085998535156
    7. 'g' → logprob: -11.399085998535156
    8. 'lag' → logprob: -11.649085998535156
    9. 'len' → logprob: -11.649085998535156
    10. ' (' → logprob: -11.899085998535156

Token 2025: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5989313125610352
    2. '&' → logprob: -0.8489313125610352
    3. ' &' → logprob: -4.098931312561035
    4. ' >=' → logprob: -5.098931312561035
    5. '≥' → logprob: -11.848931312561035
    6. '&amp' → logprob: -11.973931312561035
    7. '   ' → logprob: -12.098931312561035
    8. '&gt' → logprob: -12.598931312561035
    9. '&
' → logprob: -12.973931312561035
    10. '&r' → logprob: -13.473931312561035

Token 2026: ' leng' (ID: 22202)
  Prédit: 'leng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leng' → logprob: -1.0683535037969705e-05
    2. ' leng' → logprob: -11.50001049041748
    3. 'length' → logprob: -14.75001049041748
    4. 'l' → logprob: -16.625011444091797
    5. 'ling' → logprob: -17.000011444091797
    6. 'Leng' → logprob: -17.500011444091797
    7. 'larg' → logprob: -18.125011444091797
    8. '           ' → logprob: -18.500011444091797
    9. '   ' → logprob: -18.500011444091797
    10. 'lang' → logprob: -19.000011444091797

Token 2027: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03919222205877304
    2. ':' → logprob: -3.7891921997070312
    3. '               ' → logprob: -4.164192199707031
    4. ' and' → logprob: -9.164192199707031
    5. '           ' → logprob: -9.914192199707031
    6. '):
' → logprob: -10.039192199707031
    7. ' :
' → logprob: -10.789192199707031
    8. ':
' → logprob: -10.914192199707031
    9. ' gap' → logprob: -11.539192199707031
    10. 'and' → logprob: -12.039192199707031

Token 2028: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012570773833431304
    2. 'b' → logprob: -9.375125885009766
    3. '                   ' → logprob: -11.500125885009766
    4. '           ' → logprob: -11.625125885009766
    5. 'a' → logprob: -12.500125885009766
    6. ',' → logprob: -12.625125885009766
    7. 'gap' → logprob: -13.125125885009766
    8. '	           ' → logprob: -13.250125885009766
    9. ':
' → logprob: -13.500125885009766
    10. '			' → logprob: -13.500125885009766

Token 2029: ' gap' (ID: 19953)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0025868352968245745
    2. ' b' → logprob: -6.002586841583252
    3. '               ' → logprob: -9.127586364746094
    4. '   ' → logprob: -13.877586364746094
    5. '                   ' → logprob: -14.252586364746094
    6. '           ' → logprob: -14.627586364746094
    7. '	b' → logprob: -14.752586364746094
    8. 'a' → logprob: -16.752586364746094
    9. ' ' → logprob: -16.877586364746094
    10. '  ' → logprob: -19.127586364746094

Token 2030: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.00011200665176147595
    2. ' -=' → logprob: -9.25011157989502
    3. '-' → logprob: -11.75011157989502
    4. '>>' → logprob: -11.87511157989502
    5. '=' → logprob: -14.25011157989502
    6. '   ' → logprob: -16.375112533569336
    7. '+=' → logprob: -16.625112533569336
    8. '           ' → logprob: -16.875112533569336
    9. '       ' → logprob: -17.500112533569336
    10. '&' → logprob: -17.875112533569336

Token 2031: ' leng' (ID: 22202)
  Prédit: 'leng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leng' → logprob: -3.4121114822482923e-06
    2. ' leng' → logprob: -13.000003814697266
    3. 'length' → logprob: -13.875003814697266
    4. 'ling' → logprob: -16.375003814697266
    5. 'l' → logprob: -17.875003814697266
    6. 'len' → logprob: -18.375003814697266
    7. 'Leng' → logprob: -18.625003814697266
    8. '                       ' → logprob: -19.000003814697266
    9. '                           ' → logprob: -19.125003814697266
    10. '                          ' → logprob: -20.000003814697266

Token 2032: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32227084040641785
    2. '
' → logprob: -1.4472708702087402
    3. ' and' → logprob: -3.6972708702087402
    4. ',' → logprob: -4.82227087020874
    5. 'b' → logprob: -6.07227087020874
    6. 'a' → logprob: -7.07227087020874
    7. '                
' → logprob: -7.19727087020874
    8. 'and' → logprob: -7.69727087020874
    9. ';' → logprob: -7.94727087020874
    10. '#' → logprob: -8.072270393371582

Token 2033: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04842963069677353
    2. 'b' → logprob: -3.1734297275543213
    3. 'a' → logprob: -5.298429489135742
    4. '           ' → logprob: -8.298429489135742
    5. ' b' → logprob: -9.173429489135742
    6. ' a' → logprob: -10.298429489135742
    7. ',b' → logprob: -11.798429489135742
    8. '       ' → logprob: -11.923429489135742
    9. '   ' → logprob: -11.923429489135742
    10. ',' → logprob: -12.423429489135742

Token 2034: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -1.5928495486150496e-05
    2. ' b' → logprob: -11.125016212463379
    3. '   ' → logprob: -14.000016212463379
    4. '	b' → logprob: -15.625016212463379
    5. '           ' → logprob: -16.500015258789062
    6. '       ' → logprob: -16.750015258789062
    7. '               ' → logprob: -18.750015258789062
    8. '    ' → logprob: -19.875015258789062
    9. 'a' → logprob: -20.000015258789062
    10. '_b' → logprob: -20.125015258789062

Token 2035: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815006136894226
    2. ' =' → logprob: -4.0181498527526855
    3. '=
' → logprob: -16.893150329589844
    4. '=self' → logprob: -17.268150329589844
    5. '=b' → logprob: -18.018150329589844
    6. '=

' → logprob: -18.643150329589844
    7. '=sys' → logprob: -19.018150329589844
    8. ' ' → logprob: -19.018150329589844
    9. ']=' → logprob: -19.393150329589844
    10. ']' → logprob: -19.393150329589844

Token 2036: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: 0.0
    2. ' par' → logprob: -17.5
    3. 'paren' → logprob: -21.125
    4. '	par' → logprob: -21.125
    5. '(par' → logprob: -22.5
    6. 'pars' → logprob: -23.625
    7. '   ' → logprob: -24.0
    8. 'por' → logprob: -24.0
    9. 'per' → logprob: -24.375
    10. 'пар' → logprob: -24.375

Token 2037: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.004084808751940727
    2. 'b' → logprob: -5.504084587097168
    3. '[' → logprob: -12.504084587097168
    4. '```' → logprob: -13.629084587097168
    5. '][' → logprob: -14.379084587097168
    6. ')b' → logprob: -15.504084587097168
    7. ',b' → logprob: -16.004085540771484
    8. ')[' → logprob: -16.629085540771484
    9. '[][' → logprob: -16.754085540771484
    10. '(b' → logprob: -16.879085540771484

Token 2038: '][' (ID: 2696)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.026483632624149323
    2. '][' → logprob: -3.6514835357666016
    3. 'b' → logprob: -8.776483535766602
    4. '[' → logprob: -11.276483535766602
    5. ']' → logprob: -11.776483535766602
    6. '[i' → logprob: -13.151483535766602
    7. ' [' → logprob: -13.901483535766602
    8. '	b' → logprob: -14.151483535766602
    9. ' ][' → logprob: -14.151483535766602
    10. ' ' → logprob: -14.151483535766602

Token 2039: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.088346359931165e-07
    2. ' i' → logprob: -14.625000953674316
    3. 'b' → logprob: -15.875000953674316
    4. ']' → logprob: -16.5
    5. '	i' → logprob: -16.75
    6. '[i' → logprob: -17.25
    7. '<|end|>' → logprob: -17.375
    8. '][' → logprob: -17.75
    9. 'L' → logprob: -17.75
    10. '0' → logprob: -17.875

Token 2040: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00016957100888248533
    2. ']
' → logprob: -8.75016975402832
    3. '<|end|>' → logprob: -11.87516975402832
    4. ' ]' → logprob: -13.62516975402832
    5. ']()' → logprob: -14.00016975402832
    6. ')' → logprob: -15.12516975402832
    7. ']>' → logprob: -15.12516975402832
    8. ']

' → logprob: -15.37516975402832
    9. '       ' → logprob: -15.37516975402832
    10. '])' → logprob: -15.62516975402832

Token 2041: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05614094063639641
    2. '<|end|>' → logprob: -3.056140899658203
    3. '   ' → logprob: -6.306140899658203
    4. '```' → logprob: -6.681140899658203
    5. '<|end|>' → logprob: -7.181140899658203
    6. ')' → logprob: -7.556140899658203
    7. '[' → logprob: -7.556140899658203
    8. '           ' → logprob: -7.931140899658203
    9. ' return' → logprob: -8.431140899658203
    10. ',' → logprob: -8.556140899658203

Token 2042: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0003436872211750597
    2. 'for' → logprob: -8.000343322753906
    3. '       ' → logprob: -11.750343322753906
    4. ' if' → logprob: -15.750343322753906
    5. '   ' → logprob: -16.375343322753906
    6. 'while' → logprob: -16.625343322753906
    7. 'If' → logprob: -18.875343322753906
    8. '#' → logprob: -20.000343322753906
    9. 'return' → logprob: -20.000343322753906
    10. '
' → logprob: -20.500343322753906

Token 2043: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.8206473871250637e-05
    2. ' a' → logprob: -10.500028610229492
    3. '   ' → logprob: -15.000028610229492
    4. '	a' → logprob: -15.125028610229492
    5. '(a' → logprob: -17.125028610229492
    6. ' ' → logprob: -17.125028610229492
    7. 'b' → logprob: -18.250028610229492
    8. '    ' → logprob: -18.375028610229492
    9. '  ' → logprob: -18.375028610229492
    10. '
' → logprob: -18.500028610229492

Token 2044: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.201423779129982
    2. ' ==' → logprob: -1.7014237642288208
    3. '==
' → logprob: -11.951423645019531
    4. '!=' → logprob: -13.326423645019531
    5. '=' → logprob: -13.576423645019531
    6. ' !=' → logprob: -14.951423645019531
    7. '===' → logprob: -15.326423645019531
    8. ' ' → logprob: -16.32642364501953
    9. '   ' → logprob: -16.95142364501953
    10. ')==' → logprob: -17.07642364501953

Token 2045: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0280383548888494e-06
    2. ' b' → logprob: -13.875000953674316
    3. '   ' → logprob: -19.875001907348633
    4. '	b' → logprob: -21.250001907348633
    5. '
' → logprob: -22.625001907348633
    6. ' ' → logprob: -22.750001907348633
    7. '       ' → logprob: -23.000001907348633
    8. '     ' → logprob: -23.750001907348633
    9. '  ' → logprob: -24.125001907348633
    10. '    ' → logprob: -24.625001907348633

Token 2046: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9216914176940918
    2. ':
' → logprob: -0.9216914176940918
    3. '           ' → logprob: -2.171691417694092
    4. ':return' → logprob: -2.421691417694092
    5. 'return' → logprob: -7.171691417694092
    6. '       ' → logprob: -8.54669189453125
    7. ' return' → logprob: -8.79669189453125
    8. '               ' → logprob: -9.29669189453125
    9. '   ' → logprob: -9.29669189453125
    10. ' and' → logprob: -10.17169189453125

Token 2047: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.032273583114147186
    2. ':
' → logprob: -4.032273769378662
    3. ':' → logprob: -4.907273769378662
    4. ':return' → logprob: -5.282273769378662
    5. ' return' → logprob: -7.532273769378662
    6. '		' → logprob: -7.782273769378662
    7. '       ' → logprob: -8.657273292541504
    8. 'return' → logprob: -9.032273292541504
    9. '               ' → logprob: -9.657273292541504
    10. '   ' → logprob: -9.782273292541504

Token 2048: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6988415122032166
    2. 'return' (adapté à ' return') → logprob: -0.6988415122032166
    3. ' return' → logprob: -5.323841571807861
    4. '{return' → logprob: -7.573841571807861
    5. '		' → logprob: -8.823841094970703
    6. '   ' → logprob: -10.073841094970703
    7. '	return' → logprob: -10.198841094970703
    8. '       ' → logprob: -10.573841094970703
    9. ':return' → logprob: -10.823841094970703
    10. '	       ' → logprob: -11.948841094970703

Token 2049: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.2127087504486553e-05
    2. ' a' → logprob: -10.750021934509277
    3. 'b' → logprob: -14.250021934509277
    4. '	a' → logprob: -19.375022888183594
    5. '   ' → logprob: -19.750022888183594
    6. '       ' → logprob: -22.000022888183594
    7. ' b' → logprob: -22.625022888183594
    8. '           ' → logprob: -23.750022888183594
    9. '_a' → logprob: -23.875022888183594
    10. 'а' → logprob: -24.500022888183594

Token 2050: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00626008864492178
    2. 'for' → logprob: -5.756259918212891
    3. ' for' → logprob: -6.256259918212891
    4. '
' → logprob: -6.881259918212891
    5. '```' → logprob: -9.88125991821289
    6. '   ' → logprob: -10.38125991821289
    7. '[' → logprob: -11.38125991821289
    8. '        
' → logprob: -11.50625991821289
    9. '<|end|>' → logprob: -12.25625991821289
    10. '	' → logprob: -12.38125991821289

Token 2051: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3892059922218323
    2. 'for' → logprob: -1.1392059326171875
    3. ' for' → logprob: -6.8892059326171875
    4. '```' → logprob: -6.8892059326171875
    5. '
' → logprob: -8.764205932617188
    6. '   ' → logprob: -9.014205932617188
    7. '	for' → logprob: -12.264205932617188
    8. '``' → logprob: -13.014205932617188
    9. '	' → logprob: -13.139205932617188
    10. 'else' → logprob: -13.139205932617188

Token 2052: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004158176481723785
    2. ' for' → logprob: -6.004158020019531
    3. 'for' (adapté à ' for') → logprob: -7.004158020019531
    4. '	' → logprob: -7.379158020019531
    5. '   ' → logprob: -9.129158020019531
    6. '	for' → logprob: -11.004158020019531
    7. '```' → logprob: -11.254158020019531
    8. '
' → logprob: -12.004158020019531
    9. '           ' → logprob: -14.004158020019531
    10. '	   ' → logprob: -14.129158020019531

Token 2053: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00014013137842994183
    2. 'L' → logprob: -9.250140190124512
    3. ' i' → logprob: -10.250140190124512
    4. '(i' → logprob: -12.250140190124512
    5. 'range' → logprob: -13.375140190124512
    6. '(L' → logprob: -13.750140190124512
    7. 'j' → logprob: -15.125140190124512
    8. '	i' → logprob: -15.250140190124512
    9. '(' → logprob: -16.000139236450195
    10. '[i' → logprob: -16.125139236450195

Token 2054: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011743901995941997
    2. 'in' → logprob: -6.751174449920654
    3. 'range' → logprob: -13.376173973083496
    4. '
' → logprob: -14.376173973083496
    5. 'In' → logprob: -14.751173973083496
    6. 'd' → logprob: -15.626173973083496
    7. '	in' → logprob: -15.751173973083496
    8. '```' → logprob: -16.001174926757812
    9. '   ' → logprob: -16.126174926757812
    10. ' range' → logprob: -16.126174926757812

Token 2055: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.619311974034645e-05
    2. ' range' → logprob: -10.250036239624023
    3. '(range' → logprob: -14.375036239624023
    4. 're' → logprob: -16.375036239624023
    5. 'self' → logprob: -17.875036239624023
    6. '	range' → logprob: -20.250036239624023
    7. 'reverse' → logprob: -21.000036239624023
    8. '
' → logprob: -21.375036239624023
    9. '   ' → logprob: -22.625036239624023
    10. 'L' → logprob: -22.625036239624023

Token 2056: '(L' (ID: 11075)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018361814320087433
    2. '(self' → logprob: -4.018362045288086
    3. '(L' → logprob: -9.143362045288086
    4. 'L' → logprob: -9.393362045288086
    5. ' self' → logprob: -10.768362045288086
    6. '(' → logprob: -15.393362045288086
    7. '	self' → logprob: -16.018362045288086
    8. '[self' → logprob: -16.143362045288086
    9. '   ' → logprob: -17.643362045288086
    10. ' (' → logprob: -17.893362045288086

Token 2057: '_' (ID: 62)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1417820304632187
    2. '_' → logprob: -2.14178204536438
    3. 'self' → logprob: -4.516781806945801
    4. ' -' → logprob: -6.141781806945801
    5. 's' → logprob: -8.0167818069458
    6. '1' → logprob: -8.0167818069458
    7. '[' → logprob: -8.5167818069458
    8. 'L' → logprob: -8.8917818069458
    9. '(self' → logprob: -8.8917818069458
    10. '       ' → logprob: -9.3917818069458

Token 2058: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018862036988139153
    2. '-' → logprob: -4.393862247467041
    3. '_' → logprob: -5.143862247467041
    4. '0' → logprob: -8.018861770629883
    5. '6' → logprob: -9.518861770629883
    6. '4' → logprob: -10.643861770629883
    7. '7' → logprob: -10.768861770629883
    8. '5' → logprob: -11.018861770629883
    9. ' -' → logprob: -11.768861770629883
    10. '11' → logprob: -12.018861770629883

Token 2059: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001601983094587922
    2. '-' → logprob: -7.2516021728515625
    3. ' -' → logprob: -7.5016021728515625
    4. ' ,' → logprob: -8.501602172851562
    5. ',-' → logprob: -9.126602172851562
    6. '       ' → logprob: -11.126602172851562
    7. ',
' → logprob: -12.001602172851562
    8. '0' → logprob: -13.376602172851562
    9. '           ' → logprob: -13.626602172851562
    10. '1' → logprob: -14.876602172851562

Token 2060: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004306692280806601
    2. ' -' → logprob: -7.750430583953857
    3. '0' → logprob: -18.125431060791016
    4. '
' → logprob: -20.125431060791016
    5. '−' → logprob: -20.250431060791016
    6. '       ' → logprob: -20.625431060791016
    7. '1' → logprob: -20.750431060791016
    8. ' ' → logprob: -20.875431060791016
    9. '   ' → logprob: -21.125431060791016
    10. '           ' → logprob: -21.750431060791016

Token 2061: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06198112666606903
    2. '-' → logprob: -2.811981201171875
    3. ' -' → logprob: -11.311981201171875
    4. '(-' → logprob: -14.186981201171875
    5. ' ' → logprob: -15.436981201171875
    6. '   ' → logprob: -16.436981201171875
    7. '```' → logprob: -16.436981201171875
    8. '(' → logprob: -17.311981201171875
    9. '
' → logprob: -17.811981201171875
    10. '           ' → logprob: -18.186981201171875

Token 2062: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0069327587261796
    2. '-' → logprob: -5.381932735443115
    3. ',-' → logprob: -6.256932735443115
    4. ' -' → logprob: -8.006933212280273
    5. ' ,' → logprob: -10.006933212280273
    6. '       ' → logprob: -12.506933212280273
    7. ',
' → logprob: -12.506933212280273
    8. '```' → logprob: -13.256933212280273
    9. '0' → logprob: -13.506933212280273
    10. ' ,-' → logprob: -13.756933212280273

Token 2063: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015023599844425917
    2. ' -' → logprob: -6.501502513885498
    3. '0' → logprob: -17.501502990722656
    4. '       ' → logprob: -18.001502990722656
    5. '           ' → logprob: -18.876502990722656
    6. '   ' → logprob: -19.376502990722656
    7. '1' → logprob: -19.626502990722656
    8. '```' → logprob: -21.251502990722656
    9. '−' → logprob: -21.251502990722656
    10. ' ' → logprob: -21.376502990722656

Token 2064: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03627445548772812
    2. '-' → logprob: -3.5362744331359863
    3. '0' → logprob: -5.036274433135986
    4. ' -' → logprob: -12.536274909973145
    5. ' ' → logprob: -14.036274909973145
    6. '   ' → logprob: -14.911274909973145
    7. '```' → logprob: -16.536273956298828
    8. '2' → logprob: -17.661273956298828
    9. '(-' → logprob: -17.786273956298828
    10. 'i' → logprob: -18.036273956298828

Token 2065: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5016712546348572
    2. ':
' → logprob: -1.751671314239502
    3. '-' → logprob: -2.376671314239502
    4. ',' → logprob: -3.001671314239502
    5. ':' → logprob: -3.751671314239502
    6. '           ' → logprob: -3.751671314239502
    7. '       ' → logprob: -4.001671314239502
    8. '):' → logprob: -5.751671314239502
    9. ' -' → logprob: -6.001671314239502
    10. ',-' → logprob: -6.001671314239502

Token 2066: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01229112595319748
    2. '       ' → logprob: -4.512290954589844
    3. '   ' → logprob: -8.512290954589844
    4. '	       ' → logprob: -8.762290954589844
    5. '[' → logprob: -8.887290954589844
    6. '               ' → logprob: -9.012290954589844
    7. '```' → logprob: -9.012290954589844
    8. '<|end|>' → logprob: -9.012290954589844
    9. '         ' → logprob: -9.637290954589844
    10. ' ' → logprob: -9.762290954589844

Token 2067: ' na' (ID: 898)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19993169605731964
    2. ' if' → logprob: -2.3249316215515137
    3. '           ' → logprob: -2.5749316215515137
    4. '       ' → logprob: -5.449931621551514
    5. '               ' → logprob: -6.324931621551514
    6. 'a' → logprob: -7.574931621551514
    7. '   ' → logprob: -8.199932098388672
    8. '```' → logprob: -9.074932098388672
    9. '	if' → logprob: -10.074932098388672
    10. ' ' → logprob: -10.199932098388672

Token 2068: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4351823329925537
    2. ',' → logprob: -2.3101823329925537
    3. '       ' → logprob: -2.3101823329925537
    4. '=' → logprob: -2.4351823329925537
    5. '   ' → logprob: -3.4351823329925537
    6. 'v' → logprob: -4.560182571411133
    7. '           ' → logprob: -4.810182571411133
    8. 'a' → logprob: -5.685182571411133
    9. 'def' → logprob: -5.685182571411133
    10. 'f' → logprob: -6.435182571411133

Token 2069: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.00018196819291915745
    2. ' par' → logprob: -8.750182151794434
    3. 'self' → logprob: -10.750182151794434
    4. '           ' → logprob: -13.875182151794434
    5. '(par' → logprob: -14.750182151794434
    6. '   ' → logprob: -15.250182151794434
    7. '       ' → logprob: -15.875182151794434
    8. ' self' → logprob: -16.250181198120117
    9. '	par' → logprob: -16.250181198120117
    10. 'paren' → logprob: -17.375181198120117

Token 2070: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0031822288874536753
    2. 'a' → logprob: -5.753182411193848
    3. '[b' → logprob: -13.628182411193848
    4. '   ' → logprob: -13.878182411193848
    5. '(a' → logprob: -15.003182411193848
    6. '[v' → logprob: -15.128182411193848
    7. '           ' → logprob: -15.253182411193848
    8. '       ' → logprob: -15.503182411193848
    9. '```' → logprob: -15.503182411193848
    10. '[i' → logprob: -15.628182411193848

Token 2071: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14316360652446747
    2. '[i' → logprob: -2.0181636810302734
    3. 'i' → logprob: -9.518163681030273
    4. '[a' → logprob: -9.518163681030273
    5. '"][' → logprob: -10.143163681030273
    6. ''][' → logprob: -10.143163681030273
    7. ')[' → logprob: -10.143163681030273
    8. '[' → logprob: -10.268163681030273
    9. '>[' → logprob: -10.268163681030273
    10. 'a' → logprob: -10.643163681030273

Token 2072: 'i' (ID: 72)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005784923676401377
    2. 'b' → logprob: -5.25578498840332
    3. 'i' → logprob: -7.50578498840332
    4. '[a' → logprob: -14.25578498840332
    5. ' a' → logprob: -15.50578498840332
    6. 'v' → logprob: -15.88078498840332
    7. '[i' → logprob: -16.13078498840332
    8. '[b' → logprob: -17.50578498840332
    9. '	a' → logprob: -17.63078498840332
    10. '(a' → logprob: -17.75578498840332

Token 2073: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.726763129234314
    2. ']
' → logprob: -0.976763129234314
    3. ']' → logprob: -2.3517632484436035
    4. '],' → logprob: -3.3517632484436035
    5. '];' → logprob: -5.7267632484436035
    6. ']!=' → logprob: -6.2267632484436035
    7. '               ' → logprob: -6.6017632484436035
    8. '[' → logprob: -7.6017632484436035
    9. ',' → logprob: -7.9767632484436035
    10. '       ' → logprob: -8.101762771606445

Token 2074: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007923279888927937
    2. ',' → logprob: -5.007923126220703
    3. 'b' → logprob: -7.257923126220703
    4. ' ,' → logprob: -8.882923126220703
    5. ' and' → logprob: -9.257923126220703
    6. ' if' → logprob: -9.632923126220703
    7. 'and' → logprob: -10.507923126220703
    8. '       ' → logprob: -10.507923126220703
    9. '            
' → logprob: -10.507923126220703
    10. ',b' → logprob: -10.757923126220703

Token 2075: ' nb' (ID: 28791)
  Prédit: 'nb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nb' (adapté à ' nb') → logprob: -0.008885303512215614
    2. ' nb' → logprob: -4.883885383605957
    3. '   ' → logprob: -6.758885383605957
    4. '	nb' → logprob: -9.633885383605957
    5. '_nb' → logprob: -11.133885383605957
    6. 'nv' → logprob: -11.508885383605957
    7. '(nb' → logprob: -12.008885383605957
    8. '           ' → logprob: -12.008885383605957
    9. 'n' → logprob: -12.758885383605957
    10. '       ' → logprob: -13.008885383605957

Token 2076: ' =' (ID: 314)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.7133641196996905e-05
    2. 'b' → logprob: -10.75002670288086
    3. '[i' → logprob: -12.62502670288086
    4. ',b' → logprob: -13.62502670288086
    5. '[a' → logprob: -15.62502670288086
    6. ',' → logprob: -15.62502670288086
    7. '=b' → logprob: -16.12502670288086
    8. '```' → logprob: -16.25002670288086
    9. '[' → logprob: -16.50002670288086
    10. '           ' → logprob: -16.87502670288086

Token 2077: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -3.128163257315464e-07
    2. ' par' → logprob: -15.125
    3. '(par' → logprob: -20.875
    4. 'por' → logprob: -21.75
    5. '           ' → logprob: -22.0
    6. '	par' → logprob: -22.5
    7. 'pat' → logprob: -22.875
    8. 'per' → logprob: -23.375
    9. 'paren' → logprob: -23.625
    10. 'пар' → logprob: -23.75

Token 2078: '[b' (ID: 40800)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.039488036185503006
    2. '[b' → logprob: -3.2894880771636963
    3. 'par' → logprob: -6.539487838745117
    4. ' b' → logprob: -15.664487838745117
    5. ' par' → logprob: -15.914487838745117
    6. '(b' → logprob: -17.289487838745117
    7. '	b' → logprob: -17.914487838745117
    8. '```' → logprob: -18.039487838745117
    9. '\b' → logprob: -20.164487838745117
    10. '	par' → logprob: -20.164487838745117

Token 2079: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00028505371301434934
    2. '[a' → logprob: -8.875285148620605
    3. '[b' → logprob: -9.000285148620605
    4. '[' → logprob: -11.000285148620605
    5. '][' → logprob: -13.500285148620605
    6. '```' → logprob: -14.125285148620605
    7. ')[' → logprob: -14.250285148620605
    8. '[v' → logprob: -14.625285148620605
    9. 'i' → logprob: -15.500285148620605
    10. '
' → logprob: -15.625285148620605

Token 2080: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005471954355016351
    2. 'b' → logprob: -7.625547409057617
    3. '[i' → logprob: -9.750547409057617
    4. ' i' → logprob: -14.000547409057617
    5. '{i' → logprob: -17.500547409057617
    6. '	i' → logprob: -17.625547409057617
    7. '   ' → logprob: -18.000547409057617
    8. ',i' → logprob: -18.125547409057617
    9. '[b' → logprob: -18.625547409057617
    10. '```' → logprob: -18.750547409057617

Token 2081: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36177533864974976
    2. '[i' → logprob: -1.2367753982543945
    3. ' if' → logprob: -5.4867753982543945
    4. ',' → logprob: -6.1117753982543945
    5. 'i' → logprob: -6.1117753982543945
    6. '[' → logprob: -6.4867753982543945
    7. '       ' → logprob: -7.2367753982543945
    8. ')' → logprob: -7.9867753982543945
    9. ' i' → logprob: -8.236775398254395
    10. 'if' → logprob: -8.236775398254395

Token 2082: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00041017719195224345
    2. '	       ' → logprob: -8.750410079956055
    3. '		' → logprob: -9.375410079956055
    4. ' ' → logprob: -9.750410079956055
    5. '```' → logprob: -10.000410079956055
    6. '       ' → logprob: -10.625410079956055
    7. ',' → logprob: -11.750410079956055
    8. '   ' → logprob: -12.000410079956055
    9. ' if' → logprob: -12.375410079956055
    10. '[' → logprob: -12.750410079956055

Token 2083: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2836493253707886
    2. '           ' → logprob: -1.4086493253707886
    3. ' if' → logprob: -6.033649444580078
    4. 'If' → logprob: -10.408649444580078
    5. '```' → logprob: -11.033649444580078
    6. '@if' → logprob: -11.533649444580078
    7. 'while' → logprob: -11.658649444580078
    8. 'a' → logprob: -11.658649444580078
    9. '		' → logprob: -11.908649444580078
    10. '[' → logprob: -11.908649444580078

Token 2084: ' na' (ID: 898)
  Prédit: 'na'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'na' → logprob: -6.392202976712724e-06
    2. ' na' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.6250057220459
    4. '(' → logprob: -17.6250057220459
    5. 'a' → logprob: -19.1250057220459
    6. ' ' → logprob: -19.2500057220459
    7. ' ' → logprob: -19.3750057220459
    8. 'no' → logprob: -19.7500057220459
    9. 'n' → logprob: -19.8750057220459
    10. '
' → logprob: -20.5000057220459

Token 2085: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.12695109844207764
    2. ' !=' → logprob: -2.126951217651367
    3. '```' → logprob: -11.876951217651367
    4. '()!=' → logprob: -12.376951217651367
    5. ')!=' → logprob: -12.626951217651367
    6. '!=-' → logprob: -12.751951217651367
    7. ']!=' → logprob: -13.251951217651367
    8. ' is' → logprob: -13.876951217651367
    9. '!==' → logprob: -13.876951217651367
    10. '!=(' → logprob: -14.751951217651367

Token 2086: ' nb' (ID: 28791)
  Prédit: 'nb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nb' → logprob: -1.0921942703134846e-05
    2. ' nb' → logprob: -11.50001049041748
    3. '	nb' → logprob: -14.37501049041748
    4. '   ' → logprob: -16.250011444091797
    5. '(nb' → logprob: -17.000011444091797
    6. '
' → logprob: -17.125011444091797
    7. 'nbsp' → logprob: -17.500011444091797
    8. '  ' → logprob: -18.375011444091797
    9. 'na' → logprob: -18.500011444091797
    10. '_nb' → logprob: -18.750011444091797

Token 2087: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16330435872077942
    2. 'and' → logprob: -1.913304328918457
    3. ':
' → logprob: -5.913304328918457
    4. '           ' → logprob: -8.163304328918457
    5. '               ' → logprob: -10.038304328918457
    6. ':' → logprob: -10.538304328918457
    7. '                   ' → logprob: -12.163304328918457
    8. 'a' → logprob: -13.163304328918457
    9. ',' → logprob: -13.163304328918457
    10. '	and' → logprob: -13.288304328918457

Token 2088: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02190118469297886
    2. 'a' → logprob: -4.0219011306762695
    3. '           ' → logprob: -6.2719011306762695
    4. ' a' → logprob: -6.3969011306762695
    5. '(a' → logprob: -10.14690113067627
    6. ' and' → logprob: -10.27190113067627
    7. '```' → logprob: -10.52190113067627
    8. ',a' → logprob: -10.89690113067627
    9. '                   ' → logprob: -11.02190113067627
    10. ',' → logprob: -11.52190113067627

Token 2089: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.024446755647659302
    2. '               ' → logprob: -3.774446725845337
    3. ' a' → logprob: -7.274446964263916
    4. '           ' → logprob: -8.024446487426758
    5. '                   ' → logprob: -8.649446487426758
    6. '   ' → logprob: -13.649446487426758
    7. '	a' → logprob: -14.274446487426758
    8. '             ' → logprob: -14.649446487426758
    9. '                       ' → logprob: -14.774446487426758
    10. '(a' → logprob: -14.899446487426758

Token 2090: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6230361461639404
    2. '=' → logprob: -1.2480361461639404
    3. ' =' → logprob: -1.7480361461639404
    4. ' ,' → logprob: -6.1230363845825195
    5. ',a' → logprob: -9.37303638458252
    6. ',b' → logprob: -9.49803638458252
    7. 'a' → logprob: -10.12303638458252
    8. '=a' → logprob: -10.12303638458252
    9. '=b' → logprob: -11.24803638458252
    10. ',
' → logprob: -11.24803638458252

Token 2091: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015023599844425917
    2. ' b' → logprob: -6.501502513885498
    3. '           ' → logprob: -17.876502990722656
    4. '               ' → logprob: -19.126502990722656
    5. '	b' → logprob: -19.376502990722656
    6. '   ' → logprob: -20.001502990722656
    7. '       ' → logprob: -20.251502990722656
    8. 'a' → logprob: -20.251502990722656
    9. '    ' → logprob: -20.501502990722656
    10. '                   ' → logprob: -20.751502990722656

Token 2092: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019512299913913012
    2. ' =' → logprob: -6.251951217651367
    3. ',' → logprob: -10.751951217651367
    4. '=a' → logprob: -14.001951217651367
    5. 'a' → logprob: -15.501951217651367
    6. ' ,' → logprob: -16.626951217651367
    7. ',a' → logprob: -17.001951217651367
    8. '               ' → logprob: -17.126951217651367
    9. ' a' → logprob: -18.251951217651367
    10. '           ' → logprob: -18.501951217651367

Token 2093: ' na' (ID: 898)
  Prédit: 'na'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'na' → logprob: -5.955703818472102e-05
    2. ' na' → logprob: -9.750059127807617
    3. 'par' → logprob: -14.250059127807617
    4. '(' → logprob: -15.000059127807617
    5. '   ' → logprob: -15.500059127807617
    6. ' ' → logprob: -17.750059127807617
    7. 'nb' → logprob: -17.750059127807617
    8. ' (' → logprob: -18.000059127807617
    9. ' ' → logprob: -18.625059127807617
    10. '  ' → logprob: -19.375059127807617

Token 2094: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005164555623196065
    2. ',b' → logprob: -7.625516414642334
    3. ' ,' → logprob: -10.500516891479492
    4. 'b' → logprob: -14.750516891479492
    5. ',n' → logprob: -15.125516891479492
    6. ',
' → logprob: -15.250516891479492
    7. '               ' → logprob: -17.375516891479492
    8. '```' → logprob: -17.750516891479492
    9. '[],' → logprob: -18.500516891479492
    10. '1' → logprob: -18.500516891479492

Token 2095: ' nb' (ID: 28791)
  Prédit: 'nb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nb' → logprob: -0.00020354038861114532
    2. ' nb' → logprob: -8.500203132629395
    3. '	nb' → logprob: -17.25020408630371
    4. '(nb' → logprob: -18.37520408630371
    5. ' ' → logprob: -19.12520408630371
    6. '_nb' → logprob: -19.87520408630371
    7. 'nbsp' → logprob: -20.25020408630371
    8. '  ' → logprob: -21.62520408630371
    9. 'mb' → logprob: -21.62520408630371
    10. '   ' → logprob: -21.75020408630371

Token 2096: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3812275826931
    2. '<|end|>' → logprob: -1.3812276124954224
    3. '               ' → logprob: -3.131227493286133
    4. '           ' → logprob: -4.756227493286133
    5. '       ' → logprob: -5.006227493286133
    6. '<|end|>' → logprob: -6.131227493286133
    7. '
' → logprob: -6.881227493286133
    8. ',
' → logprob: -7.131227493286133
    9. '```' → logprob: -7.381227493286133
    10. ' ,' → logprob: -8.131227493286133

Token 2097: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14668893814086914
    2. '               ' → logprob: -2.271688938140869
    3. ',' → logprob: -4.521688938140869
    4. '```' → logprob: -4.646688938140869
    5. 'return' → logprob: -5.021688938140869
    6. '           ' → logprob: -5.521688938140869
    7. '[' → logprob: -7.521688938140869
    8. ' return' → logprob: -8.271688461303711
    9. '
' → logprob: -8.396688461303711
    10. '``' → logprob: -8.521688461303711

Token 2098: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7274482846260071
    2. 'return' (adapté à ' return') → logprob: -0.7274482846260071
    3. ' return' → logprob: -3.6024482250213623
    4. 'a' → logprob: -5.102448463439941
    5. ' a' → logprob: -8.352448463439941
    6. '   ' → logprob: -9.602448463439941
    7. '        
' → logprob: -10.727448463439941
    8. '           ' → logprob: -11.477448463439941
    9. '               ' → logprob: -11.727448463439941
    10. '
' → logprob: -12.102448463439941

Token 2099: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.00033796546631492674
    2. 'self' → logprob: -8.000337600708008
    3. ' par' → logprob: -13.000337600708008
    4. '   ' → logprob: -16.500337600708008
    5. 'paren' → logprob: -16.500337600708008
    6. ' self' → logprob: -17.250337600708008
    7. '	par' → logprob: -18.250337600708008
    8. '       ' → logprob: -18.500337600708008
    9. '(par' → logprob: -18.875337600708008
    10. 'pars' → logprob: -19.125337600708008

Token 2100: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00012558852904476225
    2. 'a' → logprob: -9.000125885009766
    3. '[' → logprob: -13.625125885009766
    4. ' a' → logprob: -15.250125885009766
    5. '(a' → logprob: -15.375125885009766
    6. '```' → logprob: -15.875125885009766
    7. '[self' → logprob: -16.500125885009766
    8. '[b' → logprob: -17.000125885009766
    9. '       ' → logprob: -17.125125885009766
    10. '[u' → logprob: -17.500125885009766

Token 2101: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10574126243591309
    2. '][' → logprob: -2.480741262435913
    3. '[a' → logprob: -4.230741500854492
    4. '0' → logprob: -6.355741500854492
    5. 'a' → logprob: -8.230741500854492
    6. '1' → logprob: -11.105741500854492
    7. '[][' → logprob: -11.230741500854492
    8. '       ' → logprob: -11.355741500854492
    9. '}[' → logprob: -11.480741500854492
    10. '```' → logprob: -11.855741500854492

Token 2102: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '[' → logprob: -19.25
    4. '1' → logprob: -19.75
    5. '۰' → logprob: -19.75
    6. '   ' → logprob: -20.125
    7. '０' → logprob: -20.625
    8. '  ' → logprob: -21.375
    9. '000' → logprob: -21.625
    10. '00' → logprob: -22.625

Token 2103: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2104: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.712110698223114
    2. '<|end|>' → logprob: -0.712110698223114
    3. '   ' → logprob: -5.33711051940918
    4. '#' → logprob: -5.83711051940918
    5. '       ' → logprob: -6.46211051940918
    6. 'def' → logprob: -6.58711051940918
    7. ']' → logprob: -6.71211051940918
    8. '...' → logprob: -6.96211051940918
    9. '```' → logprob: -6.96211051940918
    10. '_' → logprob: -7.08711051940918

Token 2105: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0014067788142710924
    2. 'if' → logprob: -6.626406669616699
    3. '<|end|>' → logprob: -10.1264066696167
    4. '#' → logprob: -10.6264066696167
    5. '```' → logprob: -12.3764066696167
    6. ')' → logprob: -12.5014066696167
    7. 'class' → logprob: -12.7514066696167
    8. 'import' → logprob: -13.7514066696167
    9. ' if' → logprob: -14.3764066696167
    10. ' def' → logprob: -14.5014066696167

Token 2106: ' length' (ID: 5517)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4328482151031494
    2. 'distance' → logprob: -1.8078482151031494
    3. 'is' → logprob: -2.9328482151031494
    4. 'depth' → logprob: -3.0578482151031494
    5. 'get' → logprob: -3.4328482151031494
    6. 'parent' → logprob: -4.80784797668457
    7. 'ancestor' → logprob: -5.30784797668457
    8. '__' → logprob: -5.30784797668457
    9. 'k' → logprob: -5.68284797668457
    10. 'root' → logprob: -5.80784797668457

Token 2107: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.15046438574790955
    2. '(' → logprob: -2.0254642963409424
    3. '(
' → logprob: -5.2754645347595215
    4. ' (' → logprob: -7.1504645347595215
    5. '   ' → logprob: -7.7754645347595215
    6. '=' → logprob: -8.150464057922363
    7. 'def' → logprob: -8.275464057922363
    8. '(a' → logprob: -8.400464057922363
    9. '_' → logprob: -8.650464057922363
    10. ' =' → logprob: -9.525464057922363

Token 2108: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.8847990036010742
    2. ',' → logprob: -1.6347990036010742
    3. '   ' → logprob: -1.6347990036010742
    4. '):' → logprob: -2.384799003601074
    5. '[' → logprob: -3.384799003601074
    6. '(' → logprob: -4.384799003601074
    7. '```' → logprob: -4.384799003601074
    8. '_' → logprob: -5.134799003601074
    9. '):
' → logprob: -5.259799003601074
    10. '[self' → logprob: -5.384799003601074

Token 2109: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004181329160928726
    2. ' a' → logprob: -5.504181385040283
    3. 'u' → logprob: -10.379180908203125
    4. 'v' → logprob: -10.754180908203125
    5. ')' → logprob: -10.754180908203125
    6. 'self' → logprob: -11.004180908203125
    7. ')a' → logprob: -12.754180908203125
    8. 's' → logprob: -13.004180908203125
    9. '	a' → logprob: -13.379180908203125
    10. '   ' → logprob: -13.379180908203125

Token 2110: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006157131865620613
    2. ':' → logprob: -5.131156921386719
    3. ' ,' → logprob: -8.756156921386719
    4. '   ' → logprob: -10.256156921386719
    5. ':int' → logprob: -11.631156921386719
    6. ')' → logprob: -11.756156921386719
    7. '):
' → logprob: -12.631156921386719
    8. ' :' → logprob: -12.881156921386719
    9. '[' → logprob: -13.006156921386719
    10. '):' → logprob: -13.381156921386719

Token 2111: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008735827170312405
    2. ' int' → logprob: -4.758735656738281
    3. 'b' → logprob: -9.383735656738281
    4. ':int' → logprob: -11.133735656738281
    5. ' b' → logprob: -11.258735656738281
    6. '<int' → logprob: -13.258735656738281
    7. '=int' → logprob: -13.383735656738281
    8. '[int' → logprob: -13.383735656738281
    9. '   ' → logprob: -13.508735656738281
    10. '(int' → logprob: -13.508735656738281

Token 2112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011248346709180623
    2. ',b' → logprob: -9.250112533569336
    3. ' ,' → logprob: -11.375112533569336
    4. '   ' → logprob: -12.500112533569336
    5. ',a' → logprob: -14.500112533569336
    6. ',int' → logprob: -14.750112533569336
    7. 'b' → logprob: -15.500112533569336
    8. 'a' → logprob: -16.875112533569336
    9. ',
' → logprob: -18.000112533569336
    10. ')' → logprob: -18.875112533569336

Token 2113: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0031794982496649027
    2. ' b' → logprob: -5.753179550170898
    3. '   ' → logprob: -13.253179550170898
    4. '	b' → logprob: -17.2531795501709
    5. '  ' → logprob: -18.2531795501709
    6. ' ' → logprob: -18.3781795501709
    7. '    ' → logprob: -18.7531795501709
    8. ' ' → logprob: -19.2531795501709
    9. '       ' → logprob: -19.8781795501709
    10. '           ' → logprob: -20.7531795501709

Token 2114: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056961171329021454
    2. '):
' → logprob: -3.3069610595703125
    3. ':' → logprob: -4.5569610595703125
    4. '):' → logprob: -4.9319610595703125
    5. '   ' → logprob: -7.4319610595703125
    6. ' ,' → logprob: -8.806961059570312
    7. ')' → logprob: -8.806961059570312
    8. '):
' → logprob: -10.306961059570312
    9. ' :' → logprob: -11.181961059570312
    10. '```' → logprob: -11.181961059570312

Token 2115: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0008338087354786694
    2. ' int' → logprob: -7.125833988189697
    3. 'a' → logprob: -10.625833511352539
    4. '[int' → logprob: -13.750833511352539
    5. '   ' → logprob: -13.875833511352539
    6. '<int' → logprob: -14.000833511352539
    7. ':int' → logprob: -14.125833511352539
    8. ')' → logprob: -14.750833511352539
    9. '(int' → logprob: -14.750833511352539
    10. ' ' → logprob: -15.625833511352539

Token 2116: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5241324305534363
    2. '):
' → logprob: -1.024132490158081
    3. '):' → logprob: -3.024132490158081
    4. '):
' → logprob: -8.64913272857666
    5. ')
' → logprob: -11.52413272857666
    6. '):

' → logprob: -11.77413272857666
    7. '   ' → logprob: -11.77413272857666
    8. ' )' → logprob: -11.89913272857666
    9. ',' → logprob: -12.14913272857666
    10. ':' → logprob: -13.27413272857666

Token 2117: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7113199234008789
    2. '   ' → logprob: -1.461319923400879
    3. ':
' → logprob: -2.461319923400879
    4. '       ' → logprob: -2.711319923400879
    5. '(' → logprob: -3.211319923400879
    6. ':return' → logprob: -3.461319923400879
    7. 'def' → logprob: -4.211319923400879
    8. '):
' → logprob: -5.211319923400879
    9. ' def' → logprob: -5.336319923400879
    10. '[' → logprob: -5.336319923400879

Token 2118: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.7385154428193346e-05
    2. ' int' → logprob: -10.87503719329834
    3. 'self' → logprob: -11.12503719329834
    4. '   ' → logprob: -13.25003719329834
    5. '(int' → logprob: -13.50003719329834
    6. 'return' → logprob: -16.125038146972656
    7. '	int' → logprob: -16.125038146972656
    8. 'def' → logprob: -16.250038146972656
    9. '       ' → logprob: -16.875038146972656
    10. '[int' → logprob: -16.875038146972656

Token 2119: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9834883809089661
    2. ':' → logprob: -1.1084883213043213
    3. '       ' → logprob: -1.2334883213043213
    4. '   ' → logprob: -5.7334885597229
    5. '):
' → logprob: -7.9834885597229
    6. ':return' → logprob: -8.233488082885742
    7. '[' → logprob: -8.858488082885742
    8. '=' → logprob: -9.233488082885742
    9. ':
' → logprob: -9.483488082885742
    10. '	' → logprob: -9.858488082885742

Token 2120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016077011823654175
    2. 'return' → logprob: -6.501607894897461
    3. '   ' → logprob: -9.376607894897461
    4. ' return' → logprob: -11.376607894897461
    5. '	' → logprob: -11.751607894897461
    6. '```' → logprob: -14.501607894897461
    7. '	return' → logprob: -15.251607894897461
    8. ' ' → logprob: -15.751607894897461
    9. '    ' → logprob: -15.751607894897461
    10. '   ' → logprob: -15.876607894897461

Token 2121: ' c' (ID: 274)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.576360285282135
    2. '       ' → logprob: -0.826360285282135
    3. ' return' → logprob: -7.82636022567749
    4. '   ' → logprob: -10.951360702514648
    5. '```' → logprob: -13.076360702514648
    6. '	return' → logprob: -13.951360702514648
    7. '	' → logprob: -15.576360702514648
    8. 'self' → logprob: -15.576360702514648
    9. 'dist' → logprob: -15.576360702514648
    10. '           ' → logprob: -15.701360702514648

Token 2122: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12016665190458298
    2. ' =' → logprob: -2.245166540145874
    3. 'ost' → logprob: -5.245166778564453
    4. '   ' → logprob: -6.995166778564453
    5. 'def' → logprob: -7.620166778564453
    6. '       ' → logprob: -7.995166778564453
    7. ' ' → logprob: -9.495166778564453
    8. '=self' → logprob: -9.995166778564453
    9. '  ' → logprob: -10.620166778564453
    10. 'return' → logprob: -11.245166778564453

Token 2123: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.176947600673884e-05
    2. ' self' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.125021934509277
    4. '(self' → logprob: -18.37502098083496
    5. '       ' → logprob: -18.87502098083496
    6. '	self' → logprob: -19.00002098083496
    7. 'a' → logprob: -19.87502098083496
    8. ' ' → logprob: -20.12502098083496
    9. ' ' → logprob: -21.00002098083496
    10. '=self' → logprob: -21.50002098083496

Token 2124: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -2.4868770196917467e-05
    2. 'l' → logprob: -10.750024795532227
    3. 'par' → logprob: -13.125024795532227
    4. 'a' → logprob: -14.625024795532227
    5. '.par' → logprob: -15.000024795532227
    6. 'ost' → logprob: -16.125024795532227
    7. '.length' → logprob: -16.250024795532227
    8. '.' → logprob: -16.875024795532227
    9. '	l' → logprob: -17.375024795532227
    10. ' .' → logprob: -17.375024795532227

Token 2125: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -1.6166903151315637e-05
    2. '   ' → logprob: -11.625016212463379
    3. 'a' → logprob: -12.125016212463379
    4. '```' → logprob: -15.125016212463379
    5. 'c' → logprob: -15.250016212463379
    6. '
' → logprob: -15.500016212463379
    7. ' ' → logprob: -16.000015258789062
    8. '  ' → logprob: -16.125015258789062
    9. 'cal' → logprob: -16.250015258789062
    10. '[' → logprob: -16.375015258789062

Token 2126: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.5577775128767826e-06
    2. 'a' → logprob: -12.125005722045898
    3. '(' → logprob: -17.8750057220459
    4. '   ' → logprob: -18.2500057220459
    5. '[a' → logprob: -18.3750057220459
    6. '=a' → logprob: -18.6250057220459
    7. ' =' → logprob: -18.8750057220459
    8. ' (' → logprob: -19.1250057220459
    9. '       ' → logprob: -19.3750057220459
    10. 'def' → logprob: -19.5000057220459

Token 2127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040099851321429014
    2. ',b' → logprob: -8.25040054321289
    3. ' ,' → logprob: -9.00040054321289
    4. 'b' → logprob: -11.87540054321289
    5. ',a' → logprob: -12.62540054321289
    6. ')' → logprob: -13.12540054321289
    7. '   ' → logprob: -13.62540054321289
    8. '       ' → logprob: -13.75040054321289
    9. 'a' → logprob: -14.50040054321289
    10. ' b' → logprob: -15.00040054321289

Token 2128: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004307884373702109
    2. ' b' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.375431060791016
    4. '       ' → logprob: -17.125431060791016
    5. '    ' → logprob: -19.125431060791016
    6. ' ' → logprob: -19.375431060791016
    7. '	b' → logprob: -19.375431060791016
    8. 'a' → logprob: -19.500431060791016
    9. '  ' → logprob: -19.625431060791016
    10. '           ' → logprob: -19.875431060791016

Token 2129: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02396700158715248
    2. ')' → logprob: -3.7739670276641846
    3. '       ' → logprob: -7.2739667892456055
    4. ')
' → logprob: -10.773966789245605
    5. ')return' → logprob: -12.898966789245605
    6. '   ' → logprob: -13.273966789245605
    7. ' )
' → logprob: -13.523966789245605
    8. ')

' → logprob: -14.898966789245605
    9. '
' → logprob: -15.648966789245605
    10. 'return' → logprob: -15.773966789245605

Token 2130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.062188394367694855
    2. 'return' → logprob: -2.8121883869171143
    3. ' return' → logprob: -9.187188148498535
    4. '   ' → logprob: -9.312188148498535
    5. '```' → logprob: -10.937188148498535
    6. '
' → logprob: -12.062188148498535
    7. '	return' → logprob: -13.312188148498535
    8. '           ' → logprob: -13.312188148498535
    9. '``' → logprob: -14.687188148498535
    10. '	' → logprob: -15.687188148498535

Token 2131: ' dep' (ID: 2834)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -9.805981972021982e-05
    2. '       ' → logprob: -9.25009822845459
    3. 'dist' → logprob: -14.37509822845459
    4. '   ' → logprob: -14.37509822845459
    5. ' return' → logprob: -14.50009822845459
    6. 'ret' → logprob: -16.000097274780273
    7. 'res' → logprob: -16.125097274780273
    8. 'd' → logprob: -17.500097274780273
    9. '	return' → logprob: -17.500097274780273
    10. 'cost' → logprob: -18.125097274780273

Token 2132: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0697318315505981
    2. '_a' → logprob: -1.0697318315505981
    3. 'return' → logprob: -1.3197318315505981
    4. ' =' → logprob: -4.194731712341309
    5. '_s' → logprob: -4.944731712341309
    6. '=' → logprob: -5.069731712341309
    7. 's' → logprob: -5.694731712341309
    8. 'def' → logprob: -5.819731712341309
    9. '[a' → logprob: -5.819731712341309
    10. 'u' → logprob: -6.569731712341309

Token 2133: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000365259445970878
    2. ' self' → logprob: -8.000365257263184
    3. '(self' → logprob: -11.250365257263184
    4. '       ' → logprob: -11.750365257263184
    5. '   ' → logprob: -11.875365257263184
    6. '[self' → logprob: -13.750365257263184
    7. 'lambda' → logprob: -14.625365257263184
    8. '
' → logprob: -15.750365257263184
    9. '	self' → logprob: -16.1253662109375
    10. ' ' → logprob: -16.1253662109375

Token 2134: '.dep' (ID: 181964)
  Prédit: '.dep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dep' → logprob: -1.2233183042553719e-05
    2. '.par' → logprob: -12.250012397766113
    3. '.depth' → logprob: -12.500012397766113
    4. 'dep' → logprob: -13.750012397766113
    5. '.cost' → logprob: -14.125012397766113
    6. '.de' → logprob: -14.375012397766113
    7. '[a' → logprob: -15.375012397766113
    8. '.def' → logprob: -15.500012397766113
    9. '[c' → logprob: -16.125011444091797
    10. '(dep' → logprob: -16.250011444091797

Token 2135: '
' (ID: 198)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -4.1318875446449965e-05
    2. 'a' → logprob: -10.250041007995605
    3. '[c' → logprob: -12.375041007995605
    4. '[b' → logprob: -13.500041007995605
    5. '(a' → logprob: -15.625041007995605
    6. '   ' → logprob: -16.500041961669922
    7. '       ' → logprob: -17.875041961669922
    8. '```' → logprob: -18.000041961669922
    9. '[' → logprob: -18.375041961669922
    10. ',a' → logprob: -18.750041961669922

Token 2136: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4319862723350525
    2. '       ' → logprob: -1.0569863319396973
    3. ' return' → logprob: -5.806986331939697
    4. '   ' → logprob: -9.181985855102539
    5. '```' → logprob: -9.306985855102539
    6. '
' → logprob: -10.556985855102539
    7. '           ' → logprob: -11.806985855102539
    8. '[' → logprob: -12.056985855102539
    9. '	return' → logprob: -12.181985855102539
    10. '[a' → logprob: -12.306985855102539

Token 2137: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00012535012501757592
    2. '       ' → logprob: -9.00012493133545
    3. 'dist' → logprob: -14.50012493133545
    4. '   ' → logprob: -14.62512493133545
    5. 'res' → logprob: -15.00012493133545
    6. ' return' → logprob: -15.37512493133545
    7. 'ret' → logprob: -16.125125885009766
    8. '
' → logprob: -16.750125885009766
    9. 'length' → logprob: -16.750125885009766
    10. '```' → logprob: -17.500125885009766

Token 2138: ' dep' (ID: 2834)
  Prédit: 'dep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dep' → logprob: -0.0789388120174408
    2. '(dep' → logprob: -2.5789387226104736
    3. ' dep' → logprob: -10.203938484191895
    4. 'self' → logprob: -11.578938484191895
    5. '(de' → logprob: -14.328938484191895
    6. '   ' → logprob: -14.328938484191895
    7. ' (' → logprob: -14.703938484191895
    8. '(self' → logprob: -14.828938484191895
    9. '(depth' → logprob: -15.703938484191895
    10. '(' → logprob: -16.07893943786621

Token 2139: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -7.896309739408025e-07
    2. 'a' → logprob: -14.125000953674316
    3. '[c' → logprob: -19.0
    4. '[b' → logprob: -20.25
    5. '(a' → logprob: -21.0
    6. '[' → logprob: -21.875
    7. '#a' → logprob: -22.375
    8. '	a' → logprob: -22.5
    9. '[A' → logprob: -22.625
    10. '
' → logprob: -22.75

Token 2140: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132694363594055
    2. ' +' → logprob: -1.3132693767547607
    3. '+self' → logprob: -13.06326961517334
    4. '   ' → logprob: -13.68826961517334
    5. '-' → logprob: -14.18826961517334
    6. ')' → logprob: -14.43826961517334
    7. ')+' → logprob: -14.56326961517334
    8. ' ' → logprob: -14.68826961517334
    9. '+b' → logprob: -14.68826961517334
    10. '[' → logprob: -14.68826961517334

Token 2141: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12693199515342712
    2. ' +' → logprob: -2.12693190574646
    3. '+self' → logprob: -13.126932144165039
    4. '+c' → logprob: -14.751932144165039
    5. '+b' → logprob: -14.876932144165039
    6. '+
' → logprob: -15.001932144165039
    7. ' ' → logprob: -15.501932144165039
    8. ' plus' → logprob: -15.626932144165039
    9. '   ' → logprob: -15.751932144165039
    10. '＋' → logprob: -16.12693214416504

Token 2142: ' dep' (ID: 2834)
  Prédit: 'dep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dep' → logprob: -2.463036435074173e-05
    2. ' dep' → logprob: -10.625024795532227
    3. 'self' → logprob: -16.125024795532227
    4. '   ' → logprob: -16.375024795532227
    5. '(dep' → logprob: -17.250024795532227
    6. '       ' → logprob: -18.500024795532227
    7. 'def' → logprob: -19.250024795532227
    8. '  ' → logprob: -19.625024795532227
    9. '           ' → logprob: -20.000024795532227
    10. 'dev' → logprob: -20.000024795532227

Token 2143: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.935296834039036e-06
    2. 'b' → logprob: -12.75000286102295
    3. '	b' → logprob: -18.250003814697266
    4. '[c' → logprob: -18.375003814697266
    5. '[' → logprob: -21.000003814697266
    6. '[
' → logprob: -21.250003814697266
    7. '(b' → logprob: -21.375003814697266
    8. '[a' → logprob: -21.375003814697266
    9. '```' → logprob: -21.875003814697266
    10. '   ' → logprob: -21.875003814697266

Token 2144: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03366183862090111
    2. '-' → logprob: -3.4086618423461914
    3. '       ' → logprob: -12.033661842346191
    4. ' ' → logprob: -12.408661842346191
    5. '   ' → logprob: -12.658661842346191
    6. ' –' → logprob: -14.158661842346191
    7. ')' → logprob: -15.158661842346191
    8. '[' → logprob: -15.408661842346191
    9. '  ' → logprob: -15.408661842346191
    10. '           ' → logprob: -15.408661842346191

Token 2145: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4740894138813019
    2. ' -' → logprob: -0.9740893840789795
    3. '   ' → logprob: -11.849089622497559
    4. ' ' → logprob: -12.599089622497559
    5. '       ' → logprob: -14.599089622497559
    6. '[' → logprob: -15.224089622497559
    7. '```' → logprob: -15.474089622497559
    8. '−' → logprob: -15.724089622497559
    9. '  ' → logprob: -16.099088668823242
    10. '-c' → logprob: -16.224088668823242

Token 2146: ' dep' (ID: 2834)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2603901015827432e-05
    2. ' ' → logprob: -10.875022888183594
    3. '(' → logprob: -12.750022888183594
    4. '   ' → logprob: -14.500022888183594
    5. 'dep' → logprob: -16.500022888183594
    6. '  ' → logprob: -17.375022888183594
    7. '           ' → logprob: -17.500022888183594
    8. '２' → logprob: -18.250022888183594
    9. '       ' → logprob: -18.250022888183594
    10. '     ' → logprob: -18.500022888183594

Token 2147: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.4974866644479334e-05
    2. 'c' → logprob: -11.500015258789062
    3. '[' → logprob: -12.375015258789062
    4. '2' → logprob: -15.125015258789062
    5. '(c' → logprob: -16.125015258789062
    6. 'dep' → logprob: -16.625015258789062
    7. '	c' → logprob: -17.250015258789062
    8. '_c' → logprob: -17.250015258789062
    9. 'def' → logprob: -18.000015258789062
    10. ' ' → logprob: -18.125015258789062

Token 2148: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5280655026435852
    2. '*' → logprob: -1.1530654430389404
    3. ' *' → logprob: -2.4030654430389404
    4. ']' → logprob: -6.0280656814575195
    5. '[c' → logprob: -8.02806568145752
    6. '   ' → logprob: -8.65306568145752
    7. ' [' → logprob: -8.90306568145752
    8. ' ' → logprob: -9.02806568145752
    9. '<<' → logprob: -9.52806568145752
    10. '2' → logprob: -9.65306568145752

Token 2149: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.015670644119381905
    2. ' *' → logprob: -4.5156707763671875
    3. '[' → logprob: -5.5156707763671875
    4. ' -' → logprob: -8.390670776367188
    5. '2' → logprob: -9.140670776367188
    6. '-' → logprob: -9.890670776367188
    7. '       ' → logprob: -10.015670776367188
    8. '```' → logprob: -10.140670776367188
    9. '   ' → logprob: -10.640670776367188
    10. '[c' → logprob: -11.015670776367188

Token 2150: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.875
    4. '1' → logprob: -20.625
    5. '(' → logprob: -20.75
    6. '２' → logprob: -21.625
    7. '۲' → logprob: -22.25
    8. '  ' → logprob: -22.625
    9. 'two' → logprob: -22.875
    10. '[' → logprob: -23.375

Token 2151: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '1' → logprob: -17.5
    4. '２' → logprob: -19.125
    5. '(' → logprob: -19.625
    6. '
' → logprob: -20.0
    7. '   ' → logprob: -20.0
    8. '3' → logprob: -20.0625
    9. 'two' → logprob: -20.1875
    10. '۲' → logprob: -20.375

Token 2152: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2153: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2154: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2155: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.348753809928894
    2. 'distance' → logprob: -1.598753809928894
    3. 'cost' → logprob: -2.0987539291381836
    4. 'parent' → logprob: -2.3487539291381836
    5. 'get' → logprob: -2.5987539291381836
    6. 'ancestor' → logprob: -3.0987539291381836
    7. 'depth' → logprob: -3.0987539291381836
    8. 'query' → logprob: -3.2237539291381836
    9. 'path' → logprob: -4.223753929138184
    10. 'jump' → logprob: -4.598753929138184

Token 2156: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007503056549467146
    2. '(' → logprob: -7.250750541687012
    3. '   ' → logprob: -10.750750541687012
    4. '(
' → logprob: -12.000750541687012
    5. 'self' → logprob: -12.250750541687012
    6. ' (' → logprob: -12.375750541687012
    7. ' ' → logprob: -13.750750541687012
    8. '(s' → logprob: -14.625750541687012
    9. '(a' → logprob: -15.000750541687012
    10. ',' → logprob: -15.375750541687012

Token 2157: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004443531855940819
    2. ',' → logprob: -5.629443645477295
    3. ')' → logprob: -7.629443645477295
    4. '(a' → logprob: -8.754443168640137
    5. '   ' → logprob: -9.379443168640137
    6. 'self' → logprob: -9.879443168640137
    7. ',self' → logprob: -11.254443168640137
    8. 'def' → logprob: -11.379443168640137
    9. ')(' → logprob: -11.379443168640137
    10. '(' → logprob: -11.754443168640137

Token 2158: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0036361846141517162
    2. 'self' → logprob: -5.628636360168457
    3. ' a' → logprob: -10.378636360168457
    4. '   ' → logprob: -13.003636360168457
    5. ' self' → logprob: -13.503636360168457
    6. ')' → logprob: -13.878636360168457
    7. '	a' → logprob: -15.378636360168457
    8. 'def' → logprob: -16.62863540649414
    9. ' ' → logprob: -17.00363540649414
    10. 'A' → logprob: -17.75363540649414

Token 2159: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022094044834375381
    2. ' ,' → logprob: -8.625221252441406
    3. ',a' → logprob: -10.750221252441406
    4. '   ' → logprob: -11.625221252441406
    5. 'a' → logprob: -12.625221252441406
    6. ',b' → logprob: -13.125221252441406
    7. ',int' → logprob: -14.125221252441406
    8. '[' → logprob: -14.250221252441406
    9. '):' → logprob: -14.375221252441406
    10. '       ' → logprob: -14.500221252441406

Token 2160: ' int' (ID: 677)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005598236457444727
    2. ' b' → logprob: -7.8755598068237305
    3. 'int' → logprob: -8.62555980682373
    4. '   ' → logprob: -15.75055980682373
    5. ' int' → logprob: -16.000560760498047
    6. ':int' → logprob: -17.500560760498047
    7. '[int' → logprob: -18.250560760498047
    8. '  ' → logprob: -18.500560760498047
    9. ' ' → logprob: -18.625560760498047
    10. ',' → logprob: -18.625560760498047

Token 2161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004189946048427373
    2. ' ,' → logprob: -8.250418663024902
    3. ',b' → logprob: -8.875418663024902
    4. ',int' → logprob: -11.500418663024902
    5. ',a' → logprob: -12.250418663024902
    6. '   ' → logprob: -13.500418663024902
    7. 'b' → logprob: -14.625418663024902
    8. 'a' → logprob: -14.875418663024902
    9. ',
' → logprob: -15.625418663024902
    10. ':int' → logprob: -15.625418663024902

Token 2162: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.505351095460355e-05
    2. ' b' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.50007438659668
    4. '  ' → logprob: -19.87507438659668
    5. ' ' → logprob: -20.37507438659668
    6. 'def' → logprob: -21.12507438659668
    7. '	b' → logprob: -21.25007438659668
    8. '    ' → logprob: -21.62507438659668
    9. '       ' → logprob: -21.87507438659668
    10. 'int' → logprob: -22.12507438659668

Token 2163: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007077865884639323
    2. ':' → logprob: -8.375707626342773
    3. ' ,' → logprob: -8.500707626342773
    4. '   ' → logprob: -8.750707626342773
    5. '):' → logprob: -9.875707626342773
    6. '):
' → logprob: -10.875707626342773
    7. ')' → logprob: -11.125707626342773
    8. ',b' → logprob: -11.500707626342773
    9. '  ' → logprob: -12.625707626342773
    10. ':int' → logprob: -12.875707626342773

Token 2164: ' int' (ID: 677)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3362756073474884
    2. 'b' → logprob: -1.461275577545166
    3. 'int' → logprob: -2.961275577545166
    4. '1' → logprob: -7.086275577545166
    5. '   ' → logprob: -7.711275577545166
    6. ' b' → logprob: -7.711275577545166
    7. ')' → logprob: -9.961276054382324
    8. ' a' → logprob: -10.461276054382324
    9. ' ' → logprob: -10.586276054382324
    10. '  ' → logprob: -11.211276054382324

Token 2165: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5895617008209229
    2. ')' → logprob: -1.2145617008209229
    3. '):
' → logprob: -1.9645617008209229
    4. ',' → logprob: -5.089561462402344
    5. '):
' → logprob: -7.214561462402344
    6. '   ' → logprob: -7.339561462402344
    7. '       ' → logprob: -8.464561462402344
    8. ' ):' → logprob: -9.089561462402344
    9. ')=' → logprob: -9.214561462402344
    10. ' )' → logprob: -9.964561462402344

Token 2166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031023140996694565
    2. 'return' → logprob: -3.5310230255126953
    3. ' return' → logprob: -6.781023025512695
    4. ':return' → logprob: -10.656023025512695
    5. 'int' → logprob: -10.781023025512695
    6. '=' → logprob: -10.781023025512695
    7. '   ' → logprob: -11.531023025512695
    8. ':' → logprob: -11.656023025512695
    9. '#' → logprob: -11.656023025512695
    10. '	return' → logprob: -11.906023025512695

Token 2167: ' c' (ID: 274)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.035030342638492584
    2. '       ' → logprob: -3.7850303649902344
    3. 'self' → logprob: -4.535030364990234
    4. ' return' → logprob: -7.535030364990234
    5. 'cost' → logprob: -8.535030364990234
    6. 'c' (adapté à ' c') → logprob: -9.285030364990234
    7. 'dist' → logprob: -10.160030364990234
    8. 'd' → logprob: -10.160030364990234
    9. 'res' → logprob: -10.660030364990234
    10. '   ' → logprob: -10.785030364990234

Token 2168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42906567454338074
    2. '=' → logprob: -1.0540657043457031
    3. 'ost' → logprob: -8.304065704345703
    4. '=self' → logprob: -10.054065704345703
    5. 'return' → logprob: -11.179065704345703
    6. 'def' → logprob: -11.179065704345703
    7. '   ' → logprob: -11.304065704345703
    8. 'eturn' → logprob: -12.054065704345703
    9. '       ' → logprob: -12.804065704345703
    10. 'a' → logprob: -12.929065704345703

Token 2169: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003357006062287837
    2. ' self' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.125335693359375
    4. 'a' → logprob: -16.875335693359375
    5. '       ' → logprob: -16.875335693359375
    6. '(self' → logprob: -17.750335693359375
    7. '	self' → logprob: -18.375335693359375
    8. ' ' → logprob: -18.625335693359375
    9. '  ' → logprob: -19.500335693359375
    10. '
' → logprob: -19.750335693359375

Token 2170: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.01773381046950817
    2. 'l' → logprob: -4.142733573913574
    3. 'dist' → logprob: -6.642733573913574
    4. '.dist' → logprob: -7.892733573913574
    5. 'd' → logprob: -12.892733573913574
    6. 'a' → logprob: -13.017733573913574
    7. 'w' → logprob: -13.142733573913574
    8. 'def' → logprob: -13.642733573913574
    9. 'distance' → logprob: -13.767733573913574
    10. 'L' → logprob: -13.767733573913574

Token 2171: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -4.7994282795116305e-05
    2. 'a' → logprob: -10.37504768371582
    3. 'c' → logprob: -11.50004768371582
    4. '   ' → logprob: -12.37504768371582
    5. 'lc' → logprob: -14.25004768371582
    6. '(a' → logprob: -15.12504768371582
    7. 'oca' → logprob: -15.37504768371582
    8. '_ca' → logprob: -15.75004768371582
    9. 'cal' → logprob: -15.87504768371582
    10. 'la' → logprob: -15.87504768371582

Token 2172: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.512236498361744e-07
    2. 'a' → logprob: -14.500000953674316
    3. 'def' → logprob: -18.5
    4. ' (' → logprob: -18.625
    5. 'return' → logprob: -18.75
    6. '(self' → logprob: -19.0
    7. '   ' → logprob: -19.0
    8. '       ' → logprob: -19.25
    9. '(
' → logprob: -20.375
    10. '(' → logprob: -20.5

Token 2173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000827017764095217
    2. '(a' → logprob: -7.625826835632324
    3. 'a' → logprob: -8.625826835632324
    4. ',a' → logprob: -9.375826835632324
    5. ' ,' → logprob: -11.000826835632324
    6. ',b' → logprob: -11.125826835632324
    7. '       ' → logprob: -11.250826835632324
    8. ')' → logprob: -11.625826835632324
    9. 'b' → logprob: -11.625826835632324
    10. '   ' → logprob: -12.500826835632324

Token 2174: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3896115720272064
    2. 'a' → logprob: -1.1396116018295288
    3. ' b' → logprob: -6.014611721038818
    4. ' a' → logprob: -8.13961124420166
    5. '   ' → logprob: -13.76461124420166
    6. '       ' → logprob: -15.01461124420166
    7. 'c' → logprob: -15.38961124420166
    8. ')' → logprob: -15.88961124420166
    9. ' ' → logprob: -16.014612197875977
    10. '(a' → logprob: -16.139612197875977

Token 2175: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.011643990874290466
    2. ')' → logprob: -4.636643886566162
    3. '       ' → logprob: -6.636643886566162
    4. 'return' → logprob: -8.13664436340332
    5. ')
' → logprob: -8.38664436340332
    6. ')return' → logprob: -10.51164436340332
    7. 'def' → logprob: -10.88664436340332
    8. '   ' → logprob: -13.26164436340332
    9. ' )
' → logprob: -13.51164436340332
    10. ')

' → logprob: -13.76164436340332

Token 2176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31341105699539185
    2. 'return' → logprob: -1.313410997390747
    3. ' return' → logprob: -9.188410758972168
    4. '```' → logprob: -10.813410758972168
    5. '   ' → logprob: -11.688410758972168
    6. 'ret' → logprob: -12.063410758972168
    7. 'dist' → logprob: -12.688410758972168
    8. 'd' → logprob: -13.313410758972168
    9. '	return' → logprob: -13.938410758972168
    10. ')' → logprob: -13.938410758972168

Token 2177: ' costs' (ID: 8959)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0006478638388216496
    2. '       ' → logprob: -7.500648021697998
    3. 'cs' → logprob: -10.50064754486084
    4. 'self' → logprob: -10.75064754486084
    5. 'ret' → logprob: -11.62564754486084
    6. 'cost' → logprob: -11.87564754486084
    7. 'dist' → logprob: -12.00064754486084
    8. ' return' → logprob: -12.12564754486084
    9. 'dep' → logprob: -12.12564754486084
    10. 'd' → logprob: -12.50064754486084

Token 2178: ' =' (ID: 314)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4894050657749176
    2. 'a' → logprob: -1.7394050359725952
    3. ' =' → logprob: -2.3644051551818848
    4. '=' → logprob: -2.6144051551818848
    5. '_a' → logprob: -3.9894051551818848
    6. '[a' → logprob: -4.614405155181885
    7. 'def' → logprob: -4.864405155181885
    8. '=a' → logprob: -5.864405155181885
    9. ' return' → logprob: -6.239405155181885
    10. '_' → logprob: -6.989405155181885

Token 2179: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00035095500061288476
    2. ' self' → logprob: -8.000350952148438
    3. '[self' → logprob: -11.250350952148438
    4. '   ' → logprob: -13.500350952148438
    5. '(self' → logprob: -14.500350952148438
    6. '       ' → logprob: -14.625350952148438
    7. '[' → logprob: -16.250350952148438
    8. '	self' → logprob: -17.000350952148438
    9. ' ' → logprob: -18.250350952148438
    10. ' [' → logprob: -18.750350952148438

Token 2180: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.10025443881750107
    2. 'cost' → logprob: -2.350254535675049
    3. 'self' → logprob: -10.85025405883789
    4. '(cost' → logprob: -11.22525405883789
    5. '   ' → logprob: -12.47525405883789
    6. ' cost' → logprob: -12.72525405883789
    7. ' costs' → logprob: -12.72525405883789
    8. '       ' → logprob: -14.22525405883789
    9. '```' → logprob: -14.35025405883789
    10. '成本' → logprob: -14.60025405883789

Token 2181: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -8.180258191714529e-06
    2. '[s' → logprob: -13.000008583068848
    3. 'ts' → logprob: -13.125008583068848
    4. ' s' → logprob: -13.875008583068848
    5. 'c' → logprob: -14.500008583068848
    6. 'self' → logprob: -14.625008583068848
    7. 'sts' → logprob: -15.375008583068848
    8. 't' → logprob: -15.500008583068848
    9. '[c' → logprob: -15.500008583068848
    10. 'cs' → logprob: -15.875008583068848

Token 2182: '
' (ID: 198)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0005164555623196065
    2. 'return' → logprob: -8.000516891479492
    3. 'a' → logprob: -8.750516891479492
    4. '[b' → logprob: -11.375516891479492
    5. '       ' → logprob: -11.750516891479492
    6. '[c' → logprob: -13.625516891479492
    7. '[' → logprob: -13.750516891479492
    8. '   ' → logprob: -14.500516891479492
    9. ' return' → logprob: -15.000516891479492
    10. 'def' → logprob: -16.875516891479492

Token 2183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3869359493255615
    2. 'return' → logprob: -1.1369359493255615
    3. ' return' → logprob: -9.76193618774414
    4. '   ' → logprob: -11.88693618774414
    5. '	return' → logprob: -15.63693618774414
    6. '```' → logprob: -16.13693618774414
    7. 'def' → logprob: -16.26193618774414
    8. '{return' → logprob: -16.76193618774414
    9. '
' → logprob: -16.88693618774414
    10. '           ' → logprob: -17.38693618774414

Token 2184: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00015050210640765727
    2. '       ' → logprob: -9.500150680541992
    3. ' return' → logprob: -9.500150680541992
    4. '   ' → logprob: -14.375150680541992
    5. '	return' → logprob: -16.375150680541992
    6. '```' → logprob: -16.625150680541992
    7. '
' → logprob: -17.500150680541992
    8. 'ret' → logprob: -18.250150680541992
    9. ':return' → logprob: -18.500150680541992
    10. '{return' → logprob: -19.250150680541992

Token 2185: ' costs' (ID: 8959)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00020401719666551799
    2. ' costs' → logprob: -8.750204086303711
    3. '(cost' → logprob: -10.000204086303711
    4. ' cost' → logprob: -15.875204086303711
    5. '   ' → logprob: -16.75020408630371
    6. 'self' → logprob: -19.87520408630371
    7. '(' → logprob: -20.12520408630371
    8. '(c' → logprob: -20.25020408630371
    9. ' ' → logprob: -20.37520408630371
    10. '       ' → logprob: -21.00020408630371

Token 2186: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -3.292907877039397e-06
    2. 'a' → logprob: -13.00000286102295
    3. '[b' → logprob: -13.87500286102295
    4. '[c' → logprob: -17.750003814697266
    5. '(a' → logprob: -18.750003814697266
    6. '```' → logprob: -19.625003814697266
    7. '#a' → logprob: -19.875003814697266
    8. '	a' → logprob: -20.125003814697266
    9. '[
' → logprob: -20.875003814697266
    10. '<a' → logprob: -21.000003814697266

Token 2187: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6453552842140198
    2. ']' → logprob: -1.270355224609375
    3. ' +' → logprob: -1.770355224609375
    4. ')' → logprob: -4.895355224609375
    5. ']+' → logprob: -4.895355224609375
    6. '[b' → logprob: -4.895355224609375
    7. '[c' → logprob: -6.895355224609375
    8. '[a' → logprob: -8.270355224609375
    9. '+b' → logprob: -8.520355224609375
    10. '[' → logprob: -8.520355224609375

Token 2188: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024820810649544
    2. ' +' → logprob: -6.002481937408447
    3. '+c' → logprob: -12.252482414245605
    4. '+b' → logprob: -14.377482414245605
    5. '+
' → logprob: -14.752482414245605
    6. '-' → logprob: -15.627482414245605
    7. '+self' → logprob: -15.752482414245605
    8. '
' → logprob: -15.877482414245605
    9. '[c' → logprob: -16.75248146057129
    10. '[' → logprob: -17.12748146057129

Token 2189: ' costs' (ID: 8959)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -2.7729658540920354e-05
    2. ' costs' → logprob: -10.500027656555176
    3. ' cost' → logprob: -15.625027656555176
    4. '(cost' → logprob: -18.500028610229492
    5. '.cost' → logprob: -20.250028610229492
    6. 'self' → logprob: -20.250028610229492
    7. '
' → logprob: -21.250028610229492
    8. '_cost' → logprob: -21.750028610229492
    9. '-cost' → logprob: -21.750028610229492
    10. 'cos' → logprob: -22.125028610229492

Token 2190: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -7.553032628493384e-05
    2. 'b' → logprob: -9.500075340270996
    3. '[c' → logprob: -14.250075340270996
    4. '	b' → logprob: -19.000076293945312
    5. '[' → logprob: -19.500076293945312
    6. '[
' → logprob: -20.125076293945312
    7. ''b' → logprob: -20.250076293945312
    8. '```' → logprob: -20.250076293945312
    9. '(b' → logprob: -20.375076293945312
    10. '
' → logprob: -20.750076293945312

Token 2191: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03804757073521614
    2. '-' → logprob: -3.2880475521087646
    3. ' ' → logprob: -13.288047790527344
    4. '[' → logprob: -13.538047790527344
    5. '       ' → logprob: -13.788047790527344
    6. '           ' → logprob: -14.538047790527344
    7. ' ' → logprob: -14.663047790527344
    8. '   ' → logprob: -14.913047790527344
    9. '[c' → logprob: -15.538047790527344
    10. ' −' → logprob: -16.413047790527344

Token 2192: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12693051993846893
    2. '-' → logprob: -2.1269304752349854
    3. '       ' → logprob: -14.126930236816406
    4. ' ' → logprob: -14.376930236816406
    5. '   ' → logprob: -14.626930236816406
    6. ' ' → logprob: -14.751930236816406
    7. '-cost' → logprob: -16.001930236816406
    8. ' -
' → logprob: -16.751930236816406
    9. '```' → logprob: -16.876930236816406
    10. '  ' → logprob: -17.376930236816406

Token 2193: ' costs' (ID: 8959)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.02482941932976246
    2. '2' → logprob: -3.774829387664795
    3. ' costs' → logprob: -6.524829387664795
    4. '(cost' → logprob: -10.274829864501953
    5. ' cost' → logprob: -10.524829864501953
    6. ' ' → logprob: -10.774829864501953
    7. '   ' → logprob: -10.899829864501953
    8. '
' → logprob: -12.149829864501953
    9. '(' → logprob: -13.024829864501953
    10. '           ' → logprob: -14.149829864501953

Token 2194: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0006314247148111463
    2. 'c' → logprob: -7.375631332397461
    3. '[' → logprob: -13.000631332397461
    4. 'cost' → logprob: -13.250631332397461
    5. '
' → logprob: -15.000631332397461
    6. '```' → logprob: -15.125631332397461
    7. '2' → logprob: -15.625631332397461
    8. '[
' → logprob: -16.50063133239746
    9. '`' → logprob: -17.50063133239746
    10. ' ' → logprob: -17.75063133239746

Token 2195: ']' (ID: 60)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.008987867273390293
    2. '][' → logprob: -4.883987903594971
    3. ']' → logprob: -7.133987903594971
    4. '[' → logprob: -7.883987903594971
    5. '*' → logprob: -9.383987426757812
    6. '   ' → logprob: -10.633987426757812
    7. '```' → logprob: -10.633987426757812
    8. ']*' → logprob: -11.508987426757812
    9. '       ' → logprob: -11.758987426757812
    10. '`' → logprob: -11.758987426757812

Token 2196: ' *' (ID: 425)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.5763989090919495
    2. '[' → logprob: -0.8263989090919495
    3. '][' → logprob: -9.576398849487305
    4. ' [' → logprob: -9.576398849487305
    5. '       ' → logprob: -9.826398849487305
    6. '   ' → logprob: -10.201398849487305
    7. '```' → logprob: -10.326398849487305
    8. '*' → logprob: -10.451398849487305
    9. '#' → logprob: -10.451398849487305
    10. '
' → logprob: -10.826398849487305

Token 2197: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. 'two' → logprob: -20.0
    4. '۲' → logprob: -20.25
    5. '```' → logprob: -20.5
    6. '２' → logprob: -20.625
    7. '   ' → logprob: -20.625
    8. 'import' → logprob: -20.625
    9. 'Two' → logprob: -21.125
    10. 'def' → logprob: -21.75

Token 2198: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -19.375
    4. '２' → logprob: -19.6875
    5. 'two' → logprob: -19.75
    6. '۲' → logprob: -19.875
    7. '
' → logprob: -20.625
    8. '```' → logprob: -20.8125
    9. '२' → logprob: -20.9375
    10. '1' → logprob: -21.0625

Token 2199: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2301080822944641
    2. '<|end|>' → logprob: -1.7301080226898193
    3. 'if' → logprob: -3.9801080226898193
    4. ')' → logprob: -5.480108261108398
    5. '#' → logprob: -5.605108261108398
    6. '```' → logprob: -7.230108261108398
    7. '<|end|>' → logprob: -7.355108261108398
    8. 'return' → logprob: -8.980108261108398
    9. '...' → logprob: -9.730108261108398
    10. ' if' → logprob: -10.230108261108398

Token 2200: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011790191754698753
    2. 'if' → logprob: -4.8867902755737305
    3. '<|end|>' → logprob: -5.8867902755737305
    4. '#' → logprob: -7.1367902755737305
    5. '```' → logprob: -8.13679027557373
    6. '<|end|>' → logprob: -8.88679027557373
    7. ')' → logprob: -9.13679027557373
    8. 'import' → logprob: -11.26179027557373
    9. '...' → logprob: -11.76179027557373
    10. 'class' → logprob: -11.88679027557373

Token 2201: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0005605389014817774
    2. ' main' → logprob: -7.500560760498047
    3. 'def' → logprob: -12.000560760498047
    4. 'solve' → logprob: -14.750560760498047
    5. '_main' → logprob: -14.875560760498047
    6. 'process' → logprob: -15.125560760498047
    7. '	main' → logprob: -16.000560760498047
    8. 'run' → logprob: -16.125560760498047
    9. '__' → logprob: -16.250560760498047
    10. 'if' → logprob: -17.250560760498047

Token 2202: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.003178544342517853
    2. '():
' → logprob: -5.753178596496582
    3. '()' → logprob: -14.253178596496582
    4. '():
' → logprob: -16.003177642822266
    5. ' ():' → logprob: -16.253177642822266
    6. 'def' → logprob: -19.128177642822266
    7. '():

' → logprob: -19.253177642822266
    8. '_' → logprob: -19.378177642822266
    9. '(' → logprob: -19.628177642822266
    10. ':' → logprob: -20.003177642822266

Token 2203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003901480697095394
    2. 'input' → logprob: -6.003901481628418
    3. ' input' → logprob: -6.628901481628418
    4. 'import' → logprob: -10.503901481628418
    5. '	input' → logprob: -10.503901481628418
    6. 'N' → logprob: -10.878901481628418
    7. '   ' → logprob: -11.503901481628418
    8. '```' → logprob: -12.128901481628418
    9. '(input' → logprob: -12.503901481628418
    10. ' N' → logprob: -12.503901481628418

Token 2204: ' set' (ID: 920)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10041552782058716
    2. '   ' → logprob: -2.6004154682159424
    3. ' input' → logprob: -3.8504154682159424
    4. 'import' → logprob: -10.975415229797363
    5. '	input' → logprob: -12.475415229797363
    6. ' ' → logprob: -13.350415229797363
    7. '```' → logprob: -14.350415229797363
    8. 'N' → logprob: -14.600415229797363
    9. '_input' → logprob: -14.850415229797363
    10. '   ' → logprob: -15.225415229797363

Token 2205: '_rec' (ID: 35314)
  Prédit: '_rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -0.0008320206543430686
    2. '_' → logprob: -7.6258320808410645
    3. 'rec' → logprob: -8.000831604003906
    4. '()' → logprob: -12.000831604003906
    5. '(' → logprob: -14.625831604003906
    6. '_recursive' → logprob: -14.750831604003906
    7. '```' → logprob: -15.000831604003906
    8. '_sys' → logprob: -15.750831604003906
    9. '__' → logprob: -15.875831604003906
    10. '_re' → logprob: -15.875831604003906

Token 2206: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -9.376848902320489e-05
    2. 'urs' → logprob: -9.375093460083008
    3. 'ur' → logprob: -12.500093460083008
    4. 'ursor' → logprob: -13.500093460083008
    5. 'ursive' → logprob: -14.000093460083008
    6. '   ' → logprob: -14.000093460083008
    7. '```' → logprob: -15.000093460083008
    8. ' ' → logprob: -15.250093460083008
    9. 'rs' → logprob: -15.500093460083008
    10. '##' → logprob: -15.625093460083008

Token 2207: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.47407835721969604
    2. 'limit' → logprob: -0.974078357219696
    3. ' limit' → logprob: -13.974078178405762
    4. 'Limit' → logprob: -15.349078178405762
    5. 'lim' → logprob: -16.099079132080078
    6. '(limit' → logprob: -16.099079132080078
    7. '_LIMIT' → logprob: -17.099079132080078
    8. '_limits' → logprob: -17.849079132080078
    9. 'limits' → logprob: -18.099079132080078
    10. 'LIMIT' → logprob: -18.849079132080078

Token 2208: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0031818747520446777
    2. '()
' → logprob: -5.7531819343566895
    3. '(' → logprob: -13.128181457519531
    4. '()

' → logprob: -13.753181457519531
    5. ' ()' → logprob: -14.503181457519531
    6. '()\' → logprob: -15.753181457519531
    7. '()
' → logprob: -15.878181457519531
    8. '()`' → logprob: -15.878181457519531
    9. '())' → logprob: -16.12818145751953
    10. '();' → logprob: -17.12818145751953

Token 2209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25214478373527527
    2. 'input' → logprob: -1.5021448135375977
    3. ' input' → logprob: -8.752144813537598
    4. '	input' → logprob: -10.502144813537598
    5. 'import' → logprob: -10.752144813537598
    6. '   ' → logprob: -12.752144813537598
    7. 'N' → logprob: -13.127144813537598
    8. '```' → logprob: -13.252144813537598
    9. ' ' → logprob: -13.502144813537598
    10. ',input' → logprob: -15.877144813537598

Token 2210: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.00026419671485200524
    2. 'N' → logprob: -8.250264167785645
    3. '   ' → logprob: -13.000264167785645
    4. ' input' → logprob: -14.375264167785645
    5. 'import' → logprob: -17.00026512145996
    6. 'n' → logprob: -17.75026512145996
    7. 'inp' → logprob: -18.25026512145996
    8. '(input' → logprob: -19.25026512145996
    9. '```' → logprob: -19.62526512145996
    10. 'INPUT' → logprob: -20.00026512145996

Token 2211: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00016301481809932739
    2. '_' → logprob: -9.250163078308105
    3. '()' → logprob: -10.000163078308105
    4. 'func' → logprob: -11.000163078308105
    5. '_f' → logprob: -12.875163078308105
    6. '_=' → logprob: -14.125163078308105
    7. '_fn' → logprob: -14.875163078308105
    8. '_FUNC' → logprob: -15.500163078308105
    9. '_fun' → logprob: -15.625163078308105
    10. 'Func' → logprob: -15.625163078308105

Token 2212: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029765645042061806
    2. ' =' → logprob: -3.5297656059265137
    3. '=sys' → logprob: -11.154766082763672
    4. '=get' → logprob: -14.279766082763672
    5. '()' → logprob: -16.154766082763672
    6. '   ' → logprob: -16.404766082763672
    7. '=input' → logprob: -16.529766082763672
    8. '＝' → logprob: -17.154766082763672
    9. ' ' → logprob: -17.779766082763672
    10. '=
' → logprob: -19.029766082763672

Token 2213: ' get' (ID: 717)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00536692189052701
    2. 'get' → logprob: -5.255366802215576
    3. 'input' → logprob: -9.505367279052734
    4. ' sys' → logprob: -9.755367279052734
    5. 'IS' → logprob: -14.505367279052734
    6. ' get' → logprob: -16.130367279052734
    7. 'Sys' → logprob: -16.880367279052734
    8. '=sys' → logprob: -17.880367279052734
    9. '	sys' → logprob: -18.005367279052734
    10. '(sys' → logprob: -18.380367279052734

Token 2214: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0011839192593470216
    2. 'input' → logprob: -6.751183986663818
    3. 'sys' → logprob: -11.25118350982666
    4. 'stdin' → logprob: -15.12618350982666
    5. ' input' → logprob: -16.376184463500977
    6. 'import' → logprob: -16.876184463500977
    7. '=sys' → logprob: -16.876184463500977
    8. '=input' → logprob: -17.251184463500977
    9. '__' → logprob: -17.376184463500977
    10. 's' → logprob: -17.501184463500977

Token 2215: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33633968234062195
    2. '()' → logprob: -1.3363397121429443
    3. '()
' → logprob: -3.8363397121429443
    4. '
' → logprob: -6.836339473724365
    5. '    
' → logprob: -9.086339950561523
    6. '())' → logprob: -11.336339950561523
    7. 'def' → logprob: -11.711339950561523
    8. ')' → logprob: -12.336339950561523
    9. '```' → logprob: -12.336339950561523
    10. '  
' → logprob: -12.586339950561523

Token 2216: '   ' (ID: 271)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.12694227695465088
    2. '   ' → logprob: -2.1269421577453613
    3. 'n' → logprob: -11.75194263458252
    4. '```' → logprob: -12.87694263458252
    5. '	N' → logprob: -13.50194263458252
    6. ' N' → logprob: -13.50194263458252
    7. '_N' → logprob: -14.00194263458252
    8. '   ' → logprob: -16.001941680908203
    9. '``' → logprob: -17.376941680908203
    10. '
' → logprob: -17.501941680908203

Token 2217: ' INF' (ID: 69196)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.263011578586884e-05
    2. '   ' → logprob: -10.500042915344238
    3. 'n' → logprob: -11.250042915344238
    4. ' N' → logprob: -14.125042915344238
    5. '```' → logprob: -14.500042915344238
    6. '
' → logprob: -15.500042915344238
    7. '    
' → logprob: -15.625042915344238
    8. '	N' → logprob: -16.375041961669922
    9. 'def' → logprob: -16.500041961669922
    10. '_N' → logprob: -16.625041961669922

Token 2218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0072728293016552925
    2. '=' → logprob: -5.132272720336914
    3. ' =' → logprob: -6.632272720336914
    4. ' ,' → logprob: -10.757272720336914
    5. '   ' → logprob: -13.257272720336914
    6. ',
' → logprob: -13.757272720336914
    7. ',N' → logprob: -14.507272720336914
    8. ')' → logprob: -15.132272720336914
    9. '<|end|>' → logprob: -15.632272720336914
    10. ',Q' → logprob: -15.882272720336914

Token 2219: ' L' (ID: 451)
  Prédit: 'LIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIN' → logprob: -0.0009754245402291417
    2. ' L' → logprob: -7.000975608825684
    3. ' LIN' → logprob: -9.875975608825684
    4. 'LI' → logprob: -11.875975608825684
    5. 'L' → logprob: -12.250975608825684
    6. 'LN' → logprob: -15.000975608825684
    7. '   ' → logprob: -15.875975608825684
    8. 'LINE' → logprob: -16.000974655151367
    9. 'LIC' → logprob: -16.625974655151367
    10. 'LING' → logprob: -17.000974655151367

Token 2220: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -4.596781946020201e-05
    2. 'IN' → logprob: -10.000045776367188
    3. ' INF' → logprob: -15.250045776367188
    4. 'inf' → logprob: -16.125045776367188
    5. 'INFO' → logprob: -17.250045776367188
    6. '   ' → logprob: -17.375045776367188
    7. '
' → logprob: -17.500045776367188
    8. '_INF' → logprob: -17.500045776367188
    9. 'IM' → logprob: -17.875045776367188
    10. '```' → logprob: -18.000045776367188

Token 2221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.65707261255011e-06
    2. '=' → logprob: -12.125008583068848
    3. ' ,' → logprob: -12.875008583068848
    4. ' =' → logprob: -14.625008583068848
    5. '   ' → logprob: -16.000009536743164
    6. ',
' → logprob: -17.000009536743164
    7. ',M' → logprob: -18.125009536743164
    8. ',N' → logprob: -18.875009536743164
    9. '_,' → logprob: -19.500009536743164
    10. ',...' → logprob: -19.625009536743164

Token 2222: ' NIL' (ID: 148345)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.988221684878226e-06
    2. 'MOD' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.750006675720215
    4. 'LIN' → logprob: -16.37500762939453
    5. ' NIL' → logprob: -16.50000762939453
    6. '
' → logprob: -16.62500762939453
    7. ' N' → logprob: -16.87500762939453
    8. ' ' → logprob: -16.87500762939453
    9. '_,' → logprob: -18.50000762939453
    10. '#' → logprob: -19.12500762939453

Token 2223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011534435179783031
    2. '=' → logprob: -9.125115394592285
    3. ' =' → logprob: -12.625115394592285
    4. ' ,' → logprob: -12.750115394592285
    5. ',
' → logprob: -16.75011444091797
    6. ',M' → logprob: -17.12511444091797
    7. '_,' → logprob: -17.50011444091797
    8. 'MOD' → logprob: -18.50011444091797
    9. ',,' → logprob: -19.37511444091797
    10. '```' → logprob: -19.75011444091797

Token 2224: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.961759259458631e-06
    2. ' MOD' → logprob: -12.250004768371582
    3. '10' → logprob: -16.6250057220459
    4. '   ' → logprob: -18.7500057220459
    5. '_MOD' → logprob: -20.0000057220459
    6. ' ' → logprob: -20.6250057220459
    7. 'mod' → logprob: -20.7500057220459
    8. 'MO' → logprob: -21.1250057220459
    9. '.MOD' → logprob: -21.7500057220459
    10. '
' → logprob: -22.8750057220459

Token 2225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.157039049663581e-05
    2. '=' → logprob: -10.625051498413086
    3. ' =' → logprob: -11.125051498413086
    4. ',M' → logprob: -11.625051498413086
    5. ' ,' → logprob: -12.750051498413086
    6. ',N' → logprob: -15.500051498413086
    7. '   ' → logprob: -15.625051498413086
    8. 'MG' → logprob: -16.625051498413086
    9. ',
' → logprob: -17.500051498413086
    10. ',m' → logprob: -17.875051498413086

Token 2226: ' M' (ID: 391)
  Prédit: 'MG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MG' → logprob: -0.0001601539261173457
    2. ' M' → logprob: -8.750160217285156
    3. 'M' → logprob: -14.875160217285156
    4. ' MG' → logprob: -14.875160217285156
    5. '   ' → logprob: -15.000160217285156
    6. 'MC' → logprob: -15.250160217285156
    7. '_M' → logprob: -16.000160217285156
    8. '
' → logprob: -17.125160217285156
    9. 'MAG' → logprob: -17.125160217285156
    10. '(M' → logprob: -17.250160217285156

Token 2227: 'GN' (ID: 62482)
  Prédit: 'GN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GN' → logprob: -3.128163257315464e-07
    2. 'G' → logprob: -16.25
    3. ' GN' → logprob: -16.25
    4. 'gn' → logprob: -18.625
    5. 'AGN' → logprob: -19.125
    6. 'MG' → logprob: -19.125
    7. '=' → logprob: -20.0
    8. '   ' → logprob: -20.125
    9. 'N' → logprob: -20.25
    10. 'MN' → logprob: -20.375

Token 2228: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021184384822845
    2. ' =' → logprob: -2.3502118587493896
    3. '   ' → logprob: -12.350212097167969
    4. '	' → logprob: -14.850212097167969
    5. ',' → logprob: -15.600212097167969
    6. ' ' → logprob: -15.975212097167969
    7. '＝' → logprob: -15.975212097167969
    8. '    ' → logprob: -16.72521209716797
    9. '=
' → logprob: -17.10021209716797
    10. '  ' → logprob: -18.85021209716797

Token 2229: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0015023599844425917
    2. ' get' → logprob: -6.501502513885498
    3. '   ' → logprob: -18.001502990722656
    4. '	get' → logprob: -19.001502990722656
    5. '(get' → logprob: -19.001502990722656
    6. '=get' → logprob: -19.376502990722656
    7. '10' → logprob: -19.876502990722656
    8. '[get' → logprob: -20.876502990722656
    9. ' ' → logprob: -21.751502990722656
    10. '  ' → logprob: -22.376502990722656

Token 2230: '_constants' (ID: 141103)
  Prédit: '_constants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_constants' → logprob: -0.0002764710516203195
    2. 'constants' → logprob: -9.000276565551758
    3. '_input' → logprob: -9.250276565551758
    4. '_consts' → logprob: -10.750276565551758
    5. 'const' → logprob: -11.250276565551758
    6. 'input' → logprob: -11.625276565551758
    7. '_const' → logprob: -12.500276565551758
    8. 'Constants' → logprob: -12.875276565551758
    9. '_constant' → logprob: -13.000276565551758
    10. '
' → logprob: -14.250276565551758

Token 2231: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37092602252960205
    2. '
' → logprob: -1.245926022529602
    3. '    
' → logprob: -3.9959259033203125
    4. 'N' → logprob: -5.9959259033203125
    5. '  
' → logprob: -7.7459259033203125
    6. '	
' → logprob: -8.370925903320312
    7. '	N' → logprob: -8.870925903320312
    8. '
' → logprob: -9.620925903320312
    9. '(N' → logprob: -9.620925903320312
    10. '   
' → logprob: -9.620925903320312

Token 2232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4741072654724121
    2. 'N' → logprob: -0.9741072654724121
    3. 'n' → logprob: -11.09910774230957
    4. ' N' → logprob: -12.09910774230957
    5. '	N' → logprob: -12.22410774230957
    6. '    
' → logprob: -12.97410774230957
    7. '
' → logprob: -13.97410774230957
    8. '```' → logprob: -14.34910774230957
    9. '   ' → logprob: -15.22410774230957
    10. '_N' → logprob: -15.22410774230957

Token 2233: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -3.7697225252486533e-06
    2. '   ' → logprob: -13.125003814697266
    3. 'n' → logprob: -13.750003814697266
    4. '
' → logprob: -15.500003814697266
    5. ' N' → logprob: -15.500003814697266
    6. '    
' → logprob: -16.500003814697266
    7. '#' → logprob: -16.750003814697266
    8. '_N' → logprob: -17.000003814697266
    9. '	N' → logprob: -17.125003814697266
    10. '```' → logprob: -17.750003814697266

Token 2234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011722482740879059
    2. ',Q' → logprob: -6.751172065734863
    3. 'Q' → logprob: -13.501172065734863
    4. ' ,' → logprob: -14.626172065734863
    5. ',
' → logprob: -16.25117301940918
    6. '=' → logprob: -17.25117301940918
    7. ' Q' → logprob: -18.50117301940918
    8. ' =' → logprob: -19.00117301940918
    9. ',q' → logprob: -19.12617301940918
    10. ',\
' → logprob: -20.00117301940918

Token 2235: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.00015860427811276168
    2. ' Q' → logprob: -8.750158309936523
    3. '=' → logprob: -16.375158309936523
    4. ' =' → logprob: -18.500158309936523
    5. ',Q' → logprob: -18.500158309936523
    6. '*' → logprob: -19.125158309936523
    7. '	Q' → logprob: -19.125158309936523
    8. ' ' → logprob: -19.750158309936523
    9. 'M' → logprob: -20.000158309936523
    10. 'K' → logprob: -20.125158309936523

Token 2236: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012746725231409073
    2. ' =' → logprob: -4.387746810913086
    3. ',' → logprob: -8.387746810913086
    4. '=N' → logprob: -12.512746810913086
    5. '=input' → logprob: -12.887746810913086
    6. '   ' → logprob: -13.637746810913086
    7. '    ' → logprob: -14.262746810913086
    8. ',N' → logprob: -15.262746810913086
    9. ')' → logprob: -15.387746810913086
    10. '=
' → logprob: -16.012746810913086

Token 2237: ' I' (ID: 357)
  Prédit: 'ILI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ILI' → logprob: -0.23101089894771576
    2. 'IL' → logprob: -1.606010913848877
    3. 'map' → logprob: -5.856010913848877
    4. ' I' → logprob: -6.731010913848877
    5. '	IL' → logprob: -7.606010913848877
    6. ' map' → logprob: -7.856010913848877
    7. 'ILLI' → logprob: -8.481010437011719
    8. 'I' → logprob: -9.231010437011719
    9. 'II' → logprob: -9.606010437011719
    10. 'ILO' → logprob: -9.606010437011719

Token 2238: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.06680165976285934
    2. '(input' → logprob: -2.9418015480041504
    3. 'L' → logprob: -4.56680154800415
    4. 'I' → logprob: -6.81680154800415
    5. '(' → logprob: -8.941802024841309
    6. ' LI' → logprob: -10.441802024841309
    7. 'input' → logprob: -10.566802024841309
    8. '(n' → logprob: -10.816802024841309
    9. 'IL' → logprob: -10.941802024841309
    10. 'LS' → logprob: -11.191802024841309

Token 2239: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -7.896309739408025e-07
    2. 'input' → logprob: -14.375000953674316
    3. ' (' → logprob: -16.375
    4. '()' → logprob: -17.0
    5. '=input' → logprob: -17.125
    6. '(' → logprob: -17.125
    7. '()(' → logprob: -18.625
    8. ',input' → logprob: -19.0
    9. '[input' → logprob: -20.0
    10. '```' → logprob: -20.75

Token 2240: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -3.1424973713001236e-05
    2. 'func' → logprob: -10.375031471252441
    3. ')' → logprob: -17.625030517578125
    4. '()' → logprob: -17.625030517578125
    5. 'Func' → logprob: -17.750030517578125
    6. '(func' → logprob: -18.250030517578125
    7. '_function' → logprob: -18.250030517578125
    8. '())' → logprob: -18.500030517578125
    9. '_FUNC' → logprob: -18.500030517578125
    10. '_fun' → logprob: -18.500030517578125

Token 2241: ')
' (ID: 446)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.030991824343800545
    2. ')' → logprob: -3.530991792678833
    3. '())
' → logprob: -7.280992031097412
    4. '()' → logprob: -7.530992031097412
    5. ')
' → logprob: -12.530991554260254
    6. '();)' → logprob: -12.530991554260254
    7. '());' → logprob: -13.280991554260254
    8. '   ' → logprob: -13.530991554260254
    9. '()
' → logprob: -13.655991554260254
    10. ' ())' → logprob: -13.780991554260254

Token 2242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004555561579763889
    2. '    
' → logprob: -6.129555702209473
    3. '
' → logprob: -6.754555702209473
    4. ' es' → logprob: -7.379555702209473
    5. 'es' → logprob: -7.879555702209473
    6. '```' → logprob: -10.004555702209473
    7. 'gr' → logprob: -10.129555702209473
    8. '	gr' → logprob: -10.379555702209473
    9. ',' → logprob: -10.629555702209473
    10. '   ' → logprob: -11.129555702209473

Token 2243: ' gr' (ID: 984)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' (adapté à ' gr') → logprob: -0.011288084089756012
    2. '   ' → logprob: -4.511288166046143
    3. ' gr' → logprob: -9.011287689208984
    4. '
' → logprob: -9.261287689208984
    5. '	gr' → logprob: -11.011287689208984
    6. '```' → logprob: -13.011287689208984
    7. '(gr' → logprob: -13.261287689208984
    8. '    
' → logprob: -13.261287689208984
    9. '   ' → logprob: -15.011287689208984
    10. '_gr' → logprob: -16.261287689208984

Token 2244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2471589798224159e-05
    2. '=' → logprob: -12.125012397766113
    3. ' ,' → logprob: -12.625012397766113
    4. ' =' → logprob: -12.750012397766113
    5. ',
' → logprob: -14.375012397766113
    6. ',n' → logprob: -17.37501335144043
    7. ',e' → logprob: -17.50001335144043
    8. '‌,' → logprob: -17.50001335144043
    9. ',
' → logprob: -17.62501335144043
    10. ',N' → logprob: -17.62501335144043

Token 2245: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.07889000326395035
    2. ' es' → logprob: -2.578890085220337
    3. '	es' → logprob: -15.953889846801758
    4. ' ' → logprob: -16.828889846801758
    5. '   ' → logprob: -17.078889846801758
    6. '
' → logprob: -18.078889846801758
    7. 'e' → logprob: -18.203889846801758
    8. 'esi' → logprob: -18.578889846801758
    9. '(es' → logprob: -18.578889846801758
    10. '_es' → logprob: -18.953889846801758

Token 2246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.320199877838604e-07
    2. '=' → logprob: -15.375
    3. ' =' → logprob: -16.125
    4. ' ,' → logprob: -17.0
    5. ',
' → logprob: -18.0
    6. 'ans' → logprob: -19.0
    7. '_,' → logprob: -19.25
    8. '(ans' → logprob: -20.375
    9. '،' → logprob: -21.125
    10. 'import' → logprob: -21.125

Token 2247: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.8889261304575484e-06
    2. ' ans' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.875003814697266
    4. '	ans' → logprob: -17.875003814697266
    5. '(ans' → logprob: -19.000003814697266
    6. '
' → logprob: -20.125003814697266
    7. 'ann' → logprob: -20.375003814697266
    8. 'answer' → logprob: -21.000003814697266
    9. '```' → logprob: -21.125003814697266
    10. '  ' → logprob: -21.250003814697266

Token 2248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005850838497281075
    2. '=' → logprob: -7.500585079193115
    3. ' =' → logprob: -10.375585556030273
    4. ' ,' → logprob: -14.375585556030273
    5. ',q' → logprob: -15.125585556030273
    6. '   ' → logprob: -17.125585556030273
    7. ',Q' → logprob: -17.375585556030273
    8. ',
' → logprob: -17.500585556030273
    9. '_,' → logprob: -18.125585556030273
    10. '<|end|>' → logprob: -20.000585556030273

Token 2249: ' qs' (ID: 75083)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.0052354102954268456
    2. ' qs' → logprob: -5.255235195159912
    3. '   ' → logprob: -13.50523567199707
    4. 'Qs' → logprob: -16.38023567199707
    5. '
' → logprob: -16.75523567199707
    6. ' ' → logprob: -17.88023567199707
    7. 'q' → logprob: -18.75523567199707
    8. '
' → logprob: -19.13023567199707
    9. 'QS' → logprob: -19.25523567199707
    10. '       ' → logprob: -19.38023567199707

Token 2250: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029753733426332474
    2. ' =' → logprob: -3.5297536849975586
    3. '=create' → logprob: -12.779753684997559
    4. '=get' → logprob: -15.279753684997559
    5. ',' → logprob: -16.279754638671875
    6. '   ' → logprob: -17.029754638671875
    7. '=user' → logprob: -17.779754638671875
    8. '＝' → logprob: -19.029754638671875
    9. '=
' → logprob: -19.154754638671875
    10. '=input' → logprob: -19.654754638671875

Token 2251: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0002613358374219388
    2. ' read' → logprob: -8.250261306762695
    3. '(read' → logprob: -20.125261306762695
    4. '   ' → logprob: -20.500261306762695
    5. '	read' → logprob: -20.750261306762695
    6. ' ' → logprob: -23.625261306762695
    7. 'get' → logprob: -24.250261306762695
    8. '  ' → logprob: -24.375261306762695
    9. '_read' → logprob: -24.625261306762695
    10. '.read' → logprob: -24.875261306762695

Token 2252: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.04192294180393219
    2. 'graph' → logprob: -3.2919230461120605
    3. 'func' → logprob: -6.9169230461120605
    4. '_func' → logprob: -7.1669230461120605
    5. '(input' → logprob: -7.7919230461120605
    6. '(N' → logprob: -8.041922569274902
    7. '
' → logprob: -8.166922569274902
    8. '(graph' → logprob: -8.166922569274902
    9. 'input' → logprob: -8.416922569274902
    10. '_gr' → logprob: -8.541922569274902

Token 2253: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.5315058827400208
    2. '_func' → logprob: -1.281505823135376
    3. '(N' → logprob: -2.781505823135376
    4. '(input' → logprob: -3.281505823135376
    5. 'and' → logprob: -3.656505823135376
    6. '
' → logprob: -6.031506061553955
    7. 'func' → logprob: -6.031506061553955
    8. '_list' → logprob: -7.156506061553955
    9. '```' → logprob: -7.406506061553955
    10. ',' → logprob: -7.906506061553955

Token 2254: '_queries' (ID: 172558)
  Prédit: 'lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lists' → logprob: -0.4398511052131653
    2. 'list' → logprob: -1.1898510456085205
    3. 'func' → logprob: -3.8148510456085205
    4. 'lines' → logprob: -4.4398512840271
    5. 'input' → logprob: -4.5648512840271
    6. '_lists' → logprob: -6.1898512840271
    7. 'inputs' → logprob: -6.6898512840271
    8. '(input' → logprob: -6.8148512840271
    9. '_list' → logprob: -7.1898512840271
    10. 'read' → logprob: -7.8148512840271

Token 2255: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.004107608459889889
    2. '(Q' → logprob: -5.504107475280762
    3. '   ' → logprob: -11.004107475280762
    4. '(' → logprob: -11.879107475280762
    5. '```' → logprob: -13.129107475280762
    6. ' (' → logprob: -13.879107475280762
    7. 'Q' → logprob: -14.004107475280762
    8. '((' → logprob: -14.504107475280762
    9. '
' → logprob: -15.254107475280762
    10. '(
' → logprob: -15.754107475280762

Token 2256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.607391408877447e-05
    2. ',Q' → logprob: -10.500036239624023
    3. ' ,' → logprob: -11.875036239624023
    4. ',input' → logprob: -14.125036239624023
    5. ',
' → logprob: -14.625036239624023
    6. '   ' → logprob: -15.125036239624023
    7. ',q' → logprob: -17.375036239624023
    8. 'Q' → logprob: -18.500036239624023
    9. ')' → logprob: -18.875036239624023
    10. 'def' → logprob: -19.000036239624023

Token 2257: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -2.15310683415737e-05
    2. ' Q' → logprob: -10.750021934509277
    3. '	Q' → logprob: -20.50002098083496
    4. '   ' → logprob: -21.25002098083496
    5. ',Q' → logprob: -23.37502098083496
    6. '.Q' → logprob: -23.50002098083496
    7. 'Qs' → logprob: -23.87502098083496
    8. '```' → logprob: -24.25002098083496
    9. '<Q' → logprob: -24.37502098083496
    10. ' ' → logprob: -24.50002098083496

Token 2258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006788193713873625
    2. ',input' → logprob: -5.00678825378418
    3. '(input' → logprob: -10.00678825378418
    4. 'input' → logprob: -11.13178825378418
    5. '   ' → logprob: -12.88178825378418
    6. '
' → logprob: -13.13178825378418
    7. ' ,' → logprob: -13.38178825378418
    8. ')' → logprob: -13.50678825378418
    9. '=input' → logprob: -13.50678825378418
    10. ',
' → logprob: -13.75678825378418

Token 2259: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.1888679839321412e-05
    2. ' input' → logprob: -10.750021934509277
    3. '
' → logprob: -15.375021934509277
    4. '(input' → logprob: -16.37502098083496
    5. '	input' → logprob: -18.00002098083496
    6. '   ' → logprob: -18.00002098083496
    7. '[input' → logprob: -18.37502098083496
    8. '=input' → logprob: -18.75002098083496
    9. 'import' → logprob: -19.00002098083496
    10. ' ' → logprob: -19.37502098083496

Token 2260: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -1.318681188422488e-05
    2. 'func' → logprob: -11.25001335144043
    3. '_function' → logprob: -16.37501335144043
    4. 'Func' → logprob: -18.12501335144043
    5. '_FUNC' → logprob: -19.37501335144043
    6. '```' → logprob: -20.00001335144043
    7. ')' → logprob: -20.62501335144043
    8. '_f' → logprob: -20.75001335144043
    9. '	func' → logprob: -21.00001335144043
    10. '_fun' → logprob: -21.12501335144043

Token 2261: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01819700375199318
    2. '   ' → logprob: -4.018197059631348
    3. ')
' → logprob: -10.018197059631348
    4. '<|end|>' → logprob: -13.643197059631348
    5. ' )' → logprob: -15.143197059631348
    6. 'def' → logprob: -16.01819610595703
    7. '
' → logprob: -16.14319610595703
    8. '    
' → logprob: -16.14319610595703
    9. '#' → logprob: -16.14319610595703
    10. ')#' → logprob: -16.64319610595703

Token 2262: '   ' (ID: 271)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.008618827909231186
    2. '   ' → logprob: -4.7586188316345215
    3. ' cnt' → logprob: -12.883618354797363
    4. '	cnt' → logprob: -14.008618354797363
    5. '(cnt' → logprob: -15.008618354797363
    6. '
' → logprob: -15.133618354797363
    7. '```' → logprob: -15.508618354797363
    8. '[cnt' → logprob: -16.50861930847168
    9. ' ' → logprob: -18.38361930847168
    10. '    
' → logprob: -18.50861930847168

Token 2263: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -4.215330409351736e-05
    2. '   ' → logprob: -10.125041961669922
    3. '
' → logprob: -13.625041961669922
    4. ' cnt' → logprob: -14.250041961669922
    5. '	cnt' → logprob: -16.625041961669922
    6. '(cnt' → logprob: -16.750041961669922
    7. 'from' → logprob: -17.125041961669922
    8. '    
' → logprob: -17.125041961669922
    9. '```' → logprob: -18.000041961669922
    10. 'count' → logprob: -18.000041961669922

Token 2264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10141526162624359
    2. ' =' → logprob: -2.3514151573181152
    3. '=' → logprob: -6.726415157318115
    4. ',sum' → logprob: -12.976415634155273
    5. ' ,' → logprob: -13.351415634155273
    6. '<|end|>' → logprob: -13.476415634155273
    7. ',s' → logprob: -14.601415634155273
    8. '[' → logprob: -14.601415634155273
    9. '=[' → logprob: -14.726415634155273
    10. '```' → logprob: -14.976415634155273

Token 2265: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.000553151941858232
    2. ' sum' → logprob: -7.500553131103516
    3. '[' → logprob: -16.625553131103516
    4. '   ' → logprob: -17.500553131103516
    5. '
' → logprob: -19.500553131103516
    6. '	sum' → logprob: -20.500553131103516
    7. '    ' → logprob: -21.250553131103516
    8. ' [' → logprob: -21.750553131103516
    9. ' ' → logprob: -21.875553131103516
    10. '  ' → logprob: -22.000553131103516

Token 2266: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0022292369976639748
    2. '_=' → logprob: -6.1272292137146
    3. '_,' → logprob: -10.752229690551758
    4. '=' → logprob: -10.752229690551758
    5. '   ' → logprob: -14.877229690551758
    6. ' =' → logprob: -15.002229690551758
    7. '_[' → logprob: -15.502229690551758
    8. '_
' → logprob: -15.627229690551758
    9. '_

' → logprob: -16.627229690551758
    10. '__' → logprob: -16.877229690551758

Token 2267: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006190906744450331
    2. ' =' → logprob: -5.131190776824951
    3. ',' → logprob: -8.25619125366211
    4. '   ' → logprob: -13.13119125366211
    5. ' ' → logprob: -15.88119125366211
    6. ',N' → logprob: -15.88119125366211
    7. '(N' → logprob: -16.25619125366211
    8. '=N' → logprob: -16.25619125366211
    9. '```' → logprob: -17.00619125366211
    10. '＝' → logprob: -17.50619125366211

Token 2268: ' initialize' (ID: 18400)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6663088202476501
    2. 'initialize' → logprob: -0.7913088202476501
    3. '([' → logprob: -3.541308879852295
    4. ' [' → logprob: -5.916308879852295
    5. ' initialize' → logprob: -7.041308879852295
    6. 'get' → logprob: -7.791308879852295
    7. ' ([' → logprob: -9.916308403015137
    8. '[N' → logprob: -10.041308403015137
    9. '[get' → logprob: -10.541308403015137
    10. '   ' → logprob: -11.166308403015137

Token 2269: '_count' (ID: 7536)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2714069187641144
    2. '_count' → logprob: -1.646406888961792
    3. '_cnt' → logprob: -4.271407127380371
    4. '[N' → logprob: -4.521407127380371
    5. 'count' → logprob: -4.896407127380371
    6. '([' → logprob: -5.396407127380371
    7. '(count' → logprob: -5.896407127380371
    8. 'cnt' → logprob: -6.771407127380371
    9. '[' → logprob: -6.896407127380371
    10. '_counts' → logprob: -7.021407127380371

Token 2270: '_sum' (ID: 29859)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.28541916608810425
    2. '_' → logprob: -2.285419225692749
    3. '[N' → logprob: -3.160419225692749
    4. '_list' → logprob: -3.285419225692749
    5. '_[' → logprob: -3.785419225692749
    6. '_sum' → logprob: -4.28541898727417
    7. '_(' → logprob: -5.16041898727417
    8. '_cnt' → logprob: -5.28541898727417
    9. '_count' → logprob: -5.66041898727417
    10. 'list' → logprob: -5.91041898727417

Token 2271: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0003967071825172752
    2. '(' → logprob: -8.000396728515625
    3. '(M' → logprob: -10.375396728515625
    4. ' (' → logprob: -12.000396728515625
    5. '([' → logprob: -12.000396728515625
    6. '((' → logprob: -12.500396728515625
    7. '(len' → logprob: -12.875396728515625
    8. '   ' → logprob: -13.250396728515625
    9. '(n' → logprob: -13.500396728515625
    10. '(I' → logprob: -13.625396728515625

Token 2272: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06417568773031235
    2. '   ' → logprob: -2.939175605773926
    3. ')
' → logprob: -4.689175605773926
    4. '  ' → logprob: -11.439175605773926
    5. '
' → logprob: -11.439175605773926
    6. ')
' → logprob: -11.564175605773926
    7. ',' → logprob: -12.189175605773926
    8. ' )' → logprob: -12.689175605773926
    9. '<|end|>' → logprob: -12.689175605773926
    10. ' ' → logprob: -12.814175605773926

Token 2273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014301254414021969
    2. 'dfs' → logprob: -4.264301300048828
    3. '```' → logprob: -9.639301300048828
    4. ' dfs' → logprob: -9.764301300048828
    5. '
' → logprob: -11.764301300048828
    6. '   ' → logprob: -13.264301300048828
    7. 'df' → logprob: -13.389301300048828
    8. 'def' → logprob: -13.514301300048828
    9. '    
' → logprob: -14.264301300048828
    10. '``' → logprob: -14.389301300048828

Token 2274: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -2.868328920158092e-05
    2. '   ' → logprob: -10.625028610229492
    3. '
' → logprob: -13.250028610229492
    4. ' dfs' → logprob: -13.750028610229492
    5. 'for' → logprob: -14.125028610229492
    6. 'df' → logprob: -15.000028610229492
    7. 'def' → logprob: -15.750028610229492
    8. '
' → logprob: -16.500028610229492
    9. '    
' → logprob: -17.000028610229492
    10. 'dfa' → logprob: -17.375028610229492

Token 2275: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '```' → logprob: -19.625
    3. '２' → logprob: -20.375
    4. ' ' → logprob: -20.875
    5. '_' → logprob: -21.25
    6. '
' → logprob: -21.25
    7. 'dfs' → logprob: -21.75
    8. '(' → logprob: -22.25
    9. '₂' → logprob: -22.25
    10. '۲' → logprob: -22.375

Token 2276: '_fragment' (ID: 89817)
  Prédit: '_fragment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fragment' → logprob: -0.0003054301778320223
    2. '2' → logprob: -8.75030517578125
    3. '_frag' → logprob: -8.87530517578125
    4. '(fragment' → logprob: -12.62530517578125
    5. '_fr' → logprob: -13.12530517578125
    6. '(Fragment' → logprob: -14.12530517578125
    7. '_f' → logprob: -15.25030517578125
    8. '_d' → logprob: -15.37530517578125
    9. '_FRAGMENT' → logprob: -15.87530517578125
    10. '```' → logprob: -16.00030517578125

Token 2277: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.001407613162882626
    2. 'es' → logprob: -6.876407623291016
    3. 'ented' → logprob: -8.501407623291016
    4. 'ent' → logprob: -9.751407623291016
    5. 'mented' → logprob: -10.126407623291016
    6. '(ed' → logprob: -10.251407623291016
    7. '_ed' → logprob: -11.626407623291016
    8. 'ged' → logprob: -11.751407623291016
    9. 'eded' → logprob: -12.126407623291016
    10. 'ated' → logprob: -13.376407623291016

Token 2278: '(es' (ID: 89947)
  Prédit: '(es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(es' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.625000953674316
    3. '(ed' → logprob: -16.625
    4. '(en' → logprob: -16.75
    5. '(et' → logprob: -17.25
    6. ' (' → logprob: -17.625
    7. 'es' → logprob: -18.125
    8. '(
' → logprob: -18.375
    9. '(e' → logprob: -19.125
    10. '(s' → logprob: -19.125

Token 2279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.226628895296017e-06
    2. ' ,' → logprob: -12.375007629394531
    3. ',q' → logprob: -12.875007629394531
    4. '   ' → logprob: -15.250007629394531
    5. ',
' → logprob: -15.750007629394531
    6. '```' → logprob: -18.25000762939453
    7. '(q' → logprob: -18.75000762939453
    8. 'qs' → logprob: -20.00000762939453
    9. 'q' → logprob: -20.00000762939453
    10. '[q' → logprob: -20.50000762939453

Token 2280: ' qs' (ID: 75083)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.17975656688213348
    2. ' qs' → logprob: -1.80475652217865
    3. '   ' → logprob: -11.679756164550781
    4. '
' → logprob: -13.554756164550781
    5. 'Qs' → logprob: -14.679756164550781
    6. '
' → logprob: -15.429756164550781
    7. 'ques' → logprob: -15.554756164550781
    8. '    ' → logprob: -15.679756164550781
    9. ' ' → logprob: -15.679756164550781
    10. 'q' → logprob: -15.679756164550781

Token 2281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.873571692267433e-05
    2. ' ,' → logprob: -9.875068664550781
    3. '   ' → logprob: -11.625068664550781
    4. ',N' → logprob: -12.125068664550781
    5. ',
' → logprob: -13.125068664550781
    6. '(cnt' → logprob: -15.250068664550781
    7. ',c' → logprob: -15.750068664550781
    8. ',n' → logprob: -16.12506866455078
    9. '```' → logprob: -16.25006866455078
    10. 'cnt' → logprob: -16.25006866455078

Token 2282: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0004309076175559312
    2. ' cnt' → logprob: -7.750431060791016
    3. 'sum' → logprob: -15.875431060791016
    4. '	cnt' → logprob: -17.000431060791016
    5. '(cnt' → logprob: -18.125431060791016
    6. '[cnt' → logprob: -19.750431060791016
    7. '   ' → logprob: -19.875431060791016
    8. 'Cnt' → logprob: -20.125431060791016
    9. 'count' → logprob: -20.375431060791016
    10. '_cnt' → logprob: -20.875431060791016

Token 2283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001129602751461789
    2. ' ,' → logprob: -9.125112533569336
    3. ',sum' → logprob: -12.750112533569336
    4. ',
' → logprob: -14.000112533569336
    5. '   ' → logprob: -16.000112533569336
    6. ',s' → logprob: -16.375112533569336
    7. '```' → logprob: -18.375112533569336
    8. '_,' → logprob: -18.375112533569336
    9. '‌,' → logprob: -18.750112533569336
    10. '`,' → logprob: -19.125112533569336

Token 2284: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.02324547804892063
    2. ' sum' → logprob: -3.7732455730438232
    3. ' ans' → logprob: -17.648244857788086
    4. 'ans' → logprob: -17.898244857788086
    5. '	sum' → logprob: -18.023244857788086
    6. '_sum' → logprob: -18.773244857788086
    7. '
' → logprob: -18.773244857788086
    8. '=sum' → logprob: -19.523244857788086
    9. '.sum' → logprob: -19.648244857788086
    10. ' ' → logprob: -19.773244857788086

Token 2285: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.00013285996101330966
    2. '_' → logprob: -9.12513256072998
    3. '_,
' → logprob: -11.50013256072998
    4. '_)' → logprob: -12.00013256072998
    5. ',' → logprob: -12.25013256072998
    6. '_[' → logprob: -13.37513256072998
    7. '_),' → logprob: -14.87513256072998
    8. '_',' → logprob: -15.50013256072998
    9. '_=' → logprob: -15.75013256072998
    10. '_)
' → logprob: -16.000133514404297

Token 2286: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.1756367712223437e-05
    2. ' N' → logprob: -11.375011444091797
    3. '   ' → logprob: -15.375011444091797
    4. '
' → logprob: -18.250011444091797
    5. 'ans' → logprob: -18.500011444091797
    6. '	N' → logprob: -18.750011444091797
    7. ')' → logprob: -19.625011444091797
    8. '  ' → logprob: -19.750011444091797
    9. '0' → logprob: -20.000011444091797
    10. ' ' → logprob: -20.000011444091797

Token 2287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.24310302757658e-05
    2. '   ' → logprob: -9.750072479248047
    3. ' ,' → logprob: -12.125072479248047
    4. ',
' → logprob: -12.375072479248047
    5. ')' → logprob: -12.625072479248047
    6. ')
' → logprob: -14.375072479248047
    7. '```' → logprob: -15.000072479248047
    8. '+' → logprob: -15.875072479248047
    9. '  ' → logprob: -16.875072479248047
    10. '-' → logprob: -17.250072479248047

Token 2288: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.493430894101039e-05
    2. ' ans' → logprob: -9.500075340270996
    3. '(ans' → logprob: -18.50007438659668
    4. '	ans' → logprob: -19.50007438659668
    5. '   ' → logprob: -22.75007438659668
    6. '_ans' → logprob: -22.87507438659668
    7. 'answer' → logprob: -23.25007438659668
    8. 'ANS' → logprob: -23.87507438659668
    9. '
' → logprob: -24.12507438659668
    10. 'ann' → logprob: -24.37507438659668

Token 2289: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12055949866771698
    2. '   ' → logprob: -2.2455594539642334
    3. ')
' → logprob: -4.8705596923828125
    4. '<|end|>' → logprob: -10.745559692382812
    5. ' )' → logprob: -12.620559692382812
    6. '
' → logprob: -12.745559692382812
    7. ',' → logprob: -13.620559692382812
    8. '```' → logprob: -13.620559692382812
    9. '#' → logprob: -13.620559692382812
    10. ')#' → logprob: -13.995559692382812

Token 2290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015241486253216863
    2. 'print' → logprob: -6.501523971557617
    3. '
' → logprob: -10.876523971557617
    4. '```' → logprob: -13.501523971557617
    5. '    
' → logprob: -14.251523971557617
    6. ' print' → logprob: -14.501523971557617
    7. '	print' → logprob: -15.126523971557617
    8. '<|end|>' → logprob: -16.876523971557617
    9. '   ' → logprob: -17.126523971557617
    10. '(print' → logprob: -17.376523971557617

Token 2291: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005608965293504298
    2. '   ' → logprob: -7.500560760498047
    3. ' print' → logprob: -11.750560760498047
    4. '```' → logprob: -16.875560760498047
    5. '	print' → logprob: -19.500560760498047
    6. '
' → logprob: -20.000560760498047
    7. '  ' → logprob: -20.875560760498047
    8. '(print' → logprob: -21.375560760498047
    9. ' ' → logprob: -21.625560760498047
    10. '.print' → logprob: -22.125560760498047

Token 2292: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.0088133430108428
    2. '(*' → logprob: -4.758813381195068
    3. '(' → logprob: -9.25881290435791
    4. 'Results' → logprob: -9.88381290435791
    5. '(_' → logprob: -11.50881290435791
    6. 'results' → logprob: -11.63381290435791
    7. '('_' → logprob: -11.63381290435791
    8. '_' → logprob: -12.13381290435791
    9. '(*)' → logprob: -12.25881290435791
    10. '_RESULTS' → logprob: -13.00881290435791

Token 2293: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -17.5
    3. 'ans' → logprob: -17.625
    4. '(answer' → logprob: -17.875
    5. ' (' → logprob: -19.75
    6. '	ans' → logprob: -20.5
    7. '(ord' → logprob: -21.0
    8. '```' → logprob: -21.375
    9. '(ast' → logprob: -21.75
    10. '(
' → logprob: -21.875

Token 2294: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002358409110456705
    2. ')
' → logprob: -8.500235557556152
    3. '())' → logprob: -10.875235557556152
    4. '()' → logprob: -11.625235557556152
    5. '`)' → logprob: -14.000235557556152
    6. ' )' → logprob: -14.250235557556152
    7. '```' → logprob: -14.375235557556152
    8. '   ' → logprob: -14.625235557556152
    9. '
' → logprob: -14.875235557556152
    10. ')`' → logprob: -14.875235557556152

Token 2295: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.273621405242011e-05
    2. ' if' → logprob: -10.625032424926758
    3. '<|end|>' → logprob: -12.500032424926758
    4. '```' → logprob: -13.000032424926758
    5. '#' → logprob: -14.250032424926758
    6. '
' → logprob: -14.250032424926758
    7. 'main' → logprob: -14.875032424926758
    8. '@if' → logprob: -15.750032424926758
    9. ';if' → logprob: -16.375032424926758
    10. '__' → logprob: -16.625032424926758

Token 2296: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5759438276290894
    2. ' __' → logprob: -0.8259438276290894
    3. 'name' → logprob: -13.575943946838379
    4. '_name' → logprob: -13.950943946838379
    5. '___' → logprob: -14.450943946838379
    6. '```' → logprob: -14.575943946838379
    7. 'Name' → logprob: -15.200943946838379
    8. 'main' → logprob: -15.575943946838379
    9. ''' → logprob: -15.700943946838379
    10. '(__' → logprob: -16.075942993164062

Token 2297: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0008111746865324676
    2. ' __' → logprob: -7.8758111000061035
    3. ' ==' → logprob: -8.375811576843262
    4. '==' → logprob: -8.750811576843262
    5. 'if' → logprob: -11.750811576843262
    6. 'name' → logprob: -11.875811576843262
    7. '```' → logprob: -12.500811576843262
    8. '__.__' → logprob: -12.875811576843262
    9. '___' → logprob: -13.250811576843262
    10. '__[' → logprob: -13.375811576843262

Token 2298: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.001457139616832137
    2. '==' → logprob: -6.751457214355469
    3. '=="' → logprob: -8.626457214355469
    4. ' ==' → logprob: -9.876457214355469
    5. '__["' → logprob: -11.626457214355469
    6. '__":
' → logprob: -11.626457214355469
    7. '__.__' → logprob: -11.626457214355469
    8. '=='' → logprob: -11.751457214355469
    9. '__('' → logprob: -11.751457214355469
    10. '__("' → logprob: -12.251457214355469

Token 2299: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6768136620521545
    2. '__' → logprob: -1.3018136024475098
    3. '==' → logprob: -1.5518136024475098
    4. '=="' → logprob: -5.30181360244751
    5. '=='' → logprob: -6.67681360244751
    6. '.__' → logprob: -7.17681360244751
    7. '__.__' → logprob: -7.80181360244751
    8. '__":
' → logprob: -10.176814079284668
    9. '.' → logprob: -10.176814079284668
    10. '_' → logprob: -10.301814079284668

Token 2300: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10021087527275085
    2. ''' → logprob: -2.3502109050750732
    3. '__' → logprob: -12.600211143493652
    4. ' "__' → logprob: -15.225211143493652
    5. '"user' → logprob: -15.475211143493652
    6. '"name' → logprob: -16.600210189819336
    7. ''user' → logprob: -17.100210189819336
    8. ''name' → logprob: -17.225210189819336
    9. '"class' → logprob: -17.350210189819336
    10. ''post' → logprob: -17.350210189819336

Token 2301: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.000182921823579818
    2. 'name' → logprob: -9.25018310546875
    3. '__' → logprob: -9.37518310546875
    4. '_main' → logprob: -13.25018310546875
    5. 'if' → logprob: -16.12518310546875
    6. 'code' → logprob: -17.12518310546875
    7. ' main' → logprob: -17.37518310546875
    8. 'python' → logprob: -18.25018310546875
    9. 'm' → logprob: -18.50018310546875
    10. 'built' → logprob: -18.50018310546875

Token 2302: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.01832938939332962
    2. '__' → logprob: -4.018329620361328
    3. '__":
' → logprob: -8.768329620361328
    4. '__
' → logprob: -11.018329620361328
    5. '_' → logprob: -12.643329620361328
    6. '__.__' → logprob: -14.143329620361328
    7. '__.' → logprob: -14.143329620361328
    8. '__()
' → logprob: -14.393329620361328
    9. '```' → logprob: -15.018329620361328
    10. '':
' → logprob: -15.143329620361328

Token 2303: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -15.5
    3. '	main' → logprob: -16.625
    4. '__' → logprob: -18.75
    5. '(main' → logprob: -19.25
    6. '_main' → logprob: -19.5
    7. '   ' → logprob: -21.125
    8. '.main' → logprob: -22.625
    9. 'mainwindow' → logprob: -24.0
    10. '```' → logprob: -24.0

Token 2304: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.25
    3. '	main' → logprob: -21.75
    4. '   ' → logprob: -23.25
    5. '_main' → logprob: -24.25
    6. 'import' → logprob: -24.5
    7. '.main' → logprob: -26.875
    8. '(main' → logprob: -27.875
    9. 'Main' → logprob: -28.875
    10. '__' → logprob: -29.375

Token 2305: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2303
Tokens correctement prédits (1ère position, stricte): 870
Tokens correctement prédits (1ère position, avec adaptation): 967
Tokens correctement prédits (top 10): 1920
Précision stricte (1ère position): 37.78%
Précision adaptée (1ère position): 41.99%
Précision (top 10): 83.37%
================================================================================
