================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys  # Importe le module sys, qui fournit l'accès à certaines variables et fonctions utilisées ou maintenues par l'interpréteur Python

input = sys.stdin.readline  # Assigne à 'input' la fonction 'readline' de sys.stdin, pour lire une ligne depuis l'entrée standard (souvent plus rapide que le 'input' natif)

import numpy as np  # Importe le module numpy, aliasé en 'np', qui est une bibliothèque pour le calcul mathématique de matrices et tableaux multidimensionnels, très utilisée en science des données et pour traiter de gros volumes de données numériques

# Ce code gère un problème de programmation dynamique où on doit décider, pour chaque nombre d'une séquence, s'il faut le placer tel quel, le déplacer à gauche ou à droite, chaque opération ayant un certain coût.

# On lit une ligne d'entrée, on la découpe en trois entiers et on les affecte à N, A et B respectivement.
# N est le nombre d'éléments de la séquence, A est le coût de déplacer un nombre à droite, et B celui pour le déplacer à gauche.
N, A, B = map(int, input().split())  # 'split()' sépare la ligne en morceaux selon les espaces, 'map(int, ...)' convertit chaque morceau en un entier.

# On lit la ligne suivante de l'entrée, on la découpe en chaînes de caractères, puis on convertit chacune de ces chaînes en un entier, stockés dans la liste P.
P = [int(x) for x in input().split()]  # Crée une liste d'entiers à partir de l'entrée, qui représente la séquence à traiter

# On définit une grande valeur qui représentera l'infini pour notre algorithme (c'est une convention en programmation pour des valeurs impossibles d'atteindre dans le contexte)
INF = 10 ** 18  # 10 puissance 18 est utilisé ici comme une valeur infiniment grande pour initialiser le tableau dynamique

# On crée un tableau numpy d'entiers de taille N+1 et on l'initialise avec la valeur INF. Le tableau 'dp' est utilisé pour stocker les coûts minimaux selon différents états du problème.
# Cela représente, pour chaque nombre, le coût minimal obtenu jusqu'à présent pour une certaine situation (voir logique du problème original pour le sens exact).
dp = np.full(N + 1, INF, dtype=np.int64)  # np.full crée un tableau rempli avec la même valeur. 'dtype=np.int64' précise le type de chaque élément (entier 64 bits).

# On définit la base de la programmation dynamique : le coût pour commencer (aucune opération encore faite) est nul.
dp[0] = 0  # Zéro signifie qu'on n'a encore rien fait donc pas de coût à ce point.

# On parcourt chaque élément 'p' de la liste P, qui est la séquence des nombres à traiter.
for p in P:
    # Étape 1 : On souhaite "placer" le nombre p dans la séquence courante.
    # Pour cela, on cherche le coût minimal possible parmi toutes les positions précédentes possibles, soit jusqu'à l'indice p-1 inclus. 'dp[:p]' va de 0 jusqu'à p-1.
    # On met à jour dp[p] avec cette valeur minimale trouvée (c'est-à-dire, quel est le coût minimum d'arriver à placer jusqu'au point p sans rien faire de spécial pour p).
    dp[p] = dp[:p].min()  # dp[:p] extrait la sous-partie du tableau dp jusqu'à l'indice p (non inclus). .min() donne la plus petite valeur dans cette tranche.

    # Étape 2 : Considérer le déplacement vers la gauche. On suppose qu'on pousse tous les éléments à partir de p+1 vers la gauche, ce qui entraîne un coût pour chaque déplacement.
    # On ajoute le coût B à toutes les positions à droite de 'p' (c'est-à-dire de p+1 jusqu'à N inclus) pour tenir compte du coût de ce déplacement pour chaque possibilité future.
    dp[p + 1:] += B  # dp[p+1:] sélectionne tous les indices à partir de p+1 jusqu'à la fin du tableau, et on leur ajoute le coût B (déplacement vers la gauche).

    # Étape 3 : Considérer le déplacement vers la droite. On suppose qu'on pousse tous les éléments avant 'p' vers la droite, ce qui a aussi un coût.
    # On ajoute le coût A à toutes les positions avant 'p' (c'est-à-dire de 0 jusqu'à p-1 inclus).
    dp[:p] += A  # dp[:p] sélectionne tous les indices avant p, et ajoute A à chacune de ces cases (déplacement vers la droite).

# À la fin, on cherche le coût minimal final dans le tableau dp, car plusieurs chemins/méthodes peuvent arriver à des coûts différents selon les choix faits (déplacer à gauche/droite ou rien faire).
answer = dp.min()  # On cherche la valeur minimale dans le tableau dp, qui représente le coût minimal pour arranger la séquence selon les règles données.

print(answer)  # Affiche le résultat final, c'est-à-dire le coût minimal trouvé pour traiter la séquence entière.
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.001360947615467012
    2. '\' → logprob: -7.876360893249512
    3. '\n' → logprob: -7.876360893249512
    4. '<|end|>' → logprob: -8.626360893249512
    5. '.readline' → logprob: -9.501360893249512
    6. '[' → logprob: -9.751360893249512
    7. 'import' → logprob: -9.876360893249512
    8. 'newline' → logprob: -10.126360893249512
    9. ',' → logprob: -10.251360893249512
    10. '```' → logprob: -10.501360893249512

Token 4: ' Im' (ID: 3133)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.058482568711042404
    2. '  ' → logprob: -3.0584826469421387
    3. '<|end|>' → logprob: -5.183482646942139
    4. '<|end|>' → logprob: -7.183482646942139
    5. 'import' → logprob: -7.558482646942139
    6. '!' → logprob: -7.683482646942139
    7. '.' → logprob: -7.683482646942139
    8. '[' → logprob: -8.55848217010498
    9. ' import' → logprob: -8.55848217010498
    10. '    ' → logprob: -8.80848217010498

Token 5: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -9.996708104154095e-05
    2. 'p' → logprob: -9.250100135803223
    3. 'por' → logprob: -13.500100135803223
    4. 'ported' → logprob: -14.000100135803223
    5. 'ports' → logprob: -14.250100135803223
    6. 'porter' → logprob: -15.500100135803223
    7. 'import' → logprob: -15.875100135803223
    8. '```' → logprob: -15.875100135803223
    9. '   ' → logprob: -16.375099182128906
    10. 'порт' → logprob: -16.500099182128906

Token 6: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.011666130274534225
    2. 'rt' → logprob: -4.636666297912598
    3. ' r' → logprob: -6.511666297912598
    4. ' ' → logprob: -8.011666297912598
    5. 'space' → logprob: -11.511666297912598
    6. 't' → logprob: -11.636666297912598
    7. ' ```' → logprob: -11.761666297912598
    8. ' rt' → logprob: -11.886666297912598
    9. '  ' → logprob: -12.011666297912598
    10. '```' → logprob: -12.261666297912598

Token 7: ' module' (ID: 8827)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.622548520565033
    2. ' ' → logprob: -1.3725485801696777
    3. 'r' → logprob: -2.7475485801696777
    4. ' module' → logprob: -3.3725485801696777
    5. ' sys' → logprob: -3.6225485801696777
    6. 'space' → logprob: -4.122548580169678
    7. ' space' → logprob: -4.372548580169678
    8. ' ' → logprob: -4.372548580169678
    9. ' r' → logprob: -4.872548580169678
    10. 'module' → logprob: -5.372548580169678

Token 8: ' sys' (ID: 12228)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07382176071405411
    2. ' ' → logprob: -3.948821783065796
    3. ',' → logprob: -4.323821544647217
    4. 'import' → logprob: -4.823821544647217
    5. '\' → logprob: -5.073821544647217
    6. ' .' → logprob: -5.198821544647217
    7. '' → logprob: -5.198821544647217
    8. '\n' → logprob: -5.573821544647217
    9. '[' → logprob: -6.198821544647217
    10. 'sys' → logprob: -6.448821544647217

Token 9: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07437466084957123
    2. '\n' → logprob: -3.5743746757507324
    3. ' ' → logprob: -4.449374675750732
    4. 'import' → logprob: -4.824374675750732
    5. '
' → logprob: -5.074374675750732
    6. '' → logprob: -5.074374675750732
    7. '\' → logprob: -5.199374675750732
    8. '<|end|>' → logprob: -6.449374675750732
    9. ',' → logprob: -6.574374675750732
    10. '.import' → logprob: -7.574374675750732

Token 10: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1151413917541504
    2. ',' → logprob: -1.3651413917541504
    3. 'import' → logprob: -1.7401413917541504
    4. ' which' → logprob: -3.4901413917541504
    5. '.' → logprob: -3.6151413917541504
    6. '\n' → logprob: -3.7401413917541504
    7. 'which' → logprob: -4.11514139175415
    8. '<|end|>' → logprob: -4.24014139175415
    9. '
' → logprob: -4.36514139175415
    10. '```' → logprob: -4.61514139175415

Token 11: ' fournit' (ID: 123615)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.6025886535644531
    2. ' permet' → logprob: -1.7275886535644531
    3. '.' → logprob: -1.8525886535644531
    4. ' ' → logprob: -1.9775886535644531
    5. 'space' → logprob: -2.227588653564453
    6. ' .' → logprob: -2.602588653564453
    7. ' fournit' → logprob: -3.102588653564453
    8. ' ' → logprob: -3.852588653564453
    9. ' space' → logprob: -4.227588653564453
    10. ' contient' → logprob: -4.602588653564453

Token 12: ' l' (ID: 305)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04648223891854286
    2. ' .' → logprob: -3.4214823246002197
    3. ' ' → logprob: -5.421482086181641
    4. ',' → logprob: -6.046482086181641
    5. '```' → logprob: -6.546482086181641
    6. 'import' → logprob: -7.046482086181641
    7. '  ' → logprob: -7.546482086181641
    8. ')' → logprob: -7.921482086181641
    9. '<|end|>' → logprob: -8.17148208618164
    10. 'space' → logprob: -8.42148208618164

Token 13: ''accès' (ID: 116356)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.4456629157066345
    2. 'e' → logprob: -1.9456629753112793
    3. ''accès' → logprob: -2.5706629753112793
    4. ''espace' → logprob: -2.8206629753112793
    5. 'a' → logprob: -3.0706629753112793
    6. ''' → logprob: -3.9456629753112793
    7. ' '' → logprob: -5.695662975311279
    8. '_' → logprob: -5.945662975311279
    9. 's' → logprob: -6.070662975311279
    10. '’accès' → logprob: -6.445662975311279

Token 14: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002377319149672985
    2. ' .' → logprob: -7.002377510070801
    3. '[' → logprob: -7.502377510070801
    4. ' à' → logprob: -8.2523775100708
    5. '```' → logprob: -8.6273775100708
    6. ' ' → logprob: -9.0023775100708
    7. ',' → logprob: -9.5023775100708
    8. 'import' → logprob: -10.0023775100708
    9. ')' → logprob: -10.6273775100708
    10. ' a' → logprob: -10.8773775100708

Token 15: ' certaines' (ID: 46662)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8887960314750671
    2. ' l' → logprob: -1.513796091079712
    3. 'des' → logprob: -2.013796091079712
    4. 's' → logprob: -2.888796091079712
    5. 'la' → logprob: -3.388796091079712
    6. ' des' → logprob: -3.388796091079712
    7. 'aux' → logprob: -3.513796091079712
    8. 'Python' → logprob: -4.138795852661133
    9. '```' → logprob: -4.388795852661133
    10. ' ' → logprob: -4.513795852661133

Token 16: ' variables' (ID: 13955)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44529104232788086
    2. '.' → logprob: -1.3202910423278809
    3. '<|end|>' → logprob: -3.195291042327881
    4. ' .' → logprob: -4.195291042327881
    5. '  ' → logprob: -4.695291042327881
    6. ' espaces' → logprob: -4.945291042327881
    7. '_' → logprob: -5.445291042327881
    8. 'es' → logprob: -5.945291042327881
    9. ' )' → logprob: -6.695291042327881
    10. 'space' → logprob: -6.820291042327881

Token 17: ' et' (ID: 859)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014659482054412365
    2. ',' → logprob: -4.639659404754639
    3. 'import' → logprob: -6.264659404754639
    4. '<|end|>' → logprob: -6.764659404754639
    5. '[' → logprob: -7.264659404754639
    6. ' .' → logprob: -8.264659881591797
    7. ' ' → logprob: -8.889659881591797
    8. ')' → logprob: -9.264659881591797
    9. '```' → logprob: -9.264659881591797
    10. '<|end|>' → logprob: -9.639659881591797

Token 18: ' fonctions' (ID: 87283)
  Prédit: ' fonctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctions' → logprob: -0.10087193548679352
    2. 'fon' → logprob: -3.350872039794922
    3. 'fonction' → logprob: -3.350872039794922
    4. ' functions' → logprob: -4.975872039794922
    5. ' des' → logprob: -5.225872039794922
    6. ' fonctionnalités' → logprob: -5.725872039794922
    7. ' fonction' → logprob: -5.850872039794922
    8. ' ' → logprob: -6.725872039794922
    9. '```' → logprob: -6.725872039794922
    10. 'f' → logprob: -6.850872039794922

Token 19: ' utilisées' (ID: 130009)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 20: ' ou' (ID: 2031)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15851375460624695
    2. 'import' → logprob: -2.5335137844085693
    3. ',' → logprob: -3.5335137844085693
    4. ' ' → logprob: -4.28351354598999
    5. '<|end|>' → logprob: -4.78351354598999
    6. '\' → logprob: -5.65851354598999
    7. '\n' → logprob: -6.03351354598999
    8. '' → logprob: -6.15851354598999
    9. '```' → logprob: -6.40851354598999
    10. '
' → logprob: -7.28351354598999

Token 21: ' maint' (ID: 5425)
  Prédit: ' utilisées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisées' → logprob: -1.4232040643692017
    2. 'util' → logprob: -1.9232040643692017
    3. 'dans' → logprob: -2.548203945159912
    4. 'd' → logprob: -3.048203945159912
    5. ' liées' → logprob: -3.173203945159912
    6. ' disponibles' → logprob: -3.423203945159912
    7. 'port' → logprob: -3.548203945159912
    8. ' nécessaires' → logprob: -3.548203945159912
    9. '#' → logprob: -3.798203945159912
    10. ' par' → logprob: -4.173203945159912

Token 22: 'en' (ID: 262)
  Prédit: 'enant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enant' → logprob: -0.04946283623576164
    2. 'ient' → logprob: -3.1744627952575684
    3. 'en' → logprob: -5.924462795257568
    4. 'es' → logprob: -6.174462795257568
    5. 'iennent' → logprob: -8.174463272094727
    6. 'n' → logprob: -8.424463272094727
    7. 'ent' → logprob: -8.549463272094727
    8. 'e' → logprob: -8.549463272094727
    9. 'ien' → logprob: -9.299463272094727
    10. 'a' → logprob: -9.299463272094727

Token 23: 'ues' (ID: 1406)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.269577145576477
    2. 't' → logprob: -1.644577145576477
    3. 'ant' → logprob: -2.2695770263671875
    4. 'nant' → logprob: -2.3945770263671875
    5. 'ues' → logprob: -2.3945770263671875
    6. 'r' → logprob: -3.1445770263671875
    7. 'es' → logprob: -3.5195770263671875
    8. 'int' → logprob: -4.0195770263671875
    9. 'ç' → logprob: -4.0195770263671875
    10. 'nées' → logprob: -4.1445770263671875

Token 24: ' par' (ID: 686)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22919487953186035
    2. ',' → logprob: -2.9791948795318604
    3. 'import' → logprob: -2.9791948795318604
    4. '<|end|>' → logprob: -3.1041948795318604
    5. '```' → logprob: -3.6041948795318604
    6. '\' → logprob: -4.479194641113281
    7. '\n' → logprob: -4.854194641113281
    8. ' ' → logprob: -5.854194641113281
    9. '[' → logprob: -6.479194641113281
    10. ' .' → logprob: -6.729194641113281

Token 25: ' l' (ID: 305)
  Prédit: ' Python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Python' → logprob: -0.5003572702407837
    2. 'Python' → logprob: -1.1253572702407837
    3. ' l' → logprob: -3.250357151031494
    4. 'le' → logprob: -4.000357151031494
    5. 'l' → logprob: -4.750357151031494
    6. 'python' → logprob: -6.000357151031494
    7. ' python' → logprob: -7.625357151031494
    8. ' le' → logprob: -8.500357627868652
    9. ' P' → logprob: -9.375357627868652
    10. 'P' → logprob: -9.750357627868652

Token 26: ''inter' (ID: 55731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5495743155479431
    2. ''inter' → logprob: -0.9245743155479431
    3. ''i' → logprob: -4.174574375152588
    4. ''utilisateur' → logprob: -6.049574375152588
    5. 'i' → logprob: -6.424574375152588
    6. 'a' → logprob: -6.424574375152588
    7. 'e' → logprob: -6.924574375152588
    8. ''application' → logprob: -7.049574375152588
    9. ''in' → logprob: -7.299574375152588
    10. ''environnement' → logprob: -8.04957389831543

Token 27: 'pré' (ID: 192449)
  Prédit: 'preter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preter' → logprob: -0.6979277729988098
    2. 'pr' → logprob: -1.322927713394165
    3. 'pré' → logprob: -1.822927713394165
    4. 'p' → logprob: -2.822927713394165
    5. 'pre' → logprob: -5.572927951812744
    6. 'pret' → logprob: -5.822927951812744
    7. 'prete' → logprob: -5.822927951812744
    8. '```' → logprob: -6.447927951812744
    9. 'n' → logprob: -6.947927951812744
    10. 'face' → logprob: -7.322927951812744

Token 28: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.06289924681186676
    2. 'te' → logprob: -3.312899351119995
    3. 'ter' → logprob: -4.437899112701416
    4. 't' → logprob: -4.437899112701416
    5. '#' → logprob: -7.687899112701416
    6. 'teurs' → logprob: -9.187899589538574
    7. '```' → logprob: -9.437899589538574
    8. 'taire' → logprob: -10.062899589538574
    9. 'tre' → logprob: -10.437899589538574
    10. 'tu' → logprob: -10.812899589538574

Token 29: ' Python' (ID: 26534)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6627286076545715
    2. '\n' → logprob: -1.6627285480499268
    3. '.' → logprob: -1.7877285480499268
    4. '

' → logprob: -3.2877285480499268
    5. '' → logprob: -3.6627285480499268
    6. '\' → logprob: -3.6627285480499268
    7. 'import' → logprob: -4.162728786468506
    8. '<|end|>' → logprob: -4.912728786468506
    9. '```' → logprob: -5.412728786468506
    10. ',' → logprob: -6.037728786468506

Token 30: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.046295166015625
    2. '\n' → logprob: -1.421295166015625
    3. '
' → logprob: -1.421295166015625
    4. '\' → logprob: -2.796295166015625
    5. '```' → logprob: -3.796295166015625
    6. 'import' → logprob: -3.921295166015625
    7. '' → logprob: -4.046295166015625
    8. '

' → logprob: -4.546295166015625
    9. ',' → logprob: -4.671295166015625
    10. ' ' → logprob: -5.046295166015625

Token 31: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2903211712837219
    2. '\n' → logprob: -2.040321111679077
    3. 'import' → logprob: -3.290321111679077
    4. '

' → logprob: -3.415321111679077
    5. '\' → logprob: -4.540321350097656
    6. '' → logprob: -4.540321350097656
    7. '<|end|>' → logprob: -4.540321350097656
    8. '.' → logprob: -4.915321350097656
    9. ',' → logprob: -5.415321350097656
    10. '  
' → logprob: -6.790321350097656

Token 32: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017589516937732697
    2. '.' → logprob: -4.142589569091797
    3. '()' → logprob: -7.017589569091797
    4. '_' → logprob: -8.017589569091797
    5. ' (' → logprob: -8.892589569091797
    6. ')' → logprob: -9.642589569091797
    7. 's' → logprob: -11.142589569091797
    8. '(
' → logprob: -11.142589569091797
    9. ',' → logprob: -11.267589569091797
    10. '=' → logprob: -11.392589569091797

Token 33: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3010236322879791
    2. ' input' → logprob: -1.5510236024856567
    3. 'input' → logprob: -3.6760237216949463
    4. 'sys' → logprob: -3.8010237216949463
    5. ' ' → logprob: -8.676023483276367
    6. ' raw' → logprob: -11.301023483276367
    7. '	sys' → logprob: -11.676023483276367
    8. '(sys' → logprob: -11.801023483276367
    9. '=sys' → logprob: -12.301023483276367
    10. ' lambda' → logprob: -12.301023483276367

Token 34: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007189844618551433
    2. ' .' → logprob: -7.50071907043457
    3. '.readline' → logprob: -10.00071907043457
    4. '[' → logprob: -10.62571907043457
    5. '.import' → logprob: -11.00071907043457
    6. '.stdin' → logprob: -11.25071907043457
    7. '."""' → logprob: -11.37571907043457
    8. '.setdefault' → logprob: -11.75071907043457
    9. '.argv' → logprob: -12.12571907043457
    10. '.input' → logprob: -12.62571907043457

Token 35: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22605906426906586
    2. '.readline' → logprob: -1.726059079170227
    3. '.read' → logprob: -3.7260589599609375
    4. '.readlines' → logprob: -9.601058959960938
    5. 'read' → logprob: -10.226058959960938
    6. '.Read' → logprob: -10.226058959960938
    7. ' .' → logprob: -10.476058959960938
    8. '```' → logprob: -11.226058959960938
    9. '.write' → logprob: -11.351058959960938
    10. ')' → logprob: -12.101058959960938

Token 36: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3942418098449707
    2. '()' → logprob: -1.1442418098449707
    3. '(
' → logprob: -5.144241809844971
    4. '()
' → logprob: -7.644241809844971
    5. ')' → logprob: -7.894241809844971
    6. '(

' → logprob: -8.019241333007812
    7. '
' → logprob: -9.019241333007812
    8. ' ' → logprob: -9.519241333007812
    9. ' (' → logprob: -10.394241333007812
    10. ' ()' → logprob: -10.894241333007812

Token 37: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39680635929107666
    2. '(' → logprob: -1.1468063592910767
    3. '(
' → logprob: -5.271806240081787
    4. '()
' → logprob: -6.271806240081787
    5. '
' → logprob: -6.521806240081787
    6. '(

' → logprob: -7.646806240081787
    7. ')' → logprob: -8.521806716918945
    8. '()

' → logprob: -8.646806716918945
    9. '#' → logprob: -9.521806716918945
    10. ' ' → logprob: -9.646806716918945

Token 38: ' Ass' (ID: 4744)
  Prédit: ' ass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ass' → logprob: -0.7686592936515808
    2. ' rem' → logprob: -2.5186593532562256
    3. 'assign' → logprob: -2.7686593532562256
    4. ' Red' → logprob: -3.2686593532562256
    5. 'Red' → logprob: -3.5186593532562256
    6. ' assign' → logprob: -3.6436593532562256
    7. 'Ré' → logprob: -3.7686593532562256
    8. 'Assign' → logprob: -3.8936593532562256
    9. ' affect' → logprob: -3.8936593532562256
    10. ' Affect' → logprob: -4.0186591148376465

Token 39: 'igne' (ID: 24120)
  Prédit: 'ign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ign' → logprob: -0.05245838686823845
    2. 'igne' → logprob: -3.0524582862854004
    3. ' ign' → logprob: -7.1774582862854
    4. 'ing' → logprob: -7.3024582862854
    5. '#' → logprob: -7.6774582862854
    6. 'igned' → logprob: -8.552458763122559
    7. 'ignment' → logprob: -8.677458763122559
    8. 'ig' → logprob: -8.802458763122559
    9. 'ignez' → logprob: -8.802458763122559
    10. '```' → logprob: -8.802458763122559

Token 40: ' à' (ID: 1221)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.958387017250061
    2. 'sys' → logprob: -1.458387017250061
    3. ' sys' → logprob: -2.2083868980407715
    4. '(sys' → logprob: -2.7083868980407715
    5. '(' → logprob: -2.8333868980407715
    6. ' ' → logprob: -3.2083868980407715
    7. '(input' → logprob: -3.2083868980407715
    8. ' input' → logprob: -3.5833868980407715
    9. '()' → logprob: -4.0833868980407715
    10. 's' → logprob: -4.4583868980407715

Token 41: ' '' (ID: 461)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31357574462890625
    2. ' input' → logprob: -1.3135757446289062
    3. ' sys' → logprob: -8.688575744628906
    4. 'sys' → logprob: -9.313575744628906
    5. ' ' → logprob: -10.438575744628906
    6. '=input' → logprob: -12.188575744628906
    7. 'l' → logprob: -12.188575744628906
    8. '	input' → logprob: -12.438575744628906
    9. '(input' → logprob: -12.563575744628906
    10. ' la' → logprob: -12.688575744628906

Token 42: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005238025914877653
    2. ' input' → logprob: -5.255238056182861
    3. ' ' → logprob: -14.130237579345703
    4. '	input' → logprob: -14.255237579345703
    5. 'sys' → logprob: -14.505237579345703
    6. '=input' → logprob: -14.630237579345703
    7. '<input' → logprob: -14.880237579345703
    8. '_input' → logprob: -15.255237579345703
    9. 'stdin' → logprob: -15.630237579345703
    10. 'in' → logprob: -15.880237579345703

Token 43: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.094918966293335
    2. ' la' → logprob: -1.594918966293335
    3. ' '' → logprob: -1.844918966293335
    4. ' une' → logprob: -1.969918966293335
    5. '()' → logprob: -2.469918966293335
    6. 'une' → logprob: -3.469918966293335
    7. '('' → logprob: -4.219919204711914
    8. ' ' → logprob: -4.969919204711914
    9. ''une' → logprob: -5.094919204711914
    10. 'le' → logprob: -5.469919204711914

Token 44: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00811119843274355
    2. '(input' → logprob: -6.133111000061035
    3. ' (' → logprob: -6.633111000061035
    4. ' ' → logprob: -6.758111000061035
    5. '(
' → logprob: -6.883111000061035
    6. '()' → logprob: -7.133111000061035
    7. '(sys' → logprob: -7.633111000061035
    8. 'input' → logprob: -8.633111000061035
    9. ',' → logprob: -9.133111000061035
    10. '('' → logprob: -9.383111000061035

Token 45: ' fonction' (ID: 17610)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.33788856863975525
    2. ' input' → logprob: -2.337888479232788
    3. 'sys' → logprob: -2.337888479232788
    4. 'input' → logprob: -3.087888479232788
    5. ' ' → logprob: -3.337888479232788
    6. ' readline' → logprob: -6.337888717651367
    7. ' function' → logprob: -6.462888717651367
    8. ' fonction' → logprob: -6.962888717651367
    9. ' méthode' → logprob: -6.962888717651367
    10. ' system' → logprob: -7.087888717651367

Token 46: ' '' (ID: 461)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08280615508556366
    2. '()' → logprob: -2.95780611038208
    3. '(sys' → logprob: -4.20780611038208
    4. '(input' → logprob: -5.45780611038208
    5. ' ' → logprob: -6.33280611038208
    6. 'input' → logprob: -6.33280611038208
    7. 'sys' → logprob: -6.70780611038208
    8. '(
' → logprob: -7.33280611038208
    9. '('' → logprob: -7.45780611038208
    10. ' (' → logprob: -7.58280611038208

Token 47: 'read' (ID: 1293)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6470245122909546
    2. 'read' → logprob: -0.7720245122909546
    3. 'input' → logprob: -5.022024631500244
    4. '.readline' → logprob: -5.647024631500244
    5. 'stdin' → logprob: -6.397024631500244
    6. ' sys' → logprob: -6.647024631500244
    7. ' readline' → logprob: -7.522024631500244
    8. '(sys' → logprob: -7.897024631500244
    9. '=sys' → logprob: -8.772024154663086
    10. ' ' → logprob: -10.647024154663086

Token 48: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -8.77627644513268e-06
    2. 'lin' → logprob: -12.875008583068848
    3. 'l' → logprob: -13.250008583068848
    4. 'ine' → logprob: -13.500008583068848
    5. 'li' → logprob: -13.500008583068848
    6. '_line' → logprob: -13.875008583068848
    7. 'lines' → logprob: -14.625008583068848
    8. ''' → logprob: -16.000009536743164
    9. 'Line' → logprob: -17.000009536743164
    10. ' line' → logprob: -17.375009536743164

Token 49: ''' (ID: 6)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.26226362586021423
    2. ''' → logprob: -1.8872636556625366
    3. ')'' → logprob: -3.012263536453247
    4. ')' → logprob: -3.762263536453247
    5. '()' → logprob: -5.762263774871826
    6. '(' → logprob: -6.137263774871826
    7. '("' → logprob: -7.387263774871826
    8. '('\' → logprob: -8.012263298034668
    9. ' '' → logprob: -9.387263298034668
    10. '"' → logprob: -9.387263298034668

Token 50: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0809134840965271
    2. '(' → logprob: -2.580913543701172
    3. '(
' → logprob: -7.455913543701172
    4. '()
' → logprob: -8.205913543701172
    5. '
' → logprob: -8.330913543701172
    6. '\n' → logprob: -8.580913543701172
    7. ')' → logprob: -8.830913543701172
    8. ' ' → logprob: -9.330913543701172
    9. '()

' → logprob: -9.455913543701172
    10. '(

' → logprob: -9.955913543701172

Token 51: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5787099599838257
    2. 'sys' → logprob: -0.8287099599838257
    3. '(sys' → logprob: -6.078710079193115
    4. '=sys' → logprob: -8.203709602355957
    5. '	sys' → logprob: -9.453709602355957
    6. 'stdin' → logprob: -9.828709602355957
    7. ' stdin' → logprob: -10.953709602355957
    8. ' ' → logprob: -11.453709602355957
    9. '(stdin' → logprob: -11.828709602355957
    10. '/sys' → logprob: -11.828709602355957

Token 52: '.stdin' (ID: 93480)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7095258235931396
    2. '(' → logprob: -0.8345258235931396
    3. '
' → logprob: -3.3345258235931396
    4. '(
' → logprob: -3.5845258235931396
    5. '(

' → logprob: -5.959526062011719
    6. '()
' → logprob: -6.084526062011719
    7. '

' → logprob: -6.459526062011719
    8. '\n' → logprob: -6.709526062011719
    9. '()

' → logprob: -7.584526062011719
    10. ' ' → logprob: -7.709526062011719

Token 53: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5166048407554626
    2. '(' → logprob: -1.5166049003601074
    3. ' ' → logprob: -2.7666049003601074
    4. '

' → logprob: -3.0166049003601074
    5. '()' → logprob: -3.6416049003601074
    6. '(
' → logprob: -4.391604900360107
    7. ' 
' → logprob: -5.516604900360107
    8. ')' → logprob: -5.766604900360107
    9. '#' → logprob: -5.766604900360107
    10. 'newline' → logprob: -5.766604900360107

Token 54: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7882606983184814
    2. '()' → logprob: -0.9132606983184814
    3. ' )' → logprob: -2.4132606983184814
    4. ' ' → logprob: -3.4132606983184814
    5. ' 
' → logprob: -5.038260459899902
    6. ' ()' → logprob: -5.913260459899902
    7. 'def' → logprob: -6.413260459899902
    8. ' which' → logprob: -6.663260459899902
    9. ' ce' → logprob: -7.163260459899902
    10. 'which' → logprob: -7.538260459899902

Token 55: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.5350073575973511
    2. ' faciliter' → logprob: -1.785007357597351
    3. ' permettre' → logprob: -2.6600074768066406
    4. 'optim' → logprob: -3.0350074768066406
    5. ' obtenir' → logprob: -3.2850074768066406
    6. 'l' → logprob: -4.410007476806641
    7. ' optimiser' → logprob: -4.410007476806641
    8. ' une' → logprob: -4.535007476806641
    9. ' améliorer' → logprob: -5.035007476806641
    10. ' simpl' → logprob: -5.160007476806641

Token 56: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.8002967834472656
    2. ' des' → logprob: -1.0502967834472656
    3. '<|end|>' → logprob: -2.5502967834472656
    4. ' ' → logprob: -3.5502967834472656
    5. '()' → logprob: -3.6752967834472656
    6. 's' → logprob: -3.8002967834472656
    7. ' un' → logprob: -4.550296783447266
    8. 'input' → logprob: -4.800296783447266
    9. 'des' → logprob: -5.175296783447266
    10. 'une' → logprob: -6.175296783447266

Token 57: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.0671653300523758
    2. 'ligne' → logprob: -3.0671653747558594
    3. ' ' → logprob: -4.942165374755859
    4. ' chaîne' → logprob: -5.567165374755859
    5. 'l' → logprob: -6.192165374755859
    6. ' seule' → logprob: -6.442165374755859
    7. ' input' → logprob: -7.192165374755859
    8. ' line' → logprob: -7.442165374755859
    9. 'n' → logprob: -7.817165374755859
    10. ' string' → logprob: -8.06716537475586

Token 58: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.264005571603775
    2. '
' → logprob: -2.389005661010742
    3. '(' → logprob: -3.264005661010742
    4. 'def' → logprob: -4.014005661010742
    5. '(
' → logprob: -4.139005661010742
    6. '

' → logprob: -4.139005661010742
    7. ' ' → logprob: -4.764005661010742
    8. ')' → logprob: -4.889005661010742
    9. '()
' → logprob: -5.139005661010742
    10. '()

' → logprob: -5.139005661010742

Token 59: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.8823719024658203
    2. 'l' → logprob: -1.3823719024658203
    3. ' standard' → logprob: -1.5073719024658203
    4. 'standard' → logprob: -3.0073719024658203
    5. ' stdin' → logprob: -3.2573719024658203
    6. 'stdin' → logprob: -5.13237190246582
    7. ' sys' → logprob: -5.38237190246582
    8. ' ' → logprob: -5.63237190246582
    9. 'le' → logprob: -6.38237190246582
    10. ' la' → logprob: -6.50737190246582

Token 60: ''entrée' (ID: 115820)
  Prédit: ' standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.9499011635780334
    2. 'e' → logprob: -1.8249011039733887
    3. 'entrée' → logprob: -2.0749011039733887
    4. ' stdin' → logprob: -2.5749011039733887
    5. ''entrée' → logprob: -2.8249011039733887
    6. 'stdin' → logprob: -2.8249011039733887
    7. ' entrée' → logprob: -3.1999011039733887
    8. 'standard' → logprob: -3.9499011039733887
    9. ' input' → logprob: -4.074901103973389
    10. 'a' → logprob: -4.449901103973389

Token 61: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14938582479953766
    2. 'standard' → logprob: -2.899385929107666
    3. '.' → logprob: -3.149385929107666
    4. ')' → logprob: -4.024385929107666
    5. '().' → logprob: -5.274385929107666
    6. ' standard' → logprob: -5.649385929107666
    7. '```' → logprob: -6.024385929107666
    8. '(stdin' → logprob: -6.149385929107666
    9. ',' → logprob: -6.649385929107666
    10. '<|end|>' → logprob: -6.899385929107666

Token 62: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31520769000053406
    2. '(' → logprob: -3.0652077198028564
    3. '\n' → logprob: -3.0652077198028564
    4. ' ' → logprob: -3.1902077198028564
    5. '#' → logprob: -3.3152077198028564
    6. '

' → logprob: -3.5652077198028564
    7. '()' → logprob: -3.9402077198028564
    8. '' → logprob: -4.690207481384277
    9. '\' → logprob: -5.065207481384277
    10. ')' → logprob: -5.190207481384277

Token 63: 'sou' (ID: 153109)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03194700554013252
    2. ' )' → logprob: -3.531946897506714
    3. ').' → logprob: -6.531947135925293
    4. 'stdin' → logprob: -9.031947135925293
    5. 'sys' → logprob: -9.156947135925293
    6. ' stdin' → logprob: -9.281947135925293
    7. 'input' → logprob: -9.406947135925293
    8. ' une' → logprob: -10.156947135925293
    9. ' la' → logprob: -10.531947135925293
    10. ' ).' → logprob: -10.781947135925293

Token 64: 'vent' (ID: 818)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.47915858030319214
    2. 'rv' → logprob: -1.104158639907837
    3. 'p' → logprob: -4.854158401489258
    4. 'plement' → logprob: -5.104158401489258
    5. 'rg' → logprob: -5.229158401489258
    6. 'l' → logprob: -5.729158401489258
    7. 'rt' → logprob: -5.854158401489258
    8. '```' → logprob: -5.854158401489258
    9. 'ite' → logprob: -5.979158401489258
    10. 'rl' → logprob: -6.354158401489258

Token 65: ' plus' (ID: 2932)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.3283991813659668
    2. 'le' → logprob: -1.8283991813659668
    3. ' la' → logprob: -1.8283991813659668
    4. 'l' → logprob: -2.328399181365967
    5. ' le' → logprob: -2.453399181365967
    6. 'la' → logprob: -3.203399181365967
    7. ' stdin' → logprob: -3.328399181365967
    8. ' une' → logprob: -3.703399181365967
    9. ' standard' → logprob: -4.203399181365967
    10. ' lors' → logprob: -4.203399181365967

Token 66: ' rapide' (ID: 44887)
  Prédit: ' efficace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' efficace' → logprob: -0.680848240852356
    2. ' rapide' → logprob: -0.805848240852356
    3. 'rap' → logprob: -3.3058481216430664
    4. ' effic' → logprob: -5.680848121643066
    5. ' perform' → logprob: -5.930848121643066
    6. 'perform' → logprob: -6.055848121643066
    7. ' rapides' → logprob: -7.805848121643066
    8. ' efficaces' → logprob: -7.930848121643066
    9. 'efficient' → logprob: -8.305848121643066
    10. ' efficient' → logprob: -8.680848121643066

Token 67: ' que' (ID: 661)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025466466322541237
    2. ' pour' → logprob: -4.150466442108154
    3. ' )' → logprob: -5.150466442108154
    4. ' que' → logprob: -6.525466442108154
    5. ' en' → logprob: -6.650466442108154
    6. ').' → logprob: -8.025466918945312
    7. 'pour' → logprob: -8.900466918945312
    8. ' dans' → logprob: -9.025466918945312
    9. ' ' → logprob: -9.900466918945312
    10. '.' → logprob: -9.900466918945312

Token 68: ' le' (ID: 505)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.30700239539146423
    2. ' input' → logprob: -1.4320024251937866
    3. ' l' → logprob: -4.307002544403076
    4. 'l' → logprob: -4.932002544403076
    5. 'la' → logprob: -5.932002544403076
    6. ' la' → logprob: -6.307002544403076
    7. ' built' → logprob: -9.307002067565918
    8. 'raw' → logprob: -9.807002067565918
    9. ' raw' → logprob: -10.307002067565918
    10. 'le' → logprob: -10.432002067565918

Token 69: ' '' (ID: 461)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.523318350315094
    2. ' built' → logprob: -1.2733182907104492
    3. 'built' → logprob: -3.023318290710449
    4. 'builtin' → logprob: -3.273318290710449
    5. ' input' → logprob: -4.023318290710449
    6. ' builtin' → logprob: -4.023318290710449
    7. 'default' → logprob: -6.273318290710449
    8. '=input' → logprob: -7.398318290710449
    9. 'raw' → logprob: -7.523318290710449
    10. 'b' → logprob: -7.898318290710449

Token 70: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02358110249042511
    2. ' input' → logprob: -3.773581027984619
    3. ' built' → logprob: -8.398581504821777
    4. 'built' → logprob: -10.148581504821777
    5. 'raw' → logprob: -10.648581504821777
    6. 'builtin' → logprob: -11.023581504821777
    7. ' builtin' → logprob: -11.398581504821777
    8. '=input' → logprob: -11.773581504821777
    9. '`' → logprob: -12.148581504821777
    10. '```' → logprob: -13.398581504821777

Token 71: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18257157504558563
    2. '')' → logprob: -1.932571530342102
    3. ')'' → logprob: -4.8075714111328125
    4. ')' → logprob: -4.9325714111328125
    5. ''' → logprob: -5.1825714111328125
    6. '('' → logprob: -7.4325714111328125
    7. '")' → logprob: -9.557571411132812
    8. ')').' → logprob: -9.557571411132812
    9. 'fonction' → logprob: -10.182571411132812
    10. 'function' → logprob: -10.182571411132812

Token 72: ' nat' (ID: 12777)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.5094726085662842
    2. '()' → logprob: -1.5094726085662842
    3. ')' → logprob: -2.009472608566284
    4. '')' → logprob: -3.259472608566284
    5. ''' → logprob: -6.009472846984863
    6. '())' → logprob: -7.009472846984863
    7. 'fonction' → logprob: -7.509472846984863
    8. ' )' → logprob: -8.259472846984863
    9. 'function' → logprob: -8.634472846984863
    10. ' function' → logprob: -8.759472846984863

Token 73: 'if' (ID: 366)
  Prédit: 'ive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.2310601770877838
    2. 'if' → logprob: -2.231060266494751
    3. 'ur' → logprob: -3.731060266494751
    4. 'e' → logprob: -3.856060266494751
    5. 'ural' → logprob: -4.731060028076172
    6. 'ure' → logprob: -4.856060028076172
    7. 'er' → logprob: -5.106060028076172
    8. 'urel' → logprob: -5.481060028076172
    9. 'ent' → logprob: -5.606060028076172
    10. 'uel' → logprob: -5.856060028076172

Token 74: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006223689415492117
    2. ' )' → logprob: -7.625622272491455
    3. '')' → logprob: -9.750622749328613
    4. '()' → logprob: -10.250622749328613
    5. ')
' → logprob: -11.125622749328613
    6. ').' → logprob: -11.625622749328613
    7. '())' → logprob: -12.625622749328613
    8. '")' → logprob: -12.750622749328613
    9. ')

' → logprob: -13.000622749328613
    10. 'def' → logprob: -13.625622749328613

Token 75: 'import' (ID: 561)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.029270974919199944
    2. 'def' → logprob: -4.404271125793457
    3. 'for' → logprob: -5.029271125793457
    4. '\n' → logprob: -5.654271125793457
    5. '#' → logprob: -5.779271125793457
    6. 'a' → logprob: -7.404271125793457
    7. 'num' → logprob: -7.529271125793457
    8. '\' → logprob: -7.654271125793457
    9. '
' → logprob: -8.029271125793457
    10. '(n' → logprob: -8.654271125793457

Token 76: ' numpy' (ID: 19529)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.2057177871465683
    2. ' math' → logprob: -1.7057178020477295
    3. ' collections' → logprob: -5.83071756362915
    4. 'os' → logprob: -7.33071756362915
    5. ' itertools' → logprob: -7.45571756362915
    6. 'math' → logprob: -9.830718040466309
    7. ' re' → logprob: -10.330718040466309
    8. 'collections' → logprob: -11.580718040466309
    9. ' random' → logprob: -11.955718040466309
    10. ' threading' → logprob: -11.955718040466309

Token 77: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.004419913049787283
    2. '<|end|>' → logprob: -5.504419803619385
    3. 'as' → logprob: -8.254420280456543
    4. ' ' → logprob: -9.754420280456543
    5. '<|end|>' → logprob: -11.004420280456543
    6. '.ndarray' → logprob: -12.754420280456543
    7. '.' → logprob: -14.504420280456543
    8. '.as' → logprob: -14.629420280456543
    9. '	as' → logprob: -14.754420280456543
    10. '.pyplot' → logprob: -15.004420280456543

Token 78: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0002814775798469782
    2. 'np' → logprob: -8.25028133392334
    3. ' ' → logprob: -10.87528133392334
    4. ' numpy' → logprob: -14.37528133392334
    5. ' ' → logprob: -15.37528133392334
    6. ' n' → logprob: -15.62528133392334
    7. '=np' → logprob: -16.250282287597656
    8. '_np' → logprob: -16.625282287597656
    9. ' as' → logprob: -17.125282287597656
    10. ' NP' → logprob: -18.000282287597656

Token 79: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.043630599975586
    2. 'import' → logprob: -1.043630599975586
    3. '\n' → logprob: -2.418630599975586
    4. '<|end|>' → logprob: -2.668630599975586
    5. ' ' → logprob: -3.793630599975586
    6. '#' → logprob: -3.918630599975586
    7. 'newline' → logprob: -3.918630599975586
    8. '

' → logprob: -4.418630599975586
    9. '<|end|>' → logprob: -4.543630599975586
    10. ' 
' → logprob: -4.668630599975586

Token 80: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5858417749404907
    2. '<|end|>' → logprob: -2.085841655731201
    3. '
' → logprob: -2.335841655731201
    4. ' ' → logprob: -2.460841655731201
    5. '#' → logprob: -3.085841655731201
    6. '\n' → logprob: -3.960841655731201
    7. '<|end|>' → logprob: -4.210841655731201
    8. ' 
' → logprob: -4.835841655731201
    9. 'x' → logprob: -4.835841655731201
    10. '  
' → logprob: -5.210841655731201

Token 81: ' Im' (ID: 3133)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.3575836420059204
    2. 'import' → logprob: -1.2325836420059204
    3. ' Import' → logprob: -5.482583522796631
    4. 'Import' → logprob: -5.982583522796631
    5. ' numpy' → logprob: -7.357583522796631
    6. ' ' → logprob: -8.107583999633789
    7. ' importe' → logprob: -8.107583999633789
    8. 'importe' → logprob: -8.482583999633789
    9. ' np' → logprob: -8.607583999633789
    10. 'Importer' → logprob: -8.857583999633789

Token 82: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'port' → logprob: -1.8908587662735954e-05
    2. 'import' → logprob: -11.000019073486328
    3. 'ort' → logprob: -13.375019073486328
    4. 'porte' → logprob: -15.125019073486328
    5. 'порт' → logprob: -16.000019073486328
    6. 'por' → logprob: -16.750019073486328
    7. 'Port' → logprob: -17.750019073486328
    8. '```' → logprob: -17.750019073486328
    9. 'porter' → logprob: -18.375019073486328
    10. 'ported' → logprob: -18.500019073486328

Token 83: ' le' (ID: 505)
  Prédit: ' numpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numpy' → logprob: -0.02519623376429081
    2. ' ' → logprob: -4.025196075439453
    3. ' ' → logprob: -5.400196075439453
    4. 'numpy' → logprob: -6.275196075439453
    5. '_numpy' → logprob: -8.275196075439453
    6. ' ndarray' → logprob: -9.400196075439453
    7. '<|end|>' → logprob: -9.650196075439453
    8. ' la' → logprob: -9.900196075439453
    9. ' np' → logprob: -10.400196075439453
    10. ' pandas' → logprob: -10.525196075439453

Token 84: ' module' (ID: 8827)
  Prédit: ' module'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' module' → logprob: -0.6366766691207886
    2. 'module' → logprob: -1.6366766691207886
    3. ' numpy' → logprob: -1.8866766691207886
    4. 'numpy' → logprob: -2.136676788330078
    5. 'bibli' → logprob: -5.386676788330078
    6. ' library' → logprob: -7.636676788330078
    7. ' package' → logprob: -7.761676788330078
    8. 'package' → logprob: -7.886676788330078
    9. 'library' → logprob: -8.386676788330078
    10. '_numpy' → logprob: -9.011676788330078

Token 85: ' numpy' (ID: 19529)
  Prédit: ' numpy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numpy' → logprob: -0.17867088317871094
    2. 'numpy' → logprob: -1.928670883178711
    3. ' ' → logprob: -4.553670883178711
    4. ' ' → logprob: -5.303670883178711
    5. '_numpy' → logprob: -6.678670883178711
    6. '<|end|>' → logprob: -7.803670883178711
    7. '.ndarray' → logprob: -7.928670883178711
    8. '.numpy' → logprob: -8.303670883178711
    9. 'umpy' → logprob: -9.678670883178711
    10. ' ndarray' → logprob: -9.803670883178711

Token 86: ',' (ID: 11)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.9744803309440613
    2. '<|end|>' → logprob: -0.9744803309440613
    3. 'import' → logprob: -1.849480390548706
    4. ' ' → logprob: -3.349480390548706
    5. 'as' → logprob: -3.724480390548706
    6. '<|end|>' → logprob: -4.099480152130127
    7. '
' → logprob: -5.724480152130127
    8. '.' → logprob: -6.349480152130127
    9. ' 

' → logprob: -6.349480152130127
    10. ' 
' → logprob: -6.599480152130127

Token 87: ' alias' (ID: 26026)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: 'é' (ID: 377)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.4026717245578766
    2. ' np' → logprob: -1.2776716947555542
    3. ' ' → logprob: -3.7776718139648438
    4. 'np' → logprob: -4.027671813964844
    5. 'as' → logprob: -5.277671813964844
    6. ' numpy' → logprob: -5.402671813964844
    7. ' ' → logprob: -6.777671813964844
    8. 'numpy' → logprob: -7.652671813964844
    9. ' en' → logprob: -8.277671813964844
    10. ' ' → logprob: -8.652671813964844

Token 89: ' en' (ID: 469)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.5687164664268494
    2. 'as' → logprob: -1.1937165260314941
    3. '<|end|>' → logprob: -2.318716526031494
    4. ' ' → logprob: -3.568716526031494
    5. '```' → logprob: -6.943716526031494
    6. 'import' → logprob: -6.943716526031494
    7. ' en' → logprob: -7.818716526031494
    8. '  ' → logprob: -8.193716049194336
    9. ' ' → logprob: -8.318716049194336
    10. 'comme' → logprob: -8.443716049194336

Token 90: ' '' (ID: 461)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.055105119943618774
    2. 'np' → logprob: -2.930105209350586
    3. ' numpy' → logprob: -9.555105209350586
    4. ' ' → logprob: -9.805105209350586
    5. ' ' → logprob: -10.305105209350586
    6. '_np' → logprob: -10.430105209350586
    7. ' as' → logprob: -11.555105209350586
    8. '```' → logprob: -11.680105209350586
    9. 'numpy' → logprob: -12.180105209350586
    10. ' ' → logprob: -13.055105209350586

Token 91: 'np' (ID: 12766)
  Prédit: 'np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.38687586784362793
    2. ' np' → logprob: -1.136875867843628
    3. 'numpy' → logprob: -13.136876106262207
    4. ' numpy' → logprob: -13.511876106262207
    5. 'n' → logprob: -13.886876106262207
    6. ' ' → logprob: -15.136876106262207
    7. '_np' → logprob: -15.386876106262207
    8. ' n' → logprob: -17.13687515258789
    9. 'NP' → logprob: -17.51187515258789
    10. ' ' → logprob: -18.51187515258789

Token 92: '',' (ID: 787)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12112118303775787
    2. '')' → logprob: -2.2461211681365967
    3. '<|end|>' → logprob: -5.246121406555176
    4. '")' → logprob: -6.871121406555176
    5. ''' → logprob: -7.121121406555176
    6. '```' → logprob: -8.121121406555176
    7. '<|end|>' → logprob: -8.371121406555176
    8. ' )' → logprob: -8.496121406555176
    9. 'import' → logprob: -8.621121406555176
    10. '`)' → logprob: -10.621121406555176

Token 93: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.8735394477844238
    2. ' utilisé' → logprob: -1.6235394477844238
    3. ' used' → logprob: -2.998539447784424
    4. ' which' → logprob: -2.998539447784424
    5. ' permettant' → logprob: -3.123539447784424
    6. 'import' → logprob: -3.123539447784424
    7. 'qui' → logprob: -3.623539447784424
    8. ' as' → logprob: -3.623539447784424
    9. ' une' → logprob: -3.748539447784424
    10. ' ' → logprob: -3.998539447784424

Token 94: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.7229568958282471
    2. 'est' → logprob: -1.097956895828247
    3. ' permet' → logprob: -2.472956895828247
    4. ' fournit' → logprob: -2.972956895828247
    5. ' facilite' → logprob: -3.972956895828247
    6. 'sert' → logprob: -5.222956657409668
    7. ' offre' → logprob: -5.597956657409668
    8. 'per' → logprob: -5.722956657409668
    9. 'import' → logprob: -5.847956657409668
    10. ' sert' → logprob: -6.347956657409668

Token 95: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.7797958850860596
    2. ' utilisé' → logprob: -0.7797958850860596
    3. 'une' → logprob: -3.2797958850860596
    4. 'util' → logprob: -3.5297958850860596
    5. ' largement' → logprob: -4.9047956466674805
    6. ' spécialisé' → logprob: -6.1547956466674805
    7. ' souvent' → logprob: -6.9047956466674805
    8. 'import' → logprob: -7.0297956466674805
    9. 'utile' → logprob: -7.1547956466674805
    10. ' utile' → logprob: -7.4047956466674805

Token 96: ' bibliothèque' (ID: 154070)
  Prédit: 'bibli'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bibli' → logprob: -0.01866723783314228
    2. ' bibliothèque' → logprob: -4.018667221069336
    3. ' bibli' → logprob: -8.268667221069336
    4. 'lib' → logprob: -9.143667221069336
    5. 'library' → logprob: -9.143667221069336
    6. 'Bibli' → logprob: -10.393667221069336
    7. 'b' → logprob: -12.268667221069336
    8. ' libra' → logprob: -12.643667221069336
    9. 'import' → logprob: -13.143667221069336
    10. ' библиот' → logprob: -13.268667221069336

Token 97: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.3763708174228668
    2. 'le' → logprob: -1.3763707876205444
    3. 'les' → logprob: -3.876370906829834
    4. 'l' → logprob: -4.376370906829834
    5. 'la' → logprob: -4.501370906829834
    6. ' les' → logprob: -4.876370906829834
    7. 'calcul' → logprob: -5.376370906829834
    8. ' la' → logprob: -6.876370906829834
    9. ' l' → logprob: -7.751370906829834
    10. 'trait' → logprob: -7.876370906829834

Token 99: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.39058631658554077
    2. ' calcul' → logprob: -1.3905863761901855
    3. 'trait' → logprob: -3.5155863761901855
    4. ' traitement' → logprob: -3.6405863761901855
    5. 'man' → logprob: -4.7655863761901855
    6. 's' → logprob: -5.3905863761901855
    7. ' manipulation' → logprob: -6.0155863761901855
    8. 'cal' → logprob: -7.3905863761901855
    9. 'scient' → logprob: -7.5155863761901855
    10. 'comput' → logprob: -8.265585899353027

Token 100: ' math' (ID: 13324)
  Prédit: ' scientifique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scientifique' → logprob: -0.8051201105117798
    2. ' numérique' → logprob: -1.0551201105117798
    3. 'import' → logprob: -2.6801199913024902
    4. 's' → logprob: -3.3051199913024902
    5. ' array' → logprob: -3.8051199913024902
    6. ' ' → logprob: -4.18011999130249
    7. 'scient' → logprob: -4.55511999130249
    8. ' numpy' → logprob: -5.18011999130249
    9. ' math' → logprob: -5.30511999130249
    10. ' en' → logprob: -5.55511999130249

Token 101: 'ématique' (ID: 127136)
  Prédit: 'ématique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ématique' → logprob: -0.6327762603759766
    2. 'ématiques' → logprob: -0.7577762603759766
    3. 'ém' → logprob: -9.132776260375977
    4. 'import' → logprob: -10.257776260375977
    5. 'érique' → logprob: -11.757776260375977
    6. 'é' → logprob: -12.132776260375977
    7. 'étiques' → logprob: -12.257776260375977
    8. 'étique' → logprob: -12.507776260375977
    9. 'plotlib' → logprob: -12.757776260375977
    10. 's' → logprob: -13.257776260375977

Token 102: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7695099115371704
    2. 'import' → logprob: -1.1445099115371704
    3. 'for' → logprob: -2.894509792327881
    4. '
' → logprob: -3.144509792327881
    5. ' ' → logprob: -4.019509792327881
    6. '#' → logprob: -4.144509792327881
    7. '\n' → logprob: -4.394509792327881
    8. 'print' → logprob: -4.394509792327881
    9. '

' → logprob: -4.894509792327881
    10. 'n' → logprob: -5.019509792327881

Token 103: ' matrices' (ID: 75935)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.36546221375465393
    2. ' tableaux' → logprob: -1.6154621839523315
    3. 'arrays' → logprob: -3.865462303161621
    4. 'mat' → logprob: -3.865462303161621
    5. ' matrices' → logprob: -3.990462303161621
    6. 't' → logprob: -4.615462303161621
    7. ' arrays' → logprob: -4.990462303161621
    8. 'table' → logprob: -5.115462303161621
    9. 'efficient' → logprob: -5.865462303161621
    10. 'nd' → logprob: -6.365462303161621

Token 104: ' et' (ID: 859)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9120428562164307
    2. 'import' → logprob: -1.4120428562164307
    3. '<|end|>' → logprob: -2.2870428562164307
    4. '\n' → logprob: -2.6620428562164307
    5. ' ' → logprob: -3.2870428562164307
    6. '

' → logprob: -3.2870428562164307
    7. '#' → logprob: -3.5370428562164307
    8. 'def' → logprob: -4.662042617797852
    9. '[' → logprob: -4.787042617797852
    10. 'for' → logprob: -5.162042617797852

Token 105: ' tableaux' (ID: 176599)
  Prédit: 'scient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'scient' → logprob: -1.5923653841018677
    2. 'les' → logprob: -1.9673653841018677
    3. 'l' → logprob: -2.592365264892578
    4. 'le' → logprob: -2.592365264892578
    5. 'la' → logprob: -2.717365264892578
    6. 'table' → logprob: -2.967365264892578
    7. 'arrays' → logprob: -2.967365264892578
    8. ' le' → logprob: -3.342365264892578
    9. 'de' → logprob: -3.467365264892578
    10. 'man' → logprob: -3.717365264892578

Token 106: ' multid' (ID: 60280)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4825821816921234
    2. 'import' → logprob: -2.1075820922851562
    3. '\n' → logprob: -2.2325820922851562
    4. '<|end|>' → logprob: -2.8575820922851562
    5. '

' → logprob: -3.4825820922851562
    6. '#' → logprob: -3.9825820922851562
    7. ' ' → logprob: -4.732582092285156
    8. '' → logprob: -5.107582092285156
    9. '\' → logprob: -5.357582092285156
    10. '```' → logprob: -5.482582092285156

Token 107: 'imension' (ID: 48863)
  Prédit: 'imension'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imension' → logprob: -0.04520972818136215
    2. 'im' → logprob: -3.4202096462249756
    3. 'imensional' → logprob: -5.670209884643555
    4. 'arrays' → logprob: -5.920209884643555
    5. 'array' → logprob: -6.170209884643555
    6. 'import' → logprob: -6.295209884643555
    7. 'imens' → logprob: -7.670209884643555
    8. 'a' → logprob: -9.045209884643555
    9. 'arr' → logprob: -9.170209884643555
    10. 'imes' → logprob: -9.295209884643555

Token 108: 'nels' (ID: 24956)
  Prédit: 'imension'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'imension' → logprob: -0.41190552711486816
    2. 'ension' → logprob: -1.2869055271148682
    3. 'ensions' → logprob: -3.661905527114868
    4. 'im' → logprob: -3.911905527114868
    5. 'ion' → logprob: -4.911905288696289
    6. 'ens' → logprob: -5.661905288696289
    7. '```' → logprob: -6.536905288696289
    8. 'onn' → logprob: -7.911905288696289
    9. 'import' → logprob: -7.911905288696289
    10. 'imens' → logprob: -7.911905288696289

Token 109: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8273979425430298
    2. '#' → logprob: -2.2023978233337402
    3. '
' → logprob: -2.3273978233337402
    4. 'x' → logprob: -3.0773978233337402
    5. ')' → logprob: -3.2023978233337402
    6. 'n' → logprob: -3.4523978233337402
    7. '(' → logprob: -3.7023978233337402
    8. '(
' → logprob: -3.7023978233337402
    9. 'for' → logprob: -3.7023978233337402
    10. 'import' → logprob: -3.8273978233337402

Token 110: ' très' (ID: 9412)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1356087476015091
    2. '
' → logprob: -3.385608673095703
    3. ' 
' → logprob: -3.760608673095703
    4. '<|end|>' → logprob: -4.760608673095703
    5. '

' → logprob: -4.885608673095703
    6. ' import' → logprob: -5.010608673095703
    7. '#' → logprob: -5.385608673095703
    8. 'from' → logprob: -5.510608673095703
    9. ' ' → logprob: -5.635608673095703
    10. ' scipy' → logprob: -5.760608673095703

Token 111: ' utilisée' (ID: 106548)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.9705998301506042
    2. 'utile' → logprob: -1.720599889755249
    3. ' utile' → logprob: -1.845599889755249
    4. ' utilisé' → logprob: -2.220599889755249
    5. ' efficace' → logprob: -2.595599889755249
    6. ' utilisée' → logprob: -2.720599889755249
    7. 'import' → logprob: -4.72059965133667
    8. 'perform' → logprob: -5.34559965133667
    9. ' populaire' → logprob: -5.59559965133667
    10. 'optim' → logprob: -5.72059965133667

Token 112: ' en' (ID: 469)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' science' (ID: 11222)
  Prédit: ' science'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' science' → logprob: -0.750648021697998
    2. ' data' → logprob: -1.500648021697998
    3. 'science' → logprob: -2.250648021697998
    4. ' machine' → logprob: -2.500648021697998
    5. ' sciences' → logprob: -3.000648021697998
    6. 'data' → logprob: -3.750648021697998
    7. 'scient' → logprob: -4.000648021697998
    8. ' scientifique' → logprob: -4.875648021697998
    9. ' scientific' → logprob: -5.750648021697998
    10. 'machine' → logprob: -6.000648021697998

Token 114: ' des' (ID: 731)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9010509252548218
    2. '<|end|>' → logprob: -1.6510509252548218
    3. ' des' → logprob: -1.9010509252548218
    4. ' ' → logprob: -2.5260510444641113
    5. '.' → logprob: -3.1510510444641113
    6. ',' → logprob: -3.6510510444641113
    7. '.pyplot' → logprob: -4.151051044464111
    8. 's' → logprob: -4.526051044464111
    9. ' de' → logprob: -4.901051044464111
    10. '<|end|>' → logprob: -5.276051044464111

Token 115: ' données' (ID: 30580)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00037836082628928125
    2. 'don' → logprob: -8.375378608703613
    3. 'data' → logprob: -9.625378608703613
    4. ' données' → logprob: -10.250378608703613
    5. 'datas' → logprob: -10.375378608703613
    6. '```' → logprob: -13.125378608703613
    7. 'bases' → logprob: -13.500378608703613
    8. 'sc' → logprob: -13.625378608703613
    9. '_d' → logprob: -13.875378608703613
    10. 'calcul' → logprob: -14.000378608703613

Token 116: ' et' (ID: 859)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0088963508605957
    2. '\n' → logprob: -1.7588963508605957
    3. 'def' → logprob: -2.2588963508605957
    4. 'import' → logprob: -2.7588963508605957
    5. '#' → logprob: -2.8838963508605957
    6. 'for' → logprob: -3.0088963508605957
    7. 'n' → logprob: -3.1338963508605957
    8. 'print' → logprob: -3.7588963508605957
    9. 'data' → logprob: -4.258896350860596
    10. '

' → logprob: -4.258896350860596

Token 117: ' pour' (ID: 1930)
  Prédit: ' machine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' machine' → logprob: -0.6372719407081604
    2. ' apprent' → logprob: -1.5122718811035156
    3. ' data' → logprob: -2.2622718811035156
    4. 'ap' → logprob: -3.0122718811035156
    5. 'machine' → logprob: -3.0122718811035156
    6. 'data' → logprob: -4.137271881103516
    7. ' en' → logprob: -4.637271881103516
    8. ' science' → logprob: -4.762271881103516
    9. 'science' → logprob: -5.887271881103516
    10. 'en' → logprob: -6.262271881103516

Token 118: ' traiter' (ID: 105852)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9169414043426514
    2. ' le' → logprob: -1.2919414043426514
    3. 'l' → logprob: -2.0419414043426514
    4. ' l' → logprob: -2.6669414043426514
    5. 'les' → logprob: -2.6669414043426514
    6. ' les' → logprob: -3.0419414043426514
    7. 'la' → logprob: -5.6669416427612305
    8. 'd' → logprob: -6.4169416427612305
    9. ' des' → logprob: -7.1669416427612305
    10. 'calcul' → logprob: -7.4169416427612305

Token 119: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.17138108611106873
    2. ' les' → logprob: -1.9213811159133911
    3. ' ' → logprob: -5.921380996704102
    4. 'les' → logprob: -6.046380996704102
    5. 'des' → logprob: -6.046380996704102
    6. 's' → logprob: -6.796380996704102
    7. ' arrays' → logprob: -7.046380996704102
    8. ' numpy' → logprob: -7.421380996704102
    9. ' pandas' → logprob: -7.796380996704102
    10. ' l' → logprob: -9.546380996704102

Token 120: ' gros' (ID: 28636)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10331054031848907
    2. ' grandes' → logprob: -2.8533105850219727
    3. ' données' → logprob: -3.8533105850219727
    4. 'l' → logprob: -5.853310585021973
    5. 'd' → logprob: -6.353310585021973
    6. ' tableaux' → logprob: -6.353310585021973
    7. ' grands' → logprob: -6.478310585021973
    8. ' numpy' → logprob: -6.603310585021973
    9. ' ' → logprob: -6.853310585021973
    10. 'es' → logprob: -6.978310585021973

Token 121: ' volumes' (ID: 38028)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.6275120973587036
    2. ' tableaux' → logprob: -1.8775120973587036
    3. ' volumes' → logprob: -2.127511978149414
    4. 'es' → logprob: -3.377511978149414
    5. 'datasets' → logprob: -3.502511978149414
    6. 'd' → logprob: -3.752511978149414
    7. 's' → logprob: -3.752511978149414
    8. 'arrays' → logprob: -3.877511978149414
    9. ' datasets' → logprob: -4.252511978149414
    10. ' espaces' → logprob: -4.502511978149414

Token 122: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' données' (ID: 30580)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006895938888192177
    2. ' données' → logprob: -5.006896018981934
    3. 'don' → logprob: -8.756896018981934
    4. 'data' → logprob: -11.131896018981934
    5. 'datas' → logprob: -12.381896018981934
    6. '```' → logprob: -13.256896018981934
    7. '	d' → logprob: -14.381896018981934
    8. ' data' → logprob: -15.131896018981934
    9. ' ' → logprob: -15.381896018981934
    10. 'num' → logprob: -15.506896018981934

Token 124: ' numériques' (ID: 153198)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3030601441860199
    2. '

' → logprob: -2.4280600547790527
    3. '<|end|>' → logprob: -2.9280600547790527
    4. '\n' → logprob: -3.5530600547790527
    5. 'import' → logprob: -3.9280600547790527
    6. 'def' → logprob: -4.303060054779053
    7. '#' → logprob: -4.803060054779053
    8. '' → logprob: -5.303060054779053
    9. '(
' → logprob: -5.303060054779053
    10. 'x' → logprob: -5.553060054779053

Token 125: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7170383930206299
    2. '

' → logprob: -1.4670383930206299
    3. 'def' → logprob: -1.9670383930206299
    4. 'n' → logprob: -2.96703839302063
    5. 'import' → logprob: -3.21703839302063
    6. '\n' → logprob: -4.967038154602051
    7. 'for' → logprob: -5.342038154602051
    8. 'a' → logprob: -5.467038154602051
    9. 'data' → logprob: -5.467038154602051
    10. '#' → logprob: -5.467038154602051

Token 126: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3292544186115265
    2. 'import' → logprob: -1.829254388809204
    3. 'def' → logprob: -2.704254388809204
    4. '
' → logprob: -4.579254627227783
    5. '#' → logprob: -4.579254627227783
    6. 'data' → logprob: -5.329254627227783
    7. '\n' → logprob: -5.454254627227783
    8. 'for' → logprob: -5.579254627227783
    9. 'a' → logprob: -5.704254627227783
    10. 'x' → logprob: -5.829254627227783

Token 127: ' Ce' (ID: 14228)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41365566849708557
    2. 'n' → logprob: -2.2886557579040527
    3. ' n' → logprob: -2.2886557579040527
    4. ' def' → logprob: -2.5386557579040527
    5. ' data' → logprob: -3.9136557579040527
    6. '#' → logprob: -4.788655757904053
    7. 'import' → logprob: -5.163655757904053
    8. 'data' → logprob: -5.413655757904053
    9. ' T' → logprob: -5.788655757904053
    10. 'T' → logprob: -5.788655757904053

Token 128: ' code' (ID: 3490)
  Prédit: ' code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.3328891098499298
    2. 'def' → logprob: -2.4578890800476074
    3. '#' → logprob: -3.3328890800476074
    4. 's' → logprob: -3.7078890800476074
    5. ' n' → logprob: -3.8328890800476074
    6. '_code' → logprob: -4.082889080047607
    7. 'nt' → logprob: -4.457889080047607
    8. 'n' → logprob: -4.457889080047607
    9. ' def' → logprob: -4.957889080047607
    10. ' #' → logprob: -5.332889080047607

Token 129: ' g' (ID: 329)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.6131956577301025
    2. 'import' → logprob: -1.8631956577301025
    3. ' n' → logprob: -1.9881956577301025
    4. ':' → logprob: -2.4881956577301025
    5. 'n' → logprob: -2.6131956577301025
    6. ',' → logprob: -2.7381956577301025
    7. 's' → logprob: -2.8631956577301025
    8. ' ' → logprob: -3.3631956577301025
    9. '#' → logprob: -3.3631956577301025
    10. ' a' → logprob: -4.113195419311523

Token 130: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.5369361042976379
    2. 'én' → logprob: -0.9119361042976379
    3. 'en' → logprob: -5.911936283111572
    4. 'éné' → logprob: -5.911936283111572
    5. '#' → logprob: -6.036936283111572
    6. 'ere' → logprob: -6.411936283111572
    7. 'ére' → logprob: -6.661936283111572
    8. 'èn' → logprob: -7.161936283111572
    9. 'è' → logprob: -8.411935806274414
    10. 'e' → logprob: -8.661935806274414

Token 131: ' un' (ID: 537)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.380342960357666
    2. ' l' → logprob: -1.505342960357666
    3. ' la' → logprob: -1.505342960357666
    4. ' des' → logprob: -1.505342960357666
    5. ' ' → logprob: -3.880342960357666
    6. 's' → logprob: -4.130342960357666
    7. 'les' → logprob: -4.630342960357666
    8. ' le' → logprob: -4.755342960357666
    9. ' un' → logprob: -5.005342960357666
    10. 'des' → logprob: -5.255342960357666

Token 132: ' problème' (ID: 35630)
  Prédit: ' problème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.3588739037513733
    2. ' grap' → logprob: -1.7338738441467285
    3. ' graph' → logprob: -3.4838738441467285
    4. 'e' → logprob: -4.2338738441467285
    5. 'pro' → logprob: -4.3588738441467285
    6. ' tournoi' → logprob: -4.6088738441467285
    7. ' probleme' → logprob: -4.7338738441467285
    8. ' jeu' → logprob: -4.9838738441467285
    9. 'graph' → logprob: -5.1088738441467285
    10. 's' → logprob: -5.1088738441467285

Token 133: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.49246710538864136
    2. ' d' → logprob: -1.7424671649932861
    3. ' ' → logprob: -2.367467164993286
    4. 'de' → logprob: -3.117467164993286
    5. 'import' → logprob: -4.492466926574707
    6. ',' → logprob: -4.617466926574707
    7. 'd' → logprob: -4.742466926574707
    8. ' ,' → logprob: -4.867466926574707
    9. '<|end|>' → logprob: -4.867466926574707
    10. 's' → logprob: -4.992466926574707

Token 134: ' programmation' (ID: 166376)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -1.295757532119751
    2. ' grap' → logprob: -1.295757532119751
    3. ' flux' → logprob: -2.045757532119751
    4. ' traitement' → logprob: -3.420757532119751
    5. ' compétition' → logprob: -3.545757532119751
    6. 'graph' → logprob: -3.795757532119751
    7. ' programmation' → logprob: -3.795757532119751
    8. 's' → logprob: -3.795757532119751
    9. ' calcul' → logprob: -4.045757293701172
    10. ' tri' → logprob: -4.170757293701172

Token 135: ' dynamique' (ID: 98708)
  Prédit: ' dynamique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dynamique' → logprob: -0.02223946526646614
    2. 'def' → logprob: -4.522239685058594
    3. 'd' → logprob: -5.272239685058594
    4. 'import' → logprob: -5.647239685058594
    5. '```' → logprob: -7.022239685058594
    6. 'dynamic' → logprob: -7.522239685058594
    7. 's' → logprob: -8.022239685058594
    8. ' compét' → logprob: -9.147239685058594
    9. ' dynamic' → logprob: -9.397239685058594
    10. 'dyn' → logprob: -9.772239685058594

Token 136: ' où' (ID: 15113)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8248676061630249
    2. 'n' → logprob: -1.699867606163025
    3. '
' → logprob: -2.1998677253723145
    4. 'import' → logprob: -2.3248677253723145
    5. 'dp' → logprob: -2.5748677253723145
    6. '

' → logprob: -3.4498677253723145
    7. ',' → logprob: -4.3248677253723145
    8. ':' → logprob: -4.5748677253723145
    9. '#' → logprob: -5.0748677253723145
    10. 's' → logprob: -5.1998677253723145

Token 137: ' on' (ID: 402)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9680445790290833
    2. '#' → logprob: -1.4680445194244385
    3. 'on' → logprob: -1.7180445194244385
    4. ' on' → logprob: -2.8430445194244385
    5. 'les' → logprob: -3.3430445194244385
    6. 'n' → logprob: -3.4680445194244385
    7. 'dp' → logprob: -3.8430445194244385
    8. 'la' → logprob: -3.9680445194244385
    9. ' #' → logprob: -4.468044757843018
    10. 'le' → logprob: -4.468044757843018

Token 138: ' doit' (ID: 21822)
  Prédit: ' doit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.8506290316581726
    2. ' souhaite' → logprob: -1.8506290912628174
    3. 'a' → logprob: -2.3506290912628174
    4. ' veut' → logprob: -2.4756290912628174
    5. 'def' → logprob: -3.1006290912628174
    6. 'do' → logprob: -3.4756290912628174
    7. 've' → logprob: -3.6006290912628174
    8. 'cherche' → logprob: -3.9756290912628174
    9. 'n' → logprob: -4.100628852844238
    10. 's' → logprob: -4.225628852844238

Token 139: ' décider' (ID: 155719)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7894172668457031
    2. '#' → logprob: -1.7894172668457031
    3. ' maxim' → logprob: -2.289417266845703
    4. 'tr' → logprob: -2.914417266845703
    5. 'calcul' → logprob: -2.914417266845703
    6. 'optim' → logprob: -3.664417266845703
    7. ' trouver' → logprob: -3.789417266845703
    8. 'rés' → logprob: -3.789417266845703
    9. ' déterminer' → logprob: -3.914417266845703
    10. ' calcul' → logprob: -3.914417266845703

Token 140: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4252715110778809
    2. ' de' → logprob: -1.4252715110778809
    3. ' si' → logprob: -1.6752715110778809
    4. ' des' → logprob: -2.550271511077881
    5. 'comment' → logprob: -2.925271511077881
    6. 'de' → logprob: -3.425271511077881
    7. '<|end|>' → logprob: -3.800271511077881
    8. ' ' → logprob: -4.050271511077881
    9. ',' → logprob: -4.050271511077881
    10. 'si' → logprob: -4.175271511077881

Token 141: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06583666056394577
    2. ' #' → logprob: -4.565836429595947
    3. 'ligne' → logprob: -4.690836429595947
    4. ' si' → logprob: -5.315836429595947
    5. ' ligne' → logprob: -5.440836429595947
    6. ' combien' → logprob: -5.440836429595947
    7. 'pour' → logprob: -5.565836429595947
    8. ' pour' → logprob: -5.815836429595947
    9. ' dans' → logprob: -6.065836429595947
    10. 'sur' → logprob: -6.315836429595947

Token 142: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.23869843780994415
    2. ' chaque' → logprob: -1.7386984825134277
    3. 'ch' → logprob: -3.4886984825134277
    4. 'une' → logprob: -5.863698482513428
    5. 'each' → logprob: -7.363698482513428
    6. 't' → logprob: -7.488698482513428
    7. 'un' → logprob: -7.738698482513428
    8. '#' → logprob: -8.11369800567627
    9. ' chacune' → logprob: -8.23869800567627
    10. 'chaine' → logprob: -8.86369800567627

Token 143: ' nombre' (ID: 9733)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -1.0194830894470215
    2. ' élément' → logprob: -1.0194830894470215
    3. 'item' → logprob: -2.7694830894470215
    4. 'objet' → logprob: -3.7694830894470215
    5. ' item' → logprob: -3.7694830894470215
    6. 'article' → logprob: -3.8944830894470215
    7. ' objet' → logprob: -3.8944830894470215
    8. ' article' → logprob: -4.2694830894470215
    9. ' jour' → logprob: -5.1444830894470215
    10. 's' → logprob: -5.2694830894470215

Token 144: ' d' (ID: 272)
  Prédit: ' entier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.5854976773262024
    2. ' de' → logprob: -2.5854976177215576
    3. ' d' → logprob: -2.7104976177215576
    4. ' donné' → logprob: -3.0854976177215576
    5. ' naturel' → logprob: -3.3354976177215576
    6. ' i' → logprob: -3.4604976177215576
    7. 's' → logprob: -3.4604976177215576
    8. ' entre' → logprob: -3.7104976177215576
    9. ' des' → logprob: -3.8354976177215576
    10. ' ' → logprob: -3.9604976177215576

Token 145: ''une' (ID: 13337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.38821205496788025
    2. 'e' → logprob: -2.263211965560913
    3. 'élé' → logprob: -2.763211965560913
    4. ' éléments' → logprob: -3.138211965560913
    5. 'a' → logprob: -3.763211965560913
    6. '=' → logprob: -5.013212203979492
    7. ''é' → logprob: -5.263212203979492
    8. '_' → logprob: -5.263212203979492
    9. '’' → logprob: -5.388212203979492
    10. 's' → logprob: -5.388212203979492

Token 146: ' sé' (ID: 7462)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.3933391273021698
    2. 'liste' → logprob: -1.2683391571044922
    3. 'suite' → logprob: -4.018339157104492
    4. ' suite' → logprob: -4.518339157104492
    5. 'sé' → logprob: -5.393339157104492
    6. ' sé' → logprob: -6.268339157104492
    7. 's' → logprob: -6.268339157104492
    8. ' tableau' → logprob: -6.518339157104492
    9. ' ' → logprob: -7.018339157104492
    10. 'ligne' → logprob: -7.268339157104492

Token 147: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.20184101164340973
    2. 'rie' → logprob: -1.7018409967422485
    3. '#' → logprob: -9.326841354370117
    4. 'q' → logprob: -9.701841354370117
    5. 'QUENCE' → logprob: -10.076841354370117
    6. 'ance' → logprob: -10.326841354370117
    7. 'r' → logprob: -10.826841354370117
    8. '-' → logprob: -10.826841354370117
    9. 'quences' → logprob: -11.201841354370117
    10. 'qu' → logprob: -11.201841354370117

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006782424170523882
    2. ' ,' → logprob: -7.500678062438965
    3. ',n' → logprob: -10.125678062438965
    4. 'n' → logprob: -10.375678062438965
    5. '#' → logprob: -10.500678062438965
    6. 's' → logprob: -12.500678062438965
    7. '#,' → logprob: -13.000678062438965
    8. ',
' → logprob: -13.125678062438965
    9. ',#' → logprob: -13.125678062438965
    10. ',i' → logprob: -13.125678062438965

Token 149: ' s' (ID: 265)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -1.4403215646743774
    2. 'si' → logprob: -1.5653215646743774
    3. 's' → logprob: -1.6903215646743774
    4. 'comment' → logprob: -2.315321445465088
    5. '#' → logprob: -2.690321445465088
    6. ' s' → logprob: -2.940321445465088
    7. ' combien' → logprob: -3.315321445465088
    8. 'quelle' → logprob: -3.440321445465088
    9. 'whether' → logprob: -3.690321445465088
    10. 'quel' → logprob: -4.190321445465088

Token 150: ''il' (ID: 14683)
  Prédit: ''il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.9669245481491089
    2. 'u' → logprob: -1.2169245481491089
    3. 'on' → logprob: -1.5919245481491089
    4. ''on' → logprob: -2.3419246673583984
    5. 'ont' → logprob: -4.841924667358398
    6. 'e' → logprob: -5.216924667358398
    7. 'i' → logprob: -5.716924667358398
    8. 'il' → logprob: -5.966924667358398
    9. 'ur' → logprob: -6.716924667358398
    10. 'a' → logprob: -7.341924667358398

Token 151: ' faut' (ID: 17821)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.40006372332572937
    2. ' faut' → logprob: -1.2750637531280518
    3. ' vaut' → logprob: -3.5250637531280518
    4. ' convient' → logprob: -5.525063514709473
    5. 'est' → logprob: -5.900063514709473
    6. 'continue' → logprob: -6.275063514709473
    7. ' doit' → logprob: -6.400063514709473
    8. 'fa' → logprob: -6.525063514709473
    9. 'conv' → logprob: -6.650063514709473
    10. '```' → logprob: -6.650063514709473

Token 152: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.2816498279571533
    2. 'prendre' → logprob: -1.2816498279571533
    3. 'incl' → logprob: -1.7816498279571533
    4. 'l' → logprob: -2.5316498279571533
    5. ' le' → logprob: -2.9066498279571533
    6. ' incl' → logprob: -3.4066498279571533
    7. 'contin' → logprob: -3.7816498279571533
    8. 'aj' → logprob: -3.7816498279571533
    9. ' prendre' → logprob: -3.9066498279571533
    10. ' l' → logprob: -4.031649589538574

Token 153: ' placer' (ID: 55591)
  Prédit: 'prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prendre' → logprob: -0.12645192444324493
    2. 'incl' → logprob: -3.0014519691467285
    3. 'mettre' → logprob: -3.8764519691467285
    4. 'aj' → logprob: -4.2514519691467285
    5. ' prendre' → logprob: -4.2514519691467285
    6. ' incl' → logprob: -5.1264519691467285
    7. 'con' → logprob: -6.5014519691467285
    8. 'contin' → logprob: -6.7514519691467285
    9. 'sé' → logprob: -6.8764519691467285
    10. 'reten' → logprob: -7.0014519691467285

Token 154: ' tel' (ID: 10716)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.27979108691215515
    2. '#' → logprob: -2.2797911167144775
    3. ' dans' → logprob: -2.4047911167144775
    4. ' ' → logprob: -4.029790878295898
    5. 'sur' → logprob: -4.654790878295898
    6. ',' → logprob: -5.279790878295898
    7. 'à' → logprob: -5.654790878295898
    8. 'import' → logprob: -5.779790878295898
    9. ' à' → logprob: -6.279790878295898
    10. 's' → logprob: -6.529790878295898

Token 155: ' quel' (ID: 10613)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.22189702093601227
    2. 'ou' → logprob: -2.5968971252441406
    3. '#' → logprob: -3.3468971252441406
    4. '```' → logprob: -3.3468971252441406
    5. ' que' → logprob: -3.4718971252441406
    6. ' ou' → logprob: -4.721897125244141
    7. 'qu' → logprob: -4.971897125244141
    8. 'u' → logprob: -5.846897125244141
    9. 'quel' → logprob: -7.471897125244141
    10. ' ' → logprob: -7.471897125244141

Token 156: ',' (ID: 11)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.7034186124801636
    2. ',' → logprob: -1.3284186124801636
    3. '#' → logprob: -1.9534186124801636
    4. ' ou' → logprob: -2.328418731689453
    5. 'import' → logprob: -8.453418731689453
    6. 'or' → logprob: -8.453418731689453
    7. '```' → logprob: -8.828418731689453
    8. ' or' → logprob: -9.328418731689453
    9. 'dans' → logprob: -9.578418731689453
    10. ' #' → logprob: -9.953418731689453

Token 157: ' le' (ID: 505)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4743003249168396
    2. ' le' → logprob: -1.3493003845214844
    3. 'le' → logprob: -2.4743003845214844
    4. ' ou' → logprob: -3.9743003845214844
    5. ' #' → logprob: -4.974300384521484
    6. 'ou' → logprob: -5.599300384521484
    7. 's' → logprob: -6.474300384521484
    8. ' ajouter' → logprob: -6.974300384521484
    9. 'aj' → logprob: -7.849300384521484
    10. ' multiplier' → logprob: -8.349300384521484

Token 158: ' déplacer' (ID: 142135)
  Prédit: 'mult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mult' → logprob: -2.144510507583618
    2. ' remplacer' → logprob: -2.144510507583618
    3. 'transform' → logprob: -2.269510507583618
    4. 'mettre' → logprob: -2.394510507583618
    5. ' multiplier' → logprob: -2.644510507583618
    6. 'modifier' → logprob: -2.769510507583618
    7. 'sup' → logprob: -3.019510507583618
    8. '#' → logprob: -3.269510507583618
    9. 'd' → logprob: -3.269510507583618
    10. ' doub' → logprob: -3.644510507583618

Token 159: ' à' (ID: 1221)
  Prédit: ' ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.4981236457824707
    2. ',' → logprob: -0.9981236457824707
    3. 'ou' → logprob: -4.623123645782471
    4. ' vers' → logprob: -5.373123645782471
    5. '#' → logprob: -5.998123645782471
    6. ' ' → logprob: -6.248123645782471
    7. 'dans' → logprob: -6.623123645782471
    8. ' ,' → logprob: -7.123123645782471
    9. 'vers' → logprob: -7.248123645782471
    10. ' à' → logprob: -8.123123168945312

Token 160: ' gauche' (ID: 58367)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9548019170761108
    2. ' gauche' → logprob: -1.4548019170761108
    3. ' une' → logprob: -1.7048019170761108
    4. ' droite' → logprob: -2.8298020362854004
    5. ' l' → logprob: -3.3298020362854004
    6. 'la' → logprob: -3.9548020362854004
    7. 'une' → logprob: -3.9548020362854004
    8. ' ' → logprob: -4.5798020362854
    9. 'g' → logprob: -4.7048020362854
    10. ' un' → logprob: -4.8298020362854

Token 161: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17755335569381714
    2. ' ou' → logprob: -2.302553415298462
    3. 'ou' → logprob: -2.802553415298462
    4. '#' → logprob: -6.552553176879883
    5. ' ,' → logprob: -7.802553176879883
    6. ' ' → logprob: -9.302553176879883
    7. ' or' → logprob: -10.677553176879883
    8. 'or' → logprob: -11.177553176879883
    9. ')' → logprob: -11.427553176879883
    10. ',
' → logprob: -11.802553176879883

Token 162: ' à' (ID: 1221)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.32940441370010376
    2. 'le' → logprob: -1.579404354095459
    3. ' à' → logprob: -3.329404354095459
    4. 'à' → logprob: -4.329404354095459
    5. ' l' → logprob: -4.579404354095459
    6. '#' → logprob: -5.204404354095459
    7. ' ' → logprob: -5.829404354095459
    8. 'l' → logprob: -7.079404354095459
    9. ' ' → logprob: -7.204404354095459
    10. ' droite' → logprob: -7.204404354095459

Token 163: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.008137448690831661
    2. ' droite' → logprob: -4.883137226104736
    3. 'd' → logprob: -8.258137702941895
    4. 'right' → logprob: -9.633137702941895
    5. '-dro' → logprob: -10.008137702941895
    6. '```' → logprob: -10.008137702941895
    7. '#' → logprob: -10.383137702941895
    8. 'l' → logprob: -10.883137702941895
    9. 'dr' → logprob: -11.008137702941895
    10. 'Dro' → logprob: -11.133137702941895

Token 164: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3786953389644623
    2. '
' → logprob: -2.503695249557495
    3. ':' → logprob: -2.753695249557495
    4. ',' → logprob: -2.878695249557495
    5. '.' → logprob: -3.253695249557495
    6. 'import' → logprob: -3.878695249557495
    7. '

' → logprob: -4.128695487976074
    8. '#' → logprob: -4.878695487976074
    9. 'n' → logprob: -4.878695487976074
    10. '```' → logprob: -5.628695487976074

Token 165: ' chaque' (ID: 21194)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15371327102184296
    2. 'def' → logprob: -2.1537132263183594
    3. 'import' → logprob: -4.528713226318359
    4. ' afin' → logprob: -5.653713226318359
    5. ' en' → logprob: -6.153713226318359
    6. 'dans' → logprob: -6.403713226318359
    7. 'en' → logprob: -6.903713226318359
    8. ' #' → logprob: -7.153713226318359
    9. 'for' → logprob: -7.278713226318359
    10. ' dans' → logprob: -7.403713226318359

Token 166: ' opération' (ID: 86023)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8969697952270508
    2. 'position' → logprob: -2.146969795227051
    3. ' déplacement' → logprob: -2.271969795227051
    4. 'élé' → logprob: -2.521969795227051
    5. 'nombre' → logprob: -2.771969795227051
    6. 'placement' → logprob: -3.271969795227051
    7. ' mouvement' → logprob: -3.771969795227051
    8. 'dé' → logprob: -3.896969795227051
    9. '```' → logprob: -4.021969795227051
    10. ' choix' → logprob: -4.271969795227051

Token 167: ' ayant' (ID: 45436)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8664799928665161
    2. 'import' → logprob: -2.4914798736572266
    3. 'n' → logprob: -2.8664798736572266
    4. ',' → logprob: -2.9914798736572266
    5. '```' → logprob: -3.2414798736572266
    6. 's' → logprob: -3.6164798736572266
    7. ')' → logprob: -3.6164798736572266
    8. ' ayant' → logprob: -3.7414798736572266
    9. '=' → logprob: -3.8664798736572266
    10. '#' → logprob: -3.9914798736572266

Token 168: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.08340457826852798
    2. 'un' → logprob: -2.708404541015625
    3. ' des' → logprob: -4.583404541015625
    4. 'des' → logprob: -6.583404541015625
    5. ' une' → logprob: -7.208404541015625
    6. 'une' → logprob: -7.333404541015625
    7. 'co' → logprob: -9.333404541015625
    8. '#' → logprob: -10.083404541015625
    9. '```' → logprob: -10.333404541015625
    10. '<|end|>' → logprob: -10.583404541015625

Token 169: ' certain' (ID: 4454)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.05709325149655342
    2. ' coût' → logprob: -2.9320931434631348
    3. 'cout' → logprob: -6.557093143463135
    4. 'certain' → logprob: -7.932093143463135
    5. 'c' → logprob: -8.807093620300293
    6. ' cout' → logprob: -9.182093620300293
    7. 'cost' → logprob: -10.307093620300293
    8. 'prix' → logprob: -10.307093620300293
    9. ' certain' → logprob: -10.807093620300293
    10. '#' → logprob: -10.807093620300293

Token 170: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.2038571536540985
    2. ' coût' → logprob: -1.703857183456421
    3. 'cout' → logprob: -6.578856945037842
    4. 'c' → logprob: -7.578856945037842
    5. '```' → logprob: -8.578857421875
    6. ' cout' → logprob: -8.828857421875
    7. 'cost' → logprob: -9.828857421875
    8. 'prix' → logprob: -9.953857421875
    9. ' co' → logprob: -10.453857421875
    10. '#' → logprob: -11.328857421875

Token 171: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8752442002296448
    2. '
' → logprob: -1.000244140625
    3. 'import' → logprob: -2.875244140625
    4. ',' → logprob: -3.125244140625
    5. '

' → logprob: -3.125244140625
    6. '#' → logprob: -4.500244140625
    7. '.' → logprob: -4.500244140625
    8. ':' → logprob: -4.750244140625
    9. 'dp' → logprob: -5.125244140625
    10. 'n' → logprob: -5.500244140625

Token 172: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9204686284065247
    2. 'def' → logprob: -1.0454685688018799
    3. 'n' → logprob: -1.5454685688018799
    4. 'class' → logprob: -4.670468807220459
    5. '#' → logprob: -4.670468807220459
    6. 'N' → logprob: -4.920468807220459
    7. 'from' → logprob: -5.545468807220459
    8. 'import' → logprob: -5.920468807220459
    9. 'max' → logprob: -6.420468807220459
    10. 'DP' → logprob: -7.670468807220459

Token 173: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09393233060836792
    2. 'n' → logprob: -2.5939323902130127
    3. 'from' → logprob: -5.343932151794434
    4. 'N' → logprob: -5.468932151794434
    5. 'class' → logprob: -5.718932151794434
    6. 'dp' → logprob: -6.843932151794434
    7. '#' → logprob: -7.468932151794434
    8. ' def' → logprob: -8.218932151794434
    9. ' n' → logprob: -8.718932151794434
    10. 'T' → logprob: -8.718932151794434

Token 174: ' lit' (ID: 11980)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1211024820804596
    2. ' =' → logprob: -3.2461025714874268
    3. ' n' → logprob: -3.8711025714874268
    4. 'n' → logprob: -4.121102333068848
    5. '=' → logprob: -4.496102333068848
    6. 'dp' → logprob: -5.621102333068848
    7. 'max' → logprob: -5.746102333068848
    8. '_' → logprob: -5.996102333068848
    9. 'for' → logprob: -5.996102333068848
    10. ' def' → logprob: -6.246102333068848

Token 175: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018121736124157906
    2. '(' → logprob: -4.768121719360352
    3. 'n' → logprob: -4.893121719360352
    4. ' ' → logprob: -8.018121719360352
    5. ' la' → logprob: -8.643121719360352
    6. '(n' → logprob: -8.768121719360352
    7. '<|end|>' → logprob: -8.893121719360352
    8. ' ()' → logprob: -9.268121719360352
    9. 's' → logprob: -9.268121719360352
    10. '<|end|>' → logprob: -9.518121719360352

Token 176: ' ligne' (ID: 19583)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1411147564649582
    2. 'nombre' → logprob: -2.8911147117614746
    3. 't' → logprob: -3.3911147117614746
    4. 'l' → logprob: -4.766114711761475
    5. 'ligne' → logprob: -5.516114711761475
    6. '
' → logprob: -5.641114711761475
    7. ' ' → logprob: -5.766114711761475
    8. ' nombre' → logprob: -5.891114711761475
    9. 'int' → logprob: -6.141114711761475
    10. 's' → logprob: -6.391114711761475

Token 177: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00708025274798274
    2. '=' → logprob: -5.882080078125
    3. 's' → logprob: -6.382080078125
    4. 'n' → logprob: -7.257080078125
    5. ' =' → logprob: -7.257080078125
    6. '().' → logprob: -8.507080078125
    7. 'data' → logprob: -9.257080078125
    8. ',' → logprob: -9.507080078125
    9. 'num' → logprob: -9.507080078125
    10. 'a' → logprob: -9.632080078125

Token 178: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08136844635009766
    2. 'entrée' → logprob: -3.0813684463500977
    3. ''entrée' → logprob: -4.331368446350098
    4. 'input' → logprob: -4.956368446350098
    5. 'code' → logprob: -5.331368446350098
    6. '=sys' → logprob: -6.206368446350098
    7. 'es' → logprob: -6.831368446350098
    8. ' input' → logprob: -7.081368446350098
    9. ' code' → logprob: -8.081368446350098
    10. '=input' → logprob: -8.206368446350098

Token 179: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3512566089630127
    2. '()' → logprob: -1.3512566089630127
    3. '(' → logprob: -3.8512566089630127
    4. '(n' → logprob: -5.101256370544434
    5. 'x' → logprob: -6.601256370544434
    6. '=' → logprob: -6.601256370544434
    7. 'nombre' → logprob: -6.976256370544434
    8. 'line' → logprob: -7.226256370544434
    9. 'data' → logprob: -7.351256370544434
    10. ',' → logprob: -7.726256370544434

Token 180: ' on' (ID: 402)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007137782406061888
    2. ' n' → logprob: -5.382137775421143
    3. 'N' → logprob: -6.007137775421143
    4. '```' → logprob: -10.7571382522583
    5. '
' → logprob: -11.1321382522583
    6. 't' → logprob: -12.2571382522583
    7. ' N' → logprob: -12.3821382522583
    8. 'k' → logprob: -13.7571382522583
    9. 'data' → logprob: -13.7571382522583
    10. ' 
' → logprob: -14.1321382522583

Token 181: ' la' (ID: 557)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36151817440986633
    2. ' =' → logprob: -1.361518144607544
    3. 's' → logprob: -4.111518383026123
    4. 'n' → logprob: -4.361518383026123
    5. 'split' → logprob: -5.236518383026123
    6. 'arr' → logprob: -5.861518383026123
    7. '=int' → logprob: -6.611518383026123
    8. 'a' → logprob: -7.111518383026123
    9. '=n' → logprob: -7.736518383026123
    10. '_' → logprob: -7.861518383026123

Token 182: ' décou' (ID: 68302)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41798272728919983
    2. 'split' → logprob: -1.1679826974868774
    3. ' =' → logprob: -3.917982816696167
    4. 's' → logprob: -5.167982578277588
    5. 'strip' → logprob: -5.917982578277588
    6. 'spl' → logprob: -7.417982578277588
    7. 'rstrip' → logprob: -7.792982578277588
    8. '_split' → logprob: -8.542983055114746
    9. ' split' → logprob: -8.792983055114746
    10. '=s' → logprob: -8.917983055114746

Token 183: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.023879945278167725
    2. 'per' → logprob: -4.3988800048828125
    3. 'page' → logprob: -5.2738800048828125
    4. 'p' → logprob: -5.5238800048828125
    5. 'pte' → logprob: -6.8988800048828125
    6. 'ppe' → logprob: -8.398880004882812
    7. 'nte' → logprob: -8.398880004882812
    8. 'pé' → logprob: -8.773880004882812
    9. 'pite' → logprob: -9.523880004882812
    10. 'pa' → logprob: -9.773880004882812

Token 184: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0076127792708575726
    2. '().' → logprob: -5.132612705230713
    3. 'tokens' → logprob: -7.632612705230713
    4. '[]' → logprob: -7.882612705230713
    5. '()[' → logprob: -9.382613182067871
    6. '=' → logprob: -9.507613182067871
    7. 'en' → logprob: -9.632613182067871
    8. '.' → logprob: -9.632613182067871
    9. ' =' → logprob: -9.757613182067871
    10. 's' → logprob: -9.882613182067871

Token 185: ' trois' (ID: 25564)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.935833215713501
    2. ' tokens' → logprob: -1.310833215713501
    3. ' nombres' → logprob: -2.060833215713501
    4. 'ent' → logprob: -2.185833215713501
    5. ' ent' → logprob: -2.810833215713501
    6. ' une' → logprob: -4.685832977294922
    7. ' liste' → logprob: -5.060832977294922
    8. ' integers' → logprob: -5.185832977294922
    9. 'n' → logprob: -5.685832977294922
    10. 'liste' → logprob: -5.935832977294922

Token 186: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.2747220993041992
    2. ' parts' → logprob: -1.6497220993041992
    3. 'part' → logprob: -1.6497220993041992
    4. 'parts' → logprob: -1.6497220993041992
    5. ' parties' → logprob: -3.149722099304199
    6. ' ent' → logprob: -4.274722099304199
    7. 'ints' → logprob: -4.274722099304199
    8. 'int' → logprob: -4.399722099304199
    9. 'variables' → logprob: -4.399722099304199
    10. 'val' → logprob: -4.524722099304199

Token 187: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.003613497130572796
    2. 'ières' → logprob: -6.003613471984863
    3. 'ités' → logprob: -7.378613471984863
    4. 'ites' → logprob: -9.628613471984863
    5. 'etes' → logprob: -9.628613471984863
    6. 'ier' → logprob: -9.753613471984863
    7. 'rees' → logprob: -9.878613471984863
    8. 'ities' → logprob: -10.003613471984863
    9. 'ries' → logprob: -10.253613471984863
    10. 'r' → logprob: -10.503613471984863

Token 188: ' et' (ID: 859)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6543942093849182
    2. 'n' → logprob: -0.7793942093849182
    3. ',' → logprob: -4.404394149780273
    4. ' a' → logprob: -5.529394149780273
    5. ' n' → logprob: -6.029394149780273
    6. 'x' → logprob: -8.029394149780273
    7. 'numbers' → logprob: -8.029394149780273
    8. 's' → logprob: -8.154394149780273
    9. 'nums' → logprob: -8.404394149780273
    10. 'l' → logprob: -8.404394149780273

Token 189: ' on' (ID: 402)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4394053220748901
    2. 'on' → logprob: -1.5644053220748901
    3. ' on' → logprob: -1.8144053220748901
    4. 'stock' → logprob: -2.3144054412841797
    5. 'les' → logprob: -2.4394054412841797
    6. ' stock' → logprob: -3.3144054412841797
    7. ' les' → logprob: -3.4394054412841797
    8. 'l' → logprob: -3.5644054412841797
    9. 'x' → logprob: -3.6894054412841797
    10. 'r' → logprob: -3.8144054412841797

Token 190: ' les' (ID: 1341)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37389904260635376
    2. ' =' → logprob: -1.248898983001709
    3. 's' → logprob: -4.623898983001709
    4. ',' → logprob: -5.623898983001709
    5. '=input' → logprob: -5.748898983001709
    6. 'split' → logprob: -6.498898983001709
    7. 'n' → logprob: -6.498898983001709
    8. 'a' → logprob: -6.748898983001709
    9. '=int' → logprob: -7.748898983001709
    10. 'for' → logprob: -8.623899459838867

Token 191: ' affect' (ID: 7902)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19031435251235962
    2. ' =' → logprob: -2.565314292907715
    3. 'map' → logprob: -2.940314292907715
    4. 'split' → logprob: -4.065314292907715
    5. ' map' → logprob: -4.940314292907715
    6. 's' → logprob: -5.065314292907715
    7. ' récup' → logprob: -5.815314292907715
    8. 'r' → logprob: -5.940314292907715
    9. '_map' → logprob: -6.065314292907715
    10. ' split' → logprob: -7.440314292907715

Token 192: 'e' (ID: 68)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08262298256158829
    2. 'e' → logprob: -2.58262300491333
    3. ' =' → logprob: -6.33262300491333
    4. 'er' → logprob: -6.45762300491333
    5. 'ant' → logprob: -8.832622528076172
    6. 'ent' → logprob: -9.707622528076172
    7. '=e' → logprob: -10.082622528076172
    8. 'a' → logprob: -10.332622528076172
    9. 's' → logprob: -11.332622528076172
    10. '=input' → logprob: -11.707622528076172

Token 193: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18114100396633148
    2. '=' → logprob: -2.556140899658203
    3. 'n' → logprob: -3.181140899658203
    4. ' =' → logprob: -3.806140899658203
    5. 'x' → logprob: -4.931140899658203
    6. ' a' → logprob: -5.056140899658203
    7. 'A' → logprob: -5.806140899658203
    8. 'N' → logprob: -6.431140899658203
    9. 's' → logprob: -6.931140899658203
    10. ',' → logprob: -7.431140899658203

Token 194: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6388475894927979
    2. 'a' → logprob: -1.1388475894927979
    3. 'N' → logprob: -2.388847589492798
    4. 'l' → logprob: -4.138847351074219
    5. 'A' → logprob: -4.513847351074219
    6. 'x' → logprob: -5.013847351074219
    7. ' n' → logprob: -5.013847351074219
    8. 'h' → logprob: -5.763847351074219
    9. 'L' → logprob: -5.888847351074219
    10. ' a' → logprob: -6.263847351074219

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007369658560492098
    2. ',N' → logprob: -8.000737190246582
    3. ' ,' → logprob: -8.625737190246582
    4. ',n' → logprob: -9.375737190246582
    5. ',L' → logprob: -10.500737190246582
    6. ',T' → logprob: -10.875737190246582
    7. ',a' → logprob: -10.875737190246582
    8. 'a' → logprob: -11.500737190246582
    9. ',l' → logprob: -11.750737190246582
    10. 'N' → logprob: -12.000737190246582

Token 196: ' A' (ID: 355)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.5603440999984741
    2. 'A' → logprob: -1.5603440999984741
    3. 'M' → logprob: -3.0603442192077637
    4. 'X' → logprob: -3.1853442192077637
    5. 'K' → logprob: -3.4353442192077637
    6. 'D' → logprob: -3.8103442192077637
    7. 'C' → logprob: -3.8103442192077637
    8. 'S' → logprob: -4.935344219207764
    9. 'a' → logprob: -4.935344219207764
    10. 'G' → logprob: -5.310344219207764

Token 197: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016563729150220752
    2. ',B' → logprob: -9.875165939331055
    3. ' ,' → logprob: -9.875165939331055
    4. 'et' → logprob: -10.000165939331055
    5. 'B' → logprob: -12.125165939331055
    6. ',C' → logprob: -13.250165939331055
    7. ' et' → logprob: -13.750165939331055
    8. 'C' → logprob: -13.875165939331055
    9. ',M' → logprob: -13.875165939331055
    10. ',D' → logprob: -14.000165939331055

Token 198: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.02133292704820633
    2. 'D' → logprob: -4.896332740783691
    3. 'C' → logprob: -5.021332740783691
    4. ' B' → logprob: -5.521332740783691
    5. 'M' → logprob: -6.646332740783691
    6. 'K' → logprob: -7.146332740783691
    7. 'P' → logprob: -8.646332740783691
    8. 'L' → logprob: -8.646332740783691
    9. 'R' → logprob: -8.896332740783691
    10. 'S' → logprob: -9.396332740783691

Token 199: ' respect' (ID: 5618)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.014190302230417728
    2. '=' → logprob: -4.389190196990967
    3. ' =' → logprob: -6.889190196990967
    4. '(N' → logprob: -8.764190673828125
    5. 'n' → logprob: -9.014190673828125
    6. ' N' → logprob: -9.639190673828125
    7. '(' → logprob: -9.764190673828125
    8. ',' → logprob: -10.014190673828125
    9. 'for' → logprob: -10.389190673828125
    10. 'input' → logprob: -10.514190673828125

Token 200: 'ivement' (ID: 37978)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2939601540565491
    2. 'ect' → logprob: -2.0439600944519043
    3. 'ivement' → logprob: -2.6689600944519043
    4. 'ent' → logprob: -4.418960094451904
    5. ' =' → logprob: -4.418960094451904
    6. 'ects' → logprob: -4.418960094451904
    7. '=sys' → logprob: -5.543960094451904
    8. 'ant' → logprob: -5.668960094451904
    9. 'ected' → logprob: -6.543960094451904
    10. '=N' → logprob: -6.918960094451904

Token 201: '.
' (ID: 558)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0034803354647010565
    2. '=' → logprob: -6.253480434417725
    3. '(N' → logprob: -7.003480434417725
    4. '(' → logprob: -8.503479957580566
    5. ' =' → logprob: -8.878479957580566
    6. 'n' → logprob: -9.628479957580566
    7. 'for' → logprob: -10.003479957580566
    8. '\n' → logprob: -10.128479957580566
    9. '=N' → logprob: -10.753479957580566
    10. ',' → logprob: -10.878479957580566

Token 202: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0013839246239513159
    2. '=' → logprob: -7.3763837814331055
    3. ' =' → logprob: -7.7513837814331055
    4. '\n' → logprob: -9.001383781433105
    5. 'n' → logprob: -9.751383781433105
    6. ' N' → logprob: -10.376383781433105
    7. '(N' → logprob: -10.751383781433105
    8. '```' → logprob: -11.251383781433105
    9. '=N' → logprob: -11.376383781433105
    10. '
' → logprob: -11.626383781433105

Token 203: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.273621405242011e-05
    2. '=' → logprob: -11.500032424926758
    3. 'n' → logprob: -12.000032424926758
    4. ' N' → logprob: -12.250032424926758
    5. '#' → logprob: -13.125032424926758
    6. '(N' → logprob: -13.250032424926758
    7. '
' → logprob: -13.375032424926758
    8. ' =' → logprob: -13.750032424926758
    9. '=N' → logprob: -14.000032424926758
    10. ',' → logprob: -14.250032424926758

Token 204: ' est' (ID: 893)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012558852904476225
    2. ',A' → logprob: -9.000125885009766
    3. ' ,' → logprob: -13.500125885009766
    4. '=' → logprob: -15.375125885009766
    5. ' =' → logprob: -15.875125885009766
    6. 'A' → logprob: -16.000125885009766
    7. ',N' → logprob: -16.125125885009766
    8. ',
' → logprob: -17.000125885009766
    9. ',B' → logprob: -17.000125885009766
    10. ',a' → logprob: -17.250125885009766

Token 205: ' le' (ID: 505)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014151519164443016
    2. ' la' → logprob: -4.764151573181152
    3. ' ,' → logprob: -7.139151573181152
    4. ',N' → logprob: -7.389151573181152
    5. 'int' → logprob: -7.639151573181152
    6. ' =' → logprob: -7.764151573181152
    7. ',int' → logprob: -7.764151573181152
    8. ' une' → logprob: -8.014151573181152
    9. 'la' → logprob: -8.014151573181152
    10. 'l' → logprob: -8.139151573181152

Token 206: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.062291886657476425
    2. ' nombre' → logprob: -2.8122918605804443
    3. 'int' → logprob: -8.562292098999023
    4. 'n' → logprob: -9.812292098999023
    5. 'nb' → logprob: -10.562292098999023
    6. 'Nombre' → logprob: -11.437292098999023
    7. 'number' → logprob: -11.687292098999023
    8. '_nombre' → logprob: -11.687292098999023
    9. 'ent' → logprob: -11.812292098999023
    10. 'prem' → logprob: -12.437292098999023

Token 207: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019069778500124812
    2. ' ,' → logprob: -7.251906871795654
    3. 'des' → logprob: -7.876906871795654
    4. ',N' → logprob: -8.251907348632812
    5. ' =' → logprob: -8.876907348632812
    6. ',A' → logprob: -9.376907348632812
    7. '=' → logprob: -9.751907348632812
    8. ',val' → logprob: -10.001907348632812
    9. 'de' → logprob: -10.376907348632812
    10. ' des' → logprob: -10.876907348632812

Token 208: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.10164164751768112
    2. ' éléments' → logprob: -2.4766416549682617
    3. ''ent' → logprob: -5.601641654968262
    4. 'é' → logprob: -6.351641654968262
    5. 'ent' → logprob: -6.601641654968262
    6. 'ombres' → logprob: -6.851641654968262
    7. ' ' → logprob: -7.226641654968262
    8. 'elements' → logprob: -7.351641654968262
    9. ''' → logprob: -7.601641654968262
    10. 'éc' → logprob: -7.726641654968262

Token 209: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.012114722281694412
    2. ' éléments' → logprob: -4.637114524841309
    3. 'é' → logprob: -7.387114524841309
    4. 'elements' → logprob: -7.512114524841309
    5. 'ent' → logprob: -7.887114524841309
    6. 'obj' → logprob: -8.887114524841309
    7. 'éc' → logprob: -9.012114524841309
    8. 'val' → logprob: -9.387114524841309
    9. 'items' → logprob: -9.887114524841309
    10. 'él' → logprob: -10.262114524841309

Token 210: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.002401220379397273
    2. 'ements' → logprob: -6.627401351928711
    3. 'éments' → logprob: -6.877401351928711
    4. 'ment' → logprob: -11.627401351928711
    5. '   ' → logprob: -11.752401351928711
    6. 'ents' → logprob: -12.002401351928711
    7. '#' → logprob: -12.752401351928711
    8. 'phants' → logprob: -13.127401351928711
    9. 'MENTS' → logprob: -13.502401351928711
    10. '=' → logprob: -13.627401351928711

Token 211: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005039428360760212
    2. ' =' → logprob: -8.500503540039062
    3. '=' → logprob: -9.000503540039062
    4. ',A' → logprob: -9.875503540039062
    5. ',N' → logprob: -9.875503540039062
    6. ' ,' → logprob: -10.000503540039062
    7. ',input' → logprob: -11.250503540039062
    8. ',n' → logprob: -12.250503540039062
    9. ',
' → logprob: -13.000503540039062
    10. '=input' → logprob: -13.375503540039062

Token 212: ' la' (ID: 557)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8554521203041077
    2. 'la' → logprob: -1.480452060699463
    3. ' la' → logprob: -1.980452060699463
    4. ' input' → logprob: -2.105452060699463
    5. 'l' → logprob: -3.230452060699463
    6. 'sys' → logprob: -4.105452060699463
    7. ' sys' → logprob: -4.230452060699463
    8. 't' → logprob: -5.980452060699463
    9. 'liste' → logprob: -6.105452060699463
    10. 'entrée' → logprob: -6.230452060699463

Token 213: ' sé' (ID: 7462)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.24432356655597687
    2. 'sé' → logprob: -2.494323492050171
    3. 'suite' → logprob: -3.119323492050171
    4. 'sequence' → logprob: -3.369323492050171
    5. 'input' → logprob: -3.744323492050171
    6. ' liste' → logprob: -4.99432373046875
    7. 'list' → logprob: -5.11932373046875
    8. 'ligne' → logprob: -5.49432373046875
    9. 'table' → logprob: -5.74432373046875
    10. 'entrée' → logprob: -5.86932373046875

Token 214: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -1.9623810658231378e-05
    2. 'q' → logprob: -11.875020027160645
    3. 'rie' → logprob: -12.500020027160645
    4. 'quences' → logprob: -12.500020027160645
    5. 'QUENCE' → logprob: -12.625020027160645
    6. '#' → logprob: -14.750020027160645
    7. 'qu' → logprob: -14.875020027160645
    8. 'que' → logprob: -15.000020027160645
    9. '=' → logprob: -15.125020027160645
    10. '`' → logprob: -16.000019073486328

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03906164690852165
    2. 'N' → logprob: -4.164061546325684
    3. '=' → logprob: -4.789061546325684
    4. ',N' → logprob: -4.914061546325684
    5. ' =' → logprob: -5.039061546325684
    6. ',
' → logprob: -8.414061546325684
    7. '=N' → logprob: -8.789061546325684
    8. ' N' → logprob: -9.289061546325684
    9. ',A' → logprob: -10.664061546325684
    10. 'A' → logprob: -10.789061546325684

Token 216: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.008471081033349037
    2. ' A' → logprob: -4.8834710121154785
    3. 'C' → logprob: -7.1334710121154785
    4. 'a' → logprob: -10.633471488952637
    5. ',' → logprob: -11.383471488952637
    6. 'L' → logprob: -12.133471488952637
    7. 'M' → logprob: -12.508471488952637
    8. 'c' → logprob: -12.633471488952637
    9. ' C' → logprob: -12.883471488952637
    10. 'T' → logprob: -13.008471488952637

Token 217: ' est' (ID: 893)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -4.906711546937004e-05
    2. ',B' → logprob: -10.125048637390137
    3. ',
' → logprob: -12.125048637390137
    4. ' ,' → logprob: -12.875048637390137
    5. ',

' → logprob: -15.750048637390137
    6. ',b' → logprob: -15.750048637390137
    7. '=' → logprob: -15.875048637390137
    8. 'et' → logprob: -16.500049591064453
    9. ',\
' → logprob: -16.500049591064453
    10. '

' → logprob: -17.375049591064453

Token 218: ' le' (ID: 505)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.37334144115448
    2. ' la' → logprob: -2.7483415603637695
    3. 'l' → logprob: -2.9983415603637695
    4. ' int' → logprob: -3.4983415603637695
    5. ' N' → logprob: -3.6233415603637695
    6. ',' → logprob: -3.8733415603637695
    7. 'N' → logprob: -3.9983415603637695
    8. 'le' → logprob: -4.2483415603637695
    9. 'B' → logprob: -4.6233415603637695
    10. 'la' → logprob: -4.6233415603637695

Token 219: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.057218894362449646
    2. 'cost' → logprob: -3.5572187900543213
    3. ' coût' → logprob: -4.6822190284729
    4. 'int' → logprob: -4.9322190284729
    5. 'cout' → logprob: -5.4322190284729
    6. 'c' → logprob: -7.0572190284729
    7. ' cost' → logprob: -7.1822190284729
    8. 'max' → logprob: -7.1822190284729
    9. ' co' → logprob: -7.5572190284729
    10. 'prix' → logprob: -7.5572190284729

Token 220: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027436546981334686
    2. ' ,' → logprob: -4.77743673324585
    3. '=' → logprob: -5.02743673324585
    4. ' =' → logprob: -5.77743673324585
    5. ',
' → logprob: -6.15243673324585
    6. '_d' → logprob: -6.40243673324585
    7. '_' → logprob: -7.15243673324585
    8. ' de' → logprob: -7.52743673324585
    9. 'de' → logprob: -7.52743673324585
    10. ',d' → logprob: -7.77743673324585

Token 221: ' déplacer' (ID: 142135)
  Prédit: ' dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dé' → logprob: -1.490427017211914
    2. 'dé' → logprob: -1.490427017211914
    3. 'd' → logprob: -1.865427017211914
    4. ' déplacement' → logprob: -2.115427017211914
    5. 'l' → logprob: -2.490427017211914
    6. ' déplacer' → logprob: -2.615427017211914
    7. ' d' → logprob: -3.240427017211914
    8. ' l' → logprob: -3.490427017211914
    9. ' la' → logprob: -4.365427017211914
    10. ' insertion' → logprob: -5.615427017211914

Token 222: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.051642801612615585
    2. 'un' → logprob: -3.176642894744873
    3. ' à' → logprob: -5.801642894744873
    4. ' ' → logprob: -5.801642894744873
    5. 'à' → logprob: -7.676642894744873
    6. '<|end|>' → logprob: -7.676642894744873
    7. ' une' → logprob: -7.801642894744873
    8. ' vers' → logprob: -7.801642894744873
    9. 'le' → logprob: -9.051642417907715
    10. 'de' → logprob: -9.176642417907715

Token 223: ' nombre' (ID: 9733)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.02235511690378189
    2. ' élément' → logprob: -4.272355079650879
    3. ' ' → logprob: -5.647355079650879
    4. 'd' → logprob: -6.772355079650879
    5. 'dé' → logprob: -7.147355079650879
    6. 'nombre' → logprob: -7.272355079650879
    7. ' nombre' → logprob: -7.272355079650879
    8. ' d' → logprob: -8.522355079650879
    9. 'element' → logprob: -8.772355079650879
    10. ' déplacement' → logprob: -9.272355079650879

Token 224: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8106434941291809
    2. ' vers' → logprob: -0.9356434941291809
    3. ' ' → logprob: -1.9356434345245361
    4. ' d' → logprob: -5.185643672943115
    5. ',' → logprob: -5.435643672943115
    6. ' ,' → logprob: -5.685643672943115
    7. ' de' → logprob: -5.810643672943115
    8. 'à' → logprob: -6.935643672943115
    9. 'vers' → logprob: -8.435643196105957
    10. 'd' → logprob: -8.435643196105957

Token 225: ' droite' (ID: 61428)
  Prédit: ' gauche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -0.0808168426156044
    2. ' droite' → logprob: -2.9558167457580566
    3. 'g' → logprob: -4.330816745758057
    4. 'l' → logprob: -4.955816745758057
    5. ' ' → logprob: -5.580816745758057
    6. ' l' → logprob: -7.580816745758057
    7. 'dro' → logprob: -7.580816745758057
    8. '_g' → logprob: -8.830817222595215
    9. ' ' → logprob: -9.080817222595215
    10. 'd' → logprob: -9.455817222595215

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002074483083561063
    2. ' ,' → logprob: -6.752074718475342
    3. ',
' → logprob: -8.002074241638184
    4. ')' → logprob: -8.127074241638184
    5. 'et' → logprob: -9.377074241638184
    6. '#' → logprob: -10.252074241638184
    7. ' et' → logprob: -10.502074241638184
    8. ' ' → logprob: -10.502074241638184
    9. 'ou' → logprob: -11.002074241638184
    10. '=' → logprob: -11.252074241638184

Token 227: ' et' (ID: 859)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4315301775932312
    2. ' B' → logprob: -1.181530237197876
    3. 'C' → logprob: -3.681530237197876
    4. '<|end|>' → logprob: -4.931529998779297
    5. ' ' → logprob: -5.806529998779297
    6. ' C' → logprob: -5.931529998779297
    7. '#' → logprob: -6.056529998779297
    8. 'et' → logprob: -7.056529998779297
    9. ' #' → logprob: -7.306529998779297
    10. ' 
' → logprob: -7.931529998779297

Token 228: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.25405240058898926
    2. 'B' → logprob: -1.5040524005889893
    3. ' ' → logprob: -6.37905216217041
    4. 'C' → logprob: -8.62905216217041
    5. ' C' → logprob: -9.37905216217041
    6. ' ' → logprob: -9.37905216217041
    7. '#' → logprob: -11.50405216217041
    8. 'A' → logprob: -11.87905216217041
    9. ' #' → logprob: -11.87905216217041
    10. 's' → logprob: -12.50405216217041

Token 229: ' celui' (ID: 27857)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.0071382587775588036
    2. 'est' → logprob: -6.382138252258301
    3. ' ' → logprob: -6.632138252258301
    4. ' =' → logprob: -6.632138252258301
    5. ' le' → logprob: -7.257138252258301
    6. 'le' → logprob: -7.507138252258301
    7. ' ' → logprob: -8.0071382522583
    8. ',' → logprob: -8.2571382522583
    9. '=' → logprob: -8.2571382522583
    10. ' à' → logprob: -8.5071382522583

Token 230: ' pour' (ID: 1930)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.25649428367614746
    2. 'de' → logprob: -2.1314942836761475
    3. ' à' → logprob: -2.8814942836761475
    4. '#' → logprob: -3.7564942836761475
    5. 'à' → logprob: -4.631494522094727
    6. '=' → logprob: -5.381494522094727
    7. ' d' → logprob: -5.756494522094727
    8. ' =' → logprob: -5.756494522094727
    9. 'd' → logprob: -6.131494522094727
    10. ' #' → logprob: -6.506494522094727

Token 231: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7169551849365234
    2. ' le' → logprob: -0.7169551849365234
    3. 'dé' → logprob: -4.466955184936523
    4. ' déplacer' → logprob: -4.841955184936523
    5. 'la' → logprob: -6.966955184936523
    6. 'à' → logprob: -7.216955184936523
    7. 'g' → logprob: -7.591955184936523
    8. 'de' → logprob: -7.591955184936523
    9. ' la' → logprob: -8.341955184936523
    10. ' gauche' → logprob: -8.341955184936523

Token 232: ' déplacer' (ID: 142135)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.5000045895576477
    2. 'co' → logprob: -1.125004529953003
    3. 'g' → logprob: -3.375004529953003
    4. ' déplacer' → logprob: -3.750004529953003
    5. 'd' → logprob: -4.875004768371582
    6. 'c' → logprob: -7.500004768371582
    7. 'à' → logprob: -7.750004768371582
    8. ' dé' → logprob: -7.875004768371582
    9. 'dro' → logprob: -7.875004768371582
    10. 'cost' → logprob: -8.125004768371582

Token 233: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.2575308680534363
    2. ' à' → logprob: -1.507530927658081
    3. ' ' → logprob: -6.132530689239502
    4. '=' → logprob: -6.507530689239502
    5. ' =' → logprob: -6.757530689239502
    6. 'a' → logprob: -8.75753116607666
    7. ' vers' → logprob: -9.13253116607666
    8. ''à' → logprob: -9.38253116607666
    9. ' a' → logprob: -9.63253116607666
    10. 'vers' → logprob: -9.75753116607666

Token 234: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.07069800794124603
    2. ' gauche' → logprob: -2.6956980228424072
    3. 'left' → logprob: -7.320697784423828
    4. '_g' → logprob: -10.070697784423828
    5. 'l' → logprob: -10.945697784423828
    6. '```' → logprob: -11.570697784423828
    7. '	g' → logprob: -12.320697784423828
    8. ' g' → logprob: -12.570697784423828
    9. ' ' → logprob: -12.820697784423828
    10. 'ga' → logprob: -13.070697784423828

Token 235: '.
' (ID: 558)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00360019039362669
    2. '
' → logprob: -6.378600120544434
    3. 'n' → logprob: -6.878600120544434
    4. '(N' → logprob: -8.503600120544434
    5. 'line' → logprob: -9.003600120544434
    6. ' N' → logprob: -9.378600120544434
    7. ')' → logprob: -9.503600120544434
    8. '=' → logprob: -9.628600120544434
    9. '\n' → logprob: -9.878600120544434
    10. ' =' → logprob: -10.003600120544434

Token 236: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.007420510519295931
    2. '\n' → logprob: -5.507420539855957
    3. 'n' → logprob: -6.382420539855957
    4. '
' → logprob: -7.882420539855957
    5. 'line' → logprob: -8.132420539855957
    6. 'data' → logprob: -8.507420539855957
    7. '(N' → logprob: -8.507420539855957
    8. ' N' → logprob: -9.507420539855957
    9. ',' → logprob: -9.757420539855957
    10. '\' → logprob: -9.757420539855957

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.945094355614856e-05
    2. ',A' → logprob: -9.625069618225098
    3. ' ,' → logprob: -13.250069618225098
    4. ',
' → logprob: -13.625069618225098
    5. 'A' → logprob: -15.500069618225098
    6. ',B' → logprob: -17.00006866455078
    7. ',

' → logprob: -17.87506866455078
    8. ',a' → logprob: -18.50006866455078
    9. ',\
' → logprob: -18.75006866455078
    10. '=' → logprob: -19.00006866455078

Token 238: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.005235529970377684
    2. ' A' → logprob: -5.25523567199707
    3. '*A' → logprob: -14.00523567199707
    4. ',A' → logprob: -14.50523567199707
    5. '*' → logprob: -15.88023567199707
    6. 'a' → logprob: -16.00523567199707
    7. ' ' → logprob: -16.63023567199707
    8. ',' → logprob: -17.38023567199707
    9. '	A' → logprob: -18.13023567199707
    10. '  ' → logprob: -18.38023567199707

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0921942703134846e-05
    2. ' ,' → logprob: -11.75001049041748
    3. ',B' → logprob: -12.75001049041748
    4. ',
' → logprob: -17.750011444091797
    5. ',b' → logprob: -18.000011444091797
    6. 'B' → logprob: -18.250011444091797
    7. '_,' → logprob: -19.125011444091797
    8. ',\
' → logprob: -19.375011444091797
    9. ',N' → logprob: -20.125011444091797
    10. '‌,' → logprob: -20.375011444091797

Token 240: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.20142191648483276
    2. ' B' → logprob: -1.7014219760894775
    3. ' ' → logprob: -11.951421737670898
    4. ' ' → logprob: -14.076421737670898
    5. '_B' → logprob: -14.826421737670898
    6. '  ' → logprob: -15.451421737670898
    7. ',' → logprob: -15.701421737670898
    8. 'b' → logprob: -16.0764217376709
    9. '=B' → logprob: -16.0764217376709
    10. '	B' → logprob: -16.2014217376709

Token 241: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007697956636548042
    2. ' =' → logprob: -4.882698059082031
    3. '=input' → logprob: -9.382698059082031
    4. ',' → logprob: -12.257698059082031
    5. '=int' → logprob: -13.757698059082031
    6. ')' → logprob: -14.757698059082031
    7. '=N' → logprob: -14.882698059082031
    8. '=
' → logprob: -15.132698059082031
    9. '=A' → logprob: -15.382698059082031
    10. ')=' → logprob: -15.882698059082031

Token 242: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.014163747429847717
    2. ' map' → logprob: -4.264163970947266
    3. '	map' → logprob: -16.264163970947266
    4. '(map' → logprob: -16.639163970947266
    5. '.map' → logprob: -17.764163970947266
    6. 'm' → logprob: -18.139163970947266
    7. 'input' → logprob: -18.139163970947266
    8. '_map' → logprob: -18.264163970947266
    9. ' ' → logprob: -19.139163970947266
    10. 'tuple' → logprob: -19.514163970947266

Token 243: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00010044389637187123
    2. '(' → logprob: -9.250100135803223
    3. 'int' → logprob: -12.375100135803223
    4. ' int' → logprob: -18.12510108947754
    5. ' (' → logprob: -18.75010108947754
    6. '(
' → logprob: -18.87510108947754
    7. '<int' → logprob: -19.75010108947754
    8. ',int' → logprob: -19.75010108947754
    9. '[int' → logprob: -19.87510108947754
    10. '=int' → logprob: -20.00010108947754

Token 244: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3275562524795532
    2. ',input' → logprob: -2.0775561332702637
    3. '(input' → logprob: -2.4525561332702637
    4. ',' → logprob: -2.7025561332702637
    5. ')' → logprob: -7.577556133270264
    6. '(' → logprob: -8.702556610107422
    7. '=input' → logprob: -8.952556610107422
    8. ' input' → logprob: -9.077556610107422
    9. 'sys' → logprob: -10.452556610107422
    10. '[input' → logprob: -12.202556610107422

Token 245: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0024758970830589533
    2. ' input' → logprob: -6.002475738525391
    3. '(input' → logprob: -16.12747573852539
    4. ')' → logprob: -17.12747573852539
    5. ' ' → logprob: -18.00247573852539
    6. '=input' → logprob: -18.12747573852539
    7. ',input' → logprob: -18.37747573852539
    8. '	input' → logprob: -18.75247573852539
    9. '[input' → logprob: -19.12747573852539
    10. '<input' → logprob: -19.37747573852539

Token 246: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.961759259458631e-06
    2. '()' → logprob: -12.250004768371582
    3. ' ().' → logprob: -17.0000057220459
    4. '())' → logprob: -18.1250057220459
    5. '()
' → logprob: -18.5000057220459
    6. '(' → logprob: -18.5000057220459
    7. '.readline' → logprob: -18.5000057220459
    8. ')' → logprob: -20.0000057220459
    9. '.strip' → logprob: -20.8750057220459
    10. '().
' → logprob: -20.8750057220459

Token 247: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5760298371315002
    2. 'split' → logprob: -0.8260298371315002
    3. 'rstrip' → logprob: -9.326029777526855
    4. 'read' → logprob: -14.326029777526855
    5. ' strip' → logprob: -14.701029777526855
    6. '().' → logprob: -16.201030731201172
    7. ' split' → logprob: -16.576030731201172
    8. '(split' → logprob: -17.076030731201172
    9. ')' → logprob: -17.326030731201172
    10. '(strip' → logprob: -17.826030731201172

Token 248: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008219508454203606
    2. ')' → logprob: -4.8832197189331055
    3. '()' → logprob: -7.5082197189331055
    4. '()))' → logprob: -10.133219718933105
    5. '))' → logprob: -11.383219718933105
    6. '())
' → logprob: -12.508219718933105
    7. '(' → logprob: -12.633219718933105
    8. ' ())' → logprob: -12.758219718933105
    9. '('' → logprob: -13.633219718933105
    10. '().' → logprob: -14.508219718933105

Token 249: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4850224256515503
    2. ')' → logprob: -1.3600224256515503
    3. '<|end|>' → logprob: -2.36002254486084
    4. 'dp' → logprob: -4.48502254486084
    5. '#' → logprob: -5.11002254486084
    6. 'data' → logprob: -6.23502254486084
    7. 'arr' → logprob: -6.36002254486084
    8. 'sequence' → logprob: -6.48502254486084
    9. '\n' → logprob: -6.61002254486084
    10. 'tokens' → logprob: -6.98502254486084

Token 250: ' #' (ID: 1069)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.579305648803711
    2. '
' → logprob: -1.704305648803711
    3. 'sequence' → logprob: -1.829305648803711
    4. ')' → logprob: -2.079305648803711
    5. 'data' → logprob: -2.329305648803711
    6. 'values' → logprob: -2.329305648803711
    7. 'numbers' → logprob: -2.829305648803711
    8. 'dp' → logprob: -3.579305648803711
    9. 'seq' → logprob: -5.079305648803711
    10. 'array' → logprob: -5.204305648803711

Token 251: ' '' (ID: 461)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.8570656776428223
    2. 'sequence' → logprob: -1.2320656776428223
    3. 'data' → logprob: -1.6070656776428223
    4. 'seq' → logprob: -3.4820656776428223
    5. 'values' → logprob: -3.7320656776428223
    6. 'numbers' → logprob: -4.482065677642822
    7. 'array' → logprob: -5.107065677642822
    8. '#' → logprob: -6.232065677642822
    9. 'dp' → logprob: -6.357065677642822
    10. 'S' → logprob: -6.482065677642822

Token 252: 'split' (ID: 13627)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.9830446243286133
    2. ')' → logprob: -1.2330446243286133
    3. 'arr' → logprob: -1.7330446243286133
    4. 'seq' → logprob: -2.8580446243286133
    5. 'data' → logprob: -3.8580446243286133
    6. 'dp' → logprob: -4.233044624328613
    7. 'array' → logprob: -4.233044624328613
    8. '#' → logprob: -4.483044624328613
    9. 'values' → logprob: -4.983044624328613
    10. 'numbers' → logprob: -5.233044624328613

Token 253: '()' (ID: 416)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0025458165910094976
    2. '()' → logprob: -6.0025458335876465
    3. ')' → logprob: -10.377545356750488
    4. '()))' → logprob: -11.127545356750488
    5. ' ())' → logprob: -11.502545356750488
    6. '())
' → logprob: -12.002545356750488
    7. '(' → logprob: -13.002545356750488
    8. '('' → logprob: -13.127545356750488
    9. '().' → logprob: -14.002545356750488
    10. '())

' → logprob: -14.377545356750488

Token 254: ''' (ID: 6)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.252863347530365
    2. ')' → logprob: -1.5028634071350098
    3. '()' → logprob: -7.25286340713501
    4. ' )' → logprob: -8.877862930297852
    5. '))' → logprob: -10.502862930297852
    6. '(' → logprob: -10.627862930297852
    7. ' ())' → logprob: -10.877862930297852
    8. '()))' → logprob: -12.127862930297852
    9. '())
' → logprob: -12.627862930297852
    10. ')`' → logprob: -13.502862930297852

Token 255: ' sé' (ID: 7462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0025514080189168453
    2. '(' → logprob: -7.002551555633545
    3. ')' → logprob: -7.127551555633545
    4. '<|end|>' → logprob: -8.127551078796387
    5. '()
' → logprob: -8.752551078796387
    6. '())' → logprob: -9.127551078796387
    7. '(N' → logprob: -9.752551078796387
    8. '#' → logprob: -9.752551078796387
    9. '(
' → logprob: -10.377551078796387
    10. '<|end|>' → logprob: -10.627551078796387

Token 256: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.0010476969182491302
    2. 'par' → logprob: -7.001047611236572
    3. 'parer' → logprob: -9.87604808807373
    4. 'para' → logprob: -10.87604808807373
    5. 'p' → logprob: -11.12604808807373
    6. 'pares' → logprob: -11.25104808807373
    7. 'parent' → logprob: -11.50104808807373
    8. 'paration' → logprob: -11.62604808807373
    9. '_par' → logprob: -12.62604808807373
    10. 'Par' → logprob: -13.00104808807373

Token 257: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005541055579669774
    2. ')' → logprob: -7.750554084777832
    3. '())' → logprob: -9.625554084777832
    4. '()
' → logprob: -10.750554084777832
    5. '('' → logprob: -11.250554084777832
    6. '(' → logprob: -11.500554084777832
    7. 'input' → logprob: -12.750554084777832
    8. 'lines' → logprob: -13.375554084777832
    9. ' )' → logprob: -13.500554084777832
    10. ' ()' → logprob: -14.125554084777832

Token 258: ' ligne' (ID: 19583)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5217117667198181
    2. 'string' → logprob: -1.896711826324463
    3. ' input' → logprob: -2.021711826324463
    4. ')' → logprob: -3.146711826324463
    5. 'chaine' → logprob: -3.396711826324463
    6. '()' → logprob: -4.021711826324463
    7. ' string' → logprob: -5.521711826324463
    8. 's' → logprob: -5.521711826324463
    9. 'line' → logprob: -5.771711826324463
    10. '(input' → logprob: -6.271711826324463

Token 259: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004366748034954071
    2. '(' → logprob: -5.504366874694824
    3. ')' → logprob: -9.504366874694824
    4. '())' → logprob: -9.629366874694824
    5. '('' → logprob: -9.879366874694824
    6. '().' → logprob: -10.754366874694824
    7. '()
' → logprob: -10.754366874694824
    8. '()\' → logprob: -10.879366874694824
    9. '('\' → logprob: -11.254366874694824
    10. '(
' → logprob: -12.379366874694824

Token 260: ' morceaux' (ID: 133321)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.22610783576965332
    2. 'str' → logprob: -1.8511078357696533
    3. '['' → logprob: -3.7261078357696533
    4. 'élé' → logprob: -5.726107597351074
    5. ' tokens' → logprob: -5.851107597351074
    6. '[]' → logprob: -6.226107597351074
    7. 'strings' → logprob: -6.351107597351074
    8. 'list' → logprob: -6.351107597351074
    9. ')' → logprob: -6.601107597351074
    10. ' chaînes' → logprob: -6.601107597351074

Token 261: ' selon' (ID: 27571)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012420641258358955
    2. ')' → logprob: -4.512420654296875
    3. '(' → logprob: -7.762420654296875
    4. '()
' → logprob: -8.387420654296875
    5. '())' → logprob: -8.637420654296875
    6. '#' → logprob: -8.887420654296875
    7. '(N' → logprob: -8.887420654296875
    8. '()\' → logprob: -10.012420654296875
    9. '[]' → logprob: -10.137420654296875
    10. '();' → logprob: -10.262420654296875

Token 262: ' les' (ID: 1341)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02711428515613079
    2. '"' → logprob: -4.902114391326904
    3. ' '' → logprob: -5.027114391326904
    4. ' les' → logprob: -5.652114391326904
    5. '()' → logprob: -6.277114391326904
    6. ' la' → logprob: -6.402114391326904
    7. ' l' → logprob: -6.527114391326904
    8. 'le' → logprob: -7.027114391326904
    9. 'les' → logprob: -7.402114391326904
    10. ' le' → logprob: -7.402114391326904

Token 263: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.3182680904865265
    2. ' espaces' → logprob: -1.318268060684204
    3. 'es' → logprob: -5.943268299102783
    4. ''esp' → logprob: -6.693268299102783
    5. 'spaces' → logprob: -6.943268299102783
    6. ''espace' → logprob: -9.193267822265625
    7. ' espacios' → logprob: -11.068267822265625
    8. 'space' → logprob: -11.568267822265625
    9. '’esp' → logprob: -11.818267822265625
    10. ' espace' → logprob: -11.943267822265625

Token 264: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03747544437646866
    2. '\n' → logprob: -4.0374755859375
    3. ')' → logprob: -4.4124755859375
    4. '<|end|>' → logprob: -6.4124755859375
    5. '

' → logprob: -6.6624755859375
    6. '#' → logprob: -7.5374755859375
    7. '
' → logprob: -7.5374755859375
    8. 'newline' → logprob: -7.6624755859375
    9. '[' → logprob: -7.7874755859375
    10. ',' → logprob: -8.1624755859375

Token 265: ' '' (ID: 461)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10625001043081284
    2. 'N' → logprob: -2.606250047683716
    3. 'input' → logprob: -4.481249809265137
    4. '[' → logprob: -6.356249809265137
    5. ' N' → logprob: -6.481249809265137
    6. '[]' → logprob: -6.606249809265137
    7. 'end' → logprob: -6.981249809265137
    8. '()' → logprob: -7.231249809265137
    9. 'max' → logprob: -7.231249809265137
    10. '```' → logprob: -7.231249809265137

Token 266: 'map' (ID: 3726)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7148363590240479
    2. 'input' → logprob: -1.8398363590240479
    3. 'int' → logprob: -2.839836359024048
    4. '```' → logprob: -3.464836359024048
    5. '*' → logprob: -3.589836359024048
    6. 'N' → logprob: -3.589836359024048
    7. 'tokens' → logprob: -3.839836359024048
    8. 'map' → logprob: -3.839836359024048
    9. 'sys' → logprob: -4.464836120605469
    10. 'list' → logprob: -4.464836120605469

Token 267: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07375887036323547
    2. ')' → logprob: -3.448758840560913
    3. '(str' → logprob: -3.573758840560913
    4. '(' → logprob: -4.698759078979492
    5. '(input' → logprob: -7.948759078979492
    6. '(lambda' → logprob: -7.948759078979492
    7. '=int' → logprob: -8.073759078979492
    8. ',' → logprob: -8.323759078979492
    9. ',int' → logprob: -8.573759078979492
    10. ' )' → logprob: -9.323759078979492

Token 268: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2277609407901764
    2. ',' → logprob: -1.602760910987854
    3. ' )' → logprob: -7.4777607917785645
    4. '))' → logprob: -8.102761268615723
    5. ',input' → logprob: -8.102761268615723
    6. ' ,' → logprob: -8.352761268615723
    7. ',)' → logprob: -8.477761268615723
    8. ',
' → logprob: -8.602761268615723
    9. '),' → logprob: -9.352761268615723
    10. ',map' → logprob: -9.602761268615723

Token 269: ' ...' (ID: 2550)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04010939225554466
    2. ' input' → logprob: -3.790109395980835
    3. ')' → logprob: -4.415109157562256
    4. '))' → logprob: -6.165109157562256
    5. 'list' → logprob: -7.165109157562256
    6. 'sys' → logprob: -7.790109157562256
    7. '),' → logprob: -8.665109634399414
    8. 'int' → logprob: -9.165109634399414
    9. ' )' → logprob: -9.415109634399414
    10. ' ' → logprob: -9.415109634399414

Token 270: ')'' (ID: 45517)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023475950583815575
    2. '))' → logprob: -3.7734758853912354
    3. '())' → logprob: -9.398475646972656
    4. ')))' → logprob: -9.523475646972656
    5. ' )' → logprob: -10.273475646972656
    6. ')`' → logprob: -11.148475646972656
    7. ')...' → logprob: -12.523475646972656
    8. ')#' → logprob: -12.773475646972656
    9. ')
' → logprob: -13.023475646972656
    10. '(' → logprob: -13.148475646972656

Token 271: ' convert' (ID: 8452)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1734248250722885
    2. '<|end|>' → logprob: -1.9234248399734497
    3. '<|end|>' → logprob: -5.29842472076416
    4. 'tokens' → logprob: -6.79842472076416
    5. 'next' → logprob: -6.92342472076416
    6. '#' → logprob: -7.54842472076416
    7. ',' → logprob: -7.54842472076416
    8. '_next' → logprob: -7.67342472076416
    9. 'token' → logprob: -7.79842472076416
    10. '
' → logprob: -8.04842472076416

Token 272: 'it' (ID: 278)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017293846234679222
    2. 'input' → logprob: -4.767293930053711
    3. '(int' → logprob: -6.642293930053711
    4. 'int' → logprob: -6.767293930053711
    5. '(input' → logprob: -7.017293930053711
    6. '   ' → logprob: -7.267293930053711
    7. 'lambda' → logprob: -7.392293930053711
    8. '(' → logprob: -7.642293930053711
    9. 'sys' → logprob: -8.267293930053711
    10. 't' → logprob: -8.392293930053711

Token 273: ' chaque' (ID: 21194)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 274: ' morceau' (ID: 160026)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25334304571151733
    2. '<|end|>' → logprob: -1.753343105316162
    3. 'tokens' → logprob: -3.753343105316162
    4. 'token' → logprob: -4.503343105316162
    5. '<|end|>' → logprob: -4.503343105316162
    6. '_tokens' → logprob: -6.753343105316162
    7. '(tokens' → logprob: -7.378343105316162
    8. '(token' → logprob: -7.378343105316162
    9. ' tokens' → logprob: -7.628343105316162
    10. '(' → logprob: -8.503342628479004

Token 275: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006017556879669428
    2. '(' → logprob: -6.631017684936523
    3. '(input' → logprob: -6.756017684936523
    4. ',' → logprob: -7.006017684936523
    5. '(N' → logprob: -7.006017684936523
    6. 'input' → logprob: -8.006017684936523
    7. ' )' → logprob: -8.256017684936523
    8. 'into' → logprob: -8.631017684936523
    9. 'def' → logprob: -8.881017684936523
    10. '))' → logprob: -9.381017684936523

Token 276: ' un' (ID: 537)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0026742336340248585
    2. ' int' → logprob: -6.502674102783203
    3. 'ent' → logprob: -6.877674102783203
    4. 'inte' → logprob: -9.752674102783203
    5. 'ints' → logprob: -10.252674102783203
    6. '<int' → logprob: -11.127674102783203
    7. ' entier' → logprob: -11.877674102783203
    8. '<|end|>' → logprob: -12.252674102783203
    9. ' integers' → logprob: -12.627674102783203
    10. '(int' → logprob: -12.752674102783203

Token 277: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06204554811120033
    2. 'ent' → logprob: -2.9370455741882324
    3. ' int' → logprob: -5.187045574188232
    4. ' entier' → logprob: -7.062045574188232
    5. 'nombre' → logprob: -8.062045097351074
    6. 'inte' → logprob: -9.062045097351074
    7. '=int' → logprob: -9.812045097351074
    8. 'integer' → logprob: -10.187045097351074
    9. 'entrée' → logprob: -10.687045097351074
    10. '_ent' → logprob: -10.937045097351074

Token 278: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5503334999084473
    2. ')' → logprob: -1.1753334999084473
    3. '<|end|>' → logprob: -2.4253334999084473
    4. '<|end|>' → logprob: -4.550333499908447
    5. '#' → logprob: -5.425333499908447
    6. ',' → logprob: -6.675333499908447
    7. '\n' → logprob: -6.675333499908447
    8. '

' → logprob: -7.050333499908447
    9. 'N' → logprob: -7.175333499908447
    10. '[' → logprob: -7.300333499908447

Token 279: '#' (ID: 2)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.9174858331680298
    2. 'arr' → logprob: -1.1674858331680298
    3. 'data' → logprob: -2.2924857139587402
    4. 'numbers' → logprob: -2.7924857139587402
    5. ')' → logprob: -3.1674857139587402
    6. 'values' → logprob: -3.2924857139587402
    7. 'seq' → logprob: -4.04248571395874
    8. '
' → logprob: -4.91748571395874
    9. '<|end|>' → logprob: -5.66748571395874
    10. 's' → logprob: -5.91748571395874

Token 280: ' On' (ID: 2160)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.12149908393621445
    2. 'seq' → logprob: -3.3714990615844727
    3. 'sequence' → logprob: -3.6214990615844727
    4. 'values' → logprob: -4.121499061584473
    5. 'data' → logprob: -4.371499061584473
    6. 'vals' → logprob: -4.996499061584473
    7. 'a' → logprob: -5.371499061584473
    8. 'numbers' → logprob: -5.996499061584473
    9. 'X' → logprob: -6.121499061584473
    10. 'nums' → logprob: -6.371499061584473

Token 281: ' lit' (ID: 11980)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.24716658890247345
    2. 'sequence' → logprob: -2.747166633605957
    3. 'data' → logprob: -3.122166633605957
    4. 'a' → logprob: -3.372166633605957
    5. 'dp' → logprob: -3.497166633605957
    6. 'seq' → logprob: -4.872166633605957
    7. 's' → logprob: -5.247166633605957
    8. 'array' → logprob: -5.247166633605957
    9. '#' → logprob: -5.372166633605957
    10. 'lst' → logprob: -5.497166633605957

Token 282: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8988049626350403
    2. ' la' → logprob: -1.1488049030303955
    3. 'la' → logprob: -2.6488049030303955
    4. 'l' → logprob: -3.1488049030303955
    5. ' une' → logprob: -3.2738049030303955
    6. 'les' → logprob: -4.273805141448975
    7. 'a' → logprob: -4.273805141448975
    8. '(' → logprob: -4.523805141448975
    9. 'arr' → logprob: -4.523805141448975
    10. 'lst' → logprob: -4.648805141448975

Token 283: ' ligne' (ID: 19583)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -1.2266653776168823
    2. 'liste' → logprob: -1.3516653776168823
    3. 'arr' → logprob: -2.351665496826172
    4. 'ligne' → logprob: -2.601665496826172
    5. ' sequence' → logprob: -2.851665496826172
    6. 's' → logprob: -2.976665496826172
    7. 'array' → logprob: -3.601665496826172
    8. 'lst' → logprob: -3.851665496826172
    9. 'seq' → logprob: -3.851665496826172
    10. 'suite' → logprob: -4.351665496826172

Token 284: ' suivante' (ID: 107439)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.0705173015594482
    2. ' =' → logprob: -1.3205173015594482
    3. 'a' → logprob: -2.1955173015594482
    4. '=' → logprob: -2.3205173015594482
    5. 's' → logprob: -3.0705173015594482
    6. '()' → logprob: -3.6955173015594482
    7. 'vals' → logprob: -4.320517539978027
    8. 'nums' → logprob: -4.320517539978027
    9. 'des' → logprob: -4.695517539978027
    10. 'x' → logprob: -4.695517539978027

Token 285: ' de' (ID: 334)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.19183669984340668
    2. 'a' → logprob: -3.6918365955352783
    3. 'values' → logprob: -3.6918365955352783
    4. 'numbers' → logprob: -3.6918365955352783
    5. 'sequence' → logprob: -4.191836833953857
    6. 's' → logprob: -4.316836833953857
    7. 'seq' → logprob: -4.441836833953857
    8. 'vals' → logprob: -4.566836833953857
    9. '
' → logprob: -4.691836833953857
    10. 'nums' → logprob: -4.691836833953857

Token 286: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8771274089813232
    2. 'val' → logprob: -1.2521274089813232
    3. ' input' → logprob: -3.2521274089813232
    4. 'la' → logprob: -3.5021274089813232
    5. 'arr' → logprob: -3.5021274089813232
    6. ' nombres' → logprob: -3.6271274089813232
    7. 'entrée' → logprob: -3.6271274089813232
    8. 'data' → logprob: -3.7521274089813232
    9. 'a' → logprob: -4.252127647399902
    10. 'positions' → logprob: -4.377127647399902

Token 287: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.5265735983848572
    2. ''entrée' → logprob: -1.151573657989502
    3. 'input' → logprob: -2.401573657989502
    4. '’entrée' → logprob: -7.151573657989502
    5. ' entrée' → logprob: -7.276573657989502
    6. ' input' → logprob: -8.151573181152344
    7. '#' → logprob: -8.901573181152344
    8. '=input' → logprob: -9.526573181152344
    9. '_input' → logprob: -9.526573181152344
    10. ''ent' → logprob: -9.651573181152344

Token 288: ',' (ID: 11)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.4963608682155609
    2. 'a' → logprob: -2.4963607788085938
    3. 'numbers' → logprob: -2.7463607788085938
    4. 'seq' → logprob: -3.2463607788085938
    5. 's' → logprob: -3.3713607788085938
    6. 'data' → logprob: -3.6213607788085938
    7. 'sequence' → logprob: -3.6213607788085938
    8. 'values' → logprob: -3.7463607788085938
    9. 'vals' → logprob: -3.8713607788085938
    10. 'nums' → logprob: -3.9963607788085938

Token 289: ' on' (ID: 402)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6351675987243652
    2. 'seq' → logprob: -2.3851675987243652
    3. ' arr' → logprob: -2.8851675987243652
    4. 'a' → logprob: -2.8851675987243652
    5. 'numbers' → logprob: -3.7601675987243652
    6. ' seq' → logprob: -3.8851675987243652
    7. ' sequence' → logprob: -3.8851675987243652
    8. 'nums' → logprob: -4.010167598724365
    9. 'sequence' → logprob: -4.010167598724365
    10. 'vals' → logprob: -4.260167598724365

Token 290: ' la' (ID: 557)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35270312428474426
    2. 'arr' → logprob: -2.227703094482422
    3. ' =' → logprob: -2.602703094482422
    4. 'val' → logprob: -3.727703094482422
    5. 'vals' → logprob: -3.977703094482422
    6. 's' → logprob: -4.477703094482422
    7. 'l' → logprob: -4.602703094482422
    8. 'a' → logprob: -4.602703094482422
    9. 'v' → logprob: -5.477703094482422
    10. 't' → logprob: -5.852703094482422

Token 291: ' décou' (ID: 68302)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.28700900077819824
    2. 'split' → logprob: -2.0370090007781982
    3. 'array' → logprob: -2.7870090007781982
    4. '=' → logprob: -4.662009239196777
    5. 'list' → logprob: -4.912009239196777
    6. 'rstrip' → logprob: -4.912009239196777
    7. 'strip' → logprob: -5.037009239196777
    8. 's' → logprob: -5.287009239196777
    9. ' =' → logprob: -5.537009239196777
    10. 'sort' → logprob: -6.037009239196777

Token 292: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.0010586526477709413
    2. 'pte' → logprob: -7.251058578491211
    3. 'te' → logprob: -8.626058578491211
    4. 'ple' → logprob: -10.376058578491211
    5. 'p' → logprob: -10.501058578491211
    6. 'ppe' → logprob: -11.001058578491211
    7. 't' → logprob: -11.126058578491211
    8. 'de' → logprob: -11.251058578491211
    9. 'пе' → logprob: -11.251058578491211
    10. 'e' → logprob: -11.501058578491211

Token 293: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.32987186312675476
    2. 'en' → logprob: -2.204871892929077
    3. '=' → logprob: -2.454871892929077
    4. 'a' → logprob: -3.704871892929077
    5. ' =' → logprob: -4.329871654510498
    6. ',' → logprob: -4.454871654510498
    7. 'nums' → logprob: -4.704871654510498
    8. 'arr' → logprob: -5.204871654510498
    9. ' en' → logprob: -5.704871654510498
    10. 'numbers' → logprob: -5.829871654510498

Token 294: ' chaînes' (ID: 179904)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7306238412857056
    2. 'liste' → logprob: -0.7306238412857056
    3. 'N' → logprob: -3.855623722076416
    4. 'ints' → logprob: -5.105623722076416
    5. 'lst' → logprob: -5.855623722076416
    6. ' liste' → logprob: -6.230623722076416
    7. ' list' → logprob: -6.730623722076416
    8. 'n' → logprob: -7.355623722076416
    9. 'int' → logprob: -7.480623722076416
    10. 'inte' → logprob: -7.605623722076416

Token 295: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.0319434255361557
    2. ' de' → logprob: -3.7819433212280273
    3. 'input' → logprob: -5.156943321228027
    4. 's' → logprob: -7.406943321228027
    5. 'arr' → logprob: -7.781943321228027
    6. 'n' → logprob: -8.031943321228027
    7. 'chars' → logprob: -8.656943321228027
    8. ',' → logprob: -8.906943321228027
    9. 'tokens' → logprob: -9.031943321228027
    10. 'car' → logprob: -9.156943321228027

Token 296: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0040115611627697945
    2. ' caractères' → logprob: -5.879011631011963
    3. 'str' → logprob: -7.504011631011963
    4. 'chars' → logprob: -8.754011154174805
    5. 'texte' → logprob: -8.879011154174805
    6. 'n' → logprob: -8.879011154174805
    7. 'chaine' → logprob: -9.629011154174805
    8. 'input' → logprob: -10.129011154174805
    9. 'cha' → logprob: -11.004011154174805
    10. 'ch' → logprob: -11.129011154174805

Token 297: ',' (ID: 11)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.4054732322692871
    2. 'a' → logprob: -2.780473232269287
    3. 'numbers' → logprob: -3.030473232269287
    4. 's' → logprob: -3.155473232269287
    5. 't' → logprob: -3.155473232269287
    6. 'vals' → logprob: -3.530473232269287
    7. ',' → logprob: -3.655473232269287
    8. 'L' → logprob: -4.030473232269287
    9. 'lst' → logprob: -4.405473232269287
    10. 'val' → logprob: -4.530473232269287

Token 298: ' puis' (ID: 18766)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.4069138467311859
    2. 'L' → logprob: -2.5319137573242188
    3. 'X' → logprob: -2.9069137573242188
    4. 'S' → logprob: -3.6569137573242188
    5. 'numbers' → logprob: -3.6569137573242188
    6. 'data' → logprob: -3.9069137573242188
    7. 'p' → logprob: -4.281913757324219
    8. 'seq' → logprob: -4.281913757324219
    9. 'lst' → logprob: -4.531913757324219
    10. 's' → logprob: -4.531913757324219

Token 299: ' on' (ID: 402)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.17010849714279175
    2. 'lst' → logprob: -3.2951085567474365
    3. 'numbers' → logprob: -4.045108318328857
    4. 'l' → logprob: -4.170108318328857
    5. 'L' → logprob: -4.295108318328857
    6. ' arr' → logprob: -4.420108318328857
    7. 'array' → logprob: -4.545108318328857
    8. 'seq' → logprob: -5.045108318328857
    9. 'x' → logprob: -5.170108318328857
    10. 'data' → logprob: -5.420108318328857

Token 300: ' convert' (ID: 8452)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001350710866972804
    2. ' =' → logprob: -6.8763508796691895
    3. 'arr' → logprob: -9.126350402832031
    4. '=list' → logprob: -10.001350402832031
    5. '=
' → logprob: -10.126350402832031
    6. '=np' → logprob: -10.501350402832031
    7. '=array' → logprob: -10.626350402832031
    8. 'a' → logprob: -11.376350402832031
    9. '=[' → logprob: -11.876350402832031
    10. '_=' → logprob: -12.001350402832031

Token 301: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0002043748099822551
    2. 't' → logprob: -9.000204086303711
    3. '[it' → logprob: -10.875204086303711
    4. '(it' → logprob: -11.000204086303711
    5. 'i' → logprob: -11.250204086303711
    6. ' it' → logprob: -11.375204086303711
    7. 'e' → logprob: -12.125204086303711
    8. 'ît' → logprob: -12.750204086303711
    9. '=' → logprob: -13.250204086303711
    10. 'ir' → logprob: -13.375204086303711

Token 302: ' chacune' (ID: 127465)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.6565133929252625
    2. 'arr' → logprob: -1.5315134525299072
    3. 'la' → logprob: -2.0315134525299072
    4. 'a' → logprob: -3.9065134525299072
    5. 'l' → logprob: -3.9065134525299072
    6. 'les' → logprob: -3.9065134525299072
    7. '()' → logprob: -4.281513214111328
    8. 't' → logprob: -4.281513214111328
    9. ' la' → logprob: -4.656513214111328
    10. 'lst' → logprob: -4.906513214111328

Token 303: ' de' (ID: 334)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.18355418741703033
    2. '=' → logprob: -2.558554172515869
    3. 'a' → logprob: -3.308554172515869
    4. 'arr' → logprob: -4.308554172515869
    5. ' =' → logprob: -4.808554172515869
    6. '(arr' → logprob: -5.058554172515869
    7. ' en' → logprob: -5.433554172515869
    8. '(numbers' → logprob: -5.933554172515869
    9. '()' → logprob: -6.058554172515869
    10. 'l' → logprob: -6.183554172515869

Token 304: ' ces' (ID: 10532)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01235341839492321
    2. 'str' → logprob: -4.512353420257568
    3. 'ent' → logprob: -7.262353420257568
    4. 'input' → logprob: -8.01235294342041
    5. 'list' → logprob: -9.13735294342041
    6. 'liste' → logprob: -9.26235294342041
    7. 'chaine' → logprob: -10.63735294342041
    8. 'entrée' → logprob: -11.38735294342041
    9. ' int' → logprob: -11.88735294342041
    10. '(int' → logprob: -12.26235294342041

Token 305: ' chaînes' (ID: 179904)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -1.472556710243225
    2. 'strings' → logprob: -1.597556710243225
    3. 'str' → logprob: -2.2225565910339355
    4. 'élé' → logprob: -2.3475565910339355
    5. ' nombres' → logprob: -2.8475565910339355
    6. 'val' → logprob: -2.9725565910339355
    7. ' chaînes' → logprob: -2.9725565910339355
    8. 'ent' → logprob: -3.3475565910339355
    9. ' tokens' → logprob: -3.5975565910339355
    10. ' éléments' → logprob: -3.5975565910339355

Token 306: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.01394487451761961
    2. '=' → logprob: -4.63894510269165
    3. ' en' → logprob: -6.26394510269165
    4. ' =' → logprob: -7.13894510269165
    5. '()' → logprob: -7.63894510269165
    6. 'a' → logprob: -8.513944625854492
    7. ',' → logprob: -8.638944625854492
    8. 'nums' → logprob: -8.763944625854492
    9. 'arr' → logprob: -9.138944625854492
    10. ')' → logprob: -9.638944625854492

Token 307: ' un' (ID: 537)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004389409441500902
    2. 'ent' → logprob: -6.00438928604126
    3. 'ints' → logprob: -6.37938928604126
    4. ' int' → logprob: -9.004389762878418
    5. 'inte' → logprob: -9.379389762878418
    6. 'liste' → logprob: -13.379389762878418
    7. 'np' → logprob: -13.629389762878418
    8. ' integers' → logprob: -13.879389762878418
    9. 'list' → logprob: -13.879389762878418
    10. '[int' → logprob: -14.254389762878418

Token 308: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0025804166216403246
    2. 'ent' → logprob: -6.252580642700195
    3. 'np' → logprob: -7.377580642700195
    4. 'nombre' → logprob: -12.002580642700195
    5. ' int' → logprob: -12.127580642700195
    6. 'inte' → logprob: -12.502580642700195
    7. '[int' → logprob: -12.752580642700195
    8. '=int' → logprob: -12.877580642700195
    9. ' entier' → logprob: -13.002580642700195
    10. 'numpy' → logprob: -14.377580642700195

Token 309: ',' (ID: 11)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.24278178811073303
    2. 'numbers' → logprob: -2.7427818775177
    3. 'sequence' → logprob: -3.1177818775177
    4. 'values' → logprob: -3.8677818775177
    5. 'a' → logprob: -3.9927818775177
    6. 'vals' → logprob: -4.617781639099121
    7. 'val' → logprob: -4.867781639099121
    8. 's' → logprob: -4.992781639099121
    9. 'array' → logprob: -5.117781639099121
    10. 'seq' → logprob: -5.117781639099121

Token 310: ' stock' (ID: 6546)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.4008553922176361
    2. 'X' → logprob: -2.775855302810669
    3. 'numbers' → logprob: -2.775855302810669
    4. 'a' → logprob: -3.025855302810669
    5. 'data' → logprob: -4.275855541229248
    6. 'C' → logprob: -4.400855541229248
    7. 'sequence' → logprob: -4.525855541229248
    8. 'L' → logprob: -4.650855541229248
    9. 'nums' → logprob: -4.650855541229248
    10. 'seq' → logprob: -4.775855541229248

Token 311: 'és' (ID: 1756)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35153087973594666
    2. 's' → logprob: -2.9765307903289795
    3. 'e' → logprob: -3.1015307903289795
    4. 'age' → logprob: -3.4765307903289795
    5. 'ages' → logprob: -3.7265307903289795
    6. 'ée' → logprob: -3.7265307903289795
    7. 'ant' → logprob: -3.8515307903289795
    8. ' =' → logprob: -4.101531028747559
    9. 'array' → logprob: -4.101531028747559
    10. 'ées' → logprob: -4.726531028747559

Token 312: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.424039363861084
    2. 'dans' → logprob: -1.924039363861084
    3. ' dans' → logprob: -2.799039363861084
    4. ' =' → logprob: -2.924039363861084
    5. 's' → logprob: -3.424039363861084
    6. ')' → logprob: -4.424039363861084
    7. 'en' → logprob: -4.549039363861084
    8. 'arr' → logprob: -4.674039363861084
    9. ' en' → logprob: -5.424039363861084
    10. 'a' → logprob: -5.799039363861084

Token 313: ' la' (ID: 557)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.1161809116601944
    2. 'lst' → logprob: -3.116180896759033
    3. 'a' → logprob: -3.241180896759033
    4. 'data' → logprob: -5.491180896759033
    5. 'array' → logprob: -5.491180896759033
    6. 'L' → logprob: -5.741180896759033
    7. 'numbers' → logprob: -5.866180896759033
    8. 'sequence' → logprob: -5.991180896759033
    9. 'seq' → logprob: -6.116180896759033
    10. 'liste' → logprob: -6.241180896759033

Token 314: ' liste' (ID: 31719)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.8363579511642456
    2. 'np' → logprob: -0.8363579511642456
    3. 'array' → logprob: -2.211358070373535
    4. 'lst' → logprob: -4.461358070373535
    5. 'a' → logprob: -5.461358070373535
    6. 'numbers' → logprob: -5.461358070373535
    7. 'list' → logprob: -6.836358070373535
    8. 'nums' → logprob: -7.336358070373535
    9. 'data' → logprob: -7.961358070373535
    10. 'sequence' → logprob: -8.211358070373535

Token 315: ' P' (ID: 398)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6911709904670715
    2. 'X' → logprob: -1.8161709308624268
    3. 'a' → logprob: -2.0661709308624268
    4. 'L' → logprob: -2.5661709308624268
    5. 'S' → logprob: -2.6911709308624268
    6. 'numbers' → logprob: -4.441171169281006
    7. 'H' → logprob: -4.816171169281006
    8. 'V' → logprob: -4.816171169281006
    9. 'lst' → logprob: -4.941171169281006
    10. 'P' → logprob: -5.316171169281006

Token 316: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06832902878522873
    2. ' =' → logprob: -3.193329095840454
    3. 'P' → logprob: -3.693329095840454
    4. '=P' → logprob: -9.193328857421875
    5. '=
' → logprob: -11.943328857421875
    6. 'p' → logprob: -11.943328857421875
    7. ' P' → logprob: -13.068328857421875
    8. '
' → logprob: -13.568328857421875
    9. '=[' → logprob: -14.068328857421875
    10. ',' → logprob: -14.443328857421875

Token 317: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -6.704273118884885e-07
    2. ' P' → logprob: -15.000000953674316
    3. '
' → logprob: -15.250000953674316
    4. 'p' → logprob: -17.875
    5. '#' → logprob: -19.625
    6. '```' → logprob: -20.0
    7. '.P' → logprob: -21.75
    8. ',P' → logprob: -21.75
    9. '_P' → logprob: -22.0
    10. ',' → logprob: -22.125

Token 318: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141403377056122
    2. ' =' → logprob: -1.7014139890670776
    3. ' ' → logprob: -15.701414108276367
    4. 's' → logprob: -15.951414108276367
    5. ',' → logprob: -16.326414108276367
    6. ')' → logprob: -17.201414108276367
    7. '=P' → logprob: -17.201414108276367
    8. 'p' → logprob: -17.326414108276367
    9. ' ' → logprob: -17.326414108276367
    10. '=[]' → logprob: -17.451414108276367

Token 319: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.935296834039036e-06
    2. ' list' → logprob: -12.75000286102295
    3. '[list' → logprob: -20.500003814697266
    4. 'map' → logprob: -21.375003814697266
    5. '=list' → logprob: -23.750003814697266
    6. '(list' → logprob: -24.375003814697266
    7. '	list' → logprob: -24.750003814697266
    8. 'np' → logprob: -25.250003814697266
    9. 'List' → logprob: -25.375003814697266
    10. '[' → logprob: -25.625003814697266

Token 320: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.200166469876422e-06
    2. '*' → logprob: -12.250004768371582
    3. ' int' → logprob: -14.875004768371582
    4. '<int' → logprob: -18.0000057220459
    5. '```' → logprob: -18.0000057220459
    6. ']int' → logprob: -18.7500057220459
    7. '[int' → logprob: -18.8750057220459
    8. 'in' → logprob: -19.0000057220459
    9. '	int' → logprob: -19.1250057220459
    10. '(int' → logprob: -19.2500057220459

Token 321: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.018383119255304337
    2. '(i' → logprob: -4.018383026123047
    3. 'x' → logprob: -8.893383026123047
    4. ']' → logprob: -9.893383026123047
    5. '(s' → logprob: -10.643383026123047
    6. '(input' → logprob: -12.018383026123047
    7. '(' → logprob: -12.518383026123047
    8. '(token' → logprob: -12.643383026123047
    9. '(e' → logprob: -13.393383026123047
    10. '(t' → logprob: -14.018383026123047

Token 322: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1160349458805285e-05
    2. '())' → logprob: -12.250011444091797
    3. ' )' → logprob: -13.000011444091797
    4. 'for' → logprob: -13.625011444091797
    5. ')
' → logprob: -13.750011444091797
    6. '()' → logprob: -14.375011444091797
    7. 'input' → logprob: -14.625011444091797
    8. '(input' → logprob: -14.875011444091797
    9. ' for' → logprob: -15.875011444091797
    10. 'in' → logprob: -16.500011444091797

Token 323: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07892371714115143
    2. ' for' → logprob: -2.5789237022399902
    3. ')' → logprob: -10.328924179077148
    4. ' ' → logprob: -14.203924179077148
    5. 'in' → logprob: -15.203924179077148
    6. 'x' → logprob: -16.07892417907715
    7. '	for' → logprob: -16.45392417907715
    8. '()' → logprob: -17.07892417907715
    9. 'or' → logprob: -17.20392417907715
    10. 'input' → logprob: -17.82892417907715

Token 324: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7966187596321106
    2. 'input' → logprob: -1.2966187000274658
    3. ' input' → logprob: -1.9216187000274658
    4. ' x' → logprob: -2.046618700027466
    5. '(input' → logprob: -10.171618461608887
    6. '(x' → logprob: -10.296618461608887
    7. ' in' → logprob: -10.671618461608887
    8. 'in' → logprob: -10.796618461608887
    9. '=input' → logprob: -11.046618461608887
    10. ' ' → logprob: -11.546618461608887

Token 325: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4743456542491913
    2. ' in' → logprob: -0.9743456840515137
    3. 'x' → logprob: -8.474345207214355
    4. 'input' → logprob: -11.474345207214355
    5. 'inx' → logprob: -11.724345207214355
    6. 'import' → logprob: -12.099345207214355
    7. ' x' → logprob: -12.224345207214355
    8. ' ' → logprob: -12.474345207214355
    9. 'ind' → logprob: -12.849345207214355
    10. ',' → logprob: -12.849345207214355

Token 326: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004620949272066355
    2. ' input' → logprob: -5.3796210289001465
    3. '(input' → logprob: -14.879620552062988
    4. ' ' → logprob: -16.004621505737305
    5. 'sys' → logprob: -17.129621505737305
    6. '	input' → logprob: -17.129621505737305
    7. '<input' → logprob: -17.379621505737305
    8. 'import' → logprob: -18.129621505737305
    9. '.input' → logprob: -18.254621505737305
    10. '
' → logprob: -18.254621505737305

Token 327: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.8889261304575484e-06
    2. '()' → logprob: -12.500003814697266
    3. ' ().' → logprob: -16.500003814697266
    4. '()].' → logprob: -17.375003814697266
    5. '()
' → logprob: -19.625003814697266
    6. '(' → logprob: -20.250003814697266
    7. '().__' → logprob: -20.625003814697266
    8. '()]' → logprob: -21.125003814697266
    9. '()).' → logprob: -21.125003814697266
    10. '().'' → logprob: -21.250003814697266

Token 328: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015034328680485487
    2. 'strip' → logprob: -6.5015034675598145
    3. 'rstrip' → logprob: -13.751502990722656
    4. ' split' → logprob: -16.751502990722656
    5. '(split' → logprob: -17.501502990722656
    6. 'spl' → logprob: -18.376502990722656
    7. 'read' → logprob: -20.001502990722656
    8. ' strip' → logprob: -20.626502990722656
    9. '.split' → logprob: -20.751502990722656
    10. 'replace' → logprob: -21.126502990722656

Token 329: '()]' (ID: 59063)
  Prédit: '()]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -4.513339445111342e-05
    2. '()' → logprob: -10.500044822692871
    3. ']' → logprob: -11.000044822692871
    4. '(' → logprob: -14.750044822692871
    5. '()]
' → logprob: -15.375044822692871
    6. ']()' → logprob: -16.250045776367188
    7. '())' → logprob: -16.250045776367188
    8. ')]' → logprob: -17.000045776367188
    9. ' ()' → logprob: -17.750045776367188
    10. '()][' → logprob: -18.750045776367188

Token 330: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21596898138523102
    2. '<|end|>' → logprob: -1.7159689664840698
    3. '#' → logprob: -4.965969085693359
    4. ' 
' → logprob: -5.965969085693359
    5. '  
' → logprob: -6.465969085693359
    6. '
' → logprob: -7.340969085693359
    7. '

' → logprob: -7.465969085693359
    8. '<|end|>' → logprob: -7.965969085693359
    9. '[' → logprob: -8.09096908569336
    10. ')' → logprob: -8.21596908569336

Token 331: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44951632618904114
    2. 'dp' → logprob: -1.0745162963867188
    3. '

' → logprob: -4.699516296386719
    4. '#' → logprob: -4.949516296386719
    5. 'cost' → logprob: -6.324516296386719
    6. 'DP' → logprob: -6.824516296386719
    7. '
' → logprob: -7.324516296386719
    8. 'max' → logprob: -8.324516296386719
    9. '  
' → logprob: -9.449516296386719
    10. 'dist' → logprob: -9.699516296386719

Token 332: ' Cr' (ID: 5790)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07097265869379044
    2. '
' → logprob: -3.0709726810455322
    3. '#' → logprob: -4.070972442626953
    4. 'DP' → logprob: -5.695972442626953
    5. '

' → logprob: -7.195972442626953
    6. 'cost' → logprob: -8.820972442626953
    7. '
' → logprob: -8.945972442626953
    8. 'P' → logprob: -9.445972442626953
    9. 'M' → logprob: -9.695972442626953
    10. 'assert' → logprob: -9.945972442626953

Token 333: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.006392880342900753
    2. 'e' → logprob: -6.131392955780029
    3. 'éer' → logprob: -6.131392955780029
    4. 'é' → logprob: -6.506392955780029
    5. 'ee' → logprob: -7.631392955780029
    6. 'ea' → logprob: -10.756392478942871
    7. 'ép' → logprob: -12.006392478942871
    8. 'ées' → logprob: -12.131392478942871
    9. 'édit' → logprob: -13.131392478942871
    10. 'éal' → logprob: -13.256392478942871

Token 334: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13511116802692413
    2. '(P' → logprob: -2.885111093521118
    3. '(np' → logprob: -3.635111093521118
    4. '(
' → logprob: -4.385111331939697
    5. ']' → logprob: -4.760111331939697
    6. 'P' → logprob: -4.885111331939697
    7. '(int' → logprob: -5.885111331939697
    8. '(len' → logprob: -6.010111331939697
    9. 'np' → logprob: -6.760111331939697
    10. '(N' → logprob: -6.885111331939697

Token 335: ' liste' (ID: 31719)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.031737763434648514
    2. 'numpy' → logprob: -4.031737804412842
    3. 'list' → logprob: -4.531737804412842
    4. 'liste' → logprob: -6.281737804412842
    5. ' np' → logprob: -7.656737804412842
    6. ' numpy' → logprob: -9.656737327575684
    7. '[np' → logprob: -9.781737327575684
    8. '
' → logprob: -9.906737327575684
    9. 'import' → logprob: -10.031737327575684
    10. 'array' → logprob: -10.781737327575684

Token 336: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26283910870552063
    2. '(P' → logprob: -1.7628390789031982
    3. '(N' → logprob: -3.8878390789031982
    4. '()' → logprob: -4.262839317321777
    5. '<|end|>' → logprob: -4.262839317321777
    6. '(
' → logprob: -5.637839317321777
    7. '(len' → logprob: -6.137839317321777
    8. '#' → logprob: -7.387839317321777
    9. '(n' → logprob: -7.387839317321777
    10. ']' → logprob: -7.512839317321777

Token 337: ''ent' (ID: 53422)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.05774563178420067
    2. 'ent' → logprob: -3.6827456951141357
    3. 'int' → logprob: -3.9327456951141357
    4. ' P' → logprob: -5.182745456695557
    5. 'ints' → logprob: -6.182745456695557
    6. 'inte' → logprob: -6.682745456695557
    7. 'map' → logprob: -8.307745933532715
    8. '[P' → logprob: -8.432745933532715
    9. 'la' → logprob: -8.557745933532715
    10. '(P' → logprob: -8.557745933532715

Token 338: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0030448585748672485
    2. 'ières' → logprob: -6.253045082092285
    3. 'ier' → logprob: -6.878045082092285
    4. 'P' → logprob: -10.003045082092285
    5. 'ière' → logprob: -10.753045082092285
    6. 'r' → logprob: -12.128045082092285
    7. 'ités' → logprob: -13.128045082092285
    8. ' P' → logprob: -13.378045082092285
    9. '(P' → logprob: -13.378045082092285
    10. 'rée' → logprob: -13.878045082092285

Token 339: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09778989851474762
    2. '#' → logprob: -2.722790002822876
    3. '

' → logprob: -4.847789764404297
    4. 'dp' → logprob: -4.972789764404297
    5. ')' → logprob: -5.847789764404297
    6. '<|end|>' → logprob: -5.972789764404297
    7. ']' → logprob: -6.472789764404297
    8. '.' → logprob: -6.847789764404297
    9. 'max' → logprob: -7.347789764404297
    10. '
' → logprob: -7.472789764404297

Token 340: ' partir' (ID: 12100)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.6317216157913208
    2. 'np' → logprob: -1.8817216157913208
    3. 'len' → logprob: -2.1317214965820312
    4. ')' → logprob: -2.6317214965820312
    5. '[' → logprob: -2.6317214965820312
    6. 'numpy' → logprob: -3.0067214965820312
    7. '<|end|>' → logprob: -3.1317214965820312
    8. 'import' → logprob: -3.2567214965820312
    9. 'P' → logprob: -3.6317214965820312
    10. 'length' → logprob: -4.131721496582031

Token 341: ' de' (ID: 334)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03129999339580536
    2. '(' → logprob: -3.6563000679016113
    3. '(sys' → logprob: -5.906300067901611
    4. 'input' → logprob: -7.031300067901611
    5. '(len' → logprob: -7.781300067901611
    6. '(P' → logprob: -8.906299591064453
    7. '(l' → logprob: -9.031299591064453
    8. '(
' → logprob: -9.031299591064453
    9. 'l' → logprob: -9.281299591064453
    10. 'une' → logprob: -9.656299591064453

Token 342: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.021029004827141762
    2. ' input' → logprob: -4.146028995513916
    3. 'P' → logprob: -6.146028995513916
    4. 'sys' → logprob: -6.146028995513916
    5. ' P' → logprob: -7.646028995513916
    6. ' sys' → logprob: -9.521029472351074
    7. 'x' → logprob: -10.521029472351074
    8. '```' → logprob: -10.521029472351074
    9. '[input' → logprob: -10.771029472351074
    10. 'map' → logprob: -10.771029472351074

Token 343: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.9571498036384583
    2. 'entrée' → logprob: -1.5821497440338135
    3. ''entrée' → logprob: -1.9571497440338135
    4. 'e' → logprob: -3.2071497440338135
    5. '=input' → logprob: -3.2071497440338135
    6. ' input' → logprob: -3.2071497440338135
    7. 'P' → logprob: -3.4571497440338135
    8. 'sys' → logprob: -3.8321497440338135
    9. '[input' → logprob: -3.8321497440338135
    10. 'a' → logprob: -3.9571497440338135

Token 344: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6421986222267151
    2. 'dp' → logprob: -0.7671986222267151
    3. '#' → logprob: -5.39219856262207
    4. 'DP' → logprob: -5.89219856262207
    5. '<|end|>' → logprob: -7.39219856262207
    6. '

' → logprob: -8.14219856262207
    7. '
' → logprob: -8.39219856262207
    8. '\n' → logprob: -8.39219856262207
    9. '  
' → logprob: -8.89219856262207
    10. ')' → logprob: -9.51719856262207

Token 345: ' qui' (ID: 2780)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8919243812561035
    2. '<|end|>' → logprob: -1.3919243812561035
    3. '
' → logprob: -1.8919243812561035
    4. '#' → logprob: -2.0169243812561035
    5. ')' → logprob: -4.0169243812561035
    6. ' ' → logprob: -4.3919243812561035
    7. ' ]' → logprob: -4.8919243812561035
    8. '<|end|>' → logprob: -5.2669243812561035
    9. ' 
' → logprob: -5.5169243812561035
    10. 'N' → logprob: -6.3919243812561035

Token 346: ' représente' (ID: 88912)
  Prédit: ' représente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' représente' → logprob: -0.7859846353530884
    2. '#' → logprob: -1.2859846353530884
    3. 'est' → logprob: -3.160984516143799
    4. 's' → logprob: -3.285984516143799
    5. 'represent' → logprob: -3.535984516143799
    6. ' correspond' → logprob: -4.035984516143799
    7. ' est' → logprob: -4.035984516143799
    8. 'continue' → logprob: -4.160984516143799
    9. '
' → logprob: -4.285984516143799
    10. 'repr' → logprob: -4.410984516143799

Token 347: ' la' (ID: 557)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.10207562893629074
    2. 'la' → logprob: -2.9770755767822266
    3. ' P' → logprob: -3.3520755767822266
    4. ' la' → logprob: -4.602075576782227
    5. 'les' → logprob: -7.477075576782227
    6. ' les' → logprob: -8.852075576782227
    7. 'l' → logprob: -9.602075576782227
    8. ' ' → logprob: -9.727075576782227
    9. 'np' → logprob: -9.852075576782227
    10. 'le' → logprob: -10.102075576782227

Token 348: ' sé' (ID: 7462)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.07906240969896317
    2. 'position' → logprob: -3.4540624618530273
    3. ' positions' → logprob: -3.7040624618530273
    4. 'sé' → logprob: -5.079062461853027
    5. 'P' → logprob: -5.579062461853027
    6. 'sequence' → logprob: -5.954062461853027
    7. 'pos' → logprob: -6.704062461853027
    8. ' sé' → logprob: -7.079062461853027
    9. ' P' → logprob: -7.204062461853027
    10. ' position' → logprob: -7.204062461853027

Token 349: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.00020711649267468601
    2. 'q' → logprob: -9.50020694732666
    3. '#' → logprob: -9.87520694732666
    4. 'QUENCE' → logprob: -9.87520694732666
    5. 'rie' → logprob: -11.12520694732666
    6. 'que' → logprob: -12.62520694732666
    7. 'é' → logprob: -13.12520694732666
    8. '
' → logprob: -13.75020694732666
    9. 'quences' → logprob: -13.87520694732666
    10. 'qu' → logprob: -14.25020694732666

Token 350: ' à' (ID: 1221)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.052139800041913986
    2. '
' → logprob: -3.5521397590637207
    3. '#' → logprob: -4.427139759063721
    4. 'DP' → logprob: -4.927139759063721
    5. 'cost' → logprob: -6.802139759063721
    6. 'M' → logprob: -8.427140235900879
    7. '

' → logprob: -8.427140235900879
    8. 'positions' → logprob: -8.677140235900879
    9. 'max' → logprob: -8.802140235900879
    10. ')' → logprob: -9.052140235900879

Token 351: ' traiter' (ID: 105852)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.462662011384964
    2. 'tr' → logprob: -1.4626619815826416
    3. 'placer' → logprob: -2.8376619815826416
    4. ' traiter' → logprob: -3.4626619815826416
    5. 'dé' → logprob: -3.8376619815826416
    6. 'process' → logprob: -4.712662220001221
    7. 'tra' → logprob: -5.712662220001221
    8. 'modifier' → logprob: -5.712662220001221
    9. 'an' → logprob: -6.462662220001221
    10. 'transform' → logprob: -6.587662220001221

Token 352: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06332889199256897
    2. 'dp' → logprob: -2.938328981399536
    3. '

' → logprob: -5.438328742980957
    4. '#' → logprob: -6.063328742980957
    5. '
' → logprob: -7.313328742980957
    6. 'DP' → logprob: -7.938328742980957
    7. '<|end|>' → logprob: -8.813328742980957
    8. 'cost' → logprob: -9.563328742980957
    9. '\n' → logprob: -9.813328742980957
    10. '  
' → logprob: -9.813328742980957

Token 353: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.017060192301869392
    2. '#' → logprob: -4.892060279846191
    3. 'DP' → logprob: -5.267060279846191
    4. '
' → logprob: -6.267060279846191
    5. 'cost' → logprob: -7.017060279846191
    6. 'max' → logprob: -7.517060279846191
    7. '

' → logprob: -9.392060279846191
    8. 'result' → logprob: -9.392060279846191
    9. 'M' → logprob: -9.392060279846191
    10. 'dist' → logprob: -9.392060279846191

Token 354: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06164819002151489
    2. '#' → logprob: -2.93664813041687
    3. 'max' → logprob: -6.186648368835449
    4. 'INF' → logprob: -6.186648368835449
    5. 'DP' → logprob: -7.436648368835449
    6. 'cost' → logprob: -7.561648368835449
    7. 'left' → logprob: -8.31164836883545
    8. 'L' → logprob: -8.68664836883545
    9. 'M' → logprob: -8.68664836883545
    10. 'D' → logprob: -9.31164836883545

Token 355: ' définit' (ID: 89835)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5825891494750977
    2. 'dp' → logprob: -0.9575891494750977
    3. '=' → logprob: -3.3325891494750977
    4. ' =' → logprob: -4.582589149475098
    5. 'def' → logprob: -6.332589149475098
    6. '
' → logprob: -6.707589149475098
    7. 'range' → logprob: -6.832589149475098
    8. '=
' → logprob: -7.082589149475098
    9. 'DP' → logprob: -7.332589149475098
    10. 'p' → logprob: -7.582589149475098

Token 356: ' une' (ID: 2463)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004695341922342777
    2. '#' → logprob: -5.504695415496826
    3. 'DP' → logprob: -8.629694938659668
    4. 'def' → logprob: -9.129694938659668
    5. 'INF' → logprob: -10.004694938659668
    6. 'inf' → logprob: -10.129694938659668
    7. '
' → logprob: -10.254694938659668
    8. 'cost' → logprob: -10.504694938659668
    9. 'max' → logprob: -10.629694938659668
    10. 'une' → logprob: -10.629694938659668

Token 357: ' grande' (ID: 10094)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.012124260887503624
    2. 'def' → logprob: -5.387124061584473
    3. '#' → logprob: -5.512124061584473
    4. 'DP' → logprob: -6.262124061584473
    5. '
' → logprob: -7.637124061584473
    6. 'liste' → logprob: -8.137124061584473
    7. 'large' → logprob: -8.387124061584473
    8. 'import' → logprob: -9.762124061584473
    9. 'INF' → logprob: -9.762124061584473
    10. 'variable' → logprob: -10.137124061584473

Token 358: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8123433589935303
    2. ' valeur' → logprob: -1.6873433589935303
    3. 'INF' → logprob: -1.8123433589935303
    4. '
' → logprob: -2.4373433589935303
    5. 'inf' → logprob: -3.1873433589935303
    6. ' constante' → logprob: -4.312343597412109
    7. '_val' → logprob: -4.562343597412109
    8. '_inf' → logprob: -4.812343597412109
    9. ' INF' → logprob: -5.062343597412109
    10. '_INF' → logprob: -5.312343597412109

Token 359: ' qui' (ID: 2780)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.004495515953749418
    2. 'inf' → logprob: -5.504495620727539
    3. ' INF' → logprob: -8.379495620727539
    4. ' =' → logprob: -9.379495620727539
    5. 'MAX' → logprob: -9.754495620727539
    6. '=' → logprob: -10.629495620727539
    7. 'dp' → logprob: -11.879495620727539
    8. 'max' → logprob: -12.254495620727539
    9. '_INF' → logprob: -12.754495620727539
    10. '_inf' → logprob: -14.004495620727539

Token 360: ' représent' (ID: 42664)
  Prédit: 'serv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'serv' → logprob: -0.10459478944540024
    2. 'sera' → logprob: -3.6045947074890137
    3. 're' → logprob: -4.104594707489014
    4. 'represent' → logprob: -4.229594707489014
    5. 'sim' → logprob: -4.604594707489014
    6. 'va' → logprob: -5.104594707489014
    7. 'sert' → logprob: -5.229594707489014
    8. 'rep' → logprob: -5.479594707489014
    9. 'repr' → logprob: -6.104594707489014
    10. ' représente' → logprob: -6.479594707489014

Token 361: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07652030885219574
    2. '=' → logprob: -2.7015202045440674
    3. ' =' → logprob: -5.9515204429626465
    4. 'era' → logprob: -6.3265204429626465
    5. '-' → logprob: -7.5765204429626465
    6. 'er' → logprob: -7.8265204429626465
    7. '-e' → logprob: -8.076519966125488
    8. '=e' → logprob: -8.076519966125488
    9. 'ent' → logprob: -8.576519966125488
    10. '#' → logprob: -9.451519966125488

Token 362: ' l' (ID: 305)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.3700183033943176
    2. 'inf' → logprob: -2.120018243789673
    3. ' float' → logprob: -3.245018243789673
    4. 'l' → logprob: -3.370018243789673
    5. ' une' → logprob: -3.370018243789673
    6. 'un' → logprob: -4.120018482208252
    7. ' un' → logprob: -4.120018482208252
    8. ' l' → logprob: -4.120018482208252
    9. 'INF' → logprob: -4.745018482208252
    10. 'np' → logprob: -4.745018482208252

Token 363: ''in' (ID: 17942)
  Prédit: ''in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.014674274250864983
    2. 'inf' → logprob: -4.639674186706543
    3. ''' → logprob: -6.639674186706543
    4. 'a' → logprob: -6.889674186706543
    5. '’in' → logprob: -7.639674186706543
    6. 'e' → logprob: -7.764674186706543
    7. '
' → logprob: -8.139674186706543
    8. 'in' → logprob: -8.764674186706543
    9. ''''' → logprob: -8.764674186706543
    10. 'INF' → logprob: -8.889674186706543

Token 364: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.003024529665708542
    2. 'float' → logprob: -6.253024578094482
    3. 'finity' → logprob: -7.628024578094482
    4. 'fin' → logprob: -8.128024101257324
    5. 'fi' → logprob: -8.878024101257324
    6. 'finite' → logprob: -10.003024101257324
    7. '```' → logprob: -10.503024101257324
    8. 'ff' → logprob: -11.378024101257324
    9. 'possible' → logprob: -11.628024101257324
    10. 'fty' → logprob: -11.628024101257324

Token 365: 'ini' (ID: 2363)
  Prédit: 'ini'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -1.1754400730133057
    2. 'float' → logprob: -1.3004400730133057
    3. 'inity' → logprob: -1.8004400730133057
    4. 'f' → logprob: -2.5504400730133057
    5. 'max' → logprob: -3.1754400730133057
    6. 'inty' → logprob: -3.5504400730133057
    7. 'finity' → logprob: -3.9254400730133057
    8. 'inite' → logprob: -4.050439834594727
    9. 'inf' → logprob: -4.175439834594727
    10. 'i' → logprob: -4.675439834594727

Token 366: ' pour' (ID: 1930)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.02981008030474186
    2. 'inf' → logprob: -3.5298101902008057
    3. ' =' → logprob: -11.154809951782227
    4. 'MAX' → logprob: -11.404809951782227
    5. ' INF' → logprob: -11.779809951782227
    6. '=' → logprob: -11.904809951782227
    7. '_INF' → logprob: -12.154809951782227
    8. 'IN' → logprob: -12.529809951782227
    9. 'Inf' → logprob: -12.904809951782227
    10. 'float' → logprob: -13.029809951782227

Token 367: ' notre' (ID: 12092)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.782535195350647
    2. 'l' → logprob: -1.282535195350647
    3. 'la' → logprob: -2.1575350761413574
    4. 'dp' → logprob: -3.1575350761413574
    5. 'initial' → logprob: -3.1575350761413574
    6. 'float' → logprob: -3.7825350761413574
    7. ' les' → logprob: -4.407535076141357
    8. ' la' → logprob: -4.532535076141357
    9. 'np' → logprob: -5.282535076141357
    10. ' l' → logprob: -5.407535076141357

Token 368: ' alg' (ID: 4485)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3104095757007599
    2. ' coût' → logprob: -2.5604095458984375
    3. ' dp' → logprob: -2.6854095458984375
    4. 'DP' → logprob: -2.9354095458984375
    5. ' DP' → logprob: -3.1854095458984375
    6. ' problème' → logprob: -5.0604095458984375
    7. 'INF' → logprob: -5.5604095458984375
    8. 'inf' → logprob: -5.8104095458984375
    9. ' code' → logprob: -6.0604095458984375
    10. ' dynamique' → logprob: -6.0604095458984375

Token 369: 'orith' (ID: 9996)
  Prédit: 'ini'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ini' → logprob: -1.1446951627731323
    2. 'inity' → logprob: -1.7696951627731323
    3. 'inf' → logprob: -2.394695281982422
    4. 'float' → logprob: -2.394695281982422
    5. 'IN' → logprob: -2.644695281982422
    6. 'inite' → logprob: -2.894695281982422
    7. 'ity' → logprob: -3.144695281982422
    8. 'INF' → logprob: -3.144695281982422
    9. 'f' → logprob: -3.644695281982422
    10. 'init' → logprob: -3.894695281982422

Token 370: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.010533531196415424
    2. 'ème' → logprob: -5.510533332824707
    3. 'th' → logprob: -5.635533332824707
    4. 't' → logprob: -6.760533332824707
    5. 'm' → logprob: -6.885533332824707
    6. '#' → logprob: -7.885533332824707
    7. 'f' → logprob: -9.635533332824707
    8. 'ith' → logprob: -9.760533332824707
    9. 'def' → logprob: -10.010533332824707
    10. 'ume' → logprob: -10.760533332824707

Token 371: ' (' (ID: 350)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.023254211992025375
    2. 'inf' → logprob: -3.773254156112671
    3. 'Inf' → logprob: -13.27325439453125
    4. '
' → logprob: -13.39825439453125
    5. 'IN' → logprob: -13.39825439453125
    6. '_INF' → logprob: -13.52325439453125
    7. 'MAX' → logprob: -13.77325439453125
    8. ' INF' → logprob: -14.39825439453125
    9. '_inf' → logprob: -15.27325439453125
    10. '

' → logprob: -15.64825439453125

Token 372: 'c' (ID: 66)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.04262891411781311
    2. 'inf' → logprob: -3.2926290035247803
    3. ' INF' → logprob: -5.667628765106201
    4. '10' → logprob: -8.04262924194336
    5. ')' → logprob: -8.41762924194336
    6. '
' → logprob: -8.54262924194336
    7. 'float' → logprob: -8.79262924194336
    8. ' inf' → logprob: -9.04262924194336
    9. 'Inf' → logprob: -10.66762924194336
    10. ')
' → logprob: -10.79262924194336

Token 373: ''est' (ID: 6616)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9065489768981934
    2. ' =' → logprob: -1.0315489768981934
    3. 'on' → logprob: -2.7815489768981934
    4. 'o' → logprob: -3.9065489768981934
    5. '=float' → logprob: -4.156548976898193
    6. 'ap' → logprob: -4.281548976898193
    7. 'ost' → logprob: -4.406548976898193
    8. '100' → logprob: -4.656548976898193
    9. 'ont' → logprob: -4.781548976898193
    10. '_' → logprob: -4.781548976898193

Token 374: ' une' (ID: 2463)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.2919199466705322
    2. ' ' → logprob: -1.4169199466705322
    3. 'float' → logprob: -2.1669199466705322
    4. 'int' → logprob: -2.6669199466705322
    5. '=' → logprob: -2.7919199466705322
    6. ' une' → logprob: -3.4169199466705322
    7. '100' → logprob: -3.4169199466705322
    8. ' =' → logprob: -3.5419199466705322
    9. ' float' → logprob: -3.6669199466705322
    10. '1' → logprob: -3.7919199466705322

Token 375: ' convention' (ID: 39395)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.25489890575408936
    2. 'int' → logprob: -1.7548989057540894
    3. 'INF' → logprob: -3.629899024963379
    4. 'inf' → logprob: -3.879899024963379
    5. 'float' → logprob: -5.879899024963379
    6. '1' → logprob: -7.379899024963379
    7. 'large' → logprob: -7.629899024963379
    8. '100' → logprob: -7.754899024963379
    9. 'INT' → logprob: -9.004899024963379
    10. '=' → logprob: -9.629899024963379

Token 376: ' en' (ID: 469)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.16385966539382935
    2. ' =' → logprob: -2.4138596057891846
    3. 'inf' → logprob: -3.7888596057891846
    4. '_inf' → logprob: -4.163859844207764
    5. ' INF' → logprob: -4.288859844207764
    6. '=' → logprob: -5.413859844207764
    7. '_INF' → logprob: -5.913859844207764
    8. ')' → logprob: -7.038859844207764
    9. 'dp' → logprob: -7.913859844207764
    10. ' inf' → logprob: -8.038859367370605

Token 377: ' programmation' (ID: 166376)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06671188771724701
    2. '100' → logprob: -3.691711902618408
    3. 'np' → logprob: -3.941711902618408
    4. 'float' → logprob: -4.816711902618408
    5. 'python' → logprob: -5.691711902618408
    6. 'dp' → logprob: -6.691711902618408
    7. 'int' → logprob: -6.816711902618408
    8. 'code' → logprob: -6.816711902618408
    9. 'inf' → logprob: -7.316711902618408
    10. 'DP' → logprob: -7.441711902618408

Token 378: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7959974408149719
    2. 'INF' → logprob: -1.1709973812103271
    3. 'inf' → logprob: -2.170997381210327
    4. '_inf' → logprob: -2.670997381210327
    5. '_' → logprob: -4.170997619628906
    6. '_INF' → logprob: -4.295997619628906
    7. 'MAX' → logprob: -5.670997619628906
    8. 'dp' → logprob: -5.920997619628906
    9. ')
' → logprob: -6.170997619628906
    10. ' INF' → logprob: -6.295997619628906

Token 379: ' des' (ID: 731)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02471858263015747
    2. 'float' → logprob: -3.8997185230255127
    3. 'int' → logprob: -6.524718761444092
    4. '100' → logprob: -6.649718761444092
    5. 'inf' → logprob: -7.399718761444092
    6. 'np' → logprob: -7.649718761444092
    7. 'INF' → logprob: -9.524718284606934
    8. '1' → logprob: -9.899718284606934
    9. '999' → logprob: -10.274718284606934
    10. ' ' → logprob: -10.274718284606934

Token 380: ' valeurs' (ID: 73668)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.2157769203186035
    2. 'f' → logprob: -1.9657769203186035
    3. 'inf' → logprob: -2.0907769203186035
    4. '```' → logprob: -2.2157769203186035
    5. '100' → logprob: -2.4657769203186035
    6. 'int' → logprob: -3.7157769203186035
    7. 'co' → logprob: -3.8407769203186035
    8. ' range' → logprob: -3.9657769203186035
    9. 'dp' → logprob: -3.9657769203186035
    10. 'range' → logprob: -4.0907769203186035

Token 381: ' imposs' (ID: 66138)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -1.6588828563690186
    2. 'import' → logprob: -1.7838828563690186
    3. '_inf' → logprob: -2.0338828563690186
    4. '```' → logprob: -2.4088828563690186
    5. ' =' → logprob: -2.5338828563690186
    6. 'inf' → logprob: -2.7838828563690186
    7. 'max' → logprob: -2.9088828563690186
    8. ')' → logprob: -3.2838828563690186
    9. '_' → logprob: -3.4088828563690186
    10. '_max' → logprob: -3.7838828563690186

Token 382: 'ibles' (ID: 12234)
  Prédit: 'ible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ible' → logprob: -0.28728094696998596
    2. 'ité' → logprob: -1.7872809171676636
    3. 'itive' → logprob: -3.662281036376953
    4. 'import' → logprob: -4.662281036376953
    5. 'ite' → logprob: -4.912281036376953
    6. 'ibles' → logprob: -5.037281036376953
    7. 'ibil' → logprob: -5.037281036376953
    8. 'ibilité' → logprob: -5.787281036376953
    9. 'iblement' → logprob: -5.912281036376953
    10. 'ive' → logprob: -5.912281036376953

Token 383: ' d' (ID: 272)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5780001282691956
    2. 'à' → logprob: -1.9530000686645508
    3. ')' → logprob: -2.578000068664551
    4. 'ment' → logprob: -2.703000068664551
    5. 'inf' → logprob: -3.453000068664551
    6. 'ément' → logprob: -4.203000068664551
    7. 'pour' → logprob: -4.328000068664551
    8. '=' → logprob: -4.328000068664551
    9. ',' → logprob: -4.828000068664551
    10. '```' → logprob: -4.953000068664551

Token 384: ''' (ID: 6)
  Prédit: ''à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.7029861211776733
    2. 'à' → logprob: -2.202986240386963
    3. 'u' → logprob: -2.452986240386963
    4. ''être' → logprob: -3.202986240386963
    5. 'ans' → logprob: -3.327986240386963
    6. 'e' → logprob: -3.452986240386963
    7. 'n' → logprob: -3.577986240386963
    8. 'finity' → logprob: -3.577986240386963
    9. '```' → logprob: -4.077986240386963
    10. 'a' → logprob: -4.202986240386963

Token 385: 'atte' (ID: 23975)
  Prédit: 'atte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.21044155955314636
    2. 'int' → logprob: -2.8354415893554688
    3. 'fin' → logprob: -3.4604415893554688
    4. 'à' → logprob: -4.335441589355469
    5. 'inf' → logprob: -4.335441589355469
    6. '```' → logprob: -4.460441589355469
    7. 'float' → logprob: -4.710441589355469
    8. 'const' → logprob: -5.460441589355469
    9. 'att' → logprob: -5.710441589355469
    10. '100' → logprob: -5.710441589355469

Token 386: 'indre' (ID: 28945)
  Prédit: 'ite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ite' → logprob: -1.2835259437561035
    2. 'ites' → logprob: -1.9085259437561035
    3. 'é' → logprob: -2.1585259437561035
    4. 'à' → logprob: -2.1585259437561035
    5. 'ale' → logprob: -2.4085259437561035
    6. 'ub' → logprob: -3.4085259437561035
    7. 'ité' → logprob: -3.9085259437561035
    8. 'it' → logprob: -4.1585259437561035
    9. 'éf' → logprob: -4.2835259437561035
    10. 'u' → logprob: -4.5335259437561035

Token 387: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055594414472579956
    2. ' )' → logprob: -3.6805944442749023
    3. 'INF' → logprob: -4.680594444274902
    4. ').' → logprob: -4.930594444274902
    5. '_inf' → logprob: -5.555594444274902
    6. 'inf' → logprob: -5.555594444274902
    7. ' =' → logprob: -6.930594444274902
    8. '_' → logprob: -7.305594444274902
    9. ',' → logprob: -7.430594444274902
    10. ' INF' → logprob: -7.805594444274902

Token 388: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.08628038316965103
    2. 'ce' → logprob: -3.461280345916748
    3. 'les' → logprob: -3.961280345916748
    4. 'la' → logprob: -3.961280345916748
    5. 'l' → logprob: -5.336280345916748
    6. 'un' → logprob: -6.586280345916748
    7. 'dp' → logprob: -6.711280345916748
    8. ' ce' → logprob: -6.836280345916748
    9. 'cet' → logprob: -6.836280345916748
    10. 'c' → logprob: -7.086280345916748

Token 389: ' contexte' (ID: 82673)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.37018901109695435
    2. 'pro' → logprob: -1.7451889514923096
    3. 'calcul' → logprob: -3.6201889514923096
    4. '
' → logprob: -3.9951889514923096
    5. 'co' → logprob: -4.620189189910889
    6. 'con' → logprob: -4.620189189910889
    7. 'programme' → logprob: -4.745189189910889
    8. 'int' → logprob: -4.870189189910889
    9. ' code' → logprob: -4.995189189910889
    10. 'range' → logprob: -4.995189189910889

Token 390: ')
' (ID: 446)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.7812074422836304
    2. ')' → logprob: -1.5312074422836304
    3. 'dp' → logprob: -2.40620756149292
    4. 'inf' → logprob: -2.65620756149292
    5. 'max' → logprob: -3.53120756149292
    6. ' )' → logprob: -3.65620756149292
    7. ' =' → logprob: -3.65620756149292
    8. ' INF' → logprob: -3.65620756149292
    9. '_inf' → logprob: -3.90620756149292
    10. 'MAX' → logprob: -4.65620756149292

Token 391: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.014174087904393673
    2. 'inf' → logprob: -4.264173984527588
    3. 'IN' → logprob: -12.889174461364746
    4. ' INF' → logprob: -12.889174461364746
    5. 'Inf' → logprob: -13.014174461364746
    6. '_INF' → logprob: -13.639174461364746
    7. 'MAX' → logprob: -14.014174461364746
    8. '
' → logprob: -15.014174461364746
    9. '10' → logprob: -15.639174461364746
    10. '_inf' → logprob: -15.764174461364746

Token 392: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519338130950928
    2. ' =' → logprob: -1.5019338130950928
    3. '=int' → logprob: -12.376934051513672
    4. ')' → logprob: -16.126934051513672
    5. 'int' → logprob: -16.126934051513672
    6. '＝' → logprob: -16.376934051513672
    7. ' ' → logprob: -16.876934051513672
    8. '100' → logprob: -17.626934051513672
    9. ',' → logprob: -17.751934051513672
    10. '```' → logprob: -18.126934051513672

Token 393: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0013148818397894502
    2. 'float' → logprob: -6.751315116882324
    3. 'int' → logprob: -9.001315116882324
    4. '1' → logprob: -10.876315116882324
    5. '100' → logprob: -13.626315116882324
    6. ' ' → logprob: -13.751315116882324
    7. ' float' → logprob: -15.751315116882324
    8. '101' → logprob: -17.626314163208008
    9. '999' → logprob: -17.751314163208008
    10. 'np' → logprob: -18.001314163208008

Token 394: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0016389968805015087
    2. 'float' → logprob: -6.751638889312744
    3. 'int' → logprob: -7.751638889312744
    4. '1' → logprob: -10.251639366149902
    5. '100' → logprob: -13.251639366149902
    6. 'np' → logprob: -14.126639366149902
    7. ' ' → logprob: -14.501639366149902
    8. ' float' → logprob: -16.376638412475586
    9. '999' → logprob: -16.626638412475586
    10. '2' → logprob: -17.126638412475586

Token 395: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.004586653783917427
    2. '10' → logprob: -5.879586696624756
    3. '18' → logprob: -7.129586696624756
    4. '15' → logprob: -7.629586696624756
    5. '12' → logprob: -8.129586219787598
    6. '**' → logprob: -9.004586219787598
    7. '7' → logprob: -10.129586219787598
    8. '8' → logprob: -11.879586219787598
    9. '14' → logprob: -12.129586219787598
    10. '16' → logprob: -12.129586219787598

Token 396: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.4887709319591522
    2. '15' → logprob: -0.9887709617614746
    3. '18' → logprob: -4.613770961761475
    4. '10' → logprob: -5.488770961761475
    5. '12' → logprob: -7.738770961761475
    6. '16' → logprob: -10.113770484924316
    7. '14' → logprob: -10.113770484924316
    8. '13' → logprob: -10.988770484924316
    9. '11' → logprob: -13.113770484924316
    10. '17' → logprob: -13.738770484924316

Token 397: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.2700831890106201
    2. '15' → logprob: -1.5200831890106201
    3. '18' → logprob: -4.520083427429199
    4. '10' → logprob: -5.145083427429199
    5. '12' → logprob: -6.895083427429199
    6. '14' → logprob: -9.0200834274292
    7. '13' → logprob: -9.8950834274292
    8. '16' → logprob: -9.8950834274292
    9. '7' → logprob: -11.3950834274292
    10. '11' → logprob: -11.6450834274292

Token 398: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.23495522141456604
    2. '
' → logprob: -1.6099551916122437
    3. 'DP' → logprob: -4.859955310821533
    4. '
' → logprob: -7.609955310821533
    5. ' dp' → logprob: -7.734955310821533
    6. '

' → logprob: -8.484954833984375
    7. ' 
' → logprob: -9.484954833984375
    8. '  
' → logprob: -9.484954833984375
    9. '#' → logprob: -9.609954833984375
    10. '_dp' → logprob: -9.609954833984375

Token 399: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.646685004234314
    2. '
' → logprob: -0.771685004234314
    3. '

' → logprob: -4.7716851234436035
    4. 'DP' → logprob: -5.7716851234436035
    5. '
' → logprob: -6.5216851234436035
    6. '#' → logprob: -7.5216851234436035
    7. '  
' → logprob: -9.396684646606445
    8. 'cost' → logprob: -9.396684646606445
    9. '' → logprob: -10.021684646606445
    10. ' dp' → logprob: -10.146684646606445

Token 400: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0025560460053384304
    2. '#' → logprob: -6.252555847167969
    3. 'DP' → logprob: -7.877555847167969
    4. '
' → logprob: -8.877555847167969
    5. 'cost' → logprob: -9.877555847167969
    6. ' dp' → logprob: -10.627555847167969
    7. 'dist' → logprob: -11.877555847167969
    8. '_dp' → logprob: -12.627555847167969
    9. 'Dp' → logprob: -12.627555847167969
    10. '

' → logprob: -12.877555847167969

Token 401: '10' (ID: 702)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005270280409604311
    2. '#' → logprob: -5.255270481109619
    3. 'DP' → logprob: -11.130270004272461
    4. 'cost' → logprob: -11.630270004272461
    5. '
' → logprob: -12.255270004272461
    6. 'dist' → logprob: -13.130270004272461
    7. 'd' → logprob: -13.755270004272461
    8. '```' → logprob: -14.255270004272461
    9. ' dp' → logprob: -14.380270004272461
    10. '

' → logprob: -14.505270004272461

Token 402: ' puissance' (ID: 63494)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.019559232518076897
    2. '18' → logprob: -4.394559383392334
    3. ' **' → logprob: -5.019559383392334
    4. '*' → logprob: -8.519558906555176
    5. '9' → logprob: -9.144558906555176
    6. '^' → logprob: -10.269558906555176
    7. '+' → logprob: -10.394558906555176
    8. ' ' → logprob: -11.394558906555176
    9. '```' → logprob: -11.644558906555176
    10. ' *' → logprob: -12.394558906555176

Token 403: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -1.1517960956552997e-05
    2. '9' → logprob: -11.875011444091797
    3. ' ' → logprob: -13.125011444091797
    4. '19' → logprob: -13.375011444091797
    5. '15' → logprob: -14.250011444091797
    6. '12' → logprob: -16.250011444091797
    7. '20' → logprob: -16.250011444091797
    8. '6' → logprob: -16.625011444091797
    9. '16' → logprob: -16.750011444091797
    10. '10' → logprob: -17.000011444091797

Token 404: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -5.512236498361744e-07
    2. '9' → logprob: -15.875000953674316
    3. '15' → logprob: -16.0
    4. '19' → logprob: -16.625
    5. ' ' → logprob: -16.875
    6. '12' → logprob: -18.375
    7. '6' → logprob: -18.5
    8. '10' → logprob: -19.0
    9. '8' → logprob: -19.125
    10. '16' → logprob: -19.375

Token 405: ' est' (ID: 893)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20668883621692657
    2. '
' → logprob: -1.7066888809204102
    3. ' dp' → logprob: -6.83168888092041
    4. 'DP' → logprob: -6.83168888092041
    5. '  
' → logprob: -7.20668888092041
    6. '
' → logprob: -7.45668888092041
    7. ' 
' → logprob: -7.45668888092041
    8. '

' → logprob: -7.83168888092041
    9. ',' → logprob: -8.33168888092041
    10. '_dp' → logprob: -8.83168888092041

Token 406: ' utilisé' (ID: 53138)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.45776501297950745
    2. ' ' → logprob: -2.0827651023864746
    3. ' un' → logprob: -2.0827651023864746
    4. ' a' → logprob: -2.4577651023864746
    5. 'a' → logprob: -4.457765102386475
    6. '```' → logprob: -5.332765102386475
    7. '<|end|>' → logprob: -5.582765102386475
    8. 'un' → logprob: -6.582765102386475
    9. 'l' → logprob: -6.832765102386475
    10. '10' → logprob: -7.082765102386475

Token 407: ' ici' (ID: 27994)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15564857423305511
    2. 'dp' → logprob: -2.4056484699249268
    3. '#' → logprob: -4.155648708343506
    4. ')' → logprob: -4.530648708343506
    5. '

' → logprob: -5.780648708343506
    6. 'DP' → logprob: -5.905648708343506
    7. ' as' → logprob: -5.905648708343506
    8. '<|end|>' → logprob: -5.905648708343506
    9. '_dp' → logprob: -5.905648708343506
    10. '  
' → logprob: -6.030648708343506

Token 408: ' comme' (ID: 7971)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1927942931652069
    2. '
' → logprob: -1.8177943229675293
    3. 'DP' → logprob: -5.192794322967529
    4. '#' → logprob: -5.817794322967529
    5. '

' → logprob: -6.567794322967529
    6. '_dp' → logprob: -7.067794322967529
    7. ' dp' → logprob: -7.567794322967529
    8. ',' → logprob: -7.942794322967529
    9. ')' → logprob: -8.317793846130371
    10. '
' → logprob: -8.567793846130371

Token 409: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.11602743715047836
    2. 'un' → logprob: -2.491027355194092
    3. ' une' → logprob: -3.741027355194092
    4. 'l' → logprob: -6.366027355194092
    5. ''une' → logprob: -7.241027355194092
    6. 'in' → logprob: -8.36602783203125
    7. 'inf' → logprob: -8.61602783203125
    8. ''un' → logprob: -9.86602783203125
    9. ' un' → logprob: -10.36602783203125
    10. '"' → logprob: -10.99102783203125

Token 410: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.005475651938468218
    2. 'gr' → logprob: -5.7554755210876465
    3. 'tr' → logprob: -6.1304755210876465
    4. 'const' → logprob: -9.505475997924805
    5. 'grand' → logprob: -11.505475997924805
    6. 'vale' → logprob: -11.630475997924805
    7. ' valeur' → logprob: -12.005475997924805
    8. 's' → logprob: -12.630475997924805
    9. 'value' → logprob: -12.630475997924805
    10. 'repr' → logprob: -13.255475997924805

Token 411: ' infin' (ID: 93237)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.8003759384155273
    2. ' élevée' → logprob: -2.1753759384155273
    3. ' très' → logprob: -2.4253759384155273
    4. ' d' → logprob: -2.8003759384155273
    5. '_' → logprob: -3.0503759384155273
    6. 'import' → logprob: -3.1753759384155273
    7. 'é' → logprob: -3.3003759384155273
    8. 's' → logprob: -3.3003759384155273
    9. 'd' → logprob: -3.4253759384155273
    10. ' de' → logprob: -4.425375938415527

Token 412: 'iment' (ID: 2581)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.39393824338912964
    2. '```' → logprob: -1.2689383029937744
    3. 'try' → logprob: -4.643938064575195
    4. '**' → logprob: -5.018938064575195
    5. '`' → logprob: -5.643938064575195
    6. 'fy' → logprob: -5.893938064575195
    7. '``' → logprob: -6.018938064575195
    8. ')' → logprob: -6.643938064575195
    9. '##' → logprob: -6.768938064575195
    10. '+' → logprob: -6.768938064575195

Token 413: ' grande' (ID: 10094)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -1.0916640758514404
    2. ' grande' → logprob: -1.2166640758514404
    3. ' élevée' → logprob: -1.8416640758514404
    4. 'import' → logprob: -2.5916640758514404
    5. 'gr' → logprob: -2.8416640758514404
    6. ' large' → logprob: -3.5916640758514404
    7. ' haute' → logprob: -4.0916643142700195
    8. 'grand' → logprob: -4.0916643142700195
    9. 'é' → logprob: -5.0916643142700195
    10. 'ha' → logprob: -6.0916643142700195

Token 414: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13963070511817932
    2. '
' → logprob: -2.1396307945251465
    3. 'DP' → logprob: -5.2646307945251465
    4. '#' → logprob: -6.0146307945251465
    5. '

' → logprob: -6.3896307945251465
    6. ',' → logprob: -6.5146307945251465
    7. ' dp' → logprob: -7.7646307945251465
    8. ',
' → logprob: -8.014630317687988
    9. '_dp' → logprob: -8.389630317687988
    10. '
' → logprob: -8.514630317687988

Token 415: ' initial' (ID: 4871)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.22377461194992065
    2. 'initial' → logprob: -2.0987746715545654
    3. 'repr' → logprob: -2.9737746715545654
    4. 'min' → logprob: -4.098774433135986
    5. 'l' → logprob: -5.973774433135986
    6. 'sim' → logprob: -6.098774433135986
    7. ' représ' → logprob: -7.098774433135986
    8. 'rep' → logprob: -7.223774433135986
    9. ' initial' → logprob: -7.348774433135986
    10. 'init' → logprob: -7.473774433135986

Token 416: 'iser' (ID: 7466)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.34103113412857056
    2. 'ale' → logprob: -1.9660310745239258
    3. 'iser' → logprob: -2.341031074523926
    4. 'er' → logprob: -3.591031074523926
    5. 'e' → logprob: -4.966031074523926
    6. 'aise' → logprob: -5.841031074523926
    7. 'um' → logprob: -6.341031074523926
    8. 'a' → logprob: -6.466031074523926
    9. 'aire' → logprob: -6.716031074523926
    10. 'ité' → logprob: -6.966031074523926

Token 417: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2598751485347748
    2. ' dp' → logprob: -1.7598751783370972
    3. ')' → logprob: -3.3848750591278076
    4. 'DP' → logprob: -4.759875297546387
    5. ' )' → logprob: -6.134875297546387
    6. '
' → logprob: -6.259875297546387
    7. '_dp' → logprob: -6.259875297546387
    8. ' DP' → logprob: -6.384875297546387
    9. ']' → logprob: -7.509875297546387
    10. '[]' → logprob: -7.634875297546387

Token 418: ' tableau' (ID: 67053)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10384894162416458
    2. ' dp' → logprob: -2.603848934173584
    3. ' coût' → logprob: -4.103848934173584
    4. ' DP' → logprob: -6.103848934173584
    5. 'co' → logprob: -6.478848934173584
    6. 'DP' → logprob: -7.353848934173584
    7. ' tableau' → logprob: -7.478848934173584
    8. 'cost' → logprob: -7.728848934173584
    9. '_dp' → logprob: -7.978848934173584
    10. 'cout' → logprob: -8.103849411010742

Token 419: ' dynamique' (ID: 98708)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004565057344734669
    2. '#' → logprob: -6.254565238952637
    3. '
' → logprob: -6.754565238952637
    4. 'DP' → logprob: -7.004565238952637
    5. 'cost' → logprob: -8.129565238952637
    6. '_dp' → logprob: -9.254565238952637
    7. 'dist' → logprob: -9.629565238952637
    8. '
' → logprob: -10.879565238952637
    9. 'Dp' → logprob: -10.879565238952637
    10. ' dp' → logprob: -11.504565238952637

Token 420: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.019270680844783783
    2. '
' → logprob: -4.269270896911621
    3. 'DP' → logprob: -5.644270896911621
    4. '#' → logprob: -6.769270896911621
    5. '
' → logprob: -9.019270896911621
    6. 'cost' → logprob: -9.519270896911621
    7. 'Dp' → logprob: -10.519270896911621
    8. '```' → logprob: -10.644270896911621
    9. '_dp' → logprob: -10.644270896911621
    10. 'dist' → logprob: -10.894270896911621

Token 421: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006619096267968416
    2. '
' → logprob: -5.256618976593018
    3. 'DP' → logprob: -6.756618976593018
    4. '#' → logprob: -9.256619453430176
    5. '
' → logprob: -10.256619453430176
    6. '

' → logprob: -10.631619453430176
    7. 'cost' → logprob: -11.506619453430176
    8. '_dp' → logprob: -11.506619453430176
    9. 'dist' → logprob: -11.881619453430176
    10. 'import' → logprob: -12.381619453430176

Token 422: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018219249323010445
    2. '#' → logprob: -4.018219470977783
    3. 'DP' → logprob: -10.268218994140625
    4. 'cost' → logprob: -11.018218994140625
    5. 'from' → logprob: -12.268218994140625
    6. '
' → logprob: -12.643218994140625
    7. 'dist' → logprob: -13.393218994140625
    8. 'def' → logprob: -13.643218994140625
    9. 'd' → logprob: -13.893218994140625
    10. '```' → logprob: -14.268218994140625

Token 423: ' crée' (ID: 102256)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02087946981191635
    2. ' dp' → logprob: -3.8958795070648193
    3. '#' → logprob: -9.020879745483398
    4. 'DP' → logprob: -9.020879745483398
    5. 'cost' → logprob: -11.020879745483398
    6. ' =' → logprob: -11.395879745483398
    7. '_dp' → logprob: -11.395879745483398
    8. 'v' → logprob: -12.145879745483398
    9. '	dp' → logprob: -12.395879745483398
    10. 'd' → logprob: -12.520879745483398

Token 424: ' un' (ID: 537)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008813577704131603
    2. ' dp' → logprob: -4.758813381195068
    3. ' une' → logprob: -9.883813858032227
    4. ' un' → logprob: -10.133813858032227
    5. 'DP' → logprob: -10.133813858032227
    6. 'a' → logprob: -11.133813858032227
    7. '_dp' → logprob: -11.508813858032227
    8. '	dp' → logprob: -11.758813858032227
    9. ' DP' → logprob: -12.008813858032227
    10. '(dp' → logprob: -12.133813858032227

Token 425: ' tableau' (ID: 67053)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002500152215361595
    2. 'np' → logprob: -6.127500057220459
    3. 'numpy' → logprob: -8.877500534057617
    4. ' dp' → logprob: -9.252500534057617
    5. 'DP' → logprob: -10.752500534057617
    6. 'table' → logprob: -11.002500534057617
    7. 'list' → logprob: -11.252500534057617
    8. 'nd' → logprob: -11.627500534057617
    9. 'array' → logprob: -12.127500534057617
    10. 'tab' → logprob: -12.627500534057617

Token 426: ' numpy' (ID: 19529)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0006327360169962049
    2. ' dp' → logprob: -8.000632286071777
    3. 'DP' → logprob: -8.375632286071777
    4. ' =' → logprob: -11.250632286071777
    5. 'd' → logprob: -11.375632286071777
    6. 'of' → logprob: -12.000632286071777
    7. '_dp' → logprob: -12.000632286071777
    8. '(dp' → logprob: -12.125632286071777
    9. '```' → logprob: -12.625632286071777
    10. 'cost' → logprob: -12.625632286071777

Token 427: ' d' (ID: 272)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.015079693868756294
    2. ' dp' → logprob: -4.640079498291016
    3. ' =' → logprob: -6.265079498291016
    4. 'DP' → logprob: -6.265079498291016
    5. ',' → logprob: -7.765079498291016
    6. '.zeros' → logprob: -8.140079498291016
    7. '.dp' → logprob: -8.640079498291016
    8. 'int' → logprob: -9.765079498291016
    9. '(dp' → logprob: -9.765079498291016
    10. '_dp' → logprob: -10.015079498291016

Token 428: ''ent' (ID: 53422)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'type' → logprob: -1.4895769357681274
    2. 'dtype' → logprob: -1.6145769357681274
    3. ''ent' → logprob: -1.6145769357681274
    4. 'e' → logprob: -2.114576816558838
    5. 'imension' → logprob: -2.239576816558838
    6. ' dtype' → logprob: -3.614576816558838
    7. 'p' → logprob: -4.114576816558838
    8. 'es' → logprob: -4.114576816558838
    9. ''int' → logprob: -4.114576816558838
    10. 'int' → logprob: -4.989576816558838

Token 429: 'iers' (ID: 11012)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'type' → logprob: -1.2860029935836792
    2. 'dtype' → logprob: -1.5360029935836792
    3. 'np' → logprob: -2.0360031127929688
    4. 'p' → logprob: -2.2860031127929688
    5. 'pty' → logprob: -2.5360031127929688
    6. 't' → logprob: -3.9110031127929688
    7. 'iers' → logprob: -4.036003112792969
    8. 'f' → logprob: -4.161003112792969
    9. 'ées' → logprob: -4.661003112792969
    10. '```' → logprob: -4.786003112792969

Token 430: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01104134414345026
    2. ' dp' → logprob: -4.636041164398193
    3. 'dtype' → logprob: -8.011041641235352
    4. 'DP' → logprob: -8.386041641235352
    5. 'd' → logprob: -8.761041641235352
    6. ',' → logprob: -8.761041641235352
    7. '(dp' → logprob: -9.761041641235352
    8. 'min' → logprob: -9.886041641235352
    9. 'int' → logprob: -10.011041641235352
    10. '
' → logprob: -10.136041641235352

Token 431: ' taille' (ID: 41644)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -1.2771111726760864
    2. 'dimension' → logprob: -1.2771111726760864
    3. 'dtype' → logprob: -2.277111053466797
    4. 'int' → logprob: -2.277111053466797
    5. 'long' → logprob: -3.027111053466797
    6. '64' → logprob: -3.027111053466797
    7. 'tail' → logprob: -3.402111053466797
    8. ' taille' → logprob: -3.527111053466797
    9. 'dim' → logprob: -3.902111053466797
    10. 'forme' → logprob: -4.277111053466797

Token 432: ' N' (ID: 478)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.04202204570174217
    2. '(' → logprob: -3.4170219898223877
    3. 'N' → logprob: -5.167022228240967
    4. ' (' → logprob: -6.292022228240967
    5. '3' → logprob: -8.042021751403809
    6. ' N' → logprob: -9.292021751403809
    7. 'dp' → logprob: -9.667021751403809
    8. '((' → logprob: -9.667021751403809
    9. '2' → logprob: -10.042021751403809
    10. '[N' → logprob: -10.167021751403809

Token 433: '+' (ID: 10)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0019438649760559201
    2. ',' → logprob: -7.001944065093994
    3. ' =' → logprob: -7.876944065093994
    4. ' dp' → logprob: -8.001943588256836
    5. 'DP' → logprob: -9.251943588256836
    6. '(dp' → logprob: -9.751943588256836
    7. 'dtype' → logprob: -10.126943588256836
    8. 'd' → logprob: -10.751943588256836
    9. '=' → logprob: -11.001943588256836
    10. 'np' → logprob: -11.376943588256836

Token 434: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012282649986445904
    2. '2' → logprob: -5.012282848358154
    3. '3' → logprob: -5.262282848358154
    4. '4' → logprob: -8.137282371520996
    5. ' ' → logprob: -10.137282371520996
    6. '5' → logprob: -11.512282371520996
    7. '6' → logprob: -11.762282371520996
    8. '7' → logprob: -11.887282371520996
    9. '10' → logprob: -12.512282371520996
    10. '(' → logprob: -12.637282371520996

Token 435: ' et' (ID: 859)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0019307781476527452
    2. ',' → logprob: -6.5019307136535645
    3. ' =' → logprob: -8.376931190490723
    4. 'DP' → logprob: -9.126931190490723
    5. ' dp' → logprob: -10.001931190490723
    6. '=' → logprob: -11.626931190490723
    7. 'D' → logprob: -12.001931190490723
    8. 'd' → logprob: -12.501931190490723
    9. '(dp' → logprob: -12.626931190490723
    10. '_dp' → logprob: -12.751931190490723

Token 436: ' on' (ID: 402)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.006718571297824383
    2. ' dtype' → logprob: -5.756718635559082
    3. 'dp' → logprob: -6.256718635559082
    4. 'shape' → logprob: -7.506718635559082
    5. 'fill' → logprob: -7.756718635559082
    6. 'nd' → logprob: -8.381718635559082
    7. '3' → logprob: -9.006718635559082
    8. 'np' → logprob: -9.381718635559082
    9. '2' → logprob: -9.881718635559082
    10. '1' → logprob: -10.756718635559082

Token 437: ' l' (ID: 305)
  Prédit: 'fill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fill' → logprob: -0.11466067284345627
    2. '.fill' → logprob: -2.3646607398986816
    3. 'dtype' → logprob: -4.614660739898682
    4. 'initialize' → logprob: -6.489660739898682
    5. ' fill' → logprob: -6.614660739898682
    6. 'initial' → logprob: -7.239660739898682
    7. 'fills' → logprob: -8.364660263061523
    8. '[:]' → logprob: -8.614660263061523
    9. ' initialize' → logprob: -9.364660263061523
    10. 'f' → logprob: -9.739660263061523

Token 438: ''' (ID: 6)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.6460736989974976
    2. ''' → logprob: -2.146073818206787
    3. 'rem' → logprob: -2.271073818206787
    4. 'initialize' → logprob: -2.396073818206787
    5. 'init' → logprob: -2.771073818206787
    6. 'initialized' → logprob: -3.896073818206787
    7. 'fill' → logprob: -4.021073818206787
    8. ' initialise' → logprob: -4.146073818206787
    9. '.fill' → logprob: -4.896073818206787
    10. 'n' → logprob: -4.896073818206787

Token 439: 'initial' (ID: 17493)
  Prédit: 'initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.07162568718194962
    2. 'rem' → logprob: -3.5716257095336914
    3. 'initialize' → logprob: -4.071625709533691
    4. 'fill' → logprob: -4.321625709533691
    5. 'init' → logprob: -4.696625709533691
    6. 'itial' → logprob: -7.571625709533691
    7. 'initialized' → logprob: -8.321625709533691
    8. 'all' → logprob: -8.446625709533691
    9. 'itialize' → logprob: -9.321625709533691
    10. 'filled' → logprob: -9.446625709533691

Token 440: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.0016028175596147776
    2. 'ize' → logprob: -6.501602649688721
    3. 'aise' → logprob: -10.501603126525879
    4. 'isé' → logprob: -11.126603126525879
    5. 'is' → logprob: -11.251603126525879
    6. '```' → logprob: -11.876603126525879
    7. 'e' → logprob: -12.126603126525879
    8. 'iser' → logprob: -12.251603126525879
    9. 'yse' → logprob: -12.376603126525879
    10. 'al' → logprob: -12.501603126525879

Token 441: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5777150392532349
    2. 'dp' → logprob: -1.0777150392532349
    3. ' =' → logprob: -3.3277149200439453
    4. '(' → logprob: -4.577714920043945
    5. '(np' → logprob: -4.577714920043945
    6. '=' → logprob: -4.827714920043945
    7. ')' → logprob: -4.827714920043945
    8. 'dtype' → logprob: -5.327714920043945
    9. 'np' → logprob: -5.702714920043945
    10. 'd' → logprob: -5.827714920043945

Token 442: ' la' (ID: 557)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.00010986098641296849
    2. 'np' → logprob: -9.250109672546387
    3. '[' → logprob: -12.125109672546387
    4. 'inf' → logprob: -12.250109672546387
    5. ' INF' → logprob: -13.625109672546387
    6. 'IN' → logprob: -14.250109672546387
    7. 'Inf' → logprob: -14.375109672546387
    8. '-INF' → logprob: -14.625109672546387
    9. '_INF' → logprob: -14.625109672546387
    10. 'False' → logprob: -17.000110626220703

Token 443: ' valeur' (ID: 41664)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0016674461076036096
    2. 'inf' → logprob: -6.876667499542236
    3. 'np' → logprob: -7.876667499542236
    4. ' INF' → logprob: -8.626667022705078
    5. 'value' → logprob: -10.751667022705078
    6. 'IN' → logprob: -11.126667022705078
    7. 'Inf' → logprob: -11.751667022705078
    8. '_INF' → logprob: -11.751667022705078
    9. '[' → logprob: -12.376667022705078
    10. ' np' → logprob: -12.751667022705078

Token 444: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0005297990282997489
    2. '(IN' → logprob: -7.625529766082764
    3. 'inf' → logprob: -11.125530242919922
    4. '[' → logprob: -11.625530242919922
    5. '(' → logprob: -12.125530242919922
    6. ' INF' → logprob: -12.750530242919922
    7. 'IN' → logprob: -12.750530242919922
    8. '-INF' → logprob: -12.875530242919922
    9. '_INF' → logprob: -13.250530242919922
    10. 'np' → logprob: -14.250530242919922

Token 445: '.' (ID: 13)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00026729601086117327
    2. 'DP' → logprob: -8.750267028808594
    3. 'cost' → logprob: -9.750267028808594
    4. ' dp' → logprob: -11.250267028808594
    5. 'dist' → logprob: -11.625267028808594
    6. ',' → logprob: -11.750267028808594
    7. '```' → logprob: -12.375267028808594
    8. 'D' → logprob: -12.500267028808594
    9. ' =' → logprob: -12.625267028808594
    10. 'd' → logprob: -13.125267028808594

Token 446: ' Le' (ID: 2018)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0003763343847822398
    2. 'cost' → logprob: -8.62537670135498
    3. 'DP' → logprob: -8.62537670135498
    4. 'D' → logprob: -12.37537670135498
    5. 'dist' → logprob: -12.37537670135498
    6. ' dp' → logprob: -13.00037670135498
    7. 'd' → logprob: -13.37537670135498
    8. '```' → logprob: -13.75037670135498
    9. 'Dp' → logprob: -14.50037670135498
    10. 'ans' → logprob: -15.00037670135498

Token 447: ' tableau' (ID: 67053)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1532653123140335
    2. ' dp' → logprob: -2.0282652378082275
    3. 'DP' → logprob: -5.403265476226807
    4. ' =' → logprob: -6.153265476226807
    5. ' DP' → logprob: -6.153265476226807
    6. 'd' → logprob: -7.778265476226807
    7. 'D' → logprob: -7.903265476226807
    8. '=' → logprob: -8.403264999389648
    9. ')' → logprob: -8.903264999389648
    10. '_dp' → logprob: -9.278264999389648

Token 448: ' '' (ID: 461)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1550361067056656
    2. ' =' → logprob: -2.030036211013794
    3. '=' → logprob: -4.780035972595215
    4. ' dp' → logprob: -6.405035972595215
    5. 'DP' → logprob: -6.905035972595215
    6. '_dp' → logprob: -7.530035972595215
    7. 'd' → logprob: -8.530035972595215
    8. '_' → logprob: -8.905035972595215
    9. 'D' → logprob: -9.780035972595215
    10. 's' → logprob: -10.030035972595215

Token 449: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0016451918054372072
    2. 'cost' → logprob: -6.751645088195801
    3. 'DP' → logprob: -8.2516450881958
    4. ' dp' → logprob: -9.2516450881958
    5. '```' → logprob: -10.1266450881958
    6. 'dist' → logprob: -10.3766450881958
    7. 'd' → logprob: -11.6266450881958
    8. 'D' → logprob: -11.7516450881958
    9. '#' → logprob: -12.2516450881958
    10. '``' → logprob: -13.2516450881958

Token 450: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08176234364509583
    2. ''' → logprob: -2.5817623138427734
    3. '=' → logprob: -6.081762313842773
    4. ']' → logprob: -8.956762313842773
    5. '']' → logprob: -9.081762313842773
    6. ')' → logprob: -9.331762313842773
    7. ' ' → logprob: -9.581762313842773
    8. '"' → logprob: -10.456762313842773
    9. '```' → logprob: -10.831762313842773
    10. '[' → logprob: -10.956762313842773

Token 451: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38694649934768677
    2. ' =' → logprob: -1.136946439743042
    3. '=np' → logprob: -9.511946678161621
    4. ')' → logprob: -15.136946678161621
    5. 'dp' → logprob: -15.386946678161621
    6. ' ' → logprob: -15.386946678161621
    7. 's' → logprob: -15.886946678161621
    8. ',' → logprob: -16.011945724487305
    9. '[:]' → logprob: -16.261945724487305
    10. '＝' → logprob: -16.386945724487305

Token 452: ' utilisé' (ID: 53138)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.13358809053897858
    2. ' np' → logprob: -2.1335880756378174
    3. 'dp' → logprob: -5.2585883140563965
    4. 'dtype' → logprob: -7.0085883140563965
    5. ' dp' → logprob: -8.133587837219238
    6. '=np' → logprob: -9.508587837219238
    7. 'INF' → logprob: -9.883587837219238
    8. ' dtype' → logprob: -9.883587837219238
    9. ' =' → logprob: -11.508587837219238
    10. ' INF' → logprob: -11.883587837219238

Token 453: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13316839933395386
    2. ' =' → logprob: -2.3831684589385986
    3. 'dp' → logprob: -3.8831684589385986
    4. ')' → logprob: -5.3831682205200195
    5. 'dtype' → logprob: -5.3831682205200195
    6. '=np' → logprob: -6.7581682205200195
    7. ',' → logprob: -7.6331682205200195
    8. ' dp' → logprob: -8.25816822052002
    9. '_' → logprob: -8.50816822052002
    10. 'np' → logprob: -8.88316822052002

Token 454: ' stock' (ID: 6546)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.11010156571865082
    2. 'dp' → logprob: -2.6101014614105225
    3. 'dtype' → logprob: -4.235101699829102
    4. ' np' → logprob: -4.985101699829102
    5. 'stock' → logprob: -5.360101699829102
    6. 'i' → logprob: -5.985101699829102
    7. ' dp' → logprob: -7.485101699829102
    8. ' stock' → logprob: -8.235101699829102
    9. ' dtype' → logprob: -8.735101699829102
    10. 'calcul' → logprob: -8.860101699829102

Token 455: 'er' (ID: 259)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.230218306183815
    2. '=np' → logprob: -2.1052184104919434
    3. 'np' → logprob: -3.4802184104919434
    4. ' =' → logprob: -3.4802184104919434
    5. 'dp' → logprob: -4.355218410491943
    6. ' np' → logprob: -5.230218410491943
    7. '(np' → logprob: -6.355218410491943
    8. ' dp' → logprob: -7.480218410491943
    9. ')' → logprob: -7.980218410491943
    10. 'dtype' → logprob: -7.980218410491943

Token 456: ' les' (ID: 1341)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8562965393066406
    2. 'INF' → logprob: -0.8562965393066406
    3. 'np' → logprob: -1.9812965393066406
    4. ' np' → logprob: -5.356296539306641
    5. ' INF' → logprob: -5.856296539306641
    6. ' dp' → logprob: -6.231296539306641
    7. '0' → logprob: -6.856296539306641
    8. '-' → logprob: -7.981296539306641
    9. 'dtype' → logprob: -7.981296539306641
    10. '-INF' → logprob: -7.981296539306641

Token 457: ' coûts' (ID: 116912)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0764915943145752
    2. 'cost' → logprob: -3.326491594314575
    3. ' dp' → logprob: -3.701491594314575
    4. 'dtype' → logprob: -5.076491355895996
    5. 'co' → logprob: -6.076491355895996
    6. 'min' → logprob: -7.076491355895996
    7. 'minimum' → logprob: -7.076491355895996
    8. ' costs' → logprob: -7.701491355895996
    9. ' cost' → logprob: -7.951491355895996
    10. 'np' → logprob: -8.076491355895996

Token 458: ' minim' (ID: 23874)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7235716581344604
    2. 'dp' → logprob: -0.7235716581344604
    3. '=' → logprob: -4.09857177734375
    4. ' dp' → logprob: -4.97357177734375
    5. ',' → logprob: -6.34857177734375
    6. '_' → logprob: -6.59857177734375
    7. '[' → logprob: -7.09857177734375
    8. ' ' → logprob: -7.47357177734375
    9. '_dp' → logprob: -7.47357177734375
    10. '=np' → logprob: -8.72357177734375

Token 459: 'aux' (ID: 5454)
  Prédit: '=np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.5071079730987549
    2. '=' → logprob: -2.007107973098755
    3. ' =' → logprob: -2.132107973098755
    4. 'INF' → logprob: -2.757107973098755
    5. 'dp' → logprob: -3.507107973098755
    6. 'np' → logprob: -4.257107734680176
    7. ' INF' → logprob: -4.632107734680176
    8. '[np' → logprob: -4.757107734680176
    9. ' np' → logprob: -5.007107734680176
    10. '   ' → logprob: -5.382107734680176

Token 460: ' selon' (ID: 27571)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.028030436486005783
    2. ',' → logprob: -3.6530303955078125
    3. ' dp' → logprob: -7.1530303955078125
    4. 'dtype' → logprob: -8.153030395507812
    5. ',
' → logprob: -8.403030395507812
    6. ' =' → logprob: -8.903030395507812
    7. ')' → logprob: -9.153030395507812
    8. '=' → logprob: -9.403030395507812
    9. 'np' → logprob: -10.778030395507812
    10. '(dp' → logprob: -10.903030395507812

Token 461: ' différents' (ID: 36009)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.5953879356384277
    2. 'dp' → logprob: -1.0953879356384277
    3. 'np' → logprob: -2.9703879356384277
    4. ' np' → logprob: -3.7203879356384277
    5. ' dp' → logprob: -3.9703879356384277
    6. ' dtype' → logprob: -4.220387935638428
    7. ' ' → logprob: -6.720387935638428
    8. '=' → logprob: -7.845387935638428
    9. '=np' → logprob: -7.970387935638428
    10. 'positions' → logprob: -8.470388412475586

Token 462: ' états' (ID: 184259)
  Prédit: ' états'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' états' → logprob: -0.49130716919898987
    2. ' déplacements' → logprob: -1.3663071393966675
    3. ' states' → logprob: -3.116307258605957
    4. 'states' → logprob: -3.866307258605957
    5. 'dp' → logprob: -4.241307258605957
    6. ' déplacement' → logprob: -4.241307258605957
    7. 'positions' → logprob: -5.116307258605957
    8. 'offset' → logprob: -5.116307258605957
    9. 'dtype' → logprob: -6.366307258605957
    10. 'de' → logprob: -6.491307258605957

Token 463: ' du' (ID: 1462)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0007124318508431315
    2. ' =' → logprob: -8.125712394714355
    3. ',' → logprob: -8.750712394714355
    4. '=' → logprob: -9.375712394714355
    5. ' dp' → logprob: -9.375712394714355
    6. '(dp' → logprob: -10.125712394714355
    7. ',
' → logprob: -11.375712394714355
    8. 'dtype' → logprob: -11.875712394714355
    9. '_dp' → logprob: -12.000712394714355
    10. '
' → logprob: -12.375712394714355

Token 464: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.9331313371658325
    2. 'dp' → logprob: -1.1831313371658325
    3. 'code' → logprob: -2.683131217956543
    4. 'programme' → logprob: -2.808131217956543
    5. 'dé' → logprob: -3.433131217956543
    6. ' problème' → logprob: -3.433131217956543
    7. '```' → logprob: -3.933131217956543
    8. 'proble' → logprob: -4.308131217956543
    9. ' déplacement' → logprob: -4.683131217956543
    10. 'position' → logprob: -4.683131217956543

Token 465: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0013269031187519431
    2. ' =' → logprob: -7.751327037811279
    3. '
' → logprob: -8.126326560974121
    4. ',' → logprob: -8.751326560974121
    5. '(dp' → logprob: -8.751326560974121
    6. ' dp' → logprob: -9.126326560974121
    7. '=' → logprob: -9.751326560974121
    8. '_dp' → logprob: -10.251326560974121
    9. ',
' → logprob: -10.751326560974121
    10. '[' → logprob: -11.501326560974121

Token 466: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.8624639324116288e-06
    2. ' dp' → logprob: -13.875001907348633
    3. '```' → logprob: -14.500001907348633
    4. '
' → logprob: -16.125001907348633
    5. 'import' → logprob: -16.250001907348633
    6. '	dp' → logprob: -17.000001907348633
    7. 'dtype' → logprob: -17.500001907348633
    8. 'd' → logprob: -17.625001907348633
    9. 'np' → logprob: -17.750001907348633
    10. '_dp' → logprob: -17.875001907348633

Token 467: ' Cela' (ID: 44403)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.56102097814437e-05
    2. ' dp' → logprob: -10.625045776367188
    3. 'import' → logprob: -11.500045776367188
    4. 'dtype' → logprob: -12.500045776367188
    5. 'd' → logprob: -13.500045776367188
    6. '
' → logprob: -13.750045776367188
    7. 'np' → logprob: -13.875045776367188
    8. '```' → logprob: -14.000045776367188
    9. 'dt' → logprob: -14.125045776367188
    10. '[' → logprob: -14.875045776367188

Token 468: ' représente' (ID: 88912)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5791870355606079
    2. '=' → logprob: -1.079187035560608
    3. '[' → logprob: -2.9541869163513184
    4. 'dp' → logprob: -3.8291869163513184
    5. '.' → logprob: -4.079186916351318
    6. '[:]' → logprob: -5.829186916351318
    7. ' dp' → logprob: -5.954186916351318
    8. '[:,' → logprob: -6.579186916351318
    9. '_dp' → logprob: -7.329186916351318
    10. ' .' → logprob: -8.329187393188477

Token 469: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7186360359191895
    2. 'np' → logprob: -0.8436360359191895
    3. ' np' → logprob: -2.8436360359191895
    4. ' dp' → logprob: -4.3436360359191895
    5. '(np' → logprob: -5.5936360359191895
    6. 'dtype' → logprob: -5.8436360359191895
    7. '(' → logprob: -6.4686360359191895
    8. ' (' → logprob: -7.0936360359191895
    9. '(N' → logprob: -7.5936360359191895
    10. '(dp' → logprob: -7.7186360359191895

Token 470: ' pour' (ID: 1930)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.6581820845603943
    2. ' (' → logprob: -1.033182144165039
    3. 'shape' → logprob: -3.283182144165039
    4. 'dp' → logprob: -3.283182144165039
    5. ' shape' → logprob: -3.783182144165039
    6. 'dtype' → logprob: -4.408182144165039
    7. '(' → logprob: -5.408182144165039
    8. '(shape' → logprob: -5.658182144165039
    9. '(dp' → logprob: -5.783182144165039
    10. ' dp' → logprob: -6.033182144165039

Token 471: ' chaque' (ID: 21194)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.817719042301178
    2. 'i' → logprob: -1.8177189826965332
    3. ' dp' → logprob: -1.9427189826965332
    4. ' i' → logprob: -1.9427189826965332
    5. ' N' → logprob: -3.567718982696533
    6. 'N' → logprob: -3.692718982696533
    7. '_' → logprob: -3.692718982696533
    8. 'np' → logprob: -5.067718982696533
    9. ' np' → logprob: -5.067718982696533
    10. ' ' → logprob: -5.567718982696533

Token 472: ' nombre' (ID: 9733)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16100753843784332
    2. ' dp' → logprob: -2.1610076427459717
    3. ' i' → logprob: -4.536007404327393
    4. 'i' → logprob: -5.286007404327393
    5. 'dtype' → logprob: -5.786007404327393
    6. 'np' → logprob: -6.661007404327393
    7. ')' → logprob: -6.786007404327393
    8. ' states' → logprob: -6.911007404327393
    9. ' state' → logprob: -7.036007404327393
    10. 'state' → logprob: -7.161007404327393

Token 473: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2708229720592499
    2. 'dp' → logprob: -1.8958230018615723
    3. ' ,' → logprob: -3.8958230018615723
    4. ')' → logprob: -4.145823001861572
    5. ' dp' → logprob: -4.145823001861572
    6. ' de' → logprob: -5.270823001861572
    7. ' (' → logprob: -5.770823001861572
    8. ' =' → logprob: -5.895823001861572
    9. 'possible' → logprob: -5.895823001861572
    10. 'de' → logprob: -6.395823001861572

Token 474: ' le' (ID: 505)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3908901810646057
    2. ' (' → logprob: -1.390890121459961
    3. 'shape' → logprob: -3.640890121459961
    4. 'dtype' → logprob: -4.140890121459961
    5. ' shape' → logprob: -4.765890121459961
    6. 'dp' → logprob: -4.765890121459961
    7. '(' → logprob: -4.765890121459961
    8. 'np' → logprob: -6.265890121459961
    9. '(np' → logprob: -7.265890121459961
    10. '(shape' → logprob: -7.390890121459961

Token 475: ' coût' (ID: 73109)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5778091549873352
    2. ' dp' → logprob: -1.4528090953826904
    3. 'dtype' → logprob: -2.8278090953826904
    4. ' shape' → logprob: -3.3278090953826904
    5. ' N' → logprob: -3.5778090953826904
    6. ' ' → logprob: -3.9528090953826904
    7. ' np' → logprob: -3.9528090953826904
    8. 'shape' → logprob: -4.7028093338012695
    9. ' dtype' → logprob: -4.8278093338012695
    10. 'np' → logprob: -4.9528093338012695

Token 476: ' minimal' (ID: 19957)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.2548025846481323
    2. ' minimum' → logprob: -1.8798025846481323
    3. 'dp' → logprob: -2.254802703857422
    4. '_' → logprob: -2.504802703857422
    5. 'minimum' → logprob: -2.879802703857422
    6. ' de' → logprob: -3.504802703857422
    7. ' ' → logprob: -3.629802703857422
    8. ' =' → logprob: -3.754802703857422
    9. ' total' → logprob: -3.879802703857422
    10. '_min' → logprob: -3.879802703857422

Token 477: ' obtenu' (ID: 117330)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24680492281913757
    2. ',' → logprob: -2.62180495262146
    3. ' =' → logprob: -2.74680495262146
    4. ' dp' → logprob: -2.74680495262146
    5. '=' → logprob: -5.746804714202881
    6. '_dp' → logprob: -5.871804714202881
    7. ')' → logprob: -5.996804714202881
    8. ' ,' → logprob: -6.121804714202881
    9. 's' → logprob: -7.371804714202881
    10. '(dp' → logprob: -7.496804714202881

Token 478: ' jusqu' (ID: 21961)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3198051452636719
    2. ',' → logprob: -1.6948051452636719
    3. ')' → logprob: -3.194805145263672
    4. ' dp' → logprob: -3.944805145263672
    5. ' ,' → logprob: -4.569805145263672
    6. ' =' → logprob: -5.069805145263672
    7. '_dp' → logprob: -6.319805145263672
    8. '[' → logprob: -6.444805145263672
    9. '[:,' → logprob: -6.569805145263672
    10. ' )' → logprob: -6.694805145263672

Token 479: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.15996643900871277
    2. ''au' → logprob: -2.659966468811035
    3. '[' → logprob: -3.159966468811035
    4. 'au' → logprob: -4.909966468811035
    5. '’à' → logprob: -5.284966468811035
    6. '_' → logprob: -5.534966468811035
    7. '[i' → logprob: -5.534966468811035
    8. ''' → logprob: -5.784966468811035
    9. 'à' → logprob: -6.034966468811035
    10. ']' → logprob: -6.034966468811035

Token 480: ' présent' (ID: 24129)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5296629667282104
    2. 'i' → logprob: -1.5296629667282104
    3. ' ce' → logprob: -3.0296630859375
    4. ' i' → logprob: -3.5296630859375
    5. 'c' → logprob: -3.7796630859375
    6. 'à' → logprob: -4.1546630859375
    7. ' présent' → logprob: -4.7796630859375
    8. ' cet' → logprob: -5.0296630859375
    9. 'dp' → logprob: -5.0296630859375
    10. ' l' → logprob: -5.1546630859375

Token 481: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.038243453949689865
    2. ',' → logprob: -3.663243532180786
    3. ' dp' → logprob: -4.663243293762207
    4. ',
' → logprob: -7.663243293762207
    5. ' =' → logprob: -7.663243293762207
    6. ')' → logprob: -8.163243293762207
    7. '_dp' → logprob: -8.288243293762207
    8. ' ,' → logprob: -8.413243293762207
    9. '
' → logprob: -8.788243293762207
    10. '.' → logprob: -8.788243293762207

Token 482: ' une' (ID: 2463)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6685237884521484
    2. ' chaque' → logprob: -1.5435237884521484
    3. ' dp' → logprob: -2.9185237884521484
    4. ' np' → logprob: -3.0435237884521484
    5. ' i' → logprob: -3.1685237884521484
    6. 'i' → logprob: -3.4185237884521484
    7. 'np' → logprob: -3.7935237884521484
    8. '0' → logprob: -4.043523788452148
    9. ' toutes' → logprob: -4.668523788452148
    10. ' ' → logprob: -4.918523788452148

Token 483: ' certaine' (ID: 91318)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.7061553001403809
    2. ' np' → logprob: -1.8311553001403809
    3. 'np' → logprob: -2.081155300140381
    4. 'position' → logprob: -2.206155300140381
    5. 'ligne' → logprob: -2.331155300140381
    6. ' ' → logprob: -2.956155300140381
    7. ' ligne' → logprob: -3.581155300140381
    8. ' position' → logprob: -3.581155300140381
    9. 'dtype' → logprob: -3.956155300140381
    10. ' dp' → logprob: -3.956155300140381

Token 484: ' situation' (ID: 8789)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.7434203624725342
    2. 'configuration' → logprob: -1.2434203624725342
    3. ' configuration' → logprob: -3.493420362472534
    4. 'op' → logprob: -3.993420362472534
    5. 'dé' → logprob: -4.118420600891113
    6. ' opération' → logprob: -4.118420600891113
    7. 'pos' → logprob: -4.118420600891113
    8. 'man' → logprob: -4.243420600891113
    9. 'ét' → logprob: -4.243420600891113
    10. 's' → logprob: -4.493420600891113

Token 485: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4469955265522003
    2. 'dp' → logprob: -1.196995496749878
    3. '=' → logprob: -3.071995496749878
    4. ',' → logprob: -5.071995735168457
    5. '(dp' → logprob: -6.446995735168457
    6. '_dp' → logprob: -6.696995735168457
    7. ' dp' → logprob: -7.196995735168457
    8. ')' → logprob: -7.571995735168457
    9. '
' → logprob: -8.321995735168457
    10. '(' → logprob: -8.446995735168457

Token 486: 'voir' (ID: 8991)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6741626858711243
    2. ')' → logprob: -1.7991626262664795
    3. ',' → logprob: -2.4241626262664795
    4. ' dp' → logprob: -2.7991626262664795
    5. 'dtype' → logprob: -3.0491626262664795
    6. ' )' → logprob: -3.5491626262664795
    7. ' ,' → logprob: -3.9241626262664795
    8. ' (' → logprob: -4.424162864685059
    9. ' N' → logprob: -4.549162864685059
    10. ' dtype' → logprob: -4.799162864685059

Token 487: ' logique' (ID: 115350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5960375070571899
    2. ')' → logprob: -2.5960373878479004
    3. ' la' → logprob: -2.9710373878479004
    4. 'shape' → logprob: -3.0960373878479004
    5. ' dp' → logprob: -3.5960373878479004
    6. 'dtype' → logprob: -3.8460373878479004
    7. 'la' → logprob: -3.9710373878479004
    8. ',' → logprob: -3.9710373878479004
    9. ' N' → logprob: -4.0960373878479
    10. 'N' → logprob: -4.3460373878479

Token 488: ' du' (ID: 1462)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0302461385726929
    2. ' =' → logprob: -1.2802461385726929
    3. 'dp' → logprob: -1.9052461385726929
    4. ')' → logprob: -1.9052461385726929
    5. '_dp' → logprob: -4.280246257781982
    6. ',' → logprob: -4.530246257781982
    7. ' dp' → logprob: -4.905246257781982
    8. ' )' → logprob: -5.030246257781982
    9. '(dp' → logprob: -5.655246257781982
    10. 's' → logprob: -6.280246257781982

Token 489: ' problème' (ID: 35630)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.31176552176475525
    2. 'code' → logprob: -2.436765432357788
    3. ' code' → logprob: -2.436765432357788
    4. ' problème' → logprob: -3.811765432357788
    5. 'pro' → logprob: -4.061765670776367
    6. 'd' → logprob: -4.186765670776367
    7. '```' → logprob: -4.311765670776367
    8. ' dp' → logprob: -4.811765670776367
    9. '#' → logprob: -6.061765670776367
    10. ')' → logprob: -6.186765670776367

Token 490: ' original' (ID: 4756)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42707622051239014
    2. ',' → logprob: -1.3020762205123901
    3. 'dp' → logprob: -3.0520763397216797
    4. ').' → logprob: -4.80207633972168
    5. ' ,' → logprob: -5.30207633972168
    6. ' )' → logprob: -5.80207633972168
    7. '),' → logprob: -5.80207633972168
    8. '[:,' → logprob: -6.05207633972168
    9. ')
' → logprob: -6.80207633972168
    10. '_dp' → logprob: -7.30207633972168

Token 491: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11902560293674469
    2. 'dp' → logprob: -2.494025707244873
    3. ' )' → logprob: -4.494025707244873
    4. ',' → logprob: -4.494025707244873
    5. ').' → logprob: -5.619025707244873
    6. ')
' → logprob: -6.744025707244873
    7. '),' → logprob: -7.244025707244873
    8. ' dp' → logprob: -7.994025707244873
    9. ' ,' → logprob: -8.244025230407715
    10. '_dp' → logprob: -8.369025230407715

Token 492: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5949063897132874
    2. ' i' → logprob: -1.4699063301086426
    3. 'dp' → logprob: -2.0949063301086426
    4. ')' → logprob: -3.4699063301086426
    5. 'l' → logprob: -3.9699063301086426
    6. 'range' → logprob: -4.594906330108643
    7. ' dp' → logprob: -4.844906330108643
    8. '_' → logprob: -5.094906330108643
    9. ' range' → logprob: -5.594906330108643
    10. ' l' → logprob: -5.844906330108643

Token 493: ' sens' (ID: 5050)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.4076393842697144
    2. 'moment' → logprob: -1.4076393842697144
    3. ' moment' → logprob: -1.5326393842697144
    4. 'i' → logprob: -3.157639503479004
    5. 'code' → logprob: -3.532639503479004
    6. 'dimensions' → logprob: -3.657639503479004
    7. 'shape' → logprob: -3.907639503479004
    8. ')' → logprob: -4.157639503479004
    9. 'dimension' → logprob: -4.157639503479004
    10. ' code' → logprob: -4.282639503479004

Token 494: ' exact' (ID: 6354)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7499837875366211
    2. '=' → logprob: -0.9999837875366211
    3. ' )' → logprob: -2.749983787536621
    4. 'dp' → logprob: -2.999983787536621
    5. ' dp' → logprob: -4.124983787536621
    6. ' =' → logprob: -4.624983787536621
    7. '_dp' → logprob: -5.624983787536621
    8. ',' → logprob: -5.999983787536621
    9. ').' → logprob: -6.124983787536621
    10. '_' → logprob: -6.374983787536621

Token 495: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04209393262863159
    2. ' )' → logprob: -3.9170939922332764
    3. 'dp' → logprob: -4.292093753814697
    4. '=' → logprob: -6.417093753814697
    5. '_dp' → logprob: -6.667093753814697
    6. ',' → logprob: -7.042093753814697
    7. ')
' → logprob: -7.292093753814697
    8. ').' → logprob: -7.667093753814697
    9. '[' → logprob: -7.792093753814697
    10. ' dp' → logprob: -8.167094230651855

Token 496: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.0590548703912646e-05
    2. ' dp' → logprob: -10.625030517578125
    3. 'np' → logprob: -12.625030517578125
    4. '```' → logprob: -13.250030517578125
    5. '
' → logprob: -14.750030517578125
    6. ' =' → logprob: -15.250030517578125
    7. ',' → logprob: -15.875030517578125
    8. 'dtype' → logprob: -16.000030517578125
    9. '(dp' → logprob: -16.625030517578125
    10. '	dp' → logprob: -16.625030517578125

Token 497: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16026465594768524
    2. '=' → logprob: -1.9102646112442017
    3. '[' → logprob: -10.66026496887207
    4. '=np' → logprob: -12.16026496887207
    5. ' ' → logprob: -12.53526496887207
    6. ')' → logprob: -13.03526496887207
    7. 's' → logprob: -13.66026496887207
    8. '.' → logprob: -13.78526496887207
    9. ']' → logprob: -14.03526496887207
    10. '_' → logprob: -14.16026496887207

Token 498: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -1.1472419600977446e-06
    2. ' np' → logprob: -13.750000953674316
    3. '(np' → logprob: -21.125001907348633
    4. 'dp' → logprob: -22.125001907348633
    5. '=np' → logprob: -22.375001907348633
    6. 'numpy' → logprob: -23.125001907348633
    7. '[np' → logprob: -24.000001907348633
    8. '   ' → logprob: -24.125001907348633
    9. '_np' → logprob: -24.750001907348633
    10. '  ' → logprob: -25.250001907348633

Token 499: '.full' (ID: 43009)
  Prédit: '.full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.full' → logprob: -0.00044914212776347995
    2. '.zeros' → logprob: -7.750449180603027
    3. '.ones' → logprob: -11.750449180603027
    4. '.empty' → logprob: -12.000449180603027
    5. '.ndarray' → logprob: -13.125449180603027
    6. '.' → logprob: -14.000449180603027
    7. '.array' → logprob: -14.125449180603027
    8. ' full' → logprob: -14.875449180603027
    9. '.fill' → logprob: -15.500449180603027
    10. 'full' → logprob: -15.625449180603027

Token 500: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.015320041216909885
    2. '((' → logprob: -4.26531982421875
    3. '(' → logprob: -6.76531982421875
    4. ' (' → logprob: -13.39031982421875
    5. '([' → logprob: -14.76531982421875
    6. '(
' → logprob: -15.01531982421875
    7. '(n' → logprob: -15.14031982421875
    8. ' ' → logprob: -16.01531982421875
    9. 'N' → logprob: -16.14031982421875
    10. ',' → logprob: -18.01531982421875

Token 501: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001202850602567196
    2. ' +' → logprob: -6.7512030601501465
    3. ',' → logprob: -10.501202583312988
    4. '()+' → logprob: -13.251202583312988
    5. '+,' → logprob: -14.501202583312988
    6. ',N' → logprob: -14.501202583312988
    7. '(N' → logprob: -14.876202583312988
    8. ')+' → logprob: -15.001202583312988
    9. '1' → logprob: -15.251202583312988
    10. '＋' → logprob: -15.501202583312988

Token 502: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00060307263629511
    2. '2' → logprob: -8.125602722167969
    3. '(' → logprob: -8.750602722167969
    4. ' ' → logprob: -9.250602722167969
    5. '(N' → logprob: -10.750602722167969
    6. '3' → logprob: -11.750602722167969
    7. ' (' → logprob: -12.000602722167969
    8. '7' → logprob: -12.250602722167969
    9. ',' → logprob: -12.375602722167969
    10. '4' → logprob: -13.563102722167969

Token 503: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002368870424106717
    2. '2' → logprob: -6.127368927001953
    3. '3' → logprob: -9.502368927001953
    4. ' ' → logprob: -9.877368927001953
    5. '4' → logprob: -11.127368927001953
    6. '7' → logprob: -11.502368927001953
    7. '10' → logprob: -11.502368927001953
    8. '5' → logprob: -11.502368927001953
    9. '6' → logprob: -12.627368927001953
    10. '11' → logprob: -12.627368927001953

Token 504: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.630610641877865e-06
    2. ' ,' → logprob: -12.375006675720215
    3. ',
' → logprob: -13.250006675720215
    4. ',

' → logprob: -15.625006675720215
    5. ',int' → logprob: -16.2500057220459
    6. ')' → logprob: -16.6250057220459
    7. ',,' → logprob: -16.8750057220459
    8. ',np' → logprob: -17.1250057220459
    9. ',(' → logprob: -17.2500057220459
    10. '),' → logprob: -17.7500057220459

Token 505: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -9.729906196298543e-06
    2. ' INF' → logprob: -11.625009536743164
    3. 'inf' → logprob: -14.250009536743164
    4. '_INF' → logprob: -16.875009536743164
    5. 'Inf' → logprob: -19.000009536743164
    6. ')' → logprob: -19.000009536743164
    7. ' ' → logprob: -19.000009536743164
    8. 'np' → logprob: -19.750009536743164
    9. '-INF' → logprob: -20.000009536743164
    10. 'IN' → logprob: -20.375009536743164

Token 506: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47435376048088074
    2. ')' → logprob: -0.9743537902832031
    3. ',d' → logprob: -8.849353790283203
    4. ' ,' → logprob: -9.224353790283203
    5. ' )' → logprob: -11.224353790283203
    6. ',)' → logprob: -11.349353790283203
    7. '),' → logprob: -12.974353790283203
    8. ',int' → logprob: -14.099353790283203
    9. 'dtype' → logprob: -14.474353790283203
    10. 'd' → logprob: -14.724353790283203

Token 507: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.0008964549051597714
    2. ' dtype' → logprob: -7.125896453857422
    3. 'np' → logprob: -9.625896453857422
    4. ')' → logprob: -10.625896453857422
    5. ' np' → logprob: -13.875896453857422
    6. ' ' → logprob: -15.000896453857422
    7. '  ' → logprob: -16.500896453857422
    8. ',' → logprob: -16.625896453857422
    9. ' )' → logprob: -16.750896453857422
    10. 'dt' → logprob: -16.875896453857422

Token 508: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.0015159345930442214
    2. 'np' → logprob: -6.751515865325928
    3. '=' → logprob: -8.251516342163086
    4. '=int' → logprob: -9.501516342163086
    5. ' np' → logprob: -12.126516342163086
    6. 'int' → logprob: -12.876516342163086
    7. '(np' → logprob: -13.501516342163086
    8. ' =' → logprob: -15.001516342163086
    9. '='' → logprob: -16.126516342163086
    10. '[np' → logprob: -16.251516342163086

Token 509: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.00026622318546287715
    2. 'int' → logprob: -8.250266075134277
    3. '.uint' → logprob: -12.250266075134277
    4. '.long' → logprob: -15.750266075134277
    5. '.float' → logprob: -17.625267028808594
    6. ' int' → logprob: -17.875267028808594
    7. '=int' → logprob: -17.875267028808594
    8. '64' → logprob: -18.625267028808594
    9. '.i' → logprob: -18.875267028808594
    10. 'Int' → logprob: -19.125267028808594

Token 510: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: 0.0
    2. 'p' → logprob: -20.625
    3. 'int' → logprob: -21.375
    4. '6' → logprob: -21.625
    5. '63' → logprob: -22.125
    6. 'c' → logprob: -22.625
    7. '128' → logprob: -23.375
    8. '```' → logprob: -24.125
    9. '66' → logprob: -24.25
    10. 'a' → logprob: -24.5

Token 511: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.125000953674316
    3. ')
' → logprob: -15.000000953674316
    4. ')#' → logprob: -16.375001907348633
    5. ')`' → logprob: -16.625001907348633
    6. '),' → logprob: -17.250001907348633
    7. '))' → logprob: -17.500001907348633
    8. ')

' → logprob: -18.125001907348633
    9. ')}' → logprob: -18.375001907348633
    10. ').' → logprob: -18.500001907348633

Token 512: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00018685187387745827
    2. '[' → logprob: -10.250186920166016
    3. '
' → logprob: -10.250186920166016
    4. '```' → logprob: -10.250186920166016
    5. ' dp' → logprob: -10.500186920166016
    6. ')' → logprob: -11.125186920166016
    7. '(dp' → logprob: -11.625186920166016
    8. '\n' → logprob: -11.875186920166016
    9. ')
' → logprob: -12.250186920166016
    10. '  
' → logprob: -12.500186920166016

Token 513: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.726595241460018e-05
    2. ')' → logprob: -11.37503719329834
    3. ' dp' → logprob: -12.12503719329834
    4. '0' → logprob: -12.25003719329834
    5. '#' → logprob: -12.62503719329834
    6. '(dp' → logprob: -13.12503719329834
    7. '[' → logprob: -13.37503719329834
    8. '
' → logprob: -13.50003719329834
    9. '.dp' → logprob: -13.87503719329834
    10. '	dp' → logprob: -13.87503719329834

Token 514: ' np' (ID: 5374)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.630610641877865e-06
    2. ' dp' → logprob: -12.125006675720215
    3. '0' → logprob: -14.750006675720215
    4. '	dp' → logprob: -15.125006675720215
    5. '
' → logprob: -16.0000057220459
    6. '[' → logprob: -16.1250057220459
    7. 'import' → logprob: -16.7500057220459
    8. '#' → logprob: -17.1250057220459
    9. '```' → logprob: -17.1250057220459
    10. '(dp' → logprob: -17.1250057220459

Token 515: '.full' (ID: 43009)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38931602239608765
    2. '.full' → logprob: -1.1393160820007324
    3. '.ndarray' → logprob: -7.139316082000732
    4. '.fill' → logprob: -7.389316082000732
    5. '.zeros' → logprob: -7.514316082000732
    6. '[' → logprob: -8.389315605163574
    7. ' .' → logprob: -9.514315605163574
    8. '.array' → logprob: -10.389315605163574
    9. '.copy' → logprob: -10.764315605163574
    10. ')' → logprob: -11.514315605163574

Token 516: ' crée' (ID: 102256)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24961739778518677
    2. '(' → logprob: -1.624617338180542
    3. '<|end|>' → logprob: -4.499617576599121
    4. '(dp' → logprob: -4.874617576599121
    5. '(N' → logprob: -6.624617576599121
    6. '()' → logprob: -6.749617576599121
    7. '(np' → logprob: -7.374617576599121
    8. '([' → logprob: -7.874617576599121
    9. '(
' → logprob: -8.374617576599121
    10. '(dtype' → logprob: -8.374617576599121

Token 517: ' un' (ID: 537)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.22005052864551544
    2. '(' → logprob: -1.720050573348999
    3. ')' → logprob: -4.84505033493042
    4. '(dp' → logprob: -5.34505033493042
    5. '((' → logprob: -5.72005033493042
    6. 'dp' → logprob: -6.59505033493042
    7. '_like' → logprob: -8.595050811767578
    8. '(
' → logprob: -8.845050811767578
    9. '```' → logprob: -8.845050811767578
    10. '()' → logprob: -9.220050811767578

Token 518: ' tableau' (ID: 67053)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.13874730467796326
    2. ')' → logprob: -3.013747215270996
    3. ' array' → logprob: -3.013747215270996
    4. '(N' → logprob: -4.888747215270996
    5. 'N' → logprob: -5.138747215270996
    6. 'numpy' → logprob: -5.513747215270996
    7. '(' → logprob: -5.763747215270996
    8. '(array' → logprob: -6.138747215270996
    9. ' ' → logprob: -6.263747215270996
    10. 'nd' → logprob: -7.513747215270996

Token 519: ' rempli' (ID: 192613)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09255445003509521
    2. ')' → logprob: -3.2175545692443848
    3. '<|end|>' → logprob: -3.5925545692443848
    4. '(dp' → logprob: -4.592554569244385
    5. '(
' → logprob: -5.467554569244385
    6. '([' → logprob: -6.092554569244385
    7. 'dp' → logprob: -6.842554569244385
    8. '(N' → logprob: -7.217554569244385
    9. '<|end|>' → logprob: -7.592554569244385
    10. '(dtype' → logprob: -8.467554092407227

Token 520: ' avec' (ID: 3937)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47656744718551636
    2. '(dp' → logprob: -1.6015675067901611
    3. ')' → logprob: -2.101567506790161
    4. '<|end|>' → logprob: -3.351567506790161
    5. 'dp' → logprob: -5.351567268371582
    6. '(np' → logprob: -5.851567268371582
    7. 'with' → logprob: -6.101567268371582
    8. '(dtype' → logprob: -6.351567268371582
    9. '(
' → logprob: -6.476567268371582
    10. '.' → logprob: -6.976567268371582

Token 521: ' la' (ID: 557)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0022605215199291706
    2. 'dp' → logprob: -6.377260684967041
    3. ' INF' → logprob: -8.627260208129883
    4. ')' → logprob: -9.127260208129883
    5. 'inf' → logprob: -9.377260208129883
    6. '_INF' → logprob: -10.002260208129883
    7. '[' → logprob: -10.127260208129883
    8. '<|end|>' → logprob: -10.627260208129883
    9. '-INF' → logprob: -11.002260208129883
    10. 'Inf' → logprob: -11.502260208129883

Token 522: ' même' (ID: 9679)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0010792528046295047
    2. ' INF' → logprob: -6.876079082489014
    3. 'dp' → logprob: -10.876079559326172
    4. 'inf' → logprob: -11.501079559326172
    5. 'np' → logprob: -11.751079559326172
    6. '_INF' → logprob: -12.876079559326172
    7. 'value' → logprob: -13.251079559326172
    8. 'val' → logprob: -13.876079559326172
    9. ' np' → logprob: -13.876079559326172
    10. ' value' → logprob: -14.376079559326172

Token 523: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.07288194447755814
    2. ' valeur' → logprob: -2.8228819370269775
    3. 'value' → logprob: -4.822882175445557
    4. '_val' → logprob: -6.822882175445557
    5. ' val' → logprob: -6.947882175445557
    6. ' ' → logprob: -8.197881698608398
    7. ' value' → logprob: -9.072881698608398
    8. '_value' → logprob: -9.197881698608398
    9. ' vale' → logprob: -9.322881698608398
    10. 'inf' → logprob: -10.447881698608398

Token 524: '.' (ID: 13)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23068580031394958
    2. 'dp' → logprob: -2.4806857109069824
    3. '(dp' → logprob: -2.6056857109069824
    4. '(' → logprob: -3.2306857109069824
    5. '[' → logprob: -5.480685710906982
    6. '<|end|>' → logprob: -6.355685710906982
    7. '
' → logprob: -7.605685710906982
    8. ')
' → logprob: -7.730685710906982
    9. '([' → logprob: -7.855685710906982
    10. '(
' → logprob: -7.855685710906982

Token 525: ' '' (ID: 461)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20305493474006653
    2. '
' → logprob: -1.7030549049377441
    3. '<|end|>' → logprob: -7.453054904937744
    4. ' dp' → logprob: -7.828054904937744
    5. ' 
' → logprob: -8.828055381774902
    6. '  
' → logprob: -8.953055381774902
    7. '[' → logprob: -9.203055381774902
    8. '
' → logprob: -9.578055381774902
    9. '

' → logprob: -9.828055381774902
    10. '(dp' → logprob: -10.078055381774902

Token 526: 'dtype' (ID: 121178)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0021966483909636736
    2. ')' → logprob: -6.627196788787842
    3. '0' → logprob: -8.002196311950684
    4. ' dp' → logprob: -8.127196311950684
    5. '[' → logprob: -9.877196311950684
    6. 'dtype' → logprob: -10.002196311950684
    7. 'import' → logprob: -10.627196311950684
    8. ']' → logprob: -10.752196311950684
    9. '')' → logprob: -11.252196311950684
    10. '
' → logprob: -11.377196311950684

Token 527: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.10027676075696945
    2. '=' → logprob: -2.3502767086029053
    3. ' =' → logprob: -10.600276947021484
    4. '=
' → logprob: -10.725276947021484
    5. '=int' → logprob: -11.600276947021484
    6. '=n' → logprob: -11.600276947021484
    7. '=torch' → logprob: -14.225276947021484
    8. '=

' → logprob: -14.225276947021484
    9. '=pd' → logprob: -14.350276947021484
    10. '='' → logprob: -14.725276947021484

Token 528: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -6.630610641877865e-06
    2. 'int' → logprob: -12.375006675720215
    3. ' .' → logprob: -13.750006675720215
    4. '.' → logprob: -14.375006675720215
    5. '.uint' → logprob: -14.500006675720215
    6. '=int' → logprob: -16.3750057220459
    7. ' int' → logprob: -16.3750057220459
    8. '.float' → logprob: -16.7500057220459
    9. '.dtype' → logprob: -17.5000057220459
    10. '.ndarray' → logprob: -17.7500057220459

Token 529: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -1.9361264946837764e-07
    2. '6' → logprob: -16.875
    3. 'int' → logprob: -16.875
    4. ')' → logprob: -18.875
    5. 'p' → logprob: -19.875
    6. ' ' → logprob: -20.0
    7. 'c' → logprob: -20.125
    8. '32' → logprob: -20.125
    9. '<|end|>' → logprob: -20.625
    10. '_' → logprob: -20.75

Token 530: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022117885237094015
    2. ' )' → logprob: -8.875221252441406
    3. '')' → logprob: -9.875221252441406
    4. ')'' → logprob: -11.500221252441406
    5. ',' → logprob: -11.625221252441406
    6. ')`' → logprob: -12.000221252441406
    7. '),' → logprob: -14.125221252441406
    8. '))' → logprob: -14.500221252441406
    9. ')#' → logprob: -14.625221252441406
    10. ')
' → logprob: -14.625221252441406

Token 531: ' précise' (ID: 95250)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04073026403784752
    2. 'dp' → logprob: -3.4157302379608154
    3. '
' → logprob: -5.5407304763793945
    4. '<|end|>' → logprob: -6.5407304763793945
    5. ')
' → logprob: -7.0407304763793945
    6. '[' → logprob: -7.7907304763793945
    7. '(dp' → logprob: -8.915730476379395
    8. '[:]' → logprob: -10.290730476379395
    9. '  
' → logprob: -10.415730476379395
    10. ' dp' → logprob: -10.415730476379395

Token 532: ' le' (ID: 505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.015213131904602
    2. '=np' → logprob: -1.015213131904602
    3. '=' → logprob: -2.2652130126953125
    4. ' np' → logprob: -3.3902130126953125
    5. '(np' → logprob: -3.5152130126953125
    6. ' ' → logprob: -3.5152130126953125
    7. 'dtype' → logprob: -3.6402130126953125
    8. '=int' → logprob: -4.1402130126953125
    9. 'np' → logprob: -4.8902130126953125
    10. ''' → logprob: -5.5152130126953125

Token 533: ' type' (ID: 1490)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.6265751123428345
    2. ')' → logprob: -0.8765751123428345
    3. ',' → logprob: -4.251574993133545
    4. ' ' → logprob: -4.376574993133545
    5. ' dtype' → logprob: -4.376574993133545
    6. ' )' → logprob: -5.251574993133545
    7. 'int' → logprob: -7.251574993133545
    8. 'type' → logprob: -7.251574993133545
    9. 'space' → logprob: -7.376574993133545
    10. ' type' → logprob: -7.626574993133545

Token 534: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043334972113370895
    2. '(dp' → logprob: -3.7933349609375
    3. '(' → logprob: -5.0433349609375
    4. 'dp' → logprob: -5.4183349609375
    5. '[' → logprob: -5.5433349609375
    6. '(
' → logprob: -6.2933349609375
    7. '()' → logprob: -6.4183349609375
    8. ')
' → logprob: -7.5433349609375
    9. '
' → logprob: -8.4183349609375
    10. '())' → logprob: -8.7933349609375

Token 535: ' chaque' (ID: 21194)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.45773738622665405
    2. 'dp' → logprob: -1.4577374458312988
    3. 'int' → logprob: -2.332737445831299
    4. ')' → logprob: -4.207737445831299
    5. 'dtype' → logprob: -4.207737445831299
    6. ' np' → logprob: -5.582737445831299
    7. '=np' → logprob: -7.082737445831299
    8. '64' → logprob: -7.457737445831299
    9. '')' → logprob: -7.707737445831299
    10. ' ' → logprob: -7.957737445831299

Token 536: ' élément' (ID: 99627)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3159323930740356
    2. 'np' → logprob: -1.9409323930740356
    3. 'dtype' → logprob: -1.9409323930740356
    4. 'int' → logprob: -2.065932273864746
    5. 'dp' → logprob: -2.315932273864746
    6. ' np' → logprob: -2.690932273864746
    7. ',' → logprob: -3.190932273864746
    8. ' ' → logprob: -3.440932273864746
    9. ' dp' → logprob: -3.565932273864746
    10. '64' → logprob: -3.690932273864746

Token 537: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002168698003515601
    2. ')
' → logprob: -6.627168655395508
    3. 'dp' → logprob: -7.377168655395508
    4. '[' → logprob: -9.377168655395508
    5. '(dp' → logprob: -9.877168655395508
    6. '
' → logprob: -10.377168655395508
    7. ' )' → logprob: -11.502168655395508
    8. ')

' → logprob: -11.752168655395508
    9. ')
' → logprob: -12.377168655395508
    10. '()' → logprob: -12.377168655395508

Token 538: 'ent' (ID: 299)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.5712586045265198
    2. ')' → logprob: -1.446258544921875
    3. ' np' → logprob: -2.196258544921875
    4. 'int' → logprob: -2.571258544921875
    5. ' )' → logprob: -5.071258544921875
    6. ' ' → logprob: -6.321258544921875
    7. 'numpy' → logprob: -7.071258544921875
    8. ' int' → logprob: -7.446258544921875
    9. ''int' → logprob: -7.696258544921875
    10. '=np' → logprob: -8.071258544921875

Token 539: 'ier' (ID: 905)
  Prédit: '64'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '64' → logprob: -0.23012852668762207
    2. 'eger' → logprob: -2.105128526687622
    3. 'dp' → logprob: -3.105128526687622
    4. 'er' → logprob: -4.355128288269043
    5. 'e' → logprob: -4.480128288269043
    6. 't' → logprob: -5.855128288269043
    7. 'ger' → logprob: -6.105128288269043
    8. 'np' → logprob: -6.230128288269043
    9. 'dtype' → logprob: -6.355128288269043
    10. 'p' → logprob: -6.980128288269043

Token 540: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.042305923998355865
    2. '64' → logprob: -3.2923059463500977
    3. ' ' → logprob: -6.667305946350098
    4. ',' → logprob: -6.667305946350098
    5. '<|end|>' → logprob: -7.167305946350098
    6. ' )' → logprob: -8.042305946350098
    7. '_' → logprob: -8.792305946350098
    8. 'int' → logprob: -9.667305946350098
    9. '),' → logprob: -10.042305946350098
    10. '```' → logprob: -10.167305946350098

Token 541: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -0.2777882516384125
    2. ')' → logprob: -1.5277882814407349
    3. ',' → logprob: -4.152788162231445
    4. '<|end|>' → logprob: -5.527788162231445
    5. '=np' → logprob: -6.527788162231445
    6. '=' → logprob: -6.652788162231445
    7. '_' → logprob: -7.402788162231445
    8. ' ' → logprob: -7.652788162231445
    9. '),' → logprob: -8.527788162231445
    10. '')' → logprob: -8.527788162231445

Token 542: ' bits' (ID: 18189)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16242989897727966
    2. '-bit' → logprob: -2.0374298095703125
    3. 'bit' → logprob: -4.9124298095703125
    4. 'b' → logprob: -6.5374298095703125
    5. ' )' → logprob: -6.6624298095703125
    6. '<|end|>' → logprob: -6.7874298095703125
    7. ' ' → logprob: -6.9124298095703125
    8. 'bits' → logprob: -6.9124298095703125
    9. 'int' → logprob: -7.1624298095703125
    10. '')' → logprob: -7.2874298095703125

Token 543: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.596781946020201e-05
    2. ' )' → logprob: -10.375045776367188
    3. ')...' → logprob: -13.000045776367188
    4. '[' → logprob: -13.375045776367188
    5. ')#' → logprob: -13.375045776367188
    6. ',' → logprob: -13.500045776367188
    7. '),' → logprob: -13.500045776367188
    8. '))' → logprob: -13.875045776367188
    9. ')
' → logprob: -14.125045776367188
    10. ').' → logprob: -14.125045776367188

Token 544: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.029074613004922867
    2. '[' → logprob: -3.7790746688842773
    3. ')' → logprob: -5.904074668884277
    4. '=' → logprob: -7.154074668884277
    5. '(dp' → logprob: -7.154074668884277
    6. '```' → logprob: -7.529074668884277
    7. '\n' → logprob: -8.654074668884277
    8. ' dp' → logprob: -9.029074668884277
    9. '[
' → logprob: -9.154074668884277
    10. '0' → logprob: -9.279074668884277

Token 545: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.45848218582978e-06
    2. ' dp' → logprob: -14.00000286102295
    3. '#' → logprob: -14.75000286102295
    4. '```' → logprob: -15.25000286102295
    5. 'import' → logprob: -15.75000286102295
    6. '	dp' → logprob: -16.000001907348633
    7. '[' → logprob: -16.375001907348633
    8. 'def' → logprob: -16.500001907348633
    9. 'd' → logprob: -16.625001907348633
    10. '0' → logprob: -16.750001907348633

Token 546: ' définit' (ID: 89835)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018302230164408684
    2. 'dp' → logprob: -4.0183024406433105
    3. ' dp' → logprob: -9.018301963806152
    4. 's' → logprob: -12.018301963806152
    5. ' [' → logprob: -12.268301963806152
    6. '[
' → logprob: -12.393301963806152
    7. '0' → logprob: -13.143301963806152
    8. '
' → logprob: -13.143301963806152
    9. '```' → logprob: -13.143301963806152
    10. '_dp' → logprob: -13.268301963806152

Token 547: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0048942966386675835
    2. '[' → logprob: -5.879894256591797
    3. ' dp' → logprob: -6.754894256591797
    4. '
' → logprob: -7.754894256591797
    5. '(dp' → logprob: -9.379894256591797
    6. 'le' → logprob: -9.504894256591797
    7. '[]' → logprob: -9.504894256591797
    8. 'def' → logprob: -10.254894256591797
    9. ']' → logprob: -10.254894256591797
    10. 'la' → logprob: -10.504894256591797

Token 548: ' base' (ID: 3611)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07459882646799088
    2. '[' → logprob: -2.699598789215088
    3. '0' → logprob: -5.699598789215088
    4. ' dp' → logprob: -7.949598789215088
    5. '```' → logprob: -8.074599266052246
    6. '1' → logprob: -9.199599266052246
    7. 'code' → logprob: -10.324599266052246
    8. 'value' → logprob: -10.449599266052246
    9. 'token' → logprob: -10.449599266052246
    10. '
' → logprob: -10.449599266052246

Token 549: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5318021178245544
    2. '[' → logprob: -0.9068021178245544
    3. '_dp' → logprob: -5.531802177429199
    4. ' dp' → logprob: -5.781802177429199
    5. ' =' → logprob: -7.406802177429199
    6. 'case' → logprob: -8.4068021774292
    7. '=' → logprob: -8.5318021774292
    8. '_' → logprob: -8.6568021774292
    9. '(dp' → logprob: -9.6568021774292
    10. '	dp' → logprob: -9.9068021774292

Token 550: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0006167700630612671
    2. ' dp' → logprob: -7.500616550445557
    3. '(dp' → logprob: -10.125617027282715
    4. '	dp' → logprob: -11.750617027282715
    5. 'd' → logprob: -12.250617027282715
    6. 'la' → logprob: -13.250617027282715
    7. '_dp' → logprob: -13.375617027282715
    8. 'code' → logprob: -13.375617027282715
    9. '[' → logprob: -14.000617027282715
    10. 'c' → logprob: -14.500617027282715

Token 551: ' programmation' (ID: 166376)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005973544903099537
    2. ' dp' → logprob: -7.5005974769592285
    3. 'solution' → logprob: -11.50059700012207
    4. 'fonction' → logprob: -11.50059700012207
    5. 'condition' → logprob: -12.00059700012207
    6. 'val' → logprob: -12.37559700012207
    7. 'base' → logprob: -12.62559700012207
    8. 'd' → logprob: -13.75059700012207
    9. ' solution' → logprob: -13.87559700012207
    10. '#' → logprob: -13.87559700012207

Token 552: ' dynamique' (ID: 98708)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5683825612068176
    2. ' dynamique' → logprob: -1.0683825016021729
    3. 'dynamic' → logprob: -2.818382501602173
    4. 'd' → logprob: -3.818382501602173
    5. 'dyn' → logprob: -5.568382740020752
    6. ' dynamic' → logprob: -6.193382740020752
    7. ' dp' → logprob: -7.318382740020752
    8. 'din' → logprob: -7.443382740020752
    9. 'dy' → logprob: -7.943382740020752
    10. '```' → logprob: -8.193382263183594

Token 553: ' :' (ID: 712)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3870808780193329
    2. 'dp' → logprob: -1.1370809078216553
    3. ' dp' → logprob: -9.012081146240234
    4. '
' → logprob: -9.637081146240234
    5. '_dp' → logprob: -11.637081146240234
    6. '0' → logprob: -13.137081146240234
    7. '	dp' → logprob: -13.137081146240234
    8. '(dp' → logprob: -13.137081146240234
    9. ' [' → logprob: -13.262081146240234
    10. '

' → logprob: -13.762081146240234

Token 554: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00012761499965563416
    2. ' dp' → logprob: -9.000127792358398
    3. '[' → logprob: -13.000127792358398
    4. '0' → logprob: -13.375127792358398
    5. '	dp' → logprob: -16.0001277923584
    6. '(dp' → logprob: -16.6251277923584
    7. '_dp' → logprob: -16.6251277923584
    8. 'd' → logprob: -17.8751277923584
    9. ']' → logprob: -18.0001277923584
    10. '
' → logprob: -18.3751277923584

Token 555: ' coût' (ID: 73109)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00041518008220009506
    2. ' dp' → logprob: -8.125414848327637
    3. '[' → logprob: -9.750414848327637
    4. '0' → logprob: -10.125414848327637
    5. '```' → logprob: -11.375414848327637
    6. '`' → logprob: -12.375414848327637
    7. '
' → logprob: -13.875414848327637
    8. 'd' → logprob: -14.000414848327637
    9. 's' → logprob: -14.250414848327637
    10. '	dp' → logprob: -14.500414848327637

Token 556: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5817919969558716
    2. '[' → logprob: -0.8317919969558716
    3. ' dp' → logprob: -5.206791877746582
    4. ' [' → logprob: -8.581791877746582
    5. '0' → logprob: -9.456791877746582
    6. ' =' → logprob: -10.206791877746582
    7. '=' → logprob: -11.081791877746582
    8. '_dp' → logprob: -11.956791877746582
    9. '	dp' → logprob: -11.956791877746582
    10. 'd' → logprob: -12.331791877746582

Token 557: ' commencer' (ID: 66055)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6238829493522644
    2. '0' → logprob: -1.3738830089569092
    3. ' dp' → logprob: -1.6238830089569092
    4. ' ' → logprob: -4.49888277053833
    5. '[' → logprob: -6.12388277053833
    6. ' la' → logprob: -9.123883247375488
    7. ' i' → logprob: -9.373883247375488
    8. 'i' → logprob: -9.623883247375488
    9. '	dp' → logprob: -9.873883247375488
    10. 'l' → logprob: -10.248883247375488

Token 558: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07096532732248306
    2. 'dp' → logprob: -2.69596529006958
    3. ' dp' → logprob: -7.07096529006958
    4. '0' → logprob: -9.820965766906738
    5. ' à' → logprob: -10.695965766906738
    6. ' [' → logprob: -10.820965766906738
    7. 'à' → logprob: -11.070965766906738
    8. ',' → logprob: -11.445965766906738
    9. ' =' → logprob: -11.570965766906738
    10. ' ' → logprob: -11.695965766906738

Token 559: 'auc' (ID: 11816)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14512257277965546
    2. '0' → logprob: -2.395122528076172
    3. ')' → logprob: -3.770122528076172
    4. '[' → logprob: -4.645122528076172
    5. ' dp' → logprob: -4.645122528076172
    6. ' )' → logprob: -7.270122528076172
    7. ' ' → logprob: -7.770122528076172
    8. ')=' → logprob: -8.770122528076172
    9. ')[' → logprob: -9.395122528076172
    10. '=' → logprob: -10.145122528076172

Token 560: 'une' (ID: 2561)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.3437192440032959
    2. '=' → logprob: -2.093719244003296
    3. 'une' → logprob: -2.093719244003296
    4. 'e' → logprob: -3.968719244003296
    5. 'dp' → logprob: -4.468719482421875
    6. 'n' → logprob: -5.468719482421875
    7. 'ucun' → logprob: -6.218719482421875
    8. '_' → logprob: -6.718719482421875
    9. '[' → logprob: -6.843719482421875
    10. ' =' → logprob: -6.968719482421875

Token 561: ' opération' (ID: 86023)
  Prédit: ' déplacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' déplacement' → logprob: -0.5433692336082458
    2. '_' → logprob: -1.1683692932128906
    3. 'dé' → logprob: -3.5433692932128906
    4. ')' → logprob: -3.7933692932128906
    5. ' ' → logprob: -4.543369293212891
    6. 'de' → logprob: -5.293369293212891
    7. ' élément' → logprob: -5.418369293212891
    8. '[' → logprob: -5.668369293212891
    9. ' )' → logprob: -5.793369293212891
    10. ' mouvement' → logprob: -5.918369293212891

Token 562: ' encore' (ID: 14043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06234016641974449
    2. '=' → logprob: -4.062340259552002
    3. 'dp' → logprob: -4.187340259552002
    4. ' )' → logprob: -4.812340259552002
    5. '[' → logprob: -4.937340259552002
    6. ')=' → logprob: -5.562340259552002
    7. ' effectué' → logprob: -6.312340259552002
    8. ' à' → logprob: -6.687340259552002
    9. ' =' → logprob: -6.937340259552002
    10. '[]' → logprob: -7.562340259552002

Token 563: ' faite' (ID: 78359)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14373132586479187
    2. ' effectué' → logprob: -3.8937313556671143
    3. ' à' → logprob: -4.143731117248535
    4. '_' → logprob: -4.268731117248535
    5. 'dp' → logprob: -4.268731117248535
    6. '=' → logprob: -4.268731117248535
    7. ' effectu' → logprob: -4.268731117248535
    8. ' =' → logprob: -4.768731117248535
    9. ' )' → logprob: -5.018731117248535
    10. 'à' → logprob: -5.143731117248535

Token 564: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017988269682973623
    2. '[' → logprob: -7.001798629760742
    3. ' )' → logprob: -7.376798629760742
    4. 'dp' → logprob: -9.001798629760742
    5. ')=' → logprob: -9.626798629760742
    6. ')
' → logprob: -10.376798629760742
    7. ' ' → logprob: -12.001798629760742
    8. ']' → logprob: -12.501798629760742
    9. ')`' → logprob: -12.501798629760742
    10. '0' → logprob: -12.626798629760742

Token 565: ' est' (ID: 893)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2524937093257904
    2. 'dp' → logprob: -1.5024937391281128
    3. ' dp' → logprob: -7.752493858337402
    4. '
' → logprob: -9.502493858337402
    5. ' =' → logprob: -11.127493858337402
    6. ' [' → logprob: -11.877493858337402
    7. '0' → logprob: -11.877493858337402
    8. '(dp' → logprob: -12.127493858337402
    9. '_dp' → logprob: -12.127493858337402
    10. '=' → logprob: -12.252493858337402

Token 566: ' nul' (ID: 64435)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023057712242007256
    2. 'dp' → logprob: -4.02305793762207
    3. ' ' → logprob: -5.52305793762207
    4. ' dp' → logprob: -7.02305793762207
    5. '=' → logprob: -13.14805793762207
    6. '[' → logprob: -13.77305793762207
    7. '(dp' → logprob: -13.77305793762207
    8. ' =' → logprob: -13.89805793762207
    9. '	dp' → logprob: -14.02305793762207
    10. '
' → logprob: -14.27305793762207

Token 567: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.057677771896123886
    2. '[' → logprob: -2.932677745819092
    3. '
' → logprob: -6.557677745819092
    4. ' dp' → logprob: -7.057677745819092
    5. ']' → logprob: -8.05767822265625
    6. '(dp' → logprob: -9.43267822265625
    7. ')' → logprob: -11.05767822265625
    8. ']
' → logprob: -11.55767822265625
    9. '_dp' → logprob: -11.55767822265625
    10. '.' → logprob: -11.68267822265625

Token 568: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.054500666621607e-06
    2. '
' → logprob: -13.50000286102295
    3. ' dp' → logprob: -13.62500286102295
    4. '[' → logprob: -15.62500286102295
    5. ' 
' → logprob: -16.875003814697266
    6. '	dp' → logprob: -17.000003814697266
    7. 'dt' → logprob: -17.250003814697266
    8. '```' → logprob: -17.625003814697266
    9. '(dp' → logprob: -17.875003814697266
    10. '  
' → logprob: -18.125003814697266

Token 569: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. ' [' → logprob: -14.250000953674316
    3. '0' → logprob: -15.750000953674316
    4. '```' → logprob: -16.500001907348633
    5. '[:]' → logprob: -18.000001907348633
    6. '\[' → logprob: -18.125001907348633
    7. 'dp' → logprob: -18.250001907348633
    8. '[
' → logprob: -18.625001907348633
    9. '[...]' → logprob: -18.875001907348633
    10. '[np' → logprob: -18.875001907348633

Token 570: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. ']' → logprob: -18.875
    4. '[' → logprob: -19.0
    5. '   ' → logprob: -20.625
    6. '
' → logprob: -20.875
    7. '```' → logprob: -20.875
    8. '=' → logprob: -21.25
    9. '۰' → logprob: -22.5
    10. '０' → logprob: -22.625

Token 571: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.8828707804204896e-05
    2. ' ]' → logprob: -10.250048637390137
    3. ']=' → logprob: -11.250048637390137
    4. '[' → logprob: -15.375048637390137
    5. '=' → logprob: -16.000049591064453
    6. ')' → logprob: -18.375049591064453
    7. '0' → logprob: -19.375049591064453
    8. ']
' → logprob: -19.625049591064453
    9. ' ' → logprob: -20.500049591064453
    10. ']==' → logprob: -20.625049591064453

Token 572: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006717505399137735
    2. ' =' → logprob: -5.006717681884766
    3. ']=' → logprob: -13.881717681884766
    4. ']' → logprob: -14.256717681884766
    5. '[' → logprob: -14.881717681884766
    6. '=

' → logprob: -16.381717681884766
    7. '＝' → logprob: -16.631717681884766
    8. ')=' → logprob: -17.006717681884766
    9. '=}' → logprob: -17.756717681884766
    10. '.=' → logprob: -17.756717681884766

Token 573: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '۰' → logprob: -23.25
    4. ' ' → logprob: -25.0
    5. '   ' → logprob: -25.25
    6. '```' → logprob: -25.375
    7. '  ' → logprob: -25.75
    8. '00' → logprob: -25.75
    9. '０' → logprob: -25.875
    10. '
' → logprob: -25.875

Token 574: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '۰' → logprob: -23.75
    4. '０' → logprob: -25.25
    5. '   ' → logprob: -26.125
    6. '  ' → logprob: -26.5
    7. 'np' → logprob: -26.625
    8. ' ' → logprob: -26.75
    9. '٠' → logprob: -26.875
    10. '00' → logprob: -27.0

Token 575: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 576: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 577: ' Z' (ID: 1489)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07833649218082428
    2. ' for' → logprob: -3.078336477279663
    3. '<|end|>' → logprob: -3.828336477279663
    4. '
' → logprob: -4.953336715698242
    5. ' 
' → logprob: -8.578336715698242
    6. '  
' → logprob: -9.953336715698242
    7. 'dp' → logprob: -9.953336715698242
    8. ')' → logprob: -9.953336715698242
    9. '<|end|>' → logprob: -10.078336715698242
    10. ' ' → logprob: -10.203336715698242

Token 578: 'éro' (ID: 28155)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4550336003303528
    2. '<|end|>' → logprob: -1.705033540725708
    3. '[' → logprob: -2.830033540725708
    4. '\' → logprob: -3.580033540725708
    5. ' ' → logprob: -3.955033540725708
    6. '
' → logprob: -4.080033779144287
    7. '#' → logprob: -4.455033779144287
    8. '\u' → logprob: -4.830033779144287
    9. '```' → logprob: -5.330033779144287
    10. '[:]' → logprob: -5.455033779144287

Token 579: ' signifie' (ID: 81149)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48021653294563293
    2. '<|end|>' → logprob: -0.9802165031433105
    3. '<|end|>' → logprob: -5.9802165031433105
    4. '\n' → logprob: -6.3552165031433105
    5. '[' → logprob: -8.105216979980469
    6. '#' → logprob: -8.355216979980469
    7. '  
' → logprob: -8.355216979980469
    8. '

' → logprob: -8.480216979980469
    9. '```' → logprob: -8.480216979980469
    10. ')' → logprob: -8.855216979980469

Token 580: ' qu' (ID: 474)
  Prédit: 'auc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auc' → logprob: -0.02117222547531128
    2. '<|end|>' → logprob: -5.646172046661377
    3. 'le' → logprob: -5.771172046661377
    4. ' le' → logprob: -5.896172046661377
    5. 'qu' → logprob: -5.896172046661377
    6. ' qu' → logprob: -6.146172046661377
    7. ' aucune' → logprob: -6.396172046661377
    8. 'l' → logprob: -7.021172046661377
    9. ' la' → logprob: -7.271172046661377
    10. ' aucun' → logprob: -7.396172046661377

Token 581: ''on' (ID: 25812)
  Prédit: 'auc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auc' → logprob: -0.8598083257675171
    2. 'e' → logprob: -1.734808325767517
    3. ''' → logprob: -2.1098084449768066
    4. ''on' → logprob: -3.1098084449768066
    5. 'on' → logprob: -3.2348084449768066
    6. ' aucune' → logprob: -3.3598084449768066
    7. 'A' → logprob: -3.3598084449768066
    8. 'u' → logprob: -3.4848084449768066
    9. 'ucune' → logprob: -3.4848084449768066
    10. '```' → logprob: -4.484808444976807

Token 582: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6359828114509583
    2. ' n' → logprob: -1.1359827518463135
    3. ' a' → logprob: -2.6359827518463135
    4. 'a' → logprob: -3.2609827518463135
    5. 'dp' → logprob: -4.510982990264893
    6. ' continue' → logprob: -4.760982990264893
    7. 'continue' → logprob: -5.885982990264893
    8. ' ne' → logprob: -6.135982990264893
    9. 'n't' → logprob: -6.135982990264893
    10. ' part' → logprob: -6.760982990264893

Token 583: ''a' (ID: 10443)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0643335580825806
    2. ''a' → logprob: -1.1893335580825806
    3. 'a' → logprob: -1.3143335580825806
    4. '[' → logprob: -3.814333438873291
    5. ''' → logprob: -3.814333438873291
    6. '```' → logprob: -4.939333438873291
    7. 'e' → logprob: -5.064333438873291
    8. ' n' → logprob: -5.814333438873291
    9. '[n' → logprob: -6.064333438873291
    10. 'u' → logprob: -6.314333438873291

Token 584: ' encore' (ID: 14043)
  Prédit: ' encore'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' encore' → logprob: -1.013257622718811
    2. 'pas' → logprob: -1.388257622718811
    3. 'auc' → logprob: -1.513257622718811
    4. ' pas' → logprob: -2.5132575035095215
    5. ' effectué' → logprob: -3.5132575035095215
    6. 'enc' → logprob: -4.0132575035095215
    7. 'fait' → logprob: -4.3882575035095215
    8. 'f' → logprob: -5.0132575035095215
    9. 'effect' → logprob: -5.3882575035095215
    10. ' aucune' → logprob: -6.2632575035095215

Token 585: ' rien' (ID: 23082)
  Prédit: 'fait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fait' → logprob: -0.09187274426221848
    2. 'auc' → logprob: -4.091872692108154
    3. ' effectué' → logprob: -4.091872692108154
    4. 'f' → logprob: -4.216872692108154
    5. 'effect' → logprob: -4.466872692108154
    6. ' fait' → logprob: -4.841872692108154
    7. ' rien' → logprob: -4.966872692108154
    8. 'r' → logprob: -5.216872692108154
    9. 'pas' → logprob: -5.841872692108154
    10. 'faite' → logprob: -6.091872692108154

Token 586: ' fait' (ID: 7473)
  Prédit: 'fait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fait' → logprob: -0.3789772689342499
    2. ' effectué' → logprob: -1.6289772987365723
    3. ' fait' → logprob: -2.7539772987365723
    4. 'f' → logprob: -3.6289772987365723
    5. 'dp' → logprob: -4.253977298736572
    6. 'faite' → logprob: -6.128977298736572
    7. 'co' → logprob: -6.503977298736572
    8. ' réalisé' → logprob: -6.628977298736572
    9. 'faire' → logprob: -6.753977298736572
    10. 'dé' → logprob: -7.003977298736572

Token 587: ' donc' (ID: 14206)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 588: ' pas' (ID: 2173)
  Prédit: 'auc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'auc' → logprob: -0.11468013375997543
    2. ' aucune' → logprob: -3.364680051803589
    3. 'dp' → logprob: -3.489680051803589
    4. ' aucun' → logprob: -4.114680290222168
    5. '.' → logprob: -4.989680290222168
    6. ' rien' → logprob: -5.989680290222168
    7. '<|end|>' → logprob: -6.239680290222168
    8. 'A' → logprob: -6.489680290222168
    9. 'pas' → logprob: -6.614680290222168
    10. ' ' → logprob: -6.614680290222168

Token 589: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7069698572158813
    2. ' de' → logprob: -0.9569698572158813
    3. 'd' → logprob: -2.331969738006592
    4. ' d' → logprob: -4.081969738006592
    5. ' ' → logprob: -6.456969738006592
    6. ' encore' → logprob: -6.581969738006592
    7. 'dp' → logprob: -6.706969738006592
    8. '#' → logprob: -6.956969738006592
    9. 'dep' → logprob: -7.081969738006592
    10. 'des' → logprob: -7.456969738006592

Token 590: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.0208110474050045
    2. ' coût' → logprob: -4.020811080932617
    3. 'cout' → logprob: -6.270811080932617
    4. 'c' → logprob: -8.270811080932617
    5. 'cost' → logprob: -9.145811080932617
    6. ' cout' → logprob: -9.270811080932617
    7. 'op' → logprob: -9.645811080932617
    8. ' co' → logprob: -10.020811080932617
    9. ' coûts' → logprob: -10.145811080932617
    10. ' ' → logprob: -10.270811080932617

Token 591: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30574843287467957
    2. '<|end|>' → logprob: -1.805748462677002
    3. '\n' → logprob: -2.680748462677002
    4. 'for' → logprob: -3.805748462677002
    5. 'dp' → logprob: -5.930748462677002
    6. ' for' → logprob: -6.305748462677002
    7. '<|end|>' → logprob: -7.055748462677002
    8. '```' → logprob: -7.430748462677002
    9. '  
' → logprob: -7.680748462677002
    10. ')' → logprob: -7.680748462677002

Token 592: ' ce' (ID: 2357)
  Prédit: 'payer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'payer' → logprob: -0.6865339875221252
    2. 'dé' → logprob: -1.5615339279174805
    3. 'faire' → logprob: -2.0615339279174805
    4. 'acc' → logprob: -3.3115339279174805
    5. '0' → logprob: -3.9365339279174805
    6. 'prendre' → logprob: -4.0615339279174805
    7. 'aj' → logprob: -4.4365339279174805
    8. 'auc' → logprob: -4.6865339279174805
    9. 'f' → logprob: -4.8115339279174805
    10. 'penser' → logprob: -4.9365339279174805

Token 593: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.518676221370697
    2. ' stade' → logprob: -2.018676280975342
    3. 'moment' → logprob: -2.518676280975342
    4. 'prem' → logprob: -2.768676280975342
    5. 'st' → logprob: -3.393676280975342
    6. ' point' → logprob: -3.768676280975342
    7. ' moment' → logprob: -4.143676280975342
    8. 'niveau' → logprob: -4.393676280975342
    9. 'jour' → logprob: -4.518676280975342
    10. 'token' → logprob: -5.518676280975342

Token 594: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40189966559410095
    2. '<|end|>' → logprob: -1.5268996953964233
    3. '\n' → logprob: -2.401899576187134
    4. 'for' → logprob: -4.401899814605713
    5. 'dp' → logprob: -5.401899814605713
    6. '```' → logprob: -6.151899814605713
    7. '<|end|>' → logprob: -7.026899814605713
    8. '  
' → logprob: -7.526899814605713
    9. ' for' → logprob: -7.526899814605713
    10. '[' → logprob: -8.026899337768555

Token 595: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.419583797454834
    2. 'for' → logprob: -1.294583797454834
    3. '<|end|>' → logprob: -2.919583797454834
    4. ' for' → logprob: -4.794583797454834
    5. 'dp' → logprob: -6.044583797454834
    6. '\n' → logprob: -6.669583797454834
    7. '  
' → logprob: -7.794583797454834
    8. '```' → logprob: -7.919583797454834
    9. ' 
' → logprob: -8.169584274291992
    10. '<|end|>' → logprob: -8.169584274291992

Token 596: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1517960956552997e-05
    2. ' for' → logprob: -12.125011444091797
    3. '#' → logprob: -12.500011444091797
    4. 'dp' → logprob: -14.625011444091797
    5. 'prev' → logprob: -14.625011444091797
    6. 'max' → logprob: -15.500011444091797
    7. 'cost' → logprob: -15.500011444091797
    8. 'from' → logprob: -15.625011444091797
    9. 'current' → logprob: -15.625011444091797
    10. 'i' → logprob: -16.625011444091797

Token 597: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0041504609398543835
    2. ' for' → logprob: -5.754150390625
    3. 'or' → logprob: -7.004150390625
    4. '=' → logprob: -10.879150390625
    5. '.' → logprob: -11.129150390625
    6. '
' → logprob: -12.004150390625
    7. 'def' → logprob: -12.504150390625
    8. ' =' → logprob: -12.754150390625
    9. ' ' → logprob: -13.129150390625
    10. 'import' → logprob: -13.129150390625

Token 598: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.00737175764515996
    2. 'ours' → logprob: -5.13237190246582
    3. 'oure' → logprob: -7.00737190246582
    4. '_' → logprob: -8.00737190246582
    5. '#' → logprob: -9.88237190246582
    6. 'ourse' → logprob: -10.38237190246582
    7. 'court' → logprob: -10.50737190246582
    8. '```' → logprob: -10.63237190246582
    9. '
' → logprob: -11.50737190246582
    10. '[' → logprob: -11.63237190246582

Token 599: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4369920790195465
    2. ' range' → logprob: -1.0619920492172241
    3. '(range' → logprob: -4.936992168426514
    4. 'for' → logprob: -8.061991691589355
    5. 'i' → logprob: -8.686991691589355
    6. '_' → logprob: -8.811991691589355
    7. '(N' → logprob: -8.936991691589355
    8. '(' → logprob: -9.311991691589355
    9. ' for' → logprob: -9.686991691589355
    10. ' i' → logprob: -9.686991691589355

Token 600: ' élément' (ID: 99627)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08907219022512436
    2. ' i' → logprob: -2.4640722274780273
    3. '_' → logprob: -9.089072227478027
    4. '_i' → logprob: -11.714072227478027
    5. ' range' → logprob: -13.214072227478027
    6. 'range' → logprob: -13.339072227478027
    7. '	i' → logprob: -13.339072227478027
    8. ' _' → logprob: -13.464072227478027
    9. '(i' → logprob: -13.464072227478027
    10. 'I' → logprob: -14.339072227478027

Token 601: ' '' (ID: 461)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19762468338012695
    2. 'in' → logprob: -1.947624683380127
    3. ':' → logprob: -5.197624683380127
    4. 'i' → logprob: -5.322624683380127
    5. 'for' → logprob: -5.322624683380127
    6. ' i' → logprob: -5.322624683380127
    7. ',' → logprob: -6.072624683380127
    8. 'range' → logprob: -6.197624683380127
    9. '_' → logprob: -6.447624683380127
    10. 's' → logprob: -6.572624683380127

Token 602: 'p' (ID: 79)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7196448445320129
    2. ' range' → logprob: -1.3446447849273682
    3. 'P' → logprob: -2.094644784927368
    4. 'i' → logprob: -2.344644784927368
    5. ' in' → logprob: -4.219645023345947
    6. ' i' → logprob: -4.969645023345947
    7. 'in' → logprob: -5.344645023345947
    8. ' P' → logprob: -5.719645023345947
    9. 'de' → logprob: -6.969645023345947
    10. ' de' → logprob: -7.469645023345947

Token 603: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.7675541639328003
    2. ' =' → logprob: -1.7675541639328003
    3. ''' → logprob: -2.14255428314209
    4. ')' → logprob: -2.26755428314209
    5. '=' → logprob: -2.26755428314209
    6. ' ' → logprob: -2.26755428314209
    7. ']' → logprob: -2.89255428314209
    8. '[i' → logprob: -3.14255428314209
    9. '[' → logprob: -4.01755428314209
    10. '_' → logprob: -4.01755428314209

Token 604: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1973903477191925
    2. 'in' → logprob: -2.07239031791687
    3. ',' → logprob: -3.32239031791687
    4. ' ' → logprob: -5.072390556335449
    5. 's' → logprob: -5.822390556335449
    6. ' =' → logprob: -6.197390556335449
    7. 'dans' → logprob: -6.822390556335449
    8. '=' → logprob: -7.197390556335449
    9. 'de' → logprob: -7.447390556335449
    10. ')' → logprob: -7.697390556335449

Token 605: ' la' (ID: 557)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0008934747893363237
    2. 'range' → logprob: -7.500893592834473
    3. ' P' → logprob: -8.250893592834473
    4. ' range' → logprob: -9.500893592834473
    5. 'enumer' → logprob: -12.500893592834473
    6. 'p' → logprob: -14.875893592834473
    7. ' enumerate' → logprob: -16.125892639160156
    8. ')' → logprob: -16.500892639160156
    9. '[P' → logprob: -16.750892639160156
    10. 'the' → logprob: -16.875892639160156

Token 606: ' liste' (ID: 31719)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.06134306266903877
    2. 'range' → logprob: -2.93634295463562
    3. ' range' → logprob: -5.061343193054199
    4. ' P' → logprob: -9.5613431930542
    5. 'enumer' → logprob: -11.0613431930542
    6. '(range' → logprob: -11.9363431930542
    7. 'for' → logprob: -12.3113431930542
    8. 'p' → logprob: -12.9363431930542
    9. ')' → logprob: -14.3113431930542
    10. ' for' → logprob: -14.9363431930542

Token 607: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.03428430110216141
    2. '(P' → logprob: -3.5342843532562256
    3. ' P' → logprob: -5.9092841148376465
    4. ' in' → logprob: -8.034284591674805
    5. 's' → logprob: -8.409284591674805
    6. '(' → logprob: -8.534284591674805
    7. 'for' → logprob: -8.659284591674805
    8. 'range' → logprob: -8.784284591674805
    9. 'in' → logprob: -9.284284591674805
    10. ' for' → logprob: -9.659284591674805

Token 608: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2750127613544464
    2. 'for' → logprob: -1.525012731552124
    3. ' for' → logprob: -4.025012969970703
    4. ':
' → logprob: -5.650012969970703
    5. ',' → logprob: -7.275012969970703
    6. '
' → logprob: -8.775012969970703
    7. '[' → logprob: -9.400012969970703
    8. '```' → logprob: -9.400012969970703
    9. '.' → logprob: -9.650012969970703
    10. ' :' → logprob: -9.775012969970703

Token 609: ' qui' (ID: 2780)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4742319881916046
    2. 'for' → logprob: -0.9742319583892822
    3. ':' → logprob: -9.849231719970703
    4. ' p' → logprob: -9.974231719970703
    5. ' 
' → logprob: -10.849231719970703
    6. '```' → logprob: -12.099231719970703
    7. 'p' → logprob: -12.349231719970703
    8. ' ' → logprob: -12.349231719970703
    9. 'dp' → logprob: -12.724231719970703
    10. ')' → logprob: -12.724231719970703

Token 610: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8976236581802368
    2. ' in' → logprob: -1.1476236581802368
    3. 'in' → logprob: -1.6476236581802368
    4. 'for' → logprob: -4.272623538970947
    5. '=' → logprob: -4.397623538970947
    6. ' for' → logprob: -4.397623538970947
    7. 's' → logprob: -4.772623538970947
    8. ' =' → logprob: -5.147623538970947
    9. 'range' → logprob: -5.272623538970947
    10. ' range' → logprob: -5.522623538970947

Token 611: ' la' (ID: 557)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.4644153118133545
    2. 'p' → logprob: -2.0894153118133545
    3. 'P' → logprob: -2.5894153118133545
    4. 'dp' → logprob: -2.8394153118133545
    5. 'range' → logprob: -3.4644153118133545
    6. ' p' → logprob: -4.214415550231934
    7. ' enumerate' → logprob: -4.214415550231934
    8. ' P' → logprob: -4.339415550231934
    9. ' range' → logprob: -4.714415550231934
    10. ' not' → logprob: -5.339415550231934

Token 612: ' sé' (ID: 7462)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8707603216171265
    2. 'for' → logprob: -0.9957603216171265
    3. 'range' → logprob: -1.6207603216171265
    4. ' for' → logprob: -4.995760440826416
    5. ' range' → logprob: -5.370760440826416
    6. 'enumer' → logprob: -6.620760440826416
    7. 'pour' → logprob: -8.245759963989258
    8. 'in' → logprob: -8.245759963989258
    9. ' :' → logprob: -8.745759963989258
    10. 'p' → logprob: -8.745759963989258

Token 613: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -9.849109119386412e-06
    2. 'q' → logprob: -12.000009536743164
    3. 'quent' → logprob: -13.500009536743164
    4. 'QUENCE' → logprob: -13.625009536743164
    5. '#' → logprob: -14.875009536743164
    6. 'quences' → logprob: -15.375009536743164
    7. 'que' → logprob: -16.125009536743164
    8. 'p' → logprob: -16.375009536743164
    9. 'rie' → logprob: -16.500009536743164
    10. 'qu' → logprob: -16.750009536743164

Token 614: ' des' (ID: 731)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21218758821487427
    2. 'for' → logprob: -2.2121875286102295
    3. ' for' → logprob: -3.2121875286102295
    4. ',' → logprob: -4.087187767028809
    5. ' in' → logprob: -5.087187767028809
    6. ':
' → logprob: -5.212187767028809
    7. 'in' → logprob: -5.212187767028809
    8. 's' → logprob: -5.962187767028809
    9. '[' → logprob: -6.587187767028809
    10. '.' → logprob: -7.462187767028809

Token 615: ' nombres' (ID: 76205)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.259305715560913
    2. ' nombres' → logprob: -1.259305715560913
    3. 'p' → logprob: -1.509305715560913
    4. 'élé' → logprob: -2.259305715560913
    5. 'positions' → logprob: -3.634305715560913
    6. ' P' → logprob: -3.759305715560913
    7. 'nombre' → logprob: -3.759305715560913
    8. 'val' → logprob: -4.384305953979492
    9. ' éléments' → logprob: -4.884305953979492
    10. ' p' → logprob: -5.884305953979492

Token 616: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4091450572013855
    2. 'for' → logprob: -1.1591451168060303
    3. ' for' → logprob: -4.409144878387451
    4. ':
' → logprob: -4.909144878387451
    5. ',' → logprob: -6.409144878387451
    6. '```' → logprob: -8.40914535522461
    7. '
' → logprob: -8.53414535522461
    8. '.' → logprob: -9.53414535522461
    9. 'in' → logprob: -9.78414535522461
    10. '[' → logprob: -9.78414535522461

Token 617: ' traiter' (ID: 105852)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.048074305057525635
    2. ' traiter' → logprob: -3.798074245452881
    3. 'tra' → logprob: -4.548074245452881
    4. 'process' → logprob: -4.673074245452881
    5. 'placer' → logprob: -6.423074245452881
    6. 'enumer' → logprob: -7.048074245452881
    7. 'tr' → logprob: -7.173074245452881
    8. 'p' → logprob: -7.173074245452881
    9. '```' → logprob: -9.423074722290039
    10. 'proces' → logprob: -9.548074722290039

Token 618: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3896758258342743
    2. ':' → logprob: -1.2646758556365967
    3. ' for' → logprob: -3.5146758556365967
    4. ':
' → logprob: -5.639675617218018
    5. ',' → logprob: -5.889675617218018
    6. '
' → logprob: -6.014675617218018
    7. '  
' → logprob: -8.014676094055176
    8. '.' → logprob: -8.139676094055176
    9. '```' → logprob: -8.139676094055176
    10. 'dp' → logprob: -8.639676094055176

Token 619: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00012356207298580557
    2. ' for' → logprob: -9.125123977661133
    3. 'dp' → logprob: -11.250123977661133
    4. 'p' → logprob: -14.000123977661133
    5. 'fo' → logprob: -15.500123977661133
    6. '```' → logprob: -15.625123977661133
    7. 'f' → logprob: -15.875123977661133
    8. 'i' → logprob: -15.875123977661133
    9. ')' → logprob: -16.750123977661133
    10. '	for' → logprob: -17.375123977661133

Token 620: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.009952515363693237
    2. ' p' → logprob: -4.634952545166016
    3. 'i' → logprob: -8.634952545166016
    4. ' i' → logprob: -11.009952545166016
    5. '_p' → logprob: -13.384952545166016
    6. '_' → logprob: -14.884952545166016
    7. '	p' → logprob: -16.134952545166016
    8. ' ' → logprob: -16.384952545166016
    9. ' _' → logprob: -17.009952545166016
    10. '_i' → logprob: -17.009952545166016

Token 621: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22687241435050964
    2. 'in' → logprob: -1.601872444152832
    3. ' ' → logprob: -6.601872444152832
    4. ',' → logprob: -10.601872444152832
    5. '  ' → logprob: -10.976872444152832
    6. 'p' → logprob: -11.351872444152832
    7. ' ' → logprob: -11.351872444152832
    8. ')' → logprob: -11.726872444152832
    9. 's' → logprob: -12.226872444152832
    10. '	in' → logprob: -12.351872444152832

Token 622: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.4855663721391466e-05
    2. ' P' → logprob: -11.125015258789062
    3. 'range' → logprob: -19.375015258789062
    4. 'p' → logprob: -19.750015258789062
    5. '[P' → logprob: -21.000015258789062
    6. ' range' → logprob: -21.125015258789062
    7. '	P' → logprob: -21.625015258789062
    8. '\P' → logprob: -21.750015258789062
    9. '=P' → logprob: -21.750015258789062
    10. '(P' → logprob: -21.875015258789062

Token 623: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011832444579340518
    2. ':
' → logprob: -9.625118255615234
    3. ' :' → logprob: -9.875118255615234
    4. ',' → logprob: -15.125118255615234
    5. ':

' → logprob: -15.875118255615234
    6. '.' → logprob: -16.625118255615234
    7. '):' → logprob: -16.625118255615234
    8. ' :
' → logprob: -16.875118255615234
    9. '=' → logprob: -17.125118255615234
    10. ':**' → logprob: -17.625118255615234

Token 624: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4679654538631439
    2. '   ' → logprob: -1.2179654836654663
    3. ' dp' → logprob: -2.7179653644561768
    4. ' for' → logprob: -5.217965602874756
    5. '	dp' → logprob: -6.467965602874756
    6. 'for' → logprob: -6.842965602874756
    7. '    
' → logprob: -6.842965602874756
    8. ':' → logprob: -7.342965602874756
    9. '#' → logprob: -7.467965602874756
    10. '```' → logprob: -7.967965602874756

Token 625: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.08246228098869324
    2. 'nd' → logprob: -3.3324623107910156
    3. 'dp' → logprob: -3.5824623107910156
    4. 'next' → logprob: -4.582462310791016
    5. 'tmp' → logprob: -6.457462310791016
    6. '#' (adapté à ' #') → logprob: -6.582462310791016
    7. 'for' → logprob: -7.207462310791016
    8. '...' → logprob: -7.332462310791016
    9. 'temp' → logprob: -7.582462310791016
    10. ' new' → logprob: -8.207462310791016

Token 626: ' Ét' (ID: 54156)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.10538256913423538
    2. 'nd' → logprob: -2.9803826808929443
    3. 'next' → logprob: -3.3553826808929443
    4. 'dp' → logprob: -4.730382442474365
    5. '#' → logprob: -5.730382442474365
    6. 'tmp' → logprob: -6.980382442474365
    7. 'for' → logprob: -7.230382442474365
    8. 'temp' → logprob: -8.480382919311523
    9. '...' → logprob: -8.605382919311523
    10. 'pass' → logprob: -9.730382919311523

Token 627: 'ape' (ID: 2480)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.019957199692726135
    2. 'ape' → logprob: -4.769957065582275
    3. 'endre' → logprob: -5.769957065582275
    4. 'ats' → logprob: -5.769957065582275
    5. '#' → logprob: -6.394957065582275
    6. 'end' → logprob: -6.894957065582275
    7. 'ant' → logprob: -7.644957065582275
    8. 'u' → logprob: -8.269957542419434
    9. 'ap' → logprob: -8.894957542419434
    10. 'endue' → logprob: -8.894957542419434

Token 628: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7863417267799377
    2. ' =' → logprob: -1.786341667175293
    3. '   ' → logprob: -2.661341667175293
    4. '=' → logprob: -2.661341667175293
    5. 'for' → logprob: -2.786341667175293
    6. ':' → logprob: -3.161341667175293
    7. ' for' → logprob: -3.661341667175293
    8. 'es' → logprob: -3.911341667175293
    9. '[]' → logprob: -4.536341667175293
    10. '[' → logprob: -4.536341667175293

Token 629: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5834209322929382
    2. 'dp' → logprob: -1.958420991897583
    3. '#' → logprob: -2.833420991897583
    4. 'tmp' → logprob: -2.958420991897583
    5. 'temp' → logprob: -3.083420991897583
    6. 'cost' → logprob: -3.208420991897583
    7. 'for' → logprob: -3.708420991897583
    8. 'prev' → logprob: -3.708420991897583
    9. ' =' → logprob: -4.083420753479004
    10. 's' → logprob: -4.833420753479004

Token 630: ' :' (ID: 712)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7487028241157532
    2. '   ' → logprob: -1.4987027645111084
    3. ' dp' → logprob: -2.6237027645111084
    4. 'new' → logprob: -2.7487027645111084
    5. ' new' → logprob: -2.9987027645111084
    6. 'temp' → logprob: -3.7487027645111084
    7. 'tmp' → logprob: -3.8737027645111084
    8. ' for' → logprob: -4.6237030029296875
    9. 'for' → logprob: -4.8737030029296875
    10. '    ' → logprob: -5.1237030029296875

Token 631: ' On' (ID: 2160)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.22402217984199524
    2. 'dp' → logprob: -2.099022150039673
    3. 'nd' → logprob: -3.724022150039673
    4. ' new' → logprob: -3.974022150039673
    5. 'next' → logprob: -4.224022388458252
    6. '#' → logprob: -5.474022388458252
    7. 'for' → logprob: -5.474022388458252
    8. 'temp' → logprob: -5.599022388458252
    9. 'tmp' → logprob: -5.724022388458252
    10. 'cost' → logprob: -6.849022388458252

Token 632: ' souhaite' (ID: 68897)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.8953282237052917
    2. 'temp' → logprob: -2.0203282833099365
    3. 'tmp' → logprob: -2.3953282833099365
    4. '=' → logprob: -2.7703282833099365
    5. 'prev' → logprob: -3.0203282833099365
    6. 'dp' → logprob: -3.0203282833099365
    7. 'n' → logprob: -3.1453282833099365
    8. 'for' → logprob: -3.6453282833099365
    9. 'next' → logprob: -4.020328044891357
    10. ' =' → logprob: -4.020328044891357

Token 633: ' "' (ID: 392)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.9715355038642883
    2. 'dp' → logprob: -1.5965354442596436
    3. 'tmp' → logprob: -2.0965354442596436
    4. 'new' → logprob: -2.2215354442596436
    5. '   ' → logprob: -2.9715354442596436
    6. 'prev' → logprob: -3.3465354442596436
    7. 'cost' → logprob: -3.9715354442596436
    8. 'for' → logprob: -4.096535682678223
    9. 'update' → logprob: -4.221535682678223
    10. ' new' → logprob: -4.846535682678223

Token 634: 'placer' (ID: 58807)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22584518790245056
    2. 'tmp' → logprob: -2.7258450984954834
    3. 'temp' → logprob: -3.1008450984954834
    4. 'new' → logprob: -3.8508450984954834
    5. 'update' → logprob: -4.1008453369140625
    6. 'nd' → logprob: -4.4758453369140625
    7. 'for' → logprob: -4.7258453369140625
    8. 'prev' → logprob: -4.9758453369140625
    9. 'shift' → logprob: -5.1008453369140625
    10. 'cost' → logprob: -5.1008453369140625

Token 635: '"' (ID: 1)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -1.0409445762634277
    2. ' p' → logprob: -2.0409445762634277
    3. 'dp' → logprob: -2.0409445762634277
    4. '"' → logprob: -2.1659445762634277
    5. ' dp' → logprob: -2.1659445762634277
    6. ' ' → logprob: -3.5409445762634277
    7. ' =' → logprob: -4.040944576263428
    8. '[]' → logprob: -4.290944576263428
    9. 'p' → logprob: -4.290944576263428
    10. ' un' → logprob: -4.540944576263428

Token 636: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6648056507110596
    2. ' =' → logprob: -1.9148056507110596
    3. 'p' → logprob: -2.4148056507110596
    4. '=' → logprob: -2.6648056507110596
    5. ' p' → logprob: -3.1648056507110596
    6. ' dp' → logprob: -3.6648056507110596
    7. 'for' → logprob: -3.7898056507110596
    8. '   ' → logprob: -3.9148056507110596
    9. ' for' → logprob: -4.5398054122924805
    10. 'new' → logprob: -4.6648054122924805

Token 637: ' nombre' (ID: 9733)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.29192906618118286
    2. 'dp' → logprob: -2.041929006576538
    3. 'token' → logprob: -3.166929006576538
    4. ' p' → logprob: -3.416929006576538
    5. '=' → logprob: -4.291929244995117
    6. 'for' → logprob: -5.041929244995117
    7. 'cost' → logprob: -5.041929244995117
    8. '#' → logprob: -5.541929244995117
    9. 'minimum' → logprob: -5.666929244995117
    10. ' token' → logprob: -6.291929244995117

Token 638: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6834949851036072
    2. ' ' → logprob: -2.183495044708252
    3. ',' → logprob: -2.433495044708252
    4. ':' → logprob: -2.558495044708252
    5. ' =' → logprob: -3.183495044708252
    6. ' ,' → logprob: -3.683495044708252
    7. '[' → logprob: -4.058495044708252
    8. '  ' → logprob: -4.433495044708252
    9. 'dp' → logprob: -4.433495044708252
    10. '<|end|>' → logprob: -4.433495044708252

Token 639: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0576403141021729
    2. ':' → logprob: -1.1826403141021729
    3. 'dp' → logprob: -1.4326403141021729
    4. ' =' → logprob: -3.307640314102173
    5. ' dp' → logprob: -4.307640075683594
    6. '=' → logprob: -4.557640075683594
    7. ',' → logprob: -4.932640075683594
    8. ' :' → logprob: -4.932640075683594
    9. '
' → logprob: -5.682640075683594
    10. 'for' → logprob: -5.807640075683594

Token 640: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002573163714259863
    2. 'range' → logprob: -6.502573013305664
    3. 'np' → logprob: -7.627573013305664
    4. '...' → logprob: -7.877573013305664
    5. 'p' → logprob: -9.127573013305664
    6. 'la' → logprob: -10.377573013305664
    7. ' dp' → logprob: -10.877573013305664
    8. 'le' → logprob: -11.627573013305664
    9. 'l' → logprob: -12.627573013305664
    10. ' range' → logprob: -12.627573013305664

Token 641: ' sé' (ID: 7462)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09680740535259247
    2. 'range' → logprob: -2.7218074798583984
    3. 'for' → logprob: -3.9718074798583984
    4. 'pl' → logprob: -6.346807479858398
    5. '...' → logprob: -6.471807479858398
    6. 'position' → logprob: -6.721807479858398
    7. '#' → logprob: -7.971807479858398
    8. 'np' → logprob: -8.346807479858398
    9. 'interval' → logprob: -8.471807479858398
    10. 'case' → logprob: -8.596807479858398

Token 642: 'quence' (ID: 6975)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.029998205602169037
    2. ' dp' → logprob: -3.654998302459717
    3. 'range' → logprob: -7.279998302459717
    4. 'p' → logprob: -7.529998302459717
    5. ' range' → logprob: -7.529998302459717
    6. 'for' → logprob: -7.529998302459717
    7. '   ' → logprob: -8.404997825622559
    8. 'np' → logprob: -8.404997825622559
    9. '#' → logprob: -8.904997825622559
    10. 'quence' → logprob: -9.154997825622559

Token 643: ' cour' (ID: 2871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09536413103342056
    2. ',' → logprob: -3.8453640937805176
    3. '<|end|>' → logprob: -3.8453640937805176
    4. ' ' → logprob: -4.470364093780518
    5. '    
' → logprob: -5.220364093780518
    6. '.' → logprob: -5.470364093780518
    7. ':' → logprob: -5.470364093780518
    8. '  ' → logprob: -5.720364093780518
    9. ' for' → logprob: -5.845364093780518
    10. '    ' → logprob: -5.970364093780518

Token 644: 'ante' (ID: 2116)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0833527073264122
    2. 'dp' → logprob: -3.45835280418396
    3. ' dp' → logprob: -4.083352565765381
    4. 'for' → logprob: -4.083352565765381
    5. ' for' → logprob: -4.958352565765381
    6. '	dp' → logprob: -5.958352565765381
    7. '       ' → logprob: -6.583352565765381
    8. 'u' → logprob: -6.708352565765381
    9. '	for' → logprob: -8.708353042602539
    10. 'au' → logprob: -8.708353042602539

Token 645: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6432992219924927
    2. ':' → logprob: -0.8932992219924927
    3. '<|end|>' → logprob: -4.268299102783203
    4. '.' → logprob: -4.893299102783203
    5. ' ' → logprob: -5.143299102783203
    6. '    ' → logprob: -5.268299102783203
    7. 'dp' → logprob: -5.268299102783203
    8. ' :' → logprob: -5.518299102783203
    9. ',' → logprob: -5.518299102783203
    10. ' for' → logprob: -5.893299102783203

Token 646: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6390894651412964
    2. '   ' → logprob: -1.2640894651412964
    3. ' dp' → logprob: -2.139089584350586
    4. ' for' → logprob: -3.764089584350586
    5. ' new' → logprob: -4.014089584350586
    6. 'new' → logprob: -4.639089584350586
    7. 'for' → logprob: -4.764089584350586
    8. 'temp' → logprob: -6.389089584350586
    9. ' next' → logprob: -6.389089584350586
    10. '    ' → logprob: -6.639089584350586

Token 647: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.9838745594024658
    2. ' new' → logprob: -1.3588745594024658
    3. 'dp' → logprob: -1.3588745594024658
    4. 'for' → logprob: -3.108874559402466
    5. ' dp' → logprob: -3.858874559402466
    6. ' for' → logprob: -4.483874320983887
    7. 'next' → logprob: -4.858874320983887
    8. 'nd' → logprob: -5.108874320983887
    9. '   ' → logprob: -5.233874320983887
    10. '#' (adapté à ' #') → logprob: -5.858874320983887

Token 648: ' Pour' (ID: 13931)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.34348154067993164
    2. 'dp' → logprob: -2.2184815406799316
    3. ' new' → logprob: -2.4684815406799316
    4. 'nd' → logprob: -2.9684815406799316
    5. 'next' → logprob: -3.5934815406799316
    6. ' nd' → logprob: -5.218481540679932
    7. ' next' → logprob: -5.718481540679932
    8. ' dp' → logprob: -5.843481540679932
    9. 'tmp' → logprob: -6.093481540679932
    10. 'for' → logprob: -6.218481540679932

Token 649: ' cela' (ID: 17542)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.43351930379867554
    2. 'j' → logprob: -1.3085193634033203
    3. ' i' → logprob: -2.8085193634033203
    4. ' j' → logprob: -4.05851936340332
    5. 'cost' → logprob: -6.55851936340332
    6. 'p' → logprob: -7.43351936340332
    7. '_j' → logprob: -7.68351936340332
    8. '_' → logprob: -8.43351936340332
    9. '_i' → logprob: -8.55851936340332
    10. ' cost' → logprob: -8.93351936340332

Token 650: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07950983941555023
    2. '   ' → logprob: -2.954509735107422
    3. ' :' → logprob: -4.079509735107422
    4. ',' → logprob: -5.579509735107422
    5. ':
' → logprob: -6.954509735107422
    6. '    ' → logprob: -7.329509735107422
    7. '    
' → logprob: -7.579509735107422
    8. 'dp' → logprob: -8.454509735107422
    9. '[' → logprob: -8.579509735107422
    10. ' dp' → logprob: -8.954509735107422

Token 651: ' on' (ID: 402)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.8045634031295776
    2. 'new' → logprob: -1.1795634031295776
    3. 'dp' → logprob: -1.9295634031295776
    4. ' dp' → logprob: -3.304563522338867
    5. 'for' → logprob: -3.804563522338867
    6. 'nd' → logprob: -4.179563522338867
    7. 'next' → logprob: -5.304563522338867
    8. ' for' → logprob: -5.304563522338867
    9. ' nd' → logprob: -5.429563522338867
    10. ' next' → logprob: -5.804563522338867

Token 652: ' cherche' (ID: 52345)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7398133873939514
    2. ' dp' → logprob: -2.4898133277893066
    3. 'temp' → logprob: -2.6148133277893066
    4. 'for' → logprob: -2.6148133277893066
    5. 'tmp' → logprob: -2.6148133277893066
    6. 'new' → logprob: -2.9898133277893066
    7. '=' → logprob: -3.1148133277893066
    8. ' new' → logprob: -3.6148133277893066
    9. 'prev' → logprob: -4.114813327789307
    10. ' for' → logprob: -4.239813327789307

Token 653: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2931569814682007
    2. '<|end|>' → logprob: -2.9181571006774902
    3. '=' → logprob: -3.2931571006774902
    4. ' dp' → logprob: -3.5431571006774902
    5. ')' → logprob: -4.16815710067749
    6. 's' → logprob: -4.54315710067749
    7. 'for' → logprob: -4.66815710067749
    8. ' =' → logprob: -4.79315710067749
    9. 't' → logprob: -5.04315710067749
    10. 'i' → logprob: -5.16815710067749

Token 654: ' coût' (ID: 73109)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9188303351402283
    2. 'next' → logprob: -1.668830394744873
    3. 'dp' → logprob: -2.043830394744873
    4. 'new' → logprob: -2.293830394744873
    5. 'minimum' → logprob: -2.793830394744873
    6. 'tmp' → logprob: -3.418830394744873
    7. 'best' → logprob: -4.043830394744873
    8. 'for' → logprob: -4.168830394744873
    9. 'temp' → logprob: -4.918830394744873
    10. '_min' → logprob: -5.043830394744873

Token 655: ' minimal' (ID: 19957)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5585196018218994
    2. ' =' → logprob: -0.9335196018218994
    3. 's' → logprob: -3.8085196018218994
    4. 'min' → logprob: -6.55851936340332
    5. '_min' → logprob: -6.80851936340332
    6. 'minimum' → logprob: -7.30851936340332
    7. ' +=' → logprob: -7.43351936340332
    8. '.' → logprob: -7.55851936340332
    9. '+=' → logprob: -7.55851936340332
    10. 'new' → logprob: -7.68351936340332

Token 656: ' possible' (ID: 4149)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.626021683216095
    2. 'dp' → logprob: -1.7510216236114502
    3. '=' → logprob: -2.25102162361145
    4. 'for' → logprob: -2.37602162361145
    5. ' for' → logprob: -3.50102162361145
    6. '   ' → logprob: -4.126021862030029
    7. ' dp' → logprob: -4.376021862030029
    8. 'new' → logprob: -5.001021862030029
    9. 'temp' → logprob: -5.126021862030029
    10. 'min' → logprob: -5.126021862030029

Token 657: ' parmi' (ID: 51713)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3259453773498535
    2. ' =' → logprob: -2.3259453773498535
    3. ' dp' → logprob: -2.5759453773498535
    4. '   ' → logprob: -3.2009453773498535
    5. '=' → logprob: -3.8259453773498535
    6. 'for' → logprob: -3.8259453773498535
    7. ' for' → logprob: -5.0759453773498535
    8. 'min' → logprob: -6.4509453773498535
    9. ',' → logprob: -6.7009453773498535
    10. '.' → logprob: -6.8259453773498535

Token 658: ' toutes' (ID: 17502)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06818393617868423
    2. ' dp' → logprob: -3.0681838989257812
    3. '[' → logprob: -4.693183898925781
    4. '[
' → logprob: -4.818183898925781
    5. ' [' → logprob: -6.943183898925781
    6. '(dp' → logprob: -8.068183898925781
    7. 'np' → logprob: -8.318183898925781
    8. ' [
' → logprob: -8.943183898925781
    9. '[p' → logprob: -9.318183898925781
    10. ' (' → logprob: -9.943183898925781

Token 659: ' les' (ID: 1341)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09341790527105331
    2. ' dp' → logprob: -2.8434178829193115
    3. '(dp' → logprob: -4.343418121337891
    4. 'positions' → logprob: -4.968418121337891
    5. 'indices' → logprob: -6.093418121337891
    6. 'possible' → logprob: -6.593418121337891
    7. 'poss' → logprob: -6.593418121337891
    8. '_dp' → logprob: -6.968418121337891
    9. '   ' → logprob: -7.093418121337891
    10. 'for' → logprob: -7.468418121337891

Token 660: ' positions' (ID: 15897)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.013332811184227467
    2. 'poss' → logprob: -5.638332843780518
    3. 'positions' → logprob: -5.763332843780518
    4. ' dp' → logprob: -6.013332843780518
    5. 'possible' → logprob: -6.263332843780518
    6. 'prev' → logprob: -7.513332843780518
    7. 'current' → logprob: -8.01333236694336
    8. 'indices' → logprob: -8.38833236694336
    9. 'previous' → logprob: -8.76333236694336
    10. 'states' → logprob: -9.13833236694336

Token 661: ' précéd' (ID: 55435)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8621842265129089
    2. '   ' → logprob: -1.3621842861175537
    3. ' dp' → logprob: -1.3621842861175537
    4. ' possible' → logprob: -4.237184047698975
    5. 'possible' → logprob: -4.612184047698975
    6. ' for' → logprob: -4.987184047698975
    7. ' =' → logprob: -5.112184047698975
    8. ' possibles' → logprob: -5.487184047698975
    9. 'for' → logprob: -5.612184047698975
    10. ',' → logprob: -5.612184047698975

Token 662: 'entes' (ID: 5651)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12314727902412415
    2. ' dp' → logprob: -2.9981472492218018
    3. '   ' → logprob: -3.2481472492218018
    4. ':' → logprob: -4.748147487640381
    5. '=' → logprob: -4.748147487640381
    6. '_dp' → logprob: -6.498147487640381
    7. ' =' → logprob: -6.623147487640381
    8. '_' → logprob: -6.873147487640381
    9. ',' → logprob: -7.123147487640381
    10. '[:]' → logprob: -7.248147487640381

Token 663: ' possibles' (ID: 97753)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9719357490539551
    2. '   ' → logprob: -1.471935749053955
    3. ' dp' → logprob: -1.846935749053955
    4. ' for' → logprob: -2.096935749053955
    5. 'for' → logprob: -2.846935749053955
    6. ',' → logprob: -4.221935749053955
    7. ':' → logprob: -4.471935749053955
    8. '.' → logprob: -5.346935749053955
    9. '  
' → logprob: -5.971935749053955
    10. '	dp' → logprob: -6.221935749053955

Token 664: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7419134378433228
    2. ' for' → logprob: -1.9919134378433228
    3. '   ' → logprob: -2.241913318634033
    4. ' dp' → logprob: -2.366913318634033
    5. ' =' → logprob: -2.616913318634033
    6. 'for' → logprob: -2.991913318634033
    7. 'min' → logprob: -4.366913318634033
    8. ':' → logprob: -4.616913318634033
    9. ',' → logprob: -4.741913318634033
    10. '=' → logprob: -5.116913318634033

Token 665: ' soit' (ID: 17293)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5314326882362366
    2. ' dp' → logprob: -0.9064326882362366
    3. ' for' → logprob: -5.781432628631592
    4. '   ' → logprob: -6.156432628631592
    5. 'for' → logprob: -7.156432628631592
    6. '	dp' → logprob: -7.281432628631592
    7. '    ' → logprob: -7.656432628631592
    8. ' ' → logprob: -8.15643310546875
    9. ' 
' → logprob: -8.53143310546875
    10. '(dp' → logprob: -9.40643310546875

Token 666: ' jusqu' (ID: 21961)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5029788613319397
    2. ' dp' → logprob: -1.502978801727295
    3. 'min' → logprob: -2.877978801727295
    4. '   ' → logprob: -3.252978801727295
    5. ' min' → logprob: -3.877978801727295
    6. 'for' → logprob: -4.377978801727295
    7. 'prev' → logprob: -5.002978801727295
    8. ' for' → logprob: -5.002978801727295
    9. 'np' → logprob: -5.252978801727295
    10. ' new' → logprob: -5.627978801727295

Token 667: ''à' (ID: 33688)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8718596696853638
    2. '+' → logprob: -2.371859550476074
    3. ' à' → logprob: -2.371859550476074
    4. 'à' → logprob: -2.621859550476074
    5. 'dp' → logprob: -2.746859550476074
    6. '   ' → logprob: -2.871859550476074
    7. ''à' → logprob: -2.996859550476074
    8. 'au' → logprob: -3.246859550476074
    9. 'a' → logprob: -3.621859550476074
    10. '_' → logprob: -4.496859550476074

Token 668: ' l' (ID: 305)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.21159416437149048
    2. 'p' → logprob: -1.7115941047668457
    3. 'dp' → logprob: -5.211594104766846
    4. ' N' → logprob: -6.586594104766846
    5. ' p' → logprob: -6.836594104766846
    6. 'i' → logprob: -7.461594104766846
    7. 'np' → logprob: -7.836594104766846
    8. 'len' → logprob: -8.461594581604004
    9. ')' → logprob: -8.961594581604004
    10. ']' → logprob: -9.086594581604004

Token 669: ''ind' (ID: 82245)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3235511779785156
    2. 'p' → logprob: -1.9485511779785156
    3. 'i' → logprob: -2.6985511779785156
    4. ' N' → logprob: -3.0735511779785156
    5. ' p' → logprob: -4.198551177978516
    6. ' i' → logprob: -5.948551177978516
    7. 'np' → logprob: -7.448551177978516
    8. ' ' → logprob: -7.948551177978516
    9. 'min' → logprob: -8.073551177978516
    10. 'n' → logprob: -8.448551177978516

Token 670: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.03865251690149307
    2. 'ice' → logprob: -3.4136524200439453
    3. 'i' → logprob: -5.913652420043945
    4. 'e' → logprob: -6.413652420043945
    5. 'é' → logprob: -8.913652420043945
    6. '=' → logprob: -8.913652420043945
    7. 'x' → logprob: -10.163652420043945
    8. 'ices' → logprob: -10.538652420043945
    9. 'N' → logprob: -10.913652420043945
    10. 'p' → logprob: -11.163652420043945

Token 671: ' p' (ID: 275)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0306973457336426
    2. ' N' → logprob: -1.5306973457336426
    3. '0' → logprob: -1.7806973457336426
    4. 'p' → logprob: -2.6556973457336426
    5. ' p' → logprob: -3.1556973457336426
    6. 'dp' → logprob: -3.4056973457336426
    7. ' =' → logprob: -4.155697345733643
    8. ' ' → logprob: -4.405697345733643
    9. '=' → logprob: -4.530697345733643
    10. ' i' → logprob: -4.780697345733643

Token 672: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7424671053886414
    2. '+' → logprob: -1.6174671649932861
    3. '   ' → logprob: -2.617467164993286
    4. '[:' → logprob: -2.742467164993286
    5. ' +' → logprob: -2.992467164993286
    6. '[' → logprob: -3.492467164993286
    7. ']' → logprob: -4.117466926574707
    8. 'dp' → logprob: -4.117466926574707
    9. ',' → logprob: -4.242466926574707
    10. ' :' → logprob: -4.367466926574707

Token 673: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.32462555170059204
    2. ')' → logprob: -2.5746254920959473
    3. ' ' → logprob: -2.5746254920959473
    4. 'p' → logprob: -3.1996254920959473
    5. '+' → logprob: -4.074625492095947
    6. ' )' → logprob: -4.074625492095947
    7. '   ' → logprob: -4.449625492095947
    8. ' +' → logprob: -4.574625492095947
    9. ' p' → logprob: -4.699625492095947
    10. ' -' → logprob: -5.449625492095947

Token 674: ' inclus' (ID: 11891)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22790133953094482
    2. ',' → logprob: -2.7279014587402344
    3. ']' → logprob: -2.9779014587402344
    4. '[' → logprob: -4.102901458740234
    5. ')' → logprob: -4.102901458740234
    6. 'dp' → logprob: -4.102901458740234
    7. '+' → logprob: -4.852901458740234
    8. ' +' → logprob: -5.352901458740234
    9. '[:]' → logprob: -5.352901458740234
    10. '.' → logprob: -5.352901458740234

Token 675: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029510468244552612
    2. ',' → logprob: -4.904510498046875
    3. '.' → logprob: -5.654510498046875
    4. ')' → logprob: -5.779510498046875
    5. '[' → logprob: -5.779510498046875
    6. ']' → logprob: -5.904510498046875
    7. '    ' → logprob: -6.029510498046875
    8. 'dp' → logprob: -6.279510498046875
    9. '<|end|>' → logprob: -6.904510498046875
    10. '[:]' → logprob: -7.154510498046875

Token 676: ' '' (ID: 461)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.526299774646759
    2. '   ' → logprob: -1.4012997150421143
    3. ' min' → logprob: -3.0262997150421143
    4. 'dp' → logprob: -3.0262997150421143
    5. 'idx' → logprob: -4.651299953460693
    6. ' for' → logprob: -4.651299953460693
    7. 'for' → logprob: -5.276299953460693
    8. ' dp' → logprob: -5.401299953460693
    9. 'possible' → logprob: -5.401299953460693
    10. 'cost' → logprob: -5.776299953460693

Token 677: 'dp' (ID: 19037)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.646182119846344
    2. 'dp' → logprob: -1.0211820602416992
    3. 'best' → logprob: -3.021182060241699
    4. 'cost' → logprob: -3.396182060241699
    5. 'new' → logprob: -5.021182060241699
    6. 'possible' → logprob: -5.396182060241699
    7. 'prev' → logprob: -5.646182060241699
    8. ' min' → logprob: -5.896182060241699
    9. ' dp' → logprob: -6.271182060241699
    10. 'mask' → logprob: -6.396182060241699

Token 678: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.3504753112792969
    2. '_min' → logprob: -1.6004753112792969
    3. '[p' → logprob: -3.100475311279297
    4. '[' → logprob: -4.225475311279297
    5. '[np' → logprob: -4.600475311279297
    6. 'min' → logprob: -5.225475311279297
    7. '[min' → logprob: -5.475475311279297
    8. '_new' → logprob: -5.475475311279297
    9. '_slice' → logprob: -6.475475311279297
    10. '[:]' → logprob: -6.725475311279297

Token 679: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004081247374415398
    2. ' p' → logprob: -5.5040812492370605
    3. '(p' → logprob: -13.254080772399902
    4. ' (' → logprob: -15.004080772399902
    5. '(' → logprob: -15.379080772399902
    6. '   ' → logprob: -16.00408172607422
    7. ' ' → logprob: -16.25408172607422
    8. ',' → logprob: -16.37908172607422
    9. ',p' → logprob: -17.00408172607422
    10. '_p' → logprob: -17.25408172607422

Token 680: ']'' (ID: 75642)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '].' → logprob: -0.11903395503759384
    2. ']' → logprob: -2.2440340518951416
    3. '])' → logprob: -5.6190338134765625
    4. ']).' → logprob: -6.6190338134765625
    5. ' ].' → logprob: -7.7440338134765625
    6. '.min' → logprob: -8.494033813476562
    7. ']+' → logprob: -9.244033813476562
    8. '][:' → logprob: -9.369033813476562
    9. 'min' → logprob: -9.744033813476562
    10. '],' → logprob: -9.869033813476562

Token 681: ' va' (ID: 3423)
  Prédit: '.min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.min' → logprob: -0.7005736827850342
    2. ')' → logprob: -1.4505736827850342
    3. 'min' → logprob: -1.7005736827850342
    4. ').' → logprob: -3.575573682785034
    5. '_min' → logprob: -3.825573682785034
    6. ' =' → logprob: -5.075573921203613
    7. '.' → logprob: -5.075573921203613
    8. ',' → logprob: -5.450573921203613
    9. '),' → logprob: -5.950573921203613
    10. '=' → logprob: -5.950573921203613

Token 682: ' de' (ID: 334)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8360704183578491
    2. 'np' → logprob: -1.3360704183578491
    3. '.' → logprob: -1.9610704183578491
    4. '.min' → logprob: -2.3360705375671387
    5. 'dp' → logprob: -3.9610705375671387
    6. ' np' → logprob: -4.336070537567139
    7. ')' → logprob: -5.086070537567139
    8. ').' → logprob: -5.336070537567139
    9. ' min' → logprob: -5.711070537567139
    10. 'p' → logprob: -5.836070537567139

Token 683: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2734117805957794
    2. 'dp' → logprob: -2.398411750793457
    3. 'p' → logprob: -2.648411750793457
    4. ':' → logprob: -3.773411750793457
    5. ' p' → logprob: -3.898411750793457
    6. ' dp' → logprob: -4.148411750793457
    7. ' ' → logprob: -4.523411750793457
    8. ' :' → logprob: -5.273411750793457
    9. ':p' → logprob: -6.773411750793457
    10. '[:' → logprob: -7.023411750793457

Token 684: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0786922425031662
    2. 'dp' → logprob: -2.8286921977996826
    3. 'p' → logprob: -4.703692436218262
    4. ':' → logprob: -4.953692436218262
    5. ' dp' → logprob: -8.953692436218262
    6. ':p' → logprob: -8.953692436218262
    7. ' ' → logprob: -9.703692436218262
    8. ' :' → logprob: -9.828692436218262
    9. '[:' → logprob: -11.078692436218262
    10. 'start' → logprob: -11.078692436218262

Token 685: ' jusqu' (ID: 21961)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16722191870212555
    2. ':p' → logprob: -1.9172219038009644
    3. ' :' → logprob: -5.417222023010254
    4. ']' → logprob: -7.417222023010254
    5. 'dp' → logprob: -7.542222023010254
    6. ':]' → logprob: -7.917222023010254
    7. ':j' → logprob: -8.167222023010254
    8. '   ' → logprob: -8.417222023010254
    9. ':min' → logprob: -9.042222023010254
    10. ':i' → logprob: -10.167222023010254

Token 686: ''à' (ID: 33688)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.8550475239753723
    2. 'p' → logprob: -1.2300474643707275
    3. ' à' → logprob: -1.7300474643707275
    4. 'à' → logprob: -3.7300474643707275
    5. ':p' → logprob: -3.7300474643707275
    6. '(' → logprob: -3.8550474643707275
    7. ' p' → logprob: -4.480047702789307
    8. ':' → logprob: -4.855047702789307
    9. ' (' → logprob: -5.605047702789307
    10. ' :' → logprob: -5.855047702789307

Token 687: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10020741820335388
    2. ' p' → logprob: -2.3502073287963867
    3. 'dp' → logprob: -15.100207328796387
    4. '[p' → logprob: -15.850207328796387
    5. ' ' → logprob: -16.225208282470703
    6. ' dp' → logprob: -16.225208282470703
    7. '	p' → logprob: -16.600208282470703
    8. '<p' → logprob: -17.350208282470703
    9. '   ' → logprob: -17.412708282470703
    10. 'j' → logprob: -17.662708282470703

Token 688: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00589703768491745
    2. ' ]' → logprob: -6.755897045135498
    3. '][:' → logprob: -6.755897045135498
    4. '   ' → logprob: -7.005897045135498
    5. '-' → logprob: -7.130897045135498
    6. '+' → logprob: -7.630897045135498
    7. ':' → logprob: -7.880897045135498
    8. '[:' → logprob: -8.38089656829834
    9. '].' → logprob: -9.00589656829834
    10. '[' → logprob: -9.50589656829834

Token 689: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.43489304184913635
    2. ']' → logprob: -1.059893012046814
    3. '1' → logprob: -5.5598931312561035
    4. ' ]' → logprob: -7.5598931312561035
    5. ':' → logprob: -7.8098931312561035
    6. ' ' → logprob: -8.059892654418945
    7. ' p' → logprob: -8.184892654418945
    8. ')' → logprob: -8.309892654418945
    9. ':p' → logprob: -9.184892654418945
    10. ' :]' → logprob: -9.184892654418945

Token 690: '.
' (ID: 558)
  Prédit: '.min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.min' → logprob: -0.10116437077522278
    2. ')' → logprob: -2.8511643409729004
    3. '   ' → logprob: -4.7261643409729
    4. '.' → logprob: -5.1011643409729
    5. 'min' → logprob: -5.1011643409729
    6. ').' → logprob: -5.2261643409729
    7. ']' → logprob: -6.2261643409729
    8. 'dp' → logprob: -6.2261643409729
    9. '.max' → logprob: -6.4761643409729
    10. '[min' → logprob: -7.2261643409729

Token 691: '   ' (ID: 271)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5588529706001282
    2. '   ' → logprob: -0.9338529706001282
    3. 'dp' → logprob: -4.9338531494140625
    4. 'minimum' → logprob: -4.9338531494140625
    5. ' min' → logprob: -5.5588531494140625
    6. 'm' → logprob: -5.6838531494140625
    7. 'best' → logprob: -6.1838531494140625
    8. '[min' → logprob: -6.9338531494140625
    9. '_min' → logprob: -7.0588531494140625
    10. '	min' → logprob: -7.1838531494140625

Token 692: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.16363690793514252
    2. 'best' → logprob: -3.0386369228363037
    3. 'cost' → logprob: -3.2886369228363037
    4. '   ' → logprob: -4.038636684417725
    5. 'mn' → logprob: -4.288636684417725
    6. 'm' → logprob: -4.913636684417725
    7. 'cur' → logprob: -5.163636684417725
    8. 'minimum' → logprob: -5.163636684417725
    9. 'dp' → logprob: -5.913636684417725
    10. 'tmp' → logprob: -6.413636684417725

Token 693: ' On' (ID: 2160)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.14912624657154083
    2. 'dp' → logprob: -3.1491262912750244
    3. 'best' → logprob: -3.7741262912750244
    4. 'cost' → logprob: -3.7741262912750244
    5. 'cur' → logprob: -4.399126052856445
    6. 'current' → logprob: -5.149126052856445
    7. 'mn' → logprob: -5.524126052856445
    8. 'minimum' → logprob: -5.524126052856445
    9. 'new' → logprob: -5.649126052856445
    10. 'curr' → logprob: -5.649126052856445

Token 694: ' met' (ID: 1421)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6939201951026917
    2. 'dp' → logprob: -1.3189201354980469
    3. '[' → logprob: -3.193920135498047
    4. 'minimum' → logprob: -3.443920135498047
    5. '[min' → logprob: -3.443920135498047
    6. '[:' → logprob: -4.068920135498047
    7. 'cost' → logprob: -4.193920135498047
    8. ' dp' → logprob: -4.568920135498047
    9. '[:]' → logprob: -4.568920135498047
    10. '_min' → logprob: -4.693920135498047

Token 695: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.10988958179950714
    2. 'à' → logprob: -2.734889507293701
    3. 'dp' → logprob: -3.609889507293701
    4. ' dp' → logprob: -4.484889507293701
    5. '(dp' → logprob: -8.85988998413086
    6. 'À' → logprob: -8.98488998413086
    7. ' =' → logprob: -9.23488998413086
    8. ' ' → logprob: -9.60988998413086
    9. ' ' → logprob: -9.85988998413086
    10. 'a' → logprob: -9.98488998413086

Token 696: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0019494639709591866
    2. ' jour' → logprob: -6.751949310302734
    3. 'dp' → logprob: -7.626949310302734
    4. 'jours' → logprob: -8.751949310302734
    5. 'jou' → logprob: -10.376949310302734
    6. '```' → logprob: -10.501949310302734
    7. 'j' → logprob: -11.126949310302734
    8. 'l' → logprob: -11.251949310302734
    9. 'Jour' → logprob: -11.376949310302734
    10. 'min' → logprob: -11.876949310302734

Token 697: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03941892832517624
    2. ' dp' → logprob: -3.289418935775757
    3. '   ' → logprob: -6.664418697357178
    4. '	dp' → logprob: -9.914419174194336
    5. '(dp' → logprob: -10.914419174194336
    6. 'np' → logprob: -11.039419174194336
    7. 'for' → logprob: -12.664419174194336
    8. '    
' → logprob: -13.289419174194336
    9. '_dp' → logprob: -13.539419174194336
    10. '[' → logprob: -13.664419174194336

Token 698: '[p' (ID: 23234)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.2846870422363281
    2. '[:]' → logprob: -2.034687042236328
    3. '[p' → logprob: -2.784687042236328
    4. ' =' → logprob: -3.659687042236328
    5. '=' → logprob: -3.909687042236328
    6. '[' → logprob: -4.784687042236328
    7. '=p' → logprob: -7.784687042236328
    8. 'p' → logprob: -8.284687042236328
    9. ' [:' → logprob: -8.784687042236328
    10. '[i' → logprob: -8.909687042236328

Token 699: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001691846176981926
    2. ' ]' → logprob: -7.376691818237305
    3. ']+=' → logprob: -7.376691818237305
    4. ']=' → logprob: -8.376691818237305
    5. '-' → logprob: -9.626691818237305
    6. '])' → logprob: -10.126691818237305
    7. '[' → logprob: -10.751691818237305
    8. ']+' → logprob: -10.751691818237305
    9. '[p' → logprob: -10.751691818237305
    10. '],' → logprob: -12.251691818237305

Token 700: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14743705093860626
    2. '=' → logprob: -2.39743709564209
    3. '   ' → logprob: -3.27243709564209
    4. '[min' → logprob: -6.14743709564209
    5. 'dp' → logprob: -6.39743709564209
    6. '[' → logprob: -6.64743709564209
    7. '[p' → logprob: -6.89743709564209
    8. ']' → logprob: -7.52243709564209
    9. '=min' → logprob: -7.77243709564209
    10. '[np' → logprob: -7.77243709564209

Token 701: ' cette' (ID: 7696)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.08672097325325012
    2. ' min' → logprob: -2.9617209434509277
    3. 'np' → logprob: -3.5867209434509277
    4. 'dp' → logprob: -6.086720943450928
    5. ' np' → logprob: -6.711720943450928
    6. ' dp' → logprob: -8.961721420288086
    7. '   ' → logprob: -12.086721420288086
    8. '=min' → logprob: -12.086721420288086
    9. 'max' → logprob: -12.961721420288086
    10. ' ' → logprob: -12.961721420288086

Token 702: ' valeur' (ID: 41664)
  Prédit: '.min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.min' → logprob: -0.21948137879371643
    2. 'min' → logprob: -1.719481348991394
    3. ' min' → logprob: -4.969481468200684
    4. '.' → logprob: -5.594481468200684
    5. ' minimum' → logprob: -6.719481468200684
    6. '[min' → logprob: -6.719481468200684
    7. 'minimum' → logprob: -6.719481468200684
    8. '[np' → logprob: -7.344481468200684
    9. '[' → logprob: -7.594481468200684
    10. ' minimal' → logprob: -7.969481468200684

Token 703: ' minimale' (ID: 143217)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.060836855322122574
    2. '=' → logprob: -3.1858367919921875
    3. 'dp' → logprob: -4.8108367919921875
    4. '   ' → logprob: -5.4358367919921875
    5. '[min' → logprob: -6.4358367919921875
    6. '[' → logprob: -7.1858367919921875
    7. '=min' → logprob: -7.6858367919921875
    8. '[p' → logprob: -7.8108367919921875
    9. ' dp' → logprob: -7.8108367919921875
    10. '[:]' → logprob: -7.8108367919921875

Token 704: ' trouv' (ID: 40254)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1308770328760147
    2. '=' → logprob: -2.5058770179748535
    3. 'dp' → logprob: -4.1308770179748535
    4. '   ' → logprob: -4.3808770179748535
    5. '[min' → logprob: -5.1308770179748535
    6. '=min' → logprob: -6.6308770179748535
    7. ' dp' → logprob: -6.8808770179748535
    8. '[p' → logprob: -6.8808770179748535
    9. '[' → logprob: -7.0058770179748535
    10. '[np' → logprob: -7.3808770179748535

Token 705: 'ée' (ID: 2894)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.616825819015503
    2. 'min' → logprob: -1.616825819015503
    3. 'dp' → logprob: -1.866825819015503
    4. 'e' → logprob: -2.991825819015503
    5. ')' → logprob: -3.116825819015503
    6. ' =' → logprob: -3.241825819015503
    7. '+' → logprob: -3.241825819015503
    8. '[' → logprob: -3.366825819015503
    9. ',' → logprob: -3.491825819015503
    10. ']' → logprob: -3.491825819015503

Token 706: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3086617588996887
    2. '=' → logprob: -2.058661699295044
    3. '   ' → logprob: -2.558661699295044
    4. 'dp' → logprob: -3.433661699295044
    5. '[min' → logprob: -4.683661937713623
    6. 'min' → logprob: -5.308661937713623
    7. '=min' → logprob: -5.558661937713623
    8. ',' → logprob: -5.808661937713623
    9. ' dp' → logprob: -6.308661937713623
    10. '[' → logprob: -7.183661937713623

Token 707: 'c' (ID: 66)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.7617626786231995
    2. 'dp' → logprob: -1.3867626190185547
    3. 'min' → logprob: -2.3867626190185547
    4. ' np' → logprob: -2.5117626190185547
    5. ')' → logprob: -2.8867626190185547
    6. ' dp' → logprob: -4.386762619018555
    7. ' =' → logprob: -4.511762619018555
    8. '   ' → logprob: -5.386762619018555
    9. ',' → logprob: -5.386762619018555
    10. '=np' → logprob: -5.386762619018555

Token 708: ''est' (ID: 6616)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7394418120384216
    2. '[' → logprob: -1.8644418716430664
    3. '[p' → logprob: -2.3644418716430664
    4. ']' → logprob: -2.7394418716430664
    5. '[:' → logprob: -2.7394418716430664
    6. '.' → logprob: -3.1144418716430664
    7. '].' → logprob: -3.8644418716430664
    8. '[min' → logprob: -3.9894418716430664
    9. '.min' → logprob: -4.114441871643066
    10. '[np' → logprob: -4.364441871643066

Token 709: '-à' (ID: 56297)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.7354691624641418
    2. 'np' → logprob: -2.485469102859497
    3. ' min' → logprob: -2.485469102859497
    4. ' dp' → logprob: -2.610469102859497
    5. 'min' → logprob: -2.610469102859497
    6. ')' → logprob: -2.985469102859497
    7. 'dp' → logprob: -3.110469102859497
    8. '[np' → logprob: -4.235469341278076
    9. '[' → logprob: -4.360469341278076
    10. ' )' → logprob: -4.610469341278076

Token 710: '-dire' (ID: 76064)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.05248519405722618
    2. 'np' → logprob: -3.302485227584839
    3. 'dp' → logprob: -5.17748498916626
    4. 'minimum' → logprob: -6.30248498916626
    5. ' min' → logprob: -6.55248498916626
    6. '.min' → logprob: -6.67748498916626
    7. ']' → logprob: -7.30248498916626
    8. ' np' → logprob: -7.30248498916626
    9. 'max' → logprob: -7.80248498916626
    10. 'p' → logprob: -8.052485466003418

Token 711: ',' (ID: 11)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.9566699266433716
    2. 'np' → logprob: -1.5816699266433716
    3. ' min' → logprob: -2.081669807434082
    4. 'min' → logprob: -2.081669807434082
    5. 'dp' → logprob: -2.581669807434082
    6. ' dp' → logprob: -2.706669807434082
    7. '   ' → logprob: -4.456669807434082
    8. ')' → logprob: -5.956669807434082
    9. ' ' → logprob: -6.706669807434082
    10. ' )' → logprob: -7.956669807434082

Token 712: ' quel' (ID: 10613)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.9456244111061096
    2. ' dp' → logprob: -1.5706243515014648
    3. 'dp' → logprob: -2.070624351501465
    4. 'np' → logprob: -2.445624351501465
    5. 'min' → logprob: -2.695624351501465
    6. ' min' → logprob: -2.945624351501465
    7. ')' → logprob: -3.070624351501465
    8. ' ' → logprob: -4.570624351501465
    9. ' )' → logprob: -5.820624351501465
    10. '   ' → logprob: -6.320624351501465

Token 713: ' est' (ID: 893)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9236111640930176
    2. '[' → logprob: -1.6736111640930176
    3. ')' → logprob: -2.2986111640930176
    4. 'dp' → logprob: -2.6736111640930176
    5. 'min' → logprob: -3.0486111640930176
    6. '[np' → logprob: -3.1736111640930176
    7. '[min' → logprob: -3.2986111640930176
    8. ' minimum' → logprob: -4.048611164093018
    9. 'minimum' → logprob: -4.048611164093018
    10. ' ]' → logprob: -4.798611164093018

Token 714: ' le' (ID: 505)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.2485600709915161
    2. 'dp' → logprob: -1.3735600709915161
    3. ' min' → logprob: -1.7485600709915161
    4. 'min' → logprob: -1.8735600709915161
    5. ' la' → logprob: -2.7485599517822266
    6. ' np' → logprob: -3.6235599517822266
    7. 'np' → logprob: -3.8735599517822266
    8. 'la' → logprob: -5.373559951782227
    9. '   ' → logprob: -5.623559951782227
    10. ' ' → logprob: -5.873559951782227

Token 715: ' coût' (ID: 73109)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.8591426610946655
    2. ' minimum' → logprob: -1.2341426610946655
    3. 'min' → logprob: -1.7341426610946655
    4. 'minimum' → logprob: -2.859142780303955
    5. ' dp' → logprob: -3.859142780303955
    6. 'dp' → logprob: -4.484142780303955
    7. ' minimal' → logprob: -5.109142780303955
    8. ' np' → logprob: -6.109142780303955
    9. 'np' → logprob: -6.234142780303955
    10. ']' → logprob: -6.859142780303955

Token 716: ' minimum' (ID: 11085)
  Prédit: ' minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -1.173291563987732
    2. 'min' → logprob: -1.673291563987732
    3. ' minimal' → logprob: -2.0482916831970215
    4. 'minimum' → logprob: -2.4232916831970215
    5. 'dp' → logprob: -2.9232916831970215
    6. ' =' → logprob: -3.2982916831970215
    7. ' min' → logprob: -3.6732916831970215
    8. '_min' → logprob: -3.7982916831970215
    9. ' minimale' → logprob: -3.9232916831970215
    10. ')' → logprob: -4.1732916831970215

Token 717: ' d' (ID: 272)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9447208642959595
    2. ')' → logprob: -1.5697208642959595
    3. 'dp' → logprob: -1.8197208642959595
    4. '+' → logprob: -2.81972074508667
    5. ' )' → logprob: -3.44472074508667
    6. ' plus' → logprob: -3.56972074508667
    7. ' dp' → logprob: -3.56972074508667
    8. ',' → logprob: -3.81972074508667
    9. 'min' → logprob: -4.31972074508667
    10. ' ,' → logprob: -5.31972074508667

Token 718: ''arr' (ID: 49695)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.7820211052894592
    2. 'dp' → logprob: -1.5320210456848145
    3. 'e' → logprob: -1.7820210456848145
    4. '[:' → logprob: -3.7820210456848145
    5. ''' → logprob: -3.9070210456848145
    6. '[' → logprob: -4.0320210456848145
    7. 'p' → logprob: -4.1570210456848145
    8. '_' → logprob: -4.1570210456848145
    9. '`' → logprob: -5.0320210456848145
    10. 'es' → logprob: -5.1570210456848145

Token 719: 'iver' (ID: 1788)
  Prédit: 'iver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iver' → logprob: -0.17557212710380554
    2. 'ivée' → logprob: -1.925572156906128
    3. 'anger' → logprob: -5.675571918487549
    4. 'dp' → logprob: -5.800571918487549
    5. 'iv' → logprob: -6.175571918487549
    6. '[' → logprob: -6.175571918487549
    7. 'ive' → logprob: -7.175571918487549
    8. '[:' → logprob: -7.175571918487549
    9. 'ival' → logprob: -7.425571918487549
    10. ']' → logprob: -8.300572395324707

Token 720: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.9126909971237183
    2. '[' → logprob: -1.5376909971237183
    3. '[p' → logprob: -2.287691116333008
    4. 'à' → logprob: -2.912691116333008
    5. '[:' → logprob: -2.912691116333008
    6. 'dp' → logprob: -3.037691116333008
    7. '(dp' → logprob: -4.037691116333008
    8. '_' → logprob: -4.162691116333008
    9. '[:]' → logprob: -4.412691116333008
    10. '[min' → logprob: -4.537691116333008

Token 721: ' placer' (ID: 55591)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9460320472717285
    2. ' p' → logprob: -1.3210320472717285
    3. 'dp' → logprob: -1.4460320472717285
    4. ' dp' → logprob: -2.3210320472717285
    5. '[p' → logprob: -5.3210320472717285
    6. ']' → logprob: -7.0710320472717285
    7. 'l' → logprob: -7.4460320472717285
    8. ' ' → logprob: -7.5710320472717285
    9. 'position' → logprob: -7.6960320472717285
    10. ' position' → logprob: -7.8210320472717285

Token 722: ' jusqu' (ID: 21961)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.665498673915863
    2. 'p' → logprob: -1.4154987335205078
    3. '[p' → logprob: -1.7904987335205078
    4. ' dp' → logprob: -3.290498733520508
    5. 'dp' → logprob: -3.415498733520508
    6. ' [' → logprob: -6.290498733520508
    7. ' ' → logprob: -7.040498733520508
    8. ')' → logprob: -7.415498733520508
    9. '[' → logprob: -7.415498733520508
    10. ' )' → logprob: -7.915498733520508

Token 723: ''au' (ID: 63689)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.024597851559519768
    2. 'p' → logprob: -4.024597644805908
    3. '[' → logprob: -6.524597644805908
    4. '   ' → logprob: -6.649597644805908
    5. '_p' → logprob: -6.899597644805908
    6. 'dp' → logprob: -7.399597644805908
    7. '_' → logprob: -7.399597644805908
    8. '(p' → logprob: -8.149598121643066
    9. '_[' → logprob: -8.149598121643066
    10. ' p' → logprob: -8.274598121643066

Token 724: ' point' (ID: 2438)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.023607997223734856
    2. ' p' → logprob: -3.7736079692840576
    3. ']' → logprob: -9.023608207702637
    4. '```' → logprob: -9.898608207702637
    5. ' ]' → logprob: -10.273608207702637
    6. '[p' → logprob: -10.273608207702637
    7. ' ' → logprob: -10.398608207702637
    8. '`' → logprob: -10.648608207702637
    9. '
' → logprob: -11.773608207702637
    10. 'dp' → logprob: -11.898608207702637

Token 725: ' p' (ID: 275)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.010632725432515144
    2. '[' → logprob: -5.135632514953613
    3. ' [' → logprob: -6.135632514953613
    4. 'p' → logprob: -6.510632514953613
    5. ' p' → logprob: -7.510632514953613
    6. '   ' → logprob: -9.010632514953613
    7. ']' → logprob: -10.010632514953613
    8. '[:' → logprob: -10.135632514953613
    9. ' ' → logprob: -10.635632514953613
    10. '(p' → logprob: -10.760632514953613

Token 726: ' sans' (ID: 9828)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8990095257759094
    2. ')' → logprob: -1.2740094661712646
    3. '])' → logprob: -1.2740094661712646
    4. '[:' → logprob: -4.399009704589844
    5. ']+' → logprob: -5.024009704589844
    6. ' )' → logprob: -5.899009704589844
    7. '])+' → logprob: -5.899009704589844
    8. ' ])' → logprob: -6.274009704589844
    9. ')+' → logprob: -6.399009704589844
    10. '   ' → logprob: -6.774009704589844

Token 727: ' rien' (ID: 23082)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -1.1706733703613281
    2. 'modifier' → logprob: -2.045673370361328
    3. 'faire' → logprob: -2.795673370361328
    4. ' dépasser' → logprob: -2.795673370361328
    5. 'mod' → logprob: -3.045673370361328
    6. 'changer' → logprob: -3.170673370361328
    7. 'mettre' → logprob: -3.295673370361328
    8. 'dp' → logprob: -3.420673370361328
    9. 'er' → logprob: -3.670673370361328
    10. 'op' → logprob: -4.045673370361328

Token 728: ' faire' (ID: 8119)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.5083394646644592
    2. 'modifier' → logprob: -2.0083394050598145
    3. 'changer' → logprob: -2.3833394050598145
    4. ' faire' → logprob: -3.1333394050598145
    5. ' modifier' → logprob: -3.2583394050598145
    6. '+' → logprob: -3.8833394050598145
    7. ' changer' → logprob: -4.1333394050598145
    8. 'mettre' → logprob: -4.7583394050598145
    9. ' +' → logprob: -5.0083394050598145
    10. '+=' → logprob: -5.1333394050598145

Token 729: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04655596986413002
    2. ' )' → logprob: -4.296555995941162
    3. ']' → logprob: -4.421555995941162
    4. '])' → logprob: -4.671555995941162
    5. 'dp' → logprob: -5.421555995941162
    6. ')+' → logprob: -5.921555995941162
    7. '   ' → logprob: -7.296555995941162
    8. ')]' → logprob: -7.296555995941162
    9. ')
' → logprob: -8.046555519104004
    10. ' ])' → logprob: -8.296555519104004

Token 730: ' spécial' (ID: 40397)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2154795527458191
    2. 'plus' → logprob: -2.840479612350464
    3. ' dp' → logprob: -2.965479612350464
    4. '+' → logprob: -3.465479612350464
    5. ' plus' → logprob: -4.715479373931885
    6. 'p' → logprob: -4.715479373931885
    7. 'mod' → logprob: -5.090479373931885
    8. 'changer' → logprob: -5.340479373931885
    9. 'modifier' → logprob: -5.590479373931885
    10. '```' → logprob: -5.590479373931885

Token 731: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00687119085341692
    2. ' )' → logprob: -5.506871223449707
    3. ')+' → logprob: -6.756871223449707
    4. '   ' → logprob: -7.506871223449707
    5. ')
' → logprob: -8.381871223449707
    6. '])' → logprob: -8.506871223449707
    7. ']' → logprob: -8.506871223449707
    8. 'dp' → logprob: -8.881871223449707
    9. ').' → logprob: -9.631871223449707
    10. ')]' → logprob: -10.631871223449707

Token 732: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.15913930535316467
    2. ' p' → logprob: -2.534139394760132
    3. ' ce' → logprob: -3.284139394760132
    4. ')' → logprob: -4.659139156341553
    5. 'le' → logprob: -5.409139156341553
    6. 'l' → logprob: -5.784139156341553
    7. 'dp' → logprob: -5.784139156341553
    8. ' le' → logprob: -6.284139156341553
    9. 'cet' → logprob: -6.784139156341553
    10. 'ce' → logprob: -6.909139156341553

Token 733: ').
' (ID: 6294)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.31884026527404785
    2. ']' → logprob: -1.8188402652740479
    3. ')' → logprob: -2.318840265274048
    4. '[p' → logprob: -5.443840026855469
    5. ' ])' → logprob: -6.068840026855469
    6. '[:' → logprob: -6.693840026855469
    7. ')]' → logprob: -6.693840026855469
    8. ']+' → logprob: -6.943840026855469
    9. '])+' → logprob: -7.568840026855469
    10. ' )' → logprob: -7.943840026855469

Token 734: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05099321901798248
    2. ' dp' → logprob: -3.1759932041168213
    3. '   ' → logprob: -5.0509934425354
    4. '
' → logprob: -7.4259934425354
    5. ' =' → logprob: -8.425992965698242
    6. '    
' → logprob: -8.675992965698242
    7. '=' → logprob: -8.925992965698242
    8. 'min' → logprob: -9.175992965698242
    9. '  
' → logprob: -9.675992965698242
    10. '	dp' → logprob: -9.925992965698242

Token 735: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.007931915111839771
    2. ' dp' → logprob: -4.882931709289551
    3. '   ' → logprob: -8.13293170928955
    4. 'min' → logprob: -11.50793170928955
    5. '
' → logprob: -12.00793170928955
    6. '	dp' → logprob: -12.25793170928955
    7. '[' → logprob: -13.13293170928955
    8. '    
' → logprob: -13.13293170928955
    9. '(dp' → logprob: -13.63293170928955
    10. ']' → logprob: -14.00793170928955

Token 736: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0008083211723715067
    2. '[' → logprob: -7.125808238983154
    3. 'p' → logprob: -13.250808715820312
    4. ' [' → logprob: -14.125808715820312
    5. '[np' → logprob: -14.375808715820312
    6. '[
' → logprob: -14.500808715820312
    7. '[P' → logprob: -16.625808715820312
    8. ' p' → logprob: -17.125808715820312
    9. '[:]' → logprob: -17.375808715820312
    10. '[:' → logprob: -17.500808715820312

Token 737: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005906827282160521
    2. ']=' → logprob: -7.500590801239014
    3. ' ]' → logprob: -10.625590324401855
    4. '])' → logprob: -11.750590324401855
    5. '=' → logprob: -13.125590324401855
    6. ')' → logprob: -13.875590324401855
    7. '],' → logprob: -14.125590324401855
    8. '[' → logprob: -14.250590324401855
    9. ')]' → logprob: -15.125590324401855
    10. '].' → logprob: -16.000591278076172

Token 738: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000396826391806826
    2. ' =' → logprob: -8.000396728515625
    3. ']=' → logprob: -10.500396728515625
    4. ']' → logprob: -11.000396728515625
    5. '=min' → logprob: -11.500396728515625
    6. '=np' → logprob: -12.625396728515625
    7. ')=' → logprob: -13.375396728515625
    8. '=

' → logprob: -14.250396728515625
    9. '[' → logprob: -14.625396728515625
    10. '.=' → logprob: -15.125396728515625

Token 739: ' dp' (ID: 21546)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1383749395608902
    2. 'np' → logprob: -2.5133750438690186
    3. 'dp' → logprob: -3.1383750438690186
    4. ' min' → logprob: -5.3883748054504395
    5. ' np' → logprob: -8.513375282287598
    6. ' dp' → logprob: -9.388375282287598
    7. '   ' → logprob: -11.513375282287598
    8. '	min' → logprob: -12.138375282287598
    9. ' ' → logprob: -12.513375282287598
    10. '	dp' → logprob: -13.638375282287598

Token 740: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.019625511020421982
    2. '[p' → logprob: -4.019625663757324
    3. 'p' → logprob: -7.144625663757324
    4. '[np' → logprob: -8.394625663757324
    5. '[' → logprob: -8.519625663757324
    6. '.min' → logprob: -9.394625663757324
    7. '.p' → logprob: -9.394625663757324
    8. '[min' → logprob: -10.644625663757324
    9. '.' → logprob: -11.269625663757324
    10. ' [:' → logprob: -11.394625663757324

Token 741: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.45848218582978e-06
    2. ' p' → logprob: -13.00000286102295
    3. '(p' → logprob: -15.75000286102295
    4. '   ' → logprob: -18.000001907348633
    5. '[p' → logprob: -18.250001907348633
    6. '(' → logprob: -19.750001907348633
    7. ' ' → logprob: -20.125001907348633
    8. '	p' → logprob: -20.125001907348633
    9. '[' → logprob: -20.625001907348633
    10. '<p' → logprob: -20.750001907348633

Token 742: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0003809833142440766
    2. ').' → logprob: -8.750380516052246
    3. ' ].' → logprob: -8.875380516052246
    4. '.min' → logprob: -10.375380516052246
    5. ']' → logprob: -10.750380516052246
    6. ' ' → logprob: -11.000380516052246
    7. 'p' → logprob: -12.500380516052246
    8. '   ' → logprob: -13.000380516052246
    9. ']).' → logprob: -13.250380516052246
    10. '])' → logprob: -14.625380516052246

Token 743: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -4.320199877838604e-07
    2. 'amin' → logprob: -15.375
    3. '.min' → logprob: -16.625
    4. 'arg' → logprob: -17.25
    5. ' min' → logprob: -17.375
    6. '_min' → logprob: -18.125
    7. 'mini' → logprob: -18.875
    8. 'mi' → logprob: -19.0
    9. '	min' → logprob: -19.625
    10. 'minimal' → logprob: -20.125

Token 744: '()' (ID: 416)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4011359214782715
    2. '+' → logprob: -1.1511359214782715
    3. '()' → logprob: -4.6511359214782715
    4. '()+' → logprob: -6.0261359214782715
    5. '   ' → logprob: -6.4011359214782715
    6. ' ' → logprob: -8.02613639831543
    7. 'dp' → logprob: -10.27613639831543
    8. '    ' → logprob: -10.52613639831543
    9. '  ' → logprob: -10.52613639831543
    10. ')' → logprob: -10.65113639831543

Token 745: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4170083999633789
    2. ' +' → logprob: -1.417008399963379
    3. '<|end|>' → logprob: -2.417008399963379
    4. '
' → logprob: -6.167008399963379
    5. ' 
' → logprob: -6.542008399963379
    6. ')' → logprob: -6.667008399963379
    7. ' ' → logprob: -6.792008399963379
    8. '  
' → logprob: -7.167008399963379
    9. '+
' → logprob: -7.292008399963379
    10. '<|end|>' → logprob: -8.042008399963379

Token 746: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 747: ' dp' (ID: 21546)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4576661288738251
    2. 'dp' → logprob: -2.0826661586761475
    3. '<|end|>' → logprob: -2.3326661586761475
    4. ' +' → logprob: -2.8326661586761475
    5. '
' → logprob: -4.207665920257568
    6. '  
' → logprob: -4.457665920257568
    7. 'for' → logprob: -4.457665920257568
    8. ' dp' → logprob: -4.707665920257568
    9. ' ' → logprob: -5.082665920257568
    10. ' 
' → logprob: -5.332665920257568

Token 748: '[:' (ID: 7808)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.023413995280861855
    2. '[' → logprob: -3.773413896560669
    3. '<|end|>' → logprob: -9.52341365814209
    4. '[:]' → logprob: -9.77341365814209
    5. '[
' → logprob: -11.89841365814209
    6. '[np' → logprob: -12.02341365814209
    7. '[:' → logprob: -12.64841365814209
    8. '.' → logprob: -12.64841365814209
    9. ' [' → logprob: -12.64841365814209
    10. '[...]' → logprob: -12.77341365814209

Token 749: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005082906689494848
    2. '(p' → logprob: -5.380083084106445
    3. '[p' → logprob: -8.880083084106445
    4. ')' → logprob: -9.380083084106445
    5. ']' → logprob: -9.505083084106445
    6. '(' → logprob: -10.005083084106445
    7. ' p' → logprob: -10.255083084106445
    8. ' ' → logprob: -10.755083084106445
    9. ' (' → logprob: -10.880083084106445
    10. '[' → logprob: -11.255083084106445

Token 750: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16880618035793304
    2. ')' → logprob: -2.9188060760498047
    3. '+' → logprob: -2.9188060760498047
    4. ' +' → logprob: -3.4188060760498047
    5. ']+' → logprob: -5.793806076049805
    6. '])' → logprob: -5.918806076049805
    7. ' ]' → logprob: -5.918806076049805
    8. '<|end|>' → logprob: -6.168806076049805
    9. '.min' → logprob: -6.793806076049805
    10. '[' → logprob: -6.793806076049805

Token 751: ' extrait' (ID: 194006)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 752: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005735247395932674
    2. 'dp' → logprob: -8.50057315826416
    3. '(' → logprob: -8.87557315826416
    4. '())' → logprob: -9.75057315826416
    5. '().' → logprob: -10.00057315826416
    6. '(dp' → logprob: -10.25057315826416
    7. '(p' → logprob: -10.75057315826416
    8. '()]' → logprob: -10.75057315826416
    9. ')' → logprob: -10.87557315826416
    10. '()
' → logprob: -12.12557315826416

Token 753: ' sous' (ID: 14487)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.6711885929107666
    2. 'dp' → logprob: -1.6711885929107666
    3. ' array' → logprob: -1.9211885929107666
    4. 'p' → logprob: -2.2961885929107666
    5. '[:' → logprob: -3.9211885929107666
    6. 'min' → logprob: -4.7961883544921875
    7. 'slice' → logprob: -5.2961883544921875
    8. ' p' → logprob: -5.6711883544921875
    9. ' dp' → logprob: -5.9211883544921875
    10. 'np' → logprob: -6.2961883544921875

Token 754: '-part' (ID: 41951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5104118585586548
    2. '[p' → logprob: -1.7604118585586548
    3. 'array' → logprob: -2.1354117393493652
    4. '[:' → logprob: -2.3854117393493652
    5. 'p' → logprob: -5.385411739349365
    6. '[:]' → logprob: -5.510411739349365
    7. '(p' → logprob: -6.010411739349365
    8. '(' → logprob: -7.010411739349365
    9. ' array' → logprob: -7.260411739349365
    10. ':p' → logprob: -7.510411739349365

Token 755: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.004188448190689087
    2. 'e' → logprob: -6.879188537597656
    3. 'array' → logprob: -7.004188537597656
    4. 'ée' → logprob: -7.379188537597656
    5. 'ies' → logprob: -7.754188537597656
    6. '[' → logprob: -9.129188537597656
    7. 'é' → logprob: -9.254188537597656
    8. 'rie' → logprob: -9.254188537597656
    9. 'i' → logprob: -9.504188537597656
    10. 'aie' → logprob: -9.504188537597656

Token 756: ' du' (ID: 1462)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13696281611919403
    2. '[:]' → logprob: -3.011962890625
    3. ']' → logprob: -4.136962890625
    4. '<|end|>' → logprob: -4.386962890625
    5. '[]' → logprob: -4.511962890625
    6. '[:' → logprob: -4.511962890625
    7. ')' → logprob: -4.636962890625
    8. 'dp' → logprob: -5.136962890625
    9. '(' → logprob: -5.761962890625
    10. '```' → logprob: -6.261962890625

Token 757: ' tableau' (ID: 67053)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.010585546493530273
    2. ' dp' → logprob: -4.635585784912109
    3. ' tableau' → logprob: -7.510585784912109
    4. 'array' → logprob: -8.76058578491211
    5. ' array' → logprob: -10.13558578491211
    6. 'table' → logprob: -10.26058578491211
    7. '```' → logprob: -11.76058578491211
    8. 'code' → logprob: -12.13558578491211
    9. '[' → logprob: -12.26058578491211
    10. '[]' → logprob: -12.63558578491211

Token 758: ' dp' (ID: 21546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5313007831573486
    2. 'dp' → logprob: -1.4063007831573486
    3. ')' → logprob: -2.7813007831573486
    4. '(dp' → logprob: -3.1563007831573486
    5. ' dp' → logprob: -3.4063007831573486
    6. '[:' → logprob: -5.2813005447387695
    7. '[:]' → logprob: -5.4063005447387695
    8. '<|end|>' → logprob: -5.7813005447387695
    9. '[p' → logprob: -5.9063005447387695
    10. ' )' → logprob: -6.4063005447387695

Token 759: ' jusqu' (ID: 21961)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31528231501579285
    2. '+' → logprob: -1.3152823448181152
    3. ' ' → logprob: -7.440282344818115
    4. '   ' → logprob: -7.815282344818115
    5. '<|end|>' → logprob: -8.190281867980957
    6. '[' → logprob: -8.565281867980957
    7. '  ' → logprob: -9.190281867980957
    8. '[:]' → logprob: -9.440281867980957
    9. ')' → logprob: -9.690281867980957
    10. '
' → logprob: -9.940281867980957

Token 760: ''à' (ID: 33688)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.25636062026023865
    2. '[p' → logprob: -1.631360650062561
    3. '(p' → logprob: -4.1313605308532715
    4. 'à' → logprob: -4.8813605308532715
    5. '[' → logprob: -5.8813605308532715
    6. ''à' → logprob: -6.3813605308532715
    7. '	p' → logprob: -7.8813605308532715
    8. ']' → logprob: -8.13136100769043
    9. ' à' → logprob: -8.13136100769043
    10. ' p' → logprob: -8.13136100769043

Token 761: ' l' (ID: 305)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1797545850276947
    2. ' p' → logprob: -1.804754614830017
    3. ' ' → logprob: -12.804754257202148
    4. '(p' → logprob: -12.804754257202148
    5. '[p' → logprob: -13.804754257202148
    6. ' (' → logprob: -14.054754257202148
    7. ' ' → logprob: -14.429754257202148
    8. 'dp' → logprob: -15.429754257202148
    9. ',' → logprob: -15.554754257202148
    10. '	p' → logprob: -15.804754257202148

Token 762: ''ind' (ID: 82245)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.009664246812462807
    2. '[p' → logprob: -4.759664058685303
    3. ' p' → logprob: -7.384664058685303
    4. '_p' → logprob: -8.759664535522461
    5. ']' → logprob: -10.009664535522461
    6. '[' → logprob: -10.134664535522461
    7. '```' → logprob: -10.634664535522461
    8. '
' → logprob: -10.884664535522461
    9. '(p' → logprob: -11.134664535522461
    10. '`' → logprob: -11.259664535522461

Token 763: 'ice' (ID: 603)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04371125251054764
    2. 'ex' → logprob: -3.2937111854553223
    3. 'ice' → logprob: -5.293711185455322
    4. 'ices' → logprob: -9.04371166229248
    5. 'i' → logprob: -9.29371166229248
    6. 'x' → logprob: -9.66871166229248
    7. '`' → logprob: -9.79371166229248
    8. '[p' → logprob: -9.91871166229248
    9. '```' → logprob: -10.66871166229248
    10. '(p' → logprob: -10.91871166229248

Token 764: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05695688724517822
    2. ' p' → logprob: -2.9319567680358887
    3. '(p' → logprob: -6.431956768035889
    4. ' (' → logprob: -8.181957244873047
    5. '[p' → logprob: -9.181957244873047
    6. '(' → logprob: -10.681957244873047
    7. '[' → logprob: -11.556957244873047
    8. ',' → logprob: -11.931957244873047
    9. '`' → logprob: -12.056957244873047
    10. ' ' → logprob: -12.056957244873047

Token 765: ' (' (ID: 350)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34232407808303833
    2. ' +' → logprob: -2.3423240184783936
    3. '<|end|>' → logprob: -2.3423240184783936
    4. '   ' → logprob: -3.4673240184783936
    5. '  
' → logprob: -3.8423240184783936
    6. ' 
' → logprob: -4.592324256896973
    7. '   
' → logprob: -5.092324256896973
    8. ' ' → logprob: -5.092324256896973
    9. '    
' → logprob: -5.092324256896973
    10. '[' → logprob: -5.592324256896973

Token 766: 'non' (ID: 11741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03573087602853775
    2. ')+' → logprob: -3.9107308387756348
    3. ').' → logprob: -4.285730838775635
    4. 'p' → logprob: -8.035731315612793
    5. '])' → logprob: -8.410731315612793
    6. '+' → logprob: -8.410731315612793
    7. ')p' → logprob: -9.285731315612793
    8. ' )' → logprob: -9.535731315612793
    9. ']' → logprob: -10.160731315612793
    10. ')]' → logprob: -10.285731315612793

Token 767: ' inclus' (ID: 11891)
  Prédit: 'inclusive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inclusive' → logprob: -0.7846044301986694
    2. ' inclus' → logprob: -1.9096044301986694
    3. ' compris' → logprob: -1.9096044301986694
    4. 'p' → logprob: -2.534604549407959
    5. 'incl' → logprob: -2.784604549407959
    6. ')' → logprob: -3.159604549407959
    7. ' p' → logprob: -4.159604549407959
    8. 'included' → logprob: -4.659604549407959
    9. ' inclusive' → logprob: -4.784604549407959
    10. 'exclusive' → logprob: -4.909604549407959

Token 768: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0254097580909729
    2. '])' → logprob: -4.025409698486328
    3. ']' → logprob: -5.025409698486328
    4. ')]' → logprob: -7.775409698486328
    5. ' )' → logprob: -9.150409698486328
    6. ')])' → logprob: -10.650409698486328
    7. ')+' → logprob: -11.025409698486328
    8. '   ' → logprob: -11.150409698486328
    9. ').' → logprob: -11.150409698486328
    10. '[' → logprob: -11.150409698486328

Token 769: ' .' (ID: 887)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 770: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.002228287048637867
    2. 'arg' → logprob: -6.127228260040283
    3. ' min' → logprob: -11.002228736877441
    4. '.min' → logprob: -11.127228736877441
    5. 'astype' → logprob: -13.002228736877441
    6. '-min' → logprob: -13.627228736877441
    7. '	min' → logprob: -13.627228736877441
    8. 'max' → logprob: -13.627228736877441
    9. ' ' → logprob: -13.752228736877441
    10. ' arg' → logprob: -14.127228736877441

Token 771: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.200166469876422e-06
    2. '())' → logprob: -13.625004768371582
    3. '()]' → logprob: -13.750004768371582
    4. '()`' → logprob: -14.375004768371582
    5. '()
' → logprob: -14.500004768371582
    6. '()+' → logprob: -15.250004768371582
    7. '()}' → logprob: -15.375004768371582
    8. '(' → logprob: -15.375004768371582
    9. ' ()' → logprob: -15.750004768371582
    10. '()<' → logprob: -15.750004768371582

Token 772: ' donne' (ID: 30004)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001462107611587271
    2. '()
' → logprob: -9.37514591217041
    3. '())' → logprob: -10.12514591217041
    4. ')' → logprob: -12.00014591217041
    5. ' ()' → logprob: -12.62514591217041
    6. '()

' → logprob: -13.00014591217041
    7. '()]' → logprob: -13.37514591217041
    8. '()+' → logprob: -13.37514591217041
    9. '<|end|>' → logprob: -13.37514591217041
    10. '()<' → logprob: -13.62514591217041

Token 773: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.239292711019516
    2. ' dp' → logprob: -2.614292621612549
    3. ' la' → logprob: -3.364292621612549
    4. '(dp' → logprob: -3.614292621612549
    5. 'le' → logprob: -4.239292621612549
    6. 'min' → logprob: -4.364292621612549
    7. 'la' → logprob: -4.614292621612549
    8. 'the' → logprob: -4.614292621612549
    9. 'l' → logprob: -4.864292621612549
    10. ' the' → logprob: -4.989292621612549

Token 774: ' plus' (ID: 2932)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.16307136416435242
    2. ' minimum' → logprob: -2.163071393966675
    3. 'min' → logprob: -3.413071393966675
    4. ' minimal' → logprob: -6.913071155548096
    5. ' min' → logprob: -7.413071155548096
    6. 'minimal' → logprob: -8.038071632385254
    7. ' minimale' → logprob: -8.413071632385254
    8. '.min' → logprob: -8.663071632385254
    9. 'val' → logprob: -8.913071632385254
    10. '.minimum' → logprob: -10.913071632385254

Token 775: ' petite' (ID: 28119)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.19578668475151062
    2. 'small' → logprob: -2.945786714553833
    3. 'pet' → logprob: -3.070786714553833
    4. ' petit' → logprob: -3.445786714553833
    5. ' small' → logprob: -3.695786714553833
    6. ' minimal' → logprob: -5.570786476135254
    7. ' min' → logprob: -5.820786476135254
    8. ' petite' → logprob: -5.820786476135254
    9. ' faible' → logprob: -5.820786476135254
    10. '小' → logprob: -6.070786476135254

Token 776: ' valeur' (ID: 41664)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013752338709309697
    2. ' ()' → logprob: -6.876375198364258
    3. '()
' → logprob: -8.751375198364258
    4. 'token' → logprob: -9.751375198364258
    5. '(' → logprob: -10.126375198364258
    6. 'value' → logprob: -10.501375198364258
    7. '()

' → logprob: -10.626375198364258
    8. '())' → logprob: -11.876375198364258
    9. '<|end|>' → logprob: -12.251375198364258
    10. ')' → logprob: -12.751375198364258

Token 777: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 778: ' cette' (ID: 7696)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14476926624774933
    2. ' dp' → logprob: -3.0197691917419434
    3. ' cette' → logprob: -3.1447691917419434
    4. ' ce' → logprob: -4.019769191741943
    5. '(dp' → logprob: -5.269769191741943
    6. 'la' → logprob: -5.394769191741943
    7. 'ces' → logprob: -5.644769191741943
    8. 'cet' → logprob: -6.269769191741943
    9. 'ce' → logprob: -6.519769191741943
    10. ' cet' → logprob: -6.519769191741943

Token 779: ' tranche' (ID: 182236)
  Prédit: 'slice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slice' → logprob: -0.5605981349945068
    2. 'part' → logprob: -1.4355981349945068
    3. ' portion' → logprob: -3.185598134994507
    4. 's' → logprob: -3.310598134994507
    5. 'portion' → logprob: -3.435598134994507
    6. ' partie' → logprob: -3.560598134994507
    7. ' slice' → logprob: -4.060598373413086
    8. ' tranche' → logprob: -4.810598373413086
    9. ' part' → logprob: -4.935598373413086
    10. 'segment' → logprob: -6.060598373413086

Token 780: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 781: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6650401949882507
    2. '<|end|>' → logprob: -1.4150402545928955
    3. ' +' → logprob: -2.2900402545928955
    4. ' 
' → logprob: -2.9150402545928955
    5. ' ' → logprob: -4.040040016174316
    6. '   ' → logprob: -4.040040016174316
    7. '
' → logprob: -4.165040016174316
    8. '  
' → logprob: -4.415040016174316
    9. '    
' → logprob: -5.165040016174316
    10. '   
' → logprob: -5.540040016174316

Token 782: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11817510426044464
    2. '<|end|>' → logprob: -2.3681750297546387
    3. 'for' → logprob: -4.743175029754639
    4. '   ' → logprob: -6.368175029754639
    5. ' dp' → logprob: -6.743175029754639
    6. ' ' → logprob: -6.743175029754639
    7. '#' (adapté à ' #') → logprob: -7.118175029754639
    8. '[' → logprob: -7.243175029754639
    9. '```' → logprob: -7.618175029754639
    10. '    ' → logprob: -7.618175029754639

Token 783: ' Ét' (ID: 54156)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03176628798246384
    2. 'for' → logprob: -3.781766176223755
    3. '#' → logprob: -5.656766414642334
    4. '   ' → logprob: -6.531766414642334
    5. 'if' → logprob: -6.906766414642334
    6. ' for' → logprob: -6.906766414642334
    7. ' dp' → logprob: -7.031766414642334
    8. 'cost' → logprob: -8.281765937805176
    9. '```' → logprob: -9.406765937805176
    10. ' #' → logprob: -10.031765937805176

Token 784: 'ape' (ID: 2480)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9721489548683167
    2. '   ' → logprob: -1.0971488952636719
    3. 'p' → logprob: -2.097148895263672
    4. '[' → logprob: -2.722148895263672
    5. 'for' → logprob: -3.347148895263672
    6. 'f' → logprob: -3.472148895263672
    7. '[:]' → logprob: -4.472148895263672
    8. '#' → logprob: -4.972148895263672
    9. 'b' → logprob: -5.722148895263672
    10. ' ' → logprob: -6.722148895263672

Token 785: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1565590500831604
    2. '[p' → logprob: -2.0315589904785156
    3. ' [' → logprob: -5.906558990478516
    4. '```' → logprob: -6.406558990478516
    5. '   ' → logprob: -6.656558990478516
    6. ' p' → logprob: -7.156558990478516
    7. ' B' → logprob: -7.281558990478516
    8. '[:]' → logprob: -7.281558990478516
    9. 'dp' → logprob: -7.406558990478516
    10. 'A' → logprob: -7.406558990478516

Token 786: '2' (ID: 17)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5451558828353882
    2. '1' → logprob: -1.7951558828353882
    3. ' p' → logprob: -1.7951558828353882
    4. '+' → logprob: -1.9201558828353882
    5. 'A' → logprob: -2.9201560020446777
    6. '[' → logprob: -3.1701560020446777
    7. ':' → logprob: -3.4201560020446777
    8. ' A' → logprob: -3.5451560020446777
    9. 'B' → logprob: -3.6701560020446777
    10. ' +=' → logprob: -3.7951560020446777

Token 787: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4031217694282532
    2. 'for' → logprob: -2.0281217098236084
    3. 'dp' → logprob: -3.1531217098236084
    4. '
' → logprob: -3.1531217098236084
    5. '  
' → logprob: -3.6531217098236084
    6. '    
' → logprob: -4.0281219482421875
    7. '[' → logprob: -4.0281219482421875
    8. '   
' → logprob: -4.5281219482421875
    9. ' for' → logprob: -4.7781219482421875
    10. '```' → logprob: -4.7781219482421875

Token 788: ' Cons' (ID: 8160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02674364484846592
    2. 'for' → logprob: -4.276743412017822
    3. 'if' → logprob: -4.526743412017822
    4. '#' → logprob: -7.151743412017822
    5. ' dp' → logprob: -7.651743412017822
    6. '   ' → logprob: -9.15174388885498
    7. ' for' → logprob: -9.40174388885498
    8. ' if' → logprob: -9.90174388885498
    9. '```' → logprob: -10.15174388885498
    10. 'idx' → logprob: -10.27674388885498

Token 789: 'id' (ID: 315)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1519256830215454
    2. 'ider' → logprob: -1.1519256830215454
    3. 'for' → logprob: -1.9019256830215454
    4. '   ' → logprob: -2.901925563812256
    5. 'idé' → logprob: -3.026925563812256
    6. 't' → logprob: -3.401925563812256
    7. 'p' → logprob: -4.276925563812256
    8. 'id' → logprob: -4.401925563812256
    9. 'u' → logprob: -4.401925563812256
    10. 'tru' → logprob: -4.776925563812256

Token 790: 'érer' (ID: 29097)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.69219571352005
    2. 'ider' → logprob: -1.0671956539154053
    3. 'idé' → logprob: -1.9421956539154053
    4. 'er' → logprob: -5.567195892333984
    5. '#' → logprob: -5.692195892333984
    6. 'ide' → logprob: -6.442195892333984
    7. 'idere' → logprob: -7.442195892333984
    8. 'iders' → logprob: -7.817195892333984
    9. 'u' → logprob: -8.067195892333984
    10. 'ids' → logprob: -8.317195892333984

Token 791: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3563287556171417
    2. ' dp' → logprob: -1.3563287258148193
    3. 'for' → logprob: -4.231328964233398
    4. ' for' → logprob: -4.481328964233398
    5. ' p' → logprob: -4.856328964233398
    6. '[' → logprob: -6.231328964233398
    7. 'p' → logprob: -6.356328964233398
    8. '   ' → logprob: -6.981328964233398
    9. ' ' → logprob: -6.981328964233398
    10. ' if' → logprob: -7.356328964233398

Token 792: ' déplacement' (ID: 138449)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4520057439804077
    2. ' dp' → logprob: -2.0770058631896973
    3. 'for' → logprob: -2.4520058631896973
    4. '#' → logprob: -3.3270058631896973
    5. ' for' → logprob: -3.4520058631896973
    6. ' déplacement' → logprob: -4.202005863189697
    7. 'd' → logprob: -4.327005863189697
    8. ' #' → logprob: -4.577005863189697
    9. 'p' → logprob: -4.702005863189697
    10. ' p' → logprob: -4.827005863189697

Token 793: ' vers' (ID: 3640)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.707420289516449
    2. 'dp' → logprob: -1.2074203491210938
    3. '[p' → logprob: -2.9574203491210938
    4. ' à' → logprob: -3.5824203491210938
    5. '[right' → logprob: -4.082420349121094
    6. ' dp' → logprob: -4.082420349121094
    7. 'à' → logprob: -4.207420349121094
    8. 'g' → logprob: -4.332420349121094
    9. '   ' → logprob: -4.707420349121094
    10. '[:]' → logprob: -4.832420349121094

Token 794: ' la' (ID: 557)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005429169628769159
    2. ' p' → logprob: -6.255429267883301
    3. 'right' → logprob: -6.505429267883301
    4. 'left' → logprob: -7.380429267883301
    5. 'the' → logprob: -7.880429267883301
    6. 'la' → logprob: -8.1304292678833
    7. 'dp' → logprob: -9.0054292678833
    8. ' droite' → logprob: -9.6304292678833
    9. '[p' → logprob: -9.7554292678833
    10. 'le' → logprob: -9.7554292678833

Token 795: ' gauche' (ID: 58367)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.8512934446334839
    2. 'p' → logprob: -1.7262934446334839
    3. 'right' → logprob: -2.1012935638427734
    4. 'd' → logprob: -2.7262935638427734
    5. ' droite' → logprob: -2.9762935638427734
    6. ' p' → logprob: -3.4762935638427734
    7. '_' → logprob: -3.7262935638427734
    8. '=' → logprob: -4.101293563842773
    9. 'left' → logprob: -4.601293563842773
    10. '_d' → logprob: -4.726293563842773

Token 796: '.' (ID: 13)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.25449779629707336
    2. 'if' → logprob: -2.504497766494751
    3. ' if' → logprob: -2.629497766494751
    4. '   ' → logprob: -3.754497766494751
    5. ' dp' → logprob: -3.754497766494751
    6. 'for' → logprob: -4.50449800491333
    7. '
' → logprob: -5.25449800491333
    8. ' for' → logprob: -5.62949800491333
    9. '    
' → logprob: -6.62949800491333
    10. '(dp' → logprob: -7.50449800491333

Token 797: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13582108914852142
    2. 'for' → logprob: -2.6358211040496826
    3. 'if' → logprob: -3.1358211040496826
    4. '   ' → logprob: -5.7608208656311035
    5. ' dp' → logprob: -5.8858208656311035
    6. ' for' → logprob: -6.2608208656311035
    7. 'cost' → logprob: -6.5108208656311035
    8. ' if' → logprob: -6.8858208656311035
    9. 'left' → logprob: -7.1358208656311035
    10. 'idx' → logprob: -8.385821342468262

Token 798: ' suppose' (ID: 35968)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5616808533668518
    2. 'if' → logprob: -1.311680793762207
    3. 'for' → logprob: -2.436680793762207
    4. ' dp' → logprob: -3.811680793762207
    5. ' if' → logprob: -4.186680793762207
    6. '[' → logprob: -4.311680793762207
    7. ' for' → logprob: -5.311680793762207
    8. '#' → logprob: -5.311680793762207
    9. '[:' → logprob: -5.811680793762207
    10. 'cost' → logprob: -6.561680793762207

Token 799: ' qu' (ID: 474)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15784594416618347
    2. 'if' → logprob: -2.282845973968506
    3. 'p' → logprob: -3.532845973968506
    4. '   ' → logprob: -4.657845973968506
    5. ' dp' → logprob: -6.157845973968506
    6. ' if' → logprob: -6.657845973968506
    7. ' p' → logprob: -7.157845973968506
    8. 'that' → logprob: -7.782845973968506
    9. '(dp' → logprob: -8.157845497131348
    10. 'np' → logprob: -9.657845497131348

Token 800: ''on' (ID: 25812)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.0827007293701172
    2. ' p' → logprob: -1.5827007293701172
    3. 'dp' → logprob: -1.5827007293701172
    4. 'e' → logprob: -2.082700729370117
    5. 'p' → logprob: -2.707700729370117
    6. '[' → logprob: -4.332700729370117
    7. ''' → logprob: -4.457700729370117
    8. ' if' → logprob: -4.957700729370117
    9. 'a' → logprob: -5.207700729370117
    10. 'if' → logprob: -5.332700729370117

Token 801: ' pousse' (ID: 167099)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5935984253883362
    2. ' dp' → logprob: -0.8435984253883362
    3. '[' → logprob: -5.218598365783691
    4. 'for' → logprob: -5.718598365783691
    5. ' for' → logprob: -5.968598365783691
    6. ' p' → logprob: -6.343598365783691
    7. 'p' → logprob: -6.468598365783691
    8. ' if' → logprob: -7.093598365783691
    9. '[p' → logprob: -7.718598365783691
    10. '	dp' → logprob: -8.093598365783691

Token 802: ' tous' (ID: 10688)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5040791034698486
    2. 'p' → logprob: -1.7540791034698486
    3. ' dp' → logprob: -2.1290791034698486
    4. ' p' → logprob: -2.3790791034698486
    5. '[' → logprob: -5.8790788650512695
    6. '[p' → logprob: -6.2540788650512695
    7. ' ' → logprob: -7.1290788650512695
    8. '(dp' → logprob: -7.5040788650512695
    9. ' le' → logprob: -7.9415788650512695
    10. '#' → logprob: -7.9415788650512695

Token 803: ' les' (ID: 1341)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.587817907333374
    2. ' dp' → logprob: -0.962817907333374
    3. 'p' → logprob: -3.587817907333374
    4. ' p' → logprob: -3.962817907333374
    5. '(dp' → logprob: -5.212818145751953
    6. '[p' → logprob: -6.837818145751953
    7. ' les' → logprob: -7.087818145751953
    8. ' ' → logprob: -7.087818145751953
    9. ' le' → logprob: -7.212818145751953
    10. '(p' → logprob: -7.462818145751953

Token 804: ' éléments' (ID: 57375)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3853856921195984
    2. 'élé' → logprob: -2.010385751724243
    3. ' éléments' → logprob: -2.260385751724243
    4. 'indices' → logprob: -3.385385751724243
    5. 'p' → logprob: -4.510385513305664
    6. ' dp' → logprob: -4.885385513305664
    7. 'elements' → logprob: -5.010385513305664
    8. ' p' → logprob: -5.385385513305664
    9. ' indices' → logprob: -5.385385513305664
    10. ' nombres' → logprob: -6.010385513305664

Token 805: ' à' (ID: 1221)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2890683114528656
    2. ' dp' → logprob: -2.2890682220458984
    3. ' vers' → logprob: -2.6640682220458984
    4. 'p' → logprob: -3.5390682220458984
    5. ' à' → logprob: -4.164068222045898
    6. ' p' → logprob: -4.289068222045898
    7. ' de' → logprob: -5.289068222045898
    8. 'de' → logprob: -5.414068222045898
    9. 'à' → logprob: -5.914068222045898
    10. '[' → logprob: -6.664068222045898

Token 806: ' partir' (ID: 12100)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2660640478134155
    2. 'g' → logprob: -2.266064167022705
    3. 'dp' → logprob: -2.516064167022705
    4. ' gauche' → logprob: -3.891064167022705
    5. ' p' → logprob: -4.141064167022705
    6. 'left' → logprob: -5.141064167022705
    7. 'la' → logprob: -6.516064167022705
    8. 'i' → logprob: -6.766064167022705
    9. 'l' → logprob: -6.891064167022705
    10. ' droite' → logprob: -7.141064167022705

Token 807: ' de' (ID: 334)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.40428426861763
    2. ' p' → logprob: -1.9042842388153076
    3. 'dp' → logprob: -2.5292842388153076
    4. ' de' → logprob: -2.6542842388153076
    5. 'de' → logprob: -4.404284477233887
    6. '[p' → logprob: -4.904284477233887
    7. ' dp' → logprob: -5.154284477233887
    8. ' du' → logprob: -5.404284477233887
    9. '[' → logprob: -6.654284477233887
    10. 'du' → logprob: -7.654284477233887

Token 808: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00834151916205883
    2. ' p' → logprob: -4.883341312408447
    3. 'dp' → logprob: -7.883341312408447
    4. 'l' → logprob: -9.758341789245605
    5. 'i' → logprob: -10.133341789245605
    6. 'min' → logprob: -10.508341789245605
    7. 'max' → logprob: -10.508341789245605
    8. '1' → logprob: -10.633341789245605
    9. 'j' → logprob: -10.883341789245605
    10. '0' → logprob: -11.008341789245605

Token 809: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7448727488517761
    2. '-' → logprob: -1.119872808456421
    3. ':' → logprob: -1.869872808456421
    4. ' +' → logprob: -4.369872570037842
    5. '   ' → logprob: -4.869872570037842
    6. ' -' → logprob: -4.869872570037842
    7. 'p' → logprob: -5.494872570037842
    8. ' ' → logprob: -6.494872570037842
    9. ':]' → logprob: -6.619872570037842
    10. 'dp' → logprob: -6.869872570037842

Token 810: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005911595653742552
    2. ' ' → logprob: -7.625591278076172
    3. 'p' → logprob: -9.500591278076172
    4. '+' → logprob: -11.375591278076172
    5. ' p' → logprob: -11.500591278076172
    6. '```' → logprob: -12.875591278076172
    7. '2' → logprob: -13.750591278076172
    8. ' +' → logprob: -14.500591278076172
    9. '   ' → logprob: -15.375591278076172
    10. '(p' → logprob: -15.375591278076172

Token 811: ' vers' (ID: 3640)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0659799575805664
    2. 'dp' → logprob: -3.3159799575805664
    3. ':]' → logprob: -4.190979957580566
    4. ' :' → logprob: -5.440979957580566
    5. ':].' → logprob: -5.690979957580566
    6. ':p' → logprob: -6.065979957580566
    7. ' dp' → logprob: -7.190979957580566
    8. ' :]' → logprob: -7.690979957580566
    9. '```' → logprob: -8.190979957580566
    10. ']' → logprob: -8.815979957580566

Token 812: ' la' (ID: 557)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.19571368396282196
    2. 'la' → logprob: -1.8207136392593384
    3. 'g' → logprob: -5.070713520050049
    4. 'dp' → logprob: -5.570713520050049
    5. ' la' → logprob: -5.945713520050049
    6. 'l' → logprob: -6.945713520050049
    7. ' p' → logprob: -6.945713520050049
    8. 'left' → logprob: -7.945713520050049
    9. '#' → logprob: -8.445713996887207
    10. 'the' → logprob: -9.320713996887207

Token 813: ' gauche' (ID: 58367)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.15171408653259277
    2. 'right' → logprob: -2.4017140865325928
    3. ' droite' → logprob: -4.026714324951172
    4. ' p' → logprob: -4.776714324951172
    5. '1' → logprob: -4.901714324951172
    6. ' right' → logprob: -5.151714324951172
    7. '```' → logprob: -5.401714324951172
    8. 'dp' → logprob: -6.151714324951172
    9. 'left' → logprob: -6.526714324951172
    10. 'np' → logprob: -8.276714324951172

Token 814: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7524862885475159
    2. '   ' → logprob: -0.8774862885475159
    3. ' if' → logprob: -3.502486228942871
    4. 'if' → logprob: -3.502486228942871
    5. ' dp' → logprob: -3.877486228942871
    6. 'for' → logprob: -4.502486228942871
    7. '
' → logprob: -5.127486228942871
    8. ' for' → logprob: -5.252486228942871
    9. '```' → logprob: -6.127486228942871
    10. '    
' → logprob: -6.252486228942871

Token 815: ' ce' (ID: 2357)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2346644252538681
    2. ' if' → logprob: -2.1096644401550293
    3. 'dp' → logprob: -2.4846644401550293
    4. ' dp' → logprob: -5.734664440155029
    5. 'for' → logprob: -7.359664440155029
    6. '   ' → logprob: -7.734664440155029
    7. ' for' → logprob: -9.234663963317871
    8. '```' → logprob: -10.609663963317871
    9. '
' → logprob: -10.734663963317871
    10. ' ' → logprob: -11.234663963317871

Token 816: ' qui' (ID: 2780)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2103804349899292
    2. 'dp' → logprob: -1.2103804349899292
    3. '[p' → logprob: -2.3353805541992188
    4. '[:]' → logprob: -3.2103805541992188
    5. '```' → logprob: -3.2103805541992188
    6. 'for' → logprob: -3.3353805541992188
    7. ' +=' → logprob: -3.4603805541992188
    8. '+' → logprob: -3.4603805541992188
    9. ' dp' → logprob: -3.7103805541992188
    10. ']' → logprob: -3.9603805541992188

Token 817: ' entraîne' (ID: 155372)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8738062977790833
    2. ' coûte' → logprob: -1.6238062381744385
    3. ' coû' → logprob: -2.1238062381744385
    4. ' dp' → logprob: -2.6238062381744385
    5. ' +=' → logprob: -2.9988062381744385
    6. ' entraîne' → logprob: -3.3738062381744385
    7. ' augmente' → logprob: -3.6238062381744385
    8. 'cost' → logprob: -4.123806476593018
    9. '+=' → logprob: -4.623806476593018
    10. ' provo' → logprob: -4.998806476593018

Token 818: ' un' (ID: 537)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.31626445055007935
    2. ' dp' → logprob: -1.3162643909454346
    3. ' a' → logprob: -7.316264629364014
    4. '(dp' → logprob: -7.441264629364014
    5. ' une' → logprob: -7.691264629364014
    6. ' un' → logprob: -7.941264629364014
    7. ' ' → logprob: -8.566264152526855
    8. '+' → logprob: -9.191264152526855
    9. '#' → logprob: -9.191264152526855
    10. 'a' → logprob: -9.191264152526855

Token 819: ' coût' (ID: 73109)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8119713068008423
    2. 'co' → logprob: -1.0619713068008423
    3. ' coût' → logprob: -3.0619711875915527
    4. 'cost' → logprob: -3.0619711875915527
    5. 'cout' → logprob: -3.0619711875915527
    6. ' dp' → logprob: -3.1869711875915527
    7. '```' → logprob: -5.186971187591553
    8. 'c' → logprob: -5.436971187591553
    9. ' cout' → logprob: -5.561971187591553
    10. ' déplacement' → logprob: -5.936971187591553

Token 820: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14294828474521637
    2. ' +=' → logprob: -2.6429483890533447
    3. '+=' → logprob: -3.0179483890533447
    4. ' dp' → logprob: -5.767948150634766
    5. '=' → logprob: -5.892948150634766
    6. 'for' → logprob: -6.017948150634766
    7. '+' → logprob: -6.517948150634766
    8. ' =' → logprob: -7.142948150634766
    9. 'p' → logprob: -7.267948150634766
    10. 'B' → logprob: -7.517948150634766

Token 821: ' chaque' (ID: 21194)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4784499406814575
    2. 'dp' → logprob: -1.3534499406814575
    3. ' p' → logprob: -2.728449821472168
    4. 'i' → logprob: -4.603449821472168
    5. 'l' → logprob: -4.728449821472168
    6. 'B' → logprob: -5.353449821472168
    7. ' dp' → logprob: -5.353449821472168
    8. 'A' → logprob: -5.478449821472168
    9. ' i' → logprob: -5.853449821472168
    10. 'la' → logprob: -5.853449821472168

Token 822: ' déplacement' (ID: 138449)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.05271577835083
    2. 'p' → logprob: -1.17771577835083
    3. 'i' → logprob: -2.05271577835083
    4. ' p' → logprob: -2.80271577835083
    5. ' i' → logprob: -3.42771577835083
    6. 'position' → logprob: -3.80271577835083
    7. ' dp' → logprob: -4.05271577835083
    8. 'for' → logprob: -4.42771577835083
    9. 'j' → logprob: -4.55271577835083
    10. '```' → logprob: -4.92771577835083

Token 823: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1540479063987732
    2. '   ' → logprob: -3.154047966003418
    3. ' dp' → logprob: -3.404047966003418
    4. ' if' → logprob: -3.779047966003418
    5. ' for' → logprob: -4.154047966003418
    6. 'if' → logprob: -4.404047966003418
    7. 'for' → logprob: -4.529047966003418
    8. '
' → logprob: -6.654047966003418
    9. '```' → logprob: -7.529047966003418
    10. '    
' → logprob: -7.529047966003418

Token 824: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.38386908173561096
    2. ' for' → logprob: -2.383869171142578
    3. ' dp' → logprob: -2.383869171142578
    4. 'for' → logprob: -2.883869171142578
    5. ' if' → logprob: -3.008869171142578
    6. 'if' → logprob: -3.758869171142578
    7. '   ' → logprob: -5.633869171142578
    8. '```' → logprob: -6.758869171142578
    9. 'cost' → logprob: -7.883869171142578
    10. ' cost' → logprob: -8.383869171142578

Token 825: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7913272380828857
    2. 'if' → logprob: -1.0413272380828857
    3. 'for' → logprob: -1.9163272380828857
    4. ' if' → logprob: -4.041327476501465
    5. '   ' → logprob: -4.291327476501465
    6. ' for' → logprob: -4.666327476501465
    7. ' dp' → logprob: -5.541327476501465
    8. 'cost' → logprob: -7.041327476501465
    9. 'left' → logprob: -7.916327476501465
    10. 'idx' → logprob: -8.416327476501465

Token 826: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.34841296076774597
    2. 'for' → logprob: -1.9734129905700684
    3. ' for' → logprob: -2.5984129905700684
    4. ' dp' → logprob: -3.2234129905700684
    5. 'if' → logprob: -3.7234129905700684
    6. ' if' → logprob: -4.348412990570068
    7. 'cost' → logprob: -6.223412990570068
    8. ' cost' → logprob: -7.723412990570068
    9. '```' → logprob: -7.973412990570068
    10. 'left' → logprob: -8.22341251373291

Token 827: ' ajoute' (ID: 91611)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24540279805660248
    2. '[' → logprob: -2.3704028129577637
    3. 'for' → logprob: -3.1204028129577637
    4. 'if' → logprob: -3.2454028129577637
    5. 'p' → logprob: -4.495402812957764
    6. '[min' → logprob: -4.995402812957764
    7. '[p' → logprob: -5.370402812957764
    8. '[max' → logprob: -5.870402812957764
    9. 'max' → logprob: -5.995402812957764
    10. ' dp' → logprob: -6.120402812957764

Token 828: ' le' (ID: 505)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.25695517659187317
    2. ' B' → logprob: -2.381955146789551
    3. 'dp' → logprob: -2.756955146789551
    4. 'A' → logprob: -3.131955146789551
    5. ' A' → logprob: -4.881955146789551
    6. ' dp' → logprob: -5.006955146789551
    7. ' (' → logprob: -5.381955146789551
    8. '(B' → logprob: -5.756955146789551
    9. 'np' → logprob: -6.756955146789551
    10. '(dp' → logprob: -7.131955146789551

Token 829: ' coût' (ID: 73109)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4837607145309448
    2. 'A' → logprob: -1.6087607145309448
    3. ' B' → logprob: -2.8587608337402344
    4. 'dp' → logprob: -3.2337608337402344
    5. '1' → logprob: -3.7337608337402344
    6. ' A' → logprob: -3.8587608337402344
    7. 'np' → logprob: -4.733760833740234
    8. ' (' → logprob: -5.108760833740234
    9. '(A' → logprob: -5.608760833740234
    10. 'p' → logprob: -5.608760833740234

Token 830: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6868011951446533
    2. 'dp' → logprob: -1.6868011951446533
    3. ' B' → logprob: -2.8118011951446533
    4. ' +=' → logprob: -2.9368011951446533
    5. '[' → logprob: -3.0618011951446533
    6. '[B' → logprob: -3.4368011951446533
    7. '[A' → logprob: -3.8118011951446533
    8. 'A' → logprob: -3.8118011951446533
    9. '[p' → logprob: -4.061800956726074
    10. '+=' → logprob: -4.811800956726074

Token 831: ' à' (ID: 1221)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47034183144569397
    2. '*' → logprob: -1.3453418016433716
    3. 'dp' → logprob: -2.345341920852661
    4. ' dp' → logprob: -4.595341682434082
    5. '[' → logprob: -6.470341682434082
    6. '*np' → logprob: -6.845341682434082
    7. '(dp' → logprob: -6.970341682434082
    8. ' ' → logprob: -7.220341682434082
    9. ',' → logprob: -7.345341682434082
    10. '   ' → logprob: -7.595341682434082

Token 832: ' toutes' (ID: 17502)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01841142773628235
    2. ' dp' → logprob: -4.018411636352539
    3. 'p' → logprob: -9.143411636352539
    4. '(dp' → logprob: -10.143411636352539
    5. 'np' → logprob: -10.518411636352539
    6. ' ' → logprob: -10.643411636352539
    7. '	dp' → logprob: -10.893411636352539
    8. '   ' → logprob: -11.268411636352539
    9. 'min' → logprob: -12.143411636352539
    10. ' p' → logprob: -12.268411636352539

Token 833: ' les' (ID: 1341)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09528686851263046
    2. ' dp' → logprob: -2.4702868461608887
    3. 'p' → logprob: -6.470286846160889
    4. '(dp' → logprob: -7.220286846160889
    5. ' p' → logprob: -7.345286846160889
    6. 'positions' → logprob: -7.595286846160889
    7. 'indices' → logprob: -8.220287322998047
    8. ' positions' → logprob: -8.220287322998047
    9. ' ' → logprob: -8.220287322998047
    10. '[' → logprob: -8.345287322998047

Token 834: ' positions' (ID: 15897)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04009187966585159
    2. ' dp' → logprob: -3.2900919914245605
    3. 'p' → logprob: -7.0400919914245605
    4. 'positions' → logprob: -8.290091514587402
    5. ' p' → logprob: -8.665091514587402
    6. 'indices' → logprob: -9.165091514587402
    7. ' positions' → logprob: -9.290091514587402
    8. ' elements' → logprob: -9.540091514587402
    9. 'np' → logprob: -9.790091514587402
    10. '(dp' → logprob: -9.790091514587402

Token 835: ' à' (ID: 1221)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.43445122241973877
    2. '[p' → logprob: -1.4344512224197388
    3. '[' → logprob: -2.809451103210449
    4. 'p' → logprob: -3.184451103210449
    5. '=' → logprob: -5.434451103210449
    6. ' dp' → logprob: -6.559451103210449
    7. '   ' → logprob: -6.809451103210449
    8. ' =' → logprob: -7.184451103210449
    9. '(dp' → logprob: -7.184451103210449
    10. '>' → logprob: -7.684451103210449

Token 836: ' droite' (ID: 61428)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4086097776889801
    2. 'np' → logprob: -1.5336097478866577
    3. 'dp' → logprob: -2.2836098670959473
    4. 'range' → logprob: -5.533609867095947
    5. ' partir' → logprob: -6.158609867095947
    6. ':' → logprob: -6.408609867095947
    7. '```' → logprob: -6.408609867095947
    8. 'pp' → logprob: -6.908609867095947
    9. '[np' → logprob: -7.158609867095947
    10. '>' → logprob: -7.408609867095947

Token 837: ' de' (ID: 334)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.12220996618270874
    2. '[' → logprob: -2.4972100257873535
    3. 'p' → logprob: -3.6222100257873535
    4. 'dp' → logprob: -5.7472100257873535
    5. ' [' → logprob: -6.6222100257873535
    6. '```' → logprob: -7.9972100257873535
    7. '(p' → logprob: -8.872209548950195
    8. ' dp' → logprob: -8.997209548950195
    9. ' p' → logprob: -9.122209548950195
    10. ',' → logprob: -9.122209548950195

Token 838: ' '' (ID: 461)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12759767472743988
    2. 'dp' → logprob: -2.5025975704193115
    3. ' p' → logprob: -3.3775975704193115
    4. ' dp' → logprob: -5.752597808837891
    5. 'np' → logprob: -8.25259780883789
    6. '[p' → logprob: -9.37759780883789
    7. 'range' → logprob: -9.50259780883789
    8. ' np' → logprob: -10.25259780883789
    9. '```' → logprob: -10.50259780883789
    10. ' range' → logprob: -10.87759780883789

Token 839: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.023934410884976387
    2. ' p' → logprob: -3.7739343643188477
    3. 'dp' → logprob: -7.523934364318848
    4. ' dp' → logprob: -9.898934364318848
    5. '```' → logprob: -10.023934364318848
    6. '`' → logprob: -10.648934364318848
    7. ' ' → logprob: -12.148934364318848
    8. '   ' → logprob: -12.148934364318848
    9. 'np' → logprob: -12.648934364318848
    10. '(p' → logprob: -13.148934364318848

Token 840: ''' (ID: 6)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.26983365416526794
    2. '+' → logprob: -2.519833564758301
    3. '[' → logprob: -2.769833564758301
    4. ']' → logprob: -3.019833564758301
    5. 'p' → logprob: -4.019833564758301
    6. 'dp' → logprob: -4.894833564758301
    7. ':]' → logprob: -5.519833564758301
    8. ',' → logprob: -5.644833564758301
    9. ':' → logprob: -5.894833564758301
    10. '```' → logprob: -6.894833564758301

Token 841: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.25752589106559753
    2. '   ' → logprob: -2.00752592086792
    3. '[' → logprob: -2.63252592086792
    4. ' dp' → logprob: -4.88252592086792
    5. '+' → logprob: -5.63252592086792
    6. '	dp' → logprob: -6.25752592086792
    7. ' +' → logprob: -6.75752592086792
    8. '(dp' → logprob: -6.88252592086792
    9. '    
' → logprob: -7.13252592086792
    10. ' +=' → logprob: -7.25752592086792

Token 842: 'c' (ID: 66)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01359802670776844
    2. 'dp' → logprob: -5.0135979652404785
    3. ')' → logprob: -5.8885979652404785
    4. ' p' → logprob: -6.0135979652404785
    5. ')p' → logprob: -8.013598442077637
    6. '```' → logprob: -8.013598442077637
    7. ':' → logprob: -9.013598442077637
    8. '):' → logprob: -9.138598442077637
    9. '1' → logprob: -9.138598442077637
    10. '`' → logprob: -9.388598442077637

Token 843: ''est' (ID: 6616)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5879358649253845
    2. ':' → logprob: -1.2129359245300293
    3. '[p' → logprob: -2.8379359245300293
    4. '[' → logprob: -3.7129359245300293
    5. '+' → logprob: -3.7129359245300293
    6. ':]' → logprob: -3.9629359245300293
    7. '=' → logprob: -5.337935924530029
    8. '[:' → logprob: -5.462935924530029
    9. ')' → logprob: -5.587935924530029
    10. '[:]' → logprob: -6.212935924530029

Token 844: '-à' (ID: 56297)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.835338294506073
    2. 'p' → logprob: -1.7103383541107178
    3. ')' → logprob: -1.8353383541107178
    4. ':' → logprob: -2.5853383541107178
    5. '+' → logprob: -4.085338115692139
    6. ' dp' → logprob: -4.210338115692139
    7. ' p' → logprob: -4.585338115692139
    8. '=' → logprob: -4.585338115692139
    9. '```' → logprob: -4.585338115692139
    10. '[:]' → logprob: -4.585338115692139

Token 845: '-dire' (ID: 76064)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.17002733051776886
    2. 'dp' → logprob: -2.545027256011963
    3. ':' → logprob: -3.670027256011963
    4. 'B' → logprob: -4.545027256011963
    5. ':p' → logprob: -4.545027256011963
    6. 'N' → logprob: -5.045027256011963
    7. '```' → logprob: -5.920027256011963
    8. '`' → logprob: -5.920027256011963
    9. 'np' → logprob: -6.045027256011963
    10. '1' → logprob: -6.170027256011963

Token 846: ' de' (ID: 334)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14933346211910248
    2. ' p' → logprob: -2.1493334770202637
    3. 'dp' → logprob: -4.274333477020264
    4. ' dp' → logprob: -5.274333477020264
    5. '[p' → logprob: -6.774333477020264
    6. ':' → logprob: -7.649333477020264
    7. ')' → logprob: -7.899333477020264
    8. '   ' → logprob: -8.149333000183105
    9. ' :' → logprob: -9.149333000183105
    10. '[' → logprob: -9.524333000183105

Token 847: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05588282272219658
    2. ' p' → logprob: -2.9308829307556152
    3. '(p' → logprob: -7.055882930755615
    4. ' (' → logprob: -9.430882453918457
    5. 'dp' → logprob: -11.680882453918457
    6. '```' → logprob: -11.805882453918457
    7. '1' → logprob: -12.055882453918457
    8. '[p' → logprob: -12.305882453918457
    9. '   ' → logprob: -12.430882453918457
    10. ':p' → logprob: -12.868382453918457

Token 848: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011612992733716965
    2. ' +' → logprob: -4.511612892150879
    3. '+p' → logprob: -7.886612892150879
    4. ':]' → logprob: -9.511612892150879
    5. ':' → logprob: -9.886612892150879
    6. 'p' → logprob: -10.761612892150879
    7. '+:' → logprob: -11.261612892150879
    8. '1' → logprob: -11.511612892150879
    9. '+]' → logprob: -12.761612892150879
    10. ':p' → logprob: -12.886612892150879

Token 849: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019005554495379329
    2. 'p' → logprob: -6.376900672912598
    3. ' ' → logprob: -9.376900672912598
    4. '```' → logprob: -9.626900672912598
    5. '+' → logprob: -10.626900672912598
    6. ' p' → logprob: -12.001900672912598
    7. '(p' → logprob: -12.251900672912598
    8. '2' → logprob: -12.501900672912598
    9. ':' → logprob: -12.626900672912598
    10. ':p' → logprob: -13.876900672912598

Token 850: ' jusqu' (ID: 21961)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5994619131088257
    2. ':]' → logprob: -0.9744619131088257
    3. '+' → logprob: -3.2244620323181152
    4. ':].' → logprob: -4.099462032318115
    5. ':p' → logprob: -4.974462032318115
    6. 'p' → logprob: -5.724462032318115
    7. ' :' → logprob: -6.599462032318115
    8. ' :]' → logprob: -6.849462032318115
    9. ':)' → logprob: -6.974462032318115
    10. ']' → logprob: -6.974462032318115

Token 851: ''à' (ID: 33688)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.089560367166996
    2. '=' → logprob: -3.5895602703094482
    3. '=p' → logprob: -3.9645602703094482
    4. '[p' → logprob: -4.089560508728027
    5. '(p' → logprob: -4.339560508728027
    6. '```' → logprob: -5.589560508728027
    7. 'à' → logprob: -5.964560508728027
    8. ' p' → logprob: -7.339560508728027
    9. ':p' → logprob: -7.464560508728027
    10. '[' → logprob: -7.589560508728027

Token 852: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0030821673572063446
    2. 'p' → logprob: -6.378082275390625
    3. 'None' → logprob: -6.753082275390625
    4. ' N' → logprob: -9.753082275390625
    5. 'dp' → logprob: -9.878082275390625
    6. ')' → logprob: -10.628082275390625
    7. ':N' → logprob: -10.628082275390625
    8. '```' → logprob: -11.128082275390625
    9. '[N' → logprob: -12.128082275390625
    10. 'n' → logprob: -12.378082275390625

Token 853: ' inclus' (ID: 11891)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3151940107345581
    2. ':' → logprob: -1.815194010734558
    3. ':]' → logprob: -3.6901941299438477
    4. '+' → logprob: -4.065194129943848
    5. ').' → logprob: -4.690194129943848
    6. ')[' → logprob: -4.815194129943848
    7. ')p' → logprob: -4.940194129943848
    8. ']' → logprob: -5.190194129943848
    9. '])' → logprob: -5.190194129943848
    10. ':)' → logprob: -5.440194129943848

Token 854: ')' (ID: 8)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7897214293479919
    2. ')' → logprob: -1.2897214889526367
    3. ':]' → logprob: -2.5397214889526367
    4. ':p' → logprob: -2.7897214889526367
    5. 'p' → logprob: -3.4147214889526367
    6. ':)' → logprob: -3.7897214889526367
    7. ':].' → logprob: -3.9147214889526367
    8. ').' → logprob: -4.539721488952637
    9. ']' → logprob: -4.914721488952637
    10. '+' → logprob: -5.289721488952637

Token 855: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08619136363267899
    2. '[' → logprob: -3.211191415786743
    3. ' dp' → logprob: -3.461191415786743
    4. '```' → logprob: -5.586191177368164
    5. '   ' → logprob: -5.711191177368164
    6. '
' → logprob: -6.461191177368164
    7. ' +=' → logprob: -7.461191177368164
    8. '	dp' → logprob: -8.461191177368164
    9. '+=' → logprob: -8.586191177368164
    10. '    
' → logprob: -8.836191177368164

Token 856: ' tenir' (ID: 57709)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10673505812883377
    2. 'p' → logprob: -2.9817349910736084
    3. ' dp' → logprob: -3.4817349910736084
    4. ')' → logprob: -4.9817352294921875
    5. 'np' → logprob: -5.4817352294921875
    6. ' p' → logprob: -6.1067352294921875
    7. 'B' → logprob: -6.3567352294921875
    8. '```' → logprob: -6.9817352294921875
    9. '=' → logprob: -7.3567352294921875
    10. ']' → logprob: -7.7317352294921875

Token 857: ' compte' (ID: 19657)
  Prédit: ' compte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compte' → logprob: -1.05068838596344
    2. 'p' → logprob: -1.42568838596344
    3. 'à' → logprob: -1.80068838596344
    4. '```' → logprob: -2.5506882667541504
    5. 'account' → logprob: -2.9256882667541504
    6. '[p' → logprob: -2.9256882667541504
    7. '[' → logprob: -4.55068826675415
    8. '=' → logprob: -5.42568826675415
    9. 'comp' → logprob: -5.67568826675415
    10. 'la' → logprob: -6.30068826675415

Token 858: ' du' (ID: 1462)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2156519889831543
    2. '(' → logprob: -1.8406519889831543
    3. '(p' → logprob: -1.8406519889831543
    4. 'de' → logprob: -2.0906519889831543
    5. ' de' → logprob: -2.2156519889831543
    6. '[p' → logprob: -3.7156519889831543
    7. '=' → logprob: -3.8406519889831543
    8. '(dp' → logprob: -4.090651988983154
    9. 'dp' → logprob: -4.465651988983154
    10. ' of' → logprob: -4.590651988983154

Token 859: ' coût' (ID: 73109)
  Prédit: ' déplacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' déplacement' → logprob: -0.07711289077997208
    2. 'dp' → logprob: -3.202112913131714
    3. 'dé' → logprob: -4.702112674713135
    4. ' dp' → logprob: -4.952112674713135
    5. ' B' → logprob: -5.327112674713135
    6. 'p' → logprob: -5.827112674713135
    7. 'B' → logprob: -6.077112674713135
    8. ' p' → logprob: -6.327112674713135
    9. ' desloc' → logprob: -6.577112674713135
    10. ' desplaz' → logprob: -6.952112674713135

Token 860: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5485826134681702
    2. '[p' → logprob: -1.7985825538635254
    3. 'dp' → logprob: -2.4235825538635254
    4. ' dp' → logprob: -3.4235825538635254
    5. ' +=' → logprob: -3.7985825538635254
    6. 'B' → logprob: -3.7985825538635254
    7. '+' → logprob: -4.173582553863525
    8. 'p' → logprob: -4.298582553863525
    9. '=' → logprob: -4.548582553863525
    10. 'for' → logprob: -4.673582553863525

Token 861: ' ce' (ID: 2357)
  Prédit: ' déplacer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' déplacer' → logprob: -1.1571625471115112
    2. 'B' → logprob: -1.2821625471115112
    3. 'dp' → logprob: -1.9071625471115112
    4. 'p' → logprob: -1.9071625471115112
    5. 'dé' → logprob: -3.282162666320801
    6. ' déplacement' → logprob: -4.282162666320801
    7. '```' → logprob: -4.282162666320801
    8. ' B' → logprob: -4.532162666320801
    9. ' p' → logprob: -5.532162666320801
    10. ' dé' → logprob: -5.532162666320801

Token 862: ' déplacement' (ID: 138449)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13139091432094574
    2. 'p' → logprob: -2.8813908100128174
    3. '```' → logprob: -4.2563910484313965
    4. ' p' → logprob: -4.6313910484313965
    5. ' +' → logprob: -4.6313910484313965
    6. '[' → logprob: -5.0063910484313965
    7. ')' → logprob: -5.2563910484313965
    8. ' déplacement' → logprob: -5.3813910484313965
    9. 'dp' → logprob: -5.7563910484313965
    10. ' +=' → logprob: -6.1313910484313965

Token 863: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6986361145973206
    2. 'dp' → logprob: -0.8236361145973206
    3. '   ' → logprob: -3.323636054992676
    4. ' dp' → logprob: -4.198636054992676
    5. '[p' → logprob: -5.323636054992676
    6. ' [' → logprob: -6.073636054992676
    7. ' +=' → logprob: -7.198636054992676
    8. '    
' → logprob: -7.448636054992676
    9. '
' → logprob: -7.448636054992676
    10. '[np' → logprob: -7.448636054992676

Token 864: ' chaque' (ID: 21194)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1878068447113037
    2. ' p' → logprob: -1.8128068447113037
    3. 'dp' → logprob: -5.562807083129883
    4. 'np' → logprob: -6.562807083129883
    5. ' np' → logprob: -7.687807083129883
    6. 'i' → logprob: -7.687807083129883
    7. ' la' → logprob: -8.187807083129883
    8. 'l' → logprob: -8.312807083129883
    9. ' dp' → logprob: -8.437807083129883
    10. ' i' → logprob: -8.687807083129883

Token 865: ' possibilité' (ID: 58463)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.704555094242096
    2. 'i' → logprob: -1.7045550346374512
    3. ' p' → logprob: -2.329555034637451
    4. ' i' → logprob: -2.579555034637451
    5. 'dp' → logprob: -3.079555034637451
    6. '+' → logprob: -3.204555034637451
    7. '```' → logprob: -3.829555034637451
    8. 'indice' → logprob: -4.329555034637451
    9. 'position' → logprob: -5.329555034637451
    10. 'j' → logprob: -5.329555034637451

Token 866: ' future' (ID: 5277)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2711021602153778
    2. '[' → logprob: -1.7711021900177002
    3. ' dp' → logprob: -3.1461021900177
    4. '
' → logprob: -4.271101951599121
    5. '```' → logprob: -5.646101951599121
    6. '   ' → logprob: -6.771101951599121
    7. ' [' → logprob: -6.896101951599121
    8. 'for' → logprob: -7.146101951599121
    9. '[p' → logprob: -7.146101951599121
    10. '  
' → logprob: -7.271101951599121

Token 867: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.039387065917253494
    2. '
' → logprob: -4.164387226104736
    3. ' dp' → logprob: -4.164387226104736
    4. '[' → logprob: -5.789387226104736
    5. '   ' → logprob: -6.789387226104736
    6. '```' → logprob: -6.914387226104736
    7. 'for' → logprob: -7.164387226104736
    8. '  
' → logprob: -7.539387226104736
    9. '    
' → logprob: -8.164386749267578
    10. '(dp' → logprob: -9.039386749267578

Token 868: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04582202434539795
    2. ' dp' → logprob: -3.1708221435546875
    3. '[' → logprob: -6.6708221435546875
    4. '```' → logprob: -7.7958221435546875
    5. '	dp' → logprob: -8.170822143554688
    6. 'for' → logprob: -8.295822143554688
    7. '   ' → logprob: -8.420822143554688
    8. ' for' → logprob: -9.045822143554688
    9. ' 
' → logprob: -9.420822143554688
    10. '+' → logprob: -9.670822143554688

Token 869: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.004972712602466345
    2. '   ' → logprob: -6.1299729347229
    3. ' dp' → logprob: -6.1299729347229
    4. 'for' → logprob: -7.6299729347229
    5. 'if' → logprob: -9.879972457885742
    6. ' for' → logprob: -10.379972457885742
    7. '	dp' → logprob: -11.629972457885742
    8. '```' → logprob: -11.629972457885742
    9. '
' → logprob: -12.129972457885742
    10. ' ' → logprob: -12.754972457885742

Token 870: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -9.543733904138207e-05
    2. 'p' → logprob: -9.75009536743164
    3. '[' → logprob: -10.62509536743164
    4. ' =' → logprob: -12.12509536743164
    5. '=p' → logprob: -13.25009536743164
    6. '=' → logprob: -13.25009536743164
    7. '[:' → logprob: -13.37509536743164
    8. ' p' → logprob: -15.12509536743164
    9. '[
' → logprob: -15.12509536743164
    10. ' [' → logprob: -15.37509536743164

Token 871: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03312007710337639
    2. ':]' → logprob: -3.6581201553344727
    3. '+p' → logprob: -6.158120155334473
    4. ':p' → logprob: -6.783120155334473
    5. ' +' → logprob: -6.783120155334473
    6. ':' → logprob: -6.783120155334473
    7. ']' → logprob: -7.533120155334473
    8. 'p' → logprob: -7.783120155334473
    9. '[p' → logprob: -9.283120155334473
    10. '+]' → logprob: -9.908120155334473

Token 872: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0050601293332874775
    2. ']' → logprob: -5.380060195922852
    3. ' ' → logprob: -8.005060195922852
    4. ':' → logprob: -10.130060195922852
    5. ':]' → logprob: -10.130060195922852
    6. ' :]' → logprob: -11.880060195922852
    7. ']=' → logprob: -12.255060195922852
    8. '   ' → logprob: -12.630060195922852
    9. '0' → logprob: -13.255060195922852
    10. ' :' → logprob: -13.505060195922852

Token 873: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. 'np' → logprob: -12.125009536743164
    3. '0' → logprob: -13.250009536743164
    4. ']' → logprob: -13.750009536743164
    5. ' ' → logprob: -14.375009536743164
    6. ':' → logprob: -15.375009536743164
    7. '   ' → logprob: -15.500009536743164
    8. '```' → logprob: -15.937509536743164
    9. '(np' → logprob: -16.062509536743164
    10. ')' → logprob: -16.625009536743164

Token 874: ':]' (ID: 67377)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5788524746894836
    2. ':]' → logprob: -0.8288524746894836
    3. ']+=' → logprob: -6.703852653503418
    4. ' :]' → logprob: -7.203852653503418
    5. ':' → logprob: -7.578852653503418
    6. ' ]' → logprob: -7.953852653503418
    7. '   ' → logprob: -10.703852653503418
    8. ']+' → logprob: -11.078852653503418
    9. '[' → logprob: -12.078852653503418
    10. '...]' → logprob: -12.203852653503418

Token 875: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.09239958226680756
    2. '=' → logprob: -2.7173995971679688
    3. ' +=' → logprob: -3.8423995971679688
    4. ' =' → logprob: -7.467399597167969
    5. '-=' → logprob: -9.217399597167969
    6. ']+=' → logprob: -9.967399597167969
    7. '+' → logprob: -11.092399597167969
    8. '   ' → logprob: -11.467399597167969
    9. ' -=' → logprob: -11.717399597167969
    10. '*=' → logprob: -11.967399597167969

Token 876: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -6.659005157416686e-05
    2. ' B' → logprob: -9.625066757202148
    3. 'np' → logprob: -14.625066757202148
    4. ' ' → logprob: -16.75006675720215
    5. '	B' → logprob: -16.75006675720215
    6. '1' → logprob: -18.37506675720215
    7. '   ' → logprob: -18.75006675720215
    8. 'b' → logprob: -18.87506675720215
    9. ' ' → logprob: -19.12506675720215
    10. 'A' → logprob: -19.25006675720215

Token 877: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 878: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 879: ' dp' (ID: 21546)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 880: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.018273085355758667
    2. '[' → logprob: -4.018272876739502
    3. ' [' → logprob: -10.89327335357666
    4. 'p' → logprob: -11.26827335357666
    5. '<|end|>' → logprob: -11.26827335357666
    6. '[:' → logprob: -11.39327335357666
    7. '```' → logprob: -11.39327335357666
    8. '[
' → logprob: -11.51827335357666
    9. '[:]' → logprob: -11.89327335357666
    10. '[...]' → logprob: -12.14327335357666

Token 881: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.034132689237594604
    2. ' +' → logprob: -3.409132719039917
    3. '+p' → logprob: -8.409132957458496
    4. ':]' → logprob: -9.284132957458496
    5. ':' → logprob: -9.659132957458496
    6. ':p' → logprob: -9.909132957458496
    7. ']' → logprob: -10.659132957458496
    8. 'p' → logprob: -11.034132957458496
    9. '[p' → logprob: -12.034132957458496
    10. '+]' → logprob: -13.534132957458496

Token 882: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.081584716506768e-05
    2. '+' → logprob: -11.375020980834961
    3. ' ' → logprob: -11.875020980834961
    4. ':]' → logprob: -13.875020980834961
    5. ':' → logprob: -14.125020980834961
    6. ']' → logprob: -15.875020980834961
    7. '```' → logprob: -16.37502098083496
    8. '   ' → logprob: -17.12502098083496
    9. '2' → logprob: -17.37502098083496
    10. '...' → logprob: -17.50002098083496

Token 883: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.001063771080225706
    2. ':' → logprob: -7.751063823699951
    3. ']' → logprob: -7.876063823699951
    4. ' :]' → logprob: -8.876063346862793
    5. ':].' → logprob: -9.626063346862793
    6. ':p' → logprob: -10.376063346862793
    7. '[' → logprob: -12.626063346862793
    8. ':],' → logprob: -13.001063346862793
    9. '...]' → logprob: -13.376063346862793
    10. '+' → logprob: -13.376063346862793

Token 884: ' sélection' (ID: 43472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 885: 'ne' (ID: 611)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9762749671936035
    2. ' =' → logprob: -0.9762749671936035
    3. 'e' → logprob: -2.4762749671936035
    4. 'dp' → logprob: -2.9762749671936035
    5. '[' → logprob: -3.4762749671936035
    6. ']' → logprob: -4.1012749671936035
    7. '[:]' → logprob: -4.1012749671936035
    8. '[p' → logprob: -4.8512749671936035
    9. '(p' → logprob: -5.2262749671936035
    10. 'p' → logprob: -5.3512749671936035

Token 886: ' tous' (ID: 10688)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11334632337093353
    2. 'np' → logprob: -2.9883463382720947
    3. ' dp' → logprob: -3.7383463382720947
    4. 'le' → logprob: -4.488346099853516
    5. ' np' → logprob: -5.238346099853516
    6. 'p' → logprob: -5.238346099853516
    7. 'the' → logprob: -6.238346099853516
    8. 'la' → logprob: -6.363346099853516
    9. ' la' → logprob: -6.988346099853516
    10. 'N' → logprob: -7.113346099853516

Token 887: ' les' (ID: 1341)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.7481846213340759
    2. 'les' → logprob: -1.2481846809387207
    3. ' indices' → logprob: -1.9981846809387207
    4. 'dp' → logprob: -3.2481846809387207
    5. ' les' → logprob: -3.4981846809387207
    6. 'élé' → logprob: -5.123184680938721
    7. 'elements' → logprob: -5.373184680938721
    8. 'p' → logprob: -5.498184680938721
    9. ' éléments' → logprob: -5.873184680938721
    10. 'positions' → logprob: -6.248184680938721

Token 888: ' indices' (ID: 30378)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.016553565859794617
    2. 'indices' → logprob: -4.2665534019470215
    3. ' éléments' → logprob: -6.5165534019470215
    4. 'él' → logprob: -8.39155387878418
    5. 'elements' → logprob: -8.51655387878418
    6. 'p' → logprob: -8.76655387878418
    7. ' indices' → logprob: -9.14155387878418
    8. 'positions' → logprob: -9.64155387878418
    9. 'é' → logprob: -10.01655387878418
    10. 'dp' → logprob: -10.26655387878418

Token 889: ' à' (ID: 1221)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.35305240750312805
    2. ' p' → logprob: -2.3530523777008057
    3. ' à' → logprob: -2.3530523777008057
    4. '(p' → logprob: -2.9780523777008057
    5. 'à' → logprob: -3.8530523777008057
    6. '[p' → logprob: -4.603052616119385
    7. ' après' → logprob: -5.228052616119385
    8. '```' → logprob: -6.103052616119385
    9. '>' → logprob: -6.228052616119385
    10. '>=' → logprob: -6.228052616119385

Token 890: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.39370641112327576
    2. 'p' → logprob: -1.5187064409255981
    3. 'part' → logprob: -2.2687063217163086
    4. ' p' → logprob: -6.643706321716309
    5. 'dp' → logprob: -7.143706321716309
    6. '[p' → logprob: -8.893706321716309
    7. ' part' → logprob: -9.268706321716309
    8. 'à' → logprob: -9.393706321716309
    9. 'np' → logprob: -9.393706321716309
    10. 'l' → logprob: -9.643706321716309

Token 891: ' de' (ID: 334)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.012767317704856396
    2. ' p' → logprob: -4.387767314910889
    3. '(p' → logprob: -8.512767791748047
    4. '[p' → logprob: -9.887767791748047
    5. ' (' → logprob: -13.012767791748047
    6. ''p' → logprob: -14.512767791748047
    7. '	p' → logprob: -14.762767791748047
    8. '<p' → logprob: -15.012767791748047
    9. ' de' → logprob: -15.262767791748047
    10. ' ' → logprob: -15.262767791748047

Token 892: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001146291324403137
    2. ' p' → logprob: -9.125114440917969
    3. '(p' → logprob: -12.375114440917969
    4. '```' → logprob: -14.875114440917969
    5. '[p' → logprob: -15.125114440917969
    6. '   ' → logprob: -15.750114440917969
    7. ' ' → logprob: -16.00011444091797
    8. '1' → logprob: -16.00011444091797
    9. '	p' → logprob: -16.25011444091797
    10. ''p' → logprob: -16.37511444091797

Token 893: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024854077491909266
    2. ' +' → logprob: -6.002485275268555
    3. '+p' → logprob: -12.127485275268555
    4. '1' → logprob: -14.002485275268555
    5. '[' → logprob: -14.502485275268555
    6. '+
' → logprob: -14.627485275268555
    7. 'p' → logprob: -14.752485275268555
    8. '+[' → logprob: -14.752485275268555
    9. '+=' → logprob: -15.252485275268555
    10. '```' → logprob: -15.377485275268555

Token 894: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000192812061868608
    2. '+' → logprob: -8.625192642211914
    3. ' ' → logprob: -12.125192642211914
    4. 'p' → logprob: -12.375192642211914
    5. '```' → logprob: -13.375192642211914
    6. '2' → logprob: -13.500192642211914
    7. 'plus' → logprob: -15.375192642211914
    8. ' +' → logprob: -15.750192642211914
    9. '   ' → logprob: -16.875192642211914
    10. ' p' → logprob: -17.562692642211914

Token 895: ' jusqu' (ID: 21961)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 896: ''à' (ID: 33688)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6921308636665344
    2. 'à' → logprob: -1.0671308040618896
    3. 'p' → logprob: -3.1921308040618896
    4. '=N' → logprob: -3.4421308040618896
    5. '+' → logprob: -3.6921308040618896
    6. 'N' → logprob: -3.8171308040618896
    7. ':' → logprob: -5.067131042480469
    8. ':N' → logprob: -5.192131042480469
    9. '=p' → logprob: -5.692131042480469
    10. '=np' → logprob: -6.067131042480469

Token 897: ' la' (ID: 557)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.002248507458716631
    2. 'None' → logprob: -6.502248287200928
    3. ' N' → logprob: -8.252248764038086
    4. 'np' → logprob: -8.502248764038086
    5. 'end' → logprob: -9.377248764038086
    6. 'dp' → logprob: -10.002248764038086
    7. 'Np' → logprob: -10.252248764038086
    8. '```' → logprob: -10.627248764038086
    9. 'n' → logprob: -11.252248764038086
    10. 'fin' → logprob: -11.377248764038086

Token 898: ' fin' (ID: 2131)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004985759034752846
    2. 'fin' → logprob: -6.004985809326172
    3. 'None' → logprob: -7.254985809326172
    4. 'end' → logprob: -7.254985809326172
    5. 'n' → logprob: -8.254985809326172
    6. ' N' → logprob: -8.879985809326172
    7. 'np' → logprob: -9.004985809326172
    8. '-' → logprob: -9.254985809326172
    9. '```' → logprob: -9.254985809326172
    10. '-N' → logprob: -9.879985809326172

Token 899: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 900: ' tableau' (ID: 67053)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.42400020360946655
    2. 'table' → logprob: -1.4240002632141113
    3. 'N' → logprob: -2.5490002632141113
    4. 'array' → logprob: -4.924000263214111
    5. '```' → logprob: -5.174000263214111
    6. ' tableau' → logprob: -5.674000263214111
    7. 'np' → logprob: -5.799000263214111
    8. 'len' → logprob: -6.299000263214111
    9. 'None' → logprob: -6.924000263214111
    10. 'arr' → logprob: -7.674000263214111

Token 901: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 902: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 903: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 904: ' leur' (ID: 9853)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02933511510491371
    2. ' +=' → logprob: -3.9043350219726562
    3. ']+=' → logprob: -6.279335021972656
    4. 'contin' → logprob: -6.529335021972656
    5. 'continue' → logprob: -7.279335021972656
    6. 'in' → logprob: -7.279335021972656
    7. 's' → logprob: -7.279335021972656
    8. 'aj' → logprob: -7.404335021972656
    9. '=' → logprob: -8.029335021972656
    10. ')' → logprob: -8.154335021972656

Token 905: ' ajoute' (ID: 91611)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.5087896585464478
    2. ' ajoute' → logprob: -1.1337896585464478
    3. '+=' → logprob: -3.508789539337158
    4. ' +=' → logprob: -4.633789539337158
    5. 'adds' → logprob: -4.758789539337158
    6. '<|end|>' → logprob: -4.758789539337158
    7. 'add' → logprob: -5.508789539337158
    8. ' ' → logprob: -6.008789539337158
    9. '+' → logprob: -6.633789539337158
    10. 'addition' → logprob: -6.758789539337158

Token 906: ' le' (ID: 505)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.20143185555934906
    2. ' B' → logprob: -1.7014318704605103
    3. '1' → logprob: -11.576432228088379
    4. '+' → logprob: -13.326432228088379
    5. ' ' → logprob: -13.326432228088379
    6. '```' → logprob: -13.826432228088379
    7. ' ' → logprob: -13.951432228088379
    8. '	B' → logprob: -14.451432228088379
    9. 'np' → logprob: -14.701432228088379
    10. '+B' → logprob: -14.826432228088379

Token 907: ' coût' (ID: 73109)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3134081959724426
    2. ' B' → logprob: -1.3134081363677979
    3. '```' → logprob: -10.688407897949219
    4. '`' → logprob: -10.938407897949219
    5. ' ' → logprob: -11.188407897949219
    6. ' ' → logprob: -11.188407897949219
    7. '"' → logprob: -11.313407897949219
    8. ''' → logprob: -11.563407897949219
    9. 'A' → logprob: -11.688407897949219
    10. '+' → logprob: -11.813407897949219

Token 908: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.8606630563735962
    2. '<|end|>' → logprob: -0.8606630563735962
    3. 'A' → logprob: -2.4856629371643066
    4. ' A' → logprob: -3.3606629371643066
    5. ' B' → logprob: -3.8606629371643066
    6. ' +=' → logprob: -4.985662937164307
    7. '+=' → logprob: -6.235662937164307
    8. '=' → logprob: -6.860662937164307
    9. ' ' → logprob: -7.110662937164307
    10. ')' → logprob: -7.235662937164307

Token 909: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 910: 'dé' (ID: 98340)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001320596318691969
    2. ' )' → logprob: -6.7513203620910645
    3. '<|end|>' → logprob: -9.251320838928223
    4. ')
' → logprob: -10.001320838928223
    5. ')#' → logprob: -13.251320838928223
    6. ' ' → logprob: -13.501320838928223
    7. ' )
' → logprob: -14.501320838928223
    8. '*' → logprob: -14.626320838928223
    9. ')*' → logprob: -14.751320838928223
    10. ')

' → logprob: -14.876320838928223

Token 911: 'placement' (ID: 17947)
  Prédit: 'plac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plac' → logprob: -0.7257911562919617
    2. 'placement' → logprob: -1.2257912158966064
    3. 'cal' → logprob: -2.2257912158966064
    4. 'pl' → logprob: -3.1007912158966064
    5. 'f' → logprob: -3.4757912158966064
    6. 'p' → logprob: -4.850790977478027
    7. 'pla' → logprob: -5.100790977478027
    8. 'placer' → logprob: -5.225790977478027
    9. 'place' → logprob: -5.475790977478027
    10. 'cré' → logprob: -6.100790977478027

Token 912: ' vers' (ID: 3640)
  Prédit: ' vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.9934573769569397
    2. '<|end|>' → logprob: -1.493457317352295
    3. ' à' → logprob: -1.743457317352295
    4. ')' → logprob: -1.743457317352295
    5. ' )' → logprob: -3.868457317352295
    6. ' ' → logprob: -4.493457317352295
    7. ' de' → logprob: -5.118457317352295
    8. ' gauche' → logprob: -5.243457317352295
    9. ' to' → logprob: -5.743457317352295
    10. ' des' → logprob: -6.368457317352295

Token 913: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.050689697265625
    2. ' la' → logprob: -3.050689697265625
    3. 'g' → logprob: -6.425689697265625
    4. 'dro' → logprob: -8.675689697265625
    5. ' gauche' → logprob: -8.800689697265625
    6. 'left' → logprob: -9.925689697265625
    7. 'l' → logprob: -10.300689697265625
    8. 'le' → logprob: -10.675689697265625
    9. ' droite' → logprob: -11.175689697265625
    10. ' ' → logprob: -11.300689697265625

Token 914: ' gauche' (ID: 58367)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.10957124829292297
    2. 'g' → logprob: -2.9845712184906006
    3. ' droite' → logprob: -3.1095712184906006
    4. ' gauche' → logprob: -5.10957145690918
    5. 'right' → logprob: -6.23457145690918
    6. 'left' → logprob: -8.23457145690918
    7. ' right' → logprob: -8.98457145690918
    8. '```' → logprob: -9.60957145690918
    9. ' ' → logprob: -10.23457145690918
    10. ' droit' → logprob: -10.48457145690918

Token 915: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007330321241170168
    2. ' )' → logprob: -7.250732898712158
    3. '<|end|>' → logprob: -11.250733375549316
    4. ')
' → logprob: -12.875733375549316
    5. ' ' → logprob: -13.250733375549316
    6. '```' → logprob: -13.625733375549316
    7. '   ' → logprob: -13.750733375549316
    8. '.' → logprob: -14.625733375549316
    9. ').' → logprob: -14.750733375549316
    10. ')#' → logprob: -14.875733375549316

Token 916: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04892025515437126
    2. '[' → logprob: -3.923920154571533
    3. ' dp' → logprob: -4.923920154571533
    4. '+=' → logprob: -4.923920154571533
    5. '=' → logprob: -5.298920154571533
    6. ' +=' → logprob: -5.798920154571533
    7. '+' → logprob: -7.423920154571533
    8. ' =' → logprob: -7.548920154571533
    9. 'A' → logprob: -7.673920154571533
    10. '[:' → logprob: -7.798920154571533

Token 917: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1532054990530014
    2. '+' → logprob: -2.778205394744873
    3. '+=' → logprob: -3.278205394744873
    4. '<|end|>' → logprob: -4.278205394744873
    5. '=' → logprob: -4.778205394744873
    6. '[' → logprob: -4.903205394744873
    7. '   ' → logprob: -5.903205394744873
    8. ' dp' → logprob: -6.278205394744873
    9. '[p' → logprob: -6.653205394744873
    10. ' +=' → logprob: -7.278205394744873

Token 918: ' Ét' (ID: 54156)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003506230190396309
    2. 'A' → logprob: -7.128506183624268
    3. '#' → logprob: -7.628506183624268
    4. 'for' → logprob: -8.128506660461426
    5. '+' → logprob: -8.253506660461426
    6. '<|end|>' → logprob: -8.253506660461426
    7. ' dp' → logprob: -8.378506660461426
    8. '+=' → logprob: -8.628506660461426
    9. 'p' → logprob: -9.003506660461426
    10. '[' → logprob: -9.128506660461426

Token 919: 'ape' (ID: 2480)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10089758038520813
    2. 'dp' → logprob: -2.6008975505828857
    3. '[p' → logprob: -4.725897789001465
    4. 'ape' → logprob: -5.475897789001465
    5. '   ' → logprob: -5.975897789001465
    6. '[' → logprob: -6.475897789001465
    7. '+=' → logprob: -6.600897789001465
    8. ' +=' → logprob: -7.350897789001465
    9. '=' → logprob: -7.350897789001465
    10. '#' → logprob: -7.850897789001465

Token 920: ' ' (ID: 220)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.006902801804244518
    2. 'p' → logprob: -5.006902694702148
    3. '[' → logprob: -9.631902694702148
    4. ' p' → logprob: -10.131902694702148
    5. '[:' → logprob: -11.006902694702148
    6. '[:]' → logprob: -11.006902694702148
    7. ' [' → logprob: -11.256902694702148
    8. 'A' → logprob: -11.381902694702148
    9. '(p' → logprob: -12.256902694702148
    10. '   ' → logprob: -12.381902694702148

Token 921: '3' (ID: 18)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14482825994491577
    2. '[p' → logprob: -2.0198283195495605
    3. '[:' → logprob: -6.8948283195495605
    4. ':p' → logprob: -7.3948283195495605
    5. '[:]' → logprob: -8.019827842712402
    6. '[:-' → logprob: -10.019827842712402
    7. ' p' → logprob: -10.144827842712402
    8. '_p' → logprob: -10.644827842712402
    9. '[' → logprob: -10.894827842712402
    10. 'P' → logprob: -10.894827842712402

Token 922: ' :' (ID: 712)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.45058903098106384
    2. 'dp' → logprob: -1.0755890607833862
    3. '[' → logprob: -4.450589179992676
    4. '   ' → logprob: -5.825589179992676
    5. ' dp' → logprob: -5.825589179992676
    6. '(dp' → logprob: -7.450589179992676
    7. ' [' → logprob: -7.700589179992676
    8. '  
' → logprob: -7.700589179992676
    9. ' +=' → logprob: -7.700589179992676
    10. '```' → logprob: -7.950589179992676

Token 923: ' Cons' (ID: 8160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.933173426659778e-05
    2. ' dp' → logprob: -9.875069618225098
    3. 'if' → logprob: -12.125069618225098
    4. 'A' → logprob: -12.250069618225098
    5. '   ' → logprob: -12.250069618225098
    6. '	dp' → logprob: -14.500069618225098
    7. 'np' → logprob: -14.875069618225098
    8. '
' → logprob: -15.125069618225098
    9. '+=' → logprob: -15.250069618225098
    10. 'for' → logprob: -15.500069618225098

Token 924: 'id' (ID: 315)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0127322468906641
    2. 'dp' → logprob: -5.012732028961182
    3. 'p' → logprob: -5.262732028961182
    4. '[' → logprob: -8.01273250579834
    5. '[:' → logprob: -8.38773250579834
    6. ']' → logprob: -9.13773250579834
    7. '[:]' → logprob: -10.01273250579834
    8. '+=' → logprob: -10.26273250579834
    9. '[:-' → logprob: -11.26273250579834
    10. '```' → logprob: -11.76273250579834

Token 925: 'érer' (ID: 29097)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.026868414133787155
    2. 'p' → logprob: -4.0268683433532715
    3. '[p' → logprob: -5.9018683433532715
    4. 'up' → logprob: -7.0268683433532715
    5. ' dp' → logprob: -7.0268683433532715
    6. '(dp' → logprob: -7.2768683433532715
    7. 'ider' → logprob: -7.6518683433532715
    8. '[u' → logprob: -8.02686882019043
    9. '[' → logprob: -8.15186882019043
    10. 'ide' → logprob: -8.27686882019043

Token 926: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5759109854698181
    2. 'A' → logprob: -1.075911045074463
    3. ' A' → logprob: -2.825911045074463
    4. ' dp' → logprob: -3.325911045074463
    5. 'np' → logprob: -8.075910568237305
    6. '[' → logprob: -8.325910568237305
    7. '[A' → logprob: -8.450910568237305
    8. ' ' → logprob: -8.700910568237305
    9. 'a' → logprob: -9.700910568237305
    10. ' a' → logprob: -9.950910568237305

Token 927: ' déplacement' (ID: 138449)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1417447030544281
    2. 'A' → logprob: -2.266744613647461
    3. 'p' → logprob: -4.391744613647461
    4. 'right' → logprob: -5.141744613647461
    5. ' dp' → logprob: -6.141744613647461
    6. '#' → logprob: -6.516744613647461
    7. ' A' → logprob: -6.516744613647461
    8. 'cost' → logprob: -7.516744613647461
    9. ' right' → logprob: -8.204244613647461
    10. 'np' → logprob: -8.454244613647461

Token 928: ' vers' (ID: 3640)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.4428878426551819
    2. '[:' → logprob: -1.192887783050537
    3. 'p' → logprob: -3.692887783050537
    4. '[:]' → logprob: -4.067887783050537
    5. 'dp' → logprob: -5.067887783050537
    6. '[:-' → logprob: -5.817887783050537
    7. '[' → logprob: -6.192887783050537
    8. '=' → logprob: -8.817888259887695
    9. '   ' → logprob: -8.942888259887695
    10. '[N' → logprob: -9.067888259887695

Token 929: ' la' (ID: 557)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12433356046676636
    2. 'la' → logprob: -2.249333620071411
    3. 'right' → logprob: -5.749333381652832
    4. ' p' → logprob: -6.624333381652832
    5. 'l' → logprob: -6.624333381652832
    6. ' la' → logprob: -6.624333381652832
    7. 'A' → logprob: -6.749333381652832
    8. 'np' → logprob: -7.374333381652832
    9. 'dp' → logprob: -7.499333381652832
    10. 'le' → logprob: -7.624333381652832

Token 930: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.07702217996120453
    2. 'right' → logprob: -2.827022075653076
    3. 'p' → logprob: -4.702022075653076
    4. ' droite' → logprob: -5.327022075653076
    5. '_right' → logprob: -8.327022552490234
    6. '[right' → logprob: -8.327022552490234
    7. 'd' → logprob: -8.452022552490234
    8. 'Dro' → logprob: -9.827022552490234
    9. ' right' → logprob: -10.202022552490234
    10. '```' → logprob: -10.327022552490234

Token 931: '.' (ID: 13)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3033697307109833
    2. '+=' → logprob: -1.4283697605133057
    3. '[A' → logprob: -4.428369522094727
    4. ' +=' → logprob: -5.178369522094727
    5. 'A' → logprob: -6.303369522094727
    6. '[p' → logprob: -6.428369522094727
    7. '[' → logprob: -7.803369522094727
    8. '   ' → logprob: -8.553369522094727
    9. ' dp' → logprob: -9.428369522094727
    10. '=' → logprob: -9.928369522094727

Token 932: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0001577698567416519
    2. ' dp' → logprob: -9.250157356262207
    3. '   ' → logprob: -9.875157356262207
    4. 'A' → logprob: -11.625157356262207
    5. '	dp' → logprob: -14.875157356262207
    6. '+' → logprob: -15.250157356262207
    7. '```' → logprob: -15.875157356262207
    8. ' A' → logprob: -16.250158309936523
    9. '(dp' → logprob: -16.625158309936523
    10. '[' → logprob: -17.125158309936523

Token 933: ' suppose' (ID: 35968)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.32083895802497864
    2. '+=' → logprob: -1.8208389282226562
    3. 'dp' → logprob: -2.4458389282226562
    4. '[:-' → logprob: -4.820838928222656
    5. '[:]' → logprob: -5.445838928222656
    6. '[p' → logprob: -5.695838928222656
    7. '-=' → logprob: -5.820838928222656
    8. 'p' → logprob: -5.945838928222656
    9. '=' → logprob: -6.195838928222656
    10. '[' → logprob: -6.695838928222656

Token 934: ' qu' (ID: 474)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11532459408044815
    2. ' dp' → logprob: -2.3653244972229004
    3. '[:' → logprob: -5.1153244972229
    4. '[' → logprob: -5.4903244972229
    5. '(dp' → logprob: -5.7403244972229
    6. '[p' → logprob: -7.4903244972229
    7. '[:]' → logprob: -7.7403244972229
    8. 'p' → logprob: -8.240324974060059
    9. ' that' → logprob: -9.740324974060059
    10. '	dp' → logprob: -9.740324974060059

Token 935: ''on' (ID: 25812)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8193795680999756
    2. '[p' → logprob: -1.0693795680999756
    3. '[:' → logprob: -2.3193795680999756
    4. '[' → logprob: -2.4443795680999756
    5. ' dp' → logprob: -4.194379806518555
    6. 'p' → logprob: -5.069379806518555
    7. '   ' → logprob: -6.069379806518555
    8. ' p' → logprob: -6.194379806518555
    9. 'e' → logprob: -6.569379806518555
    10. '[:]' → logprob: -7.319379806518555

Token 936: ' pousse' (ID: 167099)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.1330076903104782
    2. '[p' → logprob: -2.133007764816284
    3. 'p' → logprob: -5.258007526397705
    4. '[' → logprob: -7.883007526397705
    5. '[:]' → logprob: -8.258008003234863
    6. 'dp' → logprob: -9.008008003234863
    7. '+=' → logprob: -10.008008003234863
    8. '[:-' → logprob: -10.883008003234863
    9. ' p' → logprob: -11.758008003234863
    10. '+p' → logprob: -12.258008003234863

Token 937: ' tous' (ID: 10688)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13201327621936798
    2. ' dp' → logprob: -2.8820133209228516
    3. 'p' → logprob: -3.1320133209228516
    4. '[p' → logprob: -4.507013320922852
    5. ' p' → logprob: -4.757013320922852
    6. '[' → logprob: -6.382013320922852
    7. 'A' → logprob: -7.882013320922852
    8. '[:]' → logprob: -7.882013320922852
    9. '```' → logprob: -7.882013320922852
    10. '[:' → logprob: -8.132013320922852

Token 938: ' les' (ID: 1341)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3737373650074005
    2. '(dp' → logprob: -1.4987373352050781
    3. '[p' → logprob: -2.998737335205078
    4. '(p' → logprob: -4.123737335205078
    5. 'p' → logprob: -4.748737335205078
    6. ' dp' → logprob: -4.873737335205078
    7. '[' → logprob: -5.748737335205078
    8. '(' → logprob: -7.123737335205078
    9. '[:' → logprob: -7.123737335205078
    10. '[np' → logprob: -8.623737335205078

Token 939: ' éléments' (ID: 57375)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4921693205833435
    2. 'dp' → logprob: -1.3671693801879883
    3. ':p' → logprob: -2.7421693801879883
    4. '[:' → logprob: -3.3671693801879883
    5. ':' → logprob: -3.6171693801879883
    6. '[p' → logprob: -4.992169380187988
    7. 'np' → logprob: -8.992169380187988
    8. '[:]' → logprob: -8.992169380187988
    9. ':]' → logprob: -9.242169380187988
    10. '
' → logprob: -9.242169380187988

Token 940: ' avant' (ID: 13339)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.2709822654724121
    2. '[:' → logprob: -1.895982265472412
    3. 'p' → logprob: -2.520982265472412
    4. '[' → logprob: -5.270982265472412
    5. '[:]' → logprob: -7.145982265472412
    6. '[:-' → logprob: -7.770982265472412
    7. 'dp' → logprob: -8.27098274230957
    8. '```' → logprob: -9.89598274230957
    9. '[-' → logprob: -10.64598274230957
    10. '0' → logprob: -11.02098274230957

Token 941: ' '' (ID: 461)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004037202801555395
    2. ' p' → logprob: -5.879037380218506
    3. '[p' → logprob: -6.879037380218506
    4. '(p' → logprob: -9.629036903381348
    5. '```' → logprob: -9.754036903381348
    6. '   ' → logprob: -11.254036903381348
    7. '[:' → logprob: -11.629036903381348
    8. ' ' → logprob: -11.629036903381348
    9. 'dp' → logprob: -12.129036903381348
    10. '`' → logprob: -12.254036903381348

Token 942: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.6776029699249193e-05
    2. '```' → logprob: -11.50002670288086
    3. 'dp' → logprob: -12.25002670288086
    4. ' p' → logprob: -12.37502670288086
    5. '`' → logprob: -13.62502670288086
    6. 'N' → logprob: -13.75002670288086
    7. ''p' → logprob: -14.25002670288086
    8. '[p' → logprob: -14.37502670288086
    9. '#' → logprob: -14.50002670288086
    10. '(p' → logprob: -15.06252670288086

Token 943: ''' (ID: 6)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.016692383214831352
    2. '[p' → logprob: -4.141692161560059
    3. '[:]' → logprob: -8.766692161560059
    4. ':p' → logprob: -8.891692161560059
    5. 'p' → logprob: -9.141692161560059
    6. '[:-' → logprob: -9.266692161560059
    7. '[' → logprob: -10.016692161560059
    8. '   ' → logprob: -10.266692161560059
    9. ':' → logprob: -10.391692161560059
    10. '][:' → logprob: -11.266692161560059

Token 944: ' vers' (ID: 3640)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0010496005415916443
    2. '[:-' → logprob: -7.001049518585205
    3. '   ' → logprob: -9.751049995422363
    4. '[:]' → logprob: -10.126049995422363
    5. '[' → logprob: -11.001049995422363
    6. '[p' → logprob: -11.626049995422363
    7. 'dp' → logprob: -12.376049995422363
    8. '```' → logprob: -12.501049995422363
    9. '
' → logprob: -13.876049995422363
    10. ' [:' → logprob: -14.001049995422363

Token 945: ' la' (ID: 557)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.020162615925073624
    2. ':' → logprob: -4.520162582397461
    3. '0' → logprob: -6.020162582397461
    4. ' p' → logprob: -6.395162582397461
    5. 'dp' → logprob: -6.770162582397461
    6. '[:' → logprob: -6.770162582397461
    7. ':p' → logprob: -7.145162582397461
    8. ']' → logprob: -7.395162582397461
    9. ' :' → logprob: -8.770162582397461
    10. '```' → logprob: -8.895162582397461

Token 946: ' droite' (ID: 61428)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.09100175648927689
    2. 'right' → logprob: -3.0910017490386963
    3. ' p' → logprob: -4.466001987457275
    4. ' droite' → logprob: -4.841001987457275
    5. 'left' → logprob: -4.966001987457275
    6. '0' → logprob: -5.466001987457275
    7. '```' → logprob: -5.591001987457275
    8. ' right' → logprob: -5.966001987457275
    9. 'dp' → logprob: -6.466001987457275
    10. 'dro' → logprob: -7.966001987457275

Token 947: ',' (ID: 11)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.12096867710351944
    2. '   ' → logprob: -2.4959685802459717
    3. '[:-' → logprob: -4.120968818664551
    4. 'dp' → logprob: -4.370968818664551
    5. '[:]' → logprob: -6.870968818664551
    6. ' +=' → logprob: -7.620968818664551
    7. '[' → logprob: -7.870968818664551
    8. '+=' → logprob: -8.12096881866455
    9. ' dp' → logprob: -8.62096881866455
    10. '```' → logprob: -8.99596881866455

Token 948: ' ce' (ID: 2357)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8966318964958191
    2. '[:' → logprob: -1.1466319561004639
    3. ':' → logprob: -1.5216319561004639
    4. '+=' → logprob: -3.396631956100464
    5. '   ' → logprob: -4.271631717681885
    6. ' dp' → logprob: -6.271631717681885
    7. ':+' → logprob: -6.396631717681885
    8. '[:-' → logprob: -6.521631717681885
    9. ' :' → logprob: -7.021631717681885
    10. ' +=' → logprob: -7.271631717681885

Token 949: ' qui' (ID: 2780)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.9554132223129272
    2. '[:' → logprob: -1.3304132223129272
    3. 'dp' → logprob: -1.8304132223129272
    4. '+=' → logprob: -2.080413341522217
    5. '[:]' → logprob: -3.705413341522217
    6. '+' → logprob: -4.455413341522217
    7. ' +=' → logprob: -4.705413341522217
    8. '=' → logprob: -5.205413341522217
    9. 'p' → logprob: -5.455413341522217
    10. '[' → logprob: -5.455413341522217

Token 950: ' a' (ID: 261)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.21610575914382935
    2. 'dp' → logprob: -2.3411056995391846
    3. ' +=' → logprob: -2.4661056995391846
    4. ' dp' → logprob: -4.841105937957764
    5. ']+=' → logprob: -5.466105937957764
    6. '(dp' → logprob: -8.091105461120605
    7. '=' → logprob: -8.966105461120605
    8. '
' → logprob: -9.341105461120605
    9. '

' → logprob: -9.591105461120605
    10. '_dp' → logprob: -9.841105461120605

Token 951: ' aussi' (ID: 9894)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.35721033811569214
    2. 'dp' → logprob: -1.357210397720337
    3. ' +=' → logprob: -3.482210397720337
    4. '+=' → logprob: -4.482210159301758
    5. '	dp' → logprob: -7.857210159301758
    6. '(dp' → logprob: -8.107210159301758
    7. ' ' → logprob: -9.107210159301758
    8. '_dp' → logprob: -9.607210159301758
    9. '+' → logprob: -10.857210159301758
    10. ']+=' → logprob: -10.857210159301758

Token 952: ' un' (ID: 537)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6194080114364624
    2. ' +=' → logprob: -0.8694080114364624
    3. 'dp' → logprob: -3.869408130645752
    4. ' dp' → logprob: -5.244408130645752
    5. ']+=' → logprob: -5.494408130645752
    6. 'B' → logprob: -5.869408130645752
    7. ' un' → logprob: -5.869408130645752
    8. '+' → logprob: -6.369408130645752
    9. 'le' → logprob: -7.369408130645752
    10. ' ' → logprob: -7.619408130645752

Token 953: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.6700198650360107
    2. 'cout' → logprob: -0.7950198650360107
    3. ' coût' → logprob: -4.17002010345459
    4. 'c' → logprob: -4.17002010345459
    5. ' cout' → logprob: -5.67002010345459
    6. 'dp' → logprob: -6.92002010345459
    7. 'certain' → logprob: -7.67002010345459
    8. 'C' → logprob: -8.42002010345459
    9. '```' → logprob: -8.79502010345459
    10. 'cost' → logprob: -8.92002010345459

Token 954: '.
' (ID: 558)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.646769642829895
    2. 'dp' → logprob: -1.271769642829895
    3. ' +=' → logprob: -2.5217695236206055
    4. '[:' → logprob: -2.7717695236206055
    5. '   ' → logprob: -4.0217695236206055
    6. '[' → logprob: -4.1467695236206055
    7. '[:]' → logprob: -4.6467695236206055
    8. ' dp' → logprob: -5.3967695236206055
    9. '[:-' → logprob: -6.5217695236206055
    10. '=' → logprob: -6.7717695236206055

Token 955: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0036977010313421488
    2. '   ' → logprob: -6.003697872161865
    3. ' dp' → logprob: -6.753697872161865
    4. '	dp' → logprob: -9.878697395324707
    5. '```' → logprob: -13.628697395324707
    6. '[' → logprob: -14.128697395324707
    7. ' ' → logprob: -14.378697395324707
    8. '    ' → logprob: -15.753697395324707
    9. '  ' → logprob: -15.878697395324707
    10. '_dp' → logprob: -15.878697395324707

Token 956: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00048536903341300786
    2. ' dp' → logprob: -8.62548542022705
    3. '   ' → logprob: -8.87548542022705
    4. '+=' → logprob: -9.00048542022705
    5. '[:' → logprob: -10.50048542022705
    6. ' +=' → logprob: -12.50048542022705
    7. '	dp' → logprob: -12.87548542022705
    8. '```' → logprob: -13.00048542022705
    9. '[' → logprob: -13.37548542022705
    10. '+' → logprob: -13.87548542022705

Token 957: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00026729601086117327
    2. ' dp' → logprob: -8.875267028808594
    3. '   ' → logprob: -9.000267028808594
    4. '	dp' → logprob: -12.875267028808594
    5. '[:' → logprob: -14.625267028808594
    6. '```' → logprob: -14.875267028808594
    7. '0' → logprob: -15.875267028808594
    8. '    ' → logprob: -16.000267028808594
    9. ' ' → logprob: -16.375267028808594
    10. '       ' → logprob: -17.000267028808594

Token 958: ' ajoute' (ID: 91611)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0014232104877009988
    2. 'dp' → logprob: -6.626423358917236
    3. '[:-' → logprob: -10.501422882080078
    4. '[:]' → logprob: -10.626422882080078
    5. '+=' → logprob: -10.751422882080078
    6. '[' → logprob: -11.126422882080078
    7. 'p' → logprob: -13.251422882080078
    8. '[p' → logprob: -13.626422882080078
    9. ' dp' → logprob: -13.751422882080078
    10. ':' → logprob: -13.876422882080078

Token 959: ' le' (ID: 505)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6951392889022827
    2. ' A' → logprob: -0.6951392889022827
    3. ' dp' → logprob: -6.820139408111572
    4. 'dp' → logprob: -7.195139408111572
    5. '	A' → logprob: -10.070138931274414
    6. 'p' → logprob: -11.070138931274414
    7. ' ' → logprob: -11.070138931274414
    8. ' p' → logprob: -11.195138931274414
    9. '[' → logprob: -11.570138931274414
    10. ' a' → logprob: -11.695138931274414

Token 960: ' coût' (ID: 73109)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05497312173247337
    2. ' A' → logprob: -2.9299731254577637
    3. 'dp' → logprob: -9.804972648620605
    4. ' ' → logprob: -11.304972648620605
    5. ' dp' → logprob: -11.304972648620605
    6. 'p' → logprob: -13.054972648620605
    7. ' ' → logprob: -13.304972648620605
    8. '	A' → logprob: -13.679972648620605
    9. '```' → logprob: -13.992472648620605
    10. ' p' → logprob: -14.492472648620605

Token 961: ' A' (ID: 355)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.027283666655421257
    2. 'A' → logprob: -3.6522836685180664
    3. '[' → logprob: -8.027283668518066
    4. ' A' → logprob: -8.402283668518066
    5. 'p' → logprob: -9.277283668518066
    6. '[A' → logprob: -9.527283668518066
    7. '[:]' → logprob: -9.527283668518066
    8. '[:-' → logprob: -9.777283668518066
    9. '[p' → logprob: -10.277283668518066
    10. ' [:' → logprob: -10.402283668518066

Token 962: ' à' (ID: 1221)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0002111694193445146
    2. '[' → logprob: -8.875210762023926
    3. '[:-' → logprob: -10.375210762023926
    4. '   ' → logprob: -11.125210762023926
    5. '[:]' → logprob: -11.250210762023926
    6. 'dp' → logprob: -11.625210762023926
    7. ' [:' → logprob: -13.625210762023926
    8. ':' → logprob: -14.250210762023926
    9. '0' → logprob: -14.750210762023926
    10. '#' → logprob: -15.250210762023926

Token 963: ' toutes' (ID: 17502)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011449898593127728
    2. ' dp' → logprob: -4.511449813842773
    3. '[:' → logprob: -8.636449813842773
    4. ':' → logprob: -8.761449813842773
    5. '	dp' → logprob: -11.011449813842773
    6. '0' → logprob: -11.261449813842773
    7. '[:]' → logprob: -11.511449813842773
    8. ' :' → logprob: -11.886449813842773
    9. '(dp' → logprob: -12.886449813842773
    10. '   ' → logprob: -13.011449813842773

Token 964: ' les' (ID: 1341)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.04023250192403793
    2. 'dp' → logprob: -3.9152324199676514
    3. '(dp' → logprob: -4.1652326583862305
    4. '(:' → logprob: -6.2902326583862305
    5. ':' → logprob: -7.1652326583862305
    6. ' dp' → logprob: -8.04023265838623
    7. '(' → logprob: -8.54023265838623
    8. '0' → logprob: -8.79023265838623
    9. '[:-' → logprob: -8.91523265838623
    10. '	dp' → logprob: -9.04023265838623

Token 965: ' positions' (ID: 15897)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5811816453933716
    2. '[:' → logprob: -0.8311816453933716
    3. 'dp' → logprob: -5.706181526184082
    4. ' :' → logprob: -6.581181526184082
    5. ' dp' → logprob: -9.081181526184082
    6. '   ' → logprob: -9.831181526184082
    7. ':d' → logprob: -9.956181526184082
    8. ':p' → logprob: -10.206181526184082
    9. '[:]' → logprob: -10.331181526184082
    10. '0' → logprob: -10.456181526184082

Token 966: ' avant' (ID: 13339)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.00029279827140271664
    2. '[:-' → logprob: -9.000292778015137
    3. '   ' → logprob: -9.500292778015137
    4. '[' → logprob: -9.750292778015137
    5. '[:]' → logprob: -11.125292778015137
    6. ':' → logprob: -11.125292778015137
    7. '0' → logprob: -13.625292778015137
    8. ' [:' → logprob: -14.000292778015137
    9. '```' → logprob: -14.000292778015137
    10. 'p' → logprob: -14.625292778015137

Token 967: ' '' (ID: 461)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.024874646216630936
    2. '[:' → logprob: -4.149874687194824
    3. ' p' → logprob: -5.399874687194824
    4. ':p' → logprob: -5.774874687194824
    5. '[p' → logprob: -6.774874687194824
    6. ' :' → logprob: -11.149874687194824
    7. ':' → logprob: -11.399874687194824
    8. ' [:' → logprob: -12.524874687194824
    9. '<p' → logprob: -13.399874687194824
    10. '   ' → logprob: -13.399874687194824

Token 968: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00012368128227535635
    2. ' p' → logprob: -9.000123977661133
    3. '```' → logprob: -16.000123977661133
    4. '<p' → logprob: -17.500123977661133
    5. '[p' → logprob: -17.750123977661133
    6. '   ' → logprob: -17.875123977661133
    7. '`' → logprob: -18.000123977661133
    8. ':p' → logprob: -19.250123977661133
    9. ' ' → logprob: -19.375123977661133
    10. ''p' → logprob: -19.375123977661133

Token 969: ''' (ID: 6)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -5.3358446166384965e-05
    2. '   ' → logprob: -10.500053405761719
    3. '[' → logprob: -11.875053405761719
    4. '[:-' → logprob: -12.500053405761719
    5. '[:]' → logprob: -12.750053405761719
    6. 'p' → logprob: -12.875053405761719
    7. ':' → logprob: -13.000053405761719
    8. ' [:' → logprob: -13.250053405761719
    9. 'dp' → logprob: -13.375053405761719
    10. '[p' → logprob: -13.750053405761719

Token 970: ' (' (ID: 350)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.006385772489011288
    2. 'dp' → logprob: -5.131385803222656
    3. '   ' → logprob: -8.006385803222656
    4. '[' → logprob: -9.881385803222656
    5. ' dp' → logprob: -9.881385803222656
    6. '[:-' → logprob: -11.881385803222656
    7. ' [:' → logprob: -12.381385803222656
    8. '[:]' → logprob: -13.131385803222656
    9. '```' → logprob: -13.131385803222656
    10. ':' → logprob: -13.506385803222656

Token 971: 'c' (ID: 66)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06940751522779465
    2. 'dp' → logprob: -3.4444074630737305
    3. '[:' → logprob: -3.5694074630737305
    4. ' :' → logprob: -5.1944074630737305
    5. ' dp' → logprob: -6.9444074630737305
    6. '   ' → logprob: -8.56940746307373
    7. '0' → logprob: -9.31940746307373
    8. ':end' → logprob: -10.69440746307373
    9. ':s' → logprob: -10.81940746307373
    10. ':d' → logprob: -10.94440746307373

Token 972: ''est' (ID: 6616)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.007034212350845337
    2. 'p' → logprob: -5.1320343017578125
    3. ':' → logprob: -7.6320343017578125
    4. ':p' → logprob: -7.8820343017578125
    5. '[p' → logprob: -9.132034301757812
    6. 'dp' → logprob: -10.007034301757812
    7. '[' → logprob: -10.507034301757812
    8. ' :' → logprob: -10.632034301757812
    9. ' [:' → logprob: -11.132034301757812
    10. '0' → logprob: -11.882034301757812

Token 973: '-à' (ID: 56297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07394421100616455
    2. ':p' → logprob: -2.698944091796875
    3. ' :' → logprob: -6.323944091796875
    4. '[:' → logprob: -7.073944091796875
    5. 'p' → logprob: -7.448944091796875
    6. 'dp' → logprob: -8.573944091796875
    7. '0' → logprob: -9.073944091796875
    8. ':]' → logprob: -9.448944091796875
    9. ':
' → logprob: -9.573944091796875
    10. '   ' → logprob: -10.198944091796875

Token 974: '-dire' (ID: 76064)
  Prédit: ':p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':p' → logprob: -0.19262588024139404
    2. ':' → logprob: -2.0676259994506836
    3. 'p' → logprob: -3.0676259994506836
    4. ' :' → logprob: -6.442625999450684
    5. '0' → logprob: -7.942625999450684
    6. ' p' → logprob: -9.817625999450684
    7. ':m' → logprob: -10.317625999450684
    8. ':d' → logprob: -10.817625999450684
    9. ':s' → logprob: -11.192625999450684
    10. ':n' → logprob: -11.567625999450684

Token 975: ' de' (ID: 334)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.06325873732566833
    2. ':' → logprob: -2.938258647918701
    3. 'dp' → logprob: -4.938258647918701
    4. '   ' → logprob: -7.313258647918701
    5. ' :' → logprob: -8.56325912475586
    6. '0' → logprob: -8.93825912475586
    7. ' dp' → logprob: -10.06325912475586
    8. ':p' → logprob: -10.43825912475586
    9. ':d' → logprob: -11.18825912475586
    10. '[' → logprob: -11.31325912475586

Token 976: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04648907110095024
    2. '0' → logprob: -3.1714890003204346
    3. '[:' → logprob: -6.546489238739014
    4. ' :' → logprob: -7.046489238739014
    5. ':p' → logprob: -8.296488761901855
    6. ':s' → logprob: -8.421488761901855
    7. 'dp' → logprob: -9.171488761901855
    8. ':d' → logprob: -9.546488761901855
    9. ':index' → logprob: -9.671488761901855
    10. ':start' → logprob: -9.796488761901855

Token 977: '0' (ID: 15)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14474357664585114
    2. '0' → logprob: -2.0197436809539795
    3. '[:' → logprob: -7.2697434425354
    4. ' :' → logprob: -7.3947434425354
    5. 'dp' → logprob: -8.394743919372559
    6. ':s' → logprob: -9.144743919372559
    7. ':d' → logprob: -9.269743919372559
    8. ':index' → logprob: -10.269743919372559
    9. ':p' → logprob: -10.394743919372559
    10. ':start' → logprob: -10.394743919372559

Token 978: ' jusqu' (ID: 21961)
  Prédit: ':p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':p' → logprob: -0.0071073598228394985
    2. ':' → logprob: -5.007107257843018
    3. '[:' → logprob: -8.382107734680176
    4. ' :' → logprob: -9.257107734680176
    5. '   ' → logprob: -10.382107734680176
    6. 'p' → logprob: -11.382107734680176
    7. ':#' → logprob: -12.757107734680176
    8. 'dp' → logprob: -13.132107734680176
    9. ':`' → logprob: -13.132107734680176
    10. ':px' → logprob: -13.132107734680176

Token 979: ''à' (ID: 33688)
  Prédit: ':p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':p' → logprob: -0.27277493476867676
    2. 'p' → logprob: -2.1477749347686768
    3. ':' → logprob: -3.0227749347686768
    4. 'à' → logprob: -3.5227749347686768
    5. '   ' → logprob: -3.8977749347686768
    6. ' à' → logprob: -4.897774696350098
    7. '[:' → logprob: -5.272774696350098
    8. ' :' → logprob: -5.772774696350098
    9. '[p' → logprob: -5.897774696350098
    10. '```' → logprob: -6.022774696350098

Token 980: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20141831040382385
    2. ' p' → logprob: -1.7014182806015015
    3. '   ' → logprob: -13.201417922973633
    4. ' ' → logprob: -13.576417922973633
    5. ' ' → logprob: -14.701417922973633
    6. '[p' → logprob: -14.951417922973633
    7. '<p' → logprob: -14.951417922973633
    8. '	p' → logprob: -15.076417922973633
    9. '```' → logprob: -16.326417922973633
    10. '`' → logprob: -16.701417922973633

Token 981: '-' (ID: 12)
  Prédit: ':p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':p' → logprob: -0.09072798490524292
    2. '[:' → logprob: -2.5907280445098877
    3. 'p' → logprob: -4.590727806091309
    4. '[p' → logprob: -7.590727806091309
    5. '```' → logprob: -7.715727806091309
    6. ':' → logprob: -7.715727806091309
    7. '<p' → logprob: -9.340727806091309
    8. ']' → logprob: -9.965727806091309
    9. '][:' → logprob: -10.715727806091309
    10. ':]' → logprob: -11.215727806091309

Token 982: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05876430124044418
    2. ' p' → logprob: -3.6837642192840576
    3. '-' → logprob: -4.058764457702637
    4. ']' → logprob: -5.808764457702637
    5. ' -' → logprob: -6.058764457702637
    6. '```' → logprob: -6.058764457702637
    7. ' ' → logprob: -6.183764457702637
    8. '0' → logprob: -6.808764457702637
    9. '1' → logprob: -6.933764457702637
    10. ')' → logprob: -6.933764457702637

Token 983: ' inclus' (ID: 11891)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38361722230911255
    2. '[:' → logprob: -1.5086171627044678
    3. '   ' → logprob: -2.8836171627044678
    4. ')' → logprob: -4.383617401123047
    5. 'dp' → logprob: -4.508617401123047
    6. ']+=' → logprob: -4.883617401123047
    7. ':' → logprob: -6.508617401123047
    8. '[:]' → logprob: -6.508617401123047
    9. '+=' → logprob: -6.633617401123047
    10. ' ]' → logprob: -7.133617401123047

Token 984: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.938260555267334
    2. '[:' → logprob: -1.188260555267334
    3. '   ' → logprob: -1.813260555267334
    4. ']' → logprob: -2.313260555267334
    5. '[:]' → logprob: -4.313260555267334
    6. ']+=' → logprob: -4.813260555267334
    7. 'dp' → logprob: -5.438260555267334
    8. '[' → logprob: -5.563260555267334
    9. '[:-' → logprob: -6.438260555267334
    10. '```' → logprob: -6.688260555267334

Token 985: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.025264931842684746
    2. ' dp' → logprob: -4.025264739990234
    3. '[:' → logprob: -5.650264739990234
    4. '+=' → logprob: -6.025264739990234
    5. ' +=' → logprob: -6.900264739990234
    6. '[' → logprob: -9.150264739990234
    7. '   ' → logprob: -11.400264739990234
    8. '```' → logprob: -11.400264739990234
    9. '+' → logprob: -12.525264739990234
    10. '	dp' → logprob: -12.775264739990234

Token 986: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0016711341449990869
    2. '[:' → logprob: -6.751671314239502
    3. ' dp' → logprob: -7.876671314239502
    4. '   ' → logprob: -9.626670837402344
    5. '+=' → logprob: -10.251670837402344
    6. ' +=' → logprob: -11.876670837402344
    7. '```' → logprob: -12.126670837402344
    8. '[' → logprob: -12.501670837402344
    9. '[:]' → logprob: -14.001670837402344
    10. '	dp' → logprob: -14.251670837402344

Token 987: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.750001907348633
    3. '[:-' → logprob: -15.750001907348633
    4. '
' → logprob: -16.125001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '[:]' → logprob: -18.000001907348633
    7. ' ' → logprob: -18.750001907348633
    8. '#' → logprob: -19.000001907348633
    9. ' [:' → logprob: -19.125001907348633
    10. ':' → logprob: -19.250001907348633

Token 988: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.0484450437361374e-05
    2. ' p' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.00004005432129
    4. ' ' → logprob: -16.50004005432129
    5. '[p' → logprob: -17.12504005432129
    6. '	p' → logprob: -17.25004005432129
    7. '<p' → logprob: -17.62504005432129
    8. ' ' → logprob: -18.25004005432129
    9. '﻿' → logprob: -18.50004005432129
    10. '+p' → logprob: -18.50004005432129

Token 989: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.3816099464893341
    2. '+=' → logprob: -1.7566099166870117
    3. ']' → logprob: -2.0066099166870117
    4. ' +=' → logprob: -4.631609916687012
    5. ' ]' → logprob: -8.506609916687012
    6. '   ' → logprob: -8.756609916687012
    7. '+' → logprob: -10.256609916687012
    8. ')' → logprob: -11.506609916687012
    9. ' ' → logprob: -12.131609916687012
    10. '```' → logprob: -12.381609916687012

Token 990: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0009172935388050973
    2. ' +=' → logprob: -7.000917434692383
    3. ']+=' → logprob: -12.375917434692383
    4. '   ' → logprob: -14.125917434692383
    5. '+' → logprob: -14.250917434692383
    6. '=' → logprob: -15.750917434692383
    7. ' ' → logprob: -18.000917434692383
    8. '  ' → logprob: -18.500917434692383
    9. '```' → logprob: -18.625917434692383
    10. '    ' → logprob: -18.625917434692383

Token 991: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.000488110730657354
    2. ' A' → logprob: -7.62548828125
    3. 'a' → logprob: -17.50048828125
    4. '	A' → logprob: -18.00048828125
    5. ' ' → logprob: -18.25048828125
    6. '   ' → logprob: -19.50048828125
    7. '  ' → logprob: -20.62548828125
    8. ' ' → logprob: -20.75048828125
    9. '
' → logprob: -21.87548828125
    10. '(A' → logprob: -21.87548828125

Token 992: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 993: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 994: ' dp' (ID: 21546)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 995: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -5.200166469876422e-06
    2. '[:]' → logprob: -12.750004768371582
    3. '[' → logprob: -13.250004768371582
    4. '[:-' → logprob: -15.125004768371582
    5. '[p' → logprob: -16.7500057220459
    6. '[:,' → logprob: -16.8750057220459
    7. ':' → logprob: -17.0000057220459
    8. ' [:' → logprob: -17.2500057220459
    9. '
' → logprob: -18.6250057220459
    10. 'p' → logprob: -19.0000057220459

Token 996: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.7432603272027336e-06
    2. ' p' → logprob: -13.375001907348633
    3. '<p' → logprob: -16.750001907348633
    4. ']' → logprob: -17.500001907348633
    5. ':p' → logprob: -17.500001907348633
    6. '	p' → logprob: -17.625001907348633
    7. '[p' → logprob: -17.750001907348633
    8. '```' → logprob: -18.125001907348633
    9. '_p' → logprob: -18.500001907348633
    10. '   ' → logprob: -18.625001907348633

Token 997: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.9371750354766846
    2. '+=' → logprob: -1.0621750354766846
    3. ']' → logprob: -1.8121750354766846
    4. ']+=' → logprob: -2.4371750354766846
    5. ')' → logprob: -5.0621747970581055
    6. '+' → logprob: -6.0621747970581055
    7. ' ]' → logprob: -6.5621747970581055
    8. '[:' → logprob: -8.062174797058105
    9. '[:]' → logprob: -8.062174797058105
    10. '=' → logprob: -8.062174797058105

Token 998: ' sélection' (ID: 43472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 999: 'ne' (ID: 611)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.29852494597435
    2. '[:' → logprob: -1.6735249757766724
    3. ' +=' → logprob: -3.298524856567383
    4. '=' → logprob: -3.798524856567383
    5. '[:]' → logprob: -5.173524856567383
    6. ']+=' → logprob: -6.173524856567383
    7. '+' → logprob: -7.423524856567383
    8. '   ' → logprob: -7.548524856567383
    9. '[' → logprob: -7.798524856567383
    10. '[p' → logprob: -8.173524856567383

Token 1000: ' tous' (ID: 10688)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0011449799640104175
    2. ' dp' → logprob: -7.001144886016846
    3. '(dp' → logprob: -8.751145362854004
    4. 'all' → logprob: -10.376145362854004
    5. 'np' → logprob: -10.876145362854004
    6. ' ' → logprob: -12.376145362854004
    7. '...' → logprob: -12.626145362854004
    8. '	dp' → logprob: -12.751145362854004
    9. 'la' → logprob: -13.626145362854004
    10. '[:]' → logprob: -13.626145362854004

Token 1001: ' les' (ID: 1341)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.5621783137321472
    2. '(p' → logprob: -1.187178373336792
    3. '(dp' → logprob: -2.812178373336792
    4. 'dp' → logprob: -3.187178373336792
    5. '[p' → logprob: -4.937178134918213
    6. '(' → logprob: -4.937178134918213
    7. '[:]' → logprob: -5.562178134918213
    8. 'p' → logprob: -5.562178134918213
    9. '```' → logprob: -8.312178611755371
    10. ' (' → logprob: -8.562178611755371

Token 1002: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.006322643253952265
    2. ' indices' → logprob: -5.756322860717773
    3. 'élé' → logprob: -5.881322860717773
    4. 'indice' → logprob: -9.006322860717773
    5. 'positions' → logprob: -9.631322860717773
    6. 'indexes' → logprob: -10.506322860717773
    7. 'p' → logprob: -10.631322860717773
    8. 'ind' → logprob: -10.756322860717773
    9. ' éléments' → logprob: -11.006322860717773
    10. 'elements' → logprob: -11.131322860717773

Token 1003: ' avant' (ID: 13339)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.5948598384857178
    2. 'avant' → logprob: -1.7198598384857178
    3. '[' → logprob: -2.3448598384857178
    4. ' avant' → logprob: -2.9698598384857178
    5. '```' → logprob: -3.5948598384857178
    6. '0' → logprob: -3.7198598384857178
    7. ' jusqu' → logprob: -3.9698598384857178
    8. 'before' → logprob: -4.344860076904297
    9. 'jus' → logprob: -4.719860076904297
    10. ' before' → logprob: -5.344860076904297

Token 1004: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00017970333283301443
    2. ' p' → logprob: -8.625179290771484
    3. ' ' → logprob: -17.000179290771484
    4. '```' → logprob: -17.500179290771484
    5. '	p' → logprob: -18.000179290771484
    6. '   ' → logprob: -18.625179290771484
    7. ''p' → logprob: -18.875179290771484
    8. ' ' → logprob: -18.875179290771484
    9. '<p' → logprob: -19.250179290771484
    10. '`' → logprob: -19.375179290771484

Token 1005: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1006: ' et' (ID: 859)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4271532893180847
    2. ' +=' → logprob: -1.3021533489227295
    3. '<|end|>' → logprob: -2.6771533489227295
    4. ']+=' → logprob: -6.05215311050415
    5. '=' → logprob: -6.17715311050415
    6. ' ' → logprob: -7.17715311050415
    7. ')' → logprob: -7.55215311050415
    8. ' 
' → logprob: -8.427153587341309
    9. ' ' → logprob: -8.802153587341309
    10. '+' → logprob: -8.802153587341309

Token 1007: ' ajoute' (ID: 91611)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.17428572475910187
    2. 'dp' → logprob: -2.299285650253296
    3. ' +=' → logprob: -3.424285650253296
    4. ' dp' → logprob: -3.674285650253296
    5. ' ' → logprob: -7.299285888671875
    6. ']+=' → logprob: -8.049285888671875
    7. '=' → logprob: -8.924285888671875
    8. ' ' → logprob: -9.549285888671875
    9. '+' → logprob: -9.799285888671875
    10. 'A' → logprob: -10.174285888671875

Token 1008: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08920205384492874
    2. ' A' → logprob: -2.4642021656036377
    3. '=A' → logprob: -8.714201927185059
    4. '+' → logprob: -10.464201927185059
    5. '+A' → logprob: -10.589201927185059
    6. '=' → logprob: -11.214201927185059
    7. '+=' → logprob: -11.339201927185059
    8. ' +=' → logprob: -12.339201927185059
    9. ' ' → logprob: -12.714201927185059
    10. '```' → logprob: -12.839201927185059

Token 1009: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1010: ' chacune' (ID: 127465)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2329975813627243
    2. 'A' → logprob: -2.3579976558685303
    3. 'leur' → logprob: -3.4829976558685303
    4. ' chaque' → logprob: -3.9829976558685303
    5. 'cha' → logprob: -4.357997417449951
    6. 'eux' → logprob: -4.482997417449951
    7. ' dp' → logprob: -4.982997417449951
    8. 'ces' → logprob: -5.107997417449951
    9. 'ch' → logprob: -5.232997417449951
    10. ' A' → logprob: -5.482997417449951

Token 1011: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1012: ' ces' (ID: 10532)
  Prédit: 'ces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ces' → logprob: -0.6875095367431641
    2. 'leur' → logprob: -0.9375095367431641
    3. 'leurs' → logprob: -3.687509536743164
    4. 'l' → logprob: -3.812509536743164
    5. 'eux' → logprob: -3.937509536743164
    6. 'dp' → logprob: -4.187509536743164
    7. 'elles' → logprob: -4.312509536743164
    8. 'la' → logprob: -6.187509536743164
    9. '```' → logprob: -6.312509536743164
    10. 'cela' → logprob: -7.062509536743164

Token 1013: ' cases' (ID: 7911)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.014934438280761242
    2. 'cases' → logprob: -4.764934539794922
    3. 'élé' → logprob: -5.764934539794922
    4. 'val' → logprob: -6.264934539794922
    5. 'pos' → logprob: -6.764934539794922
    6. 'case' → logprob: -10.014934539794922
    7. ' positions' → logprob: -10.889934539794922
    8. 'cell' → logprob: -11.014934539794922
    9. 'position' → logprob: -11.764934539794922
    10. 'elements' → logprob: -12.139934539794922

Token 1014: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1015: 'dé' (ID: 98340)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010809401050209999
    2. '<|end|>' → logprob: -4.760809421539307
    3. ' )' → logprob: -6.885809421539307
    4. ']' → logprob: -7.010809421539307
    5. 'dp' → logprob: -10.135808944702148
    6. '[' → logprob: -10.510808944702148
    7. ' ' → logprob: -10.510808944702148
    8. '<|end|>' → logprob: -10.760808944702148
    9. ' ' → logprob: -10.885808944702148
    10. '])' → logprob: -11.010808944702148

Token 1016: 'placement' (ID: 17947)
  Prédit: 'placement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -1.1261075735092163
    2. 'lp' → logprob: -1.2511075735092163
    3. 'l' → logprob: -2.501107692718506
    4. 'f' → logprob: -3.626107692718506
    5. '```' → logprob: -3.626107692718506
    6. 'dp' → logprob: -3.751107692718506
    7. 'pl' → logprob: -3.876107692718506
    8. 'p' → logprob: -3.876107692718506
    9. 'claration' → logprob: -4.001107692718506
    10. '#' → logprob: -4.251107692718506

Token 1017: ' vers' (ID: 3640)
  Prédit: ' vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.025543872267007828
    2. ')' → logprob: -4.650543689727783
    3. 'vers' → logprob: -4.775543689727783
    4. ' à' → logprob: -5.775543689727783
    5. '<|end|>' → logprob: -6.150543689727783
    6. 'à' → logprob: -6.525543689727783
    7. ' )' → logprob: -8.525544166564941
    8. ' ' → logprob: -9.275544166564941
    9. ' ' → logprob: -9.275544166564941
    10. '```' → logprob: -10.150544166564941

Token 1018: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.007671575993299484
    2. 'dro' → logprob: -5.507671356201172
    3. ' la' → logprob: -6.382671356201172
    4. 'p' → logprob: -7.132671356201172
    5. '```' → logprob: -7.257671356201172
    6. ' ' → logprob: -9.007671356201172
    7. ' ' → logprob: -9.507671356201172
    8. 'l' → logprob: -9.757671356201172
    9. ' droite' → logprob: -10.882671356201172
    10. ' p' → logprob: -10.882671356201172

Token 1019: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.000924561289139092
    2. ' droite' → logprob: -7.125924587249756
    3. 'g' → logprob: -9.750924110412598
    4. 'right' → logprob: -11.000924110412598
    5. '```' → logprob: -11.250924110412598
    6. ' ' → logprob: -11.375924110412598
    7. ' ' → logprob: -11.625924110412598
    8. '-dro' → logprob: -12.375924110412598
    9. ' gauche' → logprob: -13.125924110412598
    10. 'Dro' → logprob: -13.250924110412598

Token 1020: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.469590491382405e-05
    2. ' )' → logprob: -9.87507438659668
    3. ').' → logprob: -11.75007438659668
    4. ')
' → logprob: -12.25007438659668
    5. ']' → logprob: -12.87507438659668
    6. '<|end|>' → logprob: -13.50007438659668
    7. ')#' → logprob: -13.87507438659668
    8. '#' → logprob: -14.12507438659668
    9. '```' → logprob: -14.12507438659668
    10. '[' → logprob: -14.37507438659668

Token 1021: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1022: ' À' (ID: 27643)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006738319061696529
    2. 'result' → logprob: -7.500673770904541
    3. 'answer' → logprob: -9.5006742477417
    4. 'ans' → logprob: -11.0006742477417
    5. 'min' → logprob: -11.3756742477417
    6. '#' → logprob: -11.8756742477417
    7. 'res' → logprob: -12.3756742477417
    8. '```' → logprob: -12.5006742477417
    9. 'cost' → logprob: -14.7506742477417
    10. '#print' → logprob: -14.7506742477417

Token 1023: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005390041507780552
    2. '#' → logprob: -5.380390167236328
    3. 'la' → logprob: -7.630390167236328
    4. '```' → logprob: -9.880390167236328
    5. '#print' → logprob: -10.380390167236328
    6. 'pr' → logprob: -10.380390167236328
    7. 'prin' → logprob: -10.505390167236328
    8. 'l' → logprob: -10.755390167236328
    9. 'for' → logprob: -11.005390167236328
    10. ' print' → logprob: -11.255390167236328

Token 1024: ' fin' (ID: 2131)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.370294846012257e-05
    2. 'prin' → logprob: -10.750043869018555
    3. '```' → logprob: -11.625043869018555
    4. 'pr' → logprob: -12.000043869018555
    5. ' print' → logprob: -13.250043869018555
    6. 'final' → logprob: -13.625043869018555
    7. '#' → logprob: -13.875043869018555
    8. 's' → logprob: -14.625043869018555
    9. 'prés' → logprob: -14.750043869018555
    10. 'bout' → logprob: -15.500043869018555

Token 1025: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007335089612752199
    2. '
' → logprob: -7.250733375549316
    3. ' print' → logprob: -11.500733375549316
    4. 'result' → logprob: -11.750733375549316
    5. '
' → logprob: -12.750733375549316
    6. 'min' → logprob: -13.375733375549316
    7. '  
' → logprob: -15.375733375549316
    8. '

' → logprob: -15.625733375549316
    9. '```' → logprob: -15.875733375549316
    10. 'answer' → logprob: -16.375734329223633

Token 1026: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0280383548888494e-06
    2. 'result' → logprob: -14.000000953674316
    3. ' print' → logprob: -15.875000953674316
    4. '```' → logprob: -16.750001907348633
    5. 'answer' → logprob: -18.125001907348633
    6. '
' → logprob: -19.125001907348633
    7. 'prin' → logprob: -19.250001907348633
    8. 'min' → logprob: -20.125001907348633
    9. 'pr' → logprob: -20.375001907348633
    10. '#print' → logprob: -21.500001907348633

Token 1027: ' cherche' (ID: 52345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00028374246903695166
    2. '#' → logprob: -8.375284194946289
    3. 'result' → logprob: -11.250284194946289
    4. 'min' → logprob: -11.750284194946289
    5. '
' → logprob: -11.875284194946289
    6. 'pr' → logprob: -12.375284194946289
    7. '#print' → logprob: -12.375284194946289
    8. 'answer' → logprob: -12.500284194946289
    9. 'prin' → logprob: -12.500284194946289
    10. ' print' → logprob: -12.750284194946289

Token 1028: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05978820472955704
    2. 'print' → logprob: -2.934788227081299
    3. 'np' → logprob: -5.684788227081299
    4. 'min' → logprob: -6.559788227081299
    5. ' dp' → logprob: -9.93478775024414
    6. 'result' → logprob: -11.43478775024414
    7. '(dp' → logprob: -11.43478775024414
    8. 'la' → logprob: -13.30978775024414
    9. 'ans' → logprob: -13.43478775024414
    10. 'int' → logprob: -13.55978775024414

Token 1029: ' coût' (ID: 73109)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0301250908523798
    2. 'dp' → logprob: -3.780125141143799
    3. 'min' → logprob: -5.780125141143799
    4. 'result' → logprob: -6.155125141143799
    5. 'np' → logprob: -6.780125141143799
    6. 'minimum' → logprob: -8.65512466430664
    7. ' print' → logprob: -9.15512466430664
    8. '```' → logprob: -9.28012466430664
    9. 'answer' → logprob: -10.03012466430664
    10. 'final' → logprob: -10.53012466430664

Token 1030: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.18485237658023834
    2. '[min' → logprob: -3.559852361679077
    3. 'minimum' → logprob: -3.559852361679077
    4. 'minimal' → logprob: -3.559852361679077
    5. '_min' → logprob: -3.684852361679077
    6. 'final' → logprob: -3.684852361679077
    7. '[np' → logprob: -5.059852600097656
    8. '=' → logprob: -5.309852600097656
    9. '[:]' → logprob: -5.559852600097656
    10. '=min' → logprob: -5.809852600097656

Token 1031: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15718086063861847
    2. 'result' → logprob: -2.4071807861328125
    3. 'min' → logprob: -3.5321807861328125
    4. 'dp' → logprob: -4.0321807861328125
    5. 'answer' → logprob: -5.6571807861328125
    6. 'ans' → logprob: -6.7821807861328125
    7. 'final' → logprob: -7.0321807861328125
    8. 'cost' → logprob: -7.5321807861328125
    9. 'minimum' → logprob: -7.6571807861328125
    10. '=' → logprob: -7.7821807861328125

Token 1032: ' dans' (ID: 2671)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.392824874026701e-05
    2. 'min' → logprob: -11.25003433227539
    3. 'result' → logprob: -11.25003433227539
    4. 'dp' → logprob: -12.37503433227539
    5. 'np' → logprob: -13.12503433227539
    6. '```' → logprob: -14.37503433227539
    7. ' print' → logprob: -15.00003433227539
    8. 'answer' → logprob: -15.37503433227539
    9. '
' → logprob: -15.75003433227539
    10. 'pr' → logprob: -16.25003433227539

Token 1033: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -8.061054359131958e-06
    2. ' dp' → logprob: -11.750007629394531
    3. '(dp' → logprob: -16.37500762939453
    4. '	dp' → logprob: -17.25000762939453
    5. 'la' → logprob: -17.87500762939453
    6. 'np' → logprob: -19.00000762939453
    7. '
' → logprob: -19.25000762939453
    8. 'd' → logprob: -19.62500762939453
    9. 'dt' → logprob: -19.75000762939453
    10. '```' → logprob: -20.25000762939453

Token 1034: ' tableau' (ID: 67053)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.8624639324116288e-06
    2. ' dp' → logprob: -13.500001907348633
    3. '(dp' → logprob: -15.875001907348633
    4. 'final' → logprob: -16.250001907348633
    5. 'result' → logprob: -16.875001907348633
    6. '[' → logprob: -17.625001907348633
    7. '	dp' → logprob: -18.125001907348633
    8. '
' → logprob: -18.250001907348633
    9. '```' → logprob: -18.500001907348633
    10. 'min' → logprob: -18.625001907348633

Token 1035: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.023452309891581535
    2. 'print' → logprob: -3.8984522819519043
    3. 'min' → logprob: -6.023452281951904
    4. '[' → logprob: -8.773452758789062
    5. '(dp' → logprob: -9.023452758789062
    6. ' dp' → logprob: -9.773452758789062
    7. 'result' → logprob: -9.898452758789062
    8. 'final' → logprob: -10.273452758789062
    9. '[min' → logprob: -10.398452758789062
    10. 'cost' → logprob: -10.773452758789062

Token 1036: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004458958748728037
    2. 'min' → logprob: -5.754458904266357
    3. '.min' → logprob: -6.879458904266357
    4. '[min' → logprob: -8.879459381103516
    5. 'np' → logprob: -10.254459381103516
    6. 'dp' → logprob: -11.129459381103516
    7. '.print' → logprob: -11.254459381103516
    8. 'result' → logprob: -11.379459381103516
    9. '[np' → logprob: -11.504459381103516
    10. '```' → logprob: -12.004459381103516

Token 1037: ' car' (ID: 1669)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009174126898869872
    2. 'result' → logprob: -7.000917434692383
    3. 'min' → logprob: -12.875917434692383
    4. 'answer' → logprob: -12.875917434692383
    5. ' print' → logprob: -14.625917434692383
    6. 'res' → logprob: -15.750917434692383
    7. 'ans' → logprob: -16.250917434692383
    8. 'np' → logprob: -16.875917434692383
    9. '```' → logprob: -17.625917434692383
    10. '
' → logprob: -18.250917434692383

Token 1038: ' plusieurs' (ID: 20875)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.064297824399546e-05
    2. 'np' → logprob: -10.625070571899414
    3. ' print' → logprob: -10.625070571899414
    4. 'min' → logprob: -11.375070571899414
    5. 'result' → logprob: -12.125070571899414
    6. 'dp' → logprob: -13.000070571899414
    7. 'answer' → logprob: -13.500070571899414
    8. '
' → logprob: -14.375070571899414
    9. '```' → logprob: -15.250070571899414
    10. 'ans' → logprob: -15.250070571899414

Token 1039: ' chemins' (ID: 192063)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.16841843724250793
    2. 'val' → logprob: -2.7934184074401855
    3. 'dp' → logprob: -3.5434184074401855
    4. 'options' → logprob: -4.0434184074401855
    5. 'poss' → logprob: -4.4184184074401855
    6. 'indices' → logprob: -5.1684184074401855
    7. '```' → logprob: -5.5434184074401855
    8. 'cases' → logprob: -5.6684184074401855
    9. 'possible' → logprob: -5.9184184074401855
    10. 'final' → logprob: -6.1684184074401855

Token 1040: '/m' (ID: 5712)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.9564592242240906
    2. 'min' → logprob: -1.5814592838287354
    3. '=' → logprob: -1.7064592838287354
    4. 'poss' → logprob: -3.0814592838287354
    5. '_possible' → logprob: -3.3314592838287354
    6. 'final' → logprob: -3.7064592838287354
    7. '#' → logprob: -3.8314592838287354
    8. 'dp' → logprob: -4.081459045410156
    9. 'pe' → logprob: -4.081459045410156
    10. '=min' → logprob: -4.206459045410156

Token 1041: 'é' (ID: 377)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.014861974865198135
    2. 'dp' → logprob: -5.014862060546875
    3. 'é' → logprob: -5.514862060546875
    4. 'ins' → logprob: -6.264862060546875
    5. 'ax' → logprob: -7.514862060546875
    6. 'min' → logprob: -8.264862060546875
    7. 'ethod' → logprob: -8.264862060546875
    8. 'ay' → logprob: -8.389862060546875
    9. 'positions' → logprob: -8.889862060546875
    10. '#' → logprob: -10.014862060546875

Token 1042: 'th' (ID: 404)
  Prédit: 'th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.0016225760336965322
    2. 'm' → logprob: -7.501622676849365
    3. 'can' → logprob: -7.751622676849365
    4. 'n' → logprob: -8.501622200012207
    5. 'mo' → logprob: -9.376622200012207
    6. 'tiers' → logprob: -9.626622200012207
    7. 't' → logprob: -10.126622200012207
    8. 'mé' → logprob: -10.626622200012207
    9. 'moire' → logprob: -10.751622200012207
    10. '#' → logprob: -10.876622200012207

Token 1043: 'odes' (ID: 3821)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.09699858725070953
    2. 'in' → logprob: -3.721998691558838
    3. 'odes' → logprob: -3.721998691558838
    4. 'min' → logprob: -4.596998691558838
    5. 'oires' → logprob: -4.596998691558838
    6. 'ines' → logprob: -4.971998691558838
    7. '```' → logprob: -5.221998691558838
    8. 'ores' → logprob: -6.346998691558838
    9. 'hores' → logprob: -7.221998691558838
    10. 'rites' → logprob: -7.221998691558838

Token 1044: ' peuvent' (ID: 21321)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8811137080192566
    2. 'print' → logprob: -1.1311137676239014
    3. 'dp' → logprob: -1.8811137676239014
    4. 'min' → logprob: -2.6311137676239014
    5. 'possible' → logprob: -4.381113529205322
    6. 'return' → logprob: -5.131113529205322
    7. 'for' → logprob: -5.381113529205322
    8. '=' → logprob: -6.006113529205322
    9. 'pour' → logprob: -6.006113529205322
    10. '#print' → logprob: -6.256113529205322

Token 1045: ' arriver' (ID: 78302)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.30060887336730957
    2. 'dp' → logprob: -1.6756088733673096
    3. 'être' → logprob: -3.6756088733673096
    4. 'about' → logprob: -4.3006086349487305
    5. 'print' → logprob: -4.8006086349487305
    6. 'final' → logprob: -5.4256086349487305
    7. 'yield' → logprob: -5.5506086349487305
    8. '```' → logprob: -5.9256086349487305
    9. 'be' → logprob: -6.0506086349487305
    10. 'avoir' → logprob: -6.8006086349487305

Token 1046: ' à' (ID: 1221)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4119749963283539
    2. 'dp' → logprob: -1.4119750261306763
    3. 'return' → logprob: -3.6619749069213867
    4. 'print' → logprob: -4.036974906921387
    5. '(dp' → logprob: -4.161974906921387
    6. '()' → logprob: -4.286974906921387
    7. '(min' → logprob: -5.036974906921387
    8. 'np' → logprob: -6.036974906921387
    9. '(' → logprob: -6.036974906921387
    10. 'final' → logprob: -6.411974906921387

Token 1047: ' des' (ID: 731)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07368921488523483
    2. 'min' → logprob: -2.6986892223358154
    3. 'np' → logprob: -6.323688983917236
    4. 'final' → logprob: -7.698688983917236
    5. ' dp' → logprob: -7.823688983917236
    6. '.' → logprob: -8.698689460754395
    7. '```' → logprob: -8.948689460754395
    8. 'la' → logprob: -9.073689460754395
    9. '0' → logprob: -9.448689460754395
    10. ' min' → logprob: -9.573689460754395

Token 1048: ' coûts' (ID: 116912)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24247202277183533
    2. 'min' → logprob: -1.7424720525741577
    3. 'minimum' → logprob: -3.992471933364868
    4. 'final' → logprob: -5.117472171783447
    5. 'val' → logprob: -5.617472171783447
    6. '```' → logprob: -5.742472171783447
    7. 'np' → logprob: -6.867472171783447
    8. 'value' → logprob: -6.867472171783447
    9. '[min' → logprob: -6.867472171783447
    10. 'minimal' → logprob: -7.117472171783447

Token 1049: ' différents' (ID: 36009)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07718770951032639
    2. 'final' → logprob: -2.8271877765655518
    3. 'fin' → logprob: -4.577187538146973
    4. 'minimum' → logprob: -6.827187538146973
    5. '[min' → logprob: -7.202187538146973
    6. '(min' → logprob: -7.327187538146973
    7. 'diff' → logprob: -7.452187538146973
    8. 'minimal' → logprob: -7.702187538146973
    9. 'dp' → logprob: -8.077187538146973
    10. '```' → logprob: -8.452187538146973

Token 1050: ' selon' (ID: 27571)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0022895447909832
    2. 'result' → logprob: -6.627289772033691
    3. 'answer' → logprob: -7.502289772033691
    4. 'min' → logprob: -8.002289772033691
    5. '
' → logprob: -10.252289772033691
    6. 'final' → logprob: -11.502289772033691
    7. 'minimum' → logprob: -11.877289772033691
    8. ' print' → logprob: -12.627289772033691
    9. 'ans' → logprob: -12.752289772033691
    10. '```' → logprob: -12.877289772033691

Token 1051: ' les' (ID: 1341)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002797153079882264
    2. 'la' → logprob: -6.2527971267700195
    3. 'l' → logprob: -8.25279712677002
    4. '```' → logprob: -8.62779712677002
    5. 'np' → logprob: -8.75279712677002
    6. ' dp' → logprob: -9.37779712677002
    7. 'which' → logprob: -9.37779712677002
    8. 'le' → logprob: -11.00279712677002
    9. '(dp' → logprob: -11.12779712677002
    10. 'final' → logprob: -11.37779712677002

Token 1052: ' choix' (ID: 28642)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04154905676841736
    2. 'np' → logprob: -4.666549205780029
    3. '0' → logprob: -5.166549205780029
    4. ' dp' → logprob: -5.291549205780029
    5. ']' → logprob: -5.416549205780029
    6. 'val' → logprob: -6.416549205780029
    7. 'final' → logprob: -6.541549205780029
    8. '```' → logprob: -6.541549205780029
    9. ')' → logprob: -6.791549205780029
    10. 'range' → logprob: -6.916549205780029

Token 1053: ' faits' (ID: 85451)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017636487260460854
    2. 'result' → logprob: -4.642636299133301
    3. 'min' → logprob: -5.142636299133301
    4. 'answer' → logprob: -6.892636299133301
    5. 'final' → logprob: -8.1426362991333
    6. 'ans' → logprob: -9.0176362991333
    7. 'dp' → logprob: -9.2676362991333
    8. 'res' → logprob: -9.3926362991333
    9. '=' → logprob: -9.5176362991333
    10. ' =' → logprob: -10.0176362991333

Token 1054: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0022419660817831755
    2. 'result' → logprob: -6.502242088317871
    3. 'min' → logprob: -7.627242088317871
    4. 'answer' → logprob: -8.627242088317871
    5. '
' → logprob: -10.752242088317871
    6. 'dp' → logprob: -11.502242088317871
    7. 'return' → logprob: -11.877242088317871
    8. 'minimum' → logprob: -12.002242088317871
    9. 'final' → logprob: -12.127242088317871
    10. 'np' → logprob: -12.627242088317871

Token 1055: 'dé' (ID: 98340)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.038569126278162
    2. 'min' → logprob: -3.538569211959839
    3. ')' → logprob: -5.16356897354126
    4. ' dp' → logprob: -7.28856897354126
    5. 'result' → logprob: -7.53856897354126
    6. ')
' → logprob: -7.66356897354126
    7. 'np' → logprob: -7.66356897354126
    8. ').' → logprob: -8.038569450378418
    9. 'final' → logprob: -9.288569450378418
    10. '`' → logprob: -9.538569450378418

Token 1056: 'placer' (ID: 58807)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9445839524269104
    2. 'dp' → logprob: -0.9445839524269104
    3. 'min' → logprob: -2.6945838928222656
    4. '```' → logprob: -3.3195838928222656
    5. 'termination' → logprob: -3.4445838928222656
    6. 'final' → logprob: -3.9445838928222656
    7. 'cision' → logprob: -4.194583892822266
    8. 'termin' → logprob: -4.194583892822266
    9. 'print' → logprob: -4.694583892822266
    10. 'f' → logprob: -5.319583892822266

Token 1057: ' à' (ID: 1221)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.11449111998081207
    2. 'dp' → logprob: -2.9894912242889404
    3. ')' → logprob: -3.2394912242889404
    4. '[:]' → logprob: -4.489490985870361
    5. '(p' → logprob: -6.489490985870361
    6. '(' → logprob: -6.489490985870361
    7. '[:' → logprob: -6.864490985870361
    8. '```' → logprob: -6.864490985870361
    9. ' dp' → logprob: -7.239490985870361
    10. ']' → logprob: -8.98949146270752

Token 1058: ' gauche' (ID: 58367)
  Prédit: ' droite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droite' → logprob: -0.703175961971283
    2. ' gauche' → logprob: -1.0781760215759277
    3. 'g' → logprob: -2.2031760215759277
    4. 'dro' → logprob: -2.9531760215759277
    5. ' ' → logprob: -7.578176021575928
    6. 'left' → logprob: -7.828176021575928
    7. 'right' → logprob: -7.828176021575928
    8. 'p' → logprob: -8.32817554473877
    9. '```' → logprob: -8.32817554473877
    10. 'l' → logprob: -8.82817554473877

Token 1059: '/d' (ID: 6662)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1597297191619873
    2. 'or' → logprob: -3.2847297191619873
    3. 'ou' → logprob: -3.6597297191619873
    4. ',' → logprob: -3.6597297191619873
    5. ' ou' → logprob: -3.7847297191619873
    6. '[:]' → logprob: -4.159729957580566
    7. '[:' → logprob: -4.784729957580566
    8. '```' → logprob: -5.659729957580566
    9. ').' → logprob: -6.409729957580566
    10. ')
' → logprob: -6.534729957580566

Token 1060: 'ro' (ID: 298)
  Prédit: 'ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.00565358716994524
    2. 'dro' → logprob: -6.130653381347656
    3. 'roit' → logprob: -6.380653381347656
    4. 'right' → logprob: -7.005653381347656
    5. ' droite' → logprob: -7.255653381347656
    6. '```' → logprob: -10.505653381347656
    7. 'roits' → logprob: -10.505653381347656
    8. 're' → logprob: -11.130653381347656
    9. 'roi' → logprob: -11.130653381347656
    10. 'rop' → logprob: -11.130653381347656

Token 1061: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.13256417214870453
    2. 'ro' → logprob: -2.632564067840576
    3. 'roit' → logprob: -3.132564067840576
    4. '```' → logprob: -5.382564067840576
    5. 'ites' → logprob: -6.757564067840576
    6. ')' → logprob: -6.882564067840576
    7. ']' → logprob: -7.132564067840576
    8. 'it' → logprob: -8.632564544677734
    9. 'ight' → logprob: -9.382564544677734
    10. '#' → logprob: -9.382564544677734

Token 1062: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07909522950649261
    2. ').' → logprob: -2.9540951251983643
    3. 'or' → logprob: -4.454095363616943
    4. ')
' → logprob: -5.204095363616943
    5. '])' → logprob: -6.579095363616943
    6. ' or' → logprob: -6.704095363616943
    7. '))' → logprob: -7.454095363616943
    8. '[' → logprob: -7.579095363616943
    9. '[:' → logprob: -7.829095363616943
    10. 'dp' → logprob: -7.954095363616943

Token 1063: ' rien' (ID: 23082)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.8701081275939941
    2. 'ne' → logprob: -1.3701081275939941
    3. 'faire' → logprob: -2.745108127593994
    4. '#' → logprob: -3.245108127593994
    5. 'r' → logprob: -3.495108127593994
    6. 'reste' → logprob: -3.745108127593994
    7. 'dro' → logprob: -3.745108127593994
    8. ' rester' → logprob: -3.870108127593994
    9. 'rest' → logprob: -3.995108127593994
    10. ' ne' → logprob: -3.995108127593994

Token 1064: ' faire' (ID: 8119)
  Prédit: '.min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.min' → logprob: -0.41720277070999146
    2. 'min' → logprob: -1.4172027111053467
    3. ')' → logprob: -3.5422027111053467
    4. ').' → logprob: -3.5422027111053467
    5. '[min' → logprob: -4.167202949523926
    6. '.' → logprob: -4.667202949523926
    7. '=min' → logprob: -6.042202949523926
    8. '```' → logprob: -6.042202949523926
    9. ')
' → logprob: -6.292202949523926
    10. 'done' → logprob: -6.292202949523926

Token 1065: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07610070705413818
    2. 'print' → logprob: -2.9511008262634277
    3. 'min' → logprob: -4.826100826263428
    4. ').' → logprob: -4.951100826263428
    5. 'dp' → logprob: -5.951100826263428
    6. '.min' → logprob: -6.326100826263428
    7. '.' → logprob: -7.576100826263428
    8. 'return' → logprob: -8.07610034942627
    9. ')
' → logprob: -8.70110034942627
    10. 'final' → logprob: -8.82610034942627

Token 1066: 'answer' (ID: 17021)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010447168024256825
    2. 'result' → logprob: -6.876044750213623
    3. 'answer' → logprob: -12.001044273376465
    4. '```' → logprob: -13.251044273376465
    5. 'min' → logprob: -13.376044273376465
    6. 'res' → logprob: -14.251044273376465
    7. 'ans' → logprob: -14.376044273376465
    8. ' print' → logprob: -15.001044273376465
    9. 'pr' → logprob: -15.626044273376465
    10. 'np' → logprob: -15.751044273376465

Token 1067: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869413137435913
    2. ' =' → logprob: -1.1369413137435913
    3. '=np' → logprob: -9.761940956115723
    4. '_' → logprob: -12.136940956115723
    5. 'dp' → logprob: -13.136940956115723
    6. '[' → logprob: -13.761940956115723
    7. '_=' → logprob: -13.886940956115723
    8. '.' → logprob: -14.761940956115723
    9. '=
' → logprob: -14.761940956115723
    10. '.=' → logprob: -15.011940956115723

Token 1068: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018161529675126076
    2. ' dp' → logprob: -4.018161296844482
    3. 'np' → logprob: -11.51816177368164
    4. 'int' → logprob: -14.39316177368164
    5. ' np' → logprob: -14.76816177368164
    6. '(dp' → logprob: -15.26816177368164
    7. '	dp' → logprob: -15.51816177368164
    8. 'min' → logprob: -15.89316177368164
    9. ' ' → logprob: -16.76816177368164
    10. ' int' → logprob: -17.89316177368164

Token 1069: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -2.45848218582978e-06
    2. 'min' → logprob: -13.25000286102295
    3. '.' → logprob: -14.62500286102295
    4. '[min' → logprob: -16.500001907348633
    5. ' .' → logprob: -16.750001907348633
    6. '.Min' → logprob: -17.875001907348633
    7. '.max' → logprob: -18.625001907348633
    8. '[np' → logprob: -19.625001907348633
    9. '_min' → logprob: -20.375001907348633
    10. '.final' → logprob: -20.625001907348633

Token 1070: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.967624019831419e-05
    2. '()
' → logprob: -10.250060081481934
    3. '(' → logprob: -11.125060081481934
    4. ' ()' → logprob: -12.125060081481934
    5. '()]' → logprob: -13.875060081481934
    6. '()`' → logprob: -14.375060081481934
    7. '()\' → logprob: -14.375060081481934
    8. '()

' → logprob: -14.750060081481934
    9. '()+' → logprob: -15.250060081481934
    10. '().' → logprob: -15.375060081481934

Token 1071: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1072: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1073: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.919942486798391e-05
    2. '<|end|>' → logprob: -10.125059127807617
    3. ' print' → logprob: -11.250059127807617
    4. '
' → logprob: -12.500059127807617
    5. '(print' → logprob: -14.375059127807617
    6. '```' → logprob: -14.375059127807617
    7. '#print' → logprob: -14.375059127807617
    8. ')' → logprob: -15.250059127807617
    9. 'pr' → logprob: -15.875059127807617
    10. 'answer' → logprob: -16.875059127807617

Token 1074: ' cherche' (ID: 52345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005537479883059859
    2. '.print' → logprob: -7.750553607940674
    3. '#print' → logprob: -9.500554084777832
    4. '.' → logprob: -10.625554084777832
    5. '#' → logprob: -11.500554084777832
    6. ' print' → logprob: -12.500554084777832
    7. 'min' → logprob: -12.500554084777832
    8. '=' → logprob: -13.500554084777832
    9. '.println' → logprob: -13.625554084777832
    10. '_print' → logprob: -14.000554084777832

Token 1075: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -5.7292167184641585e-05
    2. '<|end|>' → logprob: -10.750057220458984
    3. '()
' → logprob: -10.875057220458984
    4. ' ()' → logprob: -12.500057220458984
    5. '()<' → logprob: -13.125057220458984
    6. '(' → logprob: -13.250057220458984
    7. ')' → logprob: -13.500057220458984
    8. '())' → logprob: -13.625057220458984
    9. '()\' → logprob: -13.750057220458984
    10. '().' → logprob: -13.875057220458984

Token 1076: ' valeur' (ID: 41664)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.11500649899244308
    2. '.min' → logprob: -2.240006446838379
    3. '()' → logprob: -7.490006446838379
    4. '.' → logprob: -7.615006446838379
    5. ' min' → logprob: -7.740006446838379
    6. 'minimum' → logprob: -8.115006446838379
    7. '(min' → logprob: -8.865006446838379
    8. '<|end|>' → logprob: -9.490006446838379
    9. 'minimal' → logprob: -10.365006446838379
    10. '_min' → logprob: -10.740006446838379

Token 1077: ' minimale' (ID: 143217)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1078: ' dans' (ID: 2671)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39309462904930115
    2. '<|end|>' → logprob: -1.1430946588516235
    3. '()
' → logprob: -6.268094539642334
    4. ')' → logprob: -6.518094539642334
    5. '(' → logprob: -7.018094539642334
    6. '```' → logprob: -7.518094539642334
    7. '<|end|>' → logprob: -7.518094539642334
    8. '
' → logprob: -7.893094539642334
    9. '#' → logprob: -8.768095016479492
    10. '())' → logprob: -9.893095016479492

Token 1079: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0007553085451945662
    2. ' dp' → logprob: -7.250755310058594
    3. '(dp' → logprob: -10.000755310058594
    4. 'answer' → logprob: -16.750755310058594
    5. '	dp' → logprob: -19.125755310058594
    6. '_dp' → logprob: -20.250755310058594
    7. '(' → logprob: -20.750755310058594
    8. ')' → logprob: -21.250755310058594
    9. 'd' → logprob: -21.375755310058594
    10. ' answer' → logprob: -21.500755310058594

Token 1080: ' tableau' (ID: 67053)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004031737335026264
    2. '(dp' → logprob: -6.004031658172607
    3. ' dp' → logprob: -7.129031658172607
    4. ')' → logprob: -8.004032135009766
    5. 'answer' → logprob: -8.129032135009766
    6. '()' → logprob: -10.504032135009766
    7. '```' → logprob: -10.754032135009766
    8. 'array' → logprob: -11.379032135009766
    9. ']' → logprob: -11.754032135009766
    10. '(' → logprob: -11.754032135009766

Token 1081: ' dp' (ID: 21546)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014648657524958253
    2. 'dp' → logprob: -7.50146484375
    3. '<|end|>' → logprob: -8.25146484375
    4. '(answer' → logprob: -8.75146484375
    5. '(dp' → logprob: -8.75146484375
    6. '()
' → logprob: -9.62646484375
    7. ')' → logprob: -9.62646484375
    8. 'answer' → logprob: -9.75146484375
    9. '()\' → logprob: -10.75146484375
    10. '```' → logprob: -10.87646484375

Token 1082: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1083: ' qui' (ID: 2780)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43615227937698364
    2. 'print' → logprob: -1.6861522197723389
    3. '<|end|>' → logprob: -2.311152219772339
    4. '
' → logprob: -3.061152219772339
    5. '```' → logprob: -4.686152458190918
    6. '\n' → logprob: -4.936152458190918
    7. '#' → logprob: -6.186152458190918
    8. '#print' → logprob: -7.186152458190918
    9. '<|end|>' → logprob: -7.936152458190918
    10. '()' → logprob: -8.061152458190918

Token 1084: ' représente' (ID: 88912)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07830563187599182
    2. '=' → logprob: -3.578305721282959
    3. '#' → logprob: -3.703305721282959
    4. '.print' → logprob: -4.453305721282959
    5. '#print' → logprob: -4.953305721282959
    6. ' print' → logprob: -6.328305721282959
    7. '.' → logprob: -7.328305721282959
    8. ' =' → logprob: -7.828305721282959
    9. '```' → logprob: -7.828305721282959
    10. ')' → logprob: -8.5783052444458

Token 1085: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0035056343767791986
    2. ' le' → logprob: -6.128505706787109
    3. 'la' → logprob: -6.878505706787109
    4. 'co' → logprob: -8.25350570678711
    5. 'the' → logprob: -11.12850570678711
    6. 'les' → logprob: -12.25350570678711
    7. 'l' → logprob: -12.37850570678711
    8. ' la' → logprob: -13.12850570678711
    9. 'cost' → logprob: -13.87850570678711
    10. '-le' → logprob: -14.62850570678711

Token 1086: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.017658274620771408
    2. 'cout' → logprob: -4.642658233642578
    3. 'cost' → logprob: -5.767658233642578
    4. 'minimum' → logprob: -6.142658233642578
    5. ' coût' → logprob: -6.892658233642578
    6. '#' → logprob: -6.892658233642578
    7. ' #' → logprob: -8.642658233642578
    8. '```' → logprob: -9.517658233642578
    9. 'print' → logprob: -9.767658233642578
    10. 'me' → logprob: -9.892658233642578

Token 1087: ' minimal' (ID: 19957)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1088: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000850605487357825
    2. ' print' → logprob: -7.500850677490234
    3. '<|end|>' → logprob: -8.750850677490234
    4. '#print' → logprob: -9.875850677490234
    5. '.print' → logprob: -10.625850677490234
    6. '-print' → logprob: -10.750850677490234
    7. '(print' → logprob: -10.750850677490234
    8. '#' → logprob: -11.750850677490234
    9. '
' → logprob: -12.000850677490234
    10. '```' → logprob: -13.125850677490234

Token 1089: ' arranger' (ID: 175841)
  Prédit: 'ré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ré' → logprob: -1.3624378442764282
    2. 'arr' → logprob: -1.9874378442764282
    3. 'placer' → logprob: -2.1124377250671387
    4. 'ob' → logprob: -2.2374377250671387
    5. 'rés' → logprob: -2.3624377250671387
    6. 'effect' → logprob: -2.7374377250671387
    7. 'final' → logprob: -2.9874377250671387
    8. 'termin' → logprob: -2.9874377250671387
    9. 'tout' → logprob: -3.7374377250671387
    10. 'compl' → logprob: -3.9874377250671387

Token 1090: ' la' (ID: 557)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.05232670530676842
    2. 'la' → logprob: -3.0523266792297363
    3. 'dp' → logprob: -6.052326679229736
    4. 'the' → logprob: -7.802326679229736
    5. '```' → logprob: -8.302327156066895
    6. 'N' → logprob: -8.677327156066895
    7. '#' → logprob: -8.677327156066895
    8. ' P' → logprob: -9.427327156066895
    9. 'le' → logprob: -9.677327156066895
    10. ')' → logprob: -9.927327156066895

Token 1091: ' sé' (ID: 7462)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.01656927913427353
    2. 'P' → logprob: -4.766569137573242
    3. 'sequence' → logprob: -4.891569137573242
    4. 's' → logprob: -8.766569137573242
    5. '```' → logprob: -9.641569137573242
    6. 'suite' → logprob: -9.766569137573242
    7. '#' → logprob: -10.391569137573242
    8. 'p' → logprob: -10.891569137573242
    9. 'N' → logprob: -11.016569137573242
    10. 'sequ' → logprob: -11.391569137573242

Token 1092: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -3.2020991056924686e-05
    2. 'QUENCE' → logprob: -11.000032424926758
    3. '#' → logprob: -11.625032424926758
    4. 'q' → logprob: -12.250032424926758
    5. 'rie' → logprob: -14.875032424926758
    6. '`' → logprob: -15.375032424926758
    7. 'que' → logprob: -15.750032424926758
    8. 'quences' → logprob: -15.875032424926758
    9. '```' → logprob: -16.000032424926758
    10. '
' → logprob: -16.125032424926758

Token 1093: ' selon' (ID: 27571)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.64708495605737e-05
    2. '(print' → logprob: -10.125066757202148
    3. ')' → logprob: -11.375066757202148
    4. ' print' → logprob: -11.500066757202148
    5. '(' → logprob: -13.500066757202148
    6. '```' → logprob: -13.625066757202148
    7. '#' → logprob: -14.250066757202148
    8. '.print' → logprob: -14.500066757202148
    9. '#print' → logprob: -15.000066757202148
    10. '-print' → logprob: -15.000066757202148

Token 1094: ' les' (ID: 1341)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.14819703996181488
    2. 'les' → logprob: -2.1481969356536865
    3. 'le' → logprob: -4.023197174072266
    4. 'l' → logprob: -7.273197174072266
    5. '#' → logprob: -7.523197174072266
    6. 'len' → logprob: -7.648197174072266
    7. ' les' → logprob: -8.023197174072266
    8. 'A' → logprob: -8.148197174072266
    9. 'p' → logprob: -8.648197174072266
    10. ' la' → logprob: -8.773197174072266

Token 1095: ' règles' (ID: 67042)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.22234587371349335
    2. 'cho' → logprob: -3.2223458290100098
    3. 'contra' → logprob: -3.4723458290100098
    4. 'criter' → logprob: -3.4723458290100098
    5. 'contr' → logprob: -3.5973458290100098
    6. 'crit' → logprob: -4.22234582901001
    7. 'constraints' → logprob: -4.22234582901001
    8. 'cons' → logprob: -4.72234582901001
    9. ' contraintes' → logprob: -4.97234582901001
    10. 'instructions' → logprob: -5.47234582901001

Token 1096: ' données' (ID: 30580)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1097: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1098: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.456358823925257e-05
    2. '<|end|>' → logprob: -9.875064849853516
    3. ')' → logprob: -12.375064849853516
    4. ' print' → logprob: -12.875064849853516
    5. '#print' → logprob: -13.000064849853516
    6. '
' → logprob: -13.125064849853516
    7. '#' → logprob: -13.875064849853516
    8. 'pr' → logprob: -15.125064849853516
    9. '```' → logprob: -15.250064849853516
    10. 'answer' → logprob: -15.500064849853516

Token 1099: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.04859680309891701
    2. '(' → logprob: -3.0485968589782715
    3. '()' → logprob: -12.798596382141113
    4. ' (' → logprob: -12.923596382141113
    5. '(ans' → logprob: -13.048596382141113
    6. '(question' → logprob: -13.923596382141113
    7. 'answer' → logprob: -15.548596382141113
    8. '(address' → logprob: -15.673596382141113
    9. '('' → logprob: -15.673596382141113
    10. '(
' → logprob: -15.798596382141113

Token 1100: ')' (ID: 8)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.32657256722450256
    2. ')' → logprob: -1.3265725374221802
    3. '()' → logprob: -4.326572418212891
    4. ' )' → logprob: -12.20157241821289
    5. '(' → logprob: -12.82657241821289
    6. ' ())' → logprob: -13.70157241821289
    7. '())
' → logprob: -15.32657241821289
    8. ')`' → logprob: -15.57657241821289
    9. '))' → logprob: -15.95157241821289
    10. '）' → logprob: -16.32657241821289

Token 1101: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1102: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1103: ' Aff' (ID: 13741)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1104: 'iche' (ID: 7509)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.9677515029907227
    2. '()' → logprob: -1.4677515029907227
    3. 'print' → logprob: -1.7177515029907227
    4. '#' → logprob: -3.0927515029907227
    5. 'iche' → logprob: -3.0927515029907227
    6. 'ich' → logprob: -3.3427515029907227
    7. 'f' → logprob: -3.7177515029907227
    8. 'ichage' → logprob: -3.7177515029907227
    9. '())' → logprob: -4.717751502990723
    10. ')' → logprob: -5.092751502990723

Token 1105: ' le' (ID: 505)
  Prédit: '(answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.00017302791820839047
    2. 'answer' → logprob: -8.75017261505127
    3. '()' → logprob: -11.87517261505127
    4. '(' → logprob: -11.87517261505127
    5. '(ans' → logprob: -14.50017261505127
    6. '(question' → logprob: -16.625173568725586
    7. '(
' → logprob: -17.250173568725586
    8. '	answer' → logprob: -18.500173568725586
    9. ' answer' → logprob: -18.750173568725586
    10. '```' → logprob: -18.875173568725586

Token 1106: ' résultat' (ID: 62556)
  Prédit: '(answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.13250476121902466
    2. 'answer' → logprob: -2.13250470161438
    3. ' answer' → logprob: -6.757504940032959
    4. '(' → logprob: -6.757504940032959
    5. 'result' → logprob: -7.132504940032959
    6. 'final' → logprob: -8.0075044631958
    7. '()' → logprob: -8.1325044631958
    8. 'cost' → logprob: -8.2575044631958
    9. 's' → logprob: -8.3825044631958
    10. 'r' → logprob: -8.8825044631958

Token 1107: ' final' (ID: 1721)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1108: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1109: ' c' (ID: 274)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1110: ''est' (ID: 6616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4655793309211731
    2. ''est' → logprob: -1.3405792713165283
    3. '```' → logprob: -3.5905792713165283
    4. 'ont' → logprob: -3.8405792713165283
    5. 'ode' → logprob: -4.090579509735107
    6. ''''' → logprob: -4.590579509735107
    7. '_code' → logprob: -4.965579509735107
    8. ''' → logprob: -5.215579509735107
    9. 'à' → logprob: -5.965579509735107
    10. 'code' → logprob: -5.965579509735107

Token 1111: '-à' (ID: 56297)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1791006177663803
    2. ')' → logprob: -2.929100513458252
    3. '(answer' → logprob: -3.679100513458252
    4. '#' → logprob: -3.929100513458252
    5. 'answer' → logprob: -3.929100513458252
    6. '```' → logprob: -3.929100513458252
    7. '(' → logprob: -5.179100513458252
    8. '("")' → logprob: -5.554100513458252
    9. 'a' → logprob: -5.679100513458252
    10. '.' → logprob: -5.804100513458252

Token 1112: '-dire' (ID: 76064)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.2688960134983063
    2. 'à' → logprob: -1.6438959836959839
    3. '#' → logprob: -3.8938961029052734
    4. 't' → logprob: -4.268896102905273
    5. '-à' → logprob: -6.143896102905273
    6. 'la' → logprob: -6.393896102905273
    7. 'a' → logprob: -6.768896102905273
    8. 'ce' → logprob: -7.268896102905273
    9. ' tout' → logprob: -7.268896102905273
    10. 'l' → logprob: -7.768896102905273

Token 1113: ' le' (ID: 505)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.00017505438881926239
    2. '(answer' → logprob: -9.000175476074219
    3. ' answer' → logprob: -9.875175476074219
    4. 'dp' → logprob: -15.750175476074219
    5. '	answer' → logprob: -17.00017547607422
    6. 'int' → logprob: -17.12517547607422
    7. '```' → logprob: -18.25017547607422
    8. '
' → logprob: -18.50017547607422
    9. '(' → logprob: -19.12517547607422
    10. '.answer' → logprob: -19.37517547607422

Token 1114: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.004339321982115507
    2. 'cout' → logprob: -5.879339218139648
    3. ' coût' → logprob: -7.254339218139648
    4. 'answer' → logprob: -8.254339218139648
    5. 'cost' → logprob: -8.504339218139648
    6. '#' → logprob: -8.629339218139648
    7. 'minimum' → logprob: -9.129339218139648
    8. 'c' → logprob: -11.254339218139648
    9. '\n' → logprob: -11.629339218139648
    10. '```' → logprob: -11.879339218139648

Token 1115: ' minimal' (ID: 19957)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1116: ' trouvé' (ID: 60081)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1117: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1118: ' traiter' (ID: 105852)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.2037055790424347
    2. 'ré' → logprob: -1.9537055492401123
    3. ' résoudre' → logprob: -4.328705787658691
    4. ' arranger' → logprob: -4.328705787658691
    5. 'l' → logprob: -5.328705787658691
    6. '#' → logprob: -5.828705787658691
    7. 'organ' → logprob: -6.578705787658691
    8. 'rés' → logprob: -7.078705787658691
    9. ' accompl' → logprob: -7.078705787658691
    10. 'r' → logprob: -7.578705787658691

Token 1119: ' la' (ID: 557)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.06663192808628082
    2. ')' → logprob: -3.066632032394409
    3. '(answer' → logprob: -4.19163179397583
    4. '<|end|>' → logprob: -6.81663179397583
    5. 'the' → logprob: -7.31663179397583
    6. '```' → logprob: -8.066632270812988
    7. '0' → logprob: -8.316632270812988
    8. ' answer' → logprob: -8.691632270812988
    9. '")' → logprob: -10.066632270812988
    10. '#' → logprob: -10.316632270812988

Token 1120: ' sé' (ID: 7462)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.08921873569488525
    2. 'sequence' → logprob: -3.7142186164855957
    3. 'code' → logprob: -3.7142186164855957
    4. ' problème' → logprob: -4.339218616485596
    5. 'sé' → logprob: -4.589218616485596
    6. 'P' → logprob: -5.964218616485596
    7. '#' → logprob: -6.089218616485596
    8. '```' → logprob: -6.214218616485596
    9. 'proble' → logprob: -6.464218616485596
    10. 'p' → logprob: -6.714218616485596

Token 1121: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -6.630610641877865e-06
    2. 'QUENCE' → logprob: -12.625006675720215
    3. 'q' → logprob: -13.000006675720215
    4. '#' → logprob: -14.250006675720215
    5. 'quences' → logprob: -16.1250057220459
    6. '`' → logprob: -16.6250057220459
    7. 'qu' → logprob: -17.3750057220459
    8. '-' → logprob: -17.8750057220459
    9. '```' → logprob: -17.8750057220459
    10. 'rie' → logprob: -18.1250057220459

Token 1122: ' entière' (ID: 61583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1123: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1121
Tokens correctement prédits (1ère position, stricte): 160
Tokens correctement prédits (1ère position, avec adaptation): 163
Tokens correctement prédits (top 10): 457
Précision stricte (1ère position): 14.27%
Précision adaptée (1ère position): 14.54%
Précision (top 10): 40.77%
================================================================================
