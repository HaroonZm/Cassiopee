================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import functools

def get_input():
    return list(map(int, input().split()))

N, M = get_input()

L = []
i = 0
while i < N:
    L.append([int(x) for x in input().split()])
    i += 1

maxim = -float('inf')
vals = [-1,1]

for s in ([ (a,b,c) for a in vals for b in vals for c in vals ]):
    res = []
    idx = 0
    while idx < N:
        triple = L[idx]
        val = 0
        for j in range(3):
            if j==0:
                f = lambda x: x * s[0]
            elif j==1:
                f = lambda x: x * s[1]
            else:
                f = lambda x: x * s[2]
            val += f(triple[j])
        res.append(val)
        idx += 1
    res.sort(key=lambda x: -x)
    maxim = maxim if maxim > sum(res[:M]) else sum(res[:M])

print(maxim)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005891331238672137
    2. 'def' → logprob: -8.250589370727539
    3. '.def' → logprob: -8.500589370727539
    4. '@' → logprob: -10.500589370727539
    5. '.partial' → logprob: -11.250589370727539
    6. '```' → logprob: -11.375589370727539
    7. 'import' → logprob: -11.500589370727539
    8. '.wrap' → logprob: -11.750589370727539
    9. '(' → logprob: -11.875589370727539
    10. '.import' → logprob: -12.000589370727539

Token 4: ' get' (ID: 717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010551339946687222
    2. ' functools' → logprob: -5.760551452636719
    3. ' l' → logprob: -5.885551452636719
    4. '_' → logprob: -6.260551452636719
    5. ' _' → logprob: -7.385551452636719
    6. ' factorial' → logprob: -7.510551452636719
    7. ' reduce' → logprob: -8.510551452636719
    8. ' ' → logprob: -8.885551452636719
    9. ' wraps' → logprob: -9.260551452636719
    10. ' wrap' → logprob: -9.385551452636719

Token 5: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18701861798763275
    2. ' _' → logprob: -2.312018632888794
    3. '_user' → logprob: -3.062018632888794
    4. 'attr' → logprob: -4.562018394470215
    5. '_attr' → logprob: -5.687018394470215
    6. '_data' → logprob: -5.812018394470215
    7. ' ' → logprob: -6.312018394470215
    8. '_item' → logprob: -7.312018394470215
    9. '_name' → logprob: -7.687018394470215
    10. '_f' → logprob: -7.937018394470215

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014733483083546162
    2. '_' → logprob: -4.26473331451416
    3. '(_' → logprob: -8.76473331451416
    4. 's' → logprob: -10.13973331451416
    5. '_text' → logprob: -10.51473331451416
    6. '(_:' → logprob: -10.51473331451416
    7. '```' → logprob: -10.51473331451416
    8. '_parent' → logprob: -10.76473331451416
    9. '_(' → logprob: -10.76473331451416
    10. '():' → logprob: -10.88973331451416

Token 7: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41803470253944397
    2. '():' → logprob: -2.043034791946411
    3. '   ' → logprob: -2.918034791946411
    4. ' ' → logprob: -3.418034791946411
    5. ' return' → logprob: -3.918034791946411
    6. '()' → logprob: -4.293034553527832
    7. ' (' → logprob: -4.293034553527832
    8. 'return' → logprob: -4.293034553527832
    9. ''' → logprob: -4.418034553527832
    10. '```' → logprob: -4.918034553527832

Token 8: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1758803278207779
    2. '   ' → logprob: -2.6758804321289062
    3. 'input' → logprob: -2.9258804321289062
    4. 'user' → logprob: -3.8008804321289062
    5. ' return' → logprob: -4.800880432128906
    6. ' ' → logprob: -5.550880432128906
    7. 'x' → logprob: -6.550880432128906
    8. ' input' → logprob: -7.425880432128906
    9. 'r' → logprob: -7.675880432128906
    10. 'inp' → logprob: -7.925880432128906

Token 9: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.025058254599571228
    2. ' ' → logprob: -4.400058269500732
    3. 'input' → logprob: -4.400058269500732
    4. ' int' → logprob: -9.150057792663574
    5. ' ' → logprob: -10.775057792663574
    6. '  ' → logprob: -11.150057792663574
    7. '"' → logprob: -11.275057792663574
    8. ' "' → logprob: -11.400057792663574
    9. ' '' → logprob: -12.275057792663574
    10. ' None' → logprob: -12.775057792663574

Token 10: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019971546716988087
    2. '(input' → logprob: -7.876996994018555
    3. '<|end|>' → logprob: -8.126996994018555
    4. '(range' → logprob: -8.376996994018555
    5. '[' → logprob: -8.376996994018555
    6. '(user' → logprob: -9.001996994018555
    7. '_' → logprob: -9.501996994018555
    8. '<|end|>' → logprob: -9.626996994018555
    9. '(token' → logprob: -9.751996994018555
    10. '(eval' → logprob: -10.126996994018555

Token 11: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3151286244392395
    2. '(input' → logprob: -1.8151285648345947
    3. '(lambda' → logprob: -2.9401285648345947
    4. '(' → logprob: -3.5651285648345947
    5. '(str' → logprob: -3.8151285648345947
    6. 'input' → logprob: -5.940128803253174
    7. 'int' → logprob: -7.190128803253174
    8. '(eval' → logprob: -8.440128326416016
    9. 'lambda' → logprob: -9.065128326416016
    10. 'str' → logprob: -9.315128326416016

Token 12: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1911606639623642
    2. '(' → logprob: -1.9411606788635254
    3. '))' → logprob: -4.566160678863525
    4. ')' → logprob: -4.941160678863525
    5. '<|end|>' → logprob: -5.691160678863525
    6. ')))' → logprob: -6.816160678863525
    7. 'input' → logprob: -7.066160678863525
    8. '<|end|>' → logprob: -7.316160678863525
    9. '(open' → logprob: -7.441160678863525
    10. '(user' → logprob: -7.816160678863525

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3869872987270355
    2. ' input' → logprob: -1.136987328529358
    3. '(input' → logprob: -9.386987686157227
    4. '   ' → logprob: -11.511987686157227
    5. ',input' → logprob: -11.886987686157227
    6. ' ' → logprob: -12.011987686157227
    7. '	input' → logprob: -12.761987686157227
    8. ')' → logprob: -13.261987686157227
    9. '=input' → logprob: -13.636987686157227
    10. '  ' → logprob: -14.761987686157227

Token 14: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7334452271461487
    2. '()))' → logprob: -1.483445167541504
    3. '('' → logprob: -2.358445167541504
    4. '()' → logprob: -2.358445167541504
    5. '())))' → logprob: -3.358445167541504
    6. '(()' → logprob: -3.483445167541504
    7. '())' → logprob: -4.483445167541504
    8. '(""))' → logprob: -4.983445167541504
    9. '()));' → logprob: -5.233445167541504
    10. '("")' → logprob: -5.983445167541504

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00862308219075203
    2. 'strip' → logprob: -4.758623123168945
    3. 'rstrip' → logprob: -12.008623123168945
    4. ' split' → logprob: -13.258623123168945
    5. '(split' → logprob: -15.008623123168945
    6. 'read' → logprob: -15.633623123168945
    7. ')' → logprob: -15.633623123168945
    8. ' strip' → logprob: -16.758623123168945
    9. 'spl' → logprob: -17.758623123168945
    10. '_split' → logprob: -18.633623123168945

Token 16: '()))

' (ID: 125972)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.8434938788414001
    2. '()))' → logprob: -1.843493938446045
    3. '())))' → logprob: -1.968493938446045
    4. ')' → logprob: -2.218493938446045
    5. '())' → logprob: -2.218493938446045
    6. '))' → logprob: -3.468493938446045
    7. '(' → logprob: -4.343493938446045
    8. '()' → logprob: -4.718493938446045
    9. '()>' → logprob: -8.843493461608887
    10. '   ' → logprob: -8.968493461608887

Token 17: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.29352283477783203
    2. '@' → logprob: -1.543522834777832
    3. 'd' → logprob: -3.543522834777832
    4. '
' → logprob: -5.918522834777832
    5. '\' → logprob: -6.043522834777832
    6. '\n' → logprob: -6.418522834777832
    7. '

' → logprob: -6.418522834777832
    8. 'n' → logprob: -7.043522834777832
    9. '```' → logprob: -7.293522834777832
    10. 'a' → logprob: -8.418522834777832

Token 18: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3462322950363159
    2. '=' → logprob: -2.0962324142456055
    3. ')' → logprob: -2.5962324142456055
    4. ' ' → logprob: -3.4712324142456055
    5. ',' → logprob: -3.5962324142456055
    6. '[' → logprob: -4.3462324142456055
    7. '.' → logprob: -4.5962324142456055
    8. '<|end|>' → logprob: -5.8462324142456055
    9. ' )' → logprob: -6.0962324142456055
    10. '  ' → logprob: -6.4712324142456055

Token 19: ' M' (ID: 391)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.683735191822052
    2. 'M' → logprob: -0.808735191822052
    3. ' K' → logprob: -3.6837351322174072
    4. ' M' → logprob: -3.9337351322174072
    5. '*' → logprob: -6.808735370635986
    6. 'Q' → logprob: -6.933735370635986
    7. 'A' → logprob: -7.558735370635986
    8. '*M' → logprob: -7.683735370635986
    9. ' ' → logprob: -8.308734893798828
    10. 'a' → logprob: -8.433734893798828

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020899422466754913
    2. '=' → logprob: -3.895899534225464
    3. ',' → logprob: -8.020899772644043
    4. '<|end|>' → logprob: -11.520899772644043
    5. '=input' → logprob: -12.270899772644043
    6. ')' → logprob: -12.395899772644043
    7. ' ' → logprob: -12.520899772644043
    8. ' ,' → logprob: -13.020899772644043
    9. ' =
' → logprob: -14.020899772644043
    10. '  ' → logprob: -14.395899772644043

Token 21: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.11372366547584534
    2. 'get' → logprob: -2.2387237548828125
    3. ' map' → logprob: -7.1137237548828125
    4. 'map' → logprob: -9.488723754882812
    5. ' input' → logprob: -12.488723754882812
    6. ' ' → logprob: -13.738723754882812
    7. '(get' → logprob: -13.988723754882812
    8. ' N' → logprob: -14.113723754882812
    9. 'input' → logprob: -14.238723754882812
    10. ' fun' → logprob: -14.363723754882812

Token 22: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0003103175258729607
    2. '_' → logprob: -8.250309944152832
    3. ' _' → logprob: -11.125309944152832
    4. '_inputs' → logprob: -11.250309944152832
    5. '_user' → logprob: -11.750309944152832
    6. '_output' → logprob: -13.000309944152832
    7. '_token' → logprob: -13.625309944152832
    8. '(' → logprob: -13.750309944152832
    9. '(_' → logprob: -13.750309944152832
    10. '_data' → logprob: -13.875309944152832

Token 23: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00022249009634833783
    2. '(' → logprob: -8.875222206115723
    3. '())' → logprob: -10.250222206115723
    4. '`()' → logprob: -11.000222206115723
    5. '()`' → logprob: -11.875222206115723
    6. ' ()' → logprob: -12.000222206115723
    7. '()[' → logprob: -12.750222206115723
    8. '()(' → logprob: -12.750222206115723
    9. '()]' → logprob: -12.750222206115723
    10. '()>' → logprob: -13.375222206115723

Token 24: 'L' (ID: 43)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2060397863388062
    2. 'result' → logprob: -1.8310397863388062
    3. 'data' → logprob: -2.3310399055480957
    4. 'graph' → logprob: -2.5810399055480957
    5. 'arr' → logprob: -2.9560399055480957
    6. 'A' → logprob: -2.9560399055480957
    7. 'a' → logprob: -3.4560399055480957
    8. 'numbers' → logprob: -3.4560399055480957
    9. 'array' → logprob: -3.9560399055480957
    10. 'd' → logprob: -4.081039905548096

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45604631304740906
    2. '=' → logprob: -1.3310463428497314
    3. '_' → logprob: -3.7060463428497314
    4. 'ist' → logprob: -3.8310463428497314
    5. '[' → logprob: -4.206046104431152
    6. 'ines' → logprob: -4.956046104431152
    7. '=[]' → logprob: -4.956046104431152
    8. '1' → logprob: -5.581046104431152
    9. ',' → logprob: -5.581046104431152
    10. 's' → logprob: -5.706046104431152

Token 26: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5307188034057617
    2. '[]' → logprob: -1.0307188034057617
    3. '[get' → logprob: -3.9057188034057617
    4. ' [' → logprob: -4.155718803405762
    5. ' []' → logprob: -4.280718803405762
    6. 'list' → logprob: -6.405718803405762
    7. '[list' → logprob: -6.655718803405762
    8. '[int' → logprob: -7.280718803405762
    9. 'get' → logprob: -7.530718803405762
    10. '[input' → logprob: -8.155718803405762

Token 27: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.029847231227905e-05
    2. ' for' → logprob: -9.500080108642578
    3. '_' → logprob: -13.125080108642578
    4. '[' → logprob: -13.125080108642578
    5. 'f' → logprob: -15.250080108642578
    6. 'def' → logprob: -15.375080108642578
    7. '[]' → logprob: -15.500080108642578
    8. '_for' → logprob: -15.750080108642578
    9. '```' → logprob: -16.250080108642578
    10. '	for' → logprob: -16.375080108642578

Token 28: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6971157789230347
    2. '=' → logprob: -0.8221157789230347
    3. ' =' → logprob: -3.197115898132324
    4. 'nt' → logprob: -4.697115898132324
    5. 'f' → logprob: -5.322115898132324
    6. 'nd' → logprob: -6.072115898132324
    7. 'm' → logprob: -6.447115898132324
    8. '+=' → logprob: -6.697115898132324
    9. 'nit' → logprob: -7.572115898132324
    10. 'np' → logprob: -7.697115898132324

Token 29: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04309156909584999
    2. ' ' → logprob: -3.1680915355682373
    3. '1' → logprob: -9.293091773986816
    4. '2' → logprob: -16.2930908203125
    5. '=' → logprob: -16.9805908203125
    6. 'N' → logprob: -17.1055908203125
    7. ' N' → logprob: -17.5430908203125
    8. ' ' → logprob: -17.5430908203125
    9. ' i' → logprob: -17.7305908203125
    10. ' =' → logprob: -17.7930908203125

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008920480031520128
    2. ' ' → logprob: -7.250892162322998
    3. '1' → logprob: -8.62589168548584
    4. '2' → logprob: -13.50089168548584
    5. 'N' → logprob: -14.00089168548584
    6. '   ' → logprob: -16.500892639160156
    7. '  ' → logprob: -16.750892639160156
    8. '4' → logprob: -17.000892639160156
    9. '3' → logprob: -17.000892639160156
    10. ' N' → logprob: -17.750892639160156

Token 31: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7735123038291931
    2. '<|end|>' → logprob: -1.273512363433838
    3. '
' → logprob: -1.523512363433838
    4. ' while' → logprob: -3.398512363433838
    5. '<|end|>' → logprob: -5.648512363433838
    6. ' ' → logprob: -7.273512363433838
    7. 'i' → logprob: -7.398512363433838
    8. ' 
' → logprob: -7.523512363433838
    9. '\n' → logprob: -8.02351188659668
    10. '	while' → logprob: -8.39851188659668

Token 32: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.14893972873687744
    2. ' while' → logprob: -2.273939609527588
    3. '<|end|>' → logprob: -3.773939609527588
    4. '
' → logprob: -4.898939609527588
    5. 'i' → logprob: -6.398939609527588
    6. '\n' → logprob: -7.773939609527588
    7. 'for' → logprob: -7.773939609527588
    8. 'w' → logprob: -7.898939609527588
    9. ' 
' → logprob: -7.898939609527588
    10. 'While' → logprob: -8.023940086364746

Token 33: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04302933067083359
    2. 'i' → logprob: -3.168029308319092
    3. ' ' → logprob: -10.79302978515625
    4. '	i' → logprob: -11.91802978515625
    5. 'N' → logprob: -14.04302978515625
    6. '(i' → logprob: -14.41802978515625
    7. ' ' → logprob: -15.04302978515625
    8. '<' → logprob: -15.29302978515625
    9. ' N' → logprob: -15.41802978515625
    10. '<i' → logprob: -15.54302978515625

Token 34: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16043666005134583
    2. '<' → logprob: -1.9104366302490234
    3. '<N' → logprob: -9.410436630249023
    4. ' ' → logprob: -9.535436630249023
    5. ' <=' → logprob: -10.035436630249023
    6. '<=' → logprob: -11.660436630249023
    7. '<M' → logprob: -13.410436630249023
    8. '<n' → logprob: -13.785436630249023
    9. ' less' → logprob: -14.410436630249023
    10. '<len' → logprob: -14.785436630249023

Token 35: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6355568170547485
    2. ' N' → logprob: -0.7605568170547485
    3. ' M' → logprob: -6.260556697845459
    4. 'M' → logprob: -7.010556697845459
    5. ' ' → logprob: -8.885557174682617
    6. '	N' → logprob: -13.885557174682617
    7. ' ' → logprob: -14.260557174682617
    8. ' len' → logprob: -15.760557174682617
    9. '  ' → logprob: -16.135557174682617
    10. '>N' → logprob: -16.135557174682617

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015519981971010566
    2. ':
' → logprob: -6.876552104949951
    3. ' :' → logprob: -7.626552104949951
    4. '   ' → logprob: -11.626551628112793
    5. ' :
' → logprob: -12.376551628112793
    6. '+' → logprob: -12.501551628112793
    7. '+:' → logprob: -12.626551628112793
    8. '):' → logprob: -13.251551628112793
    9. ':**' → logprob: -13.251551628112793
    10. ' and' → logprob: -13.376551628112793

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9056482315063477
    2. '    ' → logprob: -1.0306482315063477
    3. '     
' → logprob: -2.5306482315063477
    4. ' ' → logprob: -2.9056482315063477
    5. ' 
' → logprob: -3.1556482315063477
    6. '    
' → logprob: -3.9056482315063477
    7. ' L' → logprob: -4.280648231506348
    8. '\' → logprob: -4.905648231506348
    9. '
' → logprob: -5.405648231506348
    10. '<|end|>' → logprob: -5.780648231506348

Token 38: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.35626935958862305
    2. '   ' → logprob: -1.356269359588623
    3. 'L' (adapté à ' L') → logprob: -3.481269359588623
    4. ' lines' → logprob: -5.481269359588623
    5. '    ' → logprob: -6.106269359588623
    6. ' input' → logprob: -6.856269359588623
    7. '    
' → logprob: -7.356269359588623
    8. 'input' → logprob: -7.481269359588623
    9. ' line' → logprob: -7.606269359588623
    10. ' rows' → logprob: -8.106269836425781

Token 39: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2538994550704956
    2. '.' → logprob: -1.5038994550704956
    3. '.extend' → logprob: -6.253899574279785
    4. ' .' → logprob: -10.753899574279785
    5. '.app' → logprob: -11.878899574279785
    6. '   ' → logprob: -11.878899574279785
    7. '.ap' → logprob: -13.128899574279785
    8. '.=' → logprob: -13.128899574279785
    9. 'append' → logprob: -13.378899574279785
    10. ' =' → logprob: -13.753899574279785

Token 40: '([' (ID: 5194)
  Prédit: '(get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.03125840052962303
    2. '(list' → logprob: -3.9062583446502686
    3. '(' → logprob: -4.781258583068848
    4. '([]' → logprob: -6.531258583068848
    5. '(tuple' → logprob: -7.406258583068848
    6. '(int' → logprob: -9.406258583068848
    7. '([' → logprob: -9.656258583068848
    8. '(f' → logprob: -10.781258583068848
    9. '((' → logprob: -11.281258583068848
    10. 'get' → logprob: -11.531258583068848

Token 41: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04422072321176529
    2. 'int' → logprob: -3.2942206859588623
    3. '*' → logprob: -5.544220924377441
    4. ']' → logprob: -7.419220924377441
    5. 'False' → logprob: -7.419220924377441
    6. 'get' → logprob: -7.919220924377441
    7. '])' → logprob: -9.169220924377441
    8. 'i' → logprob: -9.294220924377441
    9. 'None' → logprob: -9.419220924377441
    10. ']int' → logprob: -9.419220924377441

Token 42: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1344204694032669
    2. '(input' → logprob: -2.384420394897461
    3. '(' → logprob: -3.884420394897461
    4. '()' → logprob: -4.759420394897461
    5. '()]' → logprob: -6.134420394897461
    6. '(i' → logprob: -6.759420394897461
    7. '(),' → logprob: -8.134420394897461
    8. '(s' → logprob: -8.384420394897461
    9. 'input' → logprob: -8.759420394897461
    10. '(
' → logprob: -9.259420394897461

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020445888862013817
    2. '()' → logprob: -4.770445823669434
    3. '())' → logprob: -4.895445823669434
    4. 'for' → logprob: -6.145445823669434
    5. '(x' → logprob: -6.395445823669434
    6. ' for' → logprob: -9.270445823669434
    7. ')])' → logprob: -9.270445823669434
    8. '(' → logprob: -9.395445823669434
    9. ' )' → logprob: -10.020445823669434
    10. ')]' → logprob: -10.270445823669434

Token 44: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36270779371261597
    2. ')' → logprob: -1.8627078533172607
    3. ' for' → logprob: -1.9877078533172607
    4. '(x' → logprob: -5.112707614898682
    5. '()' → logprob: -5.362707614898682
    6. '(' → logprob: -7.987707614898682
    7. '(input' → logprob: -8.23770809173584
    8. '())' → logprob: -8.86270809173584
    9. '
' → logprob: -9.11270809173584
    10. ',' → logprob: -9.23770809173584

Token 45: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.01818646676838398
    2. 'input' → logprob: -4.018186569213867
    3. '(input' → logprob: -10.643186569213867
    4. ' range' → logprob: -12.268186569213867
    5. '=input' → logprob: -12.393186569213867
    6. ',input' → logprob: -13.643186569213867
    7. '_input' → logprob: -14.268186569213867
    8. '	input' → logprob: -14.518186569213867
    9. ' in' → logprob: -14.518186569213867
    10. 'range' → logprob: -15.143186569213867

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0077909245155751705
    2. 'in' → logprob: -4.882791042327881
    3. ' ' → logprob: -9.882790565490723
    4. ' input' → logprob: -10.132790565490723
    5. 'input' → logprob: -10.632790565490723
    6. ')' → logprob: -10.757790565490723
    7. ' x' → logprob: -11.257790565490723
    8. '<|end|>' → logprob: -11.757790565490723
    9. '	in' → logprob: -12.382790565490723
    10. '_' → logprob: -12.382790565490723

Token 47: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10023880749940872
    2. ' input' → logprob: -2.350238800048828
    3. 'get' → logprob: -10.475238800048828
    4. ' get' → logprob: -12.850238800048828
    5. '(input' → logprob: -14.225238800048828
    6. 'range' → logprob: -15.975238800048828
    7. '=input' → logprob: -15.975238800048828
    8. ' ' → logprob: -16.100238800048828
    9. '<input' → logprob: -16.475238800048828
    10. ')' → logprob: -17.225238800048828

Token 48: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.04038054868578911
    2. '()' → logprob: -3.2903804779052734
    3. '()]' → logprob: -6.165380477905273
    4. '(' → logprob: -9.040380477905273
    5. '())' → logprob: -9.165380477905273
    6. '()].' → logprob: -11.915380477905273
    7. ' ()' → logprob: -13.915380477905273
    8. '()
' → logprob: -14.165380477905273
    9. ' ().' → logprob: -14.540380477905273
    10. '()][' → logprob: -14.790380477905273

Token 49: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00016229959146585315
    2. 'strip' → logprob: -8.750162124633789
    3. 'rstrip' → logprob: -12.875162124633789
    4. ' split' → logprob: -13.625162124633789
    5. '(split' → logprob: -17.00016212463379
    6. 'spl' → logprob: -17.50016212463379
    7. '.split' → logprob: -19.00016212463379
    8. ')' → logprob: -19.12516212463379
    9. '```' → logprob: -19.37516212463379
    10. ' ' → logprob: -20.37516212463379

Token 50: '()])
' (ID: 141457)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5340700745582581
    2. '()]' → logprob: -1.0340700149536133
    3. '())' → logprob: -2.9090700149536133
    4. '(' → logprob: -5.909070014953613
    5. ')])' → logprob: -7.159070014953613
    6. '()])
' → logprob: -9.909070014953613
    7. '])' → logprob: -10.659070014953613
    8. ')]' → logprob: -10.659070014953613
    9. '()))' → logprob: -10.784070014953613
    10. '()][' → logprob: -10.909070014953613

Token 51: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47541260719299316
    2. '   ' → logprob: -1.1004126071929932
    3. '    
' → logprob: -4.225412368774414
    4. ' 
' → logprob: -4.725412368774414
    5. '\n' → logprob: -5.100412368774414
    6. '  
' → logprob: -5.350412368774414
    7. ' i' → logprob: -6.100412368774414
    8. ')' → logprob: -6.350412368774414
    9. 'i' → logprob: -6.350412368774414
    10. '\' → logprob: -6.475412368774414

Token 52: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7050153613090515
    2. '\n' → logprob: -1.0800154209136963
    3. '
' → logprob: -2.4550154209136963
    4. 'i' (adapté à ' i') → logprob: -2.9550154209136963
    5. ' i' → logprob: -3.9550154209136963
    6. '    
' → logprob: -6.080015182495117
    7. ' 
' → logprob: -6.330015182495117
    8. ')' → logprob: -6.580015182495117
    9. '\' → logprob: -6.580015182495117
    10. ')
' → logprob: -7.955015182495117

Token 53: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012354647042229772
    2. '+=' → logprob: -6.751235485076904
    3. ' +=' → logprob: -9.751235008239746
    4. ' +' → logprob: -12.251235008239746
    5. '++' → logprob: -13.751235008239746
    6. ' ' → logprob: -14.376235008239746
    7. '+++' → logprob: -15.626235008239746
    8. '+='' → logprob: -15.751235008239746
    9. '+="' → logprob: -16.001235961914062
    10. '=' → logprob: -16.626235961914062

Token 54: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078401252627373
    2. ' ' → logprob: -5.504078388214111
    3. '   ' → logprob: -19.254077911376953
    4. '１' → logprob: -19.254077911376953
    5. ' ' → logprob: -19.629077911376953
    6. '```' → logprob: -19.629077911376953
    7. '<|end|>' → logprob: -20.379077911376953
    8. '  ' → logprob: -20.504077911376953
    9. '0' → logprob: -20.629077911376953
    10. '+' → logprob: -20.691577911376953

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -19.0
    4. '   ' → logprob: -19.375
    5. '１' → logprob: -20.0
    6. '  ' → logprob: -20.6875
    7. '<|end|>' → logprob: -21.1875
    8. '۱' → logprob: -21.3125
    9. '१' → logprob: -21.75
    10. '0' → logprob: -22.1875

Token 56: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -2.020615339279175
    2. 'i' → logprob: -2.020615339279175
    3. 'd' → logprob: -2.145615339279175
    4. 'for' → logprob: -2.145615339279175
    5. 'f' → logprob: -2.395615339279175
    6. 'r' → logprob: -2.895615339279175
    7. 'Q' → logprob: -3.395615339279175
    8. 'q' → logprob: -3.520615339279175
    9. 'b' → logprob: -3.645615339279175
    10. '\' → logprob: -3.645615339279175

Token 57: 'max' (ID: 3228)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1843923330307007
    2. 'Q' → logprob: -1.9343923330307007
    3. 'for' → logprob: -2.0593924522399902
    4. 'd' → logprob: -2.5593924522399902
    5. 'def' → logprob: -3.1843924522399902
    6. 'f' → logprob: -3.1843924522399902
    7. 'q' → logprob: -3.5593924522399902
    8. 's' → logprob: -3.8093924522399902
    9. 'result' → logprob: -3.9343924522399902
    10. 'D' → logprob: -4.05939245223999

Token 58: 'im' (ID: 321)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10846036672592163
    2. '(' → logprob: -2.6084604263305664
    3. '_sum' → logprob: -4.108460426330566
    4. '_value' → logprob: -5.233460426330566
    5. '_val' → logprob: -5.608460426330566
    6. '_len' → logprob: -7.358460426330566
    7. '_depth' → logprob: -7.608460426330566
    8. '_length' → logprob: -8.108460426330566
    9. '_score' → logprob: -8.358460426330566
    10. '_l' → logprob: -8.733460426330566

Token 59: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0009798167739063501
    2. 'al' → logprob: -7.625979900360107
    3. 'ize' → logprob: -8.25097942352295
    4. '_' → logprob: -10.12597942352295
    5. '```' → logprob: -10.50097942352295
    6. 'u' → logprob: -10.87597942352295
    7. '   ' → logprob: -10.87597942352295
    8. ' =' → logprob: -10.87597942352295
    9. '.' → logprob: -10.87597942352295
    10. 'ум' → logprob: -11.12597942352295

Token 60: ' -' (ID: 533)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.9220321178436279
    2. '0' → logprob: -1.297032117843628
    3. 'max' → logprob: -2.047032117843628
    4. ' float' → logprob: -2.422032117843628
    5. 'float' → logprob: -2.922032117843628
    6. ' ' → logprob: -3.672032117843628
    7. '-' → logprob: -4.297032356262207
    8. ' -' → logprob: -4.547032356262207
    9. ' L' → logprob: -5.922032356262207
    10. '[max' → logprob: -6.922032356262207

Token 61: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.40504005551338196
    2. '10' → logprob: -1.1550400257110596
    3. '1' → logprob: -4.405040264129639
    4. '100' → logprob: -5.405040264129639
    5. '999' → logprob: -7.280040264129639
    6. 'int' → logprob: -7.655040264129639
    7. '(' → logprob: -10.65503978729248
    8. '987' → logprob: -10.90503978729248
    9. '(float' → logprob: -11.15503978729248
    10. ' float' → logprob: -11.40503978729248

Token 62: '('' (ID: 706)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.38560718297958374
    2. '('' → logprob: -1.2606072425842285
    3. ''' → logprob: -3.6356072425842285
    4. '"' → logprob: -6.1356072425842285
    5. 'inf' → logprob: -6.6356072425842285
    6. ''i' → logprob: -6.8856072425842285
    7. ''t' → logprob: -7.0106072425842285
    8. ''a' → logprob: -7.0106072425842285
    9. ''ins' → logprob: -7.1356072425842285
    10. ''e' → logprob: -7.8856072425842285

Token 63: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -5.240481914370321e-05
    2. ''' → logprob: -10.000052452087402
    3. ''in' → logprob: -12.500052452087402
    4. 'info' → logprob: -13.500052452087402
    5. 'in' → logprob: -14.625052452087402
    6. 'Inf' → logprob: -15.125052452087402
    7. '"' → logprob: -15.500052452087402
    8. 'INF' → logprob: -15.500052452087402
    9. ''s' → logprob: -16.250051498413086
    10. '')' → logprob: -16.375051498413086

Token 64: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020000117365270853
    2. '')' → logprob: -6.251999855041504
    3. ' )' → logprob: -9.626999855041504
    4. '))' → logprob: -13.376999855041504
    5. ')
' → logprob: -14.251999855041504
    6. '()' → logprob: -14.501999855041504
    7. '`)' → logprob: -14.501999855041504
    8. '")' → logprob: -14.626999855041504
    9. ''' → logprob: -14.751999855041504
    10. '())' → logprob: -16.12700080871582

Token 65: 'vals' (ID: 44567)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0026836141478270292
    2. ' for' → logprob: -7.002683639526367
    3. 'i' → logprob: -7.377683639526367
    4. 'f' → logprob: -7.502683639526367
    5. '
' → logprob: -8.752683639526367
    6. '\' → logprob: -9.252683639526367
    7. 'r' → logprob: -9.252683639526367
    8. 'd' → logprob: -10.002683639526367
    9. '\n' → logprob: -10.002683639526367
    10. 'n' → logprob: -10.377683639526367

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3241361975669861
    2. '=' → logprob: -1.3241362571716309
    3. '_' → logprob: -5.199136257171631
    4. '.' → logprob: -6.074136257171631
    5. '[' → logprob: -6.574136257171631
    6. ',' → logprob: -6.949136257171631
    7. '=[]' → logprob: -8.324135780334473
    8. ' ' → logprob: -8.949135780334473
    9. ')' → logprob: -9.699135780334473
    10. '[:]' → logprob: -9.949135780334473

Token 67: ' [-' (ID: 20191)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10041315108537674
    2. ' []' → logprob: -2.4754130840301514
    3. '[' → logprob: -4.6004133224487305
    4. 'L' → logprob: -7.9754133224487305
    5. ' [' → logprob: -8.35041332244873
    6. 'set' → logprob: -8.72541332244873
    7. '[L' → logprob: -8.72541332244873
    8. 'fun' → logprob: -8.97541332244873
    9. ' L' → logprob: -9.85041332244873
    10. '[]
' → logprob: -9.97541332244873

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7498691082000732
    2. 'float' → logprob: -0.7498691082000732
    3. '100' → logprob: -3.4998691082000732
    4. '10' → logprob: -3.9998691082000732
    5. '2' → logprob: -6.999869346618652
    6. 'int' → logprob: -7.499869346618652
    7. '(' → logprob: -7.749869346618652
    8. '5' → logprob: -7.749869346618652
    9. '999' → logprob: -7.749869346618652
    10. 'max' → logprob: -7.749869346618652

Token 69: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014213105663657188
    2. ',' → logprob: -5.2642130851745605
    3. ' for' → logprob: -5.3892130851745605
    4. ']*' → logprob: -5.8892130851745605
    5. ' ]' → logprob: -7.3892130851745605
    6. '1' → logprob: -7.3892130851745605
    7. 'for' → logprob: -8.139213562011719
    8. ']*(' → logprob: -10.764213562011719
    9. '2' → logprob: -11.014213562011719
    10. 'e' → logprob: -11.764213562011719

Token 70: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.48328420519828796
    2. '1' → logprob: -1.2332842350006104
    3. ' -' → logprob: -2.9832842350006104
    4. ' ' → logprob: -3.8582842350006104
    5. '0' → logprob: -3.9832842350006104
    6. '2' → logprob: -7.358283996582031
    7. 'inf' → logprob: -8.483283996582031
    8. '-inf' → logprob: -8.608283996582031
    9. '100' → logprob: -9.483283996582031
    10. 'float' → logprob: -9.795783996582031

Token 71: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.053458645939826965
    2. ',' → logprob: -3.0534586906433105
    3. ')' → logprob: -5.9284586906433105
    4. ' ]' → logprob: -6.5534586906433105
    5. '])' → logprob: -8.303458213806152
    6. ')]' → logprob: -8.553458213806152
    7. ',-' → logprob: -9.553458213806152
    8. '0' → logprob: -9.678458213806152
    9. ' ,' → logprob: -10.303458213806152
    10. ' )' → logprob: -10.678458213806152

Token 72: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010394676588475704
    2. 'f' → logprob: -4.63539457321167
    3. ' for' → logprob: -8.010395050048828
    4. 'i' → logprob: -8.385395050048828
    5. 'd' → logprob: -11.010395050048828
    6. '
' → logprob: -11.510395050048828
    7. 'a' → logprob: -11.885395050048828
    8. 'r' → logprob: -12.135395050048828
    9. 'def' → logprob: -12.135395050048828
    10. 'n' → logprob: -12.385395050048828

Token 73: ' s' (ID: 265)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.1138522624969482
    2. ' v' → logprob: -1.6138522624969482
    3. ' a' → logprob: -2.1138522624969482
    4. '_' → logprob: -2.2388522624969482
    5. ' x' → logprob: -2.2388522624969482
    6. ' _' → logprob: -3.4888522624969482
    7. ' val' → logprob: -3.9888522624969482
    8. 'i' → logprob: -4.113852500915527
    9. 'x' → logprob: -4.238852500915527
    10. 'a' → logprob: -4.238852500915527

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7126811742782593
    2. '_' → logprob: -1.4626811742782593
    3. ' ' → logprob: -2.212681293487549
    4. 'i' → logprob: -2.462681293487549
    5. '1' → logprob: -3.087681293487549
    6. ' i' → logprob: -4.337681293487549
    7. '_i' → logprob: -4.712681293487549
    8. 'in' → logprob: -4.962681293487549
    9. 'u' → logprob: -5.712681293487549
    10. '_in' → logprob: -6.337681293487549

Token 75: ' ([' (ID: 31338)
  Prédit: ' vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vals' → logprob: -0.040642477571964264
    2. ' range' → logprob: -3.290642499923706
    3. ' itertools' → logprob: -7.290642261505127
    4. '[' → logprob: -7.540642261505127
    5. 'vals' → logprob: -7.790642261505127
    6. '(vals' → logprob: -8.040642738342285
    7. ' [' → logprob: -8.415642738342285
    8. ' ' → logprob: -8.540642738342285
    9. ' functools' → logprob: -8.915642738342285
    10. ' [-' → logprob: -11.040642738342285

Token 76: ' (' (ID: 350)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3440335988998413
    2. 'a' → logprob: -1.8440335988998413
    3. '1' → logprob: -3.469033718109131
    4. 'x' → logprob: -3.469033718109131
    5. 'i' → logprob: -3.719033718109131
    6. 'v' → logprob: -3.969033718109131
    7. '*' → logprob: -4.719033718109131
    8. 'p' → logprob: -5.344033718109131
    9. 'vals' → logprob: -6.469033718109131
    10. 'b' → logprob: -6.594033718109131

Token 77: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.684548020362854
    2. 'x' → logprob: -0.934548020362854
    3. 'i' → logprob: -3.0595479011535645
    4. '-' → logprob: -3.9345479011535645
    5. 'v' → logprob: -4.3095479011535645
    6. 'p' → logprob: -5.3095479011535645
    7. 'd' → logprob: -5.5595479011535645
    8. '1' → logprob: -6.3095479011535645
    9. 'dx' → logprob: -6.4345479011535645
    10. 'b' → logprob: -6.9345479011535645

Token 78: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.30335476994514465
    2. ',' → logprob: -1.4283547401428223
    3. '*' → logprob: -4.803354740142822
    4. ',v' → logprob: -5.553354740142822
    5. '*b' → logprob: -6.428354740142822
    6. '*x' → logprob: -6.678354740142822
    7. ',val' → logprob: -6.928354740142822
    8. '*v' → logprob: -6.928354740142822
    9. ',*' → logprob: -7.053354740142822
    10. 'v' → logprob: -7.428354740142822

Token 79: ',c' (ID: 22261)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00966448150575161
    2. ',' → logprob: -5.384664535522461
    3. '),' → logprob: -6.384664535522461
    4. ',c' → logprob: -6.384664535522461
    5. ' )' → logprob: -7.759664535522461
    6. '),(' → logprob: -8.134664535522461
    7. ',)' → logprob: -8.384664535522461
    8. ')]' → logprob: -8.509664535522461
    9. ' ,' → logprob: -9.259664535522461
    10. ')])' → logprob: -9.634664535522461

Token 80: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000549814198166132
    2. ')]' → logprob: -8.625550270080566
    3. ' )' → logprob: -8.875550270080566
    4. '),' → logprob: -9.250550270080566
    5. ')])' → logprob: -9.625550270080566
    6. ',)' → logprob: -10.875550270080566
    7. ']' → logprob: -11.125550270080566
    8. ' ' → logprob: -11.375550270080566
    9. ',' → logprob: -12.250550270080566
    10. ')
' → logprob: -12.500550270080566

Token 81: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.08194214850664139
    2. 'a' → logprob: -2.581942081451416
    3. ' vals' → logprob: -6.456942081451416
    4. ' ' → logprob: -7.206942081451416
    5. '	a' → logprob: -7.581942081451416
    6. 'vals' → logprob: -9.081942558288574
    7. ')a' → logprob: -11.206942558288574
    8. '-' → logprob: -11.269442558288574
    9. ' val' → logprob: -11.769442558288574
    10. '1' → logprob: -11.769442558288574

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01880260370671749
    2. ' ' → logprob: -4.268802642822266
    3. 'in' → logprob: -6.018802642822266
    4. '<|end|>' → logprob: -6.143802642822266
    5. ' a' → logprob: -11.143802642822266
    6. ' i' → logprob: -11.893802642822266
    7. '<|end|>' → logprob: -12.143802642822266
    8. 'a' → logprob: -12.518802642822266
    9. ' 
' → logprob: -12.643802642822266
    10. '  
' → logprob: -13.143802642822266

Token 84: ' vals' (ID: 58985)
  Prédit: ' vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vals' → logprob: -0.6330527663230896
    2. 'vals' → logprob: -0.7580527663230896
    3. '(vals' → logprob: -8.133052825927734
    4. ' ' → logprob: -9.633052825927734
    5. '[' → logprob: -10.383052825927734
    6. '[-' → logprob: -10.758052825927734
    7. ' [-' → logprob: -11.383052825927734
    8. '-' → logprob: -11.883052825927734
    9. '   ' → logprob: -12.383052825927734
    10. '
' → logprob: -12.508052825927734

Token 85: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11314503103494644
    2. ' in' → logprob: -2.363145112991333
    3. ',' → logprob: -5.363144874572754
    4. ' ,' → logprob: -5.988144874572754
    5. ' ' → logprob: -6.113144874572754
    6. 'for' → logprob: -6.363144874572754
    7. '<|end|>' → logprob: -6.988144874572754
    8. ')' → logprob: -8.738144874572754
    9. '   ' → logprob: -9.363144874572754
    10. '  ' → logprob: -9.363144874572754

Token 86: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.03852841258049011
    2. 'b' → logprob: -3.2885284423828125
    3. ' ' → logprob: -7.6635284423828125
    4. '  ' → logprob: -11.913528442382812
    5. '	b' → logprob: -12.288528442382812
    6. ' (' → logprob: -13.288528442382812
    7. '    ' → logprob: -13.413528442382812
    8. '   ' → logprob: -13.913528442382812
    9. '(b' → logprob: -14.163528442382812
    10. ' s' → logprob: -14.913528442382812

Token 87: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002112670335918665
    2. 'in' → logprob: -6.252112865447998
    3. ' ' → logprob: -8.62711238861084
    4. '<|end|>' → logprob: -13.50211238861084
    5. '  ' → logprob: -13.62711238861084
    6. ' i' → logprob: -14.37711238861084
    7. 'ins' → logprob: -14.75211238861084
    8. ',' → logprob: -15.25211238861084
    9. ' 
' → logprob: -15.62711238861084
    10. 's' → logprob: -15.87711238861084

Token 88: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.6327325701713562
    2. ' vals' → logprob: -0.7577325701713562
    3. '(vals' → logprob: -9.382732391357422
    4. ' ' → logprob: -10.257732391357422
    5. '_vals' → logprob: -11.507732391357422
    6. '[' → logprob: -13.632732391357422
    7. 'val' → logprob: -14.132732391357422
    8. 'c' → logprob: -14.882732391357422
    9. '  ' → logprob: -15.757732391357422
    10. '   ' → logprob: -15.882732391357422

Token 89: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.00481813820078969
    2. 'for' → logprob: -5.379817962646484
    3. ' ' → logprob: -9.129817962646484
    4. '	for' → logprob: -9.504817962646484
    5. ' in' → logprob: -11.504817962646484
    6. 'c' → logprob: -14.254817962646484
    7. '  ' → logprob: -14.504817962646484
    8. '   ' → logprob: -14.754817962646484
    9. ' ' → logprob: -14.879817962646484
    10. ' ]' → logprob: -15.004817962646484

Token 90: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.03366817533969879
    2. 'c' → logprob: -3.408668279647827
    3. ' ' → logprob: -10.908668518066406
    4. '  ' → logprob: -13.533668518066406
    5. '   ' → logprob: -14.033668518066406
    6. '    ' → logprob: -14.283668518066406
    7. '	c' → logprob: -14.533668518066406
    8. ')c' → logprob: -15.658668518066406
    9. '     ' → logprob: -15.908668518066406
    10. '```' → logprob: -16.408668518066406

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0018060837173834443
    2. 'in' → logprob: -6.376806259155273
    3. ' ' → logprob: -9.501806259155273
    4. '<|end|>' → logprob: -10.501806259155273
    5. ')' → logprob: -15.001806259155273
    6. 's' → logprob: -15.126806259155273
    7. '  ' → logprob: -15.376806259155273
    8. '	in' → logprob: -15.876806259155273
    9. ' i' → logprob: -16.251806259155273
    10. '<|end|>' → logprob: -16.251806259155273

Token 92: ' vals' (ID: 58985)
  Prédit: ' vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vals' → logprob: -0.18034550547599792
    2. 'vals' → logprob: -1.8053455352783203
    3. ' ' → logprob: -8.18034553527832
    4. '(vals' → logprob: -8.30534553527832
    5. '   ' → logprob: -10.30534553527832
    6. '    ' → logprob: -11.80534553527832
    7. '[-' → logprob: -12.18034553527832
    8. '_vals' → logprob: -12.30534553527832
    9. '[' → logprob: -12.55534553527832
    10. ')' → logprob: -12.68034553527832

Token 93: ' ]' (ID: 6045)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.333630234003067
    2. ']' → logprob: -1.5836302042007446
    3. ']:' → logprob: -3.083630323410034
    4. '])' → logprob: -3.708630323410034
    5. ' ]' → logprob: -5.458630084991455
    6. '):' → logprob: -5.958630084991455
    7. ')]' → logprob: -7.708630084991455
    8. ')' → logprob: -8.208630561828613
    9. ' ])' → logprob: -8.333630561828613
    10. '],' → logprob: -8.958630561828613

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004262649919837713
    2. ')' → logprob: -5.629262447357178
    3. ':' → logprob: -7.379262447357178
    4. '):
' → logprob: -11.129262924194336
    5. ' ):' → logprob: -11.379262924194336
    6. ']:' → logprob: -12.754262924194336
    7. ' ' → logprob: -13.504262924194336
    8. ')):' → logprob: -13.504262924194336
    9. ']):' → logprob: -13.629262924194336
    10. ',' → logprob: -13.879262924194336

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002134675160050392
    2. '<|end|>' → logprob: -7.002134799957275
    3. '    ' → logprob: -8.252134323120117
    4. '    
' → logprob: -8.377134323120117
    5. ' ' → logprob: -8.752134323120117
    6. ')' → logprob: -8.752134323120117
    7. ':' → logprob: -9.002134323120117
    8. '       ' → logprob: -9.752134323120117
    9. '  ' → logprob: -10.002134323120117
    10. ',' → logprob: -10.002134323120117

Token 96: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009247269481420517
    2. ' sum' → logprob: -5.634247303009033
    3. ' total' → logprob: -6.134247303009033
    4. ' s' → logprob: -6.509247303009033
    5. 'sum' → logprob: -8.134246826171875
    6. 's' → logprob: -8.634246826171875
    7. ' current' → logprob: -8.759246826171875
    8. '   ' → logprob: -8.759246826171875
    9. 'total' → logprob: -9.134246826171875
    10. '    ' → logprob: -9.134246826171875

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0045893844217062
    2. '=' → logprob: -5.504589557647705
    3. ' ' → logprob: -7.629589557647705
    4. ' +=' → logprob: -11.004589080810547
    5. 'max' → logprob: -13.254589080810547
    6. '  ' → logprob: -13.504589080810547
    7. '_' → logprob: -14.254589080810547
    8. ' ,' → logprob: -14.629589080810547
    9. ' =
' → logprob: -14.754589080810547
    10. 's' → logprob: -14.879589080810547

Token 98: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.035857848823070526
    2. '[]' → logprob: -3.660857915878296
    3. '[' → logprob: -5.160857677459717
    4. ' ' → logprob: -5.910857677459717
    5. ' []' → logprob: -8.410858154296875
    6. ' [' → logprob: -8.535858154296875
    7. 'float' → logprob: -9.035858154296875
    8. '[]
' → logprob: -9.160858154296875
    9. 'sum' → logprob: -9.410858154296875
    10. 'max' → logprob: -9.785858154296875

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07220201194286346
    2. 'for' → logprob: -3.32220196723938
    3. ' for' → logprob: -3.44720196723938
    4. '    
' → logprob: -6.947202205657959
    5. ' ' → logprob: -7.947202205657959
    6. '    ' → logprob: -8.6972017288208
    7. '  ' → logprob: -10.0722017288208
    8. '       ' → logprob: -10.4472017288208
    9. 't' → logprob: -10.8222017288208
    10. '
' → logprob: -11.0722017288208

Token 100: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5425199270248413
    2. 'for' → logprob: -0.9175199270248413
    3. ' for' → logprob: -4.167520046234131
    4. 'i' → logprob: -5.667520046234131
    5. ' i' → logprob: -8.667519569396973
    6. ' ' → logprob: -10.417519569396973
    7. 'j' → logprob: -11.042519569396973
    8. '0' → logprob: -11.167519569396973
    9. '	for' → logprob: -11.792519569396973
    10. '       ' → logprob: -12.042519569396973

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4312966763973236
    2. '=' → logprob: -1.056296706199646
    3. ' ' → logprob: -6.3062968254089355
    4. '0' → logprob: -7.9312968254089355
    5. 's' → logprob: -9.306296348571777
    6. ',' → logprob: -9.431296348571777
    7. ')' → logprob: -9.556296348571777
    8. 'x' → logprob: -10.306296348571777
    9. ' in' → logprob: -10.806296348571777
    10. '<|end|>' → logprob: -10.931296348571777

Token 102: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004129811190068722
    2. ' ' → logprob: -5.504129886627197
    3. '[' → logprob: -10.754129409790039
    4. '-' → logprob: -11.004129409790039
    5. '[]' → logprob: -12.504129409790039
    6. ' [' → logprob: -13.004129409790039
    7. '   ' → logprob: -13.379129409790039
    8. 'range' → logprob: -13.504129409790039
    9. ' -' → logprob: -14.129129409790039
    10. '1' → logprob: -14.254129409790039

Token 103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013332172529771924
    2. 'range' → logprob: -6.751333236694336
    3. ' ' → logprob: -9.251333236694336
    4. '[' → logprob: -10.376333236694336
    5. ' range' → logprob: -11.376333236694336
    6. '[]' → logprob: -11.751333236694336
    7. 'i' → logprob: -11.876333236694336
    8. '-' → logprob: -12.626333236694336
    9. 'N' → logprob: -13.251333236694336
    10. 'list' → logprob: -14.251333236694336

Token 104: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5914667844772339
    2. '<|end|>' → logprob: -0.9664667844772339
    3. '
' → logprob: -3.0914669036865234
    4. 'for' → logprob: -5.341466903686523
    5. ' ' → logprob: -5.716466903686523
    6. '    
' → logprob: -5.841466903686523
    7. '<|end|>' → logprob: -6.091466903686523
    8. 'while' → logprob: -6.591466903686523
    9. ')' → logprob: -6.591466903686523
    10. ' for' → logprob: -6.966466903686523

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006893565878272057
    2. '<|end|>' → logprob: -5.381893634796143
    3. 'for' → logprob: -7.131893634796143
    4. ' for' → logprob: -7.881893634796143
    5. 'while' → logprob: -8.131893157958984
    6. ' ' → logprob: -8.256893157958984
    7. ' while' → logprob: -8.256893157958984
    8. '  ' → logprob: -9.381893157958984
    9. '
' → logprob: -9.631893157958984
    10. '    
' → logprob: -10.131893157958984

Token 106: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.5046385526657104
    2. 'for' → logprob: -1.0046385526657104
    3. '   ' → logprob: -3.879638671875
    4. ' while' → logprob: -5.129638671875
    5. ' for' → logprob: -6.004638671875
    6. 'sum' → logprob: -7.379638671875
    7. 's' → logprob: -8.754638671875
    8. 'res' → logprob: -9.629638671875
    9. 'max' → logprob: -9.879638671875
    10. 'total' → logprob: -9.879638671875

Token 107: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.16025793552398682
    2. ' idx' → logprob: -1.9102579355239868
    3. '	idx' → logprob: -10.535258293151855
    4. '   ' → logprob: -12.535258293151855
    5. '(idx' → logprob: -12.785258293151855
    6. ' ' → logprob: -14.910258293151855
    7. '    ' → logprob: -15.160258293151855
    8. 'index' → logprob: -16.53525733947754
    9. '_idx' → logprob: -16.66025733947754
    10. '[idx' → logprob: -17.03525733947754

Token 108: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16370856761932373
    2. '<' → logprob: -1.9137085676193237
    3. '<N' → logprob: -5.663708686828613
    4. ' ' → logprob: -12.663708686828613
    5. '<n' → logprob: -12.788708686828613
    6. '<len' → logprob: -13.038708686828613
    7. ' N' → logprob: -15.413708686828613
    8. '<M' → logprob: -16.163707733154297
    9. 'N' → logprob: -16.663707733154297
    10. '<num' → logprob: -16.788707733154297

Token 109: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004330532974563539
    2. ' N' → logprob: -7.750432968139648
    3. 'len' → logprob: -13.750432968139648
    4. 'M' → logprob: -14.125432968139648
    5. '   ' → logprob: -14.875432968139648
    6. ' ' → logprob: -16.25043296813965
    7. ' len' → logprob: -16.75043296813965
    8. '	N' → logprob: -17.50043296813965
    9. '  ' → logprob: -18.25043296813965
    10. '>N' → logprob: -18.87543296813965

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03257535770535469
    2. ':
' → logprob: -3.5325753688812256
    3. '   ' → logprob: -6.5325751304626465
    4. '       ' → logprob: -6.7825751304626465
    5. '):' → logprob: -9.407575607299805
    6. '):
' → logprob: -10.157575607299805
    7. '<|end|>' → logprob: -10.157575607299805
    8. ':

' → logprob: -11.157575607299805
    9. ' and' → logprob: -11.407575607299805
    10. '<|end|>' → logprob: -11.782575607299805

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0050614336505532265
    2. '        
' → logprob: -6.880061626434326
    3. '   ' → logprob: -7.005061626434326
    4. ' ' → logprob: -7.380061626434326
    5. '<|end|>' → logprob: -7.755061626434326
    6. ',' → logprob: -8.005061149597168
    7. ':' → logprob: -8.380061149597168
    8. '    ' → logprob: -8.505061149597168
    9. '  
' → logprob: -8.505061149597168
    10. ' res' → logprob: -8.880061149597168

Token 112: ' triple' (ID: 41563)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5336114168167114
    2. '       ' → logprob: -1.5336114168167114
    3. 'res' → logprob: -1.6586114168167114
    4. ' ' → logprob: -6.783611297607422
    5. '           ' → logprob: -6.783611297607422
    6. '
' → logprob: -7.033611297607422
    7. 't' → logprob: -7.908611297607422
    8. ' x' → logprob: -7.908611297607422
    9. '+' → logprob: -8.033611297607422
    10. 'sum' → logprob: -8.033611297607422

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07139585167169571
    2. '=' → logprob: -2.9463958740234375
    3. '   ' → logprob: -5.0713958740234375
    4. ')' → logprob: -5.6963958740234375
    5. '       ' → logprob: -5.6963958740234375
    6. ']' → logprob: -6.6963958740234375
    7. '[' → logprob: -7.0713958740234375
    8. '<|end|>' → logprob: -7.4463958740234375
    9. '<|end|>' → logprob: -8.571395874023438
    10. ' ' → logprob: -8.571395874023438

Token 114: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.1701475381851196
    2. '[s' → logprob: -1.2951475381851196
    3. '[L' → logprob: -1.6701475381851196
    4. 'sum' → logprob: -3.04514741897583
    5. ' [' → logprob: -3.17014741897583
    6. 's' → logprob: -3.29514741897583
    7. ' L' → logprob: -3.29514741897583
    8. '[' → logprob: -3.79514741897583
    9. '[
' → logprob: -4.42014741897583
    10. ' sum' → logprob: -5.04514741897583

Token 115: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.762356209335849e-05
    2. 'idx' → logprob: -10.25003719329834
    3. '[' → logprob: -13.50003719329834
    4. '[index' → logprob: -15.62503719329834
    5. '	idx' → logprob: -15.75003719329834
    6. '(idx' → logprob: -15.87503719329834
    7. ' idx' → logprob: -16.625038146972656
    8. '[id' → logprob: -16.750038146972656
    9. '[i' → logprob: -16.750038146972656
    10. '```' → logprob: -17.375038146972656

Token 116: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5269052386283875
    2. ']
' → logprob: -0.9019052386283875
    3. '][' → logprob: -5.901905059814453
    4. '[' → logprob: -7.776905059814453
    5. ']
' → logprob: -8.651905059814453
    6. ']

' → logprob: -9.276905059814453
    7. '
' → logprob: -9.401905059814453
    8. ' ]' → logprob: -9.526905059814453
    9. ' ]
' → logprob: -9.651905059814453
    10. ')' → logprob: -10.526905059814453

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003256911295466125
    2. '<|end|>' → logprob: -9.375326156616211
    3. '
' → logprob: -9.500326156616211
    4. '        
' → logprob: -9.875326156616211
    5. ',' → logprob: -10.125326156616211
    6. 'res' → logprob: -10.625326156616211
    7. ' res' → logprob: -11.250326156616211
    8. '   ' → logprob: -11.375326156616211
    9. '  
' → logprob: -12.875326156616211
    10. '<|end|>' → logprob: -12.875326156616211

Token 118: ' val' (ID: 1459)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5781947374343872
    2. 'val' (adapté à ' val') → logprob: -1.5781947374343872
    3. '       ' → logprob: -1.8281947374343872
    4. 'sum' → logprob: -3.5781946182250977
    5. 'score' → logprob: -4.328194618225098
    6. 'v' → logprob: -5.203194618225098
    7. 'value' → logprob: -5.328194618225098
    8. 'total' → logprob: -5.328194618225098
    9. 's' → logprob: -5.328194618225098
    10. 'tmp' → logprob: -5.828194618225098

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1527658998966217
    2. '=' → logprob: -2.152765989303589
    3. 's' → logprob: -3.777765989303589
    4. 'ue' → logprob: -7.27776575088501
    5. '   ' → logprob: -7.40276575088501
    6. 'sum' → logprob: -7.52776575088501
    7. 'ues' → logprob: -7.77776575088501
    8. '_sum' → logprob: -9.027766227722168
    9. '       ' → logprob: -10.027766227722168
    10. '=sum' → logprob: -10.277766227722168

Token 120: ' ' (ID: 220)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6512256860733032
    2. 's' → logprob: -1.1512256860733032
    3. 'tr' → logprob: -2.4012255668640137
    4. ' triple' → logprob: -3.4012255668640137
    5. 'sum' → logprob: -3.9012255668640137
    6. ' sum' → logprob: -4.276225566864014
    7. '0' → logprob: -6.651225566864014
    8. '   ' → logprob: -6.651225566864014
    9. ' ' → logprob: -7.401225566864014
    10. '(s' → logprob: -8.401226043701172

Token 121: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15233217179775238
    2. 'tr' → logprob: -2.152332067489624
    3. 'sum' → logprob: -3.902332067489624
    4. ' s' → logprob: -5.777332305908203
    5. '0' → logprob: -7.152332305908203
    6. 'val' → logprob: -8.402332305908203
    7. ' triple' → logprob: -8.652332305908203
    8. '(s' → logprob: -9.027332305908203
    9. '   ' → logprob: -9.152332305908203
    10. 'fun' → logprob: -9.152332305908203

Token 122: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009358783136121929
    2. '<|end|>' → logprob: -7.250936031341553
    3. ' for' → logprob: -9.000935554504395
    4. '
' → logprob: -10.500935554504395
    5. '   ' → logprob: -10.625935554504395
    6. '	' → logprob: -11.750935554504395
    7. '<|end|>' → logprob: -11.875935554504395
    8. '    ' → logprob: -12.250935554504395
    9. '        
' → logprob: -12.250935554504395
    10. ' ' → logprob: -12.375935554504395

Token 124: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7242950797080994
    2. ' for' → logprob: -1.0992951393127441
    3. 'for' (adapté à ' for') → logprob: -1.7242951393127441
    4. '	for' → logprob: -5.974295139312744
    5. '   ' → logprob: -7.474295139312744
    6. ' ' → logprob: -7.974295139312744
    7. '	' → logprob: -8.724294662475586
    8. 'j' → logprob: -10.099294662475586
    9. '
' → logprob: -10.099294662475586
    10. '0' → logprob: -10.349294662475586

Token 125: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.36694398522377014
    2. ' j' → logprob: -1.7419439554214478
    3. 'i' → logprob: -2.6169440746307373
    4. ' i' → logprob: -3.8669440746307373
    5. 'k' → logprob: -4.241943836212158
    6. 'd' → logprob: -4.991943836212158
    7. 'x' → logprob: -5.116943836212158
    8. ' k' → logprob: -5.991943836212158
    9. 't' → logprob: -6.116943836212158
    10. ' t' → logprob: -6.741943836212158

Token 126: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006690037902444601
    2. 'in' → logprob: -5.25669002532959
    3. ' ' → logprob: -6.75669002532959
    4. '<|end|>' → logprob: -8.38169002532959
    5. ',' → logprob: -10.25669002532959
    6. '	in' → logprob: -11.38169002532959
    7. '  ' → logprob: -12.25669002532959
    8. '<|end|>' → logprob: -12.50669002532959
    9. ' ,' → logprob: -13.00669002532959
    10. '0' → logprob: -13.25669002532959

Token 127: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3133236765861511
    2. ' range' → logprob: -1.313323736190796
    3. '[' → logprob: -9.813323974609375
    4. '	range' → logprob: -12.688323974609375
    5. '(range' → logprob: -13.188323974609375
    6. ' ' → logprob: -13.938323974609375
    7. ' [' → logprob: -14.188323974609375
    8. ' xrange' → logprob: -15.813323974609375
    9. 'rang' → logprob: -15.938323974609375
    10. '.range' → logprob: -16.688323974609375

Token 128: '(' (ID: 7)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.6418688893318176
    2. '(' → logprob: -0.7668688893318176
    3. '3' → logprob: -4.891869068145752
    4. 'M' → logprob: -6.391869068145752
    5. '(len' → logprob: -10.516868591308594
    6. ' M' → logprob: -12.016868591308594
    7. '4' → logprob: -13.266868591308594
    8. ' ' → logprob: -13.516868591308594
    9. '(m' → logprob: -13.516868591308594
    10. '<M' → logprob: -13.641868591308594

Token 129: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06200074777007103
    2. 'M' → logprob: -2.8120007514953613
    3. ' M' → logprob: -10.562000274658203
    4. ' ' → logprob: -12.437000274658203
    5. 'len' → logprob: -13.062000274658203
    6. '   ' → logprob: -14.187000274658203
    7. '4' → logprob: -15.187000274658203
    8. '	M' → logprob: -16.937000274658203
    9. '(M' → logprob: -17.562000274658203
    10. 'm' → logprob: -17.562000274658203

Token 130: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38701382279396057
    2. '):
' → logprob: -1.1370137929916382
    3. ' ):' → logprob: -9.88701343536377
    4. ':' → logprob: -10.26201343536377
    5. ' ):
' → logprob: -10.88701343536377
    6. ')' → logprob: -11.26201343536377
    7. '):
' → logprob: -11.63701343536377
    8. '       ' → logprob: -11.88701343536377
    9. '):

' → logprob: -12.76201343536377
    10. '   ' → logprob: -13.13701343536377

Token 131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04759588465094566
    2. ' val' → logprob: -3.172595977783203
    3. 'val' → logprob: -6.422595977783203
    4. ' ' → logprob: -6.547595977783203
    5. '            ' → logprob: -8.297595977783203
    6. '<|end|>' → logprob: -8.297595977783203
    7. '       ' → logprob: -8.547595977783203
    8. '        ' → logprob: -8.797595977783203
    9. ' 
' → logprob: -8.922595977783203
    10. '               ' → logprob: -9.297595977783203

Token 132: ' if' (ID: 538)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.5045539140701294
    2. '           ' → logprob: -1.5045539140701294
    3. 'val' → logprob: -1.7545539140701294
    4. '               ' → logprob: -7.25455379486084
    5. '	val' → logprob: -8.37955379486084
    6. ',val' → logprob: -9.75455379486084
    7. '   ' → logprob: -10.25455379486084
    8. ' ' → logprob: -10.37955379486084
    9. '[val' → logprob: -11.50455379486084
    10. '       ' → logprob: -11.75455379486084

Token 133: ' j' (ID: 441)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4815777838230133
    2. 's' → logprob: -0.9815777540206909
    3. ' j' → logprob: -6.6065778732299805
    4. 'tr' → logprob: -6.9815778732299805
    5. 'j' → logprob: -7.1065778732299805
    6. ' isinstance' → logprob: -7.7315778732299805
    7. ' res' → logprob: -7.8565778732299805
    8. 'res' → logprob: -7.9190778732299805
    9. 'val' → logprob: -7.9190778732299805
    10. ' (' → logprob: -7.9815778732299805

Token 134: '==' (ID: 560)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.1629934310913086
    2. ']' → logprob: -1.2879934310913086
    3. '<' → logprob: -2.4129934310913086
    4. ']==' → logprob: -2.9129934310913086
    5. '<|end|>' → logprob: -2.9129934310913086
    6. ']<' → logprob: -3.0379934310913086
    7. '==' → logprob: -3.0379934310913086
    8. ' in' → logprob: -3.6629934310913086
    9. ' ==' → logprob: -3.6629934310913086
    10. '0' → logprob: -3.9129934310913086

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002719991374760866
    2. ' ' → logprob: -6.002719879150391
    3. '2' → logprob: -9.25271987915039
    4. 'j' → logprob: -9.50271987915039
    5. '1' → logprob: -10.12771987915039
    6. 's' → logprob: -11.12771987915039
    7. '   ' → logprob: -12.37771987915039
    8. '3' → logprob: -12.37771987915039
    9. ' j' → logprob: -13.19021987915039
    10. '  ' → logprob: -13.31521987915039

Token 136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11347264796495438
    2. ':
' → logprob: -2.2384727001190186
    3. '           ' → logprob: -8.738472938537598
    4. '):
' → logprob: -8.863472938537598
    5. '):' → logprob: -9.363472938537598
    6. '<|end|>' → logprob: -9.613472938537598
    7. '               ' → logprob: -9.863472938537598
    8. ' and' → logprob: -10.488472938537598
    9. ':return' → logprob: -11.238472938537598
    10. '       ' → logprob: -11.238472938537598

Token 137: '               ' (ID: 506)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.48580488562583923
    2. ' val' → logprob: -2.110804796218872
    3. ':' → logprob: -2.360804796218872
    4. ':
' → logprob: -2.485804796218872
    5. '               ' → logprob: -2.985804796218872
    6. '           ' → logprob: -3.485804796218872
    7. '*' → logprob: -7.110805034637451
    8. ',val' → logprob: -7.110805034637451
    9. '[val' → logprob: -7.610805034637451
    10. ' *' → logprob: -8.110804557800293

Token 138: ' f' (ID: 285)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.02337009832262993
    2. ' val' → logprob: -3.7733700275421143
    3. '               ' → logprob: -9.648369789123535
    4. '                   ' → logprob: -10.773369789123535
    5. '           ' → logprob: -11.023369789123535
    6. '	val' → logprob: -11.273369789123535
    7. ',val' → logprob: -12.523369789123535
    8. '   ' → logprob: -13.148369789123535
    9. '
' → logprob: -13.773369789123535
    10. ' ' → logprob: -13.898369789123535

Token 139: ' =' (ID: 314)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6866631507873535
    2. 'tr' → logprob: -1.6866631507873535
    3. '=' → logprob: -2.0616631507873535
    4. 'res' → logprob: -3.1866631507873535
    5. ' val' → logprob: -3.3116631507873535
    6. ' =' → logprob: -3.4366631507873535
    7. ':' → logprob: -3.6866631507873535
    8. '   ' → logprob: -4.3116631507873535
    9. '           ' → logprob: -5.0616631507873535
    10. ' triple' → logprob: -5.5616631507873535

Token 140: ' lambda' (ID: 27871)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1612275391817093
    2. 'tr' → logprob: -2.0362274646759033
    3. 'lambda' → logprob: -4.411227703094482
    4. 'a' → logprob: -5.536227703094482
    5. 'fun' → logprob: -6.661227703094482
    6. '1' → logprob: -8.411227226257324
    7. ' s' → logprob: -8.411227226257324
    8. '(s' → logprob: -9.286227226257324
    9. '(tr' → logprob: -9.661227226257324
    10. '+' → logprob: -9.786227226257324

Token 141: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.44072169065475464
    2. ' x' → logprob: -1.0657217502593994
    3. 'a' → logprob: -5.06572151184082
    4. ' a' → logprob: -6.44072151184082
    5. ' y' → logprob: -6.69072151184082
    6. 'y' → logprob: -6.81572151184082
    7. ' triple' → logprob: -7.69072151184082
    8. 't' → logprob: -8.56572151184082
    9. 'z' → logprob: -8.94072151184082
    10. 'lambda' → logprob: -8.94072151184082

Token 142: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006138768512755632
    2. ':x' → logprob: -5.756138801574707
    3. ',' → logprob: -6.631138801574707
    4. 'x' → logprob: -7.381138801574707
    5. ' :' → logprob: -7.631138801574707
    6. ',x' → logprob: -9.131138801574707
    7. ',y' → logprob: -9.381138801574707
    8. ':s' → logprob: -9.381138801574707
    9. 'a' → logprob: -9.631138801574707
    10. ':f' → logprob: -9.756138801574707

Token 143: ' x' (ID: 1215)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4073857367038727
    2. 'x' → logprob: -1.1573857069015503
    3. 'tr' → logprob: -4.53238582611084
    4. 'a' → logprob: -5.65738582611084
    5. ' s' → logprob: -5.65738582611084
    6. ' x' → logprob: -6.78238582611084
    7. 'f' → logprob: -7.15738582611084
    8. '(s' → logprob: -8.90738582611084
    9. ' triple' → logprob: -8.90738582611084
    10. 'fun' → logprob: -9.28238582611084

Token 144: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.625423014163971
    2. ' *' → logprob: -1.7504229545593262
    3. '[' → logprob: -2.000422954559326
    4. '*s' → logprob: -2.000422954559326
    5. '[j' → logprob: -5.250422954559326
    6. '[s' → logprob: -5.250422954559326
    7. '+' → logprob: -5.625422954559326
    8. '*j' → logprob: -5.625422954559326
    9. '[idx' → logprob: -7.000422954559326
    10. ' +' → logprob: -7.500422954559326

Token 145: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008235592395067215
    2. 'a' → logprob: -5.508235454559326
    3. ' s' → logprob: -5.508235454559326
    4. 'tr' → logprob: -10.383235931396484
    5. '1' → logprob: -10.508235931396484
    6. ' a' → logprob: -11.508235931396484
    7. ' triple' → logprob: -12.258235931396484
    8. '(s' → logprob: -12.633235931396484
    9. 'trip' → logprob: -12.883235931396484
    10. ' ' → logprob: -13.133235931396484

Token 146: '[' (ID: 58)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.052808087319135666
    2. '[' → logprob: -3.0528080463409424
    3. 'j' → logprob: -5.6778082847595215
    4. '0' → logprob: -7.3028082847595215
    5. '[idx' → logprob: -9.302807807922363
    6. '[a' → logprob: -11.552807807922363
    7. '(j' → logprob: -12.677807807922363
    8. '(' → logprob: -13.177807807922363
    9. 'a' → logprob: -13.177807807922363
    10. '[i' → logprob: -13.677807807922363

Token 147: '0' (ID: 15)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014181148260831833
    2. '0' → logprob: -4.264181137084961
    3. ' j' → logprob: -11.139181137084961
    4. ' ' → logprob: -13.889181137084961
    5. 'i' → logprob: -14.264181137084961
    6. ']' → logprob: -15.389181137084961
    7. '[j' → logprob: -15.639181137084961
    8. '	j' → logprob: -15.764181137084961
    9. '```' → logprob: -15.764181137084961
    10. '(j' → logprob: -16.13918113708496

Token 148: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012389794923365116
    2. ']
' → logprob: -5.012389659881592
    3. '[j' → logprob: -5.512389659881592
    4. '[' → logprob: -7.262389659881592
    5. ' ]' → logprob: -8.26239013671875
    6. '<|end|>' → logprob: -8.26239013671875
    7. ')' → logprob: -9.63739013671875
    8. 'j' → logprob: -9.63739013671875
    9. '           ' → logprob: -10.13739013671875
    10. '       ' → logprob: -10.38739013671875

Token 149: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11245431005954742
    2. ' else' → logprob: -3.112454414367676
    3. 'else' → logprob: -3.237454414367676
    4. 'elif' → logprob: -4.112454414367676
    5. ' elif' → logprob: -5.487454414367676
    6. '<|end|>' → logprob: -7.362454414367676
    7. '+' → logprob: -7.737454414367676
    8. ')' → logprob: -8.737454414367676
    9. ' 
' → logprob: -8.987454414367676
    10. '       ' → logprob: -9.112454414367676

Token 150: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034625548869371414
    2. 'elif' (adapté à ' elif') → logprob: -4.40962553024292
    3. ' else' → logprob: -4.65962553024292
    4. ' elif' → logprob: -5.03462553024292
    5. 'else' → logprob: -5.15962553024292
    6. '               ' → logprob: -9.784626007080078
    7. '       ' → logprob: -11.034626007080078
    8. ' ' → logprob: -11.159626007080078
    9. '<|end|>' → logprob: -11.409626007080078
    10. '   ' → logprob: -11.784626007080078

Token 151: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05489424243569374
    2. ' j' → logprob: -2.929894208908081
    3. '1' → logprob: -12.05489444732666
    4. ' ' → logprob: -13.17989444732666
    5. '   ' → logprob: -13.42989444732666
    6. '    ' → logprob: -14.42989444732666
    7. '	j' → logprob: -14.55489444732666
    8. '           ' → logprob: -15.05489444732666
    9. '       ' → logprob: -15.30489444732666
    10. '2' → logprob: -15.30489444732666

Token 152: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.003616585396230221
    2. ' ==' → logprob: -5.628616809844971
    3. 'elif' → logprob: -11.878616333007812
    4. '==
' → logprob: -12.503616333007812
    5. '=' → logprob: -13.253616333007812
    6. ']==' → logprob: -14.128616333007812
    7. '()==' → logprob: -14.253616333007812
    8. ':' → logprob: -14.378616333007812
    9. '==-' → logprob: -15.003616333007812
    10. '0' → logprob: -15.003616333007812

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.625011444091797
    3. '```' → logprob: -13.875011444091797
    4. '0' → logprob: -14.125011444091797
    5. '   ' → logprob: -14.375011444091797
    6. 'elif' → logprob: -16.250011444091797
    7. '2' → logprob: -16.812511444091797
    8. '  ' → logprob: -17.062511444091797
    9. 's' → logprob: -17.625011444091797
    10. '       ' → logprob: -17.750011444091797

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005325546953827143
    2. ':
' → logprob: -5.8803253173828125
    3. '               ' → logprob: -6.0053253173828125
    4. '           ' → logprob: -10.755325317382812
    5. ' :' → logprob: -11.005325317382812
    6. ':

' → logprob: -12.380325317382812
    7. '                ' → logprob: -13.505325317382812
    8. '            ' → logprob: -13.755325317382812
    9. 'else' → logprob: -14.005325317382812
    10. ' else' → logprob: -14.005325317382812

Token 155: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1349174529314041
    2. 'f' → logprob: -2.3849174976348877
    3. ' f' → logprob: -3.3849174976348877
    4. '           ' → logprob: -8.509917259216309
    5. '                ' → logprob: -12.259917259216309
    6. '              ' → logprob: -12.384917259216309
    7. '   ' → logprob: -12.509917259216309
    8. '                   ' → logprob: -12.509917259216309
    9. '            ' → logprob: -12.634917259216309
    10. 'else' → logprob: -12.759917259216309

Token 156: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.47425225377082825
    2. ' f' → logprob: -0.9742522239685059
    3. '               ' → logprob: -8.724252700805664
    4. '           ' → logprob: -12.474252700805664
    5. 'lambda' → logprob: -13.099252700805664
    6. '                ' → logprob: -13.599252700805664
    7. '            ' → logprob: -13.724252700805664
    8. ' ' → logprob: -13.974252700805664
    9. ' lambda' → logprob: -13.974252700805664
    10. 'x' → logprob: -14.849252700805664

Token 157: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16029663383960724
    2. ' =' → logprob: -1.9102966785430908
    3. ':' → logprob: -9.910296440124512
    4. '=lambda' → logprob: -11.410296440124512
    5. '==' → logprob: -12.410296440124512
    6. ' ' → logprob: -12.660296440124512
    7. ' ==' → logprob: -14.160296440124512
    8. ')' → logprob: -14.160296440124512
    9. '<|end|>' → logprob: -14.660296440124512
    10. '=x' → logprob: -14.660296440124512

Token 158: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.38690757751464844
    2. 'lambda' → logprob: -1.1369075775146484
    3. '(lambda' → logprob: -10.386907577514648
    4. 'x' → logprob: -12.886907577514648
    5. ' x' → logprob: -13.011907577514648
    6. '=lambda' → logprob: -14.761907577514648
    7. ' lamb' → logprob: -15.636907577514648
    8. ' (' → logprob: -15.761907577514648
    9. ' ' → logprob: -16.13690757751465
    10. '    ' → logprob: -17.13690757751465

Token 159: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16023612022399902
    2. ' x' → logprob: -1.910236120223999
    3. '(x' → logprob: -12.285236358642578
    4. 's' → logprob: -12.660236358642578
    5. 'lambda' → logprob: -12.785236358642578
    6. ' lambda' → logprob: -14.285236358642578
    7. ' ' → logprob: -15.910236358642578
    8. 'y' → logprob: -16.410236358642578
    9. '   ' → logprob: -16.910236358642578
    10. ' ' → logprob: -16.910236358642578

Token 160: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012725738633889705
    2. ':x' → logprob: -9.625126838684082
    3. 'x' → logprob: -10.750126838684082
    4. ' x' → logprob: -11.000126838684082
    5. '(x' → logprob: -11.250126838684082
    6. ' :' → logprob: -12.625126838684082
    7. '*' → logprob: -13.500126838684082
    8. '       ' → logprob: -14.000126838684082
    9. '*x' → logprob: -14.000126838684082
    10. '   ' → logprob: -14.125126838684082

Token 161: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4287140965461731
    2. ' x' → logprob: -1.0537140369415283
    3. 's' → logprob: -12.30371379852295
    4. ' ' → logprob: -12.67871379852295
    5. '   ' → logprob: -13.30371379852295
    6. '(x' → logprob: -13.80371379852295
    7. '	x' → logprob: -14.05371379852295
    8. ' ' → logprob: -14.67871379852295
    9. '  ' → logprob: -15.24121379852295
    10. '           ' → logprob: -15.36621379852295

Token 162: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0700724869966507
    2. '*' → logprob: -2.6950724124908447
    3. '*s' → logprob: -8.945072174072266
    4. 's' → logprob: -13.320072174072266
    5. ' ' → logprob: -13.820072174072266
    6. ':' → logprob: -14.070072174072266
    7. ' ' → logprob: -14.320072174072266
    8. '*x' → logprob: -14.320072174072266
    9. '*f' → logprob: -15.570072174072266
    10. '*object' → logprob: -16.195072174072266

Token 163: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47407954931259155
    2. ' s' → logprob: -0.9740795493125916
    3. ' ' → logprob: -13.349079132080078
    4. '(s' → logprob: -15.724079132080078
    5. '   ' → logprob: -15.849079132080078
    6. 'x' → logprob: -16.099079132080078
    7. ' ' → logprob: -16.224079132080078
    8. '	s' → logprob: -16.599079132080078
    9. '  ' → logprob: -16.974079132080078
    10. '    ' → logprob: -17.599079132080078

Token 164: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0023727966472506523
    2. '[j' → logprob: -6.127372741699219
    3. '1' → logprob: -8.627372741699219
    4. '[
' → logprob: -12.502372741699219
    5. ' [' → logprob: -13.002372741699219
    6. 'j' → logprob: -14.377372741699219
    7. '```' → logprob: -15.002372741699219
    8. '(' → logprob: -15.252372741699219
    9. 's' → logprob: -15.502372741699219
    10. ' ' → logprob: -15.877372741699219

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003204092849045992
    2. 'j' → logprob: -5.753203868865967
    3. '[j' → logprob: -10.753204345703125
    4. 'b' → logprob: -14.128204345703125
    5. '2' → logprob: -14.253204345703125
    6. ' ' → logprob: -14.378204345703125
    7. ' j' → logprob: -14.753204345703125
    8. '[' → logprob: -14.878204345703125
    9. '(j' → logprob: -14.878204345703125
    10. 'idx' → logprob: -14.878204345703125

Token 166: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001387009397149086
    2. ']' → logprob: -10.000138282775879
    3. ')' → logprob: -10.125138282775879
    4. ']
' → logprob: -11.125138282775879
    5. '               ' → logprob: -11.500138282775879
    6. ')
' → logprob: -11.750138282775879
    7. 'else' → logprob: -11.875138282775879
    8. '       ' → logprob: -12.000138282775879
    9. '```' → logprob: -13.500138282775879
    10. ' else' → logprob: -13.750138282775879

Token 167: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.5941604690160602e-05
    2. 'else' → logprob: -10.875025749206543
    3. 'elif' → logprob: -12.625025749206543
    4. '<|end|>' → logprob: -13.500025749206543
    5. ' else' → logprob: -13.875025749206543
    6. '       ' → logprob: -14.125025749206543
    7. '               ' → logprob: -15.500025749206543
    8. '          ' → logprob: -15.875025749206543
    9. '   ' → logprob: -16.00002670288086
    10. '	       ' → logprob: -16.50002670288086

Token 168: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004034587647765875
    2. '       ' → logprob: -6.379034519195557
    3. 'else' (adapté à ' else') → logprob: -6.379034519195557
    4. ' else' → logprob: -7.504034519195557
    5. 'elif' → logprob: -9.879034996032715
    6. '<|end|>' → logprob: -11.254034996032715
    7. '   ' → logprob: -12.254034996032715
    8. '               ' → logprob: -12.504034996032715
    9. ' elif' → logprob: -12.504034996032715
    10. '          ' → logprob: -13.754034996032715

Token 169: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2171584814786911
    2. ':' → logprob: -1.8421584367752075
    3. ' f' → logprob: -3.342158555984497
    4. ' :' → logprob: -7.592158317565918
    5. ':
' → logprob: -7.717158317565918
    6. '           ' → logprob: -8.592158317565918
    7. '              ' → logprob: -9.717158317565918
    8. 'f' → logprob: -10.092158317565918
    9. '                ' → logprob: -10.217158317565918
    10. '   ' → logprob: -10.967158317565918

Token 170: '               ' (ID: 506)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.06981604546308517
    2. '               ' → logprob: -3.3198161125183105
    3. ' lambda' → logprob: -3.5698161125183105
    4. ' x' → logprob: -6.8198161125183105
    5. 'f' → logprob: -7.1948161125183105
    6. 'lambda' → logprob: -7.8198161125183105
    7. '                ' → logprob: -8.069815635681152
    8. '           ' → logprob: -8.444815635681152
    9. '              ' → logprob: -9.319815635681152
    10. '            ' → logprob: -9.694815635681152

Token 171: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.5341182947158813
    2. ' f' → logprob: -0.9091182947158813
    3. 'lambda' → logprob: -5.534118175506592
    4. 'x' → logprob: -5.659118175506592
    5. ' lambda' → logprob: -6.284118175506592
    6. ' x' → logprob: -6.534118175506592
    7. '           ' → logprob: -9.78411865234375
    8. 's' → logprob: -9.90911865234375
    9. '               ' → logprob: -11.28411865234375
    10. ' s' → logprob: -11.40911865234375

Token 172: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02677266113460064
    2. ' =' → logprob: -3.6517727375030518
    3. '(x' → logprob: -8.151772499084473
    4. '=lambda' → logprob: -9.151772499084473
    5. ':' → logprob: -9.651772499084473
    6. 'x' → logprob: -12.276772499084473
    7. '=x' → logprob: -12.526772499084473
    8. '(' → logprob: -12.526772499084473
    9. ' ' → logprob: -14.651772499084473
    10. ')' → logprob: -15.151772499084473

Token 173: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3134155869483948
    2. ' lambda' → logprob: -1.31341552734375
    3. 'x' → logprob: -9.31341552734375
    4. '(lambda' → logprob: -9.81341552734375
    5. ' x' → logprob: -11.81341552734375
    6. '=lambda' → logprob: -14.43841552734375
    7. ' lamb' → logprob: -14.68841552734375
    8. ' (' → logprob: -16.81341552734375
    9. '(' → logprob: -16.81341552734375
    10. ' ' → logprob: -16.93841552734375

Token 174: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20145222544670105
    2. 'x' → logprob: -1.7014522552490234
    3. '(x' → logprob: -10.201452255249023
    4. ' lambda' → logprob: -14.826452255249023
    5. ' ' → logprob: -14.826452255249023
    6. ' ' → logprob: -15.201452255249023
    7. ' (' → logprob: -15.326452255249023
    8. 'lambda' → logprob: -15.326452255249023
    9. '(' → logprob: -15.826452255249023
    10. 's' → logprob: -16.326452255249023

Token 175: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.27035248279571533
    2. ':' → logprob: -2.020352363586426
    3. '(x' → logprob: -2.395352363586426
    4. 'x' → logprob: -4.395352363586426
    5. ' ' → logprob: -8.520352363586426
    6. '               ' → logprob: -8.645352363586426
    7. '           ' → logprob: -9.020352363586426
    8. '   ' → logprob: -10.145352363586426
    9. ':x' → logprob: -10.145352363586426
    10. '       ' → logprob: -10.270352363586426

Token 176: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10020763427019119
    2. ' x' → logprob: -2.350207567214966
    3. '(x' → logprob: -14.600207328796387
    4. 's' → logprob: -14.850207328796387
    5. ' ' → logprob: -16.725208282470703
    6. '	x' → logprob: -17.475208282470703
    7. '0' → logprob: -17.600208282470703
    8. ' ' → logprob: -17.725208282470703
    9. '   ' → logprob: -17.975208282470703
    10. '```' → logprob: -18.600208282470703

Token 177: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5237525701522827
    2. ' *' → logprob: -0.8987525701522827
    3. '[' → logprob: -7.898752689361572
    4. 's' → logprob: -9.023752212524414
    5. '*s' → logprob: -9.523752212524414
    6. ')' → logprob: -10.773752212524414
    7. '*x' → logprob: -11.523752212524414
    8. '*[' → logprob: -11.773752212524414
    9. '[j' → logprob: -12.148752212524414
    10. ' ' → logprob: -12.648752212524414

Token 178: ' s' (ID: 265)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6343580484390259
    2. 's' → logprob: -0.7593580484390259
    3. ' x' → logprob: -6.509357929229736
    4. ' s' → logprob: -8.259358406066895
    5. '(x' → logprob: -11.884358406066895
    6. ' ' → logprob: -14.259358406066895
    7. '(s' → logprob: -15.259358406066895
    8. '   ' → logprob: -15.259358406066895
    9. '  ' → logprob: -16.071857452392578
    10. 'c' → logprob: -16.196857452392578

Token 179: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008697715820744634
    2. '[j' → logprob: -7.2508697509765625
    3. '2' → logprob: -8.750869750976562
    4. '[
' → logprob: -14.625869750976562
    5. '(' → logprob: -15.000869750976562
    6. ' [' → logprob: -15.125869750976562
    7. '```' → logprob: -16.250869750976562
    8. 'j' → logprob: -16.750869750976562
    9. '[c' → logprob: -17.000869750976562
    10. ' ' → logprob: -17.375869750976562

Token 180: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.531315314830863e-06
    2. 'j' → logprob: -13.500003814697266
    3. '[' → logprob: -14.250003814697266
    4. '-' → logprob: -15.000003814697266
    5. ' ' → logprob: -15.125003814697266
    6. '```' → logprob: -15.250003814697266
    7. '
' → logprob: -15.875003814697266
    8. 's' → logprob: -16.250003814697266
    9. ']' → logprob: -17.062503814697266
    10. '1' → logprob: -17.125003814697266

Token 181: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014863037504255772
    2. ']' → logprob: -4.639863014221191
    3. '}' → logprob: -5.639863014221191
    4. 'x' → logprob: -8.389863014221191
    5. '       ' → logprob: -8.389863014221191
    6. '           ' → logprob: -8.389863014221191
    7. '')' → logprob: -8.514863014221191
    8. '(x' → logprob: -9.014863014221191
    9. ' )' → logprob: -9.139863014221191
    10. ')
' → logprob: -9.389863014221191

Token 182: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10015846788883209
    2. '       ' → logprob: -3.225158452987671
    3. 'val' → logprob: -3.600158452987671
    4. ' val' → logprob: -3.725158452987671
    5. '
' → logprob: -6.22515869140625
    6. '        
' → logprob: -7.85015869140625
    7. '            
' → logprob: -8.22515869140625
    8. '               ' → logprob: -8.47515869140625
    9. ',val' → logprob: -8.72515869140625
    10. '[val' → logprob: -8.85015869140625

Token 183: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.0040531097911298275
    2. ' val' → logprob: -5.629053115844727
    3. '           ' → logprob: -7.754053115844727
    4. '       ' → logprob: -11.379053115844727
    5. '   ' → logprob: -12.754053115844727
    6. '	val' → logprob: -12.754053115844727
    7. 'res' → logprob: -13.129053115844727
    8. ',val' → logprob: -13.629053115844727
    9. '_val' → logprob: -13.879053115844727
    10. '
' → logprob: -14.129053115844727

Token 184: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.22585535049438477
    2. '+=' → logprob: -1.6008553504943848
    3. '=' → logprob: -7.975855350494385
    4. '+' → logprob: -9.850854873657227
    5. ' =' → logprob: -10.725854873657227
    6. ' ' → logprob: -11.475854873657227
    7. ']+=' → logprob: -12.475854873657227
    8. ' +' → logprob: -12.475854873657227
    9. '+=(' → logprob: -13.225854873657227
    10. '+='' → logprob: -13.475854873657227

Token 185: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.010613619349896908
    2. 'tr' → logprob: -4.885613441467285
    3. ' f' → logprob: -5.885613441467285
    4. ' triple' → logprob: -8.885613441467285
    5. 'fun' → logprob: -10.385613441467285
    6. 'trip' → logprob: -11.385613441467285
    7. '(f' → logprob: -11.385613441467285
    8. '
' → logprob: -11.510613441467285
    9. '(tr' → logprob: -12.760613441467285
    10. '   ' → logprob: -12.885613441467285

Token 186: '(tr' (ID: 14363)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.07944740355014801
    2. '(tr' → logprob: -2.5794475078582764
    3. ' triple' → logprob: -7.579447269439697
    4. 'trip' → logprob: -10.079447746276855
    5. ' (' → logprob: -12.579447746276855
    6. '(' → logprob: -14.954447746276855
    7. '   ' → logprob: -15.579447746276855
    8. 'L' → logprob: -16.20444679260254
    9. '	tr' → logprob: -16.45444679260254
    10. ' tr' → logprob: -16.57944679260254

Token 187: 'iple' (ID: 5335)
  Prédit: 'iple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iple' → logprob: -0.00010616567305987701
    2. 'L' → logprob: -9.500105857849121
    3. 'iples' → logprob: -11.625105857849121
    4. 'ple' → logprob: -11.750105857849121
    5. 'IPLE' → logprob: -12.000105857849121
    6. '[' → logprob: -12.750105857849121
    7. 'ip' → logprob: -13.125105857849121
    8. 'i' → logprob: -13.375105857849121
    9. 'ipe' → logprob: -14.125105857849121
    10. '```' → logprob: -15.375105857849121

Token 188: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.963691804325208e-05
    2. '[' → logprob: -10.500029563903809
    3. ' [' → logprob: -13.500029563903809
    4. '```' → logprob: -15.000029563903809
    5. 'j' → logprob: -16.250030517578125
    6. '[js' → logprob: -16.625030517578125
    7. ')' → logprob: -16.625030517578125
    8. '[
' → logprob: -16.750030517578125
    9. '[i' → logprob: -17.500030517578125
    10. ']' → logprob: -17.750030517578125

Token 189: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2521997094154358
    2. '])' → logprob: -1.502199649810791
    3. '})' → logprob: -9.00220012664795
    4. '))' → logprob: -10.37720012664795
    5. ')
' → logprob: -10.37720012664795
    6. ' )' → logprob: -10.50220012664795
    7. ')]' → logprob: -11.00220012664795
    8. ']' → logprob: -11.37720012664795
    9. ')])' → logprob: -12.25220012664795
    10. '])
' → logprob: -12.37720012664795

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1395597904920578
    2. '
' → logprob: -2.139559745788574
    3. '        
' → logprob: -4.639559745788574
    4. '<|end|>' → logprob: -6.264559745788574
    5. ' 
' → logprob: -8.514559745788574
    6. '    
' → logprob: -8.764559745788574
    7. '  
' → logprob: -8.764559745788574
    8. '<|end|>' → logprob: -9.014559745788574
    9. '
' → logprob: -9.139559745788574
    10. '           ' → logprob: -10.264559745788574

Token 191: ' res' (ID: 694)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2471681833267212
    2. '       ' → logprob: -1.6221681833267212
    3. '\n' → logprob: -3.9971680641174316
    4. '   ' → logprob: -6.372168064117432
    5. '        
' → logprob: -7.247168064117432
    6. '
' → logprob: -8.62216854095459
    7. ' 
' → logprob: -9.24716854095459
    8. '    
' → logprob: -9.37216854095459
    9. '  
' → logprob: -9.62216854095459
    10. 'idx' → logprob: -9.62216854095459

Token 192: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6938119530677795
    2. '.append' → logprob: -0.6938119530677795
    3. '.app' → logprob: -7.443811893463135
    4. '.ap' → logprob: -10.568812370300293
    5. ' .' → logprob: -10.693812370300293
    6. '[' → logprob: -12.068812370300293
    7. '.extend' → logprob: -12.443812370300293
    8. '​.' → logprob: -12.443812370300293
    9. '.Append' → logprob: -12.943812370300293
    10. 'append' → logprob: -13.318812370300293

Token 193: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.00045807508286088705
    2. '(' → logprob: -8.250457763671875
    3. '(sum' → logprob: -9.375457763671875
    4. '(max' → logprob: -9.500457763671875
    5. 'val' → logprob: -11.125457763671875
    6. '((' → logprob: -11.500457763671875
    7. '(abs' → logprob: -12.500457763671875
    8. '(idx' → logprob: -12.875457763671875
    9. ' val' → logprob: -13.500457763671875
    10. ' (' → logprob: -13.750457763671875

Token 194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11570999771356583
    2. ')
' → logprob: -2.2407100200653076
    3. '       ' → logprob: -5.8657097816467285
    4. '   ' → logprob: -10.740710258483887
    5. ')
' → logprob: -11.365710258483887
    6. ' )' → logprob: -12.615710258483887
    7. ')

' → logprob: -13.115710258483887
    8. ')`
' → logprob: -13.115710258483887
    9. ')\
' → logprob: -13.240710258483887
    10. ' )
' → logprob: -13.865710258483887

Token 195: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6417011022567749
    2. '       ' → logprob: -0.7667011022567749
    3. '
' → logprob: -4.7667012214660645
    4. '    
' → logprob: -9.266700744628906
    5. 'idx' → logprob: -9.391700744628906
    6. '        
' → logprob: -9.516700744628906
    7. '
' → logprob: -9.641700744628906
    8. ' sorted' → logprob: -10.391700744628906
    9. '.sort' → logprob: -10.641700744628906
    10. ',' → logprob: -10.766700744628906

Token 196: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.014847883023321629
    2. ' idx' → logprob: -4.264847755432129
    3. '       ' → logprob: -7.764847755432129
    4. '   ' → logprob: -8.264847755432129
    5. '	idx' → logprob: -13.389847755432129
    6. '
' → logprob: -14.889847755432129
    7. 'index' → logprob: -15.514847755432129
    8. '_idx' → logprob: -16.639848709106445
    9. '           ' → logprob: -16.639848709106445
    10. '        
' → logprob: -17.139848709106445

Token 197: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2386733889579773
    2. ' +=' → logprob: -1.863673448562622
    3. '+' → logprob: -2.863673448562622
    4. '++' → logprob: -9.488673210144043
    5. '+++' → logprob: -10.488673210144043
    6. '<|end|>' → logprob: -10.488673210144043
    7. ' +' → logprob: -11.238673210144043
    8. '+="' → logprob: -11.863673210144043
    9. '+='' → logprob: -11.988673210144043
    10. '=' → logprob: -12.613673210144043

Token 198: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -18.12507438659668
    4. '   ' → logprob: -18.87507438659668
    5. '１' → logprob: -21.06257438659668
    6. '  ' → logprob: -21.43757438659668
    7. '۱' → logprob: -22.31257438659668
    8. '
' → logprob: -22.50007438659668
    9. '    ' → logprob: -22.68757438659668
    10. '       ' → logprob: -22.81257438659668

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -19.75
    4. '   ' → logprob: -22.625
    5. '１' → logprob: -22.625
    6. '۱' → logprob: -23.75
    7. '+' → logprob: -24.8125
    8. '१' → logprob: -25.1875
    9. '
' → logprob: -25.375
    10. '১' → logprob: -25.4375

Token 200: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47896984219551086
    2. 'res' → logprob: -1.1039698123931885
    3. '   ' → logprob: -3.9789698123931885
    4. ' res' → logprob: -4.353970050811768
    5. '    
' → logprob: -4.603970050811768
    6. '  
' → logprob: -6.728970050811768
    7. '```' → logprob: -6.853970050811768
    8. '

' → logprob: -6.978970050811768
    9. '
' → logprob: -7.103970050811768
    10. ',' → logprob: -7.228970050811768

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5259659886360168
    2. 'res' → logprob: -1.025965929031372
    3. ' res' → logprob: -3.275965929031372
    4. '    
' → logprob: -4.775966167449951
    5. '
' → logprob: -5.650966167449951
    6. '```' → logprob: -7.900966167449951
    7. '        
' → logprob: -9.525965690612793
    8. ' ' → logprob: -9.650965690612793
    9. ',' → logprob: -10.025965690612793
    10. ')' → logprob: -10.150965690612793

Token 202: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.00010711929644457996
    2. '   ' → logprob: -9.375106811523438
    3. '```' → logprob: -11.625106811523438
    4. ' res' → logprob: -12.125106811523438
    5. 'sorted' → logprob: -12.375106811523438
    6. '    
' → logprob: -14.125106811523438
    7. 's' → logprob: -14.375106811523438
    8. '
' → logprob: -14.500106811523438
    9. 'sort' → logprob: -14.875106811523438
    10. 'r' → logprob: -15.125106811523438

Token 203: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.014272449538111687
    2. '.' → logprob: -4.264272212982178
    3. '<|end|>' → logprob: -9.764272689819336
    4. 'sort' → logprob: -11.139272689819336
    5. '_sorted' → logprob: -11.264272689819336
    6. '   ' → logprob: -12.764272689819336
    7. ' =' → logprob: -12.764272689819336
    8. '=' → logprob: -13.014272689819336
    9. '[:]' → logprob: -13.139272689819336
    10. ')' → logprob: -13.139272689819336

Token 204: '(key' (ID: 8932)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7256343364715576
    2. 'max' → logprob: -1.3506343364715576
    3. '    
' → logprob: -2.6006343364715576
    4. '[::-' → logprob: -2.7256343364715576
    5. '[' → logprob: -3.6006343364715576
    6. '
' → logprob: -3.8506343364715576
    7. '[max' → logprob: -4.225634574890137
    8. '#' → logprob: -4.600634574890137
    9. '[-' → logprob: -4.850634574890137
    10. 'res' → logprob: -5.350634574890137

Token 205: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.576028048992157
    2. '=' → logprob: -0.826028048992157
    3. '=sum' → logprob: -10.701027870178223
    4. 'abs' → logprob: -10.951027870178223
    5. 'lambda' → logprob: -11.076027870178223
    6. '=int' → logprob: -11.451027870178223
    7. '=f' → logprob: -11.451027870178223
    8. '=
' → logprob: -12.576027870178223
    9. '=l' → logprob: -13.326027870178223
    10. ' =' → logprob: -13.576027870178223

Token 206: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0017626441549509764
    2. ' x' → logprob: -6.376762866973877
    3. 'v' → logprob: -10.876762390136719
    4. 'a' → logprob: -11.126762390136719
    5. 'y' → logprob: -11.626762390136719
    6. '-x' → logprob: -11.751762390136719
    7. '-' → logprob: -12.376762390136719
    8. 'z' → logprob: -13.251762390136719
    9. '   ' → logprob: -14.376762390136719
    10. ':x' → logprob: -14.501762390136719

Token 207: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004921820014715195
    2. ':-' → logprob: -5.754921913146973
    3. ' :' → logprob: -7.004921913146973
    4. ')' → logprob: -8.129921913146973
    5. ':x' → logprob: -9.004921913146973
    6. ',' → logprob: -9.129921913146973
    7. '-' → logprob: -9.254921913146973
    8. ':
' → logprob: -10.129921913146973
    9. '=' → logprob: -10.379921913146973
    10. '=-' → logprob: -10.379921913146973

Token 208: ' -' (ID: 533)
  Prédit: '-x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-x' → logprob: -0.3432849943637848
    2. ' -' → logprob: -1.5932849645614624
    3. '-' → logprob: -2.468285083770752
    4. 'x' → logprob: -6.093285083770752
    5. ' x' → logprob: -8.968284606933594
    6. '-f' → logprob: -9.718284606933594
    7. '-val' → logprob: -9.718284606933594
    8. '-int' → logprob: -11.468284606933594
    9. '   ' → logprob: -11.593284606933594
    10. '-value' → logprob: -11.843284606933594

Token 209: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.292095299111679e-05
    2. 'abs' → logprob: -9.750082969665527
    3. ' x' → logprob: -10.625082969665527
    4. '(x' → logprob: -16.62508201599121
    5. '1' → logprob: -16.87508201599121
    6. ' abs' → logprob: -17.75008201599121
    7. 'int' → logprob: -18.00008201599121
    8. ')' → logprob: -18.25008201599121
    9. '(abs' → logprob: -18.25008201599121
    10. ')x' → logprob: -18.50008201599121

Token 210: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.531813702778891e-05
    2. ' )' → logprob: -9.50009536743164
    3. ')
' → logprob: -11.25009536743164
    4. ',' → logprob: -12.87509536743164
    5. ')return' → logprob: -14.25009536743164
    6. '))' → logprob: -14.37509536743164
    7. '),' → logprob: -14.62509536743164
    8. '<|end|>' → logprob: -14.87509536743164
    9. '1' → logprob: -15.00009536743164
    10. '[' → logprob: -15.12509536743164

Token 211: '   ' (ID: 271)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.1718342304229736
    2. 'max' → logprob: -1.2968342304229736
    3. 'sum' → logprob: -1.4218342304229736
    4. '   ' → logprob: -2.6718342304229736
    5. 'result' → logprob: -3.5468342304229736
    6. 'for' → logprob: -4.5468339920043945
    7. '
' → logprob: -4.6718339920043945
    8. 'res' → logprob: -4.7968339920043945
    9. '<|end|>' → logprob: -4.9218339920043945
    10. 'top' → logprob: -5.4218339920043945

Token 212: ' maxim' (ID: 29045)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3125818967819214
    2. 'sum' → logprob: -1.8125818967819214
    3. 'max' → logprob: -2.937582015991211
    4. 'ans' → logprob: -3.437582015991211
    5. 'result' → logprob: -4.437582015991211
    6. 'print' → logprob: -6.062582015991211
    7. 'summ' → logprob: -6.187582015991211
    8. 'answer' → logprob: -7.062582015991211
    9. 'acc' → logprob: -7.312582015991211
    10. 'tot' → logprob: -7.687582015991211

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.239198699593544
    2. ' +=' → logprob: -1.6141986846923828
    3. '=' → logprob: -4.489198684692383
    4. ' ' → logprob: -6.364198684692383
    5. '+=' → logprob: -7.864198684692383
    6. '<|end|>' → logprob: -8.614198684692383
    7. ',' → logprob: -10.364198684692383
    8. ' ,' → logprob: -10.364198684692383
    9. ' |=' → logprob: -10.739198684692383
    10. ')' → logprob: -11.364198684692383

Token 214: ' maxim' (ID: 29045)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0015023599844425917
    2. ' max' → logprob: -6.501502513885498
    3. '(max' → logprob: -17.876502990722656
    4. '	max' → logprob: -18.501502990722656
    5. '[max' → logprob: -18.751502990722656
    6. ',max' → logprob: -19.376502990722656
    7. '   ' → logprob: -19.376502990722656
    8. 'res' → logprob: -20.376502990722656
    9. '=max' → logprob: -20.501502990722656
    10. '.max' → logprob: -21.376502990722656

Token 215: ' if' (ID: 538)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07277167588472366
    2. ' max' → logprob: -3.0727717876434326
    3. '=max' → logprob: -4.9477715492248535
    4. '=' → logprob: -5.1977715492248535
    5. 'if' → logprob: -6.0727715492248535
    6. ' if' → logprob: -6.5727715492248535
    7. ' ' → logprob: -6.8227715492248535
    8. '>' → logprob: -6.9477715492248535
    9. ',max' → logprob: -7.0727715492248535
    10. ' =' → logprob: -7.0727715492248535

Token 216: ' maxim' (ID: 29045)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0003017385315615684
    2. ' maxim' → logprob: -8.125301361083984
    3. 'res' → logprob: -12.500301361083984
    4. ' max' → logprob: -13.375301361083984
    5. 'maximize' → logprob: -16.250301361083984
    6. '   ' → logprob: -16.375301361083984
    7. '(max' → logprob: -16.625301361083984
    8. 'm' → logprob: -17.000301361083984
    9. 'val' → logprob: -17.250301361083984
    10. '>' → logprob: -17.250301361083984

Token 217: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03157723695039749
    2. '>=' → logprob: -3.7815773487091064
    3. ' >' → logprob: -4.906577110290527
    4. ' >=' → logprob: -7.281577110290527
    5. '>x' → logprob: -8.656577110290527
    6. '>s' → logprob: -11.906577110290527
    7. 'else' → logprob: -12.031577110290527
    8. '>end' → logprob: -12.031577110290527
    9. '>
' → logprob: -12.406577110290527
    10. 'max' → logprob: -12.781577110290527

Token 218: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.2128104418516159
    2. 'fun' → logprob: -1.7128103971481323
    3. ' sum' → logprob: -4.712810516357422
    4. ' functools' → logprob: -6.212810516357422
    5. '(sum' → logprob: -8.837810516357422
    6. 'max' → logprob: -9.962810516357422
    7. '   ' → logprob: -10.337810516357422
    8. '(f' → logprob: -10.462810516357422
    9. 'f' → logprob: -10.587810516357422
    10. 'val' → logprob: -10.962810516357422

Token 219: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.004301814828068018
    2. 'res' → logprob: -5.504302024841309
    3. '(' → logprob: -8.629302024841309
    4. ' (' → logprob: -10.254302024841309
    5. ' res' → logprob: -11.629302024841309
    6. '(
' → logprob: -15.504302024841309
    7. '```' → logprob: -16.504301071166992
    8. '	res' → logprob: -17.254301071166992
    9. '$res' → logprob: -17.504301071166992
    10. '(sum' → logprob: -17.504301071166992

Token 220: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -2.4391956685576588e-05
    2. '[' → logprob: -10.625024795532227
    3. ' [:' → logprob: -17.625024795532227
    4. '(' → logprob: -19.375024795532227
    5. '   ' → logprob: -19.750024795532227
    6. '[
' → logprob: -19.750024795532227
    7. '0' → logprob: -19.875024795532227
    8. '[:]' → logprob: -20.250024795532227
    9. '][:' → logprob: -20.625024795532227
    10. '[:-' → logprob: -20.875024795532227

Token 221: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -7.994086627149954e-05
    2. ' M' → logprob: -9.500080108642578
    3. '   ' → logprob: -13.000080108642578
    4. '(M' → logprob: -13.500080108642578
    5. '[M' → logprob: -14.625080108642578
    6. ' ' → logprob: -14.875080108642578
    7. '
' → logprob: -15.750080108642578
    8. '  ' → logprob: -15.875080108642578
    9. '    ' → logprob: -16.375080108642578
    10. '	M' → logprob: -17.125080108642578

Token 222: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0184183306992054
    2. '])' → logprob: -4.018418312072754
    3. ' )' → logprob: -8.393418312072754
    4. '`)' → logprob: -12.268418312072754
    5. 'else' → logprob: -12.393418312072754
    6. '>)' → logprob: -12.518418312072754
    7. '   ' → logprob: -12.643418312072754
    8. '))' → logprob: -13.018418312072754
    9. ' ])' → logprob: -13.018418312072754
    10. '+)' → logprob: -13.143418312072754

Token 223: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.16024503111839294
    2. ' else' → logprob: -1.9102450609207153
    3. '   ' → logprob: -11.785244941711426
    4. ' ' → logprob: -12.660244941711426
    5. 'max' → logprob: -12.785244941711426
    6. ' 
' → logprob: -12.785244941711426
    7. '
' → logprob: -13.535244941711426
    8. 'sum' → logprob: -14.285244941711426
    9. '```' → logprob: -14.660244941711426
    10. '  ' → logprob: -14.785244941711426

Token 224: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.2519306540489197
    2. ' sum' → logprob: -1.5019307136535645
    3. '   ' → logprob: -14.126930236816406
    4. '(sum' → logprob: -14.626930236816406
    5. '	sum' → logprob: -15.751930236816406
    6. ' ' → logprob: -16.751930236816406
    7. '  ' → logprob: -17.126930236816406
    8. '    ' → logprob: -17.126930236816406
    9. '=sum' → logprob: -17.626930236816406
    10. ',sum' → logprob: -18.876930236816406

Token 225: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -5.6100132496794686e-05
    2. '(' → logprob: -9.875056266784668
    3. 'res' → logprob: -12.375056266784668
    4. '(
' → logprob: -16.62505531311035
    5. '(rest' → logprob: -16.87505531311035
    6. ' (' → logprob: -17.00005531311035
    7. '=res' → logprob: -18.00005531311035
    8. '$res' → logprob: -18.12505531311035
    9. '	res' → logprob: -18.12505531311035
    10. '(vals' → logprob: -18.37505531311035

Token 226: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -8.061054359131958e-06
    2. '   ' → logprob: -12.125007629394531
    3. '][:' → logprob: -13.375007629394531
    4. ' [:' → logprob: -14.375007629394531
    5. '       ' → logprob: -16.25000762939453
    6. ':' → logprob: -16.25000762939453
    7. '[' → logprob: -16.62500762939453
    8. '
' → logprob: -16.75000762939453
    9. '           ' → logprob: -17.12500762939453
    10. '[:]' → logprob: -17.25000762939453

Token 227: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -2.45848218582978e-06
    2. ' M' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.500001907348633
    4. '
' → logprob: -19.125001907348633
    5. ' ' → logprob: -19.250001907348633
    6. '[M' → logprob: -19.375001907348633
    7. ')' → logprob: -19.500001907348633
    8. '[' → logprob: -19.625001907348633
    9. '```' → logprob: -19.625001907348633
    10. '(M' → logprob: -20.000001907348633

Token 228: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0001733855315251276
    2. '])
' → logprob: -9.375173568725586
    3. ')' → logprob: -9.500173568725586
    4. '])]' → logprob: -12.250173568725586
    5. ')])' → logprob: -13.000173568725586
    6. ']))' → logprob: -13.500173568725586
    7. ']' → logprob: -14.250173568725586
    8. ')]' → logprob: -14.375173568725586
    9. ' ])' → logprob: -14.625173568725586
    10. '))' → logprob: -14.625173568725586

Token 229: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001212614355608821
    2. '<|end|>' → logprob: -7.2512125968933105
    3. 'max' → logprob: -8.376213073730469
    4. ')' → logprob: -8.751213073730469
    5. '#' → logprob: -10.001213073730469
    6. '```' → logprob: -10.751213073730469
    7. 'return' → logprob: -11.376213073730469
    8. ' print' → logprob: -11.751213073730469
    9. 'for' → logprob: -12.126213073730469
    10. '
' → logprob: -12.501213073730469

Token 230: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.062170468270778656
    2. '(' → logprob: -2.8121705055236816
    3. '()' → logprob: -9.062170028686523
    4. '('' → logprob: -9.937170028686523
    5. 'max' → logprob: -10.437170028686523
    6. '(`' → logprob: -12.437170028686523
    7. '(sum' → logprob: -13.812170028686523
    8. '("("' → logprob: -13.937170028686523
    9. '(Max' → logprob: -14.687170028686523
    10. '(
' → logprob: -14.812170028686523

Token 231: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.0007831838447600603
    2. 'm' → logprob: -7.5007829666137695
    3. 'max' → logprob: -8.62578296661377
    4. 'imax' → logprob: -10.12578296661377
    5. 'um' → logprob: -13.50078296661377
    6. 'am' → logprob: -13.75078296661377
    7. 'import' → logprob: -13.75078296661377
    8. ')' → logprob: -13.75078296661377
    9. 'ax' → logprob: -14.50078296661377
    10. 'sim' → logprob: -14.62578296661377

Token 232: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ' )' → logprob: -13.00000286102295
    3. ')
' → logprob: -15.62500286102295
    4. ')`' → logprob: -16.500001907348633
    5. '')' → logprob: -17.250001907348633
    6. ')}' → logprob: -18.250001907348633
    7. '))' → logprob: -18.625001907348633
    8. '),' → logprob: -18.625001907348633
    9. ')#' → logprob: -18.750001907348633
    10. '`)' → logprob: -18.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 230
Tokens correctement prédits (1ère position, stricte): 93
Tokens correctement prédits (1ère position, avec adaptation): 100
Tokens correctement prédits (top 10): 191
Précision stricte (1ère position): 40.43%
Précision adaptée (1ère position): 43.48%
Précision (top 10): 83.04%
================================================================================
