================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# On commence par lire deux entiers depuis l'entrée standard
# input() lit une ligne de texte, .split() la découpe en éléments séparés, map(int, ...) convertit chaque élément en entier
# H représente le nombre de lignes (hauteur), W le nombre de colonnes (largeur)
H, W = map(int, input().split())

# On initialise une liste vide dans laquelle chaque élément sera une sous-liste représentant une ligne de la grille
# On fait une boucle qui s'exécute H fois (pour chaque ligne)
# À chaque itération : on lit une ligne, on split la ligne, on convertit chaque élément en int, on forme une liste
# Puis on ajoute cette liste à la liste globale 'a' qui représente toute la grille
a = []
for i in range(H):  # 'i' varie de 0 à H-1 (chaque ligne)
    # On lit la ligne entière, on convertit tous les éléments en entier, et on crée la sous-liste
    ligne = list(map(int, input().split()))
    a.append(ligne)  # Ajout de la sous-liste à la liste principale

# On initialise la liste 'ans', qui va stocker la liste des opérations effectuées
ans = []

# On parcourt chaque élément de la grille sauf la dernière colonne
# Cette double boucle permet de visiter chaque case (i,j) sauf tout à droite
for i in range(H):  # Pour chaque ligne, 'i' de 0 à H-1
    for j in range(W-1):  # Pour chaque colonne sauf la dernière, 'j' de 0 à W-2
        # Si la valeur de la case courante est impaire (test sur le reste modulo 2)
        if a[i][j] % 2 == 1:
            # On enregistre l'opération : déplacer 1 unité de (i,j) à (i,j+1)
            # Les indices sont incrémentés de 1 pour l'affichage (indices humains, commencent à 1)
            ans.append([i+1, j+1, i+1, j+2])
            # On ajoute 1 à la case suivante (colonne à droite du curseur)
            a[i][j+1] += 1

# Après avoir effectué le déplacement vers la droite dans chaque ligne,
# Il reste potentiellement des valeurs impaires dans la dernière colonne
# On parcourt chaque ligne sauf la dernière pour gérer les valeurs impaires dans la dernière colonne
for i in range(H-1):  # 'i' de 0 à H-2
    # Si la dernière case de la ligne courante est impaire
    if a[i][W-1] % 2 == 1:
        # On effectue une opération de transfert vers la case du dessous (même colonne, ligne suivante)
        ans.append([i+1, W, i+2, W])  # Toujours indices +1 pour affichage humain
        # On ajoute 1 à la case du dessous
        a[i+1][W-1] += 1

# On affiche le nombre total d'opérations enregistrées dans 'ans'
print(len(ans))

# On affiche chaque opération une par une sous forme de quatre nombres entiers
# On décompose chaque liste de 'ans' dans les variables a, b, c, d (qui correspondent aux coordonnées)
for a, b, c, d in ans:
    print(a, b, c, d)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' On' (ID: 2160)
  → Token d'amorce (pas de prédiction)

Token 2: ' commence' (ID: 44755)
  → Token d'amorce (pas de prédiction)

Token 3: ' par' (ID: 686)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.269389271736145
    2. ' ' → logprob: -1.394389271736145
    3. '```' → logprob: -1.519389271736145
    4. ':' → logprob: -2.5193891525268555
    5. ',' → logprob: -3.5193891525268555
    6. '_' → logprob: -3.7693891525268555
    7. 'par' → logprob: -4.5193891525268555
    8. 'a' → logprob: -4.6443891525268555
    9. ' #' → logprob: -4.7693891525268555
    10. '\' → logprob: -4.8943891525268555

Token 4: ' lire' (ID: 46082)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.9799267053604126
    2. '#' → logprob: -1.4799267053604126
    3. 'import' → logprob: -1.6049267053604126
    4. ' créer' → logprob: -3.229926586151123
    5. ' import' → logprob: -3.479926586151123
    6. ' ' → logprob: -4.229926586151123
    7. ' importer' → logprob: -4.354926586151123
    8. ' écrire' → logprob: -4.604926586151123
    9. '```' → logprob: -4.604926586151123
    10. ' l' → logprob: -4.979926586151123

Token 5: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023941049352288246
    2. ' le' → logprob: -5.1489410400390625
    3. 'l' → logprob: -5.2739410400390625
    4. ' l' → logprob: -6.0239410400390625
    5. 'le' → logprob: -6.1489410400390625
    6. '_' → logprob: -6.2739410400390625
    7. ' la' → logprob: -6.5239410400390625
    8. ' =' → logprob: -6.8989410400390625
    9. ' ' → logprob: -7.5239410400390625
    10. ' #' → logprob: -7.7739410400390625

Token 6: ' ent' (ID: 1121)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.9064633250236511
    2. ' ' → logprob: -1.281463384628296
    3. ' lignes' → logprob: -1.406463384628296
    4. 'l' → logprob: -3.906463384628296
    5. ' ent' → logprob: -4.281463146209717
    6. ' mots' → logprob: -4.656463146209717
    7. ' #' → logprob: -5.406463146209717
    8. ' fichiers' → logprob: -5.531463146209717
    9. ' chaînes' → logprob: -6.156463146209717
    10. ' ```' → logprob: -6.406463146209717

Token 7: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.14176838099956512
    2. 'r' → logprob: -2.141768455505371
    3. 'ières' → logprob: -4.641768455505371
    4. 'êtes' → logprob: -6.641768455505371
    5. 't' → logprob: -6.891768455505371
    6. 'ier' → logprob: -7.391768455505371
    7. 'rée' → logprob: -8.141768455505371
    8. 'ri' → logprob: -8.266768455505371
    9. 'ié' → logprob: -8.266768455505371
    10. 'ries' → logprob: -8.766768455505371

Token 8: ' depuis' (ID: 16277)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.34132128953933716
    2. 'a' → logprob: -1.7163212299346924
    3. 'x' → logprob: -3.2163212299346924
    4. '\n' → logprob: -3.2163212299346924
    5. 'i' → logprob: -4.7163214683532715
    6. '```' → logprob: -5.3413214683532715
    7. 'e' → logprob: -5.7163214683532715
    8. '\' → logprob: -5.7163214683532715
    9. '#' → logprob: -6.0913214683532715
    10. ',' → logprob: -6.7163214683532715

Token 9: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.14239686727523804
    2. ' l' → logprob: -3.142396926879883
    3. ' input' → logprob: -3.267396926879883
    4. ' ' → logprob: -3.892396926879883
    5. 'le' → logprob: -4.517396926879883
    6. 'la' → logprob: -5.017396926879883
    7. ' la' → logprob: -5.267396926879883
    8. 'input' → logprob: -5.642396926879883
    9. ' stdin' → logprob: -6.267396926879883
    10. 'une' → logprob: -7.267396926879883

Token 10: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.1397075206041336
    2. 'a' → logprob: -3.264707565307617
    3. ''' → logprob: -3.514707565307617
    4. ''utilisateur' → logprob: -3.514707565307617
    5. 'entrée' → logprob: -3.764707565307617
    6. 'input' → logprob: -5.639707565307617
    7. ''espace' → logprob: -6.264707565307617
    8. ''ent' → logprob: -7.014707565307617
    9. '_' → logprob: -7.514707565307617
    10. 'e' → logprob: -7.639707565307617

Token 11: ' standard' (ID: 7024)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28625398874282837
    2. 'x' → logprob: -1.6612539291381836
    3. 'a' → logprob: -3.6612539291381836
    4. 'i' → logprob: -4.161253929138184
    5. '```' → logprob: -4.911253929138184
    6. '\n' → logprob: -5.411253929138184
    7. 'e' → logprob: -5.786253929138184
    8. 'ent' → logprob: -7.286253929138184
    9. '``' → logprob: -7.286253929138184
    10. '`' → logprob: -8.161253929138184

Token 12: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6453216075897217
    2. 'n' → logprob: -1.0203216075897217
    3. 'x' → logprob: -2.3953216075897217
    4. '```' → logprob: -4.770321846008301
    5. 'e' → logprob: -4.895321846008301
    6. 'i' → logprob: -5.395321846008301
    7. '\n' → logprob: -7.145321846008301
    8. 'ent' → logprob: -7.270321846008301
    9. '`' → logprob: -7.520321846008301
    10. 'd' → logprob: -8.3953218460083

Token 13: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.29298290610313416
    2. 'n' → logprob: -1.5429829359054565
    3. 'x' → logprob: -3.417982816696167
    4. '```' → logprob: -5.917983055114746
    5. '\n' → logprob: -6.667983055114746
    6. 'e' → logprob: -6.667983055114746
    7. 'i' → logprob: -7.167983055114746
    8. '\' → logprob: -7.542983055114746
    9. '`' → logprob: -8.292983055114746
    10. 'd' → logprob: -9.167983055114746

Token 14: ' input' (ID: 3422)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03647077828645706
    2. 'x' → logprob: -3.661470890045166
    3. 'n' → logprob: -4.661470890045166
    4. '```' → logprob: -7.661470890045166
    5. 'i' → logprob: -9.286470413208008
    6. ' a' → logprob: -11.036470413208008
    7. '#' → logprob: -11.286470413208008
    8. 'e' → logprob: -11.411470413208008
    9. 'num' → logprob: -11.536470413208008
    10. 'v' → logprob: -11.786470413208008

Token 15: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13232380151748657
    2. '(' → logprob: -2.257323741912842
    3. '_' → logprob: -5.257323741912842
    4. 's' → logprob: -5.507323741912842
    5. '1' → logprob: -6.882323741912842
    6. ' =' → logprob: -6.882323741912842
    7. ')' → logprob: -7.007323741912842
    8. ' ()' → logprob: -7.132323741912842
    9. '#' → logprob: -7.757323741912842
    10. 'user' → logprob: -8.00732421875

Token 16: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03153345733880997
    2. '()' → logprob: -3.9065334796905518
    3. '.' → logprob: -4.906533241271973
    4. ')' → logprob: -6.906533241271973
    5. '(
' → logprob: -7.406533241271973
    6. ' (' → logprob: -7.531533241271973
    7. '#' → logprob: -8.281533241271973
    8. ' ' → logprob: -8.281533241271973
    9. ',' → logprob: -8.531533241271973
    10. '[' → logprob: -8.781533241271973

Token 17: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.04891412705183029
    2. 'une' → logprob: -3.9239141941070557
    3. ' la' → logprob: -4.298913955688477
    4. ' ' → logprob: -4.923913955688477
    5. ' un' → logprob: -6.048913955688477
    6. 's' → logprob: -6.923913955688477
    7. '()' → logprob: -7.423913955688477
    8. ' ' → logprob: -7.548913955688477
    9. ' l' → logprob: -7.798913955688477
    10. 'l' → logprob: -7.798913955688477

Token 18: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.48661255836486816
    2. ' ligne' → logprob: -1.2366125583648682
    3. 'ligne' → logprob: -3.111612558364868
    4. ' chaine' → logprob: -4.111612319946289
    5. 'chaine' → logprob: -4.236612319946289
    6. ' ' → logprob: -4.861612319946289
    7. 'cha' → logprob: -5.486612319946289
    8. 'entrée' → logprob: -5.736612319946289
    9. 'l' → logprob: -7.111612319946289
    10. ' string' → logprob: -7.486612319946289

Token 19: ' de' (ID: 334)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5868124961853027
    2. 'n' → logprob: -1.4618124961853027
    3. '.' → logprob: -2.9618124961853027
    4. ',' → logprob: -2.9618124961853027
    5. 's' → logprob: -3.0868124961853027
    6. '\' → logprob: -4.461812496185303
    7. ' ' → logprob: -4.461812496185303
    8. 'a' → logprob: -4.961812496185303
    9. 'e' → logprob: -5.211812496185303
    10. '#' → logprob: -5.961812496185303

Token 20: ' texte' (ID: 53492)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.32016757130622864
    2. ' texte' → logprob: -2.0701675415039062
    3. 'code' → logprob: -2.0701675415039062
    4. ' code' → logprob: -4.445167541503906
    5. 'l' → logprob: -5.195167541503906
    6. ' l' → logprob: -7.195167541503906
    7. 'entrée' → logprob: -7.195167541503906
    8. 'text' → logprob: -7.320167541503906
    9. 's' → logprob: -8.195167541503906
    10. 'la' → logprob: -8.570167541503906

Token 21: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7642809152603149
    2. 'a' → logprob: -1.389280915260315
    3. 'x' → logprob: -1.514280915260315
    4. '\n' → logprob: -3.0142807960510254
    5. 'i' → logprob: -5.514280796051025
    6. 'ent' → logprob: -6.014280796051025
    7. '\' → logprob: -6.389280796051025
    8. '```' → logprob: -6.389280796051025
    9. ',' → logprob: -7.014280796051025
    10. '#' → logprob: -7.014280796051025

Token 22: ' .' (ID: 887)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.09482908993959427
    2. ' et' → logprob: -3.9698290824890137
    3. ' ' → logprob: -4.094829082489014
    4. 'int' → logprob: -5.094829082489014
    5. ' int' → logprob: -5.469829082489014
    6. '.strip' → logprob: -5.844829082489014
    7. ' ,' → logprob: -5.969829082489014
    8. 'ens' → logprob: -5.969829082489014
    9. ' integers' → logprob: -5.969829082489014
    10. ',' → logprob: -5.969829082489014

Token 23: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.014722667634487152
    2. 'split' → logprob: -4.26472282409668
    3. 'rstrip' → logprob: -7.63972282409668
    4. ' strip' → logprob: -9.63972282409668
    5. ' split' → logprob: -11.38972282409668
    6. '.strip' → logprob: -13.88972282409668
    7. 'str' → logprob: -15.38972282409668
    8. 's' → logprob: -15.51472282409668
    9. 'replace' → logprob: -16.13972282409668
    10. 'r' → logprob: -16.88972282409668

Token 24: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17495985329151154
    2. '(' → logprob: -1.9249598979949951
    3. '('' → logprob: -4.299959659576416
    4. '("("' → logprob: -7.299959659576416
    5. '("' → logprob: -9.299960136413574
    6. '<|end|>' → logprob: -9.799960136413574
    7. '```' → logprob: -10.549960136413574
    8. ''' → logprob: -10.799960136413574
    9. ' ()' → logprob: -11.049960136413574
    10. '()]' → logprob: -11.049960136413574

Token 25: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.019730595871806145
    2. '(' → logprob: -4.144730567932129
    3. '<|end|>' → logprob: -6.394730567932129
    4. '('' → logprob: -7.394730567932129
    5. ' ()' → logprob: -7.769730567932129
    6. '().' → logprob: -8.269730567932129
    7. '()[' → logprob: -9.019730567932129
    8. '("("' → logprob: -9.769730567932129
    9. ')' → logprob: -10.019730567932129
    10. '(),' → logprob: -10.144730567932129

Token 26: ' décou' (ID: 68302)
  Prédit: ' sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sé' → logprob: -0.6932947039604187
    2. 'sé' → logprob: -1.1932947635650635
    3. 'd' → logprob: -2.5682947635650635
    4. 'div' → logprob: -3.1932947635650635
    5. ' décou' → logprob: -3.1932947635650635
    6. 'split' → logprob: -3.8182947635650635
    7. 's' → logprob: -5.443294525146484
    8. 'sep' → logprob: -6.693294525146484
    9. 'dé' → logprob: -6.693294525146484
    10. 'sc' → logprob: -6.818294525146484

Token 27: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.014905785210430622
    2. 'p' → logprob: -4.88990592956543
    3. 'page' → logprob: -5.13990592956543
    4. 'пе' → logprob: -8.51490592956543
    5. 'per' → logprob: -8.76490592956543
    6. '```' → logprob: -8.88990592956543
    7. 'pé' → logprob: -9.01490592956543
    8. 'ppe' → logprob: -9.13990592956543
    9. 'pera' → logprob: -9.13990592956543
    10. '>' → logprob: -9.51490592956543

Token 28: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1090532541275024
    2. ' ' → logprob: -1.3590532541275024
    3. '(' → logprob: -2.109053134918213
    4. ',' → logprob: -2.234053134918213
    5. ' (' → logprob: -3.359053134918213
    6. 's' → logprob: -3.609053134918213
    7. '[' → logprob: -3.859053134918213
    8. ')' → logprob: -3.859053134918213
    9. ' en' → logprob: -3.859053134918213
    10. ' ,' → logprob: -4.859053134918213

Token 29: ' éléments' (ID: 57375)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3804769515991211
    2. 'tokens' → logprob: -2.005476951599121
    3. '['' → logprob: -2.505476951599121
    4. ' morceaux' → logprob: -4.005476951599121
    5. '["' → logprob: -4.130476951599121
    6. '```' → logprob: -4.505476951599121
    7. '[' → logprob: -5.005476951599121
    8. 'élé' → logprob: -5.130476951599121
    9. ' ' → logprob: -5.130476951599121
    10. ' tokens' → logprob: -5.630476951599121

Token 30: ' sépar' (ID: 97160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5005470514297485
    2. '[' → logprob: -2.250546932220459
    3. 'ent' → logprob: -2.875546932220459
    4. ',' → logprob: -3.000546932220459
    5. 'a' → logprob: -3.125546932220459
    6. 'e' → logprob: -3.625546932220459
    7. 's' → logprob: -4.125546932220459
    8. '```' → logprob: -4.500546932220459
    9. 'tokens' → logprob: -4.750546932220459
    10. '`' → logprob: -4.875546932220459

Token 31: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.00031091354321688414
    2. 'es' → logprob: -8.625310897827148
    3. 'é' → logprob: -9.250310897827148
    4. 'ées' → logprob: -11.250310897827148
    5. 'ès' → logprob: -11.500310897827148
    6. 'ée' → logprob: -12.125310897827148
    7. 's' → logprob: -12.750310897827148
    8. '```' → logprob: -13.375310897827148
    9. ' és' → logprob: -14.625310897827148
    10. 'e' → logprob: -14.875310897827148

Token 32: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0846158266067505
    2. ',' → logprob: -1.2096158266067505
    3. 'n' → logprob: -2.084615707397461
    4. 's' → logprob: -2.209615707397461
    5. 'a' → logprob: -3.959615707397461
    6. '[
' → logprob: -4.334615707397461
    7. 'e' → logprob: -4.709615707397461
    8. '```' → logprob: -4.834615707397461
    9. ' ,' → logprob: -4.959615707397461
    10. '`' → logprob: -5.209615707397461

Token 33: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.1438709497451782
    2. ' input' → logprob: -1.7688709497451782
    3. 'map' → logprob: -2.5188708305358887
    4. ' la' → logprob: -2.7688708305358887
    5. 'a' → logprob: -3.1438708305358887
    6. ',' → logprob: -3.1438708305358887
    7. ' map' → logprob: -3.5188708305358887
    8. '[' → logprob: -3.5188708305358887
    9. ' and' → logprob: -3.6438708305358887
    10. ' ' → logprob: -3.7688708305358887

Token 34: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.48318639397621155
    2. '(' → logprob: -1.3581863641738892
    3. '(lambda' → logprob: -2.1081864833831787
    4. '[int' → logprob: -6.3581862449646
    5. 'int' → logprob: -7.1081862449646
    6. '(str' → logprob: -7.2331862449646
    7. '<int' → logprob: -8.108186721801758
    8. '```' → logprob: -8.108186721801758
    9. '=int' → logprob: -8.733186721801758
    10. '(
' → logprob: -9.358186721801758

Token 35: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1805882602930069
    2. ',' → logprob: -1.8055882453918457
    3. '),' → logprob: -8.055588722229004
    4. ' ,' → logprob: -8.680588722229004
    5. ' )' → logprob: -9.055588722229004
    6. ',int' → logprob: -10.055588722229004
    7. ' ' → logprob: -10.430588722229004
    8. '))' → logprob: -10.555588722229004
    9. '   ' → logprob: -11.055588722229004
    10. ')`' → logprob: -11.180588722229004

Token 36: ' ...)' (ID: 100545)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7487919330596924
    2. 'input' → logprob: -0.9987919330596924
    3. ')' → logprob: -1.8737919330596924
    4. ' )' → logprob: -5.623791694641113
    5. ' la' → logprob: -8.498791694641113
    6. '=input' → logprob: -8.748791694641113
    7. '(input' → logprob: -8.873791694641113
    8. '[input' → logprob: -9.248791694641113
    9. ' ' → logprob: -9.373791694641113
    10. ')#' → logprob: -9.748791694641113

Token 37: ' convert' (ID: 8452)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5517023801803589
    2. 'a' → logprob: -1.4267023801803589
    3. 'n' → logprob: -2.3017024993896484
    4. 'ent' → logprob: -3.6767024993896484
    5. 'x' → logprob: -4.426702499389648
    6. ' )' → logprob: -4.801702499389648
    7. ',' → logprob: -5.301702499389648
    8. '(' → logprob: -5.676702499389648
    9. 'numbers' → logprob: -5.676702499389648
    10. '()' → logprob: -5.926702499389648

Token 38: 'it' (ID: 278)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.32701313495635986
    2. 'issant' → logprob: -1.8270131349563599
    3. 'it' → logprob: -2.4520130157470703
    4. 'is' → logprob: -3.9520130157470703
    5. 'issent' → logprob: -5.45201301574707
    6. '```' → logprob: -5.82701301574707
    7. 't' → logprob: -7.57701301574707
    8. 'ie' → logprob: -7.70201301574707
    9. 'iss' → logprob: -7.82701301574707
    10. 'issez' → logprob: -8.07701301574707

Token 39: ' chaque' (ID: 21194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07194212079048157
    2. '(int' → logprob: -2.821942090988159
    3. 'int' → logprob: -6.196942329406738
    4. '(lambda' → logprob: -6.446942329406738
    5. '(input' → logprob: -6.446942329406738
    6. 'les' → logprob: -6.946942329406738
    7. '(
' → logprob: -7.821942329406738
    8. ' les' → logprob: -7.946942329406738
    9. ' la' → logprob: -7.946942329406738
    10. ')' → logprob: -8.071942329406738

Token 40: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0006759775569662452
    2. ' élément' → logprob: -7.500676155090332
    3. 'element' → logprob: -10.625676155090332
    4. 'entrée' → logprob: -10.750676155090332
    5. 'él' → logprob: -11.000676155090332
    6. 'token' → logprob: -11.250676155090332
    7. 'é' → logprob: -11.375676155090332
    8. 'chaine' → logprob: -11.875676155090332
    9. ')' → logprob: -12.250676155090332
    10. ' ' → logprob: -12.375676155090332

Token 41: ' en' (ID: 469)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8425576090812683
    2. 'a' → logprob: -1.467557668685913
    3. ')' → logprob: -2.342557668685913
    4. '(' → logprob: -2.592557668685913
    5. 'e' → logprob: -3.717557668685913
    6. 'x' → logprob: -3.842557668685913
    7. 'ent' → logprob: -3.967557668685913
    8. ',' → logprob: -4.217557430267334
    9. 'i' → logprob: -4.217557430267334
    10. 'l' → logprob: -4.967557430267334

Token 42: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.2116839736700058
    2. 'int' → logprob: -2.461683988571167
    3. ' entier' → logprob: -2.961683988571167
    4. ' ent' → logprob: -3.586683988571167
    5. ' int' → logprob: -3.711683988571167
    6. ' des' → logprob: -7.711683750152588
    7. 'inte' → logprob: -8.336684226989746
    8. ' un' → logprob: -8.336684226989746
    9. ' integers' → logprob: -9.086684226989746
    10. ' ' → logprob: -9.336684226989746

Token 43: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4408145248889923
    2. 'n' → logprob: -1.44081449508667
    3. 'x' → logprob: -2.19081449508667
    4. 'i' → logprob: -5.69081449508667
    5. '#' → logprob: -6.06581449508667
    6. 'e' → logprob: -7.94081449508667
    7. ':' → logprob: -7.94081449508667
    8. ',' → logprob: -8.315814971923828
    9. '-' → logprob: -8.690814971923828
    10. '```' → logprob: -8.940814971923828

Token 44: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3075273334980011
    2. 'n' → logprob: -1.5575273036956787
    3. 'x' → logprob: -2.9325273036956787
    4. '```' → logprob: -8.807527542114258
    5. 'ent' → logprob: -9.057527542114258
    6. 'numbers' → logprob: -9.557527542114258
    7. '#' → logprob: -9.682527542114258
    8. ' a' → logprob: -9.932527542114258
    9. 'nums' → logprob: -10.182527542114258
    10. 'e' → logprob: -10.307527542114258

Token 45: ' H' (ID: 487)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0969553142786026
    2. 'n' → logprob: -2.5969552993774414
    3. ' a' → logprob: -4.846955299377441
    4. 'x' → logprob: -4.846955299377441
    5. 'ent' → logprob: -6.721955299377441
    6. 'numbers' → logprob: -8.221955299377441
    7. '```' → logprob: -8.596955299377441
    8. ' n' → logprob: -9.346955299377441
    9. ' nombres' → logprob: -9.471955299377441
    10. ' x' → logprob: -9.596955299377441

Token 46: ' représente' (ID: 88912)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2542612552642822
    2. ',' → logprob: -2.1292612552642822
    3. 'a' → logprob: -3.3792612552642822
    4. ' =' → logprob: -3.5042612552642822
    5. '=' → logprob: -4.879261016845703
    6. '_' → logprob: -5.254261016845703
    7. 'd' → logprob: -5.504261016845703
    8. '1' → logprob: -5.629261016845703
    9. 't' → logprob: -6.379261016845703
    10. 'E' → logprob: -6.379261016845703

Token 47: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7489086985588074
    2. ' le' → logprob: -1.1239087581634521
    3. 'le' → logprob: -2.373908758163452
    4. ' l' → logprob: -2.873908758163452
    5. 'la' → logprob: -4.123908519744873
    6. ' hauteur' → logprob: -4.498908519744873
    7. 'l' → logprob: -4.623908519744873
    8. ' les' → logprob: -5.748908519744873
    9. ' une' → logprob: -5.998908519744873
    10. 'les' → logprob: -6.248908519744873

Token 48: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.04470657557249069
    2. 'nombre' → logprob: -3.2947065830230713
    3. 'n' → logprob: -5.669706344604492
    4. ' nombres' → logprob: -6.919706344604492
    5. ' hauteur' → logprob: -7.419706344604492
    6. ' H' → logprob: -7.794706344604492
    7. ' n' → logprob: -8.294706344604492
    8. 'é' → logprob: -8.919706344604492
    9. 'h' → logprob: -8.919706344604492
    10. 'H' → logprob: -8.919706344604492

Token 49: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08061441034078598
    2. 's' → logprob: -3.8306143283843994
    3. ',' → logprob: -4.2056145668029785
    4. ' ' → logprob: -4.8306145668029785
    5. ' H' → logprob: -5.2056145668029785
    6. 'H' → logprob: -5.7056145668029785
    7. '_total' → logprob: -5.7056145668029785
    8. ')' → logprob: -5.8306145668029785
    9. '_h' → logprob: -6.0806145668029785
    10. '_d' → logprob: -6.3306145668029785

Token 50: ' lignes' (ID: 81687)
  Prédit: ' secondes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' secondes' → logprob: -1.608871340751648
    2. ' personnes' → logprob: -1.983871340751648
    3. 'jours' → logprob: -2.3588714599609375
    4. ' jours' → logprob: -2.3588714599609375
    5. ' joueurs' → logprob: -2.7338714599609375
    6. 'he' → logprob: -2.8588714599609375
    7. ' heures' → logprob: -2.9838714599609375
    8. 'second' → logprob: -2.9838714599609375
    9. ' second' → logprob: -3.8588714599609375
    10. ' ' → logprob: -3.8588714599609375

Token 51: ' (' (ID: 350)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.05123936012387276
    2. ',' → logprob: -3.301239252090454
    3. 'n' → logprob: -5.551239490509033
    4. ' H' → logprob: -5.801239490509033
    5. ' ' → logprob: -6.551239490509033
    6. '#' → logprob: -6.676239490509033
    7. 'h' → logprob: -7.051239490509033
    8. ' ,' → logprob: -7.801239490509033
    9. ')' → logprob: -8.301239013671875
    10. 'x' → logprob: -8.426239013671875

Token 52: 'ha' (ID: 1716)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1377747505903244
    2. ' )' → logprob: -2.637774705886841
    3. ' de' → logprob: -3.762774705886841
    4. ' d' → logprob: -4.63777494430542
    5. 'de' → logprob: -5.76277494430542
    6. 'd' → logprob: -6.01277494430542
    7. ' du' → logprob: -6.01277494430542
    8. ' à' → logprob: -6.26277494430542
    9. ',' → logprob: -6.26277494430542
    10. 'l' → logprob: -6.26277494430542

Token 53: 'uteur' (ID: 25666)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.003675490617752075
    2. 'ut' → logprob: -6.25367546081543
    3. 'uteur' → logprob: -6.37867546081543
    4. 't' → logprob: -11.50367546081543
    5. '```' → logprob: -11.75367546081543
    6. 'uteurs' → logprob: -12.00367546081543
    7. 'ute' → logprob: -12.37867546081543
    8. '#' → logprob: -12.87867546081543
    9. 'utur' → logprob: -12.87867546081543
    10. '	u' → logprob: -13.12867546081543

Token 54: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004273919388651848
    2. ' )' → logprob: -6.504273891448975
    3. '),' → logprob: -6.879273891448975
    4. ',' → logprob: -6.879273891448975
    5. ')#' → logprob: -8.129274368286133
    6. '#' → logprob: -9.254274368286133
    7. ' de' → logprob: -9.629274368286133
    8. ' ' → logprob: -9.754274368286133
    9. ')
' → logprob: -10.004274368286133
    10. 's' → logprob: -11.254274368286133

Token 55: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.6960422992706299
    2. 'W' → logprob: -1.4460422992706299
    3. ' L' → logprob: -1.9460422992706299
    4. 'L' → logprob: -2.32104229927063
    5. ' ' → logprob: -4.821042060852051
    6. ' T' → logprob: -5.446042060852051
    7. 'T' → logprob: -5.571042060852051
    8. 'w' → logprob: -6.321042060852051
    9. ' V' → logprob: -6.571042060852051
    10. 'V' → logprob: -6.696042060852051

Token 56: ' le' (ID: 505)
  Prédit: ' représente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' représente' → logprob: -0.10456965863704681
    2. '=' → logprob: -3.229569673538208
    3. ' =' → logprob: -3.729569673538208
    4. ' ' → logprob: -5.104569435119629
    5. '#' → logprob: -5.229569435119629
    6. ' représ' → logprob: -5.479569435119629
    7. ',' → logprob: -5.604569435119629
    8. '<|end|>' → logprob: -5.979569435119629
    9. 'represent' → logprob: -6.104569435119629
    10. ' represents' → logprob: -6.104569435119629

Token 57: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.30186906456947327
    2. 'nombre' → logprob: -1.4268690347671509
    3. ' large' → logprob: -5.301868915557861
    4. ' espace' → logprob: -5.426868915557861
    5. ' ' → logprob: -5.801868915557861
    6. ' largeur' → logprob: -5.801868915557861
    7. 'large' → logprob: -6.051868915557861
    8. ' espaces' → logprob: -7.176868915557861
    9. ' nombres' → logprob: -7.676868915557861
    10. 's' → logprob: -8.67686939239502

Token 58: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.23225995898246765
    2. 'de' → logprob: -1.98225998878479
    3. ' d' → logprob: -2.85725998878479
    4. '_de' → logprob: -5.357259750366211
    5. '  ' → logprob: -6.232259750366211
    6. 'd' → logprob: -6.357259750366211
    7. ' ' → logprob: -6.732259750366211
    8. '_' → logprob: -6.857259750366211
    9. '_d' → logprob: -7.857259750366211
    10. '=' → logprob: -8.857259750366211

Token 59: ' colon' (ID: 20947)
  Prédit: ' colon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' colon' → logprob: -0.3507900536060333
    2. 'colon' → logprob: -1.225790023803711
    3. ' ' → logprob: -6.725790023803711
    4. 'col' → logprob: -8.100790023803711
    5. 'car' → logprob: -8.225790023803711
    6. 'l' → logprob: -9.225790023803711
    7. '```' → logprob: -9.225790023803711
    8. ' ' → logprob: -9.600790023803711
    9. ' caractères' → logprob: -9.850790023803711
    10. 'c' → logprob: -9.850790023803711

Token 60: 'nes' (ID: 4382)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.401994913816452
    2. 'n' → logprob: -1.6519949436187744
    3. 's' → logprob: -2.4019949436187744
    4. 'nes' → logprob: -3.1519949436187744
    5. 'e' → logprob: -5.901994705200195
    6. 'u' → logprob: -7.151994705200195
    7. '```' → logprob: -7.651994705200195
    8. '#' → logprob: -7.776994705200195
    9. 'g' → logprob: -7.776994705200195
    10. 'ne' → logprob: -7.776994705200195

Token 61: ' (' (ID: 350)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00023596010578330606
    2. 'h' → logprob: -8.750235557556152
    3. '```' → logprob: -10.250235557556152
    4. ' H' → logprob: -11.000235557556152
    5. '#' → logprob: -11.875235557556152
    6. 'n' → logprob: -12.000235557556152
    7. ',' → logprob: -12.625235557556152
    8. '\n' → logprob: -13.500235557556152
    9. '`' → logprob: -13.875235557556152
    10. '``' → logprob: -14.125235557556152

Token 62: 'large' (ID: 32551)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5005695223808289
    2. ' )' → logprob: -1.8755695819854736
    3. ' largeur' → logprob: -2.1255695819854736
    4. 'large' → logprob: -2.3755695819854736
    5. ' la' → logprob: -4.5005693435668945
    6. ' large' → logprob: -5.2505693435668945
    7. 'la' → logprob: -5.5005693435668945
    8. ' ),' → logprob: -6.2505693435668945
    9. ' l' → logprob: -6.6255693435668945
    10. '),' → logprob: -7.1255693435668945

Token 63: 'ur' (ID: 330)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.060132868587970734
    2. 'ur' → logprob: -2.9351329803466797
    3. ')' → logprob: -5.68513298034668
    4. ' )' → logprob: -7.43513298034668
    5. ',' → logprob: -8.06013298034668
    6. '#' → logprob: -8.68513298034668
    7. ' u' → logprob: -8.68513298034668
    8. ' ' → logprob: -9.93513298034668
    9. ' 

' → logprob: -10.06013298034668
    10. ']' → logprob: -10.18513298034668

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012698742793872952
    2. ')
' → logprob: -7.751269817352295
    3. ' )' → logprob: -8.251270294189453
    4. 'H' → logprob: -8.376270294189453
    5. '#' → logprob: -9.376270294189453
    6. ')

' → logprob: -9.501270294189453
    7. ',' → logprob: -9.501270294189453
    8. 's' → logprob: -11.251270294189453
    9. '```' → logprob: -11.501270294189453
    10. ' H' → logprob: -11.751270294189453

Token 65: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.700132997939363e-05
    2. '```' → logprob: -11.500017166137695
    3. ' H' → logprob: -12.750017166137695
    4. 'h' → logprob: -13.500017166137695
    5. '#' → logprob: -14.125017166137695
    6. '``' → logprob: -14.875017166137695
    7. '`' → logprob: -15.000017166137695
    8. '\' → logprob: -15.250017166137695
    9. '\n' → logprob: -15.250017166137695
    10. 'n' → logprob: -15.500017166137695

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002819544170051813
    2. ' ,' → logprob: -8.250282287597656
    3. '=' → logprob: -11.375282287597656
    4. ' =' → logprob: -12.625282287597656
    5. ',
' → logprob: -13.625282287597656
    6. ')' → logprob: -14.500282287597656
    7. '<|end|>' → logprob: -14.625282287597656
    8. ' ' → logprob: -14.750282287597656
    9. ',W' → logprob: -14.875282287597656
    10. ',H' → logprob: -15.000282287597656

Token 67: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.049913495779037476
    2. 'W' → logprob: -3.0499134063720703
    3. ' ' → logprob: -6.79991340637207
    4. '<|end|>' → logprob: -8.67491340637207
    5. '  ' → logprob: -10.54991340637207
    6. ' ' → logprob: -12.29991340637207
    7. '```' → logprob: -12.92491340637207
    8. ')' → logprob: -13.04991340637207
    9. 's' → logprob: -14.17491340637207
    10. ' ‌' → logprob: -14.67491340637207

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28153255581855774
    2. '=' → logprob: -1.4065325260162354
    3. ',' → logprob: -7.9065327644348145
    4. '=input' → logprob: -11.781532287597656
    5. '<|end|>' → logprob: -13.281532287597656
    6. ')' → logprob: -13.656532287597656
    7. '=int' → logprob: -14.781532287597656
    8. ' =
' → logprob: -15.094032287597656
    9. '＝' → logprob: -15.219032287597656
    10. ' ' → logprob: -15.344032287597656

Token 69: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.011049113236367702
    2. 'map' → logprob: -4.511049270629883
    3. '	map' → logprob: -14.511049270629883
    4. ' ' → logprob: -15.261049270629883
    5. ' ' → logprob: -15.636049270629883
    6. ' list' → logprob: -15.886049270629883
    7. ' input' → logprob: -16.511049270629883
    8. 'm' → logprob: -16.636049270629883
    9. ' [' → logprob: -17.511049270629883
    10. ' ma' → logprob: -17.636049270629883

Token 70: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6341234445571899
    2. '(int' → logprob: -0.7591234445571899
    3. '(str' → logprob: -6.8841233253479
    4. '(input' → logprob: -7.8841233253479
    5. '<int' → logprob: -10.634123802185059
    6. '(
' → logprob: -10.759123802185059
    7. ' (' → logprob: -11.009123802185059
    8. '(lambda' → logprob: -11.259123802185059
    9. ')(' → logprob: -12.134123802185059
    10. '[int' → logprob: -12.259123802185059

Token 71: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005742375273257494
    2. '(' → logprob: -6.00574254989624
    3. ')' → logprob: -6.13074254989624
    4. 'input' → logprob: -7.00574254989624
    5. ',input' → logprob: -9.005742073059082
    6. ')(' → logprob: -10.380742073059082
    7. '=input' → logprob: -11.505742073059082
    8. ' input' → logprob: -12.505742073059082
    9. '(
' → logprob: -12.880742073059082
    10. ',' → logprob: -13.255742073059082

Token 72: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0015046248445287347
    2. ' input' → logprob: -6.501504421234131
    3. ')' → logprob: -13.626504898071289
    4. '(input' → logprob: -14.251504898071289
    5. '=input' → logprob: -16.37650489807129
    6. '<input' → logprob: -16.50150489807129
    7. ',input' → logprob: -17.12650489807129
    8. '```' → logprob: -17.12650489807129
    9. '   ' → logprob: -17.37650489807129
    10. '	input' → logprob: -17.62650489807129

Token 73: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6096420288085938
    2. '().' → logprob: -0.8596420288085938
    3. '()' → logprob: -3.4846420288085938
    4. ')' → logprob: -6.109642028808594
    5. '()))' → logprob: -8.734642028808594
    6. '()).' → logprob: -9.984642028808594
    7. '(' → logprob: -11.859642028808594
    8. '());' → logprob: -11.859642028808594
    9. ' ())' → logprob: -11.859642028808594
    10. '()),' → logprob: -12.734642028808594

Token 74: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011766550596803427
    2. 'strip' → logprob: -6.751176834106445
    3. 'spl' → logprob: -13.126176834106445
    4. 'rstrip' → logprob: -13.126176834106445
    5. ')' → logprob: -13.376176834106445
    6. '(split' → logprob: -14.751176834106445
    7. ' split' → logprob: -14.876176834106445
    8. 's' → logprob: -16.501176834106445
    9. '())' → logprob: -18.251176834106445
    10. ' ' → logprob: -18.501176834106445

Token 75: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.19991646707057953
    2. ')' → logprob: -2.324916362762451
    3. '()' → logprob: -2.574916362762451
    4. '(' → logprob: -5.449916362762451
    5. '('' → logprob: -6.199916362762451
    6. '()))' → logprob: -7.699916362762451
    7. '))' → logprob: -8.19991683959961
    8. '(','' → logprob: -9.94991683959961
    9. ' ())' → logprob: -10.57491683959961
    10. '(
' → logprob: -10.69991683959961

Token 76: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22859814763069153
    2. '#' → logprob: -2.478598117828369
    3. ' ' → logprob: -3.478598117828369
    4. ' 
' → logprob: -4.103598117828369
    5. '' → logprob: -4.103598117828369
    6. '\n' → logprob: -4.478598117828369
    7. '[' → logprob: -4.728598117828369
    8. ',' → logprob: -5.603598117828369
    9. '  
' → logprob: -5.728598117828369
    10. '[
' → logprob: -5.728598117828369

Token 77: ' On' (ID: 2160)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.9761562943458557
    2. ' grid' → logprob: -1.601156234741211
    3. 'g' → logprob: -2.351156234741211
    4. 'matrix' → logprob: -2.476156234741211
    5. 'm' → logprob: -3.101156234741211
    6. ' ' → logprob: -3.476156234741211
    7. ' grille' → logprob: -3.851156234741211
    8. ' matrix' → logprob: -3.851156234741211
    9. 'mat' → logprob: -3.976156234741211
    10. 'gr' → logprob: -4.226156234741211

Token 78: ' initialise' (ID: 145250)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01000904943794012
    2. '.' → logprob: -6.385008811950684
    3. '[' → logprob: -6.510008811950684
    4. ')' → logprob: -7.135008811950684
    5. '_' → logprob: -7.135008811950684
    6. 'e' → logprob: -7.385008811950684
    7. 'r' → logprob: -7.760008811950684
    8. ''' → logprob: -8.010008811950684
    9. 'i' → logprob: -8.260008811950684
    10. ' a' → logprob: -8.260008811950684

Token 79: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012375901453197002
    2. ' la' → logprob: -5.512375831604004
    3. 'l' → logprob: -6.012375831604004
    4. ' un' → logprob: -6.512375831604004
    5. '_' → logprob: -7.387375831604004
    6. ' l' → logprob: -7.512375831604004
    7. ' une' → logprob: -7.637375831604004
    8. '[' → logprob: -8.262375831604004
    9. 'a' → logprob: -8.637375831604004
    10. '[]' → logprob: -8.762375831604004

Token 80: ' liste' (ID: 31719)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22927269339561462
    2. ' liste' → logprob: -2.4792726039886475
    3. ' []' → logprob: -3.1042726039886475
    4. '_' → logprob: -3.4792726039886475
    5. 'liste' → logprob: -4.354272842407227
    6. ' matr' → logprob: -5.229272842407227
    7. '[]' → logprob: -5.354272842407227
    8. '[' → logprob: -5.729272842407227
    9. ' [' → logprob: -5.979272842407227
    10. 'gr' → logprob: -6.729272842407227

Token 81: ' vide' (ID: 21835)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2677383422851562
    2. '[]' → logprob: -1.2677383422851562
    3. ' ' → logprob: -2.2677383422851562
    4. ' =' → logprob: -2.7677383422851562
    5. ' []' → logprob: -2.7677383422851562
    6. '[' → logprob: -3.0177383422851562
    7. 's' → logprob: -3.3927383422851562
    8. ' de' → logprob: -3.7677383422851562
    9. '=[]' → logprob: -3.8927383422851562
    10. '=' → logprob: -4.892738342285156

Token 82: ' dans' (ID: 2671)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -1.204464316368103
    2. 'matrix' → logprob: -1.704464316368103
    3. ' ' → logprob: -2.5794644355773926
    4. 'l' → logprob: -2.5794644355773926
    5. 'gr' → logprob: -2.8294644355773926
    6. 'g' → logprob: -3.0794644355773926
    7. '_' → logprob: -3.0794644355773926
    8. 'm' → logprob: -3.3294644355773926
    9. '[]' → logprob: -3.8294644355773926
    10. ' grid' → logprob: -3.8294644355773926

Token 83: ' laquelle' (ID: 47998)
  Prédit: ' laquelle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' laquelle' → logprob: -0.29720431566238403
    2. '[]' → logprob: -1.6722042560577393
    3. 'la' → logprob: -4.172204494476318
    4. '=[]' → logprob: -4.797204494476318
    5. 'e' → logprob: -5.047204494476318
    6. 'l' → logprob: -5.172204494476318
    7. 'une' → logprob: -5.297204494476318
    8. '```' → logprob: -5.422204494476318
    9. '_' → logprob: -5.672204494476318
    10. 'le' → logprob: -5.922204494476318

Token 84: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21290360391139984
    2. '_' → logprob: -2.2129034996032715
    3. ' on' → logprob: -3.7129034996032715
    4. 'for' → logprob: -3.9629034996032715
    5. 'on' → logprob: -4.7129034996032715
    6. ' nous' → logprob: -5.2129034996032715
    7. ' for' → logprob: -5.5879034996032715
    8. 'l' → logprob: -5.8379034996032715
    9. '[' → logprob: -5.9629034996032715
    10. '  ' → logprob: -6.3379034996032715

Token 85: ' élément' (ID: 99627)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4329462945461273
    2. ' ligne' → logprob: -1.6829463243484497
    3. ' ' → logprob: -2.68294620513916
    4. ' _' → logprob: -3.30794620513916
    5. 'ligne' → logprob: -3.43294620513916
    6. 'l' → logprob: -4.18294620513916
    7. '_l' → logprob: -5.80794620513916
    8. ')' → logprob: -6.05794620513916
    9. '  ' → logprob: -7.30794620513916
    10. 's' → logprob: -7.55794620513916

Token 86: ' sera' (ID: 15511)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6406984925270081
    2. ' sera' → logprob: -1.5156984329223633
    3. 's' → logprob: -2.3906984329223633
    4. '<|end|>' → logprob: -3.0156984329223633
    5. ')' → logprob: -3.7656984329223633
    6. '  ' → logprob: -3.8906984329223633
    7. '_' → logprob: -4.265698432922363
    8. ' va' → logprob: -5.515698432922363
    9. 'represent' → logprob: -5.890698432922363
    10. '=' → logprob: -5.890698432922363

Token 87: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.0779852494597435
    2. 'une' → logprob: -2.7029852867126465
    3. '[]' → logprob: -5.4529852867126465
    4. ' la' → logprob: -6.7029852867126465
    5. 'l' → logprob: -6.9529852867126465
    6. ' []' → logprob: -7.4529852867126465
    7. 'a' → logprob: -8.952984809875488
    8. ' un' → logprob: -9.077984809875488
    9. 'la' → logprob: -9.077984809875488
    10. ''une' → logprob: -9.327984809875488

Token 88: ' sous' (ID: 14487)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.4895800054073334
    2. ' ' → logprob: -1.9895800352096558
    3. ' chaîne' → logprob: -2.114579916000366
    4. ' liste' → logprob: -2.614579916000366
    5. 'ligne' → logprob: -3.739579916000366
    6. ' chaine' → logprob: -4.864580154418945
    7. 'liste' → logprob: -4.989580154418945
    8. 'l' → logprob: -5.114580154418945
    9. 'chaine' → logprob: -5.489580154418945
    10. ' string' → logprob: -6.239580154418945

Token 89: '-l' (ID: 2887)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6222018003463745
    2. 'liste' → logprob: -1.4972018003463745
    3. '-l' → logprob: -1.4972018003463745
    4. '-list' → logprob: -4.247201919555664
    5. 'list' → logprob: -7.747201919555664
    6. 'l' → logprob: -7.872201919555664
    7. ' liste' → logprob: -8.247201919555664
    8. '[]' → logprob: -9.622201919555664
    9. ' ' → logprob: -9.872201919555664
    10. 'Liste' → logprob: -10.122201919555664

Token 90: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.014107441529631615
    2. 'ist' → logprob: -5.3891072273254395
    3. 'igne' → logprob: -5.5141072273254395
    4. 'i' → logprob: -5.7641072273254395
    5. 'is' → logprob: -6.3891072273254395
    6. '#' → logprob: -8.264107704162598
    7. 'ig' → logprob: -9.139107704162598
    8. 'e' → logprob: -10.139107704162598
    9. 'ine' → logprob: -10.639107704162598
    10. 'ign' → logprob: -11.139107704162598

Token 91: ' représentant' (ID: 136122)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7255336046218872
    2. '[]' → logprob: -1.2255336046218872
    3. ' ' → logprob: -2.3505334854125977
    4. ' []' → logprob: -3.4755334854125977
    5. ' [' → logprob: -4.100533485412598
    6. 'represent' → logprob: -4.350533485412598
    7. '[
' → logprob: -4.600533485412598
    8. ',' → logprob: -4.975533485412598
    9. ')' → logprob: -5.350533485412598
    10. 's' → logprob: -5.600533485412598

Token 92: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.40296274423599243
    2. 'une' → logprob: -1.6529626846313477
    3. 'l' → logprob: -2.5279626846313477
    4. ' la' → logprob: -3.5279626846313477
    5. 'la' → logprob: -4.027962684631348
    6. ' ' → logprob: -4.902962684631348
    7. ' l' → logprob: -6.152962684631348
    8. 'a' → logprob: -7.152962684631348
    9. 'les' → logprob: -7.152962684631348
    10. 'le' → logprob: -7.777962684631348

Token 93: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.04815496504306793
    2. 'l' → logprob: -3.2981550693511963
    3. ' ligne' → logprob: -4.923154830932617
    4. 'rang' → logprob: -7.048154830932617
    5. 'gr' → logprob: -8.048154830932617
    6. 'lig' → logprob: -8.048154830932617
    7. 'range' → logprob: -8.048154830932617
    8. 'liste' → logprob: -8.173154830932617
    9. 's' → logprob: -9.548154830932617
    10. '```' → logprob: -9.673154830932617

Token 94: ' de' (ID: 334)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.7398351430892944
    2. 'm' → logprob: -2.114835262298584
    3. 'matrix' → logprob: -2.114835262298584
    4. 'gr' → logprob: -2.489835262298584
    5. 'g' → logprob: -2.864835262298584
    6. 'mat' → logprob: -3.739835262298584
    7. 's' → logprob: -4.114835262298584
    8. 'map' → logprob: -4.364835262298584
    9. 'l' → logprob: -4.614835262298584
    10. 'd' → logprob: -4.989835262298584

Token 95: ' la' (ID: 557)
  Prédit: ' grille'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -1.1343082189559937
    2. 'gr' → logprob: -1.3843082189559937
    3. 'car' → logprob: -2.259308338165283
    4. 'code' → logprob: -2.384308338165283
    5. 'l' → logprob: -2.509308338165283
    6. 'la' → logprob: -3.134308338165283
    7. 'pixels' → logprob: -4.009308338165283
    8. ' la' → logprob: -4.009308338165283
    9. 'texte' → logprob: -4.134308338165283
    10. ' code' → logprob: -4.509308338165283

Token 96: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.6045381426811218
    2. 'mat' → logprob: -0.8545381426811218
    3. ' grille' → logprob: -4.1045379638671875
    4. 'liste' → logprob: -5.4795379638671875
    5. 'car' → logprob: -5.8545379638671875
    6. 'm' → logprob: -7.1045379638671875
    7. '#' → logprob: -7.3545379638671875
    8. 'matrix' → logprob: -7.6045379638671875
    9. 'map' → logprob: -8.104537963867188
    10. 'g' → logprob: -8.229537963867188

Token 97: '
' (ID: 198)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.7772203087806702
    2. 'grid' → logprob: -0.7772203087806702
    3. 'gr' → logprob: -2.6522202491760254
    4. ' grid' → logprob: -5.902220249176025
    5. 'G' → logprob: -6.402220249176025
    6. ' grille' → logprob: -7.277220249176025
    7. 'l' → logprob: -7.402220249176025
    8. 'm' → logprob: -7.652220249176025
    9. 's' → logprob: -7.777220249176025
    10. '#' → logprob: -7.902220249176025

Token 98: '#' (ID: 2)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.06672560423612595
    2. 'gr' → logprob: -2.941725492477417
    3. 'g' → logprob: -4.941725730895996
    4. ' grid' → logprob: -6.191725730895996
    5. 'G' → logprob: -6.441725730895996
    6. ' grille' → logprob: -7.691725730895996
    7. 'matrix' → logprob: -8.816725730895996
    8. 'map' → logprob: -9.191725730895996
    9. 'board' → logprob: -10.066725730895996
    10. 'data' → logprob: -10.066725730895996

Token 99: ' On' (ID: 2160)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.05994629114866257
    2. 'gr' → logprob: -3.059946298599243
    3. 'g' → logprob: -5.184946060180664
    4. ' grid' → logprob: -5.809946060180664
    5. 'G' → logprob: -7.059946060180664
    6. ' grille' → logprob: -7.184946060180664
    7. 'board' → logprob: -7.934946060180664
    8. 'matrix' → logprob: -8.809946060180664
    9. 'map' → logprob: -8.934946060180664
    10. 'data' → logprob: -9.559946060180664

Token 100: ' fait' (ID: 7473)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42960846424102783
    2. ' for' → logprob: -1.0546084642410278
    3. 'range' → logprob: -8.429608345031738
    4. ' range' → logprob: -8.804608345031738
    5. 'r' → logprob: -9.054608345031738
    6. ' ' → logprob: -9.054608345031738
    7. 'or' → logprob: -9.929608345031738
    8. 's' → logprob: -10.179608345031738
    9. 'f' → logprob: -10.429608345031738
    10. ' a' → logprob: -10.554608345031738

Token 101: ' une' (ID: 2463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6881791353225708
    2. '_' → logprob: -0.9381791353225708
    3. 'range' → logprob: -3.0631790161132812
    4. ' for' → logprob: -4.313179016113281
    5. ' une' → logprob: -4.688179016113281
    6. ' ' → logprob: -4.688179016113281
    7. 'une' → logprob: -4.938179016113281
    8. '(' → logprob: -5.563179016113281
    9. '()' → logprob: -6.313179016113281
    10. '=' → logprob: -6.688179016113281

Token 102: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3080766499042511
    2. 'range' → logprob: -1.8080766201019287
    3. ' for' → logprob: -2.5580766201019287
    4. ' range' → logprob: -3.9330766201019287
    5. ' boucle' → logprob: -5.683076858520508
    6. 'bou' → logprob: -8.558076858520508
    7. '_' → logprob: -8.683076858520508
    8. 'r' → logprob: -9.058076858520508
    9. 'f' → logprob: -10.808076858520508
    10. '_range' → logprob: -10.933076858520508

Token 103: ' qui' (ID: 2780)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3595164716243744
    2. 'for' → logprob: -1.2345165014266968
    3. ' ' → logprob: -4.609516620635986
    4. 'range' → logprob: -8.109516143798828
    5. '_' → logprob: -8.484516143798828
    6. ' range' → logprob: -8.734516143798828
    7. ' pour' → logprob: -9.234516143798828
    8. 's' → logprob: -10.234516143798828
    9. 'n' → logprob: -10.359516143798828
    10. ' i' → logprob: -10.609516143798828

Token 104: ' s' (ID: 265)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.35915106534957886
    2. 'for' → logprob: -1.8591511249542236
    3. 'range' → logprob: -2.1091511249542236
    4. ' for' → logprob: -3.7341511249542236
    5. 'ranges' → logprob: -8.234150886535645
    6. '_range' → logprob: -8.609150886535645
    7. '(range' → logprob: -9.484150886535645
    8. ' ranges' → logprob: -9.734150886535645
    9. '_' → logprob: -10.734150886535645
    10. ' ' → logprob: -10.859150886535645

Token 105: ''ex' (ID: 23472)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8891789317131042
    2. 'ur' → logprob: -1.764178991317749
    3. 'for' → logprob: -2.389178991317749
    4. 'u' → logprob: -3.014178991317749
    5. 'uit' → logprob: -3.139178991317749
    6. 'er' → logprob: -3.264178991317749
    7. ''' → logprob: -3.639178991317749
    8. ''é' → logprob: -3.639178991317749
    9. 'é' → logprob: -4.13917875289917
    10. 'uis' → logprob: -4.51417875289917

Token 106: 'éc' (ID: 5675)
  Prédit: 'éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.5034316182136536
    2. 'ecute' → logprob: -1.0034315586090088
    3. 'é' → logprob: -4.003431797027588
    4. 't' → logprob: -5.628431797027588
    5. 'ec' → logprob: -6.128431797027588
    6. 'écut' → logprob: -6.253431797027588
    7. 'écution' → logprob: -6.753431797027588
    8. 'e' → logprob: -8.00343132019043
    9. 'p' → logprob: -8.37843132019043
    10. '#' → logprob: -8.50343132019043

Token 107: 'ute' (ID: 1331)
  Prédit: 'ute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ute' → logprob: -0.0011286636581644416
    2. 'u' → logprob: -7.751128673553467
    3. 'ure' → logprob: -7.876128673553467
    4. 'ecute' → logprob: -8.751128196716309
    5. 'cute' → logprob: -9.251128196716309
    6. 'ut' → logprob: -10.501128196716309
    7. 'utte' → logprob: -11.126128196716309
    8. 'ue' → logprob: -12.501128196716309
    9. 'uce' → logprob: -12.751128196716309
    10. 'uc' → logprob: -13.376128196716309

Token 108: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.4464340806007385
    2. 'H' → logprob: -1.5714340209960938
    3. 'range' → logprob: -2.6964340209960938
    4. ' range' → logprob: -3.4464340209960938
    5. ' for' → logprob: -3.5714340209960938
    6. '_' → logprob: -4.446434020996094
    7. 'for' → logprob: -4.696434020996094
    8. ' _' → logprob: -6.446434020996094
    9. ' ' → logprob: -6.946434020996094
    10. '(H' → logprob: -8.196434020996094

Token 109: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.1351049244403839
    2. 'fois' → logprob: -2.1351048946380615
    3. 'for' → logprob: -6.135105133056641
    4. 'times' → logprob: -7.010105133056641
    5. ':' → logprob: -7.260105133056641
    6. ')' → logprob: -7.760105133056641
    7. '<|end|>' → logprob: -7.760105133056641
    8. ' for' → logprob: -7.885105133056641
    9. ' ' → logprob: -8.01010513305664
    10. ' veces' → logprob: -8.13510513305664

Token 110: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5444519519805908
    2. '
' → logprob: -1.0444519519805908
    3. ' for' → logprob: -3.294451951980591
    4. ':' → logprob: -4.794451713562012
    5. 'grid' → logprob: -4.794451713562012
    6. ' 
' → logprob: -4.919451713562012
    7. '  
' → logprob: -6.419451713562012
    8. '#' → logprob: -7.794451713562012
    9. '\n' → logprob: -7.794451713562012
    10. '[
' → logprob: -7.794451713562012

Token 111: 'pour' (ID: 52723)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3030511438846588
    2. ' for' → logprob: -1.8030511140823364
    3. ')' → logprob: -2.553051233291626
    4. 'range' → logprob: -4.553050994873047
    5. ' range' → logprob: -6.053050994873047
    6. '   ' → logprob: -6.178050994873047
    7. '_' → logprob: -6.553050994873047
    8. ' )' → logprob: -6.678050994873047
    9. 'i' → logprob: -8.303050994873047
    10. ' ' → logprob: -8.928050994873047

Token 112: ' chaque' (ID: 21194)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.05657440423965454
    2. '_' → logprob: -3.1815743446350098
    3. ' i' → logprob: -4.55657434463501
    4. ' range' → logprob: -6.18157434463501
    5. 'range' → logprob: -7.93157434463501
    6. 'i' → logprob: -8.306574821472168
    7. ' ' → logprob: -8.556574821472168
    8. ' ' → logprob: -9.556574821472168
    9. ')' → logprob: -10.806574821472168
    10. ' _)' → logprob: -11.431574821472168

Token 113: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.5098811984062195
    2. ' ' → logprob: -1.5098812580108643
    3. ' range' → logprob: -2.7598812580108643
    4. 'ligne' → logprob: -2.7598812580108643
    5. ')' → logprob: -4.134881019592285
    6. 'range' → logprob: -4.259881019592285
    7. ' i' → logprob: -4.884881019592285
    8. '_' → logprob: -5.884881019592285
    9. ' )' → logprob: -5.884881019592285
    10. ' _' → logprob: -6.509881019592285

Token 114: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08322635293006897
    2. '):' → logprob: -2.833226442337036
    3. ' )' → logprob: -4.708226203918457
    4. ':' → logprob: -5.458226203918457
    5. 'for' → logprob: -5.833226203918457
    6. '):
' → logprob: -6.083226203918457
    7. ' ):' → logprob: -7.083226203918457
    8. ')
' → logprob: -7.208226203918457
    9. ',' → logprob: -8.458226203918457
    10. ' for' → logprob: -8.708226203918457

Token 115: '#' (ID: 2)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.38411378860473633
    2. 'for' → logprob: -1.2591137886047363
    3. 'gr' → logprob: -4.009113788604736
    4. ' for' → logprob: -5.384113788604736
    5. 'g' → logprob: -6.134113788604736
    6. ' grid' → logprob: -6.634113788604736
    7. 'data' → logprob: -6.884113788604736
    8. '
' → logprob: -6.884113788604736
    9. '#' → logprob: -7.009113788604736
    10. 'result' → logprob: -7.009113788604736

Token 116: ' À' (ID: 27643)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.521732747554779
    2. 'for' → logprob: -1.5217328071594238
    3. 'gr' → logprob: -2.146732807159424
    4. ' grid' → logprob: -2.896732807159424
    5. ' for' → logprob: -4.771732807159424
    6. ' grille' → logprob: -5.896732807159424
    7. 'mat' → logprob: -6.646732807159424
    8. 'board' → logprob: -7.146732807159424
    9. 'g' → logprob: -7.146732807159424
    10. ' gr' → logprob: -7.646732807159424

Token 117: ' chaque' (ID: 21194)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33038684725761414
    2. ' for' → logprob: -2.4553868770599365
    3. 'range' → logprob: -2.7053868770599365
    4. ' chaque' → logprob: -2.8303868770599365
    5. ' range' → logprob: -3.3303868770599365
    6. '_' → logprob: -4.205386638641357
    7. 'l' → logprob: -5.080386638641357
    8. ' ' → logprob: -6.080386638641357
    9. 'r' → logprob: -6.205386638641357
    10. 'i' → logprob: -6.330386638641357

Token 118: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.4883565306663513
    2. ' ligne' → logprob: -2.363356590270996
    3. ' iteration' → logprob: -2.738356590270996
    4. ' ' → logprob: -2.863356590270996
    5. ' tour' → logprob: -3.488356590270996
    6. 'ligne' → logprob: -3.488356590270996
    7. 'iteration' → logprob: -3.738356590270996
    8. 'it' → logprob: -4.113356590270996
    9. '_' → logprob: -4.363356590270996
    10. ' fois' → logprob: -4.488356590270996

Token 119: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.03745167702436447
    2. 'er' → logprob: -3.53745174407959
    3. 'é' → logprob: -5.66245174407959
    4. 'ér' → logprob: -5.91245174407959
    5. 'érations' → logprob: -7.78745174407959
    6. 'érer' → logprob: -8.03745174407959
    7. 'éra' → logprob: -9.03745174407959
    8. 'érêt' → logprob: -9.28745174407959
    9. 'ration' → logprob: -9.28745174407959
    10. 'érateur' → logprob: -9.66245174407959

Token 120: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23760896921157837
    2. ' ' → logprob: -1.8626089096069336
    3. ' ,' → logprob: -3.4876089096069336
    4. '   ' → logprob: -4.487608909606934
    5. ':' → logprob: -5.737608909606934
    6. '#' → logprob: -5.862608909606934
    7. '    ' → logprob: -6.237608909606934
    8. ' 
' → logprob: -6.487608909606934
    9. '_' → logprob: -7.487608909606934
    10. 'n' → logprob: -7.487608909606934

Token 121: ' on' (ID: 402)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.9664750099182129
    2. ' line' → logprob: -1.341475009918213
    3. 'ligne' → logprob: -1.841475009918213
    4. 'line' → logprob: -3.091475009918213
    5. ' lines' → logprob: -3.716475009918213
    6. ' grid' → logprob: -3.716475009918213
    7. 'grid' → logprob: -3.841475009918213
    8. 'gr' → logprob: -4.091475009918213
    9. ' lignes' → logprob: -4.091475009918213
    10. ' row' → logprob: -4.341475009918213

Token 122: ' lit' (ID: 11980)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07576504349708557
    2. 'append' → logprob: -4.200765132904053
    3. ' ajoute' → logprob: -4.200765132904053
    4. '#' → logprob: -4.325765132904053
    5. 'aj' → logprob: -4.825765132904053
    6. 'for' → logprob: -4.950765132904053
    7. 'ligne' → logprob: -5.950765132904053
    8. '.' → logprob: -6.200765132904053
    9. 's' → logprob: -6.825765132904053
    10. ' append' → logprob: -6.950765132904053

Token 123: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.036083824932575226
    2. ' une' → logprob: -3.536083936691284
    3. ' la' → logprob: -6.411083698272705
    4. '(' → logprob: -6.536083698272705
    5. ' ' → logprob: -7.161083698272705
    6. 'une' → logprob: -7.286083698272705
    7. ' ()' → logprob: -7.661083698272705
    8. '   ' → logprob: -8.036084175109863
    9. 'l' → logprob: -8.911084175109863
    10. '_' → logprob: -9.286084175109863

Token 124: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.2128797173500061
    2. ' ligne' → logprob: -2.2128796577453613
    3. ' nouvelle' → logprob: -3.4628796577453613
    4. 'liste' → logprob: -4.337879657745361
    5. 'nou' → logprob: -4.462879657745361
    6. 'chaine' → logprob: -4.712879657745361
    7. 'l' → logprob: -5.587879657745361
    8. '#' → logprob: -5.712879657745361
    9. 'entrée' → logprob: -6.337879657745361
    10. ' ' → logprob: -6.712879657745361

Token 125: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: ' on' (ID: 402)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.1128275394439697
    2. ' ligne' → logprob: -1.7378275394439697
    3. ' grid' → logprob: -2.1128275394439697
    4. ' row' → logprob: -2.7378275394439697
    5. ' grille' → logprob: -2.7378275394439697
    6. 'ligne' → logprob: -2.8628275394439697
    7. ' data' → logprob: -3.2378275394439697
    8. 'gr' → logprob: -3.8628275394439697
    9. 'grid' → logprob: -3.8628275394439697
    10. 'line' → logprob: -4.112827301025391

Token 127: ' split' (ID: 12648)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.36461731791496277
    2. 'append' → logprob: -1.2396173477172852
    3. '.' → logprob: -5.239617347717285
    4. 'aj' → logprob: -5.614617347717285
    5. 's' → logprob: -6.239617347717285
    6. '_append' → logprob: -6.364617347717285
    7. ' append' → logprob: -6.989617347717285
    8. '=' → logprob: -7.489617347717285
    9. ' ajoute' → logprob: -8.239617347717285
    10. '#' → logprob: -8.614617347717285

Token 128: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00414523808285594
    2. '(' → logprob: -5.62914514541626
    3. '('' → logprob: -8.504145622253418
    4. '(),' → logprob: -8.504145622253418
    5. '("("' → logprob: -10.754145622253418
    6. '()
' → logprob: -10.879145622253418
    7. '())' → logprob: -11.129145622253418
    8. ')' → logprob: -11.254145622253418
    9. '().' → logprob: -11.254145622253418
    10. ' ()' → logprob: -11.504145622253418

Token 129: ' ligne' (ID: 19583)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5874930620193481
    2. '()' → logprob: -1.9624930620193481
    3. 'chaine' → logprob: -2.4624929428100586
    4. ' input' → logprob: -2.5874929428100586
    5. 'string' → logprob: -3.4624929428100586
    6. 'entrée' → logprob: -3.7124929428100586
    7. ' chaîne' → logprob: -3.7124929428100586
    8. 'ligne' → logprob: -4.462492942810059
    9. 'texte' → logprob: -4.712492942810059
    10. ')' → logprob: -4.712492942810059

Token 130: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013773227110505104
    2. '(' → logprob: -4.513773441314697
    3. ')' → logprob: -6.513773441314697
    4. ',' → logprob: -8.138772964477539
    5. '(),' → logprob: -8.763772964477539
    6. '#' → logprob: -9.013772964477539
    7. '('' → logprob: -9.263772964477539
    8. ' ()' → logprob: -9.513772964477539
    9. '())' → logprob: -9.513772964477539
    10. '("("' → logprob: -9.513772964477539

Token 131: ' on' (ID: 402)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5416572093963623
    2. ')' → logprob: -2.6666572093963623
    3. ' grid' → logprob: -3.1666572093963623
    4. 'data' → logprob: -3.5416572093963623
    5. 'grid' → logprob: -3.5416572093963623
    6. ' line' → logprob: -3.5416572093963623
    7. ' data' → logprob: -3.9166572093963623
    8. ' [' → logprob: -3.9166572093963623
    9. ' lines' → logprob: -4.041657447814941
    10. 'ligne' → logprob: -4.041657447814941

Token 132: ' convert' (ID: 8452)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.06717468798160553
    2. '.append' → logprob: -3.3171746730804443
    3. ' append' → logprob: -3.5671746730804443
    4. 'map' → logprob: -8.692174911499023
    5. 'list' → logprob: -9.692174911499023
    6. ' map' → logprob: -10.067174911499023
    7. ' list' → logprob: -10.692174911499023
    8. 'rstrip' → logprob: -10.817174911499023
    9. '_append' → logprob: -10.817174911499023
    10. '	append' → logprob: -10.942174911499023

Token 133: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.2648699879646301
    2. '(' → logprob: -2.1398699283599854
    3. 'i' → logprob: -2.5148699283599854
    4. 'ie' → logprob: -4.0148701667785645
    5. 'ir' → logprob: -4.3898701667785645
    6. 'e' → logprob: -6.7648701667785645
    7. 'int' → logprob: -7.3898701667785645
    8. '(int' → logprob: -7.3898701667785645
    9. 'is' → logprob: -8.139869689941406
    10. 'ies' → logprob: -8.764869689941406

Token 134: ' chaque' (ID: 21194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1123388260602951
    2. '(' → logprob: -2.3623387813568115
    3. 'les' → logprob: -5.737339019775391
    4. 'int' → logprob: -5.862339019775391
    5. '(int' → logprob: -5.987339019775391
    6. ')' → logprob: -7.237339019775391
    7. 'la' → logprob: -7.612339019775391
    8. 'l' → logprob: -8.36233901977539
    9. ' chaque' → logprob: -8.48733901977539
    10. ' les' → logprob: -8.61233901977539

Token 135: ' élément' (ID: 99627)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0082221031188965
    2. 'int' → logprob: -1.1332221031188965
    3. 'élé' → logprob: -1.5082221031188965
    4. '(int' → logprob: -3.8832221031188965
    5. 'car' → logprob: -4.0082221031188965
    6. 'token' → logprob: -4.2582221031188965
    7. ')' → logprob: -4.3832221031188965
    8. 'ent' → logprob: -4.7582221031188965
    9. 'element' → logprob: -4.8832221031188965
    10. '()' → logprob: -6.6332221031188965

Token 136: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.607581615447998
    2. 'en' → logprob: -1.232581615447998
    3. ')' → logprob: -2.232581615447998
    4. ',' → logprob: -3.482581615447998
    5. 'int' → logprob: -4.857581615447998
    6. '(int' → logprob: -5.232581615447998
    7. ',int' → logprob: -6.357581615447998
    8. '=int' → logprob: -6.482581615447998
    9. ' ,' → logprob: -6.982581615447998
    10. '=' → logprob: -7.107581615447998

Token 137: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004352621268481016
    2. 'ent' → logprob: -5.504352569580078
    3. ' int' → logprob: -9.254352569580078
    4. 'str' → logprob: -9.254352569580078
    5. 'ints' → logprob: -10.504352569580078
    6. 'list' → logprob: -11.254352569580078
    7. 'liste' → logprob: -11.379352569580078
    8. '[int' → logprob: -11.504352569580078
    9. 'inte' → logprob: -12.004352569580078
    10. 'entrée' → logprob: -13.254352569580078

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5840627551078796
    2. 'grid' → logprob: -1.7090628147125244
    3. ')' → logprob: -2.3340628147125244
    4. 'for' → logprob: -3.0840628147125244
    5. ' ' → logprob: -4.084062576293945
    6. 's' → logprob: -4.584062576293945
    7. '
' → logprob: -4.709062576293945
    8. 'gr' → logprob: -4.959062576293945
    9. '[
' → logprob: -4.959062576293945
    10. 'data' → logprob: -5.084062576293945

Token 139: ' on' (ID: 402)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grid' → logprob: -1.0215522050857544
    2. ' grille' → logprob: -1.0215522050857544
    3. 'grid' → logprob: -2.396552085876465
    4. 'gr' → logprob: -2.646552085876465
    5. ' ligne' → logprob: -4.396552085876465
    6. ' line' → logprob: -4.396552085876465
    7. ' la' → logprob: -4.396552085876465
    8. ')' → logprob: -4.396552085876465
    9. ' puis' → logprob: -4.521552085876465
    10. ' lines' → logprob: -4.646552085876465

Token 140: ' forme' (ID: 27450)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.21699191629886627
    2. 'append' → logprob: -1.966991901397705
    3. ')' → logprob: -4.091991901397705
    4. 'aj' → logprob: -4.591991901397705
    5. ' append' → logprob: -5.216991901397705
    6. ' ajoute' → logprob: -5.466991901397705
    7. '.' → logprob: -5.716991901397705
    8. ']' → logprob: -5.716991901397705
    9. 's' → logprob: -6.341991901397705
    10. 'range' → logprob: -6.841991901397705

Token 141: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16847564280033112
    2. '(' → logprob: -1.91847562789917
    3. 'une' → logprob: -5.66847562789917
    4. ' une' → logprob: -6.66847562789917
    5. '[]' → logprob: -6.79347562789917
    6. ' la' → logprob: -7.41847562789917
    7. '([' → logprob: -8.293476104736328
    8. ' [' → logprob: -8.293476104736328
    9. 'list' → logprob: -8.793476104736328
    10. ']' → logprob: -9.043476104736328

Token 142: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.543650209903717
    2. '[' → logprob: -1.4186501502990723
    3. 'list' → logprob: -2.6686501502990723
    4. 'ligne' → logprob: -3.1686501502990723
    5. ' liste' → logprob: -3.2936501502990723
    6. '[
' → logprob: -5.293650150299072
    7. '[]' → logprob: -5.293650150299072
    8. ' [' → logprob: -5.418650150299072
    9. ' ligne' → logprob: -6.043650150299072
    10. 'gr' → logprob: -6.293650150299072

Token 143: '
' (ID: 198)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.5441761016845703
    2. 'gr' → logprob: -0.9191761016845703
    3. 'g' → logprob: -5.29417610168457
    4. 'board' → logprob: -5.41917610168457
    5. 'mat' → logprob: -5.66917610168457
    6. 'plate' → logprob: -6.79417610168457
    7. 'for' → logprob: -7.04417610168457
    8. 'G' → logprob: -7.16917610168457
    9. 'ligne' → logprob: -7.66917610168457
    10. ' grille' → logprob: -7.66917610168457

Token 144: '#' (ID: 2)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.14100542664527893
    2. 'for' → logprob: -2.891005516052246
    3. 'gr' → logprob: -4.266005516052246
    4. '
' → logprob: -4.516005516052246
    5. 'result' → logprob: -4.516005516052246
    6. '[
' → logprob: -4.891005516052246
    7. ' grid' → logprob: -5.141005516052246
    8. ' 
' → logprob: -5.516005516052246
    9. 's' → logprob: -5.891005516052246
    10. ' for' → logprob: -5.891005516052246

Token 145: ' Puis' (ID: 87717)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.26524099707603455
    2. 'gr' → logprob: -2.0152409076690674
    3. ' grille' → logprob: -3.0152409076690674
    4. ' grid' → logprob: -3.5152409076690674
    5. 'for' → logprob: -5.1402411460876465
    6. 'g' → logprob: -5.6402411460876465
    7. 'board' → logprob: -6.3902411460876465
    8. 'mat' → logprob: -6.5152411460876465
    9. 'map' → logprob: -6.7652411460876465
    10. 'ligne' → logprob: -6.8902411460876465

Token 146: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.0730900764465332
    2. ' grid' → logprob: -1.5730900764465332
    3. ' grille' → logprob: -2.073090076446533
    4. 'grid' → logprob: -2.448090076446533
    5. ' la' → logprob: -3.198090076446533
    6. 'on' → logprob: -3.198090076446533
    7. ' ' → logprob: -3.323090076446533
    8. ')' → logprob: -3.823090076446533
    9. 'gr' → logprob: -3.823090076446533
    10. '   ' → logprob: -3.948090076446533

Token 147: ' ajoute' (ID: 91611)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.32070696353912354
    2. 'append' → logprob: -1.3207069635391235
    3. ' append' → logprob: -4.945706844329834
    4. 'aj' → logprob: -9.320707321166992
    5. 'for' → logprob: -9.445707321166992
    6. '_append' → logprob: -9.945707321166992
    7. ' ajoute' → logprob: -10.695707321166992
    8. '.' → logprob: -10.945707321166992
    9. '	append' → logprob: -11.695707321166992
    10. '.add' → logprob: -11.820707321166992

Token 148: ' cette' (ID: 7696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1351940780878067
    2. ' cette' → logprob: -2.7601940631866455
    3. ' (' → logprob: -3.2601940631866455
    4. ' la' → logprob: -4.385194301605225
    5. '()' → logprob: -5.635194301605225
    6. ' ' → logprob: -5.760194301605225
    7. '(
' → logprob: -6.760194301605225
    8. '   ' → logprob: -6.885194301605225
    9. '(this' → logprob: -8.010193824768066
    10. '([' → logprob: -8.260193824768066

Token 149: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.664448618888855
    2. ' ligne' → logprob: -1.289448618888855
    3. 'liste' → logprob: -2.2894487380981445
    4. 'ligne' → logprob: -2.9144487380981445
    5. '_' → logprob: -3.4144487380981445
    6. ' nouvelle' → logprob: -4.5394487380981445
    7. 'l' → logprob: -5.6644487380981445
    8. ' ' → logprob: -6.6644487380981445
    9. ' ' → logprob: -6.7894487380981445
    10. ' sous' → logprob: -6.7894487380981445

Token 150: ' à' (ID: 1221)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.4811622202396393
    2. 'gr' → logprob: -2.8561623096466064
    3. ' ' → logprob: -3.3561623096466064
    4. ')' → logprob: -3.4811623096466064
    5. '(grid' → logprob: -3.4811623096466064
    6. '[' → logprob: -3.6061623096466064
    7. ',' → logprob: -3.6061623096466064
    8. 'ligne' → logprob: -3.7311623096466064
    9. ' grid' → logprob: -3.8561623096466064
    10. '_' → logprob: -3.9811623096466064

Token 151: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.05252557620406151
    2. ' grille' → logprob: -3.802525520324707
    3. 'la' → logprob: -4.427525520324707
    4. 'gr' → logprob: -4.677525520324707
    5. ' grid' → logprob: -5.677525520324707
    6. 'grid' → logprob: -6.302525520324707
    7. ' ' → logprob: -7.052525520324707
    8. 'l' → logprob: -8.052525520324707
    9. ' gr' → logprob: -8.427525520324707
    10. ' l' → logprob: -8.552525520324707

Token 152: ' liste' (ID: 31719)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.006396904122084379
    2. 'grid' → logprob: -5.631396770477295
    3. ' grille' → logprob: -6.381396770477295
    4. 'liste' → logprob: -7.006396770477295
    5. 'mat' → logprob: -9.381397247314453
    6. 'g' → logprob: -10.631397247314453
    7. 'list' → logprob: -11.256397247314453
    8. '#' → logprob: -11.381397247314453
    9. ' gr' → logprob: -11.756397247314453
    10. 'board' → logprob: -11.756397247314453

Token 153: ' globale' (ID: 87991)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.2611069977283478
    2. 'grid' → logprob: -1.5111069679260254
    3. 'board' → logprob: -6.261106967926025
    4. 'map' → logprob: -6.886106967926025
    5. ' grid' → logprob: -7.011106967926025
    6. ' grille' → logprob: -7.011106967926025
    7. 'plate' → logprob: -7.136106967926025
    8. 'mat' → logprob: -7.761106967926025
    9. 'g' → logprob: -8.011107444763184
    10. 'data' → logprob: -8.136107444763184

Token 154: ' '' (ID: 461)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.5330200791358948
    2. 'gr' → logprob: -0.9080200791358948
    3. 'board' → logprob: -5.53302001953125
    4. 'mat' → logprob: -6.28302001953125
    5. 'g' → logprob: -6.65802001953125
    6. 'for' → logprob: -7.53302001953125
    7. 'plate' → logprob: -7.78302001953125
    8. 'matrix' → logprob: -7.90802001953125
    9. 'map' → logprob: -8.15802001953125
    10. ' grille' → logprob: -8.53302001953125

Token 155: 'a' (ID: 64)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.3219044804573059
    2. 'grid' → logprob: -1.3219044208526611
    3. 'mat' → logprob: -6.32190465927124
    4. 'board' → logprob: -6.57190465927124
    5. 'g' → logprob: -6.82190465927124
    6. 'data' → logprob: -7.44690465927124
    7. '```' → logprob: -7.82190465927124
    8. 'liste' → logprob: -7.94690465927124
    9. 'plate' → logprob: -7.94690465927124
    10. 'G' → logprob: -8.321904182434082

Token 156: ''' (ID: 6)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.14819766581058502
    2. '')' → logprob: -2.273197650909424
    3. ''' → logprob: -3.773197650909424
    4. '['' → logprob: -5.773197650909424
    5. ')' → logprob: -5.898197650909424
    6. 'a' → logprob: -6.273197650909424
    7. ')'
' → logprob: -6.398197650909424
    8. 'rray' → logprob: -7.898197650909424
    9. 'rr' → logprob: -8.398198127746582
    10. '_' → logprob: -8.398198127746582

Token 157: ' qui' (ID: 2780)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002981624274980277
    2. '
' → logprob: -8.125298500061035
    3. ' a' → logprob: -13.375298500061035
    4. ' 
' → logprob: -15.500298500061035
    5. '  
' → logprob: -15.750298500061035
    6. '#a' → logprob: -16.37529754638672
    7. '
' → logprob: -17.00029754638672
    8. '

' → logprob: -17.25029754638672
    9. '```' → logprob: -17.87529754638672
    10. '	a' → logprob: -18.12529754638672

Token 158: ' représente' (ID: 88912)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012359301559627056
    2. '.append' → logprob: -5.137359142303467
    3. ' a' → logprob: -5.637359142303467
    4. '_a' → logprob: -7.137359142303467
    5. 'contin' → logprob: -8.012359619140625
    6. '=' → logprob: -8.262359619140625
    7. '#' → logprob: -8.387359619140625
    8. '.' → logprob: -8.762359619140625
    9. 'continue' → logprob: -9.137359619140625
    10. 'append' → logprob: -9.137359619140625

Token 159: ' toute' (ID: 16825)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.059901949018239975
    2. ' a' → logprob: -3.0599019527435303
    3. ' la' → logprob: -4.934901714324951
    4. 'la' → logprob: -5.559901714324951
    5. 'l' → logprob: -8.68490219116211
    6. ' ' → logprob: -11.05990219116211
    7. '_a' → logprob: -12.43490219116211
    8. ' l' → logprob: -12.68490219116211
    9. ''a' → logprob: -12.93490219116211
    10. '	a' → logprob: -12.93490219116211

Token 160: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7907456755638123
    2. ' a' → logprob: -0.7907456755638123
    3. ' la' → logprob: -2.415745735168457
    4. 'la' → logprob: -6.540745735168457
    5. 'l' → logprob: -7.040745735168457
    6. ' ' → logprob: -7.290745735168457
    7. ' the' → logprob: -8.290745735168457
    8. ' l' → logprob: -8.540745735168457
    9. '_a' → logprob: -9.415745735168457
    10. ' ' → logprob: -9.915745735168457

Token 161: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.023742927238345146
    2. ' grille' → logprob: -3.773742914199829
    3. ' ' → logprob: -9.14874267578125
    4. 'a' → logprob: -9.14874267578125
    5. ' gr' → logprob: -9.27374267578125
    6. 'grid' → logprob: -10.27374267578125
    7. 'mat' → logprob: -10.27374267578125
    8. '_gr' → logprob: -10.52374267578125
    9. 'liste' → logprob: -10.64874267578125
    10. '   ' → logprob: -10.89874267578125

Token 162: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01817956008017063
    2. '
' → logprob: -4.018179416656494
    3. ' a' → logprob: -10.768179893493652
    4. '
' → logprob: -12.768179893493652
    5. ' 
' → logprob: -13.268179893493652
    6. '

' → logprob: -13.643179893493652
    7. '#a' → logprob: -14.018179893493652
    8. '  
' → logprob: -14.018179893493652
    9. '#' → logprob: -15.393179893493652
    10. '```' → logprob: -15.393179893493652

Token 163: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00043221889063715935
    2. '
' → logprob: -7.750432014465332
    3. ' a' → logprob: -14.875432014465332
    4. ' 
' → logprob: -15.125432014465332
    5. '```' → logprob: -15.375432014465332
    6. '
' → logprob: -15.500432014465332
    7. '

' → logprob: -15.875432014465332
    8. '  
' → logprob: -16.00043296813965
    9. '#a' → logprob: -16.37543296813965
    10. '#' → logprob: -17.37543296813965

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25262221693992615
    2. '=' → logprob: -1.5026222467422485
    3. '.append' → logprob: -8.002622604370117
    4. '=[]' → logprob: -8.502622604370117
    5. '.' → logprob: -9.127622604370117
    6. '[' → logprob: -11.377622604370117
    7. 'a' → logprob: -12.377622604370117
    8. ' +=' → logprob: -12.377622604370117
    9. '=[' → logprob: -12.627622604370117
    10. '_' → logprob: -12.752622604370117

Token 165: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0846824198961258
    2. '[]' → logprob: -2.5846824645996094
    3. '[list' → logprob: -6.334682464599609
    4. '[a' → logprob: -6.584682464599609
    5. '[int' → logprob: -6.584682464599609
    6. '[array' → logprob: -7.709682464599609
    7. '[]
' → logprob: -7.959682464599609
    8. '[
' → logprob: -9.20968246459961
    9. ' [' → logprob: -9.83468246459961
    10. '[List' → logprob: -10.20968246459961

Token 166: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006373812211677432
    2. ' for' → logprob: -7.375637531280518
    3. '
' → logprob: -11.50063705444336
    4. '<|end|>' → logprob: -15.62563705444336
    5. ' 
' → logprob: -16.37563705444336
    6. '```' → logprob: -16.50063705444336
    7. '	for' → logprob: -17.12563705444336
    8. 'f' → logprob: -17.12563705444336
    9. 'For' → logprob: -17.50063705444336
    10. ':' → logprob: -17.75063705444336

Token 167: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.1530538946390152
    2. ' ' → logprob: -2.6530539989471436
    3. ' i' → logprob: -2.6530539989471436
    4. '_' → logprob: -6.9030537605285645
    5. ' range' → logprob: -11.028054237365723
    6. ' ' → logprob: -11.528054237365723
    7. ' ‌' → logprob: -11.653054237365723
    8. 'i' → logprob: -12.903054237365723
    9. ' in' → logprob: -14.278054237365723
    10. ' ​' → logprob: -14.403054237365723

Token 168: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05504058673977852
    2. 'in' → logprob: -2.9300405979156494
    3. ' ' → logprob: -9.43004035949707
    4. 'n' → logprob: -10.55504035949707
    5. '_' → logprob: -11.18004035949707
    6. 'range' → logprob: -11.68004035949707
    7. ' i' → logprob: -12.43004035949707
    8. 's' → logprob: -12.68004035949707
    9. '  ' → logprob: -13.18004035949707
    10. 'space' → logprob: -13.24254035949707

Token 169: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16029682755470276
    2. 'range' → logprob: -1.9102967977523804
    3. ' ' → logprob: -10.285296440124512
    4. ' in' → logprob: -10.660296440124512
    5. 'in' → logprob: -11.785296440124512
    6. '(range' → logprob: -12.910296440124512
    7. '	range' → logprob: -13.035296440124512
    8. ' xrange' → logprob: -14.160296440124512
    9. '_' → logprob: -14.785296440124512
    10. '  ' → logprob: -15.285296440124512

Token 170: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.008617172949016094
    2. '(' → logprob: -4.758617401123047
    3. '(
' → logprob: -13.133617401123047
    4. ' (' → logprob: -14.383617401123047
    5. 'H' → logprob: -16.258617401123047
    6. '(

' → logprob: -17.758617401123047
    7. ' H' → logprob: -18.758617401123047
    8. '(int' → logprob: -18.758617401123047
    9. '('' → logprob: -19.258617401123047
    10. '()' → logprob: -19.383617401123047

Token 171: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002967320033349097
    2. ')' → logprob: -8.875296592712402
    3. '):
' → logprob: -9.125296592712402
    4. ':' → logprob: -10.250296592712402
    5. ' ):' → logprob: -11.500296592712402
    6. '():' → logprob: -14.125296592712402
    7. '+' → logprob: -14.500296592712402
    8. ']:' → logprob: -15.250296592712402
    9. '):
' → logprob: -15.750296592712402
    10. '):

' → logprob: -16.00029754638672

Token 172: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0893661379814148
    2. ' a' → logprob: -2.7143661975860596
    3. '    
' → logprob: -4.9643659591674805
    4. 'a' → logprob: -5.0893659591674805
    5. ' 
' → logprob: -5.3393659591674805
    6. '	a' → logprob: -7.9643659591674805
    7. '<|end|>' → logprob: -8.08936595916748
    8. '  
' → logprob: -8.58936595916748
    9. '[a' → logprob: -9.33936595916748
    10. '   
' → logprob: -9.33936595916748

Token 173: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033199526369571686
    2. ' a' → logprob: -3.7831995487213135
    3. 'a' → logprob: -4.783199310302734
    4. '    
' → logprob: -6.908199310302734
    5. '	a' → logprob: -8.533199310302734
    6. '
' → logprob: -9.658199310302734
    7. ' lines' → logprob: -9.908199310302734
    8. ' 
' → logprob: -10.033199310302734
    9. '   ' → logprob: -10.033199310302734
    10. ' line' → logprob: -10.158199310302734

Token 174: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9918725490570068
    2. ' line' → logprob: -1.4918725490570068
    3. ' a' → logprob: -1.8668725490570068
    4. 'a' → logprob: -2.116872549057007
    5. ' ligne' → logprob: -2.616872549057007
    6. 'line' → logprob: -3.616872549057007
    7. 'ligne' → logprob: -4.741872787475586
    8. '    
' → logprob: -4.991872787475586
    9. ' lignes' → logprob: -5.741872787475586
    10. ' lines' → logprob: -5.991872787475586

Token 175: 'i' (ID: 72)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9227144718170166
    2. 'a' → logprob: -1.5477144718170166
    3. '   ' → logprob: -1.5477144718170166
    4. ' a' → logprob: -2.6727144718170166
    5. ' ' → logprob: -3.1727144718170166
    6. '
' → logprob: -3.4227144718170166
    7. ' )' → logprob: -5.2977142333984375
    8. '):' → logprob: -5.4227142333984375
    9. '_a' → logprob: -5.5477142333984375
    10. 'range' → logprob: -5.5477142333984375

Token 176: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07958382368087769
    2. 'in' → logprob: -3.0795838832855225
    3. ')' → logprob: -3.5795838832855225
    4. ''' → logprob: -7.204583644866943
    5. ' '' → logprob: -7.704583644866943
    6. '):' → logprob: -7.704583644866943
    7. ':' → logprob: -8.579584121704102
    8. ')'' → logprob: -8.704584121704102
    9. ' )' → logprob: -8.829584121704102
    10. ''in' → logprob: -9.079584121704102

Token 177: ' varie' (ID: 103216)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9338203072547913
    2. ':' → logprob: -1.5588202476501465
    3. '<|end|>' → logprob: -1.8088202476501465
    4. 'in' → logprob: -2.5588202476501465
    5. ' ' → logprob: -2.9338202476501465
    6. '+' → logprob: -3.3088202476501465
    7. ')' → logprob: -3.5588202476501465
    8. ' :' → logprob: -4.4338202476501465
    9. '=' → logprob: -4.9338202476501465
    10. ' +=' → logprob: -5.4338202476501465

Token 178: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4042893648147583
    2. 'from' → logprob: -2.4042892456054688
    3. ' in' → logprob: -2.5292892456054688
    4. ' from' → logprob: -2.6542892456054688
    5. 'de' → logprob: -2.7792892456054688
    6. 'in' → logprob: -4.654289245605469
    7. '<|end|>' → logprob: -4.779289245605469
    8. ')' → logprob: -5.529289245605469
    9. ' entre' → logprob: -6.529289245605469
    10. '0' → logprob: -6.779289245605469

Token 179: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004623679909855127
    2. ' ' → logprob: -5.379623889923096
    3. ' range' → logprob: -13.629623413085938
    4. 'range' → logprob: -13.879623413085938
    5. 'H' → logprob: -14.379623413085938
    6. ' H' → logprob: -14.504623413085938
    7. '1' → logprob: -16.254623413085938
    8. ' ' → logprob: -17.379623413085938
    9. '```' → logprob: -18.379623413085938
    10. '2' → logprob: -19.067123413085938

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.750003814697266
    3. 'H' → logprob: -14.125003814697266
    4. '1' → logprob: -17.250003814697266
    5. 'range' → logprob: -17.875003814697266
    6. ' H' → logprob: -19.375003814697266
    7. '۰' → logprob: -19.500003814697266
    8. '```' → logprob: -19.875003814697266
    9. '(' → logprob: -20.250003814697266
    10. '(H' → logprob: -20.500003814697266

Token 181: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.09354516118764877
    2. 'à' → logprob: -2.4685451984405518
    3. ' ' → logprob: -6.218544960021973
    4. ' a' → logprob: -6.593544960021973
    5. ' to' → logprob: -7.343544960021973
    6. 'to' → logprob: -8.593544960021973
    7. ' jusqu' → logprob: -9.218544960021973
    8. ',' → logprob: -9.218544960021973
    9. 'a' → logprob: -9.593544960021973
    10. ' á' → logprob: -10.968544960021973

Token 182: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.31327658891677856
    2. ' H' → logprob: -1.3132765293121338
    3. ' ' → logprob: -11.688276290893555
    4. '	H' → logprob: -12.438276290893555
    5. '(H' → logprob: -13.938276290893555
    6. ' ' → logprob: -14.563276290893555
    7. '  ' → logprob: -15.438276290893555
    8. '<H' → logprob: -15.563276290893555
    9. '   ' → logprob: -15.938276290893555
    10. ',H' → logprob: -16.188276290893555

Token 183: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01397591084241867
    2. ' -' → logprob: -4.388976097106934
    3. ':' → logprob: -7.013976097106934
    4. '1' → logprob: -8.263976097106934
    5. '   ' → logprob: -9.513976097106934
    6. ' ' → logprob: -9.638976097106934
    7. '):' → logprob: -10.388976097106934
    8. ')' → logprob: -10.638976097106934
    9. '-H' → logprob: -10.763976097106934
    10. '
' → logprob: -11.138976097106934

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011705794604495168
    2. ' ' → logprob: -6.751170635223389
    3. '2' → logprob: -15.87617015838623
    4. '-' → logprob: -16.126171112060547
    5. ')' → logprob: -16.751171112060547
    6. '  ' → logprob: -16.876171112060547
    7. '```' → logprob: -17.376171112060547
    8. ' -' → logprob: -17.438671112060547
    9. '   ' → logprob: -17.751171112060547
    10. ' ' → logprob: -17.751171112060547

Token 185: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014259527437388897
    2. ':
' → logprob: -4.889259338378906
    3. '   ' → logprob: -5.389259338378906
    4. ' :' → logprob: -6.389259338378906
    5. ' :
' → logprob: -8.639259338378906
    6. '<|end|>' → logprob: -9.389259338378906
    7. ',' → logprob: -10.139259338378906
    8. ' ' → logprob: -10.764259338378906
    9. '
' → logprob: -11.764259338378906
    10. '<|end|>' → logprob: -11.889259338378906

Token 186: 'cha' (ID: 3836)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2447340339422226
    2. 'H' → logprob: -1.8697340488433838
    3. ' )' → logprob: -3.744734048843384
    4. '):' → logprob: -3.994734048843384
    5. ' H' → logprob: -4.119733810424805
    6. ' ):' → logprob: -6.119733810424805
    7. ' ' → logprob: -6.994733810424805
    8. '):
' → logprob: -7.244733810424805
    9. '   ' → logprob: -7.994733810424805
    10. '1' → logprob: -9.619733810424805

Token 187: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.09899119287729263
    2. 'q' → logprob: -2.7239911556243896
    3. 'z' → logprob: -4.598991394042969
    4. 'ud' → logprob: -5.723991394042969
    5. '   ' → logprob: -5.973991394042969
    6. 'c' → logprob: -6.098991394042969
    7. '```' → logprob: -6.098991394042969
    8. 'u' → logprob: -6.598991394042969
    9. 'n' → logprob: -6.973991394042969
    10. ')' → logprob: -7.098991394042969

Token 188: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43070071935653687
    2. ' ):' → logprob: -2.1807007789611816
    3. ' :' → logprob: -2.9307007789611816
    4. ')' → logprob: -3.3057007789611816
    5. ' )' → logprob: -3.3057007789611816
    6. '):' → logprob: -3.4307007789611816
    7. ' ligne' → logprob: -3.9307007789611816
    8. ' range' → logprob: -4.180700778961182
    9. ':' → logprob: -4.305700778961182
    10. '   ' → logprob: -4.555700778961182

Token 189: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4763329029083252
    2. '):
' → logprob: -1.3513329029083252
    3. ')' → logprob: -2.226332902908325
    4. '   ' → logprob: -5.351332664489746
    5. ' ):' → logprob: -6.101332664489746
    6. ' ):
' → logprob: -6.101332664489746
    7. ':' → logprob: -6.476332664489746
    8. ' )' → logprob: -7.101332664489746
    9. ':
' → logprob: -8.601332664489746
    10. ' ' → logprob: -9.101332664489746

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005765964742749929
    2. '    
' → logprob: -6.005765914916992
    3. 'a' → logprob: -6.130765914916992
    4. ' 
' → logprob: -8.005765914916992
    5. ' a' → logprob: -8.255765914916992
    6. ':' → logprob: -8.755765914916992
    7. '
' → logprob: -9.005765914916992
    8. ' lines' → logprob: -10.505765914916992
    9. '  
' → logprob: -10.755765914916992
    10. '    ' → logprob: -11.005765914916992

Token 191: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0244020223617554
    2. ' line' → logprob: -1.2744020223617554
    3. 'line' → logprob: -1.3994020223617554
    4. ' a' → logprob: -2.774402141571045
    5. ' row' → logprob: -4.274402141571045
    6. 'row' → logprob: -4.399402141571045
    7. '   ' → logprob: -4.399402141571045
    8. 'ligne' → logprob: -4.774402141571045
    9. ' ligne' → logprob: -5.774402141571045
    10. 'l' → logprob: -6.524402141571045

Token 192: ' On' (ID: 2160)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4908580183982849
    2. ' line' → logprob: -1.7408580780029297
    3. 'ligne' → logprob: -2.4908580780029297
    4. 'row' → logprob: -2.6158580780029297
    5. ' ligne' → logprob: -3.9908580780029297
    6. 'a' → logprob: -3.9908580780029297
    7. ' row' → logprob: -4.11585807800293
    8. ' a' → logprob: -6.74085807800293
    9. 'l' → logprob: -6.86585807800293
    10. '   ' → logprob: -7.86585807800293

Token 193: ' lit' (ID: 11980)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6474369764328003
    2. 'a' → logprob: -1.1474369764328003
    3. '   ' → logprob: -2.52243709564209
    4. '.append' → logprob: -2.77243709564209
    5. ' ' → logprob: -5.39743709564209
    6. ' =' → logprob: -6.14743709564209
    7. '    ' → logprob: -6.52243709564209
    8. 'ligne' → logprob: -7.02243709564209
    9. '  ' → logprob: -7.14743709564209
    10. '    
' → logprob: -7.27243709564209

Token 194: ' la' (ID: 557)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.2031360864639282
    2. ' la' → logprob: -1.5781360864639282
    3. 'a' → logprob: -1.8281360864639282
    4. '    ' → logprob: -2.3281359672546387
    5. ' une' → logprob: -2.3281359672546387
    6. '()' → logprob: -2.9531359672546387
    7. ' ' → logprob: -3.7031359672546387
    8. '   ' → logprob: -4.078135967254639
    9. '[]' → logprob: -4.703135967254639
    10. ' l' → logprob: -4.703135967254639

Token 195: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.6522588133811951
    2. 'l' → logprob: -1.2772588729858398
    3. 'liste' → logprob: -2.27725887298584
    4. ' ligne' → logprob: -3.27725887298584
    5. 'list' → logprob: -3.77725887298584
    6. 'line' → logprob: -3.77725887298584
    7. 'a' → logprob: -5.02725887298584
    8. ' line' → logprob: -6.40225887298584
    9. ' liste' → logprob: -6.90225887298584
    10. 'gr' → logprob: -7.02725887298584

Token 196: ' entière' (ID: 61583)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5847019553184509
    2. 'a' → logprob: -1.4597020149230957
    3. ' =' → logprob: -2.2097020149230957
    4. ',' → logprob: -3.0847020149230957
    5. 's' → logprob: -4.709702014923096
    6. '    ' → logprob: -4.834702014923096
    7. '    
' → logprob: -5.209702014923096
    8. '=' → logprob: -5.709702014923096
    9. 't' → logprob: -5.834702014923096
    10. 'line' → logprob: -5.959702014923096

Token 197: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026827218011021614
    2. ',' → logprob: -4.151827335357666
    3. 'a' → logprob: -5.151827335357666
    4. 'ligne' → logprob: -7.026827335357666
    5. 'line' → logprob: -7.401827335357666
    6. ' =' → logprob: -7.401827335357666
    7. 'l' → logprob: -7.401827335357666
    8. '    ' → logprob: -8.026826858520508
    9. '()' → logprob: -8.151826858520508
    10. 's' → logprob: -8.526826858520508

Token 198: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5140458941459656
    2. ' line' → logprob: -1.5140459537506104
    3. ' row' → logprob: -2.1390459537506104
    4. ' ligne' → logprob: -3.6390459537506104
    5. ' l' → logprob: -4.764045715332031
    6. 'line' → logprob: -5.139045715332031
    7. ' a' → logprob: -5.264045715332031
    8. '    ' → logprob: -5.264045715332031
    9. 'row' → logprob: -6.264045715332031
    10. 'ligne' → logprob: -6.514045715332031

Token 199: ' convert' (ID: 8452)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.40117567777633667
    2. 'a' → logprob: -1.4011757373809814
    3. ' a' → logprob: -3.5261757373809814
    4. '.extend' → logprob: -3.7761757373809814
    5. 'split' → logprob: -4.401175498962402
    6. 'append' → logprob: -4.901175498962402
    7. '=' → logprob: -5.901175498962402
    8. ' =' → logprob: -5.901175498962402
    9. ' append' → logprob: -7.151175498962402
    10. '.' → logprob: -7.151175498962402

Token 200: 'it' (ID: 278)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7713662385940552
    2. '().' → logprob: -0.7713662385940552
    3. 'ate' → logprob: -3.6463661193847656
    4. 'e' → logprob: -4.271366119384766
    5. 'er' → logprob: -4.271366119384766
    6. 'int' → logprob: -4.646366119384766
    7. '()
' → logprob: -6.271366119384766
    8. '('' → logprob: -6.521366119384766
    9. 'par' → logprob: -7.271366119384766
    10. '())' → logprob: -7.271366119384766

Token 201: ' tous' (ID: 10688)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.7788513898849487
    2. '(' → logprob: -0.9038513898849487
    3. '(list' → logprob: -3.0288515090942383
    4. '()' → logprob: -3.2788515090942383
    5. 'int' → logprob: -4.028851509094238
    6. '   ' → logprob: -4.278851509094238
    7. 'list' → logprob: -4.403851509094238
    8. '(map' → logprob: -5.903851509094238
    9. 'a' → logprob: -7.653851509094238
    10. '(
' → logprob: -7.778851509094238

Token 202: ' les' (ID: 1341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4634513556957245
    2. '(' → logprob: -1.0884513854980469
    3. '()' → logprob: -3.588451385498047
    4. 'int' → logprob: -5.713451385498047
    5. '(list' → logprob: -6.963451385498047
    6. '(map' → logprob: -7.213451385498047
    7. '(lambda' → logprob: -7.838451385498047
    8. '(str' → logprob: -8.588451385498047
    9. '(
' → logprob: -8.713451385498047
    10. '   ' → logprob: -8.713451385498047

Token 203: ' éléments' (ID: 57375)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.43698424100875854
    2. 'élé' → logprob: -1.6869843006134033
    3. ' éléments' → logprob: -2.4369843006134033
    4. 'elements' → logprob: -3.3119843006134033
    5. 'ent' → logprob: -3.8119843006134033
    6. 'elem' → logprob: -4.936984062194824
    7. ' elements' → logprob: -5.436984062194824
    8. ' int' → logprob: -5.936984062194824
    9. 'val' → logprob: -6.436984062194824
    10. 'a' → logprob: -6.561984062194824

Token 204: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4102940857410431
    2. ' =' → logprob: -1.7852940559387207
    3. '=' → logprob: -2.1602940559387207
    4. 'a' → logprob: -3.5352940559387207
    5. '()' → logprob: -4.160294055938721
    6. ',' → logprob: -6.035294055938721
    7. ')' → logprob: -7.285294055938721
    8. '(a' → logprob: -7.285294055938721
    9. 'en' → logprob: -7.660294055938721
    10. '=int' → logprob: -7.785294055938721

Token 205: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25512275099754333
    2. ' int' → logprob: -1.5051227807998657
    3. 'ints' → logprob: -6.005122661590576
    4. 'ent' → logprob: -8.005123138427734
    5. ' integers' → logprob: -9.255123138427734
    6. 'inte' → logprob: -9.380123138427734
    7. ' ints' → logprob: -9.630123138427734
    8. ' ent' → logprob: -10.130123138427734
    9. '[int' → logprob: -10.880123138427734
    10. ' entier' → logprob: -11.130123138427734

Token 206: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034277502447366714
    2. 'a' → logprob: -3.6592774391174316
    3. ' =' → logprob: -5.909277439117432
    4. ' a' → logprob: -6.284277439117432
    5. '    
' → logprob: -6.534277439117432
    6. ',' → logprob: -6.784277439117432
    7. '
' → logprob: -8.65927791595459
    8. '    ' → logprob: -8.90927791595459
    9. '	a' → logprob: -9.78427791595459
    10. '  ' → logprob: -9.90927791595459

Token 207: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04342525824904442
    2. ' line' → logprob: -3.7934253215789795
    3. 'line' → logprob: -5.4184250831604
    4. ' row' → logprob: -5.5434250831604
    5. 'a' → logprob: -5.6684250831604
    6. ' a' → logprob: -5.7934250831604
    7. ' ligne' → logprob: -5.9184250831604
    8. 'ligne' → logprob: -6.6684250831604
    9. 'row' → logprob: -7.6684250831604
    10. ' lst' → logprob: -9.168425559997559

Token 208: ' on' (ID: 402)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3225666880607605
    2. 'a' → logprob: -1.5725667476654053
    3. '   ' → logprob: -3.1975667476654053
    4. ' ajoute' → logprob: -4.447566509246826
    5. '    ' → logprob: -5.197566509246826
    6. '.append' → logprob: -5.697566509246826
    7. ' la' → logprob: -5.947566509246826
    8. ' les' → logprob: -6.947566509246826
    9. ' append' → logprob: -7.197566509246826
    10. ' on' → logprob: -7.447566509246826

Token 209: ' crée' (ID: 102256)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.012490701861679554
    2. 'append' → logprob: -4.637490749359131
    3. ' append' → logprob: -6.262490749359131
    4. 'a' → logprob: -7.262490749359131
    5. ' a' → logprob: -9.762490272521973
    6. '.extend' → logprob: -10.637490272521973
    7. '_append' → logprob: -11.637490272521973
    8. ' ajoute' → logprob: -11.637490272521973
    9. '   ' → logprob: -11.887490272521973
    10. '	append' → logprob: -12.387490272521973

Token 210: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6553446650505066
    2. ' une' → logprob: -1.1553447246551514
    3. 'a' → logprob: -2.2803447246551514
    4. ' a' → logprob: -3.6553447246551514
    5. '   ' → logprob: -4.155344486236572
    6. 'une' → logprob: -4.655344486236572
    7. 'la' → logprob: -4.905344486236572
    8. '(' → logprob: -5.780344486236572
    9. '[' → logprob: -7.780344486236572
    10. '[]' → logprob: -8.03034496307373

Token 211: ' sous' (ID: 14487)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.15072566270828247
    2. 'a' → logprob: -2.7757256031036377
    3. ' liste' → logprob: -3.0257256031036377
    4. 'list' → logprob: -4.275725841522217
    5. 'ligne' → logprob: -4.275725841522217
    6. ' list' → logprob: -7.775725841522217
    7. ' ligne' → logprob: -8.150725364685059
    8. 'l' → logprob: -9.025725364685059
    9. ' a' → logprob: -9.275725364685059
    10. 's' → logprob: -9.525725364685059

Token 212: '-l' (ID: 2887)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.8042652010917664
    2. '-l' → logprob: -0.9292652010917664
    3. 'liste' → logprob: -1.9292652606964111
    4. '   ' → logprob: -5.929265022277832
    5. '[]' → logprob: -6.304265022277832
    6. ' liste' → logprob: -6.554265022277832
    7. 'list' → logprob: -6.679265022277832
    8. 'a' → logprob: -6.804265022277832
    9. '_' → logprob: -7.179265022277832
    10. 'ligne' → logprob: -7.554265022277832

Token 213: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.006169574800878763
    2. 'ist' → logprob: -5.50616979598999
    3. 'a' → logprob: -6.63116979598999
    4. 'liste' → logprob: -8.131169319152832
    5. 'ste' → logprob: -9.381169319152832
    6. 'is' → logprob: -9.631169319152832
    7. '#' → logprob: -10.006169319152832
    8. '[' → logprob: -10.381169319152832
    9. '```' → logprob: -10.631169319152832
    10. 'ise' → logprob: -11.006169319152832

Token 214: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024495957419276237
    2. 'a' → logprob: -3.899495840072632
    3. ' a' → logprob: -5.899496078491211
    4. ' line' → logprob: -8.149496078491211
    5. ' ligne' → logprob: -8.274496078491211
    6. 'ligne' → logprob: -8.399496078491211
    7. 'line' → logprob: -8.649496078491211
    8. '    
' → logprob: -9.899496078491211
    9. 'l' → logprob: -10.274496078491211
    10. 'row' → logprob: -10.399496078491211

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002041890751570463
    2. 'a' → logprob: -6.627041816711426
    3. ' a' → logprob: -7.752041816711426
    4. '    
' → logprob: -8.752041816711426
    5. '
' → logprob: -10.127041816711426
    6. '   ' → logprob: -10.252041816711426
    7. ' line' → logprob: -11.877041816711426
    8. ',' → logprob: -12.002041816711426
    9. '```' → logprob: -12.127041816711426
    10. '  ' → logprob: -12.252041816711426

Token 216: ' ligne' (ID: 19583)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.34145331382751465
    2. 'line' → logprob: -1.9664533138275146
    3. 'row' → logprob: -2.2164533138275146
    4. 'ligne' (adapté à ' ligne') → logprob: -3.9664533138275146
    5. '   ' → logprob: -4.716453552246094
    6. ' line' → logprob: -5.466453552246094
    7. ' row' → logprob: -5.591453552246094
    8. ' a' → logprob: -5.966453552246094
    9. ' ligne' → logprob: -6.841453552246094
    10. 'l' → logprob: -7.966453552246094

Token 217: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0889820009469986
    2. ' =' → logprob: -2.463982105255127
    3. '=[]' → logprob: -10.338981628417969
    4. '_' → logprob: -13.088981628417969
    5. '=[' → logprob: -13.338981628417969
    6. 's' → logprob: -13.338981628417969
    7. '＝' → logprob: -14.088981628417969
    8. ')' → logprob: -14.588981628417969
    9. '=int' → logprob: -14.588981628417969
    10. '[]' → logprob: -14.963981628417969

Token 218: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0002613358374219388
    2. ' list' → logprob: -8.250261306762695
    3. 'map' → logprob: -17.000261306762695
    4. 'liste' → logprob: -19.500261306762695
    5. '[list' → logprob: -20.000261306762695
    6. '=list' → logprob: -20.375261306762695
    7. '	list' → logprob: -20.875261306762695
    8. '[' → logprob: -21.500261306762695
    9. 'List' → logprob: -22.125261306762695
    10. 'lis' → logprob: -22.500261306762695

Token 219: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0011727249948307872
    2. '(' → logprob: -6.7511725425720215
    3. 'map' → logprob: -13.62617301940918
    4. '(int' → logprob: -14.12617301940918
    5. '(
' → logprob: -14.87617301940918
    6. '	map' → logprob: -17.00117301940918
    7. '()' → logprob: -17.25117301940918
    8. ' map' → logprob: -17.62617301940918
    9. '(m' → logprob: -17.75117301940918
    10. '.map' → logprob: -18.12617301940918

Token 220: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00450050039216876
    2. 'int' → logprob: -5.754500389099121
    3. '(' → logprob: -7.004500389099121
    4. '<int' → logprob: -8.254500389099121
    5. '[int' → logprob: -9.629500389099121
    6. ']int' → logprob: -10.129500389099121
    7. '<|end|>' → logprob: -11.129500389099121
    8. ',int' → logprob: -11.254500389099121
    9. '=int' → logprob: -11.754500389099121
    10. '(
' → logprob: -12.504500389099121

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020573768764734268
    2. ',input' → logprob: -3.895573854446411
    3. 'input' → logprob: -11.270573616027832
    4. '(input' → logprob: -11.895573616027832
    5. ' ,' → logprob: -12.270573616027832
    6. '(' → logprob: -12.520573616027832
    7. ',
' → logprob: -13.145573616027832
    8. '(),' → logprob: -13.895573616027832
    9. ',int' → logprob: -15.145573616027832
    10. '   ' → logprob: -15.770573616027832

Token 222: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029761601239442825
    2. ' input' → logprob: -3.529761552810669
    3. '(input' → logprob: -12.52976131439209
    4. ',input' → logprob: -12.52976131439209
    5. '   ' → logprob: -13.40476131439209
    6. '	input' → logprob: -14.65476131439209
    7. ' ' → logprob: -14.77976131439209
    8. ')' → logprob: -14.77976131439209
    9. '[input' → logprob: -15.15476131439209
    10. '=input' → logprob: -15.27976131439209

Token 223: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.264322317088954e-05
    2. '()' → logprob: -9.875052452087402
    3. '(' → logprob: -14.875052452087402
    4. ' ().' → logprob: -15.375052452087402
    5. ')' → logprob: -15.500052452087402
    6. '.split' → logprob: -15.875052452087402
    7. '.' → logprob: -16.25005340576172
    8. '()))' → logprob: -16.62505340576172
    9. '()
' → logprob: -17.37505340576172
    10. '()[' → logprob: -17.62505340576172

Token 224: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.45848218582978e-06
    2. ' split' → logprob: -13.37500286102295
    3. 'strip' → logprob: -14.12500286102295
    4. ')' → logprob: -16.125001907348633
    5. '(split' → logprob: -17.000001907348633
    6. 'spl' → logprob: -18.250001907348633
    7. '.split' → logprob: -18.500001907348633
    8. 'rstrip' → logprob: -18.625001907348633
    9. 'plit' → logprob: -20.125001907348633
    10. ' ' → logprob: -21.125001907348633

Token 225: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.26422977447509766
    2. '))' → logprob: -1.5142297744750977
    3. '()' → logprob: -4.889229774475098
    4. '())' → logprob: -6.014229774475098
    5. ')))' → logprob: -6.889229774475098
    6. ')' → logprob: -7.639229774475098
    7. '())))' → logprob: -8.139229774475098
    8. '()))
' → logprob: -8.264229774475098
    9. '(' → logprob: -8.764229774475098
    10. '()));' → logprob: -11.514229774475098

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05066170543432236
    2. 'a' → logprob: -3.17566180229187
    3. '
' → logprob: -5.550661563873291
    4. '    
' → logprob: -5.925661563873291
    5. '<|end|>' → logprob: -7.425661563873291
    6. ' a' → logprob: -9.17566204071045
    7. ')' → logprob: -9.17566204071045
    8. '  
' → logprob: -9.55066204071045
    9. '   
' → logprob: -10.17566204071045
    10. '#a' → logprob: -10.30066204071045

Token 227: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6344404816627502
    2. 'a' (adapté à ' a') → logprob: -0.7594404816627502
    3. ' a' → logprob: -6.6344404220581055
    4. '    
' → logprob: -8.259440422058105
    5. '<|end|>' → logprob: -8.634440422058105
    6. '	a' → logprob: -10.884440422058105
    7. '  ' → logprob: -11.384440422058105
    8. ' ' → logprob: -11.634440422058105
    9. ')' → logprob: -11.759440422058105
    10. '
' → logprob: -12.009440422058105

Token 228: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.1002923920750618
    2. '.' → logprob: -2.350292444229126
    3. '.app' → logprob: -9.600292205810547
    4. '.Append' → logprob: -12.100292205810547
    5. '.ap' → logprob: -12.225292205810547
    6. '.extend' → logprob: -12.975292205810547
    7. '.push' → logprob: -13.350292205810547
    8. ' .' → logprob: -14.225292205810547
    9. 'append' → logprob: -14.600292205810547
    10. '​.' → logprob: -14.600292205810547

Token 229: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.02975454181432724
    2. '(' → logprob: -3.529754638671875
    3. '(li' → logprob: -13.404754638671875
    4. '(a' → logprob: -14.029754638671875
    5. '(line' → logprob: -14.404754638671875
    6. ' (' → logprob: -14.529754638671875
    7. '(
' → logprob: -15.029754638671875
    8. '((' → logprob: -16.279754638671875
    9. '(L' → logprob: -16.529754638671875
    10. '(

' → logprob: -16.654754638671875

Token 230: 'igne' (ID: 24120)
  Prédit: 'igne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.6412289142608643
    2. 'ine' → logprob: -0.7662289142608643
    3. '(' → logprob: -6.016228675842285
    4. 'e' → logprob: -6.391228675842285
    5. ')' → logprob: -6.391228675842285
    6. 'ne' → logprob: -7.266228675842285
    7. '[' → logprob: -7.516228675842285
    8. 'a' → logprob: -7.766228675842285
    9. 'ig' → logprob: -7.891228675842285
    10. 'ige' → logprob: -8.891228675842285

Token 231: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.500000953674316
    3. ')
' → logprob: -14.875000953674316
    4. '))' → logprob: -17.625
    5. ')`' → logprob: -19.125
    6. '[' → logprob: -19.5
    7. '   ' → logprob: -19.625
    8. ')

' → logprob: -20.0
    9. ')return' → logprob: -20.0
    10. ')a' → logprob: -20.0

Token 232: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7160165905952454
    2. '
' → logprob: -1.5910165309906006
    3. '<|end|>' → logprob: -1.8410165309906006
    4. '#' → logprob: -2.0910165309906006
    5. '\n' → logprob: -4.71601676940918
    6. 'n' → logprob: -5.71601676940918
    7. ' for' → logprob: -5.71601676940918
    8. '```' → logprob: -6.59101676940918
    9. 'a' → logprob: -6.84101676940918
    10. 'result' → logprob: -6.96601676940918

Token 233: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6769131422042847
    2. '#' → logprob: -1.0519131422042847
    3. '<|end|>' → logprob: -2.426913261413574
    4. '
' → logprob: -3.301913261413574
    5. '\n' → logprob: -4.926913261413574
    6. 'print' → logprob: -5.301913261413574
    7. ' for' → logprob: -6.426913261413574
    8. 'n' → logprob: -7.801913261413574
    9. '  
' → logprob: -8.051913261413574
    10. 'result' → logprob: -8.051913261413574

Token 234: ' Aj' (ID: 28294)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: 'out' (ID: 468)
  Prédit: 'oute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.15461234748363495
    2. 'outer' → logprob: -2.5296123027801514
    3. 'outez' → logprob: -3.2796123027801514
    4. 'out' → logprob: -3.6546123027801514
    5. 'outes' → logprob: -10.65461254119873
    6. 'ute' → logprob: -11.90461254119873
    7. '```' → logprob: -12.40461254119873
    8. '#' → logprob: -12.65461254119873
    9. 'o' → logprob: -13.65461254119873
    10. 'a' → logprob: -14.15461254119873

Token 236: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0725117102265358
    2. '(a' → logprob: -3.072511672973633
    3. '(l' → logprob: -4.447511672973633
    4. '<|end|>' → logprob: -5.322511672973633
    5. '   ' → logprob: -6.197511672973633
    6. 'a' → logprob: -6.322511672973633
    7. '(
' → logprob: -6.447511672973633
    8. '()' → logprob: -7.322511672973633
    9. '(line' → logprob: -8.822511672973633
    10. ' a' → logprob: -8.822511672973633

Token 237: ' la' (ID: 557)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.07409310340881348
    2. ' ligne' → logprob: -2.6990931034088135
    3. '(l' → logprob: -5.574092864990234
    4. 'l' → logprob: -8.699092864990234
    5. 'lig' → logprob: -10.074092864990234
    6. '(' → logprob: -10.074092864990234
    7. 'a' → logprob: -10.699092864990234
    8. ' lign' → logprob: -10.699092864990234
    9. ' a' → logprob: -10.824092864990234
    10. ' ' → logprob: -11.949092864990234

Token 238: ' sous' (ID: 14487)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.6330674290657043
    2. ' ligne' → logprob: -0.7580674290657043
    3. 'a' → logprob: -9.25806713104248
    4. ' ' → logprob: -9.50806713104248
    5. 's' → logprob: -10.00806713104248
    6. 'l' → logprob: -10.25806713104248
    7. ' a' → logprob: -10.38306713104248
    8. ' ' → logprob: -10.75806713104248
    9. ' sous' → logprob: -10.88306713104248
    10. '   ' → logprob: -10.88306713104248

Token 239: '-l' (ID: 2887)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.1876462697982788
    2. '_' → logprob: -2.6876463890075684
    3. '-l' → logprob: -2.9376463890075684
    4. 'liste' → logprob: -3.5626463890075684
    5. 'a' → logprob: -4.562646389007568
    6. '_a' → logprob: -5.687646389007568
    7. '   ' → logprob: -6.062646389007568
    8. '[' → logprob: -6.937646389007568
    9. '_list' → logprob: -7.312646389007568
    10. '-' → logprob: -7.437646389007568

Token 240: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.00741069670766592
    2. 'liste' → logprob: -5.382410526275635
    3. 'a' → logprob: -7.257410526275635
    4. 'site' → logprob: -7.882410526275635
    5. 'ist' → logprob: -7.882410526275635
    6. 'ste' → logprob: -8.632411003112793
    7. 'ise' → logprob: -9.007411003112793
    8. 'is' → logprob: -9.194911003112793
    9. 'igne' → logprob: -9.569911003112793
    10. '```' → logprob: -9.694911003112793

Token 241: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7909473180770874
    2. '#' → logprob: -1.6659473180770874
    3. 'for' → logprob: -1.6659473180770874
    4. '<|end|>' → logprob: -2.040947437286377
    5. '\n' → logprob: -4.665947437286377
    6. 'n' → logprob: -4.665947437286377
    7. 'print' → logprob: -5.540947437286377
    8. ' for' → logprob: -5.790947437286377
    9. '  
' → logprob: -6.165947437286377
    10. '```' → logprob: -6.665947437286377

Token 242: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6931529641151428
    2. ' a' → logprob: -0.6931529641151428
    3. ' ' → logprob: -12.443153381347656
    4. '	a' → logprob: -14.443153381347656
    5. '_a' → logprob: -14.443153381347656
    6. ' ' → logprob: -14.943153381347656
    7. ' la' → logprob: -16.068153381347656
    8. ' the' → logprob: -16.193153381347656
    9. ')a' → logprob: -16.193153381347656
    10. '#a' → logprob: -16.568153381347656

Token 243: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00023333763238042593
    2. ' a' → logprob: -8.37523365020752
    3. 'liste' → logprob: -13.12523365020752
    4. ' liste' → logprob: -15.37523365020752
    5. ' ' → logprob: -15.87523365020752
    6. 'list' → logprob: -16.375232696533203
    7. '`' → logprob: -17.000232696533203
    8. '   ' → logprob: -17.875232696533203
    9. 'b' → logprob: -17.875232696533203
    10. 's' → logprob: -17.875232696533203

Token 244: ' principale' (ID: 68926)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5551571249961853
    2. 'max' → logprob: -1.55515718460083
    3. 'for' → logprob: -1.80515718460083
    4. 'result' → logprob: -4.68015718460083
    5. 's' → logprob: -4.80515718460083
    6. 'total' → logprob: -5.05515718460083
    7. 'sum' → logprob: -5.43015718460083
    8. 'min' → logprob: -5.43015718460083
    9. 'print' → logprob: -5.80515718460083
    10. 'm' → logprob: -5.80515718460083

Token 247: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6612154841423035
    2. '#' → logprob: -1.1612155437469482
    3. 'result' → logprob: -2.7862155437469482
    4. 'max' → logprob: -3.0362155437469482
    5. 'total' → logprob: -4.036215305328369
    6. 'b' → logprob: -5.161215305328369
    7. 's' → logprob: -5.411215305328369
    8. 'res' → logprob: -5.411215305328369
    9. 'count' → logprob: -5.661215305328369
    10. 'dire' → logprob: -5.786215305328369

Token 248: ' initialise' (ID: 145250)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4969147741794586
    2. '#' → logprob: -1.4969147443771362
    3. ' for' → logprob: -1.8719147443771362
    4. ' #' → logprob: -5.496914863586426
    5. '_' → logprob: -5.871914863586426
    6. 'def' → logprob: -6.246914863586426
    7. ' cherche' → logprob: -7.496914863586426
    8. 's' → logprob: -7.746914863586426
    9. ' a' → logprob: -7.746914863586426
    10. ' continue' → logprob: -7.996914863586426

Token 249: ' la' (ID: 557)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.179526686668396
    2. ' une' → logprob: -1.429526686668396
    3. 'max' → logprob: -1.554526686668396
    4. 'result' → logprob: -2.5545268058776855
    5. 'un' → logprob: -3.0545268058776855
    6. ' un' → logprob: -3.6795268058776855
    7. 'min' → logprob: -4.1795268058776855
    8. 'ans' → logprob: -4.4295268058776855
    9. 'count' → logprob: -4.4295268058776855
    10. 'total' → logprob: -4.6795268058776855

Token 250: ' liste' (ID: 31719)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.5173799991607666
    2. 'result' → logprob: -2.0173799991607666
    3. 's' → logprob: -2.6423799991607666
    4. 'liste' → logprob: -2.7673799991607666
    5. ' variable' → logprob: -3.0173799991607666
    6. '#' → logprob: -3.5173799991607666
    7. ' somme' → logprob: -3.7673799991607666
    8. 'distance' → logprob: -4.8923797607421875
    9. 'gr' → logprob: -5.3923797607421875
    10. 'max' → logprob: -5.7673797607421875

Token 251: ' '' (ID: 461)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2826971709728241
    2. ' result' → logprob: -2.5326972007751465
    3. 'b' → logprob: -3.1576972007751465
    4. ' des' → logprob: -3.7826972007751465
    5. 'min' → logprob: -4.1576972007751465
    6. 'res' → logprob: -4.2826972007751465
    7. 'max' → logprob: -4.5326972007751465
    8. 'dp' → logprob: -4.7826972007751465
    9. 's' → logprob: -4.9076972007751465
    10. ' b' → logprob: -5.4076972007751465

Token 252: 'ans' (ID: 616)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5332578420639038
    2. 'res' → logprob: -1.9082578420639038
    3. 'b' → logprob: -2.1582579612731934
    4. 's' → logprob: -2.4082579612731934
    5. 'max' → logprob: -4.408257961273193
    6. 'diff' → logprob: -5.283257961273193
    7. 'visited' → logprob: -5.533257961273193
    8. 'vis' → logprob: -5.783257961273193
    9. 'a' → logprob: -5.908257961273193
    10. 'c' → logprob: -5.908257961273193

Token 253: '',' (ID: 787)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19846799969673157
    2. '=' → logprob: -1.8234679698944092
    3. '=[]' → logprob: -4.573468208312988
    4. 'e' → logprob: -5.823468208312988
    5. ''' → logprob: -6.198468208312988
    6. 'es' → logprob: -6.448468208312988
    7. ')' → logprob: -7.823468208312988
    8. '[]' → logprob: -7.948468208312988
    9. 's' → logprob: -8.573468208312988
    10. ']' → logprob: -8.698468208312988

Token 254: ' qui' (ID: 2780)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2802285850048065
    2. 'ans' → logprob: -1.530228614807129
    3. '[' → logprob: -3.655228614807129
    4. ' ans' → logprob: -7.655228614807129
    5. '[:]' → logprob: -8.280228614807129
    6. '=' → logprob: -8.530228614807129
    7. '0' → logprob: -8.655228614807129
    8. ' []' → logprob: -8.780228614807129
    9. '[]
' → logprob: -9.155228614807129
    10. 'a' → logprob: -9.280228614807129

Token 255: ' va' (ID: 3423)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.04230661317706108
    2. 'va' → logprob: -4.167306423187256
    3. 'a' → logprob: -4.417306423187256
    4. '[]' → logprob: -5.792306423187256
    5. 'sera' → logprob: -5.917306423187256
    6. 'conten' → logprob: -6.292306423187256
    7. ' cont' → logprob: -6.417306423187256
    8. 'serv' → logprob: -7.167306423187256
    9. '[' → logprob: -7.167306423187256
    10. '#' → logprob: -7.167306423187256

Token 256: ' stock' (ID: 6546)
  Prédit: 'conten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conten' → logprob: -0.7183569669723511
    2. 'con' → logprob: -2.0933570861816406
    3. ' conten' → logprob: -2.0933570861816406
    4. 'acc' → logprob: -2.3433570861816406
    5. 'stock' → logprob: -2.5933570861816406
    6. ' stock' → logprob: -3.2183570861816406
    7. 'cont' → logprob: -3.3433570861816406
    8. 'serv' → logprob: -5.968357086181641
    9. ' accueillir' → logprob: -5.968357086181641
    10. 'rece' → logprob: -6.468357086181641

Token 257: 'er' (ID: 259)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.8869360089302063
    2. '[]' → logprob: -1.3869359493255615
    3. 'ue' → logprob: -2.0119359493255615
    4. '=' → logprob: -2.2619359493255615
    5. ' =' → logprob: -3.8869359493255615
    6. 'er' → logprob: -3.8869359493255615
    7. '[:]' → logprob: -4.636936187744141
    8. 'e' → logprob: -4.636936187744141
    9. ' []' → logprob: -5.261936187744141
    10. '_' → logprob: -5.386936187744141

Token 258: ' la' (ID: 557)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03811711072921753
    2. '[' → logprob: -3.6631171703338623
    3. 'les' → logprob: -4.663116931915283
    4. 'la' → logprob: -7.413116931915283
    5. ' []' → logprob: -7.538116931915283
    6. ' les' → logprob: -8.413117408752441
    7. 'le' → logprob: -8.413117408752441
    8. '[:]' → logprob: -9.288117408752441
    9. 'the' → logprob: -9.413117408752441
    10. ' la' → logprob: -9.538117408752441

Token 259: ' liste' (ID: 31719)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9208869338035583
    2. 's' → logprob: -1.4208869934082031
    3. '[]' → logprob: -2.295886993408203
    4. 'liste' → logprob: -3.295886993408203
    5. 'solution' → logprob: -3.420886993408203
    6. 'ligne' → logprob: -3.920886993408203
    7. 'maximum' → logprob: -4.045886993408203
    8. 'rés' → logprob: -4.170886993408203
    9. 'positions' → logprob: -4.170886993408203
    10. 'max' → logprob: -4.295886993408203

Token 260: ' des' (ID: 731)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.19057154655456543
    2. '()' → logprob: -2.5655715465545654
    3. 'des' → logprob: -2.8155715465545654
    4. '[' → logprob: -3.8155715465545654
    5. '(' → logprob: -5.1905717849731445
    6. '([]' → logprob: -6.3155717849731445
    7. '=[]' → logprob: -6.3155717849731445
    8. ' des' → logprob: -6.4405717849731445
    9. 's' → logprob: -6.8155717849731445
    10. '[:]' → logprob: -7.8155717849731445

Token 261: ' opérations' (ID: 102793)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.1516003608703613
    2. 'indices' → logprob: -1.4016003608703613
    3. 's' → logprob: -2.0266003608703613
    4. 'result' → logprob: -2.7766003608703613
    5. 'scores' → logprob: -2.9016003608703613
    6. 'max' → logprob: -3.4016003608703613
    7. 'diff' → logprob: -3.5266003608703613
    8. '0' → logprob: -4.151600360870361
    9. 'rés' → logprob: -4.276600360870361
    10. 'maximum' → logprob: -4.526600360870361

Token 262: ' effectu' (ID: 100880)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0026574626099318266
    2. '[]' → logprob: -6.252657413482666
    3. '=' → logprob: -7.877657413482666
    4. 'ops' → logprob: -9.127657890319824
    5. '=[]' → logprob: -9.627657890319824
    6. ' =' → logprob: -9.752657890319824
    7. ' ans' → logprob: -9.877657890319824
    8. 'operations' → logprob: -10.002657890319824
    9. '(ans' → logprob: -11.877657890319824
    10. '	ans' → logprob: -12.877657890319824

Token 263: 'ées' (ID: 5161)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.3433064818382263
    2. 'ées' → logprob: -2.093306541442871
    3. 'ations' → logprob: -2.468306541442871
    4. '[]' → logprob: -3.218306541442871
    5. 'e' → logprob: -3.468306541442871
    6. 'é' → logprob: -5.718306541442871
    7. '=' → logprob: -5.718306541442871
    8. 'és' → logprob: -6.968306541442871
    9. 'operations' → logprob: -7.093306541442871
    10. '=[]' → logprob: -7.468306541442871

Token 264: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0921942703134846e-05
    2. '[]' → logprob: -11.75001049041748
    3. ' ans' → logprob: -13.75001049041748
    4. '[]
' → logprob: -13.87501049041748
    5. 'answers' → logprob: -15.37501049041748
    6. '(ans' → logprob: -15.50001049041748
    7. 'operations' → logprob: -15.50001049041748
    8. 'ops' → logprob: -15.87501049041748
    9. '	ans' → logprob: -16.500011444091797
    10. '```' → logprob: -16.875011444091797

Token 265: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.7432603272027336e-06
    2. ' ans' → logprob: -13.750001907348633
    3. '[]' → logprob: -14.500001907348633
    4. '	ans' → logprob: -16.750001907348633
    5. 'ops' → logprob: -17.000001907348633
    6. 'operations' → logprob: -17.000001907348633
    7. 'answers' → logprob: -17.875001907348633
    8. '[]
' → logprob: -18.000001907348633
    9. '```' → logprob: -18.375001907348633
    10. '(ans' → logprob: -18.375001907348633

Token 266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4745423197746277
    2. ' =' → logprob: -0.9745423197746277
    3. '=[]' → logprob: -7.724542140960693
    4. '[]' → logprob: -11.474542617797852
    5. 's' → logprob: -12.849542617797852
    6. ')' → logprob: -13.349542617797852
    7. ',' → logprob: -13.599542617797852
    8. '＝' → logprob: -13.849542617797852
    9. '.' → logprob: -13.974542617797852
    10. '=[]
' → logprob: -14.099542617797852

Token 267: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -8.327856630785391e-05
    2. ' []' → logprob: -9.500082969665527
    3. '[' → logprob: -12.250082969665527
    4. '[]
' → logprob: -12.875082969665527
    5. '[]}' → logprob: -14.250082969665527
    6. '[]

' → logprob: -15.750082969665527
    7. '[],' → logprob: -17.000083923339844
    8. '[]"' → logprob: -17.125083923339844
    9. '[]>' → logprob: -17.375083923339844
    10. '[])' → logprob: -17.750083923339844

Token 268: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.8325677703833207e-05
    2. ' for' → logprob: -11.250028610229492
    3. '#' → logprob: -11.625028610229492
    4. 'f' → logprob: -12.625028610229492
    5. '
' → logprob: -13.500028610229492
    6. 'i' → logprob: -15.250028610229492
    7. 'F' → logprob: -15.375028610229492
    8. 'n' → logprob: -15.625028610229492
    9. '```' → logprob: -15.625028610229492
    10. 'fo' → logprob: -15.875028610229492

Token 269: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.011373155459296e-05
    2. '#' → logprob: -11.000030517578125
    3. ' for' → logprob: -11.875030517578125
    4. 'def' → logprob: -12.375030517578125
    5. 'i' → logprob: -15.125030517578125
    6. 'For' → logprob: -15.250030517578125
    7. 'max' → logprob: -15.625030517578125
    8. '```' → logprob: -16.000030517578125
    9. 'dire' → logprob: -16.000030517578125
    10. 'pour' → logprob: -16.125030517578125

Token 270: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3133208751678467
    2. ' for' → logprob: -1.3133208751678467
    3. ' range' → logprob: -10.938321113586426
    4. 'or' → logprob: -11.188321113586426
    5. 'range' → logprob: -11.688321113586426
    6. 'f' → logprob: -12.313321113586426
    7. 's' → logprob: -12.313321113586426
    8. '=' → logprob: -13.313321113586426
    9. 'ranges' → logprob: -13.813321113586426
    10. ' ' → logprob: -13.938321113586426

Token 271: 'ourt' (ID: 38600)
  Prédit: 'ours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.4107215106487274
    2. 'ourt' → logprob: -1.1607215404510498
    3. 'our' → logprob: -4.160721302032471
    4. 'oure' → logprob: -4.910721302032471
    5. 'orre' → logprob: -8.285721778869629
    6. '#' → logprob: -9.035721778869629
    7. '_' → logprob: -9.535721778869629
    8. 'ourse' → logprob: -10.285721778869629
    9. 'or' → logprob: -10.410721778869629
    10. 'ou' → logprob: -10.535721778869629

Token 272: ' chaque' (ID: 21194)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03231536224484444
    2. 'range' → logprob: -4.157315254211426
    3. ' for' → logprob: -4.282315254211426
    4. '(range' → logprob: -6.907315254211426
    5. 'for' → logprob: -7.407315254211426
    6. ' H' → logprob: -7.532315254211426
    7. ' ' → logprob: -9.657315254211426
    8. 'H' → logprob: -10.407315254211426
    9. ' ranges' → logprob: -10.657315254211426
    10. '(' → logprob: -10.782315254211426

Token 273: ' élément' (ID: 99627)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11342891305685043
    2. ' range' → logprob: -2.363428831100464
    3. 'i' → logprob: -4.613429069519043
    4. 'range' → logprob: -5.863429069519043
    5. ' ligne' → logprob: -8.988429069519043
    6. ' for' → logprob: -9.113429069519043
    7. ' H' → logprob: -10.363429069519043
    8. ' rang' → logprob: -10.863429069519043
    9. ' line' → logprob: -11.238429069519043
    10. 'ligne' → logprob: -11.238429069519043

Token 274: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0518639087677002
    2. 'for' → logprob: -1.5518639087677002
    3. ' de' → logprob: -1.9268639087677002
    4. ' ' → logprob: -2.1768639087677
    5. '(' → logprob: -2.9268639087677
    6. ',' → logprob: -3.1768639087677
    7. 's' → logprob: -4.051863670349121
    8. '   ' → logprob: -4.301863670349121
    9. ' (' → logprob: -4.301863670349121
    10. ' of' → logprob: -5.176863670349121

Token 275: ' la' (ID: 557)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.41078633069992065
    2. 'range' → logprob: -1.4107863903045654
    3. 'a' → logprob: -2.6607863903045654
    4. ' a' → logprob: -4.035786151885986
    5. ' la' → logprob: -5.285786151885986
    6. 'la' → logprob: -8.285786628723145
    7. ' the' → logprob: -10.910786628723145
    8. '(range' → logprob: -12.160786628723145
    9. 'the' → logprob: -12.910786628723145
    10. 'l' → logprob: -13.035786628723145

Token 276: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.08969822525978088
    2. ' grille' → logprob: -3.214698314666748
    3. 'a' → logprob: -3.589698314666748
    4. 'range' → logprob: -4.339698314666748
    5. 'mat' → logprob: -5.839698314666748
    6. 'liste' → logprob: -6.964698314666748
    7. 'grid' → logprob: -7.339698314666748
    8. 'g' → logprob: -9.21469783782959
    9. '#' → logprob: -9.58969783782959
    10. 'for' → logprob: -10.08969783782959

Token 277: ' sauf' (ID: 87919)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011249413713812828
    2. ' for' → logprob: -4.511249542236328
    3. '
' → logprob: -8.511249542236328
    4. ',' → logprob: -16.011249542236328
    5. ' 
' → logprob: -16.261249542236328
    6. '```' → logprob: -16.886249542236328
    7. '	for' → logprob: -17.636249542236328
    8. '   ' → logprob: -17.761249542236328
    9. ':
' → logprob: -17.886249542236328
    10. ':' → logprob: -18.136249542236328

Token 278: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.02273193746805191
    2. ' le' → logprob: -4.522731781005859
    3. 'la' → logprob: -4.647731781005859
    4. ' les' → logprob: -7.522731781005859
    5. ' the' → logprob: -7.772731781005859
    6. '<|end|>' → logprob: -7.897731781005859
    7. 'le' → logprob: -8.39773178100586
    8. ' for' → logprob: -9.02273178100586
    9. ' pas' → logprob: -10.02273178100586
    10. ' l' → logprob: -10.02273178100586

Token 279: ' dernière' (ID: 39497)
  Prédit: 'der'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'der' → logprob: -0.49235600233078003
    2. ' dernière' → logprob: -0.99235600233078
    3. 'dern' → logprob: -4.367355823516846
    4. ' derni' → logprob: -5.742355823516846
    5. 'last' → logprob: -6.867355823516846
    6. ' der' → logprob: -7.492355823516846
    7. 'ligne' → logprob: -8.117356300354004
    8. 'Dern' → logprob: -9.492356300354004
    9. ' dernier' → logprob: -9.992356300354004
    10. ' last' → logprob: -10.492356300354004

Token 280: ' colonne' (ID: 148275)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6032475233078003
    2. 'for' → logprob: -0.9782475233078003
    3. ' ' → logprob: -3.35324764251709
    4. ',' → logprob: -4.10324764251709
    5. ' ligne' → logprob: -5.10324764251709
    6. ' i' → logprob: -5.22824764251709
    7. ')' → logprob: -5.60324764251709
    8. 'ligne' → logprob: -6.22824764251709
    9. 'e' → logprob: -6.72824764251709
    10. 'range' → logprob: -7.10324764251709

Token 281: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8832874298095703
    2. ' for' → logprob: -1.0082874298095703
    3. ':' → logprob: -2.2582874298095703
    4. ':
' → logprob: -2.6332874298095703
    5. '
' → logprob: -3.5082874298095703
    6. '   ' → logprob: -4.38328742980957
    7. ',' → logprob: -7.00828742980957
    8. ' 
' → logprob: -7.63328742980957
    9. ' :
' → logprob: -7.63328742980957
    10. ',
' → logprob: -7.88328742980957

Token 282: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010794539004564285
    2. ' for' → logprob: -5.010794639587402
    3. '
' → logprob: -5.510794639587402
    4. ' 
' → logprob: -10.885794639587402
    5. '   ' → logprob: -13.135794639587402
    6. '\n' → logprob: -13.635794639587402
    7. '  
' → logprob: -13.760794639587402
    8. ':
' → logprob: -13.760794639587402
    9. ',' → logprob: -14.135794639587402
    10. '```' → logprob: -14.510794639587402

Token 283: ' Cette' (ID: 27383)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002036595979006961
    2. ' for' → logprob: -8.500204086303711
    3. '
' → logprob: -16.00020408630371
    4. '```' → logprob: -19.12520408630371
    5. 'i' → logprob: -21.37520408630371
    6. 'r' → logprob: -21.75020408630371
    7. '   ' → logprob: -21.75020408630371
    8. 'fo' → logprob: -21.87520408630371
    9. '	for' → logprob: -21.87520408630371
    10. 'x' → logprob: -21.87520408630371

Token 284: ' double' (ID: 3503)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4825807213783264
    2. 'for' → logprob: -1.1075806617736816
    3. ' ' → logprob: -3.4825806617736816
    4. 'n' → logprob: -4.982580661773682
    5. ' espace' → logprob: -5.607580661773682
    6. ':' → logprob: -6.482580661773682
    7. ' space' → logprob: -6.607580661773682
    8. 's' → logprob: -6.857580661773682
    9. 'r' → logprob: -7.482580661773682
    10. '#' → logprob: -7.482580661773682

Token 285: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24892820417881012
    2. ' boucle' → logprob: -1.998928189277649
    3. ' for' → logprob: -2.4989283084869385
    4. 'bou' → logprob: -6.248928070068359
    5. ' bou' → logprob: -7.748928070068359
    6. ' loop' → logprob: -8.24892807006836
    7. 'loop' → logprob: -10.74892807006836
    8. 'b' → logprob: -10.87392807006836
    9. ' ' → logprob: -11.99892807006836
    10. 't' → logprob: -12.12392807006836

Token 286: ' permet' (ID: 11798)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6931822896003723
    2. 'for' → logprob: -0.6931822896003723
    3. ' pour' → logprob: -11.693181991577148
    4. ':' → logprob: -11.943181991577148
    5. ' continue' → logprob: -12.318181991577148
    6. '
' → logprob: -12.568181991577148
    7. 'pour' → logprob: -13.318181991577148
    8. 'n' → logprob: -13.443181991577148
    9. ',' → logprob: -14.193181991577148
    10. ' ' → logprob: -14.193181991577148

Token 287: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1330476552248001
    2. ' d' → logprob: -2.133047580718994
    3. ' for' → logprob: -5.883047580718994
    4. ' ' → logprob: -6.383047580718994
    5. '   ' → logprob: -7.758047580718994
    6. '    ' → logprob: -8.133048057556152
    7. ' i' → logprob: -8.383048057556152
    8. ' ' → logprob: -8.633048057556152
    9. 'd' → logprob: -8.883048057556152
    10. 'de' → logprob: -9.008048057556152

Token 288: ' visiter' (ID: 101443)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22868911921977997
    2. ' for' → logprob: -1.8536890745162964
    3. 'range' → logprob: -3.478689193725586
    4. ' range' → logprob: -4.228689193725586
    5. ' parcour' → logprob: -6.103689193725586
    6. 'r' → logprob: -9.728689193725586
    7. 'par' → logprob: -11.228689193725586
    8. ' travers' → logprob: -11.228689193725586
    9. ' iter' → logprob: -12.478689193725586
    10. 'rang' → logprob: -12.728689193725586

Token 289: ' chaque' (ID: 21194)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3828222453594208
    2. ' for' → logprob: -1.2578222751617432
    3. ' H' → logprob: -4.632822036743164
    4. ' ' → logprob: -5.257822036743164
    5. 'range' → logprob: -5.257822036743164
    6. ' chaque' → logprob: -5.507822036743164
    7. 'for' → logprob: -5.757822036743164
    8. ' la' → logprob: -5.757822036743164
    9. ' each' → logprob: -6.132822036743164
    10. ' les' → logprob: -8.632822036743164

Token 290: ' case' (ID: 1890)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.24940507113933563
    2. ' range' → logprob: -1.999405026435852
    3. 'i' → logprob: -2.8744051456451416
    4. 'range' → logprob: -4.6244049072265625
    5. ' row' → logprob: -4.9994049072265625
    6. ' ligne' → logprob: -5.1244049072265625
    7. ' line' → logprob: -6.4994049072265625
    8. 'ligne' → logprob: -6.7494049072265625
    9. ' for' → logprob: -6.8744049072265625
    10. 'row' → logprob: -7.2494049072265625

Token 291: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20853953063488007
    2. ' for' → logprob: -1.7085394859313965
    3. '
' → logprob: -4.9585394859313965
    4. ' 
' → logprob: -10.583539962768555
    5. ':' → logprob: -11.458539962768555
    6. ',' → logprob: -11.458539962768555
    7. '```' → logprob: -11.708539962768555
    8. '

' → logprob: -12.708539962768555
    9. '  
' → logprob: -12.708539962768555
    10. '   ' → logprob: -13.083539962768555

Token 292: 'i' (ID: 72)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.496526837348938
    2. ' for' → logprob: -1.746526837348938
    3. 'for' → logprob: -2.1215267181396484
    4. 'range' → logprob: -2.3715267181396484
    5. 'H' → logprob: -6.496526718139648
    6. ')' → logprob: -6.496526718139648
    7. 'r' → logprob: -7.746526718139648
    8. ' H' → logprob: -8.746526718139648
    9. '   ' → logprob: -9.496526718139648
    10. ' )' → logprob: -10.621526718139648

Token 293: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3275168836116791
    2. 'n' → logprob: -2.202516794204712
    3. ')' → logprob: -2.577516794204712
    4. ' in' → logprob: -3.077516794204712
    5. 'in' → logprob: -4.202517032623291
    6. ' ,' → logprob: -4.327517032623291
    7. ',n' → logprob: -4.952517032623291
    8. ' n' → logprob: -5.202517032623291
    9. ' ' → logprob: -6.327517032623291
    10. ')n' → logprob: -7.202517032623291

Token 294: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14407601952552795
    2. '):' → logprob: -2.019076108932495
    3. ' )' → logprob: -7.144075870513916
    4. ' ):' → logprob: -8.394076347351074
    5. '):
' → logprob: -8.644076347351074
    6. 'for' → logprob: -9.769076347351074
    7. '),' → logprob: -10.519076347351074
    8. '   ' → logprob: -10.519076347351074
    9. ':' → logprob: -10.769076347351074
    10. ' for' → logprob: -11.019076347351074

Token 295: ' sauf' (ID: 87919)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4842155873775482
    2. '
' → logprob: -1.4842156171798706
    3. ' for' → logprob: -1.8592156171798706
    4. ':' → logprob: -7.48421573638916
    5. ' 
' → logprob: -8.48421573638916
    6. ':
' → logprob: -8.98421573638916
    7. '```' → logprob: -9.23421573638916
    8. ',' → logprob: -9.48421573638916
    9. '  
' → logprob: -9.48421573638916
    10. '   ' → logprob: -9.60921573638916

Token 296: ' tout' (ID: 5501)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.06429988145828247
    2. ' the' → logprob: -4.314300060272217
    3. ' ' → logprob: -4.439300060272217
    4. '<|end|>' → logprob: -4.439300060272217
    5. ' for' → logprob: -4.939300060272217
    6. ' j' → logprob: -5.189300060272217
    7. ' ' → logprob: -6.689300060272217
    8. ',' → logprob: -6.814300060272217
    9. ' ,' → logprob: -6.939300060272217
    10. ' (' → logprob: -6.939300060272217

Token 297: ' à' (ID: 1221)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7770922183990479
    2. ' ' → logprob: -1.2770922183990479
    3. '   ' → logprob: -2.152092218399048
    4. ' à' → logprob: -2.777092218399048
    5. 'es' → logprob: -3.152092218399048
    6. '  ' → logprob: -4.527091979980469
    7. ' au' → logprob: -5.277091979980469
    8. ' la' → logprob: -5.652091979980469
    9. ',' → logprob: -5.902091979980469
    10. 'au' → logprob: -6.277091979980469

Token 298: ' droite' (ID: 61428)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.04432382062077522
    2. 'W' → logprob: -3.7943239212036133
    3. ' la' → logprob: -5.044323921203613
    4. 'l' → logprob: -5.169323921203613
    5. 'col' → logprob: -5.669323921203613
    6. 'the' → logprob: -6.544323921203613
    7. ' W' → logprob: -6.919323921203613
    8. 'j' → logprob: -7.169323921203613
    9. 'e' → logprob: -7.544323921203613
    10. 'he' → logprob: -7.669323921203613

Token 299: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3353624641895294
    2. 'for' → logprob: -1.335362434387207
    3. ' for' → logprob: -3.835362434387207
    4. ' 
' → logprob: -9.210362434387207
    5. '```' → logprob: -10.210362434387207
    6. '  
' → logprob: -10.335362434387207
    7. '\n' → logprob: -10.585362434387207
    8. '
' → logprob: -10.835362434387207
    9. ':
' → logprob: -10.960362434387207
    10. '

' → logprob: -11.710362434387207

Token 300: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24627456068992615
    2. '
' → logprob: -1.8712745904922485
    3. ' for' → logprob: -2.746274471282959
    4. ' 
' → logprob: -8.871274948120117
    5. '```' → logprob: -10.871274948120117
    6. '  
' → logprob: -10.996274948120117
    7. '\n' → logprob: -11.871274948120117
    8. '

' → logprob: -12.246274948120117
    9. '
' → logprob: -13.496274948120117
    10. 'n' → logprob: -13.496274948120117

Token 301: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005937209352850914
    2. 'i' → logprob: -5.130937099456787
    3. ' ' → logprob: -12.255937576293945
    4. '	i' → logprob: -13.005937576293945
    5. ' ' → logprob: -14.380937576293945
    6. '```' → logprob: -14.630937576293945
    7. ' ' → logprob: -16.505937576293945
    8. ' range' → logprob: -16.505937576293945
    9. '_i' → logprob: -16.630937576293945
    10. ' in' → logprob: -16.755937576293945

Token 302: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0791107565164566
    2. 'in' → logprob: -2.579110860824585
    3. ' ' → logprob: -8.454111099243164
    4. '  ' → logprob: -12.954111099243164
    5. '   ' → logprob: -13.454111099243164
    6. 'range' → logprob: -13.954111099243164
    7. ',' → logprob: -14.454111099243164
    8. ' i' → logprob: -14.704111099243164
    9. '	in' → logprob: -14.829111099243164
    10. ' ' → logprob: -15.079111099243164

Token 303: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029750484973192215
    2. 'range' → logprob: -3.5297505855560303
    3. '(range' → logprob: -16.90475082397461
    4. '	range' → logprob: -17.52975082397461
    5. ' xrange' → logprob: -18.40475082397461
    6. 'ange' → logprob: -18.65475082397461
    7. ' ' → logprob: -18.77975082397461
    8. ' rang' → logprob: -19.27975082397461
    9. ' in' → logprob: -19.77975082397461
    10. ')' → logprob: -20.40475082397461

Token 304: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0001097417771234177
    2. '(' → logprob: -9.125109672546387
    3. 'H' → logprob: -14.250109672546387
    4. '(len' → logprob: -16.500110626220703
    5. '(
' → logprob: -16.875110626220703
    6. ' (' → logprob: -17.625110626220703
    7. ')' → logprob: -17.750110626220703
    8. '(S' → logprob: -18.000110626220703
    9. '(I' → logprob: -18.500110626220703
    10. '(A' → logprob: -18.500110626220703

Token 305: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009825390763580799
    2. '):
' → logprob: -4.634825229644775
    3. ' ):' → logprob: -9.759825706481934
    4. ')' → logprob: -12.509825706481934
    5. ':' → logprob: -12.634825706481934
    6. '):
' → logprob: -12.759825706481934
    7. '-' → logprob: -14.509825706481934
    8. '):

' → logprob: -15.009825706481934
    9. ' ):
' → logprob: -15.134825706481934
    10. '   ' → logprob: -15.259825706481934

Token 306: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010717288590967655
    2. ' for' → logprob: -4.760717391967773
    3. '<|end|>' → logprob: -6.385717391967773
    4. ' ' → logprob: -9.385717391967773
    5. 'for' → logprob: -9.385717391967773
    6. ':' → logprob: -9.385717391967773
    7. ',' → logprob: -10.260717391967773
    8. '       ' → logprob: -10.635717391967773
    9. '<|end|>' → logprob: -10.760717391967773
    10. '    
' → logprob: -10.760717391967773

Token 307: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23054523766040802
    2. ' for' → logprob: -1.9805452823638916
    3. '   ' → logprob: -3.4805452823638916
    4. ' range' → logprob: -3.8555452823638916
    5. 'range' → logprob: -4.2305450439453125
    6. ' W' → logprob: -6.9805450439453125
    7. 'W' → logprob: -7.7305450439453125
    8. ' ' → logprob: -11.980545043945312
    9. '(range' → logprob: -12.105545043945312
    10. '
' → logprob: -12.230545043945312

Token 308: ' Pour' (ID: 13931)
  Prédit: ' W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.44220730662345886
    2. '   ' → logprob: -1.5672073364257812
    3. 'W' → logprob: -2.3172073364257812
    4. ' for' → logprob: -3.4422073364257812
    5. '0' → logprob: -5.442207336425781
    6. 'for' → logprob: -5.567207336425781
    7. ' range' → logprob: -5.942207336425781
    8. 'range' → logprob: -6.192207336425781
    9. '<|end|>' → logprob: -6.442207336425781
    10. ' ' → logprob: -6.442207336425781

Token 309: ' chaque' (ID: 21194)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.2827543318271637
    2. ' W' → logprob: -1.4077543020248413
    3. ' range' → logprob: -7.032754421234131
    4. 'range' → logprob: -7.282754421234131
    5. ' ' → logprob: -11.032753944396973
    6. '   ' → logprob: -11.657753944396973
    7. ')' → logprob: -12.782753944396973
    8. '  ' → logprob: -13.157753944396973
    9. '0' → logprob: -13.782753944396973
    10. '	W' → logprob: -14.407753944396973

Token 310: ' ligne' (ID: 19583)
  Prédit: ' W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.049653537571430206
    2. 'W' → logprob: -3.4246535301208496
    3. ' range' → logprob: -4.29965353012085
    4. 'range' → logprob: -6.67465353012085
    5. ' j' → logprob: -7.29965353012085
    6. 'j' → logprob: -8.424654006958008
    7. ' ' → logprob: -9.799654006958008
    8. '   ' → logprob: -10.424654006958008
    9. ')' → logprob: -11.049654006958008
    10. ' ' → logprob: -11.299654006958008

Token 311: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024354271590709686
    2. ' for' → logprob: -4.399354457855225
    3. '<|end|>' → logprob: -5.149354457855225
    4. ':' → logprob: -5.399354457855225
    5. ',' → logprob: -7.524354457855225
    6. 'for' → logprob: -8.274353981018066
    7. '<|end|>' → logprob: -9.149353981018066
    8. '  ' → logprob: -9.149353981018066
    9. '```' → logprob: -9.274353981018066
    10. ':
' → logprob: -9.399353981018066

Token 312: ' '' (ID: 461)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6540376543998718
    2. ' range' → logprob: -1.1540377140045166
    3. '   ' → logprob: -2.5290377140045166
    4. 'for' → logprob: -3.0290377140045166
    5. ' W' → logprob: -4.0290374755859375
    6. 'range' → logprob: -4.2790374755859375
    7. ' ' → logprob: -5.9040374755859375
    8. '    ' → logprob: -6.4040374755859375
    9. 'W' → logprob: -8.654037475585938
    10. '  ' → logprob: -8.779037475585938

Token 313: 'i' (ID: 72)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.15365080535411835
    2. ' W' → logprob: -2.0286507606506348
    3. ' range' → logprob: -5.278650760650635
    4. 'range' → logprob: -5.528650760650635
    5. 'j' → logprob: -6.528650760650635
    6. ' j' → logprob: -8.778651237487793
    7. ')' → logprob: -9.403651237487793
    8. '   ' → logprob: -9.903651237487793
    9. ' ' → logprob: -10.028651237487793
    10. '  ' → logprob: -11.903651237487793

Token 314: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1535511314868927
    2. ')' → logprob: -2.7785511016845703
    3. 'in' → logprob: -3.1535511016845703
    4. '):' → logprob: -3.4035511016845703
    5. ',' → logprob: -6.77855110168457
    6. '+' → logprob: -7.02855110168457
    7. ' ):' → logprob: -7.40355110168457
    8. '   ' → logprob: -7.77855110168457
    9. '):
' → logprob: -8.15355110168457
    10. ' )' → logprob: -8.27855110168457

Token 315: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5193477272987366
    2. ' in' → logprob: -1.0193476676940918
    3. '):' → logprob: -4.019347667694092
    4. ' for' → logprob: -4.894347667694092
    5. 'in' → logprob: -5.269347667694092
    6. ' :' → logprob: -5.394347667694092
    7. ',' → logprob: -5.519347667694092
    8. '   ' → logprob: -6.644347667694092
    9. 'for' → logprob: -7.019347667694092
    10. ')' → logprob: -7.269347667694092

Token 316: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17140991985797882
    2. ' range' → logprob: -3.046409845352173
    3. ' W' → logprob: -3.421409845352173
    4. 'W' → logprob: -4.046410083770752
    5. ' ' → logprob: -4.046410083770752
    6. 'range' → logprob: -4.046410083770752
    7. 'H' → logprob: -4.171410083770752
    8. ' H' → logprob: -4.671410083770752
    9. '1' → logprob: -10.671409606933594
    10. '2' → logprob: -11.046409606933594

Token 317: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005346890073269606
    2. 'range' → logprob: -6.130346775054932
    3. 'H' → logprob: -6.505346775054932
    4. ' range' → logprob: -7.005346775054932
    5. ' ' → logprob: -7.255346775054932
    6. ' H' → logprob: -10.00534725189209
    7. 'W' → logprob: -12.88034725189209
    8. ' W' → logprob: -16.005346298217773
    9. '(H' → logprob: -17.005346298217773
    10. 'Range' → logprob: -17.630346298217773

Token 318: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7680428624153137
    2. ' à' → logprob: -1.143042802810669
    3. ',' → logprob: -2.143042802810669
    4. ' in' → logprob: -3.518042802810669
    5. ' ,' → logprob: -4.018043041229248
    6. 'to' → logprob: -4.143043041229248
    7. ' ' → logprob: -4.268043041229248
    8. ')' → logprob: -5.143043041229248
    9. ' jusqu' → logprob: -5.393043041229248
    10. ' for' → logprob: -5.643043041229248

Token 319: ' H' (ID: 487)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.011255304329097271
    2. ' W' → logprob: -4.511255264282227
    3. 'H' → logprob: -8.511255264282227
    4. ' ' → logprob: -12.261255264282227
    5. ' H' → logprob: -14.136255264282227
    6. '	W' → logprob: -15.011255264282227
    7. '(W' → logprob: -15.511255264282227
    8. ' ' → logprob: -16.511255264282227
    9. '   ' → logprob: -16.511255264282227
    10. '  ' → logprob: -17.136255264282227

Token 320: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2869739234447479
    2. ' -' → logprob: -1.6619739532470703
    3. '):' → logprob: -2.9119739532470703
    4. '):
' → logprob: -5.41197395324707
    5. '   ' → logprob: -7.28697395324707
    6. ' ):' → logprob: -9.78697395324707
    7. '  ' → logprob: -10.03697395324707
    8. ' ' → logprob: -10.28697395324707
    9. ')' → logprob: -10.41197395324707
    10. '1' → logprob: -12.28697395324707

Token 321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07891236990690231
    2. '2' → logprob: -2.5789122581481934
    3. ' ' → logprob: -10.828912734985352
    4. '```' → logprob: -14.078912734985352
    5. '-' → logprob: -14.266412734985352
    6. '
' → logprob: -14.578912734985352
    7. '   ' → logprob: -15.891412734985352
    8. '

' → logprob: -16.45391273498535
    9. '<|end|>' → logprob: -16.64141273498535
    10. '3' → logprob: -16.70391273498535

Token 322: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4616550803184509
    2. ':' → logprob: -1.5866551399230957
    3. ' for' → logprob: -2.0866551399230957
    4. '<|end|>' → logprob: -4.211655139923096
    5. ':
' → logprob: -4.586655139923096
    6. 'for' → logprob: -5.211655139923096
    7. ',' → logprob: -5.711655139923096
    8. '
' → logprob: -5.836655139923096
    9. '<|end|>' → logprob: -7.086655139923096
    10. ' ' → logprob: -7.211655139923096

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18538306653499603
    2. ' for' → logprob: -1.8103830814361572
    3. 'for' → logprob: -5.185382843017578
    4. '```' → logprob: -11.435382843017578
    5. '    ' → logprob: -12.185382843017578
    6. '	for' → logprob: -12.935382843017578
    7. '   ' → logprob: -12.935382843017578
    8. ' range' → logprob: -14.310382843017578
    9. ' ' → logprob: -14.435382843017578
    10. ' in' → logprob: -14.435382843017578

Token 324: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.29789113998413086
    2. '   ' → logprob: -1.6728911399841309
    3. 'for' (adapté à ' for') → logprob: -2.672891139984131
    4. '    ' → logprob: -7.297891139984131
    5. ' in' → logprob: -10.047891616821289
    6. ' ' → logprob: -10.172891616821289
    7. '  ' → logprob: -10.297891616821289
    8. '	for' → logprob: -10.297891616821289
    9. ' j' → logprob: -11.547891616821289
    10. '       ' → logprob: -11.922891616821289

Token 325: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.38688328862190247
    2. 'j' → logprob: -1.13688325881958
    3. 'range' → logprob: -12.386883735656738
    4. ' ' → logprob: -12.636883735656738
    5. ' range' → logprob: -13.136883735656738
    6. '   ' → logprob: -14.261883735656738
    7. '    ' → logprob: -14.636883735656738
    8. '  ' → logprob: -14.636883735656738
    9. '(j' → logprob: -15.136883735656738
    10. '	j' → logprob: -15.261883735656738

Token 326: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014870671555399895
    2. 'in' → logprob: -4.264870643615723
    3. ' ' → logprob: -7.264870643615723
    4. '<|end|>' → logprob: -13.514870643615723
    5. 'range' → logprob: -13.764870643615723
    6. '	in' → logprob: -14.014870643615723
    7. '  ' → logprob: -14.764870643615723
    8. ')' → logprob: -14.764870643615723
    9. '1' → logprob: -15.014870643615723
    10. '0' → logprob: -15.139870643615723

Token 327: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3134109675884247
    2. 'range' → logprob: -1.313410997390747
    3. '(range' → logprob: -8.813410758972168
    4. '	range' → logprob: -14.938410758972168
    5. ' xrange' → logprob: -16.063411712646484
    6. ' ' → logprob: -16.563411712646484
    7. '<|end|>' → logprob: -17.438411712646484
    8. '_range' → logprob: -17.688411712646484
    9. 'ange' → logprob: -17.813411712646484
    10. '.range' → logprob: -18.313411712646484

Token 328: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.03423383831977844
    2. '(' → logprob: -3.784233808517456
    3. ' range' → logprob: -5.284234046936035
    4. '(range' → logprob: -5.409234046936035
    5. 'range' → logprob: -6.784234046936035
    6. ' (' → logprob: -8.909234046936035
    7. '(H' → logprob: -9.534234046936035
    8. 'Range' → logprob: -11.284234046936035
    9. ' W' → logprob: -11.909234046936035
    10. '(R' → logprob: -12.034234046936035

Token 329: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22542251646518707
    2. ' -' → logprob: -1.6004225015640259
    3. ' ' → logprob: -12.475422859191895
    4. ')' → logprob: -12.475422859191895
    5. '   ' → logprob: -13.975422859191895
    6. '1' → logprob: -14.725422859191895
    7. '[:-' → logprob: -14.850422859191895
    8. '  ' → logprob: -16.225421905517578
    9. '﻿' → logprob: -16.225421905517578
    10. '):' → logprob: -16.475421905517578

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.735893965815194e-05
    2. ' ' → logprob: -11.000017166137695
    3. '2' → logprob: -15.812517166137695
    4. '```' → logprob: -16.187517166137695
    5. ')' → logprob: -16.625017166137695
    6. '   ' → logprob: -17.125017166137695
    7. '0' → logprob: -17.625017166137695
    8. '１' → logprob: -18.000017166137695
    9. '
' → logprob: -18.125017166137695
    10. '۱' → logprob: -18.250017166137695

Token 331: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001882823125924915
    2. ')' → logprob: -8.750187873840332
    3. ' ):' → logprob: -11.125187873840332
    4. ':' → logprob: -11.750187873840332
    5. '):
' → logprob: -12.125187873840332
    6. '():' → logprob: -14.125187873840332
    7. '+' → logprob: -15.000187873840332
    8. '):

' → logprob: -15.375187873840332
    9. ']):' → logprob: -16.87518882751465
    10. ']:' → logprob: -16.87518882751465

Token 332: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005904622841626406
    2. ':' → logprob: -5.505904674530029
    3. '   ' → logprob: -7.130904674530029
    4. '<|end|>' → logprob: -8.380904197692871
    5. '        
' → logprob: -8.630904197692871
    6. '    
' → logprob: -9.130904197692871
    7. ' :' → logprob: -9.380904197692871
    8. '    ' → logprob: -9.380904197692871
    9. ' ' → logprob: -9.755904197692871
    10. ' 
' → logprob: -10.130904197692871

Token 333: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5407764911651611
    2. '   ' → logprob: -1.1657764911651611
    3. ' if' → logprob: -2.540776491165161
    4. 'if' → logprob: -3.790776491165161
    5. '    
' → logprob: -6.540776252746582
    6. '
' → logprob: -6.665776252746582
    7. '        
' → logprob: -7.790776252746582
    8. '#' → logprob: -8.165776252746582
    9. ':' → logprob: -8.165776252746582
    10. '    ' → logprob: -8.415776252746582

Token 334: ' Pour' (ID: 13931)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42595359683036804
    2. '    ' → logprob: -1.9259536266326904
    3. '   ' → logprob: -2.0509536266326904
    4. '<|end|>' → logprob: -2.8009536266326904
    5. '  ' → logprob: -5.675953388214111
    6. '       ' → logprob: -6.675953388214111
    7. ' for' → logprob: -7.050953388214111
    8. 'for' → logprob: -7.175953388214111
    9. ' 
' → logprob: -7.175953388214111
    10. '     
' → logprob: -7.425953388214111

Token 335: ' chaque' (ID: 21194)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.029566725715994835
    2. ' range' → logprob: -3.779566764831543
    3. 'j' → logprob: -5.404566764831543
    4. 'range' → logprob: -6.529566764831543
    5. ' ' → logprob: -8.404566764831543
    6. ' in' → logprob: -10.154566764831543
    7. '  ' → logprob: -11.029566764831543
    8. '    ' → logprob: -11.404566764831543
    9. ' ' → logprob: -11.654566764831543
    10. ' W' → logprob: -11.779566764831543

Token 336: ' colonne' (ID: 148275)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.709092378616333
    2. ' range' → logprob: -1.334092378616333
    3. 'j' → logprob: -1.834092378616333
    4. 'range' → logprob: -2.709092378616333
    5. 'col' → logprob: -5.334092140197754
    6. ' ' → logprob: -5.334092140197754
    7. ' col' → logprob: -6.209092140197754
    8. ' column' → logprob: -6.334092140197754
    9. 'column' → logprob: -6.834092140197754
    10. ' colonne' → logprob: -7.084092140197754

Token 337: ' sauf' (ID: 87919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.621551513671875
    2. ' in' → logprob: -1.496551513671875
    3. ':' → logprob: -2.121551513671875
    4. '<|end|>' → logprob: -3.246551513671875
    5. '       ' → logprob: -3.871551513671875
    6. 'in' → logprob: -4.746551513671875
    7. ')' → logprob: -4.871551513671875
    8. '    ' → logprob: -4.996551513671875
    9. '):' → logprob: -5.246551513671875
    10. ' :' → logprob: -5.371551513671875

Token 338: ' la' (ID: 557)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.14394211769104
    2. 'range' → logprob: -1.39394211769104
    3. ' W' → logprob: -1.64394211769104
    4. ' range' → logprob: -2.14394211769104
    5. '(W' → logprob: -2.26894211769104
    6. ' ' → logprob: -5.143941879272461
    7. '<|end|>' → logprob: -5.143941879272461
    8. ' (' → logprob: -6.268941879272461
    9. ' la' → logprob: -7.018941879272461
    10. ')' → logprob: -7.268941879272461

Token 339: ' dernière' (ID: 39497)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.7232151031494141
    2. 'last' → logprob: -1.723215103149414
    3. ' dernière' → logprob: -1.848215103149414
    4. 'der' → logprob: -2.223215103149414
    5. ' last' → logprob: -3.348215103149414
    6. ' dernier' → logprob: -4.598215103149414
    7. 'Dern' → logprob: -4.598215103149414
    8. 'W' → logprob: -5.098215103149414
    9. ' derni' → logprob: -5.473215103149414
    10. ' W' → logprob: -6.098215103149414

Token 340: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1569160521030426
    2. '   ' → logprob: -2.5319161415100098
    3. '       ' → logprob: -3.0319161415100098
    4. ' :' → logprob: -4.90691614151001
    5. '<|end|>' → logprob: -5.28191614151001
    6. '):' → logprob: -6.53191614151001
    7. '    ' → logprob: -7.03191614151001
    8. ' ' → logprob: -7.03191614151001
    9. ':
' → logprob: -7.78191614151001
    10. '  ' → logprob: -8.031915664672852

Token 341: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5939867496490479
    2. '    ' → logprob: -1.7189867496490479
    3. '   ' → logprob: -2.343986749649048
    4. ' j' → logprob: -2.468986749649048
    5. '       ' → logprob: -3.718986749649048
    6. ')' → logprob: -3.843986749649048
    7. ' )' → logprob: -4.093986511230469
    8. 'j' → logprob: -5.093986511230469
    9. '  ' → logprob: -5.218986511230469
    10. '0' → logprob: -5.718986511230469

Token 342: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0058448887430131435
    2. ' j' → logprob: -5.255845069885254
    3. 'range' → logprob: -7.755845069885254
    4. ' range' → logprob: -8.880845069885254
    5. '   ' → logprob: -10.880845069885254
    6. ')' → logprob: -11.255845069885254
    7. ' ' → logprob: -13.005845069885254
    8. '0' → logprob: -13.130845069885254
    9. '    ' → logprob: -13.755845069885254
    10. 'W' → logprob: -13.880845069885254

Token 343: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4596879482269287
    2. 'in' → logprob: -1.2096879482269287
    3. ')' → logprob: -2.8346879482269287
    4. '+' → logprob: -4.834688186645508
    5. '):' → logprob: -6.959688186645508
    6. '   ' → logprob: -7.834688186645508
    7. '')' → logprob: -7.959688186645508
    8. ' )' → logprob: -8.209688186645508
    9. '=' → logprob: -8.459688186645508
    10. ')+' → logprob: -8.834688186645508

Token 344: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10035407543182373
    2. 'in' → logprob: -2.3503541946411133
    3. 'range' → logprob: -9.475354194641113
    4. ')' → logprob: -10.350354194641113
    5. ' ' → logprob: -11.100354194641113
    6. '+' → logprob: -12.100354194641113
    7. ' range' → logprob: -12.350354194641113
    8. '   ' → logprob: -12.600354194641113
    9. '0' → logprob: -13.600354194641113
    10. '=' → logprob: -13.725354194641113

Token 345: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3898017108440399
    2. ' ' → logprob: -1.1398017406463623
    3. ' range' → logprob: -6.014801502227783
    4. 'range' → logprob: -7.639801502227783
    5. ' W' → logprob: -14.014801979064941
    6. '<|end|>' → logprob: -14.139801979064941
    7. '1' → logprob: -14.764801979064941
    8. '(range' → logprob: -15.264801979064941
    9. 'W' → logprob: -15.514801979064941
    10. 'Range' → logprob: -15.639801979064941

Token 346: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001274877111427486
    2. ' ' → logprob: -7.001275062561035
    3. 'range' → logprob: -8.501275062561035
    4. ' range' → logprob: -8.751275062561035
    5. '(' → logprob: -13.876275062561035
    6. ' W' → logprob: -14.876275062561035
    7. 'W' → logprob: -15.126275062561035
    8. '1' → logprob: -16.12627410888672
    9. '(range' → logprob: -16.37627410888672
    10. '(W' → logprob: -16.75127410888672

Token 347: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03914796933531761
    2. ',' → logprob: -4.039147853851318
    3. ' +' → logprob: -4.164147853851318
    4. ' to' → logprob: -6.289147853851318
    5. ' W' → logprob: -6.789147853851318
    6. ' in' → logprob: -7.289147853851318
    7. ' ,' → logprob: -7.414147853851318
    8. ' ' → logprob: -7.914147853851318
    9. 'to' → logprob: -8.539148330688477
    10. '(W' → logprob: -9.289148330688477

Token 348: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.20153896510601044
    2. ' W' → logprob: -1.7015389204025269
    3. '(W' → logprob: -9.451539039611816
    4. ' ' → logprob: -10.201539039611816
    5. ' (' → logprob: -12.326539039611816
    6. 'j' → logprob: -13.076539039611816
    7. '   ' → logprob: -13.326539039611816
    8. '	W' → logprob: -14.826539039611816
    9. '
' → logprob: -15.076539039611816
    10. '  ' → logprob: -15.201539039611816

Token 349: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08461165428161621
    2. '):' → logprob: -2.959611654281616
    3. ' -' → logprob: -3.709611654281616
    4. '   ' → logprob: -5.959611892700195
    5. ')' → logprob: -7.334611892700195
    6. '):
' → logprob: -8.084611892700195
    7. '       ' → logprob: -8.584611892700195
    8. '+' → logprob: -8.709611892700195
    9. ' ' → logprob: -8.709611892700195
    10. ' ):' → logprob: -8.834611892700195

Token 350: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004102623555809259
    2. '2' → logprob: -5.50410270690918
    3. ' ' → logprob: -11.50410270690918
    4. '-' → logprob: -12.12910270690918
    5. '0' → logprob: -12.62910270690918
    6. '```' → logprob: -13.06660270690918
    7. '   ' → logprob: -14.81660270690918
    8. '11' → logprob: -15.00410270690918
    9. '
' → logprob: -15.06660270690918
    10. ')' → logprob: -15.06660270690918

Token 351: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6969899535179138
    2. '       ' → logprob: -0.6969899535179138
    3. '   ' → logprob: -6.321990013122559
    4. ':
' → logprob: -6.821990013122559
    5. '<|end|>' → logprob: -7.821990013122559
    6. ',' → logprob: -8.446990013122559
    7. ' :' → logprob: -9.196990013122559
    8. '):' → logprob: -9.946990013122559
    9. '        
' → logprob: -10.196990013122559
    10. '<|end|>' → logprob: -10.321990013122559

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010185176506638527
    2. '        
' → logprob: -7.876018524169922
    3. '   ' → logprob: -8.126018524169922
    4. '<|end|>' → logprob: -8.876018524169922
    5. ' if' → logprob: -9.876018524169922
    6. '```' → logprob: -10.751018524169922
    7. '    
' → logprob: -11.001018524169922
    8. ',' → logprob: -11.126018524169922
    9. ' ' → logprob: -11.126018524169922
    10. ':' → logprob: -11.626018524169922

Token 353: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2089085578918457
    2. ' if' → logprob: -2.0839085578918457
    3. '       ' → logprob: -2.8339085578918457
    4. '           ' → logprob: -5.583908557891846
    5. '   ' → logprob: -6.583908557891846
    6. ' ' → logprob: -9.708908081054688
    7. 's' → logprob: -10.833908081054688
    8. '        
' → logprob: -11.083908081054688
    9. '```' → logprob: -11.083908081054688
    10. '#' (adapté à ' #') → logprob: -12.083908081054688

Token 354: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007064753444865346
    2. ' if' → logprob: -7.500706672668457
    3. '       ' → logprob: -9.125706672668457
    4. 'while' → logprob: -10.500706672668457
    5. 'val' → logprob: -12.375706672668457
    6. 'x' → logprob: -12.500706672668457
    7. 's' → logprob: -13.125706672668457
    8. '#' → logprob: -13.250706672668457
    9. 'If' → logprob: -13.750706672668457
    10. 'current' → logprob: -13.875706672668457

Token 355: ' la' (ID: 557)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0789070799946785
    2. 'a' → logprob: -2.578907012939453
    3. ' ' → logprob: -11.953907012939453
    4. ' ' → logprob: -12.828907012939453
    5. '(a' → logprob: -13.078907012939453
    6. '	a' → logprob: -13.078907012939453
    7. ')a' → logprob: -14.203907012939453
    8. '   ' → logprob: -14.641407012939453
    9. ')' → logprob: -14.703907012939453
    10. '#a' → logprob: -15.141407012939453

Token 356: ' valeur' (ID: 41664)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.026301460340619087
    2. ' a' → logprob: -3.651301383972168
    3. '(a' → logprob: -15.401301383972168
    4. ' ' → logprob: -15.776301383972168
    5. '[a' → logprob: -15.776301383972168
    6. '#a' → logprob: -16.276302337646484
    7. '#' → logprob: -16.526302337646484
    8. '	a' → logprob: -16.588802337646484
    9. ')a' → logprob: -16.776302337646484
    10. '_a' → logprob: -16.901302337646484

Token 357: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4080800414085388
    2. ' a' → logprob: -1.1580801010131836
    3. '[a' → logprob: -4.158080101013184
    4. '[i' → logprob: -5.908080101013184
    5. '[' → logprob: -6.533080101013184
    6. ' de' → logprob: -7.533080101013184
    7. '   ' → logprob: -9.158080101013184
    8. ' ' → logprob: -9.408080101013184
    9. '(a' → logprob: -9.783080101013184
    10. ' à' → logprob: -9.783080101013184

Token 358: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01416398212313652
    2. ' a' → logprob: -4.264163970947266
    3. ' ' → logprob: -16.014163970947266
    4. '(a' → logprob: -16.139163970947266
    5. '	a' → logprob: -16.389163970947266
    6. '   ' → logprob: -16.639163970947266
    7. '[a' → logprob: -17.639163970947266
    8. ')a' → logprob: -18.014163970947266
    9. ' ' → logprob: -18.514163970947266
    10. ')' → logprob: -18.764163970947266

Token 359: ' case' (ID: 1890)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007451510522514582
    2. ' a' → logprob: -5.75745153427124
    3. 'case' → logprob: -5.88245153427124
    4. ' case' → logprob: -7.38245153427124
    5. ' grille' → logprob: -7.63245153427124
    6. 'gr' → logprob: -8.132451057434082
    7. ' cellule' → logprob: -10.257451057434082
    8. 'cell' → logprob: -11.507451057434082
    9. 'cases' → logprob: -12.132451057434082
    10. 'grid' → logprob: -12.257451057434082

Token 360: ' cour' (ID: 2871)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3339812159538269
    2. ' a' → logprob: -1.3339812755584717
    3. '[i' → logprob: -3.9589812755584717
    4. '[a' → logprob: -7.333981037139893
    5. '[' → logprob: -8.20898151397705
    6. '   ' → logprob: -8.95898151397705
    7. ' [' → logprob: -9.08398151397705
    8. ' ' → logprob: -9.08398151397705
    9. ' à' → logprob: -10.58398151397705
    10. '[j' → logprob: -10.70898151397705

Token 361: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.0004269812779966742
    2. 'ant' → logprob: -8.25042724609375
    3. 'r' → logprob: -9.37542724609375
    4. '```' → logprob: -11.00042724609375
    5. 'a' → logprob: -11.12542724609375
    6. '#' → logprob: -11.62542724609375
    7. '   ' → logprob: -11.87542724609375
    8. ' ante' → logprob: -12.12542724609375
    9. '[' → logprob: -12.50042724609375
    10. 'amment' → logprob: -12.87542724609375

Token 362: ' est' (ID: 893)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2654091417789459
    2. 'a' → logprob: -1.7654091119766235
    3. '[' → logprob: -3.890409231185913
    4. '[a' → logprob: -4.265408992767334
    5. '[i' → logprob: -4.765408992767334
    6. '>' → logprob: -5.015408992767334
    7. ' >' → logprob: -5.640408992767334
    8. ' ' → logprob: -5.640408992767334
    9. ' !=' → logprob: -6.765408992767334
    10. ' is' → logprob: -7.140408992767334

Token 363: ' imp' (ID: 3282)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002840537577867508
    2. 'a' → logprob: -6.877840518951416
    3. ' ' → logprob: -6.877840518951416
    4. 'odd' → logprob: -8.002840995788574
    5. '>' → logprob: -8.627840995788574
    6. 'not' → logprob: -9.752840995788574
    7. '```' → logprob: -9.752840995788574
    8. '>=' → logprob: -10.377840995788574
    9. '0' → logprob: -10.877840995788574
    10. '   ' → logprob: -10.877840995788574

Token 364: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.13170035183429718
    2. 'ar' → logprob: -2.881700277328491
    3. 'air' → logprob: -2.881700277328491
    4. '%' → logprob: -5.13170051574707
    5. 'a' → logprob: -5.50670051574707
    6. 'ari' → logprob: -8.25670051574707
    7. '   ' → logprob: -8.63170051574707
    8. 'are' → logprob: -8.75670051574707
    9. 'airs' → logprob: -9.63170051574707
    10. 'ara' → logprob: -9.63170051574707

Token 365: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06607581675052643
    2. ':' → logprob: -3.0660758018493652
    3. ' if' → logprob: -4.691075801849365
    4. 'if' → logprob: -5.566075801849365
    5. ',' → logprob: -6.066075801849365
    6. '   ' → logprob: -7.441075801849365
    7. ' :' → logprob: -7.566075801849365
    8. ':
' → logprob: -8.191076278686523
    9. ' and' → logprob: -8.441076278686523
    10. '           ' → logprob: -8.941076278686523

Token 366: 'test' (ID: 3190)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4287770390510559
    2. ' a' → logprob: -1.0537769794464111
    3. ')' → logprob: -10.178776741027832
    4. 'if' → logprob: -11.553776741027832
    5. '(a' → logprob: -12.178776741027832
    6. ')a' → logprob: -12.178776741027832
    7. '   ' → logprob: -12.303776741027832
    8. ' if' → logprob: -12.678776741027832
    9. ' ' → logprob: -12.928776741027832
    10. ' )' → logprob: -13.053776741027832

Token 367: ' sur' (ID: 1512)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5037225484848022
    2. 'a' → logprob: -1.2537225484848022
    3. '(a' → logprob: -3.128722667694092
    4. 'e' → logprob: -3.378722667694092
    5. ')' → logprob: -4.503722667694092
    6. 'if' → logprob: -5.253722667694092
    7. '   ' → logprob: -5.378722667694092
    8. ' if' → logprob: -6.128722667694092
    9. '%' → logprob: -6.628722667694092
    10. 's' → logprob: -6.753722667694092

Token 368: ' le' (ID: 505)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.47466400265693665
    2. 'a' → logprob: -0.9746639728546143
    3. ')' → logprob: -8.349663734436035
    4. ' ' → logprob: -8.974663734436035
    5. '(a' → logprob: -9.724663734436035
    6. '   ' → logprob: -9.974663734436035
    7. ' (' → logprob: -10.849663734436035
    8. '```' → logprob: -10.974663734436035
    9. ' ' → logprob: -11.349663734436035
    10. ')a' → logprob: -11.349663734436035

Token 369: ' reste' (ID: 26769)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07917618006467819
    2. ' a' → logprob: -2.579176187515259
    3. ' ' → logprob: -9.32917594909668
    4. '1' → logprob: -9.45417594909668
    5. ')' → logprob: -9.70417594909668
    6. '%' → logprob: -11.07917594909668
    7. '```' → logprob: -11.57917594909668
    8. ')a' → logprob: -12.20417594909668
    9. '   ' → logprob: -12.32917594909668
    10. '(a' → logprob: -12.32917594909668

Token 370: ' modulo' (ID: 112372)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0371627807617188
    2. '%' → logprob: -1.1621627807617188
    3. ' ==' → logprob: -2.1621627807617188
    4. ')' → logprob: -2.6621627807617188
    5. ' %' → logprob: -3.0371627807617188
    6. ' !=' → logprob: -3.7871627807617188
    7. '==' → logprob: -4.037162780761719
    8. ' ' → logprob: -4.537162780761719
    9. 'de' → logprob: -4.662162780761719
    10. ' à' → logprob: -5.037162780761719

Token 371: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0794752687215805
    2. ' ' → logprob: -2.579475164413452
    3. '1' → logprob: -7.579475402832031
    4. '```' → logprob: -10.204475402832031
    5. ')' → logprob: -10.704475402832031
    6. '(' → logprob: -13.079475402832031
    7. ',' → logprob: -13.079475402832031
    8. '
' → logprob: -13.579475402832031
    9. '3' → logprob: -13.704475402832031
    10. 'div' → logprob: -13.829475402832031

Token 372: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003221150254830718
    2. ' ' → logprob: -8.125322341918945
    3. '```' → logprob: -11.250322341918945
    4. '
' → logprob: -12.125322341918945
    5. '1' → logprob: -12.250322341918945
    6. ',' → logprob: -14.250322341918945
    7. '

' → logprob: -14.500322341918945
    8. ')' → logprob: -14.625322341918945
    9. '   ' → logprob: -15.125322341918945
    10. '(' → logprob: -16.000322341918945

Token 373: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.404931664466858
    2. ' !=' → logprob: -1.404931664466858
    3. ' ==' → logprob: -1.529931664466858
    4. '):' → logprob: -2.0299315452575684
    5. '   ' → logprob: -3.1549315452575684
    6. '==' → logprob: -3.9049315452575684
    7. 'if' → logprob: -4.029931545257568
    8. ':' → logprob: -4.279931545257568
    9. ',' → logprob: -4.279931545257568
    10. '!=' → logprob: -4.404931545257568

Token 374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043710620957426727
    2. ' if' → logprob: -8.250436782836914
    3. '           ' → logprob: -9.625436782836914
    4. 'if' → logprob: -10.250436782836914
    5. '        
' → logprob: -10.500436782836914
    6. '   ' → logprob: -10.500436782836914
    7. ',' → logprob: -11.625436782836914
    8. '<|end|>' → logprob: -13.125436782836914
    9. ':' → logprob: -13.375436782836914
    10. '\' → logprob: -14.250436782836914

Token 375: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010550512932240963
    2. ' if' → logprob: -5.135550498962402
    3. 'if' (adapté à ' if') → logprob: -5.385550498962402
    4. '           ' → logprob: -10.885550498962402
    5. '   ' → logprob: -11.635550498962402
    6. '        
' → logprob: -15.135550498962402
    7. '      ' → logprob: -15.510550498962402
    8. '	if' → logprob: -15.635550498962402
    9. '```' → logprob: -15.635550498962402
    10. 'If' → logprob: -16.13555145263672

Token 376: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.014165864326059818
    2. 'a' → logprob: -4.264165878295898
    3. '	a' → logprob: -14.014165878295898
    4. '(a' → logprob: -14.389165878295898
    5. ' ' → logprob: -14.639165878295898
    6. ' ' → logprob: -15.139165878295898
    7. '   ' → logprob: -15.764165878295898
    8. ' (' → logprob: -16.2641658782959
    9. '    ' → logprob: -18.0141658782959
    10. '  ' → logprob: -18.3891658782959

Token 377: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[j' → logprob: -15.875
    3. '[' → logprob: -16.125
    4. '```' → logprob: -17.125
    5. '[a' → logprob: -17.75
    6. 'i' → logprob: -17.875
    7. '[I' → logprob: -18.5
    8. '[
' → logprob: -18.875
    9. ' [' → logprob: -19.25
    10. 'a' → logprob: -20.375

Token 378: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10357797145843506
    2. '][' → logprob: -2.3535780906677246
    3. '[j' → logprob: -5.853578090667725
    4. '[' → logprob: -7.853578090667725
    5. ']' → logprob: -9.853577613830566
    6. '[I' → logprob: -10.728577613830566
    7. ' ][' → logprob: -11.978577613830566
    8. ' [' → logprob: -11.978577613830566
    9. '}[' → logprob: -12.228577613830566
    10. '```' → logprob: -12.978577613830566

Token 379: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.935296834039036e-06
    2. ' j' → logprob: -12.75000286102295
    3. '	j' → logprob: -17.125003814697266
    4. '[j' → logprob: -18.250003814697266
    5. ',j' → logprob: -18.625003814697266
    6. '   ' → logprob: -19.500003814697266
    7. '][' → logprob: -19.500003814697266
    8. '```' → logprob: -20.125003814697266
    9. ':j' → logprob: -20.250003814697266
    10. 'i' → logprob: -20.375003814697266

Token 380: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022018855437636375
    2. ']%' → logprob: -4.147018909454346
    3. '%' → logprob: -5.147018909454346
    4. ')' → logprob: -9.272018432617188
    5. '```' → logprob: -10.647018432617188
    6. ' %' → logprob: -11.522018432617188
    7. ' ]' → logprob: -11.772018432617188
    8. ')%' → logprob: -12.397018432617188
    9. '}' → logprob: -12.772018432617188
    10. '`' → logprob: -14.022018432617188

Token 381: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.005238140933215618
    2. ' %' → logprob: -5.255238056182861
    3. '```' → logprob: -13.25523853302002
    4. '%
' → logprob: -13.38023853302002
    5. ' ' → logprob: -14.75523853302002
    6. '1' → logprob: -15.88023853302002
    7. '％' → logprob: -16.130237579345703
    8. ']%' → logprob: -16.255237579345703
    9. ' ' → logprob: -16.630237579345703
    10. '()%' → logprob: -16.880237579345703

Token 382: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009756677784025669
    2. ' ' → logprob: -4.634756565093994
    3. '```' → logprob: -14.259757041931152
    4. '==' → logprob: -17.259756088256836
    5. '<|end|>' → logprob: -17.384756088256836
    6. '
' → logprob: -17.634756088256836
    7. '=' → logprob: -18.009756088256836
    8. '  ' → logprob: -18.384756088256836
    9. '   ' → logprob: -18.572256088256836
    10. ')' → logprob: -18.884756088256836

Token 383: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.625001907348633
    3. '```' → logprob: -15.250001907348633
    4. '   ' → logprob: -18.250001907348633
    5. '
' → logprob: -19.875001907348633
    6. '{' → logprob: -20.000001907348633
    7. '==' → logprob: -20.125001907348633
    8. '1' → logprob: -20.125001907348633
    9. '>' → logprob: -20.312501907348633
    10. '  ' → logprob: -20.437501907348633

Token 384: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.27302807569503784
    2. '==' → logprob: -1.5230281352996826
    3. ' !=' → logprob: -4.3980278968811035
    4. '1' → logprob: -5.3980278968811035
    5. ' ==' → logprob: -5.6480278968811035
    6. ':' → logprob: -8.648028373718262
    7. '=' → logprob: -9.023028373718262
    8. ')!=' → logprob: -9.523028373718262
    9. '!==' → logprob: -10.648028373718262
    10. ']!=' → logprob: -10.773028373718262

Token 385: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006266565760597587
    2. ' ' → logprob: -7.375626564025879
    3. '

' → logprob: -16.125627517700195
    4. '```' → logprob: -17.250627517700195
    5. ')' → logprob: -17.813127517700195
    6. '
' → logprob: -18.000627517700195
    7. '0' → logprob: -18.063127517700195
    8. '!' → logprob: -18.125627517700195
    9. '!=' → logprob: -18.125627517700195
    10. ' ' → logprob: -18.250627517700195

Token 386: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -16.750011444091797
    4. '0' → logprob: -17.000011444091797
    5. '!' → logprob: -17.375011444091797
    6. '!=' → logprob: -17.500011444091797
    7. '

' → logprob: -18.062511444091797
    8. '
' → logprob: -18.562511444091797
    9. ':' → logprob: -19.000011444091797
    10. '>' → logprob: -19.187511444091797

Token 387: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005786505062133074
    2. ':
' → logprob: -7.500578880310059
    3. '):' → logprob: -10.875578880310059
    4. ' :' → logprob: -12.250578880310059
    5. '       ' → logprob: -14.500578880310059
    6. '           ' → logprob: -15.000578880310059
    7. '):
' → logprob: -15.125578880310059
    8. ',' → logprob: -15.125578880310059
    9. ')' → logprob: -15.250578880310059
    10. '   ' → logprob: -15.875578880310059

Token 388: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012240022420883179
    2. '       ' → logprob: -4.887239933013916
    3. 'a' → logprob: -5.762239933013916
    4. ' a' → logprob: -6.762239933013916
    5. '            
' → logprob: -8.762240409851074
    6. '        
' → logprob: -9.762240409851074
    7. '#' → logprob: -11.012240409851074
    8. '               ' → logprob: -11.262240409851074
    9. ' 
' → logprob: -11.262240409851074
    10. ' #' → logprob: -11.387240409851074

Token 389: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03088364563882351
    2. '           ' → logprob: -3.655883550643921
    3. ' a' → logprob: -5.5308837890625
    4. '               ' → logprob: -7.7808837890625
    5. 'ans' → logprob: -9.5308837890625
    6. '   ' → logprob: -9.5308837890625
    7. '#' (adapté à ' #') → logprob: -11.2808837890625
    8. '            
' → logprob: -11.5308837890625
    9. '                   ' → logprob: -12.4058837890625
    10. ' ans' → logprob: -12.5308837890625

Token 390: ' On' (ID: 2160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010839937254786491
    2. '           ' → logprob: -5.510839939117432
    3. ' a' → logprob: -6.385839939117432
    4. '#' → logprob: -6.510839939117432
    5. 'ans' → logprob: -6.510839939117432
    6. 'if' → logprob: -6.885839939117432
    7. '               ' → logprob: -7.260839939117432
    8. '   ' → logprob: -9.385839462280273
    9. 'next' → logprob: -9.385839462280273
    10. ' if' → logprob: -10.135839462280273

Token 391: ' en' (ID: 469)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.42952266335487366
    2. ' a' → logprob: -1.3045226335525513
    3. 'append' → logprob: -3.179522752761841
    4. '#' → logprob: -4.179522514343262
    5. ' append' → logprob: -4.554522514343262
    6. ' #' → logprob: -6.429522514343262
    7. 'ans' → logprob: -6.804522514343262
    8. ' ans' → logprob: -6.929522514343262
    9. '.append' → logprob: -6.929522514343262
    10. '           ' → logprob: -7.054522514343262

Token 392: 'registre' (ID: 77466)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.49723273515701294
    2. 'voie' → logprob: -1.4972326755523682
    3. 'leve' → logprob: -2.122232675552368
    4. 'file' → logprob: -3.622232675552368
    5. 'registre' → logprob: -4.247232913970947
    6. 'lé' → logprob: -6.747232913970947
    7. 'f' → logprob: -6.872232913970947
    8. 'chaine' → logprob: -6.997232913970947
    9. 't' → logprob: -7.247232913970947
    10. 'lever' → logprob: -7.747232913970947

Token 393: ' l' (ID: 305)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8079851865768433
    2. ' ans' → logprob: -0.9329851865768433
    3. '           ' → logprob: -2.807985305786133
    4. '(' → logprob: -3.682985305786133
    5. '   ' → logprob: -3.807985305786133
    6. ' (' → logprob: -3.932985305786133
    7. '(ans' → logprob: -3.932985305786133
    8. '               ' → logprob: -5.182985305786133
    9. '('' → logprob: -5.807985305786133
    10. '(
' → logprob: -6.057985305786133

Token 394: ''op' (ID: 70747)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03980529308319092
    2. 'e' → logprob: -3.6648054122924805
    3. ' a' → logprob: -6.1648054122924805
    4. ''op' → logprob: -6.1648054122924805
    5. ''action' → logprob: -6.2898054122924805
    6. '[' → logprob: -7.0398054122924805
    7. 'es' → logprob: -7.1648054122924805
    8. ''espace' → logprob: -7.1648054122924805
    9. '['' → logprob: -7.4148054122924805
    10. 'ans' → logprob: -7.5398054122924805

Token 395: 'ération' (ID: 24977)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19215813279151917
    2. 'er' → logprob: -2.5671582221984863
    3. 'ans' → logprob: -3.0671582221984863
    4. 'ération' → logprob: -4.067158222198486
    5. '(ans' → logprob: -4.317158222198486
    6. 'rs' → logprob: -4.942158222198486
    7. '[' → logprob: -6.567158222198486
    8. 'r' → logprob: -6.692158222198486
    9. ' ans' → logprob: -6.817158222198486
    10. '.append' → logprob: -7.192158222198486

Token 396: ' :' (ID: 712)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7628109455108643
    2. ' =' → logprob: -1.3878109455108643
    3. ',' → logprob: -2.2628109455108643
    4. '           ' → logprob: -2.6378109455108643
    5. 'ans' → logprob: -3.3878109455108643
    6. ' ,' → logprob: -3.6378109455108643
    7. '               ' → logprob: -3.8878109455108643
    8. '.append' → logprob: -5.262810707092285
    9. '=' → logprob: -5.512810707092285
    10. '   ' → logprob: -5.512810707092285

Token 397: ' déplacer' (ID: 142135)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5301601886749268
    2. 'ans' → logprob: -0.9051601886749268
    3. '   ' → logprob: -5.905159950256348
    4. '           ' → logprob: -6.280159950256348
    5. '(ans' → logprob: -7.155159950256348
    6. ' (' → logprob: -7.655159950256348
    7. 'print' → logprob: -7.905159950256348
    8. ' print' → logprob: -8.530159950256348
    9. '               ' → logprob: -8.780159950256348
    10. '	ans' → logprob: -9.030159950256348

Token 398: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19218450784683228
    2. '1' → logprob: -2.0671844482421875
    3. ' i' → logprob: -3.9421844482421875
    4. 'a' → logprob: -4.0671844482421875
    5. ' ' → logprob: -5.8171844482421875
    6. '(i' → logprob: -5.8171844482421875
    7. ''' → logprob: -6.3171844482421875
    8. ''i' → logprob: -6.8171844482421875
    9. ' (' → logprob: -7.4421844482421875
    10. '"' → logprob: -7.6921844482421875

Token 399: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.392835408449173
    2. 'i' → logprob: -1.1428353786468506
    3. 'a' → logprob: -5.64283561706543
    4. ' ' → logprob: -6.89283561706543
    5. ' i' → logprob: -7.26783561706543
    6. '(i' → logprob: -8.39283561706543
    7. 'j' → logprob: -9.51783561706543
    8. 'un' → logprob: -10.01783561706543
    9. '```' → logprob: -10.14283561706543
    10. ''' → logprob: -10.26783561706543

Token 400: ' unité' (ID: 181741)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9653108716011047
    2. '<|end|>' → logprob: -1.46531081199646
    3. ' a' → logprob: -1.96531081199646
    4. ' ,' → logprob: -2.46531081199646
    5. 'a' → logprob: -2.59031081199646
    6. ' ' → logprob: -2.71531081199646
    7. ' from' → logprob: -5.215311050415039
    8. ')' → logprob: -6.215311050415039
    9. ',a' → logprob: -6.340311050415039
    10. 'from' → logprob: -6.465311050415039

Token 401: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016823559999465942
    2. ' ,' → logprob: -5.016823768615723
    3. 'from' → logprob: -5.266823768615723
    4. '           ' → logprob: -6.016823768615723
    5. ' from' → logprob: -7.016823768615723
    6. 'a' → logprob: -7.266823768615723
    7. ' a' → logprob: -8.516823768615723
    8. '",' → logprob: -9.266823768615723
    9. '"' → logprob: -9.391823768615723
    10. '',' → logprob: -9.516823768615723

Token 402: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06438640505075455
    2. 'i' → logprob: -3.4393863677978516
    3. '(i' → logprob: -4.439386367797852
    4. 'val' → logprob: -5.439386367797852
    5. '(a' → logprob: -5.564386367797852
    6. 'la' → logprob: -6.564386367797852
    7. ' (' → logprob: -6.689386367797852
    8. 'coin' → logprob: -6.939386367797852
    9. 'volume' → logprob: -7.439386367797852
    10. 's' → logprob: -7.439386367797852

Token 403: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003705300623551011
    2. ' i' → logprob: -5.6287055015563965
    3. ')' → logprob: -9.753705024719238
    4. ')i' → logprob: -10.878705024719238
    5. '   ' → logprob: -11.628705024719238
    6. ''i' → logprob: -12.003705024719238
    7. ',' → logprob: -12.128705024719238
    8. '(i' → logprob: -13.128705024719238
    9. ',i' → logprob: -13.253705024719238
    10. 'a' → logprob: -14.003705024719238

Token 404: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03480977192521095
    2. ' ,' → logprob: -3.9098098278045654
    3. ',j' → logprob: -4.409809589385986
    4. ')' → logprob: -6.659809589385986
    5. ' ' → logprob: -8.034810066223145
    6. '+' → logprob: -8.284810066223145
    7. '   ' → logprob: -10.409810066223145
    8. ' +' → logprob: -11.284810066223145
    9. '[' → logprob: -11.284810066223145
    10. '```' → logprob: -11.284810066223145

Token 405: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006482422351837158
    2. ',' → logprob: -5.2564826011657715
    3. ' )' → logprob: -6.8814826011657715
    4. ' ,' → logprob: -9.256482124328613
    5. ' vers' → logprob: -10.006482124328613
    6. 'vers' → logprob: -10.506482124328613
    7. '),' → logprob: -11.131482124328613
    8. '+' → logprob: -12.006482124328613
    9. ',)' → logprob: -12.256482124328613
    10. ')
' → logprob: -12.506482124328613

Token 406: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9606684446334839
    2. ' to' → logprob: -1.4606684446334839
    3. ' vers' → logprob: -1.8356684446334839
    4. ' à' → logprob: -2.4606685638427734
    5. 'to' → logprob: -3.3356685638427734
    6. ' ,' → logprob: -3.7106685638427734
    7. ' i' → logprob: -4.085668563842773
    8. ' (' → logprob: -4.210668563842773
    9. ' ' → logprob: -4.210668563842773
    10. 'vers' → logprob: -4.960668563842773

Token 407: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21778689324855804
    2. ' i' → logprob: -1.7177869081497192
    3. '(i' → logprob: -4.34278678894043
    4. ' (' → logprob: -5.84278678894043
    5. '{i' → logprob: -9.34278678894043
    6. '[i' → logprob: -9.96778678894043
    7. ')' → logprob: -9.96778678894043
    8. '   ' → logprob: -10.09278678894043
    9. ' ' → logprob: -10.59278678894043
    10. '	i' → logprob: -10.96778678894043

Token 408: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12702448666095734
    2. ' i' → logprob: -2.1270244121551514
    3. '{i' → logprob: -10.37702465057373
    4. ')' → logprob: -10.62702465057373
    5. ' ' → logprob: -11.50202465057373
    6. '   ' → logprob: -11.75202465057373
    7. ')i' → logprob: -12.12702465057373
    8. '	i' → logprob: -12.37702465057373
    9. ''i' → logprob: -12.62702465057373
    10. ',i' → logprob: -13.25202465057373

Token 409: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.5762066841125488
    2. ',' → logprob: -0.8262066841125488
    3. ' ,' → logprob: -8.82620620727539
    4. ',i' → logprob: -9.82620620727539
    5. ')' → logprob: -11.07620620727539
    6. ' ' → logprob: -11.57620620727539
    7. ',(' → logprob: -12.07620620727539
    8. '<|end|>' → logprob: -12.45120620727539
    9. ',y' → logprob: -12.57620620727539
    10. ',n' → logprob: -12.95120620727539

Token 410: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009760929271578789
    2. ' +' → logprob: -4.634760856628418
    3. ')' → logprob: -12.759760856628418
    4. '+)' → logprob: -14.009760856628418
    5. ')+' → logprob: -14.134760856628418
    6. ' )' → logprob: -15.634760856628418
    7. '1' → logprob: -16.259761810302734
    8. '+
' → logprob: -16.259761810302734
    9. ' plus' → logprob: -17.009761810302734
    10. ' +
' → logprob: -17.134761810302734

Token 411: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. '+' → logprob: -9.875075340270996
    3. ' ' → logprob: -10.750075340270996
    4. '   ' → logprob: -13.875075340270996
    5. ')' → logprob: -14.250075340270996
    6. '```' → logprob: -14.875075340270996
    7. ' +' → logprob: -17.00007438659668
    8. '  ' → logprob: -17.37507438659668
    9. '`' → logprob: -17.50007438659668
    10. '
' → logprob: -18.37507438659668

Token 412: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6960532665252686
    2. ')
' → logprob: -0.6960532665252686
    3. '           ' → logprob: -6.321053504943848
    4. ')
' → logprob: -7.696053504943848
    5. ' )
' → logprob: -8.196053504943848
    6. ' )' → logprob: -9.196053504943848
    7. ')`
' → logprob: -10.071053504943848
    8. ')'
' → logprob: -10.696053504943848
    9. '')' → logprob: -10.696053504943848
    10. '               ' → logprob: -10.821053504943848

Token 413: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001025895617203787
    2. '               ' → logprob: -9.750102996826172
    3. ' ans' → logprob: -11.000102996826172
    4. 'ans' → logprob: -11.375102996826172
    5. '       ' → logprob: -11.625102996826172
    6. '            
' → logprob: -12.250102996826172
    7. '          ' → logprob: -14.125102996826172
    8. '                   ' → logprob: -15.250102996826172
    9. '```' → logprob: -15.250102996826172
    10. ',' → logprob: -15.625102996826172

Token 414: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5511876344680786
    2. 'ans' → logprob: -1.1761876344680786
    3. ' ans' → logprob: -2.176187515258789
    4. '               ' → logprob: -6.676187515258789
    5. '   ' → logprob: -7.926187515258789
    6. '	ans' → logprob: -9.801187515258789
    7. '       ' → logprob: -9.926187515258789
    8. '(ans' → logprob: -10.676187515258789
    9. ' ' → logprob: -11.426187515258789
    10. '            
' → logprob: -11.676187515258789

Token 415: ' Les' (ID: 7029)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3288206160068512
    2. ' ans' → logprob: -1.3288205862045288
    3. '           ' → logprob: -4.453820705413818
    4. '               ' → logprob: -5.828820705413818
    5. '   ' → logprob: -7.328820705413818
    6. ' ' → logprob: -9.57882022857666
    7. '	ans' → logprob: -10.95382022857666
    8. '            ' → logprob: -11.32882022857666
    9. 'operation' → logprob: -11.32882022857666
    10. '(ans' → logprob: -11.70382022857666

Token 416: ' indices' (ID: 30378)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2832986116409302
    2. 'ans' → logprob: -1.4082986116409302
    3. ' ' → logprob: -8.03329849243164
    4. ' indices' → logprob: -8.03329849243164
    5. '#' → logprob: -8.53329849243164
    6. '_ans' → logprob: -9.09579849243164
    7. '	ans' → logprob: -9.09579849243164
    8. ' #' → logprob: -9.15829849243164
    9. ')' → logprob: -9.34579849243164
    10. '(ans' → logprob: -9.59579849243164

Token 417: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9317767024040222
    2. '1' → logprob: -1.806776762008667
    3. '.append' → logprob: -2.181776762008667
    4. 's' → logprob: -2.431776762008667
    5. 'print' → logprob: -3.181776762008667
    6. ')' → logprob: -3.306776762008667
    7. 'i' → logprob: -3.556776762008667
    8. '=' → logprob: -3.931776762008667
    9. 'ans' → logprob: -4.181776523590088
    10. ',' → logprob: -4.681776523590088

Token 418: ' incr' (ID: 52395)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22579620778560638
    2. ' i' → logprob: -1.6007962226867676
    3. '(i' → logprob: -8.60079574584961
    4. '   ' → logprob: -10.22579574584961
    5. ' (' → logprob: -10.22579574584961
    6. '=i' → logprob: -11.22579574584961
    7. ',i' → logprob: -11.22579574584961
    8. '[i' → logprob: -11.35079574584961
    9. '    ' → logprob: -11.47579574584961
    10. 'str' → logprob: -11.85079574584961

Token 419: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.08804237097501755
    2. 'ement' → logprob: -2.5880422592163086
    3. 'ment' → logprob: -5.088042259216309
    4. 'é' → logprob: -6.588042259216309
    5. 'i' → logprob: -7.713042259216309
    6. 'em' → logprob: -7.713042259216309
    7. '   ' → logprob: -8.713042259216309
    8. '+' → logprob: -9.088042259216309
    9. 'ém' → logprob: -9.588042259216309
    10. 'j' → logprob: -9.713042259216309

Token 420: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0399971604347229
    2. 'é' → logprob: -3.914997100830078
    3. 'ed' → logprob: -4.914997100830078
    4. 'ées' → logprob: -5.789997100830078
    5. 'ée' → logprob: -5.789997100830078
    6. '(' → logprob: -6.164997100830078
    7. 'e' → logprob: -6.914997100830078
    8. '+' → logprob: -7.039997100830078
    9. '(i' → logprob: -7.164997100830078
    10. '1' → logprob: -8.789997100830078

Token 421: ' de' (ID: 334)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.018995143473148346
    2. '[i' → logprob: -4.89399528503418
    3. '(' → logprob: -5.39399528503418
    4. '           ' → logprob: -5.64399528503418
    5. '   ' → logprob: -6.51899528503418
    6. '               ' → logprob: -7.51899528503418
    7. ' (' → logprob: -7.89399528503418
    8. ' de' → logprob: -8.76899528503418
    9. 'i' → logprob: -8.89399528503418
    10. ',' → logprob: -9.14399528503418

Token 422: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029794802889227867
    2. ' ' → logprob: -3.529794692993164
    3. ' +' → logprob: -10.654794692993164
    4. '+' → logprob: -11.154794692993164
    5. ' un' → logprob: -13.654794692993164
    6. '<|end|>' → logprob: -13.904794692993164
    7. ' ' → logprob: -14.029794692993164
    8. ' plus' → logprob: -14.279794692993164
    9. 's' → logprob: -14.779794692993164
    10. ' one' → logprob: -14.779794692993164

Token 423: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011839192593470216
    2. ' ' → logprob: -6.751183986663818
    3. '+' → logprob: -11.50118350982666
    4. ' +' → logprob: -12.87618350982666
    5. '<|end|>' → logprob: -15.50118350982666
    6. 'un' → logprob: -15.62618350982666
    7. '```' → logprob: -15.87618350982666
    8. ' plus' → logprob: -16.001184463500977
    9. ' ' → logprob: -16.126184463500977
    10. ' one' → logprob: -16.751184463500977

Token 424: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26003220677375793
    2. '           ' → logprob: -1.8850321769714355
    3. ' ,' → logprob: -3.5100321769714355
    4. ')' → logprob: -4.2600321769714355
    5. '               ' → logprob: -4.3850321769714355
    6. ',
' → logprob: -5.0100321769714355
    7. '[' → logprob: -6.2600321769714355
    8. ']' → logprob: -6.3850321769714355
    9. ',i' → logprob: -6.6350321769714355
    10. '),' → logprob: -7.0100321769714355

Token 425: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.42079511284828186
    2. ' correspond' → logprob: -1.7957950830459595
    3. 'cor' → logprob: -2.920795202255249
    4. 'con' → logprob: -3.420795202255249
    5. ' l' → logprob: -3.670795202255249
    6. 'respect' → logprob: -4.17079496383667
    7. ' respecter' → logprob: -4.54579496383667
    8. 'être' → logprob: -4.67079496383667
    9. ' passer' → logprob: -5.04579496383667
    10. 'pass' → logprob: -5.17079496383667

Token 426: ''aff' (ID: 53397)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5410854816436768
    2. ''aff' → logprob: -1.1660854816436768
    3. ''utilisateur' → logprob: -2.7910854816436768
    4. 'print' → logprob: -4.291085243225098
    5. 'aff' → logprob: -4.666085243225098
    6. '#' → logprob: -5.166085243225098
    7. ''' → logprob: -5.291085243225098
    8. 'es' → logprob: -6.291085243225098
    9. ''a' → logprob: -6.791085243225098
    10. ''impression' → logprob: -6.791085243225098

Token 427: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.00024429336190223694
    2. 'ich' → logprob: -9.125244140625
    3. '#' → logprob: -9.875244140625
    4. 'icher' → logprob: -10.375244140625
    5. 'ic' → logprob: -10.750244140625
    6. '1' → logprob: -11.625244140625
    7. '+' → logprob: -12.250244140625
    8. 'iché' → logprob: -12.250244140625
    9. 'ichier' → logprob: -13.000244140625
    10. '   ' → logprob: -13.375244140625

Token 428: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008411619812250137
    2. '       ' → logprob: -5.383411407470703
    3. ' ans' → logprob: -5.758411407470703
    4. '               ' → logprob: -8.258411407470703
    5. 'ans' → logprob: -8.508411407470703
    6. '   ' → logprob: -9.258411407470703
    7. ',' → logprob: -11.258411407470703
    8. '                   ' → logprob: -11.258411407470703
    9. '(ans' → logprob: -11.508411407470703
    10. '          ' → logprob: -12.258411407470703

Token 429: 'indices' (ID: 30992)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12796883285045624
    2. ' i' → logprob: -2.1279687881469727
    3. '1' → logprob: -7.627968788146973
    4. ')' → logprob: -8.252968788146973
    5. 'j' → logprob: -9.252968788146973
    6. ' )' → logprob: -9.627968788146973
    7. ',' → logprob: -10.502968788146973
    8. ' ,' → logprob: -10.627968788146973
    9. ' ' → logprob: -11.252968788146973
    10. '0' → logprob: -11.502968788146973

Token 430: ' humains' (ID: 112129)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.26473093032836914
    2. ' +' → logprob: -1.5147309303283691
    3. ' +=' → logprob: -5.514730930328369
    4. '+i' → logprob: -5.764730930328369
    5. ' i' → logprob: -6.514730930328369
    6. 'i' → logprob: -6.889730930328369
    7. '[i' → logprob: -7.014730930328369
    8. '+=' → logprob: -7.389730930328369
    9. ')' → logprob: -7.514730930328369
    10. ' =' → logprob: -8.639730453491211

Token 431: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.5865210294723511
    2. ',' → logprob: -1.086521029472351
    3. ')' → logprob: -2.5865211486816406
    4. ' )' → logprob: -4.961521148681641
    5. '+' → logprob: -5.336521148681641
    6. '[' → logprob: -5.461521148681641
    7. '[i' → logprob: -5.711521148681641
    8. ' i' → logprob: -6.086521148681641
    9. '),' → logprob: -6.336521148681641
    10. ',i' → logprob: -6.586521148681641

Token 432: ' commencent' (ID: 184941)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8081588745117188
    2. 'i' → logprob: -1.3081588745117188
    3. ' not' → logprob: -1.9331588745117188
    4. '1' → logprob: -2.6831588745117188
    5. ' ' → logprob: -3.1831588745117188
    6. 'not' → logprob: -4.308158874511719
    7. ')' → logprob: -4.933158874511719
    8. ' j' → logprob: -5.433158874511719
    9. '0' → logprob: -6.433158874511719
    10. 'j' → logprob: -6.683158874511719

Token 433: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.5768634080886841
    2. ' à' → logprob: -0.8268634080886841
    3. '=' → logprob: -7.5768632888793945
    4. '1' → logprob: -9.451863288879395
    5. ' at' → logprob: -9.576863288879395
    6. 'at' → logprob: -9.826863288879395
    7. '```' → logprob: -10.076863288879395
    8. ')' → logprob: -10.201863288879395
    9. ''à' → logprob: -10.701863288879395
    10. 'au' → logprob: -10.826863288879395

Token 434: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.500004768371582
    3. '0' → logprob: -14.000004768371582
    4. '```' → logprob: -17.750003814697266
    5. '
' → logprob: -18.000003814697266
    6. ')' → logprob: -20.375003814697266
    7. '+' → logprob: -20.375003814697266
    8. '#' → logprob: -21.000003814697266
    9. '   ' → logprob: -21.125003814697266
    10. '=' → logprob: -21.500003814697266

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -16.625
    3. ' ' → logprob: -16.625
    4. '
' → logprob: -18.25
    5. '```' → logprob: -19.25
    6. '+' → logprob: -20.25
    7. ')' → logprob: -21.75
    8. 'i' → logprob: -21.75
    9. '=' → logprob: -22.125
    10. '   ' → logprob: -22.875

Token 436: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4957033395767212
    2. ')' → logprob: -0.9957033395767212
    3. '),' → logprob: -4.370703220367432
    4. ' ,' → logprob: -5.870703220367432
    5. ',i' → logprob: -6.245703220367432
    6. ',
' → logprob: -6.745703220367432
    7. '<|end|>' → logprob: -7.370703220367432
    8. '[i' → logprob: -7.495703220367432
    9. '[' → logprob: -7.995703220367432
    10. ' )' → logprob: -8.62070369720459

Token 437: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027988182846456766
    2. ' ans' → logprob: -6.127799034118652
    3. 'ans' → logprob: -7.752799034118652
    4. '   ' → logprob: -9.252799034118652
    5. '       ' → logprob: -10.002799034118652
    6. '               ' → logprob: -11.127799034118652
    7. '	ans' → logprob: -11.252799034118652
    8. '(ans' → logprob: -12.252799034118652
    9. '```' → logprob: -12.502799034118652
    10. '          ' → logprob: -13.127799034118652

Token 438: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.03733913600444794
    2. ' ans' → logprob: -3.537339210510254
    3. '           ' → logprob: -5.037339210510254
    4. '   ' → logprob: -7.287339210510254
    5. '               ' → logprob: -8.162339210510254
    6. '	ans' → logprob: -9.537339210510254
    7. '(ans' → logprob: -11.912339210510254
    8. ' ' → logprob: -11.912339210510254
    9. '       ' → logprob: -12.662339210510254
    10. 'ann' → logprob: -13.037339210510254

Token 439: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003380846756044775
    2. '.' → logprob: -8.000338554382324
    3. '.ap' → logprob: -14.500338554382324
    4. ' .' → logprob: -14.625338554382324
    5. '.app' → logprob: -14.750338554382324
    6. 'append' → logprob: -15.000338554382324
    7. '.push' → logprob: -15.125338554382324
    8. '.Append' → logprob: -15.250338554382324
    9. '.extend' → logprob: -15.750338554382324
    10. ').' → logprob: -15.875338554382324

Token 440: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0009224193054251373
    2. '(' → logprob: -7.250922203063965
    3. '([' → logprob: -8.500922203063965
    4. '(f' → logprob: -12.000922203063965
    5. '(((' → logprob: -13.375922203063965
    6. '([(' → logprob: -13.625922203063965
    7. ' ((' → logprob: -16.12592315673828
    8. '[(' → logprob: -16.75092315673828
    9. '(([' → logprob: -17.25092315673828
    10. '(str' → logprob: -17.75092315673828

Token 441: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.246537173457909e-06
    2. ' i' → logprob: -12.750003814697266
    3. '(i' → logprob: -14.125003814697266
    4. '   ' → logprob: -14.500003814697266
    5. '[i' → logprob: -17.625003814697266
    6. ')i' → logprob: -18.125003814697266
    7. '{i' → logprob: -18.125003814697266
    8. '	i' → logprob: -18.375003814697266
    9. ',i' → logprob: -18.750003814697266
    10. ''i' → logprob: -18.875003814697266

Token 442: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.458601713180542
    2. ',' → logprob: -1.083601713180542
    3. ',j' → logprob: -3.833601713180542
    4. ' +' → logprob: -5.708601951599121
    5. ' ,' → logprob: -5.958601951599121
    6. '<|end|>' → logprob: -6.708601951599121
    7. '[' → logprob: -8.833601951599121
    8. ',i' → logprob: -8.833601951599121
    9. '+j' → logprob: -9.208601951599121
    10. ' ' → logprob: -9.458601951599121

Token 443: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.619311974034645e-05
    2. ' ' → logprob: -10.250036239624023
    3. '<|end|>' → logprob: -14.625036239624023
    4. ',' → logprob: -16.625036239624023
    5. '   ' → logprob: -16.875036239624023
    6. '```' → logprob: -17.625036239624023
    7. '
' → logprob: -17.687536239624023
    8. '0' → logprob: -18.187536239624023
    9. '2' → logprob: -18.562536239624023
    10. ')' → logprob: -18.625036239624023

Token 444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007261329446919262
    2. ',j' → logprob: -7.375726222991943
    3. ' ,' → logprob: -9.250725746154785
    4. ',
' → logprob: -12.875725746154785
    5. ',i' → logprob: -15.000725746154785
    6. ')' → logprob: -15.250725746154785
    7. 'j' → logprob: -16.1257266998291
    8. '[' → logprob: -17.0007266998291
    9. ' j' → logprob: -17.3757266998291
    10. ',

' → logprob: -17.5007266998291

Token 445: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0015031944494694471
    2. ' j' → logprob: -6.501502990722656
    3. '	j' → logprob: -14.876502990722656
    4. '   ' → logprob: -15.501502990722656
    5. '$j' → logprob: -16.251502990722656
    6. ' ' → logprob: -16.626502990722656
    7. ',j' → logprob: -16.876502990722656
    8. '<|end|>' → logprob: -17.126502990722656
    9. '[j' → logprob: -17.501502990722656
    10. '_j' → logprob: -17.626502990722656

Token 446: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011200665176147595
    2. ' +' → logprob: -9.12511157989502
    3. '1' → logprob: -12.75011157989502
    4. ']+' → logprob: -16.750112533569336
    5. '+
' → logprob: -17.250112533569336
    6. '<|end|>' → logprob: -17.500112533569336
    7. '()+' → logprob: -18.375112533569336
    8. ')+' → logprob: -18.500112533569336
    9. '＋' → logprob: -18.750112533569336
    10. '[' → logprob: -18.750112533569336

Token 447: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.000006675720215
    3. '+' → logprob: -14.875006675720215
    4. '   ' → logprob: -16.25000762939453
    5. '2' → logprob: -16.87500762939453
    6. '<|end|>' → logprob: -17.68750762939453
    7. ' +' → logprob: -18.06250762939453
    8. '  ' → logprob: -18.31250762939453
    9. '۱' → logprob: -18.43750762939453
    10. ',' → logprob: -18.56250762939453

Token 448: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005441382061690092
    2. ' ,' → logprob: -5.255441188812256
    3. '+' → logprob: -8.880441665649414
    4. ',
' → logprob: -10.255441665649414
    5. ',i' → logprob: -11.005441665649414
    6. ',j' → logprob: -11.755441665649414
    7. '1' → logprob: -13.005441665649414
    8. '   ' → logprob: -13.505441665649414
    9. ' ,
' → logprob: -14.005441665649414
    10. ' +' → logprob: -14.005441665649414

Token 449: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005950013641268015
    2. ' i' → logprob: -5.130949974060059
    3. '   ' → logprob: -11.005949974060059
    4. ' ' → logprob: -13.380949974060059
    5. '	i' → logprob: -13.380949974060059
    6. '  ' → logprob: -14.380949974060059
    7. '1' → logprob: -14.755949974060059
    8. '<|end|>' → logprob: -15.130949974060059
    9. '    ' → logprob: -15.505949974060059
    10. ''i' → logprob: -15.880949974060059

Token 450: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00046796895912848413
    2. ' +' → logprob: -8.250468254089355
    3. '1' → logprob: -8.500468254089355
    4. '[' → logprob: -13.000468254089355
    5. ',' → logprob: -15.375468254089355
    6. ' ' → logprob: -15.625468254089355
    7. '+
' → logprob: -15.625468254089355
    8. '<|end|>' → logprob: -15.750468254089355
    9. '+,' → logprob: -16.75046730041504
    10. '   ' → logprob: -17.12546730041504

Token 451: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.37501335144043
    3. '+' → logprob: -14.12501335144043
    4. 'i' → logprob: -15.00001335144043
    5. '   ' → logprob: -15.12501335144043
    6. '<|end|>' → logprob: -16.25001335144043
    7. '[' → logprob: -16.62501335144043
    8. '  ' → logprob: -18.00001335144043
    9. '```' → logprob: -18.25001335144043
    10. '     ' → logprob: -18.50001335144043

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003911338280886412
    2. ' ,' → logprob: -5.75391149520874
    3. ',j' → logprob: -7.25391149520874
    4. ' j' → logprob: -11.253911018371582
    5. 'j' → logprob: -11.378911018371582
    6. '   ' → logprob: -14.128911018371582
    7. ' ' → logprob: -15.253911018371582
    8. '[j' → logprob: -15.878911018371582
    9. '       ' → logprob: -15.878911018371582
    10. ',
' → logprob: -16.1289119720459

Token 453: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0001093841710826382
    2. ' j' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.375109672546387
    4. '(j' → logprob: -15.875109672546387
    5. '[j' → logprob: -17.00010871887207
    6. '	j' → logprob: -17.12510871887207
    7. ',j' → logprob: -18.62510871887207
    8. '$j' → logprob: -19.12510871887207
    9. ' ' → logprob: -19.37510871887207
    10. '```' → logprob: -19.75010871887207

Token 454: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00016384923947043717
    2. ' +' → logprob: -9.000164031982422
    3. '2' → logprob: -10.125164031982422
    4. ' ' → logprob: -16.625164031982422
    5. '<|end|>' → logprob: -17.250164031982422
    6. '++' → logprob: -17.500164031982422
    7. '+j' → logprob: -17.750164031982422
    8. ']+' → logprob: -18.000164031982422
    9. '＋' → logprob: -18.250164031982422
    10. '+
' → logprob: -18.625164031982422

Token 455: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. '+' → logprob: -15.500009536743164
    4. '<|end|>' → logprob: -17.250009536743164
    5. '```' → logprob: -17.250009536743164
    6. '1' → logprob: -17.500009536743164
    7. '   ' → logprob: -17.500009536743164
    8. '۲' → logprob: -18.250009536743164
    9. '  ' → logprob: -19.000009536743164
    10. '２' → logprob: -19.000009536743164

Token 456: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -8.041768160182983e-05
    2. '])
' → logprob: -10.250080108642578
    3. ' ])' → logprob: -10.500080108642578
    4. ',' → logprob: -12.000080108642578
    5. '           ' → logprob: -12.875080108642578
    6. ')' → logprob: -12.875080108642578
    7. '       ' → logprob: -13.125080108642578
    8. ')])' → logprob: -13.500080108642578
    9. ']])' → logprob: -14.250080108642578
    10. ']' → logprob: -14.500080108642578

Token 457: '           ' (ID: 352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4742880165576935
    2. '           ' → logprob: -0.9742879867553711
    3. ' a' → logprob: -8.599287986755371
    4. '            
' → logprob: -11.724287986755371
    5. '       ' → logprob: -12.349287986755371
    6. '               ' → logprob: -12.474287986755371
    7. ' ' → logprob: -12.724287986755371
    8. '```' → logprob: -12.724287986755371
    9. '        ' → logprob: -13.974287986755371
    10. '		' → logprob: -14.349287986755371

Token 458: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0032226298935711384
    2. '           ' → logprob: -5.753222465515137
    3. ' a' → logprob: -10.128222465515137
    4. '            
' → logprob: -12.878222465515137
    5. '       ' → logprob: -13.753222465515137
    6. '               ' → logprob: -14.503222465515137
    7. '   ' → logprob: -14.628222465515137
    8. '            ' → logprob: -16.128223419189453
    9. '          ' → logprob: -16.253223419189453
    10. '	a' → logprob: -16.503223419189453

Token 459: ' On' (ID: 2160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.114600834436715e-05
    2. ' a' → logprob: -10.000091552734375
    3. '           ' → logprob: -10.000091552734375
    4. '   ' → logprob: -16.000091552734375
    5. '       ' → logprob: -16.750091552734375
    6. '            
' → logprob: -17.625091552734375
    7. '               ' → logprob: -17.750091552734375
    8. '#' → logprob: -18.000091552734375
    9. '	a' → logprob: -19.250091552734375
    10. ' ' → logprob: -19.500091552734375

Token 460: ' ajoute' (ID: 91611)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001350710866972804
    2. ' a' → logprob: -6.6263508796691895
    3. '#' → logprob: -12.126350402832031
    4. '[a' → logprob: -12.251350402832031
    5. '           ' → logprob: -12.376350402832031
    6. 'ai' → logprob: -13.251350402832031
    7. '#a' → logprob: -13.626350402832031
    8. 's' → logprob: -14.376350402832031
    9. '=' → logprob: -14.501350402832031
    10. 'aj' → logprob: -14.501350402832031

Token 461: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14363953471183777
    2. ' ' → logprob: -2.01863956451416
    3. '-' → logprob: -7.51863956451416
    4. 'a' → logprob: -8.64363956451416
    5. ' -' → logprob: -8.76863956451416
    6. ' a' → logprob: -10.76863956451416
    7. '<|end|>' → logprob: -11.14363956451416
    8. '   ' → logprob: -11.64363956451416
    9. '  ' → logprob: -11.64363956451416
    10. '           ' → logprob: -12.26863956451416

Token 462: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04777204990386963
    2. 'a' → logprob: -3.67277193069458
    3. '-' → logprob: -4.29777193069458
    4. ' ' → logprob: -4.92277193069458
    5. ' -' → logprob: -8.672772407531738
    6. ' a' → logprob: -9.047772407531738
    7. '```' → logprob: -10.922772407531738
    8. '   ' → logprob: -11.922772407531738
    9. '  ' → logprob: -12.172772407531738
    10. '...' → logprob: -12.422772407531738

Token 463: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.080379843711853
    2. 'a' → logprob: -1.830379843711853
    3. ' a' → logprob: -1.830379843711853
    4. ' to' → logprob: -2.2053799629211426
    5. '           ' → logprob: -2.4553799629211426
    6. 'to' → logprob: -2.8303799629211426
    7. '1' → logprob: -2.8303799629211426
    8. 'à' → logprob: -4.455379962921143
    9. ' ' → logprob: -5.330379962921143
    10. '   ' → logprob: -5.955379962921143

Token 464: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008622255176305771
    2. ' a' → logprob: -4.758622169494629
    3. ' the' → logprob: -12.883622169494629
    4. ' ' → logprob: -13.508622169494629
    5. '```' → logprob: -14.133622169494629
    6. 'the' → logprob: -14.383622169494629
    7. '`' → logprob: -14.508622169494629
    8. '[a' → logprob: -14.758622169494629
    9. '	a' → logprob: -15.008622169494629
    10. ')' → logprob: -15.258622169494629

Token 465: ' case' (ID: 1890)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0009892228990793228
    2. ' a' → logprob: -7.1259894371032715
    3. 'case' → logprob: -10.250988960266113
    4. 'val' → logprob: -10.375988960266113
    5. ' case' → logprob: -10.750988960266113
    6. 'value' → logprob: -10.875988960266113
    7. ' valeur' → logprob: -11.250988960266113
    8. 'ligne' → logprob: -11.250988960266113
    9. 'element' → logprob: -11.625988960266113
    10. '#' → logprob: -12.250988960266113

Token 466: ' suivante' (ID: 107439)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01951083354651928
    2. 'a' → logprob: -4.019510746002197
    3. 'i' → logprob: -7.019510746002197
    4. ' a' → logprob: -8.519511222839355
    5. '[' → logprob: -9.519511222839355
    6. ' [' → logprob: -9.644511222839355
    7. ' i' → logprob: -9.894511222839355
    8. '[a' → logprob: -10.769511222839355
    9. '```' → logprob: -10.894511222839355
    10. '   ' → logprob: -11.394511222839355

Token 467: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06967240571975708
    2. '           ' → logprob: -3.3196723461151123
    3. ' a' → logprob: -4.069672584533691
    4. '   ' → logprob: -5.069672584533691
    5. '[j' → logprob: -5.444672584533691
    6. '[i' → logprob: -6.819672584533691
    7. '       ' → logprob: -7.694672584533691
    8. '[' → logprob: -7.944672584533691
    9. '            
' → logprob: -8.569672584533691
    10. '[a' → logprob: -8.569672584533691

Token 468: 'col' (ID: 1798)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17290501296520233
    2. 'a' → logprob: -1.9229049682617188
    3. ' i' → logprob: -4.922904968261719
    4. ' a' → logprob: -6.797904968261719
    5. '[i' → logprob: -6.797904968261719
    6. ')' → logprob: -6.922904968261719
    7. '   ' → logprob: -6.922904968261719
    8. '           ' → logprob: -7.922904968261719
    9. ')i' → logprob: -7.922904968261719
    10. '```' → logprob: -9.922904968261719

Token 469: 'onne' (ID: 25335)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9732053875923157
    2. '[i' → logprob: -1.348205327987671
    3. '[j' → logprob: -1.598205327987671
    4. 'onne' → logprob: -2.223205327987671
    5. ']' → logprob: -4.09820556640625
    6. 'onnée' → logprob: -5.22320556640625
    7. '   ' → logprob: -5.34820556640625
    8. 'j' → logprob: -5.72320556640625
    9. ']+' → logprob: -5.97320556640625
    10. '][' → logprob: -5.97320556640625

Token 470: ' à' (ID: 1221)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.022181879729032516
    2. '[j' → logprob: -4.897181987762451
    3. '[i' → logprob: -5.397181987762451
    4. ']' → logprob: -5.522181987762451
    5. '   ' → logprob: -5.897181987762451
    6. ' ][' → logprob: -6.897181987762451
    7. ')' → logprob: -7.522181987762451
    8. 'j' → logprob: -8.147181510925293
    9. ' [' → logprob: -8.397181510925293
    10. '"][' → logprob: -8.522181510925293

Token 471: ' droite' (ID: 61428)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006866571493446827
    2. 'i' → logprob: -5.506866455078125
    3. '[j' → logprob: -6.256866455078125
    4. ' j' → logprob: -7.631866455078125
    5. '[i' → logprob: -8.756866455078125
    6. '```' → logprob: -9.756866455078125
    7. '   ' → logprob: -10.506866455078125
    8. '][' → logprob: -10.756866455078125
    9. '[' → logprob: -10.756866455078125
    10. ']' → logprob: -11.006866455078125

Token 472: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011287610046565533
    2. 'a' → logprob: -5.511287689208984
    3. ']' → logprob: -6.011287689208984
    4. ')
' → logprob: -6.136287689208984
    5. ' )' → logprob: -7.136287689208984
    6. '           ' → logprob: -7.386287689208984
    7. ')a' → logprob: -8.136287689208984
    8. '])' → logprob: -9.011287689208984
    9. ')]' → logprob: -9.261287689208984
    10. '`)' → logprob: -9.511287689208984

Token 473: ' curse' (ID: 77365)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004129453562200069
    2. ' i' → logprob: -6.129129409790039
    3. 'a' → logprob: -6.504129409790039
    4. '[i' → logprob: -7.754129409790039
    5. ')' → logprob: -12.129129409790039
    6. 'j' → logprob: -12.504129409790039
    7. ' a' → logprob: -13.254129409790039
    8. '   ' → logprob: -13.504129409790039
    9. ' [' → logprob: -14.504129409790039
    10. '`' → logprob: -14.879129409790039

Token 474: 'ur' (ID: 330)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8125386834144592
    2. 'ur' → logprob: -0.8125386834144592
    3. 'rent' → logprob: -2.6875386238098145
    4. '           ' → logprob: -5.0625386238098145
    5. '   ' → logprob: -5.3125386238098145
    6. '               ' → logprob: -5.4375386238098145
    7. '```' → logprob: -5.5625386238098145
    8. 'rant' → logprob: -5.6875386238098145
    9. 'rs' → logprob: -5.9375386238098145
    10. '       ' → logprob: -5.9375386238098145

Token 475: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06386751681566238
    2. ']' → logprob: -4.438867568969727
    3. 'a' → logprob: -4.438867568969727
    4. '           ' → logprob: -4.938867568969727
    5. '[j' → logprob: -4.938867568969727
    6. '[i' → logprob: -5.063867568969727
    7. ')
' → logprob: -5.438867568969727
    8. '])' → logprob: -5.438867568969727
    9. '       ' → logprob: -6.438867568969727
    10. '][' → logprob: -6.438867568969727

Token 476: '           ' (ID: 352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4764540195465088
    2. ' a' → logprob: -0.9764540195465088
    3. '           ' → logprob: -6.35145378112793
    4. '   ' → logprob: -7.97645378112793
    5. '            
' → logprob: -9.72645378112793
    6. ' 
' → logprob: -10.22645378112793
    7. '[a' → logprob: -10.47645378112793
    8. '       ' → logprob: -10.85145378112793
    9. '	a' → logprob: -10.85145378112793
    10. ' =' → logprob: -11.22645378112793

Token 477: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0031983929220587015
    2. ' a' → logprob: -5.753198623657227
    3. '           ' → logprob: -10.878198623657227
    4. '   ' → logprob: -13.378198623657227
    5. '       ' → logprob: -16.378198623657227
    6. '               ' → logprob: -16.628198623657227
    7. '	a' → logprob: -17.128198623657227
    8. ' ' → logprob: -17.253198623657227
    9. '  ' → logprob: -17.753198623657227
    10. '            
' → logprob: -18.003198623657227

Token 478: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[I' → logprob: -16.0
    3. '[a' → logprob: -16.25
    4. '[' → logprob: -17.375
    5. 'i' → logprob: -17.5
    6. 'a' → logprob: -17.625
    7. ' [' → logprob: -18.25
    8. '```' → logprob: -19.0
    9. '[
' → logprob: -19.25
    10. '[int' → logprob: -19.5

Token 479: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009675608016550541
    2. '[i' → logprob: -7.000967502593994
    3. ']' → logprob: -10.625967979431152
    4. '[j' → logprob: -11.125967979431152
    5. ' ][' → logprob: -12.000967979431152
    6. '[' → logprob: -12.625967979431152
    7. '"][' → logprob: -12.750967979431152
    8. '<|end|>' → logprob: -14.125967979431152
    9. ']][' → logprob: -14.250967979431152
    10. ')][' → logprob: -14.500967979431152

Token 480: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00011474833445390686
    2. '[j' → logprob: -9.375114440917969
    3. '][' → logprob: -10.750114440917969
    4. ' j' → logprob: -11.875114440917969
    5. '	j' → logprob: -14.375114440917969
    6. '   ' → logprob: -15.125114440917969
    7. ',j' → logprob: -15.750114440917969
    8. ']' → logprob: -16.12511444091797
    9. ' ' → logprob: -16.25011444091797
    10. '$j' → logprob: -16.25011444091797

Token 481: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004263350740075111
    2. '[j' → logprob: -5.504263401031494
    3. ' ][' → logprob: -9.379262924194336
    4. ']' → logprob: -10.004262924194336
    5. 'j' → logprob: -11.629262924194336
    6. '"][' → logprob: -11.629262924194336
    7. '[' → logprob: -11.629262924194336
    8. ''][' → logprob: -12.504262924194336
    9. ',j' → logprob: -12.504262924194336
    10. '   ' → logprob: -12.754262924194336

Token 482: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013346440391615033
    2. ']' → logprob: -7.1263346672058105
    3. '+' → logprob: -7.8763346672058105
    4. ']+' → logprob: -9.251334190368652
    5. 'j' → logprob: -10.126334190368652
    6. '   ' → logprob: -11.876334190368652
    7. ' ' → logprob: -12.626334190368652
    8. ']+=' → logprob: -12.626334190368652
    9. '```' → logprob: -15.751334190368652
    10. '       ' → logprob: -15.876334190368652

Token 483: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005252372473478317
    2. ']+=' → logprob: -5.255252361297607
    3. ']+' → logprob: -11.505252838134766
    4. ')' → logprob: -12.505252838134766
    5. ' ]' → logprob: -13.130252838134766
    6. '+=' → logprob: -13.130252838134766
    7. '+' → logprob: -15.755252838134766
    8. '[' → logprob: -15.755252838134766
    9. '+]' → logprob: -16.005252838134766
    10. '']' → logprob: -16.005252838134766

Token 484: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0007378002628684044
    2. ' +=' → logprob: -7.37573766708374
    3. '+' → logprob: -9.750738143920898
    4. ']+=' → logprob: -9.875738143920898
    5. '=' → logprob: -14.000738143920898
    6. '+='' → logprob: -15.125738143920898
    7. '+=(' → logprob: -15.250738143920898
    8. '   ' → logprob: -16.8757381439209
    9. '+="' → logprob: -17.1257381439209
    10. '[' → logprob: -17.8757381439209

Token 485: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -20.875
    4. '```' → logprob: -23.125
    5. '１' → logprob: -23.5
    6. '<|end|>' → logprob: -24.375
    7. '۱' → logprob: -24.5
    8. '১' → logprob: -24.5
    9. '  ' → logprob: -24.75
    10. '१' → logprob: -25.125

Token 486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '１' → logprob: -21.875
    4. 'a' → logprob: -21.875
    5. '   ' → logprob: -21.875
    6. '```' → logprob: -23.125
    7. '۱' → logprob: -23.625
    8. '১' → logprob: -23.75
    9. '१' → logprob: -24.125
    10. '١' → logprob: -25.0

Token 487: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008329743286594748
    2. 'a' → logprob: -7.375833034515381
    3. '       ' → logprob: -9.125832557678223
    4. '#' → logprob: -9.375832557678223
    5. ' a' → logprob: -12.625832557678223
    6. '```' → logprob: -12.750832557678223
    7. '   ' → logprob: -13.125832557678223
    8. '            
' → logprob: -13.625832557678223
    9. '<|end|>' → logprob: -13.875832557678223
    10. '          ' → logprob: -14.500832557678223

Token 488: '#' (ID: 2)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6533668041229248
    2. 'a' → logprob: -0.7783668041229248
    3. '       ' → logprob: -4.278367042541504
    4. '#' → logprob: -6.403367042541504
    5. ' a' → logprob: -6.653367042541504
    6. '            
' → logprob: -6.778367042541504
    7. '<|end|>' → logprob: -6.903367042541504
    8. '   ' → logprob: -7.653367042541504
    9. '            ' → logprob: -8.403367042541504
    10. '               ' → logprob: -8.903367042541504

Token 489: ' Après' (ID: 47562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44437339901924133
    2. '#' → logprob: -1.569373369216919
    3. 'print' → logprob: -2.444373369216919
    4. 'if' → logprob: -3.194373369216919
    5. '<|end|>' → logprob: -4.444373607635498
    6. '```' → logprob: -5.194373607635498
    7. ' for' → logprob: -6.569373607635498
    8. 'pass' → logprob: -6.569373607635498
    9. '   ' → logprob: -6.819373607635498
    10. '
' → logprob: -8.44437313079834

Token 490: ' avoir' (ID: 16595)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9545038342475891
    2. 'la' → logprob: -1.5795037746429443
    3. 'for' → logprob: -1.7045037746429443
    4. ' la' → logprob: -3.0795037746429443
    5. 'the' → logprob: -3.7045037746429443
    6. 'cela' → logprob: -3.7045037746429443
    7. ' cette' → logprob: -3.8295037746429443
    8. 'this' → logprob: -4.329504013061523
    9. ' avoir' → logprob: -4.329504013061523
    10. 'fin' → logprob: -4.329504013061523

Token 491: ' effectué' (ID: 131221)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.49693581461906433
    2. 'par' → logprob: -2.2469358444213867
    3. 'g' → logprob: -2.7469358444213867
    4. 'termin' → logprob: -3.2469358444213867
    5. 'corr' → logprob: -3.2469358444213867
    6. 'tra' → logprob: -3.6219358444213867
    7. 'fait' → logprob: -3.7469358444213867
    8. ' parcour' → logprob: -3.8719358444213867
    9. 'bou' → logprob: -3.9969358444213867
    10. '#' → logprob: -4.871935844421387

Token 492: ' le' (ID: 505)
  Prédit: ' cette'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cette' → logprob: -1.3642215728759766
    2. 'la' → logprob: -1.7392215728759766
    3. ' la' → logprob: -1.9892215728759766
    4. 'cela' → logprob: -2.2392215728759766
    5. '<|end|>' → logprob: -2.7392215728759766
    6. '#' → logprob: -3.1142215728759766
    7. 'the' → logprob: -3.1142215728759766
    8. ' toutes' → logprob: -3.4892215728759766
    9. ' ce' → logprob: -3.7392215728759766
    10. 'les' → logprob: -4.239221572875977

Token 493: ' déplacement' (ID: 138449)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.3894273638725281
    2. 'trait' → logprob: -1.8894274234771729
    3. 'pass' → logprob: -2.764427423477173
    4. 'dé' → logprob: -2.889427423477173
    5. 'for' → logprob: -3.889427423477173
    6. 'prem' → logprob: -5.264427185058594
    7. 'bou' → logprob: -5.514427185058594
    8. ' déplacement' → logprob: -5.764427185058594
    9. '#' → logprob: -5.889427185058594
    10. 'd' → logprob: -6.139427185058594

Token 494: ' vers' (ID: 3640)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8647178411483765
    2. 'for' → logprob: -1.4897178411483765
    3. ',' → logprob: -1.6147178411483765
    4. 'print' → logprob: -2.114717960357666
    5. ' for' → logprob: -3.989717960357666
    6. 's' → logprob: -5.614717960357666
    7. 'des' → logprob: -6.364717960357666
    8. '<|end|>' → logprob: -6.364717960357666
    9. 'de' → logprob: -6.489717960357666
    10. '   ' → logprob: -6.739717960357666

Token 495: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.005594799295067787
    2. ' la' → logprob: -6.130594730377197
    3. 'l' → logprob: -6.755594730377197
    4. 'le' → logprob: -7.005594730377197
    5. 'les' → logprob: -7.255594730377197
    6. '#' → logprob: -8.380595207214355
    7. '<|end|>' → logprob: -8.630595207214355
    8. 'the' → logprob: -10.005595207214355
    9. 'une' → logprob: -10.380595207214355
    10. 'g' → logprob: -10.755595207214355

Token 496: ' droite' (ID: 61428)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.01516447588801384
    2. 'b' → logprob: -5.140164375305176
    3. 'haut' → logprob: -6.015164375305176
    4. 'dro' → logprob: -6.265164375305176
    5. ' bas' → logprob: -6.765164375305176
    6. 'ligne' → logprob: -6.890164375305176
    7. '#' → logprob: -7.265164375305176
    8. 'der' → logprob: -7.890164375305176
    9. 'ha' → logprob: -8.265164375305176
    10. 'col' → logprob: -8.765164375305176

Token 497: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.173735573887825
    2. '#' → logprob: -2.1737356185913086
    3. ',' → logprob: -3.7987356185913086
    4. ' for' → logprob: -4.048735618591309
    5. '   ' → logprob: -5.673735618591309
    6. '<|end|>' → logprob: -6.298735618591309
    7. 'if' → logprob: -8.298735618591309
    8. '       ' → logprob: -9.548735618591309
    9. ',
' → logprob: -9.798735618591309
    10. '
' → logprob: -10.173735618591309

Token 498: ' chaque' (ID: 21194)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7245907187461853
    2. 'les' → logprob: -1.22459077835083
    3. ' la' → logprob: -2.47459077835083
    4. 'le' → logprob: -2.59959077835083
    5. ' chaque' → logprob: -4.09959077835083
    6. 'l' → logprob: -4.47459077835083
    7. ' les' → logprob: -4.59959077835083
    8. '#' → logprob: -4.72459077835083
    9. ' toutes' → logprob: -5.34959077835083
    10. 'all' → logprob: -6.09959077835083

Token 499: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.05206398293375969
    2. 'col' → logprob: -3.0520639419555664
    3. 'for' → logprob: -7.177063941955566
    4. ' ligne' → logprob: -7.177063941955566
    5. 'i' → logprob: -7.302063941955566
    6. 'range' → logprob: -8.052063941955566
    7. 'case' → logprob: -8.177063941955566
    8. '#' → logprob: -8.427063941955566
    9. 'row' → logprob: -9.302063941955566
    10. 'line' → logprob: -9.427063941955566

Token 500: ',
' (ID: 412)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5263745784759521
    2. '#' → logprob: -1.0263745784759521
    3. ',' → logprob: -3.026374578475952
    4. ' for' → logprob: -6.776374816894531
    5. '   ' → logprob: -6.901374816894531
    6. 'if' → logprob: -8.776374816894531
    7. '
' → logprob: -10.526374816894531
    8. ',
' → logprob: -10.526374816894531
    9. 'on' → logprob: -10.901374816894531
    10. '    
' → logprob: -11.026374816894531

Token 501: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0627865120768547
    2. '#' → logprob: -2.81278657913208
    3. ' for' → logprob: -7.43778657913208
    4. 'if' → logprob: -8.437786102294922
    5. '   ' → logprob: -11.937786102294922
    6. '```' → logprob: -12.562786102294922
    7. ' #' → logprob: -13.062786102294922
    8. 'pour' → logprob: -14.312786102294922
    9. ' if' → logprob: -14.812786102294922
    10. 'import' → logprob: -15.812786102294922

Token 502: ' Il' (ID: 5329)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007276826072484255
    2. '#' → logprob: -7.250727653503418
    3. '   ' → logprob: -11.625727653503418
    4. ' for' → logprob: -11.750727653503418
    5. 'pour' → logprob: -14.375727653503418
    6. '```' → logprob: -15.875727653503418
    7. '       ' → logprob: -16.375728607177734
    8. '	for' → logprob: -17.750728607177734
    9. 'on' → logprob: -18.250728607177734
    10. '
' → logprob: -18.375728607177734

Token 503: ' reste' (ID: 26769)
  Prédit: ' reste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.8003740906715393
    2. ' faut' → logprob: -0.9253740906715393
    3. 'f' → logprob: -2.6753740310668945
    4. '#' → logprob: -2.9253740310668945
    5. 'reste' → logprob: -4.6753740310668945
    6. 'for' → logprob: -5.4253740310668945
    7. ' manque' → logprob: -5.6753740310668945
    8. ' faudra' → logprob: -5.8003740310668945
    9. 's' → logprob: -6.3003740310668945
    10. ' faudrait' → logprob: -6.6753740310668945

Token 504: ' potent' (ID: 35668)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6024240851402283
    2. 'à' → logprob: -1.602424144744873
    3. ' encore' → logprob: -2.352424144744873
    4. ' un' → logprob: -3.352424144744873
    5. ' une' → logprob: -3.602424144744873
    6. 'un' → logprob: -3.852424144744873
    7. 'to' → logprob: -4.352424144744873
    8. 'a' → logprob: -4.602424144744873
    9. 'une' → logprob: -4.602424144744873
    10. 'plus' → logprob: -4.727424144744873

Token 505: 'iellement' (ID: 70958)
  Prédit: 'iellement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iellement' → logprob: -0.001203327439725399
    2. 'uellement' → logprob: -7.251203536987305
    3. 'ielle' → logprob: -8.001203536987305
    4. '#' → logprob: -9.376203536987305
    5. 'ent' → logprob: -10.376203536987305
    6. 'iquement' → logprob: -12.251203536987305
    7. 'el' → logprob: -12.251203536987305
    8. 'iel' → logprob: -12.251203536987305
    9. 'ial' → logprob: -12.501203536987305
    10. 'e' → logprob: -12.876203536987305

Token 506: ' des' (ID: 731)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.19618748128414154
    2. 'un' → logprob: -3.0711874961853027
    3. 'des' → logprob: -3.0711874961853027
    4. ' une' → logprob: -3.3211874961853027
    5. 'à' → logprob: -3.5711874961853027
    6. ' encore' → logprob: -5.571187496185303
    7. ' à' → logprob: -5.696187496185303
    8. ' un' → logprob: -6.446187496185303
    9. 'les' → logprob: -6.446187496185303
    10. ' des' → logprob: -6.446187496185303

Token 507: ' valeurs' (ID: 73668)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9232500195503235
    2. 'élé' → logprob: -1.4232499599456787
    3. 'colon' → logprob: -2.0482499599456787
    4. 'imp' → logprob: -2.5482499599456787
    5. 'cases' → logprob: -2.7982499599456787
    6. 'im' → logprob: -3.4232499599456787
    7. 'val' → logprob: -3.9232499599456787
    8. 'cas' → logprob: -4.298250198364258
    9. ' lignes' → logprob: -5.923250198364258
    10. 'd' → logprob: -5.923250198364258

Token 508: ' imp' (ID: 3282)
  Prédit: 'imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imp' → logprob: -0.09174376726150513
    2. 'im' → logprob: -2.8417437076568604
    3. ' imp' → logprob: -3.5917437076568604
    4. 'dans' → logprob: -7.4667439460754395
    5. 'à' → logprob: -7.5917439460754395
    6. 'imb' → logprob: -8.716743469238281
    7. 'odd' → logprob: -8.716743469238281
    8. 'a' → logprob: -9.591743469238281
    9. ' à' → logprob: -9.966743469238281
    10. 'import' → logprob: -9.966743469238281

Token 509: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.0025888581294566393
    2. 'ares' → logprob: -6.252588748931885
    3. 'aire' → logprob: -8.127589225769043
    4. 'air' → logprob: -8.377589225769043
    5. 'airs' → logprob: -9.377589225769043
    6. 'a' → logprob: -11.252589225769043
    7. 'aises' → logprob: -12.002589225769043
    8. 'ai' → logprob: -12.002589225769043
    9. '```' → logprob: -12.002589225769043
    10. 'aries' → logprob: -13.252589225769043

Token 510: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.09329889714717865
    2. '#' → logprob: -3.59329891204834
    3. 'sur' → logprob: -3.59329891204834
    4. 'for' → logprob: -4.21829891204834
    5. ' dans' → logprob: -4.46829891204834
    6. 'in' → logprob: -6.09329891204834
    7. 'à' → logprob: -6.34329891204834
    8. 'pour' → logprob: -7.34329891204834
    9. 'au' → logprob: -7.59329891204834
    10. 'if' → logprob: -7.71829891204834

Token 511: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.19014395773410797
    2. 'les' → logprob: -2.0651440620422363
    3. 'a' → logprob: -3.8151440620422363
    4. ' la' → logprob: -4.565144062042236
    5. 'range' → logprob: -5.565144062042236
    6. ' les' → logprob: -5.815144062042236
    7. 'le' → logprob: -6.065144062042236
    8. 'the' → logprob: -6.190144062042236
    9. 'l' → logprob: -6.315144062042236
    10. '#' → logprob: -7.815144062042236

Token 512: ' dernière' (ID: 39497)
  Prédit: 'der'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'der' → logprob: -0.17205488681793213
    2. ' dernière' → logprob: -2.1720547676086426
    3. 'dern' → logprob: -3.4220547676086426
    4. 'last' → logprob: -4.672054767608643
    5. ' derni' → logprob: -7.172054767608643
    6. '#' → logprob: -7.797054767608643
    7. 'for' → logprob: -8.0470552444458
    8. 'Dern' → logprob: -8.6720552444458
    9. 'ligne' → logprob: -8.7970552444458
    10. 'col' → logprob: -9.6720552444458

Token 513: ' colonne' (ID: 148275)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.6062497496604919
    2. ' ligne' → logprob: -1.1062498092651367
    3. ' colonne' → logprob: -2.4812498092651367
    4. 'col' → logprob: -3.2312498092651367
    5. 'l' → logprob: -8.231249809265137
    6. 'rang' → logprob: -9.606249809265137
    7. 'lig' → logprob: -9.606249809265137
    8. ' ' → logprob: -9.981249809265137
    9. 'column' → logprob: -10.356249809265137
    10. ' col' → logprob: -10.481249809265137

Token 514: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04409264400601387
    2. ' for' → logprob: -3.1690926551818848
    3. 'if' → logprob: -7.169092655181885
    4. '   ' → logprob: -8.294092178344727
    5. ' if' → logprob: -10.544092178344727
    6. '#' → logprob: -10.794092178344727
    7. ',' → logprob: -10.919092178344727
    8. 'i' → logprob: -12.669092178344727
    9. '```' → logprob: -14.044092178344727
    10. ' i' → logprob: -14.294092178344727

Token 515: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.259079363080673e-05
    2. '#' → logprob: -12.125012397766113
    3. 'if' → logprob: -12.500012397766113
    4. ' for' → logprob: -13.375012397766113
    5. 'i' → logprob: -13.500012397766113
    6. '   ' → logprob: -15.125012397766113
    7. 'last' → logprob: -16.87501335144043
    8. '```' → logprob: -16.87501335144043
    9. 'from' → logprob: -18.00001335144043
    10. 'row' → logprob: -19.12501335144043

Token 516: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5332478142227046e-05
    2. 'if' → logprob: -11.125015258789062
    3. ' for' → logprob: -14.500015258789062
    4. '#' → logprob: -17.500015258789062
    5. 'i' → logprob: -17.625015258789062
    6. '   ' → logprob: -18.250015258789062
    7. '```' → logprob: -19.125015258789062
    8. 'from' → logprob: -19.875015258789062
    9. '	for' → logprob: -21.125015258789062
    10. '    
' → logprob: -21.875015258789062

Token 517: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009500354528427124
    2. 'continue' → logprob: -5.134500503540039
    3. ' for' → logprob: -5.884500503540039
    4. 'range' → logprob: -7.384500503540039
    5. 'contin' → logprob: -9.634500503540039
    6. ' continue' → logprob: -9.884500503540039
    7. 'pour' → logprob: -11.259500503540039
    8. 'par' → logprob: -11.884500503540039
    9. '#' → logprob: -12.009500503540039
    10. 's' → logprob: -12.884500503540039

Token 518: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.1915503293275833
    2. 'ours' → logprob: -2.0665502548217773
    3. 'our' → logprob: -3.1915502548217773
    4. 'oure' → logprob: -6.066550254821777
    5. '#' → logprob: -6.191550254821777
    6. 'orre' → logprob: -6.691550254821777
    7. 'ourse' → logprob: -7.316550254821777
    8. 'r' → logprob: -10.191550254821777
    9. 'court' → logprob: -10.441550254821777
    10. '<' → logprob: -10.816550254821777

Token 519: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007578585762530565
    2. 'for' → logprob: -5.007578372955322
    3. '(range' → logprob: -7.257578372955322
    4. ' range' → logprob: -8.75757884979248
    5. 'i' → logprob: -15.25757884979248
    6. ' for' → logprob: -15.63257884979248
    7. '
' → logprob: -16.257577896118164
    8. '(i' → logprob: -16.257577896118164
    9. '(' → logprob: -16.507577896118164
    10. '(H' → logprob: -16.882577896118164

Token 520: ' ligne' (ID: 19583)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06691204756498337
    2. 'range' → logprob: -2.8169119358062744
    3. ' i' → logprob: -6.0669121742248535
    4. ' range' → logprob: -6.4419121742248535
    5. 'ligne' → logprob: -7.3169121742248535
    6. 'for' → logprob: -8.191911697387695
    7. '(i' → logprob: -10.316911697387695
    8. 'line' → logprob: -11.066911697387695
    9. ' ligne' → logprob: -11.941911697387695
    10. ' for' → logprob: -11.941911697387695

Token 521: ' sauf' (ID: 87919)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03548330441117287
    2. ' for' → logprob: -3.4104833602905273
    3. '   ' → logprob: -6.660483360290527
    4. ' in' → logprob: -8.160483360290527
    5. 'in' → logprob: -8.535483360290527
    6. 'range' → logprob: -10.535483360290527
    7. ' range' → logprob: -10.660483360290527
    8. '(range' → logprob: -11.785483360290527
    9. ',' → logprob: -12.285483360290527
    10. '(' → logprob: -12.660483360290527

Token 522: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.023940930142998695
    2. ' la' → logprob: -3.7739410400390625
    3. 'le' → logprob: -7.6489410400390625
    4. '(H' → logprob: -9.773941040039062
    5. 'H' → logprob: -9.898941040039062
    6. 'len' → logprob: -10.523941040039062
    7. 'l' → logprob: -11.148941040039062
    8. 'for' → logprob: -11.273941040039062
    9. 'last' → logprob: -11.648941040039062
    10. 'the' → logprob: -11.648941040039062

Token 523: ' dernière' (ID: 39497)
  Prédit: 'der'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'der' → logprob: -0.40060827136039734
    2. 'dern' → logprob: -1.2756083011627197
    3. 'last' → logprob: -3.5256083011627197
    4. ' dernière' → logprob: -3.9006083011627197
    5. ' derni' → logprob: -7.275608062744141
    6. 'Dern' → logprob: -7.900608062744141
    7. ' last' → logprob: -10.40060806274414
    8. '#' → logprob: -10.40060806274414
    9. ' dernier' → logprob: -11.27560806274414
    10. ' der' → logprob: -12.52560806274414

Token 524: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16031846404075623
    2. ' for' → logprob: -1.9103184938430786
    3. '   ' → logprob: -9.910318374633789
    4. ' range' → logprob: -10.910318374633789
    5. 'range' → logprob: -11.035318374633789
    6. ' in' → logprob: -12.410318374633789
    7. ',' → logprob: -13.285318374633789
    8. '(range' → logprob: -13.910318374633789
    9. '(' → logprob: -14.160318374633789
    10. '(
' → logprob: -14.410318374633789

Token 525: ' gérer' (ID: 86786)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8176904320716858
    2. 'i' → logprob: -1.317690372467041
    3. 'range' → logprob: -1.692690372467041
    4. ' i' → logprob: -2.942690372467041
    5. ' for' → logprob: -3.317690372467041
    6. ' range' → logprob: -4.192690372467041
    7. ' déplacer' → logprob: -6.817690372467041
    8. 'j' → logprob: -7.692690372467041
    9. ' ' → logprob: -8.1926908493042
    10. 'faire' → logprob: -8.6926908493042

Token 526: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1916995346546173
    2. ' i' → logprob: -1.816699504852295
    3. 'range' → logprob: -5.066699504852295
    4. ' range' → logprob: -6.066699504852295
    5. '(i' → logprob: -6.316699504852295
    6. ' la' → logprob: -7.066699504852295
    7. ' (' → logprob: -8.566699981689453
    8. 'H' → logprob: -9.191699981689453
    9. '   ' → logprob: -9.441699981689453
    10. ' ' → logprob: -9.691699981689453

Token 527: ' valeurs' (ID: 73668)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.247646689414978
    2. 'col' → logprob: -1.372646689414978
    3. 'dern' → logprob: -1.747646689414978
    4. 'range' → logprob: -2.2476468086242676
    5. 'der' → logprob: -2.9976468086242676
    6. 'colon' → logprob: -2.9976468086242676
    7. 'i' → logprob: -3.3726468086242676
    8. ' H' → logprob: -4.872646808624268
    9. ' dernière' → logprob: -4.872646808624268
    10. ' colon' → logprob: -5.247646808624268

Token 528: ' imp' (ID: 3282)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1307777762413025
    2. ' for' → logprob: -3.2557778358459473
    3. 'range' → logprob: -3.3807778358459473
    4. '(H' → logprob: -3.6307778358459473
    5. ' range' → logprob: -4.130777835845947
    6. '(range' → logprob: -5.880777835845947
    7. '(' → logprob: -6.130777835845947
    8. ' (' → logprob: -7.255777835845947
    9. '(i' → logprob: -7.505777835845947
    10. '   ' → logprob: -8.255777359008789

Token 529: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.3910835385322571
    2. 'aire' → logprob: -1.2660834789276123
    3. 'ares' → logprob: -3.5160834789276123
    4. 'air' → logprob: -4.891083717346191
    5. 'are' → logprob: -5.766083717346191
    6. 'airs' → logprob: -7.141083717346191
    7. 'ar' → logprob: -9.016083717346191
    8. 'a' → logprob: -9.891083717346191
    9. 'aired' → logprob: -10.516083717346191
    10. '[' → logprob: -10.516083717346191

Token 530: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002189756603911519
    2. '   ' → logprob: -6.252189636230469
    3. ' for' → logprob: -8.252189636230469
    4. 'range' → logprob: -15.502189636230469
    5. '
' → logprob: -16.00218963623047
    6. '```' → logprob: -16.12718963623047
    7. '	for' → logprob: -16.87718963623047
    8. '``' → logprob: -18.37718963623047
    9. 'i' → logprob: -18.62718963623047
    10. '       ' → logprob: -19.00218963623047

Token 531: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001968246651813388
    2. ' range' → logprob: -6.2519683837890625
    3. 'la' → logprob: -10.251968383789062
    4. ' la' → logprob: -13.126968383789062
    5. 'for' → logprob: -13.376968383789062
    6. '(range' → logprob: -14.751968383789062
    7. 'H' → logprob: -15.751968383789062
    8. 'le' → logprob: -17.126968383789062
    9. '   ' → logprob: -17.251968383789062
    10. '	range' → logprob: -17.376968383789062

Token 532: ' dernière' (ID: 39497)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2566491365432739
    2. 'der' → logprob: -2.5066490173339844
    3. 'dern' → logprob: -2.6316490173339844
    4. 'for' → logprob: -2.8816490173339844
    5. 'last' → logprob: -4.256649017333984
    6. 'col' → logprob: -7.256649017333984
    7. 'H' → logprob: -7.381649017333984
    8. 'Dern' → logprob: -7.756649017333984
    9. ' dernière' → logprob: -8.506649017333984
    10. 'pl' → logprob: -9.131649017333984

Token 533: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.48780518770217896
    2. 'for' → logprob: -1.2378051280975342
    3. ' colonne' → logprob: -2.612805128097534
    4. 'range' → logprob: -4.362805366516113
    5. 'column' → logprob: -5.487805366516113
    6. ' for' → logprob: -5.612805366516113
    7. ' range' → logprob: -6.737805366516113
    8. 'colon' → logprob: -8.112805366516113
    9. 'ligne' → logprob: -8.237805366516113
    10. '   ' → logprob: -8.737805366516113

Token 534: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.1424973713001236e-05
    2. '   ' → logprob: -10.500031471252441
    3. ' for' → logprob: -12.625031471252441
    4. '```' → logprob: -15.000031471252441
    5. '
' → logprob: -16.000030517578125
    6. 'range' → logprob: -16.625030517578125
    7. 'from' → logprob: -18.875030517578125
    8. '``' → logprob: -18.875030517578125
    9. '    
' → logprob: -19.875030517578125
    10. '	for' → logprob: -21.000030517578125

Token 535: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.008129963040119e-06
    2. '   ' → logprob: -12.625003814697266
    3. ' for' → logprob: -14.500003814697266
    4. '```' → logprob: -15.750003814697266
    5. 'range' → logprob: -19.250003814697266
    6. '``' → logprob: -19.375003814697266
    7. '
' → logprob: -19.375003814697266
    8. '	for' → logprob: -20.875003814697266
    9. '    
' → logprob: -21.125003814697266
    10. 'from' → logprob: -21.375003814697266

Token 536: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015024791937321424
    2. ' i' → logprob: -6.501502513885498
    3. '	i' → logprob: -16.376502990722656
    4. '   ' → logprob: -17.501502990722656
    5. ' ' → logprob: -18.126502990722656
    6. '```' → logprob: -18.751502990722656
    7. 'I' → logprob: -18.876502990722656
    8. '_i' → logprob: -19.376502990722656
    9. '(i' → logprob: -19.626502990722656
    10. '`' → logprob: -19.751502990722656

Token 537: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012529547326266766
    2. 'in' → logprob: -4.387529373168945
    3. ' ' → logprob: -11.137529373168945
    4. 'range' → logprob: -13.262529373168945
    5. '+' → logprob: -13.637529373168945
    6. '   ' → logprob: -14.512529373168945
    7. 'In' → logprob: -14.887529373168945
    8. '  ' → logprob: -15.512529373168945
    9. '1' → logprob: -16.012529373168945
    10. '	in' → logprob: -16.012529373168945

Token 538: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740784466266632
    2. ' range' → logprob: -0.9740784168243408
    3. '(range' → logprob: -14.224078178405762
    4. ' in' → logprob: -14.849078178405762
    5. ' ' → logprob: -15.599078178405762
    6. 'ran' → logprob: -16.224079132080078
    7. 'in' → logprob: -16.474079132080078
    8. '0' → logprob: -17.474079132080078
    9. 'rang' → logprob: -17.724079132080078
    10. ' rang' → logprob: -18.474079132080078

Token 539: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -8.041768160182983e-05
    2. '(' → logprob: -9.500080108642578
    3. '(range' → logprob: -12.375080108642578
    4. '(W' → logprob: -14.625080108642578
    5. 'H' → logprob: -14.875080108642578
    6. 'range' → logprob: -15.125080108642578
    7. '(len' → logprob: -15.750080108642578
    8. ' (' → logprob: -17.000080108642578
    9. '((' → logprob: -17.625080108642578
    10. '(R' → logprob: -18.000080108642578

Token 540: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014164221473038197
    2. ' -' → logprob: -4.264164447784424
    3. '):' → logprob: -14.764163970947266
    4. '   ' → logprob: -15.389163970947266
    5. ')' → logprob: -16.764163970947266
    6. '):
' → logprob: -16.764163970947266
    7. ' ' → logprob: -16.889163970947266
    8. '[:-' → logprob: -18.264163970947266
    9. '
' → logprob: -18.764163970947266
    10. ':' → logprob: -18.764163970947266

Token 541: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.750006675720215
    4. ')' → logprob: -16.25000762939453
    5. '```' → logprob: -16.25000762939453
    6. '2' → logprob: -17.31250762939453
    7. '１' → logprob: -17.37500762939453
    8. '۱' → logprob: -17.68750762939453
    9. '0' → logprob: -18.00000762939453
    10. '१' → logprob: -18.43750762939453

Token 542: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004724987084046006
    2. '):
' → logprob: -7.750472545623779
    3. ')' → logprob: -11.375472068786621
    4. ':' → logprob: -11.500472068786621
    5. ' ):' → logprob: -11.500472068786621
    6. '):
' → logprob: -12.375472068786621
    7. '):

' → logprob: -12.875472068786621
    8. '}:' → logprob: -14.000472068786621
    9. '+' → logprob: -14.125472068786621
    10. ']:' → logprob: -14.750472068786621

Token 543: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002358409110456705
    2. ' if' → logprob: -8.625235557556152
    3. ' ' → logprob: -10.625235557556152
    4. 'if' → logprob: -12.250235557556152
    5. ' for' → logprob: -12.250235557556152
    6. '       ' → logprob: -12.375235557556152
    7. '```' → logprob: -12.500235557556152
    8. ' #' → logprob: -12.625235557556152
    9. '   ' → logprob: -12.875235557556152
    10. '<|end|>' → logprob: -13.375235557556152

Token 544: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000421974720666185
    2. ' j' → logprob: -8.750421524047852
    3. 'j' → logprob: -9.375421524047852
    4. ' ' → logprob: -9.875421524047852
    5. ' if' → logprob: -10.000421524047852
    6. ' for' → logprob: -10.250421524047852
    7. 'for' → logprob: -10.500421524047852
    8. 'if' → logprob: -11.750421524047852
    9. '  ' → logprob: -12.125421524047852
    10. ':' → logprob: -13.250421524047852

Token 545: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04548666253685951
    2. 'if' → logprob: -3.5454866886138916
    3. ' if' → logprob: -4.1704864501953125
    4. ' ' → logprob: -9.670486450195312
    5. 'j' → logprob: -10.295486450195312
    6. '  ' → logprob: -10.420486450195312
    7. '       ' → logprob: -10.920486450195312
    8. ' j' → logprob: -11.545486450195312
    9. '#' → logprob: -12.545486450195312
    10. 'for' → logprob: -12.545486450195312

Token 546: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.015600936487317085
    2. ' i' → logprob: -4.64060115814209
    3. ' in' → logprob: -6.01560115814209
    4. 'range' → logprob: -6.51560115814209
    5. 'for' → logprob: -7.01560115814209
    6. 'in' → logprob: -7.89060115814209
    7. ' range' → logprob: -8.14060115814209
    8. ' for' → logprob: -8.39060115814209
    9. '0' → logprob: -10.14060115814209
    10. '   ' → logprob: -10.64060115814209

Token 547: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09128763526678085
    2. 'in' → logprob: -3.216287612915039
    3. ' +=' → logprob: -3.716287612915039
    4. '+' → logprob: -4.591287612915039
    5. '+=' → logprob: -4.841287612915039
    6. ')' → logprob: -5.716287612915039
    7. '   ' → logprob: -7.591287612915039
    8. ',' → logprob: -7.716287612915039
    9. '=' → logprob: -9.091287612915039
    10. ' +' → logprob: -9.466287612915039

Token 548: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3816796839237213
    2. 'in' → logprob: -1.256679654121399
    3. ',' → logprob: -4.131679534912109
    4. '+' → logprob: -5.131679534912109
    5. '   ' → logprob: -5.256679534912109
    6. 'for' → logprob: -6.131679534912109
    7. '+=' → logprob: -6.131679534912109
    8. ' +=' → logprob: -7.506679534912109
    9. ' for' → logprob: -8.50667953491211
    10. ':' → logprob: -9.38167953491211

Token 549: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019143566489219666
    2. ' ' → logprob: -4.019143581390381
    3. ' range' → logprob: -7.394143581390381
    4. 'range' → logprob: -7.894143581390381
    5. ' i' → logprob: -13.144143104553223
    6. ' H' → logprob: -13.769143104553223
    7. 'H' → logprob: -14.019143104553223
    8. 'i' → logprob: -14.269143104553223
    9. '(' → logprob: -15.144143104553223
    10. ' ' → logprob: -15.894143104553223

Token 550: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.429896944202483e-05
    2. ' ' → logprob: -10.125043869018555
    3. 'range' → logprob: -12.500043869018555
    4. ' range' → logprob: -14.750043869018555
    5. '(' → logprob: -19.125043869018555
    6. '00' → logprob: -20.750043869018555
    7. 'H' → logprob: -21.250043869018555
    8. '۰' → logprob: -22.250043869018555
    9. '```' → logprob: -22.250043869018555
    10. '   ' → logprob: -22.500043869018555

Token 551: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004460504744201899
    2. ' +' → logprob: -6.004460334777832
    3. ' à' → logprob: -7.379460334777832
    4. ' to' → logprob: -7.379460334777832
    5. ',' → logprob: -7.629460334777832
    6. 'to' → logprob: -9.379460334777832
    7. '1' → logprob: -9.754460334777832
    8. 'à' → logprob: -10.629460334777832
    9. ' jusqu' → logprob: -11.379460334777832
    10. '+i' → logprob: -11.504460334777832

Token 552: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00043126524542458355
    2. ' H' → logprob: -7.750431060791016
    3. ' ' → logprob: -15.125431060791016
    4. '   ' → logprob: -15.500431060791016
    5. '(H' → logprob: -16.125431060791016
    6. 'W' → logprob: -17.000431060791016
    7. '  ' → logprob: -17.750431060791016
    8. ' (' → logprob: -19.750431060791016
    9. '    ' → logprob: -20.000431060791016
    10. '	H' → logprob: -20.250431060791016

Token 553: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004827273078262806
    2. ' -' → logprob: -5.379827499389648
    3. '+' → logprob: -9.379827499389648
    4. '1' → logprob: -10.004827499389648
    5. ':' → logprob: -10.379827499389648
    6. '   ' → logprob: -10.504827499389648
    7. '):
' → logprob: -11.504827499389648
    8. '):' → logprob: -12.129827499389648
    9. ' ' → logprob: -13.754827499389648
    10. '```' → logprob: -14.879827499389648

Token 554: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004908377304673195
    2. '2' → logprob: -7.625490665435791
    3. ' ' → logprob: -13.37549114227295
    4. '-' → logprob: -13.75049114227295
    5. '```' → logprob: -15.75049114227295
    6. '   ' → logprob: -16.000490188598633
    7. '
' → logprob: -17.625490188598633
    8. '１' → logprob: -18.812990188598633
    9. '۱' → logprob: -19.062990188598633
    10. '`' → logprob: -19.250490188598633

Token 555: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001213210285641253
    2. ' if' → logprob: -7.626213073730469
    3. 'if' → logprob: -7.751213073730469
    4. ':' → logprob: -8.501213073730469
    5. ':
' → logprob: -10.126213073730469
    6. ' ' → logprob: -11.251213073730469
    7. '  ' → logprob: -11.751213073730469
    8. 'j' → logprob: -12.251213073730469
    9. 'for' → logprob: -12.501213073730469
    10. '```' → logprob: -12.501213073730469

Token 556: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.5120287066092715e-05
    2. 'if' → logprob: -10.875035285949707
    3. ' if' → logprob: -12.125035285949707
    4. 'for' → logprob: -12.125035285949707
    5. '```' → logprob: -12.625035285949707
    6. '   ' → logprob: -14.125035285949707
    7. 'j' → logprob: -14.625035285949707
    8. ' for' → logprob: -14.625035285949707
    9. '       ' → logprob: -16.12503433227539
    10. '	if' → logprob: -17.75003433227539

Token 557: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.260724812746048
    2. 'if' → logprob: -1.5107247829437256
    3. ' if' → logprob: -4.760725021362305
    4. '       ' → logprob: -9.010725021362305
    5. '#' (adapté à ' #') → logprob: -10.385725021362305
    6. 'j' → logprob: -10.760725021362305
    7. ' ' → logprob: -11.385725021362305
    8. '	if' → logprob: -11.885725021362305
    9. '  ' → logprob: -13.385725021362305
    10. '```' → logprob: -13.635725021362305

Token 558: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00019936825265176594
    2. '   ' → logprob: -9.000199317932129
    3. ' if' → logprob: -9.625199317932129
    4. '       ' → logprob: -11.750199317932129
    5. 'If' → logprob: -14.000199317932129
    6. '```' → logprob: -14.250199317932129
    7. 'j' → logprob: -15.375199317932129
    8. '           ' → logprob: -15.875199317932129
    9. '#' → logprob: -16.125200271606445
    10. '	if' → logprob: -16.750200271606445

Token 559: ' la' (ID: 557)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.25193464756011963
    2. 'a' → logprob: -1.5019346475601196
    3. '(a' → logprob: -13.251935005187988
    4. ' ' → logprob: -13.376935005187988
    5. ' ' → logprob: -14.001935005187988
    6. '	a' → logprob: -14.126935005187988
    7. '   ' → logprob: -15.126935005187988
    8. '#a' → logprob: -16.626934051513672
    9. '[a' → logprob: -16.876934051513672
    10. '    ' → logprob: -17.439434051513672

Token 560: ' dernière' (ID: 39497)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012509655207395554
    2. ' a' → logprob: -4.387509822845459
    3. '	a' → logprob: -17.387510299682617
    4. ' ' → logprob: -17.512510299682617
    5. '#a' → logprob: -18.137510299682617
    6. '(a' → logprob: -18.262510299682617
    7. ' ' → logprob: -18.887510299682617
    8. '#' → logprob: -19.262510299682617
    9. '```' → logprob: -19.637510299682617
    10. 'ans' → logprob: -19.950010299682617

Token 561: ' case' (ID: 1890)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.74908047914505
    2. 'col' → logprob: -0.87408047914505
    3. ' colonne' → logprob: -2.4990804195404053
    4. ' a' → logprob: -3.7490804195404053
    5. 'column' → logprob: -6.249080657958984
    6. ' col' → logprob: -7.124080657958984
    7. 'case' → logprob: -7.999080657958984
    8. '   ' → logprob: -8.124080657958984
    9. 'colon' → logprob: -8.374080657958984
    10. ' ' → logprob: -8.999080657958984

Token 562: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03170312941074371
    2. ' a' → logprob: -3.656703233718872
    3. '   ' → logprob: -5.531702995300293
    4. '[a' → logprob: -7.156702995300293
    5. ' à' → logprob: -8.906702995300293
    6. ' de' → logprob: -9.281702995300293
    7. 'dans' → logprob: -9.281702995300293
    8. '[i' → logprob: -9.531702995300293
    9. ' [' → logprob: -9.656702995300293
    10. 'de' → logprob: -9.906702995300293

Token 563: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01643560454249382
    2. ' a' → logprob: -4.141435623168945
    3. 'la' → logprob: -8.516435623168945
    4. ' la' → logprob: -8.641435623168945
    5. 'i' → logprob: -11.766435623168945
    6. '   ' → logprob: -13.141435623168945
    7. ' ' → logprob: -13.266435623168945
    8. 'range' → logprob: -13.266435623168945
    9. 'the' → logprob: -13.391435623168945
    10. 'l' → logprob: -13.391435623168945

Token 564: ' ligne' (ID: 19583)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.041045304387807846
    2. 'ligne' → logprob: -3.5410451889038086
    3. 'i' → logprob: -4.791045188903809
    4. ' a' → logprob: -6.416045188903809
    5. 'range' → logprob: -7.291045188903809
    6. ' ligne' → logprob: -8.416045188903809
    7. '[i' → logprob: -8.791045188903809
    8. ' i' → logprob: -10.041045188903809
    9. 'gr' → logprob: -10.166045188903809
    10. 'l' → logprob: -10.291045188903809

Token 565: ' cour' (ID: 2871)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12025512754917145
    2. ' a' → logprob: -2.3702552318573
    3. '[i' → logprob: -4.370254993438721
    4. '[a' → logprob: -5.870254993438721
    5. '   ' → logprob: -6.120254993438721
    6. 'i' → logprob: -7.370254993438721
    7. ' [' → logprob: -7.745254993438721
    8. ' à' → logprob: -7.995254993438721
    9. '[j' → logprob: -8.620255470275879
    10. '[' → logprob: -9.120255470275879

Token 566: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.050352055579423904
    2. '[i' → logprob: -3.300352096557617
    3. 'i' → logprob: -5.050352096557617
    4. 'ente' → logprob: -5.675352096557617
    5. 'ant' → logprob: -6.925352096557617
    6. 'nte' → logprob: -7.550352096557617
    7. '(i' → logprob: -8.300352096557617
    8. '   ' → logprob: -8.800352096557617
    9. 'inte' → logprob: -9.800352096557617
    10. '=i' → logprob: -9.800352096557617

Token 567: ' est' (ID: 893)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17701341211795807
    2. ' a' → logprob: -2.052013397216797
    3. '   ' → logprob: -4.427013397216797
    4. ' est' → logprob: -5.802013397216797
    5. ',' → logprob: -6.052013397216797
    6. ' has' → logprob: -6.177013397216797
    7. '[' → logprob: -6.552013397216797
    8. ' is' → logprob: -6.552013397216797
    9. '][' → logprob: -6.677013397216797
    10. ']' → logprob: -6.677013397216797

Token 568: ' imp' (ID: 3282)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.020302796736359596
    2. ' a' → logprob: -4.395302772521973
    3. 'imp' → logprob: -5.395302772521973
    4. ' imp' → logprob: -6.270302772521973
    5. 'im' → logprob: -6.645302772521973
    6. ' impar' → logprob: -11.895302772521973
    7. ' impair' → logprob: -11.895302772521973
    8. '[a' → logprob: -12.520302772521973
    9. 'odd' → logprob: -12.645302772521973
    10. '(a' → logprob: -12.895302772521973

Token 569: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.2943241000175476
    2. 'air' → logprob: -2.2943241596221924
    3. 'are' → logprob: -2.5443241596221924
    4. 'a' → logprob: -3.0443241596221924
    5. 'ar' → logprob: -3.7943241596221924
    6. '   ' → logprob: -6.169323921203613
    7. '%' → logprob: -7.044323921203613
    8. 'aie' → logprob: -7.544323921203613
    9. 'airs' → logprob: -8.294323921203613
    10. 'ares' → logprob: -8.419323921203613

Token 570: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07693807035684586
    2. ' if' → logprob: -3.3269381523132324
    3. '       ' → logprob: -3.4519381523132324
    4. 'if' → logprob: -5.576938152313232
    5. ':' → logprob: -6.576938152313232
    6. ',' → logprob: -7.826938152313232
    7. ':
' → logprob: -8.076937675476074
    8. '```' → logprob: -8.326937675476074
    9. ' and' → logprob: -8.576937675476074
    10. '<|end|>' → logprob: -10.701937675476074

Token 571: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010251791216433048
    2. 'if' → logprob: -5.010251998901367
    3. ' if' → logprob: -5.760251998901367
    4. '       ' → logprob: -7.885251998901367
    5. '```' → logprob: -12.635251998901367
    6. '	if' → logprob: -16.135251998901367
    7. '   ' → logprob: -17.010251998901367
    8. ',' → logprob: -17.135251998901367
    9. ' ' → logprob: -17.135251998901367
    10. '  ' → logprob: -17.385251998901367

Token 572: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11358896642923355
    2. '   ' → logprob: -2.36358904838562
    3. ' if' → logprob: -4.363588809967041
    4. '       ' → logprob: -7.488588809967041
    5. '	if' → logprob: -14.4885892868042
    6. '```' → logprob: -14.8635892868042
    7. ' ' → logprob: -16.113588333129883
    8. 'If' → logprob: -16.738588333129883
    9. '  ' → logprob: -17.363588333129883
    10. '    ' → logprob: -17.488588333129883

Token 573: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20141959190368652
    2. ' a' → logprob: -1.7014195919036865
    3. '   ' → logprob: -12.451419830322266
    4. '(a' → logprob: -13.576419830322266
    5. '	a' → logprob: -14.076419830322266
    6. ' ' → logprob: -15.451419830322266
    7. '[a' → logprob: -17.201419830322266
    8. '    ' → logprob: -17.701419830322266
    9. '_a' → logprob: -17.951419830322266
    10. ' ' → logprob: -17.951419830322266

Token 574: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.392202976712724e-06
    2. ' [' → logprob: -12.875006675720215
    3. '[' → logprob: -13.125006675720215
    4. 'i' → logprob: -14.250006675720215
    5. '[I' → logprob: -14.625006675720215
    6. '```' → logprob: -15.000006675720215
    7. '[a' → logprob: -17.3750057220459
    8. '[
' → logprob: -17.3750057220459
    9. ')[' → logprob: -17.6250057220459
    10. 'a' → logprob: -17.6250057220459

Token 575: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07911968231201172
    2. '][-' → logprob: -2.5791196823120117
    3. '[-' → logprob: -8.829119682312012
    4. ']' → logprob: -10.579119682312012
    5. '[' → logprob: -10.829119682312012
    6. ' ][' → logprob: -10.954119682312012
    7. '[i' → logprob: -11.329119682312012
    8. '][:' → logprob: -13.704119682312012
    9. '```' → logprob: -14.079119682312012
    10. '#' → logprob: -14.079119682312012

Token 576: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0036469954065978527
    2. '-' → logprob: -5.8786468505859375
    3. '-W' → logprob: -7.6286468505859375
    4. ' W' → logprob: -8.753646850585938
    5. '(W' → logprob: -8.878646850585938
    6. '   ' → logprob: -10.628646850585938
    7. ' ' → logprob: -12.003646850585938
    8. 'j' → logprob: -12.378646850585938
    9. ' -' → logprob: -12.503646850585938
    10. '[' → logprob: -12.628646850585938

Token 577: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00017910730093717575
    2. ' -' → logprob: -8.875179290771484
    3. '1' → logprob: -10.375179290771484
    4. '][' → logprob: -12.500179290771484
    5. '[' → logprob: -13.125179290771484
    6. '[-' → logprob: -14.250179290771484
    7. '−' → logprob: -14.875179290771484
    8. '   ' → logprob: -15.125179290771484
    9. ']' → logprob: -15.250179290771484
    10. '```' → logprob: -15.625179290771484

Token 578: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.125006675720215
    3. '```' → logprob: -14.937506675720215
    4. ']' → logprob: -15.062506675720215
    5. '   ' → logprob: -15.687506675720215
    6. '2' → logprob: -16.31250762939453
    7. '`' → logprob: -17.62500762939453
    8. '11' → logprob: -17.75000762939453
    9. '１' → logprob: -17.81250762939453
    10. '۱' → logprob: -17.87500762939453

Token 579: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4886924624443054
    2. '%' → logprob: -0.9886924624443054
    3. ' %' → logprob: -4.613692283630371
    4. ')' → logprob: -5.738692283630371
    5. ']%' → logprob: -6.988692283630371
    6. '}' → logprob: -8.113692283630371
    7. ' ]' → logprob: -9.113692283630371
    8. ')%' → logprob: -11.363692283630371
    9. '```' → logprob: -11.863692283630371
    10. ' )' → logprob: -12.613692283630371

Token 580: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4740796387195587
    2. '%' → logprob: -0.9740796089172363
    3. ')' → logprob: -14.349080085754395
    4. ' ' → logprob: -14.599080085754395
    5. '```' → logprob: -14.724080085754395
    6. ' ' → logprob: -14.849080085754395
    7. '   ' → logprob: -15.974080085754395
    8. ' %
' → logprob: -16.099079132080078
    9. '[' → logprob: -16.349079132080078
    10. '
' → logprob: -16.474079132080078

Token 581: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008061755215749145
    2. ' ' → logprob: -7.1258063316345215
    3. '```' → logprob: -13.875805854797363
    4. '==' → logprob: -15.000805854797363
    5. '   ' → logprob: -15.125805854797363
    6. '  ' → logprob: -16.50080680847168
    7. '=' → logprob: -17.56330680847168
    8. '``' → logprob: -17.87580680847168
    9. '>' → logprob: -18.06330680847168
    10. '۲' → logprob: -18.06330680847168

Token 582: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2246291337069124e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -14.875021934509277
    4. '   ' → logprob: -15.687521934509277
    5. '==' → logprob: -16.250022888183594
    6. '  ' → logprob: -17.187522888183594
    7. '=' → logprob: -17.687522888183594
    8. '۲' → logprob: -17.812522888183594
    9. '２' → logprob: -18.312522888183594
    10. '२' → logprob: -18.437522888183594

Token 583: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11289439350366592
    2. ' ==' → logprob: -2.237894296646118
    3. '!=' → logprob: -10.987894058227539
    4. ')==' → logprob: -11.237894058227539
    5. '1' → logprob: -11.362894058227539
    6. ']==' → logprob: -12.112894058227539
    7. '()==' → logprob: -12.112894058227539
    8. '```' → logprob: -12.362894058227539
    9. '==
' → logprob: -12.487894058227539
    10. '=' → logprob: -12.487894058227539

Token 584: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034774013329297304
    2. '2' → logprob: -8.125348091125488
    3. ' ' → logprob: -9.875348091125488
    4. '   ' → logprob: -16.000347137451172
    5. '```' → logprob: -16.125347137451172
    6. '==' → logprob: -17.625347137451172
    7. '0' → logprob: -18.375347137451172
    8. '  ' → logprob: -18.500347137451172
    9. '>' → logprob: -19.125347137451172
    10. '=' → logprob: -19.375347137451172

Token 585: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.968312951968983e-06
    2. ' ' → logprob: -11.750009536743164
    3. '2' → logprob: -13.125009536743164
    4. '   ' → logprob: -18.125009536743164
    5. '```' → logprob: -18.500009536743164
    6. '==' → logprob: -19.375009536743164
    7. '0' → logprob: -19.500009536743164
    8. '>' → logprob: -20.062509536743164
    9. '!=' → logprob: -20.187509536743164
    10. '  ' → logprob: -20.312509536743164

Token 586: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3874519467353821
    2. ':' → logprob: -1.1374518871307373
    3. '       ' → logprob: -7.637452125549316
    4. '   ' → logprob: -9.387452125549316
    5. ':

' → logprob: -12.387452125549316
    6. '           ' → logprob: -12.637452125549316
    7. '):
' → logprob: -12.887452125549316
    8. ',' → logprob: -13.637452125549316
    9. ' :
' → logprob: -14.012452125549316
    10. '```' → logprob: -14.137452125549316

Token 587: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008004573755897582
    2. 'ans' → logprob: -7.625800609588623
    3. '           ' → logprob: -8.125800132751465
    4. ' ans' → logprob: -11.750800132751465
    5. '   ' → logprob: -12.125800132751465
    6. '```' → logprob: -13.500800132751465
    7. '	ans' → logprob: -13.500800132751465
    8. '#' → logprob: -16.12580108642578
    9. '(ans' → logprob: -16.37580108642578
    10. '      ' → logprob: -16.62580108642578

Token 588: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.19788281619548798
    2. '       ' → logprob: -2.197882890701294
    3. '           ' → logprob: -2.697882890701294
    4. ' ans' → logprob: -7.322882652282715
    5. '   ' → logprob: -7.822882652282715
    6. '	ans' → logprob: -9.822882652282715
    7. '#' (adapté à ' #') → logprob: -10.822882652282715
    8. 'answer' → logprob: -12.072882652282715
    9. '```' → logprob: -13.072882652282715
    10. '(ans' → logprob: -13.572882652282715

Token 589: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.012122259475290775
    2. '       ' → logprob: -4.51212215423584
    3. '           ' → logprob: -7.38712215423584
    4. ' ans' → logprob: -8.01212215423584
    5. '   ' → logprob: -9.13712215423584
    6. '	ans' → logprob: -11.38712215423584
    7. 'answer' → logprob: -12.76212215423584
    8. '(ans' → logprob: -14.26212215423584
    9. ' ' → logprob: -15.26212215423584
    10. '#' → logprob: -15.38712215423584

Token 590: ' effect' (ID: 3159)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0022000980097800493
    2. 'append' → logprob: -6.252200126647949
    3. ' ans' → logprob: -8.75220012664795
    4. '           ' → logprob: -10.00220012664795
    5. 'app' → logprob: -10.87720012664795
    6. '.append' → logprob: -10.87720012664795
    7. '#' → logprob: -11.12720012664795
    8. '```' → logprob: -12.62720012664795
    9. 'ann' → logprob: -12.87720012664795
    10. '	ans' → logprob: -13.00220012664795

Token 591: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -2.534558552724775e-05
    2. 'u' → logprob: -11.000025749206543
    3. 'uer' → logprob: -13.375025749206543
    4. 'ua' → logprob: -13.500025749206543
    5. 'uate' → logprob: -13.625025749206543
    6. 'uera' → logprob: -13.875025749206543
    7. 'ué' → logprob: -14.000025749206543
    8. 'e' → logprob: -14.125025749206543
    9. 'uez' → logprob: -14.375025749206543
    10. 'ues' → logprob: -14.625025749206543

Token 592: ' une' (ID: 2463)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06348217278718948
    2. 'l' → logprob: -3.5634822845458984
    3. ' ans' → logprob: -4.063482284545898
    4. '   ' → logprob: -4.688482284545898
    5. 'une' → logprob: -5.938482284545898
    6. ' l' → logprob: -6.688482284545898
    7. ' une' → logprob: -6.813482284545898
    8. '[' → logprob: -7.438482284545898
    9. 'la' → logprob: -8.188482284545898
    10. '       ' → logprob: -8.313482284545898

Token 593: ' opération' (ID: 86023)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20377811789512634
    2. 'op' → logprob: -2.453778028488159
    3. 'dé' → logprob: -2.828778028488159
    4. 'operation' → logprob: -3.453778028488159
    5. ' déplacement' → logprob: -6.203778266906738
    6. 'de' → logprob: -6.828778266906738
    7. 'append' → logprob: -7.078778266906738
    8. ' ans' → logprob: -7.203778266906738
    9. ' opération' → logprob: -7.578778266906738
    10. 'move' → logprob: -7.953778266906738

Token 594: ' de' (ID: 334)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5016577243804932
    2. '           ' → logprob: -1.3766577243804932
    3. ' ans' → logprob: -2.376657724380493
    4. '       ' → logprob: -3.126657724380493
    5. '.append' → logprob: -6.251657485961914
    6. '(ans' → logprob: -6.626657485961914
    7. '[' → logprob: -6.751657485961914
    8. ' =' → logprob: -7.876657485961914
    9. '=' → logprob: -9.001657485961914
    10. ',' → logprob: -9.376657485961914

Token 595: ' transfert' (ID: 127549)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.1604911834001541
    2. 'trans' → logprob: -2.2854912281036377
    3. ' déplacement' → logprob: -3.5354912281036377
    4. '[' → logprob: -4.660490989685059
    5. 'ans' → logprob: -6.160490989685059
    6. 'aj' → logprob: -6.535490989685059
    7. 'd' → logprob: -6.660490989685059
    8. 'de' → logprob: -7.160490989685059
    9. 'pass' → logprob: -7.660490989685059
    10. 'transfer' → logprob: -8.035490989685059

Token 596: ' vers' (ID: 3640)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8192347884178162
    2. 'ans' → logprob: -0.8192347884178162
    3. '           ' → logprob: -2.444234848022461
    4. ' ans' → logprob: -3.569234848022461
    5. '[' → logprob: -6.319234848022461
    6. '   ' → logprob: -6.944234848022461
    7. '(ans' → logprob: -8.069234848022461
    8. ',' → logprob: -9.069234848022461
    9. '	ans' → logprob: -9.569234848022461
    10. '.append' → logprob: -9.944234848022461

Token 597: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.503350555896759
    2. '[i' → logprob: -1.2533504962921143
    3. '(i' → logprob: -3.0033504962921143
    4. ' i' → logprob: -3.7533504962921143
    5. 'l' → logprob: -4.003350734710693
    6. '   ' → logprob: -5.253350734710693
    7. ' (' → logprob: -5.253350734710693
    8. ' la' → logprob: -5.503350734710693
    9. 'la' → logprob: -6.378350734710693
    10. ' [' → logprob: -7.378350734710693

Token 598: ' case' (ID: 1890)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.04593508690595627
    2. 'case' → logprob: -3.1709351539611816
    3. 'l' → logprob: -6.670935153961182
    4. 'i' → logprob: -6.670935153961182
    5. ' ligne' → logprob: -8.795934677124023
    6. 'lig' → logprob: -8.920934677124023
    7. 'pro' → logprob: -11.045934677124023
    8. ' case' → logprob: -11.295934677124023
    9. 'cell' → logprob: -11.420934677124023
    10. '(i' → logprob: -11.420934677124023

Token 599: ' du' (ID: 1462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.049180977046489716
    2. ' suivante' → logprob: -3.7991809844970703
    3. 'i' → logprob: -4.04918098449707
    4. '(i' → logprob: -5.29918098449707
    5. '   ' → logprob: -6.79918098449707
    6. '[(' → logprob: -7.29918098449707
    7. 'su' → logprob: -7.42418098449707
    8. '[' → logprob: -8.29918098449707
    9. ' suivant' → logprob: -9.17418098449707
    10. ' [' → logprob: -9.29918098449707

Token 600: ' dessous' (ID: 120954)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023968864232301712
    2. 'ligne' → logprob: -4.023968696594238
    3. 'bas' → logprob: -6.398968696594238
    4. 'l' → logprob: -6.898968696594238
    5. ' dessous' → logprob: -6.898968696594238
    6. '(i' → logprob: -7.523968696594238
    7. 'a' → logprob: -8.273968696594238
    8. '[i' → logprob: -8.273968696594238
    9. ' i' → logprob: -8.273968696594238
    10. '
' → logprob: -8.523968696594238

Token 601: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026087139267474413
    2. '           ' → logprob: -6.502608776092529
    3. 'ans' → logprob: -6.877608776092529
    4. ' ans' → logprob: -9.627608299255371
    5. '   ' → logprob: -12.377608299255371
    6. '	ans' → logprob: -13.127608299255371
    7. '```' → logprob: -13.252608299255371
    8. '(ans' → logprob: -14.877608299255371
    9. ',' → logprob: -15.127608299255371
    10. '      ' → logprob: -15.877608299255371

Token 602: 'm' (ID: 76)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009026461048051715
    2. ' i' → logprob: -7.3759026527404785
    3. '       ' → logprob: -9.12590217590332
    4. '[i' → logprob: -9.75090217590332
    5. '           ' → logprob: -9.87590217590332
    6. '   ' → logprob: -10.62590217590332
    7. 'ans' → logprob: -11.25090217590332
    8. 'a' → logprob: -12.12590217590332
    9. ')' → logprob: -12.37590217590332
    10. '(i' → logprob: -12.75090217590332

Token 603: 'ême' (ID: 7961)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009581365622580051
    2. '[i' → logprob: -4.884581565856934
    3. ',i' → logprob: -7.509581565856934
    4. '   ' → logprob: -7.634581565856934
    5. ',' → logprob: -7.759581565856934
    6. '(i' → logprob: -8.259581565856934
    7. 'oves' → logprob: -10.384581565856934
    8. ']' → logprob: -10.384581565856934
    9. '=i' → logprob: -10.509581565856934
    10. 'a' → logprob: -10.634581565856934

Token 604: ' colonne' (ID: 148275)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.976922744186595e-05
    2. ' i' → logprob: -10.875040054321289
    3. 'col' → logprob: -11.000040054321289
    4. 'ligne' → logprob: -14.250040054321289
    5. '[i' → logprob: -14.250040054321289
    6. ',' → logprob: -14.500040054321289
    7. 'column' → logprob: -14.625040054321289
    8. 'j' → logprob: -14.750040054321289
    9. 'indice' → logprob: -15.000040054321289
    10. '   ' → logprob: -15.125040054321289

Token 605: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9238067269325256
    2. '       ' → logprob: -1.4238066673278809
    3. ')' → logprob: -2.173806667327881
    4. ',' → logprob: -2.173806667327881
    5. '[i' → logprob: -2.423806667327881
    6. '),' → logprob: -4.048806667327881
    7. ')
' → logprob: -4.923806667327881
    8. 'ans' → logprob: -5.173806667327881
    9. '   ' → logprob: -6.048806667327881
    10. '):' → logprob: -6.048806667327881

Token 606: ' ligne' (ID: 19583)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.050876419991254807
    2. ' i' → logprob: -3.3008763790130615
    3. 'j' → logprob: -4.425876617431641
    4. '   ' → logprob: -7.675876617431641
    5. ' j' → logprob: -8.17587661743164
    6. '    ' → logprob: -10.67587661743164
    7. ' ' → logprob: -12.55087661743164
    8. ')' → logprob: -12.55087661743164
    9. '       ' → logprob: -12.92587661743164
    10. 'a' → logprob: -13.05087661743164

Token 607: ' suivante' (ID: 107439)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03952423855662346
    2. '   ' → logprob: -4.039524078369141
    3. '+' → logprob: -4.164524078369141
    4. ' i' → logprob: -5.414524078369141
    5. '+i' → logprob: -7.289524078369141
    6. ' +' → logprob: -8.53952407836914
    7. '[i' → logprob: -8.91452407836914
    8. '=i' → logprob: -9.41452407836914
    9. '       ' → logprob: -11.03952407836914
    10. ')' → logprob: -11.78952407836914

Token 608: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3903101682662964
    2. ')
' → logprob: -1.3903101682662964
    3. '       ' → logprob: -1.5153101682662964
    4. ')' → logprob: -1.6403101682662964
    5. 'ans' → logprob: -3.515310287475586
    6. '[i' → logprob: -4.390310287475586
    7. '),' → logprob: -4.515310287475586
    8. ',' → logprob: -4.765310287475586
    9. 'i' → logprob: -5.015310287475586
    10. ' ans' → logprob: -5.265310287475586

Token 609: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004099177662283182
    2. '           ' → logprob: -5.754099369049072
    3. 'ans' → logprob: -7.004099369049072
    4. '```' → logprob: -11.754098892211914
    5. ' ans' → logprob: -12.754098892211914
    6. '   ' → logprob: -13.504098892211914
    7. '               ' → logprob: -16.004098892211914
    8. 'answer' → logprob: -16.129098892211914
    9. '	ans' → logprob: -16.379098892211914
    10. '``' → logprob: -16.629098892211914

Token 610: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.03876055032014847
    2. '       ' → logprob: -3.5387606620788574
    3. '           ' → logprob: -4.788760662078857
    4. ' ans' → logprob: -7.538760662078857
    5. '   ' → logprob: -9.1637601852417
    6. '	ans' → logprob: -12.0387601852417
    7. 'answer' → logprob: -14.1637601852417
    8. ' ' → logprob: -14.2887601852417
    9. '               ' → logprob: -14.4137601852417
    10. '(ans' → logprob: -14.5387601852417

Token 611: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.796184723294573e-06
    2. '.' → logprob: -12.500005722045898
    3. 'append' → logprob: -13.750005722045898
    4. ' .' → logprob: -14.500005722045898
    5. '.app' → logprob: -15.000005722045898
    6. ').' → logprob: -17.8750057220459
    7. '.ap' → logprob: -18.0000057220459
    8. '   ' → logprob: -18.3750057220459
    9. '
' → logprob: -18.3750057220459
    10. '].' → logprob: -18.3750057220459

Token 612: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -3.5597102396423e-05
    2. '[i' → logprob: -10.250035285949707
    3. '(' → logprob: -16.500036239624023
    4. '[' → logprob: -17.375036239624023
    5. '(i' → logprob: -18.500036239624023
    6. '((' → logprob: -18.875036239624023
    7. ' ([' → logprob: -19.125036239624023
    8. '[a' → logprob: -19.125036239624023
    9. '([
' → logprob: -19.375036239624023
    10. '```' → logprob: -19.500036239624023

Token 613: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.511406809295295e-06
    2. ' i' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.625006675720215
    4. '[i' → logprob: -16.0000057220459
    5. '(i' → logprob: -17.3750057220459
    6. '{i' → logprob: -18.0000057220459
    7. '	i' → logprob: -18.7500057220459
    8. ',i' → logprob: -20.2500057220459
    9. ')i' → logprob: -20.7500057220459
    10. '_i' → logprob: -21.8750057220459

Token 614: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.176947600673884e-05
    2. ' +' → logprob: -10.750021934509277
    3. '1' → logprob: -15.500021934509277
    4. '＋' → logprob: -17.37502098083496
    5. '+
' → logprob: -18.00002098083496
    6. '+i' → logprob: -18.75002098083496
    7. '[' → logprob: -19.50002098083496
    8. '<|end|>' → logprob: -19.50002098083496
    9. '+,' → logprob: -19.75002098083496
    10. '()+' → logprob: -19.87502098083496

Token 615: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. '2' → logprob: -12.500003814697266
    3. ' ' → logprob: -14.750003814697266
    4. '+' → logprob: -18.750003814697266
    5. '   ' → logprob: -18.875003814697266
    6. '```' → logprob: -18.875003814697266
    7. '１' → logprob: -21.437503814697266
    8. '<|end|>' → logprob: -21.625003814697266
    9. '  ' → logprob: -21.937503814697266
    10. '۱' → logprob: -22.312503814697266

Token 616: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011343709047650918
    2. ',W' → logprob: -9.750113487243652
    3. ' ,' → logprob: -10.125113487243652
    4. '+' → logprob: -11.625113487243652
    5. ',
' → logprob: -12.250113487243652
    6. 'W' → logprob: -14.875113487243652
    7. ',j' → logprob: -15.500113487243652
    8. '+,' → logprob: -15.875113487243652
    9. '[' → logprob: -16.375112533569336
    10. ' W' → logprob: -16.625112533569336

Token 617: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -5.5577775128767826e-06
    2. ' W' → logprob: -12.125005722045898
    3. '(W' → logprob: -17.8750057220459
    4. '   ' → logprob: -18.0000057220459
    5. '	W' → logprob: -18.7500057220459
    6. ',W' → logprob: -18.8750057220459
    7. '<W' → logprob: -19.3750057220459
    8. ' ' → logprob: -19.5000057220459
    9. '```' → logprob: -19.8750057220459
    10. '  ' → logprob: -19.8750057220459

Token 618: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039825115352869034
    2. '-' → logprob: -3.289825201034546
    3. ' ,' → logprob: -6.539824962615967
    4. '1' → logprob: -8.914825439453125
    5. '   ' → logprob: -9.164825439453125
    6. '+' → logprob: -10.914825439453125
    7. '[' → logprob: -11.039825439453125
    8. ' ' → logprob: -11.164825439453125
    9. ',i' → logprob: -11.164825439453125
    10. '```' → logprob: -11.914825439453125

Token 619: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00031019834568724036
    2. ' i' → logprob: -8.125309944152832
    3. '   ' → logprob: -11.250309944152832
    4. '(i' → logprob: -13.750309944152832
    5. '	i' → logprob: -16.50031089782715
    6. '  ' → logprob: -17.87531089782715
    7. '    ' → logprob: -18.12531089782715
    8. ' ' → logprob: -18.75031089782715
    9. '       ' → logprob: -18.75031089782715
    10. '[i' → logprob: -19.00031089782715

Token 620: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9266199160483666e-05
    2. ' +' → logprob: -11.000019073486328
    3. '+i' → logprob: -13.000019073486328
    4. '+A' → logprob: -15.875019073486328
    5. '+
' → logprob: -17.000019073486328
    6. '2' → logprob: -17.750019073486328
    7. '＋' → logprob: -18.000019073486328
    8. '()+' → logprob: -18.500019073486328
    9. '<|end|>' → logprob: -18.750019073486328
    10. ''+' → logprob: -18.875019073486328

Token 621: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.723352049040841e-06
    2. '+' → logprob: -12.500004768371582
    3. ' ' → logprob: -13.875004768371582
    4. '۲' → logprob: -17.250003814697266
    5. 'i' → logprob: -17.750003814697266
    6. '２' → logprob: -18.375003814697266
    7. '```' → logprob: -18.500003814697266
    8. ' +' → logprob: -18.875003814697266
    9. '   ' → logprob: -19.250003814697266
    10. '২' → logprob: -19.250003814697266

Token 622: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.750436007976532e-05
    2. ' ,' → logprob: -10.37503719329834
    3. 'W' → logprob: -12.37503719329834
    4. ',W' → logprob: -13.37503719329834
    5. ')' → logprob: -16.625038146972656
    6. ',
' → logprob: -16.750038146972656
    7. 'w' → logprob: -17.000038146972656
    8. '1' → logprob: -17.250038146972656
    9. '])' → logprob: -17.375038146972656
    10. ' W' → logprob: -17.625038146972656

Token 623: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0002613358374219388
    2. ' W' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.500261306762695
    4. ' ' → logprob: -17.750261306762695
    5. '  ' → logprob: -18.125261306762695
    6. '    ' → logprob: -18.875261306762695
    7. '     ' → logprob: -19.000261306762695
    8. '       ' → logprob: -19.875261306762695
    9. '	W' → logprob: -20.000261306762695
    10. '      ' → logprob: -21.000261306762695

Token 624: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.20151518285274506
    2. '])
' → logprob: -1.7015151977539062
    3. '])
' → logprob: -9.451515197753906
    4. ' ])' → logprob: -11.701515197753906
    5. '       ' → logprob: -12.576515197753906
    6. '])

' → logprob: -12.701515197753906
    7. ' ])
' → logprob: -12.951515197753906
    8. '   ' → logprob: -13.326515197753906
    9. ')' → logprob: -13.451515197753906
    10. ')
' → logprob: -13.951515197753906

Token 625: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38702645897865295
    2. '       ' → logprob: -1.1370264291763306
    3. ' a' → logprob: -9.3870267868042
    4. '   ' → logprob: -10.2620267868042
    5. '           ' → logprob: -10.5120267868042
    6. '
' → logprob: -13.1370267868042
    7. '```' → logprob: -13.1370267868042
    8. '	a' → logprob: -13.2620267868042
    9. '#a' → logprob: -14.1370267868042
    10. '#' → logprob: -14.1370267868042

Token 626: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12719088792800903
    2. '       ' → logprob: -2.1271908283233643
    3. ' a' → logprob: -8.377190589904785
    4. '   ' → logprob: -11.252190589904785
    5. '
' → logprob: -11.877190589904785
    6. '           ' → logprob: -11.877190589904785
    7. '```' → logprob: -13.377190589904785
    8. '#' → logprob: -14.002190589904785
    9. '        
' → logprob: -14.252190589904785
    10. '	a' → logprob: -14.377190589904785

Token 627: ' Toujours' (ID: 195641)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.8624639324116288e-06
    2. ' a' → logprob: -13.750001907348633
    3. '       ' → logprob: -14.375001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '           ' → logprob: -16.500001907348633
    6. '#' → logprob: -17.000001907348633
    7. '
' → logprob: -18.125001907348633
    8. '#a' → logprob: -19.250001907348633
    9. '	a' → logprob: -19.875001907348633
    10. '```' → logprob: -20.000001907348633

Token 628: ' indices' (ID: 30378)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11965899914503098
    2. '       ' → logprob: -2.244658946990967
    3. '           ' → logprob: -5.619658946990967
    4. ' a' → logprob: -5.994658946990967
    5. '#' → logprob: -8.369659423828125
    6. '```' → logprob: -8.494659423828125
    7. '   ' → logprob: -8.869659423828125
    8. '
' → logprob: -9.994659423828125
    9. '#a' → logprob: -10.369659423828125
    10. '	a' → logprob: -12.119659423828125

Token 629: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14357581734657288
    2. ' humains' → logprob: -3.39357590675354
    3. 'hum' → logprob: -3.76857590675354
    4. ' +' → logprob: -4.393575668334961
    5. 'i' → logprob: -4.643575668334961
    6. '<|end|>' → logprob: -4.643575668334961
    7. '[' → logprob: -4.768575668334961
    8. '1' → logprob: -5.018575668334961
    9. 'human' → logprob: -5.518575668334961
    10. ' humaines' → logprob: -5.643575668334961

Token 630: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.692145012086257e-05
    2. ' ' → logprob: -10.500046730041504
    3. '<|end|>' → logprob: -11.250046730041504
    4. '=' → logprob: -12.500046730041504
    5. '```' → logprob: -13.625046730041504
    6. '0' → logprob: -14.375046730041504
    7. '[' → logprob: -14.625046730041504
    8. '<|end|>' → logprob: -15.375046730041504
    9. '+' → logprob: -16.50004768371582
    10. '...' → logprob: -16.62504768371582

Token 631: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003728464711457491
    2. 'a' → logprob: -5.62872838973999
    3. ' a' → logprob: -9.128728866577148
    4. '   ' → logprob: -11.628728866577148
    5. '           ' → logprob: -13.003728866577148
    6. '<|end|>' → logprob: -13.378728866577148
    7. ',' → logprob: -13.753728866577148
    8. '	a' → logprob: -13.878728866577148
    9. '        
' → logprob: -14.003728866577148
    10. ',a' → logprob: -14.003728866577148

Token 632: ' affich' (ID: 90179)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0039100307039916515
    2. ' l' → logprob: -6.253910064697266
    3. 'aff' → logprob: -6.503910064697266
    4. 'i' → logprob: -8.628910064697266
    5. 'la' → logprob: -9.378910064697266
    6. 'le' → logprob: -9.503910064697266
    7. '1' → logprob: -10.253910064697266
    8. 'les' → logprob: -10.378910064697266
    9. 'hum' → logprob: -11.378910064697266
    10. ' i' → logprob: -11.628910064697266

Token 633: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.0008278522291220725
    2. 'ation' → logprob: -7.125827789306641
    3. 'ages' → logprob: -12.37582778930664
    4. ')' → logprob: -12.62582778930664
    5. 'ichage' → logprob: -12.87582778930664
    6. ' age' → logprob: -13.00082778930664
    7. 'er' → logprob: -13.00082778930664
    8. 'ge' → logprob: -13.62582778930664
    9. 'ager' → logprob: -13.62582778930664
    10. 'agement' → logprob: -13.75082778930664

Token 634: ' humain' (ID: 100082)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06302919238805771
    2. '       ' → logprob: -2.8130292892456055
    3. ' a' → logprob: -6.9380292892456055
    4. '   ' → logprob: -9.563029289245605
    5. '
' → logprob: -12.188029289245605
    6. '```' → logprob: -12.188029289245605
    7. '           ' → logprob: -12.563029289245605
    8. '	a' → logprob: -12.813029289245605
    9. '        
' → logprob: -13.063029289245605
    10. '``' → logprob: -14.563029289245605

Token 635: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10097581148147583
    2. '       ' → logprob: -2.350975751876831
    3. ' a' → logprob: -7.22597599029541
    4. '   ' → logprob: -11.10097599029541
    5. '```' → logprob: -11.10097599029541
    6. '           ' → logprob: -12.35097599029541
    7. '``' → logprob: -13.22597599029541
    8. '
' → logprob: -13.47597599029541
    9. '#' → logprob: -13.47597599029541
    10. '	a' → logprob: -14.10097599029541

Token 636: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07925338298082352
    2. '       ' → logprob: -2.5792534351348877
    3. ' a' → logprob: -8.329253196716309
    4. '   ' → logprob: -9.704253196716309
    5. '```' → logprob: -9.954253196716309
    6. '           ' → logprob: -12.579253196716309
    7. '``' → logprob: -12.704253196716309
    8. '	a' → logprob: -12.829253196716309
    9. '
' → logprob: -13.329253196716309
    10. '        
' → logprob: -13.954253196716309

Token 637: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.512236498361744e-07
    2. ' a' → logprob: -14.625000953674316
    3. '   ' → logprob: -17.125
    4. '       ' → logprob: -17.25
    5. '           ' → logprob: -19.375
    6. '#' (adapté à ' #') → logprob: -21.25
    7. '```' → logprob: -21.875
    8. '	a' → logprob: -22.25
    9. '#a' → logprob: -23.25
    10. '
' → logprob: -24.25

Token 638: ' On' (ID: 2160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3856492842023727e-06
    2. ' a' → logprob: -13.750000953674316
    3. '       ' → logprob: -15.625000953674316
    4. '   ' → logprob: -16.000001907348633
    5. '           ' → logprob: -17.875001907348633
    6. '#' → logprob: -21.375001907348633
    7. '	a' → logprob: -21.625001907348633
    8. ' ' → logprob: -22.125001907348633
    9. '        
' → logprob: -22.625001907348633
    10. '
' → logprob: -22.875001907348633

Token 639: ' ajoute' (ID: 91611)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.618001053633634e-05
    2. ' a' → logprob: -10.625025749206543
    3. '[a' → logprob: -13.625025749206543
    4. '       ' → logprob: -15.625025749206543
    5. 'ai' → logprob: -15.625025749206543
    6. '   ' → logprob: -16.37502670288086
    7. '#a' → logprob: -16.62502670288086
    8. '#' → logprob: -16.75002670288086
    9. '	a' → logprob: -17.62502670288086
    10. '[' → logprob: -17.62502670288086

Token 640: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00040457461727783084
    2. 'a' → logprob: -8.000404357910156
    3. ' ' → logprob: -9.625404357910156
    4. ' a' → logprob: -13.625404357910156
    5. '```' → logprob: -13.625404357910156
    6. '   ' → logprob: -15.000404357910156
    7. '+' → logprob: -15.375404357910156
    8. '
' → logprob: -17.250404357910156
    9. '#' → logprob: -17.625404357910156
    10. '=' → logprob: -17.875404357910156

Token 641: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010998018842656165
    2. 'a' → logprob: -9.125109672546387
    3. ' ' → logprob: -13.875109672546387
    4. '```' → logprob: -18.000110626220703
    5. '１' → logprob: -18.875110626220703
    6. ' a' → logprob: -19.500110626220703
    7. '+' → logprob: -19.875110626220703
    8. '`' → logprob: -20.500110626220703
    9. '-' → logprob: -21.000110626220703
    10. '...' → logprob: -21.000110626220703

Token 642: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6080958247184753
    2. ' à' → logprob: -1.2330958843231201
    3. ' to' → logprob: -2.60809588432312
    4. ' a' → logprob: -2.73309588432312
    5. 'to' → logprob: -3.85809588432312
    6. 'à' → logprob: -5.483095645904541
    7. '       ' → logprob: -9.2330961227417
    8. '   ' → logprob: -9.4830961227417
    9. '           ' → logprob: -10.4830961227417
    10. ' ' → logprob: -10.6080961227417

Token 643: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.547789674485102e-05
    2. ' a' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.875036239624023
    4. '	a' → logprob: -19.625036239624023
    5. '       ' → logprob: -19.875036239624023
    6. ' ' → logprob: -20.250036239624023
    7. '```' → logprob: -21.000036239624023
    8. '           ' → logprob: -21.250036239624023
    9. '(a' → logprob: -22.250036239624023
    10. '    ' → logprob: -22.250036239624023

Token 644: ' case' (ID: 1890)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.694766489090398e-05
    2. ' a' → logprob: -9.625066757202148
    3. '```' → logprob: -14.500066757202148
    4. '   ' → logprob: -15.875066757202148
    5. 'case' → logprob: -17.25006675720215
    6. '[' → logprob: -17.37506675720215
    7. '
' → logprob: -17.50006675720215
    8. '...' → logprob: -17.87506675720215
    9. '[a' → logprob: -17.87506675720215
    10. '#' → logprob: -18.00006675720215

Token 645: ' du' (ID: 1462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.596781946020201e-05
    2. 'i' → logprob: -10.375045776367188
    3. 'a' → logprob: -11.375045776367188
    4. '   ' → logprob: -13.250045776367188
    5. '```' → logprob: -14.625045776367188
    6. ' [' → logprob: -15.125045776367188
    7. '
' → logprob: -15.250045776367188
    8. '[next' → logprob: -15.875045776367188
    9. '[a' → logprob: -16.125045776367188
    10. '][' → logprob: -17.125045776367188

Token 646: ' dessous' (ID: 120954)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04885770380496979
    2. '[i' → logprob: -3.0488576889038086
    3. 'a' → logprob: -9.048857688903809
    4. '(i' → logprob: -9.798857688903809
    5. 'below' → logprob: -10.548857688903809
    6. ' i' → logprob: -11.048857688903809
    7. '```' → logprob: -11.423857688903809
    8. '[' → logprob: -11.548857688903809
    9. ' dessous' → logprob: -12.048857688903809
    10. '{i' → logprob: -12.048857688903809

Token 647: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.020239604637026787
    2. '       ' → logprob: -4.64523983001709
    3. ' a' → logprob: -4.89523983001709
    4. '   ' → logprob: -6.14523983001709
    5. '           ' → logprob: -8.14523983001709
    6. '
' → logprob: -8.27023983001709
    7. ' +=' → logprob: -10.27023983001709
    8. '[a' → logprob: -10.27023983001709
    9. '        
' → logprob: -10.52023983001709
    10. '=' → logprob: -10.64523983001709

Token 648: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004203409422188997
    2. ' a' → logprob: -5.6292033195495605
    3. '       ' → logprob: -8.004203796386719
    4. '   ' → logprob: -8.254203796386719
    5. '```' → logprob: -12.129203796386719
    6. '	a' → logprob: -13.504203796386719
    7. '           ' → logprob: -14.629203796386719
    8. '#a' → logprob: -14.754203796386719
    9. '[a' → logprob: -15.254203796386719
    10. '
' → logprob: -15.504203796386719

Token 649: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -1.981667537620524e-06
    2. ' a' → logprob: -13.375001907348633
    3. '   ' → logprob: -15.250001907348633
    4. '       ' → logprob: -15.875001907348633
    5. '           ' → logprob: -19.375001907348633
    6. '	a' → logprob: -20.250001907348633
    7. '```' → logprob: -21.000001907348633
    8. '[a' → logprob: -22.625001907348633
    9. '               ' → logprob: -23.625001907348633
    10. '  ' → logprob: -23.625001907348633

Token 650: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -14.875
    3. '[' → logprob: -18.125
    4. '```' → logprob: -18.5
    5. '[a' → logprob: -18.75
    6. '[I' → logprob: -19.0
    7. ' [' → logprob: -19.375
    8. '[
' → logprob: -19.625
    9. '[next' → logprob: -20.0
    10. '[++' → logprob: -20.25

Token 651: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2352385965641588e-05
    2. '][' → logprob: -11.875012397766113
    3. ' +' → logprob: -12.375012397766113
    4. '+i' → logprob: -14.375012397766113
    5. '[' → logprob: -14.625012397766113
    6. '[i' → logprob: -16.375011444091797
    7. '1' → logprob: -16.875011444091797
    8. '+[' → logprob: -16.875011444091797
    9. '＋' → logprob: -17.500011444091797
    10. '```' → logprob: -18.250011444091797

Token 652: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '+' → logprob: -16.0
    4. '   ' → logprob: -17.0
    5. '```' → logprob: -17.125
    6. '
' → logprob: -18.5
    7. '2' → logprob: -18.6875
    8. '[' → logprob: -18.8125
    9. '１' → logprob: -18.875
    10. '`' → logprob: -19.6875

Token 653: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00769428675994277
    2. '[' → logprob: -4.882694244384766
    3. ']' → logprob: -9.757694244384766
    4. ' ][' → logprob: -11.007694244384766
    5. '   ' → logprob: -12.757694244384766
    6. 'W' → logprob: -13.007694244384766
    7. '}[' → logprob: -13.257694244384766
    8. '"][' → logprob: -13.757694244384766
    9. ')[' → logprob: -14.007694244384766
    10. '[i' → logprob: -14.257694244384766

Token 654: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.1472419600977446e-06
    2. ' W' → logprob: -14.125000953674316
    3. '(W' → logprob: -15.125000953674316
    4. '   ' → logprob: -16.500001907348633
    5. '[' → logprob: -18.375001907348633
    6. '	W' → logprob: -18.625001907348633
    7. '<W' → logprob: -18.625001907348633
    8. ' ' → logprob: -19.875001907348633
    9. '=W' → logprob: -20.000001907348633
    10. '  ' → logprob: -20.125001907348633

Token 655: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.320199877838604e-07
    2. ' -' → logprob: -15.75
    3. '1' → logprob: -16.125
    4. '[' → logprob: -16.625
    5. ''-' → logprob: -18.5
    6. '[-' → logprob: -18.875
    7. '```' → logprob: -19.125
    8. ']-' → logprob: -19.875
    9. '−' → logprob: -20.25
    10. '–' → logprob: -20.375

Token 656: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.500000953674316
    3. '2' → logprob: -15.562500953674316
    4. '```' → logprob: -16.0
    5. '11' → logprob: -17.375
    6. '   ' → logprob: -17.5
    7. '۱' → logprob: -17.5625
    8. '１' → logprob: -18.1875
    9. '
' → logprob: -18.75
    10. ']' → logprob: -18.8125

Token 657: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011724866926670074
    2. ']+=' → logprob: -6.7511725425720215
    3. ']+' → logprob: -13.751172065734863
    4. ' ]' → logprob: -14.876172065734863
    5. '']' → logprob: -15.001172065734863
    6. '```' → logprob: -15.876172065734863
    7. '+=' → logprob: -16.12617301940918
    8. '"]' → logprob: -16.25117301940918
    9. '`]' → logprob: -17.00117301940918
    10. ']
' → logprob: -17.00117301940918

Token 658: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.029801636934280396
    2. ' +=' → logprob: -3.529801607131958
    3. ']+=' → logprob: -10.529801368713379
    4. '+' → logprob: -10.654801368713379
    5. '=' → logprob: -15.029801368713379
    6. '+='' → logprob: -15.779801368713379
    7. '   ' → logprob: -16.029802322387695
    8. '+="' → logprob: -16.279802322387695
    9. '```' → logprob: -17.029802322387695
    10. '+=(' → logprob: -17.154802322387695

Token 659: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -18.500019073486328
    4. '<|end|>' → logprob: -19.500019073486328
    5. '```' → logprob: -19.875019073486328
    6. '  ' → logprob: -21.250019073486328
    7. '۱' → logprob: -21.500019073486328
    8. '１' → logprob: -21.750019073486328
    9. '       ' → logprob: -22.500019073486328
    10. ' ' → logprob: -22.500019073486328

Token 660: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '   ' → logprob: -20.5
    4. '```' → logprob: -20.5
    5. '<|end|>' → logprob: -20.625
    6. '۱' → logprob: -22.375
    7. '１' → logprob: -22.625
    8. '১' → logprob: -23.125
    9. '१' → logprob: -23.5625
    10. '+' → logprob: -23.5625

Token 661: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02053734101355076
    2. '#' → logprob: -4.145537376403809
    3. '<|end|>' → logprob: -6.020537376403809
    4. 'for' → logprob: -6.645537376403809
    5. '
' → logprob: -8.020537376403809
    6. '```' → logprob: -8.145537376403809
    7. '#print' → logprob: -10.145537376403809
    8. ' print' → logprob: -11.020537376403809
    9. '        
' → logprob: -11.145537376403809
    10. '  
' → logprob: -11.145537376403809

Token 662: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004951290902681649
    2. '#' → logprob: -7.625494956970215
    3. ' print' → logprob: -12.500494956970215
    4. 'n' → logprob: -13.375494956970215
    5. '#print' → logprob: -13.500494956970215
    6. '```' → logprob: -15.750494956970215
    7. '
' → logprob: -16.25049591064453
    8. 'for' → logprob: -16.75049591064453
    9. '  
' → logprob: -17.50049591064453
    10. '<|end|>' → logprob: -18.12549591064453

Token 663: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010344763286411762
    2. '#' → logprob: -6.876034259796143
    3. '#print' → logprob: -14.0010347366333
    4. ' print' → logprob: -14.2510347366333
    5. 'Print' → logprob: -16.376033782958984
    6. '
' → logprob: -16.751033782958984
    7. 'for' → logprob: -17.501033782958984
    8. '

' → logprob: -18.626033782958984
    9. '```' → logprob: -18.626033782958984
    10. 'n' → logprob: -19.001033782958984

Token 664: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.4060561776859686e-05
    2. '#' → logprob: -10.250043869018555
    3. ' print' → logprob: -11.750043869018555
    4. '#print' → logprob: -14.125043869018555
    5. 'prints' → logprob: -18.000043869018555
    6. 'len' → logprob: -18.625043869018555
    7. 'puts' → logprob: -19.500043869018555
    8. 'pr' → logprob: -19.625043869018555
    9. 'printf' → logprob: -19.875043869018555
    10. 'Print' → logprob: -20.625043869018555

Token 665: ' le' (ID: 505)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.022660031914711
    2. '(len' → logprob: -4.272660255432129
    3. 'print' → logprob: -4.772660255432129
    4. ' len' → logprob: -13.647660255432129
    5. '#' → logprob: -14.147660255432129
    6. '[len' → logprob: -15.147660255432129
    7. '(' → logprob: -15.897660255432129
    8. '
' → logprob: -16.147659301757812
    9. '```' → logprob: -16.147659301757812
    10. '=len' → logprob: -16.897659301757812

Token 666: ' nombre' (ID: 9733)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.038050100207328796
    2. 'print' → logprob: -3.2880501747131348
    3. 'nombre' → logprob: -12.038049697875977
    4. 'length' → logprob: -13.663049697875977
    5. 'n' → logprob: -14.788049697875977
    6. 'total' → logprob: -15.163049697875977
    7. 'r' → logprob: -15.163049697875977
    8. '(len' → logprob: -15.413049697875977
    9. '#' → logprob: -15.788049697875977
    10. ' len' → logprob: -16.538049697875977

Token 667: ' total' (ID: 3609)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.018444083631038666
    2. 'len' → logprob: -4.018444061279297
    3. '(' → logprob: -8.268444061279297
    4. 'of' → logprob: -10.518444061279297
    5. '=len' → logprob: -12.268444061279297
    6. ' len' → logprob: -12.643444061279297
    7. '(
' → logprob: -14.018444061279297
    8. '[len' → logprob: -15.018444061279297
    9. ',len' → logprob: -15.143444061279297
    10. 'de' → logprob: -15.393444061279297

Token 668: ' d' (ID: 272)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.029426438733935356
    2. 'len' → logprob: -3.779426336288452
    3. '(' → logprob: -5.154426574707031
    4. 'print' → logprob: -8.404426574707031
    5. 'of' → logprob: -9.029426574707031
    6. '=len' → logprob: -11.154426574707031
    7. '(
' → logprob: -11.279426574707031
    8. '()' → logprob: -12.654426574707031
    9. '(ans' → logprob: -12.779426574707031
    10. 'de' → logprob: -13.029426574707031

Token 669: ''op' (ID: 70747)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.7111845016479492
    2. 'ans' → logprob: -1.0861845016479492
    3. ' opérations' → logprob: -2.836184501647949
    4. 'operations' → logprob: -3.836184501647949
    5. ' ans' → logprob: -3.836184501647949
    6. 'e' → logprob: -4.211184501647949
    7. ' ' → logprob: -4.211184501647949
    8. 'é' → logprob: -5.086184501647949
    9. 'op' → logprob: -5.086184501647949
    10. ''op' → logprob: -5.336184501647949

Token 670: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -0.0002270198310725391
    2. 'er' → logprob: -8.500226974487305
    3. 'ér' → logprob: -12.000226974487305
    4. '#' → logprob: -12.625226974487305
    5. 's' → logprob: -12.750226974487305
    6. 'é' → logprob: -12.875226974487305
    7. 'ations' → logprob: -13.250226974487305
    8. 'r' → logprob: -13.500226974487305
    9. '%C' → logprob: -13.750226974487305
    10. '{' → logprob: -13.750226974487305

Token 671: ' enregistr' (ID: 76845)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.0
    3. '```' → logprob: -18.0
    4. '``' → logprob: -23.5
    5. '
' → logprob: -23.75
    6. '#print' → logprob: -24.375
    7. '`' → logprob: -24.375
    8. 'len' → logprob: -24.75
    9. '#' → logprob: -25.25
    10. '`
' → logprob: -25.875

Token 672: 'ées' (ID: 5161)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016377322375774384
    2. 'r' → logprob: -5.0163774490356445
    3. '(len' → logprob: -5.1413774490356445
    4. 'e' → logprob: -6.7663774490356445
    5. ' print' → logprob: -7.0163774490356445
    6. 'len' → logprob: -7.3913774490356445
    7. 's' → logprob: -8.641377449035645
    8. 'nt' → logprob: -8.891377449035645
    9. '   ' → logprob: -9.266377449035645
    10. ')' → logprob: -9.391377449035645

Token 673: ' dans' (ID: 2671)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -14.500000953674316
    3. '
' → logprob: -17.0
    4. ' print' → logprob: -17.875
    5. '``' → logprob: -19.5
    6. '#print' → logprob: -21.75
    7. '
' → logprob: -21.875
    8. '`
' → logprob: -22.125
    9. '#' → logprob: -22.25
    10. '`' → logprob: -22.375

Token 674: ' '' (ID: 461)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06596243381500244
    2. 'len' → logprob: -3.065962314605713
    3. 'print' → logprob: -4.065962314605713
    4. '(ans' → logprob: -9.815962791442871
    5. ' ans' → logprob: -11.315962791442871
    6. '
' → logprob: -12.190962791442871
    7. 'answer' → logprob: -13.190962791442871
    8. 'la' → logprob: -13.315962791442871
    9. '(len' → logprob: -14.440962791442871
    10. ' len' → logprob: -14.690962791442871

Token 675: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1472419600977446e-06
    2. '(ans' → logprob: -14.375000953674316
    3. ' ans' → logprob: -14.500000953674316
    4. 'print' → logprob: -18.500001907348633
    5. 'a' → logprob: -20.750001907348633
    6. '	ans' → logprob: -21.250001907348633
    7. '
' → logprob: -21.625001907348633
    8. 'ann' → logprob: -22.375001907348633
    9. '   ' → logprob: -22.625001907348633
    10. 'answer' → logprob: -23.375001907348633

Token 676: ''
' (ID: 2207)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0026379646733403206
    2. ')
' → logprob: -6.00263786315918
    3. ')' → logprob: -9.12763786315918
    4. '()
' → logprob: -10.75263786315918
    5. '
' → logprob: -10.87763786315918
    6. ' print' → logprob: -11.87763786315918
    7. '(print' → logprob: -12.87763786315918
    8. '()' → logprob: -14.12763786315918
    9. '#print' → logprob: -14.62763786315918
    10. '```' → logprob: -14.75263786315918

Token 677: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.0
    3. ' print' → logprob: -19.5
    4. '``' → logprob: -21.875
    5. '
' → logprob: -23.25
    6. '`' → logprob: -25.125
    7. '#print' → logprob: -25.25
    8. '#' → logprob: -25.25
    9. 'len' → logprob: -25.625
    10. 'Print' → logprob: -26.375

Token 678: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -8.65707261255011e-06
    2. 'len' → logprob: -12.000008583068848
    3. '(' → logprob: -13.000008583068848
    4. ' (' → logprob: -16.500009536743164
    5. ' len' → logprob: -17.000009536743164
    6. '[len' → logprob: -19.500009536743164
    7. '=len' → logprob: -20.125009536743164
    8. '()' → logprob: -20.625009536743164
    9. '	len' → logprob: -21.250009536743164
    10. '(sum' → logprob: -21.625009536743164

Token 679: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0001601539261173457
    2. '(' → logprob: -8.750160217285156
    3. 'ans' → logprob: -13.750160217285156
    4. ')' → logprob: -14.875160217285156
    5. ' (' → logprob: -15.625160217285156
    6. '	ans' → logprob: -16.625160217285156
    7. ' ans' → logprob: -18.375160217285156
    8. ' )' → logprob: -18.500160217285156
    9. '(answer' → logprob: -18.625160217285156
    10. '(args' → logprob: -19.875160217285156

Token 680: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.014684110297821e-06
    2. '))' → logprob: -12.000008583068848
    3. ')
' → logprob: -13.500008583068848
    4. ' )' → logprob: -14.250008583068848
    5. ')`' → logprob: -14.875008583068848
    6. '())' → logprob: -15.500008583068848
    7. ')#' → logprob: -16.750009536743164
    8. ')}' → logprob: -16.875009536743164
    9. '()' → logprob: -17.250009536743164
    10. '),' → logprob: -17.875009536743164

Token 681: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.786196975852363e-05
    2. ' for' → logprob: -10.750038146972656
    3. '
' → logprob: -11.125038146972656
    4. '#' → logprob: -13.625038146972656
    5. ')' → logprob: -15.125038146972656
    6. '\n' → logprob: -15.875038146972656
    7. '  
' → logprob: -17.375038146972656
    8. ' 
' → logprob: -17.875038146972656
    9. '\' → logprob: -18.000038146972656
    10. '```' → logprob: -18.125038146972656

Token 682: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -19.0
    3. '
' → logprob: -20.625
    4. '#' → logprob: -22.0
    5. '```' → logprob: -23.125
    6. '	for' → logprob: -23.5
    7. 'For' → logprob: -23.75
    8. '   ' → logprob: -25.625
    9. '``' → logprob: -26.25
    10. '​' → logprob: -26.625

Token 683: ' affiche' (ID: 127479)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07050028443336487
    2. ' for' → logprob: -2.695500373840332
    3. '
' → logprob: -8.195500373840332
    4. '#' → logprob: -8.570500373840332
    5. ':
' → logprob: -10.945500373840332
    6. ':' → logprob: -11.195500373840332
    7. ')' → logprob: -11.820500373840332
    8. 'or' → logprob: -11.820500373840332
    9. ' #' → logprob: -12.195500373840332
    10. '.' → logprob: -12.195500373840332

Token 684: ' chaque' (ID: 21194)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.009514570236206
    2. '(*' → logprob: -1.134514570236206
    3. '()' → logprob: -1.884514570236206
    4. '#' → logprob: -3.009514570236206
    5. '*' → logprob: -3.009514570236206
    6. '("\' → logprob: -4.009514808654785
    7. 'each' → logprob: -4.384514808654785
    8. '(' → logprob: -4.634514808654785
    9. '
' → logprob: -5.259514808654785
    10. '('\' → logprob: -5.384514808654785

Token 685: ' opération' (ID: 86023)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.8383898138999939
    2. 'operation' → logprob: -0.8383898138999939
    3. 'ans' → logprob: -2.0883898735046387
    4. ' operation' → logprob: -5.713389873504639
    5. ' op' → logprob: -5.963389873504639
    6. '(ans' → logprob: -6.213389873504639
    7. '(*' → logprob: -6.963389873504639
    8. '(op' → logprob: -7.088389873504639
    9. ' ans' → logprob: -7.838389873504639
    10. 'ops' → logprob: -8.33838939666748

Token 686: ' une' (ID: 2463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006205004174262285
    2. ':' → logprob: -5.506205081939697
    3. ' for' → logprob: -6.881205081939697
    4. '(ans' → logprob: -7.756205081939697
    5. '()' → logprob: -8.381204605102539
    6. 'ans' → logprob: -9.006204605102539
    7. '#' → logprob: -9.631204605102539
    8. '
' → logprob: -9.756204605102539
    9. 'as' → logprob: -10.506204605102539
    10. '   ' → logprob: -10.756204605102539

Token 687: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.29224926233291626
    2. 'for' → logprob: -2.4172492027282715
    3. 's' → logprob: -2.7922492027282715
    4. 'ligne' → logprob: -3.4172492027282715
    5. ' par' → logprob: -3.9172492027282715
    6. 'ans' → logprob: -4.5422492027282715
    7. ' ligne' → logprob: -4.6672492027282715
    8. ' for' → logprob: -5.0422492027282715
    9. 'ns' → logprob: -5.6672492027282715
    10. 'part' → logprob: -5.6672492027282715

Token 688: ' une' (ID: 2463)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.03811894729733467
    2. 'line' → logprob: -4.038118839263916
    3. ' ligne' → logprob: -4.413118839263916
    4. 'l' → logprob: -5.788118839263916
    5. 'print' → logprob: -6.413118839263916
    6. 's' → logprob: -6.538118839263916
    7. 'ans' → logprob: -7.288118839263916
    8. 'es' → logprob: -9.413119316101074
    9. '```' → logprob: -9.413119316101074
    10. 'lie' → logprob: -9.538119316101074

Token 689: ' sous' (ID: 14487)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.512236498361744e-07
    2. ' for' → logprob: -14.500000953674316
    3. '
' → logprob: -17.5
    4. '```' → logprob: -19.875
    5. '#' → logprob: -21.625
    6. '	for' → logprob: -23.0
    7. '``' → logprob: -23.125
    8. '   ' → logprob: -24.0
    9. 'while' → logprob: -24.125
    10. '.for' → logprob: -24.125

Token 690: ' forme' (ID: 27450)
  Prédit: 'forme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forme' → logprob: -0.8518109917640686
    2. 'la' → logprob: -0.9768109917640686
    3. ' forme' → logprob: -2.851810932159424
    4. 'for' → logprob: -3.226810932159424
    5. 'format' → logprob: -3.351810932159424
    6. 'form' → logprob: -3.726810932159424
    7. 'print' → logprob: -3.976810932159424
    8. 'forma' → logprob: -5.101810932159424
    9. '#' → logprob: -5.476810932159424
    10. '-form' → logprob: -5.851810932159424

Token 691: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.36625683307647705
    2. ' de' → logprob: -1.241256833076477
    3. 'd' → logprob: -4.3662567138671875
    4. 'for' → logprob: -5.6162567138671875
    5. ' d' → logprob: -7.1162567138671875
    6. '   ' → logprob: -7.9912567138671875
    7. 'des' → logprob: -10.491256713867188
    8. '#' → logprob: -10.866256713867188
    9. ' des' → logprob: -10.991256713867188
    10. '    ' → logprob: -11.116256713867188

Token 692: ' quatre' (ID: 41209)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9010310769081116
    2. '4' → logprob: -1.6510310173034668
    3. 'for' → logprob: -1.6510310173034668
    4. 'print' → logprob: -1.9010310173034668
    5. '"' → logprob: -3.151031017303467
    6. '"{' → logprob: -5.151031017303467
    7. '   ' → logprob: -6.526031017303467
    8. 'format' → logprob: -6.901031017303467
    9. ''' → logprob: -7.026031017303467
    10. 'chaine' → logprob: -7.026031017303467

Token 693: ' nombres' (ID: 76205)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.009391240775585175
    2. 'inte' → logprob: -5.3843913078308105
    3. 'val' → logprob: -5.6343913078308105
    4. ' ent' → logprob: -7.6343913078308105
    5. 'print' → logprob: -8.634390830993652
    6. ' integers' → logprob: -9.259390830993652
    7. 'ints' → logprob: -9.634390830993652
    8. 'int' → logprob: -9.759390830993652
    9. 'enti' → logprob: -9.884390830993652
    10. 'élé' → logprob: -10.134390830993652

Token 694: ' ent' (ID: 1121)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20521515607833862
    2. ':' → logprob: -1.7052152156829834
    3. ':
' → logprob: -5.705214977264404
    4. ' for' → logprob: -7.830214977264404
    5. '   ' → logprob: -10.455215454101562
    6. '```' → logprob: -11.580215454101562
    7. '):' → logprob: -12.205215454101562
    8. 'print' → logprob: -12.330215454101562
    9. ',' → logprob: -12.455215454101562
    10. '[i' → logprob: -13.205215454101562

Token 695: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0011946328449994326
    2. 'ier' → logprob: -6.876194477081299
    3. 'ières' → logprob: -10.001194953918457
    4. 'ière' → logprob: -10.376194953918457
    5. 'i' → logprob: -10.626194953918457
    6. 'ités' → logprob: -10.876194953918457
    7. 'rés' → logprob: -11.251194953918457
    8. 'repr' → logprob: -12.251194953918457
    9. 'iert' → logprob: -12.876194953918457
    10. 'er' → logprob: -13.251194953918457

Token 696: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00017886889690998942
    2. ' for' → logprob: -8.875179290771484
    3. ':' → logprob: -10.375179290771484
    4. '
' → logprob: -12.500179290771484
    5. ':
' → logprob: -13.125179290771484
    6. '```' → logprob: -14.125179290771484
    7. '   ' → logprob: -14.625179290771484
    8. 'while' → logprob: -15.125179290771484
    9. '#' → logprob: -15.375179290771484
    10. ')' → logprob: -16.750179290771484

Token 697: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -17.125
    3. '```' → logprob: -20.25
    4. '
' → logprob: -20.625
    5. '	for' → logprob: -22.375
    6. '   ' → logprob: -23.375
    7. '#' → logprob: -23.875
    8. '``' → logprob: -24.5
    9. '    
' → logprob: -25.0
    10. '  
' → logprob: -25.625

Token 698: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -21.75
    3. '```' → logprob: -25.25
    4. '	for' → logprob: -27.375
    5. '   ' → logprob: -29.125
    6. '
' → logprob: -29.375
    7. '``' → logprob: -30.0
    8. 'For' → logprob: -30.25
    9. 'pour' → logprob: -30.375
    10. '#' → logprob: -31.0

Token 699: ' dé' (ID: 2393)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0031777136027812958
    2. ' for' → logprob: -5.753177642822266
    3. '   ' → logprob: -18.253177642822266
    4. 'in' → logprob: -18.628177642822266
    5. 's' → logprob: -18.753177642822266
    6. '.for' → logprob: -18.878177642822266
    7. '#' → logprob: -19.378177642822266
    8. 'pour' → logprob: -19.503177642822266
    9. '	for' → logprob: -19.753177642822266
    10. 'print' → logprob: -19.753177642822266

Token 700: 'compose' (ID: 65322)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011678146198391914
    2. 'print' → logprob: -5.136678218841553
    3. 'f' → logprob: -5.386678218841553
    4. '#' → logprob: -7.636678218841553
    5. 'fine' → logprob: -8.761677742004395
    6. '#print' → logprob: -9.261677742004395
    7. ' for' → logprob: -9.386677742004395
    8. 'range' → logprob: -9.511677742004395
    9. 'ans' → logprob: -10.011677742004395
    10. 'compose' → logprob: -10.886677742004395

Token 701: ' chaque' (ID: 21194)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4364807605743408
    2. '(*' → logprob: -1.3114807605743408
    3. '*' → logprob: -2.936480760574341
    4. 'ans' → logprob: -4.061480522155762
    5. '(ans' → logprob: -4.811480522155762
    6. ' for' → logprob: -6.436480522155762
    7. '   ' → logprob: -7.561480522155762
    8. 'op' → logprob: -7.561480522155762
    9. 'range' → logprob: -7.811480522155762
    10. 'a' → logprob: -7.936480522155762

Token 702: ' liste' (ID: 31719)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0588226281106472
    2. 'operation' → logprob: -3.0588226318359375
    3. 'x' → logprob: -4.6838226318359375
    4. ' op' → logprob: -8.433822631835938
    5. 'oper' → logprob: -8.558822631835938
    6. 'action' → logprob: -9.183822631835938
    7. 'ligne' → logprob: -9.433822631835938
    8. 'r' → logprob: -9.933822631835938
    9. 'ops' → logprob: -10.058822631835938
    10. 'line' → logprob: -10.058822631835938

Token 703: ' de' (ID: 334)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.4706200659275055
    2. 'op' → logprob: -2.3456201553344727
    3. '*' → logprob: -2.7206201553344727
    4. 'in' → logprob: -2.8456201553344727
    5. 'for' → logprob: -2.8456201553344727
    6. '(ans' → logprob: -3.3456201553344727
    7. ' in' → logprob: -3.9706201553344727
    8. 'ans' → logprob: -4.220620155334473
    9. '(op' → logprob: -4.720620155334473
    10. 'operation' → logprob: -4.970620155334473

Token 704: ' '' (ID: 461)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.334587037563324
    2. 'op' → logprob: -1.3345870971679688
    3. 'operation' → logprob: -3.9595870971679688
    4. 'ops' → logprob: -6.834587097167969
    5. 'operations' → logprob: -8.084587097167969
    6. 'oper' → logprob: -8.084587097167969
    7. ' ans' → logprob: -9.334587097167969
    8. '*' → logprob: -9.334587097167969
    9. ' op' → logprob: -9.959587097167969
    10. '(ans' → logprob: -11.084587097167969

Token 705: 'ans' (ID: 616)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.038456715643405914
    2. 'operation' → logprob: -3.788456678390503
    3. 'ans' → logprob: -4.288456916809082
    4. 'ops' → logprob: -7.788456916809082
    5. 'action' → logprob: -7.913456916809082
    6. 'a' → logprob: -8.538456916809082
    7. ' op' → logprob: -8.788456916809082
    8. 'move' → logprob: -9.288456916809082
    9. 'oper' → logprob: -10.288456916809082
    10. 'range' → logprob: -10.913456916809082

Token 706: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8709874749183655
    2. ' in' → logprob: -1.1209874153137207
    3. 'in' → logprob: -2.1209874153137207
    4. ':' → logprob: -2.9959874153137207
    5. '):' → logprob: -3.3709874153137207
    6. '[' → logprob: -4.245987415313721
    7. ':
' → logprob: -4.870987415313721
    8. ']' → logprob: -5.245987415313721
    9. 'for' → logprob: -5.245987415313721
    10. '   ' → logprob: -5.495987415313721

Token 707: ' dans' (ID: 2671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08564537763595581
    2. 'in' → logprob: -3.3356454372406006
    3. 'for' → logprob: -4.0856451988220215
    4. ' in' → logprob: -4.5856451988220215
    5. ' as' → logprob: -4.7106451988220215
    6. '[' → logprob: -5.8356451988220215
    7. ':
' → logprob: -5.8356451988220215
    8. ')' → logprob: -6.8356451988220215
    9. 'as' → logprob: -6.9606451988220215
    10. ' for' → logprob: -7.0856451988220215

Token 708: ' les' (ID: 1341)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00011093381908722222
    2. '*' → logprob: -10.000110626220703
    3. 'print' → logprob: -10.125110626220703
    4. ' ans' → logprob: -11.250110626220703
    5. '(ans' → logprob: -11.875110626220703
    6. 'args' → logprob: -13.500110626220703
    7. 'a' → logprob: -14.000110626220703
    8. '	ans' → logprob: -14.250110626220703
    9. 'range' → logprob: -14.875110626220703
    10. '_ans' → logprob: -15.000110626220703

Token 709: ' variables' (ID: 13955)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.2471589798224159e-05
    2. 'print' → logprob: -11.625012397766113
    3. ' ans' → logprob: -13.125012397766113
    4. 'for' → logprob: -13.500012397766113
    5. '(ans' → logprob: -17.00001335144043
    6. 'args' → logprob: -18.12501335144043
    7. '_ans' → logprob: -18.37501335144043
    8. 'answer' → logprob: -18.50001335144043
    9. '	ans' → logprob: -18.75001335144043
    10. '*' → logprob: -18.87501335144043

Token 710: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3688851594924927
    2. 'i' → logprob: -1.4938851594924927
    3. 'x' → logprob: -2.493885040283203
    4. 'u' → logprob: -7.743885040283203
    5. ' for' → logprob: -7.868885040283203
    6. 'r' → logprob: -8.618885040283203
    7. 'a' → logprob: -9.868885040283203
    8. 'l' → logprob: -9.993885040283203
    9. '`' → logprob: -9.993885040283203
    10. 'h' → logprob: -9.993885040283203

Token 711: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35464054346084595
    2. ',' → logprob: -1.6046404838562012
    3. ',b' → logprob: -2.854640483856201
    4. 'b' → logprob: -3.729640483856201
    5. '1' → logprob: -4.979640483856201
    6. '_,' → logprob: -5.229640483856201
    7. 's' → logprob: -6.729640483856201
    8. 'x' → logprob: -6.854640483856201
    9. ',i' → logprob: -7.854640483856201
    10. '[i' → logprob: -7.979640483856201

Token 712: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. ' b' → logprob: -17.5
    3. 'bi' → logprob: -19.5
    4. '
' → logprob: -20.625
    5. 'c' → logprob: -22.625
    6. 'x' → logprob: -22.75
    7. 'd' → logprob: -22.875
    8. 'a' → logprob: -22.875
    9. '_b' → logprob: -22.875
    10. ',b' → logprob: -22.875

Token 713: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016228145686909556
    2. ',c' → logprob: -6.626622676849365
    3. ',b' → logprob: -8.376623153686523
    4. 'c' → logprob: -10.501623153686523
    5. '_,' → logprob: -10.626623153686523
    6. ' ,' → logprob: -11.501623153686523
    7. 'b' → logprob: -13.376623153686523
    8. ',d' → logprob: -13.626623153686523
    9. ',
' → logprob: -14.376623153686523
    10. 's' → logprob: -15.001623153686523

Token 714: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.128163257315464e-07
    2. ' c' → logprob: -15.625
    3. '*c' → logprob: -17.25
    4. 'x' → logprob: -19.5
    5. '   ' → logprob: -20.75
    6. 'b' → logprob: -21.25
    7. '*' → logprob: -21.5
    8. '
' → logprob: -22.0
    9. '```' → logprob: -22.5
    10. 'i' → logprob: -22.625

Token 715: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16031134128570557
    2. ',d' → logprob: -1.9103113412857056
    3. 'd' → logprob: -9.410311698913574
    4. ' ,' → logprob: -12.785311698913574
    5. '_,' → logprob: -13.535311698913574
    6. ',
' → logprob: -14.910311698913574
    7. '[' → logprob: -15.535311698913574
    8. ',b' → logprob: -16.285310745239258
    9. ',D' → logprob: -16.285310745239258
    10. ',\
' → logprob: -16.785310745239258

Token 716: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.517272024415433e-05
    2. ' d' → logprob: -9.500075340270996
    3. ',' → logprob: -15.625075340270996
    4. '   ' → logprob: -17.12507438659668
    5. ',d' → logprob: -17.12507438659668
    6. ' ' → logprob: -17.25007438659668
    7. '
' → logprob: -17.75007438659668
    8. '  ' → logprob: -18.12507438659668
    9. '_,' → logprob: -18.12507438659668
    10. ' =' → logprob: -18.12507438659668

Token 717: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012074785307049751
    2. ' for' → logprob: -4.512074947357178
    3. 'a' → logprob: -7.012074947357178
    4. ',' → logprob: -9.88707447052002
    5. '   ' → logprob: -10.63707447052002
    6. ' as' → logprob: -11.76207447052002
    7. '```' → logprob: -11.76207447052002
    8. '(a' → logprob: -12.01207447052002
    9. 'as' → logprob: -12.13707447052002
    10. ':' → logprob: -12.13707447052002

Token 718: 'qui' (ID: 22771)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18486714363098145
    2. 'for' → logprob: -1.8098671436309814
    3. ' for' → logprob: -5.434866905212402
    4. ' a' → logprob: -7.809866905212402
    5. ')' → logprob: -8.934866905212402
    6. '   ' → logprob: -9.559866905212402
    7. ',' → logprob: -10.059866905212402
    8. '
' → logprob: -10.809866905212402
    9. '):
' → logprob: -11.184866905212402
    10. ' as' → logprob: -11.684866905212402

Token 719: ' correspondent' (ID: 86218)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3279845118522644
    2. '=' → logprob: -1.7029845714569092
    3. ' =' → logprob: -2.577984571456909
    4. ')' → logprob: -4.57798433303833
    5. ' are' → logprob: -5.70298433303833
    6. ' represent' → logprob: -6.07798433303833
    7. ' ,' → logprob: -6.07798433303833
    8. 'print' → logprob: -7.45298433303833
    9. '   ' → logprob: -7.95298433303833
    10. 'represent' → logprob: -8.077984809875488

Token 720: ' aux' (ID: 5850)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.41251519322395325
    2. ' à' → logprob: -1.2875151634216309
    3. 'a' → logprob: -3.412515163421631
    4. '   ' → logprob: -4.787515163421631
    5. 'to' → logprob: -5.037515163421631
    6. ' aux' → logprob: -5.412515163421631
    7. ' to' → logprob: -5.912515163421631
    8. ',' → logprob: -6.162515163421631
    9. 'aux' → logprob: -6.287515163421631
    10. 'au' → logprob: -6.662515163421631

Token 721: ' coordonnées' (ID: 181895)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6439776420593262
    2. 'a' → logprob: -0.7689776420593262
    3. 'x' → logprob: -5.268977642059326
    4. 'op' → logprob: -6.393977642059326
    5. 'operation' → logprob: -7.018977642059326
    6. 'e' → logprob: -7.393977642059326
    7. 'ai' → logprob: -7.893977642059326
    8. 'line' → logprob: -8.018978118896484
    9. '_,' → logprob: -8.518978118896484
    10. 'l' → logprob: -8.518978118896484

Token 722: ')
' (ID: 446)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.28392067551612854
    2. ',' → logprob: -2.5339207649230957
    3. ')' → logprob: -2.9089207649230957
    4. 'i' → logprob: -2.9089207649230957
    5. ' a' → logprob: -3.5339207649230957
    6. ' i' → logprob: -4.158920764923096
    7. '   ' → logprob: -5.408920764923096
    8. ' à' → logprob: -6.033920764923096
    9. 'à' → logprob: -7.033920764923096
    10. '1' → logprob: -7.283920764923096

Token 723: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1637164789135568e-05
    2. '```' → logprob: -12.250011444091797
    3. '
' → logprob: -13.000011444091797
    4. 'a' → logprob: -13.125011444091797
    5. ' for' → logprob: -13.625011444091797
    6. '   ' → logprob: -14.125011444091797
    7. '``' → logprob: -15.250011444091797
    8. '    
' → logprob: -15.500011444091797
    9. '  
' → logprob: -17.250011444091797
    10. '\' → logprob: -18.375011444091797

Token 724: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32797953486442566
    2. 'op' → logprob: -1.327979564666748
    3. 'operation' → logprob: -4.452979564666748
    4. 'i' → logprob: -7.327979564666748
    5. 'x' → logprob: -7.452979564666748
    6. ' op' → logprob: -7.577979564666748
    7. ' a' → logprob: -7.952979564666748
    8. 'ops' → logprob: -8.95297908782959
    9. 'ans' → logprob: -9.20297908782959
    10. 'o' → logprob: -9.57797908782959

Token 725: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3185514509677887
    2. '_,' → logprob: -1.6935514211654663
    3. 'a' → logprob: -3.443551540374756
    4. 'i' → logprob: -4.068551540374756
    5. '_' → logprob: -4.193551540374756
    6. 'in' → logprob: -4.693551540374756
    7. ',a' → logprob: -5.568551540374756
    8. '1' → logprob: -6.068551540374756
    9. ' ,' → logprob: -6.318551540374756
    10. '_i' → logprob: -6.568551540374756

Token 726: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.8624639324116288e-06
    2. ' b' → logprob: -13.250001907348633
    3. '	b' → logprob: -23.875001907348633
    4. '
' → logprob: -25.625001907348633
    5. '   ' → logprob: -25.625001907348633
    6. ',b' → logprob: -26.375001907348633
    7. ' ' → logprob: -26.625001907348633
    8. '

' → logprob: -26.750001907348633
    9. '_b' → logprob: -27.250001907348633
    10. '_,' → logprob: -27.500001907348633

Token 727: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.6312321753939614e-05
    2. ',c' → logprob: -10.375036239624023
    3. ' ,' → logprob: -12.750036239624023
    4. 'c' → logprob: -13.125036239624023
    5. '_,' → logprob: -17.375036239624023
    6. ' in' → logprob: -17.750036239624023
    7. 'in' → logprob: -18.500036239624023
    8. ' c' → logprob: -19.125036239624023
    9. ',
' → logprob: -20.250036239624023
    10. '‌,' → logprob: -20.375036239624023

Token 728: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.2729995988775045e-06
    2. ' c' → logprob: -12.000006675720215
    3. '	c' → logprob: -23.2500057220459
    4. ' ' → logprob: -23.7500057220459
    5. '   ' → logprob: -24.2500057220459
    6. ',c' → logprob: -24.5000057220459
    7. '  ' → logprob: -25.7500057220459
    8. 'a' → logprob: -26.5000057220459
    9. 'x' → logprob: -26.7500057220459
    10. 'cd' → logprob: -26.8750057220459

Token 729: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4974866644479334e-05
    2. ',d' → logprob: -11.625015258789062
    3. ' ,' → logprob: -12.125015258789062
    4. 'd' → logprob: -14.500015258789062
    5. ',c' → logprob: -17.250015258789062
    6. '_,' → logprob: -17.250015258789062
    7. ' in' → logprob: -17.875015258789062
    8. 'in' → logprob: -18.875015258789062
    9. ' d' → logprob: -19.375015258789062
    10. '‌,' → logprob: -19.750015258789062

Token 730: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.15310683415737e-05
    2. ' d' → logprob: -10.750021934509277
    3. '	d' → logprob: -24.87502098083496
    4. ' ' → logprob: -25.87502098083496
    5. 'D' → logprob: -26.50002098083496
    6. 'e' → logprob: -27.25002098083496
    7. '  ' → logprob: -27.87502098083496
    8. 'a' → logprob: -28.12502098083496
    9. '
' → logprob: -28.37502098083496
    10. ',d' → logprob: -28.50002098083496

Token 731: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1797579675912857
    2. ' in' → logprob: -1.8047579526901245
    3. ',' → logprob: -12.054758071899414
    4. ')' → logprob: -13.179758071899414
    5. '	in' → logprob: -13.679758071899414
    6. ' ' → logprob: -14.304758071899414
    7. '  ' → logprob: -14.554758071899414
    8. 'print' → logprob: -14.554758071899414
    9. 'range' → logprob: -14.679758071899414
    10. '```' → logprob: -14.679758071899414

Token 732: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.15310683415737e-05
    2. ' ans' → logprob: -10.750021934509277
    3. '(ans' → logprob: -18.62502098083496
    4. '	ans' → logprob: -19.75002098083496
    5. 'ann' → logprob: -21.75002098083496
    6. '   ' → logprob: -21.87502098083496
    7. '
' → logprob: -22.12502098083496
    8. 'Ans' → logprob: -22.37502098083496
    9. '_ans' → logprob: -22.75002098083496
    10. ' ' → logprob: -23.25002098083496

Token 733: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021940404549241066
    2. ':
' → logprob: -6.127193927764893
    3. 'print' → logprob: -12.25219440460205
    4. '):' → logprob: -13.25219440460205
    5. ':
' → logprob: -13.62719440460205
    6. ' print' → logprob: -15.25219440460205
    7. '   ' → logprob: -15.37719440460205
    8. ' :' → logprob: -15.62719440460205
    9. '):
' → logprob: -15.62719440460205
    10. ':

' → logprob: -15.75219440460205

Token 734: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008681101026013494
    2. ' print' → logprob: -7.750868320465088
    3. 'print' → logprob: -7.750868320465088
    4. '       ' → logprob: -12.12586784362793
    5. '	print' → logprob: -14.00086784362793
    6. '```' → logprob: -15.62586784362793
    7. '   ' → logprob: -15.75086784362793
    8. '<|end|>' → logprob: -16.12586784362793
    9. '    
' → logprob: -16.87586784362793
    10. '.print' → logprob: -17.12586784362793

Token 735: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.15310683415737e-05
    2. ' print' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.50002098083496
    4. '	print' → logprob: -23.12502098083496
    5. '```' → logprob: -24.25002098083496
    6. '#print' → logprob: -25.62502098083496
    7. 'printf' → logprob: -26.00002098083496
    8. '.print' → logprob: -26.37502098083496
    9. '
' → logprob: -26.37502098083496
    10. '       ' → logprob: -27.00002098083496

Token 736: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0004587903094943613
    2. 'a' → logprob: -7.750458717346191
    3. '(f' → logprob: -10.500458717346191
    4. '(' → logprob: -14.625458717346191
    5. 'f' → logprob: -15.750458717346191
    6. ' a' → logprob: -16.875459671020508
    7. '(i' → logprob: -20.500459671020508
    8. ' (' → logprob: -20.625459671020508
    9. '(
' → logprob: -21.000459671020508
    10. '("{}' → logprob: -21.125459671020508

Token 737: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032327326480299234
    2. ',b' → logprob: -6.003232955932617
    3. ' ,' → logprob: -7.253232955932617
    4. 'b' → logprob: -10.003232955932617
    5. ' b' → logprob: -12.628232955932617
    6. ',end' → logprob: -15.253232955932617
    7. ',
' → logprob: -17.003232955932617
    8. '   ' → logprob: -18.503232955932617
    9. 'end' → logprob: -19.503232955932617
    10. ')' → logprob: -19.503232955932617

Token 738: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0206720617134124e-05
    2. ' b' → logprob: -11.50001049041748
    3. ' ' → logprob: -23.375009536743164
    4. '   ' → logprob: -23.875009536743164
    5. '	b' → logprob: -24.125009536743164
    6. '    ' → logprob: -25.250009536743164
    7. '  ' → logprob: -25.625009536743164
    8. ')b' → logprob: -25.750009536743164
    9. '     ' → logprob: -27.250009536743164
    10. ',b' → logprob: -27.375009536743164

Token 739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007042617071419954
    2. 'c' → logprob: -5.007042407989502
    3. ',c' → logprob: -8.13204288482666
    4. ' ,' → logprob: -10.38204288482666
    5. ' c' → logprob: -13.00704288482666
    6. ',
' → logprob: -16.882041931152344
    7. ')' → logprob: -19.382041931152344
    8. '   ' → logprob: -19.382041931152344
    9. '_,' → logprob: -19.882041931152344
    10. ')c' → logprob: -20.257041931152344

Token 740: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.306760805164231e-05
    2. ' c' → logprob: -11.25001335144043
    3. '	c' → logprob: -22.00001335144043
    4. ')c' → logprob: -22.87501335144043
    5. '(c' → logprob: -23.87501335144043
    6. ',c' → logprob: -24.37501335144043
    7. '$c' → logprob: -24.62501335144043
    8. 'cd' → logprob: -25.62501335144043
    9. ' ' → logprob: -25.75001335144043
    10. '```' → logprob: -26.00001335144043

Token 741: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002100965939462185
    2. 'd' → logprob: -9.00020980834961
    3. ',d' → logprob: -9.50020980834961
    4. ' ,' → logprob: -11.37520980834961
    5. ' d' → logprob: -14.87520980834961
    6. ')' → logprob: -18.62520980834961
    7. 's' → logprob: -19.87520980834961
    8. ' ' → logprob: -20.50020980834961
    9. '_,' → logprob: -20.75020980834961
    10. '   ' → logprob: -20.75020980834961

Token 742: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.941850526549388e-06
    2. ' d' → logprob: -11.750007629394531
    3. '	d' → logprob: -21.62500762939453
    4. ')d' → logprob: -22.75000762939453
    5. '   ' → logprob: -23.75000762939453
    6. ' ' → logprob: -24.00000762939453
    7. '  ' → logprob: -25.00000762939453
    8. ')' → logprob: -25.75000762939453
    9. '$d' → logprob: -25.75000762939453
    10. ',d' → logprob: -26.12500762939453

Token 743: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.625
    3. ' )' → logprob: -15.625
    4. '),' → logprob: -19.25
    5. ')`' → logprob: -19.375
    6. ')}' → logprob: -19.625
    7. ')#' → logprob: -19.625
    8. '))' → logprob: -20.375
    9. ')**' → logprob: -20.5
    10. ').' → logprob: -21.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 741
Tokens correctement prédits (1ère position, stricte): 210
Tokens correctement prédits (1ère position, avec adaptation): 216
Tokens correctement prédits (top 10): 450
Précision stricte (1ère position): 28.34%
Précision adaptée (1ère position): 29.15%
Précision (top 10): 60.73%
================================================================================
