================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!/usr/bin/env python3

# Importation du module sys pour utiliser des fonctionnalités du système, 
# comme la lecture d'entrée standard et la modification de la limite de récursion.
import sys

# Importation du module math pour des fonctions mathématiques avancées,
# qui n'est pas utilisé ici mais souvent importé par convention dans les concours.
import math

# Importation de fonctions bisect_right et bisect_left depuis le module bisect,
# utilisées pour la recherche binaire sur des listes triées
from bisect import bisect_right as br
from bisect import bisect_left as bl

# Modification de la limite maximale de la profondeur de récursion de Python.
# Utile si le code utilise la récursion profonde (ce qui n'est pas le cas ici,
# mais souvent fait pour des raisons de sécurité dans les problèmes d'algorithme).
sys.setrecursionlimit(2147483647)

# Importation de fonctions utiles pour gérer des files de priorité min-heap:
# heappush: ajoute un élément au tas,
# heappop: retire et retourne le plus petit élément du tas,
# heappushpop: pousse puis pop dans un seul mouvement.
from heapq import heappush, heappop, heappushpop

# Importation de defaultdict depuis collections qui permet d'avoir des dictionnaires
# avec une valeur par défaut, ce qui évite les erreurs de clé.
from collections import defaultdict

# Importation de accumulate depuis itertools, qui crée des accumulations (sommes partielles)
from itertools import accumulate

# Importation de Counter depuis collections, qui permet de compter les occurrences d'éléments dans une liste.
from collections import Counter

# Importation de deque (double-ended queue) depuis collections, 
# une file où l'on peut ajouter/enlever des éléments aux deux extrémités avec rapidité.
from collections import deque

# Importation de itemgetter depuis operator, utilisé pour obtenir des éléments à des positions spécifiques dans des objets.
from operator import itemgetter

# Importation de permutations depuis itertools, pour générer toutes les permutations possibles d'une séquence.
from itertools import permutations

# Définition d'une constante mod avec la valeur 10**9 + 7,
# une grande valeur première fréquemment utilisée pour prendre le reste lors de calculs
# afin d'éviter les surcharges de grands entiers. Non utilisée ci-dessous.
mod = 10**9 + 7

# Définition de l'infini positif, utilisé pour initialiser des distances infinies
# dans des algorithmes comme Dijkstra.
inf = float('inf')

# Fonction I: lit une ligne de l'entrée standard, supprime l'espace en fin de ligne,
# convertit la chaîne de caractères en entier et renvoie cet entier.
def I():
    return int(sys.stdin.readline())

# Fonction LI: lit une ligne de l'entrée standard, la divise en sous-chaînes avec split(),
# chaque sous-chaîne est convertie en entier avec map(int, ...), puis tout est converti en liste (list(...)).
# Cela est utile pour lire une liste d'entiers sur une seule ligne.
def LI():
    return list(map(int, sys.stdin.readline().split()))

# Définition de la fonction dijkstra qui calcule les plus courts chemins depuis
# un sommet source s dans un graphe pondéré à l'aide de l'algorithme de Dijkstra.
# Le graphe est attendu sous forme de liste d'adjacence, où chaque sommet a une liste
# de couples (voisin, coût).
def dijkstra(s, graph):
    # Création d'une liste pour stocker les distances minimales entre s et chaque sommet du graphe.
    # Elle est initialisée à l'infini pour tous les sommets.
    d = [inf]*n

    # La distance du sommet de départ s à lui-même est toujours 0.
    d[s] = 0

    # Initialisation du tas (heap) qui contiendra les sommets à traiter.
    # Le tas contiendra des tuples (distance, sommet).
    # On commence par mettre le sommet source avec une distance de 0.
    h = [(0, s)]

    # Boucle tant qu'il reste des éléments dans le tas, c'est-à-dire qu'il reste des sommets à explorer.
    while h:
        # On retire du tas le sommet avec la plus petite distance.
        c, v = heappop(h)

        # Si on a déjà trouvé une distance plus courte jusqu'à ce sommet,
        # on saute cette itération, car elle est obsolète.
        if d[v] < c:
            continue

        # Parcours de tous les voisins (t) du sommet v et des coûts associés.
        for t, cost in graph[v]:
            # Si le chemin passant par v vers t offre une distance plus courte,
            if d[v] + cost < d[t]:
                # On met à jour la distance minimale vers t.
                d[t] = d[v] + cost
                # Et on ajoute ce nouveau sommet à traiter dans le tas (avec sa nouvelle distance).
                heappush(h, (d[t], t))
    # Retourne la liste complète des distances minimales du sommet s à tous les sommets.
    return d

# Lecture des entiers n et m à partir de l'entrée standard.
# n représente le nombre de sommets (ou noeuds), m le nombre d'arêtes supplémentaires à lire ensuite.
n, m = LI()

# Initialisation d'une liste appelée edges, composée de n sous-listes vides.
# Chaque sous-liste edges[i] représentera la liste des voisins directs atteignables depuis le sommet i,
# chaque voisin étant représenté comme un tuple (sommet, coût).
edges = [[] for _ in range(n)]

# Cette boucle relie chaque sommet (sauf le premier) à son précédent (pour i variant de 1 à n-1) avec un coût de 0.
# Cela signifie que d'indice en indice, on peut avancer gratuitement.
for i in range(1, n):
    # edges[i] est la liste des voisins du sommet i.
    # On y ajoute le sommet i-1 avec un coût de 0.
    edges[i].append((i-1, 0))

# On lit ensuite m lignes décrivant des arêtes supplémentaires avec leur coût.
for _ in range(m):
    # Lecture de trois entiers sur la ligne: l (début), r (fin), c (coût).
    l, r, c = LI()
    # On ajoute une arête du sommet l-1 (en Python les indices commencent à 0) vers r-1 avec le coût c.
    edges[l-1].append((r-1, c))

# Calcul des distances minimales du sommet 0 à tous les autres sommets avec Dijkstra.
d = dijkstra(0, edges)

# Si la distance minimale au dernier sommet (indice n-1) reste l'infini, cela signifie qu'il n'est pas atteignable,
# donc on imprime -1 pour signaler l'absence de chemin.
if d[-1] == inf:
    print(-1)
# Sinon, on affiche la distance minimale trouvée du sommet 0 au sommet n-1.
else:
    print(d[-1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!/' (ID: 20670)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/env' (ID: 34630)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.05718377232551575
    2. '/python' → logprob: -3.3071837425231934
    3. '/env' → logprob: -4.057183742523193
    4. '/bash' → logprob: -6.682183742523193
    5. '/bin' → logprob: -7.932183742523193
    6. 'python' → logprob: -11.057184219360352
    7. '/
' → logprob: -11.432184219360352
    8. '#!/' → logprob: -11.932184219360352
    9. '/
/' → logprob: -12.182184219360352
    10. '/b' → logprob: -13.182184219360352

Token 4: ' python' (ID: 22752)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.0789705365896225
    2. ' python' → logprob: -2.578970432281494
    3. 'bash' → logprob: -9.578970909118652
    4. ' bash' → logprob: -11.953970909118652
    5. 'py' → logprob: -13.578970909118652
    6. 'perl' → logprob: -13.703970909118652
    7. 'php' → logprob: -14.203970909118652
    8. 'ruby' → logprob: -14.328970909118652
    9. 'node' → logprob: -14.828970909118652
    10. '```' → logprob: -14.828970909118652

Token 5: '3' (ID: 18)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7842494249343872
    2. '3' → logprob: -1.0342494249343872
    3. 'import' → logprob: -2.1592493057250977
    4. '```' → logprob: -3.1592493057250977
    5. '\' → logprob: -4.034249305725098
    6. '-' → logprob: -6.034249305725098
    7. ' import' → logprob: -6.534249305725098
    8. '\r' → logprob: -6.659249305725098
    9. '  
' → logprob: -6.659249305725098
    10. '\x' → logprob: -7.034249305725098

Token 6: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.22186322510242462
    2. 'import' → logprob: -1.7218632698059082
    3. '```' → logprob: -4.721863269805908
    4. '\' → logprob: -5.346863269805908
    5. '
' → logprob: -5.971863269805908
    6. '  
' → logprob: -6.471863269805908
    7. '' → logprob: -7.596863269805908
    8. ' 
' → logprob: -7.846863269805908
    9. 'newline' → logprob: -8.09686279296875
    10. 'print' → logprob: -8.22186279296875

Token 7: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.056324854493141174
    2. '\n' → logprob: -3.1813249588012695
    3. 'print' → logprob: -4.4313249588012695
    4. '\' → logprob: -7.9313249588012695
    5. '```' → logprob: -7.9313249588012695
    6. '' → logprob: -9.18132495880127
    7. '#' → logprob: -9.43132495880127
    8. ' import' → logprob: -9.68132495880127
    9. ' 
' → logprob: -9.93132495880127
    10. '(import' → logprob: -10.18132495880127

Token 8: ' Import' (ID: 19998)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.49029895663261414
    2. '#' → logprob: -1.8652989864349365
    3. '#!/' → logprob: -2.3652989864349365
    4. '\n' → logprob: -2.9902989864349365
    5. '#!' → logprob: -3.2402989864349365
    6. '```' → logprob: -3.8652989864349365
    7. '!' → logprob: -3.9902989864349365
    8. 'p' → logprob: -5.990298748016357
    9. 'im' → logprob: -6.365298748016357
    10. 'f' → logprob: -6.865298748016357

Token 9: 'ation' (ID: 387)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.5092759728431702
    2. ' ' → logprob: -1.0092759132385254
    3. ' import' → logprob: -5.009275913238525
    4. ' from' → logprob: -5.509275913238525
    5. ' numpy' → logprob: -5.509275913238525
    6. ' pandas' → logprob: -6.009275913238525
    7. ' collections' → logprob: -6.009275913238525
    8. ' math' → logprob: -6.134275913238525
    9. '<|end|>' → logprob: -6.509275913238525
    10. ' itertools' → logprob: -6.634275913238525

Token 10: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22427959740161896
    2. 'import' → logprob: -2.7242796421051025
    3. ' import' → logprob: -3.3492796421051025
    4. '```' → logprob: -3.3492796421051025
    5. ' ```' → logprob: -3.9742796421051025
    6. '<|end|>' → logprob: -4.099279403686523
    7. '<|end|>' → logprob: -4.849279403686523
    8. 's' → logprob: -5.099279403686523
    9. ' from' → logprob: -5.474279403686523
    10. '_' → logprob: -6.224279403686523

Token 11: ' module' (ID: 8827)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.11219699680805206
    2. ' ' → logprob: -3.112196922302246
    3. ' sys' → logprob: -3.862196922302246
    4. 'os' → logprob: -4.362196922302246
    5. 's' → logprob: -5.487196922302246
    6. ' pandas' → logprob: -5.862196922302246
    7. ' module' → logprob: -6.112196922302246
    8. ' math' → logprob: -6.362196922302246
    9. ' socket' → logprob: -6.362196922302246
    10. ' numpy' → logprob: -6.612196922302246

Token 12: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.957664966583252
    2. ' import' → logprob: -1.457664966583252
    3. 'import' → logprob: -1.582664966583252
    4. ' ' → logprob: -2.082664966583252
    5. ' from' → logprob: -4.582664966583252
    6. '_' → logprob: -4.832664966583252
    7. 's' → logprob: -5.082664966583252
    8. 'os' → logprob: -5.457664966583252
    9. ' ```' → logprob: -5.707664966583252
    10. '```' → logprob: -5.957664966583252

Token 13: ' pour' (ID: 1930)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0123162055388093
    2. '```' → logprob: -4.7623162269592285
    3. '
' → logprob: -6.1373162269592285
    4. '\n' → logprob: -6.8873162269592285
    5. ' import' → logprob: -8.13731575012207
    6. '``' → logprob: -10.51231575012207
    7. '
' → logprob: -10.63731575012207
    8. '\' → logprob: -10.63731575012207
    9. '<|end|>' → logprob: -10.63731575012207
    10. ''import' → logprob: -11.01231575012207

Token 14: ' utiliser' (ID: 43227)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.07329170405864716
    2. ' manip' → logprob: -3.323291778564453
    3. ' utiliser' → logprob: -4.448291778564453
    4. ' accéder' → logprob: -5.073291778564453
    5. 'import' → logprob: -5.573291778564453
    6. ' l' → logprob: -5.698291778564453
    7. ' pouvoir' → logprob: -6.323291778564453
    8. ' permettre' → logprob: -6.573291778564453
    9. ' récupérer' → logprob: -6.698291778564453
    10. ' la' → logprob: -6.698291778564453

Token 15: ' des' (ID: 731)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.40504753589630127
    2. ' le' → logprob: -2.0300474166870117
    3. ' ' → logprob: -3.0300474166870117
    4. ' system' → logprob: -3.5300474166870117
    5. ' import' → logprob: -3.7800474166870117
    6. ' argv' → logprob: -3.9050474166870117
    7. ' les' → logprob: -4.030047416687012
    8. ' l' → logprob: -4.280047416687012
    9. ' la' → logprob: -4.530047416687012
    10. ' ' → logprob: -4.655047416687012

Token 16: ' fonctionnalités' (ID: 111283)
  Prédit: 'arguments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arguments' → logprob: -0.4554041028022766
    2. ' arguments' → logprob: -1.2054040431976318
    3. ' fonctionnalités' → logprob: -4.080404281616211
    4. ' fonctions' → logprob: -4.330404281616211
    5. 'argv' → logprob: -4.705404281616211
    6. '   ' → logprob: -4.705404281616211
    7. '```' → logprob: -5.455404281616211
    8. 'import' → logprob: -5.705404281616211
    9. ' ' → logprob: -5.705404281616211
    10. '  ' → logprob: -6.705404281616211

Token 17: ' du' (ID: 1462)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.27377066016197205
    2. ' import' → logprob: -2.148770570755005
    3. ' de' → logprob: -3.273770570755005
    4. ' ' → logprob: -3.273770570755005
    5. '<|end|>' → logprob: -3.773770570755005
    6. '```' → logprob: -5.148770809173584
    7. ' liées' → logprob: -5.648770809173584
    8. '.' → logprob: -5.898770809173584
    9. ' supplémentaires' → logprob: -6.523770809173584
    10. '<|end|>' → logprob: -6.773770809173584

Token 18: ' système' (ID: 30034)
  Prédit: ' système'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' système' → logprob: -0.4029519259929657
    2. ' ' → logprob: -1.527951955795288
    3. ' sys' → logprob: -3.027951955795288
    4. ' system' → logprob: -3.152951955795288
    5. 'system' → logprob: -5.152951717376709
    6. 's' → logprob: -5.152951717376709
    7. ' module' → logprob: -5.402951717376709
    8. 'sys' → logprob: -5.652951717376709
    9. 'module' → logprob: -6.527951717376709
    10. ' ' → logprob: -7.652951717376709

Token 19: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.023357518017292023
    2. '```' → logprob: -4.023357391357422
    3. ' import' → logprob: -5.898357391357422
    4. '<|end|>' → logprob: -6.648357391357422
    5. '
' → logprob: -7.273357391357422
    6. '\n' → logprob: -8.523357391357422
    7. '<|end|>' → logprob: -9.773357391357422
    8. '\' → logprob: -10.148357391357422
    9. '``' → logprob: -10.648357391357422
    10. ''import' → logprob: -10.773357391357422

Token 20: ' 
' (ID: 793)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 21: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.11117628961801529
    2. ' notamment' → logprob: -3.6111762523651123
    3. ' such' → logprob: -3.9861762523651123
    4. ' en' → logprob: -4.611176490783691
    5. ' comme' → logprob: -4.861176490783691
    6. ' import' → logprob: -5.236176490783691
    7. ' telles' → logprob: -5.236176490783691
    8. '<|end|>' → logprob: -5.236176490783691
    9. ' os' → logprob: -5.361176490783691
    10. ' like' → logprob: -5.611176490783691

Token 22: ' comme' (ID: 7971)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8673389554023743
    2. ' notamment' → logprob: -1.1173388957977295
    3. ' comme' → logprob: -2.3673388957977295
    4. 'comme' → logprob: -3.1173388957977295
    5. ' telles' → logprob: -3.3673388957977295
    6. ' en' → logprob: -3.6173388957977295
    7. ' such' → logprob: -3.9923388957977295
    8. ' like' → logprob: -4.742339134216309
    9. 'not' → logprob: -5.242339134216309
    10. '#' → logprob: -5.367339134216309

Token 23: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.4285831451416016
    2. 'l' → logprob: -1.9285831451416016
    3. 'argv' → logprob: -2.0535831451416016
    4. ' argv' → logprob: -2.0535831451416016
    5. 'la' → logprob: -2.1785831451416016
    6. ' l' → logprob: -2.6785831451416016
    7. 'les' → logprob: -2.9285831451416016
    8. ' sys' → logprob: -3.0535831451416016
    9. ' les' → logprob: -3.3035831451416016
    10. 'sys' → logprob: -3.4285831451416016

Token 24: ' lecture' (ID: 31993)
  Prédit: ' lecture'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lecture' → logprob: -0.9773209691047668
    2. ' gestion' → logprob: -1.352320909500122
    3. 'gestion' → logprob: -1.852320909500122
    4. 'lecture' → logprob: -2.102320909500122
    5. ' manipulation' → logprob: -3.852320909500122
    6. ' sortie' → logprob: -3.977320909500122
    7. 'ligne' → logprob: -4.352321147918701
    8. 's' → logprob: -4.477321147918701
    9. ' ligne' → logprob: -4.602321147918701
    10. 'sort' → logprob: -6.227321147918701

Token 25: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15091778337955475
    2. '<|end|>' → logprob: -2.9009177684783936
    3. 'import' → logprob: -3.6509177684783936
    4. ' de' → logprob: -3.7759177684783936
    5. ',' → logprob: -4.900918006896973
    6. ' des' → logprob: -5.400918006896973
    7. '<|end|>' → logprob: -5.400918006896973
    8. ' ,' → logprob: -5.400918006896973
    9. 'from' → logprob: -5.900918006896973
    10. ' d' → logprob: -6.150918006896973

Token 26: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.766067624092102
    2. ''entrée' → logprob: -1.266067624092102
    3. ''un' → logprob: -2.8910675048828125
    4. ''une' → logprob: -3.3910675048828125
    5. ' arguments' → logprob: -3.6410675048828125
    6. 'e' → logprob: -3.6410675048828125
    7. ''espace' → logprob: -4.0160675048828125
    8. 'es' → logprob: -4.0160675048828125
    9. ' argv' → logprob: -4.2660675048828125
    10. ' ' → logprob: -4.7660675048828125

Token 27: ' standard' (ID: 7024)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.017671501263976097
    2. '```' → logprob: -5.267671585083008
    3. '<|end|>' → logprob: -5.392671585083008
    4. '
' → logprob: -6.517671585083008
    5. ',' → logprob: -6.642671585083008
    6. '#' → logprob: -6.767671585083008
    7. '\' → logprob: -6.892671585083008
    8. '\n' → logprob: -7.267671585083008
    9. '<|end|>' → logprob: -7.892671585083008
    10. ' import' → logprob: -8.017671585083008

Token 28: ' et' (ID: 859)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.00849117711186409
    2. '
' → logprob: -4.883491039276123
    3. '```' → logprob: -8.258491516113281
    4. '

' → logprob: -8.633491516113281
    5. '\n' → logprob: -8.883491516113281
    6. '\' → logprob: -9.383491516113281
    7. '#' → logprob: -9.633491516113281
    8. ' import' → logprob: -10.008491516113281
    9. ' 
' → logprob: -10.383491516113281
    10. '<|end|>' → logprob: -11.008491516113281

Token 29: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.1766773760318756
    2. 'l' → logprob: -2.1766774654388428
    3. ' la' → logprob: -3.4266774654388428
    4. 'la' → logprob: -5.801677227020264
    5. 'é' → logprob: -5.926677227020264
    6. 'le' → logprob: -6.301677227020264
    7. 'e' → logprob: -6.926677227020264
    8. '#' → logprob: -7.176677227020264
    9. ' les' → logprob: -7.239177227020264
    10. '```' → logprob: -7.614177227020264

Token 30: ' modification' (ID: 29847)
  Prédit: 'criture'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'criture' → logprob: -0.4803689122200012
    2. 'é' → logprob: -2.2303688526153564
    3. ' sortie' → logprob: -2.6053688526153564
    4. ' manipulation' → logprob: -3.2303688526153564
    5. ' gestion' → logprob: -3.7303688526153564
    6. 'gestion' → logprob: -3.9803688526153564
    7. '’écriture' → logprob: -3.9803688526153564
    8. ' red' → logprob: -4.2303690910339355
    9. ' écr' → logprob: -4.6053690910339355
    10. 'ff' → logprob: -5.3553690910339355

Token 31: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7094584107398987
    2. ' de' → logprob: -1.459458351135254
    3. ' du' → logprob: -1.834458351135254
    4. 'import' → logprob: -3.334458351135254
    5. '<|end|>' → logprob: -3.584458351135254
    6. ' d' → logprob: -3.959458351135254
    7. 's' → logprob: -4.084458351135254
    8. ' ' → logprob: -4.834458351135254
    9. ' import' → logprob: -5.709458351135254
    10. ' of' → logprob: -6.334458351135254

Token 32: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8534284234046936
    2. 'la' → logprob: -0.8534284234046936
    3. ' la' → logprob: -2.353428363800049
    4. 'sys' → logprob: -3.853428363800049
    5. ' l' → logprob: -4.228428363800049
    6. ' sys' → logprob: -4.353428363800049
    7. 's' → logprob: -7.103428363800049
    8. 'argv' → logprob: -7.228428363800049
    9. 'path' → logprob: -7.603428363800049
    10. 'le' → logprob: -7.853428363800049

Token 33: ' limite' (ID: 48939)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -1.1716958284378052
    2. 'sys' → logprob: -1.7966958284378052
    3. '#!/' → logprob: -2.7966957092285156
    4. 'import' → logprob: -2.9216957092285156
    5. 'variable' → logprob: -2.9216957092285156
    6. 'path' → logprob: -3.0466957092285156
    7. 'd' → logprob: -3.1716957092285156
    8. '#' → logprob: -3.2966957092285156
    9. 'mé' → logprob: -3.2966957092285156
    10. 's' → logprob: -3.9216957092285156

Token 34: ' de' (ID: 334)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1252644807100296
    2. ' d' → logprob: -2.6252644062042236
    3. ' de' → logprob: -4.125264644622803
    4. 'd' → logprob: -4.250264644622803
    5. ' import' → logprob: -5.750264644622803
    6. ' des' → logprob: -5.875264644622803
    7. 's' → logprob: -5.875264644622803
    8. 'sys' → logprob: -6.625264644622803
    9. '#' → logprob: -7.250264644622803
    10. ' of' → logprob: -7.375264644622803

Token 35: ' réc' (ID: 36254)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06369728595018387
    2. 'rec' → logprob: -2.813697338104248
    3. ' réc' → logprob: -6.813697338104248
    4. 'ré' → logprob: -8.43869686126709
    5. 're' → logprob: -8.68869686126709
    6. 'la' → logprob: -9.81369686126709
    7. '
' → logprob: -9.93869686126709
    8. 'stack' → logprob: -10.18869686126709
    9. 'import' → logprob: -10.81369686126709
    10. ' recursion' → logprob: -10.81369686126709

Token 36: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.15379464626312256
    2. 'urs' → logprob: -2.278794765472412
    3. 'ur' → logprob: -3.403794765472412
    4. 'u' → logprob: -5.153794765472412
    5. 'ursive' → logprob: -7.903794765472412
    6. 'urrence' → logprob: -9.153794288635254
    7. '##' → logprob: -9.278794288635254
    8. '#' → logprob: -9.403794288635254
    9. '**' → logprob: -9.653794288635254
    10. '```' → logprob: -9.653794288635254

Token 37: '.
' (ID: 558)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.01214368361979723
    2. '
' → logprob: -5.262143611907959
    3. '```' → logprob: -5.637143611907959
    4. '\n' → logprob: -6.387143611907959
    5. '#' → logprob: -7.762143611907959
    6. '' → logprob: -8.137144088745117
    7. '<|end|>' → logprob: -8.137144088745117
    8. '

' → logprob: -8.762144088745117
    9. ' import' → logprob: -9.512144088745117
    10. '#!/' → logprob: -9.762144088745117

Token 38: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0032776487059891224
    2. '\n' → logprob: -6.628277778625488
    3. '
' → logprob: -6.753277778625488
    4. '```' → logprob: -7.503277778625488
    5. '' → logprob: -9.753277778625488
    6. '#' → logprob: -9.753277778625488
    7. '

' → logprob: -10.753277778625488
    8. '#!/' → logprob: -11.003277778625488
    9. '\' → logprob: -11.128277778625488
    10. ' import' → logprob: -11.128277778625488

Token 39: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0007304243044927716
    2. ' ' → logprob: -7.625730514526367
    3. ' space' → logprob: -9.375730514526367
    4. ' ' → logprob: -9.750730514526367
    5. 'sys' → logprob: -9.750730514526367
    6. ' system' → logprob: -10.375730514526367
    7. '	sys' → logprob: -12.375730514526367
    8. ' os' → logprob: -13.125730514526367
    9. '=sys' → logprob: -14.250730514526367
    10. 'space' → logprob: -14.375730514526367

Token 40: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6085184812545776
    2. '
' → logprob: -0.8585184812545776
    3. '<|end|>' → logprob: -4.858518600463867
    4. 'import' → logprob: -4.983518600463867
    5. '' → logprob: -5.608518600463867
    6. '\n' → logprob: -5.733518600463867
    7. '```' → logprob: -5.733518600463867
    8. '#' → logprob: -5.858518600463867
    9. '<|end|>' → logprob: -6.858518600463867
    10. '
' → logprob: -7.483518600463867

Token 41: '#' (ID: 2)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20037753880023956
    2. '#' → logprob: -1.9503775835037231
    3. 'import' → logprob: -4.200377464294434
    4. 'def' → logprob: -4.200377464294434
    5. '
' → logprob: -5.200377464294434
    6. '

' → logprob: -6.700377464294434
    7. '```' → logprob: -7.825377464294434
    8. '' → logprob: -7.825377464294434
    9. 'max' → logprob: -7.950377464294434
    10. 'print' → logprob: -8.325377464294434

Token 42: ' Import' (ID: 19998)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.018483523279428482
    2. '#' → logprob: -4.018483638763428
    3. 'def' → logprob: -8.51848316192627
    4. 'import' → logprob: -9.26848316192627
    5. ' sys' → logprob: -10.64348316192627
    6. 'rec' → logprob: -11.64348316192627
    7. 'Rec' → logprob: -13.14348316192627
    8. 'input' → logprob: -13.89348316192627
    9. ' recursion' → logprob: -14.01848316192627
    10. 'print' → logprob: -14.14348316192627

Token 43: 'ation' (ID: 387)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -1.0921132564544678
    2. ' math' → logprob: -1.0921132564544678
    3. ' numpy' → logprob: -2.4671132564544678
    4. ' json' → logprob: -3.0921132564544678
    5. ' itertools' → logprob: -3.2171132564544678
    6. ' ' → logprob: -3.9671132564544678
    7. ' collections' → logprob: -3.9671132564544678
    8. ' argparse' → logprob: -4.092113494873047
    9. ' urllib' → logprob: -4.092113494873047
    10. ' pandas' → logprob: -4.217113494873047

Token 44: ' du' (ID: 1462)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.7992983460426331
    2. '<|end|>' → logprob: -1.1742982864379883
    3. ' math' → logprob: -2.7992982864379883
    4. ' de' → logprob: -2.7992982864379883
    5. ' des' → logprob: -3.6742982864379883
    6. ' json' → logprob: -3.9242982864379883
    7. ' ' → logprob: -4.424298286437988
    8. '<|end|>' → logprob: -4.799298286437988
    9. ' argparse' → logprob: -4.924298286437988
    10. ' ' → logprob: -5.049298286437988

Token 45: ' module' (ID: 8827)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.9836777448654175
    2. ' threading' → logprob: -0.9836777448654175
    3. ' math' → logprob: -1.9836777448654175
    4. ' collections' → logprob: -2.358677864074707
    5. 'os' → logprob: -4.733677864074707
    6. ' argparse' → logprob: -5.608677864074707
    7. 'collections' → logprob: -6.233677864074707
    8. 'math' → logprob: -6.358677864074707
    9. ' re' → logprob: -7.233677864074707
    10. ' random' → logprob: -7.358677864074707

Token 46: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.11195934563875198
    2. ' math' → logprob: -3.361959457397461
    3. 'os' → logprob: -3.611959457397461
    4. ' threading' → logprob: -3.861959457397461
    5. ' collections' → logprob: -3.986959457397461
    6. 'math' → logprob: -6.111959457397461
    7. 'collections' → logprob: -6.736959457397461
    8. ' argparse' → logprob: -7.611959457397461
    9. ' itertools' → logprob: -7.986959457397461
    10. ' random' → logprob: -9.361959457397461

Token 47: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ' des' (ID: 731)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.12515361607074738
    2. ' ' → logprob: -3.2501535415649414
    3. ' utiliser' → logprob: -3.6251535415649414
    4. 'import' → logprob: -4.375153541564941
    5. ' sqrt' → logprob: -4.500153541564941
    6. ' ' → logprob: -5.000153541564941
    7. ' import' → logprob: -5.250153541564941
    8. ' use' → logprob: -6.125153541564941
    9. ' calcul' → logprob: -6.250153541564941
    10. 'math' → logprob: -6.625153541564941

Token 49: ' fonctions' (ID: 87283)
  Prédit: ' fonctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctions' → logprob: -0.9401484131813049
    2. ' math' → logprob: -1.3151483535766602
    3. ' calculations' → logprob: -2.06514835357666
    4. ' calcul' → logprob: -2.31514835357666
    5. 'calcul' → logprob: -3.56514835357666
    6. ' opérations' → logprob: -3.81514835357666
    7. ' functions' → logprob: -3.81514835357666
    8. ' fonctionnalités' → logprob: -4.31514835357666
    9. 'e' → logprob: -4.94014835357666
    10. 'ématiques' → logprob: -5.81514835357666

Token 50: ' math' (ID: 13324)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: 'ématiques' (ID: 114734)
  Prédit: 'ématiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ématiques' → logprob: -0.003926775883883238
    2. 'ématique' → logprob: -5.628926753997803
    3. 'import' → logprob: -8.753927230834961
    4. 'étiques' → logprob: -9.378927230834961
    5. 'ém' → logprob: -10.003927230834961
    6. 'é' → logprob: -11.003927230834961
    7. '```' → logprob: -12.628927230834961
    8. 'éma' → logprob: -13.253927230834961
    9. '<|end|>' → logprob: -13.253927230834961
    10. 'es' → logprob: -13.753927230834961

Token 52: ' avanc' (ID: 87985)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: 'ées' (ID: 5161)
  Prédit: 'ématiques'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ématiques' → logprob: -0.002683968050405383
    2. 'ématique' → logprob: -6.252684116363525
    3. 'étiques' → logprob: -8.252683639526367
    4. 'é' → logprob: -9.002683639526367
    5. 'ém' → logprob: -9.252683639526367
    6. 'import' → logprob: -9.627683639526367
    7. 'es' → logprob: -10.002683639526367
    8. '.' → logprob: -10.627683639526367
    9. 'éma' → logprob: -10.877683639526367
    10. 'niques' → logprob: -11.002683639526367

Token 54: ',
' (ID: 412)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5510361194610596
    2. '<|end|>' → logprob: -1.4260361194610596
    3. '.' → logprob: -1.9260361194610596
    4. ',' → logprob: -3.9260361194610596
    5. '<|end|>' → logprob: -5.0510358810424805
    6. ' import' → logprob: -5.4260358810424805
    7. ' as' → logprob: -6.3010358810424805
    8. '```' → logprob: -6.8010358810424805
    9. ' (' → logprob: -7.0510358810424805
    10. ')' → logprob: -7.3010358810424805

Token 55: '#' (ID: 2)
  Prédit: ' comme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comme' → logprob: -0.8987523913383484
    2. '<|end|>' → logprob: -1.6487524509429932
    3. 'import' → logprob: -2.148752450942993
    4. ' telles' → logprob: -2.398752450942993
    5. ' like' → logprob: -2.648752450942993
    6. ' as' → logprob: -3.523752450942993
    7. ' notamment' → logprob: -3.773752450942993
    8. ' en' → logprob: -4.148752212524414
    9. ' such' → logprob: -4.523752212524414
    10. 'comme' → logprob: -5.023752212524414

Token 56: ' qui' (ID: 2780)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6145272254943848
    2. ' import' → logprob: -2.1145272254943848
    3. ' comme' → logprob: -2.1145272254943848
    4. ' notamment' → logprob: -2.6145272254943848
    5. ' telles' → logprob: -2.7395272254943848
    6. ' like' → logprob: -3.1145272254943848
    7. ' such' → logprob: -4.614527225494385
    8. ' en' → logprob: -5.364527225494385
    9. ' math' → logprob: -5.739527225494385
    10. 'comme' → logprob: -5.989527225494385

Token 57: ' n' (ID: 297)
  Prédit: ' pourraient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pourraient' → logprob: -1.4220679998397827
    2. ' seront' → logprob: -1.5470679998397827
    3. ' peuvent' → logprob: -1.9220679998397827
    4. ' pourront' → logprob: -2.0470681190490723
    5. ' pourrait' → logprob: -2.9220681190490723
    6. ' vont' → logprob: -3.5470681190490723
    7. ' sont' → logprob: -3.7970681190490723
    8. ' pourra' → logprob: -3.7970681190490723
    9. ' peut' → logprob: -3.9220681190490723
    10. ' permettront' → logprob: -4.047068119049072

Token 58: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0688300132751465
    2. 'é' → logprob: -1.3188300132751465
    3. ''ont' → logprob: -1.5688300132751465
    4. 'a' → logprob: -3.4438300132751465
    5. ''' → logprob: -3.5688300132751465
    6. ''a' → logprob: -3.9438300132751465
    7. ' '' → logprob: -4.4438300132751465
    8. 'éc' → logprob: -4.5688300132751465
    9. ' sont' → logprob: -4.9438300132751465
    10. 'u' → logprob: -5.0688300132751465

Token 59: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.12445925921201706
    2. 'pas' → logprob: -2.2494592666625977
    3. '<|end|>' → logprob: -5.874459266662598
    4. 't' → logprob: -5.999459266662598
    5. '```' → logprob: -7.124459266662598
    6. 'app' → logprob: -7.874459266662598
    7. 'a' → logprob: -7.874459266662598
    8. '_pas' → logprob: -8.124459266662598
    9. 'not' → logprob: -8.249459266662598
    10. 'ont' → logprob: -8.249459266662598

Token 60: ' utilisé' (ID: 53138)
  Prédit: ' utilisées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisées' → logprob: -1.052491307258606
    2. ' utilisé' → logprob: -1.177491307258606
    3. 'util' → logprob: -2.5524911880493164
    4. ' used' → logprob: -2.9274911880493164
    5. '<|end|>' → logprob: -3.0524911880493164
    6. ' utilisée' → logprob: -3.0524911880493164
    7. ' pas' → logprob: -3.1774911880493164
    8. ' encore' → logprob: -4.177491188049316
    9. ' yet' → logprob: -4.802491188049316
    10. 'used' → logprob: -4.802491188049316

Token 61: ' ici' (ID: 27994)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.6521163582801819
    2. '<|end|>' → logprob: -1.152116298675537
    3. 'dans' → logprob: -2.027116298675537
    4. '.' → logprob: -4.652116298675537
    5. ' ' → logprob: -4.777116298675537
    6. '<|end|>' → logprob: -5.902116298675537
    7. ' in' → logprob: -6.027116298675537
    8. ' ' → logprob: -6.277116298675537
    9. ',' → logprob: -6.652116298675537
    10. ' ici' → logprob: -6.902116298675537

Token 62: ' mais' (ID: 2899)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' souvent' (ID: 28137)
  Prédit: ' pourrait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pourrait' → logprob: -0.4883667826652527
    2. ' peut' → logprob: -1.2383668422698975
    3. '<|end|>' → logprob: -3.6133668422698975
    4. ' est' → logprob: -3.7383668422698975
    5. ' pourra' → logprob: -4.363366603851318
    6. 'pe' → logprob: -4.863366603851318
    7. ' souvent' → logprob: -4.988366603851318
    8. ' pourraient' → logprob: -5.113366603851318
    9. ' could' → logprob: -6.113366603851318
    10. 'could' → logprob: -6.863366603851318

Token 64: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.14033503830432892
    2. 'util' → logprob: -2.7653350830078125
    3. '<|end|>' → logprob: -3.6403350830078125
    4. 'utile' → logprob: -3.7653350830078125
    5. ' utile' → logprob: -4.8903350830078125
    6. ' utiles' → logprob: -5.8903350830078125
    7. 'pr' → logprob: -6.5153350830078125
    8. 'important' → logprob: -7.2653350830078125
    9. 'pré' → logprob: -7.2653350830078125
    10. ' import' → logprob: -7.3903350830078125

Token 65: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0012401100248098373
    2. 'ées' → logprob: -6.876240253448486
    3. 'ed' → logprob: -9.376239776611328
    4. 'ée' → logprob: -9.751239776611328
    5. 'és' → logprob: -10.001239776611328
    6. 'e' → logprob: -12.376239776611328
    7. 'import' → logprob: -12.501239776611328
    8. 'É' → logprob: -12.751239776611328
    9. 'es' → logprob: -12.876239776611328
    10. '#' → logprob: -13.876239776611328

Token 66: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.03072546422481537
    2. 'par' → logprob: -4.030725479125977
    3. ' pour' → logprob: -4.905725479125977
    4. ' en' → logprob: -6.655725479125977
    5. 'pour' → logprob: -6.655725479125977
    6. ' au' → logprob: -7.405725479125977
    7. ' for' → logprob: -7.780725479125977
    8. ' dans' → logprob: -7.905725479125977
    9. '<|end|>' → logprob: -8.530725479125977
    10. '.' → logprob: -8.780725479125977

Token 67: ' convention' (ID: 39395)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.7971400022506714
    2. ' convention' → logprob: -1.5471400022506714
    3. 'hab' → logprob: -1.5471400022506714
    4. ' hab' → logprob: -2.297140121459961
    5. ' défaut' → logprob: -5.172140121459961
    6. 'habit' → logprob: -5.297140121459961
    7. ' préc' → logprob: -6.172140121459961
    8. ' habit' → logprob: -6.422140121459961
    9. 'default' → logprob: -6.547140121459961
    10. 'd' → logprob: -6.547140121459961

Token 68: ' dans' (ID: 2671)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5236892700195312
    2. '.' → logprob: -1.6486892700195312
    3. '<|end|>' → logprob: -2.1486892700195312
    4. '
' → logprob: -2.6486892700195312
    5. '

' → logprob: -4.398689270019531
    6. '<|end|>' → logprob: -4.898689270019531
    7. ',' → logprob: -5.773689270019531
    8. '```' → logprob: -5.773689270019531
    9. '.

' → logprob: -7.523689270019531
    10. ' import' → logprob: -7.898689270019531

Token 69: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9206811785697937
    2. 'les' → logprob: -1.2956812381744385
    3. ' les' → logprob: -1.9206812381744385
    4. 'des' → logprob: -2.7956812381744385
    5. ' beaucoup' → logprob: -3.2956812381744385
    6. ' de' → logprob: -3.2956812381744385
    7. 'd' → logprob: -4.795680999755859
    8. ' many' → logprob: -4.795680999755859
    9. 'le' → logprob: -5.045680999755859
    10. 'de' → logprob: -5.170680999755859

Token 70: ' concours' (ID: 79362)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.3242296576499939
    2. 'scripts' → logprob: -1.5742297172546387
    3. 'pro' → logprob: -3.9492297172546387
    4. ' scripts' → logprob: -3.9492297172546387
    5. 'codes' → logprob: -4.449229717254639
    6. 'code' → logprob: -4.699229717254639
    7. ' programmes' → logprob: -5.699229717254639
    8. 'alg' → logprob: -6.199229717254639
    9. 'programm' → logprob: -6.574229717254639
    10. 'programme' → logprob: -6.699229717254639

Token 71: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.003845328465104103
    2. '<|end|>' → logprob: -6.37884521484375
    3. '
' → logprob: -6.87884521484375
    4. ' import' → logprob: -7.50384521484375
    5. '<|end|>' → logprob: -7.87884521484375
    6. '

' → logprob: -9.75384521484375
    7. '```' → logprob: -10.12884521484375
    8. ' math' → logprob: -10.87884521484375
    9. ' ' → logprob: -11.12884521484375
    10. '#' → logprob: -11.87884521484375

Token 73: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.9743012671824545e-05
    2. 'math' → logprob: -10.875020027160645
    3. ' ' → logprob: -14.625020027160645
    4. ' ' → logprob: -16.125019073486328
    5. ' maths' → logprob: -16.750019073486328
    6. '_math' → logprob: -17.625019073486328
    7. ' ma' → logprob: -18.375019073486328
    8. ' Math' → logprob: -19.125019073486328
    9. '.math' → logprob: -19.125019073486328
    10. ' matem' → logprob: -19.250019073486328

Token 74: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.06151951849460602
    2. '
' → logprob: -3.0615196228027344
    3. '<|end|>' → logprob: -4.561519622802734
    4. '


' → logprob: -7.311519622802734
    5. '<|end|>' → logprob: -7.311519622802734
    6. '\n' → logprob: -8.061519622802734
    7. '```' → logprob: -8.186519622802734
    8. 'import' → logprob: -8.436519622802734
    9. ' 

' → logprob: -9.561519622802734
    10. '
' → logprob: -9.936519622802734

Token 75: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5264450907707214
    2. '
' → logprob: -1.9014451503753662
    3. '#' → logprob: -2.151445150375366
    4. 'def' → logprob: -2.401445150375366
    5. 'import' → logprob: -3.401445150375366
    6. '```' → logprob: -4.526444911956787
    7. '\' → logprob: -6.401444911956787
    8. 'class' → logprob: -6.651444911956787
    9. '\n' → logprob: -6.776444911956787
    10. '' → logprob: -7.026444911956787

Token 76: ' Import' (ID: 19998)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9790266156196594
    2. 'def' → logprob: -1.3540265560150146
    3. 'sys' → logprob: -1.3540265560150146
    4. ' sys' → logprob: -2.7290265560150146
    5. 'from' → logprob: -3.7290265560150146
    6. ' import' → logprob: -4.979026794433594
    7. '#' → logprob: -4.979026794433594
    8. ' from' → logprob: -6.479026794433594
    9. ' def' → logprob: -6.979026794433594
    10. '```' → logprob: -7.229026794433594

Token 77: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.5122241973876953
    2. 'lib' → logprob: -2.0122241973876953
    3. 'from' → logprob: -2.3872241973876953
    4. ' os' → logprob: -3.6372241973876953
    5. 'ing' → logprob: -3.7622241973876953
    6. ' itertools' → logprob: -3.8872241973876953
    7. ' random' → logprob: -4.512224197387695
    8. ' sys' → logprob: -4.512224197387695
    9. 'collections' → logprob: -4.637224197387695
    10. ' from' → logprob: -4.762224197387695

Token 78: ' de' (ID: 334)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5321159362792969
    2. ' os' → logprob: -1.5321159362792969
    3. ' sys' → logprob: -2.407115936279297
    4. ' json' → logprob: -3.282115936279297
    5. 'collections' → logprob: -3.907115936279297
    6. ' itertools' → logprob: -4.157115936279297
    7. ' random' → logprob: -4.657115936279297
    8. ' pandas' → logprob: -5.532115936279297
    9. ' numpy' → logprob: -5.657115936279297
    10. 'json' → logprob: -5.782115936279297

Token 79: ' fonctions' (ID: 87283)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.07967089861631393
    2. ' itertools' → logprob: -2.8296709060668945
    3. ' os' → logprob: -4.8296709060668945
    4. 'collections' → logprob: -4.9546709060668945
    5. ' functools' → logprob: -6.7046709060668945
    6. ' threading' → logprob: -6.9546709060668945
    7. 'os' → logprob: -9.204670906066895
    8. ' sys' → logprob: -9.704670906066895
    9. ' bis' → logprob: -10.329670906066895
    10. ' copy' → logprob: -10.329670906066895

Token 80: ' bis' (ID: 7204)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3141672909259796
    2. ' from' → logprob: -1.6891672611236572
    3. ' de' → logprob: -3.6891672611236572
    4. '<|end|>' → logprob: -3.8141672611236572
    5. 'deque' → logprob: -5.064167499542236
    6. 'de' → logprob: -5.439167499542236
    7. ' itertools' → logprob: -5.439167499542236
    8. ' deepcopy' → logprob: -5.689167499542236
    9. 'collections' → logprob: -5.939167499542236
    10. ' defaultdict' → logprob: -6.064167499542236

Token 81: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -8.911954500945285e-05
    2. 'e' → logprob: -9.375088691711426
    3. 'ec' → logprob: -12.875088691711426
    4. 'ected' → logprob: -15.000088691711426
    5. 'ection' → logprob: -15.375088691711426
    6. 'ectl' → logprob: -15.500088691711426
    7. 'ector' → logprob: -15.500088691711426
    8. 'ections' → logprob: -15.625088691711426
    9. 'ecta' → logprob: -15.750088691711426
    10. 't' → logprob: -16.125089645385742

Token 82: '_right' (ID: 24402)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.4130927324295044
    2. 'from' → logprob: -1.5380927324295044
    3. 'import' → logprob: -2.288092613220215
    4. ' import' → logprob: -4.413092613220215
    5. ' ' → logprob: -5.288092613220215
    6. ',' → logprob: -5.913092613220215
    7. 'ing' → logprob: -8.163092613220215
    8. ' module' → logprob: -8.163092613220215
    9. '_from' → logprob: -8.538092613220215
    10. '<|end|>' → logprob: -8.538092613220215

Token 83: ' et' (ID: 859)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.024381374940276146
    2. ' from' → logprob: -3.774381399154663
    3. ',' → logprob: -7.649381160736084
    4. 'de' → logprob: -8.149381637573242
    5. ' de' → logprob: -9.274381637573242
    6. ' ' → logprob: -9.649381637573242
    7. '```' → logprob: -10.024381637573242
    8. ' depuis' → logprob: -10.149381637573242
    9. '	from' → logprob: -10.274381637573242
    10. ' ' → logprob: -11.524381637573242

Token 84: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.02349923923611641
    2. 'bis' → logprob: -3.7734992504119873
    3. ' ins' → logprob: -8.773499488830566
    4. '```' → logprob: -10.398499488830566
    5. 'ins' → logprob: -10.773499488830566
    6. 'import' → logprob: -11.523499488830566
    7. ' ' → logprob: -11.710999488830566
    8. 'from' → logprob: -12.335999488830566
    9. ' from' → logprob: -12.585999488830566
    10. '`' → logprob: -13.023499488830566

Token 85: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -7.822646693966817e-06
    2. 'e' → logprob: -12.000007629394531
    3. 'ec' → logprob: -13.750007629394531
    4. 'ectl' → logprob: -16.12500762939453
    5. 'ected' → logprob: -16.25000762939453
    6. '```' → logprob: -16.37500762939453
    7. 'ects' → logprob: -16.37500762939453
    8. 'ecta' → logprob: -16.50000762939453
    9. 'sect' → logprob: -17.00000762939453
    10. '#' → logprob: -17.37500762939453

Token 86: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.22910122573375702
    2. '_right' → logprob: -1.6041011810302734
    3. '_' → logprob: -6.229101181030273
    4. 'from' → logprob: -7.979101181030273
    5. '<|end|>' → logprob: -8.229101181030273
    6. ' from' → logprob: -8.354101181030273
    7. 'left' → logprob: -8.354101181030273
    8. 'right' → logprob: -8.729101181030273
    9. 'import' → logprob: -9.104101181030273
    10. '_from' → logprob: -10.104101181030273

Token 87: ' depuis' (ID: 16277)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.05542627349495888
    2. ' from' → logprob: -3.0554263591766357
    3. 'de' → logprob: -5.680426120758057
    4. ' de' → logprob: -6.055426120758057
    5. ' depuis' → logprob: -8.180426597595215
    6. ',' → logprob: -8.680426597595215
    7. 'du' → logprob: -8.805426597595215
    8. '```' → logprob: -8.805426597595215
    9. ' du' → logprob: -9.430426597595215
    10. 'dep' → logprob: -9.680426597595215

Token 88: ' le' (ID: 505)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.008636672981083393
    2. ' bis' → logprob: -4.758636474609375
    3. 'b' → logprob: -10.758636474609375
    4. '```' → logprob: -14.383636474609375
    5. 'the' → logprob: -16.383636474609375
    6. '`' → logprob: -16.758636474609375
    7. ' the' → logprob: -17.008636474609375
    8. '	b' → logprob: -17.508636474609375
    9. 'collections' → logprob: -17.508636474609375
    10. ' ' → logprob: -17.883636474609375

Token 89: ' module' (ID: 8827)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.0025213228072971106
    2. ' bis' → logprob: -6.002521514892578
    3. 'b' → logprob: -10.002521514892578
    4. 'module' → logprob: -15.627521514892578
    5. '```' → logprob: -16.377521514892578
    6. 'import' → logprob: -17.252521514892578
    7. 'collections' → logprob: -17.502521514892578
    8. '	b' → logprob: -17.752521514892578
    9. ' module' → logprob: -18.502521514892578
    10. '.b' → logprob: -18.627521514892578

Token 90: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.31339573860168457
    2. 'bis' → logprob: -1.3133957386016846
    3. 'b' → logprob: -9.188395500183105
    4. '```' → logprob: -10.938395500183105
    5. '	b' → logprob: -11.938395500183105
    6. ' ' → logprob: -13.063395500183105
    7. '`' → logprob: -13.688395500183105
    8. '.b' → logprob: -14.063395500183105
    9. ' ' → logprob: -14.438395500183105
    10. ' b' → logprob: -14.563395500183105

Token 91: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.1279553291387856e-05
    2. 'ec' → logprob: -13.000011444091797
    3. 'e' → logprob: -13.125011444091797
    4. '```' → logprob: -13.250011444091797
    5. '
' → logprob: -13.375011444091797
    6. 'import' → logprob: -13.500011444091797
    7. 'sect' → logprob: -14.500011444091797
    8. 'ectl' → logprob: -15.250011444091797
    9. 'ecta' → logprob: -15.250011444091797
    10. 'ected' → logprob: -15.500011444091797

Token 92: ',
' (ID: 412)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.010282591916620731
    2. ' from' → logprob: -4.760282516479492
    3. ',' → logprob: -7.510282516479492
    4. 'import' → logprob: -7.635282516479492
    5. 'bis' → logprob: -8.385282516479492
    6. '```' → logprob: -8.760282516479492
    7. '.' → logprob: -9.010282516479492
    8. 's' → logprob: -11.135282516479492
    9. ' bis' → logprob: -11.260282516479492
    10. '
' → logprob: -11.385282516479492

Token 93: '#' (ID: 2)
  Prédit: ' bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.8291642069816589
    2. 'bis' → logprob: -1.2041642665863037
    3. 'from' → logprob: -1.8291642665863037
    4. ' from' → logprob: -2.9541642665863037
    5. ' qui' → logprob: -4.204164028167725
    6. ' which' → logprob: -4.954164028167725
    7. 'b' → logprob: -5.329164028167725
    8. 'qui' → logprob: -6.204164028167725
    9. ' car' → logprob: -6.454164028167725
    10. 'which' → logprob: -6.454164028167725

Token 94: ' utilisées' (ID: 130009)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.34698331356048584
    2. ' bis' → logprob: -1.8469833135604858
    3. 'from' → logprob: -3.0969834327697754
    4. ' qui' → logprob: -3.7219834327697754
    5. ' which' → logprob: -4.846983432769775
    6. 'b' → logprob: -4.846983432769775
    7. 'qui' → logprob: -4.971983432769775
    8. ' from' → logprob: -4.971983432769775
    9. ' car' → logprob: -5.221983432769775
    10. ' pour' → logprob: -5.346983432769775

Token 95: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.048305828124284744
    2. ' ' → logprob: -3.6733057498931885
    3. ' for' → logprob: -4.923305988311768
    4. 'pour' → logprob: -5.298305988311768
    5. ' dans' → logprob: -5.673305988311768
    6. ' to' → logprob: -6.798305988311768
    7. '  ' → logprob: -6.923305988311768
    8. ' souvent' → logprob: -7.173305988311768
    9. ' ' → logprob: -7.548305988311768
    10. ' notamment' → logprob: -7.673305988311768

Token 96: ' la' (ID: 557)
  Prédit: ' effectuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' effectuer' → logprob: -0.6067224144935608
    2. ' gérer' → logprob: -1.356722354888916
    3. ' manip' → logprob: -2.481722354888916
    4. ' ins' → logprob: -3.106722354888916
    5. ' la' → logprob: -3.731722354888916
    6. ' rechercher' → logprob: -3.981722354888916
    7. ' faire' → logprob: -4.856722354888916
    8. ' réaliser' → logprob: -5.606722354888916
    9. ' tr' → logprob: -5.856722354888916
    10. ' l' → logprob: -6.356722354888916

Token 97: ' recherche' (ID: 24975)
  Prédit: ' recherche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recherche' → logprob: -0.06381775438785553
    2. ' gestion' → logprob: -3.5638177394866943
    3. 're' → logprob: -4.063817977905273
    4. ' manipulation' → logprob: -5.438817977905273
    5. ' binary' → logprob: -5.438817977905273
    6. 'gestion' → logprob: -5.938817977905273
    7. 'b' → logprob: -6.938817977905273
    8. ' b' → logprob: -7.313817977905273
    9. 'binary' → logprob: -7.438817977905273
    10. ' bis' → logprob: -7.688817977905273

Token 98: ' b' (ID: 287)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.6488279700279236
    2. 'import' → logprob: -1.7738280296325684
    3. 'dans' → logprob: -1.7738280296325684
    4. '_sorted' → logprob: -3.3988280296325684
    5. ' dans' → logprob: -3.7738280296325684
    6. '<|end|>' → logprob: -3.8988280296325684
    7. 'd' → logprob: -4.523828029632568
    8. 'ing' → logprob: -5.523828029632568
    9. 'des' → logprob: -5.648828029632568
    10. ' des' → logprob: -5.648828029632568

Token 99: 'inaire' (ID: 41465)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.009312822483479977
    2. 'inaire' → logprob: -5.884312629699707
    3. 'in' → logprob: -6.009312629699707
    4. 'ise' → logprob: -6.884312629699707
    5. 'i' → logprob: -7.259312629699707
    6. 'inary' → logprob: -7.384312629699707
    7. ' in' → logprob: -7.509312629699707
    8. '```' → logprob: -8.009312629699707
    9. ' is' → logprob: -9.134312629699707
    10. 'import' → logprob: -9.259312629699707

Token 100: ' sur' (ID: 1512)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.04918495565652847
    2. '.' → logprob: -3.799185037612915
    3. ' from' → logprob: -4.049184799194336
    4. ',' → logprob: -4.924184799194336
    5. 'import' → logprob: -7.674184799194336
    6. ' depuis' → logprob: -9.424184799194336
    7. '_from' → logprob: -10.049184799194336
    8. '```' → logprob: -10.174184799194336
    9. '<|end|>' → logprob: -10.799184799194336
    10. '
' → logprob: -10.924184799194336

Token 101: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.018753813579678535
    2. ' les' → logprob: -4.268754005432129
    3. ' une' → logprob: -6.393754005432129
    4. ' la' → logprob: -6.518754005432129
    5. ' lists' → logprob: -7.893754005432129
    6. ' arrays' → logprob: -8.268754005432129
    7. ' ' → logprob: -8.643754005432129
    8. ' sorted' → logprob: -9.018754005432129
    9. 'des' → logprob: -9.268754005432129
    10. ' collections' → logprob: -9.518754005432129

Token 102: ' listes' (ID: 179198)
  Prédit: ' listes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' listes' → logprob: -0.1058650091290474
    2. ' sequences' → logprob: -2.605865001678467
    3. ' lists' → logprob: -4.480865001678467
    4. 'list' → logprob: -5.230865001678467
    5. ' tableaux' → logprob: -6.105865001678467
    6. ' arrays' → logprob: -6.480865001678467
    7. ' sé' → logprob: -6.605865001678467
    8. 'lists' → logprob: -6.980865001678467
    9. 's' → logprob: -7.230865001678467
    10. ' ' → logprob: -7.480865001678467

Token 103: ' tri' (ID: 12665)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.017166828736662865
    2. ' from' → logprob: -4.142166614532471
    3. '.' → logprob: -7.392166614532471
    4. ',' → logprob: -7.767166614532471
    5. 'import' → logprob: -10.517167091369629
    6. '_from' → logprob: -10.767167091369629
    7. '```' → logprob: -11.892167091369629
    8. '.from' → logprob: -12.142167091369629
    9. '
' → logprob: -12.517167091369629
    10. ')' → logprob: -12.642167091369629

Token 104: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.42187851667404175
    2. 'es' → logprob: -1.7968785762786865
    3. 'st' → logprob: -1.9218785762786865
    4. 'nées' → logprob: -4.796878337860107
    5. 's' → logprob: -5.296878337860107
    6. 'stes' → logprob: -5.421878337860107
    7. '#' → logprob: -6.046878337860107
    8. 'quées' → logprob: -6.046878337860107
    9. 'sted' → logprob: -6.296878337860107
    10. 'tees' → logprob: -6.921878337860107

Token 105: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.011399227194488049
    2. ' from' → logprob: -4.761399269104004
    3. '.' → logprob: -6.011399269104004
    4. ',' → logprob: -8.386399269104004
    5. '```' → logprob: -10.011399269104004
    6. 'import' → logprob: -11.261399269104004
    7. '
' → logprob: -11.761399269104004
    8. 's' → logprob: -12.011399269104004
    9. '.from' → logprob: -12.511399269104004
    10. '_from' → logprob: -12.761399269104004

Token 106: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0024994369596242905
    2. ' from' → logprob: -6.002499580383301
    3. '.' → logprob: -11.3774995803833
    4. ',' → logprob: -11.7524995803833
    5. 'import' → logprob: -13.2524995803833
    6. '```' → logprob: -14.7524995803833
    7. '	from' → logprob: -14.8774995803833
    8. 's' → logprob: -15.0024995803833
    9. '.from' → logprob: -15.3774995803833
    10. '(from' → logprob: -15.6274995803833

Token 107: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.0024814847856760025
    2. 'bis' → logprob: -6.002481460571289
    3. ' b' → logprob: -12.752481460571289
    4. 'b' → logprob: -13.127481460571289
    5. ' ' → logprob: -14.377481460571289
    6. '	b' → logprob: -15.627481460571289
    7. ' sys' → logprob: -16.50248146057129
    8. ' ' → logprob: -17.12748146057129
    9. ' math' → logprob: -17.75248146057129
    10. '  ' → logprob: -18.00248146057129

Token 108: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.0280383548888494e-06
    2. 'e' → logprob: -15.125000953674316
    3. ' ect' → logprob: -16.375001907348633
    4. 'import' → logprob: -16.500001907348633
    5. 'ec' → logprob: -16.500001907348633
    6. 'ort' → logprob: -16.500001907348633
    7. 'ected' → logprob: -16.625001907348633
    8. '
' → logprob: -16.750001907348633
    9. 'ct' → logprob: -16.875001907348633
    10. ' import' → logprob: -17.000001907348633

Token 109: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.31330153346061707
    2. ' import' → logprob: -1.3133015632629395
    3. '_import' → logprob: -10.438301086425781
    4. '	import' → logprob: -11.813301086425781
    5. ' ' → logprob: -13.563301086425781
    6. '_' → logprob: -14.563301086425781
    7. ' ' → logprob: -14.688301086425781
    8. 'from' → logprob: -14.938301086425781
    9. '```' → logprob: -16.06330108642578
    10. '.import' → logprob: -16.43830108642578

Token 110: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.008615754544734955
    2. 'bis' → logprob: -4.758615970611572
    3. '	b' → logprob: -14.508615493774414
    4. ' b' → logprob: -15.133615493774414
    5. ' ' → logprob: -15.508615493774414
    6. ' ' → logprob: -15.633615493774414
    7. 'b' → logprob: -16.508615493774414
    8. ' right' → logprob: -17.633615493774414
    9. '_b' → logprob: -17.883615493774414
    10. 'right' → logprob: -18.258615493774414

Token 111: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.080963092041202e-06
    2. 'e' → logprob: -12.375004768371582
    3. 'ec' → logprob: -14.750004768371582
    4. 'ext' → logprob: -15.500004768371582
    5. ' ect' → logprob: -16.6250057220459
    6. '
' → logprob: -17.5000057220459
    7. 'ectl' → logprob: -17.8750057220459
    8. '_' → logprob: -18.5000057220459
    9. 'sect' → logprob: -18.6250057220459
    10. 'ected' → logprob: -19.1250057220459

Token 112: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.31514355540275574
    2. '_left' → logprob: -1.3151435852050781
    3. '_' → logprob: -6.315143585205078
    4. ' _' → logprob: -9.815143585205078
    5. 'right' → logprob: -11.315143585205078
    6. '_RIGHT' → logprob: -13.815143585205078
    7. ',' → logprob: -13.940143585205078
    8. 'left' → logprob: -13.940143585205078
    9. '_,' → logprob: -14.815143585205078
    10. '_
' → logprob: -14.940143585205078

Token 113: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003964655101299286
    2. ',b' → logprob: -5.753964424133301
    3. ' ,' → logprob: -7.378964424133301
    4. ',
' → logprob: -9.2539644241333
    5. 'import' → logprob: -11.1289644241333
    6. ' bis' → logprob: -11.5039644241333
    7. 'from' → logprob: -11.6289644241333
    8. ' ' → logprob: -11.8789644241333
    9. 'bis' → logprob: -11.8789644241333
    10. '<|end|>' → logprob: -12.2539644241333

Token 114: ' br' (ID: 1294)
  Prédit: ' bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.6947906613349915
    2. ' br' → logprob: -1.1947906017303467
    3. 'bis' → logprob: -2.1947906017303467
    4. ' b' → logprob: -3.3197906017303467
    5. 'br' → logprob: -3.4447906017303467
    6. 'b' → logprob: -4.319790840148926
    7. '_b' → logprob: -7.069790840148926
    8. '	b' → logprob: -7.319790840148926
    9. '_br' → logprob: -7.444790840148926
    10. '	br' → logprob: -7.569790840148926

Token 115: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2499365657567978
    2. 'ect' → logprob: -2.124936580657959
    3. 'is' → logprob: -2.374936580657959
    4. ',b' → logprob: -5.124936580657959
    5. ' ,' → logprob: -6.624936580657959
    6. 'import' → logprob: -8.4999361038208
    7. 'from' → logprob: -8.6249361038208
    8. 'e' → logprob: -8.7499361038208
    9. 'uct' → logprob: -9.1249361038208
    10. '```' → logprob: -9.3749361038208

Token 116: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.052301377058029175
    2. 'from' → logprob: -3.0523014068603516
    3. ',b' → logprob: -5.677301406860352
    4. ',
' → logprob: -9.427301406860352
    5. ' ,' → logprob: -9.552301406860352
    6. ' from' → logprob: -9.927301406860352
    7. 'bis' → logprob: -10.927301406860352
    8. 'import' → logprob: -11.052301406860352
    9. 'as' → logprob: -11.052301406860352
    10. ',\
' → logprob: -11.802301406860352

Token 117: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.08899301290512085
    2. 'bis' → logprob: -2.4639930725097656
    3. 'b' → logprob: -10.713993072509766
    4. ' ' → logprob: -11.463993072509766
    5. ' ' → logprob: -11.713993072509766
    6. ' b' → logprob: -13.213993072509766
    7. 'from' → logprob: -13.463993072509766
    8. 'br' → logprob: -13.463993072509766
    9. 'bs' → logprob: -13.713993072509766
    10. '	b' → logprob: -13.713993072509766

Token 118: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.01921677775681019
    2. 'sect' → logprob: -4.019217014312744
    3. 'ct' → logprob: -7.644217014312744
    4. 'ort' → logprob: -8.519216537475586
    5. 'pect' → logprob: -8.894216537475586
    6. 'import' → logprob: -10.269216537475586
    7. 'с' → logprob: -10.394216537475586
    8. '_' → logprob: -10.394216537475586
    9. 'ce' → logprob: -10.394216537475586
    10. 'e' → logprob: -10.644216537475586

Token 119: ' import' (ID: 1588)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.003178782993927598
    2. 'import' → logprob: -6.003178596496582
    3. '_import' → logprob: -8.128178596496582
    4. '_' → logprob: -8.128178596496582
    5. ' import' → logprob: -9.378178596496582
    6. ' _' → logprob: -11.128178596496582
    7. 'left' → logprob: -12.503178596496582
    8. '_right' → logprob: -12.628178596496582
    9. '_LEFT' → logprob: -13.003178596496582
    10. '_le' → logprob: -13.628178596496582

Token 120: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.3484668731689453
    2. ' bis' → logprob: -1.2234668731689453
    3. ' ' → logprob: -12.098466873168945
    4. 'br' → logprob: -12.223466873168945
    5. 'b' → logprob: -12.348466873168945
    6. 'bi' → logprob: -13.098466873168945
    7. '	b' → logprob: -13.473466873168945
    8. ' ' → logprob: -13.973466873168945
    9. 'bil' → logprob: -14.348466873168945
    10. 'bs' → logprob: -14.473466873168945

Token 121: 'ect' (ID: 534)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.08193062245845795
    2. 'ect' → logprob: -2.581930637359619
    3. '_left' → logprob: -6.206930637359619
    4. 'ct' → logprob: -7.081930637359619
    5. 's' → logprob: -9.581930160522461
    6. 'left' → logprob: -10.331930160522461
    7. 'se' → logprob: -10.581930160522461
    8. 't' → logprob: -11.331930160522461
    9. 'tect' → logprob: -11.956930160522461
    10. 'sept' → logprob: -11.956930160522461

Token 122: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -2.2246291337069124e-05
    2. 'left' → logprob: -10.750021934509277
    3. '_' → logprob: -14.500021934509277
    4. '_le' → logprob: -15.625021934509277
    5. '_right' → logprob: -17.000022888183594
    6. '_LEFT' → logprob: -18.875022888183594
    7. 'Left' → logprob: -19.250022888183594
    8. '_Left' → logprob: -20.000022888183594
    9. ' left' → logprob: -20.250022888183594
    10. 'le' → logprob: -20.750022888183594

Token 123: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.25204890966415405
    2. 'as' → logprob: -1.5020489692687988
    3. '(as' → logprob: -9.87704849243164
    4. 'from' → logprob: -10.87704849243164
    5. 'import' → logprob: -11.12704849243164
    6. '	as' → logprob: -11.12704849243164
    7. '<|end|>' → logprob: -12.00204849243164
    8. ' (' → logprob: -12.75204849243164
    9. ' ' → logprob: -12.87704849243164
    10. '_as' → logprob: -13.12704849243164

Token 124: ' bl' (ID: 1162)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.023251067847013474
    2. ' bl' → logprob: -3.7732510566711426
    3. 'ble' → logprob: -12.5232515335083
    4. 'b' → logprob: -13.8982515335083
    5. 'br' → logprob: -15.3982515335083
    6. 'bli' → logprob: -15.8982515335083
    7. '   ' → logprob: -16.148250579833984
    8. 'blr' → logprob: -16.273250579833984
    9. '`' → logprob: -16.648250579833984
    10. ' ' → logprob: -16.898250579833984

Token 125: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.8218897581100464
    2. '#' → logprob: -1.3218897581100464
    3. 'def' → logprob: -1.8218897581100464
    4. '
' → logprob: -2.446889877319336
    5. 'import' → logprob: -3.446889877319336
    6. 'class' → logprob: -5.571889877319336
    7. '


' → logprob: -6.071889877319336
    8. 'n' → logprob: -6.196889877319336
    9. '\n' → logprob: -6.321889877319336
    10. '<|end|>' → logprob: -7.196889877319336

Token 127: ' Modification' (ID: 156523)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20231719315052032
    2. '#' → logprob: -2.827317237854004
    3. 'from' → logprob: -3.077317237854004
    4. 'import' → logprob: -3.202317237854004
    5. 'sys' → logprob: -3.577317237854004
    6. 'input' → logprob: -5.327317237854004
    7. ' sys' → logprob: -7.202317237854004
    8. '
' → logprob: -7.327317237854004
    9. ' def' → logprob: -7.577317237854004
    10. 'Dé' → logprob: -7.702317237854004

Token 128: ' de' (ID: 334)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.476247638463974
    2. 'sys' → logprob: -1.4762476682662964
    3. ' de' → logprob: -2.226247549057007
    4. '(sys' → logprob: -3.226247549057007
    5. '=sys' → logprob: -6.976247787475586
    6. 'import' → logprob: -7.726247787475586
    7. 'de' → logprob: -7.726247787475586
    8. ' des' → logprob: -8.726247787475586
    9. ' (' → logprob: -8.726247787475586
    10. ' of' → logprob: -9.101247787475586

Token 129: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.13879120349884033
    2. ' sys' → logprob: -2.388791084289551
    3. 'sys' → logprob: -4.013791084289551
    4. 'la' → logprob: -4.013791084289551
    5. ' recursion' → logprob: -6.763791084289551
    6. '=sys' → logprob: -8.38879108428955
    7. 'l' → logprob: -9.51379108428955
    8. ' ' → logprob: -9.76379108428955
    9. ' l' → logprob: -9.88879108428955
    10. 'rec' → logprob: -10.38879108428955

Token 130: ' limite' (ID: 48939)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.40096455812454224
    2. 'lim' → logprob: -1.2759644985198975
    3. ' limite' → logprob: -3.5259644985198975
    4. ' recursion' → logprob: -4.525964736938477
    5. 'r' → logprob: -5.775964736938477
    6. 'sys' → logprob: -6.275964736938477
    7. 'ré' → logprob: -6.525964736938477
    8. ' réc' → logprob: -6.525964736938477
    9. 'limit' → logprob: -6.900964736938477
    10. 're' → logprob: -7.275964736938477

Token 131: ' maximale' (ID: 76380)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8040164709091187
    2. '_rec' → logprob: -1.0540164709091187
    3. 'sys' → logprob: -2.804016590118408
    4. '_sys' → logprob: -3.554016590118408
    5. ' sys' → logprob: -3.679016590118408
    6. '(sys' → logprob: -3.804016590118408
    7. 'rec' → logprob: -3.929016590118408
    8. ' recursion' → logprob: -3.929016590118408
    9. '_max' → logprob: -5.304016590118408
    10. 'de' → logprob: -5.304016590118408

Token 132: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.30666592717170715
    2. 'de' → logprob: -2.3066658973693848
    3. '_rec' → logprob: -2.4316658973693848
    4. '_de' → logprob: -3.5566658973693848
    5. 'sys' → logprob: -4.056665897369385
    6. 'd' → logprob: -4.806665897369385
    7. ' d' → logprob: -4.806665897369385
    8. '_sys' → logprob: -5.556665897369385
    9. 'rec' → logprob: -5.931665897369385
    10. '_' → logprob: -6.556665897369385

Token 133: ' la' (ID: 557)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.43350785970687866
    2. ' recursion' → logprob: -1.1835079193115234
    3. ' réc' → logprob: -3.1835079193115234
    4. 'r' → logprob: -5.558507919311523
    5. ' la' → logprob: -9.433507919311523
    6. '_rec' → logprob: -9.558507919311523
    7. ' rec' → logprob: -10.683507919311523
    8. 'la' → logprob: -10.683507919311523
    9. 'recursive' → logprob: -11.183507919311523
    10. 'l' → logprob: -11.183507919311523

Token 134: ' profondeur' (ID: 128210)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.34247517585754395
    2. ' réc' → logprob: -1.592475175857544
    3. 'rec' → logprob: -2.467475175857544
    4. 'ré' → logprob: -7.467474937438965
    5. 'pile' → logprob: -7.967474937438965
    6. 're' → logprob: -8.342474937438965
    7. ' recursion' → logprob: -8.717474937438965
    8. ' ' → logprob: -9.342474937438965
    9. '_' → logprob: -9.467474937438965
    10. '#' → logprob: -9.967474937438965

Token 135: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4425239861011505
    2. 'de' → logprob: -1.1925239562988281
    3. 'rec' → logprob: -3.692523956298828
    4. 'd' → logprob: -4.317523956298828
    5. 'sys' → logprob: -4.942523956298828
    6. '_rec' → logprob: -5.567523956298828
    7. ' d' → logprob: -6.192523956298828
    8. 'import' → logprob: -7.067523956298828
    9. '_de' → logprob: -7.442523956298828
    10. ' recursion' → logprob: -7.442523956298828

Token 136: ' réc' (ID: 36254)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.12729144096374512
    2. ' réc' → logprob: -2.627291440963745
    3. 'rec' → logprob: -3.127291440963745
    4. ' recursion' → logprob: -6.752291679382324
    5. 'l' → logprob: -7.252291679382324
    6. 'la' → logprob: -7.377291679382324
    7. 'ré' → logprob: -8.002291679382324
    8. ' l' → logprob: -8.877291679382324
    9. ' r' → logprob: -9.252291679382324
    10. ' la' → logprob: -9.252291679382324

Token 137: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0005639957962557673
    2. 'urs' → logprob: -7.625564098358154
    3. 'rs' → logprob: -10.375563621520996
    4. 'ur' → logprob: -10.500563621520996
    5. 'usion' → logprob: -12.375563621520996
    6. '##' → logprob: -12.750563621520996
    7. 'ersion' → logprob: -13.625563621520996
    8. 's' → logprob: -13.750563621520996
    9. 'ursive' → logprob: -13.750563621520996
    10. '**' → logprob: -13.750563621520996

Token 138: ' de' (ID: 334)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.012734604068100452
    2. '(sys' → logprob: -5.012734413146973
    3. ' sys' → logprob: -5.137734413146973
    4. '=sys' → logprob: -9.637734413146973
    5. 'import' → logprob: -10.262734413146973
    6. ',' → logprob: -11.512734413146973
    7. '_sys' → logprob: -11.512734413146973
    8. '	sys' → logprob: -12.762734413146973
    9. 'rec' → logprob: -13.387734413146973
    10. '.sys' → logprob: -13.387734413146973

Token 139: ' Python' (ID: 26534)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.21147915720939636
    2. ' l' → logprob: -2.4614791870117188
    3. 'sys' → logprob: -2.7114791870117188
    4. '100' → logprob: -4.086479187011719
    5. ' Python' → logprob: -4.086479187011719
    6. ' recursion' → logprob: -6.711479187011719
    7. 'l' → logprob: -7.211479187011719
    8. ' la' → logprob: -7.461479187011719
    9. 'python' → logprob: -7.711479187011719
    10. ' ' → logprob: -7.836479187011719

Token 140: '.
' (ID: 558)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1741182804107666
    2. '(sys' → logprob: -1.9241182804107666
    3. ' sys' → logprob: -4.2991180419921875
    4. '=sys' → logprob: -9.424118041992188
    5. '(' → logprob: -9.674118041992188
    6. ' (' → logprob: -10.424118041992188
    7. ',' → logprob: -10.799118041992188
    8. 'import' → logprob: -12.049118041992188
    9. '_sys' → logprob: -12.424118041992188
    10. '	sys' → logprob: -12.799118041992188

Token 141: '#' (ID: 2)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -5.080963092041202e-06
    2. ' sys' → logprob: -12.250004768371582
    3. '
' → logprob: -16.1250057220459
    4. '(sys' → logprob: -16.2500057220459
    5. '#' → logprob: -16.7500057220459
    6. 'import' → logprob: -18.8750057220459
    7. '=sys' → logprob: -18.8750057220459
    8. '	sys' → logprob: -20.1250057220459
    9. '_sys' → logprob: -20.5000057220459
    10. '.sys' → logprob: -20.6250057220459

Token 142: ' Ut' (ID: 21952)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0019313741941004992
    2. ' sys' → logprob: -6.251931190490723
    3. '#' → logprob: -12.876931190490723
    4. 'import' → logprob: -16.87693214416504
    5. '(sys' → logprob: -17.25193214416504
    6. '	sys' → logprob: -17.50193214416504
    7. '=sys' → logprob: -17.62693214416504
    8. '
' → logprob: -18.12693214416504
    9. 'Sys' → logprob: -18.87693214416504
    10. '_sys' → logprob: -19.37693214416504

Token 143: 'ile' (ID: 554)
  Prédit: 'il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'il' → logprob: -1.1422135829925537
    2. 'lis' → logprob: -1.8922135829925537
    3. 'ilis' → logprob: -2.0172135829925537
    4. 'f' → logprob: -2.3922135829925537
    5. 'ile' → logprob: -2.3922135829925537
    6. 'e' → logprob: -3.3922135829925537
    7. 'ilise' → logprob: -3.6422135829925537
    8. 'limit' → logprob: -3.6422135829925537
    9. 'p' → logprob: -3.7672135829925537
    10. 'ne' → logprob: -3.7672135829925537

Token 144: ' si' (ID: 1784)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.476060152053833
    2. ' pour' → logprob: -1.476060152053833
    3. ' ' → logprob: -2.851060152053833
    4. ' afin' → logprob: -3.476060152053833
    5. '(sys' → logprob: -3.476060152053833
    6. 'sys' → logprob: -4.726059913635254
    7. ' for' → logprob: -4.976059913635254
    8. ' à' → logprob: -5.726059913635254
    9. ' dans' → logprob: -6.476059913635254
    10. '(' → logprob: -6.601059913635254

Token 145: ' le' (ID: 505)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.22243425250053406
    2. ' l' → logprob: -2.4724342823028564
    3. ' vous' → logprob: -2.7224342823028564
    4. ' le' → logprob: -4.222434043884277
    5. ' you' → logprob: -4.597434043884277
    6. ' la' → logprob: -5.472434043884277
    7. ' ' → logprob: -5.472434043884277
    8. ' sys' → logprob: -5.472434043884277
    9. ' les' → logprob: -5.847434043884277
    10. ' des' → logprob: -6.222434043884277

Token 146: ' code' (ID: 3490)
  Prédit: ' code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.195808544754982
    2. ' programme' → logprob: -2.4458086490631104
    3. 'programme' → logprob: -3.4458086490631104
    4. 'code' → logprob: -3.9458086490631104
    5. ' problème' → logprob: -4.070808410644531
    6. ' sys' → logprob: -4.945808410644531
    7. '#' → logprob: -5.570808410644531
    8. 'pro' → logprob: -6.070808410644531
    9. 'sys' → logprob: -6.195808410644531
    10. ' traitement' → logprob: -6.445808410644531

Token 147: ' utilise' (ID: 70283)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.21883641183376312
    2. ' a' → logprob: -2.7188363075256348
    3. ' ' → logprob: -3.7188363075256348
    4. ' nécessite' → logprob: -3.7188363075256348
    5. ' devra' → logprob: -4.343836307525635
    6. 'import' → logprob: -4.468836307525635
    7. ' va' → logprob: -4.593836307525635
    8. 'a' → logprob: -4.718836307525635
    9. ' prévoit' → logprob: -5.093836307525635
    10. ' peut' → logprob: -5.593836307525635

Token 148: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.7193596959114075
    2. ' des' → logprob: -1.2193596363067627
    3. ' recursion' → logprob: -2.2193596363067627
    4. ' la' → logprob: -2.8443596363067627
    5. ' sys' → logprob: -4.469359874725342
    6. 'des' → logprob: -4.844359874725342
    7. ' de' → logprob: -4.969359874725342
    8. 'sys' → logprob: -5.094359874725342
    9. 'rec' → logprob: -5.219359874725342
    10. 'une' → logprob: -5.344359874725342

Token 149: ' réc' (ID: 36254)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5969842076301575
    2. ' sys' → logprob: -0.9719842076301575
    3. ' recursion' → logprob: -3.3469841480255127
    4. 'rec' → logprob: -3.9719841480255127
    5. ' réc' → logprob: -4.346984386444092
    6. 'r' → logprob: -5.971984386444092
    7. 'import' → logprob: -7.221984386444092
    8. 'recursive' → logprob: -8.846983909606934
    9. 'def' → logprob: -9.096983909606934
    10. ' recursive' → logprob: -9.096983909606934

Token 150: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.008950290270149708
    2. 'urs' → logprob: -4.758950233459473
    3. 'ur' → logprob: -8.883950233459473
    4. 'u' → logprob: -10.008950233459473
    5. 'ursive' → logprob: -10.133950233459473
    6. 'usion' → logprob: -10.508950233459473
    7. 'usr' → logprob: -11.133950233459473
    8. '#' → logprob: -11.633950233459473
    9. '##' → logprob: -11.633950233459473
    10. '
' → logprob: -12.133950233459473

Token 151: ' profonde' (ID: 82498)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10658086091279984
    2. ' sys' → logprob: -2.356580972671509
    3. '(sys' → logprob: -5.23158073425293
    4. 'import' → logprob: -7.85658073425293
    5. ',' → logprob: -8.60658073425293
    6. '.
' → logprob: -9.35658073425293
    7. '=sys' → logprob: -9.35658073425293
    8. ',
' → logprob: -9.98158073425293
    9. '_sys' → logprob: -10.10658073425293
    10. '(
' → logprob: -10.10658073425293

Token 152: ' (' (ID: 350)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.726536214351654
    2. '(sys' → logprob: -0.726536214351654
    3. ' sys' → logprob: -3.976536273956299
    4. ',' → logprob: -4.851536273956299
    5. 'import' → logprob: -6.726536273956299
    6. '(' → logprob: -6.726536273956299
    7. '=sys' → logprob: -6.726536273956299
    8. '.' → logprob: -7.101536273956299
    9. ',
' → logprob: -7.726536273956299
    10. ' (' → logprob: -7.976536273956299

Token 153: 'ce' (ID: 400)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.7373376488685608
    2. ').
' → logprob: -1.737337589263916
    3. ')' → logprob: -1.987337589263916
    4. ' sys' → logprob: -2.487337589263916
    5. ')
' → logprob: -2.987337589263916
    6. '):
' → logprob: -3.737337589263916
    7. ').' → logprob: -3.862337589263916
    8. ',' → logprob: -4.862337589263916
    9. '):' → logprob: -5.862337589263916
    10. '),' → logprob: -5.987337589263916

Token 154: ' qui' (ID: 2780)
  Prédit: 'ci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ci' → logprob: -0.25190314650535583
    2. '#' → logprob: -2.6269030570983887
    3. ' qui' → logprob: -2.6269030570983887
    4. 'la' → logprob: -3.7519030570983887
    5. 'n' → logprob: -3.8769030570983887
    6. 'pend' → logprob: -4.751903057098389
    7. ' code' → logprob: -5.126903057098389
    8. 'qui' → logprob: -5.376903057098389
    9. '```' → logprob: -6.501903057098389
    10. 's' → logprob: -6.626903057098389

Token 155: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8539667725563049
    2. ' peut' → logprob: -1.3539667129516602
    3. ' est' → logprob: -2.22896671295166
    4. ' dépasse' → logprob: -2.35396671295166
    5. ' pourrait' → logprob: -3.22896671295166
    6. 'est' → logprob: -3.60396671295166
    7. 'pe' → logprob: -4.10396671295166
    8. 'n' → logprob: -4.10396671295166
    9. 's' → logprob: -6.35396671295166
    10. '```' → logprob: -6.97896671295166

Token 156: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.3432243764400482
    2. 'n' → logprob: -1.9682244062423706
    3. 'est' → logprob: -2.468224287033081
    4. ' n' → logprob: -3.468224287033081
    5. '#' → logprob: -3.843224287033081
    6. '```' → logprob: -5.46822452545166
    7. 'a' → logprob: -6.34322452545166
    8. 'n't' → logprob: -6.96822452545166
    9. '’est' → logprob: -7.09322452545166
    10. 'e' → logprob: -7.09322452545166

Token 157: ' pas' (ID: 2173)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.7278320789337158
    2. ' possible' → logprob: -1.4778320789337158
    3. ' souvent' → logprob: -1.6028320789337158
    4. ' fréquent' → logprob: -3.852832078933716
    5. 'le' → logprob: -3.977832078933716
    6. 'sou' → logprob: -4.852831840515137
    7. ' le' → logprob: -4.977831840515137
    8. 'pas' → logprob: -5.227831840515137
    9. ' parfois' → logprob: -5.477831840515137
    10. ' rarement' → logprob: -5.977831840515137

Token 158: ' le' (ID: 505)
  Prédit: 'rare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rare' → logprob: -0.3450703024864197
    2. ' rare' → logprob: -2.9700703620910645
    3. 'le' → logprob: -3.5950703620910645
    4. 'cour' → logprob: -3.8450703620910645
    5. 'util' → logprob: -4.0950703620910645
    6. 'ex' → logprob: -4.2200703620910645
    7. 'explicit' → logprob: -4.2200703620910645
    8. 'tr' → logprob: -4.3450703620910645
    9. '
' → logprob: -4.3450703620910645
    10. ' nécessaire' → logprob: -4.9700703620910645

Token 159: ' cas' (ID: 2108)
  Prédit: ' cas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cas' → logprob: -0.3564354181289673
    2. 'cas' → logprob: -1.2314354181289673
    3. 'case' → logprob: -5.606435298919678
    4. ' case' → logprob: -6.106435298919678
    5. '#' → logprob: -6.981435298919678
    6. 'pas' → logprob: -8.106435775756836
    7. '```' → logprob: -8.231435775756836
    8. ' code' → logprob: -9.356435775756836
    9. ')' → logprob: -9.856435775756836
    10. ' here' → logprob: -10.231435775756836

Token 160: ' ici' (ID: 27994)
  Prédit: ' ici'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ici' → logprob: -0.019717149436473846
    2. ').' → logprob: -5.269717216491699
    3. ')' → logprob: -5.769717216491699
    4. ' pour' → logprob: -5.894717216491699
    5. ' )' → logprob: -6.394717216491699
    6. ' dans' → logprob: -6.644717216491699
    7. ' here' → logprob: -6.894717216491699
    8. ' ).' → logprob: -7.019717216491699
    9. ',' → logprob: -7.394717216491699
    10. 'pour' → logprob: -7.394717216491699

Token 161: ',
' (ID: 412)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8744269013404846
    2. ').' → logprob: -1.6244268417358398
    3. ')
' → logprob: -1.7494268417358398
    4. ').
' → logprob: -1.7494268417358398
    5. '):
' → logprob: -3.49942684173584
    6. '):' → logprob: -6.37442684173584
    7. '#' → logprob: -6.74942684173584
    8. ',' → logprob: -6.74942684173584
    9. 'def' → logprob: -7.12442684173584
    10. 'sys' → logprob: -7.74942684173584

Token 162: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.854522705078125
    2. 'sys' → logprob: -1.604522705078125
    3. ')' → logprob: -1.979522705078125
    4. ' sys' → logprob: -2.229522705078125
    5. ')
' → logprob: -2.979522705078125
    6. ' mais' → logprob: -3.604522705078125
    7. '):
' → logprob: -4.354522705078125
    8. ' but' → logprob: -4.729522705078125
    9. ' )' → logprob: -4.854522705078125
    10. ' #' → logprob: -5.104522705078125

Token 163: ' mais' (ID: 2899)
  Prédit: ' mais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mais' → logprob: -0.6548502445220947
    2. '#' → logprob: -1.2798502445220947
    3. 'mais' → logprob: -1.9048502445220947
    4. 'car' → logprob: -4.029850006103516
    5. ')' → logprob: -4.654850006103516
    6. ' #' → logprob: -4.904850006103516
    7. ' car' → logprob: -6.154850006103516
    8. 'don' → logprob: -6.279850006103516
    9. ' on' → logprob: -6.654850006103516
    10. ' but' → logprob: -6.654850006103516

Token 164: ' souvent' (ID: 28137)
  Prédit: ' parfois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parfois' → logprob: -0.5794882774353027
    2. ' souvent' → logprob: -1.3294882774353027
    3. '#' → logprob: -3.4544882774353027
    4. ' on' → logprob: -3.7044882774353027
    5. ' #' → logprob: -4.204488277435303
    6. 'cela' → logprob: -4.329488277435303
    7. ' ' → logprob: -4.454488277435303
    8. 'sou' → logprob: -4.704488277435303
    9. ' possible' → logprob: -4.829488277435303
    10. ' cela' → logprob: -4.954488277435303

Token 165: ' fait' (ID: 7473)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -1.657375693321228
    2. 'dans' → logprob: -1.782375693321228
    3. 'import' → logprob: -1.907375693321228
    4. 'pr' → logprob: -2.5323758125305176
    5. ' par' → logprob: -2.7823758125305176
    6. 'utile' → logprob: -2.7823758125305176
    7. ' utile' → logprob: -2.9073758125305176
    8. 'util' → logprob: -3.4073758125305176
    9. ' pratique' → logprob: -3.5323758125305176
    10. '```' → logprob: -3.9073758125305176

Token 166: ' pour' (ID: 1930)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.033316563814878464
    2. 'par' → logprob: -3.5333166122436523
    3. ' pour' → logprob: -6.283316612243652
    4. ' ' → logprob: -7.783316612243652
    5. 'pour' → logprob: -8.158316612243652
    6. ')' → logprob: -8.283316612243652
    7. ' dans' → logprob: -8.658316612243652
    8. ' )' → logprob: -8.783316612243652
    9. ' en' → logprob: -9.408316612243652
    10. '```' → logprob: -9.783316612243652

Token 167: ' des' (ID: 731)
  Prédit: ' éviter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -0.8645314574241638
    2. 'les' → logprob: -1.2395315170288086
    3. ' les' → logprob: -2.1145315170288086
    4. ' des' → logprob: -3.4895315170288086
    5. 'anticip' → logprob: -3.7395315170288086
    6. 'év' → logprob: -4.114531517028809
    7. 'des' → logprob: -4.114531517028809
    8. 'compat' → logprob: -4.489531517028809
    9. ' prévenir' → logprob: -4.864531517028809
    10. 'être' → logprob: -4.989531517028809

Token 168: ' raisons' (ID: 74599)
  Prédit: 'conc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conc' → logprob: -1.421096682548523
    2. 'pro' → logprob: -1.546096682548523
    3. ' problèmes' → logprob: -1.546096682548523
    4. ' concours' → logprob: -1.796096682548523
    5. ' raisons' → logprob: -3.5460968017578125
    6. 'alg' → logprob: -4.0460968017578125
    7. 'program' → logprob: -4.0460968017578125
    8. ' compét' → logprob: -4.1710968017578125
    9. 'comp' → logprob: -4.9210968017578125
    10. 'compet' → logprob: -5.0460968017578125

Token 169: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.28127148747444153
    2. ' de' → logprob: -2.156271457672119
    3. 'd' → logprob: -2.406271457672119
    4. ' d' → logprob: -3.906271457672119
    5. 'compat' → logprob: -5.156271457672119
    6. 'pr' → logprob: -5.281271457672119
    7. 'import' → logprob: -6.906271457672119
    8. ' pratiques' → logprob: -7.031271457672119
    9. 'par' → logprob: -7.281271457672119
    10. 'alg' → logprob: -7.281271457672119

Token 170: ' sécurité' (ID: 32375)
  Prédit: 'performance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'performance' → logprob: -0.06609857827425003
    2. ' performance' → logprob: -3.941098690032959
    3. 'perform' → logprob: -3.941098690032959
    4. 'sé' → logprob: -4.191098690032959
    5. 'compat' → logprob: -5.816098690032959
    6. 'comp' → logprob: -5.941098690032959
    7. 'con' → logprob: -7.191098690032959
    8. ' performances' → logprob: -7.316098690032959
    9. 's' → logprob: -7.816098690032959
    10. 'optim' → logprob: -8.1910982131958

Token 171: ' dans' (ID: 2671)
  Prédit: ').
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').
' → logprob: -1.0515110492706299
    2. ').' → logprob: -1.4265110492706299
    3. ')
' → logprob: -1.5515110492706299
    4. ')' → logprob: -1.6765110492706299
    5. 'sys' → logprob: -4.926510810852051
    6. ' )
' → logprob: -7.176510810852051
    7. '#' → logprob: -7.426510810852051
    8. 'import' → logprob: -7.551510810852051
    9. '):
' → logprob: -7.926510810852051
    10. ' ).
' → logprob: -8.30151081085205

Token 172: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.346134215593338
    2. ' des' → logprob: -1.8461341857910156
    3. ' certains' → logprob: -2.4711341857910156
    4. 'les' → logprob: -3.2211341857910156
    5. ' la' → logprob: -5.596134185791016
    6. ' certaines' → logprob: -5.721134185791016
    7. ' le' → logprob: -6.971134185791016
    8. ' un' → logprob: -7.596134185791016
    9. ' certain' → logprob: -8.221134185791016
    10. ' ' → logprob: -8.471134185791016

Token 173: ' problèmes' (ID: 49822)
  Prédit: 'conc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conc' → logprob: -0.04379066824913025
    2. 'con' → logprob: -4.043790817260742
    3. ' concours' → logprob: -4.543790817260742
    4. ' conc' → logprob: -5.543790817260742
    5. 'codes' → logprob: -5.793790817260742
    6. '#' → logprob: -5.918790817260742
    7. 'program' → logprob: -6.043790817260742
    8. 'contest' → logprob: -7.418790817260742
    9. 'compet' → logprob: -7.793790817260742
    10. 'code' → logprob: -7.793790817260742

Token 174: ' d' (ID: 272)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7788064479827881
    2. 'import' → logprob: -1.028806447982788
    3. 'de' → logprob: -2.278806447982788
    4. ' de' → logprob: -3.653806447982788
    5. ')' → logprob: -4.028806686401367
    6. 'd' → logprob: -4.778806686401367
    7. ').' → logprob: -5.278806686401367
    8. ',' → logprob: -5.403806686401367
    9. 'sys' → logprob: -5.778806686401367
    10. '),' → logprob: -5.903806686401367

Token 175: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07177649438381195
    2. 'algorithm' → logprob: -3.5717763900756836
    3. ''' → logprob: -4.196776390075684
    4. 'é' → logprob: -5.446776390075684
    5. ' algorithm' → logprob: -5.571776390075684
    6. 'es' → logprob: -5.571776390075684
    7. '#' → logprob: -6.696776390075684
    8. ''in' → logprob: -6.696776390075684
    9. 'alg' → logprob: -6.821776390075684
    10. ''analyse' → logprob: -7.321776390075684

Token 176: 'alg' (ID: 15258)
  Prédit: 'algorithm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'algorithm' → logprob: -0.0555991493165493
    2. 'alg' → logprob: -3.1805992126464844
    3. 'algo' → logprob: -4.805599212646484
    4. ' algorithm' → logprob: -5.680599212646484
    5. 'import' → logprob: -7.555599212646484
    6. '#' → logprob: -9.180599212646484
    7. 'optim' → logprob: -9.305599212646484
    8. 'Algorithm' → logprob: -10.055599212646484
    9. 'al' → logprob: -10.180599212646484
    10. 'ol' → logprob: -10.805599212646484

Token 177: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.04001136124134064
    2. 'orithms' → logprob: -3.290011405944824
    3. 'orithm' → logprob: -6.540011405944824
    4. '#' → logprob: -8.790011405944824
    5. 'orit' → logprob: -8.790011405944824
    6. 'or' → logprob: -9.665011405944824
    7. 'os' → logprob: -10.790011405944824
    8. 'orig' → logprob: -10.790011405944824
    9. 'othérapie' → logprob: -11.165011405944824
    10. '```' → logprob: -11.415011405944824

Token 178: 'me' (ID: 1047)
  Prédit: 'mes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mes' → logprob: -0.22343020141124725
    2. 'me' → logprob: -1.8484301567077637
    3. 'th' → logprob: -3.8484301567077637
    4. 'm' → logprob: -5.098430156707764
    5. 'miques' → logprob: -5.098430156707764
    6. 'mie' → logprob: -5.348430156707764
    7. 't' → logprob: -5.598430156707764
    8. 'ith' → logprob: -9.098430633544922
    9. 's' → logprob: -9.223430633544922
    10. '#' → logprob: -9.223430633544922

Token 179: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5963073968887329
    2. ').' → logprob: -1.346307396888733
    3. ').
' → logprob: -2.3463072776794434
    4. ')
' → logprob: -2.7213072776794434
    5. 'sys' → logprob: -4.471307277679443
    6. '#' → logprob: -4.721307277679443
    7. ')

' → logprob: -6.096307277679443
    8. ').

' → logprob: -6.471307277679443
    9. ')#' → logprob: -6.846307277679443
    10. 'import' → logprob: -7.846307277679443

Token 180: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -4.008129963040119e-06
    2. ' sys' → logprob: -12.500003814697266
    3. '#' → logprob: -15.750003814697266
    4. '
' → logprob: -18.000003814697266
    5. 'import' → logprob: -18.375003814697266
    6. '(sys' → logprob: -18.375003814697266
    7. '=sys' → logprob: -18.500003814697266
    8. '	sys' → logprob: -19.750003814697266
    9. '

' → logprob: -20.250003814697266
    10. '_sys' → logprob: -20.875003814697266

Token 181: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.0012514196569100022
    2. '.setdefault' → logprob: -6.876251220703125
    3. '.' → logprob: -8.876251220703125
    4. '.stdout' → logprob: -10.501251220703125
    5. '.stdin' → logprob: -10.751251220703125
    6. ' .' → logprob: -11.126251220703125
    7. '.argv' → logprob: -12.001251220703125
    8. '.exit' → logprob: -12.626251220703125
    9. '.stderr' → logprob: -12.751251220703125
    10. '.max' → logprob: -13.501251220703125

Token 182: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.000287795381154865
    2. '_rec' → logprob: -9.125288009643555
    3. '_' → logprob: -9.750288009643555
    4. ' recursion' → logprob: -10.250288009643555
    5. 're' → logprob: -10.500288009643555
    6. 'ursion' → logprob: -10.875288009643555
    7. 'limit' → logprob: -11.500288009643555
    8. 'ec' → logprob: -12.125288009643555
    9. 's' → logprob: -12.375288009643555
    10. 'sys' → logprob: -12.625288009643555

Token 183: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -1.688212614681106e-05
    2. 'limit' → logprob: -11.875017166137695
    3. 'urs' → logprob: -12.000017166137695
    4. '_limit' → logprob: -13.500017166137695
    5. 'ur' → logprob: -13.500017166137695
    6. 'usion' → logprob: -14.625017166137695
    7. 'ursive' → logprob: -14.875017166137695
    8. '(' → logprob: -16.375017166137695
    9. 'set' → logprob: -16.750017166137695
    10. 'ursor' → logprob: -17.750017166137695

Token 184: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -3.249780638725497e-05
    2. 'lim' → logprob: -10.500032424926758
    3. '_limit' → logprob: -12.625032424926758
    4. 'depth' → logprob: -13.625032424926758
    5. ' limit' → logprob: -16.125032424926758
    6. 'l' → logprob: -16.125032424926758
    7. 'ion' → logprob: -17.250032424926758
    8. 'ision' → logprob: -18.000032424926758
    9. 'Limit' → logprob: -18.125032424926758
    10. 'tion' → logprob: -18.125032424926758

Token 185: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. '(sys' → logprob: -14.875000953674316
    3. '(int' → logprob: -15.750000953674316
    4. ' (' → logprob: -16.25
    5. '((' → logprob: -16.25
    6. '(
' → logprob: -17.375
    7. '100' → logprob: -18.75
    8. '=' → logprob: -20.5
    9. '250' → logprob: -20.625
    10. '(

' → logprob: -20.625

Token 186: '214' (ID: 21401)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0009118211455643177
    2. '100' → logprob: -7.000911712646484
    3. '200' → logprob: -15.750911712646484
    4. ' ' → logprob: -16.375911712646484
    5. '300' → logprob: -17.125911712646484
    6. '1' → logprob: -17.500911712646484
    7. '500' → logprob: -17.625911712646484
    8. 'int' → logprob: -17.750911712646484
    9. '150' → logprob: -17.750911712646484
    10. '999' → logprob: -18.000911712646484

Token 187: '748' (ID: 39478)
  Prédit: '748'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '748' → logprob: -0.00015169414109550416
    2. '700' → logprob: -9.125151634216309
    3. '747' → logprob: -10.625151634216309
    4. '743' → logprob: -11.375151634216309
    5. '738' → logprob: -13.500151634216309
    6. '742' → logprob: -13.500151634216309
    7. '7' → logprob: -13.625151634216309
    8. '746' → logprob: -14.125151634216309
    9. '783' → logprob: -14.500151634216309
    10. '740' → logprob: -14.875151634216309

Token 188: '364' (ID: 30673)
  Prédit: '364'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '364' → logprob: -5.514650183613412e-05
    2. '363' → logprob: -9.875055313110352
    3. '3' → logprob: -13.250055313110352
    4. '362' → logprob: -13.750055313110352
    5. '36' → logprob: -15.500055313110352
    6. '360' → logprob: -15.875055313110352
    7. '    
' → logprob: -16.37505531311035
    8. '361' → logprob: -16.62505531311035
    9. '367' → logprob: -17.25005531311035
    10. '366' → logprob: -17.25005531311035

Token 189: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -9.088346359931165e-07
    2. ')' → logprob: -14.125000953674316
    3. '8' → logprob: -15.750000953674316
    4. '6' → logprob: -19.25
    5. '```' → logprob: -20.5
    6. '۷' → logprob: -21.25
    7. '７' → logprob: -21.375
    8. '٧' → logprob: -21.625
    9. '   ' → logprob: -21.75
    10. '")' → logprob: -22.125

Token 190: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.107425062713446e-06
    2. ')
' → logprob: -12.000006675720215
    3. ' )' → logprob: -14.625006675720215
    4. ')

' → logprob: -15.000006675720215
    5. ')#' → logprob: -17.50000762939453
    6. '))' → logprob: -17.75000762939453
    7. ')
' → logprob: -17.75000762939453
    8. ')`' → logprob: -18.87500762939453
    9. '),' → logprob: -19.37500762939453
    10. ')

' → logprob: -19.62500762939453

Token 191: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9945025444030762
    2. '

' → logprob: -1.1195025444030762
    3. 'def' → logprob: -1.2445025444030762
    4. 'n' → logprob: -4.619502544403076
    5. 'import' → logprob: -5.619502544403076
    6. '


' → logprob: -7.619502544403076
    7. '
 
' → logprob: -7.869502544403076
    8. 'input' → logprob: -8.244503021240234
    9. '\n' → logprob: -8.619503021240234
    10. 'N' → logprob: -8.869503021240234

Token 192: ' Import' (ID: 19998)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018231302499771118
    2. 'input' → logprob: -4.018231391906738
    3. '#' → logprob: -10.143231391906738
    4. 'import' → logprob: -11.643231391906738
    5. 'class' → logprob: -11.768231391906738
    6. 'INPUT' → logprob: -12.268231391906738
    7. 'MOD' → logprob: -12.768231391906738
    8. 'INF' → logprob: -12.768231391906738
    9. ' input' → logprob: -12.893231391906738
    10. 'n' → logprob: -13.018231391906738

Token 193: 'ation' (ID: 387)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.5345425009727478
    2. ' collections' → logprob: -1.6595425605773926
    3. ' random' → logprob: -2.7845425605773926
    4. ' threading' → logprob: -3.0345425605773926
    5. 'collections' → logprob: -3.4095425605773926
    6. ' itertools' → logprob: -3.6595425605773926
    7. ' sys' → logprob: -3.7845425605773926
    8. ' re' → logprob: -4.159542560577393
    9. 'random' → logprob: -5.784542560577393
    10. ' time' → logprob: -6.534542560577393

Token 194: ' de' (ID: 334)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -1.3873789310455322
    2. ' os' → logprob: -1.6373789310455322
    3. ' collections' → logprob: -1.8873789310455322
    4. ' sys' → logprob: -2.1373789310455322
    5. ' random' → logprob: -3.0123789310455322
    6. 'os' → logprob: -3.0123789310455322
    7. ' threading' → logprob: -3.2623789310455322
    8. 'from' → logprob: -3.2623789310455322
    9. 'sys' → logprob: -3.6373789310455322
    10. 'random' → logprob: -3.7623789310455322

Token 195: ' fonctions' (ID: 87283)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.10561265796422958
    2. 'os' → logprob: -2.9806127548217773
    3. ' collections' → logprob: -3.2306127548217773
    4. 'io' → logprob: -6.230612754821777
    5. ' threading' → logprob: -6.230612754821777
    6. 'thread' → logprob: -6.480612754821777
    7. ' itertools' → logprob: -6.605612754821777
    8. ' os' → logprob: -7.355612754821777
    9. 'it' → logprob: -7.480612754821777
    10. 'heap' → logprob: -7.730612754821777

Token 196: ' utiles' (ID: 121161)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1947236806154251
    2. 'random' → logprob: -3.069723606109619
    3. 'deque' → logprob: -3.319723606109619
    4. 'rand' → logprob: -4.069723606109619
    5. ' from' → logprob: -4.319723606109619
    6. 'collections' → logprob: -4.444723606109619
    7. 'de' → logprob: -4.819723606109619
    8. 'sys' → logprob: -4.944723606109619
    9. 'partial' → logprob: -5.194723606109619
    10. ' random' → logprob: -5.569723606109619

Token 197: ' pour' (ID: 1930)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.004251012112945318
    2. 'collections' → logprob: -6.754251003265381
    3. 'import' → logprob: -7.254251003265381
    4. 'de' → logprob: -7.379251003265381
    5. 'sys' → logprob: -7.754251003265381
    6. ' from' → logprob: -8.254251480102539
    7. 'random' → logprob: -8.379251480102539
    8. ',' → logprob: -8.879251480102539
    9. '=sys' → logprob: -8.879251480102539
    10. 'for' → logprob: -9.129251480102539

Token 198: ' gérer' (ID: 86786)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.08659221231937408
    2. ' collections' → logprob: -2.711592197418213
    3. 'sys' → logprob: -5.461592197418213
    4. ' itertools' → logprob: -5.836592197418213
    5. 'random' → logprob: -5.961592197418213
    6. 'os' → logprob: -6.336592197418213
    7. 'operator' → logprob: -6.836592197418213
    8. 'it' → logprob: -6.836592197418213
    9. 'l' → logprob: -7.461592197418213
    10. ' functools' → logprob: -8.086592674255371

Token 199: ' des' (ID: 731)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.40730100870132446
    2. 'os' → logprob: -1.9073009490966797
    3. ' collections' → logprob: -2.1573009490966797
    4. ' os' → logprob: -3.5323009490966797
    5. ' itertools' → logprob: -5.03230094909668
    6. 'l' → logprob: -5.28230094909668
    7. ' threading' → logprob: -5.53230094909668
    8. 'sys' → logprob: -5.65730094909668
    9. 'it' → logprob: -5.90730094909668
    10. 'random' → logprob: -5.90730094909668

Token 200: ' files' (ID: 6291)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.5417777299880981
    2. ' collections' → logprob: -0.9167777299880981
    3. ' itertools' → logprob: -5.666777610778809
    4. ' heap' → logprob: -5.916777610778809
    5. ' os' → logprob: -6.041777610778809
    6. 'os' → logprob: -6.166777610778809
    7. 'it' → logprob: -6.291777610778809
    8. 'heap' → logprob: -6.666777610778809
    9. 'io' → logprob: -6.666777610778809
    10. ' threading' → logprob: -6.916777610778809

Token 201: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.014082759618759155
    2. 'import' → logprob: -4.514082908630371
    3. 'deque' → logprob: -6.389082908630371
    4. 'de' → logprob: -7.389082908630371
    5. ' from' → logprob: -7.389082908630371
    6. 'collections' → logprob: -9.389082908630371
    7. 'queues' → logprob: -11.514082908630371
    8. '#from' → logprob: -12.514082908630371
    9. 'd' → logprob: -12.639082908630371
    10. ' de' → logprob: -13.014082908630371

Token 202: ' priorité' (ID: 150252)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0015716375783085823
    2. 'att' → logprob: -7.0015716552734375
    3. 'prior' → logprob: -8.501571655273438
    4. 'import' → logprob: -8.626571655273438
    5. 'queue' → logprob: -9.751571655273438
    6. '```' → logprob: -9.876571655273438
    7. 'deque' → logprob: -9.876571655273438
    8. ' collections' → logprob: -10.251571655273438
    9. 'from' → logprob: -10.626571655273438
    10. 'queues' → logprob: -10.626571655273438

Token 203: ' min' (ID: 1349)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.010479258373379707
    2. 'import' → logprob: -4.63547945022583
    3. ' from' → logprob: -7.26047945022583
    4. ',' → logprob: -11.635478973388672
    5. '
' → logprob: -11.885478973388672
    6. 'de' → logprob: -13.385478973388672
    7. '#from' → logprob: -14.010478973388672
    8. ' import' → logprob: -14.135478973388672
    9. 'deque' → logprob: -15.260478973388672
    10. '```' → logprob: -15.260478973388672

Token 204: '-' (ID: 12)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5246759653091431
    2. 'from' → logprob: -0.8996759653091431
    3. 'heap' → logprob: -7.0246758460998535
    4. ' from' → logprob: -7.7746758460998535
    5. 'he' → logprob: -10.024676322937012
    6. 'queues' → logprob: -10.024676322937012
    7. 'queue' → logprob: -10.899676322937012
    8. 'que' → logprob: -11.024676322937012
    9. ' import' → logprob: -11.024676322937012
    10. 'im' → logprob: -11.149676322937012

Token 205: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0029277801513671875
    2. ' heap' → logprob: -6.127927780151367
    3. 'import' → logprob: -8.127927780151367
    4. 'queue' → logprob: -8.252927780151367
    5. 'he' → logprob: -9.127927780151367
    6. '```' → logprob: -10.127927780151367
    7. 'queues' → logprob: -11.627927780151367
    8. ' heaps' → logprob: -11.752927780151367
    9. 'priority' → logprob: -12.002927780151367
    10. 'imum' → logprob: -12.502927780151367

Token 206: ':
' (ID: 734)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.11324828863143921
    2. 'import' → logprob: -2.238248348236084
    3. ' from' → logprob: -7.863248348236084
    4. ',' → logprob: -10.988247871398926
    5. '
' → logprob: -10.988247871398926
    6. ' import' → logprob: -13.363247871398926
    7. 'heap' → logprob: -13.613247871398926
    8. '```' → logprob: -13.863247871398926
    9. 's' → logprob: -13.988247871398926
    10. 'he' → logprob: -14.488247871398926

Token 207: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.313512921333313
    2. 'from' → logprob: -1.313512921333313
    3. ' from' → logprob: -8.688512802124023
    4. ' import' → logprob: -9.438512802124023
    5. 'heap' → logprob: -13.188512802124023
    6. '```' → logprob: -14.313512802124023
    7. '#' → logprob: -15.188512802124023
    8. ' heap' → logprob: -15.688512802124023
    9. '
' → logprob: -16.313512802124023
    10. '#import' → logprob: -17.313512802124023

Token 208: ' he' (ID: 501)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.16065636277198792
    2. 'from' → logprob: -1.9106563329696655
    3. 'heap' → logprob: -7.910656452178955
    4. ' import' → logprob: -10.410655975341797
    5. ' from' → logprob: -10.410655975341797
    6. '#' → logprob: -13.410655975341797
    7. ' heap' → logprob: -13.410655975341797
    8. 'he' → logprob: -13.535655975341797
    9. '
' → logprob: -14.785655975341797
    10. '#import' → logprob: -15.285655975341797

Token 209: 'app' (ID: 903)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.4755508005619049
    2. 'app' → logprob: -0.9755507707595825
    3. 'from' → logprob: -7.225550651550293
    4. 'import' → logprob: -7.350550651550293
    5. 'a' → logprob: -9.850550651550293
    6. '#' → logprob: -11.225550651550293
    7. 'aps' → logprob: -11.475550651550293
    8. '```' → logprob: -11.600550651550293
    9. 'heap' → logprob: -11.975550651550293
    10. 'api' → logprob: -12.975550651550293

Token 210: 'ush' (ID: 1776)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.05598123371601105
    2. 'app' → logprob: -3.055981159210205
    3. 'from' → logprob: -5.055981159210205
    4. 'q' → logprob: -7.180981159210205
    5. 'import' → logprob: -9.180981636047363
    6. ' from' → logprob: -9.680981636047363
    7. 'p' → logprob: -9.805981636047363
    8. 'push' → logprob: -12.680981636047363
    9. '#' → logprob: -13.055981636047363
    10. 'a' → logprob: -13.180981636047363

Token 211: ':' (ID: 25)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5245857834815979
    2. ',' → logprob: -0.8995857834815979
    3. 'and' → logprob: -7.774585723876953
    4. ' and' → logprob: -7.899585723876953
    5. ' ,' → logprob: -8.274585723876953
    6. 'import' → logprob: -8.399585723876953
    7. ' from' → logprob: -9.024585723876953
    8. ',
' → logprob: -9.899585723876953
    9. 'he' → logprob: -11.774585723876953
    10. ',h' → logprob: -12.899585723876953

Token 212: ' ajoute' (ID: 91611)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.09426835924386978
    2. ' from' → logprob: -2.594268321990967
    3. 'he' → logprob: -5.219268321990967
    4. 'import' → logprob: -5.219268321990967
    5. ' he' → logprob: -5.469268321990967
    6. 'heap' → logprob: -9.219268798828125
    7. ' import' → logprob: -9.594268798828125
    8. ' heap' → logprob: -10.219268798828125
    9. 'push' → logprob: -12.219268798828125
    10. '	from' → logprob: -12.594268798828125

Token 213: ' un' (ID: 537)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.7129978537559509
    2. 'he' → logprob: -1.5879979133605957
    3. 'from' → logprob: -2.7129979133605957
    4. ' and' → logprob: -2.8379979133605957
    5. ',' → logprob: -2.8379979133605957
    6. 'heap' → logprob: -3.7129979133605957
    7. 'import' → logprob: -3.8379979133605957
    8. ' une' → logprob: -4.337997913360596
    9. ' he' → logprob: -4.712997913360596
    10. ' heap' → logprob: -4.962997913360596

Token 214: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.07170969247817993
    2. ' élément' → logprob: -2.696709632873535
    3. 'element' → logprob: -6.571709632873535
    4. ' element' → logprob: -9.196709632873535
    5. 'él' → logprob: -9.446709632873535
    6. 'é' → logprob: -10.071709632873535
    7. ' éléments' → logprob: -10.696709632873535
    8. 'item' → logprob: -10.821709632873535
    9. ' nouvel' → logprob: -11.071709632873535
    10. ' ' → logprob: -11.071709632873535

Token 215: ' au' (ID: 2791)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.05210369452834129
    2. ',' → logprob: -3.3021037578582764
    3. 'he' → logprob: -5.427103519439697
    4. ' from' → logprob: -5.552103519439697
    5. '(heap' → logprob: -5.802103519439697
    6. 'import' → logprob: -6.427103519439697
    7. ' and' → logprob: -7.927103519439697
    8. 'heap' → logprob: -9.177103996276855
    9. ' ,' → logprob: -9.302103996276855
    10. 'and' → logprob: -9.677103996276855

Token 216: ' tas' (ID: 17067)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.035604797303676605
    2. ' heap' → logprob: -3.41060471534729
    3. 'he' → logprob: -6.785604953765869
    4. 'import' → logprob: -7.160604953765869
    5. 'from' → logprob: -10.160604476928711
    6. ' he' → logprob: -12.410604476928711
    7. ' from' → logprob: -12.910604476928711
    8. ' import' → logprob: -13.160604476928711
    9. '(heap' → logprob: -13.785604476928711
    10. 'queue' → logprob: -14.160604476928711

Token 217: ',
' (ID: 412)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.25279945135116577
    2. ',' → logprob: -1.6277995109558105
    3. 'import' → logprob: -5.0027995109558105
    4. 'he' → logprob: -5.0027995109558105
    5. ' from' → logprob: -5.3777995109558105
    6. 'heap' → logprob: -5.7527995109558105
    7. ',
' → logprob: -6.1277995109558105
    8. ' and' → logprob: -6.3777995109558105
    9. ' ,' → logprob: -7.3777995109558105
    10. ' et' → logprob: -7.6277995109558105

Token 218: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6904263496398926
    2. '#' → logprob: -0.8154263496398926
    3. 'he' → logprob: -2.9404263496398926
    4. ' from' → logprob: -6.315426349639893
    5. ' he' → logprob: -6.815426349639893
    6. 'heap' → logprob: -8.190425872802734
    7. ' #' → logprob: -9.565425872802734
    8. '#from' → logprob: -10.065425872802734
    9. 'import' → logprob: -10.315425872802734
    10. ' heap' → logprob: -11.940425872802734

Token 219: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.05658285319805145
    2. ' he' → logprob: -2.9315829277038574
    3. 'heap' → logprob: -6.556582927703857
    4. 'from' → logprob: -8.6815824508667
    5. ' heap' → logprob: -9.6815824508667
    6. ' from' → logprob: -10.9315824508667
    7. 'import' → logprob: -11.1815824508667
    8. '#' → logprob: -11.3065824508667
    9. ' ' → logprob: -14.0565824508667
    10. '.he' → logprob: -15.6815824508667

Token 220: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0003802680876106024
    2. 'ap' → logprob: -7.875380039215088
    3. 'appt' → logprob: -16.62537956237793
    4. ' app' → logprob: -17.00037956237793
    5. 'a' → logprob: -17.25037956237793
    6. 'ап' → logprob: -17.62537956237793
    7. 'q' → logprob: -18.25037956237793
    8. '```' → logprob: -18.75037956237793
    9. 'App' → logprob: -19.25037956237793
    10. 'p' → logprob: -19.37537956237793

Token 221: 'op' (ID: 467)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0031860284507274628
    2. 'ap' → logprob: -5.753186225891113
    3. 'push' → logprob: -12.503186225891113
    4. 'ush' → logprob: -13.628186225891113
    5. 'p' → logprob: -13.753186225891113
    6. 'q' → logprob: -14.128186225891113
    7. 'pp' → logprob: -14.253186225891113
    8. 'he' → logprob: -15.378186225891113
    9. '```' → logprob: -15.878186225891113
    10. 'a' → logprob: -16.128185272216797

Token 222: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10199543833732605
    2. 'from' → logprob: -2.3519954681396484
    3. ' from' → logprob: -6.851995468139648
    4. 'import' → logprob: -7.851995468139648
    5. ',' → logprob: -8.476995468139648
    6. ' :' → logprob: -8.976995468139648
    7. '	from' → logprob: -13.601995468139648
    8. ' import' → logprob: -14.101995468139648
    9. ' ' → logprob: -14.601995468139648
    10. '#' → logprob: -14.726995468139648

Token 223: ' retire' (ID: 48410)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.48886698484420776
    2. ' he' → logprob: -1.8638670444488525
    3. 'he' → logprob: -2.1138670444488525
    4. ' from' → logprob: -2.2388670444488525
    5. 'import' → logprob: -5.738866806030273
    6. 'heap' → logprob: -7.488866806030273
    7. ' heap' → logprob: -8.863866806030273
    8. ' ajoute' → logprob: -9.488866806030273
    9. ' import' → logprob: -9.613866806030273
    10. 'pop' → logprob: -9.738866806030273

Token 224: ' et' (ID: 859)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.4193493127822876
    2. 'un' → logprob: -1.2943493127822876
    3. 'from' → logprob: -3.294349193572998
    4. 'he' → logprob: -4.044349193572998
    5. 'heap' → logprob: -4.919349193572998
    6. ' he' → logprob: -6.169349193572998
    7. ' heap' → logprob: -6.544349193572998
    8. 'import' → logprob: -6.544349193572998
    9. ' from' → logprob: -7.294349193572998
    10. '(heap' → logprob: -8.669349670410156

Token 225: ' retourne' (ID: 178818)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.5760393142700195
    2. ' he' → logprob: -0.8260393142700195
    3. 'heap' → logprob: -9.82603931427002
    4. ' récup' → logprob: -11.32603931427002
    5. ' heap' → logprob: -11.95103931427002
    6. 'hé' → logprob: -12.32603931427002
    7. ' retourne' → logprob: -12.32603931427002
    8. ' ' → logprob: -12.57603931427002
    9. 'import' → logprob: -13.07603931427002
    10. 'pop' → logprob: -13.57603931427002

Token 226: ' le' (ID: 505)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.23143678903579712
    2. 'un' → logprob: -2.1064367294311523
    3. ' le' → logprob: -3.3564367294311523
    4. 'le' → logprob: -3.6064367294311523
    5. ' l' → logprob: -4.606436729431152
    6. 'l' → logprob: -4.981436729431152
    7. 'he' → logprob: -6.106436729431152
    8. ' he' → logprob: -6.856436729431152
    9. 'from' → logprob: -6.981436729431152
    10. 'heap' → logprob: -7.106436729431152

Token 227: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.7058886885643005
    2. 'plus' → logprob: -0.7058886885643005
    3. 'élé' → logprob: -4.830888748168945
    4. ' smallest' → logprob: -5.830888748168945
    5. '```' → logprob: -8.080888748168945
    6. 'prem' → logprob: -8.205888748168945
    7. ' premier' → logprob: -8.330888748168945
    8. 'element' → logprob: -8.455888748168945
    9. ' petit' → logprob: -8.455888748168945
    10. ' élément' → logprob: -8.955888748168945

Token 228: ' petit' (ID: 20577)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.893651008605957
    2. 'small' → logprob: -1.518651008605957
    3. 'pet' → logprob: -2.143651008605957
    4. 'from' → logprob: -2.393651008605957
    5. ' petit' → logprob: -2.643651008605957
    6. 'he' → logprob: -3.268651008605957
    7. 'heap' → logprob: -3.393651008605957
    8. '_small' → logprob: -4.518651008605957
    9. '_' → logprob: -6.018651008605957
    10. 'min' → logprob: -6.393651008605957

Token 229: ' élément' (ID: 99627)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.12858623266220093
    2. 'element' → logprob: -2.3785862922668457
    3. ' element' → logprob: -4.628586292266846
    4. ' from' → logprob: -5.378586292266846
    5. '_heap' → logprob: -5.753586292266846
    6. '_element' → logprob: -5.878586292266846
    7. ' élément' → logprob: -6.003586292266846
    8. 'heap' → logprob: -6.003586292266846
    9. 'import' → logprob: -6.753586292266846
    10. 'he' → logprob: -8.003585815429688

Token 230: ' du' (ID: 1462)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0007514976896345615
    2. ' from' → logprob: -7.250751495361328
    3. 'import' → logprob: -10.500751495361328
    4. ',' → logprob: -11.625751495361328
    5. ',
' → logprob: -13.250751495361328
    6. '
' → logprob: -13.500751495361328
    7. 'he' → logprob: -14.625751495361328
    8. 'heap' → logprob: -14.875751495361328
    9. '```' → logprob: -14.875751495361328
    10. '	from' → logprob: -15.500751495361328

Token 231: ' tas' (ID: 17067)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0019316127290949225
    2. ' heap' → logprob: -6.251931667327881
    3. 'module' → logprob: -13.501931190490723
    4. 'queue' → logprob: -13.751931190490723
    5. 'import' → logprob: -15.251931190490723
    6. '(heap' → logprob: -15.876931190490723
    7. '```' → logprob: -15.876931190490723
    8. 'he' → logprob: -16.12693214416504
    9. '.heap' → logprob: -17.00193214416504
    10. '_heap' → logprob: -17.25193214416504

Token 232: ',
' (ID: 412)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.00036715567694045603
    2. ' from' → logprob: -8.000367164611816
    3. ',' → logprob: -11.000367164611816
    4. '
' → logprob: -11.875367164611816
    5. ',
' → logprob: -12.250367164611816
    6. 'import' → logprob: -13.000367164611816
    7. '#' → logprob: -15.000367164611816
    8. '```' → logprob: -15.250367164611816
    9. 's' → logprob: -16.1253662109375
    10. '	from' → logprob: -17.1253662109375

Token 233: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0013047605752944946
    2. '#' → logprob: -6.751304626464844
    3. 'import' → logprob: -9.126304626464844
    4. 'he' → logprob: -11.376304626464844
    5. ' from' → logprob: -11.751304626464844
    6. 'heap' → logprob: -12.126304626464844
    7. '#from' → logprob: -14.376304626464844
    8. '
' → logprob: -15.876304626464844
    9. '```' → logprob: -16.126304626464844
    10. ' #' → logprob: -17.126304626464844

Token 234: ' he' (ID: 501)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.16592824459075928
    2. 'he' → logprob: -1.9159282445907593
    3. 'heap' → logprob: -5.290928363800049
    4. '#' → logprob: -7.415928363800049
    5. 'import' → logprob: -10.54092788696289
    6. ' from' → logprob: -11.41592788696289
    7. ' he' → logprob: -11.79092788696289
    8. ' heap' → logprob: -13.79092788696289
    9. '
' → logprob: -14.04092788696289
    10. '```' → logprob: -14.41592788696289

Token 235: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0007101670489646494
    2. 'ap' → logprob: -7.2507100105285645
    3. 'appt' → logprob: -16.625709533691406
    4. 'ап' → logprob: -17.125709533691406
    5. ' app' → logprob: -18.125709533691406
    6. 'apput' → logprob: -18.250709533691406
    7. 'a' → logprob: -18.250709533691406
    8. 'aps' → logprob: -18.875709533691406
    9. '```' → logprob: -19.250709533691406
    10. 'App' → logprob: -19.750709533691406

Token 236: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.000799980596639216
    2. 'push' → logprob: -7.500800132751465
    3. 'app' → logprob: -9.000800132751465
    4. 'op' → logprob: -9.125800132751465
    5. 'q' → logprob: -11.500800132751465
    6. 'ap' → logprob: -12.625800132751465
    7. 'p' → logprob: -14.625800132751465
    8. 'ushed' → logprob: -15.375800132751465
    9. 'e' → logprob: -16.00079917907715
    10. 'us' → logprob: -16.12579917907715

Token 237: 'pop' (ID: 15042)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.08468669652938843
    2. ',' → logprob: -3.459686756134033
    3. 'import' → logprob: -3.709686756134033
    4. ':' → logprob: -3.709686756134033
    5. 'he' → logprob: -8.209686279296875
    6. ' from' → logprob: -8.334686279296875
    7. 'heap' → logprob: -9.459686279296875
    8. ' :' → logprob: -10.584686279296875
    9. ' import' → logprob: -10.709686279296875
    10. 'pop' → logprob: -10.709686279296875

Token 238: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6453390121459961
    2. 'from' → logprob: -0.7703390121459961
    3. ' from' → logprob: -4.520339012145996
    4. 'import' → logprob: -6.770339012145996
    5. ',' → logprob: -7.645339012145996
    6. ' :' → logprob: -9.520339012145996
    7. ' as' → logprob: -10.645339012145996
    8. ')' → logprob: -11.645339012145996
    9. 'he' → logprob: -11.770339012145996
    10. '):' → logprob: -11.895339012145996

Token 239: ' pousse' (ID: 167099)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -1.004020094871521
    2. 'from' → logprob: -1.129020094871521
    3. ' he' → logprob: -1.379020094871521
    4. ' from' → logprob: -3.2540202140808105
    5. 'import' → logprob: -4.2540202140808105
    6. 'heap' → logprob: -5.7540202140808105
    7. ' heap' → logprob: -6.3790202140808105
    8. ' import' → logprob: -7.3790202140808105
    9. '#' → logprob: -10.129019737243652
    10. 'push' → logprob: -10.754019737243652

Token 240: ' puis' (ID: 18766)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -1.4848278760910034
    2. ' un' → logprob: -1.6098278760910034
    3. 'he' → logprob: -1.7348278760910034
    4. ' and' → logprob: -1.8598278760910034
    5. ' he' → logprob: -2.109827995300293
    6. ',' → logprob: -3.359827995300293
    7. 'import' → logprob: -3.734827995300293
    8. 'from' → logprob: -3.859827995300293
    9. ' a' → logprob: -4.859827995300293
    10. '(heap' → logprob: -5.234827995300293

Token 241: ' pop' (ID: 2735)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.125774547457695
    2. ' he' → logprob: -2.625774621963501
    3. 'pop' → logprob: -3.250774621963501
    4. 'ret' → logprob: -5.750774383544922
    5. ' pop' → logprob: -6.125774383544922
    6. 'p' → logprob: -7.250774383544922
    7. 'heap' → logprob: -7.500774383544922
    8. ' retire' → logprob: -8.750774383544922
    9. 'h' → logprob: -10.250774383544922
    10. 'hé' → logprob: -10.250774383544922

Token 242: ' dans' (ID: 2671)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0006824108422733843
    2. ' from' → logprob: -8.000682830810547
    3. ':' → logprob: -8.125682830810547
    4. 'import' → logprob: -10.875682830810547
    5. '
' → logprob: -11.125682830810547
    6. ',' → logprob: -12.125682830810547
    7. 'he' → logprob: -12.375682830810547
    8. '```' → logprob: -12.625682830810547
    9. ':
' → logprob: -13.250682830810547
    10. '#' → logprob: -14.625682830810547

Token 243: ' un' (ID: 537)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0092574218288064
    2. ' heap' → logprob: -5.1342573165893555
    3. 'he' → logprob: -6.0092573165893555
    4. 'one' → logprob: -7.5092573165893555
    5. 'le' → logprob: -9.134257316589355
    6. ' one' → logprob: -9.509257316589355
    7. 'the' → logprob: -10.259257316589355
    8. 'from' → logprob: -10.509257316589355
    9. 'a' → logprob: -11.009257316589355
    10. 'un' → logprob: -11.009257316589355

Token 244: ' seul' (ID: 33041)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.15618416666984558
    2. 'tas' → logprob: -3.281184196472168
    3. 'he' → logprob: -3.531184196472168
    4. ' heap' → logprob: -3.531184196472168
    5. ' tas' → logprob: -4.156184196472168
    6. 'single' → logprob: -4.281184196472168
    7. 'import' → logprob: -5.281184196472168
    8. 'from' → logprob: -5.656184196472168
    9. 'module' → logprob: -6.156184196472168
    10. 'min' → logprob: -6.281184196472168

Token 245: ' mouvement' (ID: 62236)
  Prédit: 'appel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'appel' → logprob: -0.9588645696640015
    2. ' appel' → logprob: -1.0838645696640015
    3. 'operation' → logprob: -2.333864688873291
    4. 'import' → logprob: -2.708864688873291
    5. 'op' → logprob: -3.458864688873291
    6. ' call' → logprob: -4.708864688873291
    7. 'from' → logprob: -4.708864688873291
    8. ' operation' → logprob: -4.833864688873291
    9. 'call' → logprob: -4.833864688873291
    10. 'heap' → logprob: -5.083864688873291

Token 246: '.
' (ID: 558)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -5.200166469876422e-06
    2. ' from' → logprob: -12.875004768371582
    3. 'import' → logprob: -13.625004768371582
    4. '
' → logprob: -13.875004768371582
    5. '#' → logprob: -14.750004768371582
    6. ',' → logprob: -17.0000057220459
    7. '```' → logprob: -17.2500057220459
    8. ',
' → logprob: -18.8750057220459
    9. '#from' → logprob: -19.0000057220459
    10. 'for' → logprob: -19.1250057220459

Token 247: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -3.128163257315464e-07
    2. 'import' → logprob: -15.125
    3. ' from' → logprob: -17.5
    4. '```' → logprob: -18.25
    5. '
' → logprob: -20.875
    6. '	from' → logprob: -21.75
    7. 'From' → logprob: -21.875
    8. '#' → logprob: -22.25
    9. '  
' → logprob: -22.875
    10. '#from' → logprob: -23.75

Token 248: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.00043102685594931245
    2. ' heap' → logprob: -7.750431060791016
    3. '_heap' → logprob: -15.000431060791016
    4. 'queue' → logprob: -17.875431060791016
    5. '.heap' → logprob: -17.875431060791016
    6. 'import' → logprob: -18.125431060791016
    7. '(heap' → logprob: -19.500431060791016
    8. 'h' → logprob: -20.000431060791016
    9. '```' → logprob: -20.125431060791016
    10. 'he' → logprob: -20.125431060791016

Token 249: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.704273118884885e-07
    2. 'import' → logprob: -14.250000953674316
    3. 'queue' → logprob: -17.125
    4. 'p' → logprob: -21.25
    5. 'que' → logprob: -22.125
    6. 'push' → logprob: -22.125
    7. 'from' → logprob: -22.25
    8. 's' → logprob: -22.75
    9. ' import' → logprob: -23.0
    10. 'ql' → logprob: -23.25

Token 250: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.1269323080778122
    2. 'import' → logprob: -2.126932382583618
    3. '	import' → logprob: -12.501932144165039
    4. ' ' → logprob: -15.626932144165039
    5. '_import' → logprob: -15.876932144165039
    6. ' imports' → logprob: -17.25193214416504
    7. ' importar' → logprob: -17.37693214416504
    8. ' importe' → logprob: -17.62693214416504
    9. ' ' → logprob: -18.00193214416504
    10. ' im' → logprob: -18.25193214416504

Token 251: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0005536287208087742
    2. ' he' → logprob: -7.500553607940674
    3. 'heap' → logprob: -14.250554084777832
    4. ' heap' → logprob: -20.750553131103516
    5. '.he' → logprob: -21.000553131103516
    6. '_he' → logprob: -22.125553131103516
    7. ' ' → logprob: -22.750553131103516
    8. 'h' → logprob: -23.000553131103516
    9. '-he' → logprob: -23.750553131103516
    10. 'ho' → logprob: -23.750553131103516

Token 252: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -5.860340752406046e-05
    2. 'ap' → logprob: -9.7500581741333
    3. 'push' → logprob: -16.250059127807617
    4. ' app' → logprob: -16.500059127807617
    5. 'pp' → logprob: -17.625059127807617
    6. 'p' → logprob: -18.250059127807617
    7. 'append' → logprob: -19.000059127807617
    8. 'APP' → logprob: -20.125059127807617
    9. 'App' → logprob: -20.250059127807617
    10. 'a' → logprob: -20.375059127807617

Token 253: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.023607414215803146
    2. 'push' → logprob: -3.7736074924468994
    3. 'op' → logprob: -8.52360725402832
    4. 'app' → logprob: -8.77360725402832
    5. 'p' → logprob: -11.89860725402832
    6. 'ap' → logprob: -14.02360725402832
    7. 'pp' → logprob: -15.39860725402832
    8. 'Push' → logprob: -16.27360725402832
    9. 'pop' → logprob: -16.39860725402832
    10. '_push' → logprob: -16.52360725402832

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029029499273747206
    2. ' ,' → logprob: -8.250289916992188
    3. 'import' → logprob: -10.625289916992188
    4. 'he' → logprob: -13.000289916992188
    5. ' as' → logprob: -14.000289916992188
    6. ',h' → logprob: -14.625289916992188
    7. 'as' → logprob: -14.750289916992188
    8. ',
' → logprob: -15.125289916992188
    9. ' ' → logprob: -15.500289916992188
    10. ' he' → logprob: -16.375289916992188

Token 255: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.07889959216117859
    2. ' he' → logprob: -2.578899621963501
    3. 'heap' → logprob: -11.578899383544922
    4. ' heap' → logprob: -14.828899383544922
    5. ' ' → logprob: -16.328899383544922
    6. '.he' → logprob: -17.828899383544922
    7. 'hep' → logprob: -17.953899383544922
    8. 'heme' → logprob: -18.578899383544922
    9. '_he' → logprob: -18.703899383544922
    10. 'hev' → logprob: -18.828899383544922

Token 256: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -5.512236498361744e-07
    2. 'ap' → logprob: -14.750000953674316
    3. 'pp' → logprob: -16.25
    4. 'p' → logprob: -18.625
    5. ' app' → logprob: -19.0
    6. 'e' → logprob: -19.25
    7. 'appe' → logprob: -19.375
    8. 'APP' → logprob: -19.5
    9. 'App' → logprob: -20.0
    10. 'a' → logprob: -20.375

Token 257: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0039855544455349445
    2. 'pop' → logprob: -5.753985404968262
    3. 'app' → logprob: -7.628985404968262
    4. 'p' → logprob: -8.503985404968262
    5. 'ap' → logprob: -9.628985404968262
    6. 'opp' → logprob: -10.128985404968262
    7. 'e' → logprob: -12.378985404968262
    8. 'o' → logprob: -13.253985404968262
    9. 'pp' → logprob: -13.753985404968262
    10. 'he' → logprob: -13.878985404968262

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011641718447208405
    2. 'from' → logprob: -9.375116348266602
    3. 'he' → logprob: -11.375116348266602
    4. ' ,' → logprob: -11.625116348266602
    5. '<|end|>' → logprob: -12.375116348266602
    6. ' he' → logprob: -13.250116348266602
    7. ' as' → logprob: -13.750116348266602
    8. 'import' → logprob: -14.000116348266602
    9. 'as' → logprob: -14.500116348266602
    10. '<|end|>' → logprob: -14.625116348266602

Token 259: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0031821096781641245
    2. ' he' → logprob: -5.7531819343566895
    3. 'heap' → logprob: -12.378182411193848
    4. ' ' → logprob: -15.878182411193848
    5. ' heap' → logprob: -17.12818145751953
    6. '.he' → logprob: -18.87818145751953
    7. 'h' → logprob: -18.87818145751953
    8. '
' → logprob: -18.87818145751953
    9. '  ' → logprob: -19.00318145751953
    10. '   ' → logprob: -19.25318145751953

Token 260: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -7.896309739408025e-07
    2. 'ap' → logprob: -14.250000953674316
    3. ' app' → logprob: -17.25
    4. 'pp' → logprob: -17.875
    5. 'APP' → logprob: -18.5
    6. '(app' → logprob: -18.75
    7. '	app' → logprob: -18.875
    8. 'p' → logprob: -19.125
    9. 'apput' → logprob: -19.5
    10. 'App' → logprob: -20.0

Token 261: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0900864377617836
    2. 'push' → logprob: -2.8400864601135254
    3. 'app' → logprob: -3.5900864601135254
    4. 'p' → logprob: -9.840085983276367
    5. 'ap' → logprob: -10.340085983276367
    6. 'op' → logprob: -10.465085983276367
    7. 'pp' → logprob: -11.340085983276367
    8. 'sp' → logprob: -14.340085983276367
    9. '_push' → logprob: -14.590085983276367
    10. 'e' → logprob: -14.590085983276367

Token 262: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -7.896309739408025e-07
    2. 'po' → logprob: -15.375000953674316
    3. 'post' → logprob: -16.0
    4. ',' → logprob: -16.375
    5. ' pop' → logprob: -16.625
    6. 'p' → logprob: -16.75
    7. 'push' → logprob: -16.875
    8. 'put' → logprob: -17.5
    9. 'poll' → logprob: -17.875
    10. 'pow' → logprob: -18.875

Token 263: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.034013792872428894
    2. ',' → logprob: -4.284013748168945
    3. '
' → logprob: -4.534013748168945
    4. 'import' → logprob: -6.159013748168945
    5. '<|end|>' → logprob: -6.659013748168945
    6. '


' → logprob: -6.784013748168945
    7. '#' → logprob: -7.159013748168945
    8. ' as' → logprob: -7.409013748168945
    9. 'from' → logprob: -7.659013748168945
    10. '\n' → logprob: -7.659013748168945

Token 264: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6227682828903198
    2. 'def' → logprob: -0.8727682828903198
    3. '
' → logprob: -3.2477684020996094
    4. 'import' → logprob: -5.122768402099609
    5. '


' → logprob: -7.747768402099609
    6. '#' → logprob: -8.87276840209961
    7. 'class' → logprob: -9.24776840209961
    8. '



' → logprob: -9.99776840209961
    9. '\n' → logprob: -9.99776840209961
    10. '
 
' → logprob: -10.24776840209961

Token 265: ' Import' (ID: 19998)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002271700883284211
    2. 'input' → logprob: -7.12727165222168
    3. 'import' → logprob: -7.25227165222168
    4. 'from' → logprob: -7.25227165222168
    5. '#' → logprob: -10.50227165222168
    6. ' def' → logprob: -11.62727165222168
    7. 'class' → logprob: -12.87727165222168
    8. ' input' → logprob: -13.00227165222168
    9. 'de' → logprob: -13.12727165222168
    10. 'sys' → logprob: -13.62727165222168

Token 266: 'ation' (ID: 387)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -1.1022899150848389
    2. ' des' → logprob: -1.3522899150848389
    3. 'ation' → logprob: -1.6022899150848389
    4. ' re' → logprob: -2.602289915084839
    5. ' de' → logprob: -3.352289915084839
    6. 'collections' → logprob: -3.602289915084839
    7. ' itertools' → logprob: -4.227290153503418
    8. 'from' → logprob: -4.352290153503418
    9. 're' → logprob: -4.477290153503418
    10. ' collections' → logprob: -4.477290153503418

Token 267: ' de' (ID: 334)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.9018666744232178
    2. 'os' → logprob: -1.7768666744232178
    3. 'from' → logprob: -2.1518666744232178
    4. 'random' → logprob: -2.2768666744232178
    5. 'deque' → logprob: -2.9018666744232178
    6. 'json' → logprob: -3.5268666744232178
    7. 're' → logprob: -3.5268666744232178
    8. ' os' → logprob: -3.6518666744232178
    9. 'datetime' → logprob: -3.6518666744232178
    10. ' collections' → logprob: -4.151866912841797

Token 268: ' defaultdict' (ID: 107098)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.08237666636705399
    2. ' collections' → logprob: -2.582376718521118
    3. 'it' → logprob: -6.957376480102539
    4. 'random' → logprob: -6.957376480102539
    5. ' itertools' → logprob: -7.082376480102539
    6. 'os' → logprob: -8.082376480102539
    7. 'deque' → logprob: -8.457376480102539
    8. ' functools' → logprob: -9.832376480102539
    9. 're' → logprob: -10.082376480102539
    10. 'operator' → logprob: -10.832376480102539

Token 269: ' depuis' (ID: 16277)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.00675219064578414
    2. ' from' → logprob: -5.006752014160156
    3. '
' → logprob: -10.881752014160156
    4. ',' → logprob: -11.131752014160156
    5. 'de' → logprob: -13.256752014160156
    6. '	from' → logprob: -14.756752014160156
    7. '```' → logprob: -15.381752014160156
    8. ' de' → logprob: -15.506752014160156
    9. '(from' → logprob: -15.881752014160156
    10. '#from' → logprob: -16.131752014160156

Token 270: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.00012356207298580557
    2. ' collections' → logprob: -9.000123977661133
    3. 'collection' → logprob: -16.875123977661133
    4. '.collections' → logprob: -17.375123977661133
    5. '_collection' → logprob: -19.375123977661133
    6. '_' → logprob: -20.500123977661133
    7. '_col' → logprob: -21.250123977661133
    8. ' ' → logprob: -21.750123977661133
    9. 'col' → logprob: -21.875123977661133
    10. 'Collections' → logprob: -21.875123977661133

Token 271: ' qui' (ID: 2780)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0002075933152809739
    2. ' from' → logprob: -8.500207901000977
    3. ',' → logprob: -13.375207901000977
    4. 'import' → logprob: -13.625207901000977
    5. '
' → logprob: -14.000207901000977
    6. '```' → logprob: -15.500207901000977
    7. 'de' → logprob: -16.000207901000977
    8. 'collections' → logprob: -17.125207901000977
    9. '.from' → logprob: -17.250207901000977
    10. 'for' → logprob: -17.500207901000977

Token 272: ' permet' (ID: 11798)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6001148819923401
    2. ' permet' → logprob: -1.2251148223876953
    3. 'collections' → logprob: -3.2251148223876953
    4. ' est' → logprob: -3.3501148223876953
    5. 'import' → logprob: -3.6001148223876953
    6. ' allows' → logprob: -4.600114822387695
    7. 'allows' → logprob: -4.850114822387695
    8. 's' → logprob: -5.225114822387695
    9. ' collections' → logprob: -5.350114822387695
    10. 'est' → logprob: -5.475114822387695

Token 273: ' d' (ID: 272)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.43080565333366394
    2. 'collections' → logprob: -1.1808056831359863
    3. ' collections' → logprob: -3.5558056831359863
    4. ' from' → logprob: -5.055805683135986
    5. ' de' → logprob: -5.680805683135986
    6. 'd' → logprob: -5.805805683135986
    7. ' d' → logprob: -6.930805683135986
    8. 'de' → logprob: -7.430805683135986
    9. 'import' → logprob: -10.930805206298828
    10. 'collection' → logprob: -11.305805206298828

Token 274: ''avoir' (ID: 55863)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.2005883753299713
    2. 'e' → logprob: -2.3255884647369385
    3. 'default' → logprob: -3.9505884647369385
    4. ''utiliser' → logprob: -4.075588226318359
    5. 'from' → logprob: -4.325588226318359
    6. 'ef' → logprob: -5.325588226318359
    7. ''avoir' → logprob: -5.575588226318359
    8. ''un' → logprob: -5.575588226318359
    9. 'import' → logprob: -5.700588226318359
    10. ''' → logprob: -5.700588226318359

Token 275: ' des' (ID: 731)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.7280153632164001
    2. ' collections' → logprob: -0.8530153632164001
    3. ' des' → logprob: -2.728015422821045
    4. 'from' → logprob: -4.728015422821045
    5. ' defaultdict' → logprob: -5.603015422821045
    6. ' une' → logprob: -5.728015422821045
    7. 'default' → logprob: -5.978015422821045
    8. 'dict' → logprob: -6.353015422821045
    9. ' un' → logprob: -6.478015422821045
    10. 'des' → logprob: -6.478015422821045

Token 276: ' diction' (ID: 155259)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.6275830268859863
    2. 'default' → logprob: -0.8775830268859863
    3. 'dict' → logprob: -3.1275830268859863
    4. ' collections' → logprob: -5.377583026885986
    5. ' defaultdict' → logprob: -6.502583026885986
    6. ' dict' → logprob: -8.502582550048828
    7. ' default' → logprob: -9.377582550048828
    8. 'import' → logprob: -9.627582550048828
    9. 'list' → logprob: -11.252582550048828
    10. 'int' → logprob: -11.752582550048828

Token 277: 'naires' (ID: 65019)
  Prédit: 'aries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aries' → logprob: -0.22969289124011993
    2. 'ary' → logprob: -1.9796929359436035
    3. 'naires' → logprob: -3.1046929359436035
    4. 'aires' → logprob: -3.8546929359436035
    5. '{' → logprob: -8.229692459106445
    6. 'from' → logprob: -8.604692459106445
    7. 'import' → logprob: -8.604692459106445
    8. 'n' → logprob: -9.229692459106445
    9. 'default' → logprob: -9.479692459106445
    10. 'collections' → logprob: -9.854692459106445

Token 278: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.002133609727025032
    2. 'import' → logprob: -6.877133846282959
    3. ' from' → logprob: -7.252133846282959
    4. ',' → logprob: -8.7521333694458
    5. 'default' → logprob: -9.1271333694458
    6. ' defaultdict' → logprob: -9.7521333694458
    7. '
' → logprob: -9.8771333694458
    8. 'de' → logprob: -11.7521333694458
    9. 'collections' → logprob: -13.2521333694458
    10. ' de' → logprob: -13.5021333694458

Token 279: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0023083386477082968
    2. ' from' → logprob: -6.377308368682861
    3. ',' → logprob: -8.252307891845703
    4. ' defaultdict' → logprob: -8.627307891845703
    5. 'import' → logprob: -9.377307891845703
    6. 'default' → logprob: -9.627307891845703
    7. 'de' → logprob: -12.377307891845703
    8. 'collections' → logprob: -12.752307891845703
    9. '
' → logprob: -13.002307891845703
    10. ' de' → logprob: -13.627307891845703

Token 280: ' avec' (ID: 3937)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.05848482623696327
    2. 'import' → logprob: -2.9334847927093506
    3. 'default' → logprob: -6.93348503112793
    4. ' from' → logprob: -6.93348503112793
    5. ',' → logprob: -7.05848503112793
    6. ' defaultdict' → logprob: -7.55848503112793
    7. '
' → logprob: -9.30848503112793
    8. 'de' → logprob: -10.18348503112793
    9. ' import' → logprob: -10.43348503112793
    10. 'collections' → logprob: -10.93348503112793

Token 281: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.24521921575069427
    2. 'une' → logprob: -2.3702192306518555
    3. ' des' → logprob: -2.9952192306518555
    4. 'val' → logprob: -3.6202192306518555
    5. 'un' → logprob: -4.4952192306518555
    6. ' valeurs' → logprob: -4.4952192306518555
    7. ' valeur' → logprob: -4.6202192306518555
    8. 'des' → logprob: -5.2452192306518555
    9. ' un' → logprob: -5.3702192306518555
    10. 'default' → logprob: -6.2452192306518555

Token 282: ' valeur' (ID: 41664)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.10610079765319824
    2. 'def' → logprob: -2.3561007976531982
    3. 'val' → logprob: -5.731101036071777
    4. 'dé' → logprob: -7.231101036071777
    5. 'fonction' → logprob: -7.356101036071777
    6. 'f' → logprob: -7.731101036071777
    7. 'factory' → logprob: -7.856101036071777
    8. ' default' → logprob: -8.231101036071777
    9. 'lambda' → logprob: -9.356101036071777
    10. ' valeur' → logprob: -10.106101036071777

Token 283: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.25981375575065613
    2. ' par' → logprob: -1.5098137855529785
    3. 'def' → logprob: -5.3848137855529785
    4. '_par' → logprob: -6.3848137855529785
    5. 'default' → logprob: -7.1348137855529785
    6. 'initial' → logprob: -8.50981330871582
    7. 'factory' → logprob: -8.75981330871582
    8. 'f' → logprob: -9.50981330871582
    9. 'import' → logprob: -9.63481330871582
    10. 'autom' → logprob: -10.25981330871582

Token 284: ' défaut' (ID: 79375)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.20774318277835846
    2. 'default' → logprob: -1.7077431678771973
    3. 'def' → logprob: -5.082743167877197
    4. ' défaut' → logprob: -9.332743644714355
    5. 'd' → logprob: -11.582743644714355
    6. '
' → logprob: -12.707743644714355
    7. '#' → logprob: -12.832743644714355
    8. 'f' → logprob: -14.207743644714355
    9. '```' → logprob: -14.707743644714355
    10. 'Dé' → logprob: -14.832743644714355

Token 285: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.020859967917203903
    2. ' from' → logprob: -4.270860195159912
    3. ' defaultdict' → logprob: -5.270860195159912
    4. ',' → logprob: -7.020860195159912
    5. '
' → logprob: -8.145859718322754
    6. 'import' → logprob: -9.020859718322754
    7. 'default' → logprob: -9.270859718322754
    8. 'collections' → logprob: -10.395859718322754
    9. ' as' → logprob: -10.520859718322754
    10. '```' → logprob: -10.645859718322754

Token 286: ' ce' (ID: 2357)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.07999393343925476
    2. 'default' → logprob: -2.829993963241577
    3. ' defaultdict' → logprob: -4.079993724822998
    4. 'collections' → logprob: -7.204993724822998
    5. ' from' → logprob: -9.079994201660156
    6. 'deque' → logprob: -10.079994201660156
    7. '#' → logprob: -10.204994201660156
    8. 'import' → logprob: -11.954994201660156
    9. 'Default' → logprob: -12.329994201660156
    10. ' default' → logprob: -12.329994201660156

Token 287: ' qui' (ID: 2780)
  Prédit: 'qui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qui' → logprob: -0.005643874406814575
    2. '#' → logprob: -6.255643844604492
    3. ' qui' → logprob: -6.380643844604492
    4. 'n' → logprob: -7.255643844604492
    5. 'from' → logprob: -7.630643844604492
    6. '```' → logprob: -8.380643844604492
    7. 'd' → logprob: -8.505643844604492
    8. 'que' → logprob: -9.005643844604492
    9. 'ci' → logprob: -9.755643844604492
    10. 'la' → logprob: -9.880643844604492

Token 288: ' év' (ID: 23692)
  Prédit: ' facilite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' facilite' → logprob: -0.18118666112422943
    2. 'fac' → logprob: -2.5561866760253906
    3. ' év' → logprob: -3.4311866760253906
    4. ' permet' → logprob: -3.9311866760253906
    5. 'per' → logprob: -4.431186676025391
    6. 'év' → logprob: -4.931186676025391
    7. 'simpl' → logprob: -4.931186676025391
    8. 'est' → logprob: -5.931186676025391
    9. 'ev' → logprob: -6.306186676025391
    10. 'perm' → logprob: -6.681186676025391

Token 289: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -2.951771421066951e-05
    2. 'it' → logprob: -11.875029563903809
    3. 'vite' → logprob: -11.875029563903809
    4. 'iter' → logprob: -12.500029563903809
    5. 'ites' → logprob: -13.125029563903809
    6. 'itable' → logprob: -13.125029563903809
    7. 'itera' → logprob: -13.750029563903809
    8. 'ient' → logprob: -13.875029563903809
    9. '#' → logprob: -14.000029563903809
    10. 'itere' → logprob: -14.250029563903809

Token 290: ' les' (ID: 1341)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5281143188476562
    2. 'Key' → logprob: -1.5281143188476562
    3. 'les' → logprob: -1.9031143188476562
    4. 'de' → logprob: -4.028114318847656
    5. ' Key' → logprob: -4.528114318847656
    6. 'des' → logprob: -5.028114318847656
    7. ' d' → logprob: -5.653114318847656
    8. ' les' → logprob: -6.903114318847656
    9. 'l' → logprob: -6.903114318847656
    10. 'key' → logprob: -7.028114318847656

Token 291: ' erreurs' (ID: 139891)
  Prédit: 'Key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Key' → logprob: -0.003441484412178397
    2. 'key' → logprob: -5.878441333770752
    3. ' Key' → logprob: -7.628441333770752
    4. 'import' → logprob: -9.75344181060791
    5. ' clés' → logprob: -11.00344181060791
    6. 'exceptions' → logprob: -11.00344181060791
    7. ' key' → logprob: -11.25344181060791
    8. ' erreurs' → logprob: -11.37844181060791
    9. '_key' → logprob: -11.50344181060791
    10. 'cl' → logprob: -11.62844181060791

Token 292: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0008819266804493964
    2. ' from' → logprob: -8.000882148742676
    3. 'de' → logprob: -8.375882148742676
    4. ',' → logprob: -8.875882148742676
    5. 'd' → logprob: -9.625882148742676
    6. 's' → logprob: -10.000882148742676
    7. ' defaultdict' → logprob: -10.500882148742676
    8. '
' → logprob: -11.000882148742676
    9. 'default' → logprob: -12.000882148742676
    10. ' de' → logprob: -12.000882148742676

Token 293: ' clé' (ID: 83188)
  Prédit: 'Key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Key' → logprob: -0.7042169570922852
    2. 'clé' → logprob: -1.2042169570922852
    3. ' clé' → logprob: -2.079216957092285
    4. 'key' → logprob: -2.704216957092285
    5. ' Key' → logprob: -5.079216957092285
    6. 'import' → logprob: -5.829216957092285
    7. ' key' → logprob: -6.454216957092285
    8. ' clés' → logprob: -6.579216957092285
    9. 'cl' → logprob: -7.454216957092285
    10. 'type' → logprob: -7.829216957092285

Token 294: '.
' (ID: 558)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0004577174549922347
    2. ' from' → logprob: -8.000457763671875
    3. ',' → logprob: -9.375457763671875
    4. 's' → logprob: -10.750457763671875
    5. '
' → logprob: -11.250457763671875
    6. 'de' → logprob: -13.875457763671875
    7. ' defaultdict' → logprob: -13.875457763671875
    8. 'import' → logprob: -14.625457763671875
    9. '```' → logprob: -15.875457763671875
    10. ',
' → logprob: -16.125457763671875

Token 295: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0280383548888494e-06
    2. ' from' → logprob: -13.875000953674316
    3. '
' → logprob: -19.375001907348633
    4. '```' → logprob: -20.625001907348633
    5. 'import' → logprob: -21.625001907348633
    6. 'for' → logprob: -22.875001907348633
    7. 'From' → logprob: -23.250001907348633
    8. '	from' → logprob: -23.500001907348633
    9. '.from' → logprob: -23.750001907348633
    10. '#from' → logprob: -24.125001907348633

Token 296: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0015023599844425917
    2. ' collections' → logprob: -6.501502513885498
    3. 'collection' → logprob: -17.376502990722656
    4. '.collections' → logprob: -18.126502990722656
    5. '_' → logprob: -19.501502990722656
    6. 'collect' → logprob: -19.626502990722656
    7. 'Collections' → logprob: -21.751502990722656
    8. '_collection' → logprob: -22.126502990722656
    9. 'col' → logprob: -22.376502990722656
    10. '_col' → logprob: -22.501502990722656

Token 297: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.21130305528640747
    2. 'collections' → logprob: -1.7113029956817627
    3. 'from' → logprob: -4.711303234100342
    4. ' import' → logprob: -8.211302757263184
    5. '.collections' → logprob: -8.211302757263184
    6. ' collections' → logprob: -9.461302757263184
    7. 'ct' → logprob: -9.461302757263184
    8. 'lections' → logprob: -9.836302757263184
    9. 'ections' → logprob: -9.836302757263184
    10. 'ctions' → logprob: -10.836302757263184

Token 298: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.018156031146645546
    2. ' defaultdict' → logprob: -4.018156051635742
    3. 'collections' → logprob: -12.018156051635742
    4. 'deque' → logprob: -17.518156051635742
    5. ' default' → logprob: -17.643156051635742
    6. '"default' → logprob: -17.893156051635742
    7. '.default' → logprob: -18.518156051635742
    8. 'def' → logprob: -18.518156051635742
    9. ''default' → logprob: -19.643156051635742
    10. '(default' → logprob: -19.768156051635742

Token 299: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8650910258293152
    2. ',' → logprob: -1.11509108543396
    3. '<|end|>' → logprob: -1.86509108543396
    4. '

' → logprob: -2.86509108543396
    5. '
' → logprob: -4.365090847015381
    6. '<|end|>' → logprob: -4.490090847015381
    7. 'from' → logprob: -4.740090847015381
    8. 'def' → logprob: -6.490090847015381
    9. ' as' → logprob: -7.365090847015381
    10. ' defaultdict' → logprob: -7.490090847015381

Token 300: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15575894713401794
    2. '

' → logprob: -2.155758857727051
    3. 'import' → logprob: -4.155758857727051
    4. '
' → logprob: -4.405758857727051
    5. '


' → logprob: -8.15575885772705
    6. 'from' → logprob: -9.65575885772705
    7. '#' → logprob: -9.78075885772705
    8. '



' → logprob: -10.03075885772705
    9. '
 
' → logprob: -10.78075885772705
    10. 'class' → logprob: -11.03075885772705

Token 301: ' Import' (ID: 19998)
  Prédit: 'typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'typing' → logprob: -0.2599860727787018
    2. 'import' → logprob: -2.509986162185669
    3. 'sys' → logprob: -2.759986162185669
    4. 'def' → logprob: -4.00998592376709
    5. ' typing' → logprob: -4.38498592376709
    6. 'from' → logprob: -4.38498592376709
    7. 'collections' → logprob: -4.50998592376709
    8. 'input' → logprob: -4.75998592376709
    9. 'thread' → logprob: -5.63498592376709
    10. 'dat' → logprob: -5.75998592376709

Token 302: 'ation' (ID: 387)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.34011924266815186
    2. ' sys' → logprob: -1.8401192426681519
    3. ' random' → logprob: -3.8401193618774414
    4. ' des' → logprob: -4.215119361877441
    5. ' heap' → logprob: -4.215119361877441
    6. ' itertools' → logprob: -4.590119361877441
    7. ' bis' → logprob: -4.840119361877441
    8. ' math' → logprob: -5.215119361877441
    9. ' functools' → logprob: -5.340119361877441
    10. ' de' → logprob: -5.340119361877441

Token 303: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6118748188018799
    2. 'import' → logprob: -1.4868748188018799
    3. ' os' → logprob: -2.73687481880188
    4. ' defaultdict' → logprob: -2.98687481880188
    5. 'deque' → logprob: -3.23687481880188
    6. ' from' → logprob: -4.236874580383301
    7. ' itertools' → logprob: -4.486874580383301
    8. 'collections' → logprob: -4.611874580383301
    9. ' collections' → logprob: -4.986874580383301
    10. ' import' → logprob: -5.236874580383301

Token 304: ' accumulate' (ID: 74226)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.4298193156719208
    2. 'deque' → logprob: -1.4298193454742432
    3. 'collections' → logprob: -2.929819345474243
    4. 'typing' → logprob: -3.179819345474243
    5. 're' → logprob: -5.304819107055664
    6. 'os' → logprob: -5.929819107055664
    7. 'thread' → logprob: -6.429819107055664
    8. 'heap' → logprob: -6.679819107055664
    9. 'random' → logprob: -7.054819107055664
    10. 'operator' → logprob: -7.304819107055664

Token 305: ' depuis' (ID: 16277)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.04178734868764877
    2. ' from' → logprob: -3.2917873859405518
    3. 'import' → logprob: -6.041787147521973
    4. ',' → logprob: -6.666787147521973
    5. '(from' → logprob: -10.666787147521973
    6. '	from' → logprob: -11.166787147521973
    7. '<|end|>' → logprob: -11.166787147521973
    8. '
' → logprob: -12.166787147521973
    9. '_from' → logprob: -12.416787147521973
    10. ' as' → logprob: -12.416787147521973

Token 306: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -6.182190554682165e-05
    2. ' itertools' → logprob: -9.750061988830566
    3. 'import' → logprob: -12.625061988830566
    4. '_it' → logprob: -15.750061988830566
    5. '(it' → logprob: -17.62506103515625
    6. 'heap' → logprob: -17.87506103515625
    7. 'math' → logprob: -18.37506103515625
    8. 'fun' → logprob: -18.37506103515625
    9. 'sys' → logprob: -19.12506103515625
    10. 'from' → logprob: -19.12506103515625

Token 307: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0005735247395932674
    2. ' from' → logprob: -7.500573635101318
    3. 'import' → logprob: -10.87557315826416
    4. ',' → logprob: -13.37557315826416
    5. '
' → logprob: -17.625574111938477
    6. ' ' → logprob: -17.750574111938477
    7. '	from' → logprob: -18.000574111938477
    8. ' as' → logprob: -18.750574111938477
    9. ' import' → logprob: -18.750574111938477
    10. ' ' → logprob: -19.125574111938477

Token 308: ' qui' (ID: 2780)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0280582495033741
    2. 'acc' → logprob: -4.028058052062988
    3. 'import' → logprob: -4.778058052062988
    4. ' from' → logprob: -7.278058052062988
    5. ' accumulate' → logprob: -7.903058052062988
    6. 'it' → logprob: -8.028058052062988
    7. ' itertools' → logprob: -10.528058052062988
    8. '#' → logprob: -11.028058052062988
    9. '_acc' → logprob: -13.403058052062988
    10. 'ac' → logprob: -13.403058052062988

Token 309: ' crée' (ID: 102256)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.8655291795730591
    2. ' itertools' → logprob: -1.240529179573059
    3. ' permet' → logprob: -1.865529179573059
    4. 'import' → logprob: -2.7405290603637695
    5. ' accumulate' → logprob: -3.1155290603637695
    6. 'it' → logprob: -3.9905290603637695
    7. ' functools' → logprob: -6.3655290603637695
    8. ' fournit' → logprob: -6.6155290603637695
    9. ' accum' → logprob: -7.1155290603637695
    10. 'per' → logprob: -7.2405290603637695

Token 310: ' des' (ID: 731)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.04815235361456871
    2. 'it' → logprob: -3.673152446746826
    3. 'import' → logprob: -4.673152446746826
    4. 'un' → logprob: -5.673152446746826
    5. ' itertools' → logprob: -5.798152446746826
    6. ' accumulate' → logprob: -6.423152446746826
    7. 'l' → logprob: -7.048152446746826
    8. 'une' → logprob: -7.173152446746826
    9. 'des' → logprob: -7.173152446746826
    10. 'from' → logprob: -7.548152446746826

Token 311: ' accum' (ID: 23148)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.08049660176038742
    2. 'it' → logprob: -2.5804965496063232
    3. ' accumulate' → logprob: -7.455496788024902
    4. 'import' → logprob: -7.580496788024902
    5. ' itertools' → logprob: -7.705496788024902
    6. '.acc' → logprob: -11.455496788024902
    7. '(acc' → logprob: -11.580496788024902
    8. 'ac' → logprob: -11.580496788024902
    9. '
' → logprob: -12.080496788024902
    10. '_acc' → logprob: -12.080496788024902

Token 312: 'ulations' (ID: 14571)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.035598576068878174
    2. 'umulate' → logprob: -3.9105985164642334
    3. 'import' → logprob: -4.4105987548828125
    4. 'from' → logprob: -7.0355987548828125
    5. 'um' → logprob: -7.4105987548828125
    6. 'ul' → logprob: -7.9105987548828125
    7. 'ulations' → logprob: -8.660598754882812
    8. 'ate' → logprob: -8.785598754882812
    9. 'ulative' → logprob: -8.910598754882812
    10. 'tools' → logprob: -9.160598754882812

Token 313: ' (' (ID: 350)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.07728647440671921
    2. 'from' → logprob: -2.7022864818573
    3. ' import' → logprob: -5.577286243438721
    4. ',' → logprob: -5.827286243438721
    5. ' from' → logprob: -8.077286720275879
    6. '<|end|>' → logprob: -9.202286720275879
    7. '(import' → logprob: -10.077286720275879
    8. 'acc' → logprob: -11.202286720275879
    9. 'de' → logprob: -11.202286720275879
    10. '<|end|>' → logprob: -11.577286720275879

Token 314: 'som' (ID: 35641)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.011289127171039581
    2. ' accumulate' → logprob: -5.511289119720459
    3. 'import' → logprob: -5.886289119720459
    4. 'it' → logprob: -6.136289119720459
    5. ' itertools' → logprob: -6.136289119720459
    6. '.acc' → logprob: -10.761289596557617
    7. 'from' → logprob: -11.511289596557617
    8. '(acc' → logprob: -11.886289596557617
    9. ' accumulated' → logprob: -11.886289596557617
    10. 'chain' → logprob: -12.386289596557617

Token 315: 'mes' (ID: 4613)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.23312193155288696
    2. 'ate' → logprob: -2.483121871948242
    3. 'import' → logprob: -3.108121871948242
    4. 'ulate' → logprob: -3.358121871948242
    5. 'es' → logprob: -4.108121871948242
    6. 'ations' → logprob: -4.733121871948242
    7. 'from' → logprob: -4.733121871948242
    8. 'me' → logprob: -6.108121871948242
    9. 'ulations' → logprob: -6.608121871948242
    10. 'ule' → logprob: -7.108121871948242

Token 316: ' parti' (ID: 37271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.00866125151515007
    2. ',' → logprob: -5.133661270141602
    3. 'from' → logprob: -6.508661270141602
    4. 'acc' → logprob: -7.258661270141602
    5. 'it' → logprob: -8.258661270141602
    6. ')' → logprob: -8.633661270141602
    7. 'success' → logprob: -10.383661270141602
    8. ' import' → logprob: -11.758661270141602
    9. ' ,' → logprob: -11.883661270141602
    10. 'iter' → logprob: -11.883661270141602

Token 317: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.613925039768219
    2. 'ales' → logprob: -0.863925039768219
    3. 'al' → logprob: -3.488924980163574
    4. 'el' → logprob: -5.738924980163574
    5. 'eles' → logprob: -7.238924980163574
    6. 'import' → logprob: -7.613924980163574
    7. 't' → logprob: -7.863924980163574
    8. 'les' → logprob: -8.238924980163574
    9. 'ale' → logprob: -8.488924980163574
    10. '```' → logprob: -8.613924980163574

Token 318: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021615279838442802
    2. ',' → logprob: -4.021615505218506
    3. 'from' → logprob: -6.396615505218506
    4. 'import' → logprob: -6.646615505218506
    5. ')
' → logprob: -8.521615028381348
    6. ' )' → logprob: -9.021615028381348
    7. '),' → logprob: -9.021615028381348
    8. 'de' → logprob: -11.396615028381348
    9. ',)' → logprob: -11.396615028381348
    10. ' from' → logprob: -12.396615028381348

Token 319: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0004156568902544677
    2. ' from' → logprob: -8.000415802001953
    3. 'import' → logprob: -9.500415802001953
    4. ',' → logprob: -12.250415802001953
    5. '```' → logprob: -15.500415802001953
    6. ' ' → logprob: -16.750415802001953
    7. 'as' → logprob: -17.000415802001953
    8. '	from' → logprob: -17.125415802001953
    9. ' ' → logprob: -17.375415802001953
    10. '#from' → logprob: -17.375415802001953

Token 320: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0002614550176076591
    2. ' itertools' → logprob: -8.250261306762695
    3. 'iter' → logprob: -16.375261306762695
    4. 'import' → logprob: -18.875261306762695
    5. '_it' → logprob: -18.875261306762695
    6. '	it' → logprob: -20.250261306762695
    7. '(it' → logprob: -20.375261306762695
    8. 'its' → logprob: -21.000261306762695
    9. 'iterator' → logprob: -22.000261306762695
    10. ' ' → logprob: -22.000261306762695

Token 321: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.4740915596485138
    2. 'import' → logprob: -0.9740915298461914
    3. '	import' → logprob: -11.349091529846191
    4. '_import' → logprob: -13.224091529846191
    5. ' ' → logprob: -15.099091529846191
    6. ' ' → logprob: -15.599091529846191
    7. '.import' → logprob: -15.974091529846191
    8. '-import' → logprob: -16.599092483520508
    9. '(import' → logprob: -17.224092483520508
    10. ' importe' → logprob: -17.349092483520508

Token 322: ' accumulate' (ID: 74226)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.700132997939363e-05
    2. ' accumulate' → logprob: -11.000017166137695
    3. 'ac' → logprob: -16.625017166137695
    4. '	acc' → logprob: -16.750017166137695
    5. '(acc' → logprob: -17.000017166137695
    6. '.acc' → logprob: -17.875017166137695
    7. '_acc' → logprob: -18.125017166137695
    8. 'Acc' → logprob: -20.375017166137695
    9. ' ' → logprob: -21.125017166137695
    10. 'import' → logprob: -21.250017166137695

Token 323: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9855189323425293
    2. '<|end|>' → logprob: -1.2355189323425293
    3. '
' → logprob: -2.1105189323425293
    4. '

' → logprob: -2.3605189323425293
    5. '\n' → logprob: -2.9855189323425293
    6. '<|end|>' → logprob: -3.3605189323425293
    7. ',' → logprob: -3.6105189323425293
    8. ' as' → logprob: -6.360518932342529
    9. 'def' → logprob: -6.860518932342529
    10. 'from' → logprob: -6.860518932342529

Token 324: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8301606774330139
    2. 'def' → logprob: -0.8301606774330139
    3. '
' → logprob: -2.455160617828369
    4. '

' → logprob: -3.330160617828369
    5. '\n' → logprob: -5.330160617828369
    6. '


' → logprob: -7.205160617828369
    7. '
 
' → logprob: -8.705161094665527
    8. '\' → logprob: -8.830161094665527
    9. 'from' → logprob: -9.205161094665527
    10. '



' → logprob: -10.080161094665527

Token 325: ' Import' (ID: 19998)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.9532872438430786
    2. 'import' → logprob: -1.2032872438430786
    3. 'input' → logprob: -2.453287124633789
    4. 'typing' → logprob: -2.703287124633789
    5. 'from' → logprob: -2.828287124633789
    6. 'collections' → logprob: -3.078287124633789
    7. 'os' → logprob: -3.828287124633789
    8. 'def' → logprob: -4.078287124633789
    9. 'io' → logprob: -5.078287124633789
    10. 'built' → logprob: -5.578287124633789

Token 326: 'ation' (ID: 387)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5425946116447449
    2. ' os' → logprob: -1.1675946712493896
    3. ' math' → logprob: -3.2925946712493896
    4. ' numpy' → logprob: -3.9175946712493896
    5. 'from' → logprob: -4.6675944328308105
    6. ' csv' → logprob: -5.1675944328308105
    7. ' random' → logprob: -5.1675944328308105
    8. ' from' → logprob: -5.2925944328308105
    9. ' re' → logprob: -5.9175944328308105
    10. ' datetime' → logprob: -6.1675944328308105

Token 327: ' de' (ID: 334)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.7962707281112671
    2. 'from' → logprob: -1.796270728111267
    3. ' random' → logprob: -1.796270728111267
    4. 'random' → logprob: -3.0462708473205566
    5. 'os' → logprob: -3.5462708473205566
    6. 'deque' → logprob: -4.171270847320557
    7. ' from' → logprob: -4.296270847320557
    8. ' sys' → logprob: -4.296270847320557
    9. ' defaultdict' → logprob: -4.421270847320557
    10. ' datetime' → logprob: -4.421270847320557

Token 328: ' Counter' (ID: 32251)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.5093010067939758
    2. 'random' → logprob: -1.259300947189331
    3. 'fun' → logprob: -2.884300947189331
    4. 'collections' → logprob: -3.384300947189331
    5. 'deque' → logprob: -4.75930118560791
    6. 'os' → logprob: -5.13430118560791
    7. 'it' → logprob: -5.75930118560791
    8. 're' → logprob: -5.75930118560791
    9. 'typing' → logprob: -6.38430118560791
    10. 'copy' → logprob: -7.25930118560791

Token 329: ' depuis' (ID: 16277)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.004078997299075127
    2. ' from' → logprob: -5.5040788650512695
    3. ',' → logprob: -15.37907886505127
    4. '	from' → logprob: -15.75407886505127
    5. '
' → logprob: -15.87907886505127
    6. '#from' → logprob: -16.879079818725586
    7. '.from' → logprob: -18.254079818725586
    8. '[from' → logprob: -18.379079818725586
    9. '(from' → logprob: -18.504079818725586
    10. '```' → logprob: -18.879079818725586

Token 330: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -2.935296834039036e-06
    2. ' collections' → logprob: -12.75000286102295
    3. 'from' → logprob: -18.750003814697266
    4. 'collection' → logprob: -19.500003814697266
    5. 'col' → logprob: -22.875003814697266
    6. '.collections' → logprob: -23.125003814697266
    7. 'collect' → logprob: -23.375003814697266
    8. 'Collections' → logprob: -24.000003814697266
    9. '
' → logprob: -25.250003814697266
    10. 'typing' → logprob: -26.250003814697266

Token 331: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.000488811288960278
    2. ' from' → logprob: -7.625488758087158
    3. 'import' → logprob: -14.375489234924316
    4. '
' → logprob: -16.12548828125
    5. ',' → logprob: -16.25048828125
    6. '```' → logprob: -17.25048828125
    7. '	from' → logprob: -17.75048828125
    8. '.from' → logprob: -17.87548828125
    9. ':' → logprob: -19.00048828125
    10. '#from' → logprob: -19.25048828125

Token 332: ' qui' (ID: 2780)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.007792344316840172
    2. ' from' → logprob: -5.0077924728393555
    3. 'Counter' → logprob: -7.1327924728393555
    4. ' Counter' → logprob: -9.007792472839355
    5. 'collections' → logprob: -9.132792472839355
    6. ' collections' → logprob: -10.382792472839355
    7. '#' → logprob: -12.132792472839355
    8. ' counter' → logprob: -12.882792472839355
    9. 'which' → logprob: -13.507792472839355
    10. 'import' → logprob: -13.507792472839355

Token 333: ' permet' (ID: 11798)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4722801744937897
    2. ' permet' → logprob: -1.7222801446914673
    3. 'collections' → logprob: -2.097280263900757
    4. 'counter' → logprob: -3.597280263900757
    5. 'Counter' → logprob: -3.847280263900757
    6. ' counter' → logprob: -5.097280025482178
    7. 'est' → logprob: -5.472280025482178
    8. ' est' → logprob: -5.597280025482178
    9. 'comp' → logprob: -6.597280025482178
    10. 'per' → logprob: -6.597280025482178

Token 334: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.04768634960055351
    2. 'collections' → logprob: -3.1726863384246826
    3. 'de' → logprob: -6.547686576843262
    4. 'd' → logprob: -6.922686576843262
    5. ' de' → logprob: -7.047686576843262
    6. ' collections' → logprob: -7.422686576843262
    7. ' from' → logprob: -7.672686576843262
    8. 'des' → logprob: -8.547686576843262
    9. ' d' → logprob: -9.297686576843262
    10. ' des' → logprob: -10.547686576843262

Token 335: ' compter' (ID: 81694)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.011078117415308952
    2. ' collections' → logprob: -4.511077880859375
    3. 'from' → logprob: -11.386077880859375
    4. 'collection' → logprob: -11.886077880859375
    5. 'collect' → logprob: -12.386077880859375
    6. 'counter' → logprob: -13.261077880859375
    7. ' compter' → logprob: -13.511077880859375
    8. ' collect' → logprob: -13.511077880859375
    9. 'count' → logprob: -13.636077880859375
    10. ' collection' → logprob: -14.511077880859375

Token 336: ' les' (ID: 1341)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.003987692762166262
    2. ' from' → logprob: -5.878987789154053
    3. 'collections' → logprob: -6.753987789154053
    4. ' collections' → logprob: -12.003987312316895
    5. '<|end|>' → logprob: -12.503987312316895
    6. 'import' → logprob: -13.628987312316895
    7. '#from' → logprob: -14.003987312316895
    8. '	from' → logprob: -14.253987312316895
    9. '.from' → logprob: -14.503987312316895
    10. '.Counter' → logprob: -14.628987312316895

Token 337: ' occurrences' (ID: 108073)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0006174852605909109
    2. 'elements' → logprob: -7.750617504119873
    3. ' collections' → logprob: -8.750617027282715
    4. 'import' → logprob: -12.125617027282715
    5. 'from' → logprob: -12.250617027282715
    6. ' elements' → logprob: -12.375617027282715
    7. 'objects' → logprob: -12.750617027282715
    8. 'élé' → logprob: -13.000617027282715
    9. 'tokens' → logprob: -13.375617027282715
    10. ' éléments' → logprob: -13.750617027282715

Token 338: ' d' (ID: 272)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.004621780011802912
    2. ' from' → logprob: -5.379621982574463
    3. '
' → logprob: -14.379621505737305
    4. '#from' → logprob: -14.754621505737305
    5. '	from' → logprob: -15.379621505737305
    6. '.from' → logprob: -16.379621505737305
    7. '#' → logprob: -16.629621505737305
    8. ',' → logprob: -17.004621505737305
    9. '[from' → logprob: -17.379621505737305
    10. ' as' → logprob: -17.754621505737305

Token 339: ''' (ID: 6)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.03901533782482147
    2. ' collections' → logprob: -4.039015293121338
    3. 'elements' → logprob: -5.414015293121338
    4. 'from' → logprob: -5.664015293121338
    5. 'objects' → logprob: -5.789015293121338
    6. 'a' → logprob: -6.164015293121338
    7. 'une' → logprob: -6.664015293121338
    8. ' elements' → logprob: -7.164015293121338
    9. 'import' → logprob: -7.289015293121338
    10. 'items' → logprob: -7.289015293121338

Token 340: 'élé' (ID: 15228)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0005566088366322219
    2. ' collections' → logprob: -7.500556468963623
    3. 'elements' → logprob: -13.000556945800781
    4. 'objects' → logprob: -14.625556945800781
    5. 'from' → logprob: -14.750556945800781
    6. 'collection' → logprob: -16.00055694580078
    7. 'items' → logprob: -16.25055694580078
    8. 'typing' → logprob: -16.37555694580078
    9. 'import' → logprob: -16.50055694580078
    10. 'counter' → logprob: -16.87555694580078

Token 341: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.5836537480354309
    2. 'lements' → logprob: -1.3336536884307861
    3. 'ements' → logprob: -2.333653688430786
    4. 'from' → logprob: -2.708653688430786
    5. 't' → logprob: -5.958653926849365
    6. 'lems' → logprob: -5.958653926849365
    7. 'ités' → logprob: -6.333653926849365
    8. 'és' → logprob: -6.833653926849365
    9. 'elements' → logprob: -6.958653926849365
    10. 'ctions' → logprob: -7.333653926849365

Token 342: ' dans' (ID: 2671)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -2.7968066206085496e-05
    2. ' from' → logprob: -10.500027656555176
    3. '
' → logprob: -15.000027656555176
    4. '```' → logprob: -17.250028610229492
    5. 'import' → logprob: -17.375028610229492
    6. ',' → logprob: -18.000028610229492
    7. '#' → logprob: -18.250028610229492
    8. '#from' → logprob: -19.250028610229492
    9. '.from' → logprob: -19.375028610229492
    10. 'as' → logprob: -19.625028610229492

Token 343: ' une' (ID: 2463)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.00033546582562848926
    2. ' collections' → logprob: -8.000335693359375
    3. '.collections' → logprob: -17.250335693359375
    4. 'from' → logprob: -18.000335693359375
    5. 'collection' → logprob: -18.000335693359375
    6. '
' → logprob: -20.125335693359375
    7. 'objects' → logprob: -21.000335693359375
    8. 'elements' → logprob: -21.250335693359375
    9. '(collection' → logprob: -21.375335693359375
    10. 'containers' → logprob: -21.625335693359375

Token 344: ' liste' (ID: 31719)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.005010548047721386
    2. ' collections' → logprob: -5.505010604858398
    3. 'list' → logprob: -7.630010604858398
    4. 'collection' → logprob: -7.880010604858398
    5. 'module' → logprob: -10.755010604858398
    6. 'from' → logprob: -10.755010604858398
    7. 'liste' → logprob: -11.005010604858398
    8. ' collection' → logprob: -12.630010604858398
    9. 'lists' → logprob: -13.505010604858398
    10. ' list' → logprob: -14.380010604858398

Token 345: '.
' (ID: 558)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.3544423381972592e-05
    2. ' from' → logprob: -11.25001335144043
    3. '
' → logprob: -15.00001335144043
    4. '```' → logprob: -16.37501335144043
    5. ',' → logprob: -17.00001335144043
    6. '.from' → logprob: -19.62501335144043
    7. '#from' → logprob: -19.87501335144043
    8. 'import' → logprob: -20.12501335144043
    9. '#' → logprob: -20.25001335144043
    10. '	from' → logprob: -20.62501335144043

Token 346: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: 0.0
    2. ' from' → logprob: -20.25
    3. '```' → logprob: -20.625
    4. 'import' → logprob: -23.75
    5. '
' → logprob: -24.375
    6. '#from' → logprob: -24.5
    7. 'From' → logprob: -24.75
    8. '#' → logprob: -25.125
    9. '.from' → logprob: -25.375
    10. '	from' → logprob: -26.0

Token 347: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -9.088346359931165e-07
    2. ' collections' → logprob: -14.000000953674316
    3. 'collection' → logprob: -23.0
    4. '.collections' → logprob: -23.75
    5. 'from' → logprob: -24.5
    6. 'Collections' → logprob: -25.25
    7. 'collect' → logprob: -25.25
    8. 'col' → logprob: -25.5
    9. '```' → logprob: -28.0
    10. '
' → logprob: -28.125

Token 348: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1606617420911789
    2. ' import' → logprob: -1.9106616973876953
    3. 'from' → logprob: -8.285661697387695
    4. 'collections' → logprob: -8.660661697387695
    5. ' collections' → logprob: -12.285661697387695
    6. '.collections' → logprob: -13.035661697387695
    7. '	import' → logprob: -13.410661697387695
    8. ' ' → logprob: -13.660661697387695
    9. ' from' → logprob: -13.785661697387695
    10. '_import' → logprob: -14.285661697387695

Token 349: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -2.1008713702030946e-06
    2. ' Counter' → logprob: -14.000001907348633
    3. 'collections' → logprob: -14.125001907348633
    4. 'counter' → logprob: -14.750001907348633
    5. '.Counter' → logprob: -17.625001907348633
    6. '_counter' → logprob: -18.875001907348633
    7. 'Collection' → logprob: -20.250001907348633
    8. 'Collections' → logprob: -21.375001907348633
    9. 'deque' → logprob: -22.125001907348633
    10. ' counter' → logprob: -22.750001907348633

Token 350: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6657097339630127
    2. '<|end|>' → logprob: -1.4157097339630127
    3. '
' → logprob: -1.5407097339630127
    4. 'import' → logprob: -4.415709495544434
    5. 'def' → logprob: -5.040709495544434
    6. '<|end|>' → logprob: -5.415709495544434
    7. '


' → logprob: -5.790709495544434
    8. '#' → logprob: -6.915709495544434
    9. '\n' → logprob: -7.165709495544434
    10. '



' → logprob: -8.540709495544434

Token 351: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020738309249281883
    2. '
' → logprob: -4.395738124847412
    3. '

' → logprob: -5.645738124847412
    4. 'import' → logprob: -5.770738124847412
    5. 'd' → logprob: -7.395738124847412
    6. '\n' → logprob: -7.895738124847412
    7. '\' → logprob: -8.27073860168457
    8. 'n' → logprob: -9.52073860168457
    9. ' 
' → logprob: -10.02073860168457
    10. '


' → logprob: -10.27073860168457

Token 352: ' Import' (ID: 19998)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00371540361084044
    2. 'import' → logprob: -5.628715515136719
    3. ' def' → logprob: -10.128715515136719
    4. 'input' → logprob: -10.378715515136719
    5. 'from' → logprob: -10.503715515136719
    6. 'if' → logprob: -11.878715515136719
    7. '#' → logprob: -12.753715515136719
    8. '\' → logprob: -13.253715515136719
    9. ' 
' → logprob: -14.128715515136719
    10. '
' → logprob: -14.253715515136719

Token 353: 'ation' (ID: 387)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.770042359828949
    2. 'ation' → logprob: -1.5200424194335938
    3. ' os' → logprob: -2.6450424194335938
    4. 'ance' → logprob: -2.8950424194335938
    5. ' math' → logprob: -3.1450424194335938
    6. ' sys' → logprob: -3.5200424194335938
    7. ' from' → logprob: -3.8950424194335938
    8. ' re' → logprob: -4.395042419433594
    9. ' random' → logprob: -4.645042419433594
    10. 're' → logprob: -4.770042419433594

Token 354: ' de' (ID: 334)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -1.0925045013427734
    2. 'json' → logprob: -1.7175045013427734
    3. 'os' → logprob: -1.9675045013427734
    4. 'from' → logprob: -2.5925045013427734
    5. 'collections' → logprob: -2.9675045013427734
    6. 'random' → logprob: -3.0925045013427734
    7. ' json' → logprob: -3.2175045013427734
    8. ' random' → logprob: -3.5925045013427734
    9. ' defaultdict' → logprob: -3.8425045013427734
    10. 'deque' → logprob: -4.092504501342773

Token 355: ' deque' (ID: 90347)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.0179883241653442
    2. 'random' → logprob: -1.0179883241653442
    3. 'it' → logprob: -2.5179882049560547
    4. 'operator' → logprob: -2.8929882049560547
    5. 'deque' → logprob: -3.1429882049560547
    6. 'os' → logprob: -3.5179882049560547
    7. 'typing' → logprob: -3.7679882049560547
    8. 'fun' → logprob: -4.267988204956055
    9. 'json' → logprob: -4.892988204956055
    10. 'string' → logprob: -5.267988204956055

Token 356: ' (' (ID: 350)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.016061583533883095
    2. ' from' → logprob: -4.141061782836914
    3. 'import' → logprob: -10.766061782836914
    4. ',' → logprob: -12.516061782836914
    5. '	from' → logprob: -13.891061782836914
    6. ' ' → logprob: -14.766061782836914
    7. '.from' → logprob: -15.391061782836914
    8. '
' → logprob: -15.516061782836914
    9. '[from' → logprob: -15.516061782836914
    10. '#from' → logprob: -15.891061782836914

Token 357: 'double' (ID: 9489)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1800270527601242
    2. ' from' → logprob: -2.6800270080566406
    3. 'collections' → logprob: -3.1800270080566406
    4. 'deque' → logprob: -3.5550270080566406
    5. ' deque' → logprob: -4.555027008056641
    6. ')' → logprob: -4.805027008056641
    7. ' collections' → logprob: -4.930027008056641
    8. 'de' → logprob: -10.55502700805664
    9. ' )' → logprob: -10.68002700805664
    10. 'Deque' → logprob: -11.05502700805664

Token 358: '-ended' (ID: 155972)
  Prédit: '-ended'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ended' → logprob: -0.2755732834339142
    2. ' ended' → logprob: -1.6505732536315918
    3. 'ended' → logprob: -3.025573253631592
    4. 'import' → logprob: -8.77557373046875
    5. 'from' → logprob: -9.65057373046875
    6. 'deque' → logprob: -10.02557373046875
    7. 'linked' → logprob: -10.52557373046875
    8. 'queue' → logprob: -10.90057373046875
    9. 'ton' → logprob: -11.40057373046875
    10. '-' → logprob: -11.40057373046875

Token 359: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.07967541366815567
    2. 'queue' → logprob: -2.5796754360198975
    3. '_queue' → logprob: -7.204675197601318
    4. 'Queue' → logprob: -10.579675674438477
    5. 'deque' → logprob: -12.079675674438477
    6. 'que' → logprob: -12.954675674438477
    7. ' queues' → logprob: -12.954675674438477
    8. ')' → logprob: -13.579675674438477
    9. 'import' → logprob: -14.079675674438477
    10. '(queue' → logprob: -14.329675674438477

Token 360: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00036382899270392954
    2. 'from' → logprob: -8.000364303588867
    3. ' )' → logprob: -11.375364303588867
    4. ',' → logprob: -11.375364303588867
    5. '}' → logprob: -13.250364303588867
    6. '）' → logprob: -13.500364303588867
    7. ' from' → logprob: -14.500364303588867
    8. ')
' → logprob: -14.750364303588867
    9. 'import' → logprob: -15.125364303588867
    10. '')' → logprob: -15.125364303588867

Token 361: ' depuis' (ID: 16277)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0005548207554966211
    2. ' from' → logprob: -7.500555038452148
    3. ',' → logprob: -13.250555038452148
    4. '.from' → logprob: -17.37555503845215
    5. '```' → logprob: -17.75055503845215
    6. 'de' → logprob: -17.87555503845215
    7. '#from' → logprob: -18.00055503845215
    8. '	from' → logprob: -18.00055503845215
    9. '
' → logprob: -18.25055503845215
    10. 'import' → logprob: -18.37555503845215

Token 362: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -7.493430894101039e-05
    2. ' collections' → logprob: -9.500075340270996
    3. '.collections' → logprob: -17.62507438659668
    4. 'collection' → logprob: -18.50007438659668
    5. '_collection' → logprob: -20.62507438659668
    6. '
' → logprob: -20.87507438659668
    7. 'from' → logprob: -21.12507438659668
    8. '_' → logprob: -21.50007438659668
    9. '_col' → logprob: -21.62507438659668
    10. 'col' → logprob: -21.87507438659668

Token 363: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.002192137064412236
    2. ' from' → logprob: -6.12719202041626
    3. 'import' → logprob: -12.252192497253418
    4. ',' → logprob: -13.377192497253418
    5. 'de' → logprob: -15.627192497253418
    6. '.from' → logprob: -15.752192497253418
    7. '```' → logprob: -15.752192497253418
    8. '	from' → logprob: -16.5021915435791
    9. ' de' → logprob: -17.6271915435791
    10. '#from' → logprob: -17.8771915435791

Token 364: ' 
' (ID: 793)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.009549715556204319
    2. ' from' → logprob: -4.759549617767334
    3. 'deque' → logprob: -7.634549617767334
    4. ' deque' → logprob: -7.759549617767334
    5. 'collections' → logprob: -11.259550094604492
    6. ' collections' → logprob: -12.634550094604492
    7. 'import' → logprob: -12.884550094604492
    8. 'de' → logprob: -12.884550094604492
    9. '#' → logprob: -13.759550094604492
    10. 'Deque' → logprob: -14.634550094604492

Token 365: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.005148366093635559
    2. 'collections' → logprob: -5.505148410797119
    3. ' from' → logprob: -7.005148410797119
    4. ' collections' → logprob: -9.255147933959961
    5. 'deque' → logprob: -9.755147933959961
    6. ' deque' → logprob: -12.755147933959961
    7. '#' → logprob: -13.130147933959961
    8. 'de' → logprob: -13.380147933959961
    9. 'import' → logprob: -13.880147933959961
    10. 'which' → logprob: -15.255147933959961

Token 366: ' une' (ID: 2463)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.16889861226081848
    2. 'deque' → logprob: -1.918898582458496
    3. 'collections' → logprob: -4.793898582458496
    4. ' deque' → logprob: -8.418898582458496
    5. 'de' → logprob: -9.418898582458496
    6. ' from' → logprob: -10.668898582458496
    7. '#' → logprob: -11.168898582458496
    8. 'Deque' → logprob: -11.293898582458496
    9. ' collections' → logprob: -13.043898582458496
    10. 'import' → logprob: -13.418898582458496

Token 367: ' file' (ID: 1974)
  Prédit: ' structure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' structure' → logprob: -0.2336239367723465
    2. 'structure' → logprob: -2.73362398147583
    3. 'queue' → logprob: -2.73362398147583
    4. ' queue' → logprob: -3.10862398147583
    5. ' data' → logprob: -4.60862398147583
    6. 'collections' → logprob: -4.85862398147583
    7. ' collection' → logprob: -5.35862398147583
    8. ' file' → logprob: -5.85862398147583
    9. 'data' → logprob: -6.10862398147583
    10. 'deque' → logprob: -6.23362398147583

Token 368: ' où' (ID: 15113)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3801923990249634
    2. 'import' → logprob: -1.7551923990249634
    3. 'deque' → logprob: -2.005192279815674
    4. 'de' → logprob: -5.255192279815674
    5. ' from' → logprob: -6.630192279815674
    6. ' import' → logprob: -7.255192279815674
    7. ' de' → logprob: -7.880192279815674
    8. 'collections' → logprob: -7.880192279815674
    9. 'd' → logprob: -7.880192279815674
    10. ' deque' → logprob: -8.630192756652832

Token 369: ' l' (ID: 305)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.3836166262626648
    2. 'on' → logprob: -1.7586166858673096
    3. 'les' → logprob: -2.7586166858673096
    4. 'vous' → logprob: -3.7586166858673096
    5. 'l' → logprob: -3.8836166858673096
    6. ' l' → logprob: -4.2586164474487305
    7. ' vous' → logprob: -4.5086164474487305
    8. ' les' → logprob: -4.5086164474487305
    9. 'append' → logprob: -7.0086164474487305
    10. 'tu' → logprob: -7.5086164474487305

Token 370: ''on' (ID: 25812)
  Prédit: ''on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''on' → logprob: -0.010232794098556042
    2. 'on' → logprob: -4.635232925415039
    3. '’on' → logprob: -8.260232925415039
    4. ' on' → logprob: -8.635232925415039
    5. ''ont' → logprob: -11.385232925415039
    6. '```' → logprob: -11.385232925415039
    7. '#' → logprob: -11.885232925415039
    8. 'les' → logprob: -13.135232925415039
    9. ''utilisateur' → logprob: -13.760232925415039
    10. ''' → logprob: -13.885232925415039

Token 371: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.04405898228287697
    2. ' peut' → logprob: -3.1690590381622314
    3. 'can' → logprob: -7.794058799743652
    4. 'pu' → logprob: -8.544058799743652
    5. 'p' → logprob: -8.794058799743652
    6. ' peux' → logprob: -9.169058799743652
    7. ' can' → logprob: -9.294058799743652
    8. ' pe' → logprob: -10.294058799743652
    9. 'from' → logprob: -10.919058799743652
    10. 'a' → logprob: -11.419058799743652

Token 372: ' ajouter' (ID: 78457)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.5959876179695129
    2. 'append' → logprob: -0.8459876179695129
    3. 'p' → logprob: -4.470987796783447
    4. 'pop' → logprob: -5.470987796783447
    5. ' append' → logprob: -6.095987796783447
    6. ' ajouter' → logprob: -7.595987796783447
    7. 'import' → logprob: -8.095987319946289
    8. 'app' → logprob: -8.220987319946289
    9. ' p' → logprob: -8.845987319946289
    10. 'from' → logprob: -9.220987319946289

Token 373: '/en' (ID: 26870)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.5419486165046692
    2. ',' → logprob: -1.4169485569000244
    3. ' et' → logprob: -2.2919485569000244
    4. 'import' → logprob: -3.2919485569000244
    5. 'ou' → logprob: -3.9169485569000244
    6. ' ou' → logprob: -5.1669487953186035
    7. ' and' → logprob: -5.6669487953186035
    8. 'des' → logprob: -5.7919487953186035
    9. ' des' → logprob: -6.4169487953186035
    10. 'and' → logprob: -7.0419487953186035

Token 374: 'lever' (ID: 43558)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07889397442340851
    2. 'lever' → logprob: -2.9538938999176025
    3. 't' → logprob: -4.078894138336182
    4. 'queue' → logprob: -5.953894138336182
    5. 'pop' → logprob: -6.328894138336182
    6. 'd' → logprob: -6.953894138336182
    7. 'deque' → logprob: -7.328894138336182
    8. '```' → logprob: -8.328893661499023
    9. 'coder' → logprob: -9.453893661499023
    10. 'que' → logprob: -9.578893661499023

Token 375: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.12659047544002533
    2. 'from' → logprob: -2.5015904903411865
    3. 'des' → logprob: -3.6265904903411865
    4. 'deque' → logprob: -5.626590251922607
    5. ' from' → logprob: -5.751590251922607
    6. 'import' → logprob: -7.126590251922607
    7. ',' → logprob: -7.376590251922607
    8. ' à' → logprob: -7.501590251922607
    9. ' ' → logprob: -8.376590728759766
    10. 'elements' → logprob: -8.751590728759766

Token 376: ' éléments' (ID: 57375)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5329596400260925
    2. 'both' → logprob: -2.1579596996307373
    3. 'deque' → logprob: -2.2829596996307373
    4. 'collections' → logprob: -2.4079596996307373
    5. 'les' → logprob: -2.7829596996307373
    6. 'des' → logprob: -3.4079596996307373
    7. 'élé' → logprob: -6.157959461212158
    8. ' deux' → logprob: -6.282959461212158
    9. '```' → logprob: -6.657959461212158
    10. 'elements' → logprob: -6.782959461212158

Token 377: ' aux' (ID: 5850)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.010233382694423199
    2. ' from' → logprob: -4.635233402252197
    3. 'deque' → logprob: -8.135232925415039
    4. ',' → logprob: -8.885232925415039
    5. ' des' → logprob: -11.385232925415039
    6. 'de' → logprob: -11.635232925415039
    7. '```' → logprob: -12.385232925415039
    8. ' depuis' → logprob: -12.510232925415039
    9. 'des' → logprob: -12.635232925415039
    10. ' as' → logprob: -13.010232925415039

Token 378: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.052779603749513626
    2. 'both' → logprob: -3.4277796745300293
    3. 'les' → logprob: -4.427779674530029
    4. 'deque' → logprob: -5.802779674530029
    5. 'bot' → logprob: -7.177779674530029
    6. 'extr' → logprob: -7.177779674530029
    7. 'des' → logprob: -7.552779674530029
    8. '2' → logprob: -7.677779674530029
    9. 'dé' → logprob: -8.177779197692871
    10. '```' → logprob: -8.302779197692871

Token 379: ' extr' (ID: 15674)
  Prédit: 'extr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extr' → logprob: -0.579250693321228
    2. 'ext' → logprob: -1.079250693321228
    3. 'b' → logprob: -2.9542508125305176
    4. 'ends' → logprob: -3.0792508125305176
    5. 'bout' → logprob: -7.454250812530518
    6. 'c' → logprob: -7.579250812530518
    7. 'ex' → logprob: -8.95425033569336
    8. 'faces' → logprob: -9.20425033569336
    9. ' extr' → logprob: -9.57925033569336
    10. 'positions' → logprob: -9.82925033569336

Token 380: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.008683236315846443
    2. 'e' → logprob: -5.133683204650879
    3. 'em' → logprob: -6.758683204650879
    4. 'emes' → logprob: -7.508683204650879
    5. 'êmes' → logprob: -8.258683204650879
    6. 'rem' → logprob: -8.633683204650879
    7. 'ems' → logprob: -9.008683204650879
    8. 'ê' → logprob: -9.133683204650879
    9. 'ém' → logprob: -9.508683204650879
    10. 'es' → logprob: -9.883683204650879

Token 381: 'mit' (ID: 2765)
  Prédit: 'mits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mits' → logprob: -0.5709567666053772
    2. 'mit' → logprob: -0.9459567666053772
    3. 'mites' → logprob: -3.1959567070007324
    4. 'm' → logprob: -5.570956707000732
    5. 'mes' → logprob: -6.820956707000732
    6. 'mite' → logprob: -7.570956707000732
    7. '```' → logprob: -8.82095718383789
    8. 'ms' → logprob: -9.44595718383789
    9. 'mis' → logprob: -9.94595718383789
    10. 's' → logprob: -11.57095718383789

Token 382: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.4434974789619446
    2. 'es' → logprob: -1.0684974193572998
    3. 's' → logprob: -4.318497657775879
    4. 'ies' → logprob: -7.318497657775879
    5. 'é' → logprob: -7.568497657775879
    6. 'e' → logprob: -10.193497657775879
    7. 'tes' → logprob: -10.693497657775879
    8. 't' → logprob: -11.068497657775879
    9. 'ées' → logprob: -11.068497657775879
    10. 'ès' → logprob: -11.693497657775879

Token 383: ' avec' (ID: 3937)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.00012606535165105015
    2. ' from' → logprob: -9.000125885009766
    3. 'import' → logprob: -13.000125885009766
    4. ',' → logprob: -15.500125885009766
    5. '```' → logprob: -17.500125885009766
    6. 'de' → logprob: -17.625125885009766
    7. '.from' → logprob: -17.750125885009766
    8. '	from' → logprob: -17.750125885009766
    9. 'as' → logprob: -18.625125885009766
    10. '.' → logprob: -19.000125885009766

Token 384: ' rapid' (ID: 12379)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.7316948175430298
    2. 'deque' → logprob: -0.7316948175430298
    3. 'append' → logprob: -3.3566946983337402
    4. ' collections' → logprob: -7.23169469833374
    5. ' deque' → logprob: -7.48169469833374
    6. 'from' → logprob: -7.48169469833374
    7. 'des' → logprob: -8.106695175170898
    8. ' append' → logprob: -8.481695175170898
    9. 'fast' → logprob: -9.356695175170898
    10. 'de' → logprob: -9.356695175170898

Token 385: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.28358951210975647
    2. 'ity' → logprob: -1.783589482307434
    3. 'from' → logprob: -3.0335896015167236
    4. 'e' → logprob: -5.0335893630981445
    5. 'ite' → logprob: -5.1585893630981445
    6. 'deque' → logprob: -5.2835893630981445
    7. 'eté' → logprob: -5.4085893630981445
    8. 'y' → logprob: -6.7835893630981445
    9. 'ited' → logprob: -7.0335893630981445
    10. 'é' → logprob: -7.2835893630981445

Token 386: '.
' (ID: 558)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0021904718596488237
    2. ' from' → logprob: -6.127190589904785
    3. ',' → logprob: -12.377190589904785
    4. '
' → logprob: -14.627190589904785
    5. '```' → logprob: -15.127190589904785
    6. '	from' → logprob: -15.877190589904785
    7. '.from' → logprob: -16.50218963623047
    8. '(from' → logprob: -17.25218963623047
    9. 'import' → logprob: -17.37718963623047
    10. '.' → logprob: -17.62718963623047

Token 387: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: 0.0
    2. ' from' → logprob: -19.125
    3. '```' → logprob: -19.5
    4. '
' → logprob: -23.875
    5. '	from' → logprob: -24.875
    6. 'for' → logprob: -25.75
    7. '.from' → logprob: -26.0
    8. '`' → logprob: -26.0
    9. 'import' → logprob: -26.125
    10. 'From' → logprob: -26.375

Token 388: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0005530327325686812
    2. ' collections' → logprob: -7.500553131103516
    3. '.collections' → logprob: -18.250553131103516
    4. 'collection' → logprob: -19.750553131103516
    5. 'from' → logprob: -21.250553131103516
    6. '_' → logprob: -21.625553131103516
    7. '_collection' → logprob: -22.625553131103516
    8. '```' → logprob: -22.625553131103516
    9. 'col' → logprob: -22.875553131103516
    10. '_col' → logprob: -23.250553131103516

Token 389: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.20165950059890747
    2. ' import' → logprob: -1.7016594409942627
    3. 'collections' → logprob: -8.826659202575684
    4. '.collections' → logprob: -9.451659202575684
    5. '	import' → logprob: -11.951659202575684
    6. '.import' → logprob: -12.076659202575684
    7. ' collections' → logprob: -13.076659202575684
    8. 'port' → logprob: -13.201659202575684
    9. ' ' → logprob: -13.576659202575684
    10. '_import' → logprob: -14.326659202575684

Token 390: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.2664456789934775e-06
    2. ' deque' → logprob: -13.750000953674316
    3. 'collections' → logprob: -16.250001907348633
    4. 'de' → logprob: -17.250001907348633
    5. 'deb' → logprob: -22.375001907348633
    6. 'double' → logprob: -22.875001907348633
    7. 'd' → logprob: -24.000001907348633
    8. 'Deque' → logprob: -24.375001907348633
    9. 'deck' → logprob: -24.375001907348633
    10. 'dee' → logprob: -25.500001907348633

Token 391: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 392: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13338978588581085
    2. '

' → logprob: -2.633389711380005
    3. '
' → logprob: -3.133389711380005
    4. 'import' → logprob: -4.758389949798584
    5. '\n' → logprob: -8.133389472961426
    6. '\' → logprob: -8.883389472961426
    7. '


' → logprob: -9.133389472961426
    8. '
 
' → logprob: -9.133389472961426
    9. 'from' → logprob: -9.633389472961426
    10. '```' → logprob: -9.758389472961426

Token 393: ' Import' (ID: 19998)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1648501455783844
    2. 'sys' → logprob: -2.9148502349853516
    3. 'typing' → logprob: -3.0398502349853516
    4. ' typing' → logprob: -3.5398502349853516
    5. 'def' → logprob: -4.664850234985352
    6. 'from' → logprob: -5.539850234985352
    7. 'os' → logprob: -6.289850234985352
    8. ' sys' → logprob: -7.039850234985352
    9. 'input' → logprob: -7.164850234985352
    10. 'random' → logprob: -7.164850234985352

Token 394: 'ation' (ID: 387)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.2197463512420654
    2. 're' → logprob: -1.7197463512420654
    3. ' sys' → logprob: -2.2197463512420654
    4. 'sys' → logprob: -2.4697463512420654
    5. 'from' → logprob: -2.4697463512420654
    6. ' os' → logprob: -2.7197463512420654
    7. 'ation' → logprob: -3.4697463512420654
    8. 'os' → logprob: -3.7197463512420654
    9. 'string' → logprob: -4.0947465896606445
    10. 'time' → logprob: -4.2197465896606445

Token 395: ' de' (ID: 334)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.054324451833963394
    2. ' typing' → logprob: -3.6793243885040283
    3. ' random' → logprob: -4.304324626922607
    4. ' re' → logprob: -5.304324626922607
    5. ' threading' → logprob: -5.429324626922607
    6. ' sys' → logprob: -6.929324626922607
    7. 'os' → logprob: -7.054324626922607
    8. ' json' → logprob: -7.179324626922607
    9. 'random' → logprob: -8.05432415008545
    10. ' datetime' → logprob: -8.30432415008545

Token 396: ' item' (ID: 2169)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.9779448509216309
    2. 'random' → logprob: -0.9779448509216309
    3. 'operator' → logprob: -2.477944850921631
    4. 're' → logprob: -2.727944850921631
    5. 'typing' → logprob: -3.102944850921631
    6. 'fun' → logprob: -3.602944850921631
    7. 'thread' → logprob: -4.352944850921631
    8. 'time' → logprob: -5.227944850921631
    9. 'it' → logprob: -6.227944850921631
    10. 'json' → logprob: -6.352944850921631

Token 397: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.00026574634830467403
    2. 'get' → logprob: -8.250266075134277
    3. 'getitem' → logprob: -12.750266075134277
    4. 'sort' → logprob: -14.000266075134277
    5. 's' → logprob: -15.000266075134277
    6. 'attr' → logprob: -15.375266075134277
    7. 'setter' → logprob: -17.62526512145996
    8. 'Getter' → logprob: -18.25026512145996
    9. 'g' → logprob: -18.25026512145996
    10. 'item' → logprob: -18.37526512145996

Token 398: ' depuis' (ID: 16277)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.007653592154383659
    2. ' from' → logprob: -4.882653713226318
    3. ',' → logprob: -10.50765323638916
    4. 'import' → logprob: -11.25765323638916
    5. '<|end|>' → logprob: -12.75765323638916
    6. '	from' → logprob: -13.38265323638916
    7. '
' → logprob: -14.25765323638916
    8. '<|end|>' → logprob: -14.38265323638916
    9. ' ' → logprob: -14.50765323638916
    10. ' as' → logprob: -15.00765323638916

Token 399: ' operator' (ID: 11019)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -1.8550976164988242e-05
    2. ' operator' → logprob: -11.500018119812012
    3. '_operator' → logprob: -11.750018119812012
    4. '.operator' → logprob: -14.625018119812012
    5. '	operator' → logprob: -16.625019073486328
    6. '/operator' → logprob: -17.500019073486328
    7. '(operator' → logprob: -18.625019073486328
    8. 'Operator' → logprob: -20.500019073486328
    9. '_' → logprob: -21.250019073486328
    10. ' оператор' → logprob: -21.250019073486328

Token 400: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4714852571487427
    2. ' import' → logprob: -1.2214852571487427
    3. 'from' → logprob: -2.721485137939453
    4. ' from' → logprob: -4.346485137939453
    5. ',' → logprob: -6.346485137939453
    6. ' ' → logprob: -8.346485137939453
    7. ' as' → logprob: -8.346485137939453
    8. ' ' → logprob: -9.221485137939453
    9. ' ,' → logprob: -10.596485137939453
    10. '	import' → logprob: -10.971485137939453

Token 401: ' utilisé' (ID: 53138)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5107311010360718
    2. ' item' → logprob: -1.3857311010360718
    3. ' import' → logprob: -2.6357312202453613
    4. 'from' → logprob: -3.3857312202453613
    5. 'item' → logprob: -3.5107312202453613
    6. ' from' → logprob: -4.510731220245361
    7. ' operator' → logprob: -6.760731220245361
    8. '<|end|>' → logprob: -7.385731220245361
    9. '*' → logprob: -7.635731220245361
    10. ' ' → logprob: -7.885731220245361

Token 402: ' pour' (ID: 1930)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0437866747379303
    2. ' import' → logprob: -3.4187867641448975
    3. 'from' → logprob: -4.668786525726318
    4. ',' → logprob: -8.293787002563477
    5. ' as' → logprob: -9.043787002563477
    6. ' from' → logprob: -9.168787002563477
    7. 'operator' → logprob: -9.418787002563477
    8. ' for' → logprob: -10.293787002563477
    9. ' operator' → logprob: -10.668787002563477
    10. 'for' → logprob: -10.793787002563477

Token 403: ' obtenir' (ID: 54423)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.011104652658104897
    2. ' operator' → logprob: -4.511104583740234
    3. '_operator' → logprob: -10.636104583740234
    4. 'item' → logprob: -10.761104583740234
    5. '	operator' → logprob: -11.886104583740234
    6. '.operator' → logprob: -13.636104583740234
    7. 'attr' → logprob: -13.886104583740234
    8. '(operator' → logprob: -13.886104583740234
    9. 'import' → logprob: -14.136104583740234
    10. 'module' → logprob: -15.261104583740234

Token 404: ' des' (ID: 731)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.7206989526748657
    2. ' operator' → logprob: -0.9706989526748657
    3. 'item' → logprob: -2.095698833465576
    4. ' item' → logprob: -4.845698833465576
    5. 'getitem' → logprob: -6.720698833465576
    6. 'import' → logprob: -6.970698833465576
    7. '<|end|>' → logprob: -7.345698833465576
    8. 'attr' → logprob: -7.595698833465576
    9. '	operator' → logprob: -8.345699310302734
    10. '(operator' → logprob: -9.095699310302734

Token 405: ' éléments' (ID: 57375)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.020946243777871132
    2. 'operator' → logprob: -4.270946025848389
    3. ' item' → logprob: -5.520946025848389
    4. 'getitem' → logprob: -6.395946025848389
    5. ' operator' → logprob: -7.145946025848389
    6. 'attr' → logprob: -8.895946502685547
    7. '_item' → logprob: -9.645946502685547
    8. 'items' → logprob: -9.645946502685547
    9. 'import' → logprob: -11.645946502685547
    10. '=item' → logprob: -12.020946502685547

Token 406: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7098960876464844
    2. 'import' → logprob: -1.0848960876464844
    3. 'from' → logprob: -1.8348960876464844
    4. '<|end|>' → logprob: -4.959896087646484
    5. 'getitem' → logprob: -6.709896087646484
    6. ',item' → logprob: -7.084896087646484
    7. 'item' → logprob: -7.709896087646484
    8. ' from' → logprob: -8.459896087646484
    9. ' as' → logprob: -8.459896087646484
    10. '<|end|>' → logprob: -9.209896087646484

Token 407: ' des' (ID: 731)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.831669807434082
    2. 'operator' → logprob: -1.206669807434082
    3. 'index' → logprob: -1.831669807434082
    4. '0' → logprob: -2.706669807434082
    5. '1' → logprob: -4.206669807434082
    6. 'getitem' → logprob: -4.706669807434082
    7. 'import' → logprob: -5.081669807434082
    8. ' operator' → logprob: -5.331669807434082
    9. 'attr' → logprob: -7.456669807434082
    10. '
' → logprob: -8.206669807434082

Token 408: ' positions' (ID: 15897)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.22495083510875702
    2. 'operator' → logprob: -1.8499507904052734
    3. 'indices' → logprob: -4.099950790405273
    4. 'positions' → logprob: -4.599950790405273
    5. '[index' → logprob: -5.099950790405273
    6. 'position' → logprob: -5.974950790405273
    7. 'indexes' → logprob: -6.224950790405273
    8. 'indice' → logprob: -6.724950790405273
    9. 'import' → logprob: -7.224950790405273
    10. 'certain' → logprob: -7.599950790405273

Token 409: ' spécifiques' (ID: 110075)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.36928635835647583
    2. ',' → logprob: -1.619286298751831
    3. 'operator' → logprob: -3.494286298751831
    4. 'import' → logprob: -3.494286298751831
    5. 'item' → logprob: -4.24428653717041
    6. 'getitem' → logprob: -4.61928653717041
    7. ' from' → logprob: -4.86928653717041
    8. ' operator' → logprob: -5.36928653717041
    9. '1' → logprob: -5.74428653717041
    10. 'getter' → logprob: -6.36928653717041

Token 410: ' dans' (ID: 2671)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0012644019443541765
    2. ' from' → logprob: -7.126264572143555
    3. 'import' → logprob: -7.751264572143555
    4. ',' → logprob: -10.501264572143555
    5. ' import' → logprob: -14.126264572143555
    6. '	from' → logprob: -14.876264572143555
    7. '
' → logprob: -15.001264572143555
    8. ' ' → logprob: -15.376264572143555
    9. 'as' → logprob: -16.126264572143555
    10. '```' → logprob: -16.251264572143555

Token 411: ' des' (ID: 731)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.015932776033878326
    2. 'collections' → logprob: -4.640932559967041
    3. ' operator' → logprob: -5.140932559967041
    4. 'item' → logprob: -9.7659330368042
    5. '(operator' → logprob: -10.5159330368042
    6. 'obj' → logprob: -10.6409330368042
    7. '.operator' → logprob: -10.6409330368042
    8. 'iter' → logprob: -11.1409330368042
    9. 'items' → logprob: -11.1409330368042
    10. 'lists' → logprob: -11.3909330368042

Token 412: ' objets' (ID: 83726)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.46011948585510254
    2. 'se' → logprob: -2.2101194858551025
    3. 'lists' → logprob: -2.9601194858551025
    4. 'iter' → logprob: -2.9601194858551025
    5. 'obj' → logprob: -3.0851194858551025
    6. 'it' → logprob: -3.3351194858551025
    7. 'sé' → logprob: -3.7101194858551025
    8. 'tu' → logprob: -3.9601194858551025
    9. 'list' → logprob: -4.710119247436523
    10. 'containers' → logprob: -4.960119247436523

Token 413: '.
' (ID: 558)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.02158227562904358
    2. 'import' → logprob: -3.8965823650360107
    3. ' from' → logprob: -7.396582126617432
    4. ',' → logprob: -8.14658260345459
    5. ' import' → logprob: -9.52158260345459
    6. '<|end|>' → logprob: -9.89658260345459
    7. '.' → logprob: -13.27158260345459
    8. ' ' → logprob: -13.27158260345459
    9. 'as' → logprob: -13.39658260345459
    10. '	from' → logprob: -13.52158260345459

Token 414: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.9361264946837764e-07
    2. ' from' → logprob: -15.75
    3. 'import' → logprob: -18.625
    4. '```' → logprob: -22.125
    5. ',' → logprob: -23.375
    6. '	from' → logprob: -24.125
    7. 'for' → logprob: -24.25
    8. '
' → logprob: -25.875
    9. '.from' → logprob: -26.125
    10. 'f' → logprob: -26.125

Token 415: ' operator' (ID: 11019)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -9.088346359931165e-07
    2. ' operator' → logprob: -14.500000953674316
    3. '_operator' → logprob: -15.250000953674316
    4. '.operator' → logprob: -16.625
    5. '	operator' → logprob: -18.125
    6. '(operator' → logprob: -18.5
    7. '/operator' → logprob: -20.375
    8. 'import' → logprob: -20.625
    9. '_' → logprob: -22.5
    10. ' оператор' → logprob: -23.75

Token 416: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.4740854501724243
    2. 'import' → logprob: -0.9740854501724243
    3. '	import' → logprob: -12.099085807800293
    4. ' ' → logprob: -13.099085807800293
    5. '_import' → logprob: -14.849085807800293
    6. ' ' → logprob: -15.224085807800293
    7. 'Import' → logprob: -17.474084854125977
    8. ' importe' → logprob: -17.474084854125977
    9. ''import' → logprob: -17.599084854125977
    10. ' importar' → logprob: -17.724084854125977

Token 417: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -1.3544423381972592e-05
    2. ' item' → logprob: -11.25001335144043
    3. 'getitem' → logprob: -15.00001335144043
    4. '	item' → logprob: -16.50001335144043
    5. '.item' → logprob: -16.87501335144043
    6. 'attr' → logprob: -17.50001335144043
    7. '=item' → logprob: -18.00001335144043
    8. '$item' → logprob: -19.12501335144043
    9. '/item' → logprob: -19.12501335144043
    10. '_item' → logprob: -19.87501335144043

Token 418: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -9.088346359931165e-07
    2. 'get' → logprob: -14.000000953674316
    3. 'getitem' → logprob: -17.125
    4. 'setter' → logprob: -20.75
    5. 'g' → logprob: -20.875
    6. 'Getter' → logprob: -21.625
    7. 'gett' → logprob: -21.875
    8. 'caller' → logprob: -22.0
    9. 'gte' → logprob: -23.25
    10. 's' → logprob: -23.625

Token 419: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 420: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8002444505691528
    2. 'def' → logprob: -0.9252444505691528
    3. '
' → logprob: -2.1752443313598633
    4. '<|end|>' → logprob: -4.050244331359863
    5. '

' → logprob: -4.300244331359863
    6. '\n' → logprob: -5.550244331359863
    7. '#' → logprob: -6.925244331359863
    8. '```' → logprob: -7.050244331359863
    9. ' 
' → logprob: -7.300244331359863
    10. 'from' → logprob: -7.675244331359863

Token 421: ' Import' (ID: 19998)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.23166204988956451
    2. 'typing' → logprob: -2.3566620349884033
    3. 'sys' → logprob: -2.7316620349884033
    4. 'from' → logprob: -3.6066620349884033
    5. ' typing' → logprob: -4.731662273406982
    6. 'random' → logprob: -5.981662273406982
    7. 'fun' → logprob: -6.106662273406982
    8. 'def' → logprob: -6.231662273406982
    9. 'dat' → logprob: -6.856662273406982
    10. 'os' → logprob: -7.106662273406982

Token 422: 'ation' (ID: 387)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5508624315261841
    2. ' os' → logprob: -1.300862431526184
    3. 'from' → logprob: -2.8008623123168945
    4. ' functools' → logprob: -3.5508623123168945
    5. ' math' → logprob: -4.0508623123168945
    6. ' re' → logprob: -4.8008623123168945
    7. 'sys' → logprob: -4.9258623123168945
    8. ' random' → logprob: -5.8008623123168945
    9. ' itertools' → logprob: -5.8008623123168945
    10. ' multiprocessing' → logprob: -6.0508623123168945

Token 423: ' de' (ID: 334)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.14049622416496277
    2. 'from' → logprob: -2.640496253967285
    3. 'os' → logprob: -3.765496253967285
    4. ' math' → logprob: -4.890496253967285
    5. 'import' → logprob: -5.015496253967285
    6. ' random' → logprob: -5.390496253967285
    7. ' from' → logprob: -5.890496253967285
    8. ' threading' → logprob: -6.140496253967285
    9. ' sys' → logprob: -6.140496253967285
    10. ' itertools' → logprob: -6.265496253967285

Token 424: ' permutations' (ID: 174595)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.35760971903800964
    2. 'os' → logprob: -1.607609748840332
    3. 'fun' → logprob: -2.857609748840332
    4. 'random' → logprob: -3.732609748840332
    5. 're' → logprob: -4.857609748840332
    6. 'copy' → logprob: -5.482609748840332
    7. 'typing' → logprob: -5.607609748840332
    8. 'time' → logprob: -6.732609748840332
    9. 'json' → logprob: -7.607609748840332
    10. 'thread' → logprob: -7.982609748840332

Token 425: ' depuis' (ID: 16277)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0018183360807597637
    2. ' from' → logprob: -6.6268181800842285
    3. ',' → logprob: -7.6268181800842285
    4. 'import' → logprob: -12.876818656921387
    5. '
' → logprob: -13.876818656921387
    6. '<|end|>' → logprob: -14.626818656921387
    7. ' ,' → logprob: -15.001818656921387
    8. '	from' → logprob: -15.001818656921387
    9. '<|end|>' → logprob: -16.25181770324707
    10. 'de' → logprob: -16.50181770324707

Token 426: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -8.180258191714529e-06
    2. ' itertools' → logprob: -11.750008583068848
    3. 'math' → logprob: -15.625008583068848
    4. '_it' → logprob: -17.62500762939453
    5. 'import' → logprob: -18.62500762939453
    6. 'iter' → logprob: -18.87500762939453
    7. 'from' → logprob: -19.62500762939453
    8. 'collections' → logprob: -19.75000762939453
    9. 'sys' → logprob: -21.75000762939453
    10. 'heap' → logprob: -22.37500762939453

Token 427: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.00038086410495452583
    2. ' from' → logprob: -8.500380516052246
    3. ',' → logprob: -9.000380516052246
    4. 'import' → logprob: -9.875380516052246
    5. '
' → logprob: -13.625380516052246
    6. 'as' → logprob: -14.625380516052246
    7. '```' → logprob: -14.625380516052246
    8. ' as' → logprob: -15.125380516052246
    9. ' ,' → logprob: -17.125381469726562
    10. ',
' → logprob: -17.375381469726562

Token 428: ' pour' (ID: 1930)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.266010046005249
    2. 'per' → logprob: -1.516010046005249
    3. ' permutations' → logprob: -4.391010284423828
    4. ' from' → logprob: -6.891010284423828
    5. 'import' → logprob: -8.016010284423828
    6. ' itertools' → logprob: -9.016010284423828
    7. 'perm' → logprob: -9.766010284423828
    8. 'it' → logprob: -9.891010284423828
    9. '#' → logprob: -11.766010284423828
    10. '(per' → logprob: -13.141010284423828

Token 429: ' génér' (ID: 18939)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.0019353042589500546
    2. 'it' → logprob: -6.3769354820251465
    3. 'import' → logprob: -8.751935005187988
    4. ' permutations' → logprob: -10.376935005187988
    5. 'from' → logprob: -10.876935005187988
    6. 'per' → logprob: -11.376935005187988
    7. 'math' → logprob: -12.501935005187988
    8. 'iter' → logprob: -13.126935005187988
    9. 'to' → logprob: -13.376935005187988
    10. 'ertools' → logprob: -13.751935005187988

Token 430: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6646535396575928
    2. 'per' → logprob: -1.2896535396575928
    3. 'ate' → logprob: -1.7896535396575928
    4. 'from' → logprob: -4.039653778076172
    5. 'ateur' → logprob: -4.914653778076172
    6. 'ator' → logprob: -5.039653778076172
    7. 'at' → logprob: -5.414653778076172
    8. 'import' → logprob: -5.664653778076172
    9. 'ating' → logprob: -6.414653778076172
    10. 'ateurs' → logprob: -7.664653778076172

Token 431: ' toutes' (ID: 17502)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.06548042595386505
    2. ' permutations' → logprob: -3.4404804706573486
    3. 'it' → logprob: -3.6904804706573486
    4. 'per' → logprob: -5.0654802322387695
    5. 'import' → logprob: -10.19048023223877
    6. 'iter' → logprob: -11.94048023223877
    7. 'from' → logprob: -12.44048023223877
    8. 'com' → logprob: -13.06548023223877
    9. 'the' → logprob: -13.06548023223877
    10. 'et' → logprob: -13.19048023223877

Token 432: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7449541091918945
    2. ' les' → logprob: -1.4949541091918945
    3. 'per' → logprob: -1.6199541091918945
    4. ' permutations' → logprob: -2.3699541091918945
    5. '_per' → logprob: -5.4949541091918945
    6. '<|end|>' → logprob: -6.4949541091918945
    7. ' itertools' → logprob: -6.8699541091918945
    8. 'import' → logprob: -7.2449541091918945
    9. 'the' → logprob: -7.7449541091918945
    10. 'com' → logprob: -7.8699541091918945

Token 433: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.11314567178487778
    2. ' permutations' → logprob: -2.238145589828491
    3. 'perm' → logprob: -8.98814582824707
    4. 'com' → logprob: -9.23814582824707
    5. 'possible' → logprob: -10.36314582824707
    6. 'it' → logprob: -10.98814582824707
    7. '_per' → logprob: -11.48814582824707
    8. ' itertools' → logprob: -11.73814582824707
    9. 'import' → logprob: -11.86314582824707
    10. '	per' → logprob: -11.98814582824707

Token 434: ' possibles' (ID: 97753)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0032827635295689106
    2. ' from' → logprob: -6.00328254699707
    3. ',' → logprob: -8.12828254699707
    4. '<|end|>' → logprob: -8.50328254699707
    5. 'import' → logprob: -8.62828254699707
    6. '<|end|>' → logprob: -10.00328254699707
    7. 'as' → logprob: -10.25328254699707
    8. ' as' → logprob: -10.62828254699707
    9. ' ' → logprob: -12.75328254699707
    10. 'des' → logprob: -13.00328254699707

Token 435: ' d' (ID: 272)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0023846877738833427
    2. ' from' → logprob: -6.752384662628174
    3. ',' → logprob: -7.377384662628174
    4. 'import' → logprob: -7.502384662628174
    5. '```' → logprob: -11.877385139465332
    6. '<|end|>' → logprob: -12.002385139465332
    7. '.' → logprob: -12.627385139465332
    8. 'as' → logprob: -12.752385139465332
    9. '<|end|>' → logprob: -12.752385139465332
    10. ' as' → logprob: -12.877385139465332

Token 436: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.7254209518432617
    2. 'es' → logprob: -1.3504209518432617
    3. 'une' → logprob: -1.8504209518432617
    4. ''un' → logprob: -2.9754209518432617
    5. 'e' → logprob: -3.7254209518432617
    6. 'a' → logprob: -4.975420951843262
    7. '```' → logprob: -5.600420951843262
    8. '’une' → logprob: -5.725420951843262
    9. 'unes' → logprob: -5.975420951843262
    10. '`' → logprob: -6.100420951843262

Token 437: ' sé' (ID: 7462)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.4629071056842804
    2. 'sequence' → logprob: -1.337907075881958
    3. ' sequence' → logprob: -3.337907075881958
    4. ' liste' → logprob: -3.962907075881958
    5. 'sé' → logprob: -3.962907075881958
    6. 'list' → logprob: -4.212907314300537
    7. ' iterable' → logprob: -4.712907314300537
    8. 'iter' → logprob: -5.212907314300537
    9. ' sé' → logprob: -5.712907314300537
    10. 's' → logprob: -6.837907314300537

Token 438: 'quence' (ID: 6975)
  Prédit: 'quences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -3.3451433409936726e-05
    2. 'qu' → logprob: -10.875033378601074
    3. 'quence' → logprob: -11.500033378601074
    4. 'ries' → logprob: -12.625033378601074
    5. 'r' → logprob: -14.375033378601074
    6. 'q' → logprob: -15.750033378601074
    7. 'lections' → logprob: -16.00003433227539
    8. 'que' → logprob: -16.12503433227539
    9. 'quec' → logprob: -16.87503433227539
    10. '#' → logprob: -17.12503433227539

Token 439: '.
' (ID: 558)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0003175889723934233
    2. ' from' → logprob: -8.125317573547363
    3. ',' → logprob: -11.250317573547363
    4. 'as' → logprob: -12.750317573547363
    5. ' as' → logprob: -13.250317573547363
    6. 'import' → logprob: -13.250317573547363
    7. '```' → logprob: -14.250317573547363
    8. '.' → logprob: -14.875317573547363
    9. '<|end|>' → logprob: -15.125317573547363
    10. '<|end|>' → logprob: -15.750317573547363

Token 440: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: 0.0
    2. '```' → logprob: -18.75
    3. ' from' → logprob: -19.25
    4. 'import' → logprob: -21.25
    5. 'for' → logprob: -22.5
    6. '	from' → logprob: -24.375
    7. '
' → logprob: -24.5
    8. '`' → logprob: -24.875
    9. '#from' → logprob: -26.0
    10. '﻿' → logprob: -26.25

Token 441: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.014165391214191914
    2. ' itertools' → logprob: -4.26416540145874
    3. 'iter' → logprob: -13.514164924621582
    4. 'import' → logprob: -15.014164924621582
    5. 'math' → logprob: -16.0141658782959
    6. 'its' → logprob: -18.6391658782959
    7. '_it' → logprob: -19.0141658782959
    8. ' it' → logprob: -19.0141658782959
    9. 'int' → logprob: -19.1391658782959
    10. 'collections' → logprob: -19.1391658782959

Token 442: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.023263299837708473
    2. 'import' → logprob: -3.7732632160186768
    3. '	import' → logprob: -11.148262977600098
    4. '.import' → logprob: -13.023262977600098
    5. '_import' → logprob: -14.398262977600098
    6. ' ' → logprob: -14.898262977600098
    7. ' ' → logprob: -16.773263931274414
    8. '.' → logprob: -17.273263931274414
    9. '_IMPORT' → logprob: -17.273263931274414
    10. 'from' → logprob: -17.773263931274414

Token 443: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -6.704273118884885e-07
    2. ' permutations' → logprob: -14.500000953674316
    3. 'perm' → logprob: -16.5
    4. '.per' → logprob: -19.625
    5. '	per' → logprob: -20.375
    6. '(per' → logprob: -21.375
    7. '_per' → logprob: -21.875
    8. 'product' → logprob: -22.125
    9. '-per' → logprob: -22.875
    10. 'PER' → logprob: -24.125

Token 444: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 445: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2933087646961212
    2. 'import' → logprob: -2.043308734893799
    3. '\n' → logprob: -2.293308734893799
    4. '<|end|>' → logprob: -4.668308734893799
    5. '
' → logprob: -5.293308734893799
    6. '\' → logprob: -5.918308734893799
    7. '#' → logprob: -6.293308734893799
    8. '```' → logprob: -7.168308734893799
    9. ' 
' → logprob: -7.293308734893799
    10. 'a' → logprob: -7.543308734893799

Token 446: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05611209198832512
    2. 'import' → logprob: -2.931112051010132
    3. 'from' → logprob: -6.931112289428711
    4. 'input' → logprob: -8.806112289428711
    5. 'sys' → logprob: -10.431112289428711
    6. '#' → logprob: -10.806112289428711
    7. ' def' → logprob: -10.931112289428711
    8. 'if' → logprob: -11.681112289428711
    9. ' import' → logprob: -12.056112289428711
    10. 'default' → logprob: -12.431112289428711

Token 447: 'fin' (ID: 6994)
  Prédit: 'fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.47412019968032837
    2. 'f' → logprob: -0.9741201996803284
    3. 'fine' → logprob: -11.099120140075684
    4. '#' → logprob: -11.849120140075684
    5. 'claration' → logprob: -11.974120140075684
    6. 'fi' → logprob: -12.099120140075684
    7. 'fn' → logprob: -12.849120140075684
    8. 'veloppement' → logprob: -13.474120140075684
    9. 'finite' → logprob: -13.974120140075684
    10. ' finition' → logprob: -14.224120140075684

Token 448: 'ition' (ID: 868)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5843771696090698
    2. 'ir' → logprob: -0.9593771696090698
    3. 'ition' → logprob: -3.7093772888183594
    4. '#' → logprob: -4.584377288818359
    5. 'ine' → logprob: -5.459377288818359
    6. 'inition' → logprob: -5.709377288818359
    7. 'class' → logprob: -5.959377288818359
    8. 'ing' → logprob: -5.959377288818359
    9. '```' → logprob: -5.959377288818359
    10. 'f' → logprob: -6.084377288818359

Token 449: ' d' (ID: 272)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.22100335359573364
    2. 'def' → logprob: -2.346003293991089
    3. ' ' → logprob: -2.971003293991089
    4. ' de' → logprob: -3.096003293991089
    5. ' ' → logprob: -6.846003532409668
    6. '<|end|>' → logprob: -6.846003532409668
    7. ' space' → logprob: -7.346003532409668
    8. ' class' → logprob: -7.471003532409668
    9. ' d' → logprob: -7.721003532409668
    10. ' des' → logprob: -7.721003532409668

Token 450: ''une' (ID: 13337)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.03447803482413292
    2. 'e' → logprob: -3.534477949142456
    3. 'éf' → logprob: -6.284478187561035
    4. 'f' → logprob: -6.534478187561035
    5. 'def' → logprob: -7.159478187561035
    6. ' e' → logprob: -8.909478187561035
    7. ' def' → logprob: -9.284478187561035
    8. 'efined' → logprob: -9.909478187561035
    9. 'efi' → logprob: -9.909478187561035
    10. ' la' → logprob: -10.034478187561035

Token 451: ' constante' (ID: 49652)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.23641957342624664
    2. 'def' → logprob: -1.8614195585250854
    3. 'function' → logprob: -4.111419677734375
    4. ' function' → logprob: -4.361419677734375
    5. ' class' → logprob: -4.486419677734375
    6. 'fonction' → logprob: -5.111419677734375
    7. 'classe' → logprob: -5.361419677734375
    8. ' fonction' → logprob: -7.236419677734375
    9. 'f' → logprob: -7.486419677734375
    10. 'main' → logprob: -7.486419677734375

Token 452: ' mod' (ID: 1812)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.1515641212463379
    2. 'INF' → logprob: -2.651564121246338
    3. 'MAX' → logprob: -2.901564121246338
    4. 'N' → logprob: -4.651564121246338
    5. ' MOD' → logprob: -5.901564121246338
    6. '
' → logprob: -7.651564121246338
    7. ' INF' → logprob: -7.776564121246338
    8. 'EPS' → logprob: -8.02656364440918
    9. 'M' → logprob: -8.65156364440918
    10. 'DEBUG' → logprob: -9.02656364440918

Token 453: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010136744938790798
    2. '=' → logprob: -4.760136604309082
    3. 'ULO' → logprob: -6.760136604309082
    4. 'ULE' → logprob: -9.260136604309082
    5. 'MOD' → logprob: -9.510136604309082
    6. 'E' → logprob: -9.510136604309082
    7. 'UL' → logprob: -9.760136604309082
    8. '_MOD' → logprob: -10.385136604309082
    9. ' =
' → logprob: -12.260136604309082
    10. '```' → logprob: -12.385136604309082

Token 454: ' la' (ID: 557)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06579088419675827
    2. ' ' → logprob: -2.815790891647339
    3. '100' → logprob: -6.56579065322876
    4. 'MOD' → logprob: -6.69079065322876
    5. ' MOD' → logprob: -7.81579065322876
    6. '=' → logprob: -8.190791130065918
    7. '```' → logprob: -8.815791130065918
    8. 'mod' → logprob: -9.190791130065918
    9. ' =' → logprob: -9.315791130065918
    10. '1' → logprob: -9.440791130065918

Token 455: ' valeur' (ID: 41664)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.19776740670204163
    2. '=' → logprob: -1.9477673768997192
    3. '100' → logprob: -4.07276725769043
    4. ' =' → logprob: -4.32276725769043
    5. 'MOD' → logprob: -6.07276725769043
    6. 'mod' → logprob: -6.19776725769043
    7. ' ' → logprob: -6.94776725769043
    8. '998' → logprob: -7.82276725769043
    9. 'value' → logprob: -8.57276725769043
    10. '1' → logprob: -8.94776725769043

Token 456: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.17939159274101257
    2. ' ' → logprob: -1.929391622543335
    3. ' =' → logprob: -4.679391384124756
    4. '100' → logprob: -5.554391384124756
    5. '=' → logprob: -5.929391384124756
    6. 'MOD' → logprob: -7.179391384124756
    7. '998' → logprob: -7.179391384124756
    8. ' MOD' → logprob: -7.429391384124756
    9. 'mod' → logprob: -7.929391384124756
    10. ' mod' → logprob: -8.554391860961914

Token 457: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.044898394495248795
    2. '100' → logprob: -3.294898509979248
    3. '998' → logprob: -5.169898509979248
    4. '(' → logprob: -6.919898509979248
    5. '1' → logprob: -9.54489803314209
    6. '```' → logprob: -9.79489803314209
    7. ' ' → logprob: -11.16989803314209
    8. 'MOD' → logprob: -12.41989803314209
    9. '=' → logprob: -12.54489803314209
    10. 'int' → logprob: -12.79489803314209

Token 458: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.007196131628006697
    2. '9' → logprob: -5.257195949554443
    3. '000' → logprob: -6.632195949554443
    4. ' **' → logprob: -8.132196426391602
    5. '00' → logprob: -8.632196426391602
    6. '0' → logprob: -9.757196426391602
    7. '09' → logprob: -9.882196426391602
    8. 'mod' → logprob: -10.882196426391602
    9. '^' → logprob: -11.132196426391602
    10. ' ' → logprob: -11.507196426391602

Token 459: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.375
    3. '09' → logprob: -17.125
    4. ' ' → logprob: -18.25
    5. '``' → logprob: -19.25
    6. '=' → logprob: -19.875
    7. '**' → logprob: -20.0
    8. '^' → logprob: -20.125
    9. ' ' → logprob: -22.125
    10. '+' → logprob: -22.25

Token 460: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013261953135952353
    2. ' +' → logprob: -6.626326084136963
    3. '+
' → logprob: -15.376326560974121
    4. '7' → logprob: -17.751325607299805
    5. '＋' → logprob: -17.876325607299805
    6. ' plus' → logprob: -18.126325607299805
    7. ' ' → logprob: -18.501325607299805
    8. '9' → logprob: -18.501325607299805
    9. '```' → logprob: -18.626325607299805
    10. ' ' → logprob: -18.626325607299805

Token 461: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.375004768371582
    3. '+' → logprob: -13.875004768371582
    4. '```' → logprob: -17.0000057220459
    5. ' +' → logprob: -18.3750057220459
    6. '07' → logprob: -19.0000057220459
    7. '9' → logprob: -19.1250057220459
    8. '   ' → logprob: -19.8750057220459
    9. '  ' → logprob: -20.8750057220459
    10. ' ' → logprob: -21.1875057220459

Token 462: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -9.088346359931165e-07
    2. '+' → logprob: -14.125000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '```' → logprob: -17.625
    5. '   ' → logprob: -19.25
    6. '
' → logprob: -19.375
    7. ' +' → logprob: -19.375
    8. '07' → logprob: -19.5
    9. '9' → logprob: -19.75
    10. ' ' → logprob: -20.25

Token 463: ',
' (ID: 412)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.03292999416589737
    2. '_mod' → logprob: -3.7829298973083496
    3. '
' → logprob: -5.03292989730835
    4. ' =' → logprob: -6.28292989730835
    5. ' mod' → logprob: -7.03292989730835
    6. '=' → logprob: -8.532930374145508
    7. '_MOD' → logprob: -9.907930374145508
    8. ' 
' → logprob: -10.407930374145508
    9. 'MOD' → logprob: -10.532930374145508
    10. '

' → logprob: -11.032930374145508

Token 464: '#' (ID: 2)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0052286600694060326
    2. ' mod' → logprob: -5.505228519439697
    3. '_mod' → logprob: -7.755228519439697
    4. '=' → logprob: -8.005228996276855
    5. 'MOD' → logprob: -8.380228996276855
    6. ' =' → logprob: -9.005228996276855
    7. '_MOD' → logprob: -11.380228996276855
    8. ' MOD' → logprob: -12.130228996276855
    9. 'Mod' → logprob: -12.505228996276855
    10. ' ' → logprob: -13.130228996276855

Token 465: ' une' (ID: 2463)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.10224536061286926
    2. ' mod' → logprob: -2.602245330810547
    3. 'MOD' → logprob: -3.852245330810547
    4. ' MOD' → logprob: -6.852245330810547
    5. ' modulo' → logprob: -7.727245330810547
    6. '_mod' → logprob: -9.477245330810547
    7. '#' → logprob: -9.727245330810547
    8. 'Mod' → logprob: -9.852245330810547
    9. ' modulus' → logprob: -9.852245330810547
    10. '_MOD' → logprob: -9.852245330810547

Token 466: ' grande' (ID: 10094)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.12493038177490234
    2. ' mod' → logprob: -2.3749303817749023
    3. 'MOD' → logprob: -4.749930381774902
    4. '_mod' → logprob: -5.249930381774902
    5. ' modulus' → logprob: -5.374930381774902
    6. ' MOD' → logprob: -5.874930381774902
    7. 'modifiable' → logprob: -7.249930381774902
    8. ' =' → logprob: -7.249930381774902
    9. ' constant' → logprob: -7.749930381774902
    10. ' modulo' → logprob: -7.874930381774902

Token 467: ' valeur' (ID: 41664)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.5145301818847656
    2. 'mod' → logprob: -1.0145301818847656
    3. '_mod' → logprob: -3.7645301818847656
    4. ' modulus' → logprob: -5.139530181884766
    5. ' modulo' → logprob: -5.389530181884766
    6. 'MOD' → logprob: -6.139530181884766
    7. ' MOD' → logprob: -6.639530181884766
    8. '
' → logprob: -7.014530181884766
    9. '_MOD' → logprob: -7.514530181884766
    10. '```' → logprob: -7.889530181884766

Token 468: ' première' (ID: 23423)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.7990350127220154
    2. ' mod' → logprob: -0.9240350127220154
    3. ' =' → logprob: -2.17403507232666
    4. '_mod' → logprob: -3.42403507232666
    5. '=' → logprob: -5.42403507232666
    6. 'MOD' → logprob: -7.29903507232666
    7. ' modulo' → logprob: -7.54903507232666
    8. '_MOD' → logprob: -8.04903507232666
    9. ' ' → logprob: -8.17403507232666
    10. ' MOD' → logprob: -8.79903507232666

Token 469: ' fré' (ID: 52465)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.25439730286598206
    2. ' mod' → logprob: -2.254397392272949
    3. '_mod' → logprob: -2.754397392272949
    4. ' =' → logprob: -3.129397392272949
    5. '=' → logprob: -5.379397392272949
    6. '
' → logprob: -5.754397392272949
    7. ' ' → logprob: -6.629397392272949
    8. ',' → logprob: -7.379397392272949
    9. ' modulo' → logprob: -7.504397392272949
    10. 'Mod' → logprob: -8.12939739227295

Token 470: 'quem' (ID: 43507)
  Prédit: 'quence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.5663299560546875
    2. 'quent' → logprob: -1.1913299560546875
    3. 'qu' → logprob: -2.3163299560546875
    4. 'quency' → logprob: -4.5663299560546875
    5. 'q' → logprob: -5.1913299560546875
    6. '#' → logprob: -5.1913299560546875
    7. 'quently' → logprob: -6.3163299560546875
    8. 'z' → logprob: -6.6913299560546875
    9. '```' → logprob: -7.1913299560546875
    10. 'd' → logprob: -7.6913299560546875

Token 471: 'ment' (ID: 508)
  Prédit: 'ente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.3316684663295746
    2. 'ment' → logprob: -1.331668496131897
    3. 'ent' → logprob: -4.706668376922607
    4. 'emment' → logprob: -5.831668376922607
    5. 'ence' → logprob: -6.331668376922607
    6. 'nt' → logprob: -6.581668376922607
    7. 't' → logprob: -7.456668376922607
    8. '#' → logprob: -7.706668376922607
    9. 'ently' → logprob: -7.956668376922607
    10. '```' → logprob: -8.081668853759766

Token 472: ' utilisée' (ID: 106548)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3633776307106018
    2. '+' → logprob: -1.613377571105957
    3. ' used' → logprob: -3.613377571105957
    4. ' mod' → logprob: -3.863377571105957
    5. ' utilisée' → logprob: -4.238377571105957
    6. 'used' → logprob: -4.363377571105957
    7. '=' → logprob: -4.613377571105957
    8. ' +' → logprob: -4.988377571105957
    9. '_mod' → logprob: -5.113377571105957
    10. ' =' → logprob: -6.238377571105957

Token 473: ' pour' (ID: 1930)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3553663194179535
    2. '=' → logprob: -1.6053663492202759
    3. ' =' → logprob: -2.8553662300109863
    4. ' mod' → logprob: -3.7303662300109863
    5. '_mod' → logprob: -4.855366230010986
    6. '(mod' → logprob: -5.855366230010986
    7. 'MOD' → logprob: -6.105366230010986
    8. '(' → logprob: -7.480366230010986
    9. '_MOD' → logprob: -7.480366230010986
    10. '```' → logprob: -7.605366230010986

Token 474: ' prendre' (ID: 24257)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.27767619490623474
    2. ' mod' → logprob: -1.7776762247085571
    3. 'MOD' → logprob: -2.9026761054992676
    4. ' MOD' → logprob: -4.402676105499268
    5. ' modulo' → logprob: -5.902676105499268
    6. '100' → logprob: -7.152676105499268
    7. '```' → logprob: -7.152676105499268
    8. '10' → logprob: -7.777676105499268
    9. '_mod' → logprob: -8.027676582336426
    10. '998' → logprob: -8.402676582336426

Token 475: ' le' (ID: 505)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5371127128601074
    2. ' mod' → logprob: -1.1621127128601074
    3. ' modulo' → logprob: -2.5371127128601074
    4. '_' → logprob: -4.537112712860107
    5. '_mod' → logprob: -5.787112712860107
    6. ' MOD' → logprob: -5.912112712860107
    7. 'MOD' → logprob: -6.037112712860107
    8. ' ' → logprob: -6.037112712860107
    9. ' modulus' → logprob: -7.037112712860107
    10. ' le' → logprob: -8.287113189697266

Token 476: ' reste' (ID: 26769)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.07779800146818161
    2. ' mod' → logprob: -2.9527978897094727
    3. ' modulo' → logprob: -4.077797889709473
    4. ' modulus' → logprob: -5.202797889709473
    5. '_mod' → logprob: -9.077797889709473
    6. '%' → logprob: -9.827797889709473
    7. ' modular' → logprob: -11.452797889709473
    8. 'MOD' → logprob: -11.952797889709473
    9. ' modu' → logprob: -12.327797889709473
    10. ' module' → logprob: -12.452797889709473

Token 477: ' lors' (ID: 15456)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.23186363279819489
    2. '_mod' → logprob: -2.2318637371063232
    3. ' mod' → logprob: -2.7318637371063232
    4. ' =' → logprob: -3.7318637371063232
    5. '=' → logprob: -4.981863498687744
    6. '_' → logprob: -6.231863498687744
    7. 'MOD' → logprob: -7.481863498687744
    8. ' modulo' → logprob: -7.606863498687744
    9. '_MOD' → logprob: -7.856863498687744
    10. ' MOD' → logprob: -9.231863975524902

Token 478: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.031426191329956
    2. ' de' → logprob: -1.531426191329956
    3. ' des' → logprob: -2.156426191329956
    4. '=' → logprob: -2.156426191329956
    5. ' of' → logprob: -2.781426191329956
    6. ' ' → logprob: -3.406426191329956
    7. ' d' → logprob: -3.531426191329956
    8. ' modulo' → logprob: -3.781426191329956
    9. ' =' → logprob: -3.906426191329956
    10. ')' → logprob: -5.031426429748535

Token 479: ' calcul' (ID: 7559)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.09837900847196579
    2. ' mod' → logprob: -3.973378896713257
    3. ' modulo' → logprob: -4.223379135131836
    4. 'calcul' → logprob: -4.473379135131836
    5. '10' → logprob: -4.723379135131836
    6. 'MOD' → logprob: -4.973379135131836
    7. 'pow' → logprob: -4.973379135131836
    8. ' calculations' → logprob: -5.098379135131836
    9. ')' → logprob: -5.723379135131836
    10. '_' → logprob: -5.848379135131836

Token 480: 's' (ID: 82)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3012324273586273
    2. ' =' → logprob: -1.5512324571609497
    3. '_' → logprob: -3.42623233795166
    4. 'mod' → logprob: -4.67623233795166
    5. ' modulo' → logprob: -5.80123233795166
    6. '_mod' → logprob: -6.80123233795166
    7. ' ' → logprob: -7.42623233795166
    8. ' mod' → logprob: -7.55123233795166
    9. ')' → logprob: -8.05123233795166
    10. 's' → logprob: -8.42623233795166

Token 481: '
' (ID: 198)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3254028260707855
    2. '_mod' → logprob: -1.825402855873108
    3. ' mod' → logprob: -2.2004027366638184
    4. ' =' → logprob: -5.950402736663818
    5. '_' → logprob: -6.575402736663818
    6. '_MOD' → logprob: -7.450402736663818
    7. '=' → logprob: -7.575402736663818
    8. 'MOD' → logprob: -8.075403213500977
    9. ' modulo' → logprob: -8.825403213500977
    10. ' MOD' → logprob: -9.075403213500977

Token 482: '#' (ID: 2)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.04253879562020302
    2. '_mod' → logprob: -3.91753888130188
    3. ' mod' → logprob: -4.167538642883301
    4. 'MOD' → logprob: -5.667538642883301
    5. ' =' → logprob: -6.667538642883301
    6. '=' → logprob: -7.167538642883301
    7. '_MOD' → logprob: -7.667538642883301
    8. ' MOD' → logprob: -9.0425386428833
    9. ' modulo' → logprob: -10.2925386428833
    10. 'Mod' → logprob: -10.2925386428833

Token 483: ' afin' (ID: 22217)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.055715061724185944
    2. ' mod' → logprob: -3.4307150840759277
    3. '_mod' → logprob: -4.180715084075928
    4. ' =' → logprob: -6.055715084075928
    5. 'MOD' → logprob: -6.430715084075928
    6. '=' → logprob: -6.680715084075928
    7. ' modulo' → logprob: -7.180715084075928
    8. '_MOD' → logprob: -8.43071460723877
    9. '_' → logprob: -9.05571460723877
    10. ' MOD' → logprob: -9.55571460723877

Token 484: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.27235057950019836
    2. ' d' → logprob: -2.272350549697876
    3. 'de' → logprob: -2.522350549697876
    4. 'd' → logprob: -3.022350549697876
    5. '#' → logprob: -5.647350788116455
    6. 'def' → logprob: -7.147350788116455
    7. '_' → logprob: -7.272350788116455
    8. ' of' → logprob: -8.022350311279297
    9. '=' → logprob: -8.397350311279297
    10. 'mod' → logprob: -8.647350311279297

Token 485: ''év' (ID: 114425)
  Prédit: ''év'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''év' → logprob: -0.04720764607191086
    2. 'év' → logprob: -3.4222075939178467
    3. '’éviter' → logprob: -4.797207832336426
    4. ' éviter' → logprob: -6.172207832336426
    5. ''assurer' → logprob: -6.672207832336426
    6. 'ev' → logprob: -6.922207832336426
    7. ''effect' → logprob: -8.172207832336426
    8. ''avoir' → logprob: -8.672207832336426
    9. ''emp' → logprob: -8.797207832336426
    10. ''é' → logprob: -9.672207832336426

Token 486: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.00044318195432424545
    2. 'al' → logprob: -8.250443458557129
    3. 'ite' → logprob: -9.875443458557129
    4. ' iter' → logprob: -10.750443458557129
    5. 'aler' → logprob: -10.750443458557129
    6. 'érer' → logprob: -10.875443458557129
    7. '```' → logprob: -11.250443458557129
    8. 'Iter' → logprob: -11.625443458557129
    9. 'iterr' → logprob: -11.875443458557129
    10. 'v' → logprob: -12.375443458557129

Token 487: ' les' (ID: 1341)
  Prédit: ' overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -0.24669064581394196
    2. ' integer' → logprob: -1.8716906309127808
    3. 'overflow' → logprob: -3.1216907501220703
    4. ' des' → logprob: -4.74669075012207
    5. 'integer' → logprob: -5.49669075012207
    6. ' modulo' → logprob: -6.49669075012207
    7. ' les' → logprob: -6.74669075012207
    8. ' entier' → logprob: -6.87169075012207
    9. ' over' → logprob: -7.49669075012207
    10. ' ' → logprob: -7.62169075012207

Token 488: ' sur' (ID: 1512)
  Prédit: 'overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'overflow' → logprob: -0.15121830999851227
    2. ' overflow' → logprob: -2.1512184143066406
    3. ' déb' → logprob: -4.276218414306641
    4. ' dépasse' → logprob: -5.151218414306641
    5. 'dé' → logprob: -6.151218414306641
    6. 'integer' → logprob: -7.151218414306641
    7. ' integer' → logprob: -7.526218414306641
    8. 'd' → logprob: -7.901218414306641
    9. 'ent' → logprob: -8.77621841430664
    10. 'over' → logprob: -9.27621841430664

Token 489: 'charges' (ID: 99078)
  Prédit: 'flows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flows' → logprob: -0.02362150140106678
    2. 'flow' → logprob: -3.7736215591430664
    3. 'f' → logprob: -8.273621559143066
    4. 'mod' → logprob: -10.148621559143066
    5. 'fl' → logprob: -10.773621559143066
    6. 'flo' → logprob: -11.023621559143066
    7. '#' → logprob: -11.648621559143066
    8. '```' → logprob: -12.023621559143066
    9. 'd' → logprob: -12.273621559143066
    10. 'import' → logprob: -12.648621559143066

Token 490: ' de' (ID: 334)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.184108167886734
    2. '_mod' → logprob: -1.9341081380844116
    3. ' mod' → logprob: -4.684108257293701
    4. '=' → logprob: -5.184108257293701
    5. '_' → logprob: -5.309108257293701
    6. ' =' → logprob: -6.184108257293701
    7. 'MOD' → logprob: -7.059108257293701
    8. '_MOD' → logprob: -7.684108257293701
    9. ' modulo' → logprob: -9.059107780456543
    10. 'Mod' → logprob: -9.809107780456543

Token 491: ' grands' (ID: 43085)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.645425021648407
    2. 'int' → logprob: -2.1454250812530518
    3. 'overflow' → logprob: -2.2704250812530518
    4. 'inte' → logprob: -2.6454250812530518
    5. 'mod' → logprob: -2.7704250812530518
    6. 'integer' → logprob: -3.1454250812530518
    7. 'l' → logprob: -3.7704250812530518
    8. 'calcul' → logprob: -3.8954250812530518
    9. 'd' → logprob: -4.645424842834473
    10. 'dé' → logprob: -4.645424842834473

Token 492: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.07109546661376953
    2. 'ent' → logprob: -2.9460954666137695
    3. ' ent' → logprob: -4.5710954666137695
    4. 'nombre' → logprob: -6.1960954666137695
    5. 'inte' → logprob: -6.6960954666137695
    6. ' integers' → logprob: -7.3210954666137695
    7. 'n' → logprob: -7.6960954666137695
    8. 'numbers' → logprob: -8.07109546661377
    9. 'mod' → logprob: -8.19609546661377
    10. ' nombre' → logprob: -8.32109546661377

Token 493: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.13802993297576904
    2. 'ier' → logprob: -2.3880300521850586
    3. 'mod' → logprob: -4.013030052185059
    4. '_mod' → logprob: -5.138030052185059
    5. 'er' → logprob: -5.388030052185059
    6. 'ières' → logprob: -5.388030052185059
    7. ' modulo' → logprob: -6.513030052185059
    8. 'ropy' → logprob: -7.513030052185059
    9. 'e' → logprob: -7.888030052185059
    10. ' mod' → logprob: -8.263030052185059

Token 494: '.' (ID: 13)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2069646120071411
    2. '_mod' → logprob: -1.7069646120071411
    3. '=' → logprob: -6.206964492797852
    4. ' =' → logprob: -6.581964492797852
    5. 'MOD' → logprob: -7.331964492797852
    6. '_MOD' → logprob: -7.956964492797852
    7. '_' → logprob: -8.206964492797852
    8. '```' → logprob: -8.706964492797852
    9. '.' → logprob: -8.831964492797852
    10. 'Mod' → logprob: -9.081964492797852

Token 495: ' Non' (ID: 13763)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0007687712204642594
    2. '
' → logprob: -7.250768661499023
    3. '_mod' → logprob: -10.625768661499023
    4. 'MOD' → logprob: -11.000768661499023
    5. '(mod' → logprob: -11.875768661499023
    6. ' mod' → logprob: -12.500768661499023
    7. '```' → logprob: -12.750768661499023
    8. '

' → logprob: -13.125768661499023
    9. '.mod' → logprob: -14.875768661499023
    10. '.
' → logprob: -15.250768661499023

Token 496: ' utilisée' (ID: 106548)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.06986206769943237
    2. '_mod' → logprob: -2.819862127304077
    3. 'MOD' → logprob: -5.694861888885498
    4. ' =' → logprob: -6.319861888885498
    5. '=' → logprob: -6.944861888885498
    6. '_MOD' → logprob: -7.069861888885498
    7. ' mod' → logprob: -7.194861888885498
    8. '
' → logprob: -10.319862365722656
    9. '#' → logprob: -10.444862365722656
    10. 'modifiable' → logprob: -10.819862365722656

Token 497: ' ci' (ID: 7405)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7449142932891846
    2. '=' → logprob: -1.1199142932891846
    3. 'mod' → logprob: -1.8699142932891846
    4. '_mod' → logprob: -3.8699142932891846
    5. ',' → logprob: -4.4949140548706055
    6. '.' → logprob: -5.1199140548706055
    7. '_' → logprob: -5.6199140548706055
    8. '#' → logprob: -7.3699140548706055
    9. '
' → logprob: -7.7449140548706055
    10. '=
' → logprob: -8.369914054870605

Token 498: '-dessous' (ID: 76632)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.025252610445022583
    2. '_mod' → logprob: -4.150252819061279
    3. '=' → logprob: -5.150252819061279
    4. ' =' → logprob: -6.525252819061279
    5. '#' → logprob: -7.275252819061279
    6. 'MOD' → logprob: -7.400252819061279
    7. ' mod' → logprob: -8.775252342224121
    8. '_MOD' → logprob: -8.900252342224121
    9. '_' → logprob: -9.150252342224121
    10. '=
' → logprob: -10.025252342224121

Token 499: '.
' (ID: 558)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.003143373876810074
    2. '
' → logprob: -6.753143310546875
    3. '_mod' → logprob: -6.753143310546875
    4. '

' → logprob: -7.753143310546875
    5. 'MOD' → logprob: -8.378143310546875
    6. ' mod' → logprob: -9.878143310546875
    7. '(mod' → logprob: -11.003143310546875
    8. '.
' → logprob: -11.503143310546875
    9. ',' → logprob: -11.628143310546875
    10. '.' → logprob: -11.628143310546875

Token 500: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.8624639324116288e-06
    2. 'MOD' → logprob: -13.250001907348633
    3. '
' → logprob: -17.000001907348633
    4. ' mod' → logprob: -17.375001907348633
    5. '```' → logprob: -17.500001907348633
    6. '_mod' → logprob: -18.250001907348633
    7. '(mod' → logprob: -18.875001907348633
    8. 'Mod' → logprob: -20.625001907348633
    9. '.mod' → logprob: -21.375001907348633
    10. 'modifiable' → logprob: -21.500001907348633

Token 501: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048590436577796936
    2. '=' → logprob: -3.0485904216766357
    3. ' ' → logprob: -13.423590660095215
    4. ' =
' → logprob: -14.548590660095215
    5. 'mod' → logprob: -15.298590660095215
    6. ' ' → logprob: -15.298590660095215
    7. ',' → logprob: -15.798590660095215
    8. '  ' → logprob: -16.2985897064209
    9. '_' → logprob: -16.6735897064209
    10. '.' → logprob: -16.6735897064209

Token 502: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.009174622595310211
    2. ' ' → logprob: -5.009174823760986
    3. '100' → logprob: -6.009174823760986
    4. '1' → logprob: -16.634174346923828
    5. 'int' → logprob: -18.384174346923828
    6. ' ' → logprob: -19.634174346923828
    7. '```' → logprob: -20.134174346923828
    8. '​' → logprob: -20.634174346923828
    9. '109' → logprob: -20.759174346923828
    10. '(' → logprob: -20.759174346923828

Token 503: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0009115827269852161
    2. '100' → logprob: -7.000911712646484
    3. ' ' → logprob: -15.750911712646484
    4. 'int' → logprob: -18.750911712646484
    5. '1' → logprob: -19.375911712646484
    6. '109' → logprob: -19.625911712646484
    7. '(' → logprob: -20.125911712646484
    8. '```' → logprob: -21.875911712646484
    9. '１０' → logprob: -22.875911712646484
    10. '101' → logprob: -23.375911712646484

Token 504: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.002011314034461975
    2. '9' → logprob: -6.252011299133301
    3. ' **' → logprob: -9.5020112991333
    4. '+' → logprob: -11.8770112991333
    5. '*' → logprob: -15.0020112991333
    6. '```' → logprob: -15.2520112991333
    7. ' ' → logprob: -15.6270112991333
    8. '^' → logprob: -15.8770112991333
    9. ' ' → logprob: -16.502012252807617
    10. '\xe2\x81' → logprob: -16.752012252807617

Token 505: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -20.75
    3. ' ' → logprob: -22.5
    4. '９' → logprob: -23.5
    5. '```' → logprob: -23.625
    6. '+' → logprob: -23.625
    7. '۹' → logprob: -25.25
    8. '
' → logprob: -25.375
    9. '^' → logprob: -26.25
    10. 'nine' → logprob: -26.625

Token 506: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011048408225178719
    2. ' +' → logprob: -4.511048316955566
    3. '7' → logprob: -14.511048316955566
    4. '+
' → logprob: -16.136049270629883
    5. ' ' → logprob: -16.761049270629883
    6. ' ' → logprob: -17.386049270629883
    7. '＋' → logprob: -18.636049270629883
    8. ' +
' → logprob: -18.886049270629883
    9. '
' → logprob: -19.511049270629883
    10. '```' → logprob: -19.761049270629883

Token 507: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '07' → logprob: -18.625
    4. '```' → logprob: -20.875
    5. '+' → logprob: -21.5
    6. '
' → logprob: -21.75
    7. '۷' → logprob: -21.75
    8. '' → logprob: -21.75
    9. ' ' → logprob: -22.25
    10. '７' → logprob: -22.5

Token 508: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '07' → logprob: -19.5
    3. '```' → logprob: -22.375
    4. '
' → logprob: -23.0
    5. '' → logprob: -23.125
    6. '۷' → logprob: -23.375
    7. ' ' → logprob: -23.5
    8. '

' → logprob: -24.0
    9. '+' → logprob: -24.0
    10. '７' → logprob: -24.125

Token 509: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0745188444852829
    2. '

' → logprob: -3.324518918991089
    3. 'def' → logprob: -3.699518918991089
    4. '<|end|>' → logprob: -5.07451868057251
    5. '' → logprob: -6.57451868057251
    6. '\n' → logprob: -6.69951868057251
    7. '#' → logprob: -7.32451868057251
    8. '
' → logprob: -8.074519157409668
    9. '```' → logprob: -8.949519157409668
    10. 'newline' → logprob: -9.074519157409668

Token 510: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0031557343900203705
    2. 'n' → logprob: -6.253155708312988
    3. '\n' → logprob: -7.253155708312988
    4. 'import' → logprob: -8.128155708312988
    5. '
' → logprob: -9.003155708312988
    6. '\' → logprob: -10.378155708312988
    7. 'input' → logprob: -11.128155708312988
    8. '

' → logprob: -11.378155708312988
    9. '```' → logprob: -11.503155708312988
    10. 'ndef' → logprob: -12.003155708312988

Token 511: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009550073184072971
    2. 'import' → logprob: -5.259550094604492
    3. '#' → logprob: -5.634550094604492
    4. '<|end|>' → logprob: -8.009550094604492
    5. '```' → logprob: -9.134550094604492
    6. '
' → logprob: -9.884550094604492
    7. ' def' → logprob: -10.259550094604492
    8. '#!/' → logprob: -10.384550094604492
    9. ' ' → logprob: -10.509550094604492
    10. 'input' → logprob: -10.634550094604492

Token 512: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0007330321241170168
    2. 'fin' → logprob: -7.250732898712158
    3. '#' → logprob: -11.625733375549316
    4. '```' → logprob: -12.250733375549316
    5. 'ff' → logprob: -13.250733375549316
    6. 'fn' → logprob: -13.375733375549316
    7. 'def' → logprob: -13.500733375549316
    8. 'fi' → logprob: -13.625733375549316
    9. '
' → logprob: -13.750733375549316
    10. 'fen' → logprob: -14.375733375549316

Token 513: 'ition' (ID: 868)
  Prédit: 'inition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inition' → logprob: -0.10367105156183243
    2. 'f' → logprob: -2.853671073913574
    3. 'def' → logprob: -3.978671073913574
    4. 'ition' → logprob: -4.103671073913574
    5. '#' → logprob: -5.478671073913574
    6. 'fin' → logprob: -7.978671073913574
    7. 'fine' → logprob: -8.353671073913574
    8. 'ine' → logprob: -8.478671073913574
    9. 'claration' → logprob: -9.228671073913574
    10. 'class' → logprob: -9.353671073913574

Token 514: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6080811619758606
    2. ' =' → logprob: -1.1080811023712158
    3. '=' → logprob: -3.483081102371216
    4. '_' → logprob: -4.108081340789795
    5. ' def' → logprob: -4.108081340789795
    6. 'max' → logprob: -4.108081340789795
    7. 'n' → logprob: -4.733081340789795
    8. ' max' → logprob: -4.858081340789795
    9. ' of' → logprob: -5.358081340789795
    10. ' d' → logprob: -5.358081340789795

Token 515: ' l' (ID: 305)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.29374900460243225
    2. 'input' → logprob: -1.7937489748001099
    3. 'INF' → logprob: -3.0437490940093994
    4. 'n' → logprob: -3.9187490940093994
    5. 'inf' → logprob: -5.16874885559082
    6. 'main' → logprob: -5.54374885559082
    7. 'N' → logprob: -5.91874885559082
    8. 'int' → logprob: -5.91874885559082
    9. 'l' → logprob: -6.41874885559082
    10. 'range' → logprob: -7.16874885559082

Token 516: ''in' (ID: 17942)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.41172072291374207
    2. 'ef' → logprob: -1.4117207527160645
    3. 'def' → logprob: -2.6617207527160645
    4. '_' → logprob: -4.6617207527160645
    5. 'e' → logprob: -4.7867207527160645
    6. '#' → logprob: -6.2867207527160645
    7. 'a' → logprob: -6.9117207527160645
    8. '=' → logprob: -7.0367207527160645
    9. 'éf' → logprob: -8.286720275878906
    10. '_f' → logprob: -8.661720275878906

Token 517: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0025173963513225317
    2. 't' → logprob: -6.002517223358154
    3. 'put' → logprob: -10.752517700195312
    4. 'F' → logprob: -11.752517700195312
    5. 'float' → logprob: -11.877517700195312
    6. 'it' → logprob: -13.627517700195312
    7. '#' → logprob: -14.127517700195312
    8. '[' → logprob: -14.752517700195312
    9. 'ft' → logprob: -14.752517700195312
    10. 'T' → logprob: -14.877517700195312

Token 518: 'ini' (ID: 2363)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.36105719208717346
    2. 'float' → logprob: -2.2360572814941406
    3. 'ini' → logprob: -2.3610572814941406
    4. '=' → logprob: -2.9860572814941406
    5. '=float' → logprob: -3.8610572814941406
    6. ' =' → logprob: -3.9860572814941406
    7. 'inity' → logprob: -5.486057281494141
    8. 'int' → logprob: -6.236057281494141
    9. 'f' → logprob: -6.861057281494141
    10. 'init' → logprob: -6.986057281494141

Token 519: ' positif' (ID: 89008)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011119858361780643
    2. 'inf' → logprob: -5.011119842529297
    3. '=' → logprob: -5.511119842529297
    4. '_inf' → logprob: -8.261119842529297
    5. 'INF' → logprob: -9.386119842529297
    6. '_INF' → logprob: -12.261119842529297
    7. '=float' → logprob: -12.761119842529297
    8. ' inf' → logprob: -14.261119842529297
    9. '-inf' → logprob: -14.261119842529297
    10. '_' → logprob: -14.761119842529297

Token 520: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01370361540466547
    2. '=' → logprob: -4.5137038230896
    3. 'inf' → logprob: -6.0137038230896
    4. '_inf' → logprob: -9.138703346252441
    5. 'INF' → logprob: -9.638703346252441
    6. '=float' → logprob: -10.513703346252441
    7. '_INF' → logprob: -12.763703346252441
    8. 'float' → logprob: -13.388703346252441
    9. '_' → logprob: -14.638703346252441
    10. 'in' → logprob: -15.263703346252441

Token 521: ' utilisé' (ID: 53138)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.023320715874433517
    2. 'INF' → logprob: -3.7733206748962402
    3. 'float' → logprob: -10.023321151733398
    4. ' inf' → logprob: -11.023321151733398
    5. '_inf' → logprob: -11.898321151733398
    6. ' INF' → logprob: -12.648321151733398
    7. 'Inf' → logprob: -13.023321151733398
    8. '_INF' → logprob: -13.648321151733398
    9. 'import' → logprob: -15.523321151733398
    10. 'in' → logprob: -15.523321151733398

Token 522: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47519785165786743
    2. '=' → logprob: -0.9751978516578674
    3. 'inf' → logprob: -6.850197792053223
    4. '=float' → logprob: -9.975197792053223
    5. '_inf' → logprob: -12.100197792053223
    6. 'INF' → logprob: -13.100197792053223
    7. 'float' → logprob: -13.600197792053223
    8. '
' → logprob: -14.100197792053223
    9. ' inf' → logprob: -14.100197792053223
    10. 'in' → logprob: -14.225197792053223

Token 523: ' initial' (ID: 4871)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.06259751319885254
    2. ' float' → logprob: -2.8125975131988525
    3. 'int' → logprob: -7.687597274780273
    4. 'inf' → logprob: -9.437597274780273
    5. '=float' → logprob: -10.937597274780273
    6. '10' → logprob: -11.062597274780273
    7. ' ' → logprob: -11.312597274780273
    8. 'math' → logprob: -11.312597274780273
    9. '1' → logprob: -11.937597274780273
    10. ' inf' → logprob: -12.312597274780273

Token 524: 'iser' (ID: 7466)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.26991191506385803
    2. 'inf' → logprob: -2.144912004470825
    3. 'float' → logprob: -2.269912004470825
    4. '=' → logprob: -5.144911766052246
    5. '=float' → logprob: -5.519911766052246
    6. 'inite' → logprob: -5.769911766052246
    7. ' =' → logprob: -6.769911766052246
    8. 'ity' → logprob: -8.019911766052246
    9. '_inf' → logprob: -8.019911766052246
    10. 'fi' → logprob: -8.144911766052246

Token 525: ' des' (ID: 731)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.02098570577800274
    2. 'float' → logprob: -4.0209856033325195
    3. 'INF' → logprob: -6.5209856033325195
    4. ' inf' → logprob: -6.7709856033325195
    5. ' float' → logprob: -8.52098560333252
    6. 'int' → logprob: -12.39598560333252
    7. ' INF' → logprob: -12.77098560333252
    8. 'Inf' → logprob: -13.27098560333252
    9. '```' → logprob: -13.64598560333252
    10. '_inf' → logprob: -14.02098560333252

Token 526: ' distances' (ID: 48294)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.6972954273223877
    2. 'inf' → logprob: -0.6972954273223877
    3. 'INF' → logprob: -5.947295188903809
    4. ' float' → logprob: -7.072295188903809
    5. 'int' → logprob: -7.822295188903809
    6. ' inf' → logprob: -8.822295188903809
    7. '10' → logprob: -9.322295188903809
    8. 'import' → logprob: -11.697295188903809
    9. ' INF' → logprob: -12.197295188903809
    10. 'Inf' → logprob: -12.197295188903809

Token 527: ' infin' (ID: 93237)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07767459005117416
    2. 'inf' → logprob: -3.077674627304077
    3. '=' → logprob: -3.577674627304077
    4. 'INF' → logprob: -8.077674865722656
    5. '=float' → logprob: -8.577674865722656
    6. '_inf' → logprob: -8.577674865722656
    7. 'float' → logprob: -10.577674865722656
    8. '_INF' → logprob: -12.452674865722656
    9. '∞' → logprob: -13.202674865722656
    10. '.inf' → logprob: -13.452674865722656

Token 528: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.8177196383476257
    2. 'f' → logprob: -1.6927196979522705
    3. '=float' → logprob: -1.9427196979522705
    4. '=' → logprob: -2.9427196979522705
    5. 'fi' → logprob: -3.0677196979522705
    6. 'y' → logprob: -3.0677196979522705
    7. 'float' → logprob: -3.9427196979522705
    8. ' =' → logprob: -4.192719459533691
    9. 'ity' → logprob: -4.567719459533691
    10. 'e' → logprob: -4.692719459533691

Token 529: '
' (ID: 198)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.04687485843896866
    2. ' =' → logprob: -3.296874761581421
    3. 'INF' → logprob: -5.296875
    4. '=' → logprob: -5.671875
    5. '_inf' → logprob: -8.546875
    6. '
' → logprob: -9.546875
    7. 'float' → logprob: -10.171875
    8. '=float' → logprob: -10.671875
    9. 'import' → logprob: -12.171875
    10. '_INF' → logprob: -12.546875

Token 530: '#' (ID: 2)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.11232337355613708
    2. ' =' → logprob: -2.36232328414917
    3. '=' → logprob: -4.48732328414917
    4. '_inf' → logprob: -7.61232328414917
    5. 'INF' → logprob: -8.487323760986328
    6. 'float' → logprob: -10.362323760986328
    7. '=float' → logprob: -10.737323760986328
    8. 'import' → logprob: -10.987323760986328
    9. '
' → logprob: -12.112323760986328
    10. 'in' → logprob: -12.487323760986328

Token 531: ' dans' (ID: 2671)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.015879392623901367
    2. ' =' → logprob: -4.2658796310424805
    3. 'INF' → logprob: -7.0158796310424805
    4. '=' → logprob: -7.5158796310424805
    5. '_inf' → logprob: -8.76587963104248
    6. ' inf' → logprob: -10.01587963104248
    7. 'import' → logprob: -10.51587963104248
    8. 'float' → logprob: -10.64087963104248
    9. '=float' → logprob: -12.01587963104248
    10. '
' → logprob: -12.39087963104248

Token 532: ' des' (ID: 731)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.024315988644957542
    2. 'l' → logprob: -4.77431583404541
    3. 'le' → logprob: -5.39931583404541
    4. 'les' → logprob: -6.02431583404541
    5. 'alg' → logprob: -6.14931583404541
    6. 'la' → logprob: -6.14931583404541
    7. 'import' → logprob: -6.52431583404541
    8. 'inf' → logprob: -6.89931583404541
    9. 'int' → logprob: -8.27431583404541
    10. ' float' → logprob: -8.39931583404541

Token 533: ' alg' (ID: 4485)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.24091820418834686
    2. 'alg' → logprob: -1.6159181594848633
    3. 'graphs' → logprob: -4.990918159484863
    4. ' graph' → logprob: -5.490918159484863
    5. 'd' → logprob: -6.615918159484863
    6. 'calcul' → logprob: -6.865918159484863
    7. 'import' → logprob: -7.990918159484863
    8. 'pro' → logprob: -8.115918159484863
    9. 'algo' → logprob: -8.615918159484863
    10. ' alg' → logprob: -8.615918159484863

Token 534: 'orith' (ID: 9996)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.30743318796157837
    2. 'inf' → logprob: -2.3074331283569336
    3. 'e' → logprob: -2.8074331283569336
    4. 'f' → logprob: -3.4324331283569336
    5. 'def' → logprob: -4.182433128356934
    6. 'math' → logprob: -4.557433128356934
    7. 'import' → logprob: -4.557433128356934
    8. '=float' → logprob: -4.682433128356934
    9. '_inf' → logprob: -4.807433128356934
    10. ' float' → logprob: -5.432433128356934

Token 535: 'mes' (ID: 4613)
  Prédit: 'mes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mes' → logprob: -0.40091440081596375
    2. 'th' → logprob: -1.1509144306182861
    3. 't' → logprob: -5.900914192199707
    4. 'ms' → logprob: -6.275914192199707
    5. 'me' → logprob: -6.275914192199707
    6. 'es' → logprob: -6.400914192199707
    7. 's' → logprob: -7.275914192199707
    8. 'sm' → logprob: -7.525914192199707
    9. 'f' → logprob: -7.775914192199707
    10. 'm' → logprob: -7.775914192199707

Token 536: ' comme' (ID: 7971)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12283346056938171
    2. 'inf' → logprob: -2.497833490371704
    3. '=' → logprob: -3.747833490371704
    4. 'INF' → logprob: -5.247833251953125
    5. '_inf' → logprob: -5.622833251953125
    6. '=float' → logprob: -8.247833251953125
    7. 'float' → logprob: -8.247833251953125
    8. ' inf' → logprob: -8.997833251953125
    9. '_INF' → logprob: -9.372833251953125
    10. ' INF' → logprob: -10.747833251953125

Token 537: ' D' (ID: 415)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.15304510295391083
    2. 'D' → logprob: -2.528045177459717
    3. 'd' → logprob: -2.903045177459717
    4. 'graph' → logprob: -5.403045177459717
    5. 'import' → logprob: -6.153045177459717
    6. 'l' → logprob: -9.028044700622559
    7. 'la' → logprob: -9.403044700622559
    8. 'math' → logprob: -9.778044700622559
    9. '```' → logprob: -9.778044700622559
    10. ' float' → logprob: -10.278044700622559

Token 538: 'ijkstra' (ID: 124290)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.5599595308303833
    2. 'ijkstra' → logprob: -0.9349595308303833
    3. 'fs' → logprob: -4.434959411621094
    4. 'float' → logprob: -4.809959411621094
    5. 'ij' → logprob: -5.059959411621094
    6. 'math' → logprob: -6.684959411621094
    7. 'ijk' → logprob: -6.809959411621094
    8. 'ist' → logprob: -7.059959411621094
    9. '_inf' → logprob: -7.059959411621094
    10. '∞' → logprob: -7.434959411621094

Token 539: '.
' (ID: 558)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.008871708996593952
    2. 'INF' → logprob: -5.008871555328369
    3. ' =' → logprob: -6.383871555328369
    4. '=' → logprob: -8.133872032165527
    5. '
' → logprob: -9.008872032165527
    6. '_inf' → logprob: -10.383872032165527
    7. 'float' → logprob: -11.758872032165527
    8. 'in' → logprob: -13.508872032165527
    9. '∞' → logprob: -13.508872032165527
    10. 'import' → logprob: -13.633872032165527

Token 540: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0020057226065546274
    2. 'INF' → logprob: -6.252005577087402
    3. 'float' → logprob: -9.502005577087402
    4. '_inf' → logprob: -14.127005577087402
    5. 'import' → logprob: -14.252005577087402
    6. ' inf' → logprob: -14.752005577087402
    7. 'Inf' → logprob: -15.127005577087402
    8. 'in' → logprob: -16.50200653076172
    9. '
' → logprob: -16.50200653076172
    10. '-inf' → logprob: -17.00200653076172

Token 541: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132629096508026
    2. '=' → logprob: -1.313262939453125
    3. ' ' → logprob: -15.438262939453125
    4. '＝' → logprob: -15.438262939453125
    5. ',' → logprob: -15.688262939453125
    6. ' ' → logprob: -16.313262939453125
    7. '_' → logprob: -16.688262939453125
    8. 'inf' → logprob: -16.688262939453125
    9. 'INF' → logprob: -16.813262939453125
    10. '​' → logprob: -17.313262939453125

Token 542: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.030897049233317375
    2. '10' → logprob: -3.5308971405029297
    3. ' float' → logprob: -6.78089714050293
    4. ' ' → logprob: -11.53089714050293
    5. '1' → logprob: -14.78089714050293
    6. 'int' → logprob: -15.53089714050293
    7. '(float' → logprob: -16.15589714050293
    8. '	float' → logprob: -16.28089714050293
    9. 'inf' → logprob: -17.40589714050293
    10. '100' → logprob: -17.78089714050293

Token 543: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.513339445111342e-05
    2. '("' → logprob: -10.250044822692871
    3. '(' → logprob: -12.125044822692871
    4. ''in' → logprob: -12.875044822692871
    5. '('+' → logprob: -13.750044822692871
    6. ''' → logprob: -15.250044822692871
    7. '(in' → logprob: -15.750044822692871
    8. '('-' → logprob: -16.375045776367188
    9. ' ('' → logprob: -17.625045776367188
    10. '(\'' → logprob: -19.250045776367188

Token 544: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0020964916329830885
    2. ''in' → logprob: -6.252096652984619
    3. 'in' → logprob: -9.127096176147461
    4. ''' → logprob: -10.127096176147461
    5. 'info' → logprob: -12.127096176147461
    6. '+' → logprob: -12.627096176147461
    7. '"' → logprob: -12.877096176147461
    8. '123' → logprob: -13.002096176147461
    9. '('' → logprob: -14.002096176147461
    10. '-inf' → logprob: -14.627096176147461

Token 545: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932021379470825
    2. '')' → logprob: -0.6932021379470825
    3. '")' → logprob: -10.068202018737793
    4. ')'' → logprob: -11.818202018737793
    5. '.')' → logprob: -13.443202018737793
    6. '')"' → logprob: -14.318202018737793
    7. ')")' → logprob: -14.318202018737793
    8. '()' → logprob: -14.818202018737793
    9. ' )' → logprob: -14.818202018737793
    10. '')
' → logprob: -15.068202018737793

Token 546: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00015574338613077998
    2. 'class' → logprob: -9.375155448913574
    3. 'import' → logprob: -10.500155448913574
    4. '
' → logprob: -11.125155448913574
    5. '

' → logprob: -11.875155448913574
    6. 'n' → logprob: -12.250155448913574
    7. '\n' → logprob: -12.375155448913574
    8. '\' → logprob: -12.750155448913574
    9. '```' → logprob: -12.750155448913574
    10. 'ndef' → logprob: -13.125155448913574

Token 547: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.73052782076411e-05
    2. 'input' → logprob: -9.750067710876465
    3. 'import' → logprob: -12.000067710876465
    4. 'n' → logprob: -13.625067710876465
    5. 'class' → logprob: -14.625067710876465
    6. '#' → logprob: -15.000067710876465
    7. ' def' → logprob: -15.125067710876465
    8. 'from' → logprob: -15.500067710876465
    9. 'if' → logprob: -17.00006675720215
    10. 'd' → logprob: -17.00006675720215

Token 548: ' I' (ID: 357)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.47656092047691345
    2. 'def' → logprob: -0.9765609502792358
    3. ' de' → logprob: -6.351561069488525
    4. ' ' → logprob: -7.726561069488525
    5. ' define' → logprob: -8.976560592651367
    6. ' d' → logprob: -9.601560592651367
    7. ' déf' → logprob: -11.101560592651367
    8. '  ' → logprob: -11.226560592651367
    9. 'de' → logprob: -11.601560592651367
    10. ' ' → logprob: -11.601560592651367

Token 549: ':' (ID: 25)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0032984360586851835
    2. 'ndef' → logprob: -6.003298282623291
    3. 'def' → logprob: -7.378298282623291
    4. 'nt' → logprob: -9.00329875946045
    5. 'np' → logprob: -9.87829875946045
    6. 'nit' → logprob: -12.00329875946045
    7. '(n' → logprob: -12.50329875946045
    8. ' n' → logprob: -13.12829875946045
    9. '_n' → logprob: -13.25329875946045
    10. ' =' → logprob: -13.62829875946045

Token 550: ' lit' (ID: 11980)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05778061971068382
    2. ' def' → logprob: -2.9327805042266846
    3. 'input' → logprob: -6.557780742645264
    4. 'lambda' → logprob: -6.932780742645264
    5. '()' → logprob: -8.432780265808105
    6. ' lambda' → logprob: -8.682780265808105
    7. ' input' → logprob: -9.557780265808105
    8. '```' → logprob: -11.307780265808105
    9. 'int' → logprob: -11.682780265808105
    10. '(lambda' → logprob: -12.682780265808105

Token 551: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001968649885384366
    2. 'input' → logprob: -10.00019645690918
    3. '().' → logprob: -10.25019645690918
    4. 'n' → logprob: -10.25019645690918
    5. '()

' → logprob: -11.25019645690918
    6. 'line' → logprob: -11.37519645690918
    7. '()\' → logprob: -11.87519645690918
    8. '()]' → logprob: -12.00019645690918
    9. ' ()' → logprob: -12.12519645690918
    10. ')' → logprob: -12.37519645690918

Token 552: ' ligne' (ID: 19583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2656707465648651
    2. 'n' → logprob: -2.1406707763671875
    3. 'ligne' → logprob: -3.6406707763671875
    4. 'nt' → logprob: -4.0156707763671875
    5. ' ligne' → logprob: -4.5156707763671875
    6. 'line' → logprob: -4.8906707763671875
    7. 'int' → logprob: -5.0156707763671875
    8. 'l' → logprob: -5.2656707763671875
    9. 'ny' → logprob: -5.3906707763671875
    10. 'r' → logprob: -5.3906707763671875

Token 553: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009795283898711205
    2. '().' → logprob: -4.634795188903809
    3. '()
' → logprob: -11.259795188903809
    4. ' ()' → logprob: -12.134795188903809
    5. '()

' → logprob: -12.384795188903809
    6. 'input' → logprob: -12.509795188903809
    7. '()\' → logprob: -12.509795188903809
    8. '(' → logprob: -13.259795188903809
    9. '()`' → logprob: -13.759795188903809
    10. '();' → logprob: -13.759795188903809

Token 554: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07584261894226074
    2. ' input' → logprob: -2.9508426189422607
    3. 'entrée' → logprob: -4.57584285736084
    4. 'l' → logprob: -5.32584285736084
    5. 'stdin' → logprob: -5.82584285736084
    6. 'code' → logprob: -6.82584285736084
    7. 'int' → logprob: -7.70084285736084
    8. ' l' → logprob: -7.95084285736084
    9. ' code' → logprob: -8.82584285736084
    10. '()' → logprob: -8.82584285736084

Token 555: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.028100324794650078
    2. ''entrée' → logprob: -4.403100490570068
    3. 'entrée' → logprob: -5.153100490570068
    4. 'stdin' → logprob: -5.403100490570068
    5. '=input' → logprob: -6.028100490570068
    6. ' input' → logprob: -6.653100490570068
    7. 'ine' → logprob: -8.40310001373291
    8. 'a' → logprob: -8.77810001373291
    9. '=sys' → logprob: -8.77810001373291
    10. 'e' → logprob: -9.15310001373291

Token 556: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0025980148930102587
    2. '().' → logprob: -6.127597808837891
    3. '()
' → logprob: -8.50259780883789
    4. 'input' → logprob: -9.62759780883789
    5. '()

' → logprob: -10.50259780883789
    6. ' ()' → logprob: -10.87759780883789
    7. 'def' → logprob: -11.12759780883789
    8. ')' → logprob: -11.25259780883789
    9. ' =' → logprob: -11.37759780883789
    10. '=' → logprob: -11.37759780883789

Token 557: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001677079708315432
    2. '().' → logprob: -7.1266770362854
    3. 'def' → logprob: -8.001677513122559
    4. ' =' → logprob: -8.126677513122559
    5. '()
' → logprob: -9.126677513122559
    6. '=' → logprob: -9.376677513122559
    7. 'input' → logprob: -11.376677513122559
    8. '()

' → logprob: -11.501677513122559
    9. ' ()' → logprob: -11.626677513122559
    10. ')' → logprob: -12.751677513122559

Token 558: ' sup' (ID: 1982)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5842786431312561
    2. '()' → logprob: -1.0842785835266113
    3. 'strip' → logprob: -2.4592785835266113
    4. ' strip' → logprob: -4.709278583526611
    5. '.strip' → logprob: -5.959278583526611
    6. 'def' → logprob: -6.209278583526611
    7. ')' → logprob: -6.334278583526611
    8. 'rstrip' → logprob: -6.459278583526611
    9. 'split' → logprob: -6.709278583526611
    10. '(strip' → logprob: -8.45927906036377

Token 559: 'prime' (ID: 46441)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.987480103969574
    2. 'rim' → logprob: -1.7374801635742188
    3. '.rstrip' → logprob: -2.2374801635742188
    4. 'er' → logprob: -2.6124801635742188
    5. '().' → logprob: -2.7374801635742188
    6. 'rstrip' → logprob: -3.1124801635742188
    7. 'rip' → logprob: -3.2374801635742188
    8. 'r' → logprob: -3.3624801635742188
    9. 'p' → logprob: -4.487480163574219
    10. '(strip' → logprob: -4.612480163574219

Token 560: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5762386918067932
    2. '().' → logprob: -0.8262386918067932
    3. '()
' → logprob: -8.951238632202148
    4. 'strip' → logprob: -9.701238632202148
    5. 'rstrip' → logprob: -9.951238632202148
    6. '()\' → logprob: -11.201238632202148
    7. '()

' → logprob: -11.326238632202148
    8. 'the' → logprob: -11.826238632202148
    9. 'le' → logprob: -12.701238632202148
    10. ' ()' → logprob: -12.701238632202148

Token 561: ''espace' (ID: 118124)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8133582472801208
    2. 'es' → logprob: -0.9383582472801208
    3. 'a' → logprob: -3.3133583068847656
    4. ''\' → logprob: -3.3133583068847656
    5. ''esp' → logprob: -3.8133583068847656
    6. '('\' → logprob: -3.8133583068847656
    7. 'esp' → logprob: -4.188358306884766
    8. 'u' → logprob: -4.688358306884766
    9. 's' → logprob: -5.313358306884766
    10. '()' → logprob: -5.563358306884766

Token 562: ' en' (ID: 469)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0006012882222421467
    2. '()' → logprob: -7.625601291656494
    3. ' s' → logprob: -9.750600814819336
    4. '().' → logprob: -10.750600814819336
    5. 'rstrip' → logprob: -11.125600814819336
    6. '.' → logprob: -12.500600814819336
    7. 'strip' → logprob: -12.625600814819336
    8. '_' → logprob: -13.375600814819336
    9. '()\' → logprob: -13.625600814819336
    10. '.strip' → logprob: -13.750600814819336

Token 563: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.6204725503921509
    2. 'rstrip' → logprob: -0.8704725503921509
    3. 'r' → logprob: -3.8704724311828613
    4. 'strip' → logprob: -3.9954724311828613
    5. '```' → logprob: -7.120472431182861
    6. 'tail' → logprob: -7.120472431182861
    7. '.rstrip' → logprob: -8.37047290802002
    8. 'trim' → logprob: -8.37047290802002
    9. 'right' → logprob: -8.62047290802002
    10. 'e' → logprob: -8.62047290802002

Token 564: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4832324981689453
    2. '().' → logprob: -0.9832324981689453
    3. 'strip' → logprob: -5.858232498168945
    4. '()\' → logprob: -6.233232498168945
    5. 'rstrip' → logprob: -6.358232498168945
    6. '.strip' → logprob: -6.358232498168945
    7. '.rstrip' → logprob: -7.858232498168945
    8. '())' → logprob: -9.233232498168945
    9. '()
' → logprob: -9.733232498168945
    10. '()`' → logprob: -9.858232498168945

Token 565: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.0038303565233945847
    2. 'chaine' → logprob: -6.503830432891846
    3. 'l' → logprob: -7.128830432891846
    4. ' ligne' → logprob: -7.128830432891846
    5. 'line' → logprob: -7.378830432891846
    6. 'la' → logprob: -10.628829956054688
    7. 'entrée' → logprob: -11.503829956054688
    8. 'cha' → logprob: -11.753829956054688
    9. 'li' → logprob: -11.753829956054688
    10. 'lig' → logprob: -11.878829956054688

Token 566: ',
' (ID: 412)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.20170354843139648
    2. '()' → logprob: -1.7017035484313965
    3. 'strip' → logprob: -9.326704025268555
    4. '.strip' → logprob: -9.576704025268555
    5. '()
' → logprob: -9.701704025268555
    6. 'rstrip' → logprob: -10.951704025268555
    7. ')' → logprob: -11.076704025268555
    8. '.rstrip' → logprob: -12.076704025268555
    9. ').' → logprob: -12.201704025268555
    10. '()

' → logprob: -12.201704025268555

Token 567: '#' (ID: 2)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1330394297838211
    2. 'lambda' → logprob: -2.7580394744873047
    3. 'strip' → logprob: -4.258039474487305
    4. ')' → logprob: -4.383039474487305
    5. 'def' → logprob: -4.633039474487305
    6. ' =' → logprob: -4.883039474487305
    7. '=lambda' → logprob: -5.633039474487305
    8. '().' → logprob: -5.758039474487305
    9. 'input' → logprob: -5.883039474487305
    10. ' lambda' → logprob: -6.258039474487305

Token 568: ' convert' (ID: 8452)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5878094434738159
    2. 'def' → logprob: -1.087809443473816
    3. 'return' → logprob: -3.4628095626831055
    4. '()' → logprob: -3.7128095626831055
    5. 'rstrip' → logprob: -4.3378095626831055
    6. 'lambda' → logprob: -4.4628095626831055
    7. 'split' → logprob: -4.5878095626831055
    8. ' return' → logprob: -5.5878095626831055
    9. ' strip' → logprob: -5.7128095626831055
    10. 'input' → logprob: -5.9628095626831055

Token 569: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.22019143402576447
    2. 'ie' → logprob: -2.095191478729248
    3. 'i' → logprob: -2.845191478729248
    4. '()' → logprob: -4.720191478729248
    5. 'ir' → logprob: -5.345191478729248
    6. 'is' → logprob: -7.595191478729248
    7. ' it' → logprob: -7.720191478729248
    8. 'e' → logprob: -8.09519100189209
    9. 'issant' → logprob: -8.22019100189209
    10. '=' → logprob: -8.59519100189209

Token 570: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005175762809813023
    2. '().' → logprob: -5.505175590515137
    3. 'int' → logprob: -7.505175590515137
    4. 'la' → logprob: -8.005175590515137
    5. 'l' → logprob: -10.005175590515137
    6. 'le' → logprob: -10.255175590515137
    7. '()[' → logprob: -10.630175590515137
    8. '()-' → logprob: -11.255175590515137
    9. '()==' → logprob: -11.630175590515137
    10. '().__' → logprob: -11.630175590515137

Token 571: ' chaîne' (ID: 89288)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08076240867376328
    2. 'int' → logprob: -2.7057623863220215
    3. '().' → logprob: -5.9557623863220215
    4. '()\' → logprob: -5.9557623863220215
    5. 'input' → logprob: -6.3307623863220215
    6. 'n' → logprob: -6.7057623863220215
    7. '()
' → logprob: -7.3307623863220215
    8. 'strip' → logprob: -7.5807623863220215
    9. 'next' → logprob: -8.45576286315918
    10. ')' → logprob: -8.45576286315918

Token 572: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18310771882534027
    2. '().' → logprob: -1.8081077337265015
    3. ' en' → logprob: -7.308107852935791
    4. 'en' → logprob: -8.308107376098633
    5. '()
' → logprob: -8.308107376098633
    6. '())' → logprob: -8.308107376098633
    7. 'strip' → logprob: -8.433107376098633
    8. '()[' → logprob: -8.433107376098633
    9. '()\' → logprob: -8.433107376098633
    10. 'int' → logprob: -8.558107376098633

Token 573: ' caractères' (ID: 183106)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.7385556697845459
    2. 'chaine' → logprob: -1.488555669784546
    3. 'input' → logprob: -1.988555669784546
    4. 'str' → logprob: -3.113555669784546
    5. 'car' → logprob: -3.363555669784546
    6. 'l' → logprob: -3.488555669784546
    7. 'cha' → logprob: -3.863555669784546
    8. 'string' → logprob: -4.613555908203125
    9. ' input' → logprob: -4.988555908203125
    10. 'la' → logprob: -5.863555908203125

Token 574: ' en' (ID: 469)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.14305636286735535
    2. '()' → logprob: -2.0180563926696777
    3. 'strip' → logprob: -9.26805591583252
    4. 'split' → logprob: -9.39305591583252
    5. '()[' → logprob: -10.14305591583252
    6. '()
' → logprob: -10.64305591583252
    7. 'n' → logprob: -11.14305591583252
    8. '(' → logprob: -11.14305591583252
    9. ')' → logprob: -11.14305591583252
    10. '(),' → logprob: -11.26805591583252

Token 575: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02176518552005291
    2. 'ent' → logprob: -4.021765232086182
    3. ' int' → logprob: -5.896765232086182
    4. ' entier' → logprob: -7.271765232086182
    5. 'un' → logprob: -9.896764755249023
    6. ' un' → logprob: -10.646764755249023
    7. 'integer' → logprob: -10.771764755249023
    8. 'une' → logprob: -11.021764755249023
    9. ' ent' → logprob: -11.271764755249023
    10. 'str' → logprob: -11.396764755249023

Token 576: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014163076411932707
    2. '()
' → logprob: -6.626416206359863
    3. 'def' → logprob: -10.626416206359863
    4. '().' → logprob: -10.751416206359863
    5. '()

' → logprob: -11.126416206359863
    6. '(' → logprob: -12.126416206359863
    7. ' =' → logprob: -12.251416206359863
    8. '()\' → logprob: -12.251416206359863
    9. ' ()' → logprob: -12.376416206359863
    10. ',' → logprob: -13.126416206359863

Token 577: ' ren' (ID: 5427)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6728243827819824
    2. '()' → logprob: -1.2978243827819824
    3. ' return' → logprob: -1.5478243827819824
    4. ')' → logprob: -6.172824382781982
    5. ' retourne' → logprob: -6.797824382781982
    6. ' ()' → logprob: -8.54782485961914
    7. ' returns' → logprob: -8.92282485961914
    8. ' )' → logprob: -9.92282485961914
    9. '_return' → logprob: -10.29782485961914
    10. 'ret' → logprob: -10.42282485961914

Token 578: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.27673259377479553
    2. 'return' → logprob: -2.1517326831817627
    3. 't' → logprob: -3.2767326831817627
    4. 'v' → logprob: -3.7767326831817627
    5. 'ret' → logprob: -3.7767326831817627
    6. 'tr' → logprob: -4.526732444763184
    7. 'tour' → logprob: -4.901732444763184
    8. 'e' → logprob: -5.401732444763184
    9. 'turn' → logprob: -5.901732444763184
    10. 'sert' → logprob: -6.276732444763184

Token 579: ' cet' (ID: 19505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003926615754608065
    2. 'int' → logprob: -8.12539291381836
    3. '()
' → logprob: -9.87539291381836
    4. ' ()' → logprob: -10.62539291381836
    5. ')' → logprob: -12.25039291381836
    6. '(int' → logprob: -12.75039291381836
    7. '()\' → logprob: -12.87539291381836
    8. '()`' → logprob: -13.00039291381836
    9. '().' → logprob: -13.25039291381836
    10. '(' → logprob: -13.62539291381836

Token 580: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.054689303040504456
    2. 'ent' → logprob: -3.554689407348633
    3. 'int' → logprob: -4.679689407348633
    4. ' int' → logprob: -4.804689407348633
    5. 'e' → logprob: -5.429689407348633
    6. ' integer' → logprob: -6.554689407348633
    7. ' ent' → logprob: -7.054689407348633
    8. 'I' → logprob: -8.804689407348633
    9. ' nombre' → logprob: -9.554689407348633
    10. ' entière' → logprob: -9.679689407348633

Token 581: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002952262759208679
    2. 'def' → logprob: -6.2529520988464355
    3. '()
' → logprob: -7.0029520988464355
    4. '()\' → logprob: -9.752952575683594
    5. '():' → logprob: -10.752952575683594
    6. '()

' → logprob: -10.877952575683594
    7. '()`' → logprob: -12.002952575683594
    8. ' ()' → logprob: -12.627952575683594
    9. '(' → logprob: -12.877952575683594
    10. '();' → logprob: -14.127952575683594

Token 582: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.710618905955926e-05
    2. 'I' → logprob: -9.250097274780273
    3. ' def' → logprob: -14.250097274780273
    4. '
' → logprob: -15.500097274780273
    5. '```' → logprob: -17.750097274780273
    6. 'input' → logprob: -18.000097274780273
    7. '\' → logprob: -18.625097274780273
    8. '()' → logprob: -19.500097274780273
    9. '  
' → logprob: -19.625097274780273
    10. ':def' → logprob: -20.250097274780273

Token 583: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.003610282437875867
    2. ' I' → logprob: -5.628610134124756
    3. 'input' → logprob: -12.003610610961914
    4. 'i' → logprob: -13.253610610961914
    5. 'int' → logprob: -13.753610610961914
    6. '_I' → logprob: -14.628610610961914
    7. 'read' → logprob: -15.128610610961914
    8. ' input' → logprob: -15.628610610961914
    9. '	I' → logprob: -16.253610610961914
    10. ' ' → logprob: -16.878610610961914

Token 584: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00019614976190496236
    2. '():
' → logprob: -9.25019645690918
    3. '()' → logprob: -9.37519645690918
    4. ' ():' → logprob: -11.12519645690918
    5. '().' → logprob: -15.62519645690918
    6. '(' → logprob: -16.12519645690918
    7. '():
' → logprob: -16.87519645690918
    8. ' ()' → logprob: -17.00019645690918
    9. '():

' → logprob: -18.00019645690918
    10. '();' → logprob: -19.12519645690918

Token 585: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21330375969409943
    2. ' return' → logprob: -1.963303804397583
    3. '   ' → logprob: -2.963303804397583
    4. '	return' → logprob: -10.088303565979004
    5. ' ' → logprob: -12.713303565979004
    6. '   ' → logprob: -13.588303565979004
    7. '    
' → logprob: -14.963303565979004
    8. '    ' → logprob: -15.088303565979004
    9. ':return' → logprob: -15.088303565979004
    10. '  ' → logprob: -15.588303565979004

Token 586: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0015024791937321424
    2. ' return' → logprob: -6.501502513885498
    3. '   ' → logprob: -15.75150203704834
    4. 'ret' → logprob: -19.001502990722656
    5. '	return' → logprob: -19.626502990722656
    6. 'int' → logprob: -20.501502990722656
    7. 'r' → logprob: -21.251502990722656
    8. ' ' → logprob: -21.251502990722656
    9. ' ' → logprob: -22.376502990722656
    10. ':return' → logprob: -22.751502990722656

Token 587: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00012356207298580557
    2. ' int' → logprob: -9.000123977661133
    3. '	int' → logprob: -17.125123977661133
    4. '   ' → logprob: -17.375123977661133
    5. '(int' → logprob: -18.000123977661133
    6. '[int' → logprob: -18.750123977661133
    7. '<int' → logprob: -18.875123977661133
    8. ' ' → logprob: -19.000123977661133
    9. '```' → logprob: -19.000123977661133
    10. '  ' → logprob: -19.125123977661133

Token 588: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0008498902898281813
    2. '(' → logprob: -7.500849723815918
    3. '(sys' → logprob: -8.250849723815918
    4. 'input' → logprob: -10.250849723815918
    5. ' (' → logprob: -16.250850677490234
    6. ' input' → logprob: -16.500850677490234
    7. '((' → logprob: -16.625850677490234
    8. '(stdin' → logprob: -16.625850677490234
    9. '(in' → logprob: -17.125850677490234
    10. '(
' → logprob: -17.125850677490234

Token 589: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.2233183042553719e-05
    2. '.readline' → logprob: -12.125012397766113
    3. '.stdout' → logprob: -12.250012397766113
    4. '.' → logprob: -13.750012397766113
    5. '.argv' → logprob: -14.250012397766113
    6. '.std' → logprob: -16.250011444091797
    7. 'stdin' → logprob: -16.250011444091797
    8. '(stdin' → logprob: -17.125011444091797
    9. ' .' → logprob: -18.250011444091797
    10. ' stdin' → logprob: -18.500011444091797

Token 590: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.5048530030981055e-06
    2. '.' → logprob: -13.500001907348633
    3. '.read' → logprob: -16.375001907348633
    4. ' readline' → logprob: -17.875001907348633
    5. '().' → logprob: -18.250001907348633
    6. '.stdin' → logprob: -19.000001907348633
    7. ' .' → logprob: -19.875001907348633
    8. ').' → logprob: -20.000001907348633
    9. '.rstrip' → logprob: -21.250001907348633
    10. '.readlines' → logprob: -21.625001907348633

Token 591: '())

' (ID: 27654)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002889874158427119
    2. '())' → logprob: -8.250288963317871
    3. '()' → logprob: -10.500288963317871
    4. '(' → logprob: -17.125289916992188
    5. ' ().' → logprob: -17.750289916992188
    6. '()
' → logprob: -19.625289916992188
    7. '()[' → logprob: -20.000289916992188
    8. ')' → logprob: -20.125289916992188
    9. '()\' → logprob: -20.125289916992188
    10. '();)' → logprob: -20.125289916992188

Token 592: '#' (ID: 2)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029158206656575203
    2. 'def' → logprob: -4.029158115386963
    3. '<|end|>' → logprob: -4.904158115386963
    4. '()
' → logprob: -6.529158115386963
    5. '()\' → logprob: -7.029158115386963
    6. '
' → logprob: -7.404158115386963
    7. '()

' → logprob: -8.529158592224121
    8. '(' → logprob: -9.279158592224121
    9. '(
' → logprob: -10.279158592224121
    10. '<|end|>' → logprob: -10.279158592224121

Token 593: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0045571038499474525
    2. 'D' → logprob: -5.879557132720947
    3. 'L' → logprob: -7.629557132720947
    4. '_' → logprob: -7.754557132720947
    5. 'I' → logprob: -8.004556655883789
    6. '()' → logprob: -8.879556655883789
    7. '#' → logprob: -9.379556655883789
    8. ' def' → logprob: -9.629556655883789
    9. 'S' → logprob: -9.629556655883789
    10. 'N' → logprob: -10.129556655883789

Token 594: ' LI' (ID: 14875)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10306809097528458
    2. 'L' → logprob: -2.8530681133270264
    3. 'D' → logprob: -4.353067874908447
    4. 'A' → logprob: -4.853067874908447
    5. 'def' → logprob: -4.853067874908447
    6. 's' → logprob: -5.978067874908447
    7. '()' → logprob: -6.228067874908447
    8. 'Q' → logprob: -6.853067874908447
    9. 'M' → logprob: -6.853067874908447
    10. 'LS' → logprob: -6.853067874908447

Token 595: ':' (ID: 25)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01886705867946148
    2. '():
' → logprob: -4.018867015838623
    3. '()' → logprob: -7.393867015838623
    4. 'def' → logprob: -9.518867492675781
    5. ' ():' → logprob: -10.643867492675781
    6. '():

' → logprob: -13.518867492675781
    7. '():
' → logprob: -13.768867492675781
    8. '(' → logprob: -14.018867492675781
    9. ' ()' → logprob: -14.143867492675781
    10. '().' → logprob: -16.14386749267578

Token 596: ' lit' (ID: 11980)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001519325451226905
    2. ' def' → logprob: -8.875151634216309
    3. 'lambda' → logprob: -11.750151634216309
    4. '
' → logprob: -12.625151634216309
    5. '()' → logprob: -15.375151634216309
    6. ' lambda' → logprob: -15.500151634216309
    7. '()
' → logprob: -16.625152587890625
    8. ' 
' → logprob: -16.875152587890625
    9. '   ' → logprob: -17.125152587890625
    10. 'return' → logprob: -17.250152587890625

Token 597: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.690775990486145
    2. 'list' → logprob: -1.315775990486145
    3. '().' → logprob: -1.565775990486145
    4. 'sys' → logprob: -4.1907758712768555
    5. ' list' → logprob: -6.3157758712768555
    6. '()[' → logprob: -6.6907758712768555
    7. 'lambda' → logprob: -6.9407758712768555
    8. '=sys' → logprob: -7.1907758712768555
    9. '(sys' → logprob: -8.190775871276855
    10. '():' → logprob: -8.565775871276855

Token 598: ' ligne' (ID: 19583)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.031746428459882736
    2. 'line' → logprob: -4.2817463874816895
    3. '()' → logprob: -4.7817463874816895
    4. 'list' → logprob: -5.5317463874816895
    5. 'strip' → logprob: -6.2817463874816895
    6. '()[' → logprob: -7.0317463874816895
    7. 'sys' → logprob: -7.0317463874816895
    8. '()
' → logprob: -8.031746864318848
    9. '.strip' → logprob: -8.031746864318848
    10. '=sys' → logprob: -8.156746864318848

Token 599: ' de' (ID: 334)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07895466685295105
    2. '()' → logprob: -2.5789546966552734
    3. '()
' → logprob: -11.078954696655273
    4. '()[' → logprob: -11.328954696655273
    5. 'def' → logprob: -11.828954696655273
    6. '[]' → logprob: -12.203954696655273
    7. '()

' → logprob: -12.703954696655273
    8. '():' → logprob: -12.953954696655273
    9. '=sys' → logprob: -12.953954696655273
    10. '()`' → logprob: -13.078954696655273

Token 600: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.12587471306324005
    2. '().' → logprob: -2.3758747577667236
    3. 'list' → logprob: -4.0008745193481445
    4. '=sys' → logprob: -5.7508745193481445
    5. ' sys' → logprob: -6.6258745193481445
    6. 'input' → logprob: -7.0008745193481445
    7. '()' → logprob: -7.5008745193481445
    8. '(sys' → logprob: -7.6258745193481445
    9. '()
' → logprob: -8.875874519348145
    10. '()[' → logprob: -9.375874519348145

Token 601: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.46840524673461914
    2. 'stdin' → logprob: -1.2184052467346191
    3. 'sys' → logprob: -3.843405246734619
    4. 'entrée' → logprob: -4.093405246734619
    5. '=sys' → logprob: -4.093405246734619
    6. 'put' → logprob: -4.718405246734619
    7. 'n' → logprob: -5.343405246734619
    8. ''entrée' → logprob: -5.468405246734619
    9. '(stdin' → logprob: -6.218405246734619
    10. '(sys' → logprob: -7.343405246734619

Token 602: ' standard' (ID: 7024)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.06219511106610298
    2. '()' → logprob: -2.812195062637329
    3. 'sys' → logprob: -9.43719482421875
    4. '()
' → logprob: -9.68719482421875
    5. '=sys' → logprob: -10.56219482421875
    6. 'standard' → logprob: -10.81219482421875
    7. ')' → logprob: -12.06219482421875
    8. '()[' → logprob: -12.06219482421875
    9. '.readline' → logprob: -12.56219482421875
    10. '())' → logprob: -13.06219482421875

Token 603: ',' (ID: 11)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00044056313345208764
    2. '()' → logprob: -7.75044059753418
    3. 'def' → logprob: -11.87544059753418
    4. '()
' → logprob: -14.12544059753418
    5. '(' → logprob: -14.37544059753418
    6. '.strip' → logprob: -14.62544059753418
    7. ',' → logprob: -15.50044059753418
    8. '()[' → logprob: -15.50044059753418
    9. ')' → logprob: -15.62544059753418
    10. '   ' → logprob: -16.00044059753418

Token 604: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2467547208070755
    2. ' return' → logprob: -2.1217546463012695
    3. 'return' → logprob: -2.9967546463012695
    4. '   ' → logprob: -3.4967546463012695
    5. ' def' → logprob: -4.4967546463012695
    6. '().' → logprob: -5.1217546463012695
    7. '()' → logprob: -7.1217546463012695
    8. 'split' → logprob: -8.49675464630127
    9. 'strip' → logprob: -8.99675464630127
    10. '()
' → logprob: -9.12175464630127

Token 605: ' div' (ID: 4223)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.02663419581949711
    2. 'rstrip' → logprob: -3.7766342163085938
    3. 'split' → logprob: -5.776634216308594
    4. 'return' → logprob: -8.526634216308594
    5. 'replace' → logprob: -10.151634216308594
    6. 'def' → logprob: -10.401634216308594
    7. ' strip' → logprob: -11.651634216308594
    8. '.strip' → logprob: -12.276634216308594
    9. 'sys' → logprob: -13.401634216308594
    10. '.rstrip' → logprob: -14.651634216308594

Token 606: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.02624247595667839
    2. 'iser' → logprob: -4.151242256164551
    3. 'ide' → logprob: -5.526242256164551
    4. 'ert' → logprob: -5.776242256164551
    5. 'erse' → logprob: -7.276242256164551
    6. 'er' → logprob: -7.401242256164551
    7. '().' → logprob: -7.776242256164551
    8. '=' → logprob: -8.15124225616455
    9. '()' → logprob: -8.52624225616455
    10. 'isez' → logprob: -8.65124225616455

Token 607: ' en' (ID: 469)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.25815659761428833
    2. '()' → logprob: -1.5081565380096436
    3. 'strip' → logprob: -5.133156776428223
    4. '.strip' → logprob: -9.758156776428223
    5. '()[' → logprob: -10.008156776428223
    6. '(strip' → logprob: -10.258156776428223
    7. 'split' → logprob: -10.508156776428223
    8. ' strip' → logprob: -10.758156776428223
    9. '()
' → logprob: -10.883156776428223
    10. ')' → logprob: -11.008156776428223

Token 608: ' sous' (ID: 14487)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.27123895287513733
    2. 'tokens' → logprob: -2.2712390422821045
    3. 'liste' → logprob: -2.2712390422821045
    4. 'str' → logprob: -3.8962390422821045
    5. 'une' → logprob: -5.896238803863525
    6. 'lst' → logprob: -6.771238803863525
    7. 'ent' → logprob: -7.146238803863525
    8. 'des' → logprob: -7.271238803863525
    9. 'chaine' → logprob: -7.271238803863525
    10. 'int' → logprob: -7.396238803863525

Token 609: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.3843836188316345
    2. '()' → logprob: -2.0093836784362793
    3. 'strings' → logprob: -2.7593836784362793
    4. 'str' → logprob: -3.3843836784362793
    5. 'def' → logprob: -3.5093836784362793
    6. 'chain' → logprob: -4.509383678436279
    7. 'chaine' → logprob: -4.634383678436279
    8. 'tokens' → logprob: -4.884383678436279
    9. 'tring' → logprob: -5.634383678436279
    10. 'string' → logprob: -5.759383678436279

Token 610: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.09716585278511047
    2. 'ines' → logprob: -2.597165822982788
    3. 'î' → logprob: -4.847166061401367
    4. 'r' → logprob: -5.097166061401367
    5. 'nes' → logprob: -5.972166061401367
    6. 'ins' → logprob: -7.472166061401367
    7. 'ine' → logprob: -8.597166061401367
    8. 'îne' → logprob: -9.097166061401367
    9. '```' → logprob: -9.222166061401367
    10. 'ces' → logprob: -9.722166061401367

Token 611: ' avec' (ID: 3937)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16035450994968414
    2. '().' → logprob: -1.910354495048523
    3. '=' → logprob: -10.160354614257812
    4. 'def' → logprob: -10.535354614257812
    5. '()
' → logprob: -11.160354614257812
    6. '()[' → logprob: -11.160354614257812
    7. '(),' → logprob: -12.035354614257812
    8. ')' → logprob: -12.285354614257812
    9. 'strip' → logprob: -12.410354614257812
    10. '();' → logprob: -12.660354614257812

Token 612: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.6488277912139893
    2. '()' → logprob: -0.8988277912139893
    3. ' split' → logprob: -4.02382755279541
    4. '().' → logprob: -4.27382755279541
    5. 'rstrip' → logprob: -4.64882755279541
    6. 'sys' → logprob: -5.39882755279541
    7. '()[' → logprob: -5.39882755279541
    8. 'strip' → logprob: -5.64882755279541
    9. '()
' → logprob: -5.89882755279541
    10. ' sys' → logprob: -5.89882755279541

Token 613: '(),
' (ID: 5757)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00023202638840302825
    2. '().' → logprob: -9.125231742858887
    3. '()
' → logprob: -9.125231742858887
    4. '(' → logprob: -12.500231742858887
    5. '(),' → logprob: -12.625231742858887
    6. '()[' → logprob: -12.875231742858887
    7. '()

' → logprob: -13.375231742858887
    8. 'def' → logprob: -14.125231742858887
    9. '()]' → logprob: -14.625231742858887
    10. ' ()' → logprob: -14.750231742858887

Token 614: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011640573851764202
    2. '   ' → logprob: -4.636640548706055
    3. ' def' → logprob: -6.511640548706055
    4. 'return' → logprob: -8.636640548706055
    5. '()' → logprob: -8.761640548706055
    6. 'lambda' → logprob: -10.511640548706055
    7. ' return' → logprob: -11.261640548706055
    8. '()
' → logprob: -12.011640548706055
    9. ' lambda' → logprob: -12.136640548706055
    10. '().' → logprob: -12.136640548706055

Token 615: ' chaque' (ID: 21194)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7372216582298279
    2. ' return' → logprob: -1.3622217178344727
    3. 'return' → logprob: -1.3622217178344727
    4. '   ' → logprob: -4.987221717834473
    5. ' def' → logprob: -6.362221717834473
    6. '()' → logprob: -8.237221717834473
    7. 'split' → logprob: -8.487221717834473
    8. ' ' → logprob: -8.987221717834473
    9. 'lambda' → logprob: -10.362221717834473
    10. '()
' → logprob: -10.362221717834473

Token 616: ' sous' (ID: 14487)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4410979449748993
    2. 'token' → logprob: -2.0660979747772217
    3. '_' → logprob: -2.1910979747772217
    4. ' token' → logprob: -2.9410979747772217
    5. '(' → logprob: -3.9410979747772217
    6. 'élé' → logprob: -4.191097736358643
    7. 's' → logprob: -4.816097736358643
    8. '_token' → logprob: -5.441097736358643
    9. 'int' → logprob: -5.816097736358643
    10. 'elem' → logprob: -6.441097736358643

Token 617: '-cha' (ID: 163177)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.038569126278162
    2. 'string' → logprob: -4.66356897354126
    3. 'def' → logprob: -5.41356897354126
    4. '()
' → logprob: -5.53856897354126
    5. 'chaine' → logprob: -6.03856897354126
    6. 'token' → logprob: -6.16356897354126
    7. '_str' → logprob: -6.28856897354126
    8. '_string' → logprob: -6.41356897354126
    9. 'part' → logprob: -6.53856897354126
    10. ' =' → logprob: -6.91356897354126

Token 618: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.00692730862647295
    2. 'ne' → logprob: -5.506927490234375
    3. 'ïne' → logprob: -6.256927490234375
    4. 'î' → logprob: -8.131927490234375
    5. 'ine' → logprob: -8.381927490234375
    6. 'rne' → logprob: -9.006927490234375
    7. 'chaine' → logprob: -9.631927490234375
    8. 'r' → logprob: -9.881927490234375
    9. 'înes' → logprob: -11.131927490234375
    10. 'íne' → logprob: -11.256927490234375

Token 619: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2858477532863617
    2. '()' → logprob: -1.785847783088684
    3. ' =' → logprob: -3.1608476638793945
    4. ')' → logprob: -4.0358476638793945
    5. '().' → logprob: -4.5358476638793945
    6. ',' → logprob: -6.0358476638793945
    7. '.' → logprob: -7.0358476638793945
    8. ' est' → logprob: -7.1608476638793945
    9. '()='' → logprob: -7.2858476638793945
    10. 'token' → logprob: -7.5358476638793945

Token 620: ' convert' (ID: 8452)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.447684645652771
    2. ' convert' → logprob: -1.072684645652771
    3. 'int' → logprob: -4.5726847648620605
    4. 'map' → logprob: -5.1976847648620605
    5. 'transform' → logprob: -6.8226847648620605
    6. ' map' → logprob: -7.1976847648620605
    7. ' transform' → logprob: -7.6976847648620605
    8. 'm' → logprob: -8.197684288024902
    9. 'con' → logprob: -8.572684288024902
    10. ' m' → logprob: -9.697684288024902

Token 621: 'ie' (ID: 396)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0029816252645105124
    2. '().' → logprob: -7.127981662750244
    3. '(' → logprob: -7.627981662750244
    4. 'ue' → logprob: -7.877981662750244
    5. 'e' → logprob: -8.002981185913086
    6. '()]' → logprob: -9.002981185913086
    7. 'ée' → logprob: -9.377981185913086
    8. '()(' → logprob: -9.377981185913086
    9. '()[' → logprob: -9.502981185913086
    10. 'é' → logprob: -9.752981185913086

Token 622: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005601784214377403
    2. '(' → logprob: -5.63060188293457
    3. 'int' → logprob: -7.25560188293457
    4. '(lambda' → logprob: -7.38060188293457
    5. '(int' → logprob: -8.75560188293457
    6. '().' → logprob: -8.88060188293457
    7. 'list' → logprob: -9.75560188293457
    8. 'to' → logprob: -10.00560188293457
    9. '()]' → logprob: -10.13060188293457
    10. '()[' → logprob: -10.25560188293457

Token 623: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0024762547109276056
    2. ' int' → logprob: -6.002476215362549
    3. 'ent' → logprob: -15.127476692199707
    4. '=int' → logprob: -15.377476692199707
    5. '(int' → logprob: -16.00247573852539
    6. '```' → logprob: -17.12747573852539
    7. '<int' → logprob: -17.50247573852539
    8. '	int' → logprob: -18.50247573852539
    9. '[int' → logprob: -18.62747573852539
    10. ']int' → logprob: -18.75247573852539

Token 624: ' avec' (ID: 3937)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008515877649188042
    2. '(),' → logprob: -5.50851583480835
    3. ',' → logprob: -6.13351583480835
    4. 'def' → logprob: -6.75851583480835
    5. ')' → logprob: -7.38351583480835
    6. '()
' → logprob: -8.633516311645508
    7. '().' → logprob: -9.508516311645508
    8. '();' → logprob: -10.258516311645508
    9. '())' → logprob: -10.258516311645508
    10. '());' → logprob: -10.258516311645508

Token 625: ' map' (ID: 4014)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005512277130037546
    2. 'map' → logprob: -5.255512237548828
    3. ' int' → logprob: -8.255512237548828
    4. ' map' → logprob: -11.130512237548828
    5. '(int' → logprob: -12.630512237548828
    6. '```' → logprob: -14.630512237548828
    7. '`' → logprob: -17.255512237548828
    8. '
' → logprob: -17.380512237548828
    9. 'lambda' → logprob: -17.380512237548828
    10. ' ' → logprob: -17.380512237548828

Token 626: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0014745104126632214
    2. 'int' → logprob: -7.376474380493164
    3. '(I' → logprob: -7.751474380493164
    4. 'def' → logprob: -8.626474380493164
    5. '(lambda' → logprob: -9.001474380493164
    6. 'I' → logprob: -9.876474380493164
    7. '=int' → logprob: -10.876474380493164
    8. ',int' → logprob: -11.251474380493164
    9. 'return' → logprob: -11.251474380493164
    10. ',' → logprob: -12.126474380493164

Token 627: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3716409206390381
    2. '),' → logprob: -1.496640920639038
    3. ',' → logprob: -2.496640920639038
    4. '))' → logprob: -5.621641159057617
    5. ')),' → logprob: -8.871641159057617
    6. ').' → logprob: -9.871641159057617
    7. ')))' → logprob: -9.996641159057617
    8. '(' → logprob: -10.246641159057617
    9. ');' → logprob: -10.246641159057617
    10. '),
' → logprob: -10.496641159057617

Token 628: ' ...' (ID: 2550)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.006845495663583279
    2. ')' → logprob: -5.631845474243164
    3. '),' → logprob: -6.256845474243164
    4. ' sys' → logprob: -7.006845474243164
    5. 'str' → logprob: -8.756845474243164
    6. 'input' → logprob: -8.756845474243164
    7. ')),' → logprob: -10.131845474243164
    8. 'split' → logprob: -11.006845474243164
    9. '))' → logprob: -11.256845474243164
    10. ').' → logprob: -11.756845474243164

Token 629: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10617251694202423
    2. '))' → logprob: -2.481172561645508
    3. '())' → logprob: -4.856172561645508
    4. '),' → logprob: -4.981172561645508
    5. ').' → logprob: -7.231172561645508
    6. ')),' → logprob: -7.606172561645508
    7. '().' → logprob: -8.481172561645508
    8. ')))' → logprob: -8.606172561645508
    9. '   ' → logprob: -9.106172561645508
    10. '()))' → logprob: -9.106172561645508

Token 630: ' puis' (ID: 18766)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05523101985454559
    2. 'return' → logprob: -3.1802310943603516
    3. ' return' → logprob: -5.055231094360352
    4. ' def' → logprob: -5.555231094360352
    5. '
' → logprob: -7.555231094360352
    6. '   ' → logprob: -7.805231094360352
    7. ' puis' → logprob: -8.055231094360352
    8. ' and' → logprob: -8.805231094360352
    9. 'lambda' → logprob: -8.930231094360352
    10. ')' → logprob: -9.180231094360352

Token 631: ' tout' (ID: 5501)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5002675652503967
    2. 'list' → logprob: -1.000267505645752
    3. ' return' → logprob: -3.750267505645752
    4. ' list' → logprob: -6.250267505645752
    5. 'def' → logprob: -8.50026798248291
    6. 'liste' → logprob: -9.12526798248291
    7. '
' → logprob: -10.62526798248291
    8. ' retourne' → logprob: -11.25026798248291
    9. 'returned' → logprob: -11.37526798248291
    10. ' retour' → logprob: -11.62526798248291

Token 632: ' est' (ID: 893)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.9302712678909302
    2. 'list' → logprob: -1.1802712678909302
    3. ' est' → logprob: -2.0552711486816406
    4. 'return' → logprob: -2.4302711486816406
    5. 'est' → logprob: -4.305271148681641
    6. ' return' → logprob: -4.680271148681641
    7. ' map' → logprob: -4.805271148681641
    8. ')' → logprob: -4.930271148681641
    9. '_list' → logprob: -5.180271148681641
    10. 's' → logprob: -5.305271148681641

Token 633: ' convert' (ID: 8452)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03723497316241264
    2. 'return' → logprob: -3.5372350215911865
    3. ' list' → logprob: -5.662234783172607
    4. 'returned' → logprob: -6.662234783172607
    5. ' return' → logprob: -7.412234783172607
    6. 'ret' → logprob: -7.537234783172607
    7. 'converted' → logprob: -7.912234783172607
    8. 'liste' → logprob: -8.287235260009766
    9. ' retourn' → logprob: -8.412235260009766
    10. 'wrapped' → logprob: -8.787235260009766

Token 634: 'i' (ID: 72)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -1.029645323753357
    2. 'list' → logprob: -1.154645323753357
    3. 'i' → logprob: -1.904645323753357
    4. 'is' → logprob: -3.2796454429626465
    5. 'ir' → logprob: -3.5296454429626465
    6. 'it' → logprob: -3.9046454429626465
    7. 'en' → logprob: -4.0296454429626465
    8. 'e' → logprob: -4.5296454429626465
    9. '=list' → logprob: -5.0296454429626465
    10. 'à' → logprob: -5.0296454429626465

Token 635: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.02171398513019085
    2. ' en' → logprob: -3.896713972091675
    3. 'list' → logprob: -6.771714210510254
    4. ' list' → logprob: -11.646714210510254
    5. '```' → logprob: -13.021714210510254
    6. '()' → logprob: -13.146714210510254
    7. 'into' → logprob: -13.271714210510254
    8. 'def' → logprob: -13.271714210510254
    9. 'in' → logprob: -13.646714210510254
    10. '(en' → logprob: -13.896714210510254

Token 636: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.700132997939363e-05
    2. ' list' → logprob: -11.000017166137695
    3. 'liste' → logprob: -15.500017166137695
    4. 'a' → logprob: -18.375017166137695
    5. 'lista' → logprob: -19.750017166137695
    6. 'List' → logprob: -20.250017166137695
    7. 'lst' → logprob: -20.500017166137695
    8. 'li' → logprob: -20.750017166137695
    9. '```' → logprob: -21.250017166137695
    10. 'lis' → logprob: -21.625017166137695

Token 637: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17463445663452148
    2. '()' → logprob: -1.9246344566345215
    3. '()
' → logprob: -5.2996344566345215
    4. '   ' → logprob: -5.2996344566345215
    5. '(list' → logprob: -6.1746344566345215
    6. 'return' → logprob: -6.7996344566345215
    7. ' def' → logprob: -8.29963493347168
    8. 'list' → logprob: -8.54963493347168
    9. '```' → logprob: -8.92463493347168
    10. '(' → logprob: -9.92463493347168

Token 638: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.039161961525678635
    2. ')' → logprob: -3.2891619205474854
    3. ' list' → logprob: -7.4141621589660645
    4. ').' → logprob: -7.7891621589660645
    5. '(list' → logprob: -10.539161682128906
    6. 'def' → logprob: -11.789161682128906
    7. 'int' → logprob: -11.789161682128906
    8. ' )' → logprob: -11.914161682128906
    9. '):' → logprob: -12.039161682128906
    10. '()' → logprob: -12.289161682128906

Token 639: '(...' (ID: 45935)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13720965385437012
    2. '(map' → logprob: -2.13720965385437
    3. ').' → logprob: -5.387209892272949
    4. '())' → logprob: -5.762209892272949
    5. '()' → logprob: -7.262209892272949
    6. '(...)' → logprob: -8.01220989227295
    7. '(...' → logprob: -8.13720989227295
    8. ')...' → logprob: -8.76220989227295
    9. '(' → logprob: -8.88720989227295
    10. '(sys' → logprob: -8.88720989227295

Token 640: ')).
' (ID: 82227)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.42957815527915955
    2. ')' → logprob: -1.054578185081482
    3. ')))' → logprob: -7.9295783042907715
    4. ').' → logprob: -8.304577827453613
    5. ')).' → logprob: -9.054577827453613
    6. '())' → logprob: -10.429577827453613
    7. '()))' → logprob: -10.554577827453613
    8. ')...' → logprob: -10.929577827453613
    9. ' )' → logprob: -11.179577827453613
    10. ')),' → logprob: -11.429577827453613

Token 641: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0280383548888494e-06
    2. ' def' → logprob: -14.125000953674316
    3. '```' → logprob: -15.875000953674316
    4. '
' → logprob: -17.250001907348633
    5. ':def' → logprob: -18.625001907348633
    6. 'return' → logprob: -19.500001907348633
    7. ':' → logprob: -19.750001907348633
    8. '\' → logprob: -20.500001907348633
    9. '()
' → logprob: -20.750001907348633
    10. '()' → logprob: -20.750001907348633

Token 642: ' Cela' (ID: 44403)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.2200749754119897e-06
    2. ' def' → logprob: -13.500001907348633
    3. 'return' → logprob: -14.625001907348633
    4. '
' → logprob: -15.125001907348633
    5. ':' → logprob: -18.375001907348633
    6. '```' → logprob: -18.375001907348633
    7. ':def' → logprob: -18.625001907348633
    8. '   ' → logprob: -20.000001907348633
    9. '[]' → logprob: -20.250001907348633
    10. '    
' → logprob: -20.250001907348633

Token 643: ' est' (ID: 893)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8000208735466003
    2. ' permet' → logprob: -0.8000208735466003
    3. 'return' → logprob: -3.425020933151245
    4. ' return' → logprob: -3.550020933151245
    5. ' retourne' → logprob: -4.300020694732666
    6. ' est' → logprob: -4.675020694732666
    7. ' continue' → logprob: -5.425020694732666
    8. ' def' → logprob: -6.175020694732666
    9. 'continue' → logprob: -6.425020694732666
    10. ':' → logprob: -6.425020694732666

Token 644: ' utile' (ID: 68237)
  Prédit: ' utilisé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.6394016146659851
    2. 'def' → logprob: -1.5144016742706299
    3. ' souvent' → logprob: -2.51440167427063
    4. ' utile' → logprob: -2.63940167427063
    5. 'util' → logprob: -2.76440167427063
    6. ' utilisée' → logprob: -4.139401435852051
    7. ' très' → logprob: -5.514401435852051
    8. 'utile' → logprob: -5.514401435852051
    9. ' used' → logprob: -6.514401435852051
    10. ' généralement' → logprob: -6.639401435852051

Token 645: ' pour' (ID: 1930)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05572509765625
    2. 'for' → logprob: -3.93072509765625
    3. ' pour' → logprob: -4.43072509765625
    4. 'def' → logprob: -4.55572509765625
    5. '(
' → logprob: -5.68072509765625
    6. '(' → logprob: -6.05572509765625
    7. '()
' → logprob: -6.05572509765625
    8. ' for' → logprob: -6.18072509765625
    9. 'pour' → logprob: -6.80572509765625
    10. 'de' → logprob: -9.18072509765625

Token 646: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.4728749692440033
    2. 'l' → logprob: -1.3478749990463257
    3. 'r' → logprob: -3.097874879837036
    4. 'la' → logprob: -3.722874879837036
    5. 'li' → logprob: -4.472875118255615
    6. ' la' → logprob: -4.722875118255615
    7. ' obtenir' → logprob: -5.222875118255615
    8. ' récupérer' → logprob: -5.222875118255615
    9. 'ob' → logprob: -5.847875118255615
    10. 'Lire' → logprob: -6.347875118255615

Token 647: ' une' (ID: 2463)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.16237851977348328
    2. '()' → logprob: -2.2873785495758057
    3. '[]' → logprob: -3.6623785495758057
    4. 'la' → logprob: -4.912378311157227
    5. 'une' → logprob: -5.787378311157227
    6. '[:]' → logprob: -5.912378311157227
    7. '[' → logprob: -6.287378311157227
    8. 'l' → logprob: -6.912378311157227
    9. '(list' → logprob: -7.037378311157227
    10. ' list' → logprob: -7.037378311157227

Token 648: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8623338937759399
    2. 'liste' → logprob: -1.48733389377594
    3. 'ligne' → logprob: -2.4873337745666504
    4. ' line' → logprob: -2.8623337745666504
    5. ' list' → logprob: -3.1123337745666504
    6. '()' → logprob: -3.2373337745666504
    7. 'line' → logprob: -3.4873337745666504
    8. 'l' → logprob: -3.6123337745666504
    9. 's' → logprob: -4.11233377456665
    10. '[]' → logprob: -4.23733377456665

Token 649: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0038449708372354507
    2. 'of' → logprob: -6.378844738006592
    3. '(' → logprob: -6.878844738006592
    4. 'def' → logprob: -8.12884521484375
    5. ' of' → logprob: -8.12884521484375
    6. '(...)' → logprob: -9.37884521484375
    7. '[]' → logprob: -9.50384521484375
    8. '[' → logprob: -9.62884521484375
    9. 's' → logprob: -10.12884521484375
    10. '()[' → logprob: -10.62884521484375

Token 650: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7136783003807068
    2. 'inte' → logprob: -1.8386783599853516
    3. 'int' → logprob: -1.9636783599853516
    4. 'ints' → logprob: -2.3386783599853516
    5. 'n' → logprob: -3.0886783599853516
    6. '(int' → logprob: -3.7136783599853516
    7. ' ent' → logprob: -3.9636783599853516
    8. ''ent' → logprob: -4.588678359985352
    9. ' integers' → logprob: -4.838678359985352
    10. '’ent' → logprob: -6.463678359985352

Token 651: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.725793719291687
    2. 'iers' → logprob: -0.725793719291687
    3. 'ent' → logprob: -4.225793838500977
    4. 'te' → logprob: -4.975793838500977
    5. 'ières' → logprob: -5.725793838500977
    6. 'ter' → logprob: -6.475793838500977
    7. 'ters' → logprob: -7.100793838500977
    8. 'ti' → logprob: -7.475793838500977
    9. 'e' → logprob: -7.850793838500977
    10. 'ière' → logprob: -7.850793838500977

Token 652: ' sur' (ID: 1512)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015585471410304308
    2. 'def' → logprob: -6.501558780670166
    3. '()
' → logprob: -10.251558303833008
    4. ' ()' → logprob: -12.001558303833008
    5. '().' → logprob: -12.001558303833008
    6. '()

' → logprob: -13.626558303833008
    7. ')' → logprob: -13.626558303833008
    8. '();' → logprob: -14.001558303833008
    9. '())' → logprob: -14.251558303833008
    10. '()]' → logprob: -14.251558303833008

Token 653: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.2141354084014893
    2. ')' → logprob: -1.4641354084014893
    3. 'une' → logprob: -1.9641354084014893
    4. '()' → logprob: -2.0891354084014893
    5. 'l' → logprob: -2.5891354084014893
    6. '[]' → logprob: -2.5891354084014893
    7. 'e' → logprob: -3.9641354084014893
    8. '```' → logprob: -5.33913516998291
    9. 'sys' → logprob: -5.33913516998291
    10. ''une' → logprob: -5.46413516998291

Token 654: ' seule' (ID: 41983)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.5805206894874573
    2. 'single' → logprob: -0.9555206894874573
    3. ' single' → logprob: -4.0805206298828125
    4. 'line' → logprob: -4.0805206298828125
    5. 'l' → logprob: -4.3305206298828125
    6. ' seule' → logprob: -6.0805206298828125
    7. ' ligne' → logprob: -6.3305206298828125
    8. '()' → logprob: -6.8305206298828125
    9. 'se' → logprob: -6.9555206298828125
    10. ' line' → logprob: -7.0805206298828125

Token 655: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.5248166918754578
    2. 'ligne' → logprob: -0.8998166918754578
    3. ' line' → logprob: -7.274816513061523
    4. 'line' → logprob: -7.649816513061523
    5. 'l' → logprob: -7.649816513061523
    6. ' ' → logprob: -12.399816513061523
    7. 'entrée' → logprob: -12.399816513061523
    8. ')' → logprob: -12.399816513061523
    9. ' lignes' → logprob: -12.649816513061523
    10. 'input' → logprob: -13.024816513061523

Token 656: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03988318890333176
    2. 'def' → logprob: -3.2898831367492676
    3. '()
' → logprob: -7.039883136749268
    4. ')' → logprob: -7.539883136749268
    5. '   ' → logprob: -8.039883613586426
    6. '().' → logprob: -10.164883613586426
    7. '())' → logprob: -10.414883613586426
    8. 'return' → logprob: -11.539883613586426
    9. '.' → logprob: -11.914883613586426
    10. ' ()' → logprob: -12.164883613586426

Token 657: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -17.5
    3. '
' → logprob: -19.125
    4. '```' → logprob: -20.5
    5. '()
' → logprob: -21.125
    6. 'return' → logprob: -21.25
    7. ':def' → logprob: -22.0
    8. '()' → logprob: -22.375
    9. '(def' → logprob: -23.25
    10. '[]
' → logprob: -23.375

Token 658: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.00019853383128065616
    2. 'L' → logprob: -8.875198364257812
    3. ' LI' → logprob: -9.750198364257812
    4. '
' → logprob: -16.250198364257812
    5. 'def' → logprob: -16.250198364257812
    6. 'Li' → logprob: -16.500198364257812
    7. 'LA' → logprob: -17.625198364257812
    8. 'LS' → logprob: -17.875198364257812
    9. ' ' → logprob: -18.000198364257812
    10. ' L' → logprob: -18.000198364257812

Token 659: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07890686392784119
    2. '():
' → logprob: -2.578906774520874
    3. ' ():' → logprob: -11.578907012939453
    4. '()' → logprob: -12.328907012939453
    5. '():
' → logprob: -12.703907012939453
    6. '():

' → logprob: -15.203907012939453
    7. ' ()' → logprob: -18.703907012939453
    8. 'def' → logprob: -18.703907012939453
    9. '(' → logprob: -19.203907012939453
    10. '()):
' → logprob: -19.953907012939453

Token 660: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01753844879567623
    2. '   ' → logprob: -5.142538547515869
    3. '():
' → logprob: -5.517538547515869
    4. 'return' → logprob: -5.642538547515869
    5. ':' → logprob: -5.892538547515869
    6. '()' → logprob: -6.892538547515869
    7. '):' → logprob: -9.392538070678711
    8. ':return' → logprob: -9.892538070678711
    9. ':
' → logprob: -10.642538070678711
    10. ' return' → logprob: -10.642538070678711

Token 661: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0002584785979706794
    2. '   ' → logprob: -8.750258445739746
    3. ' return' → logprob: -9.250258445739746
    4. 'list' → logprob: -12.500258445739746
    5. '	return' → logprob: -17.500259399414062
    6. '  ' → logprob: -18.125259399414062
    7. ' ' → logprob: -18.750259399414062
    8. 'def' → logprob: -19.625259399414062
    9. '    ' → logprob: -20.375259399414062
    10. '
' → logprob: -20.500259399414062

Token 662: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.5491004129871726e-05
    2. ' list' → logprob: -10.000045776367188
    3. '[list' → logprob: -21.125045776367188
    4. '	list' → logprob: -22.375045776367188
    5. 'List' → logprob: -23.750045776367188
    6. '(list' → logprob: -24.750045776367188
    7. '=list' → logprob: -24.750045776367188
    8. '.list' → logprob: -25.000045776367188
    9. '   ' → logprob: -25.000045776367188
    10. 'map' → logprob: -25.750045776367188

Token 663: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.625001907348633
    3. 'map' → logprob: -14.875001907348633
    4. ' map' → logprob: -18.750001907348633
    5. '.map' → logprob: -19.375001907348633
    6. '(int' → logprob: -19.500001907348633
    7. '	map' → logprob: -20.125001907348633
    8. ',map' → logprob: -20.625001907348633
    9. '_map' → logprob: -21.750001907348633
    10. '(
' → logprob: -21.875001907348633

Token 664: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00047416388406418264
    2. 'int' → logprob: -7.750473976135254
    3. '(' → logprob: -10.125473976135254
    4. '=int' → logprob: -13.500473976135254
    5. '<int' → logprob: -14.500473976135254
    6. '(
' → logprob: -14.500473976135254
    7. '[int' → logprob: -14.625473976135254
    8. ' int' → logprob: -15.125473976135254
    9. ',int' → logprob: -16.25047492980957
    10. ':int' → logprob: -16.75047492980957

Token 665: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007066755089908838
    2. '(sys' → logprob: -5.00706672668457
    3. 'sys' → logprob: -8.13206672668457
    4. ' ,' → logprob: -10.25706672668457
    5. '=sys' → logprob: -11.63206672668457
    6. ',input' → logprob: -12.13206672668457
    7. ' sys' → logprob: -12.50706672668457
    8. '(' → logprob: -13.13206672668457
    9. '	sys' → logprob: -14.00706672668457
    10. ',(' → logprob: -14.00706672668457

Token 666: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -7.941850526549388e-06
    2. ' sys' → logprob: -11.750007629394531
    3. '(sys' → logprob: -18.37500762939453
    4. 'input' → logprob: -18.50000762939453
    5. '=sys' → logprob: -19.75000762939453
    6. '	sys' → logprob: -19.87500762939453
    7. '   ' → logprob: -20.75000762939453
    8. '.sys' → logprob: -21.87500762939453
    9. ' ' → logprob: -22.62500762939453
    10. 'Sys' → logprob: -22.87500762939453

Token 667: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.7835754988482222e-05
    2. 'stdin' → logprob: -11.125018119812012
    3. '(stdin' → logprob: -13.625018119812012
    4. '.' → logprob: -14.000018119812012
    5. '.readline' → logprob: -14.250018119812012
    6. '.stdout' → logprob: -16.125017166137695
    7. '.std' → logprob: -16.250017166137695
    8. '.sys' → logprob: -17.750017166137695
    9. ' stdin' → logprob: -17.750017166137695
    10. '=sys' → logprob: -17.875017166137695

Token 668: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -8.061054359131958e-06
    2. '.stdin' → logprob: -11.750007629394531
    3. '.' → logprob: -15.625007629394531
    4. 'stdin' → logprob: -18.00000762939453
    5. '.readlines' → logprob: -18.37500762939453
    6. ' readline' → logprob: -19.75000762939453
    7. ' .' → logprob: -20.37500762939453
    8. '().' → logprob: -20.62500762939453
    9. '.read' → logprob: -20.87500762939453
    10. '.stdout' → logprob: -21.75000762939453

Token 669: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.8889261304575484e-06
    2. '.readline' → logprob: -12.625003814697266
    3. '()' → logprob: -14.750003814697266
    4. ' ().' → logprob: -16.625003814697266
    5. '()))' → logprob: -17.750003814697266
    6. '.strip' → logprob: -19.125003814697266
    7. '(' → logprob: -19.500003814697266
    8. '.rstrip' → logprob: -19.750003814697266
    9. ' readline' → logprob: -20.375003814697266
    10. '()[' → logprob: -20.625003814697266

Token 670: 'split' (ID: 13627)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.19828449189662933
    2. 'strip' → logprob: -1.9482845067977905
    3. 'rstrip' → logprob: -3.448284387588501
    4. 'split' → logprob: -5.19828462600708
    5. 'decode' → logprob: -11.198284149169922
    6. 'replace' → logprob: -13.448284149169922
    7. ' readline' → logprob: -13.448284149169922
    8. '.readline' → logprob: -14.073284149169922
    9. 'readonly' → logprob: -14.198284149169922
    10. 'rs' → logprob: -14.323284149169922

Token 671: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.003561823396012187
    2. '()' → logprob: -5.878561973571777
    3. '))' → logprob: -7.253561973571777
    4. '()))
' → logprob: -10.753561973571777
    5. '())' → logprob: -11.003561973571777
    6. '(' → logprob: -12.378561973571777
    7. '()));' → logprob: -12.753561973571777
    8. '())))' → logprob: -13.628561973571777
    9. '()))

' → logprob: -14.253561973571777
    10. '()))
' → logprob: -14.253561973571777

Token 672: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27746015787124634
    2. '#' → logprob: -2.2774600982666016
    3. '
' → logprob: -2.4024600982666016
    4. '<|end|>' → logprob: -3.7774600982666016
    5. '\' → logprob: -4.527460098266602
    6. '\n' → logprob: -5.027460098266602
    7. '

' → logprob: -5.777460098266602
    8. '```' → logprob: -6.402460098266602
    9. 'class' → logprob: -6.527460098266602
    10. '#!/' → logprob: -7.652460098266602

Token 673: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.077528764260933e-05
    2. '#' → logprob: -9.500081062316895
    3. 'class' → logprob: -12.500081062316895
    4. 'n' → logprob: -13.750081062316895
    5. 'N' → logprob: -14.000081062316895
    6. 'd' → logprob: -15.750081062316895
    7. 'if' → logprob: -17.250080108642578
    8. ' def' → logprob: -17.250080108642578
    9. 'import' → logprob: -17.625080108642578
    10. '
' → logprob: -17.750080108642578

Token 674: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0001649220648687333
    2. '#' → logprob: -9.125164985656738
    3. 'fin' → logprob: -10.250164985656738
    4. 'fn' → logprob: -11.625164985656738
    5. 'def' → logprob: -11.750164985656738
    6. 'ff' → logprob: -13.625164985656738
    7. '```' → logprob: -14.125164985656738
    8. 'fc' → logprob: -14.875164985656738
    9. 'fi' → logprob: -15.000164985656738
    10. 'fl' → logprob: -15.125164985656738

Token 675: 'ition' (ID: 868)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0016026983503252268
    2. 'f' → logprob: -7.126602649688721
    3. ' def' → logprob: -7.876602649688721
    4. 'inition' → logprob: -9.126603126525879
    5. '#' → logprob: -9.251603126525879
    6. 'ition' → logprob: -9.501603126525879
    7. 'ir' → logprob: -10.001603126525879
    8. 'tion' → logprob: -10.001603126525879
    9. '_def' → logprob: -11.126603126525879
    10. 'ction' → logprob: -11.626603126525879

Token 676: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0030252449214458466
    2. ' def' → logprob: -6.753025054931641
    3. 'class' → logprob: -7.003025054931641
    4. '_' → logprob: -8.12802505493164
    5. 'de' → logprob: -8.37802505493164
    6. ' of' → logprob: -8.75302505493164
    7. 'd' → logprob: -9.62802505493164
    8. '#' → logprob: -10.00302505493164
    9. ' de' → logprob: -10.25302505493164
    10. 'of' → logprob: -10.75302505493164

Token 677: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016213489696383476
    2. 'main' → logprob: -5.766213417053223
    3. ' main' → logprob: -5.766213417053223
    4. 'l' → logprob: -6.141213417053223
    5. ' def' → logprob: -6.141213417053223
    6. 'n' → logprob: -6.141213417053223
    7. ' la' → logprob: -6.766213417053223
    8. 'class' → logprob: -7.516213417053223
    9. 'N' → logprob: -8.016213417053223
    10. 'I' → logprob: -8.516213417053223

Token 678: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01549975574016571
    2. 'main' → logprob: -4.515499591827393
    3. ' main' → logprob: -5.640499591827393
    4. 'class' → logprob: -7.390499591827393
    5. ' def' → logprob: -9.14050006866455
    6. '#' → logprob: -9.26550006866455
    7. 'd' → logprob: -10.89050006866455
    8. 'n' → logprob: -11.51550006866455
    9. 'Main' → logprob: -11.76550006866455
    10. 'import' → logprob: -12.51550006866455

Token 679: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08371204882860184
    2. ' def' → logprob: -2.708712100982666
    3. ' main' → logprob: -4.708712100982666
    4. 'solve' → logprob: -6.333712100982666
    5. 'main' → logprob: -6.583712100982666
    6. ' solve' → logprob: -6.833712100982666
    7. 's' → logprob: -9.833711624145508
    8. 'D' → logprob: -9.833711624145508
    9. 'print' → logprob: -9.958711624145508
    10. 'S' → logprob: -10.333711624145508

Token 680: 'ijkstra' (ID: 124290)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -1.2113979209971149e-05
    2. 'éf' → logprob: -12.125012397766113
    3. 'efi' → logprob: -12.875012397766113
    4. 'e' → logprob: -12.875012397766113
    5. 'efs' → logprob: -13.750012397766113
    6. 'efe' → logprob: -15.875012397766113
    7. 'eff' → logprob: -16.375011444091797
    8. 'EF' → logprob: -16.500011444091797
    9. 'efa' → logprob: -16.625011444091797
    10. 'еф' → logprob: -17.375011444091797

Token 681: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011895040050148964
    2. '(' → logprob: -4.636895179748535
    3. '(def' → logprob: -6.636895179748535
    4. '(
' → logprob: -8.136895179748535
    5. '(graph' → logprob: -8.636895179748535
    6. '():' → logprob: -9.136895179748535
    7. '(n' → logprob: -9.386895179748535
    8. '(s' → logprob: -10.011895179748535
    9. ' def' → logprob: -10.636895179748535
    10. ':' → logprob: -10.886895179748535

Token 682: ' calc' (ID: 25691)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10274168848991394
    2. '(graph' → logprob: -2.3527417182922363
    3. '(s' → logprob: -7.102741718292236
    4. '(start' → logprob: -7.227741718292236
    5. '(n' → logprob: -8.352741241455078
    6. '(source' → logprob: -8.477741241455078
    7. 'ijkstra' → logprob: -8.977741241455078
    8. '(sys' → logprob: -9.352741241455078
    9. '(G' → logprob: -10.352741241455078
    10. ' def' → logprob: -10.477741241455078

Token 683: 'ule' (ID: 1601)
  Prédit: 'ul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -0.09386233240365982
    2. 'ule' → logprob: -2.593862295150757
    3. 'def' → logprob: -5.093862533569336
    4. 'ulte' → logprob: -5.218862533569336
    5. 'ulate' → logprob: -6.593862533569336
    6. 'ult' → logprob: -7.468862533569336
    7. 'ulé' → logprob: -7.593862533569336
    8. '#' → logprob: -8.593862533569336
    9. 'u' → logprob: -8.968862533569336
    10. 'ute' → logprob: -9.093862533569336

Token 684: ' les' (ID: 1341)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13991785049438477
    2. '(graph' → logprob: -2.3899178504943848
    3. '(source' → logprob: -4.264917850494385
    4. '(n' → logprob: -4.764917850494385
    5. '(' → logprob: -5.639917850494385
    6. '(start' → logprob: -5.764917850494385
    7. 'dist' → logprob: -6.264917850494385
    8. ' distances' → logprob: -6.639917850494385
    9. '(s' → logprob: -7.014917850494385
    10. '```' → logprob: -7.139917850494385

Token 685: ' plus' (ID: 2932)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.8376579880714417
    2. ' distances' → logprob: -0.9626579880714417
    3. 'plus' → logprob: -2.587657928466797
    4. 'dist' → logprob: -3.337657928466797
    5. ' plus' → logprob: -3.462657928466797
    6. 'short' → logprob: -3.712657928466797
    7. '_short' → logprob: -4.587657928466797
    8. 'd' → logprob: -6.087657928466797
    9. 'distance' → logprob: -6.462657928466797
    10. 'Shortest' → logprob: -7.212657928466797

Token 686: ' courts' (ID: 33374)
  Prédit: 'cour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cour' → logprob: -0.002840537577867508
    2. ' courts' → logprob: -6.377840518951416
    3. ' cour' → logprob: -7.127840518951416
    4. 'court' → logprob: -8.377840995788574
    5. 'short' → logprob: -10.002840995788574
    6. 'cours' → logprob: -11.377840995788574
    7. 'import' → logprob: -11.752840995788574
    8. '```' → logprob: -11.752840995788574
    9. ' court' → logprob: -11.877840995788574
    10. 'plus' → logprob: -12.377840995788574

Token 687: ' chemins' (ID: 192063)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0762948989868164
    2. '_paths' → logprob: -1.7012948989868164
    3. ' chemins' → logprob: -1.8262948989868164
    4. '_dist' → logprob: -2.2012948989868164
    5. '_path' → logprob: -2.5762948989868164
    6. '_che' → logprob: -2.8262948989868164
    7. ' distances' → logprob: -3.0762948989868164
    8. ' paths' → logprob: -5.201294898986816
    9. 'dist' → logprob: -5.326294898986816
    10. '_distance' → logprob: -5.701294898986816

Token 688: ' depuis' (ID: 16277)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40502142906188965
    2. '(graph' → logprob: -1.5300214290618896
    3. 'from' → logprob: -2.9050214290618896
    4. '(' → logprob: -3.4050214290618896
    5. '(s' → logprob: -4.530021667480469
    6. '(n' → logprob: -4.655021667480469
    7. '(u' → logprob: -6.780021667480469
    8. '(
' → logprob: -7.405021667480469
    9. '(node' → logprob: -7.405021667480469
    10. '(G' → logprob: -7.655021667480469

Token 689: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8545511960983276
    2. 'un' → logprob: -1.4795511960983276
    3. 'source' → logprob: -1.9795511960983276
    4. 'le' → logprob: -2.104551315307617
    5. 'la' → logprob: -3.479551315307617
    6. '(source' → logprob: -3.604551315307617
    7. 'une' → logprob: -4.979551315307617
    8. 'start' → logprob: -4.979551315307617
    9. 'src' → logprob: -6.229551315307617
    10. 's' → logprob: -6.229551315307617

Token 690: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03755846247076988
    2. '(graph' → logprob: -3.9125585556030273
    3. '(source' → logprob: -4.537558555603027
    4. '(start' → logprob: -5.412558555603027
    5. 'graph' → logprob: -7.787558555603027
    6. 'source' → logprob: -8.287558555603027
    7. '(src' → logprob: -8.412558555603027
    8. '(n' → logprob: -8.412558555603027
    9. '#' → logprob: -8.787558555603027
    10. '(s' → logprob: -8.912558555603027

Token 691: ' un' (ID: 537)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15658320486545563
    2. 'source' → logprob: -2.656583309173584
    3. 'start' → logprob: -3.031583309173584
    4. 'src' → logprob: -4.781583309173584
    5. '(start' → logprob: -5.031583309173584
    6. '(source' → logprob: -5.281583309173584
    7. 'graph' → logprob: -6.156583309173584
    8. '(s' → logprob: -6.781583309173584
    9. '#' → logprob: -7.156583309173584
    10. 's' → logprob: -7.406583309173584

Token 692: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.06296360492706299
    2. 'som' → logprob: -3.3129634857177734
    3. ' point' → logprob: -4.687963485717773
    4. ' som' → logprob: -5.187963485717773
    5. ' node' → logprob: -5.937963485717773
    6. ' source' → logprob: -6.687963485717773
    7. 'point' → logprob: -6.687963485717773
    8. 'graph' → logprob: -7.312963485717773
    9. ' graph' → logprob: -7.312963485717773
    10. 's' → logprob: -7.312963485717773

Token 693: ' source' (ID: 4256)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07925547659397125
    2. '(s' → logprob: -2.9542555809020996
    3. '(source' → logprob: -4.5792555809021
    4. 's' → logprob: -5.4542555809021
    5. 'source' → logprob: -5.4542555809021
    6. '(graph' → logprob: -6.4542555809021
    7. '(
' → logprob: -6.8292555809021
    8. '(' → logprob: -7.5792555809021
    9. '(start' → logprob: -8.079255104064941
    10. '(src' → logprob: -8.329255104064941

Token 694: ' s' (ID: 265)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05021364241838455
    2. '(graph' → logprob: -3.550213575363159
    3. '(s' → logprob: -4.800213813781738
    4. '(' → logprob: -5.050213813781738
    5. '(
' → logprob: -6.675213813781738
    6. '(source' → logprob: -6.800213813781738
    7. '(G' → logprob: -7.175213813781738
    8. '(n' → logprob: -7.175213813781738
    9. ' (' → logprob: -7.925213813781738
    10. '(Graph' → logprob: -8.550213813781738

Token 695: ' dans' (ID: 2671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11370653659105301
    2. '(graph' → logprob: -2.863706588745117
    3. '(s' → logprob: -3.113706588745117
    4. '(G' → logprob: -6.863706588745117
    5. ':' → logprob: -7.238706588745117
    6. '(n' → logprob: -7.488706588745117
    7. ',' → logprob: -7.738706588745117
    8. ' (' → logprob: -7.863706588745117
    9. 'graph' → logprob: -8.238706588745117
    10. '```' → logprob: -8.238706588745117

Token 696: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.07914358377456665
    2. ' un' → logprob: -3.579143524169922
    3. 'le' → logprob: -3.704143524169922
    4. 'def' → logprob: -4.579143524169922
    5. 'g' → logprob: -5.204143524169922
    6. 'G' → logprob: -5.454143524169922
    7. 'graph' → logprob: -6.329143524169922
    8. 'la' → logprob: -7.329143524169922
    9. ' le' → logprob: -7.579143524169922
    10. 'une' → logprob: -8.704143524169922

Token 697: ' grap' (ID: 60955)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.10109984874725342
    2. 'gr' → logprob: -3.101099967956543
    3. ' graph' → logprob: -3.226099967956543
    4. ' grap' → logprob: -4.476099967956543
    5. 'g' → logprob: -10.476099967956543
    6. '	graph' → logprob: -11.226099967956543
    7. 'gra' → logprob: -12.226099967956543
    8. '(graph' → logprob: -12.226099967956543
    9. 'G' → logprob: -12.601099967956543
    10. '```' → logprob: -12.601099967956543

Token 698: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.16317901015281677
    2. 'h' → logprob: -2.2881789207458496
    3. 'aphe' → logprob: -3.0381789207458496
    4. 'phe' → logprob: -7.53817892074585
    5. 'hé' → logprob: -8.663179397583008
    6. 'ph' → logprob: -9.038179397583008
    7. '#' → logprob: -9.288179397583008
    8. 'heme' → logprob: -9.913179397583008
    9. 'ah' → logprob: -10.413179397583008
    10. 'hi' → logprob: -10.913179397583008

Token 699: ' pond' (ID: 42367)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03650066629052162
    2. '(graph' → logprob: -4.161500453948975
    3. '(
' → logprob: -5.036500453948975
    4. '(n' → logprob: -5.161500453948975
    5. '(adj' → logprob: -5.286500453948975
    6. '(G' → logprob: -7.411500453948975
    7. '(s' → logprob: -7.536500453948975
    8. '(' → logprob: -7.786500453948975
    9. '(V' → logprob: -8.036500930786133
    10. '(vertices' → logprob: -8.786500930786133

Token 700: 'éré' (ID: 33338)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010862463153898716
    2. 'u' → logprob: -5.135862350463867
    3. 'import' → logprob: -6.635862350463867
    4. 'é' → logprob: -6.760862350463867
    5. 'es' → logprob: -7.635862350463867
    6. 'ré' → logprob: -8.635862350463867
    7. '#' → logprob: -8.760862350463867
    8. 'éré' → logprob: -9.010862350463867
    9. ' def' → logprob: -9.260862350463867
    10. 'raph' → logprob: -9.260862350463867

Token 701: ' à' (ID: 1221)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.031150830909609795
    2. '(graph' → logprob: -4.031150817871094
    3. '(s' → logprob: -5.906150817871094
    4. '(adj' → logprob: -5.906150817871094
    5. '(n' → logprob: -6.031150817871094
    6. '(
' → logprob: -6.406150817871094
    7. '(' → logprob: -7.156150817871094
    8. 'graph' → logprob: -7.531150817871094
    9. '(G' → logprob: -7.781150817871094
    10. 'adj' → logprob: -8.156150817871094

Token 702: ' l' (ID: 305)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.40940162539482117
    2. 'def' → logprob: -2.0344016551971436
    3. '#' → logprob: -2.4094016551971436
    4. 'list' → logprob: -3.2844016551971436
    5. 'liste' → logprob: -3.4094016551971436
    6. 'import' → logprob: -5.1594014167785645
    7. 'weighted' → logprob: -5.1594014167785645
    8. 'n' → logprob: -5.2844014167785645
    9. '```' → logprob: -5.2844014167785645
    10. 'dict' → logprob: -5.4094014167785645

Token 703: ''aide' (ID: 75684)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6655389666557312
    2. 'istance' → logprob: -1.415539026260376
    3. '#' → logprob: -2.415539026260376
    4. '```' → logprob: -3.165539026260376
    5. 'ijkstra' → logprob: -3.165539026260376
    6. 'é' → logprob: -4.790538787841797
    7. 'd' → logprob: -4.915538787841797
    8. 'dict' → logprob: -4.915538787841797
    9. 'j' → logprob: -6.040538787841797
    10. 'irected' → logprob: -6.040538787841797

Token 704: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2988255023956299
    2. 'def' → logprob: -1.6738255023956299
    3. 'd' → logprob: -3.67382550239563
    4. ' de' → logprob: -4.298825263977051
    5. ' des' → logprob: -4.673825263977051
    6. ' du' → logprob: -4.923825263977051
    7. '(
' → logprob: -5.173825263977051
    8. ' def' → logprob: -6.173825263977051
    9. '#' → logprob: -6.548825263977051
    10. 'de' → logprob: -6.673825263977051

Token 705: ' l' (ID: 305)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01871977001428604
    2. 'import' → logprob: -4.393719673156738
    3. 'heap' → logprob: -6.518719673156738
    4. 'le' → logprob: -7.143719673156738
    5. 'graph' → logprob: -7.268719673156738
    6. 'la' → logprob: -7.393719673156738
    7. 'l' → logprob: -7.643719673156738
    8. 'd' → logprob: -7.643719673156738
    9. ' def' → logprob: -7.768719673156738
    10. ' le' → logprob: -8.518719673156738

Token 706: ''' (ID: 6)
  Prédit: 'ijkstra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.15277418494224548
    2. 'def' → logprob: -2.7777740955352783
    3. 'import' → logprob: -3.0277740955352783
    4. 'ijk' → logprob: -3.9027740955352783
    5. 'ef' → logprob: -5.527774333953857
    6. '```' → logprob: -6.527774333953857
    7. '#' → logprob: -6.777774333953857
    8. 'ij' → logprob: -7.152774333953857
    9. 'istance' → logprob: -7.277774333953857
    10. 'i' → logprob: -7.777774333953857

Token 707: 'alg' (ID: 15258)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6821489930152893
    2. 'def' → logprob: -0.8071489930152893
    3. 'heap' → logprob: -3.5571489334106445
    4. 'd' → logprob: -4.6821489334106445
    5. 'D' → logprob: -6.0571489334106445
    6. '#' → logprob: -6.1821489334106445
    7. 'ijkstra' → logprob: -6.1821489334106445
    8. 'priority' → logprob: -6.4321489334106445
    9. '```' → logprob: -6.6821489334106445
    10. 'from' → logprob: -8.432148933410645

Token 708: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.005416369065642357
    2. 'orithm' → logprob: -5.255416393280029
    3. 'def' → logprob: -9.880415916442871
    4. '```' → logprob: -10.130415916442871
    5. 'orig' → logprob: -10.630415916442871
    6. 'or' → logprob: -10.880415916442871
    7. 'ort' → logprob: -11.130415916442871
    8. '#' → logprob: -11.630415916442871
    9. 'orithms' → logprob: -11.880415916442871
    10. 'ор' → logprob: -12.380415916442871

Token 709: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.6359847187995911
    2. 'th' → logprob: -0.8859847187995911
    3. 't' → logprob: -3.2609846591949463
    4. 'd' → logprob: -4.010984897613525
    5. 'def' → logprob: -7.385984897613525
    6. 'm' → logprob: -7.635984897613525
    7. '#' → logprob: -8.260984420776367
    8. 'hme' → logprob: -8.760984420776367
    9. 'tm' → logprob: -9.260984420776367
    10. 'f' → logprob: -9.635984420776367

Token 710: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.751746746478602e-05
    2. 'd' → logprob: -10.37504768371582
    3. ' def' → logprob: -12.12504768371582
    4. '```' → logprob: -12.62504768371582
    5. '(s' → logprob: -12.87504768371582
    6. 'D' → logprob: -12.87504768371582
    7. 'de' → logprob: -13.87504768371582
    8. '(
' → logprob: -15.00004768371582
    9. '(graph' → logprob: -15.12504768371582
    10. '#' → logprob: -15.12504768371582

Token 711: ' D' (ID: 415)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.594898521900177
    2. 'D' → logprob: -1.0948984622955322
    3. 'def' → logprob: -2.2198984622955322
    4. 'import' → logprob: -5.594898700714111
    5. '```' → logprob: -6.719898700714111
    6. 'dj' → logprob: -9.469898223876953
    7. '#' → logprob: -9.844898223876953
    8. 'heap' → logprob: -9.969898223876953
    9. 'ijkstra' → logprob: -11.094898223876953
    10. 'dist' → logprob: -11.219898223876953

Token 712: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0015502138994634151
    2. 'ijk' → logprob: -6.501550197601318
    3. 'ij' → logprob: -10.876550674438477
    4. '```' → logprob: -11.376550674438477
    5. 'def' → logprob: -11.626550674438477
    6. 'ijks' → logprob: -13.001550674438477
    7. '   ' → logprob: -13.251550674438477
    8. 'import' → logprob: -14.001550674438477
    9. 'jik' → logprob: -14.126550674438477
    10. '``' → logprob: -14.501550674438477

Token 713: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03745546564459801
    2. ':' → logprob: -4.2874555587768555
    3. '(s' → logprob: -4.2874555587768555
    4. '(graph' → logprob: -5.0374555587768555
    5. '(
' → logprob: -6.4124555587768555
    6. '(G' → logprob: -8.162455558776855
    7. ':
' → logprob: -8.287455558776855
    8. '(' → logprob: -8.912455558776855
    9. '.' → logprob: -9.412455558776855
    10. '(def' → logprob: -9.662455558776855

Token 714: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04050007462501526
    2. '(s' → logprob: -3.2905001640319824
    3. ':' → logprob: -6.540500164031982
    4. ' def' → logprob: -8.165499687194824
    5. '(' → logprob: -8.540499687194824
    6. '(graph' → logprob: -8.915499687194824
    7. '(def' → logprob: -9.165499687194824
    8. '(
' → logprob: -9.165499687194824
    9. 's' → logprob: -10.040499687194824
    10. ':def' → logprob: -10.665499687194824

Token 715: ' Le' (ID: 2018)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.6240566083070007e-06
    2. ' def' → logprob: -13.625001907348633
    3. '
' → logprob: -15.000001907348633
    4. '(
' → logprob: -16.500001907348633
    5. '(def' → logprob: -16.750001907348633
    6. '```' → logprob: -18.625001907348633
    7. ':
' → logprob: -18.750001907348633
    8. 'de' → logprob: -19.250001907348633
    9. ':def' → logprob: -19.250001907348633
    10. '(s' → logprob: -19.250001907348633

Token 716: ' grap' (ID: 60955)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007813281379640102
    2. ' def' → logprob: -5.257813453674316
    3. 'ef' → logprob: -6.382813453674316
    4. 'f' → logprob: -7.507813453674316
    5. ' graph' → logprob: -9.007813453674316
    6. 'graph' → logprob: -9.382813453674316
    7. '
' → logprob: -9.382813453674316
    8. '```' → logprob: -11.632813453674316
    9. ')' → logprob: -12.007813453674316
    10. 's' → logprob: -12.382813453674316

Token 717: 'he' (ID: 273)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009961717762053013
    2. 'raph' → logprob: -5.1349616050720215
    3. '#' → logprob: -7.0099616050720215
    4. 'orith' → logprob: -7.0099616050720215
    5. 'r' → logprob: -7.2599616050720215
    6. 'me' → logprob: -7.7599616050720215
    7. 'aphe' → logprob: -8.13496208190918
    8. 'aph' → logprob: -8.50996208190918
    9. 'orithm' → logprob: -8.88496208190918
    10. 'rap' → logprob: -9.38496208190918

Token 718: ' est' (ID: 893)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08214477449655533
    2. ' est' → logprob: -2.7071447372436523
    3. '#' → logprob: -5.457144737243652
    4. ' def' → logprob: -5.707144737243652
    5. ')' → logprob: -6.707144737243652
    6. 's' → logprob: -6.832144737243652
    7. ' is' → logprob: -7.707144737243652
    8. 'est' → logprob: -7.832144737243652
    9. '(s' → logprob: -8.332144737243652
    10. '(n' → logprob: -8.832144737243652

Token 719: ' attendu' (ID: 171331)
  Prédit: ' représent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' représent' → logprob: -0.6959837675094604
    2. 'def' → logprob: -0.8209837675094604
    3. 're' → logprob: -3.44598388671875
    4. '#' → logprob: -4.69598388671875
    5. 'repr' → logprob: -5.07098388671875
    6. 'represented' → logprob: -5.82098388671875
    7. 'dé' → logprob: -5.94598388671875
    8. ' represented' → logprob: -6.32098388671875
    9. '
' → logprob: -6.69598388671875
    10. ' déf' → logprob: -6.82098388671875

Token 720: ' sous' (ID: 14487)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08259598165750504
    2. '):
' → logprob: -3.9575960636138916
    3. '(s' → logprob: -4.2075958251953125
    4. '(n' → logprob: -4.5825958251953125
    5. ')' → logprob: -5.3325958251953125
    6. '(graph' → logprob: -5.4575958251953125
    7. '):' → logprob: -5.7075958251953125
    8. ':
' → logprob: -5.8325958251953125
    9. '(adj' → logprob: -5.8325958251953125
    10. '#' → logprob: -5.8325958251953125

Token 721: ' forme' (ID: 27450)
  Prédit: 'forme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forme' → logprob: -0.32244008779525757
    2. 'la' → logprob: -1.5724401473999023
    3. 'form' → logprob: -3.1974401473999023
    4. ' forme' → logprob: -4.322440147399902
    5. '#' → logprob: -4.697440147399902
    6. 'def' → logprob: -5.447440147399902
    7. ' la' → logprob: -8.322440147399902
    8. 'forma' → logprob: -9.197440147399902
    9. 'formes' → logprob: -9.947440147399902
    10. 'format' → logprob: -10.447440147399902

Token 722: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14367154240608215
    2. 'de' → logprob: -2.6436715126037598
    3. 'd' → logprob: -3.5186715126037598
    4. ' de' → logprob: -3.6436715126037598
    5. '#' → logprob: -5.76867151260376
    6. ' d' → logprob: -6.26867151260376
    7. 'dict' → logprob: -7.14367151260376
    8. ')' → logprob: -8.143671989440918
    9. 'adj' → logprob: -9.143671989440918
    10. '```' → logprob: -9.393671989440918

Token 723: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.7129473686218262
    2. 'adj' → logprob: -0.9629473686218262
    3. 'dict' → logprob: -2.962947368621826
    4. 'list' → logprob: -3.087947368621826
    5. 'def' → logprob: -4.212947368621826
    6. 'd' → logprob: -5.087947368621826
    7. '#' → logprob: -5.837947368621826
    8. 'un' → logprob: -5.962947368621826
    9. ' liste' → logprob: -6.837947368621826
    10. '```' → logprob: -6.962947368621826

Token 724: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2633310854434967
    2. ' of' → logprob: -3.513331174850464
    3. 'of' → logprob: -3.513331174850464
    4. 'adj' → logprob: -3.638331174850464
    5. '[' → logprob: -3.763331174850464
    6. ')' → logprob: -3.888331174850464
    7. 'de' → logprob: -4.138330936431885
    8. '[list' → logprob: -4.138330936431885
    9. '[List' → logprob: -4.513330936431885
    10. ' de' → logprob: -4.513330936431885

Token 725: ''ad' (ID: 36162)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5050042867660522
    2. 'lists' → logprob: -1.2550042867660522
    3. ' lists' → logprob: -3.255004405975342
    4. 'liste' → logprob: -3.755004405975342
    5. 'def' → logprob: -4.255004405975342
    6. ' listes' → logprob: -4.630004405975342
    7. '[]' → logprob: -5.505004405975342
    8. '[' → logprob: -5.755004405975342
    9. 'e' → logprob: -5.880004405975342
    10. ' adjacency' → logprob: -6.130004405975342

Token 726: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.000719818810466677
    2. 'jac' → logprob: -7.250720024108887
    3. 'js' → logprob: -12.125720024108887
    4. 'jc' → logprob: -12.750720024108887
    5. '[j' → logprob: -14.125720024108887
    6. 'jf' → logprob: -15.375720024108887
    7. 'ja' → logprob: -16.12571907043457
    8. 'dj' → logprob: -16.37571907043457
    9. 'jec' → logprob: -16.62571907043457
    10. '(j' → logprob: -16.87571907043457

Token 727: 'ence' (ID: 1082)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006756340153515339
    2. 'jac' → logprob: -5.13175630569458
    3. 'acency' → logprob: -7.38175630569458
    4. 's' → logprob: -10.006756782531738
    5. 'es' → logprob: -10.756756782531738
    6. '[j' → logprob: -10.756756782531738
    7. '#' → logprob: -11.006756782531738
    8. 'aj' → logprob: -11.631756782531738
    9. 'c' → logprob: -11.756756782531738
    10. 'jec' → logprob: -11.881756782531738

Token 728: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0033507244661450386
    2. '(graph' → logprob: -6.628350734710693
    3. '(s' → logprob: -7.253350734710693
    4. '(n' → logprob: -7.503350734710693
    5. '):
' → logprob: -8.378350257873535
    6. '(
' → logprob: -9.003350257873535
    7. ' def' → logprob: -9.503350257873535
    8. ':
' → logprob: -9.628350257873535
    9. '(nodes' → logprob: -10.003350257873535
    10. '#' → logprob: -10.503350257873535

Token 729: ' où' (ID: 15113)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0031434930860996246
    2. '#' → logprob: -6.253143310546875
    3. 'graph' → logprob: -6.878143310546875
    4. 'adj' → logprob: -9.878143310546875
    5. ' def' → logprob: -10.003143310546875
    6. 'g' → logprob: -10.628143310546875
    7. 'with' → logprob: -11.628143310546875
    8. '(graph' → logprob: -11.753143310546875
    9. 'vertices' → logprob: -12.128143310546875
    10. '#g' → logprob: -12.253143310546875

Token 730: ' chaque' (ID: 21194)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.19340598583221436
    2. 'def' → logprob: -2.818406105041504
    3. 'gr' → logprob: -2.943406105041504
    4. 'g' → logprob: -3.443406105041504
    5. 'G' → logprob: -4.193406105041504
    6. '#' → logprob: -4.318406105041504
    7. 'adj' → logprob: -6.818406105041504
    8. ' graph' → logprob: -7.318406105041504
    9. '
' → logprob: -8.193406105041504
    10. 'n' → logprob: -8.818406105041504

Token 731: ' sommet' (ID: 130502)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.29747456312179565
    2. ' node' → logprob: -2.9224746227264404
    3. 'adj' → logprob: -3.1724746227264404
    4. ' def' → logprob: -3.4224746227264404
    5. 'node' → logprob: -3.6724746227264404
    6. 'graph' → logprob: -3.9224746227264404
    7. ' u' → logprob: -4.422474384307861
    8. ' adj' → logprob: -4.422474384307861
    9. ' graph' → logprob: -4.922474384307861
    10. 'neighbors' → logprob: -5.047474384307861

Token 732: ' a' (ID: 261)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.6566556692123413
    2. 's' → logprob: -2.156655788421631
    3. ':' → logprob: -2.281655788421631
    4. 'def' → logprob: -2.531655788421631
    5. ')' → logprob: -3.031655788421631
    6. 'est' → logprob: -3.406655788421631
    7. '```' → logprob: -4.281655788421631
    8. '[]' → logprob: -4.406655788421631
    9. ']' → logprob: -4.406655788421631
    10. '):
' → logprob: -4.531655788421631

Token 733: ' une' (ID: 2463)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7043547034263611
    2. 'une' → logprob: -1.2043547630310059
    3. ' une' → logprob: -2.579354763031006
    4. ' des' → logprob: -3.704354763031006
    5. 'ses' → logprob: -3.829354763031006
    6. 's' → logprob: -4.329354763031006
    7. 'des' → logprob: -4.329354763031006
    8. ' ses' → logprob: -4.704354763031006
    9. '#' → logprob: -4.704354763031006
    10. ' la' → logprob: -4.954354763031006

Token 734: ' liste' (ID: 31719)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06083742156624794
    2. 'liste' → logprob: -3.935837507247925
    3. '[]' → logprob: -4.685837268829346
    4. 'vo' → logprob: -4.810837268829346
    5. 'list' → logprob: -5.060837268829346
    6. 'neighbors' → logprob: -5.310837268829346
    7. 'adj' → logprob: -5.685837268829346
    8. '#' → logprob: -5.935837268829346
    9. 's' → logprob: -7.185837268829346
    10. ' adjacency' → logprob: -7.310837268829346

Token 735: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4566681683063507
    2. '[' → logprob: -1.7066681385040283
    3. ' of' → logprob: -3.2066681385040283
    4. '(' → logprob: -3.7066681385040283
    5. ' des' → logprob: -3.8316681385040283
    6. '(
' → logprob: -3.9566681385040283
    7. ' de' → logprob: -4.206668376922607
    8. '(s' → logprob: -4.956668376922607
    9. 'de' → logprob: -5.081668376922607
    10. ')' → logprob: -5.206668376922607

Token 736: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.30687618255615234
    2. ' of' → logprob: -2.8068761825561523
    3. '#' → logprob: -2.9318761825561523
    4. 'of' → logprob: -3.3068761825561523
    5. '[' → logprob: -3.4318761825561523
    6. ' de' → logprob: -3.8068761825561523
    7. '[
' → logprob: -4.431876182556152
    8. '```' → logprob: -4.681876182556152
    9. ')' → logprob: -4.931876182556152
    10. 'de' → logprob: -4.931876182556152

Token 737: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4229499399662018
    2. 'de' → logprob: -1.6729499101638794
    3. 'd' → logprob: -3.297950029373169
    4. ' de' → logprob: -3.422950029373169
    5. 'des' → logprob: -3.797950029373169
    6. '[(' → logprob: -4.17294979095459
    7. 'adj' → logprob: -4.42294979095459
    8. ' of' → logprob: -4.67294979095459
    9. '#' → logprob: -5.54794979095459
    10. 'of' → logprob: -5.54794979095459

Token 738: ' couples' (ID: 29972)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.1259593963623047
    2. '(vo' → logprob: -1.1259593963623047
    3. '(adj' → logprob: -2.2509593963623047
    4. '(t' → logprob: -2.3759593963623047
    5. '(' → logprob: -2.8759593963623047
    6. ' (' → logprob: -3.8759593963623047
    7. '(u' → logprob: -4.500959396362305
    8. '(v' → logprob: -4.625959396362305
    9. 'tu' → logprob: -4.625959396362305
    10. '(s' → logprob: -4.875959396362305

Token 739: ' (' (ID: 350)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.3606441617012024
    2. ' (' → logprob: -1.6106441020965576
    3. '[(' → logprob: -3.6106441020965576
    4. '(s' → logprob: -3.9856441020965576
    5. '(adj' → logprob: -3.9856441020965576
    6. '[u' → logprob: -4.235644340515137
    7. '(v' → logprob: -4.735644340515137
    8. ' [(' → logprob: -5.360644340515137
    9. 's' → logprob: -6.610644340515137
    10. '(vertex' → logprob: -6.735644340515137

Token 740: 'vo' (ID: 1190)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.22462065517902374
    2. '(u' → logprob: -1.9746206998825073
    3. '(node' → logprob: -3.8496205806732178
    4. '(dest' → logprob: -4.849620819091797
    5. '(s' → logprob: -5.099620819091797
    6. '(n' → logprob: -5.224620819091797
    7. '(destination' → logprob: -5.349620819091797
    8. '(to' → logprob: -5.599620819091797
    9. '(ne' → logprob: -5.849620819091797
    10. '(vertex' → logprob: -6.099620819091797

Token 741: 'isin' (ID: 23933)
  Prédit: 'isins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isins' → logprob: -0.17096972465515137
    2. 'isin' → logprob: -2.0459697246551514
    3. 'is' → logprob: -4.6709699630737305
    4. 'isine' → logprob: -4.9209699630737305
    5. 's' → logprob: -6.0459699630737305
    6. '(' → logprob: -6.5459699630737305
    7. 'ix' → logprob: -6.7959699630737305
    8. 'tx' → logprob: -7.0459699630737305
    9. '(s' → logprob: -7.2959699630737305
    10. 'rt' → logprob: -7.2959699630737305

Token 742: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014672515913844109
    2. 's' → logprob: -4.88967227935791
    3. ' ,' → logprob: -5.13967227935791
    4. 'es' → logprob: -8.76467227935791
    5. ',
' → logprob: -8.88967227935791
    6. '(s' → logprob: -9.01467227935791
    7. ')' → logprob: -9.26467227935791
    8. ',s' → logprob: -9.26467227935791
    9. ',(' → logprob: -9.51467227935791
    10. 'e' → logprob: -9.76467227935791

Token 743: ' coût' (ID: 73109)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.14686188101768494
    2. ' poids' → logprob: -2.2718617916107178
    3. 'distance' → logprob: -4.021862030029297
    4. 'weight' → logprob: -4.521862030029297
    5. 'dist' → logprob: -6.396862030029297
    6. 'cost' → logprob: -7.271862030029297
    7. 'cout' → logprob: -7.896862030029297
    8. ' distance' → logprob: -8.146862030029297
    9. 'p' → logprob: -8.271862030029297
    10. ' po' → logprob: -8.646862030029297

Token 744: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0042907800525426865
    2. ')
' → logprob: -6.754290580749512
    3. '):' → logprob: -7.004290580749512
    4. ')],' → logprob: -7.629290580749512
    5. '),' → logprob: -8.004290580749512
    6. '):
' → logprob: -8.379290580749512
    7. ')])' → logprob: -8.379290580749512
    8. 's' → logprob: -8.754290580749512
    9. ')),' → logprob: -8.879290580749512
    10. '))' → logprob: -9.129290580749512

Token 745: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.704273118884885e-07
    2. '
' → logprob: -14.375000953674316
    3. '```' → logprob: -18.0
    4. ' def' → logprob: -18.5
    5. '(def' → logprob: -20.875
    6. ':def' → logprob: -21.375
    7. '``' → logprob: -21.625
    8. '(
' → logprob: -22.125
    9. ')
' → logprob: -22.5
    10. '    
' → logprob: -23.125

Token 746: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.062014851719141006
    2. ' d' → logprob: -2.8120148181915283
    3. 'def' → logprob: -10.06201457977295
    4. ' def' → logprob: -12.56201457977295
    5. '	d' → logprob: -14.06201457977295
    6. '_d' → logprob: -16.812015533447266
    7. 'D' → logprob: -16.937015533447266
    8. ' dij' → logprob: -17.062015533447266
    9. '```' → logprob: -17.312015533447266
    10. 'dj' → logprob: -17.562015533447266

Token 747: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.00010437761375214905
    2. 'ijk' → logprob: -9.250103950500488
    3. 'ij' → logprob: -11.750103950500488
    4. 'jik' → logprob: -16.000104904174805
    5. 'ijkl' → logprob: -16.625104904174805
    6. 'i' → logprob: -17.250104904174805
    7. 'ijks' → logprob: -17.250104904174805
    8. '```' → logprob: -18.000104904174805
    9. 'ik' → logprob: -19.625104904174805
    10. 'ijkt' → logprob: -20.125104904174805

Token 748: '(s' (ID: 1858)
  Prédit: '(graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.020148713141679764
    2. '(g' → logprob: -4.520148754119873
    3. '(G' → logprob: -4.895148754119873
    4. '(adj' → logprob: -6.645148754119873
    5. '(gr' → logprob: -9.520148277282715
    6. '(V' → logprob: -10.145148277282715
    7. '(Graph' → logprob: -10.270148277282715
    8. ' (' → logprob: -10.395148277282715
    9. '(' → logprob: -10.520148277282715
    10. '(n' → logprob: -10.645148277282715

Token 749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022594700567424297
    2. '(graph' → logprob: -9.125226020812988
    3. ',g' → logprob: -9.875226020812988
    4. ' ,' → logprob: -10.875226020812988
    5. '):' → logprob: -11.375226020812988
    6. ',n' → logprob: -11.625226020812988
    7. 'graph' → logprob: -11.750226020812988
    8. ',G' → logprob: -11.875226020812988
    9. ',s' → logprob: -13.375226020812988
    10. ',
' → logprob: -13.625226020812988

Token 750: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.43313321471214294
    2. 'g' → logprob: -1.6831332445144653
    3. 'G' → logprob: -1.9331332445144653
    4. 'gr' → logprob: -4.808133125305176
    5. ' graph' → logprob: -5.308133125305176
    6. 'adj' → logprob: -5.683133125305176
    7. 'edges' → logprob: -6.183133125305176
    8. 'n' → logprob: -6.683133125305176
    9. ' G' → logprob: -8.933133125305176
    10. 'E' → logprob: -8.933133125305176

Token 751: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027572231367230415
    2. '):
' → logprob: -3.6525721549987793
    3. ',' → logprob: -7.027572154998779
    4. '):
' → logprob: -8.277572631835938
    5. ')' → logprob: -9.277572631835938
    6. ':' → logprob: -10.652572631835938
    7. ' ):' → logprob: -11.777572631835938
    8. 'def' → logprob: -14.027572631835938
    9. '):

' → logprob: -14.027572631835938
    10. '   ' → logprob: -14.402572631835938

Token 752: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000584249384701252
    2. 'dist' → logprob: -7.750584125518799
    3. '	dist' → logprob: -9.125584602355957
    4. '	n' → logprob: -11.375584602355957
    5. ':' → logprob: -12.125584602355957
    6. 'n' → logprob: -12.250584602355957
    7. ' distances' → logprob: -12.250584602355957
    8. '   ' → logprob: -12.750584602355957
    9. 'heap' → logprob: -12.875584602355957
    10. ' dist' → logprob: -13.125584602355957

Token 753: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5902430415153503
    2. 'dist' → logprob: -1.3402431011199951
    3. '   ' → logprob: -1.7152431011199951
    4. 'N' → logprob: -6.465242862701416
    5. 'import' → logprob: -7.215242862701416
    6. 'd' → logprob: -7.465242862701416
    7. 'q' → logprob: -7.715242862701416
    8. 'h' → logprob: -9.215243339538574
    9. ' n' → logprob: -9.215243339538574
    10. 'distance' → logprob: -9.215243339538574

Token 754: ' Cré' (ID: 109203)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19326604902744293
    2. 'dist' → logprob: -1.8182660341262817
    3. 'N' → logprob: -4.943265914916992
    4. 'd' → logprob: -5.943265914916992
    5. 'import' → logprob: -6.443265914916992
    6. 'q' → logprob: -6.943265914916992
    7. 'distance' → logprob: -8.568265914916992
    8. 'D' → logprob: -8.693265914916992
    9. '   ' → logprob: -8.943265914916992
    10. 'h' → logprob: -9.193265914916992

Token 755: 'ation' (ID: 387)
  Prédit: 'ated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.8048396706581116
    2. '   ' → logprob: -2.179839611053467
    3. 'e' → logprob: -2.304839611053467
    4. '#' → logprob: -2.679839611053467
    5. 'dist' → logprob: -2.679839611053467
    6. 'heap' → logprob: -2.679839611053467
    7. 'ate' → logprob: -2.804839611053467
    8. 'er' → logprob: -3.804839611053467
    9. 'd' → logprob: -4.804839611053467
    10. 'ue' → logprob: -5.054839611053467

Token 756: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.784733235836029
    2. 'n' → logprob: -0.909733235836029
    3. '(n' → logprob: -2.659733295440674
    4. 'dist' → logprob: -3.034733295440674
    5. '(' → logprob: -4.534733295440674
    6. '(
' → logprob: -5.534733295440674
    7. ' n' → logprob: -6.534733295440674
    8. 'distance' → logprob: -7.034733295440674
    9. '(V' → logprob: -7.159733295440674
    10. '(dist' → logprob: -7.409733295440674

Token 757: ''une' (ID: 13337)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2521737813949585
    2. '   ' → logprob: -2.127173900604248
    3. 'n' → logprob: -3.252173900604248
    4. ' distances' → logprob: -3.502173900604248
    5. 'une' → logprob: -4.002173900604248
    6. 'e' → logprob: -5.502173900604248
    7. 'distance' → logprob: -5.752173900604248
    8. ' une' → logprob: -6.002173900604248
    9. 'istance' → logprob: -6.377173900604248
    10. '_dist' → logprob: -6.752173900604248

Token 758: ' liste' (ID: 31719)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1505623161792755
    2. 'n' → logprob: -2.275562286376953
    3. 'distance' → logprob: -4.275562286376953
    4. 'queue' → logprob: -4.400562286376953
    5. 'heap' → logprob: -6.025562286376953
    6. 'import' → logprob: -6.025562286376953
    7. 'list' → logprob: -6.150562286376953
    8. 'deque' → logprob: -6.150562286376953
    9. 'd' → logprob: -7.525562286376953
    10. ' n' → logprob: -8.025562286376953

Token 759: ' pour' (ID: 1930)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3204432725906372
    2. '   ' → logprob: -1.4454432725906372
    3. 'n' → logprob: -4.070443153381348
    4. 'distance' → logprob: -5.820443153381348
    5. 'de' → logprob: -5.945443153381348
    6. '(dist' → logprob: -6.070443153381348
    7. '(' → logprob: -6.320443153381348
    8. '(n' → logprob: -6.320443153381348
    9. ' distances' → logprob: -6.445443153381348
    10. ' des' → logprob: -6.820443153381348

Token 760: ' stock' (ID: 6546)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00040767391328699887
    2. 'distance' → logprob: -8.125407218933105
    3. ' distances' → logprob: -9.625407218933105
    4. 'd' → logprob: -10.500407218933105
    5. ' dist' → logprob: -11.250407218933105
    6. 'n' → logprob: -12.750407218933105
    7. '#' → logprob: -14.375407218933105
    8. '   ' → logprob: -14.875407218933105
    9. 'range' → logprob: -14.875407218933105
    10. 'len' → logprob: -15.375407218933105

Token 761: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.009812403470277786
    2. '   ' → logprob: -4.634812355041504
    3. 'distance' → logprob: -11.509812355041504
    4. '#' → logprob: -11.759812355041504
    5. ' distances' → logprob: -11.759812355041504
    6. 'dist' → logprob: -12.009812355041504
    7. '       ' → logprob: -12.134812355041504
    8. '    ' → logprob: -12.884812355041504
    9. 'e' → logprob: -13.009812355041504
    10. 'ner' → logprob: -13.259812355041504

Token 762: ' les' (ID: 1341)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02457226999104023
    2. ' distances' → logprob: -4.524572372436523
    3. '   ' → logprob: -4.649572372436523
    4. ' dist' → logprob: -6.274572372436523
    5. 'distance' → logprob: -6.649572372436523
    6. '	dist' → logprob: -8.024572372436523
    7. '(dist' → logprob: -8.649572372436523
    8. 'd' → logprob: -9.274572372436523
    9. 'n' → logprob: -9.899572372436523
    10. '(distance' → logprob: -11.399572372436523

Token 763: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0034816358238458633
    2. ' distances' → logprob: -5.753481864929199
    3. 'distance' → logprob: -8.6284818649292
    4. ' dist' → logprob: -9.6284818649292
    5. 'd' → logprob: -9.7534818649292
    6. 'import' → logprob: -15.1284818649292
    7. '#' → logprob: -15.7534818649292
    8. ' distance' → logprob: -15.8784818649292
    9. '```' → logprob: -16.253480911254883
    10. 'n' → logprob: -16.378480911254883

Token 764: ' minim' (ID: 23874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17349278926849365
    2. ' =' → logprob: -1.9234927892684937
    3. '=' → logprob: -5.423492908477783
    4. 'dist' → logprob: -5.798492908477783
    5. '(n' → logprob: -6.673492908477783
    6. 'n' → logprob: -6.923492908477783
    7. '[' → logprob: -7.173492908477783
    8. '(' → logprob: -7.548492908477783
    9. '(len' → logprob: -7.673492908477783
    10. '[n' → logprob: -8.048492431640625

Token 765: 'ales' (ID: 3459)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.1046222448349
    2. 'dist' → logprob: -1.1046222448349
    3. '   ' → logprob: -1.8546222448349
    4. 'ales' → logprob: -2.4796223640441895
    5. 'imes' → logprob: -4.2296223640441895
    6. 'im' → logprob: -4.9796223640441895
    7. 'ues' → logprob: -4.9796223640441895
    8. 'ines' → logprob: -5.1046223640441895
    9. 'ées' → logprob: -5.1046223640441895
    10. 'ist' → logprob: -5.2296223640441895

Token 766: ' entre' (ID: 3853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23667006194591522
    2. 'dist' → logprob: -1.8616700172424316
    3. ' =' → logprob: -3.2366700172424316
    4. 'n' → logprob: -4.861670017242432
    5. '(n' → logprob: -6.236670017242432
    6. '(dist' → logprob: -6.611670017242432
    7. 'distance' → logprob: -6.736670017242432
    8. '=' → logprob: -6.861670017242432
    9. '[n' → logprob: -7.486670017242432
    10. '[' → logprob: -7.611670017242432

Token 767: ' s' (ID: 265)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12890024483203888
    2. 'range' → logprob: -2.2539002895355225
    3. ' len' → logprob: -5.003900051116943
    4. '[len' → logprob: -5.753900051116943
    5. ' range' → logprob: -6.503900051116943
    6. 'graph' → logprob: -6.503900051116943
    7. '[' → logprob: -6.878900051116943
    8. '   ' → logprob: -7.128900051116943
    9. '[s' → logprob: -8.128900527954102
    10. '(len' → logprob: -8.128900527954102

Token 768: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16126416623592377
    2. '   ' → logprob: -2.661264181137085
    3. '=' → logprob: -3.036264181137085
    4. ',' → logprob: -4.411263942718506
    5. '=[' → logprob: -5.161263942718506
    6. '(s' → logprob: -5.411263942718506
    7. 's' → logprob: -6.661263942718506
    8. '[' → logprob: -7.161263942718506
    9. ' et' → logprob: -7.661263942718506
    10. 'e' → logprob: -7.786263942718506

Token 769: ' chaque' (ID: 21194)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.08787544816732407
    2. ' len' → logprob: -3.3378753662109375
    3. 'i' → logprob: -3.8378753662109375
    4. 'les' → logprob: -5.3378753662109375
    5. 'range' → logprob: -5.3378753662109375
    6. 'v' → logprob: -5.5878753662109375
    7. ' les' → logprob: -6.0878753662109375
    8. 't' → logprob: -6.3378753662109375
    9. 'l' → logprob: -6.3378753662109375
    10. ' i' → logprob: -6.4628753662109375

Token 770: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.3799647092819214
    2. ' node' → logprob: -1.5049647092819214
    3. 'node' → logprob: -3.504964828491211
    4. ' noe' → logprob: -3.879964828491211
    5. 'vertex' → logprob: -4.754964828491211
    6. ' vertex' → logprob: -4.754964828491211
    7. ' n' → logprob: -4.754964828491211
    8. 'som' → logprob: -5.754964828491211
    9. 'n' → logprob: -6.004964828491211
    10. ' ' → logprob: -6.254964828491211

Token 771: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27203795313835144
    2. 'dist' → logprob: -1.8970379829406738
    3. ' =' → logprob: -2.522037982940674
    4. '=' → logprob: -6.147037982940674
    5. 'n' → logprob: -6.147037982940674
    6. 'distance' → logprob: -7.147037982940674
    7. ',' → logprob: -7.772037982940674
    8. '[n' → logprob: -7.772037982940674
    9. '[' → logprob: -8.147037506103516
    10. ':' → logprob: -8.397037506103516

Token 772: ' grap' (ID: 60955)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.00411129230633378
    2. ' graph' → logprob: -5.629111289978027
    3. 'range' → logprob: -7.629111289978027
    4. '(graph' → logprob: -11.504111289978027
    5. ' range' → logprob: -11.879111289978027
    6. 'gr' → logprob: -12.254111289978027
    7. '	graph' → logprob: -13.379111289978027
    8. 'len' → logprob: -14.004111289978027
    9. '
' → logprob: -15.629111289978027
    10. '#' → logprob: -16.254112243652344

Token 773: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.0018100101733580232
    2. 'rap' → logprob: -7.251810073852539
    3. 'aph' → logprob: -8.251810073852539
    4. '#' → logprob: -8.251810073852539
    5. 'he' → logprob: -8.376810073852539
    6. 'phe' → logprob: -9.376810073852539
    7. 'raph' → logprob: -9.626810073852539
    8. 'r' → logprob: -10.376810073852539
    9. 'è' → logprob: -10.501810073852539
    10. 'ap' → logprob: -10.501810073852539

Token 774: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20313383638858795
    2. 'dist' → logprob: -1.8281338214874268
    3. 'n' → logprob: -3.9531338214874268
    4. ',' → logprob: -6.828134059906006
    5. ' =' → logprob: -6.953134059906006
    6. 'distance' → logprob: -7.203134059906006
    7. ' distances' → logprob: -8.078133583068848
    8. ' n' → logprob: -8.453133583068848
    9. ' dist' → logprob: -9.078133583068848
    10. 'd' → logprob: -9.328133583068848

Token 775: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3316309154033661
    2. 'dist' → logprob: -1.4566309452056885
    3. 'n' → logprob: -3.0816309452056885
    4. ' n' → logprob: -6.581630706787109
    5. 'def' → logprob: -7.456630706787109
    6. ' dist' → logprob: -7.456630706787109
    7. 'distance' → logprob: -7.831630706787109
    8. 'd' → logprob: -8.58163070678711
    9. ' distances' → logprob: -9.20663070678711
    10. '```' → logprob: -11.08163070678711

Token 776: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28336939215660095
    2. 'dist' → logprob: -1.5333694219589233
    3. '   ' → logprob: -3.533369302749634
    4. ' n' → logprob: -7.283369541168213
    5. 'N' → logprob: -7.658369541168213
    6. 'd' → logprob: -7.908369541168213
    7. 'distance' → logprob: -9.033369064331055
    8. ' dist' → logprob: -10.158369064331055
    9. '	n' → logprob: -10.908369064331055
    10. ' ' → logprob: -11.533369064331055

Token 777: ' Elle' (ID: 21300)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.31477564573287964
    2. 'n' → logprob: -1.3147757053375244
    3. '   ' → logprob: -7.064775466918945
    4. 'distance' → logprob: -8.064775466918945
    5. 'd' → logprob: -8.439775466918945
    6. 'N' → logprob: -9.814775466918945
    7. ' n' → logprob: -10.439775466918945
    8. ' dist' → logprob: -11.064775466918945
    9. 'dis' → logprob: -11.189775466918945
    10. 'res' → logprob: -13.064775466918945

Token 778: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11316557228565216
    2. ' =' → logprob: -2.2381656169891357
    3. '   ' → logprob: -8.488165855407715
    4. '=[' → logprob: -9.488165855407715
    5. 'dist' → logprob: -10.613165855407715
    6. '=[]' → logprob: -10.988165855407715
    7. 'n' → logprob: -12.863165855407715
    8. 'distance' → logprob: -12.863165855407715
    9. '[:]' → logprob: -13.488165855407715
    10. '=
' → logprob: -13.613165855407715

Token 779: ' initial' (ID: 4871)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6210572719573975
    2. '[n' → logprob: -1.1210572719573975
    3. '[s' → logprob: -3.2460572719573975
    4. '[N' → logprob: -3.8710572719573975
    5. '[size' → logprob: -3.9960572719573975
    6. '[num' → logprob: -4.246057510375977
    7. '[v' → logprob: -4.496057510375977
    8. '   ' → logprob: -4.996057510375977
    9. '[len' → logprob: -5.246057510375977
    10. '=[' → logprob: -5.871057510375977

Token 780: 'isée' (ID: 59331)
  Prédit: 'isée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isée' → logprob: -0.0010251892963424325
    2. 'ized' → logprob: -7.376025199890137
    3. 'isé' → logprob: -8.376025199890137
    4. 'isées' → logprob: -9.251025199890137
    5. 'iz' → logprob: -9.876025199890137
    6. 'is' → logprob: -12.501025199890137
    7. 'isee' → logprob: -12.501025199890137
    8. 'isés' → logprob: -12.876025199890137
    9. 'ialis' → logprob: -13.251025199890137
    10. 'iser' → logprob: -13.376025199890137

Token 781: ' à' (ID: 1221)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.014785868115723133
    2. '(len' → logprob: -4.6397857666015625
    3. '(' → logprob: -5.6397857666015625
    4. '(n' → logprob: -8.264785766601562
    5. '   ' → logprob: -8.389785766601562
    6. '([-' → logprob: -8.389785766601562
    7. '(graph' → logprob: -8.889785766601562
    8. '(
' → logprob: -9.389785766601562
    9. ' ([' → logprob: -9.389785766601562
    10. 'def' → logprob: -9.764785766601562

Token 782: ' l' (ID: 305)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2948405128554441e-05
    2. 'inf' → logprob: -11.62501335144043
    3. ' [' → logprob: -12.75001335144043
    4. '[in' → logprob: -14.25001335144043
    5. '[len' → logprob: -15.12501335144043
    6. '[n' → logprob: -15.87501335144043
    7. '[int' → logprob: -17.50001335144043
    8. '```' → logprob: -17.75001335144043
    9. '   ' → logprob: -18.12501335144043
    10. '
' → logprob: -18.25001335144043

Token 783: ''in' (ID: 17942)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3488040566444397
    2. '[' → logprob: -1.223803997039795
    3. ' [' → logprob: -9.098804473876953
    4. '[f' → logprob: -9.098804473876953
    5. '[len' → logprob: -10.348804473876953
    6. '[int' → logprob: -10.598804473876953
    7. '[n' → logprob: -10.848804473876953
    8. 'nf' → logprob: -11.473804473876953
    9. 'inf' → logprob: -11.473804473876953
    10. 'n' → logprob: -12.223804473876953

Token 784: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.001953018014319241
    2. '[' → logprob: -6.251953125
    3. '[f' → logprob: -11.126953125
    4. 'ф' → logprob: -13.126953125
    5. 'def' → logprob: -13.376953125
    6. 'if' → logprob: -13.876953125
    7. 'fi' → logprob: -14.001953125
    8. 'float' → logprob: -14.376953125
    9. '{' → logprob: -14.501953125
    10. 'fo' → logprob: -14.751953125

Token 785: 'ini' (ID: 2363)
  Prédit: 'inity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inity' → logprob: -1.0895003080368042
    2. 'ity' → logprob: -1.2145003080368042
    3. 'inite' → logprob: -2.3395004272460938
    4. '   ' → logprob: -2.4645004272460938
    5. 'init' → logprob: -3.0895004272460938
    6. '[' → logprob: -3.3395004272460938
    7. ']' → logprob: -4.339500427246094
    8. 'inty' → logprob: -4.464500427246094
    9. 'o' → logprob: -4.589500427246094
    10. 'inf' → logprob: -5.089500427246094

Token 786: ' pour' (ID: 1930)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.5105320811271667
    2. '(n' → logprob: -1.7605321407318115
    3. '   ' → logprob: -1.8855321407318115
    4. ',' → logprob: -3.7605321407318115
    5. '([' → logprob: -4.885531902313232
    6. '(graph' → logprob: -5.260531902313232
    7. 'n' → logprob: -5.510531902313232
    8. '[n' → logprob: -5.510531902313232
    9. '(' → logprob: -5.510531902313232
    10. 's' → logprob: -5.635531902313232

Token 787: ' tous' (ID: 10688)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.08976077288389206
    2. 'range' → logprob: -3.3397607803344727
    3. '_' → logprob: -3.9647607803344727
    4. '[' → logprob: -4.964760780334473
    5. 'i' → logprob: -4.964760780334473
    6. 'n' → logprob: -5.214760780334473
    7. '[len' → logprob: -6.214760780334473
    8. '_len' → logprob: -7.089760780334473
    9. ' len' → logprob: -7.089760780334473
    10. 'x' → logprob: -7.214760780334473

Token 788: ' les' (ID: 1341)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.8815376162528992
    2. ' vertices' → logprob: -2.131537675857544
    3. 'vertices' → logprob: -2.256537675857544
    4. 'nodes' → logprob: -2.756537675857544
    5. ' len' → logprob: -3.006537675857544
    6. 'n' → logprob: -3.131537675857544
    7. 'range' → logprob: -3.256537675857544
    8. ' nodes' → logprob: -3.256537675857544
    9. '_' → logprob: -3.631537675857544
    10. '(len' → logprob: -3.756537675857544

Token 789: ' somm' (ID: 44830)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.8334778547286987
    2. ' somm' → logprob: -1.0834778547286987
    3. 'nodes' → logprob: -2.7084779739379883
    4. 's' → logprob: -3.4584779739379883
    5. ' vertices' → logprob: -3.4584779739379883
    6. 'n' → logprob: -3.5834779739379883
    7. ' noe' → logprob: -4.333477973937988
    8. ' sommet' → logprob: -4.333477973937988
    9. 'som' → logprob: -4.458477973937988
    10. ' n' → logprob: -4.708477973937988

Token 790: 'ets' (ID: 1719)
  Prédit: 'ices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -0.004547608084976673
    2. 'ixes' → logprob: -6.504547595977783
    3. 'ès' → logprob: -6.879547595977783
    4. 'ex' → logprob: -7.754547595977783
    5. 'ets' → logprob: -8.504548072814941
    6. 'in' → logprob: -8.879548072814941
    7. 'èces' → logprob: -8.879548072814941
    8. 'rès' → logprob: -9.129548072814941
    9. 'ètes' → logprob: -9.129548072814941
    10. 'ix' → logprob: -9.254548072814941

Token 791: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03536214679479599
    2. ',' → logprob: -3.6603622436523438
    3. 'n' → logprob: -5.035362243652344
    4. '(n' → logprob: -6.535362243652344
    5. '(len' → logprob: -8.660362243652344
    6. '[n' → logprob: -8.785362243652344
    7. '.' → logprob: -9.035362243652344
    8. ' n' → logprob: -9.410362243652344
    9. ',n' → logprob: -9.535362243652344
    10. 'len' → logprob: -9.785362243652344

Token 792: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6742966771125793
    2. 'dist' → logprob: -1.2992966175079346
    3. 'n' → logprob: -1.5492966175079346
    4. ' n' → logprob: -6.174296855926514
    5. 'distance' → logprob: -6.674296855926514
    6. 'def' → logprob: -7.174296855926514
    7. ' dist' → logprob: -7.424296855926514
    8. 'd' → logprob: -8.049296379089355
    9. ' distances' → logprob: -9.549296379089355
    10. 'N' → logprob: -10.049296379089355

Token 793: ' d' (ID: 272)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3583192229270935
    2. 'n' → logprob: -1.2333192825317383
    3. '   ' → logprob: -4.858319282531738
    4. 'd' (adapté à ' d') → logprob: -6.983319282531738
    5. 'N' → logprob: -7.483319282531738
    6. 'distance' → logprob: -7.858319282531738
    7. ' n' → logprob: -9.608319282531738
    8. 'dis' → logprob: -10.108319282531738
    9. ' dist' → logprob: -10.608319282531738
    10. ' ' → logprob: -11.858319282531738

Token 794: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043373774737119675
    2. '=' → logprob: -3.2933738231658936
    3. 'ist' → logprob: -5.4183735847473145
    4. '   ' → logprob: -8.168374061584473
    5. 'istance' → logprob: -8.168374061584473
    6. '=[' → logprob: -8.668374061584473
    7. 'ists' → logprob: -9.418374061584473
    8. ' ' → logprob: -10.793374061584473
    9. '=[]' → logprob: -11.418374061584473
    10. 'is' → logprob: -11.668374061584473

Token 795: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015002528380136937
    2. '[in' → logprob: -9.000149726867676
    3. '[int' → logprob: -12.250149726867676
    4. '[df' → logprob: -12.250149726867676
    5. '[ind' → logprob: -12.250149726867676
    6. ' [' → logprob: -13.375149726867676
    7. '[node' → logprob: -13.500149726867676
    8. '[len' → logprob: -13.750149726867676
    9. '[array' → logprob: -14.250149726867676
    10. '[input' → logprob: -14.375149726867676

Token 796: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.9361264946837764e-07
    2. ' inf' → logprob: -16.625
    3. 'float' → logprob: -16.75
    4. 'int' → logprob: -19.75
    5. '_inf' → logprob: -20.0
    6. 'INF' → logprob: -20.125
    7. '.inf' → logprob: -20.75
    8. '-inf' → logprob: -21.125
    9. 'Inf' → logprob: -21.25
    10. 'infl' → logprob: -22.125

Token 797: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00868808664381504
    2. ']*' → logprob: -4.883687973022461
    3. ' for' → logprob: -7.008687973022461
    4. 'for' → logprob: -9.258687973022461
    5. ' ]' → logprob: -9.508687973022461
    6. ']*(' → logprob: -12.133687973022461
    7. ']+' → logprob: -14.008687973022461
    8. '   ' → logprob: -14.383687973022461
    9. ',' → logprob: -15.008687973022461
    10. ')' → logprob: -15.383687973022461

Token 798: 'n' (ID: 77)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02326807752251625
    2. '(len' → logprob: -3.773267984390259
    3. ' len' → logprob: -10.89826774597168
    4. '(' → logprob: -12.89826774597168
    5. '100' → logprob: -14.77326774597168
    6. '[len' → logprob: -14.89826774597168
    7. 'n' → logprob: -15.27326774597168
    8. '=len' → logprob: -15.52326774597168
    9. ',len' → logprob: -16.02326774597168
    10. '	len' → logprob: -16.27326774597168

Token 799: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01145131140947342
    2. '
' → logprob: -5.136451244354248
    3. '<|end|>' → logprob: -5.636451244354248
    4. '  
' → logprob: -8.136451721191406
    5. '    
' → logprob: -8.136451721191406
    6. ' 
' → logprob: -8.511451721191406
    7. '' → logprob: -8.761451721191406
    8. 'd' → logprob: -8.761451721191406
    9. '<|end|>' → logprob: -8.761451721191406
    10. '   ' → logprob: -8.761451721191406

Token 800: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7891466617584229
    2. 'd' → logprob: -0.9141466617584229
    3. '
' → logprob: -3.039146661758423
    4. 'he' → logprob: -4.039146423339844
    5. 's' → logprob: -4.289146423339844
    6. ' 
' → logprob: -4.414146423339844
    7. '    
' → logprob: -4.539146423339844
    8. ' d' → logprob: -5.039146423339844
    9. '  
' → logprob: -5.164146423339844
    10. ')' → logprob: -5.164146423339844

Token 801: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004400205798447132
    2. '   ' → logprob: -5.754400253295898
    3. ' d' → logprob: -6.754400253295898
    4. 's' → logprob: -11.629400253295898
    5. '    
' → logprob: -11.629400253295898
    6. 'he' → logprob: -12.004400253295898
    7. '#' (adapté à ' #') → logprob: -12.129400253295898
    8. ' ' → logprob: -12.254400253295898
    9. '
' → logprob: -12.629400253295898
    10. 'heap' → logprob: -12.879400253295898

Token 802: ' La' (ID: 3038)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.019944695755839348
    2. 'used' → logprob: -5.394944667816162
    3. 'visited' → logprob: -5.644944667816162
    4. 'pq' → logprob: -5.644944667816162
    5. 'q' → logprob: -6.269944667816162
    6. 'hq' → logprob: -6.269944667816162
    7. 'import' → logprob: -6.394944667816162
    8. 'heap' → logprob: -7.144944667816162
    9. 'h' → logprob: -7.519944667816162
    10. 'done' → logprob: -8.01994514465332

Token 803: ' distance' (ID: 9324)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.1749403327703476
    2. 'd' → logprob: -2.049940347671509
    3. 's' → logprob: -3.549940347671509
    4. ' d' → logprob: -6.79994010925293
    5. 'e' → logprob: -8.54994010925293
    6. 'def' → logprob: -8.67494010925293
    7. '[' → logprob: -8.67494010925293
    8. ' s' → logprob: -8.79994010925293
    9. '
' → logprob: -9.17494010925293
    10. 'n' → logprob: -9.42494010925293

Token 804: ' du' (ID: 1462)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.059742171317338943
    2. 'd' → logprob: -3.5597422122955322
    3. '[d' → logprob: -3.5597422122955322
    4. ' [' → logprob: -7.559741973876953
    5. '[' → logprob: -8.184741973876953
    6. ' d' → logprob: -8.309741973876953
    7. 's' → logprob: -10.559741973876953
    8. '   ' → logprob: -11.809741973876953
    9. '[u' → logprob: -12.309741973876953
    10. '[n' → logprob: -12.809741973876953

Token 805: ' sommet' (ID: 130502)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06276881694793701
    2. ' s' → logprob: -2.8127689361572266
    3. '[s' → logprob: -7.187768936157227
    4. ' ' → logprob: -10.562768936157227
    5. 'source' → logprob: -12.062768936157227
    6. '(s' → logprob: -12.187768936157227
    7. '	s' → logprob: -13.187768936157227
    8. ' source' → logprob: -13.687768936157227
    9. '_s' → logprob: -13.937768936157227
    10. '[source' → logprob: -14.562768936157227

Token 806: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2570226788520813
    2. '[s' → logprob: -1.6320226192474365
    3. ' s' → logprob: -3.5070226192474365
    4. '(s' → logprob: -7.757022857666016
    5. '[source' → logprob: -8.257022857666016
    6. 'source' → logprob: -8.632022857666016
    7. ' [' → logprob: -9.632022857666016
    8. '   ' → logprob: -10.007022857666016
    9. '	s' → logprob: -10.382022857666016
    10. ' source' → logprob: -10.632022857666016

Token 807: ' départ' (ID: 32693)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.695798933506012
    2. ' s' → logprob: -0.695798933506012
    3. ' départ' → logprob: -6.945798873901367
    4. 'source' → logprob: -7.070798873901367
    5. ' source' → logprob: -7.570798873901367
    6. ' ' → logprob: -8.570798873901367
    7. 'dé' → logprob: -9.445798873901367
    8. 'depart' → logprob: -10.695798873901367
    9. ' departure' → logprob: -11.945798873901367
    10. ' ' → logprob: -12.445798873901367

Token 808: ' s' (ID: 265)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.31868964433670044
    2. 'd' → logprob: -1.4436895847320557
    3. 's' → logprob: -3.6936895847320557
    4. '   ' → logprob: -5.318689823150635
    5. ' d' → logprob: -5.693689823150635
    6. ' ' → logprob: -6.943689823150635
    7. '[d' → logprob: -7.193689823150635
    8. ' [' → logprob: -7.568689823150635
    9. '[' → logprob: -7.693689823150635
    10. '(s' → logprob: -7.943689823150635

Token 809: ' à' (ID: 1221)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.10564044862985611
    2. 'd' → logprob: -2.605640411376953
    3. '[d' → logprob: -3.855640411376953
    4. '[' → logprob: -6.105640411376953
    5. '   ' → logprob: -6.480640411376953
    6. 's' → logprob: -7.605640411376953
    7. ' d' → logprob: -7.855640411376953
    8. ' [' → logprob: -8.730640411376953
    9. ']' → logprob: -8.730640411376953
    10. '
' → logprob: -10.230640411376953

Token 810: ' lui' (ID: 10623)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03886788338422775
    2. ' s' → logprob: -3.288867950439453
    3. 'd' → logprob: -7.413867950439453
    4. ' d' → logprob: -8.913867950439453
    5. '0' → logprob: -10.288867950439453
    6. ' ' → logprob: -10.538867950439453
    7. '	s' → logprob: -11.913867950439453
    8. '   ' → logprob: -11.913867950439453
    9. '[s' → logprob: -12.288867950439453
    10. ' ' → logprob: -13.038867950439453

Token 811: '-même' (ID: 41085)
  Prédit: '-même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-même' → logprob: -0.010125295259058475
    2. 'm' → logprob: -5.010125160217285
    3. '   ' → logprob: -6.510125160217285
    4. '-' → logprob: -7.260125160217285
    5. 's' → logprob: -7.635125160217285
    6. '=' → logprob: -9.010125160217285
    7. '-m' → logprob: -9.010125160217285
    8. '[' → logprob: -9.010125160217285
    9. ' même' → logprob: -9.260125160217285
    10. '```' → logprob: -9.760125160217285

Token 812: ' est' (ID: 893)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.2337304800748825
    2. '[' → logprob: -2.3587305545806885
    3. 'd' → logprob: -2.4837305545806885
    4. '[d' → logprob: -3.7337305545806885
    5. '=' → logprob: -6.108730316162109
    6. 's' → logprob: -6.108730316162109
    7. '   ' → logprob: -7.358730316162109
    8. ' d' → logprob: -7.483730316162109
    9. ' =' → logprob: -7.483730316162109
    10. ' ' → logprob: -9.48373031616211

Token 813: ' toujours' (ID: 16867)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001735870959237218
    2. ' ' → logprob: -6.376735687255859
    3. '=' → logprob: -10.62673568725586
    4. ' =' → logprob: -12.00173568725586
    5. '   ' → logprob: -12.87673568725586
    6. ' zero' → logprob: -15.00173568725586
    7. 'd' → logprob: -16.00173568725586
    8. ' ' → logprob: -16.25173568725586
    9. 's' → logprob: -16.87673568725586
    10. ' d' → logprob: -17.25173568725586

Token 814: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0067190444096922874
    2. ' ' → logprob: -5.00671911239624
    3. '   ' → logprob: -13.131718635559082
    4. '=' → logprob: -14.131718635559082
    5. ' zero' → logprob: -14.881718635559082
    6. 'd' → logprob: -15.631718635559082
    7. ' =' → logprob: -15.881718635559082
    8. 'zero' → logprob: -16.1317195892334
    9. '  ' → logprob: -16.5067195892334
    10. 's' → logprob: -16.7567195892334

Token 815: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.227250610711053e-05
    2. ' ' → logprob: -10.125041961669922
    3. '   ' → logprob: -13.375041961669922
    4. '=' → logprob: -15.375041961669922
    5. 's' → logprob: -16.250041961669922
    6. '  ' → logprob: -16.500041961669922
    7. 'zero' → logprob: -16.625041961669922
    8. 'd' → logprob: -18.250041961669922
    9. '```' → logprob: -18.375041961669922
    10. '    ' → logprob: -18.625041961669922

Token 816: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06725260615348816
    2. '
' → logprob: -3.0672526359558105
    3. 'd' → logprob: -4.0672526359558105
    4. '    
' → logprob: -6.9422526359558105
    5. 's' → logprob: -9.567252159118652
    6. '  
' → logprob: -9.567252159118652
    7. ' d' → logprob: -9.942252159118652
    8. '   
' → logprob: -10.192252159118652
    9. ' 
' → logprob: -10.317252159118652
    10. ' ' → logprob: -10.567252159118652

Token 817: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04451880604028702
    2. '   ' → logprob: -3.4195187091827393
    3. ' d' → logprob: -4.544518947601318
    4. '	d' → logprob: -9.29451847076416
    5. '
' → logprob: -9.66951847076416
    6. ' ' → logprob: -11.04451847076416
    7. '    
' → logprob: -12.41951847076416
    8. '  ' → logprob: -12.54451847076416
    9. ' 
' → logprob: -13.04451847076416
    10. '  
' → logprob: -13.41951847076416

Token 818: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.00771487457677722
    2. ' d' → logprob: -5.257714748382568
    3. '   ' → logprob: -6.007714748382568
    4. '	d' → logprob: -11.882715225219727
    5. '
' → logprob: -12.257715225219727
    6. ' ' → logprob: -12.257715225219727
    7. '  ' → logprob: -14.007715225219727
    8. '    
' → logprob: -15.257715225219727
    9. ' ' → logprob: -15.382715225219727
    10. '```' → logprob: -15.507715225219727

Token 819: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -5.5577775128767826e-06
    2. '[' → logprob: -12.375005722045898
    3. 's' → logprob: -13.875005722045898
    4. ' [' → logprob: -14.875005722045898
    5. '[S' → logprob: -17.2500057220459
    6. '[
' → logprob: -18.3750057220459
    7. '=s' → logprob: -19.2500057220459
    8. ' s' → logprob: -19.3750057220459
    9. '```' → logprob: -19.6250057220459
    10. '[d' → logprob: -19.6250057220459

Token 820: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002078763209283352
    2. ']=' → logprob: -6.252078533172607
    3. ' ]' → logprob: -8.877079010009766
    4. '=' → logprob: -11.502079010009766
    5. 'd' → logprob: -15.377079010009766
    6. ')' → logprob: -16.377079010009766
    7. ' =' → logprob: -16.502079010009766
    8. '   ' → logprob: -16.627079010009766
    9. 's' → logprob: -17.752079010009766
    10. '[' → logprob: -18.002079010009766

Token 821: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324594371020794
    2. ' =' → logprob: -3.7732460498809814
    3. ',' → logprob: -15.523245811462402
    4. '.=' → logprob: -16.27324676513672
    5. '=d' → logprob: -17.27324676513672
    6. ']=' → logprob: -17.39824676513672
    7. ')=' → logprob: -17.52324676513672
    8. ')' → logprob: -18.27324676513672
    9. '=

' → logprob: -18.39824676513672
    10. '=s' → logprob: -18.39824676513672

Token 822: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '۰' → logprob: -21.375001907348633
    4. '   ' → logprob: -21.750001907348633
    5. ' ' → logprob: -22.750001907348633
    6. '  ' → logprob: -23.000001907348633
    7. '00' → logprob: -23.125001907348633
    8. '０' → logprob: -24.250001907348633
    9. '```' → logprob: -24.625001907348633
    10. '٠' → logprob: -24.875001907348633

Token 823: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '۰' → logprob: -17.25
    4. '０' → logprob: -19.5
    5. '00' → logprob: -19.6875
    6. '000' → logprob: -20.0
    7. '০' → logprob: -20.125
    8. '٠' → logprob: -20.75
    9. 's' → logprob: -20.9375
    10. '   ' → logprob: -21.0625

Token 824: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016293596709147096
    2. 'heap' → logprob: -7.00162935256958
    3. 'pq' → logprob: -7.62662935256958
    4. '    
' → logprob: -9.501629829406738
    5. '	p' → logprob: -10.501629829406738
    6. '	' → logprob: -10.751629829406738
    7. '   ' → logprob: -11.001629829406738
    8. ' heap' → logprob: -11.001629829406738
    9. '
' → logprob: -11.251629829406738
    10. 'q' → logprob: -11.376629829406738

Token 825: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009201920591294765
    2. 'heap' → logprob: -5.759202003479004
    3. '    
' → logprob: -6.259202003479004
    4. '  
' → logprob: -7.259202003479004
    5. ')' → logprob: -7.509202003479004
    6. ' heap' → logprob: -7.759202003479004
    7. '	' → logprob: -8.134202003479004
    8. '
' → logprob: -8.134202003479004
    9. '```' → logprob: -8.134202003479004
    10. ',' → logprob: -8.509202003479004

Token 826: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5216057300567627
    2. 'heap' → logprob: -1.7716057300567627
    3. 'pq' → logprob: -2.0216057300567627
    4. 'hq' → logprob: -2.6466057300567627
    5. 'queue' → logprob: -4.521605491638184
    6. 'Q' → logprob: -5.021605491638184
    7. 'que' → logprob: -5.021605491638184
    8. 'h' → logprob: -5.146605491638184
    9. '   ' → logprob: -6.021605491638184
    10. 'import' → logprob: -8.021605491638184

Token 827: ' Initial' (ID: 9209)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0154045820236206
    2. 'heap' → logprob: -1.0154045820236206
    3. 'hq' → logprob: -1.7654045820236206
    4. 'pq' → logprob: -2.51540470123291
    5. 'h' → logprob: -4.26540470123291
    6. 'queue' → logprob: -5.39040470123291
    7. 'que' → logprob: -5.76540470123291
    8. 'Q' → logprob: -6.51540470123291
    9. 'hp' → logprob: -8.76540470123291
    10. 'import' → logprob: -9.39040470123291

Token 828: 'isation' (ID: 6993)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.097299575805664
    2. 'heap' → logprob: -1.347299575805664
    3. 'e' → logprob: -2.222299575805664
    4. '#' → logprob: -2.347299575805664
    5. 'ement' → logprob: -2.722299575805664
    6. 'ization' → logprob: -3.347299575805664
    7. 'ize' → logprob: -3.597299575805664
    8. 'izer' → logprob: -3.847299575805664
    9. 'queue' → logprob: -3.972299575805664
    10. '```' → logprob: -4.222299575805664

Token 829: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05077886953949928
    2. 'heap' → logprob: -3.550778865814209
    3. 'pq' → logprob: -4.175778865814209
    4. 'q' → logprob: -6.300778865814209
    5. ' heap' → logprob: -7.175778865814209
    6. 'hq' → logprob: -7.675778865814209
    7. ' que' → logprob: -7.925778865814209
    8. ' pq' → logprob: -8.175779342651367
    9. 'que' → logprob: -8.175779342651367
    10. 'priority' → logprob: -8.300779342651367

Token 830: ' tas' (ID: 17067)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.035463400185108185
    2. 'pq' → logprob: -4.160463333129883
    3. 'q' → logprob: -4.285463333129883
    4. 'queue' → logprob: -6.285463333129883
    5. 'hq' → logprob: -6.410463333129883
    6. '[]' → logprob: -6.660463333129883
    7. 'priority' → logprob: -8.035463333129883
    8. 'h' → logprob: -8.410463333129883
    9. 'min' → logprob: -10.285463333129883
    10. 'tas' → logprob: -10.535463333129883

Token 831: ' (' (ID: 350)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.3000280559062958
    2. '[]' → logprob: -1.8000280857086182
    3. ' =' → logprob: -3.050028085708618
    4. ' heap' → logprob: -3.550028085708618
    5. '   ' → logprob: -5.175027847290039
    6. '[(' → logprob: -6.175027847290039
    7. 'q' → logprob: -6.175027847290039
    8. 'pq' → logprob: -6.425027847290039
    9. ',' → logprob: -6.800027847290039
    10. '=[]' → logprob: -6.925027847290039

Token 832: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6265099048614502
    2. '[]' → logprob: -0.8765099048614502
    3. 'q' → logprob: -3.50150990486145
    4. 'h' → logprob: -4.876509666442871
    5. 'pq' → logprob: -5.001509666442871
    6. '[])' → logprob: -6.251509666442871
    7. 'hq' → logprob: -7.001509666442871
    8. 'queue' → logprob: -7.376509666442871
    9. '[(' → logprob: -7.376509666442871
    10. '[]
' → logprob: -8.001509666442871

Token 833: ')' (ID: 8)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0352680683135986
    2. ' =' → logprob: -1.5352680683135986
    3. ')' → logprob: -1.6602680683135986
    4. '=[]' → logprob: -2.2852680683135986
    5. 'q' → logprob: -2.7852680683135986
    6. 'heap' → logprob: -3.5352680683135986
    7. '=' → logprob: -3.9102680683135986
    8. ',' → logprob: -4.6602678298950195
    9. '[])' → logprob: -5.5352678298950195
    10. '[]
' → logprob: -5.7852678298950195

Token 834: ' qui' (ID: 2780)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.010841356590390205
    2. '[]' → logprob: -5.385841369628906
    3. 'q' → logprob: -6.385841369628906
    4. 'h' → logprob: -6.760841369628906
    5. 'pq' → logprob: -6.885841369628906
    6. '[(' → logprob: -7.760841369628906
    7. '   ' → logprob: -7.885841369628906
    8. ' =' → logprob: -8.135841369628906
    9. '=' → logprob: -8.135841369628906
    10. 'hq' → logprob: -8.510841369628906

Token 835: ' cont' (ID: 836)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cont' → logprob: -1.2769864797592163
    2. '=[]' → logprob: -1.4019864797592163
    3. ' =' → logprob: -1.7769864797592163
    4. 'heap' → logprob: -2.151986598968506
    5. ' contient' → logprob: -2.776986598968506
    6. '=' → logprob: -3.276986598968506
    7. '=[' → logprob: -3.901986598968506
    8. '[]' → logprob: -3.901986598968506
    9. ' est' → logprob: -4.651986598968506
    10. '[' → logprob: -5.276986598968506

Token 836: 'i' (ID: 72)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.23199796676635742
    2. 'ains' → logprob: -1.6069979667663574
    3. 'ain' → logprob: -5.731997966766357
    4. 'iens' → logprob: -7.231997966766357
    5. 'aines' → logprob: -7.731997966766357
    6. 'iennent' → logprob: -7.981997966766357
    7. 'iend' → logprob: -7.981997966766357
    8. 'i' → logprob: -8.356998443603516
    9. 'in' → logprob: -8.356998443603516
    10. 'enir' → logprob: -9.231998443603516

Token 837: 'endra' (ID: 32364)
  Prédit: 'endra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endra' → logprob: -0.24438762664794922
    2. 'ent' → logprob: -2.744387626647949
    3. 't' → logprob: -3.244387626647949
    4. 'ene' → logprob: -3.369387626647949
    5. 'ient' → logprob: -4.119387626647949
    6. 'nt' → logprob: -4.494387626647949
    7. 'ains' → logprob: -4.869387626647949
    8. 'ont' → logprob: -4.994387626647949
    9. 'e' → logprob: -5.244387626647949
    10. 'n' → logprob: -5.619387626647949

Token 838: ' les' (ID: 1341)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.00019531534053385258
    2. '[]' → logprob: -9.000195503234863
    3. ' [(' → logprob: -10.125195503234863
    4. '[s' → logprob: -10.625195503234863
    5. '(s' → logprob: -13.125195503234863
    6. '[' → logprob: -13.375195503234863
    7. '[]
' → logprob: -13.625195503234863
    8. 'heap' → logprob: -14.250195503234863
    9. '   ' → logprob: -14.500195503234863
    10. ' ' → logprob: -14.625195503234863

Token 839: ' somm' (ID: 44830)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0013177391374483705
    2. '[]' → logprob: -7.251317501068115
    3. '(s' → logprob: -8.001317977905273
    4. '(' → logprob: -9.001317977905273
    5. 'heap' → logprob: -10.126317977905273
    6. '[' → logprob: -10.376317977905273
    7. '[]
' → logprob: -10.376317977905273
    8. '[s' → logprob: -10.751317977905273
    9. '[
' → logprob: -11.376317977905273
    10. ' [(' → logprob: -12.126317977905273

Token 840: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.4476168155670166
    2. 'et' → logprob: -1.6976168155670166
    3. '   ' → logprob: -2.9476168155670166
    4. 'aires' → logprob: -3.5726168155670166
    5. 'ots' → logprob: -3.5726168155670166
    6. 'a' → logprob: -4.1976165771484375
    7. 'ar' → logprob: -4.5726165771484375
    8. 'és' → logprob: -5.4476165771484375
    9. 'u' → logprob: -5.5726165771484375
    10. 'êts' → logprob: -5.6976165771484375

Token 841: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20009048283100128
    2. 'heap' → logprob: -2.3250904083251953
    3. ',' → logprob: -2.7000904083251953
    4. '[(' → logprob: -4.700090408325195
    5. '[]' → logprob: -5.950090408325195
    6. ' heap' → logprob: -6.700090408325195
    7. '(heap' → logprob: -7.325090408325195
    8. ' =' → logprob: -7.325090408325195
    9. '[' → logprob: -7.825090408325195
    10. 'q' → logprob: -8.575090408325195

Token 842: ' traiter' (ID: 105852)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.2792215645313263
    2. 'tr' → logprob: -2.029221534729004
    3. 'expl' → logprob: -2.779221534729004
    4. 'tra' → logprob: -3.654221534729004
    5. ' traiter' → logprob: -4.154221534729004
    6. 'process' → logprob: -5.279221534729004
    7. 'vis' → logprob: -6.904221534729004
    8. ' explorer' → logprob: -7.904221534729004
    9. 'proces' → logprob: -8.529221534729004
    10. 'pop' → logprob: -8.529221534729004

Token 843: '.
' (ID: 558)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.1448850780725479
    2. '   ' → logprob: -2.7698850631713867
    3. ' =' → logprob: -3.5198850631713867
    4. ',' → logprob: -3.8948850631713867
    5. ' heap' → logprob: -5.019885063171387
    6. '[' → logprob: -5.519885063171387
    7. '[]' → logprob: -5.894885063171387
    8. '=' → logprob: -6.519885063171387
    9. '(heap' → logprob: -6.519885063171387
    10. 'pq' → logprob: -6.644885063171387

Token 844: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.00609575817361474
    2. ' heap' → logprob: -6.006095886230469
    3. 'q' → logprob: -6.756095886230469
    4. 'pq' → logprob: -7.006095886230469
    5. 'h' → logprob: -7.506095886230469
    6. 'hp' → logprob: -8.006095886230469
    7. 'hq' → logprob: -8.131095886230469
    8. '   ' → logprob: -8.506095886230469
    9. 'Q' → logprob: -9.631095886230469
    10. 'queue' → logprob: -9.631095886230469

Token 845: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.005817521829158068
    2. 'q' → logprob: -6.130817413330078
    3. 'hq' → logprob: -6.505817413330078
    4. 'h' → logprob: -6.755817413330078
    5. 'pq' → logprob: -7.755817413330078
    6. '   ' → logprob: -8.755817413330078
    7. 'queue' → logprob: -8.755817413330078
    8. 'Q' → logprob: -9.130817413330078
    9. 'hp' → logprob: -9.505817413330078
    10. 'que' → logprob: -10.755817413330078

Token 846: ' Le' (ID: 2018)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.011511181481182575
    2. 'h' → logprob: -5.511511325836182
    3. 'q' → logprob: -5.761511325836182
    4. 'hq' → logprob: -6.136511325836182
    5. 'pq' → logprob: -6.886511325836182
    6. ' heap' → logprob: -7.886511325836182
    7. 'hp' → logprob: -8.136510848999023
    8. 'queue' → logprob: -8.386510848999023
    9. 'Q' → logprob: -8.886510848999023
    10. 'que' → logprob: -10.886510848999023

Token 847: ' tas' (ID: 17067)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0029371678829193115
    2. 'h' → logprob: -6.752937316894531
    3. 'tas' → logprob: -7.002937316894531
    4. 'q' → logprob: -8.002937316894531
    5. 'queue' → logprob: -8.627937316894531
    6. 'pq' → logprob: -9.002937316894531
    7. 'hp' → logprob: -9.252937316894531
    8. '[]' → logprob: -9.627937316894531
    9. 'hq' → logprob: -10.752937316894531
    10. 'pile' → logprob: -11.627937316894531

Token 848: ' cont' (ID: 836)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20890167355537415
    2. ' =' → logprob: -1.7089016437530518
    3. '=[]' → logprob: -4.958901882171631
    4. 'heap' → logprob: -8.958901405334473
    5. '.append' → logprob: -9.458901405334473
    6. '=[]
' → logprob: -9.958901405334473
    7. ',' → logprob: -9.958901405334473
    8. '.' → logprob: -10.208901405334473
    9. '=[' → logprob: -10.833901405334473
    10. '.push' → logprob: -11.083901405334473

Token 849: 'i' (ID: 72)
  Prédit: 'enu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enu' → logprob: -0.05361943691968918
    2. 'ainer' → logprob: -4.303619384765625
    3. 'ient' → logprob: -4.428619384765625
    4. 'eur' → logprob: -5.053619384765625
    5. 'e' → logprob: -5.178619384765625
    6. 'ene' → logprob: -5.428619384765625
    7. 'ent' → logprob: -5.928619384765625
    8. 'est' → logprob: -7.053619384765625
    9. 'ain' → logprob: -7.053619384765625
    10. 'aine' → logprob: -7.053619384765625

Token 850: 'endra' (ID: 32364)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0546348094940186
    2. 'ue' → logprob: -1.1796348094940186
    3. 'ner' → logprob: -1.9296348094940186
    4. 'é' → logprob: -3.3046348094940186
    5. 'uer' → logprob: -3.3046348094940186
    6. 'er' → logprob: -3.3046348094940186
    7. 'ainer' → logprob: -4.179635047912598
    8. 'eur' → logprob: -4.304635047912598
    9. 'ent' → logprob: -4.679635047912598
    10. '[' → logprob: -4.804635047912598

Token 851: ' des' (ID: 731)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.004815530497580767
    2. 'des' → logprob: -6.379815578460693
    3. ' [(' → logprob: -6.754815578460693
    4. '[]' → logprob: -7.379815578460693
    5. 'tu' → logprob: -7.879815578460693
    6. ' des' → logprob: -8.004815101623535
    7. '[' → logprob: -8.379815101623535
    8. '(' → logprob: -9.379815101623535
    9. '[s' → logprob: -9.629815101623535
    10. '(s' → logprob: -9.754815101623535

Token 852: ' tuples' (ID: 112464)
  Prédit: ' tuples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -0.3518090546131134
    2. 'tu' → logprob: -1.351809024810791
    3. '[(' → logprob: -3.851809024810791
    4. '[]' → logprob: -4.726809024810791
    5. '(' → logprob: -6.101809024810791
    6. 'elements' → logprob: -6.726809024810791
    7. ' (' → logprob: -6.851809024810791
    8. '(t' → logprob: -7.601809024810791
    9. '[' → logprob: -7.726809024810791
    10. ' [(' → logprob: -7.726809024810791

Token 853: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.050902143120765686
    2. ' (' → logprob: -3.5509021282196045
    3. '   ' → logprob: -4.175902366638184
    4. '(priority' → logprob: -6.050902366638184
    5. '[(' → logprob: -7.050902366638184
    6. '(heap' → logprob: -7.550902366638184
    7. '(v' → logprob: -7.800902366638184
    8. '(cost' → logprob: -8.425902366638184
    9. '(s' → logprob: -8.800902366638184
    10. '(de' → logprob: -9.050902366638184

Token 854: 'distance' (ID: 40614)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5564994812011719
    2. '0' → logprob: -1.5564994812011719
    3. '(distance' → logprob: -2.556499481201172
    4. '(d' → logprob: -3.181499481201172
    5. 'd' → logprob: -3.306499481201172
    6. 'distance' → logprob: -3.431499481201172
    7. 'dist' → logprob: -4.056499481201172
    8. '(dist' → logprob: -5.056499481201172
    9. ' (' → logprob: -6.556499481201172
    10. '(cost' → logprob: -6.556499481201172

Token 855: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007092170417308807
    2. ',s' → logprob: -8.125709533691406
    3. ' ,' → logprob: -8.375709533691406
    4. 's' → logprob: -8.875709533691406
    5. '(s' → logprob: -11.625709533691406
    6. '   ' → logprob: -12.125709533691406
    7. ',v' → logprob: -12.625709533691406
    8. 'v' → logprob: -12.875709533691406
    9. 'cost' → logprob: -13.000709533691406
    10. ',u' → logprob: -13.125709533691406

Token 856: ' sommet' (ID: 130502)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.841167151927948
    2. 'vertex' → logprob: -0.966167151927948
    3. 'som' → logprob: -2.2161672115325928
    4. ' sommet' → logprob: -3.2161672115325928
    5. 's' → logprob: -3.9661672115325928
    6. ' node' → logprob: -4.716166973114014
    7. ' noe' → logprob: -5.466166973114014
    8. 'no' → logprob: -5.841166973114014
    9. ' vertex' → logprob: -5.841166973114014
    10. 'u' → logprob: -7.966166973114014

Token 857: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003360582049936056
    2. '),' → logprob: -8.250335693359375
    3. 's' → logprob: -10.625335693359375
    4. ')
' → logprob: -11.000335693359375
    5. ' )' → logprob: -11.625335693359375
    6. '   ' → logprob: -12.000335693359375
    7. ',' → logprob: -12.500335693359375
    8. ').' → logprob: -12.500335693359375
    9. ')s' → logprob: -13.125335693359375
    10. '(s' → logprob: -13.500335693359375

Token 858: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.057994261384010315
    2. '   ' → logprob: -3.0579943656921387
    3. 'pq' → logprob: -5.807994365692139
    4. ' heap' → logprob: -5.932994365692139
    5. 'hq' → logprob: -6.807994365692139
    6. 'h' → logprob: -7.057994365692139
    7. 'hp' → logprob: -7.057994365692139
    8. 'q' → logprob: -7.557994365692139
    9. 'queue' → logprob: -8.93299388885498
    10. 'Q' → logprob: -9.18299388885498

Token 859: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.026203572750091553
    2. 'q' → logprob: -4.776203632354736
    3. 'h' → logprob: -5.026203632354736
    4. 'pq' → logprob: -5.401203632354736
    5. 'hq' → logprob: -5.776203632354736
    6. 'queue' → logprob: -6.901203632354736
    7. '   ' → logprob: -7.026203632354736
    8. 'Q' → logprob: -7.276203632354736
    9. 'que' → logprob: -7.776203632354736
    10. 'hp' → logprob: -8.776203155517578

Token 860: ' On' (ID: 2160)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.032082539051771164
    2. 'q' → logprob: -4.657082557678223
    3. 'h' → logprob: -4.782082557678223
    4. 'pq' → logprob: -5.157082557678223
    5. 'hq' → logprob: -5.407082557678223
    6. 'Q' → logprob: -6.407082557678223
    7. 'queue' → logprob: -6.907082557678223
    8. 'hp' → logprob: -7.907082557678223
    9. 'que' → logprob: -8.157082557678223
    10. 'todo' → logprob: -10.032082557678223

Token 861: ' commence' (ID: 44755)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.9516353011131287
    2. '=' → logprob: -1.8266353607177734
    3. 'push' → logprob: -1.8266353607177734
    4. ' =' → logprob: -2.2016353607177734
    5. ' he' → logprob: -3.2016353607177734
    6. 'e' → logprob: -4.076635360717773
    7. 'heap' → logprob: -4.076635360717773
    8. 'import' → logprob: -4.201635360717773
    9. '=[]' → logprob: -4.201635360717773
    10. 'ush' → logprob: -4.451635360717773

Token 862: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.8562235832214355
    2. 'avec' → logprob: -1.6062235832214355
    3. ' par' → logprob: -1.8562235832214355
    4. ' avec' → logprob: -2.1062235832214355
    5. 'with' → logprob: -2.8562235832214355
    6. '   ' → logprob: -3.6062235832214355
    7. ' with' → logprob: -5.3562235832214355
    8. 'heap' → logprob: -6.1062235832214355
    9. 'he' → logprob: -6.4812235832214355
    10. '[(' → logprob: -7.2312235832214355

Token 863: ' mettre' (ID: 25339)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0022166306152939796
    2. 'he' → logprob: -6.252216815948486
    3. '[]' → logprob: -8.377216339111328
    4. '[]
' → logprob: -10.127216339111328
    5. 'heap' → logprob: -11.627216339111328
    6. ' [(' → logprob: -11.752216339111328
    7. '[' → logprob: -14.877216339111328
    8. '([(' → logprob: -15.377216339111328
    9. ' he' → logprob: -15.877216339111328
    10. '[
' → logprob: -16.002216339111328

Token 864: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002768382430076599
    2. '[(' → logprob: -6.377768516540527
    3. ' (' → logprob: -7.002768516540527
    4. '   ' → logprob: -9.127768516540527
    5. '(s' → logprob: -10.002768516540527
    6. ' [(' → logprob: -13.627768516540527
    7. ' ' → logprob: -14.627768516540527
    8. '([(' → logprob: -16.00276756286621
    9. '  ' → logprob: -16.12776756286621
    10. '(t' → logprob: -16.12776756286621

Token 865: ' sommet' (ID: 130502)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018096525454893708
    2. '0' → logprob: -7.126809597015381
    3. '(s' → logprob: -7.626809597015381
    4. ' (' → logprob: -8.376810073852539
    5. 'd' → logprob: -8.751810073852539
    6. 'heap' → logprob: -9.251810073852539
    7. 's' → logprob: -11.626810073852539
    8. 'he' → logprob: -11.751810073852539
    9. ' ' → logprob: -11.876810073852539
    10. '   ' → logprob: -13.251810073852539

Token 866: ' source' (ID: 4256)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.013868223875761032
    2. '(' → logprob: -4.63886833190918
    3. '0' → logprob: -6.13886833190918
    4. 's' → logprob: -6.51386833190918
    5. ' (' → logprob: -8.38886833190918
    6. 'de' → logprob: -9.38886833190918
    7. ',' → logprob: -9.51386833190918
    8. 'd' → logprob: -10.51386833190918
    9. '   ' → logprob: -11.26386833190918
    10. 'source' → logprob: -12.26386833190918

Token 867: ' avec' (ID: 3937)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.6108322739601135
    2. ',' → logprob: -2.1108322143554688
    3. '(s' → logprob: -2.1108322143554688
    4. '   ' → logprob: -2.7358322143554688
    5. 'heap' → logprob: -2.9858322143554688
    6. ' =' → logprob: -3.2358322143554688
    7. 'd' → logprob: -4.235832214355469
    8. ' [(' → logprob: -4.860832214355469
    9. ' heap' → logprob: -5.235832214355469
    10. '([(' → logprob: -5.485832214355469

Token 868: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015740707516670227
    2. '0' → logprob: -4.640740871429443
    3. ' (' → logprob: -5.140740871429443
    4. 'distance' → logprob: -10.265740394592285
    5. ' ' → logprob: -10.390740394592285
    6. '(s' → logprob: -10.515740394592285
    7. '(distance' → logprob: -11.015740394592285
    8. 'd' → logprob: -13.265740394592285
    9. '(d' → logprob: -14.015740394592285
    10. ' distance' → logprob: -14.765740394592285

Token 869: ' distance' (ID: 9324)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2792733311653137
    2. '0' → logprob: -1.779273271560669
    3. 'distance' → logprob: -3.029273271560669
    4. ' (' → logprob: -3.779273271560669
    5. 'tuple' → logprob: -6.904273509979248
    6. 'd' → logprob: -7.154273509979248
    7. ' ' → logprob: -8.02927303314209
    8. 'heap' → logprob: -8.02927303314209
    9. 'token' → logprob: -8.15427303314209
    10. '(
' → logprob: -8.52927303314209

Token 870: ' de' (ID: 334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10291507095098495
    2. ' de' → logprob: -3.602915048599243
    3. '(' → logprob: -3.977915048599243
    4. ' (' → logprob: -4.102915287017822
    5. 'de' → logprob: -4.602915287017822
    6. 'of' → logprob: -5.102915287017822
    7. '=' → logprob: -5.352915287017822
    8. ' ' → logprob: -5.477915287017822
    9. ' of' → logprob: -5.477915287017822
    10. '(s' → logprob: -5.977915287017822

Token 871: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015029559144750237
    2. ' ' → logprob: -6.501502990722656
    3. '   ' → logprob: -15.751502990722656
    4. '(' → logprob: -16.001502990722656
    5. '  ' → logprob: -16.626502990722656
    6. ' zero' → logprob: -16.876502990722656
    7. ' (' → logprob: -17.001502990722656
    8. ',' → logprob: -17.251502990722656
    9. 'zero' → logprob: -17.376502990722656
    10. ' zéro' → logprob: -17.876502990722656

Token 872: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.735893965815194e-05
    2. ' ' → logprob: -11.000017166137695
    3. 'zero' → logprob: -15.500017166137695
    4. 's' → logprob: -15.875017166137695
    5. 'd' → logprob: -16.125017166137695
    6. '   ' → logprob: -17.000017166137695
    7. '۰' → logprob: -17.375017166137695
    8. ',' → logprob: -17.375017166137695
    9. '(' → logprob: -17.625017166137695
    10. ' zero' → logprob: -17.937517166137695

Token 873: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43565642833709717
    2. 'heap' → logprob: -1.1856564283370972
    3. ',' → logprob: -3.5606565475463867
    4. 'he' → logprob: -4.685656547546387
    5. '[(' → logprob: -5.560656547546387
    6. ' heap' → logprob: -6.310656547546387
    7. 'pq' → logprob: -6.560656547546387
    8. '(heap' → logprob: -7.185656547546387
    9. ',
' → logprob: -7.810656547546387
    10. ':' → logprob: -8.560656547546387

Token 874: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.03975545987486839
    2. 'pq' → logprob: -4.039755344390869
    3. '   ' → logprob: -4.289755344390869
    4. 'q' → logprob: -5.789755344390869
    5. 'hq' → logprob: -6.414755344390869
    6. 'h' → logprob: -6.539755344390869
    7. 'hp' → logprob: -7.039755344390869
    8. 'queue' → logprob: -8.039755821228027
    9. 'todo' → logprob: -9.664755821228027
    10. ' heap' → logprob: -9.914755821228027

Token 875: ' h' (ID: 312)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.045639850199222565
    2. 'q' → logprob: -3.795639753341675
    3. 'pq' → logprob: -4.545639991760254
    4. 'h' (adapté à ' h') → logprob: -5.545639991760254
    5. 'hq' → logprob: -6.045639991760254
    6. 'queue' → logprob: -6.045639991760254
    7. 'Q' → logprob: -6.420639991760254
    8. 'que' → logprob: -7.420639991760254
    9. '   ' → logprob: -8.295639991760254
    10. 'hp' → logprob: -8.545639991760254

Token 876: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3815663158893585
    2. ' =' → logprob: -1.3815662860870361
    3. 'e' → logprob: -2.756566286087036
    4. '=[' → logprob: -6.631566524505615
    5. '=[]' → logprob: -7.131566524505615
    6. '   ' → logprob: -9.381566047668457
    7. 'push' → logprob: -9.631566047668457
    8. '.push' → logprob: -9.631566047668457
    9. '=[]
' → logprob: -10.506566047668457
    10. 'heap' → logprob: -10.631566047668457

Token 877: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -6.869017852295656e-06
    2. '[]' → logprob: -12.000006675720215
    3. ' [(' → logprob: -14.250006675720215
    4. '[' → logprob: -17.12500762939453
    5. '[]
' → logprob: -18.00000762939453
    6. '[((' → logprob: -19.62500762939453
    7. '([(' → logprob: -21.37500762939453
    8. '[]

' → logprob: -21.62500762939453
    9. '[
' → logprob: -23.12500762939453
    10. '[],' → logprob: -23.62500762939453

Token 878: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '(' → logprob: -16.750001907348633
    4. '   ' → logprob: -18.625001907348633
    5. 'd' → logprob: -19.625001907348633
    6. '۰' → logprob: -19.625001907348633
    7. ',' → logprob: -20.000001907348633
    8. ')' → logprob: -20.125001907348633
    9. '```' → logprob: -20.375001907348633
    10. '00' → logprob: -20.375001907348633

Token 879: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003909915219992399
    2. 's' → logprob: -6.253910064697266
    3. ',s' → logprob: -6.253910064697266
    4. ' ,' → logprob: -10.003910064697266
    5. ' s' → logprob: -11.628910064697266
    6. ',
' → logprob: -13.253910064697266
    7. ')' → logprob: -16.253910064697266
    8. '0' → logprob: -17.003910064697266
    9. '(s' → logprob: -17.128910064697266
    10. '{s' → logprob: -17.128910064697266

Token 880: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.547789674485102e-05
    2. ' s' → logprob: -10.250035285949707
    3. ')' → logprob: -17.750036239624023
    4. '_s' → logprob: -17.750036239624023
    5. '   ' → logprob: -18.125036239624023
    6. '#' → logprob: -19.125036239624023
    7. '```' → logprob: -19.250036239624023
    8. ' ' → logprob: -19.750036239624023
    9. '0' → logprob: -19.875036239624023
    10. '`s' → logprob: -20.000036239624023

Token 881: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004938178462907672
    2. ')' → logprob: -7.625494003295898
    3. ')]
' → logprob: -12.875494003295898
    4. ' )' → logprob: -13.125494003295898
    5. ')])' → logprob: -14.750494003295898
    6. ']' → logprob: -15.625494003295898
    7. '   ' → logprob: -15.625494003295898
    8. ')],' → logprob: -15.750494003295898
    9. ')]

' → logprob: -16.5004940032959
    10. '))' → logprob: -16.6254940032959

Token 882: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.40256956219673157
    2. '   ' → logprob: -1.1525695323944092
    3. ' while' → logprob: -4.652569770812988
    4. '	while' → logprob: -5.152569770812988
    5. '```' → logprob: -8.527569770812988
    6. '    
' → logprob: -10.277569770812988
    7. '
' → logprob: -11.277569770812988
    8. ')' → logprob: -13.027569770812988
    9. '   ' → logprob: -13.152569770812988
    10. 'While' → logprob: -13.527569770812988

Token 883: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.002272773766890168
    2. '   ' → logprob: -6.252272605895996
    3. '	while' → logprob: -8.627272605895996
    4. ' while' → logprob: -8.752272605895996
    5. '
' → logprob: -12.002272605895996
    6. '```' → logprob: -15.002272605895996
    7. 'While' → logprob: -15.877272605895996
    8. '    
' → logprob: -16.002273559570312
    9. '#' (adapté à ' #') → logprob: -17.252273559570312
    10. ' ' → logprob: -17.627273559570312

Token 884: ' Bou' (ID: 33816)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -9.610702363715973e-06
    2. ' while' → logprob: -11.875009536743164
    3. '   ' → logprob: -13.625009536743164
    4. 'import' → logprob: -14.500009536743164
    5. '
' → logprob: -14.625009536743164
    6. '	while' → logprob: -14.750009536743164
    7. 'While' → logprob: -17.375009536743164
    8. '#' → logprob: -18.000009536743164
    9. 'wh' → logprob: -19.000009536743164
    10. '```' → logprob: -19.375009536743164

Token 885: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.004081485792994499
    2. 'cl' → logprob: -6.1290812492370605
    3. '   ' → logprob: -7.0040812492370605
    4. 'clé' → logprob: -7.6290812492370605
    5. 't' → logprob: -8.629081726074219
    6. 'cles' → logprob: -9.254081726074219
    7. 'c' → logprob: -9.754081726074219
    8. '#' → logprob: -9.754081726074219
    9. 'cler' → logprob: -10.254081726074219
    10. 'n' → logprob: -10.754081726074219

Token 886: ' tant' (ID: 16235)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15430119633674622
    2. ' while' → logprob: -2.404301166534424
    3. 'while' → logprob: -3.279301166534424
    4. ':' → logprob: -4.279301166534424
    5. '	while' → logprob: -7.654301166534424
    6. ' for' → logprob: -9.029301643371582
    7. '    ' → logprob: -9.154301643371582
    8. ' :' → logprob: -9.279301643371582
    9. ':
' → logprob: -9.404301643371582
    10. '  ' → logprob: -9.779301643371582

Token 887: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.37231534719467163
    2. '   ' → logprob: -1.6223154067993164
    3. 'tant' → logprob: -2.9973154067993164
    4. 'que' → logprob: -3.3723154067993164
    5. ' tant' → logprob: -5.247315406799316
    6. 'while' → logprob: -5.247315406799316
    7. 'ant' → logprob: -5.497315406799316
    8. 'u' → logprob: -5.622315406799316
    9. ' while' → logprob: -5.747315406799316
    10. 'au' → logprob: -7.122315406799316

Token 888: ''il' (ID: 14683)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.20151935517787933
    2. 'h' → logprob: -1.7015193700790405
    3. ' len' → logprob: -9.451519012451172
    4. 'len' → logprob: -11.451519012451172
    5. '(h' → logprob: -12.076519012451172
    6. '	h' → logprob: -12.326519012451172
    7. ' ' → logprob: -13.076519012451172
    8. '   ' → logprob: -13.201519012451172
    9. ' not' → logprob: -14.451519012451172
    10. ' ' → logprob: -14.701519012451172

Token 889: ' reste' (ID: 26769)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5781452655792236
    2. 'h' → logprob: -0.8281452655792236
    3. ' y' → logprob: -7.5781450271606445
    4. 'len' → logprob: -7.8281450271606445
    5. ' len' → logprob: -7.8281450271606445
    6. 'y' → logprob: -8.328145027160645
    7. 'a' → logprob: -8.953145027160645
    8. '(h' → logprob: -9.078145027160645
    9. '#' → logprob: -9.578145027160645
    10. '   ' → logprob: -9.828145027160645

Token 890: ' des' (ID: 731)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.01138567365705967
    2. 'h' → logprob: -4.511385440826416
    3. ' len' → logprob: -8.386385917663574
    4. ' ' → logprob: -9.511385917663574
    5. 'len' → logprob: -11.136385917663574
    6. '(h' → logprob: -11.761385917663574
    7. '	h' → logprob: -12.511385917663574
    8. '   ' → logprob: -12.886385917663574
    9. 's' → logprob: -13.636385917663574
    10. '  ' → logprob: -13.761385917663574

Token 891: ' éléments' (ID: 57375)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.02369251474738121
    2. ' h' → logprob: -3.7736926078796387
    3. 'elements' → logprob: -8.52369213104248
    4. 'len' → logprob: -9.02369213104248
    5. 'élé' → logprob: -9.89869213104248
    6. '(h' → logprob: -10.89869213104248
    7. ' elements' → logprob: -11.27369213104248
    8. ' éléments' → logprob: -11.64869213104248
    9. ' len' → logprob: -11.89869213104248
    10. '#' → logprob: -12.02369213104248

Token 892: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.913409948348999
    2. 'dans' → logprob: -1.288409948348999
    3. ' h' → logprob: -2.038409948348999
    4. 'h' → logprob: -2.913409948348999
    5. ' in' → logprob: -3.288409948348999
    6. '   ' → logprob: -3.288409948348999
    7. 'in' → logprob: -4.163410186767578
    8. ' à' → logprob: -4.538410186767578
    9. '>' → logprob: -4.788410186767578
    10. '(h' → logprob: -4.913410186767578

Token 893: ' le' (ID: 505)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00038038729690015316
    2. ' h' → logprob: -7.875380516052246
    3. 'the' → logprob: -15.875380516052246
    4. '(h' → logprob: -16.75037956237793
    5. '   ' → logprob: -17.37537956237793
    6. ' the' → logprob: -17.62537956237793
    7. '	h' → logprob: -17.75037956237793
    8. '```' → logprob: -18.62537956237793
    9. '
' → logprob: -18.75037956237793
    10. 'he' → logprob: -19.12537956237793

Token 894: ' tas' (ID: 17067)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0001805377542041242
    2. 'heap' → logprob: -9.1251802444458
    3. ' h' → logprob: -9.6251802444458
    4. '   ' → logprob: -13.6251802444458
    5. ' heap' → logprob: -13.6251802444458
    6. '	h' → logprob: -14.0001802444458
    7. '
' → logprob: -14.3751802444458
    8. 'ha' → logprob: -15.0001802444458
    9. '```' → logprob: -15.1251802444458
    10. 'hé' → logprob: -15.2501802444458

Token 895: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25942882895469666
    2. ':' → logprob: -1.509428858757019
    3. ':
' → logprob: -5.884428977966309
    4. 'while' → logprob: -5.884428977966309
    5. ' while' → logprob: -6.759428977966309
    6. ' :' → logprob: -8.384428977966309
    7. '.' → logprob: -8.509428977966309
    8. ',' → logprob: -8.634428977966309
    9. ' :
' → logprob: -10.634428977966309
    10. '	while' → logprob: -10.634428977966309

Token 896: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002324864035472274
    2. ' while' → logprob: -7.127325057983398
    3. 'while' → logprob: -7.252325057983398
    4. '	while' → logprob: -8.127325057983398
    5. '       ' → logprob: -8.502325057983398
    6. '
' → logprob: -9.127325057983398
    7. '    
' → logprob: -9.877325057983398
    8. '    ' → logprob: -10.127325057983398
    9. '```' → logprob: -10.502325057983398
    10. '  ' → logprob: -11.002325057983398

Token 897: ''est' (ID: 6616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3209992051124573
    2. 'u' → logprob: -1.9459991455078125
    3. 'while' → logprob: -3.0709991455078125
    4. 'e' → logprob: -3.8209991455078125
    5. 'es' → logprob: -4.1959991455078125
    6. '#' → logprob: -4.1959991455078125
    7. ' while' → logprob: -4.8209991455078125
    8. '       ' → logprob: -5.3209991455078125
    9. '=' → logprob: -6.0709991455078125
    10. 'a' → logprob: -6.0709991455078125

Token 898: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.2907360792160034
    2. ' h' → logprob: -2.290736198425293
    3. 'h' → logprob: -2.915736198425293
    4. 'à' → logprob: -3.165736198425293
    5. '   ' → logprob: -3.790736198425293
    6. ' à' → logprob: -4.415736198425293
    7. '-' → logprob: -5.415736198425293
    8. '#' → logprob: -5.540736198425293
    9. ' True' → logprob: -5.915736198425293
    10. ' not' → logprob: -6.790736198425293

Token 899: '-dire' (ID: 76064)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.8605107665061951
    2. ' True' → logprob: -1.4855108261108398
    3. 'True' → logprob: -2.11051082611084
    4. 'not' → logprob: -2.11051082611084
    5. ' not' → logprob: -3.23551082611084
    6. ' h' → logprob: -3.86051082611084
    7. 'ce' → logprob: -3.98551082611084
    8. ' ce' → logprob: -5.23551082611084
    9. '   ' → logprob: -5.73551082611084
    10. '0' → logprob: -5.73551082611084

Token 900: ' qu' (ID: 474)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1288757175207138
    2. ' h' → logprob: -2.128875732421875
    3. '   ' → logprob: -6.503875732421875
    4. 'len' → logprob: -8.253875732421875
    5. ' len' → logprob: -9.003875732421875
    6. '	h' → logprob: -10.628875732421875
    7. ' ' → logprob: -11.628875732421875
    8. '
' → logprob: -12.128875732421875
    9. ' True' → logprob: -12.253875732421875
    10. '(h' → logprob: -12.628875732421875

Token 901: ''il' (ID: 14683)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.16535113751888275
    2. 'h' → logprob: -2.290351152420044
    3. ' len' → logprob: -3.040351152420044
    4. 'len' → logprob: -6.040350914001465
    5. '(len' → logprob: -8.665350914001465
    6. '(h' → logprob: -8.790350914001465
    7. '   ' → logprob: -9.165350914001465
    8. 'il' → logprob: -9.415350914001465
    9. 'u' → logprob: -9.540350914001465
    10. ' ' → logprob: -9.665350914001465

Token 902: ' reste' (ID: 26769)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.585293173789978
    2. ' is' → logprob: -1.585293173789978
    3. ' h' → logprob: -1.710293173789978
    4. 'h' → logprob: -2.4602932929992676
    5. '   ' → logprob: -2.9602932929992676
    6. '):' → logprob: -3.0852932929992676
    7. ':' → logprob: -3.3352932929992676
    8. ' ):' → logprob: -3.7102932929992676
    9. ' est' → logprob: -3.8352932929992676
    10. ' are' → logprob: -3.8352932929992676

Token 903: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6231587529182434
    2. ' h' → logprob: -0.9981587529182434
    3. 'h' → logprob: -2.7481586933135986
    4. 'des' → logprob: -4.123158931732178
    5. ' à' → logprob: -5.623158931732178
    6. '(h' → logprob: -5.873158931732178
    7. '   ' → logprob: -6.373158931732178
    8. '#' → logprob: -6.498158931732178
    9. 'à' → logprob: -6.623158931732178
    10. 'd' → logprob: -7.373158931732178

Token 904: ' somm' (ID: 44830)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.2511333227157593
    2. '(' → logprob: -1.6261333227157593
    3. '(h' → logprob: -2.376133441925049
    4. ' h' → logprob: -2.501133441925049
    5. 'élé' → logprob: -2.501133441925049
    6. ' (' → logprob: -2.751133441925049
    7. 'dist' → logprob: -2.876133441925049
    8. 'elements' → logprob: -4.001133441925049
    9. 'n' → logprob: -4.126133441925049
    10. 'nodes' → logprob: -4.251133441925049

Token 905: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.04332469776272774
    2. 'es' → logprob: -3.1683247089385986
    3. 'és' → logprob: -9.04332447052002
    4. 'et' → logprob: -9.79332447052002
    5. 'êts' → logprob: -10.04332447052002
    6. 'ants' → logprob: -10.79332447052002
    7. 'ons' → logprob: -11.16832447052002
    8. '#' → logprob: -11.29332447052002
    9. 'ents' → logprob: -11.54332447052002
    10. 'etes' → logprob: -12.16832447052002

Token 906: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.46676105260849
    2. 'à' → logprob: -1.9667611122131348
    3. '   ' → logprob: -2.4667611122131348
    4. ' to' → logprob: -2.5917611122131348
    5. ':' → logprob: -3.2167611122131348
    6. ')' → logprob: -4.591761112213135
    7. 'to' → logprob: -4.841761112213135
    8. '#' → logprob: -6.216761112213135
    9. '>' → logprob: -6.216761112213135
    10. ' in' → logprob: -6.341761112213135

Token 907: ' explorer' (ID: 73961)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.1656932234764099
    2. 'process' → logprob: -2.1656932830810547
    3. 'tr' → logprob: -3.9156932830810547
    4. 'tra' → logprob: -4.915693283081055
    5. ' traiter' → logprob: -4.915693283081055
    6. 'expl' → logprob: -6.165693283081055
    7. 'vis' → logprob: -7.290693283081055
    8. 'proces' → logprob: -7.915693283081055
    9. '```' → logprob: -9.665693283081055
    10. '#' → logprob: -9.665693283081055

Token 908: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1149623915553093
    2. ':' → logprob: -2.239962339401245
    3. ':
' → logprob: -6.864962577819824
    4. '.' → logprob: -7.614962577819824
    5. ')' → logprob: -8.864962577819824
    6. ',' → logprob: -9.239962577819824
    7. '    
' → logprob: -9.489962577819824
    8. 'while' → logprob: -9.989962577819824
    9. ' :' → logprob: -10.114962577819824
    10. ' while' → logprob: -10.114962577819824

Token 909: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0462646484375
    2. 'while' → logprob: -3.6712646484375
    3. ' while' → logprob: -4.0462646484375
    4. '	while' → logprob: -6.5462646484375
    5. '
' → logprob: -7.2962646484375
    6. '```' → logprob: -9.2962646484375
    7. '    
' → logprob: -9.7962646484375
    8. ' 
' → logprob: -12.7962646484375
    9. '    ' → logprob: -12.7962646484375
    10. ',' → logprob: -13.1712646484375

Token 910: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24264638125896454
    2. 'while' (adapté à ' while') → logprob: -2.1176464557647705
    3. ' while' → logprob: -2.3676464557647705
    4. '	while' → logprob: -6.617646217346191
    5. '```' → logprob: -9.492646217346191
    6. '    
' → logprob: -11.867646217346191
    7. '       ' → logprob: -12.242646217346191
    8. '
' → logprob: -12.617646217346191
    9. '   ' → logprob: -13.367646217346191
    10. 'While' → logprob: -13.617646217346191

Token 911: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04301265999674797
    2. ' h' → logprob: -3.1680126190185547
    3. 'len' → logprob: -11.793012619018555
    4. '	h' → logprob: -13.043012619018555
    5. '   ' → logprob: -13.418012619018555
    6. ' len' → logprob: -13.668012619018555
    7. '(h' → logprob: -14.293012619018555
    8. ' ' → logprob: -15.043012619018555
    9. '  ' → logprob: -17.043012619018555
    10. '[h' → logprob: -17.043012619018555

Token 912: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019471932318992913
    2. ':
' → logprob: -8.750194549560547
    3. '):' → logprob: -10.875194549560547
    4. '>:' → logprob: -11.250194549560547
    5. ' :' → logprob: -13.500194549560547
    6. '[' → logprob: -14.125194549560547
    7. ']:' → logprob: -15.250194549560547
    8. '}:' → logprob: -15.375194549560547
    9. ':
' → logprob: -15.500194549560547
    10. '!=' → logprob: -15.500194549560547

Token 913: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09211184084415436
    2. '   ' → logprob: -2.967111825942993
    3. 'dist' → logprob: -3.467111825942993
    4. 'd' → logprob: -5.967112064361572
    5. ',' → logprob: -6.467112064361572
    6. '	dist' → logprob: -7.717112064361572
    7. ' dist' → logprob: -8.342111587524414
    8. 'distance' → logprob: -9.092111587524414
    9. ',d' → logprob: -9.717111587524414
    10. '	d' → logprob: -10.092111587524414

Token 914: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0669945478439331
    2. 'd' → logprob: -3.4419946670532227
    3. '   ' → logprob: -4.691994667053223
    4. 'cost' → logprob: -4.941994667053223
    5. 'c' → logprob: -5.316994667053223
    6. 'cur' → logprob: -5.566994667053223
    7. 'co' → logprob: -5.691994667053223
    8. '(dist' → logprob: -6.941994667053223
    9. 'cd' → logprob: -7.316994667053223
    10. 'du' → logprob: -7.691994667053223

Token 915: ' On' (ID: 2160)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02700451761484146
    2. 'd' → logprob: -4.277004718780518
    3. 'cur' → logprob: -5.277004718780518
    4. 'cost' → logprob: -5.902004718780518
    5. 'c' → logprob: -6.652004718780518
    6. 'du' → logprob: -7.402004718780518
    7. ' dist' → logprob: -7.402004718780518
    8. 'cd' → logprob: -7.652004718780518
    9. 'current' → logprob: -7.902004718780518
    10. 'co' → logprob: -7.902004718780518

Token 916: ' retire' (ID: 48410)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.19859348237514496
    2. 'distance' → logprob: -2.1985933780670166
    3. 'pop' → logprob: -3.1985933780670166
    4. 't' → logprob: -5.448593616485596
    5. '_distance' → logprob: -5.573593616485596
    6. 'import' → logprob: -5.698593616485596
    7. ' dist' → logprob: -5.823593616485596
    8. '_dist' → logprob: -5.948593616485596
    9. '       ' → logprob: -6.448593616485596
    10. 'd' → logprob: -6.448593616485596

Token 917: ' du' (ID: 1462)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.37179726362228394
    2. 'dist' → logprob: -1.2467973232269287
    3. ' dist' → logprob: -4.49679708480835
    4. ' d' → logprob: -5.49679708480835
    5. '   ' → logprob: -5.74679708480835
    6. 'distance' → logprob: -5.74679708480835
    7. '```' → logprob: -8.371797561645508
    8. 'cost' → logprob: -8.621797561645508
    9. '(dist' → logprob: -9.121797561645508
    10. ' distance' → logprob: -9.121797561645508

Token 918: ' tas' (ID: 17067)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.12177258729934692
    2. 'd' → logprob: -2.746772527694702
    3. 'dist' → logprob: -3.996772527694702
    4. 'distance' → logprob: -4.246772766113281
    5. 'heap' → logprob: -4.871772766113281
    6. 'he' → logprob: -4.996772766113281
    7. ' h' → logprob: -6.621772766113281
    8. '```' → logprob: -7.496772766113281
    9. 'cost' → logprob: -8.371772766113281
    10. 'co' → logprob: -8.996772766113281

Token 919: ' le' (ID: 505)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.8835577368736267
    2. ',' → logprob: -1.8835577964782715
    3. '       ' → logprob: -1.8835577964782715
    4. '(distance' → logprob: -2.3835577964782715
    5. ' distance' → logprob: -2.8835577964782715
    6. 'dist' → logprob: -3.0085577964782715
    7. 'd' → logprob: -4.1335577964782715
    8. ' d' → logprob: -4.1335577964782715
    9. ' dist' → logprob: -4.3835577964782715
    10. '(' → logprob: -4.7585577964782715

Token 920: ' sommet' (ID: 130502)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.15501375496387482
    2. 'dist' → logprob: -2.1550137996673584
    3. 'distance' → logprob: -4.530013561248779
    4. 'co' → logprob: -4.780013561248779
    5. '```' → logprob: -6.155013561248779
    6. 'cost' → logprob: -6.655013561248779
    7. '(' → logprob: -6.780013561248779
    8. ' d' → logprob: -7.530013561248779
    9. 'c' → logprob: -7.780013561248779
    10. 'cur' → logprob: -8.030014038085938

Token 921: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12115445733070374
    2. '       ' → logprob: -2.621154546737671
    3. 'distance' → logprob: -4.746154308319092
    4. 'dist' → logprob: -4.871154308319092
    5. ' ,' → logprob: -4.871154308319092
    6. ' le' → logprob: -6.121154308319092
    7. ' distance' → logprob: -6.496154308319092
    8. 'd' → logprob: -6.496154308319092
    9. ' d' → logprob: -6.621154308319092
    10. ' courant' → logprob: -6.746154308319092

Token 922: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4331575930118561
    2. ' la' → logprob: -1.0581575632095337
    3. 'distance' → logprob: -6.558157444000244
    4. 'le' → logprob: -6.933157444000244
    5. 'une' → logprob: -7.683157444000244
    6. 'd' → logprob: -7.683157444000244
    7. 'l' → logprob: -8.058157920837402
    8. ')' → logprob: -8.683157920837402
    9. ' une' → logprob: -9.183157920837402
    10. ',' → logprob: -9.558157920837402

Token 923: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.3500230312347412
    2. 'distance' → logprob: -1.2250230312347412
    3. ' plus' → logprob: -7.22502326965332
    4. 'dist' → logprob: -7.85002326965332
    5. 'd' → logprob: -9.22502326965332
    6. 'moins' → logprob: -9.22502326965332
    7. ' distance' → logprob: -9.60002326965332
    8. 'prem' → logprob: -9.97502326965332
    9. 'pet' → logprob: -10.35002326965332
    10. '```' → logprob: -10.47502326965332

Token 924: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.17036107182502747
    2. 'pro' → logprob: -2.295361042022705
    3. '```' → logprob: -3.170361042022705
    4. ' petite' → logprob: -5.545361042022705
    5. ' ' → logprob: -6.420361042022705
    6. '-' → logprob: -6.420361042022705
    7. ' proche' → logprob: -6.545361042022705
    8. ' petit' → logprob: -6.670361042022705
    9. 'prox' → logprob: -6.920361042022705
    10. '_' → logprob: -7.920361042022705

Token 925: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.006559652276337147
    2. ' distance' → logprob: -5.3815598487854
    3. 'dist' → logprob: -6.5065598487854
    4. '(distance' → logprob: -8.631559371948242
    5. 'd' → logprob: -8.881559371948242
    6. '_distance' → logprob: -9.881559371948242
    7. '(' → logprob: -10.256559371948242
    8. 'prior' → logprob: -11.631559371948242
    9. ' (' → logprob: -12.006559371948242
    10. 'priority' → logprob: -12.506559371948242

Token 926: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062213823199272156
    2. '       ' → logprob: -3.437213897705078
    3. 'dist' → logprob: -3.937213897705078
    4. 'distance' → logprob: -5.187213897705078
    5. ' ,' → logprob: -6.812213897705078
    6. ',
' → logprob: -7.562213897705078
    7. ' dist' → logprob: -8.437213897705078
    8. 'd' → logprob: -8.812213897705078
    9. ' distance' → logprob: -8.812213897705078
    10. '_,' → logprob: -8.812213897705078

Token 927: '       ' (ID: 309)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7982174754142761
    2. 'dist' → logprob: -1.048217535018921
    3. '       ' → logprob: -1.798217535018921
    4. '   ' → logprob: -4.423217296600342
    5. 'distance' → logprob: -4.798217296600342
    6. ' d' → logprob: -5.923217296600342
    7. ',' → logprob: -5.923217296600342
    8. ' dist' → logprob: -6.048217296600342
    9. 'cur' → logprob: -6.548217296600342
    10. '_,' → logprob: -6.798217296600342

Token 928: ' c' (ID: 274)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.23650342226028442
    2. 'd' → logprob: -1.6115033626556396
    3. 'cur' → logprob: -4.986503601074219
    4. 'cost' → logprob: -6.736503601074219
    5. ' dist' → logprob: -6.986503601074219
    6. 'c' (adapté à ' c') → logprob: -7.361503601074219
    7. 'distance' → logprob: -7.736503601074219
    8. '   ' → logprob: -7.861503601074219
    9. 'curr' → logprob: -8.986503601074219
    10. '(dist' → logprob: -8.986503601074219

Token 929: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18077978491783142
    2. 'ur' → logprob: -2.3057796955108643
    3. 'urrent' → logprob: -3.5557796955108643
    4. 'dist' → logprob: -4.305779933929443
    5. 'ost' → logprob: -4.555779933929443
    6. 'urr' → logprob: -5.680779933929443
    7. 'u' → logprob: -5.930779933929443
    8. ' ,' → logprob: -6.055779933929443
    9. ',d' → logprob: -6.430779933929443
    10. 'd' → logprob: -6.680779933929443

Token 930: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3940420150756836
    2. 'u' → logprob: -1.1440420150756836
    3. 'x' → logprob: -5.144042015075684
    4. ' u' → logprob: -7.894042015075684
    5. 'p' → logprob: -8.019042015075684
    6. ' v' → logprob: -8.019042015075684
    7. 'cur' → logprob: -9.269042015075684
    8. 'pos' → logprob: -9.394042015075684
    9. 'i' → logprob: -10.269042015075684
    10. 'node' → logprob: -10.894042015075684

Token 931: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759459733963013
    2. ' =' → logprob: -0.8259459733963013
    3. ')' → logprob: -12.450945854187012
    4. ')=' → logprob: -14.325945854187012
    5. '   ' → logprob: -14.325945854187012
    6. '       ' → logprob: -14.325945854187012
    7. '=
' → logprob: -15.450945854187012
    8. '    ' → logprob: -15.825945854187012
    9. '        ' → logprob: -16.075946807861328
    10. ' =
' → logprob: -16.325946807861328

Token 932: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.011057372204959393
    2. ' he' → logprob: -4.511057376861572
    3. 'h' → logprob: -11.636056900024414
    4. 'heap' → logprob: -14.511056900024414
    5. ' h' → logprob: -16.386056900024414
    6. ' ' → logprob: -16.761056900024414
    7. '   ' → logprob: -17.386056900024414
    8. ' heap' → logprob: -17.761056900024414
    9. '  ' → logprob: -18.636056900024414
    10. ' ' → logprob: -19.136056900024414

Token 933: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.696889623621246e-06
    2. 'ap' → logprob: -13.00000286102295
    3. ' app' → logprob: -15.75000286102295
    4. '```' → logprob: -16.500001907348633
    5. 'pp' → logprob: -17.000001907348633
    6. 'a' → logprob: -17.375001907348633
    7. 'he' → logprob: -17.500001907348633
    8. '[' → logprob: -18.375001907348633
    9. 'q' → logprob: -18.625001907348633
    10. 'h' → logprob: -18.875001907348633

Token 934: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.00023250321100931615
    2. 'pop' → logprob: -8.375232696533203
    3. 'ush' → logprob: -13.750232696533203
    4. 'p' → logprob: -15.375232696533203
    5. ' op' → logprob: -16.250232696533203
    6. 'opp' → logprob: -16.375232696533203
    7. '	op' → logprob: -16.500232696533203
    8. 'оп' → logprob: -16.750232696533203
    9. '...' → logprob: -16.875232696533203
    10. 'o' → logprob: -16.875232696533203

Token 935: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -12.750004768371582
    3. ' (' → logprob: -13.875004768371582
    4. 'h' → logprob: -14.625004768371582
    5. ' h' → logprob: -15.250004768371582
    6. '	h' → logprob: -17.750003814697266
    7. '(
' → logprob: -18.125003814697266
    8. ',h' → logprob: -18.375003814697266
    9. ')' → logprob: -18.875003814697266
    10. '   ' → logprob: -19.000003814697266

Token 936: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001317871210630983
    2. ')
' → logprob: -9.000131607055664
    3. '       ' → logprob: -12.000131607055664
    4. ' )' → logprob: -13.500131607055664
    5. ')
' → logprob: -15.375131607055664
    6. '   ' → logprob: -15.375131607055664
    7. ')

' → logprob: -15.875131607055664
    8. ')#' → logprob: -16.000131607055664
    9. ')`' → logprob: -17.750131607055664
    10. '<|end|>' → logprob: -17.750131607055664

Token 937: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012299923691898584
    2. '<|end|>' → logprob: -7.376229763031006
    3. '   ' → logprob: -8.501230239868164
    4. '
' → logprob: -8.626230239868164
    5. 'if' → logprob: -9.376230239868164
    6. '        
' → logprob: -9.626230239868164
    7. ' if' → logprob: -10.001230239868164
    8. '#' → logprob: -11.501230239868164
    9. '```' → logprob: -12.501230239868164
    10. '<|end|>' → logprob: -13.001230239868164

Token 938: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06466948240995407
    2. '       ' → logprob: -2.814669370651245
    3. ' if' → logprob: -5.939669609069824
    4. '
' → logprob: -10.689669609069824
    5. '   ' → logprob: -11.314669609069824
    6. '        
' → logprob: -11.564669609069824
    7. '	if' → logprob: -11.814669609069824
    8. '#' (adapté à ' #') → logprob: -11.814669609069824
    9. '	' → logprob: -12.439669609069824
    10. 'for' → logprob: -14.689669609069824

Token 939: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003743078850675374
    2. '#' → logprob: -8.000373840332031
    3. '       ' → logprob: -10.500373840332031
    4. ' if' → logprob: -11.625373840332031
    5. '   ' → logprob: -13.250373840332031
    6. '#if' → logprob: -15.250373840332031
    7. '
' → logprob: -16.00037384033203
    8. 'If' → logprob: -16.37537384033203
    9. '           ' → logprob: -17.12537384033203
    10. 'Si' → logprob: -17.25037384033203

Token 940: ' on' (ID: 402)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4572739005088806
    2. ' c' → logprob: -1.0822739601135254
    3. 'd' → logprob: -3.9572739601135254
    4. ' d' → logprob: -4.707273960113525
    5. '	c' → logprob: -11.332273483276367
    6. '   ' → logprob: -12.332273483276367
    7. ' ' → logprob: -12.582273483276367
    8. ' ' → logprob: -12.707273483276367
    9. '	d' → logprob: -14.707273483276367
    10. '  ' → logprob: -14.957273483276367

Token 941: ' a' (ID: 261)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.24692970514297485
    2. 'c' → logprob: -1.99692964553833
    3. ' d' → logprob: -3.12192964553833
    4. 'd' → logprob: -3.24692964553833
    5. '   ' → logprob: -10.496930122375488
    6. '#' → logprob: -11.496930122375488
    7. '	c' → logprob: -11.496930122375488
    8. '       ' → logprob: -11.621930122375488
    9. 'v' → logprob: -11.871930122375488
    10. ' ' → logprob: -12.121930122375488

Token 942: ' déjà' (ID: 21229)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2615009844303131
    2. ' c' → logprob: -1.5115009546279907
    3. 'd' → logprob: -5.136500835418701
    4. ' d' → logprob: -5.636500835418701
    5. '   ' → logprob: -9.63650131225586
    6. '       ' → logprob: -11.63650131225586
    7. ' ' → logprob: -13.01150131225586
    8. '	c' → logprob: -13.01150131225586
    9. '    ' → logprob: -13.88650131225586
    10. ' continue' → logprob: -14.51150131225586

Token 943: ' trouvé' (ID: 60081)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06168125197291374
    2. ' d' → logprob: -3.1866812705993652
    3. 'c' → logprob: -4.061681270599365
    4. ' c' → logprob: -6.686681270599365
    5. '   ' → logprob: -11.311680793762207
    6. 'v' → logprob: -11.686680793762207
    7. 'visited' → logprob: -12.186680793762207
    8. ' ' → logprob: -12.811680793762207
    9. ' trouvé' → logprob: -13.186680793762207
    10. ' découvert' → logprob: -13.186680793762207

Token 944: ' une' (ID: 2463)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.697249174118042
    2. 'd' → logprob: -2.197249174118042
    3. 'c' → logprob: -2.322249174118042
    4. ' une' → logprob: -2.572249174118042
    5. ' d' → logprob: -2.822249174118042
    6. ' c' → logprob: -2.822249174118042
    7. ' un' → logprob: -3.322249174118042
    8. 'a' → logprob: -3.697249174118042
    9. '   ' → logprob: -4.822249412536621
    10. '       ' → logprob: -5.322249412536621

Token 945: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.23108753561973572
    2. 'me' → logprob: -2.7310874462127686
    3. 'better' → logprob: -2.7310874462127686
    4. 'd' → logprob: -4.231087684631348
    5. ' distance' → logprob: -4.231087684631348
    6. ' meilleure' → logprob: -4.606087684631348
    7. 'strict' → logprob: -4.981087684631348
    8. 'short' → logprob: -4.981087684631348
    9. ' better' → logprob: -5.231087684631348
    10. ' shorter' → logprob: -5.356087684631348

Token 946: ' plus' (ID: 2932)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.24913600087165833
    2. 'sm' → logprob: -2.874135971069336
    3. ' smaller' → logprob: -3.124135971069336
    4. 'lower' → logprob: -4.249135971069336
    5. ' meilleure' → logprob: -4.249135971069336
    6. '<v' → logprob: -4.374135971069336
    7. '<c' → logprob: -4.499135971069336
    8. 'plus' → logprob: -4.624135971069336
    9. 'better' → logprob: -4.624135971069336
    10. ' plus' → logprob: -4.874135971069336

Token 947: ' courte' (ID: 130258)
  Prédit: 'cour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cour' → logprob: -0.6881421804428101
    2. 'pet' → logprob: -1.06314218044281
    3. 'short' → logprob: -2.9381422996520996
    4. 'court' → logprob: -3.5631422996520996
    5. 'optim' → logprob: -3.8131422996520996
    6. '```' → logprob: -4.1881422996521
    7. ' courte' → logprob: -4.4381422996521
    8. 'b' → logprob: -5.3131422996521
    9. 'import' → logprob: -5.3131422996521
    10. 'inf' → logprob: -6.1881422996521

Token 948: ' jusqu' (ID: 21961)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3530306816101074
    2. '   ' → logprob: -1.8530306816101074
    3. ' à' → logprob: -1.9780306816101074
    4. ' que' → logprob: -2.6030306816101074
    5. ' for' → logprob: -2.8530306816101074
    6. ' than' → logprob: -2.8530306816101074
    7. '       ' → logprob: -3.2280306816101074
    8. 'à' → logprob: -3.2280306816101074
    9. 'v' → logprob: -3.3530306816101074
    10. 'for' → logprob: -3.6030306816101074

Token 949: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.4389073848724365
    2. ' à' → logprob: -2.4389073848724365
    3. 'à' → logprob: -2.5639073848724365
    4. 'v' → logprob: -2.6889073848724365
    5. '’à' → logprob: -3.5639073848724365
    6. '(v' → logprob: -3.9389073848724365
    7. ' v' → logprob: -4.063907623291016
    8. '[v' → logprob: -4.563907623291016
    9. 'a' → logprob: -4.688907623291016
    10. ''au' → logprob: -4.938907623291016

Token 950: ' ce' (ID: 2357)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.6312321753939614e-05
    2. ' ce' → logprob: -10.750036239624023
    3. ' v' → logprob: -11.875036239624023
    4. 'c' → logprob: -12.750036239624023
    5. 'ce' → logprob: -13.125036239624023
    6. 'un' → logprob: -13.625036239624023
    7. 'le' → logprob: -14.125036239624023
    8. '```' → logprob: -15.125036239624023
    9. '[v' → logprob: -15.500036239624023
    10. 'cet' → logprob: -15.625036239624023

Token 951: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.2823638617992401
    2. 'v' → logprob: -1.5323638916015625
    3. ' sommet' → logprob: -3.7823638916015625
    4. 'point' → logprob: -5.6573638916015625
    5. 'vertex' → logprob: -6.0323638916015625
    6. 'vert' → logprob: -7.6573638916015625
    7. '#' → logprob: -8.282363891601562
    8. '```' → logprob: -9.032363891601562
    9. 's' → logprob: -9.157363891601562
    10. 'summ' → logprob: -9.907363891601562

Token 952: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1757417470216751
    2. ':' → logprob: -2.300741672515869
    3. '           ' → logprob: -3.050741672515869
    4. '       ' → logprob: -4.800741672515869
    5. '   ' → logprob: -6.175741672515869
    6. ' ,' → logprob: -6.300741672515869
    7. 'continue' → logprob: -8.425742149353027
    8. ':
' → logprob: -8.550742149353027
    9. 'v' → logprob: -8.550742149353027
    10. ' continue' → logprob: -8.800742149353027

Token 953: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02318607270717621
    2. ' continue' → logprob: -4.023186206817627
    3. 'continue' → logprob: -5.398186206817627
    4. '       ' → logprob: -7.898186206817627
    5. '		' → logprob: -9.648185729980469
    6. '               ' → logprob: -11.148185729980469
    7. '	continue' → logprob: -11.273185729980469
    8. 'contin' → logprob: -12.023185729980469
    9. '_continue' → logprob: -12.023185729980469
    10. '          ' → logprob: -12.523185729980469

Token 954: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5836572647094727
    2. '       ' → logprob: -1.3336572647094727
    3. 'continue' → logprob: -2.0836572647094727
    4. ' continue' → logprob: -2.9586572647094727
    5. '   ' → logprob: -6.458657264709473
    6. '	continue' → logprob: -8.333657264709473
    7. '               ' → logprob: -8.583657264709473
    8. 'if' → logprob: -9.083657264709473
    9. '          ' → logprob: -10.583657264709473
    10. ' if' → logprob: -10.583657264709473

Token 955: ' on' (ID: 402)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3185885548591614
    2. ' continue' → logprob: -1.3185884952545166
    3. '           ' → logprob: -5.693588733673096
    4. '       ' → logprob: -6.568588733673096
    5. '   ' → logprob: -7.818588733673096
    6. '	continue' → logprob: -9.193588256835938
    7. 'contin' → logprob: -10.943588256835938
    8. 'continu' → logprob: -12.193588256835938
    9. '_continue' → logprob: -12.568588256835938
    10. '               ' → logprob: -12.693588256835938

Token 956: ' saute' (ID: 146395)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.47423335909843445
    2. ' continue' → logprob: -0.9742333889007568
    3. '   ' → logprob: -9.224233627319336
    4. '	continue' → logprob: -10.599233627319336
    5. 'contin' → logprob: -10.974233627319336
    6. '_continue' → logprob: -11.724233627319336
    7. '       ' → logprob: -12.349233627319336
    8. ' continues' → logprob: -13.599233627319336
    9. 'continu' → logprob: -14.349233627319336
    10. ' continuer' → logprob: -14.849233627319336

Token 957: ' cette' (ID: 7696)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007196131628006697
    2. '           ' → logprob: -5.132195949554443
    3. '               ' → logprob: -7.632195949554443
    4. 'continue' → logprob: -7.882195949554443
    5. '   ' → logprob: -8.757196426391602
    6. '        ' → logprob: -10.132196426391602
    7. 'le' → logprob: -10.507196426391602
    8. ' ' → logprob: -10.632196426391602
    9. '.' → logprob: -10.632196426391602
    10. '```' → logprob: -10.882196426391602

Token 958: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.7612967491149902
    2. ' iteration' → logprob: -1.7612967491149902
    3. 'iteration' → logprob: -1.8862967491149902
    4. 'it' → logprob: -2.0112967491149902
    5. ' tour' → logprob: -3.8862967491149902
    6. ' étape' → logprob: -4.51129674911499
    7. ' boucle' → logprob: -4.63629674911499
    8. 'continue' → logprob: -4.76129674911499
    9. 'tour' → logprob: -5.01129674911499
    10. 'c' → logprob: -5.01129674911499

Token 959: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.586392343044281
    2. 'er' → logprob: -0.836392343044281
    3. 'ér' → logprob: -4.961392402648926
    4. 'continue' → logprob: -6.961392402648926
    5. 'érance' → logprob: -7.711392402648926
    6. '   ' → logprob: -7.961392402648926
    7. 'éré' → logprob: -8.336392402648926
    8. 'érer' → logprob: -8.711392402648926
    9. 'é' → logprob: -8.836392402648926
    10. '       ' → logprob: -9.211392402648926

Token 960: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024065693840384483
    2. '           ' → logprob: -3.7740657329559326
    3. '               ' → logprob: -7.6490654945373535
    4. ',' → logprob: -9.399065971374512
    5. '.' → logprob: -9.524065971374512
    6. 'continue' → logprob: -9.899065971374512
    7. ' continue' → logprob: -10.149065971374512
    8. '	' → logprob: -10.649065971374512
    9. '
' → logprob: -10.899065971374512
    10. '   ' → logprob: -11.274065971374512

Token 961: ' car' (ID: 1669)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3780742883682251
    2. ' continue' → logprob: -1.503074288368225
    3. 'continue' → logprob: -2.6280741691589355
    4. '           ' → logprob: -4.0030741691589355
    5. '               ' → logprob: -7.3780741691589355
    6. '	' → logprob: -7.6280741691589355
    7. '	continue' → logprob: -7.8780741691589355
    8. '		' → logprob: -9.503074645996094
    9. '   ' → logprob: -9.628074645996094
    10. '
' → logprob: -10.003074645996094

Token 962: ' elle' (ID: 11451)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.31404173374176025
    2. 'c' → logprob: -1.3140417337417603
    3. ' d' → logprob: -7.814041614532471
    4. 'd' → logprob: -7.939041614532471
    5. '```' → logprob: -11.689042091369629
    6. ' ' → logprob: -11.814042091369629
    7. '	c' → logprob: -14.314042091369629
    8. ' la' → logprob: -14.439042091369629
    9. ' not' → logprob: -14.439042091369629
    10. ' ' → logprob: -15.189042091369629

Token 963: ' est' (ID: 893)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5911146998405457
    2. ' continue' → logprob: -1.2161147594451904
    3. ' est' → logprob: -2.5911147594451904
    4. 'n' → logprob: -3.8411147594451904
    5. 's' → logprob: -4.466114521026611
    6. '   ' → logprob: -4.591114521026611
    7. ' a' → logprob: -4.716114521026611
    8. ' s' → logprob: -4.966114521026611
    9. ' continues' → logprob: -5.216114521026611
    10. '       ' → logprob: -6.341114521026611

Token 964: ' ob' (ID: 1067)
  Prédit: ' ob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ob' → logprob: -0.6317195892333984
    2. ' inutile' → logprob: -1.3817195892333984
    3. '   ' → logprob: -2.2567195892333984
    4. ' dépass' → logprob: -3.1317195892333984
    5. ' continue' → logprob: -4.381719589233398
    6. ' inutil' → logprob: -4.756719589233398
    7. 'import' → logprob: -5.256719589233398
    8. '       ' → logprob: -5.256719589233398
    9. 'ob' → logprob: -5.256719589233398
    10. 'f' → logprob: -5.631719589233398

Token 965: 'sol' (ID: 4399)
  Prédit: 'sol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sol' → logprob: -0.043470121920108795
    2. 'solete' → logprob: -3.1684701442718506
    3. 's' → logprob: -8.41847038269043
    4. 'so' → logprob: -8.91847038269043
    5. 'solute' → logprob: -10.04347038269043
    6. 'serv' → logprob: -10.66847038269043
    7. 'sole' → logprob: -10.91847038269043
    8. 'se' → logprob: -11.79347038269043
    9. 'ject' → logprob: -12.54347038269043
    10. 'sl' → logprob: -12.66847038269043

Token 966: 'ète' (ID: 28789)
  Prédit: 'sol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sol' → logprob: -0.049667149782180786
    2. 'solete' → logprob: -3.5496671199798584
    3. 'solute' → logprob: -4.2996673583984375
    4. 'so' → logprob: -5.7996673583984375
    5. 's' → logprob: -6.4246673583984375
    6. 'sole' → logprob: -6.7996673583984375
    7. 'sl' → logprob: -8.799667358398438
    8. 'ète' → logprob: -9.549667358398438
    9. '```' → logprob: -11.424667358398438
    10. 'sc' → logprob: -11.549667358398438

Token 967: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003457872197031975
    2. '.' → logprob: -6.128458023071289
    3. '           ' → logprob: -7.003458023071289
    4. '
' → logprob: -9.128458023071289
    5. '.
' → logprob: -9.378458023071289
    6. '               ' → logprob: -9.753458023071289
    7. 'continue' → logprob: -10.253458023071289
    8. '   ' → logprob: -11.128458023071289
    9. ',' → logprob: -11.503458023071289
    10. '	' → logprob: -11.628458023071289

Token 968: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003800296690315008
    2. ' if' → logprob: -8.50037956237793
    3. '   ' → logprob: -10.12537956237793
    4. '        
' → logprob: -10.25037956237793
    5. 'if' → logprob: -10.37537956237793
    6. '           ' → logprob: -11.00037956237793
    7. '```' → logprob: -11.00037956237793
    8. '	' → logprob: -12.00037956237793
    9. ' ' → logprob: -12.12537956237793
    10. ' 
' → logprob: -12.37537956237793

Token 969: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6204203367233276
    2. '       ' → logprob: -1.1204203367233276
    3. ' if' → logprob: -1.9954203367233276
    4. '   ' → logprob: -9.245420455932617
    5. '	' → logprob: -10.620420455932617
    6. '```' → logprob: -10.870420455932617
    7. '           ' → logprob: -11.495420455932617
    8. ' ' → logprob: -11.495420455932617
    9. '	if' → logprob: -11.995420455932617
    10. '
' → logprob: -12.745420455932617

Token 970: ' d' (ID: 272)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.025705840438604355
    2. ' c' → logprob: -4.275705814361572
    3. 'd' → logprob: -4.525705814361572
    4. ' d' → logprob: -7.400705814361572
    5. '   ' → logprob: -10.65070629119873
    6. '	c' → logprob: -11.52570629119873
    7. ' ' → logprob: -13.15070629119873
    8. ' ' → logprob: -14.02570629119873
    9. '  ' → logprob: -14.52570629119873
    10. '	d' → logprob: -14.65070629119873

Token 971: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.5690089639974758e-05
    2. 'v' → logprob: -11.500015258789062
    3. '[c' → logprob: -12.125015258789062
    4. '[' → logprob: -17.125015258789062
    5. '<v' → logprob: -17.875015258789062
    6. '```' → logprob: -17.875015258789062
    7. '[d' → logprob: -18.125015258789062
    8. ' [' → logprob: -18.375015258789062
    9. '	v' → logprob: -18.750015258789062
    10. ' v' → logprob: -19.125015258789062

Token 972: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.20170411467552185
    2. '<c' → logprob: -2.5767040252685547
    3. ']<' → logprob: -3.0767040252685547
    4. ']' → logprob: -3.0767040252685547
    5. '<v' → logprob: -4.451704025268555
    6. ' <' → logprob: -6.326704025268555
    7. '[c' → logprob: -7.576704025268555
    8. '[' → logprob: -8.451704025268555
    9. '[v' → logprob: -9.826704025268555
    10. '<C' → logprob: -10.451704025268555

Token 973: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.004120073281228542
    2. '<c' → logprob: -5.629119873046875
    3. ' <' → logprob: -7.879119873046875
    4. '<v' → logprob: -9.379119873046875
    5. '<=' → logprob: -10.129119873046875
    6. '[' → logprob: -12.504119873046875
    7. '<int' → logprob: -13.379119873046875
    8. '[c' → logprob: -13.504119873046875
    9. '<C' → logprob: -13.629119873046875
    10. '<cv' → logprob: -14.004119873046875

Token 974: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00029613598599098623
    2. ' c' → logprob: -8.125296592712402
    3. '	c' → logprob: -17.375295639038086
    4. ' ' → logprob: -17.750295639038086
    5. '
' → logprob: -18.125295639038086
    6. '   ' → logprob: -19.250295639038086
    7. ')c' → logprob: -19.500295639038086
    8. 'cation' → logprob: -20.562795639038086
    9. '  ' → logprob: -20.875295639038086
    10. '
' → logprob: -20.937795639038086

Token 975: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2009783685207367
    2. '       ' → logprob: -1.825978398323059
    3. ':
' → logprob: -3.9509782791137695
    4. 'continue' → logprob: -7.2009782791137695
    5. '           ' → logprob: -7.4509782791137695
    6. ' continue' → logprob: -8.32597827911377
    7. '	continue' → logprob: -9.57597827911377
    8. '	' → logprob: -10.07597827911377
    9. '   ' → logprob: -10.32597827911377
    10. '_continue' → logprob: -11.82597827911377

Token 976: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1823151856660843
    2. '           ' → logprob: -1.9323152303695679
    3. 'continue' → logprob: -4.307315349578857
    4. ' continue' → logprob: -4.807315349578857
    5. '	continue' → logprob: -9.3073148727417
    6. '	' → logprob: -10.1823148727417
    7. ':' → logprob: -10.3073148727417
    8. '		' → logprob: -11.4323148727417
    9. '               ' → logprob: -11.8073148727417
    10. '   ' → logprob: -11.8073148727417

Token 977: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0020368914119899273
    2. ' continue' → logprob: -6.502037048339844
    3. '           ' → logprob: -7.752037048339844
    4. '       ' → logprob: -9.252037048339844
    5. '	continue' → logprob: -12.252037048339844
    6. '   ' → logprob: -12.752037048339844
    7. 'contin' → logprob: -14.627037048339844
    8. 'continu' → logprob: -15.502037048339844
    9. '               ' → logprob: -15.627037048339844
    10. '_continue' → logprob: -16.627037048339844

Token 978: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025687361136078835
    2. '<|end|>' → logprob: -4.525687217712402
    3. '
' → logprob: -4.775687217712402
    4. '        
' → logprob: -5.275687217712402
    5. ')' → logprob: -8.900687217712402
    6. '  
' → logprob: -9.025687217712402
    7. '<|end|>' → logprob: -9.150687217712402
    8. '   ' → logprob: -9.275687217712402
    9. '	' → logprob: -9.650687217712402
    10. '		
' → logprob: -9.650687217712402

Token 979: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.470901229884475e-05
    2. 'for' → logprob: -10.37508487701416
    3. '        
' → logprob: -11.00008487701416
    4. '#' → logprob: -11.50008487701416
    5. '<|end|>' → logprob: -11.50008487701416
    6. ' for' → logprob: -12.00008487701416
    7. '
' → logprob: -12.50008487701416
    8. '   ' → logprob: -12.75008487701416
    9. '           ' → logprob: -13.87508487701416
    10. '```' → logprob: -14.12508487701416

Token 980: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5851404070854187
    2. 'for' → logprob: -0.8351404070854187
    3. ' for' → logprob: -4.710140228271484
    4. '   ' → logprob: -9.210140228271484
    5. '#' (adapté à ' #') → logprob: -10.085140228271484
    6. '	for' → logprob: -12.210140228271484
    7. '        
' → logprob: -12.460140228271484
    8. '
' → logprob: -12.710140228271484
    9. '           ' → logprob: -14.210140228271484
    10. '	' → logprob: -15.585140228271484

Token 981: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00015955790877342224
    2. '   ' → logprob: -9.00015926361084
    3. '       ' → logprob: -10.50015926361084
    4. ' for' → logprob: -11.75015926361084
    5. '#' → logprob: -14.75015926361084
    6. '	for' → logprob: -16.000160217285156
    7. '
' → logprob: -16.875160217285156
    8. '```' → logprob: -18.000160217285156
    9. '        
' → logprob: -18.750160217285156
    10. '           ' → logprob: -19.000160217285156

Token 982: 'ours' (ID: 2327)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.02654910460114479
    2. 'ours' → logprob: -3.7765491008758545
    3. '       ' → logprob: -6.651549339294434
    4. 'ourt' → logprob: -6.776549339294434
    5. 'or' → logprob: -8.026549339294434
    6. '#' → logprob: -9.026549339294434
    7. 'orrer' → logprob: -9.151549339294434
    8. '   ' → logprob: -9.526549339294434
    9. 'for' → logprob: -9.651549339294434
    10. 'orer' → logprob: -10.401549339294434

Token 983: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1997070610523224
    2. '       ' → logprob: -2.32470703125
    3. 'for' → logprob: -2.57470703125
    4. ' des' → logprob: -5.44970703125
    5. '   ' → logprob: -6.19970703125
    6. ' of' → logprob: -8.69970703125
    7. '	for' → logprob: -8.94970703125
    8. ',' → logprob: -9.07470703125
    9. ' in' → logprob: -10.07470703125
    10. '           ' → logprob: -10.32470703125

Token 984: ' tous' (ID: 10688)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.04627670347690582
    2. ' graph' → logprob: -3.171276807785034
    3. 'for' → logprob: -6.421276569366455
    4. ' for' → logprob: -7.296276569366455
    5. 'g' → logprob: -7.921276569366455
    6. 'v' → logprob: -9.171277046203613
    7. 'adj' → logprob: -9.546277046203613
    8. 'neighbor' → logprob: -9.671277046203613
    9. 'neighbors' → logprob: -9.796277046203613
    10. '(graph' → logprob: -9.921277046203613

Token 985: ' les' (ID: 1341)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -1.0503963232040405
    2. '(u' → logprob: -1.4253963232040405
    3. 'u' → logprob: -1.9253963232040405
    4. ',' → logprob: -2.17539644241333
    5. 'to' → logprob: -2.55039644241333
    6. ',u' → logprob: -4.05039644241333
    7. 'w' → logprob: -4.42539644241333
    8. ' w' → logprob: -4.67539644241333
    9. '```' → logprob: -4.92539644241333
    10. '   ' → logprob: -5.17539644241333

Token 986: ' voisins' (ID: 166720)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2625771164894104
    2. 'u' → logprob: -2.0125770568847656
    3. 'w' → logprob: -3.8875770568847656
    4. '(u' → logprob: -3.8875770568847656
    5. 'edges' → logprob: -4.137577056884766
    6. '...' → logprob: -4.762577056884766
    7. 'neighbors' → logprob: -4.762577056884766
    8. ' to' → logprob: -5.012577056884766
    9. 'nv' → logprob: -5.762577056884766
    10. 'e' → logprob: -6.012577056884766

Token 987: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.9600614905357361
    2. '[v' → logprob: -1.7100615501403809
    3. 'v' → logprob: -1.8350615501403809
    4. ',' → logprob: -1.8350615501403809
    5. 'for' → logprob: -3.085061550140381
    6. ',v' → logprob: -3.460061550140381
    7. '   ' → logprob: -4.960061550140381
    8. ' for' → logprob: -4.960061550140381
    9. ' v' → logprob: -5.085061550140381
    10. 'in' → logprob: -5.085061550140381

Token 988: 't' (ID: 83)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.12072993069887161
    2. 'for' → logprob: -2.870729923248291
    3. 'u' → logprob: -3.745729923248291
    4. 'w' → logprob: -4.620729923248291
    5. ' graph' → logprob: -5.120729923248291
    6. ' for' → logprob: -5.120729923248291
    7. 'v' → logprob: -5.995729923248291
    8. 'adj' → logprob: -5.995729923248291
    9. '(graph' → logprob: -6.620729923248291
    10. 'g' → logprob: -6.745729923248291

Token 989: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.025557279586792
    2. 'for' → logprob: -1.775557279586792
    3. 'u' → logprob: -2.025557279586792
    4. 'o' → logprob: -2.150557279586792
    5. ',v' → logprob: -2.900557279586792
    6. 'v' → logprob: -3.025557279586792
    7. 'é' → logprob: -3.525557279586792
    8. 'er' → logprob: -4.025557518005371
    9. 'uple' → logprob: -4.400557518005371
    10. ' for' → logprob: -4.525557518005371

Token 990: ' du' (ID: 1462)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001069727586582303
    2. ',v' → logprob: -7.50106954574585
    3. 'for' → logprob: -8.626070022583008
    4. ' for' → logprob: -9.001070022583008
    5. ' ,' → logprob: -9.376070022583008
    6. 's' → logprob: -10.001070022583008
    7. ',
' → logprob: -10.501070022583008
    8. ' in' → logprob: -11.001070022583008
    9. ' of' → logprob: -12.001070022583008
    10. ',d' → logprob: -12.501070022583008

Token 991: ' sommet' (ID: 130502)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.033764760941267014
    2. ' graph' → logprob: -3.4087648391723633
    3. 'v' → logprob: -9.408764839172363
    4. 'range' → logprob: -11.783764839172363
    5. '(graph' → logprob: -11.908764839172363
    6. ' v' → logprob: -12.283764839172363
    7. '	graph' → logprob: -12.408764839172363
    8. 'g' → logprob: -12.533764839172363
    9. 'adj' → logprob: -12.533764839172363
    10. 'h' → logprob: -13.783764839172363

Token 992: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.045824527740478516
    2. ' v' → logprob: -3.1708245277404785
    3. ',' → logprob: -6.1708245277404785
    4. ',v' → logprob: -8.29582405090332
    5. '(v' → logprob: -8.79582405090332
    6. ' for' → logprob: -9.29582405090332
    7. '[v' → logprob: -9.29582405090332
    8. '   ' → logprob: -9.67082405090332
    9. 'for' → logprob: -10.79582405090332
    10. ' ,' → logprob: -10.92082405090332

Token 993: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5135598182678223
    2. '       ' → logprob: -1.0135598182678223
    3. ':' → logprob: -3.5135598182678223
    4. ' for' → logprob: -5.888559818267822
    5. 'for' → logprob: -6.013559818267822
    6. ':
' → logprob: -6.763559818267822
    7. ',v' → logprob: -7.013559818267822
    8. 'v' → logprob: -8.013559341430664
    9. '   ' → logprob: -8.513559341430664
    10. ' :' → logprob: -9.013559341430664

Token 994: ' des' (ID: 731)
  Prédit: 'leur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leur' → logprob: -0.7275524735450745
    2. 'le' → logprob: -1.4775524139404297
    3. 'leurs' → logprob: -1.4775524139404297
    4. 'les' → logprob: -3.1025524139404297
    5. 'co' → logprob: -4.85255241394043
    6. ' leurs' → logprob: -6.10255241394043
    7. 'de' → logprob: -6.97755241394043
    8. 'du' → logprob: -6.97755241394043
    9. ' leur' → logprob: -7.10255241394043
    10. 'c' → logprob: -7.47755241394043

Token 995: ' coûts' (ID: 116912)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.08584801107645035
    2. 'po' → logprob: -2.960848093032837
    3. 'leurs' → logprob: -4.585847854614258
    4. 'c' → logprob: -5.210847854614258
    5. 'cout' → logprob: -5.460847854614258
    6. ' coûts' → logprob: -5.835847854614258
    7. 'leur' → logprob: -5.960847854614258
    8. 'cost' → logprob: -6.835847854614258
    9. '   ' → logprob: -7.585847854614258
    10. 'dist' → logprob: -7.835847854614258

Token 996: ' associés' (ID: 154470)
  Prédit: ' associés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' associés' → logprob: -0.8212782144546509
    2. ',' → logprob: -1.4462782144546509
    3. '       ' → logprob: -1.6962782144546509
    4. '   ' → logprob: -3.1962780952453613
    5. '(v' → logprob: -3.4462780952453613
    6. '(c' → logprob: -4.071278095245361
    7. ' associ' → logprob: -5.071278095245361
    8. 'adj' → logprob: -5.446278095245361
    9. 'for' → logprob: -5.696278095245361
    10. ' (' → logprob: -5.821278095245361

Token 997: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30631548166275024
    2. '       ' → logprob: -1.6813154220581055
    3. '(v' → logprob: -3.1813154220581055
    4. 'for' → logprob: -4.4313154220581055
    5. ' for' → logprob: -4.9313154220581055
    6. ',v' → logprob: -5.0563154220581055
    7. ' ,' → logprob: -6.0563154220581055
    8. 'v' → logprob: -6.5563154220581055
    9. '```' → logprob: -7.0563154220581055
    10. '   ' → logprob: -7.1813154220581055

Token 998: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0905907079577446
    2. ' for' → logprob: -2.840590715408325
    3. 'for' → logprob: -3.590590715408325
    4. '   ' → logprob: -7.590590476989746
    5. ',' → logprob: -10.340590476989746
    6. '```' → logprob: -10.465590476989746
    7. '           ' → logprob: -10.590590476989746
    8. '	for' → logprob: -10.715590476989746
    9. '	' → logprob: -12.465590476989746
    10. '      ' → logprob: -12.840590476989746

Token 999: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.34407830238342285
    2. ' for' → logprob: -1.5940783023834229
    3. '       ' → logprob: -2.469078302383423
    4. '   ' → logprob: -5.719078063964844
    5. '	for' → logprob: -9.469078063964844
    6. '           ' → logprob: -12.844078063964844
    7. '	' → logprob: -13.469078063964844
    8. ' ' → logprob: -13.844078063964844
    9. '	   ' → logprob: -14.344078063964844
    10. ' ' → logprob: -14.844078063964844

Token 1000: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.012862886302173138
    2. 'u' → logprob: -4.762862682342529
    3. 'to' → logprob: -6.262862682342529
    4. '(t' → logprob: -6.637862682342529
    5. ' t' → logprob: -7.512862682342529
    6. '(u' → logprob: -8.512863159179688
    7. 'w' → logprob: -8.512863159179688
    8. ' u' → logprob: -11.637863159179688
    9. 'vv' → logprob: -11.637863159179688
    10. 'tv' → logprob: -12.137863159179688

Token 1001: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005388260819017887
    2. ',c' → logprob: -5.380388259887695
    3. ',w' → logprob: -7.755388259887695
    4. ' ,' → logprob: -8.130388259887695
    5. ',v' → logprob: -11.630388259887695
    6. ',d' → logprob: -11.880388259887695
    7. ',n' → logprob: -12.005388259887695
    8. ',t' → logprob: -12.880388259887695
    9. ',
' → logprob: -13.130388259887695
    10. '(cost' → logprob: -13.630388259887695

Token 1002: ' cost' (ID: 3097)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6957630515098572
    2. 'cost' → logprob: -0.6957630515098572
    3. 'co' → logprob: -6.820763111114502
    4. 'c' → logprob: -7.445763111114502
    5. 'cc' → logprob: -7.445763111114502
    6. 'cv' → logprob: -9.195762634277344
    7. ' cost' → logprob: -9.445762634277344
    8. ' w' → logprob: -9.695762634277344
    9. 'cout' → logprob: -10.195762634277344
    10. '_cost' → logprob: -10.945762634277344

Token 1003: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03366667777299881
    2. 'in' → logprob: -3.4086666107177734
    3. 's' → logprob: -12.033666610717773
    4. ' ' → logprob: -12.658666610717773
    5. ')' → logprob: -13.033666610717773
    6. '   ' → logprob: -13.158666610717773
    7. '	in' → logprob: -13.533666610717773
    8. ',' → logprob: -13.908666610717773
    9. '  ' → logprob: -14.158666610717773
    10. 'en' → logprob: -14.408666610717773

Token 1004: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -4.5491004129871726e-05
    2. ' graph' → logprob: -10.000045776367188
    3. '	graph' → logprob: -18.875045776367188
    4. '(graph' → logprob: -19.375045776367188
    5. '   ' → logprob: -23.000045776367188
    6. 'Graph' → logprob: -23.125045776367188
    7. '_graph' → logprob: -23.500045776367188
    8. '.graph' → logprob: -23.875045776367188
    9. '```' → logprob: -23.875045776367188
    10. 'graphic' → logprob: -23.875045776367188

Token 1005: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.896309739408025e-07
    2. 'v' → logprob: -14.375000953674316
    3. '[c' → logprob: -16.5
    4. '[V' → logprob: -18.125
    5. '(v' → logprob: -18.5
    6. ' [' → logprob: -18.625
    7. '[u' → logprob: -18.625
    8. '[' → logprob: -18.625
    9. '[d' → logprob: -18.75
    10. '[s' → logprob: -18.875

Token 1006: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7235950827598572
    2. '):
' → logprob: -1.223595142364502
    3. ']:' → logprob: -1.973595142364502
    4. ']:
' → logprob: -2.598595142364502
    5. '   ' → logprob: -5.973595142364502
    6. ':' → logprob: -6.098595142364502
    7. '       ' → logprob: -6.348595142364502
    8. ':
' → logprob: -8.348594665527344
    9. ']):' → logprob: -8.598594665527344
    10. ']' → logprob: -9.348594665527344

Token 1007: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4301365613937378
    2. '       ' → logprob: -1.0551365613937378
    3. '               ' → logprob: -7.805136680603027
    4. ' if' → logprob: -8.680136680603027
    5. '        
' → logprob: -8.805136680603027
    6. 'if' → logprob: -8.805136680603027
    7. '	       ' → logprob: -8.805136680603027
    8. '
' → logprob: -9.430136680603027
    9. '```' → logprob: -9.430136680603027
    10. '            
' → logprob: -9.805136680603027

Token 1008: ' #' (ID: 1069)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.6613635420799255
    2. '           ' → logprob: -0.9113635420799255
    3. 'new' → logprob: -3.2863636016845703
    4. ' new' → logprob: -4.16136360168457
    5. 'nd' → logprob: -4.53636360168457
    6. ' if' → logprob: -5.03636360168457
    7. 'if' → logprob: -5.66136360168457
    8. '               ' → logprob: -5.91136360168457
    9. 'nc' → logprob: -6.28636360168457
    10. 'nv' → logprob: -7.16136360168457

Token 1009: ' Si' (ID: 7832)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.20586168766021729
    2. 'if' → logprob: -2.0808615684509277
    3. 'new' → logprob: -3.5808615684509277
    4. ' nd' → logprob: -3.9558615684509277
    5. 'nc' → logprob: -5.205861568450928
    6. 'cd' → logprob: -5.955861568450928
    7. 'cost' → logprob: -6.205861568450928
    8. '   ' → logprob: -7.330861568450928
    9. 'cand' → logprob: -7.455861568450928
    10. 'nv' → logprob: -7.705861568450928

Token 1010: ' le' (ID: 505)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05081807076931
    2. ' d' → logprob: -3.0508179664611816
    3. 'c' → logprob: -6.300817966461182
    4. ' c' → logprob: -8.55081844329834
    5. '   ' → logprob: -8.92581844329834
    6. '           ' → logprob: -10.30081844329834
    7. ' ' → logprob: -11.55081844329834
    8. '       ' → logprob: -12.05081844329834
    9. '	d' → logprob: -12.55081844329834
    10. '     ' → logprob: -12.67581844329834

Token 1011: ' chemin' (ID: 45035)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.027577918022871017
    2. ' d' → logprob: -4.277577877044678
    3. 'c' → logprob: -4.402577877044678
    4. 'cost' → logprob: -7.527577877044678
    5. ' c' → logprob: -7.777577877044678
    6. '   ' → logprob: -10.402578353881836
    7. ' cost' → logprob: -10.402578353881836
    8. ' ' → logprob: -11.027578353881836
    9. 'new' → logprob: -11.402578353881836
    10. '	d' → logprob: -12.590078353881836

Token 1012: ' passant' (ID: 82438)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7452974319458008
    2. 'd' → logprob: -1.7452974319458008
    3. 'c' → logprob: -1.9952974319458008
    4. ' d' → logprob: -2.870297431945801
    5. '       ' → logprob: -3.495297431945801
    6. ' c' → logprob: -3.745297431945801
    7. '          ' → logprob: -4.245297431945801
    8. '               ' → logprob: -4.745297431945801
    9. '   ' → logprob: -4.870297431945801
    10. '        ' → logprob: -4.870297431945801

Token 1013: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.5450857877731323
    2. ' par' → logprob: -1.1700857877731323
    3. ' through' → logprob: -2.795085906982422
    4. 't' → logprob: -3.795085906982422
    5. 'through' → logprob: -3.795085906982422
    6. '#' → logprob: -6.420085906982422
    7. ' t' → logprob: -7.420085906982422
    8. 'à' → logprob: -7.920085906982422
    9. '           ' → logprob: -8.045085906982422
    10. ' à' → logprob: -8.795085906982422

Token 1014: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.08912878483533859
    2. ' v' → logprob: -2.5891287326812744
    3. 't' → logprob: -4.8391289710998535
    4. ' t' → logprob: -6.0891289710998535
    5. '   ' → logprob: -13.589128494262695
    6. 'c' → logprob: -13.964128494262695
    7. '	v' → logprob: -14.464128494262695
    8. '[v' → logprob: -14.714128494262695
    9. ' ' → logprob: -14.839128494262695
    10. 'd' → logprob: -14.964128494262695

Token 1015: ' vers' (ID: 3640)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7949207425117493
    2. ' +' → logprob: -1.4199206829071045
    3. ' plus' → logprob: -1.9199206829071045
    4. ',' → logprob: -2.7949206829071045
    5. '           ' → logprob: -3.9199206829071045
    6. ' est' → logprob: -4.169920921325684
    7. 'est' → logprob: -4.169920921325684
    8. ' ' → logprob: -4.294920921325684
    9. ' ,' → logprob: -4.919920921325684
    10. '   ' → logprob: -5.169920921325684

Token 1016: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.12693041563034058
    2. ' t' → logprob: -2.1269304752349854
    3. '`t' → logprob: -13.376930236816406
    4. ' ' → logprob: -16.251930236816406
    5. 'v' → logprob: -16.251930236816406
    6. 'l' → logprob: -16.376930236816406
    7. '[t' → logprob: -16.501930236816406
    8. '
' → logprob: -16.626930236816406
    9. '	t' → logprob: -16.626930236816406
    10. 'u' → logprob: -16.751930236816406

Token 1017: ' offre' (ID: 32066)
  Prédit: ' offre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' offre' → logprob: -1.7257596254348755
    2. '           ' → logprob: -1.9757596254348755
    3. ' est' → logprob: -2.225759506225586
    4. 's' → logprob: -2.350759506225586
    5. ' coûte' → logprob: -2.600759506225586
    6. ' plus' → logprob: -2.725759506225586
    7. '+' → logprob: -2.975759506225586
    8. ' s' → logprob: -3.350759506225586
    9. ' +' → logprob: -3.475759506225586
    10. ' peut' → logprob: -3.600759506225586

Token 1018: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.2551107406616211
    2. 'une' → logprob: -2.005110740661621
    3. 'a' → logprob: -2.755110740661621
    4. ' a' → logprob: -3.755110740661621
    5. '           ' → logprob: -6.255110740661621
    6. '   ' → logprob: -7.630110740661621
    7. '       ' → logprob: -8.005110740661621
    8. '               ' → logprob: -9.005110740661621
    9. ' un' → logprob: -9.505110740661621
    10. 'un' → logprob: -9.505110740661621

Token 1019: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.7038630247116089
    2. 'me' → logprob: -1.4538630247116089
    3. ' meilleure' → logprob: -1.4538630247116089
    4. 'better' → logprob: -3.9538631439208984
    5. 'short' → logprob: -4.703863143920898
    6. ' shorter' → logprob: -5.953863143920898
    7. ' distance' → logprob: -6.328863143920898
    8. 'd' → logprob: -6.328863143920898
    9. ' meilleur' → logprob: -6.703863143920898
    10. 'moins' → logprob: -6.953863143920898

Token 1020: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.05428685247898102
    2. '+' → logprob: -4.054286956787109
    3. ' +' → logprob: -4.554286956787109
    4. 'plus' → logprob: -4.679286956787109
    5. ' moins' → logprob: -5.679286956787109
    6. ' <' → logprob: -6.304286956787109
    7. '<' → logprob: -6.679286956787109
    8. ' shorter' → logprob: -6.679286956787109
    9. ' meilleure' → logprob: -6.804286956787109
    10. 'moins' → logprob: -6.804286956787109

Token 1021: ' courte' (ID: 130258)
  Prédit: 'cour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cour' → logprob: -0.9748284816741943
    2. 'court' → logprob: -1.2248284816741943
    3. 'short' → logprob: -1.7248284816741943
    4. ' courte' → logprob: -2.2248284816741943
    5. 'pet' → logprob: -3.3498284816741943
    6. '```' → logprob: -5.974828720092773
    7. 'c' → logprob: -6.849828720092773
    8. 'b' → logprob: -6.974828720092773
    9. 'import' → logprob: -7.099828720092773
    10. '<' → logprob: -7.849828720092773

Token 1022: ',
' (ID: 412)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5020630359649658
    2. ' <' → logprob: -1.6270630359649658
    3. '+' → logprob: -3.002063035964966
    4. ' plus' → logprob: -3.127063035964966
    5. ' +' → logprob: -4.002062797546387
    6. ',' → logprob: -4.002062797546387
    7. '               ' → logprob: -4.127062797546387
    8. ' moins' → logprob: -4.627062797546387
    9. '<' → logprob: -5.002062797546387
    10. ' c' → logprob: -5.002062797546387

Token 1023: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3135525584220886
    2. '               ' → logprob: -1.3135526180267334
    3. '            ' → logprob: -8.813552856445312
    4. '                   ' → logprob: -10.688552856445312
    5. '              ' → logprob: -10.813552856445312
    6. '	           ' → logprob: -11.563552856445312
    7. '            
' → logprob: -11.563552856445312
    8. ' ' → logprob: -11.688552856445312
    9. '   ' → logprob: -12.063552856445312
    10. ' if' → logprob: -12.188552856445312

Token 1024: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.27398017048835754
    2. ' if' → logprob: -2.148980140686035
    3. 'd' → logprob: -2.523980140686035
    4. '           ' → logprob: -3.773980140686035
    5. '               ' → logprob: -4.398980140686035
    6. ' d' → logprob: -5.023980140686035
    7. 'new' → logprob: -7.273980140686035
    8. ' new' → logprob: -8.273980140686035
    9. '   ' → logprob: -10.398980140686035
    10. '#' → logprob: -10.773980140686035

Token 1025: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.007916301488876343
    2. 'c' → logprob: -5.382916450500488
    3. ' d' → logprob: -5.757916450500488
    4. 'cost' → logprob: -9.882916450500488
    5. ' c' → logprob: -10.007916450500488
    6. '   ' → logprob: -10.757916450500488
    7. ' ' → logprob: -12.132916450500488
    8. '	d' → logprob: -12.882916450500488
    9. '(d' → logprob: -13.507916450500488
    10. '  ' → logprob: -13.632916450500488

Token 1026: '[v' (ID: 36561)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.34934329986572266
    2. '[v' → logprob: -1.2243432998657227
    3. 't' → logprob: -7.099343299865723
    4. 'v' → logprob: -9.849343299865723
    5. '[' → logprob: -12.349343299865723
    6. '   ' → logprob: -12.474343299865723
    7. '```' → logprob: -13.349343299865723
    8. '[u' → logprob: -13.474343299865723
    9. ' [' → logprob: -13.724343299865723
    10. ' t' → logprob: -14.224343299865723

Token 1027: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05494186654686928
    2. ' +' → logprob: -2.9299418926239014
    3. ']+' → logprob: -10.17994213104248
    4. '+c' → logprob: -11.42994213104248
    5. ']' → logprob: -12.67994213104248
    6. ')+' → logprob: -13.30494213104248
    7. '＋' → logprob: -13.30494213104248
    8. '[' → logprob: -14.17994213104248
    9. ' plus' → logprob: -14.67994213104248
    10. '+k' → logprob: -14.67994213104248

Token 1028: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014165744185447693
    2. ' +' → logprob: -4.264165878295898
    3. '+c' → logprob: -13.514165878295898
    4. '＋' → logprob: -14.639165878295898
    5. '+
' → logprob: -15.639165878295898
    6. '+C' → logprob: -16.2641658782959
    7. '+k' → logprob: -17.1391658782959
    8. '+d' → logprob: -17.1391658782959
    9. '+t' → logprob: -17.3891658782959
    10. ' plus' → logprob: -17.3891658782959

Token 1029: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.001170225441455841
    2. ' cost' → logprob: -6.7511701583862305
    3. '(cost' → logprob: -17.626171112060547
    4. 'Cost' → logprob: -19.751171112060547
    5. '_cost' → logprob: -20.001171112060547
    6. '   ' → logprob: -21.376171112060547
    7. 'co' → logprob: -21.751171112060547
    8. '.cost' → logprob: -21.876171112060547
    9. ' ' → logprob: -22.626171112060547
    10. '
' → logprob: -23.251171112060547

Token 1030: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07889209687709808
    2. ' <' → logprob: -2.5788919925689697
    3. ' ' → logprob: -14.82889175415039
    4. '[' → logprob: -14.82889175415039
    5. '<t' → logprob: -15.07889175415039
    6. 'd' → logprob: -15.45389175415039
    7. '<n' → logprob: -15.70389175415039
    8. '   ' → logprob: -15.70389175415039
    9. '<v' → logprob: -15.82889175415039
    10. '<c' → logprob: -16.82889175415039

Token 1031: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0003360582049936056
    2. ' d' → logprob: -8.000335693359375
    3. '           ' → logprob: -15.000335693359375
    4. '   ' → logprob: -15.250335693359375
    5. '
' → logprob: -16.875335693359375
    6. '       ' → logprob: -17.625335693359375
    7. ' ' → logprob: -17.875335693359375
    8. '  ' → logprob: -18.750335693359375
    9. '               ' → logprob: -18.875335693359375
    10. '          ' → logprob: -19.000335693359375

Token 1032: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -3.1424973713001236e-05
    2. 't' → logprob: -10.375031471252441
    3. '
' → logprob: -17.500030517578125
    4. '(t' → logprob: -18.000030517578125
    5. '[
' → logprob: -18.000030517578125
    6. '[' → logprob: -18.125030517578125
    7. ' [' → logprob: -18.125030517578125
    8. '[v' → logprob: -18.250030517578125
    9. '```' → logprob: -18.500030517578125
    10. '#' → logprob: -18.625030517578125

Token 1033: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.665727436542511
    2. ']:' → logprob: -0.790727436542511
    3. ':' → logprob: -3.915727376937866
    4. ':
' → logprob: -4.415727615356445
    5. ']' → logprob: -7.790727615356445
    6. '):
' → logprob: -9.665727615356445
    7. ']:
' → logprob: -10.415727615356445
    8. '):' → logprob: -11.290727615356445
    9. '():
' → logprob: -11.540727615356445
    10. ']:

' → logprob: -11.790727615356445

Token 1034: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000719818810466677
    2. ':' → logprob: -8.000720024108887
    3. 'd' → logprob: -9.125720024108887
    4. '           ' → logprob: -9.250720024108887
    5. ' d' → logprob: -9.750720024108887
    6. ' :' → logprob: -10.500720024108887
    7. ':
' → logprob: -10.625720024108887
    8. '):
' → logprob: -11.250720024108887
    9. '```' → logprob: -11.375720024108887
    10. ' =' → logprob: -11.500720024108887

Token 1035: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2849142551422119
    2. ' d' → logprob: -1.784914255142212
    3. 'd' → logprob: -2.534914255142212
    4. '                   ' → logprob: -7.159914016723633
    5. '           ' → logprob: -10.284914016723633
    6. '   ' → logprob: -11.534914016723633
    7. '                ' → logprob: -11.659914016723633
    8. '```' → logprob: -11.909914016723633
    9. '              ' → logprob: -13.284914016723633
    10. '       ' → logprob: -13.784914016723633

Token 1036: ' On' (ID: 2160)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.024249665439128876
    2. ' d' → logprob: -4.02424955368042
    3. '               ' → logprob: -5.14924955368042
    4. '                   ' → logprob: -8.274250030517578
    5. '#' → logprob: -11.524250030517578
    6. '           ' → logprob: -11.899250030517578
    7. '```' → logprob: -13.399250030517578
    8. '   ' → logprob: -13.524250030517578
    9. '                ' → logprob: -13.899250030517578
    10. ' #' → logprob: -14.524250030517578

Token 1037: ' met' (ID: 1421)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.36131900548934937
    2. '               ' → logprob: -1.3613190650939941
    3. ' d' → logprob: -3.361319065093994
    4. '                   ' → logprob: -4.486319065093994
    5. '#' → logprob: -7.611319065093994
    6. '           ' → logprob: -8.486318588256836
    7. '                ' → logprob: -9.111318588256836
    8. '   ' → logprob: -10.736318588256836
    9. 'import' → logprob: -11.111318588256836
    10. '              ' → logprob: -11.611318588256836

Token 1038: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.05362112447619438
    2. ' à' → logprob: -3.6786210536956787
    3. '               ' → logprob: -4.303621292114258
    4. 'a' → logprob: -4.928621292114258
    5. 'd' → logprob: -5.678621292114258
    6. '```' → logprob: -6.553621292114258
    7. 'aj' → logprob: -8.053621292114258
    8. 'À' → logprob: -8.053621292114258
    9. '#' → logprob: -8.928621292114258
    10. '                   ' → logprob: -9.178621292114258

Token 1039: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0009058646392077208
    2. 'd' → logprob: -7.250905990600586
    3. ' jour' → logprob: -9.000905990600586
    4. 'j' → logprob: -10.500905990600586
    5. 'day' → logprob: -11.000905990600586
    6. '```' → logprob: -11.375905990600586
    7. 'jou' → logprob: -11.750905990600586
    8. 'jours' → logprob: -12.000905990600586
    9. 'journ' → logprob: -13.750905990600586
    10. '[j' → logprob: -14.750905990600586

Token 1040: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.008798335678875446
    2. ' d' → logprob: -4.758798122406006
    3. '               ' → logprob: -8.633798599243164
    4. '                   ' → logprob: -12.258798599243164
    5. '                ' → logprob: -15.008798599243164
    6. '```' → logprob: -15.258798599243164
    7. '           ' → logprob: -16.383798599243164
    8. '[d' → logprob: -16.508798599243164
    9. 'the' → logprob: -16.633798599243164
    10. '                
' → logprob: -16.758798599243164

Token 1041: ' distance' (ID: 9324)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31353506445884705
    2. 'distance' → logprob: -1.3135350942611694
    3. ' distance' → logprob: -8.8135347366333
    4. 'dist' → logprob: -9.1885347366333
    5. ' d' → logprob: -11.3135347366333
    6. 'val' → logprob: -12.4385347366333
    7. '#' → logprob: -13.3135347366333
    8. '   ' → logprob: -13.5635347366333
    9. '```' → logprob: -13.9385347366333
    10. 'value' → logprob: -15.1885347366333

Token 1042: ' minimale' (ID: 143217)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48719534277915955
    2. '[t' → logprob: -0.9871953725814819
    3. 'd' → logprob: -4.6121954917907715
    4. ' d' → logprob: -6.4871954917907715
    5. '                   ' → logprob: -7.4871954917907715
    6. 't' → logprob: -7.8621954917907715
    7. '[d' → logprob: -7.9871954917907715
    8. '           ' → logprob: -8.737195014953613
    9. '[' → logprob: -10.487195014953613
    10. ' [' → logprob: -10.862195014953613

Token 1043: ' vers' (ID: 3640)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02507162280380726
    2. '[t' → logprob: -3.775071620941162
    3. '                   ' → logprob: -6.525071620941162
    4. 'd' → logprob: -9.02507209777832
    5. '           ' → logprob: -9.52507209777832
    6. 't' → logprob: -10.02507209777832
    7. '[v' → logprob: -10.27507209777832
    8. '                ' → logprob: -10.40007209777832
    9. '              ' → logprob: -11.52507209777832
    10. '   ' → logprob: -11.77507209777832

Token 1044: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0025760135613381863
    2. ' t' → logprob: -6.002575874328613
    3. '[t' → logprob: -9.252575874328613
    4. '               ' → logprob: -13.502575874328613
    5. '`t' → logprob: -13.752575874328613
    6. '```' → logprob: -14.252575874328613
    7. 'd' → logprob: -14.377575874328613
    8. '   ' → logprob: -15.252575874328613
    9. '                   ' → logprob: -15.502575874328613
    10. '           ' → logprob: -15.627575874328613

Token 1045: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011856284982059151
    2. 'd' → logprob: -10.250118255615234
    3. '                   ' → logprob: -10.625118255615234
    4. ' =' → logprob: -10.875118255615234
    5. '           ' → logprob: -11.375118255615234
    6. '                ' → logprob: -12.125118255615234
    7. '              ' → logprob: -12.250118255615234
    8. ',' → logprob: -12.625118255615234
    9. ' d' → logprob: -12.875118255615234
    10. '                
' → logprob: -13.125118255615234

Token 1046: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004778518341481686
    2. 'd' → logprob: -5.8797783851623535
    3. ' d' → logprob: -6.2547783851623535
    4. '```' → logprob: -10.254778861999512
    5. '                   ' → logprob: -11.754778861999512
    6. '           ' → logprob: -13.129778861999512
    7. '   ' → logprob: -13.504778861999512
    8. '       ' → logprob: -14.129778861999512
    9. '              ' → logprob: -14.504778861999512
    10. '[' → logprob: -14.504778861999512

Token 1047: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.021312620490789413
    2. '               ' → logprob: -4.021312713623047
    3. ' d' → logprob: -5.771312713623047
    4. '                   ' → logprob: -10.271312713623047
    5. '```' → logprob: -12.771312713623047
    6. '           ' → logprob: -12.896312713623047
    7. '                ' → logprob: -14.396312713623047
    8. '   ' → logprob: -14.521312713623047
    9. '              ' → logprob: -14.646312713623047
    10. '       ' → logprob: -15.646312713623047

Token 1048: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -4.127333340875339e-06
    2. 't' → logprob: -12.500003814697266
    3. '[' → logprob: -15.500003814697266
    4. '```' → logprob: -17.250003814697266
    5. '               ' → logprob: -17.375003814697266
    6. '[v' → logprob: -17.500003814697266
    7. ' [' → logprob: -18.375003814697266
    8. ' t' → logprob: -18.625003814697266
    9. '	t' → logprob: -18.750003814697266
    10. '
' → logprob: -19.000003814697266

Token 1049: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7401256561279297
    2. ']' → logprob: -0.8651256561279297
    3. '[t' → logprob: -3.1151256561279297
    4. ' =' → logprob: -3.6151256561279297
    5. '[v' → logprob: -3.9901256561279297
    6. ']=' → logprob: -4.49012565612793
    7. '               ' → logprob: -7.99012565612793
    8. '[' → logprob: -8.36512565612793
    9. 't' → logprob: -9.49012565612793
    10. '                   ' → logprob: -9.86512565612793

Token 1050: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324594371020794
    2. ' =' → logprob: -3.7732460498809814
    3. '=d' → logprob: -15.648245811462402
    4. '=
' → logprob: -16.52324676513672
    5. '   ' → logprob: -16.64824676513672
    6. '=c' → logprob: -16.89824676513672
    7. '=v' → logprob: -16.89824676513672
    8. ',' → logprob: -17.14824676513672
    9. '＝' → logprob: -17.39824676513672
    10. '=

' → logprob: -17.64824676513672

Token 1051: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.008621551096439362
    2. ' d' → logprob: -4.758621692657471
    3. '   ' → logprob: -12.258621215820312
    4. '                   ' → logprob: -14.258621215820312
    5. '               ' → logprob: -14.633621215820312
    6. '           ' → logprob: -15.133621215820312
    7. '  ' → logprob: -15.883621215820312
    8. ' ' → logprob: -15.883621215820312
    9. '    ' → logprob: -15.883621215820312
    10. '	d' → logprob: -15.883621215820312

Token 1052: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.630610641877865e-06
    2. 'v' → logprob: -12.000006675720215
    3. '(v' → logprob: -16.3750057220459
    4. '[' → logprob: -16.6250057220459
    5. '<v' → logprob: -16.7500057220459
    6. '[t' → logprob: -17.1250057220459
    7. '[c' → logprob: -17.2500057220459
    8. '
' → logprob: -17.6250057220459
    9. 't' → logprob: -17.8750057220459
    10. '```' → logprob: -18.0000057220459

Token 1053: ']' (ID: 60)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.31191328167915344
    2. '+' → logprob: -1.561913251876831
    3. ' +' → logprob: -2.936913251876831
    4. '[' → logprob: -5.68691349029541
    5. ']' → logprob: -6.81191349029541
    6. ']+' → logprob: -7.56191349029541
    7. 'v' → logprob: -9.81191349029541
    8. '[t' → logprob: -10.56191349029541
    9. ' [' → logprob: -11.06191349029541
    10. '[c' → logprob: -11.06191349029541

Token 1054: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6159192323684692
    2. ' +' → logprob: -0.8659192323684692
    3. '+c' → logprob: -3.2409191131591797
    4. '               ' → logprob: -10.86591911315918
    5. '+C' → logprob: -11.24091911315918
    6. '+d' → logprob: -11.74091911315918
    7. '+t' → logprob: -12.24091911315918
    8. '+
' → logprob: -12.99091911315918
    9. '+h' → logprob: -13.11591911315918
    10. '+k' → logprob: -13.11591911315918

Token 1055: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.004078401252627373
    2. ' cost' → logprob: -5.504078388214111
    3. '(cost' → logprob: -18.629077911376953
    4. 'co' → logprob: -19.629077911376953
    5. 'c' → logprob: -20.379077911376953
    6. '_cost' → logprob: -20.754077911376953
    7. 'Cost' → logprob: -21.129077911376953
    8. 'code' → logprob: -21.629077911376953
    9. '   ' → logprob: -21.754077911376953
    10. 'cout' → logprob: -22.004077911376953

Token 1056: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.370294846012257e-05
    2. 'he' → logprob: -10.375043869018555
    3. ' he' → logprob: -11.500043869018555
    4. '			' → logprob: -14.250043869018555
    5. '              ' → logprob: -14.375043869018555
    6. '                
' → logprob: -14.875043869018555
    7. '       ' → logprob: -15.375043869018555
    8. '                   ' → logprob: -15.750043869018555
    9. '           ' → logprob: -16.375043869018555
    10. '                ' → logprob: -16.500043869018555

Token 1057: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008376232581213117
    2. 'he' → logprob: -7.125837802886963
    3. ' he' → logprob: -10.625837326049805
    4. '                
' → logprob: -12.750837326049805
    5. '			' → logprob: -12.875837326049805
    6. '              ' → logprob: -13.625837326049805
    7. '                   ' → logprob: -14.000837326049805
    8. '```' → logprob: -14.250837326049805
    9. '                ' → logprob: -15.375837326049805
    10. '       ' → logprob: -15.750837326049805

Token 1058: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31337350606918335
    2. 'he' → logprob: -1.3133735656738281
    3. '              ' → logprob: -10.063373565673828
    4. ' he' → logprob: -10.313373565673828
    5. '           ' → logprob: -10.938373565673828
    6. '       ' → logprob: -12.563373565673828
    7. '```' → logprob: -12.563373565673828
    8. '			' → logprob: -12.688373565673828
    9. '                   ' → logprob: -12.938373565673828
    10. '                ' → logprob: -13.188373565673828

Token 1059: ' Et' (ID: 10007)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.38701581954956055
    2. '               ' → logprob: -1.1370158195495605
    3. '           ' → logprob: -9.637016296386719
    4. ' he' → logprob: -10.137016296386719
    5. '              ' → logprob: -11.137016296386719
    6. 'heap' → logprob: -11.387016296386719
    7. '       ' → logprob: -12.637016296386719
    8. '                   ' → logprob: -13.012016296386719
    9. '   ' → logprob: -13.262016296386719
    10. '                ' → logprob: -13.387016296386719

Token 1060: ' on' (ID: 402)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.03211706131696701
    2. '               ' → logprob: -4.032116889953613
    3. ' he' → logprob: -4.282116889953613
    4. '                   ' → logprob: -10.407116889953613
    5. '           ' → logprob: -11.532116889953613
    6. '   ' → logprob: -12.032116889953613
    7. '              ' → logprob: -12.532116889953613
    8. '                ' → logprob: -12.907116889953613
    9. '#' → logprob: -13.907116889953613
    10. '             ' → logprob: -14.157116889953613

Token 1061: ' ajoute' (ID: 91611)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0004436587623786181
    2. ' he' → logprob: -7.750443458557129
    3. '               ' → logprob: -11.500443458557129
    4. '           ' → logprob: -13.375443458557129
    5. '   ' → logprob: -14.375443458557129
    6. 'heap' → logprob: -15.000443458557129
    7. '                   ' → logprob: -16.125444412231445
    8. '.he' → logprob: -16.250444412231445
    9. '       ' → logprob: -16.750444412231445
    10. '_he' → logprob: -17.250444412231445

Token 1062: ' ce' (ID: 2357)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.668624758720398
    2. '(t' → logprob: -0.918624758720398
    3. '(h' → logprob: -2.5436248779296875
    4. '(' → logprob: -5.5436248779296875
    5. '               ' → logprob: -5.6686248779296875
    6. '(v' → logprob: -6.1686248779296875
    7. '(c' → logprob: -8.293624877929688
    8. '   ' → logprob: -9.168624877929688
    9. '                   ' → logprob: -9.668624877929688
    10. '           ' → logprob: -10.668624877929688

Token 1063: ' nouveau' (ID: 23184)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4575168490409851
    2. '(t' → logprob: -1.4575169086456299
    3. '(' → logprob: -2.08251690864563
    4. '(v' → logprob: -4.832516670227051
    5. '(c' → logprob: -7.457516670227051
    6. ',' → logprob: -8.70751667022705
    7. '   ' → logprob: -8.95751667022705
    8. ' t' → logprob: -9.20751667022705
    9. '(d' → logprob: -9.45751667022705
    10. ' new' → logprob: -9.45751667022705

Token 1064: ' sommet' (ID: 130502)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4844796657562256
    2. '(' → logprob: -1.1094796657562256
    3. '(c' → logprob: -3.6094796657562256
    4. ',' → logprob: -4.234479904174805
    5. '(v' → logprob: -5.234479904174805
    6. '   ' → logprob: -5.859479904174805
    7. '(t' → logprob: -6.359479904174805
    8. ' ,' → logprob: -7.609479904174805
    9. 't' → logprob: -8.234479904174805
    10. '(s' → logprob: -8.359479904174805

Token 1065: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4145546555519104
    2. '               ' → logprob: -1.5395545959472656
    3. ' au' → logprob: -3.0395545959472656
    4. '(t' → logprob: -3.2895545959472656
    5. ' (' → logprob: -4.789554595947266
    6. ',(' → logprob: -5.039554595947266
    7. '(' → logprob: -5.539554595947266
    8. ',
' → logprob: -5.664554595947266
    9. 't' → logprob: -5.914554595947266
    10. '           ' → logprob: -6.039554595947266

Token 1066: ' traiter' (ID: 105852)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.006370966788381338
    2. ' h' → logprob: -5.131371021270752
    3. '(h' → logprob: -8.381370544433594
    4. '   ' → logprob: -9.131370544433594
    5. 'he' → logprob: -9.381370544433594
    6. ' (' → logprob: -11.756370544433594
    7. '```' → logprob: -12.131370544433594
    8. 'heap' → logprob: -12.631370544433594
    9. 'the' → logprob: -13.131370544433594
    10. ' the' → logprob: -14.631370544433594

Token 1067: ' dans' (ID: 2671)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20188191533088684
    2. ' (' → logprob: -2.0768818855285645
    3. '(h' → logprob: -2.9518818855285645
    4. ',' → logprob: -5.4518818855285645
    5. '                   ' → logprob: -8.576882362365723
    6. '           ' → logprob: -8.576882362365723
    7. '(t' → logprob: -8.826882362365723
    8. '   ' → logprob: -9.076882362365723
    9. '       ' → logprob: -9.201882362365723
    10. '(' → logprob: -9.701882362365723

Token 1068: ' le' (ID: 505)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -4.632542913896032e-05
    2. ' h' → logprob: -10.000046730041504
    3. '(h' → logprob: -14.250046730041504
    4. 'he' → logprob: -15.625046730041504
    5. 'the' → logprob: -17.250045776367188
    6. 'heap' → logprob: -18.750045776367188
    7. ' the' → logprob: -19.000045776367188
    8. '   ' → logprob: -19.000045776367188
    9. '	h' → logprob: -19.375045776367188
    10. '
' → logprob: -20.125045776367188

Token 1069: ' tas' (ID: 17067)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0007145775598473847
    2. 'heap' → logprob: -7.2507147789001465
    3. ' h' → logprob: -12.875714302062988
    4. 'he' → logprob: -13.750714302062988
    5. ' heap' → logprob: -14.500714302062988
    6. '   ' → logprob: -15.625714302062988
    7. '(h' → logprob: -16.250715255737305
    8. '```' → logprob: -16.750715255737305
    9. ')' → logprob: -17.500715255737305
    10. 'ht' → logprob: -17.875715255737305

Token 1070: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010914006270468235
    2. ',' → logprob: -7.126091480255127
    3. ' (' → logprob: -8.376091003417969
    4. '(' → logprob: -10.251091003417969
    5. ',
' → logprob: -12.251091003417969
    6. '           ' → logprob: -12.626091003417969
    7. '              ' → logprob: -12.626091003417969
    8. '       ' → logprob: -13.501091003417969
    9. ' he' → logprob: -13.501091003417969
    10. ',(' → logprob: -13.876091003417969

Token 1071: 'avec' (ID: 64065)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.004110457841306925
    2. ' h' → logprob: -6.379110336303711
    3. '(h' → logprob: -6.879110336303711
    4. '(' → logprob: -7.504110336303711
    5. '   ' → logprob: -7.629110336303711
    6. ' (' → logprob: -8.379110336303711
    7. 'he' → logprob: -9.879110336303711
    8. ')' → logprob: -11.129110336303711
    9. '       ' → logprob: -11.629110336303711
    10. '           ' → logprob: -11.879110336303711

Token 1072: ' sa' (ID: 880)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.3970382511615753
    2. 'd' → logprob: -1.147038221359253
    3. ' (' → logprob: -5.022038459777832
    4. '(c' → logprob: -6.022038459777832
    5. '   ' → logprob: -7.772038459777832
    6. '#' → logprob: -9.022038459777832
    7. ' d' → logprob: -9.147038459777832
    8. '(' → logprob: -9.147038459777832
    9. 'he' → logprob: -9.147038459777832
    10. 'c' → logprob: -9.772038459777832

Token 1073: ' nouvelle' (ID: 24562)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.11569895595312119
    2. ' distance' → logprob: -2.865699052810669
    3. 'd' → logprob: -2.990699052810669
    4. 'dist' → logprob: -7.11569881439209
    5. ' nouvelle' → logprob: -7.36569881439209
    6. ' d' → logprob: -8.74069881439209
    7. 'new' → logprob: -8.86569881439209
    8. '(distance' → logprob: -9.61569881439209
    9. ' new' → logprob: -9.86569881439209
    10. 'updated' → logprob: -9.99069881439209

Token 1074: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.10033132135868073
    2. ' distance' → logprob: -2.3503313064575195
    3. '_distance' → logprob: -9.72533130645752
    4. 'dist' → logprob: -10.10033130645752
    5. 'd' → logprob: -11.97533130645752
    6. '   ' → logprob: -12.85033130645752
    7. ',' → logprob: -13.10033130645752
    8. '(distance' → logprob: -13.10033130645752
    9. ')' → logprob: -13.22533130645752
    10. 'val' → logprob: -13.47533130645752

Token 1075: ').
' (ID: 6294)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6612907648086548
    2. ')' → logprob: -0.7862907648086548
    3. '               ' → logprob: -3.6612906455993652
    4. ').' → logprob: -6.911290645599365
    5. ' ,' → logprob: -7.786290645599365
    6. ')
' → logprob: -8.036291122436523
    7. '):' → logprob: -8.411291122436523
    8. ' )' → logprob: -8.911291122436523
    9. '),' → logprob: -9.161291122436523
    10. '):
' → logprob: -9.161291122436523

Token 1076: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.049931757152080536
    2. ' he' → logprob: -3.549931764602661
    3. 'he' → logprob: -3.924931764602661
    4. '```' → logprob: -9.299931526184082
    5. '   ' → logprob: -9.674931526184082
    6. '       ' → logprob: -10.299931526184082
    7. '           ' → logprob: -11.549931526184082
    8. '(' → logprob: -11.549931526184082
    9. '                   ' → logprob: -11.924931526184082
    10. ' (' → logprob: -11.924931526184082

Token 1077: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -0.00081487005809322
    2. '               ' → logprob: -7.500814914703369
    3. ' he' → logprob: -8.250814437866211
    4. '   ' → logprob: -14.375814437866211
    5. '           ' → logprob: -15.625814437866211
    6. 'heap' → logprob: -17.00081443786621
    7. '                   ' → logprob: -17.62581443786621
    8. '       ' → logprob: -18.00081443786621
    9. '              ' → logprob: -18.12581443786621
    10. '```' → logprob: -18.50081443786621

Token 1078: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.8889261304575484e-06
    2. ' app' → logprob: -12.875003814697266
    3. 'ap' → logprob: -13.625003814697266
    4. 'pp' → logprob: -18.875003814697266
    5. '	app' → logprob: -19.750003814697266
    6. '(app' → logprob: -20.375003814697266
    7. '```' → logprob: -20.625003814697266
    8. 'aps' → logprob: -20.750003814697266
    9. 'ап' → logprob: -20.875003814697266
    10. '   ' → logprob: -20.875003814697266

Token 1079: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -4.990154047845863e-05
    2. 'push' → logprob: -10.125049591064453
    3. 'op' → logprob: -12.250049591064453
    4. 'sh' → logprob: -12.500049591064453
    5. 'p' → logprob: -14.125049591064453
    6. '   ' → logprob: -15.875049591064453
    7. 'u' → logprob: -16.250049591064453
    8. '```' → logprob: -17.000049591064453
    9. 'us' → logprob: -17.125049591064453
    10. 'h' → logprob: -17.250049591064453

Token 1080: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: 0.0
    2. ' (' → logprob: -17.0
    3. '(' → logprob: -17.125
    4. '(
' → logprob: -19.125
    5. ',h' → logprob: -19.375
    6. 'h' → logprob: -19.375
    7. ' h' → logprob: -20.125
    8. ',' → logprob: -21.0
    9. '	h' → logprob: -21.125
    10. '(heap' → logprob: -21.375

Token 1081: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -4.8351892473874614e-05
    2. ',' → logprob: -10.250048637390137
    3. ')' → logprob: -12.000048637390137
    4. ',h' → logprob: -12.250048637390137
    5. '(' → logprob: -13.500048637390137
    6. ' (' → logprob: -15.000048637390137
    7. '),' → logprob: -16.12504768371582
    8. 'h' → logprob: -17.25004768371582
    9. '(heap' → logprob: -17.37504768371582
    10. ' ,' → logprob: -17.62504768371582

Token 1082: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0853826180100441
    2. '(c' → logprob: -2.5853826999664307
    3. ' (' → logprob: -5.085382461547852
    4. '(' → logprob: -8.210382461547852
    5. '((' → logprob: -11.585382461547852
    6. '   ' → logprob: -13.210382461547852
    7. '(C' → logprob: -14.085382461547852
    8. ' ' → logprob: -14.585382461547852
    9. '(ct' → logprob: -15.335382461547852
    10. '(dc' → logprob: -15.585382461547852

Token 1083: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2664456789934775e-06
    2. ' d' → logprob: -14.000000953674316
    3. '(d' → logprob: -16.125001907348633
    4. '   ' → logprob: -16.250001907348633
    5. '               ' → logprob: -16.250001907348633
    6. '           ' → logprob: -16.875001907348633
    7. '                   ' → logprob: -17.375001907348633
    8. '       ' → logprob: -18.375001907348633
    9. '             ' → logprob: -19.125001907348633
    10. '	d' → logprob: -19.625001907348633

Token 1084: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.0015680687502026558
    2. 't' → logprob: -6.501567840576172
    3. 'd' → logprob: -10.501567840576172
    4. '
' → logprob: -11.126567840576172
    5. '(t' → logprob: -12.001567840576172
    6. '	t' → logprob: -13.126567840576172
    7. '   ' → logprob: -13.126567840576172
    8. ' t' → logprob: -13.251567840576172
    9. '[d' → logprob: -13.251567840576172
    10. '[v' → logprob: -13.376567840576172

Token 1085: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016039233014453202
    2. '],' → logprob: -9.375160217285156
    3. ',t' → logprob: -10.125160217285156
    4. ' ,' → logprob: -10.625160217285156
    5. '[t' → logprob: -11.625160217285156
    6. 't' → logprob: -13.625160217285156
    7. ']' → logprob: -14.625160217285156
    8. '),' → logprob: -15.500160217285156
    9. ',
' → logprob: -15.875160217285156
    10. '[' → logprob: -16.125160217285156

Token 1086: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0002613358374219388
    2. ' t' → logprob: -8.250261306762695
    3. '`t' → logprob: -16.500261306762695
    4. '	t' → logprob: -17.000261306762695
    5. '   ' → logprob: -18.000261306762695
    6. '           ' → logprob: -19.750261306762695
    7. ')t' → logprob: -20.125261306762695
    8. '               ' → logprob: -20.500261306762695
    9. '  ' → logprob: -21.000261306762695
    10. ' ' → logprob: -21.125261306762695

Token 1087: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008627933450043201
    2. '))
' → logprob: -4.758627891540527
    3. '           ' → logprob: -12.508627891540527
    4. ' ))' → logprob: -12.758627891540527
    5. ')))' → logprob: -13.508627891540527
    6. '       ' → logprob: -13.633627891540527
    7. '               ' → logprob: -13.633627891540527
    8. ')' → logprob: -13.883627891540527
    9. '))

' → logprob: -14.508627891540527
    10. '))
' → logprob: -14.758627891540527

Token 1088: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3523585796356201
    2. '<|end|>' → logprob: -1.3523585796356201
    3. '
' → logprob: -3.47735857963562
    4. 'return' → logprob: -5.727358818054199
    5. '    
' → logprob: -6.477358818054199
    6. '<|end|>' → logprob: -7.352358818054199
    7. ' return' → logprob: -7.727358818054199
    8. '	return' → logprob: -7.852358818054199
    9. ')' → logprob: -7.977358818054199
    10. '```' → logprob: -8.1023588180542

Token 1089: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001176893594674766
    2. 'return' → logprob: -6.751176834106445
    3. ' return' → logprob: -12.126176834106445
    4. '	return' → logprob: -14.751176834106445
    5. '    
' → logprob: -15.001176834106445
    6. '
' → logprob: -15.251176834106445
    7. '```' → logprob: -15.251176834106445
    8. '       ' → logprob: -16.751176834106445
    9. ':return' → logprob: -18.376176834106445
    10. '   ' → logprob: -18.501176834106445

Token 1090: ' Retour' (ID: 146830)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0006490522064268589
    2. '   ' → logprob: -7.5006489753723145
    3. ' return' → logprob: -9.250649452209473
    4. '	return' → logprob: -17.000648498535156
    5. '```' → logprob: -17.125648498535156
    6. 'ret' → logprob: -18.625648498535156
    7. 'eturn' → logprob: -18.750648498535156
    8. ' ' → logprob: -19.125648498535156
    9. '{return' → logprob: -19.250648498535156
    10. ':return' → logprob: -19.500648498535156

Token 1091: 'ne' (ID: 611)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.00208947341889143
    2. 'd' → logprob: -6.752089500427246
    3. '   ' → logprob: -7.252089500427246
    4. 'urn' → logprob: -8.752089500427246
    5. ' return' → logprob: -10.377089500427246
    6. 'return' → logprob: -11.877089500427246
    7. 'n' → logprob: -12.252089500427246
    8. 'ur' → logprob: -13.127089500427246
    9. ' ' → logprob: -13.627089500427246
    10. 'eturn' → logprob: -13.877089500427246

Token 1092: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0011705794604495168
    2. ' d' → logprob: -6.751170635223389
    3. '   ' → logprob: -14.75117015838623
    4. 'def' → logprob: -19.876171112060547
    5. '
' → logprob: -20.376171112060547
    6. ' la' → logprob: -20.751171112060547
    7. '	d' → logprob: -21.001171112060547
    8. '  ' → logprob: -21.126171112060547
    9. 'return' → logprob: -21.126171112060547
    10. ' ' → logprob: -21.251171112060547

Token 1093: ' liste' (ID: 31719)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.3795937522663735e-05
    2. ' d' → logprob: -11.25002384185791
    3. 'def' → logprob: -12.00002384185791
    4. 'return' → logprob: -12.87502384185791
    5. 'distance' → logprob: -14.12502384185791
    6. 'list' → logprob: -14.37502384185791
    7. '[]' → logprob: -15.87502384185791
    8. '[' → logprob: -16.250022888183594
    9. 'dist' → logprob: -16.250022888183594
    10. 'liste' → logprob: -16.375022888183594

Token 1094: ' complète' (ID: 75660)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.335323691368103
    2. ' des' → logprob: -1.960323691368103
    3. 'd' → logprob: -2.5853238105773926
    4. ' of' → logprob: -3.2103238105773926
    5. '   ' → logprob: -3.8353238105773926
    6. ' return' → logprob: -5.960323810577393
    7. ' de' → logprob: -6.585323810577393
    8. '(d' → logprob: -7.085323810577393
    9. 'des' → logprob: -7.585323810577393
    10. '[d' → logprob: -7.835323810577393

Token 1095: ' des' (ID: 731)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3459847867488861
    2. '   ' → logprob: -1.5959848165512085
    3. ' d' → logprob: -2.470984697341919
    4. ' des' → logprob: -5.845984935760498
    5. 'des' → logprob: -6.845984935760498
    6. ' of' → logprob: -8.09598445892334
    7. '
' → logprob: -8.22098445892334
    8. 'def' → logprob: -8.72098445892334
    9. '[d' → logprob: -8.72098445892334
    10. 'return' → logprob: -9.09598445892334

Token 1096: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07483411580324173
    2. 'd' → logprob: -3.324834108352661
    3. ' distances' → logprob: -3.324834108352661
    4. 'distance' → logprob: -9.199833869934082
    5. ' dist' → logprob: -10.199833869934082
    6. ' d' → logprob: -12.699833869934082
    7. 'Distances' → logprob: -13.824833869934082
    8. 'diff' → logprob: -14.449833869934082
    9. '```' → logprob: -14.449833869934082
    10. '   ' → logprob: -15.324833869934082

Token 1097: ' minim' (ID: 23874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016091851517558098
    2. 'return' → logprob: -5.016091823577881
    3. '
' → logprob: -5.266091823577881
    4. '<|end|>' → logprob: -6.516091823577881
    5. ' return' → logprob: -6.641091823577881
    6. 'd' → logprob: -7.891091823577881
    7. 'def' → logprob: -8.266092300415039
    8. '  ' → logprob: -8.641092300415039
    9. ' ' → logprob: -8.891092300415039
    10. ',' → logprob: -9.016092300415039

Token 1098: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.0001863750658230856
    2. 'es' → logprob: -9.3751859664917
    3. 'ale' → logprob: -9.5001859664917
    4. 'aux' → logprob: -10.8751859664917
    5. 'tes' → logprob: -13.6251859664917
    6. 'um' → logprob: -13.6251859664917
    7. 'utes' → logprob: -13.6251859664917
    8. '```' → logprob: -14.2501859664917
    9. 'def' → logprob: -14.5001859664917
    10. '   ' → logprob: -14.7501859664917

Token 1099: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025415223091840744
    2. '
' → logprob: -4.150415420532227
    3. 'return' → logprob: -5.025415420532227
    4. ' return' → logprob: -6.400415420532227
    5. 'def' → logprob: -7.900415420532227
    6. 'd' → logprob: -8.400415420532227
    7. '  ' → logprob: -9.275415420532227
    8. ' ' → logprob: -9.400415420532227
    9. '	return' → logprob: -9.400415420532227
    10. ',' → logprob: -9.525415420532227

Token 1100: ' sommet' (ID: 130502)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.23725265264511108
    2. 'source' → logprob: -1.9872527122497559
    3. 'som' → logprob: -2.987252712249756
    4. 'dé' → logprob: -4.487252712249756
    5. 'd' → logprob: -5.362252712249756
    6. 'start' → logprob: -5.862252712249756
    7. ' sommet' → logprob: -6.737252712249756
    8. ' départ' → logprob: -6.987252712249756
    9. 'depart' → logprob: -7.112252712249756
    10. 'plus' → logprob: -7.612252712249756

Token 1101: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08677268028259277
    2. ' s' → logprob: -3.2117726802825928
    3. 'source' → logprob: -3.3367726802825928
    4. ' source' → logprob: -5.336772918701172
    5. 'd' → logprob: -6.461772918701172
    6. '   ' → logprob: -7.961772918701172
    7. '_source' → logprob: -9.211772918701172
    8. '(s' → logprob: -9.461772918701172
    9. ' d' → logprob: -9.586772918701172
    10. 'return' → logprob: -9.711772918701172

Token 1102: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015884554013609886
    2. ' return' → logprob: -5.1408843994140625
    3. 'return' → logprob: -5.2658843994140625
    4. '
' → logprob: -5.7658843994140625
    5. 'def' → logprob: -7.6408843994140625
    6. '<|end|>' → logprob: -8.015884399414062
    7. ',' → logprob: -8.265884399414062
    8. ' ' → logprob: -8.515884399414062
    9. '  ' → logprob: -9.265884399414062
    10. '	return' → logprob: -10.015884399414062

Token 1103: ' tous' (ID: 10688)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.006453523878008127
    2. 'tout' → logprob: -5.506453514099121
    3. 'cha' → logprob: -6.381453514099121
    4. 'all' → logprob: -8.006453514099121
    5. ' tous' → logprob: -8.506453514099121
    6. 'ch' → logprob: -9.631453514099121
    7. ' chaque' → logprob: -10.756453514099121
    8. '#' → logprob: -10.881453514099121
    9. 'tour' → logprob: -12.131453514099121
    10. 'to' → logprob: -12.131453514099121

Token 1104: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.13085684180259705
    2. ' les' → logprob: -2.13085675239563
    3. 'le' → logprob: -5.880856990814209
    4. ' le' → logprob: -8.38085651397705
    5. 's' → logprob: -8.63085651397705
    6. '#' → logprob: -8.75585651397705
    7. 'es' → logprob: -9.00585651397705
    8. 'eles' → logprob: -9.00585651397705
    9. '_' → logprob: -9.63085651397705
    10. 'vertices' → logprob: -10.38085651397705

Token 1105: ' somm' (ID: 44830)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.04068700224161148
    2. 's' → logprob: -3.790687084197998
    3. ' sommet' → logprob: -4.290687084197998
    4. ' somm' → logprob: -6.415687084197998
    5. 'vertices' → logprob: -6.915687084197998
    6. 'aut' → logprob: -8.16568660736084
    7. 'points' → logprob: -8.29068660736084
    8. 'summ' → logprob: -9.29068660736084
    9. 'no' → logprob: -9.91568660736084
    10. 'vertex' → logprob: -9.91568660736084

Token 1106: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0003034074034076184
    2. 'et' → logprob: -8.125303268432617
    3. 'ents' → logprob: -12.875303268432617
    4. 'es' → logprob: -12.875303268432617
    5. '#' → logprob: -13.375303268432617
    6. 'êts' → logprob: -15.750303268432617
    7. 'ètres' → logprob: -15.875303268432617
    8. 'è' → logprob: -16.375303268432617
    9. 'ètes' → logprob: -16.375303268432617
    10. 'és' → logprob: -17.000303268432617

Token 1107: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04985169321298599
    2. 'return' → logprob: -3.674851655960083
    3. ' return' → logprob: -3.924851655960083
    4. '
' → logprob: -6.549851894378662
    5. 'd' → logprob: -6.924851894378662
    6. '.' → logprob: -7.924851894378662
    7. 'def' → logprob: -8.674851417541504
    8. '	return' → logprob: -9.174851417541504
    9. ' d' → logprob: -9.174851417541504
    10. '    
' → logprob: -9.299851417541504

Token 1108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07152404636144638
    2. 'return' → logprob: -2.821524143218994
    3. ' return' → logprob: -4.821524143218994
    4. '
' → logprob: -7.071524143218994
    5. 'def' → logprob: -7.821524143218994
    6. '```' → logprob: -9.071523666381836
    7. '    
' → logprob: -9.946523666381836
    8. '	return' → logprob: -11.071523666381836
    9. '  ' → logprob: -11.571523666381836
    10. '  
' → logprob: -12.071523666381836

Token 1109: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0001238004770129919
    2. '   ' → logprob: -9.250123977661133
    3. ' return' → logprob: -10.500123977661133
    4. '	return' → logprob: -15.750123977661133
    5. '
' → logprob: -21.000123977661133
    6. ':return' → logprob: -21.125123977661133
    7. '  ' → logprob: -21.625123977661133
    8. 'eturn' → logprob: -21.750123977661133
    9. ' ' → logprob: -22.125123977661133
    10. '```' → logprob: -22.250123977661133

Token 1110: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0040785204619169235
    2. ' d' → logprob: -5.504078388214111
    3. '   ' → logprob: -16.254077911376953
    4. '	d' → logprob: -18.254077911376953
    5. '[d' → logprob: -20.629077911376953
    6. ' ' → logprob: -21.004077911376953
    7. '  ' → logprob: -21.629077911376953
    8. '_d' → logprob: -21.879077911376953
    9. '
' → logprob: -21.879077911376953
    10. '(d' → logprob: -22.004077911376953

Token 1111: '

' (ID: 279)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.43710190057754517
    2. '#' → logprob: -1.8121018409729004
    3. 'def' → logprob: -1.8121018409729004
    4. 'if' → logprob: -4.3121018409729
    5. '
' → logprob: -4.4371018409729
    6. '(n' → logprob: -6.6871018409729
    7. '

' → logprob: -8.437102317810059
    8. '  
' → logprob: -8.687102317810059
    9. ' 
' → logprob: -8.937102317810059
    10. '```' → logprob: -9.312102317810059

Token 1112: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12396735697984695
    2. '
' → logprob: -2.623967409133911
    3. '#' → logprob: -3.373967409133911
    4. 'def' → logprob: -5.498967170715332
    5. '```' → logprob: -5.998967170715332
    6. '<|end|>' → logprob: -6.123967170715332
    7. '

' → logprob: -8.498967170715332
    8. 'if' → logprob: -8.623967170715332
    9. '(n' → logprob: -8.623967170715332
    10. '\n' → logprob: -8.998967170715332

Token 1113: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7071972489356995
    2. 'def' → logprob: -0.7071972489356995
    3. 'if' → logprob: -4.457197189331055
    4. '#' → logprob: -6.082197189331055
    5. 'I' → logprob: -9.832197189331055
    6. '
' → logprob: -12.332197189331055
    7. 'ndef' → logprob: -12.707197189331055
    8. '```' → logprob: -12.957197189331055
    9. ' n' → logprob: -13.332197189331055
    10. 't' → logprob: -13.707197189331055

Token 1114: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.026922140270471573
    2. '()
' → logprob: -4.276922225952148
    3. 'n' → logprob: -4.526922225952148
    4. '=' → logprob: -6.401922225952148
    5. ' =' → logprob: -8.901922225952148
    6. ':' → logprob: -10.776922225952148
    7. '():' → logprob: -11.276922225952148
    8. '()

' → logprob: -11.776922225952148
    9. '#' → logprob: -12.151922225952148
    10. '()\' → logprob: -12.651922225952148

Token 1115: ' ent' (ID: 1121)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006903939065523446
    2. '()' → logprob: -7.625690460205078
    3. ' n' → logprob: -9.500690460205078
    4. '(n' → logprob: -9.875690460205078
    5. '#' → logprob: -10.000690460205078
    6. 'def' → logprob: -11.250690460205078
    7. '_n' → logprob: -13.125690460205078
    8. 't' → logprob: -13.375690460205078
    9. 'input' → logprob: -13.500690460205078
    10. '=' → logprob: -13.625690460205078

Token 1116: 'iers' (ID: 11012)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9749635457992554
    2. 'n' → logprob: -1.4749635457992554
    3. 'iers' → logprob: -1.8499635457992554
    4. '=' → logprob: -2.474963665008545
    5. 'ières' → logprob: -3.349963665008545
    6. '=n' → logprob: -3.599963665008545
    7. 's' → logprob: -3.849963665008545
    8. 'rees' → logprob: -4.349963665008545
    9. 'ries' → logprob: -4.849963665008545
    10. 'rée' → logprob: -4.974963665008545

Token 1117: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.41853606700897217
    2. '()' → logprob: -1.2935360670089722
    3. '=' → logprob: -2.7935361862182617
    4. ' =' → logprob: -5.668536186218262
    5. '()
' → logprob: -6.168536186218262
    6. '(n' → logprob: -8.293536186218262
    7. '=n' → logprob: -9.043536186218262
    8. 'a' → logprob: -9.418536186218262
    9. 'N' → logprob: -9.543536186218262
    10. '(' → logprob: -9.543536186218262

Token 1118: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6809060573577881
    2. '=' → logprob: -1.055906057357788
    3. ' =' → logprob: -1.930906057357788
    4. ',n' → logprob: -7.930906295776367
    5. '()' → logprob: -7.930906295776367
    6. '   ' → logprob: -9.805906295776367
    7. ',m' → logprob: -10.055906295776367
    8. '(),' → logprob: -10.555906295776367
    9. ',s' → logprob: -11.180906295776367
    10. ',q' → logprob: -11.180906295776367

Token 1119: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0040939548052847385
    2. ' m' → logprob: -5.504094123840332
    3. 'k' → logprob: -11.254094123840332
    4. 'q' → logprob: -13.004094123840332
    5. ' k' → logprob: -16.004093170166016
    6. '
' → logprob: -17.004093170166016
    7. ' q' → logprob: -17.004093170166016
    8. ',m' → logprob: -17.129093170166016
    9. 'x' → logprob: -17.754093170166016
    10. ' ' → logprob: -17.754093170166016

Token 1120: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.623185396194458
    2. ' =' → logprob: -0.873185396194458
    3. 'n' → logprob: -3.623185396194458
    4. '=n' → logprob: -3.998185396194458
    5. '(n' → logprob: -7.123185157775879
    6. ',n' → logprob: -9.498185157775879
    7. '=
' → logprob: -9.623185157775879
    8. '()
' → logprob: -9.998185157775879
    9. '()' → logprob: -10.248185157775879
    10. ',' → logprob: -10.998185157775879

Token 1121: ' partir' (ID: 12100)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09665568917989731
    2. '()' → logprob: -2.7216556072235107
    3. 'LI' → logprob: -3.9716556072235107
    4. ' =' → logprob: -5.47165584564209
    5. 'I' → logprob: -6.34665584564209
    6. 'L' → logprob: -6.84665584564209
    7. 'li' → logprob: -8.72165584564209
    8. 'l' → logprob: -8.84665584564209
    9. 'input' → logprob: -9.97165584564209
    10. '()
' → logprob: -10.84665584564209

Token 1122: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005124292336404324
    2. '()
' → logprob: -5.630124092102051
    3. '=' → logprob: -6.880124092102051
    4. 'sys' → logprob: -8.75512409210205
    5. '=sys' → logprob: -9.13012409210205
    6. ' =' → logprob: -9.50512409210205
    7. '()

' → logprob: -10.50512409210205
    8. 'n' → logprob: -10.63012409210205
    9. 'de' → logprob: -11.00512409210205
    10. 'l' → logprob: -11.13012409210205

Token 1123: ' l' (ID: 305)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.010022853501141071
    2. 'I' → logprob: -5.1350226402282715
    3. 'sys' → logprob: -5.8850226402282715
    4. '()' → logprob: -7.1350226402282715
    5. ' LI' → logprob: -9.26002311706543
    6. 'li' → logprob: -9.38502311706543
    7. 'L' → logprob: -9.51002311706543
    8. '```' → logprob: -10.01002311706543
    9. 'input' → logprob: -10.51002311706543
    10. 'IL' → logprob: -10.51002311706543

Token 1124: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.267533540725708
    2. 'stdin' → logprob: -1.892533540725708
    3. 'sys' → logprob: -2.767533540725708
    4. 'ine' → logprob: -4.017533302307129
    5. '=sys' → logprob: -6.642533302307129
    6. 'I' → logprob: -7.142533302307129
    7. 'in' → logprob: -8.392533302307129
    8. '=' → logprob: -9.142533302307129
    9. 'n' → logprob: -9.392533302307129
    10. 'i' → logprob: -9.392533302307129

Token 1125: ' standard' (ID: 7024)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07027240097522736
    2. ' =' → logprob: -2.945272445678711
    3. '()' → logprob: -4.570272445678711
    4. '()
' → logprob: -5.570272445678711
    5. 'n' → logprob: -7.820272445678711
    6. '=n' → logprob: -7.820272445678711
    7. 'def' → logprob: -8.695272445678711
    8. 's' → logprob: -9.695272445678711
    9. '=
' → logprob: -10.445272445678711
    10. '=[]
' → logprob: -11.570272445678711

Token 1126: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0013607130385935307
    2. '
' → logprob: -7.376360893249512
    3. '(n' → logprob: -7.751360893249512
    4. ' =' → logprob: -9.376360893249512
    5. '()
' → logprob: -9.376360893249512
    6. 'def' → logprob: -9.376360893249512
    7. '=' → logprob: -10.751360893249512
    8. '=n' → logprob: -11.876360893249512
    9. '```' → logprob: -12.001360893249512
    10. ' n' → logprob: -12.126360893249512

Token 1127: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4855663721391466e-05
    2. '
' → logprob: -11.500015258789062
    3. '(n' → logprob: -12.500015258789062
    4. 'def' → logprob: -14.250015258789062
    5. ' n' → logprob: -15.000015258789062
    6. '[n' → logprob: -18.250015258789062
    7. '```' → logprob: -18.375015258789062
    8. '

' → logprob: -18.750015258789062
    9. '_n' → logprob: -19.625015258789062
    10. '\n' → logprob: -20.500015258789062

Token 1128: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3856492842023727e-06
    2. '(n' → logprob: -13.750000953674316
    3. '
' → logprob: -15.750000953674316
    4. ' n' → logprob: -16.000001907348633
    5. 'def' → logprob: -16.500001907348633
    6. '[n' → logprob: -17.875001907348633
    7. '_n' → logprob: -20.000001907348633
    8. '	n' → logprob: -21.125001907348633
    9. '```' → logprob: -21.125001907348633
    10. '\n' → logprob: -21.750001907348633

Token 1129: ' représente' (ID: 88912)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14478886127471924
    2. ',m' → logprob: -2.0197887420654297
    3. ',n' → logprob: -6.76978874206543
    4. '=' → logprob: -7.14478874206543
    5. ' =' → logprob: -9.26978874206543
    6. 'm' → logprob: -10.64478874206543
    7. ' ,' → logprob: -10.76978874206543
    8. ',s' → logprob: -12.01978874206543
    9. 'n' → logprob: -12.39478874206543
    10. ',v' → logprob: -12.51978874206543

Token 1130: ' le' (ID: 505)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.15817470848560333
    2. 'n' → logprob: -2.658174753189087
    3. ' LI' → logprob: -3.783174753189087
    4. 'I' → logprob: -3.783174753189087
    5. ' n' → logprob: -4.283174514770508
    6. '=' → logprob: -5.158174514770508
    7. ',' → logprob: -5.658174514770508
    8. 'list' → logprob: -6.283174514770508
    9. 'li' → logprob: -6.533174514770508
    10. 'map' → logprob: -6.908174514770508

Token 1131: ' nombre' (ID: 9733)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -1.0989108085632324
    2. 'LI' → logprob: -1.0989108085632324
    3. ',' → logprob: -1.8489108085632324
    4. 'n' → logprob: -2.5989108085632324
    5. '=' → logprob: -2.9739108085632324
    6. ',n' → logprob: -3.3489108085632324
    7. ',I' → logprob: -5.473910808563232
    8. ' =' → logprob: -6.223910808563232
    9. ' LI' → logprob: -6.348910808563232
    10. ',L' → logprob: -6.473910808563232

Token 1132: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6979997158050537
    2. ',' → logprob: -0.8229997158050537
    3. ' =' → logprob: -2.8229997158050537
    4. 'n' → logprob: -6.072999954223633
    5. ',n' → logprob: -7.697999954223633
    6. '(n' → logprob: -7.947999954223633
    7. ' n' → logprob: -8.197999954223633
    8. ' ,' → logprob: -9.572999954223633
    9. ',m' → logprob: -9.697999954223633
    10. ',
' → logprob: -9.697999954223633

Token 1133: ' somm' (ID: 44830)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.22243425250053406
    2. 'nodes' → logprob: -2.7224342823028564
    3. ' vertices' → logprob: -3.3474342823028564
    4. '()' → logprob: -3.5974342823028564
    5. 'graph' → logprob: -3.9724342823028564
    6. 'LI' → logprob: -4.222434043884277
    7. 's' → logprob: -5.097434043884277
    8. 'I' → logprob: -5.222434043884277
    9. 'n' → logprob: -5.347434043884277
    10. ' LI' → logprob: -5.597434043884277

Token 1134: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.05394919216632843
    2. 'its' → logprob: -4.678949356079102
    3. 'et' → logprob: -4.803949356079102
    4. 'aux' → logprob: -5.178949356079102
    5. 'ites' → logprob: -5.428949356079102
    6. 'eurs' → logprob: -5.678949356079102
    7. 'ents' → logprob: -5.803949356079102
    8. 'it' → logprob: -6.053949356079102
    9. 'oints' → logprob: -6.053949356079102
    10. 'e' → logprob: -6.428949356079102

Token 1135: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12559707462787628
    2. '=' → logprob: -2.6255970001220703
    3. ',n' → logprob: -3.2505970001220703
    4. ',m' → logprob: -5.50059700012207
    5. ' =' → logprob: -6.25059700012207
    6. 'n' → logprob: -7.50059700012207
    7. '(n' → logprob: -9.00059700012207
    8. '=n' → logprob: -9.50059700012207
    9. '(),' → logprob: -10.00059700012207
    10. '   ' → logprob: -10.75059700012207

Token 1136: 'ou' (ID: 283)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5902910232543945
    2. 'm' → logprob: -0.9652910232543945
    3. ',m' → logprob: -2.9652910232543945
    4. 'n' → logprob: -5.0902910232543945
    5. '
' → logprob: -5.7152910232543945
    6. '),' → logprob: -6.4652910232543945
    7. ',n' → logprob: -7.0902910232543945
    8. ')' → logprob: -7.2152910232543945
    9. ' ,' → logprob: -7.7152910232543945
    10. ' m' → logprob: -9.090291023254395

Token 1137: ' noe' (ID: 49921)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.007621064782142639
    2. ' m' → logprob: -4.8826212882995605
    3. '(m' → logprob: -12.882620811462402
    4. ',m' → logprob: -12.882620811462402
    5. ')' → logprob: -13.007620811462402
    6. 'n' → logprob: -13.007620811462402
    7. ')m' → logprob: -13.632620811462402
    8. '```' → logprob: -14.257620811462402
    9. ',' → logprob: -14.632620811462402
    10. ' LI' → logprob: -14.882620811462402

Token 1138: 'uds' (ID: 44387)
  Prédit: 'uds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uds' → logprob: -0.02595723606646061
    2. 'e' → logprob: -4.650957107543945
    3. 'odes' → logprob: -5.400957107543945
    4. 'ods' → logprob: -5.775957107543945
    5. 'ds' → logprob: -6.150957107543945
    6. 'ud' → logprob: -6.150957107543945
    7. 'urs' → logprob: -7.150957107543945
    8. 'nds' → logprob: -7.400957107543945
    9. 'œ' → logprob: -8.025957107543945
    10. 'x' → logprob: -8.025957107543945

Token 1139: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0160470362752676
    2. ',m' → logprob: -4.76604700088501
    3. ',n' → logprob: -5.01604700088501
    4. 'n' → logprob: -7.89104700088501
    5. ',
' → logprob: -8.641047477722168
    6. ' ,' → logprob: -10.016047477722168
    7. 'et' → logprob: -10.016047477722168
    8. '),' → logprob: -10.141047477722168
    9. 'm' → logprob: -10.766047477722168
    10. ')' → logprob: -10.891047477722168

Token 1140: ' m' (ID: 284)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007712708320468664
    2. 'm' → logprob: -7.2507710456848145
    3. ' n' → logprob: -9.750771522521973
    4. '
' → logprob: -12.750771522521973
    5. 'def' → logprob: -17.625770568847656
    6. '#' → logprob: -17.625770568847656
    7. '   ' → logprob: -17.750770568847656
    8. '(n' → logprob: -17.875770568847656
    9. ' m' → logprob: -18.125770568847656
    10. ' 
' → logprob: -18.500770568847656

Token 1141: ' le' (ID: 505)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32391566038131714
    2. '=' → logprob: -1.448915719985962
    3. ',' → logprob: -3.198915719985962
    4. ',n' → logprob: -7.073915481567383
    5. '=n' → logprob: -9.448915481567383
    6. 'n' → logprob: -9.823915481567383
    7. 's' → logprob: -10.573915481567383
    8. ',m' → logprob: -11.448915481567383
    9. '=sys' → logprob: -11.573915481567383
    10. '=input' → logprob: -12.323915481567383

Token 1142: ' nombre' (ID: 9733)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15492482483386993
    2. ' =' → logprob: -2.1549248695373535
    3. '=int' → logprob: -4.6549248695373535
    4. 'm' → logprob: -4.7799248695373535
    5. 'n' → logprob: -5.4049248695373535
    6. '=
' → logprob: -6.9049248695373535
    7. '
' → logprob: -7.6549248695373535
    8. '#' → logprob: -7.6549248695373535
    9. '=sys' → logprob: -7.6549248695373535
    10. ')' → logprob: -8.029924392700195

Token 1143: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03892417997121811
    2. ' =' → logprob: -3.788924217224121
    3. 's' → logprob: -4.288924217224121
    4. '(s' → logprob: -7.413924217224121
    5. ',' → logprob: -7.913924217224121
    6. '()' → logprob: -8.288924217224121
    7. '(n' → logprob: -8.663924217224121
    8. '=
' → logprob: -9.413924217224121
    9. 'def' → logprob: -9.413924217224121
    10. '(' → logprob: -9.913924217224121

Token 1144: ''ar' (ID: 54307)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -1.2412294149398804
    2. '=' → logprob: -1.3662294149398804
    3. 'edges' → logprob: -2.49122953414917
    4. 'odes' → logprob: -2.61622953414917
    5. '=sys' → logprob: -2.61622953414917
    6. ' =' → logprob: -3.11622953414917
    7. ' LI' → logprob: -3.24122953414917
    8. 'I' → logprob: -3.99122953414917
    9. '_edges' → logprob: -4.11622953414917
    10. 's' → logprob: -4.24122953414917

Token 1145: 'êtes' (ID: 23720)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.14587712287902832
    2. 'e' → logprob: -3.0208771228790283
    3. 'etes' → logprob: -3.2708771228790283
    4. 'êtes' → logprob: -3.3958771228790283
    5. 'r' → logprob: -5.270876884460449
    6. 'gs' → logprob: -5.770876884460449
    7. 'es' → logprob: -6.145876884460449
    8. 'g' → logprob: -6.520876884460449
    9. 'tes' → logprob: -7.145876884460449
    10. 'c' → logprob: -7.645876884460449

Token 1146: ' supplémentaires' (ID: 99346)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.034770287573337555
    2. ' =' → logprob: -3.4097702503204346
    3. '=n' → logprob: -7.159770488739014
    4. 'n' → logprob: -8.409770011901855
    5. '()' → logprob: -10.409770011901855
    6. '()
' → logprob: -10.409770011901855
    7. '(n' → logprob: -10.909770011901855
    8. '
' → logprob: -11.409770011901855
    9. ',n' → logprob: -11.659770011901855
    10. '=
' → logprob: -11.784770011901855

Token 1147: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04886598885059357
    2. ' =' → logprob: -3.423866033554077
    3. 'n' → logprob: -4.923865795135498
    4. '=n' → logprob: -4.923865795135498
    5. '(n' → logprob: -8.173866271972656
    6. ',n' → logprob: -8.923866271972656
    7. ',' → logprob: -9.673866271972656
    8. '
' → logprob: -10.048866271972656
    9. '=
' → logprob: -10.923866271972656
    10. '=sys' → logprob: -12.173866271972656

Token 1148: ' lire' (ID: 46082)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.9032657146453857
    2. 'LI' → logprob: -1.0282657146453857
    3. '=' → logprob: -2.4032657146453857
    4. 'n' → logprob: -2.7782657146453857
    5. 'input' → logprob: -3.4032657146453857
    6. 's' → logprob: -4.278265953063965
    7. 'm' → logprob: -4.778265953063965
    8. 'sys' → logprob: -4.778265953063965
    9. 'read' → logprob: -5.653265953063965
    10. 'map' → logprob: -5.778265953063965

Token 1149: ' ensuite' (ID: 39713)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27975666522979736
    2. ' =' → logprob: -1.6547566652297974
    3. '=n' → logprob: -3.654756546020508
    4. 'n' → logprob: -3.779756546020508
    5. '(n' → logprob: -6.029756546020508
    6. '
' → logprob: -7.029756546020508
    7. ',n' → logprob: -7.654756546020508
    8. ',' → logprob: -8.779756546020508
    9. '=
' → logprob: -9.279756546020508
    10. '()
' → logprob: -9.529756546020508

Token 1150: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8303167819976807
    2. '=' → logprob: -1.3303167819976807
    3. 'n' → logprob: -1.3303167819976807
    4. '=n' → logprob: -3.7053167819976807
    5. '
' → logprob: -4.580316543579102
    6. '(n' → logprob: -8.330316543579102
    7. ',n' → logprob: -9.330316543579102
    8. ' n' → logprob: -10.080316543579102
    9. 'def' → logprob: -10.580316543579102
    10. ',' → logprob: -10.705316543579102

Token 1151: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011129142512800172
    2. '(n' → logprob: -9.75011157989502
    3. '
' → logprob: -10.12511157989502
    4. ' n' → logprob: -11.75011157989502
    5. 'def' → logprob: -12.50011157989502
    6. '=n' → logprob: -15.12511157989502
    7. '```' → logprob: -15.37511157989502
    8. '[n' → logprob: -15.37511157989502
    9. ' =' → logprob: -16.000110626220703
    10. '_n' → logprob: -16.250110626220703

Token 1152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04865754023194313
    2. ',m' → logprob: -3.0486576557159424
    3. ',n' → logprob: -10.173657417297363
    4. '=' → logprob: -10.548657417297363
    5. 'm' → logprob: -12.298657417297363
    6. ' ,' → logprob: -14.048657417297363
    7. ',
' → logprob: -15.548657417297363
    8. '=m' → logprob: -16.79865837097168
    9. ' =' → logprob: -17.04865837097168
    10. ',M' → logprob: -17.67365837097168

Token 1153: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0004306692280806601
    2. ' m' → logprob: -7.750430583953857
    3. '=' → logprob: -17.125431060791016
    4. 'k' → logprob: -18.125431060791016
    5. ' =' → logprob: -19.625431060791016
    6. ' ' → logprob: -20.000431060791016
    7. 'n' → logprob: -20.125431060791016
    8. 'M' → logprob: -20.625431060791016
    9. 'q' → logprob: -20.875431060791016
    10. '
' → logprob: -21.625431060791016

Token 1154: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018151935189962387
    2. ' =' → logprob: -4.018151760101318
    3. '=input' → logprob: -13.268152236938477
    4. '=int' → logprob: -16.393152236938477
    5. '＝' → logprob: -16.393152236938477
    6. '=sys' → logprob: -16.893152236938477
    7. ')=' → logprob: -17.143152236938477
    8. '=n' → logprob: -17.143152236938477
    9. ',' → logprob: -17.143152236938477
    10. '=list' → logprob: -18.018152236938477

Token 1155: ' LI' (ID: 14875)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.32061657309532166
    2. 'LI' → logprob: -1.320616602897644
    3. 'I' → logprob: -4.945616722106934
    4. ' map' → logprob: -9.070616722106934
    5. 'list' → logprob: -10.070616722106934
    6. ' LI' → logprob: -10.820616722106934
    7. 'L' → logprob: -11.695616722106934
    8. 'li' → logprob: -11.945616722106934
    9. 'MAP' → logprob: -12.570616722106934
    10. '[I' → logprob: -12.570616722106934

Token 1156: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5207127928733826
    2. 'graph' → logprob: -1.0207128524780273
    3. '#' → logprob: -3.7707128524780273
    4. 'g' → logprob: -3.8957128524780273
    5. '
' → logprob: -6.895712852478027
    6. 'G' → logprob: -7.895712852478027
    7. '

' → logprob: -7.895712852478027
    8. ' graph' → logprob: -8.895712852478027
    9. ' 
' → logprob: -9.645712852478027
    10. '  
' → logprob: -10.020712852478027

Token 1157: '#' (ID: 2)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.09043911844491959
    2. '#' → logprob: -2.7154390811920166
    3. 'g' → logprob: -4.465439319610596
    4. 'G' → logprob: -5.465439319610596
    5. 'edges' → logprob: -6.340439319610596
    6. '
' → logprob: -6.465439319610596
    7. 'abc' → logprob: -8.840438842773438
    8. 'Graph' → logprob: -9.215438842773438
    9. 'road' → logprob: -9.340438842773438
    10. 'gr' → logprob: -9.465438842773438

Token 1158: ' Initial' (ID: 9209)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0027954913675785065
    2. '#' → logprob: -6.877795696258545
    3. 'g' → logprob: -6.877795696258545
    4. 'G' → logprob: -7.752795696258545
    5. 'edges' → logprob: -8.377795219421387
    6. 'gr' → logprob: -11.002795219421387
    7. 'Graph' → logprob: -11.502795219421387
    8. 'adj' → logprob: -11.752795219421387
    9. 'base' → logprob: -12.627795219421387
    10. '
' → logprob: -12.752795219421387

Token 1159: 'isation' (ID: 6993)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.8745405077934265
    2. 'graph' → logprob: -0.9995405077934265
    3. 'ze' → logprob: -2.2495405673980713
    4. 'isation' → logprob: -2.9995405673980713
    5. '#' → logprob: -3.4995405673980713
    6. 'ization' → logprob: -4.749540328979492
    7. 'ise' → logprob: -5.374540328979492
    8. 'e' → logprob: -5.749540328979492
    9. 'iser' → logprob: -6.374540328979492
    10. '=' → logprob: -6.374540328979492

Token 1160: ' d' (ID: 272)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.00029160623671486974
    2. ' graph' → logprob: -9.25029182434082
    3. '(graph' → logprob: -9.50029182434082
    4. '#' → logprob: -10.37529182434082
    5. '=' → logprob: -10.50029182434082
    6. '_graph' → logprob: -10.75029182434082
    7. ' =' → logprob: -10.87529182434082
    8. '(
' → logprob: -11.50029182434082
    9. '
' → logprob: -12.00029182434082
    10. '=
' → logprob: -13.12529182434082

Token 1161: ''une' (ID: 13337)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.26498228311538696
    2. '[' → logprob: -1.5149822235107422
    3. ' [[]' → logprob: -4.639982223510742
    4. ' graph' → logprob: -6.389982223510742
    5. '[]' → logprob: -7.014982223510742
    6. 'raph' → logprob: -9.139982223510742
    7. '#' → logprob: -9.514982223510742
    8. '[
' → logprob: -9.639982223510742
    9. 'g' → logprob: -10.014982223510742
    10. '[[' → logprob: -10.139982223510742

Token 1162: ' liste' (ID: 31719)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0003233070601709187
    2. 'default' → logprob: -8.375323295593262
    3. ' graph' → logprob: -10.375323295593262
    4. 'list' → logprob: -10.750323295593262
    5. 'gr' → logprob: -10.875323295593262
    6. '=' → logprob: -12.250323295593262
    7. 'g' → logprob: -12.250323295593262
    8. '[' → logprob: -12.625323295593262
    9. 'adj' → logprob: -13.000323295593262
    10. '
' → logprob: -13.500323295593262

Token 1163: ' appelée' (ID: 179130)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.14770838618278503
    2. ' =' → logprob: -2.5227084159851074
    3. '=' → logprob: -3.7727084159851074
    4. '(graph' → logprob: -4.522708415985107
    5. '_graph' → logprob: -4.522708415985107
    6. 'adj' → logprob: -5.397708415985107
    7. '[' → logprob: -6.522708415985107
    8. ' graph' → logprob: -6.772708415985107
    9. '#' → logprob: -7.022708415985107
    10. 'de' → logprob: -7.022708415985107

Token 1164: ' edges' (ID: 22569)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -2.45848218582978e-06
    2. ' graph' → logprob: -13.50000286102295
    3. 'adj' → logprob: -14.50000286102295
    4. '[' → logprob: -15.62500286102295
    5. '[]' → logprob: -16.000001907348633
    6. 'g' → logprob: -16.250001907348633
    7. 'Graph' → logprob: -17.125001907348633
    8. 'gr' → logprob: -17.250001907348633
    9. '```' → logprob: -17.250001907348633
    10. '	graph' → logprob: -17.750001907348633

Token 1165: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31407299637794495
    2. '=' → logprob: -1.3140729665756226
    3. 'edges' → logprob: -7.564073085784912
    4. '=[' → logprob: -9.564072608947754
    5. '_edges' → logprob: -9.689072608947754
    6. '(n' → logprob: -9.814072608947754
    7. '[n' → logprob: -10.814072608947754
    8. 'n' → logprob: -10.939072608947754
    9. '(edges' → logprob: -11.064072608947754
    10. ' edges' → logprob: -11.564072608947754

Token 1166: ' composée' (ID: 146865)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.38059866428375244
    2. '[]' → logprob: -1.3805986642837524
    3. '[' → logprob: -2.880598545074463
    4. ' [[]' → logprob: -5.130598545074463
    5. ' edges' → logprob: -6.505598545074463
    6. '[]
' → logprob: -6.755598545074463
    7. '[:]' → logprob: -8.255599021911621
    8. '=' → logprob: -9.880599021911621
    9. '[][]' → logprob: -10.255599021911621
    10. 'default' → logprob: -10.505599021911621

Token 1167: ' de' (ID: 334)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.4637383818626404
    2. '[' → logprob: -1.5887384414672852
    3. '[]' → logprob: -2.713738441467285
    4. 'n' → logprob: -2.713738441467285
    5. ' [[]' → logprob: -4.213738441467285
    6. ' =' → logprob: -5.088738441467285
    7. '=' → logprob: -5.338738441467285
    8. '[]
' → logprob: -5.963738441467285
    9. '=[' → logprob: -6.338738441467285
    10. '[
' → logprob: -6.713738441467285

Token 1168: ' n' (ID: 297)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.10638667643070221
    2. '[]' → logprob: -2.856386661529541
    3. '[' → logprob: -3.356386661529541
    4. 'n' → logprob: -5.356386661529541
    5. ' [[]' → logprob: -5.856386661529541
    6. 'default' → logprob: -7.231386661529541
    7. '[]
' → logprob: -8.8563871383667
    8. '[(' → logprob: -9.6063871383667
    9. '[[' → logprob: -10.3563871383667
    10. '(n' → logprob: -11.6063871383667

Token 1169: ' sous' (ID: 14487)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.008165115490555763
    2. 'empty' → logprob: -5.758164882659912
    3. '[]
' → logprob: -6.258164882659912
    4. '[' → logprob: -6.258164882659912
    5. ' []' → logprob: -8.25816535949707
    6. '=[]' → logprob: -8.25816535949707
    7. '+' → logprob: -8.50816535949707
    8. ' empty' → logprob: -8.88316535949707
    9. '=' → logprob: -9.88316535949707
    10. '   ' → logprob: -10.38316535949707

Token 1170: '-list' (ID: 18463)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0025354712270200253
    2. 'lists' → logprob: -6.252535343170166
    3. 'list' → logprob: -7.877535343170166
    4. '[' → logprob: -9.127535820007324
    5. '[]
' → logprob: -9.377535820007324
    6. '([]' → logprob: -11.252535820007324
    7. '=[]' → logprob: -11.752535820007324
    8. 'listas' → logprob: -13.127535820007324
    9. ' []' → logprob: -13.377535820007324
    10. 'liste' → logprob: -13.752535820007324

Token 1171: 'es' (ID: 268)
  Prédit: 'istes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istes' → logprob: -0.536643385887146
    2. 'es' → logprob: -1.161643385887146
    3. 'ists' → logprob: -2.5366435050964355
    4. 'tes' → logprob: -4.5366435050964355
    5. '[]' → logprob: -5.9116435050964355
    6. 's' → logprob: -5.9116435050964355
    7. 'ist' → logprob: -5.9116435050964355
    8. 'stes' → logprob: -6.9116435050964355
    9. '[' → logprob: -7.1616435050964355
    10. '=[]' → logprob: -7.2866435050964355

Token 1172: ' v' (ID: 323)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46448513865470886
    2. ' =' → logprob: -1.3394851684570312
    3. '=[]' → logprob: -2.8394851684570312
    4. '=[]
' → logprob: -4.089485168457031
    5. '()' → logprob: -4.714485168457031
    6. 'for' → logprob: -5.089485168457031
    7. '[]' → logprob: -5.214485168457031
    8. '([]' → logprob: -5.464485168457031
    9. '=[' → logprob: -5.964485168457031
    10. '(' → logprob: -6.464485168457031

Token 1173: 'ides' (ID: 4105)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.2863500416278839
    2. 'ides' → logprob: -1.7863500118255615
    3. 'id' → logprob: -3.1613500118255615
    4. 'al' → logprob: -4.036350250244141
    5. 'idé' → logprob: -4.911350250244141
    6. 'ideo' → logprob: -5.661350250244141
    7. 'ideos' → logprob: -6.036350250244141
    8. '[]' → logprob: -6.286350250244141
    9. '=[]' → logprob: -6.411350250244141
    10. '[' → logprob: -6.911350250244141

Token 1174: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22882841527462006
    2. 'for' → logprob: -2.3538284301757812
    3. 'edges' → logprob: -2.7288284301757812
    4. '[]' → logprob: -3.9788284301757812
    5. '(edges' → logprob: -4.728828430175781
    6. '=' → logprob: -4.978828430175781
    7. '()
' → logprob: -5.603828430175781
    8. ' =' → logprob: -5.853828430175781
    9. '_edges' → logprob: -6.728828430175781
    10. '=[]' → logprob: -7.353828430175781

Token 1175: '#' (ID: 2)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -2.8802491215174086e-05
    2. ' edges' → logprob: -10.500028610229492
    3. '[]
' → logprob: -14.875028610229492
    4. '_edges' → logprob: -15.250028610229492
    5. '[
' → logprob: -16.000028610229492
    6. 'graph' → logprob: -16.250028610229492
    7. ' =' → logprob: -16.375028610229492
    8. '=' → logprob: -16.500028610229492
    9. '[' → logprob: -16.500028610229492
    10. '(edges' → logprob: -16.625028610229492

Token 1176: ' Chaque' (ID: 94758)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -7.52919222577475e-05
    2. ' edges' → logprob: -9.500075340270996
    3. '[' → logprob: -16.00007438659668
    4. '[
' → logprob: -16.00007438659668
    5. '_edges' → logprob: -16.87507438659668
    6. '.edges' → logprob: -17.25007438659668
    7. 'edge' → logprob: -17.37507438659668
    8. 'graph' → logprob: -17.50007438659668
    9. '[]
' → logprob: -17.75007438659668
    10. '[]' → logprob: -17.87507438659668

Token 1177: ' sous' (ID: 14487)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7200068235397339
    2. '[]' → logprob: -1.0950068235397339
    3. 'sub' → logprob: -2.4700069427490234
    4. 'edges' → logprob: -3.3450069427490234
    5. '_edges' → logprob: -4.220006942749023
    6. ' edges' → logprob: -4.845006942749023
    7. 'edge' → logprob: -5.470006942749023
    8. ' sub' → logprob: -5.595006942749023
    9. ']' → logprob: -5.595006942749023
    10. 'elem' → logprob: -5.720006942749023

Token 1178: '-l' (ID: 2887)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.04764294624328613
    2. '[]
' → logprob: -4.297642707824707
    3. '=[]' → logprob: -4.422642707824707
    4. '=' → logprob: -4.922642707824707
    5. '=[]
' → logprob: -5.547642707824707
    6. '[' → logprob: -5.922642707824707
    7. '_edges' → logprob: -6.297642707824707
    8. ' =' → logprob: -6.547642707824707
    9. '[
' → logprob: -7.047642707824707
    10. '[]=' → logprob: -7.047642707824707

Token 1179: 'iste' (ID: 4872)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.89845871925354
    2. '=[]' → logprob: -1.52345871925354
    3. 'ide' → logprob: -1.89845871925354
    4. 'ideo' → logprob: -2.39845871925354
    5. 'al' → logprob: -3.64845871925354
    6. 'ale' → logprob: -3.89845871925354
    7. 'ides' → logprob: -4.023458480834961
    8. '[]' → logprob: -4.148458480834961
    9. 'liste' → logprob: -4.648458480834961
    10. 'ideos' → logprob: -4.898458480834961

Token 1180: ' edges' (ID: 22569)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0652039423584938
    2. ' =' → logprob: -2.815203905105591
    3. '=[]' → logprob: -6.31520414352417
    4. 'rep' → logprob: -7.19020414352417
    5. ' represents' → logprob: -8.190203666687012
    6. '=[]
' → logprob: -8.690203666687012
    7. ' représente' → logprob: -9.440203666687012
    8. 'represent' → logprob: -9.565203666687012
    9. '[]' → logprob: -10.940203666687012
    10. ' corresponds' → logprob: -11.690203666687012

Token 1181: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1438838243484497
    2. ' =' → logprob: -2.26888370513916
    3. '=[]' → logprob: -3.76888370513916
    4. '.append' → logprob: -5.51888370513916
    5. '=[]
' → logprob: -6.26888370513916
    6. '[]' → logprob: -7.39388370513916
    7. '[:]' → logprob: -7.39388370513916
    8. '[i' → logprob: -9.64388370513916
    9. '=[' → logprob: -9.89388370513916
    10. 'for' → logprob: -9.89388370513916

Token 1182: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04371844604611397
    2. ' =' → logprob: -3.2937183380126953
    3. '=[]' → logprob: -5.543718338012695
    4. ']' → logprob: -7.043718338012695
    5. ']=' → logprob: -7.293718338012695
    6. '=[]
' → logprob: -8.793718338012695
    7. '=
' → logprob: -11.043718338012695
    8. 'for' → logprob: -11.793718338012695
    9. '=[' → logprob: -12.668718338012695
    10. ' is' → logprob: -13.043718338012695

Token 1183: ' représent' (ID: 42664)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018568122759461403
    2. ' =' → logprob: -4.14356803894043
    3. '=[]' → logprob: -6.01856803894043
    4. '=[]
' → logprob: -9.89356803894043
    5. '=[' → logprob: -11.26856803894043
    6. '[]' → logprob: -12.14356803894043
    7. 'rep' → logprob: -12.26856803894043
    8. '.append' → logprob: -12.39356803894043
    9. ':' → logprob: -12.39356803894043
    10. ' représente' → logprob: -12.76856803894043

Token 1184: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6559011936187744
    2. 'ant' → logprob: -0.7809011936187744
    3. 'ent' → logprob: -4.280900955200195
    4. '#' → logprob: -5.405900955200195
    5. '[]' → logprob: -5.905900955200195
    6. '=' → logprob: -7.405900955200195
    7. 'er' → logprob: -7.905900955200195
    8. 'es' → logprob: -8.280900955200195
    9. 'ate' → logprob: -8.905900955200195
    10. ' =' → logprob: -9.155900955200195

Token 1185: ' la' (ID: 557)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0037971078418195248
    2. 'les' → logprob: -6.0037970542907715
    3. 'la' → logprob: -6.8787970542907715
    4. 'une' → logprob: -8.87879753112793
    5. ' []' → logprob: -9.62879753112793
    6. '=[]' → logprob: -10.87879753112793
    7. 'le' → logprob: -11.37879753112793
    8. '[]
' → logprob: -11.37879753112793
    9. 'un' → logprob: -11.62879753112793
    10. 'des' → logprob: -12.37879753112793

Token 1186: ' liste' (ID: 31719)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.005164616275578737
    2. 'neighbors' → logprob: -5.630164623260498
    3. '[]
' → logprob: -6.755164623260498
    4. '[i' → logprob: -8.38016414642334
    5. 'graph' → logprob: -9.63016414642334
    6. ' []' → logprob: -10.63016414642334
    7. ' neighbors' → logprob: -10.88016414642334
    8. ' adjacency' → logprob: -11.00516414642334
    9. 'adj' → logprob: -11.38016414642334
    10. 'edges' → logprob: -12.00516414642334

Token 1187: ' des' (ID: 731)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3204343616962433
    2. '=' → logprob: -2.070434331893921
    3. '_edges' → logprob: -3.695434331893921
    4. ' =' → logprob: -4.0704345703125
    5. '()' → logprob: -4.0704345703125
    6. 'of' → logprob: -4.0704345703125
    7. '[' → logprob: -4.3204345703125
    8. ' of' → logprob: -4.4454345703125
    9. '[i' → logprob: -4.5704345703125
    10. 'edges' → logprob: -4.5704345703125

Token 1188: ' voisins' (ID: 166720)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.09640780836343765
    2. 'neighbors' → logprob: -3.096407890319824
    3. ' voisins' → logprob: -4.096407890319824
    4. 'adj' → logprob: -4.221407890319824
    5. 'edges' → logprob: -4.721407890319824
    6. ' neighbors' → logprob: -6.596407890319824
    7. ' edges' → logprob: -6.846407890319824
    8. 'ar' → logprob: -7.096407890319824
    9. '()' → logprob: -7.596407890319824
    10. 'vo' → logprob: -7.596407890319824

Token 1189: ' directs' (ID: 104758)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5572958588600159
    2. 'adj' → logprob: -1.807295799255371
    3. ' de' → logprob: -2.557295799255371
    4. 'de' → logprob: -3.432295799255371
    5. 'i' → logprob: -3.432295799255371
    6. ' des' → logprob: -3.557295799255371
    7. ' i' → logprob: -3.807295799255371
    8. ' adj' → logprob: -4.307295799255371
    9. 'des' → logprob: -4.932295799255371
    10. '[]' → logprob: -5.182295799255371

Token 1190: ' atte' (ID: 43312)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4926898777484894
    2. 'de' → logprob: -1.617689847946167
    3. ' de' → logprob: -2.617689847946167
    4. 'i' → logprob: -3.617689847946167
    5. '[]' → logprob: -3.617689847946167
    6. 'adj' → logprob: -4.242690086364746
    7. 'edges' → logprob: -4.367690086364746
    8. ' i' → logprob: -4.992690086364746
    9. 'des' → logprob: -5.242690086364746
    10. '(i' → logprob: -5.492690086364746

Token 1191: 'ign' (ID: 733)
  Prédit: 'ign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ign' → logprob: -0.03541426733136177
    2. 'in' → logprob: -3.785414218902588
    3. 'ind' → logprob: -5.535414218902588
    4. 'ins' → logprob: -5.660414218902588
    5. 'n' → logprob: -6.285414218902588
    6. 'ints' → logprob: -7.035414218902588
    7. '[i' → logprob: -8.285414695739746
    8. 'ivable' → logprob: -8.285414695739746
    9. 'ç' → logprob: -8.910414695739746
    10. 'int' → logprob: -8.910414695739746

Token 1192: 'ables' (ID: 3232)
  Prédit: 'gn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gn' → logprob: -0.2652173340320587
    2. 'ign' → logprob: -2.0152173042297363
    3. 'n' → logprob: -2.8902173042297363
    4. 'g' → logprob: -3.5152173042297363
    5. 'nts' → logprob: -5.390217304229736
    6. 'nt' → logprob: -6.515217304229736
    7. 'ng' → logprob: -6.640217304229736
    8. 'ns' → logprob: -6.890217304229736
    9. 'ints' → logprob: -7.265217304229736
    10. 'nable' → logprob: -7.515217304229736

Token 1193: ' depuis' (ID: 16277)
  Prédit: 'dep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dep' → logprob: -0.32439175248146057
    2. 'from' → logprob: -2.5743918418884277
    3. 'de' → logprob: -2.6993918418884277
    4. '[i' → logprob: -3.3243918418884277
    5. 'par' → logprob: -3.4493918418884277
    6. '(edges' → logprob: -4.449391841888428
    7. 'edges' → logprob: -4.449391841888428
    8. '[]' → logprob: -4.699391841888428
    9. '(i' → logprob: -5.199391841888428
    10. ' depuis' → logprob: -5.449391841888428

Token 1194: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06676585972309113
    2. ' i' → logprob: -2.816765785217285
    3. ' edges' → logprob: -5.691765785217285
    4. 'edges' → logprob: -6.566765785217285
    5. '[i' → logprob: -12.191765785217285
    6. '	i' → logprob: -13.941765785217285
    7. '(edges' → logprob: -15.691765785217285
    8. '_edges' → logprob: -15.941765785217285
    9. '```' → logprob: -16.3167667388916
    10. 'l' → logprob: -16.8167667388916

Token 1195: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002692055655643344
    2. ' i' → logprob: -6.002692222595215
    3. 'som' → logprob: -8.877692222595215
    4. ' sommet' → logprob: -9.627692222595215
    5. 's' → logprob: -13.127692222595215
    6. '[i' → logprob: -13.252692222595215
    7. '=i' → logprob: -13.252692222595215
    8. '#' → logprob: -13.752692222595215
    9. '
' → logprob: -14.502692222595215
    10. '	i' → logprob: -14.752692222595215

Token 1196: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018625343218445778
    2. '[i' → logprob: -4.268625259399414
    3. ' i' → logprob: -6.518625259399414
    4. '=' → logprob: -7.268625259399414
    5. 'edges' → logprob: -7.268625259399414
    6. '(i' → logprob: -7.518625259399414
    7. ' =' → logprob: -7.643625259399414
    8. 's' → logprob: -8.393625259399414
    9. '
' → logprob: -9.018625259399414
    10. ' edges' → logprob: -10.143625259399414

Token 1197: ',
' (ID: 412)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0005804300308228
    2. ']' → logprob: -1.1255804300308228
    3. '=' → logprob: -2.125580310821533
    4. ' =' → logprob: -2.250580310821533
    5. 'edges' → logprob: -3.500580310821533
    6. '(edges' → logprob: -3.875580310821533
    7. ')' → logprob: -5.250580310821533
    8. ' for' → logprob: -5.375580310821533
    9. '_edges' → logprob: -5.750580310821533
    10. '.' → logprob: -5.875580310821533

Token 1198: '#' (ID: 2)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5460946559906006
    2. '[:]' → logprob: -1.2960946559906006
    3. '=' → logprob: -3.0460946559906006
    4. '[' → logprob: -3.5460946559906006
    5. 'for' → logprob: -3.9210946559906006
    6. ' =' → logprob: -4.04609489440918
    7. 'edges' → logprob: -5.17109489440918
    8. '[]
' → logprob: -5.54609489440918
    9. 'n' → logprob: -5.54609489440918
    10. '   ' → logprob: -5.79609489440918

Token 1199: ' chaque' (ID: 21194)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.130848690867424
    2. '[:]' → logprob: -2.7558486461639404
    3. 'for' → logprob: -3.7558486461639404
    4. 'edges' → logprob: -4.0058488845825195
    5. '#' → logprob: -5.1308488845825195
    6. '[i' → logprob: -5.8808488845825195
    7. '[]
' → logprob: -6.2558488845825195
    8. '[' → logprob: -6.6308488845825195
    9. ' edges' → logprob: -6.7558488845825195
    10. 'each' → logprob: -7.1308488845825195

Token 1200: ' voisin' (ID: 145411)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.401036262512207
    2. '_edges' → logprob: -1.401036262512207
    3. ' edges' → logprob: -2.276036262512207
    4. ' =' → logprob: -3.026036262512207
    5. 'edge' → logprob: -3.151036262512207
    6. '[]' → logprob: -3.151036262512207
    7. '[i' → logprob: -3.276036262512207
    8. '_' → logprob: -3.276036262512207
    9. 'neighbors' → logprob: -3.401036262512207
    10. 's' → logprob: -3.651036262512207

Token 1201: ' étant' (ID: 47869)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21179480850696564
    2. ']' → logprob: -2.711794853210449
    3. ' =' → logprob: -3.211794853210449
    4. '=' → logprob: -3.961794853210449
    5. '.append' → logprob: -4.336794853210449
    6. ')' → logprob: -5.086794853210449
    7. ',' → logprob: -5.086794853210449
    8. 'e' → logprob: -5.461794853210449
    9. '=[]' → logprob: -5.461794853210449
    10. '],' → logprob: -5.586794853210449

Token 1202: ' représent' (ID: 42664)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.028035998344421387
    2. ' []' → logprob: -3.903036117553711
    3. '[]
' → logprob: -6.153036117553711
    4. ' represented' → logprob: -6.528036117553711
    5. ' (' → logprob: -6.778036117553711
    6. '()' → logprob: -7.028036117553711
    7. '([]' → logprob: -8.028036117553711
    8. '[])' → logprob: -8.278036117553711
    9. 'represented' → logprob: -8.403036117553711
    10. '[]}' → logprob: -8.653036117553711

Token 1203: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.6949958801269531
    2. 'ée' → logprob: -0.6949958801269531
    3. 'és' → logprob: -6.444995880126953
    4. 'ées' → logprob: -8.694995880126953
    5. '[]' → logprob: -9.444995880126953
    6. 'ant' → logprob: -12.819995880126953
    7. '[' → logprob: -13.194995880126953
    8. '=' → logprob: -13.819995880126953
    9. 'É' → logprob: -14.069995880126953
    10. ']' → logprob: -14.319995880126953

Token 1204: ' comme' (ID: 7971)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.5151638984680176
    2. '[]' → logprob: -1.8901638984680176
    3. '=[]' → logprob: -2.5151638984680176
    4. 'par' → logprob: -3.1401638984680176
    5. ',' → logprob: -3.5151638984680176
    6. '=' → logprob: -3.6401638984680176
    7. 'e' → logprob: -4.015163898468018
    8. ' as' → logprob: -4.640163898468018
    9. ' =' → logprob: -4.640163898468018
    10. 's' → logprob: -5.015163898468018

Token 1205: ' un' (ID: 537)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.024598902091383934
    2. ' (' → logprob: -4.149599075317383
    3. ' []' → logprob: -5.649599075317383
    4. '(' → logprob: -5.899599075317383
    5. '[(' → logprob: -7.649599075317383
    6. '(n' → logprob: -7.899599075317383
    7. '(i' → logprob: -8.149599075317383
    8. '(t' → logprob: -8.524599075317383
    9. '()' → logprob: -8.774599075317383
    10. '[]}' → logprob: -8.899599075317383

Token 1206: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.3099732995033264
    2. 'list' → logprob: -2.3099732398986816
    3. ' tuple' → logprob: -2.4349732398986816
    4. '(t' → logprob: -3.8099732398986816
    5. '[' → logprob: -4.434973239898682
    6. 'tu' → logprob: -5.309973239898682
    7. '[]' → logprob: -5.309973239898682
    8. '[
' → logprob: -5.434973239898682
    9. ' (' → logprob: -5.559973239898682
    10. 'pair' → logprob: -5.684973239898682

Token 1207: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0920732021331787
    2. '(v' → logprob: -1.3420732021331787
    3. '(i' → logprob: -1.8420732021331787
    4. '(n' → logprob: -3.2170732021331787
    5. '[]' → logprob: -3.3420732021331787
    6. ' =' → logprob: -3.4670732021331787
    7. '(edges' → logprob: -3.9670732021331787
    8. '(' → logprob: -4.217073440551758
    9. ' of' → logprob: -4.467073440551758
    10. '=' → logprob: -4.592073440551758

Token 1208: 'som' (ID: 35641)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.82188481092453
    2. 'vo' → logprob: -1.9468848705291748
    3. '(v' → logprob: -1.9468848705291748
    4. 't' → logprob: -3.071884870529175
    5. 'node' → logprob: -3.196884870529175
    6. 'neighbor' → logprob: -3.446884870529175
    7. '(t' → logprob: -3.696884870529175
    8. 'j' → logprob: -3.946884870529175
    9. ')' → logprob: -4.071884632110596
    10. '(node' → logprob: -4.446884632110596

Token 1209: 'met' (ID: 3001)
  Prédit: 'met'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'met' → logprob: -0.03508375212550163
    2. 'e' → logprob: -3.535083770751953
    3. 'et' → logprob: -6.285083770751953
    4. 'ète' → logprob: -6.410083770751953
    5. 'me' → logprob: -8.410083770751953
    6. 'ette' → logprob: -8.410083770751953
    7. 'ête' → logprob: -9.160083770751953
    8. ',' → logprob: -9.285083770751953
    9. 'ble' → logprob: -9.285083770751953
    10. 'pte' → logprob: -9.285083770751953

Token 1210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013905855303164572
    2. ' ,' → logprob: -10.125139236450195
    3. '_index' → logprob: -10.625139236450195
    4. ',
' → logprob: -11.125139236450195
    5. ',index' → logprob: -11.500139236450195
    6. 'index' → logprob: -11.750139236450195
    7. '_,' → logprob: -12.000139236450195
    8. 'i' → logprob: -12.375139236450195
    9. '<|end|>' → logprob: -12.625139236450195
    10. ',int' → logprob: -12.875139236450195

Token 1211: ' coût' (ID: 73109)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6579663753509521
    2. 'co' → logprob: -1.5329663753509521
    3. '1' → logprob: -2.532966375350952
    4. ' coût' → logprob: -2.532966375350952
    5. '0' → logprob: -3.032966375350952
    6. ' cost' → logprob: -3.282966375350952
    7. ' poids' → logprob: -5.157966613769531
    8. 'po' → logprob: -5.282966613769531
    9. 'cout' → logprob: -5.532966613769531
    10. ' cout' → logprob: -6.282966613769531

Token 1212: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004428339656442404
    2. ').' → logprob: -5.629428386688232
    3. '),' → logprob: -8.129427909851074
    4. ')
' → logprob: -8.254427909851074
    5. ')...' → logprob: -9.379427909851074
    6. ')#' → logprob: -10.004427909851074
    7. ');' → logprob: -10.629427909851074
    8. '),
' → logprob: -10.754427909851074
    9. ',' → logprob: -10.879427909851074
    10. '):
' → logprob: -11.129427909851074

Token 1213: 'edges' (ID: 39127)
  Prédit: 'edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.00012606535165105015
    2. ' edges' → logprob: -9.375125885009766
    3. 'graph' → logprob: -11.000125885009766
    4. '=' → logprob: -11.375125885009766
    5. ' =' → logprob: -11.625125885009766
    6. '
' → logprob: -13.375125885009766
    7. '=
' → logprob: -14.000125885009766
    8. '```' → logprob: -14.375125885009766
    9. 'edge' → logprob: -15.500125885009766
    10. '[]
' → logprob: -15.625125885009766

Token 1214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000553151941858232
    2. ' =' → logprob: -7.500553131103516
    3. '=[]' → logprob: -16.250553131103516
    4. '＝' → logprob: -17.125553131103516
    5. '=[' → logprob: -17.500553131103516
    6. '=n' → logprob: -18.750553131103516
    7. '=
' → logprob: -18.750553131103516
    8. '=

' → logprob: -20.375553131103516
    9. '=[]
' → logprob: -20.500553131103516
    10. ' ' → logprob: -20.750553131103516

Token 1215: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00033546582562848926
    2. ' [[]' → logprob: -8.000335693359375
    3. '[n' → logprob: -16.750335693359375
    4. '[[' → logprob: -17.000335693359375
    5. '[]' → logprob: -19.125335693359375
    6. '[['' → logprob: -19.375335693359375
    7. 'default' → logprob: -20.125335693359375
    8. '[len' → logprob: -20.250335693359375
    9. '[v' → logprob: -20.250335693359375
    10. '[new' → logprob: -20.250335693359375

Token 1216: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34889522194862366
    2. ' for' → logprob: -1.2238951921463013
    3. ')' → logprob: -8.098895072937012
    4. ']' → logprob: -9.473895072937012
    5. ',' → logprob: -10.098895072937012
    6. 'n' → logprob: -11.223895072937012
    7. '
' → logprob: -11.848895072937012
    8. '	for' → logprob: -13.098895072937012
    9. ',n' → logprob: -13.473895072937012
    10. ' ' → logprob: -13.723895072937012

Token 1217: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00012880703434348106
    2. 'i' → logprob: -9.875128746032715
    3. '_i' → logprob: -10.500128746032715
    4. ' _' → logprob: -10.750128746032715
    5. ' range' → logprob: -11.375128746032715
    6. '_range' → logprob: -12.000128746032715
    7. 'range' → logprob: -12.125128746032715
    8. ' i' → logprob: -13.125128746032715
    9. '_
' → logprob: -13.500128746032715
    10. '_s' → logprob: -14.250128746032715

Token 1218: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8221864700317383
    2. 'range' → logprob: -0.8221864700317383
    3. '_' → logprob: -2.4471864700317383
    4. ' range' → logprob: -4.072186470031738
    5. ' in' → logprob: -4.072186470031738
    6. 'i' → logprob: -8.072186470031738
    7. ' _' → logprob: -9.572186470031738
    8. 'n' → logprob: -10.697186470031738
    9. '0' → logprob: -10.947186470031738
    10. '_range' → logprob: -12.072186470031738

Token 1219: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7729658540920354e-05
    2. ' range' → logprob: -10.500027656555176
    3. '_range' → logprob: -16.250028610229492
    4. '_' → logprob: -17.125028610229492
    5. '	range' → logprob: -20.500028610229492
    6. '(range' → logprob: -20.625028610229492
    7. '0' → logprob: -20.625028610229492
    8. 'n' → logprob: -21.625028610229492
    9. '
' → logprob: -21.750028610229492
    10. 'r' → logprob: -22.875028610229492

Token 1220: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20141880214214325
    2. '(n' → logprob: -1.7014187574386597
    3. ' n' → logprob: -12.57641887664795
    4. 'range' → logprob: -13.45141887664795
    5. ')n' → logprob: -15.07641887664795
    6. '(' → logprob: -15.70141887664795
    7. '	n' → logprob: -16.451417922973633
    8. ' (' → logprob: -16.951417922973633
    9. '
' → logprob: -17.701417922973633
    10. ',n' → logprob: -18.076417922973633

Token 1221: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.292907877039397e-06
    2. ')' → logprob: -13.50000286102295
    3. ')]
' → logprob: -13.87500286102295
    4. ']' → logprob: -14.75000286102295
    5. ')]

' → logprob: -15.62500286102295
    6. ' )' → logprob: -16.125003814697266
    7. ')],' → logprob: -16.500003814697266
    8. '#' → logprob: -16.750003814697266
    9. '])]' → logprob: -17.000003814697266
    10. ')])' → logprob: -17.375003814697266

Token 1222: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.696889623621246e-06
    2. ' for' → logprob: -13.62500286102295
    3. '
' → logprob: -14.25000286102295
    4. '#' → logprob: -14.50000286102295
    5. '```' → logprob: -16.500001907348633
    6. '  
' → logprob: -17.375001907348633
    7. 'edges' → logprob: -17.750001907348633
    8. ' 
' → logprob: -18.000001907348633
    9. 'n' → logprob: -18.125001907348633
    10. '<|end|>' → logprob: -18.125001907348633

Token 1223: ' Cette' (ID: 27383)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005288454121910036
    2. '#' → logprob: -8.000529289245605
    3. 'edges' → logprob: -8.625529289245605
    4. '
' → logprob: -12.625529289245605
    5. ' for' → logprob: -13.125529289245605
    6. 'fo' → logprob: -13.250529289245605
    7. 'k' → logprob: -14.000529289245605
    8. 'q' → logprob: -14.125529289245605
    9. 'import' → logprob: -14.500529289245605
    10. 'f' → logprob: -14.500529289245605

Token 1224: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02496662735939026
    2. ' for' → logprob: -4.024966716766357
    3. '#' → logprob: -6.899966716766357
    4. 'edges' → logprob: -7.024966716766357
    5. '
' → logprob: -7.149966716766357
    6. '=' → logprob: -7.399966716766357
    7. ' edges' → logprob: -7.524966716766357
    8. 'n' → logprob: -7.524966716766357
    9. '_edges' → logprob: -7.649966716766357
    10. ' =' → logprob: -8.1499662399292

Token 1225: ' rel' (ID: 1536)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00020592445798683912
    2. ' for' → logprob: -8.500205993652344
    3. '
' → logprob: -13.875205993652344
    4. ':' → logprob: -13.875205993652344
    5. 'range' → logprob: -15.750205993652344
    6. 'pour' → logprob: -16.125205993652344
    7. '_for' → logprob: -16.375205993652344
    8. '_' → logprob: -17.125205993652344
    9. ':
' → logprob: -17.125205993652344
    10. '#' → logprob: -17.375205993652344

Token 1226: 'ie' (ID: 396)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05719931051135063
    2. 'e' → logprob: -4.182199478149414
    3. '#' → logprob: -4.432199478149414
    4. 'ecture' → logprob: -4.932199478149414
    5. 'ève' → logprob: -5.307199478149414
    6. 'range' → logprob: -5.432199478149414
    7. 'ease' → logprob: -5.807199478149414
    8. ' for' → logprob: -6.182199478149414
    9. 'ance' → logprob: -6.432199478149414
    10. 'it' → logprob: -6.807199478149414

Token 1227: ' chaque' (ID: 21194)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03152317926287651
    2. ' _' → logprob: -3.5315232276916504
    3. 'i' → logprob: -6.78152322769165
    4. ' i' → logprob: -8.531522750854492
    5. 'm' → logprob: -9.156522750854492
    6. ' range' → logprob: -9.781522750854492
    7. '_i' → logprob: -9.906522750854492
    8. ' for' → logprob: -9.906522750854492
    9. 'for' → logprob: -10.031522750854492
    10. ' m' → logprob: -10.281522750854492

Token 1228: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09693270176649094
    2. ' i' → logprob: -2.4719326496124268
    3. '_' → logprob: -4.971932888031006
    4. ' _' → logprob: -7.596932888031006
    5. '_i' → logprob: -8.221932411193848
    6. 'u' → logprob: -9.096932411193848
    7. 'v' → logprob: -9.721932411193848
    8. ' for' → logprob: -11.346932411193848
    9. ' u' → logprob: -11.346932411193848
    10. ' v' → logprob: -11.596932411193848

Token 1229: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3526611626148224
    2. 'for' → logprob: -1.9776611328125
    3. ' i' → logprob: -2.6026611328125
    4. 'au' → logprob: -4.1026611328125
    5. ' for' → logprob: -4.3526611328125
    6. 'à' → logprob: -4.4776611328125
    7. 'n' → logprob: -4.4776611328125
    8. ' à' → logprob: -4.9776611328125
    9. '_' → logprob: -5.3526611328125
    10. 'range' → logprob: -5.3526611328125

Token 1230: 's' (ID: 82)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.036851510405540466
    2. ' i' → logprob: -3.786851406097412
    3. 'for' → logprob: -4.536851406097412
    4. ' for' → logprob: -7.161851406097412
    5. 'range' → logprob: -7.161851406097412
    6. '_' → logprob: -8.03685188293457
    7. ')' → logprob: -8.53685188293457
    8. 'v' → logprob: -8.91185188293457
    9. ' range' → logprob: -9.41185188293457
    10. '0' → logprob: -9.53685188293457

Token 1231: 'auf' (ID: 7483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15981201827526093
    2. 'i' → logprob: -2.4098119735717773
    3. ' for' → logprob: -4.159811973571777
    4. '=' → logprob: -4.284811973571777
    5. '[i' → logprob: -4.784811973571777
    6. ' =' → logprob: -5.159811973571777
    7. '=i' → logprob: -5.159811973571777
    8. ')' → logprob: -5.909811973571777
    9. ' i' → logprob: -6.284811973571777
    10. ',' → logprob: -7.159811973571777

Token 1232: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5983213186264038
    2. ' le' → logprob: -1.2233213186264038
    3. 'n' → logprob: -2.0983214378356934
    4. ' n' → logprob: -3.8483214378356934
    5. 'i' → logprob: -6.098321437835693
    6. ' la' → logprob: -6.223321437835693
    7. ' i' → logprob: -6.598321437835693
    8. 'last' → logprob: -7.098321437835693
    9. '0' → logprob: -7.223321437835693
    10. 'la' → logprob: -7.223321437835693

Token 1233: ' premier' (ID: 15506)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.682285487651825
    2. 'n' → logprob: -1.0572855472564697
    3. '1' → logprob: -3.5572855472564697
    4. '0' → logprob: -3.8072855472564697
    5. ')' → logprob: -3.9322855472564697
    6. ' i' → logprob: -4.307285308837891
    7. ' last' → logprob: -4.432285308837891
    8. 'last' → logprob: -4.807285308837891
    9. ' n' → logprob: -4.932285308837891
    10. ' dernier' → logprob: -5.182285308837891

Token 1234: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7485836744308472
    2. ',' → logprob: -1.1235836744308472
    3. 'for' → logprob: -1.8735836744308472
    4. ' for' → logprob: -4.248583793640137
    5. 'i' → logprob: -4.498583793640137
    6. ' i' → logprob: -4.748583793640137
    7. 'à' → logprob: -5.373583793640137
    8. ',
' → logprob: -6.248583793640137
    9. '_' → logprob: -6.623583793640137
    10. 'pour' → logprob: -6.623583793640137

Token 1235: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05558064952492714
    2. ' for' → logprob: -2.9305806159973145
    3. 'range' → logprob: -8.305581092834473
    4. 'in' → logprob: -8.555581092834473
    5. ' in' → logprob: -9.180581092834473
    6. 'n' → logprob: -10.055581092834473
    7. '#' → logprob: -10.805581092834473
    8. ' range' → logprob: -11.055581092834473
    9. '```' → logprob: -11.305581092834473
    10. 'pour' → logprob: -11.805581092834473

Token 1236: ' son' (ID: 2391)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.33670902252197266
    2. ' i' → logprob: -1.7117090225219727
    3. '(s' → logprob: -2.8367090225219727
    4. '(i' → logprob: -4.336709022521973
    5. 's' → logprob: -4.961709022521973
    6. '_' → logprob: -5.586709022521973
    7. ' (' → logprob: -5.836709022521973
    8. 'l' → logprob: -5.961709022521973
    9. ' edges' → logprob: -5.961709022521973
    10. 'edges' → logprob: -5.961709022521973

Token 1237: ' précédent' (ID: 128462)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.3438347280025482
    2. 'vo' → logprob: -2.218834638595581
    3. 'i' → logprob: -2.718834638595581
    4. ' précédent' → logprob: -2.968834638595581
    5. ' voisin' → logprob: -3.468834638595581
    6. 'adj' → logprob: -4.84383487701416
    7. ' préd' → logprob: -5.09383487701416
    8. 'preced' → logprob: -5.46883487701416
    9. '(i' → logprob: -6.09383487701416
    10. ' i' → logprob: -6.46883487701416

Token 1238: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1547507345676422
    2. 'i' → logprob: -2.9047508239746094
    3. ' for' → logprob: -3.7797508239746094
    4. ',' → logprob: -3.9047508239746094
    5. 'en' → logprob: -4.654750823974609
    6. '(i' → logprob: -4.904750823974609
    7. 'dans' → logprob: -4.904750823974609
    8. 'pour' → logprob: -5.154750823974609
    9. 's' → logprob: -5.529750823974609
    10. '```' → logprob: -6.654750823974609

Token 1239: 'pour' (ID: 52723)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.017436999827623367
    2. ')' → logprob: -5.392436981201172
    3. 'for' → logprob: -5.392436981201172
    4. ' i' → logprob: -5.517436981201172
    5. ',' → logprob: -6.142436981201172
    6. 'range' → logprob: -7.892436981201172
    7. ' for' → logprob: -8.267436981201172
    8. 's' → logprob: -8.392436981201172
    9. '#' → logprob: -8.642436981201172
    10. '```' → logprob: -9.017436981201172

Token 1240: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07015193998813629
    2. ' i' → logprob: -2.6951520442962646
    3. ')' → logprob: -10.070152282714844
    4. '_' → logprob: -10.445152282714844
    5. 'u' → logprob: -11.195152282714844
    6. '_i' → logprob: -11.195152282714844
    7. 's' → logprob: -11.320152282714844
    8. 'v' → logprob: -11.320152282714844
    9. 'l' → logprob: -11.445152282714844
    10. 't' → logprob: -11.570152282714844

Token 1241: ' variant' (ID: 16914)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.18774834275245667
    2. ' in' → logprob: -1.8127483129501343
    3. 'n' → logprob: -6.062748432159424
    4. 'i' → logprob: -6.312748432159424
    5. 'range' → logprob: -6.312748432159424
    6. ')' → logprob: -7.062748432159424
    7. '1' → logprob: -7.812748432159424
    8. 'ange' → logprob: -9.312747955322266
    9. ' range' → logprob: -9.437747955322266
    10. '```' → logprob: -9.687747955322266

Token 1242: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.20491375029087067
    2. 'de' → logprob: -1.8299137353897095
    3. 'range' → logprob: -4.57991361618042
    4. ' from' → logprob: -5.07991361618042
    5. ' de' → logprob: -5.45491361618042
    6. ' range' → logprob: -6.07991361618042
    7. '1' → logprob: -7.70491361618042
    8. 'in' → logprob: -8.204914093017578
    9. ')' → logprob: -8.329914093017578
    10. ' in' → logprob: -8.704914093017578

Token 1243: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.4192871175473556e-05
    2. 'range' → logprob: -9.875054359436035
    3. ' ' → logprob: -14.125054359436035
    4. '
' → logprob: -14.250054359436035
    5. ' range' → logprob: -14.500054359436035
    6. 'i' → logprob: -14.750054359436035
    7. '```' → logprob: -15.625054359436035
    8. '0' → logprob: -16.12505340576172
    9. '(' → logprob: -16.37505340576172
    10. '#' → logprob: -17.25005340576172

Token 1244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010068230039905757
    2. 'range' → logprob: -9.250101089477539
    3. ' ' → logprob: -13.375101089477539
    4. ' range' → logprob: -13.750101089477539
    5. '```' → logprob: -13.750101089477539
    6. '0' → logprob: -15.000101089477539
    7. '(' → logprob: -15.250101089477539
    8. '
' → logprob: -16.25010108947754
    9. '2' → logprob: -17.25010108947754
    10. 'for' → logprob: -17.50010108947754

Token 1245: ' à' (ID: 1221)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5287917852401733
    2. ' in' → logprob: -1.1537917852401733
    3. 'to' → logprob: -3.153791904449463
    4. 'range' → logprob: -4.278791904449463
    5. ' à' → logprob: -4.403791904449463
    6. ' to' → logprob: -4.528791904449463
    7. 'à' → logprob: -4.778791904449463
    8. ' range' → logprob: -6.403791904449463
    9. '
' → logprob: -6.903791904449463
    10. ',' → logprob: -6.903791904449463

Token 1246: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00033558503491804004
    2. ' n' → logprob: -8.000335693359375
    3. '1' → logprob: -16.250335693359375
    4. 'range' → logprob: -18.750335693359375
    5. '(n' → logprob: -19.125335693359375
    6. '
' → logprob: -19.250335693359375
    7. 'i' → logprob: -19.500335693359375
    8. '	n' → logprob: -19.500335693359375
    9. ' ' → logprob: -20.250335693359375
    10. ',n' → logprob: -20.375335693359375

Token 1247: '-' (ID: 12)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3924483060836792
    2. '-' → logprob: -2.3924484252929688
    3. '):' → logprob: -2.3924484252929688
    4. 'range' → logprob: -2.5174484252929688
    5. 'for' → logprob: -3.3924484252929688
    6. ' range' → logprob: -4.392448425292969
    7. ')' → logprob: -5.642448425292969
    8. 'n' → logprob: -5.767448425292969
    9. '
' → logprob: -6.267448425292969
    10. ' for' → logprob: -6.642448425292969

Token 1248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. '-' → logprob: -12.50001049041748
    3. ' ' → logprob: -12.62501049041748
    4. 'n' → logprob: -12.75001049041748
    5. ')' → logprob: -14.87501049041748
    6. 'range' → logprob: -15.50001049041748
    7. '```' → logprob: -16.125011444091797
    8. 'm' → logprob: -16.500011444091797
    9. '
' → logprob: -17.000011444091797
    10. '...' → logprob: -17.500011444091797

Token 1249: ')' (ID: 8)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1476798951625824
    2. ':' → logprob: -2.3976798057556152
    3. '):
' → logprob: -3.5226798057556152
    4. 'for' → logprob: -4.522679805755615
    5. ' for' → logprob: -5.397679805755615
    6. '):' → logprob: -7.147679805755615
    7. 'in' → logprob: -8.147680282592773
    8. ')' → logprob: -8.647680282592773
    9. ',' → logprob: -9.397680282592773
    10. ' :
' → logprob: -10.022680282592773

Token 1250: ' avec' (ID: 3937)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06349648535251617
    2. ' for' → logprob: -2.8134965896606445
    3. ':' → logprob: -7.1884965896606445
    4. ':
' → logprob: -7.3134965896606445
    5. '   ' → logprob: -9.563496589660645
    6. '```' → logprob: -10.938496589660645
    7. 'edges' → logprob: -12.563496589660645
    8. 'i' → logprob: -12.813496589660645
    9. ' edges' → logprob: -13.063496589660645
    10. '	for' → logprob: -13.063496589660645

Token 1251: ' un' (ID: 537)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.2389049530029297
    2. ' edges' → logprob: -1.6139049530029297
    3. 'edges' → logprob: -2.2389049530029297
    4. '1' → logprob: -2.6139049530029297
    5. ' cost' → logprob: -2.8639049530029297
    6. '(i' → logprob: -2.8639049530029297
    7. 'un' → logprob: -3.3639049530029297
    8. 'a' → logprob: -3.3639049530029297
    9. ' (' → logprob: -3.6139049530029297
    10. ' un' → logprob: -3.6139049530029297

Token 1252: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.09340422600507736
    2. 'cost' → logprob: -2.4684042930603027
    3. ' coût' → logprob: -6.468404293060303
    4. 'for' → logprob: -6.593404293060303
    5. ' cost' → logprob: -7.718404293060303
    6. '
' → logprob: -8.093403816223145
    7. 'c' → logprob: -8.218403816223145
    8. 'cout' → logprob: -8.468403816223145
    9. '(' → logprob: -9.718403816223145
    10. ' co' → logprob: -9.843403816223145

Token 1253: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03720786049962044
    2. ' =' → logprob: -3.787207841873169
    3. '1' → logprob: -5.412208080291748
    4. 'de' → logprob: -5.537208080291748
    5. ' de' → logprob: -5.912208080291748
    6. ' of' → logprob: -7.412208080291748
    7. '+=' → logprob: -7.662208080291748
    8. 'd' → logprob: -7.662208080291748
    9. 'for' → logprob: -7.787208080291748
    10. '```' → logprob: -8.66220760345459

Token 1254: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002912486088462174
    2. ' ' → logprob: -8.375290870666504
    3. '0' → logprob: -11.625290870666504
    4. '10' → logprob: -11.750290870666504
    5. '7' → logprob: -11.875290870666504
    6. '
' → logprob: -12.250290870666504
    7. '2' → logprob: -12.250290870666504
    8. '```' → logprob: -12.250290870666504
    9. '100' → logprob: -12.375290870666504
    10. 'i' → logprob: -12.875290870666504

Token 1255: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001382241171086207
    2. ' ' → logprob: -9.625138282775879
    3. '10' → logprob: -11.750138282775879
    4. '0' → logprob: -11.875138282775879
    5. '2' → logprob: -12.000138282775879
    6. '
' → logprob: -12.000138282775879
    7. 'i' → logprob: -12.000138282775879
    8. '```' → logprob: -12.125138282775879
    9. '100' → logprob: -12.375138282775879
    10. '-' → logprob: -12.750138282775879

Token 1256: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014333443716168404
    2. ' for' → logprob: -4.264333248138428
    3. ':
' → logprob: -9.389333724975586
    4. ':' → logprob: -9.639333724975586
    5. '   ' → logprob: -11.139333724975586
    6. '
' → logprob: -12.639333724975586
    7. '```' → logprob: -13.264333724975586
    8. 'i' → logprob: -14.514333724975586
    9. 'range' → logprob: -14.764333724975586
    10. '	for' → logprob: -15.139333724975586

Token 1257: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.180258191714529e-06
    2. ' for' → logprob: -11.750008583068848
    3. '```' → logprob: -15.375008583068848
    4. '
' → logprob: -17.62500762939453
    5. '``' → logprob: -20.12500762939453
    6. '	for' → logprob: -20.50000762939453
    7. 'i' → logprob: -20.75000762939453
    8. ' 
' → logprob: -21.25000762939453
    9. 'range' → logprob: -21.50000762939453
    10. '   ' → logprob: -22.75000762939453

Token 1258: ' Cela' (ID: 44403)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -15.75
    3. '```' → logprob: -21.125
    4. '
' → logprob: -23.0
    5. '   ' → logprob: -23.0
    6. '	for' → logprob: -23.875
    7. 'range' → logprob: -24.875
    8. '#' → logprob: -25.125
    9. '``' → logprob: -25.75
    10. 'fo' → logprob: -26.25

Token 1259: ' signifie' (ID: 81149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2625005841255188
    2. ' for' → logprob: -1.512500524520874
    3. '#' → logprob: -6.137500762939453
    4. 'est' → logprob: -6.387500762939453
    5. ' permet' → logprob: -6.387500762939453
    6. '
' → logprob: -7.387500762939453
    7. ' ajoute' → logprob: -7.512500762939453
    8. ':' → logprob: -8.012500762939453
    9. 'pour' → logprob: -8.012500762939453
    10. ' edges' → logprob: -8.012500762939453

Token 1260: ' que' (ID: 661)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0738301277160645
    2. ' que' → logprob: -1.1988301277160645
    3. 'edges' → logprob: -1.8238301277160645
    4. 'que' → logprob: -1.9488301277160645
    5. '   ' → logprob: -3.6988301277160645
    6. ' edges' → logprob: -4.3238301277160645
    7. ' for' → logprob: -4.8238301277160645
    8. 'that' → logprob: -6.3238301277160645
    9. ' that' → logprob: -6.5738301277160645
    10. '```' → logprob: -6.8238301277160645

Token 1261: ' d' (ID: 272)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.11232423037290573
    2. ' edges' → logprob: -2.3623242378234863
    3. 'for' → logprob: -4.487324237823486
    4. ' for' → logprob: -7.237324237823486
    5. '```' → logprob: -9.737323760986328
    6. '   ' → logprob: -11.987323760986328
    7. 'i' → logprob: -12.612323760986328
    8. '(edges' → logprob: -13.362323760986328
    9. '``' → logprob: -13.862323760986328
    10. '_edges' → logprob: -13.862323760986328

Token 1262: ''ind' (ID: 82245)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22312302887439728
    2. 'e' → logprob: -1.9731230735778809
    3. ' for' → logprob: -3.598123073577881
    4. 'edges' → logprob: -4.348123073577881
    5. 'i' → logprob: -4.848123073577881
    6. '`' → logprob: -6.098123073577881
    7. ' edges' → logprob: -6.223123073577881
    8. '```' → logprob: -6.473123073577881
    9. 'u' → logprob: -6.723123073577881
    10. 'ef' → logprob: -6.723123073577881

Token 1263: 'ice' (ID: 603)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024036245420575142
    2. 'range' → logprob: -4.149036407470703
    3. ' for' → logprob: -5.524036407470703
    4. 'i' → logprob: -7.024036407470703
    5. '```' → logprob: -7.149036407470703
    6. 'e' → logprob: -7.274036407470703
    7. '1' → logprob: -8.649036407470703
    8. '`' → logprob: -8.649036407470703
    9. 'é' → logprob: -8.649036407470703
    10. 'es' → logprob: -8.899036407470703

Token 1264: ' en' (ID: 469)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.32019734382629395
    2. 'e' → logprob: -2.070197343826294
    3. 'for' → logprob: -2.820197343826294
    4. ' i' → logprob: -2.945197343826294
    5. ' for' → logprob: -4.070197105407715
    6. '1' → logprob: -5.820197105407715
    7. 'range' → logprob: -5.945197105407715
    8. '`' → logprob: -6.195197105407715
    9. 'es' → logprob: -6.570197105407715
    10. ' e' → logprob: -6.695197105407715

Token 1265: ' indice' (ID: 90848)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.43103402853012085
    2. '1' → logprob: -1.4310340881347656
    3. 'i' → logprob: -2.4310340881347656
    4. ' range' → logprob: -4.056034088134766
    5. 'for' → logprob: -5.931034088134766
    6. ' i' → logprob: -7.181034088134766
    7. 'une' → logprob: -7.556034088134766
    8. '[' → logprob: -7.681034088134766
    9. 'e' → logprob: -8.556034088134766
    10. '`' → logprob: -8.556034088134766

Token 1266: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8854702711105347
    2. ',' → logprob: -1.8854702711105347
    3. 'i' → logprob: -2.010470390319824
    4. '   ' → logprob: -2.385470390319824
    5. 'edges' → logprob: -2.760470390319824
    6. ' for' → logprob: -2.885470390319824
    7. ' edges' → logprob: -3.635470390319824
    8. '#' → logprob: -4.135470390319824
    9. ':' → logprob: -4.510470390319824
    10. ':
' → logprob: -4.760470390319824

Token 1267: ' on' (ID: 402)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.39894723892211914
    2. ' edges' → logprob: -1.3989472389221191
    3. '   ' → logprob: -2.523947238922119
    4. 'he' → logprob: -7.023947238922119
    5. ' he' → logprob: -7.398947238922119
    6. '```' → logprob: -8.273946762084961
    7. 'for' → logprob: -9.898946762084961
    8. 'i' → logprob: -10.773946762084961
    9. '   ' → logprob: -10.773946762084961
    10. ' ' → logprob: -10.773946762084961

Token 1268: ' peut' (ID: 9216)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.8199602961540222
    2. 'edges' → logprob: -1.069960355758667
    3. 'for' → logprob: -2.319960355758667
    4. '   ' → logprob: -2.944960355758667
    5. ' for' → logprob: -3.694960355758667
    6. ' ajoute' → logprob: -4.569960117340088
    7. ' peux' → logprob: -4.944960117340088
    8. 'aj' → logprob: -5.069960117340088
    9. '#' → logprob: -5.694960117340088
    10. ' can' → logprob: -6.069960117340088

Token 1269: ' avancer' (ID: 151163)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.703681230545044
    2. 'edges' → logprob: -0.953681230545044
    3. 'aller' → logprob: -2.328681230545044
    4. ' aller' → logprob: -3.953681230545044
    5. 'se' → logprob: -7.578680992126465
    6. ' se' → logprob: -7.578680992126465
    7. 'contin' → logprob: -7.578680992126465
    8. ' avancer' → logprob: -8.078680992126465
    9. 'faire' → logprob: -8.328680992126465
    10. 'aj' → logprob: -8.328680992126465

Token 1270: ' gratuitement' (ID: 76480)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.30128252506256104
    2. 'i' → logprob: -1.926282525062561
    3. ' edges' → logprob: -3.0512824058532715
    4. '[i' → logprob: -4.5512824058532715
    5. 'edges' → logprob: -4.5512824058532715
    6. 'for' → logprob: -4.8012824058532715
    7. 'from' → logprob: -5.0512824058532715
    8. ' =' → logprob: -5.8012824058532715
    9. ' backwards' → logprob: -5.8012824058532715
    10. ' for' → logprob: -5.8012824058532715

Token 1271: '.
' (ID: 558)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.19572073221206665
    2. ' edges' → logprob: -2.070720672607422
    3. '(edges' → logprob: -4.445720672607422
    4. ',' → logprob: -4.570720672607422
    5. 'for' → logprob: -4.695720672607422
    6. '   ' → logprob: -4.945720672607422
    7. '[i' → logprob: -5.695720672607422
    8. ' for' → logprob: -5.820720672607422
    9. '.' → logprob: -6.445720672607422
    10. '_edges' → logprob: -6.945720672607422

Token 1272: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.41866585687967e-06
    2. ' for' → logprob: -11.750008583068848
    3. '```' → logprob: -14.500008583068848
    4. '
' → logprob: -18.62500762939453
    5. '``' → logprob: -19.25000762939453
    6. 'range' → logprob: -19.37500762939453
    7. '   ' → logprob: -19.75000762939453
    8. '	for' → logprob: -20.25000762939453
    9. 'i' → logprob: -22.50000762939453
    10. '    
' → logprob: -22.50000762939453

Token 1273: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03804171830415726
    2. ' i' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.913042068481445
    4. '	i' → logprob: -16.288042068481445
    5. '_i' → logprob: -16.538042068481445
    6. '1' → logprob: -17.038042068481445
    7. '   ' → logprob: -17.538042068481445
    8. ' ' → logprob: -17.788042068481445
    9. '```' → logprob: -17.788042068481445
    10. '_' → logprob: -18.288042068481445

Token 1274: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043177198618650436
    2. 'in' → logprob: -3.1681771278381348
    3. '1' → logprob: -8.793177604675293
    4. '(' → logprob: -11.918177604675293
    5. ' ' → logprob: -12.293177604675293
    6. ' i' → logprob: -12.793177604675293
    7. 'i' → logprob: -13.168177604675293
    8. 'range' → logprob: -13.293177604675293
    9. '```' → logprob: -13.543177604675293
    10. '0' → logprob: -13.543177604675293

Token 1275: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16025693714618683
    2. ' range' → logprob: -1.9102569818496704
    3. '1' → logprob: -10.660257339477539
    4. 'in' → logprob: -12.285257339477539
    5. ' in' → logprob: -12.910257339477539
    6. '(range' → logprob: -13.535257339477539
    7. ' ' → logprob: -15.285257339477539
    8. '(' → logprob: -15.285257339477539
    9. '   ' → logprob: -15.535257339477539
    10. '	range' → logprob: -15.535257339477539

Token 1276: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028065370861440897
    2. '1' → logprob: -5.877806663513184
    3. '(
' → logprob: -13.877806663513184
    4. ' (' → logprob: -14.127806663513184
    5. ' ' → logprob: -16.877805709838867
    6. '
' → logprob: -17.627805709838867
    7. 'range' → logprob: -20.127805709838867
    8. '#' → logprob: -20.252805709838867
    9. '(n' → logprob: -20.502805709838867
    10. ',' → logprob: -20.502805709838867

Token 1277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'n' → logprob: -17.625001907348633
    4. '   ' → logprob: -18.375001907348633
    5. '
' → logprob: -19.000001907348633
    6. '(' → logprob: -20.750001907348633
    7. '１' → logprob: -22.000001907348633
    8. '

' → logprob: -22.250001907348633
    9. '۱' → logprob: -22.250001907348633
    10. '```' → logprob: -22.250001907348633

Token 1278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2175825536251068
    2. ',n' → logprob: -2.3425824642181396
    3. '(n' → logprob: -2.5925824642181396
    4. 'n' → logprob: -4.217582702636719
    5. ' ,' → logprob: -5.217582702636719
    6. ' n' → logprob: -5.467582702636719
    7. '(' → logprob: -8.717582702636719
    8. '):
' → logprob: -10.592582702636719
    9. '):' → logprob: -10.967582702636719
    10. ')' → logprob: -11.217582702636719

Token 1279: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001584850688232109
    2. ' n' → logprob: -8.750158309936523
    3. '	n' → logprob: -17.500158309936523
    4. ')n' → logprob: -20.000158309936523
    5. '   ' → logprob: -20.750158309936523
    6. '
' → logprob: -21.375158309936523
    7. ' ' → logprob: -21.875158309936523
    8. '_n' → logprob: -22.250158309936523
    9. ')' → logprob: -22.750158309936523
    10. '    ' → logprob: -22.875158309936523

Token 1280: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06197989732027054
    2. '):' → logprob: -2.8119800090789795
    3. '):
' → logprob: -12.311980247497559
    4. ' ):
' → logprob: -12.811980247497559
    5. 'n' → logprob: -13.311980247497559
    6. ')' → logprob: -13.561980247497559
    7. ' ):' → logprob: -14.561980247497559
    8. '():
' → logprob: -15.061980247497559
    9. ':' → logprob: -15.686980247497559
    10. '
' → logprob: -15.811980247497559

Token 1281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4380795657634735
    2. ' edges' → logprob: -1.563079595565796
    3. 'edges' → logprob: -1.938079595565796
    4. '```' → logprob: -6.938079357147217
    5. '   ' → logprob: -9.688079833984375
    6. '	' → logprob: -9.813079833984375
    7. '(edges' → logprob: -10.063079833984375
    8. '.edges' → logprob: -10.188079833984375
    9. '``' → logprob: -10.438079833984375
    10. '_edges' → logprob: -10.813079833984375

Token 1282: ' #' (ID: 1069)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.00044092073221690953
    2. '   ' → logprob: -8.37544059753418
    3. ' edges' → logprob: -8.50044059753418
    4. 'he' → logprob: -12.00044059753418
    5. '```' → logprob: -14.87544059753418
    6. '.edges' → logprob: -15.62544059753418
    7. '(edges' → logprob: -16.25044059753418
    8. '	' → logprob: -17.00044059753418
    9. ' ' → logprob: -17.25044059753418
    10. '#' (adapté à ' #') → logprob: -17.25044059753418

Token 1283: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -4.723352049040841e-06
    2. '   ' → logprob: -12.625004768371582
    3. ' edges' → logprob: -13.625004768371582
    4. 'he' → logprob: -15.750004768371582
    5. '```' → logprob: -17.250003814697266
    6. '.edges' → logprob: -17.625003814697266
    7. '#' → logprob: -18.625003814697266
    8. '(edges' → logprob: -19.125003814697266
    9. 'errors' → logprob: -19.250003814697266
    10. 'events' → logprob: -20.250003814697266

Token 1284: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.963691804325208e-05
    2. '[' → logprob: -10.500029563903809
    3. 's' → logprob: -14.375029563903809
    4. 'i' → logprob: -14.750029563903809
    5. '   ' → logprob: -15.000029563903809
    6. ' [' → logprob: -15.375029563903809
    7. 'edges' → logprob: -15.375029563903809
    8. '[s' → logprob: -16.125030517578125
    9. '```' → logprob: -16.625030517578125
    10. '][' → logprob: -16.750030517578125

Token 1285: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0019921588245779276
    2. '].' → logprob: -6.376992225646973
    3. '][' → logprob: -9.376992225646973
    4. '   ' → logprob: -9.751992225646973
    5. '-' → logprob: -9.876992225646973
    6. '[' → logprob: -10.001992225646973
    7. 'i' → logprob: -10.626992225646973
    8. '[-' → logprob: -11.251992225646973
    9. '.append' → logprob: -12.001992225646973
    10. '
' → logprob: -13.751992225646973

Token 1286: ' est' (ID: 893)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8158203959465027
    2. '.append' → logprob: -0.8158203959465027
    3. '[' → logprob: -2.1908204555511475
    4. '[-' → logprob: -6.190820217132568
    5. 'append' → logprob: -7.690820217132568
    6. 'edges' → logprob: -7.815820217132568
    7. '   ' → logprob: -8.565820693969727
    8. '[].' → logprob: -8.815820693969727
    9. '.' → logprob: -9.065820693969727
    10. '].' → logprob: -9.190820693969727

Token 1287: ' la' (ID: 557)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.4443194270133972
    2. 'edges' → logprob: -1.319319486618042
    3. ' edges' → logprob: -3.069319486618042
    4. 'append' → logprob: -3.444319486618042
    5. '   ' → logprob: -4.944319248199463
    6. '.' → logprob: -5.569319248199463
    7. ' append' → logprob: -7.194319248199463
    8. '[].' → logprob: -7.819319248199463
    9. ' appended' → logprob: -8.194319725036621
    10. '.edges' → logprob: -8.694319725036621

Token 1288: ' liste' (ID: 31719)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.47444307804107666
    2. 'edges' → logprob: -1.0994430780410767
    3. 'list' → logprob: -4.224442958831787
    4. '[i' → logprob: -4.349442958831787
    5. '.append' → logprob: -4.849442958831787
    6. '[]' → logprob: -5.599442958831787
    7. ' edges' → logprob: -6.224442958831787
    8. 'i' → logprob: -7.224442958831787
    9. 'adj' → logprob: -7.724442958831787
    10. '(i' → logprob: -7.974442958831787

Token 1289: ' des' (ID: 731)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006778847891837358
    2. '   ' → logprob: -7.500678062438965
    3. '[' → logprob: -9.125678062438965
    4. '
' → logprob: -12.375678062438965
    5. 'i' → logprob: -12.625678062438965
    6. '.append' → logprob: -13.000678062438965
    7. 'for' → logprob: -13.875678062438965
    8. 's' → logprob: -14.000678062438965
    9. '.' → logprob: -14.125678062438965
    10. ' [' → logprob: -14.375678062438965

Token 1290: ' voisins' (ID: 166720)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.485262930393219
    2. 'i' → logprob: -1.1102628707885742
    3. '[i' → logprob: -2.985262870788574
    4. '(i' → logprob: -5.610262870788574
    5. ' edges' → logprob: -7.985262870788574
    6. '[(' → logprob: -8.485262870788574
    7. 'adj' → logprob: -8.985262870788574
    8. ' i' → logprob: -9.985262870788574
    9. '(edges' → logprob: -10.610262870788574
    10. '{i' → logprob: -11.735262870788574

Token 1291: ' du' (ID: 1462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006663294625468552
    2. '[' → logprob: -7.75066614151001
    3. '   ' → logprob: -8.375666618347168
    4. 's' → logprob: -14.125666618347168
    5. '][' → logprob: -14.125666618347168
    6. 'i' → logprob: -14.375666618347168
    7. '.append' → logprob: -14.625666618347168
    8. '#' → logprob: -14.875666618347168
    9. '
' → logprob: -14.875666618347168
    10. 'for' → logprob: -15.375666618347168

Token 1292: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00015574338613077998
    2. ' i' → logprob: -9.000155448913574
    3. '[i' → logprob: -10.625155448913574
    4. '(i' → logprob: -12.500155448913574
    5. 'edges' → logprob: -13.000155448913574
    6. '   ' → logprob: -13.625155448913574
    7. '```' → logprob: -15.250155448913574
    8. '
' → logprob: -16.00015640258789
    9. '#' → logprob: -16.12515640258789
    10. ' edges' → logprob: -16.25015640258789

Token 1293: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.32384762167930603
    2. 'i' → logprob: -1.3238476514816284
    3. 's' → logprob: -5.448847770690918
    4. 'edges' → logprob: -5.698847770690918
    5. '   ' → logprob: -6.073847770690918
    6. ' i' → logprob: -8.448847770690918
    7. '
' → logprob: -9.448847770690918
    8. '(i' → logprob: -9.448847770690918
    9. '[' → logprob: -9.823847770690918
    10. '#' → logprob: -10.823847770690918

Token 1294: '.
' (ID: 558)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07558102905750275
    2. '.append' → logprob: -3.3255810737609863
    3. '   ' → logprob: -3.4505810737609863
    4. '[' → logprob: -5.700581073760986
    5. 'edges' → logprob: -7.075581073760986
    6. '].' → logprob: -7.700581073760986
    7. '.' → logprob: -8.325580596923828
    8. '.edges' → logprob: -9.200580596923828
    9. '```' → logprob: -10.575580596923828
    10. '[].' → logprob: -10.575580596923828

Token 1295: '   ' (ID: 271)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.03407543897628784
    2. '   ' → logprob: -3.5340754985809326
    3. ' edges' → logprob: -5.7840752601623535
    4. '```' → logprob: -6.9090752601623535
    5. '.edges' → logprob: -9.034075736999512
    6. '[' → logprob: -9.784075736999512
    7. '[i' → logprob: -9.909075736999512
    8. '(edges' → logprob: -12.034075736999512
    9. '``' → logprob: -13.534075736999512
    10. '.' → logprob: -13.659075736999512

Token 1296: ' #' (ID: 1069)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.002609663875773549
    2. '   ' → logprob: -6.002609729766846
    3. ' edges' → logprob: -9.002609252929688
    4. '```' → logprob: -11.627609252929688
    5. '.edges' → logprob: -13.877609252929688
    6. '(edges' → logprob: -15.127609252929688
    7. '#' (adapté à ' #') → logprob: -16.127609252929688
    8. '       ' → logprob: -16.502609252929688
    9. '``' → logprob: -16.502609252929688
    10. '  ' → logprob: -16.752609252929688

Token 1297: ' On' (ID: 2160)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.00023250321100931615
    2. ' edges' → logprob: -8.500232696533203
    3. '   ' → logprob: -10.500232696533203
    4. '```' → logprob: -13.750232696533203
    5. '.edges' → logprob: -15.375232696533203
    6. '(edges' → logprob: -16.875232696533203
    7. '#' → logprob: -17.875232696533203
    8. '       ' → logprob: -18.000232696533203
    9. '``' → logprob: -18.000232696533203
    10. '
' → logprob: -18.375232696533203

Token 1298: ' y' (ID: 342)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0008891870966181159
    2. '[i' → logprob: -7.375889301300049
    3. ' edges' → logprob: -8.75088882446289
    4. '.append' → logprob: -10.00088882446289
    5. '.edges' → logprob: -10.37588882446289
    6. 'append' → logprob: -11.37588882446289
    7. '[' → logprob: -12.12588882446289
    8. '```' → logprob: -13.00088882446289
    9. '_edges' → logprob: -13.50088882446289
    10. '[].' → logprob: -14.00088882446289

Token 1299: ' ajoute' (ID: 91611)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.000891928793862462
    2. 'edges' → logprob: -7.625892162322998
    3. '.append' → logprob: -8.00089168548584
    4. ' append' → logprob: -10.37589168548584
    5. 'app' → logprob: -10.50089168548584
    6. '_append' → logprob: -12.87589168548584
    7. 'he' → logprob: -13.12589168548584
    8. 'Append' → logprob: -13.37589168548584
    9. 'i' → logprob: -13.75089168548584
    10. 'insert' → logprob: -14.12589168548584

Token 1300: ' le' (ID: 505)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.002770167076960206
    2. ' (' → logprob: -6.002769947052002
    3. '(' → logprob: -8.25277042388916
    4. '   ' → logprob: -11.12777042388916
    5. '((' → logprob: -11.62777042388916
    6. 'edges' → logprob: -12.25277042388916
    7. '(edges' → logprob: -12.87777042388916
    8. '(I' → logprob: -14.37777042388916
    9. '[(' → logprob: -14.50277042388916
    10. '[i' → logprob: -14.50277042388916

Token 1301: ' sommet' (ID: 130502)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00020330198458395898
    2. ' (' → logprob: -8.875203132629395
    3. '(' → logprob: -9.750203132629395
    4. '[i' → logprob: -13.875203132629395
    5. 'edge' → logprob: -13.875203132629395
    6. '((' → logprob: -14.000203132629395
    7. 'edges' → logprob: -14.250203132629395
    8. '   ' → logprob: -14.625203132629395
    9. ' ' → logprob: -15.500203132629395
    10. 'tuple' → logprob: -15.625203132629395

Token 1302: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0016876778099685907
    2. '[i' → logprob: -7.001687526702881
    3. '(i' → logprob: -7.501687526702881
    4. '   ' → logprob: -9.126688003540039
    5. ' i' → logprob: -9.126688003540039
    6. '```' → logprob: -12.751688003540039
    7. '
' → logprob: -13.876688003540039
    8. '	i' → logprob: -14.376688003540039
    9. '{i' → logprob: -14.501688003540039
    10. ',i' → logprob: -14.501688003540039

Token 1303: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006394077208824456
    2. ' -' → logprob: -7.37563943862915
    3. '[i' → logprob: -11.875638961791992
    4. 'i' → logprob: -12.500638961791992
    5. '   ' → logprob: -14.000638961791992
    6. '
' → logprob: -14.875638961791992
    7. '−' → logprob: -15.500638961791992
    8. '(i' → logprob: -15.625638961791992
    9. '```' → logprob: -15.875638961791992
    10. '-
' → logprob: -15.875638961791992

Token 1304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. 'i' → logprob: -16.125003814697266
    4. '(' → logprob: -16.125003814697266
    5. '```' → logprob: -16.375003814697266
    6. '   ' → logprob: -16.625003814697266
    7. '(i' → logprob: -18.625003814697266
    8. '
' → logprob: -18.750003814697266
    9. '  ' → logprob: -18.875003814697266
    10. ')' → logprob: -19.000003814697266

Token 1305: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011689336970448494
    2. '   ' → logprob: -5.011689186096191
    3. 'edges' → logprob: -6.136689186096191
    4. '.append' → logprob: -6.636689186096191
    5. ' ,' → logprob: -7.386689186096191
    6. '[i' → logprob: -7.886689186096191
    7. ' edges' → logprob: -8.261689186096191
    8. '(edges' → logprob: -10.136689186096191
    9. ',i' → logprob: -10.261689186096191
    10. '_edges' → logprob: -10.261689186096191

Token 1306: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004050733055919409
    2. 'cost' → logprob: -5.8790507316589355
    3. ' ' → logprob: -7.1290507316589355
    4. 'co' → logprob: -8.129051208496094
    5. '(' → logprob: -10.004051208496094
    6. ' cost' → logprob: -10.129051208496094
    7. ' (' → logprob: -10.629051208496094
    8. '(cost' → logprob: -11.254051208496094
    9. 'un' → logprob: -12.504051208496094
    10. '
' → logprob: -12.504051208496094

Token 1307: ' coût' (ID: 73109)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5394464731216431
    2. 'cost' → logprob: -1.039446473121643
    3. 'co' → logprob: -2.7894463539123535
    4. 'cout' → logprob: -6.6644463539123535
    5. '
' → logprob: -8.914446830749512
    6. ' coût' → logprob: -9.414446830749512
    7. ' cost' → logprob: -9.789446830749512
    8. 'po' → logprob: -10.164446830749512
    9. 'cou' → logprob: -10.289446830749512
    10. ',' → logprob: -10.414446830749512

Token 1308: ' de' (ID: 334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16099363565444946
    2. '=' → logprob: -1.9109935760498047
    3. ',' → logprob: -7.785993576049805
    4. ' =' → logprob: -8.285993576049805
    5. '   ' → logprob: -9.910993576049805
    6. '1' → logprob: -11.035993576049805
    7. ' ' → logprob: -11.535993576049805
    8. ':' → logprob: -11.785993576049805
    9. ' ,' → logprob: -12.160993576049805
    10. 'de' → logprob: -12.910993576049805

Token 1309: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. '1' → logprob: -12.250005722045898
    3. ' ' → logprob: -14.250005722045898
    4. '```' → logprob: -18.0000057220459
    5. '   ' → logprob: -19.8750057220459
    6. '۰' → logprob: -21.2500057220459
    7. '
' → logprob: -22.1250057220459
    8. '01' → logprob: -22.2500057220459
    9. '+' → logprob: -22.6250057220459
    10. '`' → logprob: -22.7500057220459

Token 1310: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.750000953674316
    3. '1' → logprob: -15.250000953674316
    4. '```' → logprob: -18.625
    5. '   ' → logprob: -19.125
    6. '۰' → logprob: -20.0
    7. '
' → logprob: -20.125
    8. 'zero' → logprob: -20.75
    9. '00' → logprob: -21.0625
    10. '`' → logprob: -21.4375

Token 1311: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19086118042469025
    2. ')' → logprob: -1.9408612251281738
    3. ',' → logprob: -3.815861225128174
    4. 'edges' → logprob: -5.440861225128174
    5. '(edges' → logprob: -6.565861225128174
    6. ')
' → logprob: -7.440861225128174
    7. ' edges' → logprob: -7.565861225128174
    8. '.append' → logprob: -7.690861225128174
    9. '[i' → logprob: -7.815861225128174
    10. ').' → logprob: -9.315860748291016

Token 1312: '   ' (ID: 271)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0835605263710022
    2. '   ' → logprob: -2.5835604667663574
    3. ' edges' → logprob: -5.458560466766357
    4. '```' → logprob: -7.958560466766357
    5. '.edges' → logprob: -10.333560943603516
    6. '(edges' → logprob: -11.208560943603516
    7. '``' → logprob: -13.208560943603516
    8. '    
' → logprob: -14.083560943603516
    9. '`' → logprob: -14.833560943603516
    10. '_edges' → logprob: -15.083560943603516

Token 1313: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.00043829824426211417
    2. ' edges' → logprob: -8.125438690185547
    3. '   ' → logprob: -8.875438690185547
    4. '```' → logprob: -13.250438690185547
    5. '.edges' → logprob: -14.625438690185547
    6. '(edges' → logprob: -15.750438690185547
    7. 'Edges' → logprob: -17.625438690185547
    8. '``' → logprob: -17.625438690185547
    9. '_edges' → logprob: -17.875438690185547
    10. '
' → logprob: -18.625438690185547

Token 1314: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -12.125006675720215
    3. '   ' → logprob: -13.375006675720215
    4. ' [' → logprob: -16.87500762939453
    5. '.append' → logprob: -17.87500762939453
    6. 'i' → logprob: -18.25000762939453
    7. '[I' → logprob: -18.75000762939453
    8. '.' → logprob: -20.12500762939453
    9. '[j' → logprob: -20.62500762939453
    10. '```' → logprob: -20.75000762939453

Token 1315: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.255649209022522
    2. '.append' → logprob: -1.505649209022522
    3. '.' → logprob: -6.005649089813232
    4. ').' → logprob: -6.755649089813232
    5. '   ' → logprob: -10.38064956665039
    6. 'append' → logprob: -10.50564956665039
    7. ' .' → logprob: -11.75564956665039
    8. '}.' → logprob: -12.13064956665039
    9. ' ].' → logprob: -13.00564956665039
    10. '.app' → logprob: -13.25564956665039

Token 1316: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. '.append' → logprob: -15.0
    3. ' append' → logprob: -17.0
    4. 'app' → logprob: -20.5
    5. '	append' → logprob: -21.125
    6. '_append' → logprob: -21.375
    7. 'appen' → logprob: -21.875
    8. 'insert' → logprob: -21.875
    9. 'Append' → logprob: -22.0
    10. 'push' → logprob: -22.75

Token 1317: '((' (ID: 2054)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0010387639049440622
    2. '((' → logprob: -7.001038551330566
    3. '(' → logprob: -9.001038551330566
    4. ' (' → logprob: -12.501038551330566
    5. '(
' → logprob: -16.251039505004883
    6. '   ' → logprob: -17.376039505004883
    7. '(I' → logprob: -17.751039505004883
    8. '(ii' → logprob: -18.251039505004883
    9. '	' → logprob: -19.751039505004883
    10. ' ' → logprob: -20.501039505004883

Token 1318: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.2200749754119897e-06
    2. ' i' → logprob: -13.250001907348633
    3. '   ' → logprob: -14.875001907348633
    4. '(i' → logprob: -16.875001907348633
    5. '	i' → logprob: -18.000001907348633
    6. '  ' → logprob: -20.500001907348633
    7. '       ' → logprob: -20.625001907348633
    8. ' ' → logprob: -20.625001907348633
    9. '
' → logprob: -20.625001907348633
    10. '{i' → logprob: -20.625001907348633

Token 1319: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002614550176076591
    2. ' -' → logprob: -8.250261306762695
    3. '1' → logprob: -16.375261306762695
    4. '-
' → logprob: -18.875261306762695
    5. '−' → logprob: -19.000261306762695
    6. '   ' → logprob: -19.250261306762695
    7. ' ' → logprob: -19.625261306762695
    8. '```' → logprob: -20.000261306762695
    9. ')' → logprob: -20.125261306762695
    10. '0' → logprob: -20.375261306762695

Token 1320: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.000003814697266
    4. ')' → logprob: -17.125003814697266
    5. '
' → logprob: -17.250003814697266
    6. '```' → logprob: -18.125003814697266
    7. '  ' → logprob: -18.625003814697266
    8. '    ' → logprob: -18.812503814697266
    9. ',' → logprob: -19.375003814697266
    10. '     ' → logprob: -20.187503814697266

Token 1321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013977376511320472
    2. ' ,' → logprob: -9.375140190124512
    3. '0' → logprob: -9.875140190124512
    4. '   ' → logprob: -13.000140190124512
    5. ',
' → logprob: -14.125140190124512
    6. '```' → logprob: -15.250140190124512
    7. '1' → logprob: -16.875139236450195
    8. '	' → logprob: -16.875139236450195
    9. ' ' → logprob: -17.750139236450195
    10. '‌,' → logprob: -18.000139236450195

Token 1322: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -21.875
    4. '۰' → logprob: -22.875
    5. ')' → logprob: -23.375
    6. '1' → logprob: -23.5
    7. '
' → logprob: -23.625
    8. '```' → logprob: -23.75
    9. '00' → logprob: -24.0
    10. ' ' → logprob: -24.375

Token 1323: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -22.0
    4. '۰' → logprob: -22.875
    5. ')' → logprob: -23.375
    6. '
' → logprob: -23.375
    7. '1' → logprob: -23.75
    8. '```' → logprob: -23.75
    9. '00' → logprob: -24.25
    10. '000' → logprob: -24.9375

Token 1324: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011192589066922665
    2. ')' → logprob: -4.511192798614502
    3. '))
' → logprob: -8.886192321777344
    4. ' ))' → logprob: -12.636192321777344
    5. '   ' → logprob: -13.636192321777344
    6. ')
' → logprob: -14.011192321777344
    7. ')))' → logprob: -14.761192321777344
    8. '))

' → logprob: -15.261192321777344
    9. ' )' → logprob: -15.761192321777344
    10. '));' → logprob: -15.761192321777344

Token 1325: '#' (ID: 2)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.31351980566978455
    2. 'for' → logprob: -1.313519835472107
    3. '   ' → logprob: -8.438519477844238
    4. '```' → logprob: -11.188519477844238
    5. '#' → logprob: -11.313519477844238
    6. ' edges' → logprob: -11.438519477844238
    7. '(edges' → logprob: -13.438519477844238
    8. ' for' → logprob: -13.688519477844238
    9. '.edges' → logprob: -14.188519477844238
    10. '    
' → logprob: -15.188519477844238

Token 1326: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.15310683415737e-05
    2. '#' → logprob: -10.750021934509277
    3. ' for' → logprob: -17.12502098083496
    4. 'edges' → logprob: -17.12502098083496
    5. '
' → logprob: -18.00002098083496
    6. '```' → logprob: -18.37502098083496
    7. 'from' → logprob: -19.62502098083496
    8. 'For' → logprob: -20.37502098083496
    9. '	for' → logprob: -20.37502098083496
    10. 'import' → logprob: -20.37502098083496

Token 1327: ' lit' (ID: 11980)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000356199947418645
    2. ' for' → logprob: -8.625356674194336
    3. 'continue' → logprob: -9.375356674194336
    4. '#' → logprob: -9.875356674194336
    5. '
' → logprob: -10.625356674194336
    6. 'range' → logprob: -12.375356674194336
    7. 'pour' → logprob: -12.750356674194336
    8. 'or' → logprob: -12.875356674194336
    9. '=' → logprob: -13.000356674194336
    10. 's' → logprob: -13.625356674194336

Token 1328: ' ensuite' (ID: 39713)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07401727885007858
    2. 'for' → logprob: -2.699017286300659
    3. ' m' → logprob: -6.19901704788208
    4. ' for' → logprob: -6.82401704788208
    5. '_' → logprob: -7.69901704788208
    6. 'range' → logprob: -8.574017524719238
    7. '_m' → logprob: -8.699017524719238
    8. '(m' → logprob: -10.449017524719238
    9. 'the' → logprob: -10.574017524719238
    10. '#' → logprob: -10.949017524719238

Token 1329: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.39101114869117737
    2. 'for' → logprob: -1.141011118888855
    3. ' for' → logprob: -6.3910112380981445
    4. ' m' → logprob: -6.7660112380981445
    5. '_m' → logprob: -7.6410112380981445
    6. '_for' → logprob: -8.391011238098145
    7. 'les' → logprob: -8.516011238098145
    8. '_' → logprob: -8.516011238098145
    9. 'pour' → logprob: -9.266011238098145
    10. 'le' → logprob: -10.516011238098145

Token 1330: ' lignes' (ID: 81687)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.044897258281707764
    2. ' for' → logprob: -3.4198973178863525
    3. 'times' → logprob: -6.294897079467773
    4. '=' → logprob: -6.544897079467773
    5. ' times' → logprob: -6.544897079467773
    6. ' lines' → logprob: -6.544897079467773
    7. 'range' → logprob: -7.044897079467773
    8. ' =' → logprob: -7.419897079467773
    9. '_lines' → logprob: -7.794897079467773
    10. 'lines' → logprob: -7.794897079467773

Token 1331: ' décr' (ID: 123041)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013784486800432205
    2. ' for' → logprob: -6.751378536224365
    3. ':' → logprob: -9.251378059387207
    4. ':
' → logprob: -9.501378059387207
    5. '#' → logprob: -11.751378059387207
    6. '=' → logprob: -12.251378059387207
    7. '
' → logprob: -12.251378059387207
    8. 'as' → logprob: -12.501378059387207
    9. 'in' → logprob: -13.001378059387207
    10. 'range' → logprob: -13.251378059387207

Token 1332: 'ivant' (ID: 100782)
  Prédit: 'ivant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivant' → logprob: -0.0014573780354112387
    2. 'ites' → logprob: -6.751457214355469
    3. 'iv' → logprob: -8.626457214355469
    4. 'ivent' → logprob: -9.626457214355469
    5. 'ite' → logprob: -11.126457214355469
    6. 'ev' → logprob: -12.126457214355469
    7. 'vant' → logprob: -12.126457214355469
    8. '#' → logprob: -12.251457214355469
    9. 'cr' → logprob: -12.376457214355469
    10. 'enant' → logprob: -13.751457214355469

Token 1333: ' des' (ID: 731)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5315968990325928
    2. '#' → logprob: -2.0315968990325928
    3. 'les' → logprob: -2.0315968990325928
    4. '_' → logprob: -3.6565968990325928
    5. 'for' → logprob: -3.6565968990325928
    6. ' m' → logprob: -3.9065968990325928
    7. 'des' → logprob: -4.031597137451172
    8. 'edges' → logprob: -4.531597137451172
    9. 'la' → logprob: -4.906597137451172
    10. ' les' → logprob: -5.031597137451172

Token 1334: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.7719454765319824
    2. 'edges' → logprob: -0.7719454765319824
    3. ' edges' → logprob: -4.021945476531982
    4. 'are' → logprob: -4.271945476531982
    5. '_' → logprob: -4.896945476531982
    6. '_edges' → logprob: -4.896945476531982
    7. ' ar' → logprob: -5.646945476531982
    8. 'additional' → logprob: -6.146945476531982
    9. 'm' → logprob: -6.271945476531982
    10. 's' → logprob: -6.271945476531982

Token 1335: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.10038188844919205
    2. 'cs' → logprob: -2.600381851196289
    3. 'r' → logprob: -4.225381851196289
    4. 'e' → logprob: -5.850381851196289
    5. 'c' → logprob: -6.100381851196289
    6. 'ches' → logprob: -7.350381851196289
    7. 'g' → logprob: -8.475381851196289
    8. 'gs' → logprob: -9.100381851196289
    9. 'es' → logprob: -9.225381851196289
    10. 'etes' → logprob: -9.475381851196289

Token 1336: ' supplémentaires' (ID: 99346)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004971051122993231
    2. ' for' → logprob: -5.754971027374268
    3. '
' → logprob: -7.504971027374268
    4. 'pour' → logprob: -8.129971504211426
    5. '=' → logprob: -8.379971504211426
    6. ',' → logprob: -8.754971504211426
    7. 's' → logprob: -8.879971504211426
    8. ' =' → logprob: -9.129971504211426
    9. '#' → logprob: -9.254971504211426
    10. '   ' → logprob: -9.754971504211426

Token 1337: ' avec' (ID: 3937)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.9160102712921798e-05
    2. ' for' → logprob: -10.875029563903809
    3. '
' → logprob: -11.625029563903809
    4. '#' → logprob: -14.000029563903809
    5. 'pour' → logprob: -15.125029563903809
    6. ',' → logprob: -17.250028610229492
    7. ':
' → logprob: -17.500028610229492
    8. '.
' → logprob: -17.875028610229492
    9. '.' → logprob: -17.875028610229492
    10. ':' → logprob: -18.125028610229492

Token 1338: ' leur' (ID: 9853)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3193754255771637
    2. 'a' → logprob: -1.8193753957748413
    3. 'LI' → logprob: -3.444375514984131
    4. 'for' → logprob: -3.944375514984131
    5. 'x' → logprob: -3.944375514984131
    6. 'l' → logprob: -3.944375514984131
    7. '#' → logprob: -5.444375514984131
    8. '
' → logprob: -5.944375514984131
    9. 'p' → logprob: -6.069375514984131
    10. 't' → logprob: -6.069375514984131

Token 1339: ' coût' (ID: 73109)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.17214009165763855
    2. 'a' → logprob: -1.922140121459961
    3. '#' → logprob: -5.797140121459961
    4. 'from' → logprob: -6.422140121459961
    5. 'for' → logprob: -6.547140121459961
    6. '
' → logprob: -6.797140121459961
    7. 'x' → logprob: -6.797140121459961
    8. 's' → logprob: -6.922140121459961
    9. '```' → logprob: -7.672140121459961
    10. 'v' → logprob: -8.047140121459961

Token 1340: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.990154047845863e-05
    2. ' for' → logprob: -10.000049591064453
    3. '
' → logprob: -12.625049591064453
    4. 'pour' → logprob: -15.000049591064453
    5. '   ' → logprob: -15.500049591064453
    6. '#' → logprob: -15.875049591064453
    7. '.
' → logprob: -16.000049591064453
    8. '.' → logprob: -16.250049591064453
    9. ':
' → logprob: -16.250049591064453
    10. ',' → logprob: -16.875049591064453

Token 1341: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -16.875
    3. '```' → logprob: -20.25
    4. '	for' → logprob: -22.5
    5. '
' → logprob: -23.125
    6. 'For' → logprob: -24.625
    7. '``' → logprob: -24.625
    8. '#' → logprob: -25.625
    9. 'while' → logprob: -27.125
    10. 'pour' → logprob: -27.5

Token 1342: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00041363044874742627
    2. ' _' → logprob: -8.12541389465332
    3. '_i' → logprob: -9.50041389465332
    4. '_j' → logprob: -10.25041389465332
    5. '_=' → logprob: -13.12541389465332
    6. '_in' → logprob: -14.25041389465332
    7. '_
' → logprob: -14.25041389465332
    8. '__' → logprob: -14.37541389465332
    9. '_e' → logprob: -14.50041389465332
    10. '_range' → logprob: -14.62541389465332

Token 1343: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12694543600082397
    2. 'in' → logprob: -2.1269454956054688
    3. 'range' → logprob: -12.126945495605469
    4. ' ' → logprob: -12.251945495605469
    5. '_' → logprob: -13.126945495605469
    6. 'import' → logprob: -13.376945495605469
    7. 's' → logprob: -13.626945495605469
    8. 'n' → logprob: -15.251945495605469
    9. ',' → logprob: -15.251945495605469
    10. '
' → logprob: -15.876945495605469

Token 1344: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. 'm' → logprob: -18.250431060791016
    4. 'LI' → logprob: -18.750431060791016
    5. 'r' → logprob: -18.875431060791016
    6. 'in' → logprob: -19.000431060791016
    7. '[' → logprob: -19.250431060791016
    8. ' ' → logprob: -19.750431060791016
    9. '(range' → logprob: -20.000431060791016
    10. 'rang' → logprob: -20.250431060791016

Token 1345: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0009753053891472518
    2. 'm' → logprob: -7.000975131988525
    3. '(' → logprob: -10.125975608825684
    4. '(
' → logprob: -11.500975608825684
    5. ' (' → logprob: -11.625975608825684
    6. ' m' → logprob: -13.250975608825684
    7. 'range' → logprob: -13.375975608825684
    8. '(range' → logprob: -14.500975608825684
    9. '
' → logprob: -14.875975608825684
    10. ' range' → logprob: -15.750975608825684

Token 1346: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.021221250295639038
    2. '):' → logprob: -4.271221160888672
    3. '():
' → logprob: -5.396221160888672
    4. ',' → logprob: -6.396221160888672
    5. '()):
' → logprob: -8.521221160888672
    6. ':
' → logprob: -9.271221160888672
    7. '(n' → logprob: -9.271221160888672
    8. ')' → logprob: -9.396221160888672
    9. '   ' → logprob: -9.521221160888672
    10. 'n' → logprob: -9.771221160888672

Token 1347: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6918949484825134
    2. '   ' → logprob: -0.9418949484825134
    3. 'a' → logprob: -2.316895008087158
    4. ' u' → logprob: -4.691895008087158
    5. 'x' → logprob: -7.191895008087158
    6. ' a' → logprob: -7.816895008087158
    7. 'l' → logprob: -8.19189453125
    8. '    
' → logprob: -9.56689453125
    9. '	u' → logprob: -9.56689453125
    10. 's' → logprob: -9.81689453125

Token 1348: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3491103947162628
    2. 'u' → logprob: -1.7241103649139404
    3. 'x' → logprob: -2.3491103649139404
    4. 'l' → logprob: -3.9741103649139404
    5. 's' → logprob: -6.9741106033325195
    6. 'L' → logprob: -7.4741106033325195
    7. 'f' → logprob: -8.47411060333252
    8. 'v' → logprob: -8.59911060333252
    9. 'i' → logprob: -10.09911060333252
    10. 'p' → logprob: -10.72411060333252

Token 1349: ' Lecture' (ID: 106534)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11911141872406006
    2. 'u' → logprob: -2.8691115379333496
    3. 'x' → logprob: -2.9941115379333496
    4. 'l' → logprob: -5.36911153793335
    5. 's' → logprob: -7.99411153793335
    6. 'L' → logprob: -8.369111061096191
    7. 'v' → logprob: -9.619111061096191
    8. 'f' → logprob: -9.869111061096191
    9. 'A' → logprob: -10.869111061096191
    10. 'p' → logprob: -10.994111061096191

Token 1350: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1388074904680252
    2. 'u' → logprob: -2.138807535171509
    3. 'x' → logprob: -4.76380729675293
    4. 'l' → logprob: -6.76380729675293
    5. ' a' → logprob: -7.38880729675293
    6. '   ' → logprob: -7.88880729675293
    7. ' u' → logprob: -8.01380729675293
    8. '(u' → logprob: -8.01380729675293
    9. '(a' → logprob: -8.63880729675293
    10. 'v' → logprob: -9.13880729675293

Token 1351: ' trois' (ID: 25564)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2447485774755478
    2. 'u' → logprob: -2.119748592376709
    3. 'x' → logprob: -2.369748592376709
    4. 'l' → logprob: -5.994748592376709
    5. 's' → logprob: -7.869748592376709
    6. 'LI' → logprob: -8.24474811553955
    7. 'L' → logprob: -9.49474811553955
    8. 'v' → logprob: -9.86974811553955
    9. 'li' → logprob: -10.11974811553955
    10. 'I' → logprob: -10.24474811553955

Token 1352: ' ent' (ID: 1121)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21406249701976776
    2. 'x' → logprob: -1.7140624523162842
    3. 'u' → logprob: -4.589062690734863
    4. 'l' → logprob: -6.214062690734863
    5. 'v' → logprob: -8.464062690734863
    6. ' a' → logprob: -9.089062690734863
    7. ' x' → logprob: -10.839062690734863
    8. 's' → logprob: -11.339062690734863
    9. 'L' → logprob: -11.339062690734863
    10. ' u' → logprob: -11.964062690734863

Token 1353: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.007383593823760748
    2. 'ières' → logprob: -5.882383823394775
    3. 't' → logprob: -6.007383823394775
    4. 'ints' → logprob: -7.632383823394775
    5. ' integers' → logprob: -7.632383823394775
    6. 'tokens' → logprob: -8.132383346557617
    7. 'ière' → logprob: -8.507383346557617
    8. 'ier' → logprob: -9.007383346557617
    9. 's' → logprob: -9.382383346557617
    10. 'i' → logprob: -9.507383346557617

Token 1354: ' sur' (ID: 1512)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.36774399876594543
    2. 'u' → logprob: -1.242743968963623
    3. '(u' → logprob: -4.367743968963623
    4. 'x' → logprob: -5.992743968963623
    5. '(a' → logprob: -6.117743968963623
    6. ' u' → logprob: -7.492743968963623
    7. 'l' → logprob: -7.867743968963623
    8. '   ' → logprob: -8.242744445800781
    9. ' a' → logprob: -8.367744445800781
    10. 's' → logprob: -9.242744445800781

Token 1355: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8908615708351135
    2. '_' → logprob: -1.2658615112304688
    3. '()' → logprob: -1.3908615112304688
    4. 'l' → logprob: -4.265861511230469
    5. 'sys' → logprob: -4.640861511230469
    6. ' la' → logprob: -5.140861511230469
    7. 'input' → logprob: -5.515861511230469
    8. '=sys' → logprob: -5.765861511230469
    9. '*' → logprob: -5.890861511230469
    10. '()*' → logprob: -6.140861511230469

Token 1356: ' ligne' (ID: 19583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0735042095184326
    2. 'sys' → logprob: -1.6985042095184326
    3. 'LI' → logprob: -2.0735042095184326
    4. 'n' → logprob: -2.3235042095184326
    5. 'range' → logprob: -2.6985042095184326
    6. '().' → logprob: -3.6985042095184326
    7. '1' → logprob: -3.9485042095184326
    8. 'ligne' → logprob: -3.9485042095184326
    9. 'l' → logprob: -4.448504447937012
    10. ' sys' → logprob: -4.448504447937012

Token 1357: ':' (ID: 25)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5051718354225159
    2. 'a' → logprob: -1.130171775817871
    3. 'x' → logprob: -2.880171775817871
    4. '(u' → logprob: -5.005171775817871
    5. '=' → logprob: -6.130171775817871
    6. 'l' → logprob: -6.505171775817871
    7. ',u' → logprob: -6.755171775817871
    8. '=u' → logprob: -6.880171775817871
    9. ' =' → logprob: -7.130171775817871
    10. '   ' → logprob: -7.380171775817871

Token 1358: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.030568011105060577
    2. 'u' → logprob: -4.0305681228637695
    3. 'x' → logprob: -4.5305681228637695
    4. 'l' → logprob: -6.9055681228637695
    5. 's' → logprob: -8.40556812286377
    6. ' a' → logprob: -8.53056812286377
    7. 'f' → logprob: -9.90556812286377
    8. 'v' → logprob: -10.78056812286377
    9. 'L' → logprob: -10.90556812286377
    10. ' u' → logprob: -11.28056812286377

Token 1359: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2722921073436737
    2. ',' → logprob: -2.147292137145996
    3. ',a' → logprob: -2.647292137145996
    4. 'u' → logprob: -3.772292137145996
    5. ',u' → logprob: -3.772292137145996
    6. 'x' → logprob: -7.022292137145996
    7. '=' → logprob: -7.022292137145996
    8. ' =' → logprob: -7.397292137145996
    9. ',r' → logprob: -8.397292137145996
    10. '=a' → logprob: -8.397292137145996

Token 1360: 'dé' (ID: 98340)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3516814112663269
    2. 'u' → logprob: -1.7266814708709717
    3. 'a' → logprob: -3.4766814708709717
    4. 'l' → logprob: -3.6016814708709717
    5. ',u' → logprob: -3.6016814708709717
    6. ',l' → logprob: -4.351681232452393
    7. 'x' → logprob: -4.851681232452393
    8. 'i' → logprob: -6.101681232452393
    9. 's' → logprob: -6.226681232452393
    10. ')' → logprob: -6.351681232452393

Token 1361: 'but' (ID: 8293)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19156400859355927
    2. ' =' → logprob: -2.8165640830993652
    3. '=' → logprob: -3.4415640830993652
    4. ',l' → logprob: -3.6915640830993652
    5. 'eft' → logprob: -3.6915640830993652
    6. ',r' → logprob: -4.191564083099365
    7. 'l' → logprob: -5.566564083099365
    8. 'i' → logprob: -5.566564083099365
    9. '=l' → logprob: -6.066564083099365
    10. 'r' → logprob: -6.316564083099365

Token 1362: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012298731599003077
    2. '),' → logprob: -7.376229763031006
    3. ' ,' → logprob: -8.376230239868164
    4. '=' → logprob: -9.376230239868164
    5. ',u' → logprob: -10.001230239868164
    6. ',
' → logprob: -10.126230239868164
    7. 'a' → logprob: -11.001230239868164
    8. ',v' → logprob: -11.126230239868164
    9. ',l' → logprob: -11.126230239868164
    10. ')' → logprob: -11.126230239868164

Token 1363: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0002015139180002734
    2. ' r' → logprob: -9.000201225280762
    3. 'a' → logprob: -10.375201225280762
    4. 'd' → logprob: -11.375201225280762
    5. 'x' → logprob: -11.375201225280762
    6. 'rr' → logprob: -11.875201225280762
    7. '
' → logprob: -12.250201225280762
    8. 'c' → logprob: -12.625201225280762
    9. 'cost' → logprob: -13.250201225280762
    10. '```' → logprob: -13.500201225280762

Token 1364: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -7.135819760151207e-05
    2. ' ,' → logprob: -10.25007152557373
    3. ',t' → logprob: -11.75007152557373
    4. ',c' → logprob: -12.00007152557373
    5. ',u' → logprob: -12.37507152557373
    6. ',x' → logprob: -12.50007152557373
    7. ',
' → logprob: -12.75007152557373
    8. ',w' → logprob: -13.37507152557373
    9. ',k' → logprob: -13.50007152557373
    10. ',a' → logprob: -13.50007152557373

Token 1365: 'fin' (ID: 6994)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5578741431236267
    2. 'cost' → logprob: -1.0578742027282715
    3. ',' → logprob: -3.4328742027282715
    4. 'co' → logprob: -3.8078742027282715
    5. ')' → logprob: -4.9328742027282715
    6. ' cost' → logprob: -5.3078742027282715
    7. ' c' → logprob: -5.4328742027282715
    8. 'x' → logprob: -6.0578742027282715
    9. 't' → logprob: -6.6828742027282715
    10. 'd' → logprob: -7.0578742027282715

Token 1366: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023333763238042593
    2. '),' → logprob: -8.87523365020752
    3. ' ,' → logprob: -9.37523365020752
    4. '   ' → logprob: -13.00023365020752
    5. ')' → logprob: -13.75023365020752
    6. '<|end|>' → logprob: -14.00023365020752
    7. ',u' → logprob: -14.37523365020752
    8. ',
' → logprob: -14.37523365020752
    9. ',n' → logprob: -14.62523365020752
    10. ',),' → logprob: -15.00023365020752

Token 1367: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09549491852521896
    2. 'd' → logprob: -2.4704949855804443
    3. 'cost' → logprob: -5.345494747161865
    4. 't' → logprob: -6.970494747161865
    5. ' c' → logprob: -8.345495223999023
    6. 'w' → logprob: -8.720495223999023
    7. 'x' → logprob: -8.845495223999023
    8. '
' → logprob: -9.470495223999023
    9. 'k' → logprob: -9.720495223999023
    10. ' d' → logprob: -10.095495223999023

Token 1368: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2256038635969162
    2. ' =' → logprob: -1.6006038188934326
    3. ',' → logprob: -8.725604057312012
    4. '=
' → logprob: -10.975604057312012
    5. '   ' → logprob: -11.850604057312012
    6. '=int' → logprob: -13.975604057312012
    7. '
' → logprob: -14.100604057312012
    8. '=input' → logprob: -14.350604057312012
    9. ' =
' → logprob: -14.350604057312012
    10. '	' → logprob: -15.350604057312012

Token 1369: 'co' (ID: 1191)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.1230035051703453
    2. ')' → logprob: -2.4980034828186035
    3. 'c' → logprob: -3.8730034828186035
    4. 'co' → logprob: -4.9980034828186035
    5. 'int' → logprob: -5.2480034828186035
    6. ' cost' → logprob: -8.248003959655762
    7. ')c' → logprob: -9.248003959655762
    8. 'cout' → logprob: -9.748003959655762
    9. ' coût' → logprob: -10.123003959655762
    10. '...' → logprob: -10.998003959655762

Token 1370: 'ût' (ID: 24581)
  Prédit: 'ût'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ût' → logprob: -0.37985262274742126
    2. 'ut' → logprob: -1.3798526525497437
    3. 'st' → logprob: -3.254852533340454
    4. 't' → logprob: -3.754852533340454
    5. '#' → logprob: -7.129852771759033
    6. ')' → logprob: -7.504852771759033
    7. '```' → logprob: -9.254852294921875
    8. '>' → logprob: -9.379852294921875
    9. ']' → logprob: -9.379852294921875
    10. '}' → logprob: -9.629852294921875

Token 1371: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1209191307425499
    2. ')=' → logprob: -2.2459192276000977
    3. '=' → logprob: -5.620919227600098
    4. '   ' → logprob: -6.370919227600098
    5. ' =' → logprob: -6.870919227600098
    6. ',' → logprob: -7.245919227600098
    7. '),' → logprob: -7.745919227600098
    8. '):' → logprob: -8.245919227600098
    9. '):
' → logprob: -8.995919227600098
    10. ')
' → logprob: -9.870919227600098

Token 1372: '   ' (ID: 271)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.021491272374987602
    2. '   ' → logprob: -3.896491289138794
    3. ' l' → logprob: -7.271491050720215
    4. ',l' → logprob: -9.146491050720215
    5. ',' → logprob: -9.896491050720215
    6. '	l' → logprob: -10.396491050720215
    7. '_l' → logprob: -10.521491050720215
    8. '    
' → logprob: -11.396491050720215
    9. '```' → logprob: -11.896491050720215
    10. ' =' → logprob: -12.021491050720215

Token 1373: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -3.292907877039397e-06
    2. '   ' → logprob: -12.87500286102295
    3. ' l' → logprob: -14.25000286102295
    4. '	l' → logprob: -17.375003814697266
    5. '_l' → logprob: -18.000003814697266
    6. 'L' → logprob: -19.125003814697266
    7. ',l' → logprob: -20.750003814697266
    8. '[l' → logprob: -20.750003814697266
    9. '
' → logprob: -21.500003814697266
    10. '­l' → logprob: -21.625003814697266

Token 1374: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00420483248308301
    2. ',r' → logprob: -5.504204750061035
    3. ' ,' → logprob: -9.004204750061035
    4. 'r' → logprob: -13.629204750061035
    5. ',l' → logprob: -14.504204750061035
    6. ',c' → logprob: -14.504204750061035
    7. ',n' → logprob: -15.004204750061035
    8. '_,' → logprob: -15.754204750061035
    9. ',int' → logprob: -15.879204750061035
    10. ',t' → logprob: -16.12920570373535

Token 1375: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.011047935113310814
    2. ' r' → logprob: -4.511047840118408
    3. ' ' → logprob: -17.26104736328125
    4. '   ' → logprob: -17.38604736328125
    5. ' ' → logprob: -17.51104736328125
    6. '	r' → logprob: -17.88604736328125
    7. '  ' → logprob: -18.38604736328125
    8. ' 
' → logprob: -19.57354736328125
    9. '```' → logprob: -20.32354736328125
    10. '­r' → logprob: -20.57354736328125

Token 1376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005638765869662166
    2. '=' → logprob: -8.000563621520996
    3. ',c' → logprob: -8.500563621520996
    4. ' =' → logprob: -11.250563621520996
    5. ' ,' → logprob: -11.750563621520996
    6. 'c' → logprob: -12.500563621520996
    7. ',l' → logprob: -15.750563621520996
    8. '_,' → logprob: -16.625564575195312
    9. ',
' → logprob: -17.250564575195312
    10. 's' → logprob: -17.500564575195312

Token 1377: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008046258008107543
    2. ' c' → logprob: -7.125804424285889
    3. 'cost' → logprob: -16.500804901123047
    4. '	c' → logprob: -17.750804901123047
    5. '
' → logprob: -19.625804901123047
    6. '   ' → logprob: -19.625804901123047
    7. ' ' → logprob: -19.625804901123047
    8. '
' → logprob: -20.250804901123047
    9. 'ct' → logprob: -20.375804901123047
    10. '  ' → logprob: -20.625804901123047

Token 1378: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016036950051784515
    2. ' =' → logprob: -4.1410369873046875
    3. ',' → logprob: -13.891036987304688
    4. '=
' → logprob: -13.891036987304688
    5. '=l' → logprob: -14.641036987304688
    6. '＝' → logprob: -15.391036987304688
    7. '   ' → logprob: -16.766036987304688
    8. ' =
' → logprob: -17.516036987304688
    9. ')=' → logprob: -17.766036987304688
    10. '=

' → logprob: -17.766036987304688

Token 1379: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.00012439649435691535
    2. ' LI' → logprob: -9.000123977661133
    3. 'Li' → logprob: -14.750123977661133
    4. 'I' → logprob: -14.875123977661133
    5. 'L' → logprob: -16.750123977661133
    6. 'li' → logprob: -17.000123977661133
    7. '   ' → logprob: -17.500123977661133
    8. ' ' → logprob: -17.875123977661133
    9. 'IL' → logprob: -18.375123977661133
    10. 'LIC' → logprob: -19.000123977661133

Token 1380: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08200111985206604
    2. '<|end|>' → logprob: -3.332001209259033
    3. ')' → logprob: -4.082001209259033
    4. 'edges' → logprob: -4.207001209259033
    5. '
' → logprob: -5.457001209259033
    6. ' edges' → logprob: -5.957001209259033
    7. '<|end|>' → logprob: -6.082001209259033
    8. '(edges' → logprob: -7.582001209259033
    9. ',' → logprob: -8.707000732421875
    10. '.' → logprob: -8.707000732421875

Token 1381: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019904850050807
    2. 'edges' → logprob: -4.019904613494873
    3. ' edges' → logprob: -6.644904613494873
    4. '<|end|>' → logprob: -8.769905090332031
    5. ')' → logprob: -9.894905090332031
    6. '.edges' → logprob: -10.269905090332031
    7. 'l' → logprob: -10.394905090332031
    8. '```' → logprob: -10.519905090332031
    9. '(edges' → logprob: -10.519905090332031
    10. '  ' → logprob: -10.769905090332031

Token 1382: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31734782457351685
    2. 'edges' → logprob: -1.317347764968872
    3. 'l' → logprob: -5.942348003387451
    4. ' edges' → logprob: -6.817348003387451
    5. 'r' → logprob: -8.942347526550293
    6. '#' (adapté à ' #') → logprob: -9.817347526550293
    7. 'if' → logprob: -10.692347526550293
    8. '    
' → logprob: -10.817347526550293
    9. '   ' → logprob: -10.817347526550293
    10. '(edges' → logprob: -10.817347526550293

Token 1383: ' On' (ID: 2160)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.011919545009732246
    2. 'l' → logprob: -4.8869194984436035
    3. '#' → logprob: -5.6369194984436035
    4. 'r' → logprob: -7.3869194984436035
    5. ' edges' → logprob: -10.011919975280762
    6. '   ' → logprob: -10.261919975280762
    7. 'if' → logprob: -10.511919975280762
    8. '(edges' → logprob: -12.386919975280762
    9. 'Edges' → logprob: -13.261919975280762
    10. '.edges' → logprob: -13.636919975280762

Token 1384: ' ajoute' (ID: 91611)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.3199964463710785
    2. 'l' → logprob: -1.9449964761734009
    3. '#' → logprob: -2.8199963569641113
    4. 'r' → logprob: -3.4449963569641113
    5. '   ' → logprob: -4.194996356964111
    6. ' edges' → logprob: -4.194996356964111
    7. '
' → logprob: -6.319996356964111
    8. '[l' → logprob: -6.819996356964111
    9. '.edges' → logprob: -7.319996356964111
    10. 'aj' → logprob: -7.444996356964111

Token 1385: ' une' (ID: 2463)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.5772890448570251
    2. '(r' → logprob: -1.45228910446167
    3. '(edges' → logprob: -1.70228910446167
    4. '   ' → logprob: -4.20228910446167
    5. '(l' → logprob: -5.57728910446167
    6. ' edges' → logprob: -6.20228910446167
    7. ' (' → logprob: -6.82728910446167
    8. '(' → logprob: -8.452288627624512
    9. '#' → logprob: -8.827288627624512
    10. '_edges' → logprob: -11.202288627624512

Token 1386: ' ar' (ID: 646)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.1546839475631714
    2. 'edge' → logprob: -2.654684066772461
    3. ' edges' → logprob: -3.029684066772461
    4. 'l' → logprob: -5.279684066772461
    5. 'tuple' → logprob: -5.654684066772461
    6. '(edges' → logprob: -6.029684066772461
    7. ' edge' → logprob: -6.404684066772461
    8. 's' → logprob: -6.404684066772461
    9. 'r' → logprob: -6.654684066772461
    10. '(r' → logprob: -6.779684066772461

Token 1387: 'ête' (ID: 16808)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.5679256319999695
    2. 'r' → logprob: -0.9429256319999695
    3. 'g' → logprob: -4.567925453186035
    4. 'd' → logprob: -4.692925453186035
    5. 'rg' → logprob: -5.192925453186035
    6. 'ges' → logprob: -5.567925453186035
    7. 'pp' → logprob: -5.567925453186035
    8. 'range' → logprob: -5.817925453186035
    9. 't' → logprob: -6.442925453186035
    10. 'row' → logprob: -7.067925453186035

Token 1388: ' du' (ID: 1462)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.06216362863779068
    2. '[r' → logprob: -2.8121635913848877
    3. '   ' → logprob: -9.187163352966309
    4. 'l' → logprob: -10.437163352966309
    5. 'edges' → logprob: -10.687163352966309
    6. '[' → logprob: -10.812163352966309
    7. '[(' → logprob: -11.562163352966309
    8. 'r' → logprob: -12.187163352966309
    9. '(l' → logprob: -12.687163352966309
    10. '.append' → logprob: -13.687163352966309

Token 1389: ' sommet' (ID: 130502)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0018854460213333368
    2. 'r' → logprob: -6.626885414123535
    3. '(l' → logprob: -7.501885414123535
    4. '(r' → logprob: -13.251885414123535
    5. ' l' → logprob: -13.251885414123535
    6. '   ' → logprob: -13.876885414123535
    7. '	l' → logprob: -14.126885414123535
    8. '[l' → logprob: -14.876885414123535
    9. ' (' → logprob: -15.001885414123535
    10. '```' → logprob: -15.501885414123535

Token 1390: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00012570773833431304
    2. '(l' → logprob: -9.125125885009766
    3. '[l' → logprob: -11.250125885009766
    4. '   ' → logprob: -13.000125885009766
    5. ' l' → logprob: -14.375125885009766
    6. '	l' → logprob: -14.750125885009766
    7. '
' → logprob: -15.375125885009766
    8. 'r' → logprob: -15.750125885009766
    9. 'from' → logprob: -17.500125885009766
    10. ' (' → logprob: -17.500125885009766

Token 1391: '-' (ID: 12)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.22087959945201874
    2. '-' → logprob: -1.7208795547485352
    3. 'l' → logprob: -4.595879554748535
    4. '[r' → logprob: -5.220879554748535
    5. '[' → logprob: -6.595879554748535
    6. '(l' → logprob: -7.720879554748535
    7. ' -' → logprob: -7.845879554748535
    8. '   ' → logprob: -7.970879554748535
    9. '#' → logprob: -8.095879554748535
    10. 'r' → logprob: -8.220879554748535

Token 1392: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. 'l' → logprob: -12.500009536743164
    3. '```' → logprob: -12.500009536743164
    4. ' ' → logprob: -13.750009536743164
    5. '`' → logprob: -15.375009536743164
    6. 'r' → logprob: -16.125009536743164
    7. '１' → logprob: -16.500009536743164
    8. '#' → logprob: -16.625009536743164
    9. '(l' → logprob: -16.750009536743164
    10. '۱' → logprob: -17.000009536743164

Token 1393: ' (' (ID: 350)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.022493133321404457
    2. 'edges' → logprob: -4.272493362426758
    3. 'to' → logprob: -6.397493362426758
    4. ' to' → logprob: -6.397493362426758
    5. '[l' → logprob: -6.897493362426758
    6. ',' → logprob: -7.022493362426758
    7. '```' → logprob: -7.147493362426758
    8. 'r' → logprob: -7.647493362426758
    9. ' edges' → logprob: -8.022493362426758
    10. '   ' → logprob: -8.147493362426758

Token 1394: 'en' (ID: 262)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.26608240604400635
    2. 'l' → logprob: -2.141082286834717
    3. 'to' → logprob: -2.266082286834717
    4. ' to' → logprob: -4.766082286834717
    5. ')' → logprob: -6.766082286834717
    6. ',' → logprob: -6.891082286834717
    7. '[r' → logprob: -7.891082286834717
    8. '(r' → logprob: -8.141082763671875
    9. 'à' → logprob: -8.891082763671875
    10. '   ' → logprob: -9.016082763671875

Token 1395: ' Python' (ID: 26534)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01781133934855461
    2. 'range' → logprob: -4.517811298370361
    3. '0' → logprob: -5.767811298370361
    4. 'r' → logprob: -6.392811298370361
    5. '[l' → logprob: -7.017811298370361
    6. '#' → logprob: -7.767811298370361
    7. 'index' → logprob: -9.01781177520752
    8. '```' → logprob: -9.01781177520752
    9. ' l' → logprob: -9.14281177520752
    10. 'python' → logprob: -9.64281177520752

Token 1396: ' les' (ID: 1341)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.38174203038215637
    2. ')' → logprob: -1.381742000579834
    3. '[r' → logprob: -4.131742000579834
    4. '[' → logprob: -4.381742000579834
    5. ',' → logprob: -5.131742000579834
    6. ')[' → logprob: -5.131742000579834
    7. 'l' → logprob: -5.256742000579834
    8. '][' → logprob: -5.631742000579834
    9. '```' → logprob: -5.756742000579834
    10. '-' → logprob: -5.881742000579834

Token 1397: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.6563202142715454
    2. 'l' → logprob: -0.9063202142715454
    3. ' indices' → logprob: -2.781320095062256
    4. 'index' → logprob: -5.156320095062256
    5. 'indexes' → logprob: -5.281320095062256
    6. ' l' → logprob: -6.406320095062256
    7. '[l' → logprob: -6.906320095062256
    8. ' indexes' → logprob: -7.906320095062256
    9. '0' → logprob: -8.281320571899414
    10. 'indice' → logprob: -8.531320571899414

Token 1398: ' commencent' (ID: 184941)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.11354990303516388
    2. 'l' → logprob: -3.7385499477386475
    3. '[' → logprob: -3.8635499477386475
    4. ')' → logprob: -4.113549709320068
    5. '-' → logprob: -5.113549709320068
    6. '[
' → logprob: -5.238549709320068
    7. '[r' → logprob: -5.488549709320068
    8. '<|end|>' → logprob: -5.488549709320068
    9. '[n' → logprob: -5.613549709320068
    10. ' l' → logprob: -5.738549709320068

Token 1399: ' à' (ID: 1221)
  Prédit: '=l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=l' → logprob: -0.9617331624031067
    2. 'à' → logprob: -1.711733102798462
    3. 'l' → logprob: -2.086733102798462
    4. '=' → logprob: -2.336733102798462
    5. '(l' → logprob: -2.586733102798462
    6. '[l' → logprob: -2.586733102798462
    7. ' à' → logprob: -4.086733341217041
    8. ' at' → logprob: -4.586733341217041
    9. ',l' → logprob: -4.711733341217041
    10. 'from' → logprob: -5.211733341217041

Token 1400: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016182278341148049
    2. 'l' → logprob: -8.750162124633789
    3. 'z' → logprob: -13.000162124633789
    4. ' ' → logprob: -14.625162124633789
    5. '```' → logprob: -15.000162124633789
    6. 'zero' → logprob: -15.125162124633789
    7. ' l' → logprob: -16.87516212463379
    8. ' zéro' → logprob: -17.50016212463379
    9. '#' → logprob: -17.75016212463379
    10. '۰' → logprob: -18.37516212463379

Token 1401: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4498052223643754e-05
    2. 'l' → logprob: -11.250014305114746
    3. 'z' → logprob: -14.000014305114746
    4. 'zero' → logprob: -14.750014305114746
    5. '```' → logprob: -15.625014305114746
    6. ' ' → logprob: -16.625015258789062
    7. '1' → logprob: -17.750015258789062
    8. '
' → logprob: -18.250015258789062
    9. '#' → logprob: -19.000015258789062
    10. ' zéro' → logprob: -19.375015258789062

Token 1402: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.70002281665802
    2. '   ' → logprob: -1.32502281665802
    3. ',' → logprob: -1.45002281665802
    4. ' à' → logprob: -6.9500226974487305
    5. 'edges' → logprob: -7.5750226974487305
    6. '```' → logprob: -7.9500226974487305
    7. '),' → logprob: -8.82502269744873
    8. ' ,' → logprob: -8.95002269744873
    9. 'à' → logprob: -8.95002269744873
    10. ' )' → logprob: -9.20002269744873

Token 1403: ' vers' (ID: 3640)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.16266842186450958
    2. '[r' → logprob: -2.412668466567993
    3. '[' → logprob: -3.162668466567993
    4. '   ' → logprob: -4.662668228149414
    5. ' edges' → logprob: -5.287668228149414
    6. '[l' → logprob: -6.412668228149414
    7. '.edges' → logprob: -7.912668228149414
    8. ')' → logprob: -8.037668228149414
    9. '][' → logprob: -8.162668228149414
    10. '(edges' → logprob: -8.537668228149414

Token 1404: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00013512482109945267
    2. ' r' → logprob: -9.62513542175293
    3. '(r' → logprob: -9.87513542175293
    4. 'edges' → logprob: -11.62513542175293
    5. '[r' → logprob: -12.37513542175293
    6. '
' → logprob: -12.87513542175293
    7. '   ' → logprob: -14.62513542175293
    8. 'l' → logprob: -15.50013542175293
    9. ' edges' → logprob: -15.50013542175293
    10. '	r' → logprob: -15.62513542175293

Token 1405: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.265633419388905e-05
    2. ' -' → logprob: -10.125062942504883
    3. '[r' → logprob: -12.375062942504883
    4. 'r' → logprob: -12.625062942504883
    5. '[' → logprob: -12.625062942504883
    6. '```' → logprob: -12.625062942504883
    7. '-r' → logprob: -13.125062942504883
    8. '
' → logprob: -13.750062942504883
    9. '#' → logprob: -13.875062942504883
    10. '[-' → logprob: -14.375062942504883

Token 1406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -11.625027656555176
    3. 'r' → logprob: -11.750027656555176
    4. '```' → logprob: -11.875027656555176
    5. '
' → logprob: -13.875027656555176
    6. '2' → logprob: -14.625027656555176
    7. '<|end|>' → logprob: -14.625027656555176
    8. ')' → logprob: -14.750027656555176
    9. '   ' → logprob: -14.875027656555176
    10. '-' → logprob: -15.000027656555176

Token 1407: ' avec' (ID: 3937)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.8735166788101196
    2. '[r' → logprob: -1.1235166788101196
    3. '   ' → logprob: -2.37351655960083
    4. '.append' → logprob: -3.24851655960083
    5. '[' → logprob: -3.87351655960083
    6. '(edges' → logprob: -3.99851655960083
    7. ' edges' → logprob: -4.12351655960083
    8. '.edges' → logprob: -4.24851655960083
    9. ',' → logprob: -4.74851655960083
    10. '```' → logprob: -4.87351655960083

Token 1408: ' le' (ID: 505)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0015459299320355058
    2. '(c' → logprob: -6.6265459060668945
    3. ' c' → logprob: -8.626545906066895
    4. ' (' → logprob: -10.626545906066895
    5. '
' → logprob: -12.251545906066895
    6. 'cost' → logprob: -12.876545906066895
    7. '(' → logprob: -13.126545906066895
    8. 'the' → logprob: -13.626545906066895
    9. '   ' → logprob: -13.751545906066895
    10. ')c' → logprob: -13.751545906066895

Token 1409: ' coût' (ID: 73109)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00046868418576195836
    2. 'cost' → logprob: -7.875468730926514
    3. 'co' → logprob: -9.375468254089355
    4. ' c' → logprob: -13.125468254089355
    5. 'cout' → logprob: -14.375468254089355
    6. '
' → logprob: -14.375468254089355
    7. ' coût' → logprob: -15.500468254089355
    8. '+' → logprob: -16.625469207763672
    9. ' cost' → logprob: -16.625469207763672
    10. '```' → logprob: -16.875469207763672

Token 1410: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0009527906076982617
    2. ' c' → logprob: -7.87595272064209
    3. '(c' → logprob: -7.87595272064209
    4. ',' → logprob: -9.37595272064209
    5. ')c' → logprob: -10.25095272064209
    6. ' (' → logprob: -10.87595272064209
    7. '.append' → logprob: -11.25095272064209
    8. '```' → logprob: -11.50095272064209
    9. ',c' → logprob: -12.00095272064209
    10. '   ' → logprob: -12.12595272064209

Token 1411: '.
' (ID: 558)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.6026995778083801
    2. '   ' → logprob: -0.8526995778083801
    3. ' edges' → logprob: -4.4776997566223145
    4. '[' → logprob: -4.4776997566223145
    5. '.edges' → logprob: -6.8526997566223145
    6. '(edges' → logprob: -7.2276997566223145
    7. ')' → logprob: -7.3526997566223145
    8. ').' → logprob: -7.7276997566223145
    9. ')
' → logprob: -8.727699279785156
    10. '
' → logprob: -8.852699279785156

Token 1412: '   ' (ID: 271)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0016697037499397993
    2. ' edges' → logprob: -6.626669883728027
    3. '   ' → logprob: -8.626669883728027
    4. '```' → logprob: -9.626669883728027
    5. '.edges' → logprob: -9.876669883728027
    6. '(edges' → logprob: -10.126669883728027
    7. '``' → logprob: -12.626669883728027
    8. '
' → logprob: -13.751669883728027
    9. ')' → logprob: -14.376669883728027
    10. '_edges' → logprob: -15.001669883728027

Token 1413: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -2.5107177862082608e-05
    2. ' edges' → logprob: -10.625024795532227
    3. '
' → logprob: -14.750024795532227
    4. '```' → logprob: -15.750024795532227
    5. '.edges' → logprob: -16.000024795532227
    6. '(edges' → logprob: -16.625024795532227
    7. '   ' → logprob: -17.125024795532227
    8. '#' → logprob: -19.000024795532227
    9. 'Edges' → logprob: -19.625024795532227
    10. '``' → logprob: -19.875024795532227

Token 1414: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -1.7432603272027336e-06
    2. 'l' → logprob: -14.250001907348633
    3. '[' → logprob: -14.500001907348633
    4. '   ' → logprob: -14.750001907348633
    5. '[r' → logprob: -16.875001907348633
    6. '[L' → logprob: -17.625001907348633
    7. '	l' → logprob: -17.875001907348633
    8. '
' → logprob: -18.250001907348633
    9. '```' → logprob: -18.500001907348633
    10. '[
' → logprob: -18.875001907348633

Token 1415: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001564586127642542
    2. '[' → logprob: -9.25015640258789
    3. ' -' → logprob: -10.12515640258789
    4. '[-' → logprob: -11.12515640258789
    5. '1' → logprob: -12.62515640258789
    6. '[l' → logprob: -14.62515640258789
    7. '0' → logprob: -15.00015640258789
    8. 'l' → logprob: -15.25015640258789
    9. '   ' → logprob: -15.37515640258789
    10. '#' → logprob: -15.75015640258789

Token 1416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. '
' → logprob: -14.375001907348633
    3. '```' → logprob: -14.625001907348633
    4. ' ' → logprob: -14.875001907348633
    5. '   ' → logprob: -15.500001907348633
    6. '2' → logprob: -16.812501907348633
    7. '１' → logprob: -17.000001907348633
    8. '

' → logprob: -17.312501907348633
    9. '۱' → logprob: -17.375001907348633
    10. 'r' → logprob: -17.562501907348633

Token 1417: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.40122443437576294
    2. '.append' → logprob: -1.1512243747711182
    3. ').' → logprob: -4.276224613189697
    4. '   ' → logprob: -8.401224136352539
    5. '.' → logprob: -9.276224136352539
    6. ']' → logprob: -11.276224136352539
    7. 'append' → logprob: -12.151224136352539
    8. '.app' → logprob: -12.901224136352539
    9. ' .' → logprob: -12.901224136352539
    10. ' ].' → logprob: -13.026224136352539

Token 1418: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. '.append' → logprob: -16.5
    3. ' append' → logprob: -18.75
    4. 'app' → logprob: -22.0
    5. '	append' → logprob: -22.125
    6. 'appen' → logprob: -22.25
    7. '_append' → logprob: -24.5
    8. 'Append' → logprob: -24.75
    9. '```' → logprob: -26.0
    10. 'push' → logprob: -27.75

Token 1419: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: 0.0
    2. '(r' → logprob: -17.125
    3. '(' → logprob: -18.25
    4. ' ((' → logprob: -19.75
    5. '(
' → logprob: -21.25
    6. '```' → logprob: -21.875
    7. '   ' → logprob: -22.5
    8. '(((' → logprob: -22.75
    9. '[(' → logprob: -23.75
    10. '>((' → logprob: -24.0

Token 1420: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.438573680294212e-06
    2. '(r' → logprob: -12.875005722045898
    3. ' r' → logprob: -12.875005722045898
    4. '[r' → logprob: -16.2500057220459
    5. '
' → logprob: -17.2500057220459
    6. '	r' → logprob: -18.1250057220459
    7. '   ' → logprob: -18.1250057220459
    8. ')' → logprob: -18.7500057220459
    9. ',r' → logprob: -19.3750057220459
    10. '```' → logprob: -19.6250057220459

Token 1421: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.590104698669165e-05
    2. ' -' → logprob: -9.375085830688477
    3. '<|end|>' → logprob: -14.750085830688477
    4. '[' → logprob: -15.375085830688477
    5. '```' → logprob: -16.000085830688477
    6. '–' → logprob: -16.375085830688477
    7. '   ' → logprob: -16.750085830688477
    8. '#' → logprob: -17.125085830688477
    9. '−' → logprob: -17.250085830688477
    10. '<|end|>' → logprob: -17.250085830688477

Token 1422: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.875001907348633
    3. '2' → logprob: -15.250001907348633
    4. 'r' → logprob: -15.500001907348633
    5. '```' → logprob: -16.625001907348633
    6. '<|end|>' → logprob: -16.750001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '-' → logprob: -17.875001907348633
    9. ')' → logprob: -18.125001907348633
    10. '
' → logprob: -19.500001907348633

Token 1423: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002387018030276522
    2. ',c' → logprob: -8.375238418579102
    3. ' ,' → logprob: -11.875238418579102
    4. ',
' → logprob: -14.250238418579102
    5. '),' → logprob: -15.625238418579102
    6. '‌,' → logprob: -16.2502384185791
    7. '   ' → logprob: -16.3752384185791
    8. 'c' → logprob: -16.5002384185791
    9. '```' → logprob: -17.2502384185791
    10. ')' → logprob: -18.7502384185791

Token 1424: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00026169343618676066
    2. ' c' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.750261306762695
    4. ')c' → logprob: -16.125261306762695
    5. '	c' → logprob: -16.625261306762695
    6. '
' → logprob: -19.000261306762695
    7. '```' → logprob: -19.125261306762695
    8. ' ' → logprob: -19.625261306762695
    9. '    ' → logprob: -19.625261306762695
    10. ' ' → logprob: -19.875261306762695

Token 1425: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -3.023293538717553e-05
    2. ')' → logprob: -10.625030517578125
    3. '))
' → logprob: -12.250030517578125
    4. '   ' → logprob: -14.875030517578125
    5. ')))' → logprob: -15.125030517578125
    6. ' ))' → logprob: -15.125030517578125
    7. '));' → logprob: -16.125030517578125
    8. '),' → logprob: -17.250030517578125
    9. '+' → logprob: -17.625030517578125
    10. '()))' → logprob: -18.125030517578125

Token 1426: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.017815547063946724
    2. '#' → logprob: -4.517815589904785
    3. 'd' → logprob: -5.017815589904785
    4. 'distance' → logprob: -9.392815589904785
    5. '```' → logprob: -10.892815589904785
    6. 'D' → logprob: -11.517815589904785
    7. 'res' → logprob: -11.767815589904785
    8. 'result' → logprob: -13.142815589904785
    9. 'ans' → logprob: -13.392815589904785
    10. 'dis' → logprob: -14.767815589904785

Token 1427: ' Calcul' (ID: 57243)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.006105116568505764
    2. 'd' → logprob: -5.256104946136475
    3. '#' → logprob: -7.381104946136475
    4. 'distance' → logprob: -9.006105422973633
    5. 'res' → logprob: -9.131105422973633
    6. 'result' → logprob: -12.256105422973633
    7. 'D' → logprob: -12.506105422973633
    8. 'dp' → logprob: -12.881105422973633
    9. 'ans' → logprob: -13.381105422973633
    10. 'dis' → logprob: -13.506105422973633

Token 1428: ' des' (ID: 731)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.44151052832603455
    2. 'd' → logprob: -1.066510558128357
    3. 'distance' → logprob: -5.1915106773376465
    4. '=' → logprob: -6.3165106773376465
    5. 'de' → logprob: -6.4415106773376465
    6. 'des' → logprob: -6.9415106773376465
    7. ' =' → logprob: -6.9415106773376465
    8. 's' → logprob: -7.3165106773376465
    9. '#' → logprob: -7.9415106773376465
    10. 'result' → logprob: -8.066510200500488

Token 1429: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01480313390493393
    2. 'd' → logprob: -4.264802932739258
    3. 'distance' → logprob: -7.514802932739258
    4. '#' → logprob: -10.014802932739258
    5. ' distances' → logprob: -10.139802932739258
    6. 'plus' → logprob: -12.264802932739258
    7. ' dist' → logprob: -13.764802932739258
    8. 'cost' → logprob: -14.264802932739258
    9. 'me' → logprob: -14.389802932739258
    10. 'short' → logprob: -14.639802932739258

Token 1430: ' minim' (ID: 23874)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13563935458660126
    2. 'dist' → logprob: -2.1356394290924072
    3. '=' → logprob: -4.885639190673828
    4. ' =' → logprob: -7.385639190673828
    5. 'distance' → logprob: -7.885639190673828
    6. '=d' → logprob: -10.010639190673828
    7. 'from' → logprob: -10.510639190673828
    8. 'result' → logprob: -11.010639190673828
    9. 'ans' → logprob: -12.010639190673828
    10. '```' → logprob: -12.010639190673828

Token 1431: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.0019397038267925382
    2. 'es' → logprob: -6.25193977355957
    3. 'aux' → logprob: -12.00193977355957
    4. 'um' → logprob: -13.75193977355957
    5. 'ale' → logprob: -13.75193977355957
    6. 'a' → logprob: -14.00193977355957
    7. '#' → logprob: -14.62693977355957
    8. 'als' → logprob: -15.00193977355957
    9. 'al' → logprob: -15.12693977355957
    10. 'as' → logprob: -15.25193977355957

Token 1432: ' du' (ID: 1462)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3159734010696411
    2. 'dist' → logprob: -1.3159734010696411
    3. ' =' → logprob: -6.815973281860352
    4. '=' → logprob: -7.190973281860352
    5. 'distance' → logprob: -7.315973281860352
    6. 'from' → logprob: -9.190973281860352
    7. 'result' → logprob: -10.190973281860352
    8. '=d' → logprob: -10.440973281860352
    9. 'res' → logprob: -11.940973281860352
    10. ' distances' → logprob: -12.315973281860352

Token 1433: ' sommet' (ID: 130502)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014442270912695676
    2. 'd' → logprob: -9.000144004821777
    3. 'n' → logprob: -11.000144004821777
    4. ' ' → logprob: -12.750144004821777
    5. 's' → logprob: -14.250144004821777
    6. '#' → logprob: -14.875144004821777
    7. '(' → logprob: -16.375144958496094
    8. '[' → logprob: -16.750144958496094
    9. 'dé' → logprob: -17.125144958496094
    10. '1' → logprob: -17.250144958496094

Token 1434: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009148012613877654
    2. 'n' → logprob: -7.000914573669434
    3. 's' → logprob: -13.750914573669434
    4. ' ' → logprob: -13.875914573669434
    5. '[' → logprob: -14.875914573669434
    6. '[n' → logprob: -15.125914573669434
    7. '```' → logprob: -15.625914573669434
    8. '(n' → logprob: -15.625914573669434
    9. 'd' → logprob: -16.12591552734375
    10. '(' → logprob: -16.62591552734375

Token 1435: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. 'n' → logprob: -10.125040054321289
    3. '(n' → logprob: -18.62504005432129
    4. 's' → logprob: -18.87504005432129
    5. ' ' → logprob: -19.12504005432129
    6. '[n' → logprob: -19.50004005432129
    7. '[' → logprob: -19.87504005432129
    8. '(' → logprob: -20.00004005432129
    9. '```' → logprob: -20.50004005432129
    10. '۰' → logprob: -20.62504005432129

Token 1436: ' à' (ID: 1221)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8457144498825073
    2. ' =' → logprob: -0.9707144498825073
    3. '=' → logprob: -1.7207144498825073
    4. '=d' → logprob: -5.095714569091797
    5. 'dist' → logprob: -5.345714569091797
    6. 'to' → logprob: -7.345714569091797
    7. ' d' → logprob: -7.595714569091797
    8. 'distance' → logprob: -8.595714569091797
    9. 'result' → logprob: -8.845714569091797
    10. ' to' → logprob: -8.970714569091797

Token 1437: ' tous' (ID: 10688)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001287736464291811
    2. 'range' → logprob: -7.751287937164307
    3. '[n' → logprob: -8.126287460327148
    4. 'le' → logprob: -8.501287460327148
    5. 'la' → logprob: -8.751287460327148
    6. 'l' → logprob: -9.751287460327148
    7. '(n' → logprob: -10.501287460327148
    8. ' n' → logprob: -10.751287460327148
    9. 's' → logprob: -10.751287460327148
    10. 'les' → logprob: -11.251287460327148

Token 1438: ' les' (ID: 1341)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.673178493976593
    2. ')' → logprob: -2.1731784343719482
    3. 's' → logprob: -2.6731784343719482
    4. ',' → logprob: -3.5481784343719482
    5. 'es' → logprob: -3.6731784343719482
    6. '[' → logprob: -3.7981784343719482
    7. 'des' → logprob: -3.9231784343719482
    8. '[:' → logprob: -3.9231784343719482
    9. '(s' → logprob: -4.173178672790527
    10. 'points' → logprob: -4.298178672790527

Token 1439: ' autres' (ID: 18701)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.035761114209890366
    2. 'n' → logprob: -4.285760879516602
    3. 's' → logprob: -4.410760879516602
    4. 'aut' → logprob: -5.160760879516602
    5. '#' → logprob: -7.035760879516602
    6. '(n' → logprob: -7.410760879516602
    7. 'range' → logprob: -8.035760879516602
    8. 'points' → logprob: -8.035760879516602
    9. 'summ' → logprob: -8.035760879516602
    10. ' somm' → logprob: -8.160760879516602

Token 1440: ' somm' (ID: 44830)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12708108127117157
    2. 'dist' → logprob: -2.1270811557769775
    3. 'distance' → logprob: -8.877080917358398
    4. 'result' → logprob: -12.377080917358398
    5. 'dis' → logprob: -13.002080917358398
    6. 'res' → logprob: -13.127080917358398
    7. ' =' → logprob: -13.252080917358398
    8. 'print' → logprob: -14.627080917358398
    9. 'answer' → logprob: -14.752080917358398
    10. 'ans' → logprob: -14.752080917358398

Token 1441: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.00027301779482513666
    2. 'ots' → logprob: -9.500272750854492
    3. 'êts' → logprob: -9.625272750854492
    4. 'ts' → logprob: -10.000272750854492
    5. '#' → logprob: -10.375272750854492
    6. 'è' → logprob: -11.000272750854492
    7. 'uts' → logprob: -12.125272750854492
    8. 's' → logprob: -12.500272750854492
    9. 'ètres' → logprob: -12.625272750854492
    10. 'ats' → logprob: -12.625272750854492

Token 1442: ' avec' (ID: 3937)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2537578344345093
    2. 'd' → logprob: -1.5037578344345093
    3. 'distance' → logprob: -6.378757953643799
    4. 'res' → logprob: -10.00375747680664
    5. 'result' → logprob: -10.50375747680664
    6. ' dist' → logprob: -11.50375747680664
    7. ' distances' → logprob: -11.62875747680664
    8. '
' → logprob: -11.75375747680664
    9. ' =' → logprob: -12.12875747680664
    10. 'dis' → logprob: -12.25375747680664

Token 1443: ' D' (ID: 415)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.9266199160483666e-05
    2. ' d' → logprob: -10.875019073486328
    3. 'dist' → logprob: -15.625019073486328
    4. 'def' → logprob: -17.375019073486328
    5. 'la' → logprob: -17.375019073486328
    6. '```' → logprob: -17.500019073486328
    7. 'distance' → logprob: -17.500019073486328
    8. '
' → logprob: -17.750019073486328
    9. '#' → logprob: -17.750019073486328
    10. 'edges' → logprob: -18.500019073486328

Token 1444: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -1.8550976164988242e-05
    2. 'ijk' → logprob: -11.750018119812012
    3. 'jik' → logprob: -12.375018119812012
    4. 't' → logprob: -13.375018119812012
    5. 'ij' → logprob: -13.375018119812012
    6. 'istance' → logprob: -14.000018119812012
    7. 'ik' → logprob: -15.000018119812012
    8. '#' → logprob: -15.125018119812012
    9. 'ist' → logprob: -15.500018119812012
    10. '   ' → logprob: -15.500018119812012

Token 1445: '.
' (ID: 558)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2525574266910553
    2. 'd' → logprob: -1.502557396888733
    3. 'distance' → logprob: -7.752557277679443
    4. 'res' → logprob: -9.627557754516602
    5. 'result' → logprob: -9.627557754516602
    6. '
' → logprob: -10.627557754516602
    7. ' =' → logprob: -11.252557754516602
    8. ' distances' → logprob: -11.752557754516602
    9. '```' → logprob: -12.377557754516602
    10. 'answer' → logprob: -12.502557754516602

Token 1446: 'd' (ID: 67)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.25274670124053955
    2. 'd' → logprob: -1.5027467012405396
    3. 'res' → logprob: -7.87774658203125
    4. 'distance' → logprob: -7.87774658203125
    5. 'ans' → logprob: -10.12774658203125
    6. 'result' → logprob: -11.50274658203125
    7. 'D' → logprob: -12.75274658203125
    8. 'dis' → logprob: -12.87774658203125
    9. 'answer' → logprob: -13.75274658203125
    10. 'dp' → logprob: -14.37774658203125

Token 1447: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01983928494155407
    2. ' =' → logprob: -4.019839286804199
    3. 'ist' → logprob: -6.894839286804199
    4. '=d' → logprob: -8.3948392868042
    5. 'ijkstra' → logprob: -8.5198392868042
    6. 'ists' → logprob: -9.5198392868042
    7. 'istance' → logprob: -9.6448392868042
    8. '=[' → logprob: -10.3948392868042
    9. '=s' → logprob: -11.1448392868042
    10. 's' → logprob: -11.2698392868042

Token 1448: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.4391956685576588e-05
    2. ' d' → logprob: -10.625024795532227
    3. '(d' → logprob: -17.875024795532227
    4. '	d' → logprob: -18.750024795532227
    5. '```' → logprob: -19.125024795532227
    6. '[d' → logprob: -19.250024795532227
    7. '   ' → logprob: -19.375024795532227
    8. 'ijkstra' → logprob: -20.000024795532227
    9. '
' → logprob: -20.125024795532227
    10. '`' → logprob: -20.875024795532227

Token 1449: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0005464801797643304
    2. 'd' → logprob: -7.625546455383301
    3. 'ijk' → logprob: -10.5005464553833
    4. '(d' → logprob: -10.8755464553833
    5. 'ij' → logprob: -12.3755464553833
    6. 's' → logprob: -13.0005464553833
    7. '(s' → logprob: -13.1255464553833
    8. 'jik' → logprob: -13.2505464553833
    9. '(' → logprob: -15.3755464553833
    10. 'j' → logprob: -15.5005464553833

Token 1450: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.596781946020201e-05
    2. '0' → logprob: -10.000045776367188
    3. '(
' → logprob: -15.125045776367188
    4. ' (' → logprob: -15.500045776367188
    5. 'def' → logprob: -18.875045776367188
    6. '```' → logprob: -19.250045776367188
    7. 's' → logprob: -20.250045776367188
    8. '#' → logprob: -20.625045776367188
    9. ' ' → logprob: -20.750045776367188
    10. '[' → logprob: -20.875045776367188

Token 1451: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '(' → logprob: -21.125
    3. ' ' → logprob: -21.5
    4. '
' → logprob: -22.875
    5. '۰' → logprob: -22.875
    6. '０' → logprob: -24.125
    7. ')' → logprob: -24.25
    8. '```' → logprob: -24.375
    9. '#' → logprob: -25.0
    10. '00' → logprob: -25.125

Token 1452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.107425062713446e-06
    2. '(edges' → logprob: -12.750006675720215
    3. ',
' → logprob: -12.875006675720215
    4. ' ,' → logprob: -14.500006675720215
    5. ')' → logprob: -15.000006675720215
    6. 'edges' → logprob: -15.750006675720215
    7. '(' → logprob: -15.750006675720215
    8. '```' → logprob: -16.00000762939453
    9. ',d' → logprob: -16.75000762939453
    10. '[' → logprob: -17.00000762939453

Token 1453: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.318681188422488e-05
    2. ' edges' → logprob: -11.25001335144043
    3. '(edges' → logprob: -15.75001335144043
    4. '.edges' → logprob: -17.87501335144043
    5. '   ' → logprob: -18.50001335144043
    6. 'edge' → logprob: -19.62501335144043
    7. 'Edges' → logprob: -20.12501335144043
    8. '```' → logprob: -20.25001335144043
    9. '_edges' → logprob: -20.62501335144043
    10. ')' → logprob: -22.00001335144043

Token 1454: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025669468566775322
    2. ')

' → logprob: -3.775669574737549
    3. ')
' → logprob: -6.025669574737549
    4. ')#' → logprob: -12.90066909790039
    5. ')

' → logprob: -14.02566909790039
    6. '#' → logprob: -14.15066909790039
    7. ')
' → logprob: -14.77566909790039
    8. ')[' → logprob: -15.40066909790039
    9. ' )' → logprob: -15.52566909790039
    10. ')


' → logprob: -15.90066909790039

Token 1455: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.5716304410016164e-05
    2. '```' → logprob: -10.250035285949707
    3. 'if' → logprob: -15.750035285949707
    4. '``' → logprob: -16.375036239624023
    5. ' print' → logprob: -17.125036239624023
    6. '
' → logprob: -18.750036239624023
    7. 'for' → logprob: -18.750036239624023
    8. '#print' → logprob: -19.250036239624023
    9. '#' → logprob: -20.875036239624023
    10. 'printf' → logprob: -21.500036239624023

Token 1456: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.517272024415433e-05
    2. 'if' → logprob: -9.500075340270996
    3. '#' → logprob: -15.625075340270996
    4. '```' → logprob: -16.50007438659668
    5. 'ans' → logprob: -17.12507438659668
    6. 'pr' → logprob: -18.12507438659668
    7. 'result' → logprob: -18.50007438659668
    8. '#print' → logprob: -18.62507438659668
    9. 'for' → logprob: -18.75007438659668
    10. ' print' → logprob: -19.25007438659668

Token 1457: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0015028368216007948
    2. ' d' → logprob: -6.501502990722656
    3. '
' → logprob: -16.001502990722656
    4. 'print' → logprob: -16.251502990722656
    5. ' ' → logprob: -16.501502990722656
    6. ' ' → logprob: -16.626502990722656
    7. '(d' → logprob: -16.751502990722656
    8. '#' → logprob: -17.501502990722656
    9. '   ' → logprob: -17.626502990722656
    10. '	d' → logprob: -18.001502990722656

Token 1458: ' distance' (ID: 9324)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004626768175512552
    2. ' d' → logprob: -5.379626750946045
    3. 'n' → logprob: -12.879627227783203
    4. '
' → logprob: -13.129627227783203
    5. ' ' → logprob: -14.379627227783203
    6. ' ' → logprob: -14.504627227783203
    7. ' 
' → logprob: -15.254627227783203
    8. '0' → logprob: -16.129627227783203
    9. '   ' → logprob: -16.504627227783203
    10. '
' → logprob: -16.754627227783203

Token 1459: ' minimale' (ID: 143217)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.014189359731972218
    2. '[-' → logprob: -4.26418924331665
    3. 'n' → logprob: -10.764189720153809
    4. '[' → logprob: -12.764189720153809
    5. '[d' → logprob: -13.514189720153809
    6. 'd' → logprob: -14.764189720153809
    7. '
' → logprob: -16.639188766479492
    8. ' [' → logprob: -18.264188766479492
    9. '[
' → logprob: -18.264188766479492
    10. ' [-' → logprob: -18.889188766479492

Token 1460: ' au' (ID: 2791)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -7.20734242349863e-05
    2. '[d' → logprob: -9.750072479248047
    3. '[-' → logprob: -11.875072479248047
    4. 'd' → logprob: -12.375072479248047
    5. 'n' → logprob: -13.250072479248047
    6. '[' → logprob: -14.125072479248047
    7. '
' → logprob: -17.375072479248047
    8. '#' → logprob: -18.875072479248047
    9. ' [' → logprob: -19.125072479248047
    10. '[i' → logprob: -19.500072479248047

Token 1461: ' dernier' (ID: 27982)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0032477048225700855
    2. 'd' → logprob: -5.7532477378845215
    3. ' n' → logprob: -9.628247261047363
    4. '(n' → logprob: -13.253247261047363
    5. '[n' → logprob: -14.003247261047363
    6. 'print' → logprob: -14.253247261047363
    7. ' d' → logprob: -14.503247261047363
    8. '-' → logprob: -16.37824821472168
    9. '
' → logprob: -16.50324821472168
    10. '#' → logprob: -17.00324821472168

Token 1462: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.22502204775810242
    2. 'n' → logprob: -1.7250220775604248
    3. '(n' → logprob: -4.475021839141846
    4. 'no' → logprob: -5.225021839141846
    5. ' sommet' → logprob: -5.850021839141846
    6. '#' → logprob: -6.475021839141846
    7. 's' → logprob: -7.475021839141846
    8. '```' → logprob: -7.975021839141846
    9. 'node' → logprob: -9.100022315979004
    10. 'point' → logprob: -9.225022315979004

Token 1463: ' (' (ID: 350)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.004414451774209738
    2. '[-' → logprob: -5.7544145584106445
    3. 'n' → logprob: -7.3794145584106445
    4. '==' → logprob: -7.6294145584106445
    5. ' ==' → logprob: -9.379414558410645
    6. '(n' → logprob: -10.879414558410645
    7. '[' → logprob: -10.879414558410645
    8. '<n' → logprob: -13.879414558410645
    9. '==-' → logprob: -14.254414558410645
    10. ' n' → logprob: -14.629414558410645

Token 1464: 'indice' (ID: 176697)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.822646693966817e-06
    2. '-' → logprob: -11.875007629394531
    3. ' n' → logprob: -14.250007629394531
    4. '-n' → logprob: -16.62500762939453
    5. '
' → logprob: -17.50000762939453
    6. '(n' → logprob: -17.62500762939453
    7. '[n' → logprob: -17.75000762939453
    8. '   ' → logprob: -18.37500762939453
    9. 'd' → logprob: -18.75000762939453
    10. '[-' → logprob: -19.25000762939453

Token 1465: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.868328920158092e-05
    2. '-' → logprob: -11.000028610229492
    3. '[n' → logprob: -12.000028610229492
    4. ' n' → logprob: -12.500028610229492
    5. '-n' → logprob: -14.000028610229492
    6. '(n' → logprob: -14.250028610229492
    7. '[-' → logprob: -15.875028610229492
    8. '
' → logprob: -16.125028610229492
    9. '```' → logprob: -16.750028610229492
    10. ',n' → logprob: -17.000028610229492

Token 1466: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001600347168277949
    2. ' -' → logprob: -8.750160217285156
    3. '1' → logprob: -13.625160217285156
    4. '#' → logprob: -16.125160217285156
    5. '−' → logprob: -16.125160217285156
    6. '```' → logprob: -16.250160217285156
    7. '-
' → logprob: -17.375160217285156
    8. '
' → logprob: -17.875160217285156
    9. 's' → logprob: -18.250160217285156
    10. '[' → logprob: -18.500160217285156

Token 1467: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12719833850860596
    2. '1' → logprob: -2.1271982192993164
    3. ' -' → logprob: -8.752198219299316
    4. '```' → logprob: -9.627198219299316
    5. 'minus' → logprob: -10.877198219299316
    6. 'n' → logprob: -11.252198219299316
    7. ' ' → logprob: -12.502198219299316
    8. '#' → logprob: -12.877198219299316
    9. '`' → logprob: -13.002198219299316
    10. 'moins' → logprob: -13.627198219299316

Token 1468: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003838071832433343
    2. '==' → logprob: -6.878838062286377
    3. ')==' → logprob: -6.878838062286377
    4. ' ==' → logprob: -7.378838062286377
    5. ']' → logprob: -8.128838539123535
    6. ' is' → logprob: -8.503838539123535
    7. 'is' → logprob: -8.628838539123535
    8. ' )' → logprob: -8.878838539123535
    9. 'd' → logprob: -9.128838539123535
    10. ']==' → logprob: -9.503838539123535

Token 1469: ' reste' (ID: 26769)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.15109655261039734
    2. ' ==' → logprob: -2.0260965824127197
    3. 'is' → logprob: -4.901096343994141
    4. ' is' → logprob: -7.276096343994141
    5. 'd' → logprob: -9.15109634399414
    6. '#' → logprob: -10.15109634399414
    7. '==-' → logprob: -10.52609634399414
    8. '```' → logprob: -10.52609634399414
    9. '<' → logprob: -10.65109634399414
    10. '==
' → logprob: -11.27609634399414

Token 1470: ' l' (ID: 305)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.6240566083070007e-06
    2. '==' → logprob: -13.875001907348633
    3. ' inf' → logprob: -14.625001907348633
    4. '=' → logprob: -15.750001907348633
    5. 'float' → logprob: -17.250001907348633
    6. 'in' → logprob: -17.375001907348633
    7. '```' → logprob: -17.625001907348633
    8. '>=' → logprob: -18.375001907348633
    9. '>' → logprob: -19.125001907348633
    10. '
' → logprob: -19.500001907348633

Token 1471: ''in' (ID: 17942)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0004605783324223012
    2. 'float' → logprob: -8.750460624694824
    3. 'in' → logprob: -9.000460624694824
    4. '==' → logprob: -9.500460624694824
    5. 'a' → logprob: -10.750460624694824
    6. 'e' → logprob: -11.250460624694824
    7. '=' → logprob: -11.500460624694824
    8. ' inf' → logprob: -11.750460624694824
    9. 'eg' → logprob: -11.875460624694824
    10. '[' → logprob: -12.000460624694824

Token 1472: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00011725161311915144
    2. 'if' → logprob: -9.125117301940918
    3. 'inf' → logprob: -12.125117301940918
    4. 'float' → logprob: -13.875117301940918
    5. 'd' → logprob: -14.500117301940918
    6. '
' → logprob: -15.000117301940918
    7. 'ф' → logprob: -15.125117301940918
    8. '[' → logprob: -15.375117301940918
    9. '   ' → logprob: -15.875117301940918
    10. '```' → logprob: -16.0001163482666

Token 1473: 'ini' (ID: 2363)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.5333437323570251
    2. 'ini' → logprob: -0.9083437323570251
    3. '#' → logprob: -5.78334379196167
    4. 'if' → logprob: -5.78334379196167
    5. 'in' → logprob: -6.65834379196167
    6. 'i' → logprob: -7.03334379196167
    7. 'inite' → logprob: -7.28334379196167
    8. 'init' → logprob: -7.78334379196167
    9. '=' → logprob: -8.158343315124512
    10. 'inity' → logprob: -8.908343315124512

Token 1474: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023853512480854988
    2. ':
' → logprob: -3.7738535404205322
    3. ',' → logprob: -8.523853302001953
    4. ' or' → logprob: -8.648853302001953
    5. 'or' → logprob: -9.648853302001953
    6. 'print' → logprob: -9.898853302001953
    7. '   ' → logprob: -10.273853302001953
    8. '==' → logprob: -10.273853302001953
    9. 'if' → logprob: -11.148853302001953
    10. ' ==' → logprob: -11.523853302001953

Token 1475: ' cela' (ID: 17542)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.750436007976532e-05
    2. ' print' → logprob: -11.37503719329834
    3. 'if' → logprob: -11.50003719329834
    4. '#' → logprob: -11.62503719329834
    5. '   ' → logprob: -12.62503719329834
    6. '```' → logprob: -12.75003719329834
    7. '
' → logprob: -15.50003719329834
    8. '#print' → logprob: -15.75003719329834
    9. '	print' → logprob: -16.500038146972656
    10. 'printf' → logprob: -17.000038146972656

Token 1476: ' signifie' (ID: 81149)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7277771830558777
    2. 'means' → logprob: -1.1027772426605225
    3. 'print' → logprob: -1.8527772426605225
    4. 'ind' → logprob: -4.477777004241943
    5. ' means' → logprob: -4.977777004241943
    6. 'im' → logprob: -5.602777004241943
    7. ' signifie' → logprob: -5.727777004241943
    8. ':' → logprob: -6.602777004241943
    9. '```' → logprob: -7.727777004241943
    10. ' implies' → logprob: -8.102777481079102

Token 1477: ' qu' (ID: 474)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.023643745109438896
    2. 'print' → logprob: -4.023643970489502
    3. ' que' → logprob: -5.898643970489502
    4. 'qu' → logprob: -6.398643970489502
    5. 'que' → logprob: -7.398643970489502
    6. 'that' → logprob: -9.148643493652344
    7. ' qu' → logprob: -9.273643493652344
    8. '#print' → logprob: -9.398643493652344
    9. ' that' → logprob: -9.648643493652344
    10. '   ' → logprob: -9.648643493652344

Token 1478: ''il' (ID: 14683)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5863738059997559
    2. ' il' → logprob: -1.4613738059997559
    3. 'il' → logprob: -2.336373805999756
    4. ' que' → logprob: -3.586373805999756
    5. 'd' → logprob: -3.836373805999756
    6. 'que' → logprob: -3.961373805999756
    7. ''il' → logprob: -4.586373805999756
    8. ' d' → logprob: -4.836373805999756
    9. 'la' → logprob: -5.711373805999756
    10. 'auc' → logprob: -5.711373805999756

Token 1479: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05665145814418793
    2. ' n' → logprob: -3.3066513538360596
    3. 'est' → logprob: -4.181651592254639
    4. '#' → logprob: -7.056651592254639
    5. 'is' → logprob: -7.181651592254639
    6. 'y' → logprob: -7.806651592254639
    7. 's' → logprob: -8.18165111541748
    8. ' est' → logprob: -8.18165111541748
    9. 'no' → logprob: -8.55665111541748
    10. 'print' → logprob: -9.18165111541748

Token 1480: ''est' (ID: 6616)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07311499118804932
    2. 'y' → logprob: -3.4481148719787598
    3. ''y' → logprob: -4.07311487197876
    4. 'est' → logprob: -4.19811487197876
    5. ''est' → logprob: -5.19811487197876
    6. '#' → logprob: -7.19811487197876
    7. ' n' → logprob: -9.198115348815918
    8. 'n't' → logprob: -9.823115348815918
    9. '```' → logprob: -9.823115348815918
    10. ''ex' → logprob: -10.198115348815918

Token 1481: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.1526496708393097
    2. 'im' → logprob: -2.6526496410369873
    3. '#' → logprob: -3.2776496410369873
    4. 'in' → logprob: -4.277649879455566
    5. 'possible' → logprob: -4.527649879455566
    6. 'import' → logprob: -5.777649879455566
    7. ' impossible' → logprob: -6.402649879455566
    8. ' pas' → logprob: -6.777649879455566
    9. 'int' → logprob: -7.777649879455566
    10. 'accessible' → logprob: -8.027649879455566

Token 1482: ' atte' (ID: 43312)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.18446367979049683
    2. 'accessible' → logprob: -2.3094637393951416
    3. 'reachable' → logprob: -3.1844637393951416
    4. 'atte' → logprob: -3.6844637393951416
    5. ' possible' → logprob: -6.9344635009765625
    6. ' accessible' → logprob: -7.6844635009765625
    7. 'at' → logprob: -7.6844635009765625
    8. ' reachable' → logprob: -9.309463500976562
    9. 're' → logprob: -9.559463500976562
    10. '_possible' → logprob: -9.559463500976562

Token 1483: 'ign' (ID: 733)
  Prédit: 'ign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ign' → logprob: -0.0013726113829761744
    2. 'ivable' → logprob: -7.751372814178467
    3. 'ing' → logprob: -8.501372337341309
    4. 'gn' → logprob: -8.876372337341309
    5. 'a' → logprob: -9.001372337341309
    6. 'n' → logprob: -9.501372337341309
    7. 'ig' → logprob: -9.501372337341309
    8. 'achable' → logprob: -9.751372337341309
    9. 'in' → logprob: -10.001372337341309
    10. 'enable' → logprob: -10.126372337341309

Token 1484: 'able' (ID: 562)
  Prédit: 'ign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ign' → logprob: -0.0144259138032794
    2. 'nable' → logprob: -4.764425754547119
    3. 'gn' → logprob: -6.389425754547119
    4. 'int' → logprob: -6.514425754547119
    5. 'able' → logprob: -6.514425754547119
    6. 'ind' → logprob: -8.014426231384277
    7. 'ing' → logprob: -8.264426231384277
    8. 'in' → logprob: -9.014426231384277
    9. 'n' → logprob: -9.389426231384277
    10. 'g' → logprob: -9.639426231384277

Token 1485: ',
' (ID: 412)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6404750347137451
    2. ':' → logprob: -1.0154750347137451
    3. 'print' → logprob: -2.390475034713745
    4. 'else' → logprob: -4.765475273132324
    5. '   ' → logprob: -5.265475273132324
    6. ' print' → logprob: -6.515475273132324
    7. '#' → logprob: -6.515475273132324
    8. ' or' → logprob: -6.890475273132324
    9. 'or' → logprob: -7.515475273132324
    10. ',' → logprob: -7.765475273132324

Token 1486: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006912629585713148
    2. ' print' → logprob: -5.131912708282471
    3. '#' → logprob: -7.256912708282471
    4. '   ' → logprob: -8.881912231445312
    5. '
' → logprob: -9.756912231445312
    6. '```' → logprob: -9.881912231445312
    7. '#print' → logprob: -11.131912231445312
    8. '    
' → logprob: -12.506912231445312
    9. 'if' → logprob: -12.756912231445312
    10. '	print' → logprob: -13.756912231445312

Token 1487: ' donc' (ID: 14206)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00021676832693628967
    2. '#' → logprob: -8.875216484069824
    3. 'if' → logprob: -9.625216484069824
    4. '#print' → logprob: -11.625216484069824
    5. '```' → logprob: -14.125216484069824
    6. '
' → logprob: -14.250216484069824
    7. ' print' → logprob: -14.750216484069824
    8. 'd' → logprob: -17.00021743774414
    9. '   ' → logprob: -17.50021743774414
    10. '``' → logprob: -18.25021743774414

Token 1488: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.47757811343763e-05
    2. '   ' → logprob: -10.500044822692871
    3. '#' → logprob: -11.625044822692871
    4. '-' → logprob: -12.125044822692871
    5. '```' → logprob: -13.250044822692871
    6. '-print' → logprob: -14.375044822692871
    7. ' print' → logprob: -14.750044822692871
    8. 'd' → logprob: -17.000043869018555
    9. '``' → logprob: -17.125043869018555
    10. '	print' → logprob: -18.125043869018555

Token 1489: ' imprime' (ID: 195564)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006410692585632205
    2. '#' → logprob: -7.625640869140625
    3. ' print' → logprob: -9.000640869140625
    4. 'pr' → logprob: -11.250640869140625
    5. 'if' → logprob: -11.750640869140625
    6. '#print' → logprob: -13.125640869140625
    7. ':' → logprob: -13.875640869140625
    8. 'im' → logprob: -14.000640869140625
    9. '_print' → logprob: -14.000640869140625
    10. '-print' → logprob: -14.625640869140625

Token 1490: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0067448546178638935
    2. '(-' → logprob: -5.006744861602783
    3. '("-' → logprob: -11.506744384765625
    4. 'print' → logprob: -11.631744384765625
    5. '```' → logprob: -12.631744384765625
    6. '(' → logprob: -13.006744384765625
    7. '-print' → logprob: -13.006744384765625
    8. '"-' → logprob: -14.256744384765625
    9. '-inf' → logprob: -14.756744384765625
    10. '()-' → logprob: -15.256744384765625

Token 1491: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.25000286102295
    3. 'inf' → logprob: -15.00000286102295
    4. '
' → logprob: -15.37500286102295
    5. 'print' → logprob: -15.50000286102295
    6. 'd' → logprob: -16.625001907348633
    7. '```' → logprob: -17.875001907348633
    8. '`' → logprob: -17.875001907348633
    9. '   ' → logprob: -18.000001907348633
    10. '(' → logprob: -18.250001907348633

Token 1492: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12805777788162231
    2. 'else' → logprob: -2.1280577182769775
    3. '
' → logprob: -7.503057956695557
    4. 'if' → logprob: -7.628057956695557
    5. '   ' → logprob: -10.628057479858398
    6. ' print' → logprob: -10.628057479858398
    7. ' else' → logprob: -10.878057479858398
    8. '```' → logprob: -11.128057479858398
    9. 'elif' → logprob: -13.128057479858398
    10. ')
' → logprob: -14.003057479858398

Token 1493: ' signal' (ID: 12884)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.08911601454019547
    2. '-' → logprob: -3.339116096496582
    3. 'sign' → logprob: -3.714116096496582
    4. 'indi' → logprob: -3.964116096496582
    5. 'la' → logprob: -6.714116096496582
    6. '-ind' → logprob: -6.839116096496582
    7. 'l' → logprob: -6.839116096496582
    8. 'fin' → logprob: -7.214116096496582
    9. 'signal' → logprob: -7.839116096496582
    10. ' ind' → logprob: -7.964116096496582

Token 1494: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.3856492842023727e-06
    2. '#' → logprob: -14.375000953674316
    3. 'iser' → logprob: -14.500000953674316
    4. 'ant' → logprob: -16.625001907348633
    5. 'e' → logprob: -16.875001907348633
    6. '-er' → logprob: -17.000001907348633
    7. 'aler' → logprob: -17.625001907348633
    8. ''er' → logprob: -18.000001907348633
    9. 'r' → logprob: -18.500001907348633
    10. ' er' → logprob: -18.750001907348633

Token 1495: ' l' (ID: 305)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01106079202145338
    2. '(-' → logprob: -4.51106071472168
    3. ' -' → logprob: -12.38606071472168
    4. '("-' → logprob: -12.76106071472168
    5. 'd' → logprob: -13.51106071472168
    6. '```' → logprob: -13.51106071472168
    7. '(' → logprob: -13.88606071472168
    8. '()-' → logprob: -14.76106071472168
    9. '"-' → logprob: -14.76106071472168
    10. '-la' → logprob: -14.76106071472168

Token 1496: ''' (ID: 6)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.11717931181192398
    2. 'in' → logprob: -3.4921793937683105
    3. ''' → logprob: -3.6171793937683105
    4. ''im' → logprob: -4.6171793937683105
    5. ''accès' → logprob: -4.8671793937683105
    6. 'abs' → logprob: -5.1171793937683105
    7. ''access' → logprob: -5.3671793937683105
    8. 'im' → logprob: -5.4921793937683105
    9. 'n' → logprob: -5.4921793937683105
    10. ''ind' → logprob: -5.9921793937683105

Token 1497: 'absence' (ID: 99054)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.2130558490753174
    2. 'im' → logprob: -1.3380558490753174
    3. 'absence' → logprob: -1.4630558490753174
    4. 'in' → logprob: -1.9630558490753174
    5. ''in' → logprob: -3.8380558490753174
    6. ' absence' → logprob: -4.838055610656738
    7. 'n' → logprob: -4.963055610656738
    8. '-' → logprob: -5.838055610656738
    9. ''' → logprob: -5.838055610656738
    10. ''im' → logprob: -6.088055610656738

Token 1498: ' de' (ID: 334)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.06267678737640381
    2. '(' → logprob: -3.5626769065856934
    3. '-' → logprob: -3.8126769065856934
    4. 'print' → logprob: -5.062676906585693
    5. 'd' → logprob: -6.312676906585693
    6. '(d' → logprob: -7.187676906585693
    7. '(
' → logprob: -8.312676429748535
    8. '(print' → logprob: -8.562676429748535
    9. '()' → logprob: -8.937676429748535
    10. '#' → logprob: -9.062676429748535

Token 1499: ' chemin' (ID: 45035)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.010832510888576508
    2. 'che' → logprob: -4.8858323097229
    3. ' solution' → logprob: -6.2608323097229
    4. 'sol' → logprob: -7.0108323097229
    5. 'connexion' → logprob: -8.885832786560059
    6. '-' → logprob: -9.135832786560059
    7. 'poss' → logprob: -10.010832786560059
    8. 's' → logprob: -10.635832786560059
    9. 'possible' → logprob: -11.260832786560059
    10. 'voie' → logprob: -11.510832786560059

Token 1500: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5767562389373779
    2. 'else' → logprob: -0.8267562389373779
    3. '
' → logprob: -7.951756477355957
    4. 'if' → logprob: -8.201756477355957
    5. ' else' → logprob: -9.201756477355957
    6. ' print' → logprob: -10.451756477355957
    7. '```' → logprob: -10.451756477355957
    8. '   ' → logprob: -10.826756477355957
    9. '-' → logprob: -13.076756477355957
    10. '    
' → logprob: -13.201756477355957

Token 1501: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001331190811470151
    2. 'print' → logprob: -6.751331329345703
    3. '```' → logprob: -8.751331329345703
    4. ' if' → logprob: -13.126331329345703
    5. '
' → logprob: -14.626331329345703
    6. '``' → logprob: -15.376331329345703
    7. 'elif' → logprob: -17.876331329345703
    8. 'for' → logprob: -18.376331329345703
    9. 'i' → logprob: -19.001331329345703
    10. 'else' → logprob: -19.001331329345703

Token 1502: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004078401252627373
    2. ' d' → logprob: -5.504078388214111
    3. ' ' → logprob: -18.004077911376953
    4. '	d' → logprob: -18.754077911376953
    5. '   ' → logprob: -18.879077911376953
    6. ' ' → logprob: -19.629077911376953
    7. '  ' → logprob: -21.379077911376953
    8. '(d' → logprob: -21.629077911376953
    9. '_d' → logprob: -22.129077911376953
    10. '#' → logprob: -22.379077911376953

Token 1503: '[-' (ID: 17503)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.038044363260269165
    2. '[-' → logprob: -3.2880444526672363
    3. '[' → logprob: -13.038043975830078
    4. '[d' → logprob: -15.413043975830078
    5. '==' → logprob: -15.913043975830078
    6. 'n' → logprob: -16.038043975830078
    7. '[len' → logprob: -16.788043975830078
    8. '[i' → logprob: -17.163043975830078
    9. '```' → logprob: -17.163043975830078
    10. ' ==' → logprob: -18.038043975830078

Token 1504: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. ']' → logprob: -18.625
    4. 'n' → logprob: -19.875
    5. '```' → logprob: -21.0
    6. '
' → logprob: -21.5
    7. 'd' → logprob: -22.125
    8. 'm' → logprob: -22.25
    9. '１' → logprob: -22.25
    10. ']>' → logprob: -22.375

Token 1505: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25204896926879883
    2. ' ==' → logprob: -1.5020489692687988
    3. '==-' → logprob: -9.12704849243164
    4. ')==' → logprob: -12.62704849243164
    5. ')' → logprob: -12.75204849243164
    6. ']==' → logprob: -12.87704849243164
    7. '==
' → logprob: -13.62704849243164
    8. '()==' → logprob: -15.00204849243164
    9. '```' → logprob: -15.00204849243164
    10. 'is' → logprob: -16.12704849243164

Token 1506: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0006351164192892611
    2. ' ==' → logprob: -7.375635147094727
    3. '==
' → logprob: -11.750635147094727
    4. '```' → logprob: -15.500635147094727
    5. '>=' → logprob: -15.750635147094727
    6. '==-' → logprob: -16.250635147094727
    7. 'is' → logprob: -16.500635147094727
    8. '=' → logprob: -17.250635147094727
    9. '===' → logprob: -17.625635147094727
    10. '==(' → logprob: -17.875635147094727

Token 1507: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.5048530030981055e-06
    2. ' inf' → logprob: -13.500001907348633
    3. 'float' → logprob: -19.000001907348633
    4. '   ' → logprob: -23.000001907348633
    5. '-inf' → logprob: -23.500001907348633
    6. '.inf' → logprob: -24.000001907348633
    7. '_inf' → logprob: -24.250001907348633
    8. 'in' → logprob: -24.375001907348633
    9. '```' → logprob: -24.875001907348633
    10. 'Inf' → logprob: -25.000001907348633

Token 1508: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023255378007888794
    2. ':
' → logprob: -3.7732553482055664
    3. 'print' → logprob: -13.023255348205566
    4. '   ' → logprob: -13.148255348205566
    5. ':
' → logprob: -13.273255348205566
    6. ':return' → logprob: -13.523255348205566
    7. ':

' → logprob: -14.273255348205566
    8. ' :' → logprob: -14.523255348205566
    9. '):
' → logprob: -14.898255348205566
    10. ' print' → logprob: -15.148255348205566

Token 1509: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.033764760941267014
    2. '   ' → logprob: -3.5337648391723633
    3. ' print' → logprob: -5.533764839172363
    4. '	print' → logprob: -10.158764839172363
    5. '```' → logprob: -11.658764839172363
    6. '-' → logprob: -12.033764839172363
    7. '-print' → logprob: -13.408764839172363
    8. '``' → logprob: -16.283763885498047
    9. '  ' → logprob: -16.408763885498047
    10. 'printf' → logprob: -16.783763885498047

Token 1510: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0280383548888494e-06
    2. ' print' → logprob: -14.000000953674316
    3. '   ' → logprob: -16.250001907348633
    4. '```' → logprob: -17.250001907348633
    5. '	print' → logprob: -18.625001907348633
    6. 'pr' → logprob: -19.125001907348633
    7. '-print' → logprob: -20.875001907348633
    8. 'prin' → logprob: -21.875001907348633
    9. 'printf' → logprob: -22.250001907348633
    10. '#print' → logprob: -23.125001907348633

Token 1511: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1602301150560379
    2. '(-' → logprob: -1.9102301597595215
    3. '(' → logprob: -12.160229682922363
    4. ' -' → logprob: -14.785229682922363
    5. '("-' → logprob: -15.660229682922363
    6. '()-' → logprob: -16.28523063659668
    7. '('-' → logprob: -17.78523063659668
    8. '```' → logprob: -18.03523063659668
    9. '−' → logprob: -18.41023063659668
    10. '{-' → logprob: -19.53523063659668

Token 1512: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -20.625
    3. '2' → logprob: -21.625
    4. ' ' → logprob: -21.875
    5. '0' → logprob: -22.5
    6. '
' → logprob: -22.75
    7. '4' → logprob: -23.125
    8. '`' → logprob: -23.125
    9. '``' → logprob: -23.125
    10. ' ' → logprob: -23.375

Token 1513: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5769007205963135
    2. ')' → logprob: -0.8269007205963135
    3. 'else' → logprob: -6.951900482177734
    4. '   ' → logprob: -13.076900482177734
    5. ')
' → logprob: -13.576900482177734
    6. ' )' → logprob: -16.326900482177734
    7. '),' → logprob: -16.326900482177734
    8. ' else' → logprob: -16.326900482177734
    9. ')`
' → logprob: -16.326900482177734
    10. ' )
' → logprob: -16.451900482177734

Token 1514: '#' (ID: 2)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.1472419600977446e-06
    2. ' else' → logprob: -13.750000953674316
    3. '```' → logprob: -17.500001907348633
    4. 'elif' → logprob: -21.250001907348633
    5. '_else' → logprob: -21.625001907348633
    6. 'elser' → logprob: -21.750001907348633
    7. 'Else' → logprob: -22.000001907348633
    8. 'e' → logprob: -22.000001907348633
    9. 'elses' → logprob: -22.125001907348633
    10. '}else' → logprob: -22.125001907348633

Token 1515: ' Sinon' (ID: 154924)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -3.128163257315464e-07
    2. ' else' → logprob: -15.25
    3. 'elif' → logprob: -20.375
    4. 'elser' → logprob: -24.25
    5. '_else' → logprob: -24.625
    6. 'elses' → logprob: -24.875
    7. '```' → logprob: -25.125
    8. 'Else' → logprob: -25.25
    9. 'els' → logprob: -25.5
    10. '	else' → logprob: -26.0

Token 1516: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8045390248298645
    2. ':' → logprob: -1.0545389652252197
    3. 'else' → logprob: -2.0545389652252197
    4. '   ' → logprob: -2.8045389652252197
    5. 'print' → logprob: -4.304539203643799
    6. ' else' → logprob: -6.554539203643799
    7. ' print' → logprob: -7.429539203643799
    8. '(print' → logprob: -9.55453872680664
    9. ' :
' → logprob: -10.67953872680664
    10. '	print' → logprob: -10.80453872680664

Token 1517: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019712194334715605
    2. ' print' → logprob: -6.501971244812012
    3. '   ' → logprob: -7.751971244812012
    4. 'else' → logprob: -10.251971244812012
    5. ':' → logprob: -13.251971244812012
    6. '	print' → logprob: -13.501971244812012
    7. '(print' → logprob: -15.751971244812012
    8. '```' → logprob: -15.876971244812012
    9. '.print' → logprob: -16.251970291137695
    10. ' else' → logprob: -16.376970291137695

Token 1518: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05827365443110466
    2. 'else' → logprob: -2.9332735538482666
    3. ' print' → logprob: -6.183273792266846
    4. ':' → logprob: -6.808273792266846
    5. ' else' → logprob: -8.933273315429688
    6. '   ' → logprob: -9.808273315429688
    7. ':
' → logprob: -10.933273315429688
    8. '.print' → logprob: -12.933273315429688
    9. '(print' → logprob: -12.933273315429688
    10. '```' → logprob: -13.183273315429688

Token 1519: ' la' (ID: 557)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.20141927897930145
    2. 'd' → logprob: -1.7014192342758179
    3. ' d' → logprob: -12.07641887664795
    4. '(' → logprob: -16.201419830322266
    5. 'print' → logprob: -16.826419830322266
    6. 'the' → logprob: -18.576419830322266
    7. '```' → logprob: -19.201419830322266
    8. '	d' → logprob: -19.576419830322266
    9. '[d' → logprob: -20.201419830322266
    10. '   ' → logprob: -20.326419830322266

Token 1520: ' distance' (ID: 9324)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.9862216504407115e-05
    2. 'print' → logprob: -11.500020027160645
    3. ' d' → logprob: -11.625020027160645
    4. '(d' → logprob: -14.250020027160645
    5. 'distance' → logprob: -18.250019073486328
    6. 'final' → logprob: -18.375019073486328
    7. '```' → logprob: -18.875019073486328
    8. '   ' → logprob: -18.875019073486328
    9. ' print' → logprob: -19.500019073486328
    10. 'result' → logprob: -19.625019073486328

Token 1521: ' minimale' (ID: 143217)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -6.813969957875088e-05
    2. 'd' → logprob: -9.625067710876465
    3. '(' → logprob: -13.500067710876465
    4. '   ' → logprob: -15.625067710876465
    5. 'print' → logprob: -15.625067710876465
    6. '```' → logprob: -16.12506866455078
    7. '(int' → logprob: -16.87506866455078
    8. ' d' → logprob: -17.37506866455078
    9. '[d' → logprob: -17.37506866455078
    10. 'else' → logprob: -17.50006866455078

Token 1522: ' trouv' (ID: 40254)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0008421457023359835
    2. 'print' → logprob: -7.250842094421387
    3. 'd' → logprob: -9.625842094421387
    4. '(print' → logprob: -10.000842094421387
    5. '   ' → logprob: -11.000842094421387
    6. '(' → logprob: -13.000842094421387
    7. 'else' → logprob: -13.375842094421387
    8. ' print' → logprob: -16.875843048095703
    9. ',d' → logprob: -17.750843048095703
    10. '(int' → logprob: -18.000843048095703

Token 1523: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.002775631844997406
    2. 'ee' → logprob: -6.0027756690979
    3. 'é' → logprob: -8.252775192260742
    4. 'e' → logprob: -11.002775192260742
    5. '   ' → logprob: -11.627775192260742
    6. 'ance' → logprob: -12.627775192260742
    7. '#' → logprob: -13.002775192260742
    8. 'print' → logprob: -13.752775192260742
    9. 'è' → logprob: -14.127775192260742
    10. 'd' → logprob: -14.127775192260742

Token 1524: ' du' (ID: 1462)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.011656703427433968
    2. 'print' → logprob: -4.511656761169434
    3. '   ' → logprob: -7.636656761169434
    4. ' else' → logprob: -9.386656761169434
    5. '(print' → logprob: -10.511656761169434
    6. 'd' → logprob: -11.511656761169434
    7. ' print' → logprob: -12.386656761169434
    8. '```' → logprob: -14.886656761169434
    9. ')' → logprob: -15.636656761169434
    10. '(d' → logprob: -16.011655807495117

Token 1525: ' sommet' (ID: 130502)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0068206279538571835
    2. ' d' → logprob: -5.2568206787109375
    3. 'dern' → logprob: -6.7568206787109375
    4. 'n' → logprob: -9.131820678710938
    5. '0' → logprob: -9.256820678710938
    6. 's' → logprob: -9.631820678710938
    7. ' dernier' → logprob: -9.631820678710938
    8. ' sommet' → logprob: -10.256820678710938
    9. 'last' → logprob: -11.131820678710938
    10. ' last' → logprob: -12.131820678710938

Token 1526: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10431386530399323
    2. ' n' → logprob: -2.979313850402832
    3. '0' → logprob: -3.104313850402832
    4. '(n' → logprob: -6.229313850402832
    5. '[-' → logprob: -7.229313850402832
    6. '[n' → logprob: -7.729313850402832
    7. ',' → logprob: -9.479313850402832
    8. ' ' → logprob: -10.104313850402832
    9. 'to' → logprob: -10.229313850402832
    10. ' (' → logprob: -11.354313850402832

Token 1527: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5956332683563232
    2. '0' → logprob: -0.8456332683563232
    3. '(n' → logprob: -4.595633506774902
    4. '(' → logprob: -5.845633506774902
    5. '[-' → logprob: -6.470633506774902
    6. '-' → logprob: -6.595633506774902
    7. 'dern' → logprob: -7.220633506774902
    8. '(-' → logprob: -7.220633506774902
    9. ' n' → logprob: -7.595633506774902
    10. 'à' → logprob: -7.845633506774902

Token 1528: ' au' (ID: 2791)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4433629512786865
    2. 'd' → logprob: -1.5683629512786865
    3. '   ' → logprob: -2.5683629512786865
    4. ' print' → logprob: -3.5683629512786865
    5. ',' → logprob: -3.9433629512786865
    6. ' d' → logprob: -4.318363189697266
    7. '(d' → logprob: -5.693363189697266
    8. 'else' → logprob: -5.693363189697266
    9. ')' → logprob: -6.318363189697266
    10. '(print' → logprob: -6.568363189697266

Token 1529: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.011186229065060616
    2. 'n' → logprob: -4.761186122894287
    3. 'dern' → logprob: -6.136186122894287
    4. ' sommet' → logprob: -7.886186122894287
    5. '(n' → logprob: -10.636186599731445
    6. ' n' → logprob: -13.761186599731445
    7. ' dernier' → logprob: -14.136186599731445
    8. 'summ' → logprob: -14.261186599731445
    9. '(s' → logprob: -14.886186599731445
    10. '```' → logprob: -15.011186599731445

Token 1530: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.32229432463645935
    2. '(n' → logprob: -1.3222943544387817
    3. ' n' → logprob: -4.947294235229492
    4. ' (' → logprob: -6.322294235229492
    5. 'dern' → logprob: -10.072294235229492
    6. '(' → logprob: -11.072294235229492
    7. '[n' → logprob: -11.572294235229492
    8. '-' → logprob: -11.572294235229492
    9. '```' → logprob: -12.447294235229492
    10. '(-' → logprob: -12.697294235229492

Token 1531: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.166338137816638e-05
    2. ' -' → logprob: -10.375031471252441
    3. '−' → logprob: -15.250031471252441
    4. '1' → logprob: -16.375032424926758
    5. '[-' → logprob: -17.625032424926758
    6. '–' → logprob: -18.750032424926758
    7. '   ' → logprob: -19.125032424926758
    8. '```' → logprob: -19.125032424926758
    9. '()-' → logprob: -19.500032424926758
    10. ' ' → logprob: -19.875032424926758

Token 1532: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.600714161526412e-05
    2. '-' → logprob: -9.500076293945312
    3. ' ' → logprob: -14.375076293945312
    4. '
' → logprob: -15.375076293945312
    5. '```' → logprob: -16.125076293945312
    6. '   ' → logprob: -16.250076293945312
    7. ' -' → logprob: -17.875076293945312
    8. 'n' → logprob: -18.500076293945312
    9. 'd' → logprob: -18.500076293945312
    10. '１' → logprob: -18.625076293945312

Token 1533: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.024036016315221786
    2. '   ' → logprob: -4.274035930633545
    3. 'else' → logprob: -4.774035930633545
    4. ' print' → logprob: -7.024035930633545
    5. '(print' → logprob: -7.774035930633545
    6. '.print' → logprob: -10.649036407470703
    7. ':' → logprob: -11.274036407470703
    8. ' else' → logprob: -11.649036407470703
    9. '```' → logprob: -11.774036407470703
    10. '	print' → logprob: -11.899036407470703

Token 1534: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.12693944573402405
    2. 'print' → logprob: -2.126939535140991
    3. '```' → logprob: -11.75193977355957
    4. ' else' → logprob: -13.00193977355957
    5. ' print' → logprob: -13.75193977355957
    6. '   ' → logprob: -16.62693977355957
    7. '``' → logprob: -17.50193977355957
    8. 'elif' → logprob: -18.12693977355957
    9. '(print' → logprob: -18.50193977355957
    10. '	print' → logprob: -18.87693977355957

Token 1535: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.682989776134491
    2. ':
' → logprob: -1.1829898357391357
    3. '   ' → logprob: -1.6829898357391357
    4. 'print' → logprob: -5.932989597320557
    5. ' print' → logprob: -9.807990074157715
    6. ' :
' → logprob: -13.182990074157715
    7. '(print' → logprob: -13.182990074157715
    8. '.print' → logprob: -13.432990074157715
    9. '```' → logprob: -13.432990074157715
    10. ' :' → logprob: -13.682990074157715

Token 1536: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1269369274377823
    2. 'print' → logprob: -2.126936912536621
    3. ' print' → logprob: -11.876936912536621
    4. '```' → logprob: -13.501936912536621
    5. '	print' → logprob: -14.501936912536621
    6. '       ' → logprob: -18.126937866210938
    7. '.print' → logprob: -20.001937866210938
    8. '(print' → logprob: -20.251937866210938
    9. '   ' → logprob: -20.251937866210938
    10. '_print' → logprob: -20.876937866210938

Token 1537: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.88418151892256e-05
    2. '   ' → logprob: -9.750059127807617
    3. ' print' → logprob: -15.000059127807617
    4. '```' → logprob: -15.750059127807617
    5. '	print' → logprob: -17.250059127807617
    6. 'printf' → logprob: -21.625059127807617
    7. 'pr' → logprob: -21.625059127807617
    8. '``' → logprob: -22.000059127807617
    9. '.print' → logprob: -22.500059127807617
    10. '(print' → logprob: -23.625059127807617

Token 1538: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -5.872261317563243e-05
    2. 'd' → logprob: -9.750059127807617
    3. '(' → logprob: -15.250059127807617
    4. ' d' → logprob: -16.500059127807617
    5. ' (' → logprob: -19.750059127807617
    6. '	d' → logprob: -21.000059127807617
    7. '((' → logprob: -21.250059127807617
    8. '(
' → logprob: -22.750059127807617
    9. '(int' → logprob: -23.000059127807617
    10. '(D' → logprob: -23.250059127807617

Token 1539: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.5048530030981055e-06
    2. '[n' → logprob: -13.500001907348633
    3. '[' → logprob: -18.125001907348633
    4. '-' → logprob: -19.250001907348633
    5. '][-' → logprob: -20.625001907348633
    6. '   ' → logprob: -21.125001907348633
    7. ' [-' → logprob: -22.125001907348633
    8. '```' → logprob: -22.250001907348633
    9. '[
' → logprob: -23.250001907348633
    10. 'n' → logprob: -23.375001907348633

Token 1540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '```' → logprob: -19.0
    4. '   ' → logprob: -19.375
    5. 'print' → logprob: -20.75
    6. '-' → logprob: -20.875
    7. '#' → logprob: -21.125
    8. '
' → logprob: -21.75
    9. ')' → logprob: -21.9375
    10. '' → logprob: -22.3125

Token 1541: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.875
    3. ')
' → logprob: -17.125
    4. '))' → logprob: -17.5
    5. '())' → logprob: -17.875
    6. '})' → logprob: -20.75
    7. '}' → logprob: -20.75
    8. ')`' → logprob: -20.875
    9. '()' → logprob: -21.0
    10. ')}' → logprob: -21.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1539
Tokens correctement prédits (1ère position, stricte): 312
Tokens correctement prédits (1ère position, avec adaptation): 327
Tokens correctement prédits (top 10): 810
Précision stricte (1ère position): 20.27%
Précision adaptée (1ère position): 21.25%
Précision (top 10): 52.63%
================================================================================
