================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter as CNT
_ = lambda x: set(CNT(x).keys())
c, N, S = -99, int(input()), input()
for z in range(1, N-1):
    c = c if c > len(_(S[:z]) & _(S[z:])) else len(_(S[:z]) & _(S[z:]))
else:
    print(c)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0460870265960693
    2. 'default' → logprob: -1.1710870265960693
    3. 'abc' → logprob: -1.7960870265960693
    4. 'Counter' → logprob: -2.4210870265960693
    5. ' defaultdict' → logprob: -2.6710870265960693
    6. 'named' → logprob: -5.421087265014648
    7. ' Counter' → logprob: -5.546087265014648
    8. ' abc' → logprob: -6.046087265014648
    9. ' deque' → logprob: -6.421087265014648
    10. '```' → logprob: -6.796087265014648

Token 4: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001549089647596702
    2. '\(' → logprob: -9.750154495239258
    3. '()' → logprob: -10.875154495239258
    4. '\' → logprob: -10.875154495239258
    5. '```' → logprob: -11.125154495239258
    6. '(
' → logprob: -11.250154495239258
    7. '.' → logprob: -11.750154495239258
    8. ' (' → logprob: -12.125154495239258
    9. 'newline' → logprob: -12.625154495239258
    10. 'import' → logprob: -13.000154495239258

Token 5: ' CNT' (ID: 179981)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.02681642211973667
    2. ' Counter' → logprob: -3.9018163681030273
    3. 'C' → logprob: -5.651816368103027
    4. 'counter' → logprob: -6.401816368103027
    5. ' counter' → logprob: -8.026816368103027
    6. '_counter' → logprob: -8.901816368103027
    7. '.Counter' → logprob: -8.901816368103027
    8. ' C' → logprob: -9.401816368103027
    9. '`' → logprob: -9.401816368103027
    10. '```' → logprob: -9.776816368103027

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008573795668780804
    2. '.' → logprob: -4.88357400894165
    3. ',' → logprob: -8.008573532104492
    4. '\' → logprob: -8.758573532104492
    5. 'C' → logprob: -8.758573532104492
    6. '\(' → logprob: -9.133573532104492
    7. '(
' → logprob: -9.883573532104492
    8. '\n' → logprob: -10.133573532104492
    9. 'a' → logprob: -10.883573532104492
    10. ';' → logprob: -10.883573532104492

Token 7: '_' (ID: 62)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07198106497526169
    2. 'C' → logprob: -3.3219809532165527
    3. '.' → logprob: -4.321980953216553
    4. 'a' → logprob: -5.196980953216553
    5. 'newline' → logprob: -5.946980953216553
    6. ',' → logprob: -6.196980953216553
    7. '(
' → logprob: -6.446980953216553
    8. 'c' → logprob: -6.571980953216553
    9. '\' → logprob: -6.946980953216553
    10. '\n' → logprob: -7.446980953216553

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1668938398361206
    2. ' =' → logprob: -1.2918938398361206
    3. 'CNT' → logprob: -1.2918938398361206
    4. '_' → logprob: -2.54189395904541
    5. 'C' → logprob: -3.29189395904541
    6. '=C' → logprob: -4.04189395904541
    7. '_CNT' → logprob: -6.66689395904541
    8. '_=' → logprob: -7.04189395904541
    9. '_C' → logprob: -7.29189395904541
    10. 'CT' → logprob: -7.41689395904541

Token 9: ' lambda' (ID: 27871)
  Prédit: 'CNT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CNT' → logprob: -0.013573103584349155
    2. ' CNT' → logprob: -4.388573169708252
    3. 'C' → logprob: -7.388573169708252
    4. '_CNT' → logprob: -8.763572692871094
    5. '[]' → logprob: -9.388572692871094
    6. 'CN' → logprob: -9.638572692871094
    7. '[C' → logprob: -10.513572692871094
    8. '"C' → logprob: -10.763572692871094
    9. 'input' → logprob: -11.138572692871094
    10. ' []' → logprob: -11.263572692871094

Token 10: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04476356506347656
    2. ' ' → logprob: -3.6697635650634766
    3. ' s' → logprob: -4.669763565063477
    4. 'x' → logprob: -5.419763565063477
    5. ' a' → logprob: -5.794763565063477
    6. '  ' → logprob: -7.544763565063477
    7. 'a' → logprob: -8.919763565063477
    8. ' y' → logprob: -9.169763565063477
    9. ' n' → logprob: -9.294763565063477
    10. 's' → logprob: -9.419763565063477

Token 11: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023670047521591187
    2. ' :' → logprob: -4.273670196533203
    3. ':x' → logprob: -4.773670196533203
    4. ' x' → logprob: -7.648670196533203
    5. ':list' → logprob: -8.523670196533203
    6. 'x' → logprob: -9.523670196533203
    7. ',' → logprob: -9.898670196533203
    8. '[' → logprob: -10.148670196533203
    9. 'len' → logprob: -10.273670196533203
    10. '[:' → logprob: -10.648670196533203

Token 12: ' set' (ID: 920)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6694968342781067
    2. 'x' → logprob: -1.669496774673462
    3. ' Counter' → logprob: -1.794496774673462
    4. 'Counter' → logprob: -3.419496774673462
    5. ' dict' → logprob: -3.669496774673462
    6. ' list' → logprob: -3.919496774673462
    7. 'list' → logprob: -4.544497013092041
    8. ' len' → logprob: -4.669497013092041
    9. 'dict' → logprob: -4.919497013092041
    10. ' [' → logprob: -5.294497013092041

Token 13: '(C' (ID: 5559)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014179765712469816
    2. '(x' → logprob: -7.501418113708496
    3. '(
' → logprob: -8.376418113708496
    4. '_' → logprob: -8.376418113708496
    5. ' (' → logprob: -8.751418113708496
    6. ',' → logprob: -10.126418113708496
    7. ')' → logprob: -10.376418113708496
    8. '.' → logprob: -11.001418113708496
    9. '((' → logprob: -11.001418113708496
    10. ' ' → logprob: -11.001418113708496

Token 14: 'NT' (ID: 12235)
  Prédit: 'NT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NT' → logprob: -1.8624639324116288e-06
    2. 'N' → logprob: -13.875001907348633
    3. ' NT' → logprob: -15.625001907348633
    4. 'CNT' → logprob: -15.750001907348633
    5. 'T' → logprob: -16.000001907348633
    6. '(N' → logprob: -17.000001907348633
    7. '[' → logprob: -17.125001907348633
    8. 'ounter' → logprob: -17.250001907348633
    9. 'ONT' → logprob: -17.500001907348633
    10. '<' → logprob: -17.500001907348633

Token 15: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.029971938580274582
    2. '(' → logprob: -3.5299718379974365
    3. ')' → logprob: -8.654972076416016
    4. ' (' → logprob: -10.779972076416016
    5. 'x' → logprob: -11.529972076416016
    6. ')x' → logprob: -12.779972076416016
    7. '(
' → logprob: -12.904972076416016
    8. 's' → logprob: -13.029972076416016
    9. ')(' → logprob: -13.279972076416016
    10. '(s' → logprob: -13.279972076416016

Token 16: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.05728284642100334
    2. ')' → logprob: -2.9322829246520996
    3. '))' → logprob: -6.8072829246521
    4. '()).' → logprob: -7.6822829246521
    5. '(' → logprob: -7.8072829246521
    6. '(x' → logprob: -8.557282447814941
    7. ')))' → logprob: -9.057282447814941
    8. '())' → logprob: -10.807282447814941
    9. ')(' → logprob: -10.807282447814941
    10. ' ).' → logprob: -11.682282447814941

Token 17: 'keys' (ID: 20817)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.02763473615050316
    2. 'items' → logprob: -4.402634620666504
    3. 'elements' → logprob: -4.402634620666504
    4. 'keys' → logprob: -6.152634620666504
    5. ' values' → logprob: -8.152634620666504
    6. 'most' → logprob: -8.527634620666504
    7. ' elements' → logprob: -9.277634620666504
    8. ' keys' → logprob: -10.777634620666504
    9. ' items' → logprob: -10.902634620666504
    10. '.values' → logprob: -11.402634620666504

Token 18: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.19942273199558258
    2. ')' → logprob: -1.8244227170944214
    3. '()' → logprob: -4.074422836303711
    4. '(' → logprob: -6.449422836303711
    5. '))' → logprob: -7.949422836303711
    6. '()))' → logprob: -8.074422836303711
    7. ' ())' → logprob: -8.949422836303711
    8. '`)' → logprob: -10.824422836303711
    9. '(x' → logprob: -11.324422836303711
    10. '().' → logprob: -11.324422836303711

Token 19: 'c' (ID: 66)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013421354815363884
    2. ',' → logprob: -8.001341819763184
    3. '.' → logprob: -8.251341819763184
    4. '_' → logprob: -8.376341819763184
    5. '(
' → logprob: -8.751341819763184
    6. ')' → logprob: -8.751341819763184
    7. '(x' → logprob: -9.376341819763184
    8. '<|end|>' → logprob: -10.751341819763184
    9. '[' → logprob: -11.251341819763184
    10. '(user' → logprob: -11.626341819763184

Token 20: ',' (ID: 11)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.215415358543396
    2. 'ou' → logprob: -2.5904154777526855
    3. 'n' → logprob: -3.3404154777526855
    4. 'ounter' → logprob: -3.8404154777526855
    5. 'oun' → logprob: -4.0904154777526855
    6. 'h' → logprob: -5.0904154777526855
    7. 'ount' → logprob: -5.4654154777526855
    8. ')' → logprob: -5.4654154777526855
    9. '_' → logprob: -5.4654154777526855
    10. 'l' → logprob: -5.5904154777526855

Token 21: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8377835154533386
    2. ' d' → logprob: -1.3377835750579834
    3. '_' → logprob: -2.0877835750579834
    4. ' _' → logprob: -2.0877835750579834
    5. 'd' → logprob: -3.5877835750579834
    6. ' s' → logprob: -4.087783336639404
    7. ' b' → logprob: -5.712783336639404
    8. 's' → logprob: -5.837783336639404
    9. ' =' → logprob: -6.712783336639404
    10. ' c' → logprob: -7.087783336639404

Token 22: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18512661755084991
    2. '=' → logprob: -2.060126543045044
    3. ' ' → logprob: -3.685126543045044
    4. ',' → logprob: -5.060126781463623
    5. '_' → logprob: -5.060126781463623
    6. ')' → logprob: -5.810126781463623
    7. ' ,' → logprob: -8.560126304626465
    8. '  ' → logprob: -8.685126304626465
    9. 's' → logprob: -9.560126304626465
    10. ' )' → logprob: -9.685126304626465

Token 23: ' S' (ID: 336)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3680182099342346
    2. ' ' → logprob: -1.4930181503295898
    3. '=' → logprob: -3.36801815032959
    4. ' s' → logprob: -3.61801815032959
    5. '_' → logprob: -5.24301815032959
    6. 's' → logprob: -5.61801815032959
    7. 'v' → logprob: -5.99301815032959
    8. 'a' → logprob: -6.49301815032959
    9. ' v' → logprob: -7.11801815032959
    10. ' a' → logprob: -7.24301815032959

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28354978561401367
    2. '=' → logprob: -1.4085497856140137
    3. ' ' → logprob: -6.408549785614014
    4. ',' → logprob: -7.533549785614014
    5. ')' → logprob: -9.408550262451172
    6. '_' → logprob: -10.408550262451172
    7. '.' → logprob: -10.658550262451172
    8. ' =
' → logprob: -10.658550262451172
    9. ' ,' → logprob: -10.908550262451172
    10. '  ' → logprob: -11.283550262451172

Token 25: ' -' (ID: 533)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.9630520343780518
    2. ' ' → logprob: -1.0880520343780518
    3. 'input' → logprob: -1.8380520343780518
    4. '0' → logprob: -2.7130520343780518
    5. ' map' → logprob: -3.5880520343780518
    6. ' [],' → logprob: -4.588051795959473
    7. 'map' → logprob: -5.088051795959473
    8. ' []' → logprob: -6.088051795959473
    9. '[]' → logprob: -6.838051795959473
    10. ' int' → logprob: -7.213051795959473

Token 26: '99' (ID: 2058)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010603943839669228
    2. 'len' → logprob: -5.885603904724121
    3. '2' → logprob: -6.260603904724121
    4. '10' → logprob: -6.760603904724121
    5. ' ' → logprob: -7.010603904724121
    6. 'int' → logprob: -7.010603904724121
    7. '_' → logprob: -7.135603904724121
    8. '5' → logprob: -7.885603904724121
    9. '3' → logprob: -8.760603904724121
    10. '[]' → logprob: -8.885603904724121

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016432562842965126
    2. ' ,' → logprob: -4.766432762145996
    3. ' ' → logprob: -6.016432762145996
    4. '<|end|>' → logprob: -6.016432762145996
    5. ',
' → logprob: -6.891432762145996
    6. ')' → logprob: -7.516432762145996
    7. ',None' → logprob: -8.891432762145996
    8. '0' → logprob: -8.891432762145996
    9. 'None' → logprob: -9.266432762145996
    10. '[' → logprob: -9.266432762145996

Token 28: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24043062329292297
    2. ' []' → logprob: -1.8654305934906006
    3. '[]' → logprob: -4.24043083190918
    4. '0' → logprob: -4.36543083190918
    5. ' ''' → logprob: -5.11543083190918
    6. ' None' → logprob: -5.49043083190918
    7. ' [],' → logprob: -5.74043083190918
    8. ' '' → logprob: -5.99043083190918
    9. '100' → logprob: -6.11543083190918
    10. '<|end|>' → logprob: -6.11543083190918

Token 29: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05087041109800339
    2. '('' → logprob: -3.675870418548584
    3. '()' → logprob: -4.675870418548584
    4. '(input' → logprob: -4.675870418548584
    5. '<|end|>' → logprob: -5.425870418548584
    6. ''' → logprob: -8.425869941711426
    7. '("' → logprob: -8.925869941711426
    8. ' ' → logprob: -8.925869941711426
    9. 'input' → logprob: -9.675869941711426
    10. ')' → logprob: -9.800869941711426

Token 30: '()),' (ID: 24379)
  Prédit: '()),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()),' → logprob: -0.37223681807518005
    2. '())' → logprob: -1.3722368478775024
    3. '()' → logprob: -2.872236728668213
    4. '(),' → logprob: -8.372237205505371
    5. '(' → logprob: -8.497237205505371
    6. '());' → logprob: -8.997237205505371
    7. '().' → logprob: -9.872237205505371
    8. '()))' → logprob: -10.372237205505371
    9. '()`' → logprob: -10.872237205505371
    10. '();)' → logprob: -12.497237205505371

Token 31: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.584438145160675
    2. 'input' → logprob: -0.834438145160675
    3. '_' → logprob: -5.834438323974609
    4. ' ' → logprob: -6.834438323974609
    5. ' list' → logprob: -7.334438323974609
    6. 'list' → logprob: -7.334438323974609
    7. 'str' → logprob: -7.709438323974609
    8. ' [' → logprob: -7.709438323974609
    9. ' str' → logprob: -7.709438323974609
    10. '[input' → logprob: -7.959438323974609

Token 32: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02339758723974228
    2. '(' → logprob: -3.77339768409729
    3. '().' → logprob: -9.523397445678711
    4. ' ()' → logprob: -10.898397445678711
    5. '())' → logprob: -11.398397445678711
    6. '('' → logprob: -11.773397445678711
    7. '()
' → logprob: -12.023397445678711
    8. '();' → logprob: -12.148397445678711
    9. '()`' → logprob: -12.273397445678711
    10. '("' → logprob: -12.398397445678711

Token 33: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2588886618614197
    2. '[' → logprob: -2.7588887214660645
    3. '<|end|>' → logprob: -3.0088887214660645
    4. '.' → logprob: -3.1338887214660645
    5. 'for' → logprob: -4.0088887214660645
    6. ' 
' → logprob: -4.5088887214660645
    7. ' ' → logprob: -5.0088887214660645
    8. '[:]' → logprob: -5.3838887214660645
    9. ')' → logprob: -5.5088887214660645
    10. ':' → logprob: -5.8838887214660645

Token 34: ' z' (ID: 579)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14610528945922852
    2. '_' → logprob: -3.3961052894592285
    3. ' x' → logprob: -3.5211052894592285
    4. ' _' → logprob: -3.8961052894592285
    5. ' s' → logprob: -4.0211052894592285
    6. ' c' → logprob: -4.3961052894592285
    7. 'i' → logprob: -4.8961052894592285
    8. ' ' → logprob: -5.1461052894592285
    9. ' a' → logprob: -5.8961052894592285
    10. 'x' → logprob: -7.1461052894592285

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043741367757320404
    2. 'in' → logprob: -3.293741464614868
    3. ' ' → logprob: -5.418741226196289
    4. '_' → logprob: -7.293741226196289
    5. ' i' → logprob: -9.168741226196289
    6. '  ' → logprob: -9.293741226196289
    7. ',' → logprob: -9.543741226196289
    8. ' _' → logprob: -9.668741226196289
    9. 'n' → logprob: -9.918741226196289
    10. '_in' → logprob: -10.356241226196289

Token 36: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4275636374950409
    2. ' _' → logprob: -1.9275636672973633
    3. '_' → logprob: -2.0525636672973633
    4. ' S' → logprob: -3.3025636672973633
    5. 'range' → logprob: -3.5525636672973633
    6. ' ' → logprob: -5.677563667297363
    7. 'S' → logprob: -5.802563667297363
    8. ' xrange' → logprob: -7.552563667297363
    9. ' _.' → logprob: -7.802563667297363
    10. '_.' → logprob: -9.052563667297363

Token 37: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14327766001224518
    2. '(N' → logprob: -2.018277645111084
    3. '(S' → logprob: -8.393278121948242
    4. '(len' → logprob: -8.768278121948242
    5. '(c' → logprob: -9.518278121948242
    6. '(n' → logprob: -9.643278121948242
    7. '(s' → logprob: -10.518278121948242
    8. '(
' → logprob: -10.768278121948242
    9. ' (' → logprob: -11.643278121948242
    10. '((' → logprob: -12.018278121948242

Token 38: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02249709703028202
    2. ' N' → logprob: -4.022497177124023
    3. '1' → logprob: -6.272497177124023
    4. 'c' → logprob: -7.022497177124023
    5. 'S' → logprob: -7.897497177124023
    6. ' ' → logprob: -7.897497177124023
    7. '_' → logprob: -8.397497177124023
    8. '0' → logprob: -8.897497177124023
    9. 'len' → logprob: -9.522497177124023
    10. ' c' → logprob: -9.647497177124023

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2270219475030899
    2. ' ,' → logprob: -1.6020219326019287
    3. ',N' → logprob: -6.477022171020508
    4. ' ' → logprob: -10.227022171020508
    5. ' N' → logprob: -11.852022171020508
    6. ',len' → logprob: -11.852022171020508
    7. ' ,
' → logprob: -12.352022171020508
    8. ',
' → logprob: -12.602022171020508
    9. ' ,

' → logprob: -12.602022171020508
    10. '1' → logprob: -13.352022171020508

Token 40: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01136928703635931
    2. ' N' → logprob: -4.511369228363037
    3. 'len' → logprob: -8.636369705200195
    4. 'S' → logprob: -9.511369705200195
    5. ' ' → logprob: -10.261369705200195
    6. ' len' → logprob: -11.886369705200195
    7. '10' → logprob: -12.011369705200195
    8. ' S' → logprob: -12.886369705200195
    9. 'c' → logprob: -12.886369705200195
    10. '1' → logprob: -13.011369705200195

Token 41: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29662036895751953
    2. '):' → logprob: -1.6716203689575195
    3. ' +' → logprob: -2.7966203689575195
    4. ' ):' → logprob: -5.2966203689575195
    5. '):
' → logprob: -6.9216203689575195
    6. '//' → logprob: -7.0466203689575195
    7. ' //' → logprob: -7.7966203689575195
    8. '-' → logprob: -8.79662036895752
    9. ')' → logprob: -8.79662036895752
    10. ' -' → logprob: -10.67162036895752

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012725738633889705
    2. ' ' → logprob: -9.875126838684082
    3. '0' → logprob: -10.875126838684082
    4. '+' → logprob: -10.875126838684082
    5. '2' → logprob: -11.000126838684082
    6. '-' → logprob: -11.125126838684082
    7. '```' → logprob: -12.875126838684082
    8. 'len' → logprob: -14.125126838684082
    9. ' -' → logprob: -14.375126838684082
    10. '   ' → logprob: -14.375126838684082

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002602172316983342
    2. ' ):' → logprob: -6.5026021003723145
    3. ')' → logprob: -7.5026021003723145
    4. '+' → logprob: -7.7526021003723145
    5. '):
' → logprob: -9.252602577209473
    6. ',' → logprob: -11.877602577209473
    7. ':' → logprob: -12.002602577209473
    8. ' +' → logprob: -13.002602577209473
    9. ' )' → logprob: -13.252602577209473
    10. '```' → logprob: -14.002602577209473

Token 44: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.031635675579309464
    2. '<|end|>' → logprob: -4.156635761260986
    3. '   ' → logprob: -5.156635761260986
    4. '    ' → logprob: -5.781635761260986
    5. ':' → logprob: -5.906635761260986
    6. ' 
' → logprob: -6.156635761260986
    7. '  ' → logprob: -7.406635761260986
    8. ' if' → logprob: -8.031635284423828
    9. ' :' → logprob: -8.531635284423828
    10. '    
' → logprob: -8.656635284423828

Token 45: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.371101975440979
    2. ' if' → logprob: -1.371101975440979
    3. ' s' → logprob: -3.8711018562316895
    4. '    ' → logprob: -4.2461018562316895
    5. ' for' → logprob: -4.8711018562316895
    6. '<|end|>' → logprob: -5.3711018562316895
    7. 's' → logprob: -5.9961018562316895
    8. '   ' → logprob: -6.8711018562316895
    9. 'if' → logprob: -6.9961018562316895
    10. ' i' → logprob: -7.8711018562316895

Token 46: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6251572966575623
    2. '+=' → logprob: -1.375157356262207
    3. ' =' → logprob: -2.125157356262207
    4. '+' → logprob: -3.000157356262207
    5. '=' → logprob: -3.375157356262207
    6. ' ' → logprob: -5.500157356262207
    7. ' +' → logprob: -6.375157356262207
    8. ',' → logprob: -6.500157356262207
    9. ' ==' → logprob: -7.875157356262207
    10. ' ,' → logprob: -8.500157356262207

Token 47: ' c' (ID: 274)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3910253643989563
    2. ' max' → logprob: -1.2660253047943115
    3. 'z' → logprob: -4.891025543212891
    4. 'S' → logprob: -5.266025543212891
    5. '_' → logprob: -5.516025543212891
    6. 'len' → logprob: -5.516025543212891
    7. ' z' → logprob: -5.641025543212891
    8. ' S' → logprob: -5.766025543212891
    9. 'sum' → logprob: -6.016025543212891
    10. ' CNT' → logprob: -6.141025543212891

Token 48: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14613330364227295
    2. ' +' → logprob: -2.1461334228515625
    3. ' if' → logprob: -5.1461334228515625
    4. ' or' → logprob: -5.5211334228515625
    5. '|' → logprob: -5.8961334228515625
    6. ' ' → logprob: -6.3961334228515625
    7. ' |' → logprob: -6.5211334228515625
    8. '-' → logprob: -7.0211334228515625
    9. 'max' → logprob: -7.6461334228515625
    10. 'if' → logprob: -7.7711334228515625

Token 49: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.8376536965370178
    2. 'c' → logprob: -1.087653636932373
    3. ' S' → logprob: -2.712653636932373
    4. 'S' → logprob: -2.837653636932373
    5. '_' → logprob: -3.337653636932373
    6. ' max' → logprob: -4.087653636932373
    7. ' z' → logprob: -4.212653636932373
    8. 'z' → logprob: -4.337653636932373
    9. ' CNT' → logprob: -5.337653636932373
    10. 'max' → logprob: -5.712653636932373

Token 50: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.18466627597808838
    2. ' >' → logprob: -2.559666156768799
    3. 'else' → logprob: -2.809666156768799
    4. '!=' → logprob: -4.434666156768799
    5. ' else' → logprob: -4.684666156768799
    6. '>=' → logprob: -5.559666156768799
    7. ' !=' → logprob: -6.559666156768799
    8. '!=-' → logprob: -6.684666156768799
    9. ' ' → logprob: -6.809666156768799
    10. '<' → logprob: -7.434666156768799

Token 51: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.4979528188705444
    2. '_' → logprob: -1.7479528188705444
    3. ' len' → logprob: -1.9979528188705444
    4. '0' → logprob: -1.9979528188705444
    5. 'z' → logprob: -2.247952938079834
    6. ' z' → logprob: -2.872952938079834
    7. ' CNT' → logprob: -3.122952938079834
    8. 'CNT' → logprob: -3.247952938079834
    9. ' ' → logprob: -3.497952938079834
    10. 'max' → logprob: -4.622952938079834

Token 52: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.30458009243011475
    2. '(' → logprob: -2.6795802116394043
    3. '_' → logprob: -2.9295802116394043
    4. '(_.' → logprob: -3.3045802116394043
    5. '_(' → logprob: -3.4295802116394043
    6. '(_)' → logprob: -3.5545802116394043
    7. '(_("' → logprob: -3.9295802116394043
    8. '(_('' → logprob: -4.179580211639404
    9. '((' → logprob: -5.929580211639404
    10. ' _(' → logprob: -6.054580211639404

Token 53: '(' (ID: 7)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.008957617916166782
    2. '(' → logprob: -5.133957386016846
    3. '((' → logprob: -6.883957386016846
    4. '(s' → logprob: -7.008957386016846
    5. 'S' → logprob: -7.633957386016846
    6. '([' → logprob: -8.883957862854004
    7. ')' → logprob: -9.258957862854004
    8. ' (' → logprob: -9.633957862854004
    9. '(_' → logprob: -9.633957862854004
    10. '('' → logprob: -10.008957862854004

Token 54: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.06966361403465271
    2. '(S' → logprob: -2.8196635246276855
    3. ' S' → logprob: -5.0696635246276855
    4. ')' → logprob: -7.8196635246276855
    5. '(' → logprob: -8.069664001464844
    6. '   ' → logprob: -8.819664001464844
    7. ' ' → logprob: -9.319664001464844
    8. '[S' → logprob: -9.569664001464844
    9. ' (' → logprob: -9.694664001464844
    10. 's' → logprob: -9.944664001464844

Token 55: '[:' (ID: 7808)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.41939759254455566
    2. '(S' → logprob: -1.7943975925445557
    3. '[z' → logprob: -2.0443975925445557
    4. '[:' → logprob: -3.6693975925445557
    5. '(z' → logprob: -4.544397354125977
    6. '[' → logprob: -5.669397354125977
    7. '[c' → logprob: -6.544397354125977
    8. '[:-' → logprob: -7.044397354125977
    9. 'S' → logprob: -7.169397354125977
    10. '))' → logprob: -7.294397354125977

Token 56: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0008296403102576733
    2. ' z' → logprob: -7.500829696655273
    3. '   ' → logprob: -8.875829696655273
    4. ' ' → logprob: -10.000829696655273
    5. 'N' → logprob: -10.750829696655273
    6. '(z' → logprob: -11.250829696655273
    7. '-z' → logprob: -11.500829696655273
    8. 'S' → logprob: -11.625829696655273
    9. '  ' → logprob: -12.250829696655273
    10. ')' → logprob: -12.250829696655273

Token 57: '])' (ID: 4636)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.024465834721922874
    2. '+' → logprob: -5.024466037750244
    3. ']' → logprob: -5.399466037750244
    4. ' ' → logprob: -5.774466037750244
    5. '']))' → logprob: -6.149466037750244
    6. '))' → logprob: -6.149466037750244
    7. ' ]' → logprob: -6.899466037750244
    8. '])' → logprob: -6.899466037750244
    9. '   ' → logprob: -7.399466037750244
    10. ')))' → logprob: -7.524466037750244

Token 58: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04314271733164787
    2. ' )' → logprob: -3.293142795562744
    3. '+' → logprob: -6.543142795562744
    4. ')+' → logprob: -7.293142795562744
    5. ' else' → logprob: -7.543142795562744
    6. ' ' → logprob: -7.793142795562744
    7. '+)' → logprob: -7.793142795562744
    8. ' +' → logprob: -7.793142795562744
    9. 'else' → logprob: -8.168142318725586
    10. '))' → logprob: -8.543142318725586

Token 59: ' _(' (ID: 139388)
  Prédit: ' _('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _(' → logprob: -0.289856493473053
    2. '_(' → logprob: -1.7898564338684082
    3. '_' → logprob: -2.539856433868408
    4. ' ' → logprob: -6.164856433868408
    5. ' _' → logprob: -6.289856433868408
    6. ' _('' → logprob: -7.789856433868408
    7. ')' → logprob: -8.289856910705566
    8. '<|end|>' → logprob: -8.539856910705566
    9. '_^(' → logprob: -8.664856910705566
    10. ' _("' → logprob: -9.164856910705566

Token 60: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.009931152686476707
    2. '(S' → logprob: -5.2599310874938965
    3. ' S' → logprob: -5.3849310874938965
    4. '_' → logprob: -10.009931564331055
    5. '_S' → logprob: -10.759931564331055
    6. ')' → logprob: -11.384931564331055
    7. '(' → logprob: -11.384931564331055
    8. ' ' → logprob: -13.259931564331055
    9. '   ' → logprob: -13.384931564331055
    10. '>S' → logprob: -13.384931564331055

Token 61: '[z' (ID: 105082)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.820958137512207
    2. '[z' → logprob: -0.945958137512207
    3. 'S' → logprob: -2.195958137512207
    4. '[:' → logprob: -3.695958137512207
    5. '(S' → logprob: -3.945958137512207
    6. 'z' → logprob: -5.445958137512207
    7. ' S' → logprob: -5.945958137512207
    8. '(z' → logprob: -6.070958137512207
    9. '[' → logprob: -6.070958137512207
    10. ':S' → logprob: -6.570958137512207

Token 62: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2264038771390915
    2. ':]' → logprob: -1.601403832435608
    3. '+' → logprob: -8.226404190063477
    4. 'S' → logprob: -8.976404190063477
    5. ':S' → logprob: -9.226404190063477
    6. ' :' → logprob: -9.351404190063477
    7. ' :]' → logprob: -9.351404190063477
    8. ']))' → logprob: -9.476404190063477
    9. ' ' → logprob: -9.601404190063477
    10. ':-' → logprob: -9.851404190063477

Token 63: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.2912732660770416
    2. 'z' → logprob: -1.5412732362747192
    3. ']' → logprob: -4.16627311706543
    4. '])))' → logprob: -4.29127311706543
    5. ' ]' → logprob: -5.91627311706543
    6. ' z' → logprob: -6.16627311706543
    7. '])' → logprob: -6.54127311706543
    8. ' ' → logprob: -6.79127311706543
    9. 'N' → logprob: -7.29127311706543
    10. ']))
' → logprob: -8.04127311706543

Token 64: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4289602041244507
    2. 'else' → logprob: -1.0539602041244507
    3. '-' → logprob: -8.678959846496582
    4. ' ' → logprob: -9.928959846496582
    5. '+' → logprob: -11.553959846496582
    6. ' els' → logprob: -11.803959846496582
    7. '   ' → logprob: -12.178959846496582
    8. '        ' → logprob: -12.678959846496582
    9. '    ' → logprob: -13.053959846496582
    10. '>' → logprob: -13.303959846496582

Token 65: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.523377537727356
    2. ' len' → logprob: -0.898377537727356
    3. '(len' → logprob: -9.523377418518066
    4. '	len' → logprob: -9.523377418518066
    5. '   ' → logprob: -10.523377418518066
    6. ' ' → logprob: -10.648377418518066
    7. '    ' → logprob: -11.648377418518066
    8. '[len' → logprob: -11.648377418518066
    9. '<len' → logprob: -11.773377418518066
    10. 'z' → logprob: -11.773377418518066

Token 66: '(_' (ID: 4963)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40380677580833435
    2. '(_' → logprob: -1.1538068056106567
    3. '_' → logprob: -4.778806686401367
    4. '_(' → logprob: -5.153806686401367
    5. '(_('' → logprob: -7.278806686401367
    6. '(_("' → logprob: -7.778806686401367
    7. '<|end|>' → logprob: -7.903806686401367
    8. '(_)' → logprob: -7.903806686401367
    9. ' _(' → logprob: -8.528806686401367
    10. '((' → logprob: -8.778806686401367

Token 67: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.520416259765625
    2. '(S' → logprob: -1.520416259765625
    3. '_(' → logprob: -2.395416259765625
    4. '_' → logprob: -3.020416259765625
    5. '(_' → logprob: -3.145416259765625
    6. '((' → logprob: -6.145416259765625
    7. '(C' → logprob: -6.895416259765625
    8. ' _(' → logprob: -7.520416259765625
    9. ')' → logprob: -9.395416259765625
    10. '(_)' → logprob: -9.770416259765625

Token 68: 'S' (ID: 50)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.20920519530773163
    2. 'S' → logprob: -1.709205150604248
    3. '(' → logprob: -5.584205150604248
    4. '_' → logprob: -6.084205150604248
    5. '_(' → logprob: -6.959205150604248
    6. ')' → logprob: -7.959205150604248
    7. '_S' → logprob: -8.959205627441406
    8. ' S' → logprob: -9.084205627441406
    9. '(_' → logprob: -10.334205627441406
    10. 's' → logprob: -10.334205627441406

Token 69: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.007348678074777126
    2. '[z' → logprob: -5.007348537445068
    3. '(z' → logprob: -7.507348537445068
    4. '(:' → logprob: -11.132349014282227
    5. '[' → logprob: -11.257349014282227
    6. '(' → logprob: -11.257349014282227
    7. '[:]' → logprob: -11.632349014282227
    8. ')' → logprob: -12.132349014282227
    9. '[S' → logprob: -12.382349014282227
    10. ':' → logprob: -12.382349014282227

Token 70: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00015395533409900963
    2. ' z' → logprob: -9.250153541564941
    3. '[z' → logprob: -11.000153541564941
    4. 'S' → logprob: -11.125153541564941
    5. '   ' → logprob: -12.000153541564941
    6. ')' → logprob: -12.250153541564941
    7. '	z' → logprob: -12.500153541564941
    8. '[' → logprob: -12.625153541564941
    9. '(z' → logprob: -13.125153541564941
    10. '<|end|>' → logprob: -13.250153541564941

Token 71: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00965468306094408
    2. ']' → logprob: -5.509654521942139
    3. ']))' → logprob: -5.509654521942139
    4. '[z' → logprob: -7.384654521942139
    5. ')' → logprob: -7.884654521942139
    6. 'z' → logprob: -8.884654998779297
    7. '   ' → logprob: -9.384654998779297
    8. '])))' → logprob: -9.509654998779297
    9. ''])' → logprob: -10.009654998779297
    10. ' ])' → logprob: -10.134654998779297

Token 72: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4424677789211273
    2. ' &' → logprob: -1.5674678087234497
    3. '&' → logprob: -2.31746768951416
    4. ')&' → logprob: -3.56746768951416
    5. ' )' → logprob: -4.56746768951416
    6. ' &)' → logprob: -5.56746768951416
    7. '&)' → logprob: -5.69246768951416
    8. '))' → logprob: -6.31746768951416
    9. ' ' → logprob: -7.31746768951416
    10. '&amp' → logprob: -7.44246768951416

Token 73: ' _(' (ID: 139388)
  Prédit: ' _('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _(' → logprob: -0.148137629032135
    2. '_(' → logprob: -2.0231375694274902
    3. '_' → logprob: -5.52313756942749
    4. '(S' → logprob: -7.77313756942749
    5. ' _' → logprob: -7.77313756942749
    6. '(' → logprob: -8.148138046264648
    7. ' (' → logprob: -8.398138046264648
    8. ' ' → logprob: -11.023138046264648
    9. ')' → logprob: -11.273138046264648
    10. '_^(' → logprob: -11.648138046264648

Token 74: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.07922562956809998
    2. '(S' → logprob: -2.579225540161133
    3. ' S' → logprob: -8.454225540161133
    4. '(' → logprob: -9.829225540161133
    5. ')' → logprob: -10.454225540161133
    6. ' (' → logprob: -11.829225540161133
    7. '<|end|>' → logprob: -12.204225540161133
    8. '...' → logprob: -12.579225540161133
    9. 's' → logprob: -12.829225540161133
    10. '[S' → logprob: -12.954225540161133

Token 75: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -0.012178780511021614
    2. 'S' → logprob: -4.512178897857666
    3. 'z' → logprob: -8.012178421020508
    4. '[S' → logprob: -8.387178421020508
    5. '[:' → logprob: -8.512178421020508
    6. ')' → logprob: -9.262178421020508
    7. '[' → logprob: -9.387178421020508
    8. ':z' → logprob: -9.887178421020508
    9. ':' → logprob: -10.012178421020508
    10. '(z' → logprob: -10.512178421020508

Token 76: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04516289383172989
    2. 'z' → logprob: -4.045162677764893
    3. ']))' → logprob: -4.545162677764893
    4. ':z' → logprob: -4.920162677764893
    5. ':]' → logprob: -5.170162677764893
    6. '[z' → logprob: -6.170162677764893
    7. '+' → logprob: -7.670162677764893
    8. '])))' → logprob: -8.54516315460205
    9. '(z' → logprob: -9.54516315460205
    10. '   ' → logprob: -9.92016315460205

Token 77: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.5290682315826416
    2. 'z' → logprob: -0.9040682315826416
    3. '])))' → logprob: -6.0290679931640625
    4. '])' → logprob: -6.5290679931640625
    5. ']' → logprob: -7.0290679931640625
    6. 'S' → logprob: -7.7790679931640625
    7. '(z' → logprob: -9.029067993164062
    8. '   ' → logprob: -9.154067993164062
    9. ':z' → logprob: -9.279067993164062
    10. ':' → logprob: -9.404067993164062

Token 78: 'else' (ID: 2807)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.173704271830502e-06
    2. ' print' → logprob: -13.12500286102295
    3. 'c' → logprob: -15.37500286102295
    4. ')' → logprob: -15.75000286102295
    5. '(print' → logprob: -15.75000286102295
    6. '```' → logprob: -16.000003814697266
    7. 'pr' → logprob: -16.250003814697266
    8. 'p' → logprob: -16.500003814697266
    9. '_' → logprob: -16.625003814697266
    10. 'return' → logprob: -16.625003814697266

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03658686578273773
    2. '   ' → logprob: -3.7865867614746094
    3. ':
' → logprob: -4.786586761474609
    4. ' :' → logprob: -5.411586761474609
    5. ' :
' → logprob: -8.28658676147461
    6. '    ' → logprob: -9.66158676147461
    7. ' ' → logprob: -10.16158676147461
    8. '  ' → logprob: -11.03658676147461
    9. ' c' → logprob: -11.16158676147461
    10. '    
' → logprob: -12.16158676147461

Token 80: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000995890935882926
    2. ' print' → logprob: -7.250996112823486
    3. 'c' → logprob: -8.750995635986328
    4. '   ' → logprob: -9.000995635986328
    5. ' c' → logprob: -12.500995635986328
    6. 'pr' → logprob: -15.125995635986328
    7. '	print' → logprob: -15.375995635986328
    8. '```' → logprob: -17.000995635986328
    9. ' ' → logprob: -17.875995635986328
    10. 'pass' → logprob: -18.125995635986328

Token 81: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.5094070477061905e-05
    2. ' print' → logprob: -11.500015258789062
    3. 'c' → logprob: -12.375015258789062
    4. '   ' → logprob: -14.750015258789062
    5. 'pr' → logprob: -15.750015258789062
    6. 'pass' → logprob: -15.875015258789062
    7. '...' → logprob: -18.750015258789062
    8. '	print' → logprob: -18.875015258789062
    9. 'printf' → logprob: -19.125015258789062
    10. '```' → logprob: -19.125015258789062

Token 82: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04230387881398201
    2. '('' → logprob: -3.9173038005828857
    3. '(c' → logprob: -3.9173038005828857
    4. '("("' → logprob: -7.292304039001465
    5. '(f' → logprob: -7.917304039001465
    6. '("' → logprob: -8.792304039001465
    7. '(len' → logprob: -9.667304039001465
    8. '((' → logprob: -9.917304039001465
    9. '(C' → logprob: -10.042304039001465
    10. '()' → logprob: -10.167304039001465

Token 83: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.375000953674316
    3. '))' → logprob: -15.750000953674316
    4. ')
' → logprob: -16.375001907348633
    5. ')`' → logprob: -16.625001907348633
    6. ')#' → logprob: -17.250001907348633
    7. '```' → logprob: -17.250001907348633
    8. ')}' → logprob: -17.750001907348633
    9. '')' → logprob: -18.125001907348633
    10. '}' → logprob: -18.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 81
Tokens correctement prédits (1ère position, stricte): 32
Tokens correctement prédits (1ère position, avec adaptation): 33
Tokens correctement prédits (top 10): 60
Précision stricte (1ère position): 39.51%
Précision adaptée (1ère position): 40.74%
Précision (top 10): 74.07%
================================================================================
