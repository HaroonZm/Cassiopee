================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def main():
    S = input()
    if not (1 <= len(S) <= 100):
        print("No")
        sys.exit()

    valid_even = {"L", "U", "D"}
    valid_odd  = {"R", "U", "D"}
    allowed    = valid_even | valid_odd

    for i, c in enumerate(S):
        if c not in allowed:
            print("No")
            sys.exit()
        if (i % 2 == 0 and c not in valid_odd) or (i % 2 == 1 and c not in valid_even):
            print("No")
            sys.exit()
    print("Yes")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27202650904655457
    2. ' process' → logprob: -2.647026538848877
    3. ' read' → logprob: -3.022026538848877
    4. ' space' → logprob: -3.397026538848877
    5. ' main' → logprob: -3.772026538848877
    6. ' calculate' → logprob: -4.772026538848877
    7. ' my' → logprob: -5.022026538848877
    8. ' sys' → logprob: -5.272026538848877
    9. ' ' → logprob: -5.522026538848877
    10. ' def' → logprob: -5.772026538848877

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0316474549472332
    2. '():' → logprob: -3.9066474437713623
    3. '(:' → logprob: -4.656647682189941
    4. ':' → logprob: -6.656647682189941
    5. '(":' → logprob: -9.656647682189941
    6. '(
' → logprob: -10.156647682189941
    7. '```' → logprob: -10.406647682189941
    8. '(`' → logprob: -10.531647682189941
    9. '):' → logprob: -10.906647682189941
    10. ' (' → logprob: -11.281647682189941

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09279556572437286
    2. '(' → logprob: -2.8427956104278564
    3. '\' → logprob: -4.717795372009277
    4. '(sys' → logprob: -4.967795372009277
    5. '```' → logprob: -5.842795372009277
    6. 'print' → logprob: -5.967795372009277
    7. '    ' → logprob: -6.217795372009277
    8. '()' → logprob: -6.342795372009277
    9. ':' → logprob: -6.842795372009277
    10. '(print' → logprob: -7.592795372009277

Token 7: ' S' (ID: 336)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.2524462938308716
    2. ' ' → logprob: -1.8774462938308716
    3. '   ' → logprob: -3.377446174621582
    4. 'print' → logprob: -3.877446174621582
    5. ' pass' → logprob: -5.127446174621582
    6. 'pass' → logprob: -5.877446174621582
    7. ' print' → logprob: -6.252446174621582
    8. '     
' → logprob: -6.502446174621582
    9. '  ' → logprob: -7.002446174621582
    10. '     ' → logprob: -7.377446174621582

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03695698082447052
    2. '.' → logprob: -4.286956787109375
    3. '=' → logprob: -4.536956787109375
    4. ' ' → logprob: -5.536956787109375
    5. ' .' → logprob: -6.036956787109375
    6. '   ' → logprob: -6.161956787109375
    7. '[' → logprob: -7.411956787109375
    8. 'y' → logprob: -7.411956787109375
    9. '  ' → logprob: -8.036956787109375
    10. ':' → logprob: -8.036956787109375

Token 9: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.350420206785202
    2. 'input' → logprob: -1.2254202365875244
    3. ' sys' → logprob: -6.600419998168945
    4. ' ' → logprob: -8.225419998168945
    5. 'sys' → logprob: -8.975419998168945
    6. ' "' → logprob: -9.850419998168945
    7. '"' → logprob: -9.975419998168945
    8. 'int' → logprob: -10.725419998168945
    9. ' int' → logprob: -11.350419998168945
    10. ''' → logprob: -11.600419998168945

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28136199712753296
    2. '()' → logprob: -1.4063620567321777
    3. '('' → logprob: -9.65636157989502
    4. '("")' → logprob: -9.78136157989502
    5. ' ' → logprob: -11.03136157989502
    6. '("("' → logprob: -11.28136157989502
    7. '(
' → logprob: -11.40636157989502
    8. '```' → logprob: -11.65636157989502
    9. ')' → logprob: -12.03136157989502
    10. ' ()' → logprob: -12.28136157989502

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9050098657608032
    2. ' ' → logprob: -1.5300098657608032
    3. '.' → logprob: -1.7800098657608032
    4. ':' → logprob: -2.4050097465515137
    5. ')' → logprob: -2.9050097465515137
    6. '```' → logprob: -4.405009746551514
    7. '[' → logprob: -4.905009746551514
    8. '    
' → logprob: -5.030009746551514
    9. ' if' → logprob: -5.155009746551514
    10. '_' → logprob: -5.530009746551514

Token 12: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.809161901473999
    2. 'count' → logprob: -1.559161901473999
    3. 'if' (adapté à ' if') → logprob: -1.684161901473999
    4. 'for' → logprob: -2.684161901473999
    5. ' if' → logprob: -4.434162139892578
    6. 'print' → logprob: -4.559162139892578
    7. 'result' → logprob: -4.809162139892578
    8. 'try' → logprob: -4.934162139892578
    9. 'n' → logprob: -5.309162139892578
    10. 'i' → logprob: -5.434162139892578

Token 13: ' not' (ID: 625)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18216131627559662
    2. ' S' → logprob: -1.8071613311767578
    3. ' not' → logprob: -7.182161331176758
    4. ' len' → logprob: -7.682161331176758
    5. '  ' → logprob: -7.807161331176758
    6. 'S' → logprob: -8.557161331176758
    7. ''' → logprob: -8.807161331176758
    8. ' '' → logprob: -9.307161331176758
    9. ' ' → logprob: -9.557161331176758
    10. ' "' → logprob: -9.807161331176758

Token 14: ' (' (ID: 350)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.008127635344862938
    2. 'S' → logprob: -5.258127689361572
    3. ' ' → logprob: -6.133127689361572
    4. ' isinstance' → logprob: -7.383127689361572
    5. ' hasattr' → logprob: -10.758127212524414
    6. ' len' → logprob: -10.883127212524414
    7. '  ' → logprob: -11.508127212524414
    8. ' any' → logprob: -11.508127212524414
    9. ''' → logprob: -12.008127212524414
    10. '   ' → logprob: -12.508127212524414

Token 15: '1' (ID: 16)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.8024504780769348
    2. 'S' → logprob: -0.9274504780769348
    3. ''' → logprob: -2.42745041847229
    4. 'len' → logprob: -3.92745041847229
    5. ' len' → logprob: -4.302450656890869
    6. ' ' → logprob: -4.802450656890869
    7. ' '' → logprob: -4.927450656890869
    8. ''S' → logprob: -5.927450656890869
    9. ''s' → logprob: -6.302450656890869
    10. '"' → logprob: -6.302450656890869

Token 16: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0022161537781357765
    2. '<=' → logprob: -6.127216339111328
    3. ' ' → logprob: -10.877216339111328
    4. '0' → logprob: -12.252216339111328
    5. ' <' → logprob: -12.502216339111328
    6. ' ≤' → logprob: -13.252216339111328
    7. 'len' → logprob: -14.252216339111328
    8. '1' → logprob: -15.377216339111328
    9. '2' → logprob: -15.502216339111328
    10. '<len' → logprob: -16.252216339111328

Token 17: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.10103584080934525
    2. 'len' → logprob: -2.3510358333587646
    3. ' S' → logprob: -7.226036071777344
    4. ' ' → logprob: -9.976036071777344
    5. 'S' → logprob: -10.351036071777344
    6. ' int' → logprob: -11.976036071777344
    7. 'int' → logprob: -12.476036071777344
    8. '(len' → logprob: -12.726036071777344
    9. '=len' → logprob: -12.726036071777344
    10. '   ' → logprob: -13.351036071777344

Token 18: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0052514225244522095
    2. '(' → logprob: -5.255251407623291
    3. ' (' → logprob: -11.63025188446045
    4. '(s' → logprob: -12.00525188446045
    5. ')' → logprob: -13.75525188446045
    6. 'S' → logprob: -13.88025188446045
    7. '(
' → logprob: -15.25525188446045
    8. ' ' → logprob: -15.50525188446045
    9. '(

' → logprob: -17.130250930786133
    10. 's' → logprob: -17.505250930786133

Token 19: ')' (ID: 8)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3016311228275299
    2. ')' → logprob: -1.4266310930252075
    3. '<=' → logprob: -4.051630973815918
    4. ')<=' → logprob: -6.801630973815918
    5. '()' → logprob: -7.051630973815918
    6. ' )' → logprob: -7.176630973815918
    7. ' ' → logprob: -10.176630973815918
    8. 'and' → logprob: -10.426630973815918
    9. ' and' → logprob: -10.676630973815918
    10. '```' → logprob: -11.551630973815918

Token 20: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.01121451798826456
    2. '<=' → logprob: -4.511214733123779
    3. ' and' → logprob: -9.386214256286621
    4. 'and' → logprob: -10.261214256286621
    5. '()' → logprob: -10.511214256286621
    6. ')' → logprob: -11.761214256286621
    7. ' ' → logprob: -11.886214256286621
    8. ')<=' → logprob: -13.511214256286621
    9. '```' → logprob: -13.886214256286621
    10. ' )' → logprob: -14.261214256286621

Token 21: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5020853877067566
    2. '10' → logprob: -1.2520854473114014
    3. '20' → logprob: -2.6270854473114014
    4. ' ' → logprob: -4.127085208892822
    5. '50' → logprob: -4.752085208892822
    6. '15' → logprob: -6.002085208892822
    7. '200' → logprob: -6.127085208892822
    8. '9' → logprob: -6.627085208892822
    9. '5' → logprob: -7.002085208892822
    10. '30' → logprob: -7.377085208892822

Token 22: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6370090842247009
    2. '10' → logprob: -0.8870090842247009
    3. '20' → logprob: -3.1370091438293457
    4. '50' → logprob: -4.762009143829346
    5. '15' → logprob: -6.512009143829346
    6. '5' → logprob: -6.762009143829346
    7. '200' → logprob: -6.887009143829346
    8. '9' → logprob: -6.887009143829346
    9. '30' → logprob: -7.762009143829346
    10. '1' → logprob: -8.137008666992188

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010217216797173023
    2. ')' → logprob: -4.635217189788818
    3. ' ):' → logprob: -8.385217666625977
    4. ':' → logprob: -9.260217666625977
    5. ' and' → logprob: -9.510217666625977
    6. '0' → logprob: -10.385217666625977
    7. '):
' → logprob: -10.760217666625977
    8. 'and' → logprob: -12.385217666625977
    9. ' ' → logprob: -13.010217666625977
    10. '   ' → logprob: -13.385217666625977

Token 24: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44693103432655334
    2. ':' → logprob: -1.071931004524231
    3. ' :' → logprob: -4.571930885314941
    4. '    ' → logprob: -6.071930885314941
    5. '):' → logprob: -6.071930885314941
    6. '   ' → logprob: -6.696930885314941
    7. '<|end|>' → logprob: -7.946930885314941
    8. ':
' → logprob: -8.321930885314941
    9. ' ):' → logprob: -8.321930885314941
    10. ')' → logprob: -8.821930885314941

Token 25: ' print' (ID: 2123)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.6674402356147766
    2. ' ' → logprob: -1.0424401760101318
    3. ' 
' → logprob: -3.042440176010132
    4. ' return' → logprob: -3.542440176010132
    5. '     
' → logprob: -3.792440176010132
    6. '   ' → logprob: -4.167440414428711
    7. 'return' → logprob: -5.042440414428711
    8. 'r' → logprob: -5.667440414428711
    9. '    
' → logprob: -5.792440414428711
    10. ' print' → logprob: -6.542440414428711

Token 26: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004885877016931772
    2. '("' → logprob: -5.379885673522949
    3. '()' → logprob: -8.75488567352295
    4. '('' → logprob: -10.25488567352295
    5. '(
' → logprob: -10.50488567352295
    6. '("")' → logprob: -10.62988567352295
    7. '("("' → logprob: -11.37988567352295
    8. '(

' → logprob: -13.12988567352295
    9. '(S' → logprob: -13.37988567352295
    10. '("""' → logprob: -13.87988567352295

Token 27: 'No' (ID: 3160)
  Prédit: 'Invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Invalid' → logprob: -0.6570162773132324
    2. 'Input' → logprob: -1.7820162773132324
    3. 'Error' → logprob: -2.4070162773132324
    4. '")' → logprob: -2.7820162773132324
    5. 'Length' → logprob: -2.7820162773132324
    6. '入力' → logprob: -3.0320162773132324
    7. '"' → logprob: -4.532016277313232
    8. 'INVALID' → logprob: -4.907016277313232
    9. '1' → logprob: -5.032016277313232
    10. 'invalid' → logprob: -5.407016277313232

Token 28: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.05263834446668625
    2. ')' → logprob: -3.052638292312622
    3. '"' → logprob: -7.177638530731201
    4. ' ")' → logprob: -7.302638530731201
    5. 'pe' → logprob: -7.677638530731201
    6. 't' → logprob: -7.802638530731201
    7. ' solution' → logprob: -8.052638053894043
    8. ' problem' → logprob: -8.427638053894043
    9. ' valid' → logprob: -8.677638053894043
    10. ' ' → logprob: -8.677638053894043

Token 29: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023599959909915924
    2. '       ' → logprob: -3.773599863052368
    3. ')' → logprob: -9.398599624633789
    4. '    
' → logprob: -9.773599624633789
    5. '```' → logprob: -9.773599624633789
    6. ' else' → logprob: -10.023599624633789
    7. '<|end|>' → logprob: -10.648599624633789
    8. '
' → logprob: -10.648599624633789
    9. 'else' → logprob: -11.273599624633789
    10. '	else' → logprob: -12.023599624633789

Token 30: ' sys' (ID: 12228)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01823352836072445
    2. '   ' → logprob: -4.018233299255371
    3. 'return' → logprob: -10.393233299255371
    4. ' return' → logprob: -11.518233299255371
    5. '```' → logprob: -11.768233299255371
    6. '           ' → logprob: -12.018233299255371
    7. '	return' → logprob: -12.018233299255371
    8. '
' → logprob: -12.143233299255371
    9. '	' → logprob: -12.393233299255371
    10. ')' → logprob: -12.893233299255371

Token 31: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.048671167343854904
    2. '.' → logprob: -3.048671245574951
    3. ' exit' → logprob: -11.173670768737793
    4. '.ex' → logprob: -11.173670768737793
    5. '.EXIT' → logprob: -11.298670768737793
    6. 'exit' → logprob: -11.548670768737793
    7. '.quit' → logprob: -11.548670768737793
    8. '.Exit' → logprob: -11.923670768737793
    9. '_exit' → logprob: -12.548670768737793
    10. '.stdout' → logprob: -12.798670768737793

Token 32: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22554361820220947
    2. '(' → logprob: -1.6005436182022095
    3. '()
' → logprob: -9.975543975830078
    4. '(
' → logprob: -10.350543975830078
    5. '()`' → logprob: -11.600543975830078
    6. '().' → logprob: -11.725543975830078
    7. '(

' → logprob: -12.600543975830078
    8. '("' → logprob: -12.600543975830078
    9. '()

' → logprob: -12.850543975830078
    10. '```' → logprob: -12.850543975830078

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042435504496097565
    2. '    
' → logprob: -3.79243540763855
    3. ' ' → logprob: -4.917435646057129
    4. '  
' → logprob: -5.292435646057129
    5. ' 
' → logprob: -5.917435646057129
    6. '<|end|>' → logprob: -6.667435646057129
    7. '   
' → logprob: -6.792435646057129
    8. '  ' → logprob: -7.917435646057129
    9. ')' → logprob: -8.167435646057129
    10. ' if' → logprob: -9.042435646057129

Token 34: ' valid' (ID: 4529)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21810276806354523
    2. 'if' → logprob: -1.9681028127670288
    3. ' if' → logprob: -3.4681026935577393
    4. 'i' → logprob: -4.718102931976318
    5. 'for' → logprob: -4.968102931976318
    6. ' ' → logprob: -5.843102931976318
    7. ' for' → logprob: -6.593102931976318
    8. '    ' → logprob: -7.093102931976318
    9. ' i' → logprob: -7.343102931976318
    10. '    
' → logprob: -7.593102931976318

Token 35: '_even' (ID: 186029)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.16903452575206757
    2. '_' → logprob: -1.919034481048584
    3. '_char' → logprob: -5.044034481048584
    4. ' =' → logprob: -7.669034481048584
    5. '=' → logprob: -8.044034957885742
    6. '_tokens' → logprob: -8.169034957885742
    7. 'chars' → logprob: -8.294034957885742
    8. '()' → logprob: -8.669034957885742
    9. ')' → logprob: -8.794034957885742
    10. '(' → logprob: -9.044034957885742

Token 36: ' =' (ID: 314)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.25804075598716736
    2. '_' → logprob: -3.3830406665802
    3. ' =' → logprob: -3.3830406665802
    4. '_length' → logprob: -3.5080406665802
    5. '_digits' → logprob: -3.5080406665802
    6. '_char' → logprob: -3.7580406665802
    7. '_index' → logprob: -4.508040904998779
    8. '_len' → logprob: -4.508040904998779
    9. 's' → logprob: -4.633040904998779
    10. '_positions' → logprob: -4.758040904998779

Token 37: ' {"' (ID: 10494)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5970136523246765
    2. 'True' → logprob: -1.7220137119293213
    3. ' set' → logprob: -2.9720137119293213
    4. ' ' → logprob: -2.9720137119293213
    5. '0' → logprob: -3.7220137119293213
    6. 'set' → logprob: -3.8470137119293213
    7. ' all' → logprob: -4.097013473510742
    8. ' {' → logprob: -4.222013473510742
    9. ' S' → logprob: -4.222013473510742
    10. '{' → logprob: -4.222013473510742

Token 38: 'L' (ID: 43)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5621975660324097
    2. 'A' → logprob: -1.6871975660324097
    3. 'a' → logprob: -2.312197685241699
    4. '2' → logprob: -2.812197685241699
    5. 'B' → logprob: -3.437197685241699
    6. 'R' → logprob: -4.312197685241699
    7. 'H' → logprob: -4.812197685241699
    8. '1' → logprob: -5.562197685241699
    9. 'I' → logprob: -5.562197685241699
    10. 'P' → logprob: -6.312197685241699

Token 39: '",' (ID: 672)
  Prédit: '","'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '","' → logprob: -0.9882175326347351
    2. 'R' → logprob: -1.1132175922393799
    3. '",' → logprob: -1.7382175922393799
    4. 'D' → logprob: -2.98821759223938
    5. 'A' → logprob: -4.113217353820801
    6. '"' → logprob: -4.613217353820801
    7. 'U' → logprob: -4.863217353820801
    8. 'C' → logprob: -5.113217353820801
    9. '"}' → logprob: -5.113217353820801
    10. 'I' → logprob: -5.238217353820801

Token 40: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.020262619480490685
    2. 'R' → logprob: -5.145262718200684
    3. '"S' → logprob: -5.770262718200684
    4. '"N' → logprob: -6.520262718200684
    5. '"C' → logprob: -6.645262718200684
    6. '"D' → logprob: -6.645262718200684
    7. '"O' → logprob: -6.645262718200684
    8. '"A' → logprob: -7.395262718200684
    9. '"T' → logprob: -7.395262718200684
    10. '"M' → logprob: -7.520262718200684

Token 41: 'U' (ID: 52)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.01808590441942215
    2. 'O' → logprob: -5.518085956573486
    3. 'P' → logprob: -6.268085956573486
    4. 'N' → logprob: -6.393085956573486
    5. 'V' → logprob: -6.393085956573486
    6. 'D' → logprob: -6.518085956573486
    7. 'A' → logprob: -6.643085956573486
    8. 'M' → logprob: -6.893085956573486
    9. 'Q' → logprob: -6.893085956573486
    10. 'S' → logprob: -7.143085956573486

Token 42: '",' (ID: 672)
  Prédit: '"}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"}' → logprob: -0.3234904706478119
    2. '",' → logprob: -1.9484905004501343
    3. 'V' → logprob: -2.9484903812408447
    4. '","' → logprob: -4.073490619659424
    5. '"' → logprob: -4.448490619659424
    6. '}' → logprob: -4.448490619659424
    7. 'S' → logprob: -5.323490619659424
    8. 'C' → logprob: -5.573490619659424
    9. 'F' → logprob: -5.573490619659424
    10. 'P' → logprob: -5.573490619659424

Token 43: ' "' (ID: 392)
  Prédit: '"D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"D' → logprob: -0.24918115139007568
    2. '"' → logprob: -1.7491811513900757
    3. '"S' → logprob: -4.624181270599365
    4. '"C' → logprob: -4.874181270599365
    5. '"K' → logprob: -5.624181270599365
    6. '"N' → logprob: -5.624181270599365
    7. '"I' → logprob: -5.624181270599365
    8. ' "' → logprob: -5.999181270599365
    9. '"O' → logprob: -5.999181270599365
    10. '"B' → logprob: -6.124181270599365

Token 44: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.03367140144109726
    2. 'R' → logprob: -4.5336713790893555
    3. 'I' → logprob: -4.7836713790893555
    4. 'O' → logprob: -5.6586713790893555
    5. 'S' → logprob: -5.6586713790893555
    6. 'C' → logprob: -6.2836713790893555
    7. 'N' → logprob: -7.1586713790893555
    8. 'T' → logprob: -7.2836713790893555
    9. 'V' → logprob: -7.4086713790893555
    10. 'E' → logprob: -7.6586713790893555

Token 45: '"}
' (ID: 31085)
  Prédit: '"}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"}' → logprob: -0.021035192534327507
    2. '}' → logprob: -4.521035194396973
    3. '",' → logprob: -4.771035194396973
    4. '"' → logprob: -7.646035194396973
    5. ' "}' → logprob: -8.396035194396973
    6. ',' → logprob: -8.896035194396973
    7. '"}}' → logprob: -9.521035194396973
    8. '")' → logprob: -9.896035194396973
    9. '"})' → logprob: -9.896035194396973
    10. 'L' → logprob: -10.021035194396973

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5429296493530273
    2. 'valid' → logprob: -1.1679296493530273
    3. ' valid' → logprob: -2.4179296493530273
    4. '}' → logprob: -5.167929649353027
    5. ')' → logprob: -5.792929649353027
    6. '    
' → logprob: -6.292929649353027
    7. '	valid' → logprob: -6.542929649353027
    8. ' ' → logprob: -6.667929649353027
    9. ',' → logprob: -6.667929649353027
    10. 'for' → logprob: -7.667929649353027

Token 47: ' valid' (ID: 4529)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4679870903491974
    2. 'valid' (adapté à ' valid') → logprob: -2.217987060546875
    3. 'for' → logprob: -2.842987060546875
    4. ' valid' → logprob: -2.967987060546875
    5. 'if' → logprob: -3.092987060546875
    6. 'c' → logprob: -3.217987060546875
    7. ' for' → logprob: -3.467987060546875
    8. ' if' → logprob: -4.092987060546875
    9. ' ' → logprob: -5.592987060546875
    10. ' c' → logprob: -6.092987060546875

Token 48: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007384424563497305
    2. '_even' → logprob: -5.007384300231934
    3. '_chars' → logprob: -8.257384300231934
    4. '_char' → logprob: -9.882384300231934
    5. '_set' → logprob: -10.007384300231934
    6. ' =' → logprob: -10.132384300231934
    7. '_upper' → logprob: -10.257384300231934
    8. '_od' → logprob: -10.382384300231934
    9. '_lower' → logprob: -10.632384300231934
    10. '_letters' → logprob: -11.132384300231934

Token 49: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.010434795171022415
    2. 'even' → logprob: -4.635434627532959
    3. 'od' → logprob: -8.510435104370117
    4. 'o' → logprob: -9.885435104370117
    5. 'none' → logprob: -10.072935104370117
    6. 'index' → logprob: -10.260435104370117
    7. 'char' → logprob: -11.010435104370117
    8. 'OD' → logprob: -11.322935104370117
    9. 'not' → logprob: -11.385435104370117
    10. 'une' → logprob: -11.385435104370117

Token 50: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004132541827857494
    2. '=' → logprob: -5.5041327476501465
    3. ' ' → logprob: -9.879132270812988
    4. ' ={' → logprob: -14.379132270812988
    5. '   ' → logprob: -14.504132270812988
    6. '  ' → logprob: -14.879132270812988
    7. '    ' → logprob: -15.254132270812988
    8. '={"' → logprob: -15.504132270812988
    9. '＝' → logprob: -15.879132270812988
    10. '<|end|>' → logprob: -16.129133224487305

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10028678178787231
    2. '=' → logprob: -2.3502867221832275
    3. ' ' → logprob: -9.600286483764648
    4. '={"' → logprob: -11.850286483764648
    5. ' ={' → logprob: -13.600286483764648
    6. '   ' → logprob: -13.725286483764648
    7. '={'' → logprob: -13.850286483764648
    8. '＝' → logprob: -15.100286483764648
    9. '  ' → logprob: -15.350286483764648
    10. '=}' → logprob: -15.475286483764648

Token 52: ' {"' (ID: 10494)
  Prédit: '{"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{"' → logprob: -0.22661632299423218
    2. ' {"' → logprob: -1.601616382598877
    3. '{' → logprob: -7.351616382598877
    4. ' ' → logprob: -8.726615905761719
    5. 'set' → logprob: -8.851615905761719
    6. ' {' → logprob: -9.226615905761719
    7. ' set' → logprob: -10.101615905761719
    8. '   ' → logprob: -10.226615905761719
    9. '{'' → logprob: -10.476615905761719
    10. ' {'' → logprob: -10.601615905761719

Token 53: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.6839813590049744
    2. 'L' → logprob: -0.9339813590049744
    3. 'A' → logprob: -4.058981418609619
    4. 'U' → logprob: -4.058981418609619
    5. '0' → logprob: -4.308981418609619
    6. 'C' → logprob: -4.933981418609619
    7. 'l' → logprob: -4.933981418609619
    8. '1' → logprob: -5.308981418609619
    9. 'D' → logprob: -5.308981418609619
    10. 'd' → logprob: -5.308981418609619

Token 54: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.015733078122138977
    2. '"' → logprob: -5.015733242034912
    3. '","' → logprob: -5.765733242034912
    4. 'L' → logprob: -6.265733242034912
    5. '"}' → logprob: -6.515733242034912
    6. 'I' → logprob: -8.140732765197754
    7. 'U' → logprob: -8.140732765197754
    8. '"L' → logprob: -8.265732765197754
    9. 'A' → logprob: -8.390732765197754
    10. ' ",' → logprob: -8.515732765197754

Token 55: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.629101037979126
    2. ' "' → logprob: -1.504101037979126
    3. '"L' → logprob: -2.379101037979126
    4. '"D' → logprob: -2.504101037979126
    5. ' ' → logprob: -4.004100799560547
    6. '"S' → logprob: -4.504100799560547
    7. ' L' → logprob: -4.504100799560547
    8. ' U' → logprob: -5.004100799560547
    9. ' D' → logprob: -5.629100799560547
    10. 'L' → logprob: -5.879100799560547

Token 56: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.3308340311050415
    2. 'L' → logprob: -1.3308340311050415
    3. 'D' → logprob: -4.455833911895752
    4. 'R' → logprob: -5.580833911895752
    5. 'C' → logprob: -7.330833911895752
    6. 'S' → logprob: -7.705833911895752
    7. 'I' → logprob: -8.20583438873291
    8. 'B' → logprob: -8.95583438873291
    9. 'F' → logprob: -9.45583438873291
    10. 'UD' → logprob: -9.45583438873291

Token 57: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.021400023251771927
    2. '"}' → logprob: -4.021399974822998
    3. '"' → logprob: -6.771399974822998
    4. 'D' → logprob: -7.021399974822998
    5. '","' → logprob: -7.521399974822998
    6. '}' → logprob: -8.521400451660156
    7. '"D' → logprob: -9.521400451660156
    8. '}",' → logprob: -9.646400451660156
    9. ',' → logprob: -9.771400451660156
    10. '"}

' → logprob: -10.396400451660156

Token 58: ' "' (ID: 392)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.8496149182319641
    2. '"D' → logprob: -0.8496149182319641
    3. '"' → logprob: -2.9746148586273193
    4. ' D' → logprob: -3.0996148586273193
    5. ''D' → logprob: -4.349615097045898
    6. ' "' → logprob: -4.349615097045898
    7. '"L' → logprob: -4.849615097045898
    8. ' ' → logprob: -5.349615097045898
    9. 'L' → logprob: -5.724615097045898
    10. '"S' → logprob: -6.599615097045898

Token 59: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.022771332412958145
    2. 'L' → logprob: -4.02277135848999
    3. 'U' → logprob: -5.64777135848999
    4. 'R' → logprob: -6.89777135848999
    5. 'd' → logprob: -10.647770881652832
    6. ' D' → logprob: -11.647770881652832
    7. 'I' → logprob: -11.897770881652832
    8. '"D' → logprob: -12.272770881652832
    9. 'F' → logprob: -12.647770881652832
    10. 'C' → logprob: -12.710270881652832

Token 60: '"}
' (ID: 31085)
  Prédit: '"}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"}' → logprob: -0.01127275638282299
    2. '}' → logprob: -4.51127290725708
    3. '"}

' → logprob: -8.886272430419922
    4. ' "}' → logprob: -10.511272430419922
    5. '"}
' → logprob: -10.636272430419922
    6. '"' → logprob: -11.386272430419922
    7. '}"' → logprob: -11.511272430419922
    8. '"]' → logprob: -12.761272430419922
    9. '")' → logprob: -13.011272430419922
    10. ' }' → logprob: -13.386272430419922

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012596181593835354
    2. ' for' → logprob: -4.762596130371094
    3. 'for' → logprob: -5.762596130371094
    4. '    
' → logprob: -7.512596130371094
    5. '```' → logprob: -8.512596130371094
    6. '
' → logprob: -10.262596130371094
    7. 'n' → logprob: -11.512596130371094
    8. '``' → logprob: -12.012596130371094
    9. ' ' → logprob: -12.387596130371094
    10. '   
' → logprob: -12.387596130371094

Token 62: ' allowed' (ID: 9279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3849216401576996
    2. '   ' → logprob: -1.259921669960022
    3. ' for' → logprob: -3.3849215507507324
    4. 'if' → logprob: -7.259921550750732
    5. 'n' → logprob: -8.38492202758789
    6. 'result' → logprob: -8.63492202758789
    7. '    
' → logprob: -8.63492202758789
    8. 'answer' → logprob: -8.63492202758789
    9. '```' → logprob: -9.63492202758789
    10. '
' → logprob: -9.88492202758789

Token 63: '   ' (ID: 271)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.635412335395813
    2. ' =' → logprob: -1.010412335395813
    3. '_char' → logprob: -2.7604122161865234
    4. '_' → logprob: -3.6354122161865234
    5. '=' → logprob: -4.635412216186523
    6. 's' → logprob: -6.260412216186523
    7. '_tokens' → logprob: -6.760412216186523
    8. '_letters' → logprob: -7.135412216186523
    9. '=set' → logprob: -7.510412216186523
    10. '_sets' → logprob: -7.635412216186523

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3294106721878052
    2. '=' (adapté à ' =') → logprob: -1.3294106721878052
    3. '_' → logprob: -4.954410552978516
    4. '_chars' → logprob: -4.954410552978516
    5. '_char' → logprob: -7.329410552978516
    6. '_tokens' → logprob: -7.454410552978516
    7. '_=' → logprob: -8.704410552978516
    8. ' ' → logprob: -8.954410552978516
    9. '  ' → logprob: -9.329410552978516
    10. '   ' → logprob: -9.579410552978516

Token 65: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.6153995394706726
    2. ' valid' → logprob: -0.8653995394706726
    3. '{"' → logprob: -3.6153995990753174
    4. ' {"' → logprob: -5.240399360656738
    5. '{' → logprob: -5.990399360656738
    6. 'set' → logprob: -7.240399360656738
    7. ' set' → logprob: -7.365399360656738
    8. '(valid' → logprob: -7.615399360656738
    9. ' ' → logprob: -7.740399360656738
    10. ' {' → logprob: -7.990399360656738

Token 66: '_even' (ID: 186029)
  Prédit: '_even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_even' → logprob: -0.0007142199319787323
    2. '_' → logprob: -7.250714302062988
    3. 'even' → logprob: -13.125714302062988
    4. '_e' → logprob: -14.125714302062988
    5. '_valid' → logprob: -14.250714302062988
    6. '_every' → logprob: -15.625714302062988
    7. '_ev' → logprob: -16.000713348388672
    8. ' even' → logprob: -16.500713348388672
    9. '_allowed' → logprob: -16.750713348388672
    10. '_equal' → logprob: -17.125713348388672

Token 67: ' |' (ID: 1022)
  Prédit: '.union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.8574336171150208
    2. ' if' → logprob: -1.482433557510376
    3. ' ' → logprob: -2.232433557510376
    4. 'if' → logprob: -2.732433557510376
    5. '.copy' → logprob: -2.732433557510376
    6. '.' → logprob: -3.357433557510376
    7. '.inter' → logprob: -4.232433795928955
    8. 's' → logprob: -4.232433795928955
    9. '<|end|>' → logprob: -4.482433795928955
    10. '_' → logprob: -4.982433795928955

Token 68: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.3869074881076813
    2. ' valid' → logprob: -1.1369074583053589
    3. '(valid' → logprob: -10.761907577514648
    4. '	valid' → logprob: -12.261907577514648
    5. ' ' → logprob: -12.511907577514648
    6. '{' → logprob: -13.011907577514648
    7. '{"' → logprob: -13.136907577514648
    8. '   ' → logprob: -14.011907577514648
    9. 'val' → logprob: -15.386907577514648
    10. ' {' → logprob: -15.386907577514648

Token 69: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0445127372804563e-05
    2. '_even' → logprob: -11.62501049041748
    3. 'odd' → logprob: -14.37501049041748
    4. '_od' → logprob: -15.12501049041748
    5. '{' → logprob: -16.125009536743164
    6. ' _' → logprob: -16.250009536743164
    7. '_valid' → logprob: -16.250009536743164
    8. '```' → logprob: -16.750009536743164
    9. '_o' → logprob: -17.125009536743164
    10. '   ' → logprob: -18.000009536743164

Token 70: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.0002099773846566677
    2. 'od' → logprob: -8.62520980834961
    3. 'even' → logprob: -11.37520980834961
    4. ' odd' → logprob: -11.87520980834961
    5. 'o' → logprob: -12.87520980834961
    6. 'Odd' → logprob: -13.62520980834961
    7. '```' → logprob: -14.25020980834961
    8. 'ood' → logprob: -14.37520980834961
    9. 'old' → logprob: -14.50020980834961
    10. 'oddi' → logprob: -14.56270980834961

Token 71: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.695947527885437
    2. '   ' → logprob: -0.820947527885437
    3. '    
' → logprob: -3.5709476470947266
    4. 'for' → logprob: -4.695947647094727
    5. ' for' → logprob: -4.945947647094727
    6. '<|end|>' → logprob: -5.195947647094727
    7. '  
' → logprob: -5.945947647094727
    8. '```' → logprob: -6.195947647094727
    9. '   
' → logprob: -6.570947647094727
    10. ' 
' → logprob: -6.945947647094727

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16054043173789978
    2. '
' → logprob: -2.1605403423309326
    3. '    
' → logprob: -3.5355403423309326
    4. '<|end|>' → logprob: -5.910540580749512
    5. '  
' → logprob: -7.785540580749512
    6. ' 
' → logprob: -8.535540580749512
    7. '   
' → logprob: -8.910540580749512
    8. '<|end|>' → logprob: -9.160540580749512
    9. ' for' → logprob: -9.660540580749512
    10. ' ' → logprob: -10.410540580749512

Token 73: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0013938075862824917
    2. 'prev' → logprob: -7.501393795013428
    3. ' for' → logprob: -7.751393795013428
    4. 'if' → logprob: -8.376394271850586
    5. 'previous' → logprob: -9.501394271850586
    6. '   ' → logprob: -10.376394271850586
    7. 'last' → logprob: -11.251394271850586
    8. 'answer' → logprob: -11.376394271850586
    9. 'result' → logprob: -11.626394271850586
    10. '    
' → logprob: -12.001394271850586

Token 74: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.003935564309358597
    2. 'i' → logprob: -5.87893533706665
    3. ' ' → logprob: -7.00393533706665
    4. ' idx' → logprob: -9.378935813903809
    5. ' index' → logprob: -9.878935813903809
    6. ' c' → logprob: -9.878935813903809
    7. ' _' → logprob: -11.128935813903809
    8. '_' → logprob: -12.128935813903809
    9. 'c' → logprob: -12.378935813903809
    10. '  ' → logprob: -13.378935813903809

Token 75: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02456924505531788
    2. 'in' → logprob: -3.774569272994995
    3. ' ' → logprob: -6.774569034576416
    4. ',' → logprob: -8.899569511413574
    5. '	in' → logprob: -10.899569511413574
    6. '  ' → logprob: -11.524569511413574
    7. 'n' → logprob: -12.649569511413574
    8. ' i' → logprob: -12.899569511413574
    9. '<|end|>' → logprob: -13.024569511413574
    10. ' ,' → logprob: -13.149569511413574

Token 76: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.49229151010513306
    2. 'c' → logprob: -0.9922915101051331
    3. 'ch' → logprob: -4.742291450500488
    4. ' ch' → logprob: -4.867291450500488
    5. ' s' → logprob: -7.492291450500488
    6. ' char' → logprob: -7.992291450500488
    7. 's' → logprob: -7.992291450500488
    8. 'char' → logprob: -8.242291450500488
    9. 'C' → logprob: -9.992291450500488
    10. ' ' → logprob: -10.742291450500488

Token 77: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02981865406036377
    2. 'in' → logprob: -3.529818534851074
    3. ' ' → logprob: -10.279818534851074
    4. 'n' → logprob: -11.279818534851074
    5. 's' → logprob: -11.779818534851074
    6. '	in' → logprob: -11.779818534851074
    7. ',' → logprob: -13.904818534851074
    8. '  ' → logprob: -13.904818534851074
    9. '<|end|>' → logprob: -14.154818534851074
    10. '```' → logprob: -14.279818534851074

Token 78: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.014168919064104557
    2. 'enumer' → logprob: -4.264168739318848
    3. ' ' → logprob: -13.514168739318848
    4. '```' → logprob: -13.639168739318848
    5. ' enumer' → logprob: -14.014168739318848
    6. ' range' → logprob: -14.264168739318848
    7. ' en' → logprob: -14.764168739318848
    8. ' enum' → logprob: -14.889168739318848
    9. 'en' → logprob: -15.514168739318848
    10. '(en' → logprob: -15.639168739318848

Token 79: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0032756258733570576
    2. ' (' → logprob: -6.253275394439697
    3. '(' → logprob: -6.628275394439697
    4. '(s' → logprob: -11.003275871276855
    5. ')' → logprob: -12.878275871276855
    6. ' ' → logprob: -13.128275871276855
    7. ' S' → logprob: -13.753275871276855
    8. '(range' → logprob: -15.253275871276855
    9. '(
' → logprob: -15.378275871276855
    10. '<|end|>' → logprob: -15.753275871276855

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012067806674167514
    2. ' ):' → logprob: -7.751206874847412
    3. '):
' → logprob: -7.876206874847412
    4. ':' → logprob: -8.001206398010254
    5. ')' → logprob: -10.376206398010254
    6. '   ' → logprob: -10.626206398010254
    7. '       ' → logprob: -13.751206398010254
    8. ' :' → logprob: -13.876206398010254
    9. '():' → logprob: -14.001206398010254
    10. '):
' → logprob: -14.251206398010254

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005590056534856558
    2. '<|end|>' → logprob: -5.380589962005615
    3. ' ' → logprob: -8.255590438842773
    4. '   ' → logprob: -8.880590438842773
    5. '    ' → logprob: -8.880590438842773
    6. ' if' → logprob: -9.005590438842773
    7. ':' → logprob: -9.255590438842773
    8. '<|end|>' → logprob: -9.505590438842773
    9. '        
' → logprob: -9.630590438842773
    10. '      ' → logprob: -11.130590438842773

Token 82: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03508283197879791
    2. ' if' → logprob: -4.160082817077637
    3. '       ' → logprob: -5.160082817077637
    4. '        ' → logprob: -5.285082817077637
    5. ' 
' → logprob: -5.785082817077637
    6. '<|end|>' → logprob: -5.910082817077637
    7. 'if' (adapté à ' if') → logprob: -6.910082817077637
    8. '        
' → logprob: -7.660082817077637
    9. '    ' → logprob: -7.910082817077637
    10. '  ' → logprob: -9.660082817077637

Token 83: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3015124499797821
    2. ' i' → logprob: -2.0515124797821045
    3. ' (' → logprob: -2.3015124797821045
    4. 'c' → logprob: -3.9265124797821045
    5. 'i' → logprob: -5.051512241363525
    6. ' not' → logprob: -5.801512241363525
    7. '(i' → logprob: -7.301512241363525
    8. ' ' → logprob: -7.426512241363525
    9. '(c' → logprob: -7.676512241363525
    10. '(' → logprob: -8.176512718200684

Token 84: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.006375936791300774
    2. 'not' → logprob: -5.131375789642334
    3. ' ' → logprob: -7.756375789642334
    4. ' in' → logprob: -11.506376266479492
    5. ' no' → logprob: -12.631376266479492
    6. ')' → logprob: -13.631376266479492
    7. '	not' → logprob: -14.256376266479492
    8. '  ' → logprob: -14.568876266479492
    9. ' )' → logprob: -14.818876266479492
    10. ' <' → logprob: -15.193876266479492

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018639158457517624
    2. '<|end|>' → logprob: -4.518639087677002
    3. 'in' → logprob: -5.393639087677002
    4. ' ' → logprob: -6.393639087677002
    5. ' to' → logprob: -7.643639087677002
    6. '<|end|>' → logprob: -7.768639087677002
    7. '_' → logprob: -9.89363956451416
    8. ' not' → logprob: -9.89363956451416
    9. '    ' → logprob: -10.01863956451416
    10. 'to' → logprob: -10.26863956451416

Token 86: ' allowed' (ID: 9279)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.14304718375205994
    2. ' allowed' → logprob: -2.0180470943450928
    3. ' (' → logprob: -9.143047332763672
    4. '(' → logprob: -9.268047332763672
    5. 'valid' → logprob: -10.143047332763672
    6. 'allow' → logprob: -10.393047332763672
    7. '   ' → logprob: -10.518047332763672
    8. ' valid' → logprob: -10.518047332763672
    9. '{' → logprob: -11.518047332763672
    10. '.allowed' → logprob: -11.643047332763672

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07595609128475189
    2. ' or' → logprob: -2.700956106185913
    3. ':
' → logprob: -5.325955867767334
    4. '       ' → logprob: -7.575955867767334
    5. ' and' → logprob: -8.325956344604492
    6. ' :' → logprob: -8.575956344604492
    7. '           ' → logprob: -10.075956344604492
    8. ':return' → logprob: -10.075956344604492
    9. 'or' → logprob: -10.200956344604492
    10. '   ' → logprob: -10.700956344604492

Token 88: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1810694932937622
    2. ':' → logprob: -2.1810693740844727
    3. ' or' → logprob: -3.1810693740844727
    4. ':
' → logprob: -5.431069374084473
    5. '       ' → logprob: -5.681069374084473
    6. ' and' → logprob: -6.056069374084473
    7. ' :' → logprob: -8.931069374084473
    8. ' continue' → logprob: -9.181069374084473
    9. '<|end|>' → logprob: -9.181069374084473
    10. '            
' → logprob: -9.431069374084473

Token 89: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8497572541236877
    2. 'print' (adapté à ' print') → logprob: -1.224757194519043
    3. ' print' → logprob: -1.349757194519043
    4. '           ' → logprob: -4.099757194519043
    5. '   ' → logprob: -6.849757194519043
    6. ' ' → logprob: -7.599757194519043
    7. '
' → logprob: -8.099757194519043
    8. '        
' → logprob: -8.349757194519043
    9. '	print' → logprob: -8.599757194519043
    10. '```' → logprob: -8.599757194519043

Token 90: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.160263329744339
    2. '(' → logprob: -1.9102632999420166
    3. '("("' → logprob: -10.410263061523438
    4. '('' → logprob: -12.285263061523438
    5. '("")' → logprob: -13.285263061523438
    6. '("(' → logprob: -13.535263061523438
    7. '()' → logprob: -14.910263061523438
    8. '("""' → logprob: -15.160263061523438
    9. '(
' → logprob: -15.535263061523438
    10. '(""' → logprob: -15.785263061523438

Token 91: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -5.574251918005757e-05
    2. '"No' → logprob: -10.000055313110352
    3. ' No' → logprob: -12.000055313110352
    4. '"' → logprob: -12.875055313110352
    5. 'Yes' → logprob: -13.625055313110352
    6. 'Invalid' → logprob: -16.12505531311035
    7. '```' → logprob: -16.50005531311035
    8. 'NO' → logprob: -16.62505531311035
    9. 'N' → logprob: -16.62505531311035
    10. '")' → logprob: -17.00005531311035

Token 92: '")
' (ID: 1896)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.647810697555542
    2. '")' → logprob: -1.397810697555542
    3. '")
' → logprob: -1.522810697555542
    4. '               ' → logprob: -5.397810935974121
    5. ')' → logprob: -5.522810935974121
    6. ')
' → logprob: -6.522810935974121
    7. '       ' → logprob: -6.647810935974121
    8. '")
' → logprob: -9.522810935974121
    9. '```' → logprob: -9.772810935974121
    10. ')")
' → logprob: -10.022810935974121

Token 93: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.68022444692906e-05
    2. '<|end|>' → logprob: -10.750046730041504
    3. '            
' → logprob: -12.000046730041504
    4. '               ' → logprob: -12.125046730041504
    5. '<|end|>' → logprob: -12.500046730041504
    6. '
' → logprob: -12.875046730041504
    7. '       ' → logprob: -13.250046730041504
    8. '```' → logprob: -13.500046730041504
    9. '		' → logprob: -14.250046730041504
    10. ')' → logprob: -14.375046730041504

Token 94: ' sys' (ID: 12228)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018716024234890938
    2. ' return' → logprob: -4.393715858459473
    3. 'return' → logprob: -5.143715858459473
    4. ' sys' → logprob: -8.643715858459473
    5. 'sys' (adapté à ' sys') → logprob: -9.768715858459473
    6. '               ' → logprob: -9.893715858459473
    7. '       ' → logprob: -11.143715858459473
    8. '            
' → logprob: -11.268715858459473
    9. '
' → logprob: -11.393715858459473
    10. '   ' → logprob: -11.768715858459473

Token 95: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.00011760921915993094
    2. '.' → logprob: -9.375117301940918
    3. 'exit' → logprob: -10.750117301940918
    4. '.quit' → logprob: -12.500117301940918
    5. '	exit' → logprob: -12.750117301940918
    6. ' .' → logprob: -13.875117301940918
    7. '.EXIT' → logprob: -14.000117301940918
    8. '.stdout' → logprob: -14.250117301940918
    9. '_exit' → logprob: -14.625117301940918
    10. '.Exit' → logprob: -14.875117301940918

Token 96: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006921819876879454
    2. '(' → logprob: -7.875692367553711
    3. '()
' → logprob: -8.125692367553711
    4. '()`' → logprob: -12.125692367553711
    5. '()

' → logprob: -12.375692367553711
    6. '(
' → logprob: -13.125692367553711
    7. '()\' → logprob: -13.625692367553711
    8. '()"' → logprob: -14.000692367553711
    9. ' ()' → logprob: -14.875692367553711
    10. '()
' → logprob: -15.000692367553711

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014427212066948414
    2. '<|end|>' → logprob: -5.139427185058594
    3. '
' → logprob: -5.264427185058594
    4. '   ' → logprob: -6.514427185058594
    5. '        
' → logprob: -7.014427185058594
    6. '<|end|>' → logprob: -8.389427185058594
    7. '```' → logprob: -8.514427185058594
    8. '    ' → logprob: -8.764427185058594
    9. '    
' → logprob: -9.014427185058594
    10. ' ' → logprob: -9.764427185058594

Token 98: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09647774696350098
    2. '   ' → logprob: -2.971477746963501
    3. '
' → logprob: -3.721477746963501
    4. 'if' (adapté à ' if') → logprob: -4.721477508544922
    5. '        
' → logprob: -5.846477508544922
    6. ' if' → logprob: -5.971477508544922
    7. '    
' → logprob: -6.971477508544922
    8. '    ' → logprob: -7.971477508544922
    9. '<|end|>' → logprob: -8.346477508544922
    10. ' ' → logprob: -8.721477508544922

Token 99: ' (' (ID: 350)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13759773969650269
    2. ' (' → logprob: -2.1375977993011475
    3. 'i' → logprob: -4.762597560882568
    4. '(i' → logprob: -6.512597560882568
    5. ' ' → logprob: -7.887597560882568
    6. '(' → logprob: -9.137598037719727
    7. '   ' → logprob: -9.637598037719727
    8. '  ' → logprob: -11.387598037719727
    9. ' ((' → logprob: -11.762598037719727
    10. ' ' → logprob: -12.512598037719727

Token 100: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16053830087184906
    2. ' i' → logprob: -1.9105383157730103
    3. '(i' → logprob: -8.660538673400879
    4. ' (' → logprob: -9.035538673400879
    5. ' ' → logprob: -11.660538673400879
    6. '   ' → logprob: -11.910538673400879
    7. '(' → logprob: -13.535538673400879
    8. '  ' → logprob: -13.910538673400879
    9. '	i' → logprob: -14.535538673400879
    10. '{i' → logprob: -14.535538673400879

Token 101: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.014223329722881317
    2. '%' → logprob: -4.389223098754883
    3. ' ' → logprob: -6.389223098754883
    4. ')' → logprob: -10.514223098754883
    5. ' )' → logprob: -12.764223098754883
    6. ' ' → logprob: -14.139223098754883
    7. ')%' → logprob: -14.639223098754883
    8. ' %
' → logprob: -15.264223098754883
    9. ' %)' → logprob: -15.264223098754883
    10. '  ' → logprob: -16.014223098754883

Token 102: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.048709437251091
    2. ' ' → logprob: -3.0487093925476074
    3. ')' → logprob: -9.173709869384766
    4. '```' → logprob: -11.923709869384766
    5. ' )' → logprob: -13.048709869384766
    6. '==' → logprob: -13.298709869384766
    7. '  ' → logprob: -13.486209869384766
    8. ' ==' → logprob: -13.486209869384766
    9. '   ' → logprob: -13.673709869384766
    10. '<|end|>' → logprob: -14.798709869384766

Token 103: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016396844875998795
    2. ' ' → logprob: -8.750164031982422
    3. '   ' → logprob: -13.125164031982422
    4. ')' → logprob: -14.000164031982422
    5. '```' → logprob: -14.062664031982422
    6. '  ' → logprob: -15.312664031982422
    7. '==' → logprob: -15.687664031982422
    8. '>' → logprob: -16.437664031982422
    9. '1' → logprob: -16.625164031982422
    10. '=' → logprob: -16.750164031982422

Token 104: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8241658806800842
    2. ' ==' → logprob: -0.8241658806800842
    3. ')' → logprob: -2.1991658210754395
    4. ')==' → logprob: -4.4491658210754395
    5. ' )' → logprob: -8.824166297912598
    6. ' ' → logprob: -10.574166297912598
    7. '0' → logprob: -10.824166297912598
    8. ' !=' → logprob: -11.949166297912598
    9. '   ' → logprob: -12.699166297912598
    10. '=' → logprob: -12.699166297912598

Token 105: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28119155764579773
    2. ' ' → logprob: -1.4061915874481201
    3. '1' → logprob: -10.2811918258667
    4. ')' → logprob: -12.4061918258667
    5. '=' → logprob: -13.9686918258667
    6. '  ' → logprob: -15.0936918258667
    7. ' )' → logprob: -15.1561918258667
    8. '   ' → logprob: -15.2811918258667
    9. '```' → logprob: -15.6561918258667
    10. ' ' → logprob: -16.156190872192383

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020549774635583162
    2. ' ' → logprob: -6.2520551681518555
    3. '1' → logprob: -9.002055168151855
    4. ')' → logprob: -13.502055168151855
    5. '   ' → logprob: -15.564555168151855
    6. '=' → logprob: -15.689555168151855
    7. '۰' → logprob: -15.939555168151855
    8. '```' → logprob: -16.06455421447754
    9. '  ' → logprob: -16.18955421447754
    10. '<|end|>' → logprob: -16.43955421447754

Token 107: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09273060411214828
    2. ')' → logprob: -2.4677305221557617
    3. 'and' → logprob: -6.092730522155762
    4. ' )' → logprob: -6.717730522155762
    5. ' ' → logprob: -8.217730522155762
    6. '       ' → logprob: -10.842730522155762
    7. '   ' → logprob: -11.217730522155762
    8. '):' → logprob: -12.342730522155762
    9. '    ' → logprob: -12.842730522155762
    10. '           ' → logprob: -13.967730522155762

Token 108: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.04314009100198746
    2. 'c' → logprob: -3.168140172958374
    3. ')' → logprob: -10.043140411376953
    4. ' ' → logprob: -10.418140411376953
    5. ')c' → logprob: -10.543140411376953
    6. ' not' → logprob: -11.293140411376953
    7. '   ' → logprob: -11.730640411376953
    8. '	c' → logprob: -13.105640411376953
    9. '(c' → logprob: -13.168140411376953
    10. 'not' → logprob: -13.293140411376953

Token 109: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.004522092640399933
    2. 'not' → logprob: -5.754522323608398
    3. ')' → logprob: -6.754522323608398
    4. ' ' → logprob: -9.004522323608398
    5. ' in' → logprob: -10.629522323608398
    6. ' )' → logprob: -10.629522323608398
    7. '```' → logprob: -13.754522323608398
    8. '"' → logprob: -14.254522323608398
    9. ' no' → logprob: -14.317022323608398
    10. 'in' → logprob: -14.317022323608398

Token 110: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.058033525943756104
    2. 'in' → logprob: -3.3080334663391113
    3. ' valid' → logprob: -4.308033466339111
    4. 'valid' → logprob: -5.683033466339111
    5. '<|end|>' → logprob: -6.058033466339111
    6. '_valid' → logprob: -8.18303394317627
    7. '(valid' → logprob: -9.30803394317627
    8. ' ' → logprob: -9.80803394317627
    9. '<|end|>' → logprob: -9.80803394317627
    10. ')' → logprob: -9.93303394317627

Token 111: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.06197631359100342
    2. ' valid' → logprob: -2.811976432800293
    3. '   ' → logprob: -12.686976432800293
    4. '(valid' → logprob: -12.811976432800293
    5. '	valid' → logprob: -13.936976432800293
    6. '.valid' → logprob: -14.436976432800293
    7. '_valid' → logprob: -15.186976432800293
    8. ')' → logprob: -15.186976432800293
    9. '           ' → logprob: -15.311976432800293
    10. ' ' → logprob: -15.686976432800293

Token 112: '_' (ID: 62)
  Prédit: '_even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_even' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.00000286102295
    3. 'even' → logprob: -15.75000286102295
    4. '_e' → logprob: -17.125001907348633
    5. '_valid' → logprob: -19.250001907348633
    6. '_every' → logprob: -19.625001907348633
    7. '_ev' → logprob: -19.625001907348633
    8. 'Even' → logprob: -20.125001907348633
    9. '_under' → logprob: -20.500001907348633
    10. '_easy' → logprob: -20.750001907348633

Token 113: 'odd' (ID: 18303)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.00011200665176147595
    2. '_even' → logprob: -9.62511157989502
    3. 'odd' → logprob: -10.37511157989502
    4. ' even' → logprob: -11.50011157989502
    5. 'evenodd' → logprob: -13.87511157989502
    6. 'Even' → logprob: -14.00011157989502
    7. 'eve' → logprob: -14.12511157989502
    8. ' ' → logprob: -14.50011157989502
    9. 'e' → logprob: -14.62511157989502
    10. ')' → logprob: -14.75011157989502

Token 114: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2766607999801636
    2. '):' → logprob: -1.5266607999801636
    3. '):
' → logprob: -4.151660919189453
    4. '       ' → logprob: -5.151660919189453
    5. ' )' → logprob: -6.526660919189453
    6. '   ' → logprob: -7.151660919189453
    7. ' ):' → logprob: -8.401660919189453
    8. ':' → logprob: -8.901660919189453
    9. '           ' → logprob: -9.526660919189453
    10. '):

' → logprob: -9.651660919189453

Token 115: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08973200619220734
    2. ' or' → logprob: -3.2147319316864014
    3. '           ' → logprob: -3.7147319316864014
    4. '       ' → logprob: -3.9647319316864014
    5. ':
' → logprob: -6.3397321701049805
    6. '):' → logprob: -8.71473217010498
    7. ' and' → logprob: -8.96473217010498
    8. '   ' → logprob: -9.46473217010498
    9. ')' → logprob: -10.33973217010498
    10. ' :' → logprob: -10.46473217010498

Token 116: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6336008310317993
    2. ' (' → logprob: -0.7586008310317993
    3. '(c' → logprob: -8.258601188659668
    4. '       ' → logprob: -8.508601188659668
    5. '(' → logprob: -9.008601188659668
    6. '(not' → logprob: -9.133601188659668
    7. '          ' → logprob: -9.508601188659668
    8. '      ' → logprob: -10.008601188659668
    9. '           ' → logprob: -10.133601188659668
    10. '   ' → logprob: -10.383601188659668

Token 117: 'i' (ID: 72)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5012998580932617
    2. 'i' → logprob: -1.0012998580932617
    3. ' (' → logprob: -4.001299858093262
    4. '   ' → logprob: -5.376299858093262
    5. '(i' → logprob: -6.126299858093262
    6. ' ' → logprob: -7.001299858093262
    7. '  ' → logprob: -8.251299858093262
    8. '    ' → logprob: -8.626299858093262
    9. '(' → logprob: -9.001299858093262
    10. '       ' → logprob: -9.501299858093262

Token 118: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.007010886911302805
    2. '%' → logprob: -5.0070109367370605
    3. ' ' → logprob: -8.132010459899902
    4. ' ' → logprob: -14.757010459899902
    5. ')' → logprob: -15.507010459899902
    6. '```' → logprob: -15.507010459899902
    7. '  ' → logprob: -16.00701141357422
    8. '<|end|>' → logprob: -16.00701141357422
    9. '   ' → logprob: -16.69451141357422
    10. '1' → logprob: -17.25701141357422

Token 119: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2259921133518219
    2. ' ' → logprob: -1.6009920835494995
    3. '<|end|>' → logprob: -8.225992202758789
    4. '1' → logprob: -8.350992202758789
    5. '```' → logprob: -10.975992202758789
    6. '   ' → logprob: -11.475992202758789
    7. '==' → logprob: -11.725992202758789
    8. '<|end|>' → logprob: -11.725992202758789
    9. '  ' → logprob: -11.913492202758789
    10. '       ' → logprob: -12.850992202758789

Token 120: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006506824865937233
    2. ' ' → logprob: -5.13150691986084
    3. '1' → logprob: -7.50650691986084
    4. '0' → logprob: -10.75650691986084
    5. '```' → logprob: -13.25650691986084
    6. '   ' → logprob: -13.63150691986084
    7. '<|end|>' → logprob: -14.06900691986084
    8. '  ' → logprob: -14.31900691986084
    9. '
' → logprob: -14.75650691986084
    10. '==' → logprob: -15.19400691986084

Token 121: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4202288091182709
    2. '==' → logprob: -1.1702288389205933
    3. ' !=' → logprob: -3.5452287197113037
    4. '!=' → logprob: -5.795228958129883
    5. ' ' → logprob: -7.545228958129883
    6. '1' → logprob: -8.545228958129883
    7. ')' → logprob: -9.545228958129883
    8. ')==' → logprob: -10.295228958129883
    9. '```' → logprob: -10.545228958129883
    10. '0' → logprob: -11.545228958129883

Token 122: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09098564088344574
    2. '0' → logprob: -2.9659855365753174
    3. ' ' → logprob: -3.3409855365753174
    4. '   ' → logprob: -10.715985298156738
    5. '```' → logprob: -11.215985298156738
    6. '
' → logprob: -12.090985298156738
    7. '

' → logprob: -13.340985298156738
    8. '  ' → logprob: -13.465985298156738
    9. '           ' → logprob: -13.465985298156738
    10. '               ' → logprob: -13.778485298156738

Token 123: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26442989706993103
    2. '1' → logprob: -1.5144299268722534
    3. ' ' → logprob: -4.389430046081543
    4. '   ' → logprob: -12.264430046081543
    5. '```' → logprob: -12.264430046081543
    6. '
' → logprob: -13.826930046081543
    7. '  ' → logprob: -14.201930046081543
    8. '2' → logprob: -14.701930046081543
    9. '4' → logprob: -14.889430046081543
    10. ')' → logprob: -15.139430046081543

Token 124: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016066044569015503
    2. 'and' → logprob: -4.141066074371338
    3. ' ' → logprob: -10.64106559753418
    4. '   ' → logprob: -12.76606559753418
    5. '    ' → logprob: -12.89106559753418
    6. ')' → logprob: -13.51606559753418
    7. ' )' → logprob: -15.39106559753418
    8. '       ' → logprob: -15.64106559753418
    9. '        ' → logprob: -15.76606559753418
    10. ' &&' → logprob: -16.01606559753418

Token 125: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.008654399774968624
    2. 'c' → logprob: -4.758654594421387
    3. ' ' → logprob: -10.633654594421387
    4. '    ' → logprob: -12.383654594421387
    5. '   ' → logprob: -12.383654594421387
    6. ' ' → logprob: -12.883654594421387
    7. '	c' → logprob: -13.883654594421387
    8. '  ' → logprob: -14.071154594421387
    9. ')' → logprob: -14.946154594421387
    10. ' not' → logprob: -15.071154594421387

Token 126: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0024837462697178125
    2. 'not' → logprob: -6.00248384475708
    3. ' ' → logprob: -11.877483367919922
    4. '<|end|>' → logprob: -14.252483367919922
    5. '	not' → logprob: -15.377483367919922
    6. ')' → logprob: -15.752483367919922
    7. ' in' → logprob: -17.127483367919922
    8. '   ' → logprob: -18.252483367919922
    9. ' ' → logprob: -18.502483367919922
    10. ':not' → logprob: -18.627483367919922

Token 127: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029988130554556847
    2. 'in' → logprob: -3.5299880504608154
    3. '<|end|>' → logprob: -8.404988288879395
    4. ' ' → logprob: -11.654988288879395
    5. ')' → logprob: -13.029988288879395
    6. '<|end|>' → logprob: -13.779988288879395
    7. ' to' → logprob: -14.904988288879395
    8. 'to' → logprob: -15.029988288879395
    9. 'In' → logprob: -15.154988288879395
    10. 'valid' → logprob: -15.279988288879395

Token 128: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.3132685124874115
    2. ' valid' → logprob: -1.3132685422897339
    3. '	valid' → logprob: -12.813268661499023
    4. '(valid' → logprob: -12.938268661499023
    5. '_valid' → logprob: -14.813268661499023
    6. ' ' → logprob: -14.938268661499023
    7. '.valid' → logprob: -15.313268661499023
    8. 'Valid' → logprob: -15.563268661499023
    9. '   ' → logprob: -15.688268661499023
    10. '```' → logprob: -16.438268661499023

Token 129: '_even' (ID: 186029)
  Prédit: '_even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_even' → logprob: -2.629921436891891e-05
    2. '_valid' → logprob: -11.12502670288086
    3. '_' → logprob: -11.87502670288086
    4. 'even' → logprob: -12.37502670288086
    5. 'valid' → logprob: -16.00002670288086
    6. ')' → logprob: -17.62502670288086
    7. '_two' → logprob: -18.25002670288086
    8. '_every' → logprob: -18.37502670288086
    9. '_else' → logprob: -18.50002670288086
    10. '__' → logprob: -18.62502670288086

Token 130: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10109618306159973
    2. '):
' → logprob: -2.3510961532592773
    3. ':' → logprob: -7.726096153259277
    4. ')' → logprob: -8.851096153259277
    5. '   ' → logprob: -8.851096153259277
    6. '       ' → logprob: -8.976096153259277
    7. '):
' → logprob: -11.601096153259277
    8. ':
' → logprob: -11.851096153259277
    9. ' ):' → logprob: -11.851096153259277
    10. ' ):
' → logprob: -11.976096153259277

Token 131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2093094289302826
    2. '       ' → logprob: -2.3343093395233154
    3. ':' → logprob: -2.5843093395233154
    4. ':
' → logprob: -4.2093095779418945
    5. 'print' → logprob: -7.3343095779418945
    6. ' print' → logprob: -7.9593095779418945
    7. '():
' → logprob: -8.084309577941895
    8. '):
' → logprob: -9.209309577941895
    9. '   ' → logprob: -9.834309577941895
    10. '):' → logprob: -9.959309577941895

Token 132: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3107748329639435
    2. '       ' → logprob: -2.060774803161621
    3. 'print' (adapté à ' print') → logprob: -2.060774803161621
    4. '           ' → logprob: -4.935774803161621
    5. '   ' → logprob: -5.435774803161621
    6. ' ' → logprob: -7.810774803161621
    7. '```' → logprob: -8.685774803161621
    8. '	print' → logprob: -9.060774803161621
    9. '    ' → logprob: -9.685774803161621
    10. '
' → logprob: -9.935774803161621

Token 133: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0011727249948307872
    2. '(' → logprob: -6.7511725425720215
    3. '("("' → logprob: -13.00117301940918
    4. '('' → logprob: -16.12617301940918
    5. '(
' → logprob: -16.75117301940918
    6. '("")' → logprob: -16.87617301940918
    7. '("(' → logprob: -17.62617301940918
    8. '()' → logprob: -18.00117301940918
    9. '("""' → logprob: -18.25117301940918
    10. '(

' → logprob: -19.25117301940918

Token 134: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0017232499085366726
    2. '"No' → logprob: -6.376723289489746
    3. ' No' → logprob: -11.376723289489746
    4. '"' → logprob: -12.251723289489746
    5. 'Yes' → logprob: -13.001723289489746
    6. '("' → logprob: -13.126723289489746
    7. '(No' → logprob: -15.251723289489746
    8. '_No' → logprob: -16.50172233581543
    9. '```' → logprob: -16.50172233581543
    10. '“No' → logprob: -16.87672233581543

Token 135: '")
' (ID: 1896)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5076999664306641
    2. '")
' → logprob: -1.632699966430664
    3. '")' → logprob: -1.632699966430664
    4. ')' → logprob: -6.007699966430664
    5. ')
' → logprob: -6.257699966430664
    6. '       ' → logprob: -6.382699966430664
    7. '               ' → logprob: -7.132699966430664
    8. '()' → logprob: -8.007699966430664
    9. '()
' → logprob: -10.132699966430664
    10. '   ' → logprob: -10.632699966430664

Token 136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016754455282352865
    2. '       ' → logprob: -8.875167846679688
    3. '               ' → logprob: -11.125167846679688
    4. '
' → logprob: -12.625167846679688
    5. '```' → logprob: -12.875167846679688
    6. '<|end|>' → logprob: -13.000167846679688
    7. '	       ' → logprob: -13.250167846679688
    8. '   ' → logprob: -14.125167846679688
    9. '            
' → logprob: -14.375167846679688
    10. 'return' → logprob: -14.500167846679688

Token 137: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' (adapté à ' sys') → logprob: -0.018669335171580315
    2. 'return' → logprob: -4.268669128417969
    3. ' sys' → logprob: -5.518669128417969
    4. '           ' → logprob: -7.893669128417969
    5. '       ' → logprob: -9.643669128417969
    6. ' return' → logprob: -10.518669128417969
    7. 'exit' → logprob: -11.643669128417969
    8. '	sys' → logprob: -12.393669128417969
    9. '   ' → logprob: -12.643669128417969
    10. '               ' → logprob: -13.268669128417969

Token 138: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -1.3902033970225602e-05
    2. 'exit' → logprob: -11.250014305114746
    3. '.' → logprob: -14.625014305114746
    4. '	exit' → logprob: -15.750014305114746
    5. '.quit' → logprob: -16.00001335144043
    6. '.EXIT' → logprob: -16.75001335144043
    7. ' .' → logprob: -16.87501335144043
    8. '(exit' → logprob: -17.50001335144043
    9. '_exit' → logprob: -17.75001335144043
    10. ' exit' → logprob: -17.87501335144043

Token 139: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00014060820103622973
    2. '()
' → logprob: -9.250140190124512
    3. '(' → logprob: -10.125140190124512
    4. '()

' → logprob: -13.125140190124512
    5. '()`' → logprob: -13.625140190124512
    6. '())' → logprob: -15.250140190124512
    7. '()"' → logprob: -15.625140190124512
    8. '()]' → logprob: -15.875140190124512
    9. '()\' → logprob: -16.000141143798828
    10. '();' → logprob: -16.500141143798828

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0787360891699791
    2. '
' → logprob: -3.3287360668182373
    3. 'print' → logprob: -3.8287360668182373
    4. '    
' → logprob: -4.203736305236816
    5. '  
' → logprob: -6.078736305236816
    6. '```' → logprob: -8.078736305236816
    7. '        
' → logprob: -8.953736305236816
    8. ' print' → logprob: -9.328736305236816
    9. '       ' → logprob: -9.578736305236816
    10. '\n' → logprob: -10.203736305236816

Token 141: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0035805876832455397
    2. '   ' → logprob: -5.753580570220947
    3. '
' → logprob: -8.503581047058105
    4. ' print' → logprob: -9.128581047058105
    5. '    
' → logprob: -9.628581047058105
    6. '```' → logprob: -10.753581047058105
    7. '  
' → logprob: -12.878581047058105
    8. '	print' → logprob: -14.503581047058105
    9. ' ' → logprob: -15.253581047058105
    10. '``' → logprob: -15.378581047058105

Token 142: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00043615259346552193
    2. '(' → logprob: -7.750436305999756
    3. '("("' → logprob: -12.250435829162598
    4. '('' → logprob: -14.750435829162598
    5. '("(' → logprob: -15.875435829162598
    6. '(
' → logprob: -15.875435829162598
    7. '"' → logprob: -16.375436782836914
    8. ' ("' → logprob: -17.250436782836914
    9. '(("' → logprob: -17.625436782836914
    10. '("")' → logprob: -18.500436782836914

Token 143: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -2.5776860184123507e-06
    2. ' Yes' → logprob: -13.87500286102295
    3. 'Ye' → logprob: -14.25000286102295
    4. 'YES' → logprob: -14.37500286102295
    5. 'yes' → logprob: -16.125001907348633
    6. 'Ok' → logprob: -16.625001907348633
    7. '"' → logprob: -17.125001907348633
    8. ' yes' → logprob: -17.500001907348633
    9. 'No' → logprob: -17.750001907348633
    10. '.Yes' → logprob: -18.000001907348633

Token 144: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00013655527436640114
    2. ')' → logprob: -9.000136375427246
    3. ')")' → logprob: -11.875136375427246
    4. '")
' → logprob: -12.750136375427246
    5. '()' → logprob: -12.875136375427246
    6. '"' → logprob: -15.875136375427246
    7. '```' → logprob: -15.875136375427246
    8. '}")' → logprob: -15.875136375427246
    9. '')' → logprob: -16.750137329101562
    10. '")

' → logprob: -17.125137329101562

Token 145: 'if' (ID: 366)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.36541324853897095
    2. 'if' → logprob: -1.2404131889343262
    3. 'main' → logprob: -5.115413188934326
    4. '
' → logprob: -5.365413188934326
    5. '\' → logprob: -5.615413188934326
    6. '```' → logprob: -7.115413188934326
    7. '<|end|>' → logprob: -7.365413188934326
    8. '(main' → logprob: -8.365413665771484
    9. '\
' → logprob: -8.615413665771484
    10. '()' → logprob: -8.740413665771484

Token 146: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.25199201703071594
    2. '__' → logprob: -1.5019919872283936
    3. 'name' → logprob: -10.626992225646973
    4. ' ' → logprob: -10.876992225646973
    5. '_name' → logprob: -11.751992225646973
    6. '_' → logprob: -12.126992225646973
    7. ' name' → logprob: -13.126992225646973
    8. '___' → logprob: -13.751992225646973
    9. 'Name' → logprob: -13.876992225646973
    10. ' ' → logprob: -15.001992225646973

Token 147: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.34729933738708496
    2. '.__' → logprob: -1.472299337387085
    3. '.' → logprob: -3.097299337387085
    4. ' ==' → logprob: -5.097299575805664
    5. ' __' → logprob: -5.222299575805664
    6. '__.__' → logprob: -6.222299575805664
    7. '==' → logprob: -6.722299575805664
    8. '__.' → logprob: -7.097299575805664
    9. ' .' → logprob: -7.222299575805664
    10. '.main' → logprob: -7.347299575805664

Token 148: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.0219828002154827e-05
    2. '==' → logprob: -11.000020027160645
    3. '__.__' → logprob: -13.125020027160645
    4. '_' → logprob: -14.125020027160645
    5. ' ==' → logprob: -15.375020027160645
    6. '___' → logprob: -16.00002098083496
    7. '____' → logprob: -16.75002098083496
    8. ' __' → logprob: -17.00002098083496
    9. '__

' → logprob: -17.00002098083496
    10. '__.' → logprob: -17.12502098083496

Token 149: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0031979158520698547
    2. ' ==' → logprob: -6.128198146820068
    3. '==' → logprob: -7.003198146820068
    4. '=="' → logprob: -9.50319766998291
    5. '__.__' → logprob: -11.00319766998291
    6. '___' → logprob: -12.37819766998291
    7. '.__' → logprob: -13.00319766998291
    8. '_' → logprob: -13.50319766998291
    9. '__.' → logprob: -13.75319766998291
    10. '=='' → logprob: -13.75319766998291

Token 150: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0005044196150265634
    2. ''' → logprob: -7.625504493713379
    3. '__' → logprob: -11.500504493713379
    4. ' "__' → logprob: -12.000504493713379
    5. '"name' → logprob: -16.625503540039062
    6. '"user' → logprob: -17.000503540039062
    7. ''"' → logprob: -17.375503540039062
    8. '"'' → logprob: -17.625503540039062
    9. ' '__' → logprob: -18.125503540039062
    10. '"value' → logprob: -18.625503540039062

Token 151: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.47579312324523926
    2. '__' → logprob: -0.9757931232452393
    3. 'name' → logprob: -6.47579288482666
    4. '"' → logprob: -9.22579288482666
    5. '__":
' → logprob: -10.60079288482666
    6. '_main' → logprob: -11.97579288482666
    7. '```' → logprob: -11.97579288482666
    8. '   ' → logprob: -12.35079288482666
    9. '__
' → logprob: -12.47579288482666
    10. 'python' → logprob: -12.47579288482666

Token 152: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.07946259528398514
    2. '__' → logprob: -2.5794625282287598
    3. '__':
' → logprob: -7.95446252822876
    4. '__:' → logprob: -8.579463005065918
    5. '__.' → logprob: -10.454463005065918
    6. '__["' → logprob: -13.079463005065918
    7. '__.__' → logprob: -13.579463005065918
    8. '__
' → logprob: -15.204463005065918
    9. '__("' → logprob: -15.329463005065918
    10. ':' → logprob: -15.454463005065918

Token 153: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00863631535321474
    2. 'main' → logprob: -4.883636474609375
    3. '	main' → logprob: -7.133636474609375
    4. '   ' → logprob: -9.133636474609375
    5. ' 
' → logprob: -9.633636474609375
    6. '    
' → logprob: -11.133636474609375
    7. ' ' → logprob: -11.133636474609375
    8. '_main' → logprob: -11.258636474609375
    9. ' ' → logprob: -12.008636474609375
    10. '(main' → logprob: -12.633636474609375

Token 154: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.15310683415737e-05
    2. ' main' → logprob: -10.750021934509277
    3. '	main' → logprob: -18.87502098083496
    4. '   ' → logprob: -21.62502098083496
    5. '.main' → logprob: -22.12502098083496
    6. '(main' → logprob: -22.25002098083496
    7. '_main' → logprob: -22.37502098083496
    8. 'Main' → logprob: -23.12502098083496
    9. 'mai' → logprob: -23.12502098083496
    10. 'ma' → logprob: -23.25002098083496

Token 155: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07213357836008072
    2. '(' → logprob: -2.6971335411071777
    3. '()
' → logprob: -6.572133541107178
    4. '(
' → logprob: -7.197133541107178
    5. '```' → logprob: -11.697134017944336
    6. '()

' → logprob: -12.072134017944336
    7. '
' → logprob: -12.197134017944336
    8. '#' → logprob: -12.322134017944336
    9. '();' → logprob: -12.822134017944336
    10. '()`' → logprob: -12.822134017944336


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 153
Tokens correctement prédits (1ère position, stricte): 74
Tokens correctement prédits (1ère position, avec adaptation): 78
Tokens correctement prédits (top 10): 132
Précision stricte (1ère position): 48.37%
Précision adaptée (1ère position): 50.98%
Précision (top 10): 86.27%
================================================================================
