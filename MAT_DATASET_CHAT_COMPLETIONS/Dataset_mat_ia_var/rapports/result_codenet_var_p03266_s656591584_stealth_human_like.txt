================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# voilà, je fais quelques trucs pour calculer un truc avec les entiers
n, k = map(int, input().split())   # je prends 2 entiers

cubes1 = n // k

cubes2 = 0
# hmm il paraît que si k est pair, faut en ajouter d'autres ?
if (k%2==0):
    cubes2 = (n + (k//2)) // k   # un truc bizarre mais bon

# le résultat final est la somme des cubes ?
print(cubes1 * cubes1 * cubes1 + cubes2 ** 3)  # pourquoi pas...
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' voilà' (ID: 77612)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' je' (ID: 1264)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023453358560800552
    2. ' ,' → logprob: -5.148453235626221
    3. ',' → logprob: -5.523453235626221
    4. '  ' → logprob: -5.773453235626221
    5. ' !' → logprob: -6.398453235626221
    6. '<|end|>' → logprob: -6.398453235626221
    7. '!' → logprob: -6.523453235626221
    8. ' #' → logprob: -6.898453235626221
    9. '```' → logprob: -7.273453235626221
    10. ' a' → logprob: -7.398453235626221

Token 4: ' fais' (ID: 24376)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6088005304336548
    2. ' ' → logprob: -1.3588005304336548
    3. ' suis' → logprob: -2.1088004112243652
    4. ' vais' → logprob: -3.4838004112243652
    5. ' veux' → logprob: -4.108800411224365
    6. ' continue' → logprob: -5.108800411224365
    7. ' peux' → logprob: -5.483800411224365
    8. '_s' → logprob: -5.608800411224365
    9. '_' → logprob: -5.983800411224365
    10. ' s' → logprob: -6.358800411224365

Token 5: ' quelques' (ID: 17687)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007522512227296829
    2. ' un' → logprob: -5.5075225830078125
    3. ' ' → logprob: -7.0075225830078125
    4. '_' → logprob: -7.2575225830078125
    5. 'un' → logprob: -7.6325225830078125
    6. '  ' → logprob: -8.257522583007812
    7. ' =' → logprob: -8.507522583007812
    8. ' a' → logprob: -8.882522583007812
    9. ' une' → logprob: -9.132522583007812
    10. ' ‌' → logprob: -9.257522583007812

Token 6: ' trucs' (ID: 151878)
  Prédit: ' tests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tests' → logprob: -1.075990080833435
    2. ' ' → logprob: -1.575990080833435
    3. 'tests' → logprob: -2.0759902000427246
    4. ' essais' → logprob: -3.0759902000427246
    5. 'mod' → logprob: -3.2009902000427246
    6. '   ' → logprob: -3.4509902000427246
    7. '```' → logprob: -3.4509902000427246
    8. ' espaces' → logprob: -3.5759902000427246
    9. ' lignes' → logprob: -3.7009902000427246
    10. ' recherches' → logprob: -3.9509902000427246

Token 7: ' pour' (ID: 1930)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.09853791445493698
    2. '#' → logprob: -3.2235379219055176
    3. '
' → logprob: -3.9735379219055176
    4. '\' → logprob: -4.098537921905518
    5. '```' → logprob: -4.973537921905518
    6. '  
' → logprob: -5.848537921905518
    7. ' ' → logprob: -6.223537921905518
    8. '!' → logprob: -6.348537921905518
    9. '.' → logprob: -6.848537921905518
    10. ' 
' → logprob: -7.473537921905518

Token 8: ' calcul' (ID: 7559)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9417420029640198
    2. ' mon' → logprob: -1.441741943359375
    3. ' l' → logprob: -2.941741943359375
    4. ' tester' → logprob: -3.316741943359375
    5. ' toi' → logprob: -3.316741943359375
    6. 'm' → logprob: -3.441741943359375
    7. 'mon' → logprob: -3.691741943359375
    8. 'vous' → logprob: -3.691741943359375
    9. ' améliorer' → logprob: -4.066741943359375
    10. ' rendre' → logprob: -4.316741943359375

Token 9: 'er' (ID: 259)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23933570086956024
    2. 'er' → logprob: -2.114335775375366
    3. 's' → logprob: -3.614335775375366
    4. 'a' → logprob: -3.864335775375366
    5. '#' → logprob: -4.114335536956787
    6. ' ' → logprob: -4.739335536956787
    7. 'u' → logprob: -5.489335536956787
    8. 'e' → logprob: -6.114335536956787
    9. 'r' → logprob: -6.614335536956787
    10. '```' → logprob: -6.614335536956787

Token 10: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8572498559951782
    2. '.' → logprob: -1.2322498559951782
    3. '_' → logprob: -2.3572497367858887
    4. ',' → logprob: -2.7322497367858887
    5. 's' → logprob: -2.7322497367858887
    6. '```' → logprob: -3.8572497367858887
    7. ':' → logprob: -5.107249736785889
    8. '\' → logprob: -5.232249736785889
    9. '  
' → logprob: -5.857249736785889
    10. '#' → logprob: -6.107249736785889

Token 11: ' truc' (ID: 58342)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0311888437718153
    2. ' espace' → logprob: -3.656188726425171
    3. '_' → logprob: -5.78118896484375
    4. '  ' → logprob: -8.53118896484375
    5. 'e' → logprob: -8.78118896484375
    6. 's' → logprob: -8.78118896484375
    7. 'es' → logprob: -8.90618896484375
    8. ' ```' → logprob: -9.03118896484375
    9. ' e' → logprob: -9.28118896484375
    10. ' ' → logprob: -9.40618896484375

Token 12: ' avec' (ID: 3937)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.5698596239089966
    2. '\n' → logprob: -1.5698596239089966
    3. '#' → logprob: -1.6948596239089966
    4. '.' → logprob: -1.9448596239089966
    5. '_' → logprob: -2.444859504699707
    6. ' ' → logprob: -2.694859504699707
    7. 'a' → logprob: -4.069859504699707
    8. ':' → logprob: -4.444859504699707
    9. '  
' → logprob: -4.569859504699707
    10. 's' → logprob: -4.569859504699707

Token 13: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.3434182405471802
    2. ' ma' → logprob: -1.9684182405471802
    3. ' des' → logprob: -2.2184181213378906
    4. ' mon' → logprob: -2.7184181213378906
    5. ' pandas' → logprob: -2.7184181213378906
    6. ' Python' → logprob: -3.5934181213378906
    7. ' une' → logprob: -3.7184181213378906
    8. 'une' → logprob: -3.7184181213378906
    9. ' le' → logprob: -3.7184181213378906
    10. 'la' → logprob: -3.8434181213378906

Token 14: ' ent' (ID: 1121)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4817896783351898
    2. '#' → logprob: -2.6067895889282227
    3. ' données' → logprob: -2.8567895889282227
    4. ' nombres' → logprob: -3.2317895889282227
    5. 'data' → logprob: -3.7317895889282227
    6. ' pandas' → logprob: -3.9817895889282227
    7. 'm' → logprob: -4.356789588928223
    8. 'result' → logprob: -4.606789588928223
    9. 'import' → logprob: -4.606789588928223
    10. '```' → logprob: -4.606789588928223

Token 15: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.020851561799645424
    2. 't' → logprob: -4.5208516120910645
    3. 'i' → logprob: -5.0208516120910645
    4. 'r' → logprob: -7.1458516120910645
    5. '```' → logprob: -7.1458516120910645
    6. 'ier' → logprob: -7.5208516120910645
    7. 'ières' → logprob: -8.520851135253906
    8. '#' → logprob: -8.645851135253906
    9. 'ers' → logprob: -9.145851135253906
    10. 's' → logprob: -9.645851135253906

Token 16: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3995387554168701
    2. 's' → logprob: -1.3995387554168701
    3. '#' → logprob: -2.52453875541687
    4. 'a' → logprob: -2.64953875541687
    5. '.' → logprob: -3.02453875541687
    6. ' ' → logprob: -3.14953875541687
    7. ',' → logprob: -3.27453875541687
    8. 'n' → logprob: -3.27453875541687
    9. '\' → logprob: -3.39953875541687
    10. 'x' → logprob: -3.77453875541687

Token 17: 'n' (ID: 77)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0520275831222534
    2. '\' → logprob: -2.177027702331543
    3. '_' → logprob: -2.302027702331543
    4. 's' → logprob: -2.552027702331543
    5. 'a' → logprob: -2.677027702331543
    6. 'n' → logprob: -3.052027702331543
    7. '
' → logprob: -3.427027702331543
    8. '```' → logprob: -3.427027702331543
    9. '\n' → logprob: -3.552027702331543
    10. 'i' → logprob: -3.552027702331543

Token 18: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7996910214424133
    2. '_' → logprob: -1.1746909618377686
    3. '+' → logprob: -2.5496909618377686
    4. ' =' → logprob: -2.5496909618377686
    5. '=' → logprob: -3.4246909618377686
    6. 'u' → logprob: -3.9246909618377686
    7. ',' → logprob: -5.299691200256348
    8. '  ' → logprob: -5.799691200256348
    9. '-' → logprob: -5.799691200256348
    10. ')' → logprob: -6.174691200256348

Token 19: ' k' (ID: 372)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.7105116248130798
    2. ' ' → logprob: -1.3355116844177246
    3. 'm' → logprob: -1.4605116844177246
    4. 'a' → logprob: -5.960511684417725
    5. ' a' → logprob: -6.585511684417725
    6. ' k' → logprob: -6.710511684417725
    7. 'i' → logprob: -7.335511684417725
    8. '_' → logprob: -7.335511684417725
    9. ''' → logprob: -7.460511684417725
    10. 'space' → logprob: -7.460511684417725

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2031797617673874
    2. '=' → logprob: -1.7031797170639038
    3. ',' → logprob: -6.453179836273193
    4. ' ' → logprob: -8.953179359436035
    5. ' ,' → logprob: -10.828179359436035
    6. ')' → logprob: -11.203179359436035
    7. '_' → logprob: -12.078179359436035
    8. '<|end|>' → logprob: -12.078179359436035
    9. 's' → logprob: -12.828179359436035
    10. '.' → logprob: -13.578179359436035

Token 21: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016248904168605804
    2. '0' → logprob: -4.64124870300293
    3. '10' → logprob: -5.39124870300293
    4. ' int' → logprob: -7.01624870300293
    5. '5' → logprob: -7.39124870300293
    6. 'int' → logprob: -8.64124870300293
    7. ' map' → logprob: -9.76624870300293
    8. '1' → logprob: -9.89124870300293
    9. ' input' → logprob: -10.14124870300293
    10. 'input' → logprob: -10.51624870300293

Token 22: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5656283497810364
    2. '(int' → logprob: -0.9406283497810364
    3. '(lambda' → logprob: -3.8156282901763916
    4. '(str' → logprob: -4.065628528594971
    5. '<|end|>' → logprob: -7.190628528594971
    6. '[int' → logprob: -7.690628528594971
    7. 'int' → logprob: -7.940628528594971
    8. '(
' → logprob: -8.065628051757812
    9. '<int' → logprob: -9.065628051757812
    10. '```' → logprob: -9.815628051757812

Token 23: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.012941853143274784
    2. 'input' → logprob: -5.262941837310791
    3. '(' → logprob: -5.387941837310791
    4. ')' → logprob: -6.012941837310791
    5. ' input' → logprob: -8.38794231414795
    6. '```' → logprob: -9.51294231414795
    7. ',input' → logprob: -9.51294231414795
    8. '(str' → logprob: -10.13794231414795
    9. '('' → logprob: -10.26294231414795
    10. '[input' → logprob: -10.26294231414795

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25199422240257263
    2. ' input' → logprob: -1.501994252204895
    3. '(input' → logprob: -10.126994132995605
    4. ')' → logprob: -10.876994132995605
    5. '=input' → logprob: -13.376994132995605
    6. ',input' → logprob: -13.376994132995605
    7. ' ' → logprob: -13.876994132995605
    8. ' )' → logprob: -14.501994132995605
    9. '	input' → logprob: -15.001994132995605
    10. '```' → logprob: -15.001994132995605

Token 25: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.39603087306022644
    2. '()' → logprob: -1.1460309028625488
    3. '().' → logprob: -4.896030902862549
    4. '('' → logprob: -7.396030902862549
    5. '(' → logprob: -7.896030902862549
    6. '(),' → logprob: -9.39603042602539
    7. '()))' → logprob: -9.39603042602539
    8. ')' → logprob: -9.52103042602539
    9. '("")' → logprob: -9.77103042602539
    10. ' ())' → logprob: -9.77103042602539

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0024832691997289658
    2. 'strip' → logprob: -6.002483367919922
    3. ' split' → logprob: -12.752483367919922
    4. 'rstrip' → logprob: -13.002483367919922
    5. ')' → logprob: -13.502483367919922
    6. 'spl' → logprob: -14.752483367919922
    7. '(split' → logprob: -15.377483367919922
    8. 'read' → logprob: -15.502483367919922
    9. '_split' → logprob: -16.627483367919922
    10. 'startswith' → logprob: -17.252483367919922

Token 27: '())' (ID: 3516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.334166944026947
    2. '))' → logprob: -1.4591670036315918
    3. '())' → logprob: -3.084167003631592
    4. '()))' → logprob: -5.209167003631592
    5. '()' → logprob: -7.959167003631592
    6. ')))' → logprob: -11.459166526794434
    7. '(' → logprob: -11.459166526794434
    8. '),' → logprob: -12.209166526794434
    9. ''))' → logprob: -12.959166526794434
    10. ')`' → logprob: -12.959166526794434

Token 28: '  ' (ID: 256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1088478565216064
    2. ':' → logprob: -1.8588478565216064
    3. ')' → logprob: -2.6088478565216064
    4. 'n' → logprob: -2.6088478565216064
    5. 'if' → logprob: -2.8588478565216064
    6. 'for' → logprob: -2.8588478565216064
    7. 's' → logprob: -3.3588478565216064
    8. ',' → logprob: -3.6088478565216064
    9. '<|end|>' → logprob: -3.7338478565216064
    10. 'print' → logprob: -3.8588478565216064

Token 29: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7139466404914856
    2. ')' → logprob: -1.8389465808868408
    3. ':' → logprob: -2.713946580886841
    4. '\n' → logprob: -2.838946580886841
    5. 'n' → logprob: -2.838946580886841
    6. ',' → logprob: -3.088946580886841
    7. '<|end|>' → logprob: -3.213946580886841
    8. '\' → logprob: -4.08894681930542
    9. ' ' → logprob: -4.33894681930542
    10. '
' → logprob: -4.33894681930542

Token 30: ' je' (ID: 1264)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.562585175037384
    2. 's' → logprob: -2.0625851154327393
    3. ' ' → logprob: -2.6875851154327393
    4. 'a' → logprob: -2.9375851154327393
    5. 'n' → logprob: -3.1875851154327393
    6. ' result' → logprob: -3.3125851154327393
    7. 'sum' → logprob: -4.062585353851318
    8. 'r' → logprob: -4.437585353851318
    9. ')' → logprob: -4.812585353851318
    10. 't' → logprob: -4.812585353851318

Token 31: ' prends' (ID: 151723)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1595244407653809
    2. ' veux' → logprob: -1.2845244407653809
    3. ' =' → logprob: -2.409524440765381
    4. ' vais' → logprob: -2.909524440765381
    5. '=' → logprob: -3.034524440765381
    6. ' suis' → logprob: -3.534524440765381
    7. ' n' → logprob: -3.534524440765381
    8. ' peux' → logprob: -3.659524440765381
    9. ' pense' → logprob: -4.034524440765381
    10. 'voud' → logprob: -4.784524440765381

Token 32: ' ' (ID: 220)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.765836238861084
    2. ' les' → logprob: -1.140836238861084
    3. 'les' → logprob: -2.765836238861084
    4. ' des' → logprob: -3.390836238861084
    5. ' n' → logprob: -3.765836238861084
    6. ' une' → logprob: -4.015836238861084
    7. 'la' → logprob: -4.140836238861084
    8. ' ' → logprob: -4.640836238861084
    9. 'une' → logprob: -4.890836238861084
    10. ' le' → logprob: -5.015836238861084

Token 33: '2' (ID: 17)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.1435844898223877
    2. 'la' → logprob: -1.2685844898223877
    3. ' la' → logprob: -2.0185844898223877
    4. 'l' → logprob: -2.3935844898223877
    5. ' les' → logprob: -3.0185844898223877
    6. 'le' → logprob: -3.3935844898223877
    7. ' n' → logprob: -3.7685844898223877
    8. 'n' → logprob: -4.143584251403809
    9. 'une' → logprob: -4.143584251403809
    10. ' ' → logprob: -4.518584251403809

Token 34: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5270639657974243
    2. 'n' → logprob: -1.6520639657974243
    3. ')' → logprob: -2.2770638465881348
    4. 'def' → logprob: -3.2770638465881348
    5. ' n' → logprob: -3.9020638465881348
    6. 's' → logprob: -4.402063846588135
    7. '=' → logprob: -4.777063846588135
    8. ':' → logprob: -5.277063846588135
    9. ',' → logprob: -5.277063846588135
    10. '#' → logprob: -5.652063846588135

Token 35: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00034118397161364555
    2. 'ières' → logprob: -8.375341415405273
    3. 'ers' → logprob: -9.750341415405273
    4. 'ires' → logprob: -10.875341415405273
    5. 'ri' → logprob: -11.250341415405273
    6. 'i' → logprob: -11.625341415405273
    7. 'ier' → logprob: -12.750341415405273
    8. 'riers' → logprob: -13.000341415405273
    9. 'ités' → logprob: -14.000341415405273
    10. 'rés' → logprob: -14.000341415405273

Token 36: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9076760411262512
    2. ')' → logprob: -1.6576759815216064
    3. 'def' → logprob: -2.0326759815216064
    4. '
' → logprob: -2.7826759815216064
    5. 'n' → logprob: -3.0326759815216064
    6. '#' → logprob: -3.4076759815216064
    7. 's' → logprob: -4.0326762199401855
    8. '\' → logprob: -4.1576762199401855
    9. '<|end|>' → logprob: -4.4076762199401855
    10. 'a' → logprob: -4.6576762199401855

Token 37: 'c' (ID: 66)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.858144760131836
    2. 's' → logprob: -1.983144760131836
    3. ')' → logprob: -2.108144760131836
    4. 'n' → logprob: -2.233144760131836
    5. ',' → logprob: -2.358144760131836
    6. ':' → logprob: -2.483144760131836
    7. 'def' → logprob: -2.733144760131836
    8. '#' → logprob: -2.983144760131836
    9. 'a' → logprob: -2.983144760131836
    10. 'd' → logprob: -3.733144760131836

Token 38: 'ubes' (ID: 68551)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3969091773033142
    2. 'omb' → logprob: -1.271909236907959
    3. '=' → logprob: -4.396909236907959
    4. 'ount' → logprob: -5.021909236907959
    5. 'ounter' → logprob: -5.146909236907959
    6. 'o' → logprob: -5.521909236907959
    7. 'ont' → logprob: -5.646909236907959
    8. '_' → logprob: -6.271909236907959
    9. 'mb' → logprob: -6.396909236907959
    10. 'om' → logprob: -6.896909236907959

Token 39: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23961162567138672
    2. 's' → logprob: -2.4896116256713867
    3. '=' → logprob: -2.7396116256713867
    4. ' =' → logprob: -2.9896116256713867
    5. '[' → logprob: -4.489611625671387
    6. '(' → logprob: -6.489611625671387
    7. '_=' → logprob: -7.489611625671387
    8. '=[]' → logprob: -8.114611625671387
    9. '_sum' → logprob: -8.239611625671387
    10. '_s' → logprob: -8.239611625671387

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9577124118804932
    2. '=' → logprob: -1.0827124118804932
    3. '_' → logprob: -2.207712411880493
    4. 's' → logprob: -2.582712411880493
    5. '[' → logprob: -2.582712411880493
    6. '(' → logprob: -5.457712173461914
    7. ')' → logprob: -5.707712173461914
    8. '[n' → logprob: -6.332712173461914
    9. '=[' → logprob: -6.582712173461914
    10. '[]' → logprob: -6.832712173461914

Token 41: ' n' (ID: 297)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.9195389151573181
    2. '[k' → logprob: -1.419538974761963
    3. '[i' → logprob: -1.544538974761963
    4. ' [' → logprob: -2.544538974761963
    5. '[]' → logprob: -3.294538974761963
    6. '[' → logprob: -3.669538974761963
    7. ' []' → logprob: -6.544538974761963
    8. '[(' → logprob: -6.794538974761963
    9. '[x' → logprob: -7.294538974761963
    10. 'n' → logprob: -7.419538974761963

Token 42: ' //' (ID: 602)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2546021342277527
    2. ' **' → logprob: -1.7546021938323975
    3. '+' → logprob: -4.129601955413818
    4. '*' → logprob: -4.629601955413818
    5. ' *' → logprob: -4.754601955413818
    6. ' +' → logprob: -4.879601955413818
    7. '-' → logprob: -5.504601955413818
    8. ' ' → logprob: -5.879601955413818
    9. ' -' → logprob: -6.629601955413818
    10. '[' → logprob: -8.379602432250977

Token 43: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.25462856888771057
    2. '3' → logprob: -2.0046286582946777
    3. ' k' → logprob: -3.2546286582946777
    4. '2' → logprob: -3.7546286582946777
    5. ' ' → logprob: -3.7546286582946777
    6. '1' → logprob: -6.254628658294678
    7. '4' → logprob: -7.129628658294678
    8. '6' → logprob: -7.754628658294678
    9. '5' → logprob: -7.754628658294678
    10. '7' → logprob: -8.12962818145752

Token 44: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9366570711135864
    2. '%' → logprob: -2.061656951904297
    3. '<|end|>' → logprob: -2.186656951904297
    4. 'c' → logprob: -2.561656951904297
    5. '*' → logprob: -2.811656951904297
    6. '
' → logprob: -3.061656951904297
    7. ' 
' → logprob: -3.061656951904297
    8. '**' → logprob: -3.686656951904297
    9. ')' → logprob: -3.811656951904297
    10. '#' → logprob: -3.936656951904297

Token 45: 'c' (ID: 66)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2153417468070984
    2. 'c' → logprob: -2.715341806411743
    3. '**' → logprob: -3.090341806411743
    4. '*' → logprob: -3.215341806411743
    5. '#' → logprob: -4.590341567993164
    6. ' +' → logprob: -4.715341567993164
    7. '%' → logprob: -5.465341567993164
    8. ')' → logprob: -5.715341567993164
    9. '+
' → logprob: -5.965341567993164
    10. ' 
' → logprob: -6.590341567993164

Token 46: 'ubes' (ID: 68551)
  Prédit: 'ubes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ubes' → logprob: -0.006480884272605181
    2. 'ub' → logprob: -5.756480693817139
    3. 'u' → logprob: -7.006480693817139
    4. '=' → logprob: -7.256480693817139
    5. 'ube' → logprob: -7.256480693817139
    6. '   ' → logprob: -8.506481170654297
    7. '1' → logprob: -9.131481170654297
    8. ' =' → logprob: -9.381481170654297
    9. '#' → logprob: -9.631481170654297
    10. '```' → logprob: -9.756481170654297

Token 47: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23496069014072418
    2. '2' → logprob: -1.609960675239563
    3. '_' → logprob: -5.109960556030273
    4. 's' → logprob: -5.734960556030273
    5. '_s' → logprob: -9.359960556030273
    6. ' ' → logprob: -10.234960556030273
    7. '=' → logprob: -11.484960556030273
    8. '**' → logprob: -11.484960556030273
    9. ' s' → logprob: -11.859960556030273
    10. '*' → logprob: -11.859960556030273

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006174194160848856
    2. '=' → logprob: -5.131174087524414
    3. ' ' → logprob: -8.381174087524414
    4. ',' → logprob: -12.756174087524414
    5. 'k' → logprob: -12.881174087524414
    6. ' =
' → logprob: -13.506174087524414
    7. ' ,' → logprob: -13.756174087524414
    8. 's' → logprob: -13.881174087524414
    9. ' ' → logprob: -14.006174087524414
    10. '=k' → logprob: -14.256174087524414

Token 49: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6194109916687012
    2. 'n' → logprob: -0.8694109916687012
    3. 'k' → logprob: -4.244410991668701
    4. ' (' → logprob: -4.494410991668701
    5. ' k' → logprob: -4.744410991668701
    6. '(n' → logprob: -4.994410991668701
    7. '(k' → logprob: -6.994410991668701
    8. '(' → logprob: -7.869410991668701
    9. ' ' → logprob: -9.36941146850586
    10. '2' → logprob: -10.24441146850586

Token 50: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5222355127334595
    2. '(n' → logprob: -1.6472355127334595
    3. 'n' → logprob: -2.02223539352417
    4. '(k' → logprob: -2.64723539352417
    5. ' (' → logprob: -5.89723539352417
    6. ' k' → logprob: -6.02223539352417
    7. ' n' → logprob: -6.52223539352417
    8. 'c' → logprob: -6.64723539352417
    9. '2' → logprob: -6.89723539352417
    10. '(' → logprob: -7.14723539352417

Token 51: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7562106847763062
    2. '
' → logprob: -1.1312106847763062
    3. ' for' → logprob: -1.8812106847763062
    4. '<|end|>' → logprob: -4.131210803985596
    5. ' ' → logprob: -4.506210803985596
    6. 'if' → logprob: -5.131210803985596
    7. ' 
' → logprob: -5.256210803985596
    8. '\n' → logprob: -5.506210803985596
    9. '
' → logprob: -6.131210803985596
    10. 'n' → logprob: -6.381210803985596

Token 52: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07679501175880432
    2. ' for' → logprob: -2.9517951011657715
    3. '
' → logprob: -4.4517951011657715
    4. 'while' → logprob: -5.3267951011657715
    5. 'if' → logprob: -5.7017951011657715
    6. 'n' → logprob: -7.3267951011657715
    7. ' while' → logprob: -7.8267951011657715
    8. ' if' → logprob: -8.951794624328613
    9. ' 
' → logprob: -8.951794624328613
    10. '<|end|>' → logprob: -9.451794624328613

Token 53: ' hmm' (ID: 186402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.041615381836891174
    2. ' for' → logprob: -3.2916154861450195
    3. 'i' → logprob: -6.1666154861450195
    4. 'f' → logprob: -7.4166154861450195
    5. 'while' → logprob: -8.16661548614502
    6. 'if' → logprob: -8.29161548614502
    7. 'c' → logprob: -9.29161548614502
    8. ' i' → logprob: -9.91661548614502
    9. 'n' → logprob: -9.91661548614502
    10. ' while' → logprob: -10.41661548614502

Token 54: ' il' (ID: 1793)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18022684752941132
    2. ' for' → logprob: -1.8052268028259277
    3. ' ' → logprob: -8.430227279663086
    4. 'while' → logprob: -9.555227279663086
    5. 'if' → logprob: -10.555227279663086
    6. 'f' → logprob: -10.680227279663086
    7. ' while' → logprob: -10.680227279663086
    8. '<|end|>' → logprob: -10.680227279663086
    9. '
' → logprob: -10.930227279663086
    10. ',' → logprob: -10.930227279663086

Token 55: ' paraît' (ID: 164516)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.007684350013733
    2. ' faut' → logprob: -1.382684350013733
    3. ' for' → logprob: -1.757684350013733
    4. 's' → logprob: -2.7576842308044434
    5. 'f' → logprob: -3.0076842308044434
    6. '=' → logprob: -3.3826842308044434
    7. ' manque' → logprob: -4.757684230804443
    8. ' y' → logprob: -5.007684230804443
    9. ' n' → logprob: -5.132684230804443
    10. 'n' → logprob: -5.257684230804443

Token 56: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.03314175084233284
    2. ' ' → logprob: -3.908141851425171
    3. ' qu' → logprob: -5.033141613006592
    4. 'que' → logprob: -5.533141613006592
    5. ' that' → logprob: -7.158141613006592
    6. ',' → logprob: -7.283141613006592
    7. 'qu' → logprob: -8.90814208984375
    8. ' c' → logprob: -9.90814208984375
    9. ' #' → logprob: -10.28314208984375
    10. 'c' → logprob: -10.28314208984375

Token 57: ' si' (ID: 1784)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5061140060424805
    2. ' cubes' → logprob: -2.1311140060424805
    3. ' n' → logprob: -2.6311140060424805
    4. 'k' → logprob: -2.6311140060424805
    5. ' for' → logprob: -3.1311140060424805
    6. 'c' → logprob: -3.3811140060424805
    7. ' c' → logprob: -3.7561140060424805
    8. 'for' → logprob: -4.1311140060424805
    9. 'n' → logprob: -5.1311140060424805
    10. ' ' → logprob: -5.6311140060424805

Token 58: ' k' (ID: 372)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0972473993897438
    2. ' k' → logprob: -2.847247362136841
    3. 'n' → logprob: -3.722247362136841
    4. 'k' → logprob: -5.72224760055542
    5. ' cubes' → logprob: -5.72224760055542
    6. ' (' → logprob: -6.22224760055542
    7. ' c' → logprob: -7.34724760055542
    8. '(n' → logprob: -7.47224760055542
    9. ' ' → logprob: -8.097247123718262
    10. 'c' → logprob: -8.972247123718262

Token 59: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7281720638275146
    2. '%' → logprob: -1.9781720638275146
    3. ' <=' → logprob: -2.7281720638275146
    4. '>' → logprob: -2.7281720638275146
    5. ' %' → logprob: -2.7281720638275146
    6. '**' → logprob: -2.8531720638275146
    7. ' ==' → logprob: -3.2281720638275146
    8. ' >=' → logprob: -3.6031720638275146
    9. '*k' → logprob: -4.228172302246094
    10. '==' → logprob: -4.853172302246094

Token 60: ' pair' (ID: 10610)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6605104207992554
    2. ' impair' → logprob: -1.7855104207992554
    3. 'pair' → logprob: -2.035510540008545
    4. ' ' → logprob: -2.410510540008545
    5. '0' → logprob: -2.535510540008545
    6. 'div' → logprob: -3.285510540008545
    7. ' pair' → logprob: -3.410510540008545
    8. ' divisible' → logprob: -3.535510540008545
    9. ' supérieur' → logprob: -3.660510540008545
    10. 'plus' → logprob: -3.785510540008545

Token 61: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12854839861392975
    2. ' and' → logprob: -2.8785483837127686
    3. ' :' → logprob: -3.2535483837127686
    4. ',' → logprob: -3.7535483837127686
    5. 'and' → logprob: -7.253548622131348
    6. ' ' → logprob: -7.503548622131348
    7. ' et' → logprob: -8.003548622131348
    8. ':
' → logprob: -8.003548622131348
    9. ' ,' → logprob: -8.378548622131348
    10. 'et' → logprob: -9.128548622131348

Token 62: ' faut' (ID: 17821)
  Prédit: ' cubes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cubes' → logprob: -0.6177135109901428
    2. ' on' → logprob: -0.9927135109901428
    3. ' c' → logprob: -3.492713451385498
    4. 'c' → logprob: -3.617713451385498
    5. ' k' → logprob: -4.742713451385498
    6. ' if' → logprob: -4.992713451385498
    7. ' ' → logprob: -5.117713451385498
    8. ' for' → logprob: -6.117713451385498
    9. ' alors' → logprob: -6.117713451385498
    10. ' n' → logprob: -6.617713451385498

Token 63: ' en' (ID: 469)
  Prédit: ' ajouter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ajouter' → logprob: -0.9229662418365479
    2. ' faire' → logprob: -1.7979662418365479
    3. ' compter' → logprob: -2.797966241836548
    4. ' ' → logprob: -3.047966241836548
    5. ' prendre' → logprob: -3.297966241836548
    6. 'aj' → logprob: -3.547966241836548
    7. ' que' → logprob: -3.672966241836548
    8. 'faire' → logprob: -3.797966241836548
    9. ' calcul' → logprob: -3.922966241836548
    10. ' pas' → logprob: -4.172966003417969

Token 64: ' ajouter' (ID: 78457)
  Prédit: ' prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prendre' → logprob: -0.9290758967399597
    2. 'lever' → logprob: -1.1790759563446045
    3. 't' → logprob: -2.5540759563446045
    4. 'prendre' → logprob: -2.6790759563446045
    5. '```' → logprob: -3.8040759563446045
    6. ' tenir' → logprob: -3.9290759563446045
    7. 'mettre' → logprob: -4.179075717926025
    8. ' ajouter' → logprob: -4.304075717926025
    9. ' mettre' → logprob: -4.804075717926025
    10. 'faire' → logprob: -4.929075717926025

Token 65: ' d' (ID: 272)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6596590876579285
    2. ' ' → logprob: -1.6596591472625732
    3. 'if' → logprob: -2.1596591472625732
    4. '
' → logprob: -3.2846591472625732
    5. ':' → logprob: -3.4096591472625732
    6. ',' → logprob: -3.6596591472625732
    7. ' :' → logprob: -4.159658908843994
    8. '```' → logprob: -4.909658908843994
    9. '  
' → logprob: -4.909658908843994
    10. ' :
' → logprob: -5.034658908843994

Token 66: ''autres' (ID: 38753)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.009861153550446033
    2. 'u' → logprob: -5.884860992431641
    3. 'es' → logprob: -6.759860992431641
    4. ''un' → logprob: -6.759860992431641
    5. '1' → logprob: -7.134860992431641
    6. ''autant' → logprob: -7.259860992431641
    7. 'eux' → logprob: -7.259860992431641
    8. 'ans' → logprob: -7.634860992431641
    9. ''au' → logprob: -8.00986099243164
    10. ''e' → logprob: -8.75986099243164

Token 67: ' ?
' (ID: 19740)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6429092288017273
    2. 'if' → logprob: -1.517909288406372
    3. ' ' → logprob: -2.267909288406372
    4. ':' → logprob: -2.642909288406372
    5. '  
' → logprob: -4.142909049987793
    6. ' 
' → logprob: -4.142909049987793
    7. ',' → logprob: -4.267909049987793
    8. '
' → logprob: -5.142909049987793
    9. '```' → logprob: -5.142909049987793
    10. ' :' → logprob: -5.392909049987793

Token 68: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29875433444976807
    2. '  
' → logprob: -2.5487542152404785
    3. ' 
' → logprob: -2.7987542152404785
    4. ' if' → logprob: -3.6737542152404785
    5. '\n' → logprob: -3.9237542152404785
    6. '```' → logprob: -4.1737542152404785
    7. 'if' → logprob: -4.2987542152404785
    8. '\' → logprob: -4.5487542152404785
    9. ':' → logprob: -4.5487542152404785
    10. ' ' → logprob: -5.1737542152404785

Token 69: ' (' (ID: 350)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.0022858604788780212
    2. ' ' → logprob: -6.127285957336426
    3. 'k' → logprob: -9.252285957336426
    4. ' ' → logprob: -13.127285957336426
    5. ' (' → logprob: -13.252285957336426
    6. '	k' → logprob: -14.502285957336426
    7. '  ' → logprob: -15.127285957336426
    8. ' к' → logprob: -16.00228500366211
    9. '(k' → logprob: -16.75228500366211
    10. ' ' → logprob: -16.75228500366211

Token 70: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2519311308860779
    2. ' k' → logprob: -1.5019311904907227
    3. ' ' → logprob: -13.626931190490723
    4. '	k' → logprob: -14.501931190490723
    5. ')' → logprob: -16.751930236816406
    6. '(k' → logprob: -16.876930236816406
    7. '   ' → logprob: -17.001930236816406
    8. '  ' → logprob: -17.626930236816406
    9. ' к' → logprob: -17.626930236816406
    10. '-k' → logprob: -18.126930236816406

Token 71: '%' (ID: 4)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.03933262825012207
    2. '%' → logprob: -3.289332628250122
    3. ' ' → logprob: -6.664332389831543
    4. ')' → logprob: -11.664332389831543
    5. ' ' → logprob: -12.539332389831543
    6. ' )' → logprob: -13.914332389831543
    7. ' %)' → logprob: -14.289332389831543
    8. '```' → logprob: -15.164332389831543
    9. ' %
' → logprob: -15.289332389831543
    10. ')%' → logprob: -15.914332389831543

Token 72: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007607339881360531
    2. ' ' → logprob: -4.882607460021973
    3. '==' → logprob: -14.632607460021973
    4. ')' → logprob: -14.882607460021973
    5. ' ==' → logprob: -15.382607460021973
    6. '  ' → logprob: -16.757606506347656
    7. '```' → logprob: -16.882606506347656
    8. '0' → logprob: -17.257606506347656
    9. '   ' → logprob: -17.882606506347656
    10. '=' → logprob: -18.632606506347656

Token 73: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.27494847774505615
    2. '==' → logprob: -1.6499484777450562
    3. ')' → logprob: -3.1499485969543457
    4. ')==' → logprob: -5.774948596954346
    5. '=' → logprob: -7.024948596954346
    6. ' )' → logprob: -7.149948596954346
    7. ' ' → logprob: -7.399948596954346
    8. ' =' → logprob: -9.774948120117188
    9. '==
' → logprob: -12.149948120117188
    10. '0' → logprob: -12.149948120117188

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021904718596488237
    2. ' ' → logprob: -6.127190589904785
    3. '2' → logprob: -12.752190589904785
    4. ')' → logprob: -13.377190589904785
    5. '1' → logprob: -14.877190589904785
    6. '  ' → logprob: -16.18968963623047
    7. '```' → logprob: -16.37718963623047
    8. '=' → logprob: -16.81468963623047
    9. '00' → logprob: -16.87718963623047
    10. '   ' → logprob: -16.93968963623047

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018079349771142006
    2. ')' → logprob: -4.2680792808532715
    3. ' ):' → logprob: -5.6430792808532715
    4. ':' → logprob: -8.89307975769043
    5. '):
' → logprob: -8.89307975769043
    6. ' )' → logprob: -9.89307975769043
    7. ' and' → logprob: -10.76807975769043
    8. ' ' → logprob: -12.64307975769043
    9. ' :' → logprob: -12.76807975769043
    10. '):
' → logprob: -12.76807975769043

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15140531957149506
    2. '    
' → logprob: -2.6514053344726562
    3. ' cubes' → logprob: -3.1514053344726562
    4. '    ' → logprob: -4.276405334472656
    5. ' 
' → logprob: -4.776405334472656
    6. '     
' → logprob: -6.401405334472656
    7. '
' → logprob: -7.151405334472656
    8. 'c' → logprob: -7.151405334472656
    9. ' ' → logprob: -8.026405334472656
    10. '\' → logprob: -8.526405334472656

Token 77: ' cubes' (ID: 88455)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5786283612251282
    2. ' cubes' → logprob: -0.9536283612251282
    3. '   ' → logprob: -2.9536283016204834
    4. ' ' → logprob: -7.2036285400390625
    5. ' c' → logprob: -7.8286285400390625
    6. 'k' → logprob: -8.953628540039062
    7. '	c' → logprob: -9.078628540039062
    8. '    
' → logprob: -9.453628540039062
    9. '  ' → logprob: -9.578628540039062
    10. 'n' → logprob: -9.578628540039062

Token 78: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. '1' → logprob: -13.37500286102295
    3. ' ' → logprob: -14.75000286102295
    4. '```' → logprob: -15.50000286102295
    5. ' +=' → logprob: -16.187501907348633
    6. '=' → logprob: -16.875001907348633
    7. '۲' → logprob: -16.875001907348633
    8. '   ' → logprob: -17.187501907348633
    9. '_' → logprob: -17.312501907348633
    10. '+=' → logprob: -17.437501907348633

Token 79: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3549550771713257
    2. ' =' → logprob: -1.3549550771713257
    3. '+=' → logprob: -3.4799551963806152
    4. '=' → logprob: -4.604955196380615
    5. ' ' → logprob: -11.479954719543457
    6. '+' → logprob: -12.229954719543457
    7. '    ' → logprob: -12.604954719543457
    8. ' +' → logprob: -13.104954719543457
    9. '   ' → logprob: -13.729954719543457
    10. '+=(' → logprob: -13.854954719543457

Token 80: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4041898250579834
    2. '(n' → logprob: -1.2791898250579834
    3. ' n' → logprob: -4.0291900634765625
    4. 'n' → logprob: -4.4041900634765625
    5. ' ' → logprob: -5.1541900634765625
    6. '(' → logprob: -5.5291900634765625
    7. 'c' → logprob: -5.5291900634765625
    8. ' ((' → logprob: -5.9041900634765625
    9. '((' → logprob: -6.0291900634765625
    10. ' cubes' → logprob: -6.4041900634765625

Token 81: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5034300684928894
    2. 'n' → logprob: -1.0034301280975342
    3. ' (' → logprob: -4.378429889678955
    4. '((' → logprob: -5.253429889678955
    5. ' n' → logprob: -5.628429889678955
    6. 'c' → logprob: -5.628429889678955
    7. '(k' → logprob: -6.753429889678955
    8. '(' → logprob: -7.003429889678955
    9. '(c' → logprob: -7.253429889678955
    10. 'k' → logprob: -7.878429889678955

Token 82: ' +' (ID: 659)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.7413164973258972
    2. '//' → logprob: -1.116316556930542
    3. ' -' → logprob: -2.116316556930542
    4. '-' → logprob: -2.741316556930542
    5. '+' → logprob: -5.741316318511963
    6. ' +' → logprob: -5.991316318511963
    7. ' )' → logprob: -6.491316318511963
    8. '%' → logprob: -6.491316318511963
    9. ' ' → logprob: -7.366316318511963
    10. ')' → logprob: -7.491316318511963

Token 83: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.19184958934783936
    2. '(k' → logprob: -2.691849708557129
    3. ' k' → logprob: -2.941849708557129
    4. '1' → logprob: -3.066849708557129
    5. ' (' → logprob: -5.191849708557129
    6. ' ' → logprob: -6.816849708557129
    7. ')' → logprob: -8.316849708557129
    8. '(' → logprob: -8.441849708557129
    9. '   ' → logprob: -9.191849708557129
    10. '  ' → logprob: -10.191849708557129

Token 84: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03890170902013779
    2. '(k' → logprob: -3.9139018058776855
    3. ' k' → logprob: -4.4139018058776855
    4. '1' → logprob: -5.6639018058776855
    5. ' (' → logprob: -6.5389018058776855
    6. ' ' → logprob: -7.0389018058776855
    7. '   ' → logprob: -8.913901329040527
    8. ')' → logprob: -10.038901329040527
    9. '2' → logprob: -10.288901329040527
    10. '(' → logprob: -10.538901329040527

Token 85: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.009814999997615814
    2. ' //' → logprob: -4.634815216064453
    3. '-' → logprob: -11.009815216064453
    4. '/' → logprob: -11.509815216064453
    5. ' -' → logprob: -11.759815216064453
    6. '```' → logprob: -11.759815216064453
    7. ' ' → logprob: -12.259815216064453
    8. '//=' → logprob: -12.634815216064453
    9. '#' → logprob: -13.009815216064453
    10. ')//' → logprob: -13.384815216064453

Token 86: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00025001514586620033
    2. ' ' → logprob: -8.375249862670898
    3. '1' → logprob: -11.125249862670898
    4. ')' → logprob: -13.375249862670898
    5. '   ' → logprob: -13.875249862670898
    6. '4' → logprob: -14.375249862670898
    7. '//' → logprob: -15.125249862670898
    8. '```' → logprob: -15.125249862670898
    9. '  ' → logprob: -15.875249862670898
    10. '/' → logprob: -16.0002498626709

Token 87: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03724370151758194
    2. '))' → logprob: -3.912243604660034
    3. ' )' → logprob: -4.912243843078613
    4. ')//' → logprob: -5.412243843078613
    5. '-' → logprob: -5.537243843078613
    6. ' -' → logprob: -7.787243843078613
    7. ' ))' → logprob: -8.912243843078613
    8. '//' → logprob: -9.287243843078613
    9. '   ' → logprob: -9.912243843078613
    10. ' ' → logprob: -10.037243843078613

Token 88: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.37873607873916626
    2. ')' → logprob: -1.6287360191345215
    3. '//' → logprob: -2.2537360191345215
    4. ' )' → logprob: -4.7537360191345215
    5. ' ' → logprob: -6.2537360191345215
    6. ' #' → logprob: -6.7537360191345215
    7. '#' → logprob: -7.1287360191345215
    8. ')//' → logprob: -8.00373649597168
    9. '-k' → logprob: -8.37873649597168
    10. '```' → logprob: -8.75373649597168

Token 89: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.4391956685576588e-05
    2. ' k' → logprob: -10.625024795532227
    3. '<|end|>' → logprob: -18.375024795532227
    4. '	k' → logprob: -18.500024795532227
    5. 'kx' → logprob: -19.000024795532227
    6. ' к' → logprob: -19.750024795532227
    7. '?k' → logprob: -20.375024795532227
    8. '*k' → logprob: -21.250024795532227
    9. '/k' → logprob: -21.250024795532227
    10. 'n' → logprob: -21.375024795532227

Token 90: '  ' (ID: 256)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3513122797012329
    2. 'print' → logprob: -1.476312279701233
    3. '<|end|>' → logprob: -3.1013121604919434
    4. ')' → logprob: -4.226312160491943
    5. '#' → logprob: -5.601312160491943
    6. '
' → logprob: -7.351312160491943
    7. '+' → logprob: -7.476312160491943
    8. '

' → logprob: -7.476312160491943
    9. 'n' → logprob: -7.851312160491943
    10. 'c' → logprob: -7.851312160491943

Token 91: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' un' (ID: 537)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' truc' (ID: 58342)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5723795294761658
    2. ' autre' → logprob: -1.1973795890808105
    3. ' ' → logprob: -3.6973795890808105
    4. 'es' → logprob: -3.9473795890808105
    5. 's' → logprob: -4.4473795890808105
    6. ' espace' → logprob: -4.8223795890808105
    7. ' peu' → logprob: -4.9473795890808105
    8. 'aut' → logprob: -5.0723795890808105
    9. '+' → logprob: -5.4473795890808105
    10. 'ième' → logprob: -5.6973795890808105

Token 94: ' bizarre' (ID: 61150)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014892635866999626
    2. '#' → logprob: -5.264892578125
    3. ')' → logprob: -5.389892578125
    4. '<|end|>' → logprob: -6.389892578125
    5. '
' → logprob: -6.514892578125
    6. ' ' → logprob: -7.514892578125
    7. ' print' → logprob: -8.139892578125
    8. '```' → logprob: -8.514892578125
    9. 'return' → logprob: -8.889892578125
    10. '+' → logprob: -9.014892578125

Token 95: ' mais' (ID: 2899)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39462777972221375
    2. '<|end|>' → logprob: -2.019627809524536
    3. '
' → logprob: -2.269627809524536
    4. '#' → logprob: -2.894627809524536
    5. ')' → logprob: -4.019627571105957
    6. '\n' → logprob: -5.519627571105957
    7. '```' → logprob: -5.644627571105957
    8. '\' → logprob: -6.019627571105957
    9. ' ' → logprob: -6.394627571105957
    10. '<|end|>' → logprob: -6.894627571105957

Token 96: ' bon' (ID: 4846)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3086968660354614
    2. ' c' → logprob: -2.183696746826172
    3. 'c' → logprob: -2.308696746826172
    4. ' voilà' → logprob: -2.558696746826172
    5. ' ça' → logprob: -2.683696746826172
    6. ' valid' → logprob: -2.933696746826172
    7. ' logique' → logprob: -3.058696746826172
    8. 'ça' → logprob: -3.183696746826172
    9. '```' → logprob: -4.058696746826172
    10. '...' → logprob: -4.058696746826172

Token 97: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16701312363147736
    2. '
' → logprob: -2.542013168334961
    3. '<|end|>' → logprob: -3.292013168334961
    4. '#' → logprob: -4.042013168334961
    5. ')' → logprob: -4.292013168334961
    6. '```' → logprob: -6.417013168334961
    7. '\' → logprob: -6.792013168334961
    8. '\n' → logprob: -7.042013168334961
    9. ' print' → logprob: -7.417013168334961
    10. ' ' → logprob: -7.917013168334961

Token 98: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008481008931994438
    2. 'result' → logprob: -5.133481025695801
    3. 'total' → logprob: -6.258481025695801
    4. '#' → logprob: -8.0084810256958
    5. ' print' → logprob: -9.5084810256958
    6. 'return' → logprob: -9.7584810256958
    7. '<|end|>' → logprob: -9.8834810256958
    8. 'c' → logprob: -10.8834810256958
    9. ')' → logprob: -10.8834810256958
    10. 'answer' → logprob: -11.1334810256958

Token 99: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002590992720797658
    2. 'result' → logprob: -6.127591133117676
    3. ' print' → logprob: -8.377591133117676
    4. 'total' → logprob: -8.877591133117676
    5. 'answer' → logprob: -11.377591133117676
    6. '#' → logprob: -11.502591133117676
    7. ' result' → logprob: -12.502591133117676
    8. 'c' → logprob: -13.377591133117676
    9. ' total' → logprob: -13.502591133117676
    10. 's' → logprob: -13.502591133117676

Token 100: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.3038668632507324
    2. 'total' → logprob: -1.6788668632507324
    3. 'print' → logprob: -1.8038668632507324
    4. 's' → logprob: -1.9288668632507324
    5. ' total' → logprob: -2.1788668632507324
    6. 'max' → logprob: -3.6788668632507324
    7. ' result' → logprob: -4.053866863250732
    8. 'r' → logprob: -4.053866863250732
    9. ' cubes' → logprob: -4.678866863250732
    10. ' résultat' → logprob: -4.803866863250732

Token 101: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.334533878136426e-05
    2. '
' → logprob: -10.375042915344238
    3. ' print' → logprob: -11.500042915344238
    4. '```' → logprob: -13.750042915344238
    5. 'result' → logprob: -14.625042915344238
    6. '<|end|>' → logprob: -16.500043869018555
    7. '  
' → logprob: -16.750043869018555
    8. '#print' → logprob: -16.750043869018555
    9. '``' → logprob: -16.750043869018555
    10. '
' → logprob: -17.000043869018555

Token 102: ' est' (ID: 893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.5577775128767826e-06
    2. 'result' → logprob: -12.375005722045898
    3. ' print' → logprob: -13.750005722045898
    4. '```' → logprob: -16.2500057220459
    5. '
' → logprob: -16.6250057220459
    6. 'r' → logprob: -18.5000057220459
    7. 'total' → logprob: -18.8750057220459
    8. 'c' → logprob: -19.0000057220459
    9. '``' → logprob: -19.6250057220459
    10. 'res' → logprob: -20.2500057220459

Token 103: ' la' (ID: 557)
  Prédit: ' cubes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cubes' → logprob: -0.015421564690768719
    2. 'c' → logprob: -4.265421390533447
    3. ' max' → logprob: -7.015421390533447
    4. ' c' → logprob: -8.640421867370605
    5. 'max' → logprob: -9.515421867370605
    6. '   ' → logprob: -10.890421867370605
    7. ' cube' → logprob: -11.015421867370605
    8. ' ' → logprob: -11.140421867370605
    9. 'n' → logprob: -11.765421867370605
    10. ' str' → logprob: -11.890421867370605

Token 104: ' somme' (ID: 64484)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012486852938309312
    2. 'result' → logprob: -6.876248836517334
    3. ' print' → logprob: -9.001248359680176
    4. '
' → logprob: -9.751248359680176
    5. 'c' → logprob: -10.876248359680176
    6. '```' → logprob: -11.876248359680176
    7. ' result' → logprob: -12.876248359680176
    8. 'r' → logprob: -13.126248359680176
    9. ' cubes' → logprob: -13.501248359680176
    10. 'total' → logprob: -14.626248359680176

Token 105: ' des' (ID: 731)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.027402672916650772
    2. 'result' → logprob: -4.527402877807617
    3. 'print' → logprob: -4.652402877807617
    4. ' cubes' → logprob: -5.277402877807617
    5. 'final' → logprob: -7.277402877807617
    6. 'total' → logprob: -7.902402877807617
    7. ' =' → logprob: -9.277402877807617
    8. 's' → logprob: -9.527402877807617
    9. ' result' → logprob: -9.777402877807617
    10. ':' → logprob: -10.027402877807617

Token 106: ' cubes' (ID: 88455)
  Prédit: ' cubes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cubes' → logprob: -0.1466389149427414
    2. 'c' → logprob: -2.146638870239258
    3. ' deux' → logprob: -4.271638870239258
    4. 'de' → logprob: -5.646638870239258
    5. ' ' → logprob: -6.771638870239258
    6. ' c' → logprob: -7.646638870239258
    7. ' two' → logprob: -8.021638870239258
    8. ' cube' → logprob: -10.646638870239258
    9. '2' → logprob: -10.771638870239258
    10. 'cube' → logprob: -12.146638870239258

Token 107: ' ?
' (ID: 19740)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4751160144805908
    2. 'result' → logprob: -0.9751160144805908
    3. '
' → logprob: -8.225115776062012
    4. 'total' → logprob: -8.225115776062012
    5. ' result' → logprob: -8.600115776062012
    6. 'res' → logprob: -8.725115776062012
    7. ' print' → logprob: -9.475115776062012
    8. 'answer' → logprob: -10.850115776062012
    9. 'c' → logprob: -10.975115776062012
    10. 'final' → logprob: -11.100115776062012

Token 108: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20216362178325653
    2. 'result' → logprob: -1.702163577079773
    3. 'c' → logprob: -7.4521636962890625
    4. 'total' → logprob: -9.827163696289062
    5. 'res' → logprob: -10.077163696289062
    6. 'answer' → logprob: -10.327163696289062
    7. 'final' → logprob: -11.577163696289062
    8. 'return' → logprob: -11.702163696289062
    9. 'r' → logprob: -12.327163696289062
    10. '```' → logprob: -12.577163696289062

Token 109: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.029757089912891388
    2. '(' → logprob: -3.529757022857666
    3. ' (' → logprob: -12.279757499694824
    4. '((' → logprob: -14.154757499694824
    5. 'c' → logprob: -14.779757499694824
    6. '()' → logprob: -15.404757499694824
    7. '(f' → logprob: -16.029756546020508
    8. '(
' → logprob: -16.029756546020508
    9. '(n' → logprob: -16.404756546020508
    10. '(len' → logprob: -17.029756546020508

Token 110: 'ubes' (ID: 68551)
  Prédit: 'ubes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ubes' → logprob: -1.664371848164592e-05
    2. 'ub' → logprob: -11.375016212463379
    3. 'ube' → logprob: -13.000016212463379
    4. 'c' → logprob: -14.875016212463379
    5. 'ubles' → logprob: -15.000016212463379
    6. '   ' → logprob: -15.125016212463379
    7. 'udes' → logprob: -15.125016212463379
    8. ')' → logprob: -15.250016212463379
    9. '```' → logprob: -15.500016212463379
    10. '`' → logprob: -15.625016212463379

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. 's' → logprob: -13.875000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '2' → logprob: -16.500001907348633
    5. '+' → logprob: -16.750001907348633
    6. ')' → logprob: -17.375001907348633
    7. '１' → logprob: -18.250001907348633
    8. '   ' → logprob: -18.625001907348633
    9. '```' → logprob: -19.750001907348633
    10. ' +' → logprob: -19.812501907348633

Token 112: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4294089078903198
    2. '+' → logprob: -1.1794089078903198
    3. '+c' → logprob: -3.1794090270996094
    4. '+k' → logprob: -11.05440902709961
    5. ')' → logprob: -11.42940902709961
    6. '+C' → logprob: -12.67940902709961
    7. '+)' → logprob: -13.30440902709961
    8. '+b' → logprob: -13.80440902709961
    9. '+
' → logprob: -14.55440902709961
    10. ' ' → logprob: -14.67940902709961

Token 113: ' cubes' (ID: 88455)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.013613425195217133
    2. 'c' → logprob: -4.513613224029541
    3. ' k' → logprob: -6.263613224029541
    4. '2' → logprob: -8.1386137008667
    5. ' cubes' → logprob: -8.2636137008667
    6. ' c' → logprob: -10.1386137008667
    7. '3' → logprob: -10.6386137008667
    8. ' ' → logprob: -11.2636137008667
    9. '(k' → logprob: -11.7636137008667
    10. '(c' → logprob: -11.7636137008667

Token 114: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0076079354621469975
    2. '1' → logprob: -4.882607936859131
    3. '0' → logprob: -14.257607460021973
    4. ')' → logprob: -14.882607460021973
    5. '+' → logprob: -14.882607460021973
    6. ' ' → logprob: -15.632607460021973
    7. 's' → logprob: -16.50760841369629
    8. '```' → logprob: -16.63260841369629
    9. '**' → logprob: -17.69510841369629
    10. '[' → logprob: -17.88260841369629

Token 115: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6932365894317627
    2. ' +' → logprob: -0.6932365894317627
    3. ')' → logprob: -9.818236351013184
    4. '+c' → logprob: -10.443236351013184
    5. '+)' → logprob: -12.318236351013184
    6. '+C' → logprob: -14.693236351013184
    7. ' ' → logprob: -15.318236351013184
    8. ')+' → logprob: -15.818236351013184
    9. ' )' → logprob: -16.1932373046875
    10. ' plus' → logprob: -16.1932373046875

Token 116: ' cubes' (ID: 88455)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.052031610161066055
    2. '2' → logprob: -3.0520315170288086
    3. 'k' → logprob: -6.052031517028809
    4. '+' → logprob: -8.302031517028809
    5. '3' → logprob: -8.677031517028809
    6. '1' → logprob: -8.677031517028809
    7. '+c' → logprob: -8.677031517028809
    8. ' +' → logprob: -9.052031517028809
    9. ' c' → logprob: -9.302031517028809
    10. ')' → logprob: -10.427031517028809

Token 117: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.048587825149297714
    2. '1' → logprob: -3.0485877990722656
    3. ')' → logprob: -16.548587799072266
    4. ' ' → logprob: -16.798587799072266
    5. '```' → logprob: -17.111087799072266
    6. '22' → logprob: -17.548587799072266
    7. '۲' → logprob: -17.923587799072266
    8. '２' → logprob: -17.923587799072266
    9. '٢' → logprob: -18.048587799072266
    10. '12' → logprob: -18.298587799072266

Token 118: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.39975854754447937
    2. ' +' → logprob: -1.1497585773468018
    3. ')' → logprob: -4.399758338928223
    4. '+c' → logprob: -7.774758338928223
    5. '+)' → logprob: -9.399758338928223
    6. ' )' → logprob: -11.899758338928223
    7. '+C' → logprob: -12.149758338928223
    8. '+k' → logprob: -12.524758338928223
    9. '+
' → logprob: -13.024758338928223
    10. ')+' → logprob: -13.399758338928223

Token 119: ' cubes' (ID: 88455)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.029761366546154022
    2. ' cubes' → logprob: -3.52976131439209
    3. '   ' → logprob: -12.02976131439209
    4. ' c' → logprob: -13.52976131439209
    5. '(c' → logprob: -13.65476131439209
    6. '	c' → logprob: -13.65476131439209
    7. ')c' → logprob: -15.02976131439209
    8. 'cube' → logprob: -15.15476131439209
    9. 'cub' → logprob: -15.52976131439209
    10. ' ' → logprob: -15.65476131439209

Token 120: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '<|end|>' → logprob: -16.75
    3. '۲' → logprob: -17.0
    4. ' ' → logprob: -17.125
    5. '1' → logprob: -17.5
    6. '```' → logprob: -17.625
    7. '٢' → logprob: -17.9375
    8. '２' → logprob: -18.0
    9. '२' → logprob: -18.0625
    10. 's' → logprob: -18.0625

Token 121: ' **' (ID: 6240)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.478920578956604
    2. ' *' → logprob: -0.978920578956604
    3. '*c' → logprob: -5.3539204597473145
    4. '**' → logprob: -10.478920936584473
    5. '*C' → logprob: -10.603920936584473
    6. '2' → logprob: -10.853920936584473
    7. ')' → logprob: -10.978920936584473
    8. '*object' → logprob: -11.978920936584473
    9. ' ' → logprob: -13.478920936584473
    10. 'c' → logprob: -14.228920936584473

Token 122: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.3856492842023727e-06
    2. '2' → logprob: -14.125000953674316
    3. ' ' → logprob: -14.750000953674316
    4. '```' → logprob: -16.500001907348633
    5. '1' → logprob: -16.812501907348633
    6. '   ' → logprob: -17.375001907348633
    7. '6' → logprob: -17.875001907348633
    8. '{' → logprob: -19.000001907348633
    9. '  ' → logprob: -19.000001907348633
    10. '³' → logprob: -19.250001907348633

Token 123: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.5048530030981055e-06
    2. '2' → logprob: -14.375001907348633
    3. '```' → logprob: -15.187501907348633
    4. '

' → logprob: -15.937501907348633
    5. '1' → logprob: -16.687501907348633
    6. '
' → logprob: -16.812501907348633
    7. ' ' → logprob: -16.875001907348633
    8. '``' → logprob: -17.125001907348633
    9. '6' → logprob: -17.312501907348633
    10. '{' → logprob: -17.500001907348633

Token 124: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ' )' → logprob: -12.625003814697266
    3. '))' → logprob: -14.375003814697266
    4. ')
' → logprob: -17.125003814697266
    5. '`)' → logprob: -18.125003814697266
    6. ')`' → logprob: -18.375003814697266
    7. '')' → logprob: -18.750003814697266
    8. '）' → logprob: -19.000003814697266
    9. '())' → logprob: -19.125003814697266
    10. '()' → logprob: -19.750003814697266

Token 125: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' pourquoi' (ID: 39224)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: ' pas' (ID: 2173)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: '...' (ID: 1008)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 127
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 20.47%
Précision adaptée (1ère position): 21.26%
Précision (top 10): 51.97%
================================================================================
