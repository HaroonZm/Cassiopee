================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

N = int(input())
P = list(map(int, input().split()))
Q = list(map(int, input().split()))

p = 0
q = 0

i = 0
while i < N:
    n = P[i] - 1
    j = 0
    while j < i:
        if P[j] < P[i]:
            n -= 1
        j += 1
    p += n * math.factorial(N - (i + 1))
    i += 1

i = 0
while i < N:
    n = Q[i] - 1
    j = 0
    while j < i:
        if Q[j] < Q[i]:
            n -= 1
        j += 1
    q += n * math.factorial(N - (i + 1))
    i += 1

print(abs(p - q))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -6.289473822107539e-05
    2. 'import' → logprob: -11.625062942504883
    3. '```' → logprob: -11.625062942504883
    4. '\' → logprob: -11.875062942504883
    5. '<|end|>' → logprob: -12.375062942504883
    6. '.\' → logprob: -12.500062942504883
    7. '.pi' → logprob: -12.625062942504883
    8. '.e' → logprob: -12.625062942504883
    9. '\n' → logprob: -12.875062942504883
    10. 'def' → logprob: -13.250062942504883

Token 4: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5651696920394897
    2. '=' → logprob: -1.6901696920394897
    3. ' ' → logprob: -1.8151696920394897
    4. ')' → logprob: -1.9401696920394897
    5. ',' → logprob: -2.6901698112487793
    6. 'umber' → logprob: -2.9401698112487793
    7. '.' → logprob: -3.4401698112487793
    8. ' =' → logprob: -3.6901698112487793
    9. 'u' → logprob: -3.6901698112487793
    10. 'a' → logprob: -3.8151698112487793

Token 5: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011802800931036472
    2. '10' → logprob: -4.636802673339844
    3. ' int' → logprob: -6.761802673339844
    4. 'int' → logprob: -7.511802673339844
    5. '5' → logprob: -9.136802673339844
    6. '100' → logprob: -9.761802673339844
    7. '0' → logprob: -10.136802673339844
    8. '20' → logprob: -10.261802673339844
    9. '1' → logprob: -10.636802673339844
    10. '32' → logprob: -10.636802673339844

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.383526149671525e-05
    2. '('' → logprob: -11.500053405761719
    3. '()' → logprob: -11.750053405761719
    4. '```' → logprob: -11.875053405761719
    5. '(input' → logprob: -12.000053405761719
    6. '`' → logprob: -12.375053405761719
    7. ''' → logprob: -12.375053405761719
    8. ' (' → logprob: -12.625053405761719
    9. '(`' → logprob: -13.250053405761719
    10. '(
' → logprob: -13.375053405761719

Token 7: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04932974651455879
    2. ')' → logprob: -3.1743297576904297
    3. '()' → logprob: -5.29932975769043
    4. '())' → logprob: -7.54932975769043
    5. '(
' → logprob: -7.67432975769043
    6. '(

' → logprob: -9.79932975769043
    7. '('' → logprob: -9.92432975769043
    8. '```' → logprob: -10.42432975769043
    9. '("("' → logprob: -10.54932975769043
    10. '))' → logprob: -10.67432975769043

Token 8: 'P' (ID: 47)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -1.4307522773742676
    2. 's' → logprob: -1.9307522773742676
    3. 'for' → logprob: -2.1807522773742676
    4. 'result' → logprob: -2.1807522773742676
    5. ''' → logprob: -2.6807522773742676
    6. ')' → logprob: -3.0557522773742676
    7. 'f' → logprob: -3.1807522773742676
    8. 'if' → logprob: -3.3057522773742676
    9. 'x' → logprob: -3.4307522773742676
    10. 'fact' → logprob: -3.4307522773742676

Token 9: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5328564643859863
    2. '(' → logprob: -1.1578564643859863
    3. '_' → logprob: -3.7828564643859863
    4. 'i' → logprob: -4.532856464385986
    5. 'r' → logprob: -4.782856464385986
    6. '[i' → logprob: -4.907856464385986
    7. '.' → logprob: -5.157856464385986
    8. 'I' → logprob: -5.157856464385986
    9. '=' → logprob: -5.282856464385986
    10. ')' → logprob: -5.532856464385986

Token 10: ' list' (ID: 1562)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.1775789111852646
    2. 'math' → logprob: -2.177578926086426
    3. ' []' → logprob: -3.552578926086426
    4. ' [' → logprob: -4.927578926086426
    5. '[]' → logprob: -6.052578926086426
    6. ' list' → logprob: -6.302578926086426
    7. ' float' → logprob: -6.302578926086426
    8. ' int' → logprob: -6.302578926086426
    9. ' ' → logprob: -6.552578926086426
    10. '[' → logprob: -7.177578926086426

Token 11: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005718595930375159
    2. '(range' → logprob: -7.8755717277526855
    3. '[' → logprob: -9.625572204589844
    4. '[(' → logprob: -10.125572204589844
    5. '()' → logprob: -11.625572204589844
    6. '(math' → logprob: -11.750572204589844
    7. '```' → logprob: -11.750572204589844
    8. '(map' → logprob: -12.125572204589844
    9. '<|end|>' → logprob: -12.250572204589844
    10. '((' → logprob: -12.250572204589844

Token 12: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02764100208878517
    2. '(' → logprob: -3.9026410579681396
    3. '(lambda' → logprob: -5.2776408195495605
    4. 'int' → logprob: -7.1526408195495605
    5. '(math' → logprob: -8.027641296386719
    6. '(str' → logprob: -8.152641296386719
    7. '(float' → logprob: -9.152641296386719
    8. '[int' → logprob: -9.152641296386719
    9. '<int' → logprob: -9.652641296386719
    10. '=int' → logprob: -9.902641296386719

Token 13: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03647158667445183
    2. '(' → logprob: -4.036471366882324
    3. ',input' → logprob: -4.411471366882324
    4. ',' → logprob: -5.411471366882324
    5. '))' → logprob: -7.661471366882324
    6. ')' → logprob: -8.286471366882324
    7. 'input' → logprob: -8.411471366882324
    8. '(eval' → logprob: -8.911471366882324
    9. '(math' → logprob: -9.411471366882324
    10. '<|end|>' → logprob: -9.411471366882324

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06200263649225235
    2. ' input' → logprob: -2.812002658843994
    3. '(input' → logprob: -10.937002182006836
    4. ',input' → logprob: -11.187002182006836
    5. ')' → logprob: -13.562002182006836
    6. '=input' → logprob: -14.062002182006836
    7. '	input' → logprob: -14.562002182006836
    8. 'math' → logprob: -15.437002182006836
    9. ' ' → logprob: -15.687002182006836
    10. '[input' → logprob: -16.437002182006836

Token 15: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.41751790046691895
    2. '())' → logprob: -1.917517900466919
    3. '().' → logprob: -2.292517900466919
    4. '()' → logprob: -2.917517900466919
    5. '))' → logprob: -4.16751766204834
    6. '(' → logprob: -4.54251766204834
    7. ')' → logprob: -4.66751766204834
    8. '()));' → logprob: -6.04251766204834
    9. '())))' → logprob: -7.54251766204834
    10. '(),' → logprob: -8.54251766204834

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015248565468937159
    2. 'strip' → logprob: -6.501524925231934
    3. 'rstrip' → logprob: -10.876524925231934
    4. ' split' → logprob: -12.751524925231934
    5. 'spl' → logprob: -15.251524925231934
    6. '(split' → logprob: -15.626524925231934
    7. 'read' → logprob: -16.126523971557617
    8. ')' → logprob: -17.001523971557617
    9. 's' → logprob: -18.001523971557617
    10. ' strip' → logprob: -18.126523971557617

Token 17: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3897775113582611
    2. ')' → logprob: -1.1397775411605835
    3. ')))' → logprob: -6.139777660369873
    4. '(' → logprob: -7.889777660369873
    5. '()))' → logprob: -8.264777183532715
    6. '())' → logprob: -9.764777183532715
    7. '),' → logprob: -10.889777183532715
    8. ''))' → logprob: -12.139777183532715
    9. '()' → logprob: -12.389777183532715
    10. '('' → logprob: -12.639777183532715

Token 18: 'Q' (ID: 48)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.985187828540802
    2. 'max' → logprob: -1.7351877689361572
    3. 'g' → logprob: -2.7351877689361572
    4. ')' → logprob: -2.8601877689361572
    5. 'result' → logprob: -3.1101877689361572
    6. 'm' → logprob: -3.3601877689361572
    7. '\' → logprob: -3.4851877689361572
    8. 'mean' → logprob: -3.6101877689361572
    9. 'd' → logprob: -3.7351877689361572
    10. 'M' → logprob: -4.110188007354736

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3320328891277313
    2. '=' → logprob: -1.3320329189300537
    3. '[' → logprob: -4.457032680511475
    4. '.' → logprob: -5.207032680511475
    5. '[:]' → logprob: -7.832032680511475
    6. '=[]' → logprob: -8.207033157348633
    7. '_' → logprob: -8.207033157348633
    8. ')' → logprob: -8.832033157348633
    9. '(' → logprob: -8.957033157348633
    10. '[]' → logprob: -9.332033157348633

Token 20: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06449761241674423
    2. 'sorted' → logprob: -2.939497709274292
    3. ' list' → logprob: -4.814497470855713
    4. ' sorted' → logprob: -7.314497470855713
    5. '[' → logprob: -8.189497947692871
    6. 'P' → logprob: -8.689497947692871
    7. '[list' → logprob: -8.814497947692871
    8. '[]' → logprob: -9.314497947692871
    9. ' P' → logprob: -10.564497947692871
    10. 'math' → logprob: -11.314497947692871

Token 21: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.6365174651145935
    2. '(' → logprob: -0.7615174651145935
    3. '(int' → logprob: -5.886517524719238
    4. '(range' → logprob: -8.136517524719238
    5. '(list' → logprob: -8.261517524719238
    6. '(math' → logprob: -8.636517524719238
    7. ' (' → logprob: -9.261517524719238
    8. '(
' → logprob: -9.636517524719238
    9. '(

' → logprob: -10.136517524719238
    10. '.' → logprob: -10.386517524719238

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00040290577453561127
    2. '(' → logprob: -8.125402450561523
    3. 'int' → logprob: -9.250402450561523
    4. '=int' → logprob: -13.125402450561523
    5. '[int' → logprob: -13.125402450561523
    6. '(lambda' → logprob: -13.125402450561523
    7. '<int' → logprob: -13.375402450561523
    8. '```' → logprob: -14.000402450561523
    9. ' (' → logprob: -14.250402450561523
    10. ' int' → logprob: -14.375402450561523

Token 23: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.05811551213264465
    2. ',' → logprob: -3.5581154823303223
    3. ',int' → logprob: -3.6831154823303223
    4. 'int' → logprob: -6.058115482330322
    5. '=int' → logprob: -8.93311595916748
    6. '<int' → logprob: -9.18311595916748
    7. '[int' → logprob: -9.55811595916748
    8. ' ,' → logprob: -10.18311595916748
    9. '```' → logprob: -10.30811595916748
    10. '(' → logprob: -10.43311595916748

Token 24: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00015121731848921627
    2. '(int' → logprob: -9.500151634216309
    3. ' int' → logprob: -9.625151634216309
    4. 'input' → logprob: -11.625151634216309
    5. '[int' → logprob: -14.375151634216309
    6. '<int' → logprob: -15.500151634216309
    7. '   ' → logprob: -15.750151634216309
    8. ',int' → logprob: -15.875151634216309
    9. '=int' → logprob: -16.125150680541992
    10. ' ' → logprob: -16.750150680541992

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.935296834039036e-06
    2. '.' → logprob: -13.25000286102295
    3. '()' → logprob: -14.62500286102295
    4. '()))' → logprob: -15.37500286102295
    5. '(' → logprob: -16.250003814697266
    6. '(.' → logprob: -16.500003814697266
    7. ' ().' → logprob: -16.750003814697266
    8. ' .' → logprob: -16.875003814697266
    9. '))' → logprob: -17.250003814697266
    10. '())' → logprob: -17.375003814697266

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5048530030981055e-06
    2. ' split' → logprob: -13.750001907348633
    3. 'strip' → logprob: -15.500001907348633
    4. '(split' → logprob: -17.250001907348633
    5. 'spl' → logprob: -17.625001907348633
    6. 'rstrip' → logprob: -18.500001907348633
    7. 's' → logprob: -18.500001907348633
    8. ')' → logprob: -18.625001907348633
    9. '))' → logprob: -18.750001907348633
    10. 'plit' → logprob: -19.000001907348633

Token 27: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5241820812225342
    2. '))' → logprob: -1.0241820812225342
    3. '())' → logprob: -3.274182081222534
    4. ')' → logprob: -5.149182319641113
    5. '()' → logprob: -5.274182319641113
    6. '()))
' → logprob: -9.899182319641113
    7. '(' → logprob: -10.774182319641113
    8. '())
' → logprob: -12.774182319641113
    9. '()))

' → logprob: -12.774182319641113
    10. '()));' → logprob: -12.774182319641113

Token 28: 'p' (ID: 79)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.2019816637039185
    2. 'factor' → logprob: -1.4519816637039185
    3. 'def' → logprob: -1.7019816637039185
    4. 'from' → logprob: -2.576981544494629
    5. 'import' → logprob: -2.701981544494629
    6. 'per' → logprob: -2.951981544494629
    7. 'perm' → logprob: -3.326981544494629
    8. 'p' → logprob: -3.826981544494629
    9. 'a' → logprob: -5.201981544494629
    10. 'fac' → logprob: -5.201981544494629

Token 29: ' =' (ID: 314)
  Prédit: 'erm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'erm' → logprob: -0.6281281113624573
    2. '_' → logprob: -1.2531280517578125
    3. 'er' → logprob: -2.7531280517578125
    4. 'ermut' → logprob: -3.2531280517578125
    5. 'i' → logprob: -3.6281280517578125
    6. '[:]' → logprob: -4.3781280517578125
    7. '.' → logprob: -4.5031280517578125
    8. '_i' → logprob: -4.8781280517578125
    9. 'erms' → logprob: -5.8781280517578125
    10. '[' → logprob: -5.8781280517578125

Token 30: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46313196420669556
    2. 'P' → logprob: -1.5881319046020508
    3. 'list' → logprob: -2.588131904602051
    4. 'math' → logprob: -3.588131904602051
    5. '[]' → logprob: -4.088131904602051
    6. 'sorted' → logprob: -4.213131904602051
    7. '[P' → logprob: -4.463131904602051
    8. '[list' → logprob: -5.088131904602051
    9. '1' → logprob: -5.213131904602051
    10. '0' → logprob: -5.338131904602051

Token 31: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5152533054351807
    2. 'P' → logprob: -1.7652533054351807
    3. 'list' → logprob: -2.2652533054351807
    4. 'math' → logprob: -3.2652533054351807
    5. 'per' → logprob: -3.5152533054351807
    6. 'sorted' → logprob: -4.015253067016602
    7. '[]' → logprob: -4.140253067016602
    8. 'range' → logprob: -4.890253067016602
    9. '[P' → logprob: -5.015253067016602
    10. '[list' → logprob: -5.140253067016602

Token 32: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.152958869934082
    2. '.' → logprob: -2.027958869934082
    3. 'for' → logprob: -2.152958869934082
    4. '[' → logprob: -2.652958869934082
    5. '_' → logprob: -3.027958869934082
    6. '+' → logprob: -3.152958869934082
    7. 'p' → logprob: -3.277958869934082
    8. ''' → logprob: -3.277958869934082
    9. 'f' → logprob: -3.277958869934082
    10. 'import' → logprob: -3.652958869934082

Token 33: 'q' (ID: 80)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8607105612754822
    2. 'import' → logprob: -1.610710620880127
    3. 'q' → logprob: -1.860710620880127
    4. 'while' → logprob: -2.360710620880127
    5. 'from' → logprob: -2.610710620880127
    6. 'p' → logprob: -4.860710620880127
    7. 'factor' → logprob: -4.860710620880127
    8. 'i' → logprob: -4.985710620880127
    9. '[' → logprob: -5.235710620880127
    10. 'r' → logprob: -5.485710620880127

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.160372793674469
    2. '=' → logprob: -1.9103727340698242
    3. ' ' → logprob: -8.910372734069824
    4. '_' → logprob: -12.035372734069824
    5. ' +=' → logprob: -13.035372734069824
    6. ',' → logprob: -13.410372734069824
    7. 'x' → logprob: -14.035372734069824
    8. ')' → logprob: -14.660372734069824
    9. '_=' → logprob: -14.660372734069824
    10. '  ' → logprob: -15.535372734069824

Token 35: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021593389101326466
    2. 'math' → logprob: -9.375215530395508
    3. ' ' → logprob: -10.000215530395508
    4. '1' → logprob: -10.000215530395508
    5. '[' → logprob: -10.500215530395508
    6. 'p' → logprob: -12.125215530395508
    7. '[]' → logprob: -12.875215530395508
    8. '[p' → logprob: -13.500215530395508
    9. '-' → logprob: -14.000215530395508
    10. ' math' → logprob: -14.250215530395508

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010545044642640278
    2. '1' → logprob: -9.250105857849121
    3. 'p' → logprob: -12.625105857849121
    4. 'math' → logprob: -12.625105857849121
    5. '[' → logprob: -14.250105857849121
    6. '-' → logprob: -14.500105857849121
    7. ' ' → logprob: -15.250105857849121
    8. '100' → logprob: -15.375105857849121
    9. '[]' → logprob: -16.250104904174805
    10. '[p' → logprob: -16.375104904174805

Token 37: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3137269616127014
    2. 'f' → logprob: -2.1887269020080566
    3. 'from' → logprob: -2.4387269020080566
    4. 'import' → logprob: -3.0637269020080566
    5. 'i' → logprob: -4.813726902008057
    6. '```' → logprob: -6.063726902008057
    7. '
' → logprob: -6.063726902008057
    8. '[' → logprob: -6.188726902008057
    9. ' for' → logprob: -6.563726902008057
    10. 'a' → logprob: -7.063726902008057

Token 38: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4041328728199005
    2. 'from' → logprob: -1.2791328430175781
    3. 'import' → logprob: -3.029132843017578
    4. 'while' → logprob: -5.779132843017578
    5. 'f' → logprob: -6.654132843017578
    6. 'i' → logprob: -7.154132843017578
    7. 'factor' → logprob: -9.154132843017578
    8. 'a' → logprob: -9.279132843017578
    9. '```' → logprob: -9.779132843017578
    10. 'per' → logprob: -10.154132843017578

Token 39: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00041125001735053957
    2. ' n' → logprob: -8.250411033630371
    3. '=' → logprob: -9.750411033630371
    4. 'f' → logprob: -9.750411033630371
    5. 'nt' → logprob: -11.375411033630371
    6. '+' → logprob: -11.625411033630371
    7. ' ' → logprob: -11.875411033630371
    8. 'nd' → logprob: -14.000411033630371
    9. 'in' → logprob: -14.125411033630371
    10. ' =' → logprob: -14.250411033630371

Token 40: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029785092920064926
    2. '0' → logprob: -3.52978515625
    3. ' ' → logprob: -10.40478515625
    4. 'math' → logprob: -13.15478515625
    5. '[' → logprob: -13.52978515625
    6. '(' → logprob: -15.15478515625
    7. 'range' → logprob: -15.52978515625
    8. ' math' → logprob: -16.27978515625
    9. '2' → logprob: -16.40478515625
    10. '```' → logprob: -17.15478515625

Token 41: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5760201811790466
    2. '0' → logprob: -0.8260201811790466
    3. 'math' → logprob: -9.951020240783691
    4. '[' → logprob: -11.076020240783691
    5. ' ' → logprob: -11.701020240783691
    6. '(' → logprob: -12.326020240783691
    7. 'range' → logprob: -14.201020240783691
    8. '2' → logprob: -14.201020240783691
    9. '```' → logprob: -14.326020240783691
    10. '[]' → logprob: -14.826020240783691

Token 42: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09976473450660706
    2. 'for' → logprob: -2.599764823913574
    3. ' while' → logprob: -4.599764823913574
    4. '```' → logprob: -5.724764823913574
    5. 'i' → logprob: -5.974764823913574
    6. '<|end|>' → logprob: -7.099764823913574
    7. 'n' → logprob: -7.224764823913574
    8. '+' → logprob: -7.474764823913574
    9. ' for' → logprob: -7.849764823913574
    10. '(' → logprob: -8.349764823913574

Token 44: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.048644594848155975
    2. 'i' → logprob: -3.048644542694092
    3. ' ' → logprob: -10.04864501953125
    4. ' N' → logprob: -11.92364501953125
    5. 'N' → logprob: -13.17364501953125
    6. '	i' → logprob: -13.17364501953125
    7. '(i' → logprob: -13.42364501953125
    8. ')' → logprob: -15.04864501953125
    9. ' True' → logprob: -15.42364501953125
    10. 'I' → logprob: -15.73614501953125

Token 45: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3137395977973938
    2. '<' → logprob: -1.313739538192749
    3. ' <=' → logprob: -8.813739776611328
    4. ' ' → logprob: -8.813739776611328
    5. '<len' → logprob: -9.438739776611328
    6. '<=' → logprob: -10.063739776611328
    7. '<n' → logprob: -10.438739776611328
    8. '<N' → logprob: -11.563739776611328
    9. '[' → logprob: -11.938739776611328
    10. '=' → logprob: -12.688739776611328

Token 46: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04884078726172447
    2. ' N' → logprob: -3.0488407611846924
    3. 'len' → logprob: -8.923840522766113
    4. ' ' → logprob: -9.923840522766113
    5. ' len' → logprob: -10.048840522766113
    6. 'math' → logprob: -11.798840522766113
    7. 'n' → logprob: -12.048840522766113
    8. ' math' → logprob: -12.048840522766113
    9. ' factorial' → logprob: -12.923840522766113
    10. '   ' → logprob: -13.548840522766113

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00495800469070673
    2. ' :' → logprob: -5.379958152770996
    3. ':
' → logprob: -8.254958152770996
    4. ' and' → logprob: -10.754958152770996
    5. '   ' → logprob: -11.254958152770996
    6. ' :
' → logprob: -11.379958152770996
    7. '):' → logprob: -12.004958152770996
    8. ':**' → logprob: -12.129958152770996
    9. ' ' → logprob: -12.254958152770996
    10. '[' → logprob: -12.879958152770996

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7417910695075989
    2. ' if' → logprob: -0.9917910695075989
    3. ' ' → logprob: -2.116791009902954
    4. 'if' → logprob: -4.616791248321533
    5. '    ' → logprob: -4.741791248321533
    6. ' i' → logprob: -5.491791248321533
    7. '```' → logprob: -6.616791248321533
    8. ' p' → logprob: -6.866791248321533
    9. ' 
' → logprob: -6.991791248321533
    10. '    
' → logprob: -7.116791248321533

Token 49: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0899757146835327
    2. ' p' → logprob: -1.4649757146835327
    3. 'p' → logprob: -1.7149757146835327
    4. ' ' → logprob: -2.0899758338928223
    5. ' if' → logprob: -2.7149758338928223
    6. 'if' → logprob: -3.7149758338928223
    7. '    ' → logprob: -4.839975833892822
    8. 'i' → logprob: -5.089975833892822
    9. ' i' → logprob: -5.089975833892822
    10. ' P' → logprob: -5.089975833892822

Token 50: ' =' (ID: 314)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6204255223274231
    2. 'o' → logprob: -2.3704254627227783
    3. 'P' → logprob: -2.4954254627227783
    4. '   ' → logprob: -2.7454254627227783
    5. 'ot' → logprob: -3.2454254627227783
    6. ' ' → logprob: -3.4954254627227783
    7. 'um' → logprob: -3.6204254627227783
    8. '-' → logprob: -3.7454254627227783
    9. 'ext' → logprob: -3.9954254627227783
    10. 'pow' → logprob: -4.745425701141357

Token 51: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.07986164838075638
    2. 'p' → logprob: -3.454861640930176
    3. ' P' → logprob: -4.579861640930176
    4. 'math' → logprob: -4.579861640930176
    5. '1' → logprob: -4.829861640930176
    6. 'abs' → logprob: -5.454861640930176
    7. 'N' → logprob: -5.829861640930176
    8. ' ' → logprob: -5.954861640930176
    9. 'i' → logprob: -6.329861640930176
    10. '10' → logprob: -6.704861640930176

Token 52: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.014246013946831226
    2. '.index' → logprob: -4.264245986938477
    3. '[' → logprob: -10.389245986938477
    4. 'i' → logprob: -11.264245986938477
    5. 'index' → logprob: -11.514245986938477
    6. '.' → logprob: -11.764245986938477
    7. '[I' → logprob: -12.014245986938477
    8. '.count' → logprob: -12.639245986938477
    9. '.i' → logprob: -13.014245986938477
    10. '[N' → logprob: -13.389245986938477

Token 53: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002048789756372571
    2. ' ]' → logprob: -7.377048969268799
    3. ']-' → logprob: -7.627048969268799
    4. ')' → logprob: -7.752048969268799
    5. '])' → logprob: -8.62704849243164
    6. ']
' → logprob: -8.62704849243164
    7. '-' → logprob: -10.00204849243164
    8. ']==' → logprob: -10.37704849243164
    9. ']+' → logprob: -11.37704849243164
    10. '   ' → logprob: -11.50204849243164

Token 54: ' -' (ID: 533)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7465502023696899
    2. '**' → logprob: -1.37155020236969
    3. ' *' → logprob: -2.4965500831604004
    4. '+' → logprob: -2.7465500831604004
    5. '-' → logprob: -4.2465500831604
    6. '  ' → logprob: -4.3715500831604
    7. ' **' → logprob: -4.3715500831604
    8. ' if' → logprob: -4.6215500831604
    9. '==' → logprob: -4.6215500831604
    10. 'if' → logprob: -4.7465500831604

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004151649307459593
    2. 'Q' → logprob: -6.129151821136475
    3. ' ' → logprob: -6.504151821136475
    4. ' Q' → logprob: -8.004151344299316
    5. 'i' → logprob: -9.504151344299316
    6. ' i' → logprob: -10.379151344299316
    7. 'q' → logprob: -11.629151344299316
    8. '   ' → logprob: -12.879151344299316
    9. ' (' → logprob: -13.004151344299316
    10. '(' → logprob: -13.441651344299316

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43284350633621216
    2. 'Q' → logprob: -1.0578434467315674
    3. 'i' → logprob: -5.6828436851501465
    4. ' Q' → logprob: -8.182843208312988
    5. 'q' → logprob: -8.432843208312988
    6. ' ' → logprob: -9.307843208312988
    7. '(' → logprob: -10.557843208312988
    8. '(i' → logprob: -10.557843208312988
    9. ' i' → logprob: -10.807843208312988
    10. '(Q' → logprob: -10.932843208312988

Token 57: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6746495366096497
    2. '   ' → logprob: -0.7996495366096497
    3. 'Q' → logprob: -4.174649715423584
    4. ' i' → logprob: -5.174649715423584
    5. 'n' → logprob: -5.299649715423584
    6. 'P' → logprob: -6.049649715423584
    7. 'q' → logprob: -6.049649715423584
    8. 'for' → logprob: -6.549649715423584
    9. '  ' → logprob: -6.674649715423584
    10. 'while' → logprob: -6.799649715423584

Token 59: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20294077694416046
    2. 'q' → logprob: -2.3279407024383545
    3. 'Q' → logprob: -3.5779407024383545
    4. 'p' → logprob: -3.9529407024383545
    5. 'n' → logprob: -4.202940940856934
    6. '   ' → logprob: -4.327940940856934
    7. 'math' → logprob: -5.452940940856934
    8. 'for' → logprob: -6.952940940856934
    9. 'P' → logprob: -7.077940940856934
    10. ' i' → logprob: -7.202940940856934

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04542776569724083
    2. '=' → logprob: -3.1704277992248535
    3. ' +=' → logprob: -6.6704277992248535
    4. ' ' → logprob: -7.5454277992248535
    5. '   ' → logprob: -7.9204277992248535
    6. '    ' → logprob: -9.670427322387695
    7. ',' → logprob: -10.295427322387695
    8. '  ' → logprob: -10.420427322387695
    9. '+=' → logprob: -10.420427322387695
    10. ' in' → logprob: -11.170427322387695

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21888603270053864
    2. 'i' → logprob: -1.7188860177993774
    3. '1' → logprob: -4.593885898590088
    4. 'n' → logprob: -6.343885898590088
    5. ' i' → logprob: -6.593885898590088
    6. ' ' → logprob: -6.718885898590088
    7. 'P' → logprob: -7.468885898590088
    8. 'N' → logprob: -7.593885898590088
    9. 'Q' → logprob: -7.593885898590088
    10. 'math' → logprob: -7.718885898590088

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5293862223625183
    2. 'i' → logprob: -0.9043862223625183
    3. '1' → logprob: -5.654386043548584
    4. 'n' → logprob: -6.654386043548584
    5. 'P' → logprob: -8.154386520385742
    6. 'N' → logprob: -8.404386520385742
    7. '(i' → logprob: -8.404386520385742
    8. 'p' → logprob: -8.529386520385742
    9. ' i' → logprob: -8.904386520385742
    10. 'j' → logprob: -9.404386520385742

Token 63: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4279325008392334
    2. '<|end|>' → logprob: -1.1779325008392334
    3. ' while' → logprob: -3.6779325008392334
    4. ' ' → logprob: -5.1779327392578125
    5. '<|end|>' → logprob: -5.5529327392578125
    6. '
' → logprob: -6.5529327392578125
    7. 'while' → logprob: -6.9279327392578125
    8. '	while' → logprob: -6.9279327392578125
    9. 'j' → logprob: -7.5529327392578125
    10. '    ' → logprob: -7.6779327392578125

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2593734860420227
    2. ' while' → logprob: -2.384373426437378
    3. 'while' → logprob: -2.884373426437378
    4. 'j' → logprob: -3.259373426437378
    5. '<|end|>' → logprob: -3.634373426437378
    6. ' ' → logprob: -5.134373664855957
    7. '	while' → logprob: -5.384373664855957
    8. ' j' → logprob: -6.634373664855957
    9. '    ' → logprob: -7.134373664855957
    10. '  ' → logprob: -7.384373664855957

Token 65: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4140092134475708
    2. 'while' (adapté à ' while') → logprob: -1.9140092134475708
    3. 'j' → logprob: -2.0390090942382812
    4. ' j' → logprob: -2.9140090942382812
    5. '   ' → logprob: -5.789009094238281
    6. ' ' → logprob: -6.789009094238281
    7. '    ' → logprob: -7.289009094238281
    8. '	while' → logprob: -7.789009094238281
    9. ' if' → logprob: -8.414009094238281
    10. ';j' → logprob: -8.539009094238281

Token 66: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003257450181990862
    2. 'N' → logprob: -6.7532572746276855
    3. 'n' → logprob: -6.7532572746276855
    4. ' j' → logprob: -7.2532572746276855
    5. 'math' → logprob: -9.878257751464844
    6. '   ' → logprob: -10.378257751464844
    7. 'P' → logprob: -10.378257751464844
    8. 'Q' → logprob: -10.878257751464844
    9. ' ' → logprob: -11.253257751464844
    10. 'len' → logprob: -11.378257751464844

Token 67: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16532336175441742
    2. '<' → logprob: -2.290323257446289
    3. ' <=' → logprob: -3.540323257446289
    4. '<=' → logprob: -4.040323257446289
    5. '<N' → logprob: -6.165323257446289
    6. '<n' → logprob: -6.290323257446289
    7. '<len' → logprob: -8.415323257446289
    8. ' ' → logprob: -9.290323257446289
    9. '==' → logprob: -10.665323257446289
    10. '<size' → logprob: -10.665323257446289

Token 68: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4321458637714386
    2. 'N' → logprob: -1.6821458339691162
    3. 'n' → logprob: -1.8071458339691162
    4. ' i' → logprob: -8.557146072387695
    5. 'j' → logprob: -9.182146072387695
    6. 'math' → logprob: -9.307146072387695
    7. ' n' → logprob: -9.682146072387695
    8. ' N' → logprob: -9.682146072387695
    9. 'len' → logprob: -9.807146072387695
    10. '   ' → logprob: -10.057146072387695

Token 69: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8039898872375488
    2. '+' → logprob: -1.1789898872375488
    3. 'and' → logprob: -1.9289898872375488
    4. ':' → logprob: -2.678989887237549
    5. ':
' → logprob: -4.178989887237549
    6. '   ' → logprob: -4.553989887237549
    7. ' +' → logprob: -6.303989887237549
    8. ' :' → logprob: -7.428989887237549
    9. ' ' → logprob: -7.803989887237549
    10. '**' → logprob: -7.928989887237549

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06162521615624428
    2. '   ' → logprob: -3.6866252422332764
    3. ' and' → logprob: -3.8116252422332764
    4. '<|end|>' → logprob: -5.436625003814697
    5. '+' → logprob: -6.686625003814697
    6. ' ' → logprob: -6.811625003814697
    7. ' if' → logprob: -6.936625003814697
    8. ':
' → logprob: -7.186625003814697
    9. ':' → logprob: -7.686625003814697
    10. '    ' → logprob: -7.811625003814697

Token 71: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.43309593200683594
    2. ' if' → logprob: -1.058095932006836
    3. '       ' → logprob: -6.558095932006836
    4. ' ' → logprob: -7.183095932006836
    5. '<|end|>' → logprob: -7.183095932006836
    6. '   ' → logprob: -7.308095932006836
    7. ' and' → logprob: -7.683095932006836
    8. '    ' → logprob: -10.058095932006836
    9. 'and' → logprob: -10.433095932006836
    10. 'j' → logprob: -10.558095932006836

Token 72: ' P' (ID: 398)
  Prédit: ' P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.11379719525575638
    2. 'P' → logprob: -2.238797187805176
    3. '   ' → logprob: -8.238797187805176
    4. ' ' → logprob: -8.613797187805176
    5. '	P' → logprob: -8.738797187805176
    6. ' Q' → logprob: -9.113797187805176
    7. ' p' → logprob: -9.238797187805176
    8. 'p' → logprob: -9.988797187805176
    9. '(P' → logprob: -10.113797187805176
    10. 'Q' → logprob: -10.738797187805176

Token 73: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00015908108616713434
    2. '[i' → logprob: -9.50015926361084
    3. '[n' → logprob: -9.75015926361084
    4. '[' → logprob: -11.62515926361084
    5. 'j' → logprob: -11.62515926361084
    6. '[P' → logprob: -12.75015926361084
    7. '[N' → logprob: -13.50015926361084
    8. '```' → logprob: -14.00015926361084
    9. '   ' → logprob: -14.50015926361084
    10. '[p' → logprob: -14.50015926361084

Token 74: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.15813785791397095
    2. '<' → logprob: -2.158137798309326
    3. ' >' → logprob: -3.658137798309326
    4. ' <' → logprob: -5.408137798309326
    5. ']' → logprob: -8.908138275146484
    6. ' ' → logprob: -8.908138275146484
    7. '<n' → logprob: -9.533138275146484
    8. '">' → logprob: -10.283138275146484
    9. ' n' → logprob: -11.533138275146484
    10. '   ' → logprob: -11.533138275146484

Token 75: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.13141056895256042
    2. ' <' → logprob: -2.131410598754883
    3. '<n' → logprob: -5.631410598754883
    4. '>' → logprob: -7.506410598754883
    5. ' >' → logprob: -8.506410598754883
    6. ' ' → logprob: -9.506410598754883
    7. '<P' → logprob: -10.881410598754883
    8. '<p' → logprob: -11.131410598754883
    9. '<num' → logprob: -12.506410598754883
    10. '<N' → logprob: -12.631410598754883

Token 76: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.059744302183389664
    2. 'n' → logprob: -2.934744358062744
    3. 'p' → logprob: -6.059744358062744
    4. ' P' → logprob: -6.059744358062744
    5. ' n' → logprob: -8.809743881225586
    6. '   ' → logprob: -11.434743881225586
    7. ' ' → logprob: -11.934743881225586
    8. '	P' → logprob: -12.434743881225586
    9. 'N' → logprob: -12.684743881225586
    10. ' p' → logprob: -13.622243881225586

Token 77: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000297685619443655
    2. 'i' → logprob: -8.125297546386719
    3. '[' → logprob: -14.375297546386719
    4. '[j' → logprob: -14.500297546386719
    5. ' i' → logprob: -15.500297546386719
    6. '[n' → logprob: -16.00029754638672
    7. '```' → logprob: -17.00029754638672
    8. ' ' → logprob: -17.12529754638672
    9. '_i' → logprob: -17.25029754638672
    10. '[I' → logprob: -18.00029754638672

Token 78: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14325864613056183
    2. '):
' → logprob: -2.393258571624756
    3. ')' → logprob: -3.643258571624756
    4. ':' → logprob: -4.768258571624756
    5. ' ):' → logprob: -6.143258571624756
    6. ' and' → logprob: -6.393258571624756
    7. ']:' → logprob: -6.893258571624756
    8. ' ):
' → logprob: -7.518258571624756
    9. ''):' → logprob: -8.643259048461914
    10. '>' → logprob: -8.643259048461914

Token 79: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006738462019711733
    2. 'n' → logprob: -5.506738662719727
    3. ' n' → logprob: -7.381738662719727
    4. '       ' → logprob: -7.631738662719727
    5. '               ' → logprob: -8.256738662719727
    6. '0' → logprob: -8.381738662719727
    7. 'j' → logprob: -8.631738662719727
    8. '   ' → logprob: -9.256738662719727
    9. '```' → logprob: -9.256738662719727
    10. '
' → logprob: -9.381738662719727

Token 80: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00413444172590971
    2. ' n' → logprob: -6.129134654998779
    3. '
' → logprob: -6.504134654998779
    4. '           ' → logprob: -8.504134178161621
    5. 'p' → logprob: -9.754134178161621
    6. '   ' → logprob: -10.254134178161621
    7. '               ' → logprob: -10.504134178161621
    8. '	n' → logprob: -10.629134178161621
    9. '       ' → logprob: -10.879134178161621
    10. '1' → logprob: -11.004134178161621

Token 81: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.30930987000465393
    2. '-=' → logprob: -1.4343098402023315
    3. '=' → logprob: -3.684309959411621
    4. ' =' → logprob: -6.559309959411621
    5. '+=' → logprob: -7.934309959411621
    6. ' +=' → logprob: -8.059309959411621
    7. '-' → logprob: -8.184309959411621
    8. '   ' → logprob: -8.309309959411621
    9. ' ' → logprob: -10.559309959411621
    10. ' -' → logprob: -12.309309959411621

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010331686353310943
    2. ' ' → logprob: -6.876033306121826
    3. '   ' → logprob: -15.126032829284668
    4. '0' → logprob: -17.501033782958984
    5. ' ' → logprob: -17.938533782958984
    6. '
' → logprob: -18.188533782958984
    7. '<|end|>' → logprob: -18.188533782958984
    8. '  ' → logprob: -18.313533782958984
    9. '```' → logprob: -18.563533782958984
    10. '+' → logprob: -18.563533782958984

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.625019073486328
    4. '0' → logprob: -18.750019073486328
    5. '
' → logprob: -18.875019073486328
    6. ' ' → logprob: -20.250019073486328
    7. '  ' → logprob: -20.812519073486328
    8. '```' → logprob: -21.062519073486328
    9. '2' → logprob: -21.250019073486328
    10. '`' → logprob: -21.312519073486328

Token 84: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4497102200984955
    2. '
' → logprob: -1.0747102499008179
    3. 'j' → logprob: -4.074710369110107
    4. '        
' → logprob: -6.824710369110107
    5. '   ' → logprob: -7.324710369110107
    6. '	' → logprob: -8.19970989227295
    7. '[j' → logprob: -8.19970989227295
    8. '\n' → logprob: -8.19970989227295
    9. '
' → logprob: -8.44970989227295
    10. '    
' → logprob: -8.82470989227295

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12365937232971191
    2. '
' → logprob: -2.373659372329712
    3. 'j' → logprob: -4.123659133911133
    4. '   ' → logprob: -5.873659133911133
    5. '        
' → logprob: -6.748659133911133
    6. '	' → logprob: -6.873659133911133
    7. '	j' → logprob: -7.873659133911133
    8. '    
' → logprob: -7.998659133911133
    9. '[j' → logprob: -8.623659133911133
    10. '		
' → logprob: -8.748659133911133

Token 86: ' j' (ID: 441)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19812747836112976
    2. 'j' (adapté à ' j') → logprob: -1.8231275081634521
    3. '   ' → logprob: -4.573127269744873
    4. ' j' → logprob: -5.198127269744873
    5. '	j' → logprob: -6.448127269744873
    6. '	' → logprob: -7.948127269744873
    7. ' ' → logprob: -9.198127746582031
    8. '
' → logprob: -9.698127746582031
    9. '           ' → logprob: -10.198127746582031
    10. '	   ' → logprob: -10.198127746582031

Token 87: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.17403793334960938
    2. ' +=' → logprob: -2.4240379333496094
    3. '+' → logprob: -2.6740379333496094
    4. '=' → logprob: -6.174037933349609
    5. ' +' → logprob: -9.92403793334961
    6. '++' → logprob: -10.04903793334961
    7. ' ' → logprob: -10.92403793334961
    8. ' =' → logprob: -13.29903793334961
    9. '+="' → logprob: -14.04903793334961
    10. '+='' → logprob: -14.04903793334961

Token 88: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078639671206474
    2. ' ' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.87907886505127
    4. '	' → logprob: -17.629077911376953
    5. '```' → logprob: -17.629077911376953
    6. ' ' → logprob: -18.754077911376953
    7. '    ' → logprob: -19.129077911376953
    8. '<|end|>' → logprob: -19.254077911376953
    9. '１' → logprob: -19.629077911376953
    10. '  ' → logprob: -19.879077911376953

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '```' → logprob: -16.625024795532227
    4. '<|end|>' → logprob: -18.187524795532227
    5. '   ' → logprob: -18.562524795532227
    6. '１' → logprob: -18.875024795532227
    7. '  ' → logprob: -19.125024795532227
    8. '۱' → logprob: -19.312524795532227
    9. '+' → logprob: -19.562524795532227
    10. '`' → logprob: -19.687524795532227

Token 90: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5422212481498718
    2. '
' → logprob: -0.9172212481498718
    3. 'i' → logprob: -4.5422210693359375
    4. ' i' → logprob: -5.5422210693359375
    5. '    
' → logprob: -6.0422210693359375
    6. '
' → logprob: -7.4172210693359375
    7. '	i' → logprob: -7.4172210693359375
    8. ' 
' → logprob: -8.292221069335938
    9. '```' → logprob: -9.167221069335938
    10. ' ' → logprob: -9.667221069335938

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7346649765968323
    2. 'i' → logprob: -1.3596649169921875
    3. 'p' → logprob: -1.7346649169921875
    4. '
' → logprob: -2.6096649169921875
    5. ' i' → logprob: -5.3596649169921875
    6. ' p' → logprob: -5.6096649169921875
    7. ' ' → logprob: -5.8596649169921875
    8. 'if' → logprob: -7.1096649169921875
    9. '  ' → logprob: -7.8596649169921875
    10. '    
' → logprob: -7.9846649169921875

Token 92: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -9.722539834911004e-05
    2. 'i' → logprob: -10.125097274780273
    3. '   ' → logprob: -10.625097274780273
    4. ' p' → logprob: -10.625097274780273
    5. '
' → logprob: -12.875097274780273
    6. 'if' → logprob: -13.000097274780273
    7. ' ' → logprob: -13.625097274780273
    8. '    
' → logprob: -13.750097274780273
    9. '```' → logprob: -15.125097274780273
    10. '  ' → logprob: -15.375097274780273

Token 93: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008499928750097752
    2. '+=' → logprob: -5.383500099182129
    3. ' =' → logprob: -5.633500099182129
    4. '=' → logprob: -8.383500099182129
    5. ' ' → logprob: -9.758500099182129
    6. ' +' → logprob: -11.758500099182129
    7. '+' → logprob: -13.633500099182129
    8. ' |=' → logprob: -15.383500099182129
    9. ' -=' → logprob: -16.258499145507812
    10. '+=(' → logprob: -16.258499145507812

Token 94: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003261011792346835
    2. ' n' → logprob: -6.378261089324951
    3. 'math' → logprob: -6.503261089324951
    4. ' math' → logprob: -10.003260612487793
    5. '(n' → logprob: -11.753260612487793
    6. '	n' → logprob: -12.878260612487793
    7. 'factor' → logprob: -14.003260612487793
    8. ' ' → logprob: -14.878260612487793
    9. 'int' → logprob: -15.003260612487793
    10. 'fact' → logprob: -15.003260612487793

Token 95: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006528384052217007
    2. '
' → logprob: -5.256528377532959
    3. 'i' → logprob: -7.006528377532959
    4. '    
' → logprob: -8.756528854370117
    5. ' i' → logprob: -9.006528854370117
    6. '\n' → logprob: -10.131528854370117
    7. '[i' → logprob: -11.006528854370117
    8. 'n' → logprob: -11.131528854370117
    9. '```' → logprob: -11.256528854370117
    10. '	i' → logprob: -12.256528854370117

Token 96: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -7.24310302757658e-05
    2. ' math' → logprob: -9.750072479248047
    3. '(math' → logprob: -11.250072479248047
    4. 'int' → logprob: -14.875072479248047
    5. 'factor' → logprob: -15.000072479248047
    6. ' ' → logprob: -16.000072479248047
    7. '   ' → logprob: -16.250072479248047
    8. 'mat' → logprob: -16.375072479248047
    9. 'fact' → logprob: -16.500072479248047
    10. 'import' → logprob: -17.625072479248047

Token 97: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.0002512071805540472
    2. 'factor' → logprob: -8.750250816345215
    3. '.' → logprob: -9.625250816345215
    4. '.com' → logprob: -11.375250816345215
    5. '.prod' → logprob: -12.000250816345215
    6. ' factorial' → logprob: -12.375250816345215
    7. '.math' → logprob: -13.625250816345215
    8. '_factor' → logprob: -14.125250816345215
    9. '.fac' → logprob: -14.500250816345215
    10. '.pow' → logprob: -14.875250816345215

Token 98: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.00046141279744915664
    2. 'ial' → logprob: -8.00046157836914
    3. 'orial' → logprob: -9.75046157836914
    4. 'or' → logprob: -10.50046157836914
    5. 'als' → logprob: -11.62546157836914
    6. 'cial' → logprob: -12.12546157836914
    7. '```' → logprob: -12.37546157836914
    8. 'cal' → logprob: -12.62546157836914
    9. 'tor' → logprob: -13.00046157836914
    10. 'ol' → logprob: -13.00046157836914

Token 99: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0005250345566309988
    2. '(' → logprob: -7.625524997711182
    3. 'N' → logprob: -10.87552547454834
    4. '(n' → logprob: -11.37552547454834
    5. '(i' → logprob: -13.12552547454834
    6. '(len' → logprob: -13.12552547454834
    7. '(
' → logprob: -13.25052547454834
    8. ' (' → logprob: -15.12552547454834
    9. '((' → logprob: -15.25052547454834
    10. '[N' → logprob: -15.37552547454834

Token 100: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4761834144592285
    2. '-' → logprob: -0.9761834144592285
    3. '-i' → logprob: -6.2261834144592285
    4. '   ' → logprob: -9.10118293762207
    5. ' ' → logprob: -11.22618293762207
    6. '    ' → logprob: -14.22618293762207
    7. '  ' → logprob: -14.60118293762207
    8. ')' → logprob: -15.22618293762207
    9. '1' → logprob: -15.22618293762207
    10. '−' → logprob: -15.47618293762207

Token 101: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08156085014343262
    2. '1' → logprob: -3.2065608501434326
    3. ' i' → logprob: -3.3315608501434326
    4. ' ' → logprob: -6.956561088562012
    5. '(' → logprob: -7.706561088562012
    6. '   ' → logprob: -8.081561088562012
    7. '(i' → logprob: -8.456561088562012
    8. ' (' → logprob: -9.081561088562012
    9. '  ' → logprob: -10.331561088562012
    10. '	i' → logprob: -11.206561088562012

Token 102: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01762910932302475
    2. '1' → logprob: -4.267629146575928
    3. ' i' → logprob: -5.767629146575928
    4. '   ' → logprob: -8.76762866973877
    5. '(i' → logprob: -8.89262866973877
    6. ' ' → logprob: -10.64262866973877
    7. ' (' → logprob: -12.01762866973877
    8. '(' → logprob: -12.76762866973877
    9. '[i' → logprob: -13.26762866973877
    10. '  ' → logprob: -13.26762866973877

Token 103: ' +' (ID: 659)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04979985952377319
    2. '-' → logprob: -3.924799919128418
    3. ')' → logprob: -4.424799919128418
    4. ' ' → logprob: -4.799799919128418
    5. ' -' → logprob: -5.174799919128418
    6. '   ' → logprob: -6.549799919128418
    7. '+' → logprob: -7.049799919128418
    8. ')-' → logprob: -7.924799919128418
    9. 'i' → logprob: -9.174799919128418
    10. '  ' → logprob: -9.674799919128418

Token 104: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6312321753939614e-05
    2. ' ' → logprob: -10.250036239624023
    3. '2' → logprob: -14.500036239624023
    4. '   ' → logprob: -15.125036239624023
    5. ')' → logprob: -16.750036239624023
    6. '```' → logprob: -17.000036239624023
    7. '  ' → logprob: -17.250036239624023
    8. '

' → logprob: -18.875036239624023
    9. '１' → logprob: -19.125036239624023
    10. '۱' → logprob: -19.812536239624023

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7133641196996905e-05
    2. ' ' → logprob: -10.75002670288086
    3. '2' → logprob: -12.25002670288086
    4. '   ' → logprob: -14.75002670288086
    5. ')' → logprob: -16.25002670288086
    6. '```' → logprob: -16.43752670288086
    7. '  ' → logprob: -16.50002670288086
    8. '１' → logprob: -17.12502670288086
    9. '۱' → logprob: -17.43752670288086
    10. '

' → logprob: -17.68752670288086

Token 106: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05515182763338089
    2. ')' → logprob: -3.05515193939209
    3. ')))' → logprob: -5.05515193939209
    4. '))
' → logprob: -9.05515193939209
    5. ' ))' → logprob: -10.93015193939209
    6. '   ' → logprob: -11.55515193939209
    7. ')
' → logprob: -11.93015193939209
    8. ' )' → logprob: -12.43015193939209
    9. '))))' → logprob: -12.43015193939209
    10. '))

' → logprob: -13.43015193939209

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1050410196185112
    2. 'i' → logprob: -2.480041027069092
    3. '
' → logprob: -4.480041027069092
    4. ' i' → logprob: -5.480041027069092
    5. '    
' → logprob: -8.230040550231934
    6. '	i' → logprob: -9.480040550231934
    7. '```' → logprob: -9.855040550231934
    8. ' 
' → logprob: -10.980040550231934
    9. '\n' → logprob: -11.605040550231934
    10. '[i' → logprob: -11.605040550231934

Token 108: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.10165941715240479
    2. '   ' → logprob: -2.3516592979431152
    3. ' i' → logprob: -6.601659297943115
    4. '
' → logprob: -9.726659774780273
    5. '    
' → logprob: -11.476659774780273
    6. '	i' → logprob: -11.476659774780273
    7. '```' → logprob: -11.976659774780273
    8. ' ' → logprob: -12.726659774780273
    9. ' 
' → logprob: -12.976659774780273
    10. '  
' → logprob: -14.851659774780273

Token 109: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6944581270217896
    2. '+=' → logprob: -0.9444581270217896
    3. '+' → logprob: -2.1944580078125
    4. '=' → logprob: -8.1944580078125
    5. ' ' → logprob: -10.0694580078125
    6. ' +' → logprob: -10.6944580078125
    7. '+="' → logprob: -13.6944580078125
    8. '+='' → logprob: -13.6944580078125
    9. '++' → logprob: -14.0694580078125
    10. '1' → logprob: -14.5694580078125

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '```' → logprob: -18.750804901123047
    4. '   ' → logprob: -19.000804901123047
    5. '１' → logprob: -19.375804901123047
    6. '  ' → logprob: -19.938304901123047
    7. '2' → logprob: -20.500804901123047
    8. '+' → logprob: -20.875804901123047
    9. '۱' → logprob: -20.938304901123047
    10. ' ' → logprob: -21.125804901123047

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -19.750001907348633
    4. '```' → logprob: -20.000001907348633
    5. '１' → logprob: -20.812501907348633
    6. '  ' → logprob: -20.937501907348633
    7. '
' → logprob: -21.687501907348633
    8. '۱' → logprob: -21.687501907348633
    9. ' ' → logprob: -22.000001907348633
    10. '+' → logprob: -22.250001907348633

Token 112: '

' (ID: 279)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5937612056732178
    2. '
' → logprob: -0.8437612056732178
    3. '

' → logprob: -4.093761444091797
    4. 'j' → logprob: -7.593761444091797
    5. '
' → logprob: -7.843761444091797
    6. '\n' → logprob: -10.343761444091797
    7. '    
' → logprob: -11.093761444091797
    8. '  
' → logprob: -11.468761444091797
    9. '```' → logprob: -11.468761444091797
    10. ' 
' → logprob: -12.218761444091797

Token 113: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006042646709829569
    2. '
' → logprob: -7.500604152679443
    3. 'j' → logprob: -10.125604629516602
    4. '  
' → logprob: -12.750604629516602
    5. '

' → logprob: -12.875604629516602
    6. '
' → logprob: -13.375604629516602
    7. '```' → logprob: -13.375604629516602
    8. 'k' → logprob: -14.125604629516602
    9. '    
' → logprob: -14.125604629516602
    10. ' i' → logprob: -15.000604629516602

Token 114: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4138951301574707
    2. ' =' → logprob: -1.1638951301574707
    3. '+' → logprob: -4.413895130157471
    4. ' ' → logprob: -4.788895130157471
    5. ' +=' → logprob: -5.663895130157471
    6. '<|end|>' → logprob: -6.288895130157471
    7. '+=' → logprob: -7.913895130157471
    8. ' +' → logprob: -8.163894653320312
    9. 's' → logprob: -9.788894653320312
    10. ')' → logprob: -10.413894653320312

Token 115: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03804171830415726
    2. ' ' → logprob: -3.288041830062866
    3. ' ' → logprob: -16.350542068481445
    4. '   ' → logprob: -16.413042068481445
    5. '1' → logprob: -16.975542068481445
    6. '=' → logprob: -18.288042068481445
    7. '۰' → logprob: -18.538042068481445
    8. '  ' → logprob: -18.538042068481445
    9. '```' → logprob: -18.600542068481445
    10. 'N' → logprob: -18.788042068481445

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '1' → logprob: -15.87508487701416
    4. 'N' → logprob: -17.437585830688477
    5. 'int' → logprob: -18.625085830688477
    6. '   ' → logprob: -18.750085830688477
    7. '۰' → logprob: -19.062585830688477
    8. '```' → logprob: -19.187585830688477
    9. 'Q' → logprob: -19.625085830688477
    10. '  ' → logprob: -19.750085830688477

Token 117: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.000205566844670102
    2. ' while' → logprob: -8.500205993652344
    3. '
' → logprob: -13.125205993652344
    4. 'While' → logprob: -17.000205993652344
    5. 'w' → logprob: -17.250205993652344
    6. '```' → logprob: -18.625205993652344
    7. '	while' → logprob: -19.625205993652344
    8. 'wh' → logprob: -19.875205993652344
    9. ' 
' → logprob: -20.000205993652344
    10. 'b' → logprob: -20.375205993652344

Token 118: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: 0.0
    2. ' while' → logprob: -18.0
    3. '```' → logprob: -20.0
    4. '
' → logprob: -21.375
    5. 'While' → logprob: -22.0
    6. '	while' → logprob: -22.25
    7. 'w' → logprob: -24.25
    8. 'with' → logprob: -24.5
    9. '``' → logprob: -25.0
    10. 'wh' → logprob: -25.375

Token 119: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1269291490316391
    2. 'i' → logprob: -2.1269290447235107
    3. '	i' → logprob: -15.00192928314209
    4. '   ' → logprob: -15.00192928314209
    5. ' ' → logprob: -15.62692928314209
    6. 'I' → logprob: -16.876928329467773
    7. '(i' → logprob: -17.001928329467773
    8. '<' → logprob: -17.251928329467773
    9. '<i' → logprob: -17.376928329467773
    10. '  ' → logprob: -17.626928329467773

Token 120: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1270170360803604
    2. '<' → logprob: -2.127017021179199
    3. '<N' → logprob: -9.3770170211792
    4. ' ' → logprob: -12.5020170211792
    5. '<Q' → logprob: -15.3770170211792
    6. '<n' → logprob: -15.6270170211792
    7. 'N' → logprob: -17.002017974853516
    8. '<len' → logprob: -17.502017974853516
    9. '<|end|>' → logprob: -17.752017974853516
    10. ' ' → logprob: -17.877017974853516

Token 121: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009114635176956654
    2. ' N' → logprob: -7.000911235809326
    3. ' ' → logprob: -19.125911712646484
    4. '   ' → logprob: -19.250911712646484
    5. '	N' → logprob: -19.375911712646484
    6. ' ' → logprob: -21.375911712646484
    7. 'n' → logprob: -21.375911712646484
    8. '  ' → logprob: -21.500911712646484
    9. '
' → logprob: -21.500911712646484
    10. '<|end|>' → logprob: -21.500911712646484

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28129667043685913
    2. ':
' → logprob: -1.406296730041504
    3. '   ' → logprob: -9.406296730041504
    4. 'n' → logprob: -10.656296730041504
    5. ' :' → logprob: -11.406296730041504
    6. ':
' → logprob: -11.531296730041504
    7. ':

' → logprob: -11.656296730041504
    8. ' :
' → logprob: -12.156296730041504
    9. '=' → logprob: -13.156296730041504
    10. ':n' → logprob: -13.781296730041504

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001237252727150917
    2. 'n' → logprob: -6.876237392425537
    3. ' n' → logprob: -8.501236915588379
    4. '	n' → logprob: -14.626236915588379
    5. '```' → logprob: -15.376236915588379
    6. '    
' → logprob: -15.626236915588379
    7. ' ' → logprob: -16.126237869262695
    8. '   ' → logprob: -16.501237869262695
    9. '  ' → logprob: -16.876237869262695
    10. '       ' → logprob: -17.251237869262695

Token 124: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.16792885959148407
    2. ' n' → logprob: -1.9179288148880005
    3. '   ' → logprob: -4.917928695678711
    4. 'q' → logprob: -8.542928695678711
    5. ' q' → logprob: -9.292928695678711
    6. ' ' → logprob: -9.917928695678711
    7. '	n' → logprob: -11.542928695678711
    8. '  ' → logprob: -12.417928695678711
    9. 'Q' → logprob: -13.167928695678711
    10. ' Q' → logprob: -13.292928695678711

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0181703120470047
    2. '=' → logprob: -4.018170356750488
    3. ' ' → logprob: -10.893170356750488
    4. '   ' → logprob: -14.393170356750488
    5. ' ' → logprob: -14.518170356750488
    6. 'n' → logprob: -16.143169403076172
    7. '  ' → logprob: -16.518169403076172
    8. 'q' → logprob: -16.768169403076172
    9. 's' → logprob: -16.768169403076172
    10. '	' → logprob: -16.768169403076172

Token 126: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.3132742643356323
    2. ' Q' → logprob: -1.3132742643356323
    3. '   ' → logprob: -11.938274383544922
    4. '	Q' → logprob: -12.313274383544922
    5. ' ' → logprob: -13.813274383544922
    6. '(Q' → logprob: -15.938274383544922
    7. '  ' → logprob: -16.438274383544922
    8. '=' → logprob: -17.250774383544922
    9. '<Q' → logprob: -17.313274383544922
    10. ' =' → logprob: -17.313274383544922

Token 127: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.0
    3. ' [' → logprob: -16.375
    4. 'i' → logprob: -17.5
    5. '   ' → logprob: -17.75
    6. '[
' → logprob: -19.0
    7. '[I' → logprob: -19.0
    8. '
' → logprob: -19.75
    9. '(i' → logprob: -20.5
    10. ' i' → logprob: -20.625

Token 128: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.19516989588737488
    2. ')' → logprob: -2.1951699256896973
    3. '-' → logprob: -3.0701699256896973
    4. '   ' → logprob: -4.070169925689697
    5. ' ' → logprob: -6.320169925689697
    6. ']' → logprob: -7.945169925689697
    7. ' )' → logprob: -8.820169448852539
    8. '  ' → logprob: -10.195169448852539
    9. '    ' → logprob: -10.320169448852539
    10. ')-' → logprob: -10.320169448852539

Token 129: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14281786978244781
    2. '-' → logprob: -2.017817974090576
    3. ' ' → logprob: -9.017817497253418
    4. '   ' → logprob: -11.142817497253418
    5. ' ' → logprob: -12.142817497253418
    6. '  ' → logprob: -14.767817497253418
    7. 'n' → logprob: -15.017817497253418
    8. ' -=' → logprob: -16.017818450927734
    9. '	' → logprob: -16.142818450927734
    10. '```' → logprob: -16.267818450927734

Token 130: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38687458634376526
    2. ' ' → logprob: -1.1368745565414429
    3. '<|end|>' → logprob: -13.886874198913574
    4. ' ' → logprob: -14.011874198913574
    5. '```' → logprob: -14.011874198913574
    6. '   ' → logprob: -14.761874198913574
    7. '  ' → logprob: -16.51187515258789
    8. '	' → logprob: -16.69937515258789
    9. '`' → logprob: -16.69937515258789
    10. '
' → logprob: -17.07437515258789

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012439649435691535
    2. ' ' → logprob: -9.000123977661133
    3. '<|end|>' → logprob: -14.375123977661133
    4. '```' → logprob: -15.250123977661133
    5. '   ' → logprob: -16.500123977661133
    6. '１' → logprob: -19.187623977661133
    7. '`' → logprob: -19.437623977661133
    8. '<|end|>' → logprob: -19.625123977661133
    9. '-' → logprob: -19.750123977661133
    10. '  ' → logprob: -19.812623977661133

Token 132: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001009707571938634
    2. 'j' → logprob: -7.751009941101074
    3. '
' → logprob: -8.501009941101074
    4. '	j' → logprob: -8.751009941101074
    5. '<|end|>' → logprob: -8.876009941101074
    6. '    
' → logprob: -10.876009941101074
    7. '```' → logprob: -10.876009941101074
    8. ' j' → logprob: -11.001009941101074
    9. '<|end|>' → logprob: -12.376009941101074
    10. '       ' → logprob: -12.876009941101074

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00765975471585989
    2. 'j' → logprob: -5.257659912109375
    3. '	j' → logprob: -6.882659912109375
    4. ' j' → logprob: -7.257659912109375
    5. '
' → logprob: -7.382659912109375
    6. '    
' → logprob: -10.257659912109375
    7. ' ' → logprob: -11.382659912109375
    8. '```' → logprob: -12.132659912109375
    9. '	
' → logprob: -12.632659912109375
    10. '' → logprob: -13.132659912109375

Token 134: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.15326572954654694
    2. '   ' → logprob: -2.1532657146453857
    3. ' j' → logprob: -3.6532657146453857
    4. ' ' → logprob: -9.653265953063965
    5. '```' → logprob: -11.528265953063965
    6. '	j' → logprob: -11.778265953063965
    7. '  ' → logprob: -12.528265953063965
    8. '0' → logprob: -14.403265953063965
    9. '    ' → logprob: -14.903265953063965
    10. '       ' → logprob: -15.153265953063965

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07901900261640549
    2. '=' → logprob: -2.579019069671631
    3. ' ' → logprob: -9.704018592834473
    4. '   ' → logprob: -9.829018592834473
    5. '0' → logprob: -12.454018592834473
    6. '	' → logprob: -12.579018592834473
    7. '  ' → logprob: -12.954018592834473
    8. ' <' → logprob: -13.329018592834473
    9. '<|end|>' → logprob: -14.329018592834473
    10. ' ' → logprob: -14.454018592834473

Token 136: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.042999427765607834
    2. ' ' → logprob: -3.167999505996704
    3. '   ' → logprob: -15.417999267578125
    4. 'i' → logprob: -17.042999267578125
    5. ' i' → logprob: -17.542999267578125
    6. '  ' → logprob: -18.042999267578125
    7. ' ' → logprob: -18.605499267578125
    8. '1' → logprob: -18.667999267578125
    9. '۰' → logprob: -18.730499267578125
    10. '=' → logprob: -18.980499267578125

Token 137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006074831471778452
    2. ' ' → logprob: -7.500607490539551
    3. 'i' → logprob: -9.87560749053955
    4. ' i' → logprob: -12.75060749053955
    5. '<|end|>' → logprob: -16.875606536865234
    6. '   ' → logprob: -17.000606536865234
    7. '1' → logprob: -17.250606536865234
    8. 'int' → logprob: -17.500606536865234
    9. '  ' → logprob: -17.750606536865234
    10. '(i' → logprob: -19.000606536865234

Token 138: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054618872702121735
    2. ' while' → logprob: -3.0546188354492188
    3. 'while' → logprob: -5.679618835449219
    4. '	while' → logprob: -6.554618835449219
    5. '<|end|>' → logprob: -6.804618835449219
    6. ' ' → logprob: -10.429618835449219
    7. '  ' → logprob: -11.179618835449219
    8. '<|end|>' → logprob: -12.054618835449219
    9. '    ' → logprob: -12.179618835449219
    10. 'While' → logprob: -12.679618835449219

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07510431110858917
    2. ' while' → logprob: -2.700104236602783
    3. 'while' → logprob: -5.700104236602783
    4. '	while' → logprob: -6.575104236602783
    5. '<|end|>' → logprob: -8.200104713439941
    6. ' ' → logprob: -9.825104713439941
    7. '  ' → logprob: -10.200104713439941
    8. '
' → logprob: -11.325104713439941
    9. '    ' → logprob: -11.450104713439941
    10. '       ' → logprob: -11.950104713439941

Token 140: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5760214924812317
    2. 'while' (adapté à ' while') → logprob: -0.8260214924812317
    3. '	while' → logprob: -9.951021194458008
    4. '   ' → logprob: -10.326021194458008
    5. ' ' → logprob: -14.326021194458008
    6. ' <' → logprob: -15.451021194458008
    7. 'While' → logprob: -15.576021194458008
    8. '  ' → logprob: -15.701021194458008
    9. ' 
' → logprob: -16.201021194458008
    10. ' ' → logprob: -16.701021194458008

Token 141: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.3132622241973877
    2. 'j' → logprob: -1.3132622241973877
    3. '	j' → logprob: -15.438261985778809
    4. '$j' → logprob: -15.563261985778809
    5. ' ' → logprob: -16.313262939453125
    6. '   ' → logprob: -17.063262939453125
    7. 'i' → logprob: -17.313262939453125
    8. '    ' → logprob: -17.563262939453125
    9. ' ' → logprob: -17.688262939453125
    10. ' i' → logprob: -18.313262939453125

Token 142: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.011079886928200722
    2. '<' → logprob: -4.511079788208008
    3. '<i' → logprob: -10.386079788208008
    4. ' ' → logprob: -14.011079788208008
    5. '<n' → logprob: -15.761079788208008
    6. '<u' → logprob: -17.261079788208008
    7. '<|end|>' → logprob: -17.386079788208008
    8. '<p' → logprob: -17.636079788208008
    9. '<len' → logprob: -17.886079788208008
    10. '   ' → logprob: -17.886079788208008

Token 143: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20141500234603882
    2. ' i' → logprob: -1.7014150619506836
    3. ' ' → logprob: -14.076415061950684
    4. '   ' → logprob: -14.576415061950684
    5. '	i' → logprob: -15.201415061950684
    6. '  ' → logprob: -17.326414108276367
    7. '<|end|>' → logprob: -17.326414108276367
    8. '(i' → logprob: -17.576414108276367
    9. '*i' → logprob: -17.576414108276367
    10. '[i' → logprob: -17.826414108276367

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3143850266933441
    2. ':
' → logprob: -1.3143850564956665
    3. '       ' → logprob: -7.314384937286377
    4. '   ' → logprob: -7.814384937286377
    5. ':

' → logprob: -10.689385414123535
    6. '{
' → logprob: -11.564385414123535
    7. '{' → logprob: -12.564385414123535
    8. '):
' → logprob: -12.689385414123535
    9. '<|end|>' → logprob: -13.064385414123535
    10. ':
' → logprob: -13.439385414123535

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13282012939453125
    2. ' if' → logprob: -2.3828201293945312
    3. 'if' → logprob: -4.132820129394531
    4. '   ' → logprob: -4.132820129394531
    5. ' ' → logprob: -12.507820129394531
    6. '    ' → logprob: -12.882820129394531
    7. '```' → logprob: -13.632820129394531
    8. '           ' → logprob: -13.757820129394531
    9. '     ' → logprob: -13.757820129394531
    10. '	if' → logprob: -14.132820129394531

Token 146: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16479486227035522
    2. ' if' → logprob: -1.914794921875
    3. '       ' → logprob: -5.414794921875
    4. '   ' → logprob: -9.164794921875
    5. '           ' → logprob: -12.914794921875
    6. ' ' → logprob: -13.914794921875
    7. 'If' → logprob: -14.914794921875
    8. '	if' → logprob: -14.914794921875
    9. '```' → logprob: -14.914794921875
    10. '
' → logprob: -15.039794921875

Token 147: ' Q' (ID: 1486)
  Prédit: ' Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Q' → logprob: -0.16023103892803192
    2. 'Q' → logprob: -1.9102309942245483
    3. '	Q' → logprob: -12.03523063659668
    4. '(Q' → logprob: -15.28523063659668
    5. ' ' → logprob: -15.41023063659668
    6. '<Q' → logprob: -15.78523063659668
    7. '   ' → logprob: -15.91023063659668
    8. ',Q' → logprob: -16.91023063659668
    9. ' ' → logprob: -17.28523063659668
    10. '<|end|>' → logprob: -17.97273063659668

Token 148: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.8624639324116288e-06
    2. 'j' → logprob: -13.625001907348633
    3. '[' → logprob: -14.375001907348633
    4. '[
' → logprob: -17.625001907348633
    5. ' [' → logprob: -18.625001907348633
    6. '[i' → logprob: -18.875001907348633
    7. '	j' → logprob: -19.125001907348633
    8. '_j' → logprob: -19.500001907348633
    9. '[js' → logprob: -19.750001907348633
    10. '```' → logprob: -19.750001907348633

Token 149: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.004736633971333504
    2. '<' → logprob: -5.379736423492432
    3. '<Q' → logprob: -9.75473690032959
    4. ' ' → logprob: -10.62973690032959
    5. '[' → logprob: -11.62973690032959
    6. ')' → logprob: -11.75473690032959
    7. '<|end|>' → logprob: -11.87973690032959
    8. ']' → logprob: -12.87973690032959
    9. ' Q' → logprob: -13.00473690032959
    10. '   ' → logprob: -13.25473690032959

Token 150: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14484012126922607
    2. '<' → logprob: -2.0198402404785156
    3. '<Q' → logprob: -6.144840240478516
    4. '<P' → logprob: -12.019840240478516
    5. ' ' → logprob: -12.644840240478516
    6. ' Q' → logprob: -13.144840240478516
    7. '<int' → logprob: -13.769840240478516
    8. 'Q' → logprob: -13.894840240478516
    9. '<|end|>' → logprob: -14.019840240478516
    10. '[' → logprob: -14.144840240478516

Token 151: ' Q' (ID: 1486)
  Prédit: ' Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Q' → logprob: -0.38687583804130554
    2. 'Q' → logprob: -1.136875867843628
    3. '	Q' → logprob: -12.761876106262207
    4. ' ' → logprob: -13.886876106262207
    5. ' ' → logprob: -14.636876106262207
    6. '[' → logprob: -15.886876106262207
    7. '   ' → logprob: -16.13687515258789
    8. '<Q' → logprob: -16.38687515258789
    9. '_Q' → logprob: -17.01187515258789
    10. '(Q' → logprob: -17.38687515258789

Token 152: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5451681974809617e-05
    2. '[' → logprob: -11.500015258789062
    3. 'i' → logprob: -12.750015258789062
    4. '[
' → logprob: -13.750015258789062
    5. '[j' → logprob: -14.875015258789062
    6. ' [' → logprob: -14.875015258789062
    7. '[I' → logprob: -15.875015258789062
    8. '   ' → logprob: -16.000015258789062
    9. '(i' → logprob: -16.125015258789062
    10. '```' → logprob: -16.250015258789062

Token 153: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0030712373554706573
    2. ':
' → logprob: -6.753071308135986
    3. ']:' → logprob: -6.753071308135986
    4. '       ' → logprob: -7.503071308135986
    5. '"]:
' → logprob: -9.753070831298828
    6. '):
' → logprob: -10.253070831298828
    7. ':' → logprob: -10.378070831298828
    8. '():
' → logprob: -11.503070831298828
    9. ']:

' → logprob: -11.503070831298828
    10. '']:
' → logprob: -11.628070831298828

Token 154: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021297212690114975
    2. 'n' → logprob: -4.021296977996826
    3. ' n' → logprob: -5.771296977996826
    4. '       ' → logprob: -11.146297454833984
    5. '          ' → logprob: -12.396297454833984
    6. ' ' → logprob: -13.146297454833984
    7. '
' → logprob: -13.521297454833984
    8. '		' → logprob: -14.021297454833984
    9. '               ' → logprob: -14.146297454833984
    10. '         ' → logprob: -14.396297454833984

Token 155: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.008619066327810287
    2. 'n' (adapté à ' n') → logprob: -4.7586188316345215
    3. '   ' → logprob: -13.38361930847168
    4. '       ' → logprob: -14.25861930847168
    5. ' ' → logprob: -14.25861930847168
    6. '           ' → logprob: -14.50861930847168
    7. '	n' → logprob: -14.63361930847168
    8. '
' → logprob: -14.88361930847168
    9. ' ' → logprob: -15.50861930847168
    10. '    ' → logprob: -15.75861930847168

Token 156: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.016471367329359055
    2. '-=' → logprob: -4.2664713859558105
    3. '           ' → logprob: -6.1414713859558105
    4. '-' → logprob: -9.141470909118652
    5. '   ' → logprob: -10.391470909118652
    6. '               ' → logprob: -12.266470909118652
    7. '       ' → logprob: -12.391470909118652
    8. '          ' → logprob: -12.641470909118652
    9. ' ' → logprob: -13.766470909118652
    10. '  ' → logprob: -14.266470909118652

Token 157: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5231277942657471
    2. ' ' → logprob: -0.8981277942657471
    3. '   ' → logprob: -12.898127555847168
    4. ' ' → logprob: -14.148127555847168
    5. '```' → logprob: -14.898127555847168
    6. '	' → logprob: -15.023127555847168
    7. '<|end|>' → logprob: -16.273128509521484
    8. '
' → logprob: -16.523128509521484
    9. '  ' → logprob: -16.898128509521484
    10. '' → logprob: -16.960628509521484

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -16.62523078918457
    4. '```' → logprob: -17.62523078918457
    5. '<|end|>' → logprob: -18.37523078918457
    6. '
' → logprob: -19.12523078918457
    7. '' → logprob: -19.31273078918457
    8. ' ' → logprob: -19.75023078918457
    9. '	' → logprob: -19.87523078918457
    10. '１' → logprob: -20.00023078918457

Token 159: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002380046295002103
    2. 'j' → logprob: -6.502379894256592
    3. ' j' → logprob: -7.502379894256592
    4. '   ' → logprob: -8.37738037109375
    5. '	' → logprob: -9.50238037109375
    6. '	j' → logprob: -12.37738037109375
    7. ' ' → logprob: -12.50238037109375
    8. '           ' → logprob: -12.87738037109375
    9. ' ' → logprob: -13.25238037109375
    10. '
' → logprob: -13.50238037109375

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002556995954364538
    2. 'j' → logprob: -6.002556800842285
    3. '   ' → logprob: -10.127556800842285
    4. ' j' → logprob: -10.502556800842285
    5. '           ' → logprob: -12.002556800842285
    6. '	j' → logprob: -12.627556800842285
    7. '	' → logprob: -12.877556800842285
    8. '      ' → logprob: -15.002556800842285
    9. '```' → logprob: -15.002556800842285
    10. '     ' → logprob: -15.377556800842285

Token 161: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.2804529368877411
    2. ' j' → logprob: -1.7804529666900635
    3. '       ' → logprob: -2.7804529666900635
    4. '   ' → logprob: -4.280452728271484
    5. '	j' → logprob: -9.530452728271484
    6. '    ' → logprob: -10.655452728271484
    7. ' ' → logprob: -11.280452728271484
    8. '           ' → logprob: -11.530452728271484
    9. '     ' → logprob: -11.655452728271484
    10. '  ' → logprob: -11.655452728271484

Token 162: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.05508708208799362
    2. '+=' → logprob: -2.930087089538574
    3. '   ' → logprob: -9.055087089538574
    4. '    ' → logprob: -10.430087089538574
    5. ' ' → logprob: -10.805087089538574
    6. ' +' → logprob: -11.180087089538574
    7. '+' → logprob: -11.430087089538574
    8. '=' → logprob: -11.805087089538574
    9. ']+=' → logprob: -13.180087089538574
    10. '	' → logprob: -13.680087089538574

Token 163: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010336418636143208
    2. ' ' → logprob: -6.876033782958984
    3. '   ' → logprob: -14.376033782958984
    4. '```' → logprob: -15.751033782958984
    5. '<|end|>' → logprob: -17.501033782958984
    6. '       ' → logprob: -17.751033782958984
    7. '	' → logprob: -18.751033782958984
    8. '           ' → logprob: -19.063533782958984
    9. '<|end|>' → logprob: -19.313533782958984
    10. ' ' → logprob: -19.376033782958984

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.625015258789062
    4. '```' → logprob: -17.250015258789062
    5. '１' → logprob: -19.312515258789062
    6. '	' → logprob: -19.312515258789062
    7. '       ' → logprob: -19.562515258789062
    8. '۱' → logprob: -19.750015258789062
    9. '' → logprob: -19.937515258789062
    10. '<|end|>' → logprob: -19.937515258789062

Token 165: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0042414008639752865
    2. ' q' → logprob: -6.004241466522217
    3. 'q' → logprob: -6.379241466522217
    4. ' ' → logprob: -10.254240989685059
    5. '
' → logprob: -10.754240989685059
    6. '	q' → logprob: -11.754240989685059
    7. '  ' → logprob: -13.254240989685059
    8. '    
' → logprob: -14.129240989685059
    9. '       ' → logprob: -15.754240989685059
    10. ',q' → logprob: -16.004241943359375

Token 166: '   ' (ID: 271)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.21382418274879456
    2. ' q' → logprob: -1.9638241529464722
    3. '   ' → logprob: -2.9638242721557617
    4. ' ' → logprob: -7.713824272155762
    5. '	q' → logprob: -9.588824272155762
    6. '  ' → logprob: -10.713824272155762
    7. '
' → logprob: -10.713824272155762
    8. 'i' → logprob: -13.088824272155762
    9. '       ' → logprob: -13.963824272155762
    10. '    ' → logprob: -13.963824272155762

Token 167: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.0015139080351218581
    2. ' q' → logprob: -6.501513957977295
    3. '   ' → logprob: -11.626513481140137
    4. '
' → logprob: -13.126513481140137
    5. '	q' → logprob: -14.751513481140137
    6. ' ' → logprob: -16.626514434814453
    7. '  ' → logprob: -17.501514434814453
    8. '    
' → logprob: -18.126514434814453
    9. '*q' → logprob: -18.251514434814453
    10. ' 
' → logprob: -18.501514434814453

Token 168: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.014188424684107304
    2. '+=' → logprob: -4.264188289642334
    3. '+' → logprob: -11.264188766479492
    4. ' +' → logprob: -11.764188766479492
    5. '=' → logprob: -13.514188766479492
    6. ' ' → logprob: -13.764188766479492
    7. '   ' → logprob: -14.389188766479492
    8. '+='' → logprob: -14.889188766479492
    9. ']+=' → logprob: -15.014188766479492
    10. '+="' → logprob: -15.264188766479492

Token 169: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31326824426651
    2. 'n' → logprob: -1.3132681846618652
    3. '   ' → logprob: -12.063268661499023
    4. '	n' → logprob: -14.313268661499023
    5. ' ' → logprob: -16.063268661499023
    6. ' ' → logprob: -17.813268661499023
    7. '    ' → logprob: -17.813268661499023
    8. '  ' → logprob: -17.813268661499023
    9. '```' → logprob: -18.313268661499023
    10. '(n' → logprob: -18.438268661499023

Token 170: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08894676715135574
    2. '*' → logprob: -2.46394681930542
    3. ' ' → logprob: -12.713946342468262
    4. ' ' → logprob: -13.838946342468262
    5. '   ' → logprob: -13.963946342468262
    6. '**' → logprob: -14.088946342468262
    7. '`' → logprob: -14.338946342468262
    8. '```' → logprob: -14.338946342468262
    9. ' `' → logprob: -16.088947296142578
    10. ' **' → logprob: -16.088947296142578

Token 171: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.12692883610725403
    2. 'math' → logprob: -2.1269288063049316
    3. '(math' → logprob: -14.50192928314209
    4. '.math' → logprob: -16.251928329467773
    5. 'Math' → logprob: -17.376928329467773
    6. ' maths' → logprob: -17.876928329467773
    7. '/math' → logprob: -17.876928329467773
    8. 'm' → logprob: -18.001928329467773
    9. '```' → logprob: -18.251928329467773
    10. '_math' → logprob: -18.251928329467773

Token 172: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -3.47626737493556e-05
    2. '.' → logprob: -10.50003433227539
    3. 'factor' → logprob: -12.75003433227539
    4. ' .' → logprob: -13.62503433227539
    5. '.fac' → logprob: -13.75003433227539
    6. ' factorial' → logprob: -14.25003433227539
    7. '.floor' → logprob: -14.75003433227539
    8. '.f' → logprob: -15.62503433227539
    9. '.fact' → logprob: -15.75003433227539
    10. '.math' → logprob: -15.87503433227539

Token 173: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.034677475690841675
    2. 'cial' → logprob: -4.284677505493164
    3. 'o' → logprob: -4.784677505493164
    4. '```' → logprob: -6.034677505493164
    5. 'act' → logprob: -6.409677505493164
    6. 'c' → logprob: -6.534677505493164
    7. 'actor' → logprob: -6.659677505493164
    8. 'math' → logprob: -7.034677505493164
    9. 'omial' → logprob: -7.784677505493164
    10. 'orial' → logprob: -7.909677505493164

Token 174: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00011152983643114567
    2. '(' → logprob: -9.12511157989502
    3. ' (' → logprob: -13.87511157989502
    4. 'N' → logprob: -14.37511157989502
    5. '```' → logprob: -14.75011157989502
    6. '(
' → logprob: -14.87511157989502
    7. '(n' → logprob: -16.125110626220703
    8. '   ' → logprob: -16.250110626220703
    9. '((' → logprob: -16.875110626220703
    10. '[N' → logprob: -17.500110626220703

Token 175: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2032049596309662
    2. '-' → logprob: -1.7032049894332886
    3. '   ' → logprob: -6.453205108642578
    4. ' -(' → logprob: -9.078205108642578
    5. '-(' → logprob: -9.578205108642578
    6. ' ' → logprob: -11.078205108642578
    7. '    ' → logprob: -11.453205108642578
    8. '  ' → logprob: -12.703205108642578
    9. '       ' → logprob: -14.578205108642578
    10. ')' → logprob: -15.203205108642578

Token 176: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.006742962170392275
    2. ' (' → logprob: -5.00674295425415
    3. '(' → logprob: -11.381743431091309
    4. 'i' → logprob: -11.381743431091309
    5. ' i' → logprob: -12.756743431091309
    6. '   ' → logprob: -13.256743431091309
    7. ' ' → logprob: -16.631742477416992
    8. '[i' → logprob: -16.756742477416992
    9. '  ' → logprob: -17.256742477416992
    10. '(
' → logprob: -18.006742477416992

Token 177: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009479692205786705
    2. '(i' → logprob: -4.884479522705078
    3. ' i' → logprob: -6.509479522705078
    4. '   ' → logprob: -8.134479522705078
    5. ' (' → logprob: -9.759479522705078
    6. '1' → logprob: -11.009479522705078
    7. ' ' → logprob: -12.759479522705078
    8. '[i' → logprob: -12.759479522705078
    9. '(' → logprob: -13.009479522705078
    10. '  ' → logprob: -13.134479522705078

Token 178: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22682376205921173
    2. ' +' → logprob: -1.6018238067626953
    3. '1' → logprob: -7.476823806762695
    4. '   ' → logprob: -7.601823806762695
    5. ' ' → logprob: -9.101823806762695
    6. '-' → logprob: -9.226823806762695
    7. ' -' → logprob: -9.226823806762695
    8. ')' → logprob: -11.351823806762695
    9. '  ' → logprob: -12.226823806762695
    10. '+i' → logprob: -12.601823806762695

Token 179: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.666993507067673e-05
    2. ' ' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.250036239624023
    4. ')' → logprob: -15.000036239624023
    5. '```' → logprob: -16.250036239624023
    6. '  ' → logprob: -17.750036239624023
    7. '
' → logprob: -18.000036239624023
    8. 'i' → logprob: -18.125036239624023
    9. '       ' → logprob: -18.187536239624023
    10. '    ' → logprob: -18.625036239624023

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.250014305114746
    3. '   ' → logprob: -14.875014305114746
    4. ')' → logprob: -15.625014305114746
    5. '```' → logprob: -15.875014305114746
    6. 'i' → logprob: -16.37501335144043
    7. '(' → logprob: -16.56251335144043
    8. '2' → logprob: -17.18751335144043
    9. '(i' → logprob: -18.12501335144043
    10. '
' → logprob: -18.12501335144043

Token 181: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011697590351104736
    2. ')
' → logprob: -4.511697769165039
    3. '   ' → logprob: -7.886697769165039
    4. '))' → logprob: -8.261697769165039
    5. '))
' → logprob: -11.511697769165039
    6. ')
' → logprob: -12.511697769165039
    7. ' )' → logprob: -14.136697769165039
    8. ')

' → logprob: -15.136697769165039
    9. ')\
' → logprob: -15.261697769165039
    10. ')))' → logprob: -16.26169776916504

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018314523622393608
    2. 'i' → logprob: -4.018314361572266
    3. ' i' → logprob: -8.768314361572266
    4. '    
' → logprob: -12.643314361572266
    5. '
' → logprob: -13.018314361572266
    6. '	i' → logprob: -13.018314361572266
    7. '```' → logprob: -14.393314361572266
    8. ' ' → logprob: -15.893314361572266
    9. '[i' → logprob: -16.393314361572266
    10. '  ' → logprob: -16.393314361572266

Token 183: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.013388682156801224
    2. '   ' → logprob: -5.013388633728027
    3. ' i' → logprob: -5.013388633728027
    4. '	i' → logprob: -13.263388633728027
    5. ' ' → logprob: -14.888388633728027
    6. '  ' → logprob: -15.388388633728027
    7. '
' → logprob: -16.138389587402344
    8. '[i' → logprob: -16.513389587402344
    9. '```' → logprob: -16.513389587402344
    10. '_i' → logprob: -16.638389587402344

Token 184: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12719161808490753
    2. '+' → logprob: -2.3771915435791016
    3. ' +=' → logprob: -3.6271915435791016
    4. '=' → logprob: -10.752191543579102
    5. ' +' → logprob: -11.877191543579102
    6. '   ' → logprob: -13.252191543579102
    7. '++' → logprob: -13.627191543579102
    8. '+="' → logprob: -14.252191543579102
    9. ']+=' → logprob: -15.002191543579102
    10. '+='' → logprob: -15.002191543579102

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.250009536743164
    4. '```' → logprob: -19.125009536743164
    5. '１' → logprob: -20.750009536743164
    6. '0' → logprob: -20.875009536743164
    7. '
' → logprob: -20.875009536743164
    8. '       ' → logprob: -21.500009536743164
    9. '2' → logprob: -21.500009536743164
    10. '  ' → logprob: -21.875009536743164

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -19.25
    4. '0' → logprob: -19.5
    5. '2' → logprob: -19.625
    6. '１' → logprob: -20.5
    7. '   ' → logprob: -20.625
    8. 'N' → logprob: -21.0
    9. '
' → logprob: -21.25
    10. '۱' → logprob: -22.125

Token 187: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019393461989238858
    2. '
' → logprob: -6.251939296722412
    3. '

' → logprob: -12.50193977355957
    4. 'result' → logprob: -12.87693977355957
    5. '
' → logprob: -14.12693977355957
    6. 'answer' → logprob: -14.25193977355957
    7. 'ans' → logprob: -14.37693977355957
    8. '```' → logprob: -14.50193977355957
    9. '\n' → logprob: -14.62693977355957
    10. 'diff' → logprob: -15.25193977355957

Token 188: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.935296834039036e-06
    2. '
' → logprob: -12.75000286102295
    3. 'pr' → logprob: -16.875003814697266
    4. '
' → logprob: -18.000003814697266
    5. '\n' → logprob: -18.375003814697266
    6. '```' → logprob: -18.625003814697266
    7. ' print' → logprob: -19.250003814697266
    8. '(print' → logprob: -19.750003814697266
    9. '\' → logprob: -20.125003814697266
    10. '\
' → logprob: -20.250003814697266

Token 189: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.0009332557674497366
    2. '(' → logprob: -7.0009331703186035
    3. 'abs' → logprob: -10.750933647155762
    4. ' abs' → logprob: -15.250933647155762
    5. ' (' → logprob: -17.125932693481445
    6. '((' → logprob: -17.500932693481445
    7. '(|' → logprob: -18.875932693481445
    8. '(a' → logprob: -19.125932693481445
    9. '(p' → logprob: -19.375932693481445
    10. '(
' → logprob: -19.625932693481445

Token 190: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.1002117469906807
    2. '(' → logprob: -2.3502118587493896
    3. 'p' → logprob: -12.975212097167969
    4. '(q' → logprob: -13.600212097167969
    5. '(P' → logprob: -14.100212097167969
    6. '(
' → logprob: -14.850212097167969
    7. ' (' → logprob: -15.475212097167969
    8. ')' → logprob: -15.850212097167969
    9. ' p' → logprob: -17.47521209716797
    10. '((' → logprob: -17.60021209716797

Token 191: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38789206743240356
    2. ' -' → logprob: -1.1378920078277588
    3. '-q' → logprob: -6.887892246246338
    4. ' ' → logprob: -15.51289176940918
    5. '-
' → logprob: -15.63789176940918
    6. ' -
' → logprob: -17.26289176940918
    7. '-Q' → logprob: -17.76289176940918
    8. 'q' → logprob: -18.63789176940918
    9. ' q' → logprob: -18.88789176940918
    10. ' ' → logprob: -19.51289176940918

Token 192: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.339278580620885e-06
    2. ' q' → logprob: -13.000001907348633
    3. '(q' → logprob: -19.000001907348633
    4. '	q' → logprob: -19.000001907348633
    5. ' ' → logprob: -20.750001907348633
    6. '   ' → logprob: -21.750001907348633
    7. '
' → logprob: -22.625001907348633
    8. '_q' → logprob: -22.625001907348633
    9. ')' → logprob: -22.750001907348633
    10. '  ' → logprob: -22.750001907348633

Token 193: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07889066636562347
    2. ')' → logprob: -2.578890562057495
    3. ')))' → logprob: -14.328890800476074
    4. '()))' → logprob: -16.578889846801758
    5. '))
' → logprob: -16.953889846801758
    6. ')}' → logprob: -17.078889846801758
    7. '()' → logprob: -17.453889846801758
    8. '())' → logprob: -17.453889846801758
    9. ')
' → logprob: -17.578889846801758
    10. '})' → logprob: -17.703889846801758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 191
Tokens correctement prédits (1ère position, stricte): 87
Tokens correctement prédits (1ère position, avec adaptation): 97
Tokens correctement prédits (top 10): 169
Précision stricte (1ère position): 45.55%
Précision adaptée (1ère position): 50.79%
Précision (top 10): 88.48%
================================================================================
