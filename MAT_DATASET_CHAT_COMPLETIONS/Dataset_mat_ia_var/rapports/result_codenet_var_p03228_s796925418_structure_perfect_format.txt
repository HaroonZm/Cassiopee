================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A, B, K = map(int, input().split())
for i in range(K):
    if i % 2 == 0:
        A //= 2
        B += A
    else:
        B //= 2
        A += B
print(A, B)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' B' (ID: 418)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19263581931591034
    2. '+' → logprob: -2.5676357746124268
    3. ',' → logprob: -3.6926357746124268
    4. '.' → logprob: -3.6926357746124268
    5. ')' → logprob: -4.192636013031006
    6. '[' → logprob: -4.692636013031006
    7. ' =' → logprob: -4.942636013031006
    8. 'C' → logprob: -5.817636013031006
    9. ';' → logprob: -5.817636013031006
    10. '<|end|>' → logprob: -5.817636013031006

Token 4: ' K' (ID: 658)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7975139021873474
    2. '=' → logprob: -0.9225139021873474
    3. 'C' → logprob: -2.297513961791992
    4. '.' → logprob: -3.922513961791992
    5. ' =' → logprob: -4.297513961791992
    6. ')' → logprob: -5.297513961791992
    7. ' ' → logprob: -5.422513961791992
    8. '<|end|>' → logprob: -5.922513961791992
    9. ',C' → logprob: -6.047513961791992
    10. ';' → logprob: -6.922513961791992

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10672766715288162
    2. '+' → logprob: -3.2317276000976562
    3. '(' → logprob: -3.8567276000976562
    4. ' =' → logprob: -4.606727600097656
    5. '[' → logprob: -4.606727600097656
    6. ')' → logprob: -4.981727600097656
    7. '*' → logprob: -5.481727600097656
    8. ',' → logprob: -5.731727600097656
    9. '.' → logprob: -5.981727600097656
    10. ';' → logprob: -6.606727600097656

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.566312313079834
    2. '0' → logprob: -1.441312313079834
    3. ' map' → logprob: -2.941312313079834
    4. 'map' → logprob: -3.316312313079834
    5. ' []' → logprob: -3.941312313079834
    6. '[]' → logprob: -3.941312313079834
    7. ' [' → logprob: -4.191312313079834
    8. '1' → logprob: -4.316312313079834
    9. 'input' → logprob: -4.941312313079834
    10. ' [],' → logprob: -4.941312313079834

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07067525386810303
    2. '(lambda' → logprob: -3.0706753730773926
    3. '<|end|>' → logprob: -4.195675373077393
    4. '```' → logprob: -6.070675373077393
    5. '(int' → logprob: -6.320675373077393
    6. ')' → logprob: -6.695675373077393
    7. '(user' → logprob: -8.445674896240234
    8. '<|end|>' → logprob: -8.570674896240234
    9. '(input' → logprob: -9.195674896240234
    10. 'user' → logprob: -9.320674896240234

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4040532112121582
    2. ')' → logprob: -1.6540532112121582
    3. '(' → logprob: -2.029053211212158
    4. '<|end|>' → logprob: -5.529053211212158
    5. 'input' → logprob: -6.404053211212158
    6. '(user' → logprob: -6.654053211212158
    7. '<|end|>' → logprob: -8.029052734375
    8. '(int' → logprob: -8.654052734375
    9. '```' → logprob: -8.779052734375
    10. '())' → logprob: -8.904052734375

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1270144134759903
    2. ' input' → logprob: -2.127014398574829
    3. '(input' → logprob: -9.37701416015625
    4. ',input' → logprob: -14.87701416015625
    5. '=input' → logprob: -14.87701416015625
    6. ')' → logprob: -15.00201416015625
    7. ' ' → logprob: -15.00201416015625
    8. '```' → logprob: -16.00201416015625
    9. '<input' → logprob: -16.50201416015625
    10. '	input' → logprob: -16.87701416015625

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.37182101607322693
    2. '())' → logprob: -1.2468210458755493
    3. '(' → logprob: -4.87182092666626
    4. ')' → logprob: -5.49682092666626
    5. '(()' → logprob: -5.87182092666626
    6. '().' → logprob: -5.99682092666626
    7. '`()' → logprob: -6.99682092666626
    8. '('' → logprob: -7.12182092666626
    9. '();)' → logprob: -7.37182092666626
    10. '()))' → logprob: -7.74682092666626

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004297155828680843
    2. 'strip' → logprob: -7.875429630279541
    3. ')' → logprob: -10.6254301071167
    4. 'rstrip' → logprob: -11.1254301071167
    5. ' split' → logprob: -12.0004301071167
    6. '(split' → logprob: -13.0004301071167
    7. 'read' → logprob: -14.2504301071167
    8. 'spl' → logprob: -14.3754301071167
    9. 's' → logprob: -15.1254301071167
    10. '```' → logprob: -15.6254301071167

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12938372790813446
    2. '())' → logprob: -2.1293838024139404
    3. '()' → logprob: -6.754383563995361
    4. '))' → logprob: -7.379383563995361
    5. '`)' → logprob: -8.00438404083252
    6. '(' → logprob: -8.75438404083252
    7. '()))' → logprob: -10.50438404083252
    8. '```' → logprob: -10.75438404083252
    9. ')`' → logprob: -10.87938404083252
    10. '('' → logprob: -11.00438404083252

Token 13: 'for' (ID: 1938)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5202219486236572
    2. 'if' → logprob: -2.0202219486236572
    3. '#' → logprob: -2.1452219486236572
    4. '*' → logprob: -2.8952219486236572
    5. '+
' → logprob: -3.2702219486236572
    6. '>' → logprob: -4.645221710205078
    7. '```' → logprob: -5.145221710205078
    8. 'i' → logprob: -5.270221710205078
    9. '.' → logprob: -5.395221710205078
    10. ',' → logprob: -5.645221710205078

Token 14: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0675429031252861
    2. ' i' → logprob: -2.817542791366577
    3. '  ' → logprob: -5.567543029785156
    4. 'i' → logprob: -6.942543029785156
    5. '_' → logprob: -7.317543029785156
    6. ' _' → logprob: -9.692543029785156
    7. ' ‌' → logprob: -10.692543029785156
    8. ' ' → logprob: -11.817543029785156
    9. ' ▁' → logprob: -12.567543029785156
    10. ')' → logprob: -13.067543029785156

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.40380650758743286
    2. 'in' → logprob: -1.153806447982788
    3. ' ' → logprob: -4.278806686401367
    4. '  ' → logprob: -6.653806686401367
    5. 'range' → logprob: -7.403806686401367
    6. 'n' → logprob: -8.028806686401367
    7. '_' → logprob: -8.778806686401367
    8. 'space' → logprob: -9.278806686401367
    9. ',' → logprob: -9.403806686401367
    10. ' n' → logprob: -9.778806686401367

Token 16: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868755102157593
    2. 'range' → logprob: -1.1368755102157593
    3. '	range' → logprob: -13.26187515258789
    4. ' ' → logprob: -13.38687515258789
    5. '(range' → logprob: -15.26187515258789
    6. ' A' → logprob: -15.38687515258789
    7. 'A' → logprob: -16.01187515258789
    8. '.range' → logprob: -16.26187515258789
    9. ' xrange' → logprob: -16.26187515258789
    10. '```' → logprob: -16.26187515258789

Token 17: '(K' (ID: 28797)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036453302018344402
    2. '(A' → logprob: -5.628645420074463
    3. '(len' → logprob: -11.128644943237305
    4. '(i' → logprob: -11.503644943237305
    5. '(B' → logprob: -11.628644943237305
    6. '((' → logprob: -12.878644943237305
    7. '(range' → logprob: -13.128644943237305
    8. '(
' → logprob: -13.628644943237305
    9. '(`' → logprob: -13.753644943237305
    10. '(a' → logprob: -13.878644943237305

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013695230009034276
    2. '+' → logprob: -6.876369476318359
    3. ':' → logprob: -8.62636947631836
    4. ')' → logprob: -9.37636947631836
    5. ' ):' → logprob: -10.25136947631836
    6. ',' → logprob: -11.00136947631836
    7. '):
' → logprob: -11.37636947631836
    8. '+:' → logprob: -13.37636947631836
    9. '**' → logprob: -13.50136947631836
    10. '```' → logprob: -14.12636947631836

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027425523847341537
    2. '    
' → logprob: -4.902425289154053
    3. ' ' → logprob: -5.402425289154053
    4. '```' → logprob: -5.527425289154053
    5. '    ' → logprob: -5.652425289154053
    6. '<|end|>' → logprob: -6.277425289154053
    7. ' 
' → logprob: -6.402425289154053
    8. ':' → logprob: -6.652425289154053
    9. '`' → logprob: -7.902425289154053
    10. ',' → logprob: -8.027425765991211

Token 20: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27235856652259827
    2. ' print' → logprob: -2.3973586559295654
    3. ' A' → logprob: -3.2723586559295654
    4. 'print' → logprob: -3.8973586559295654
    5. ' if' → logprob: -4.272358417510986
    6. ' for' → logprob: -4.397358417510986
    7. '```' → logprob: -4.397358417510986
    8. '    ' → logprob: -4.647358417510986
    9. 'A' → logprob: -5.397358417510986
    10. ' ' → logprob: -5.647358417510986

Token 21: ' i' (ID: 575)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.019536085426807404
    2. 'A' → logprob: -4.894536018371582
    3. ' ' → logprob: -5.144536018371582
    4. ' i' → logprob: -5.894536018371582
    5. ' B' → logprob: -6.144536018371582
    6. 'i' → logprob: -7.769536018371582
    7. ' (' → logprob: -8.269536018371582
    8. ' not' → logprob: -9.644536018371582
    9. '<|end|>' → logprob: -9.644536018371582
    10. 'B' → logprob: -9.769536018371582

Token 22: ' %' (ID: 1851)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.0841939449310303
    2. ' %' → logprob: -1.3341939449310303
    3. ' ' → logprob: -1.5841939449310303
    4. ' ==' → logprob: -1.8341939449310303
    5. '%' → logprob: -4.084194183349609
    6. '==' → logprob: -4.959194183349609
    7. '<' → logprob: -5.959194183349609
    8. '+' → logprob: -6.209194183349609
    9. ' >' → logprob: -6.584194183349609
    10. '  ' → logprob: -7.459194183349609

Token 23: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.48872143030166626
    2. 'A' → logprob: -1.9887213706970215
    3. ' ' → logprob: -2.1137213706970215
    4. ' A' → logprob: -2.1137213706970215
    5. 'B' → logprob: -5.4887213706970215
    6. ' B' → logprob: -6.3637213706970215
    7. '3' → logprob: -6.3637213706970215
    8. '(A' → logprob: -8.86372184753418
    9. '4' → logprob: -9.11372184753418
    10. ' (' → logprob: -9.23872184753418

Token 24: '2' (ID: 17)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2163570672273636
    2. '2' → logprob: -1.7163571119308472
    3. 'B' → logprob: -4.466357231140137
    4. '3' → logprob: -5.966357231140137
    5. ' A' → logprob: -8.341357231140137
    6. '(A' → logprob: -8.341357231140137
    7. ' ' → logprob: -9.216357231140137
    8. '4' → logprob: -9.591357231140137
    9. '(' → logprob: -10.216357231140137
    10. '(B' → logprob: -11.091357231140137

Token 25: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.010297222062945366
    2. '==' → logprob: -4.7602972984313965
    3. ' ' → logprob: -6.5102972984313965
    4. ' !=' → logprob: -9.385296821594238
    5. ':' → logprob: -10.135296821594238
    6. '0' → logprob: -11.010296821594238
    7. ' =' → logprob: -11.260296821594238
    8. ' :' → logprob: -11.385296821594238
    9. ' ===' → logprob: -12.135296821594238
    10. '=' → logprob: -12.135296821594238

Token 26: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6341627836227417
    2. ' ' → logprob: -0.7591627836227417
    3. '1' → logprob: -6.509162902832031
    4. '2' → logprob: -10.009162902832031
    5. ' A' → logprob: -11.884162902832031
    6. 'A' → logprob: -12.009162902832031
    7. '  ' → logprob: -12.759162902832031
    8. '   ' → logprob: -12.884162902832031
    9. '<|end|>' → logprob: -13.384162902832031
    10. ')' → logprob: -14.009162902832031

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2554461658000946
    2. '2' → logprob: -1.505446195602417
    3. ' ' → logprob: -5.880445957183838
    4. '1' → logprob: -7.255445957183838
    5. '```' → logprob: -12.567946434020996
    6. 'A' → logprob: -13.005446434020996
    7. '   ' → logprob: -13.567946434020996
    8. '  ' → logprob: -14.380446434020996
    9. '3' → logprob: -14.442946434020996
    10. '==' → logprob: -14.755446434020996

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010859245667234063
    2. ' :' → logprob: -6.8760857582092285
    3. '):' → logprob: -10.751086235046387
    4. ':
' → logprob: -11.501086235046387
    5. '       ' → logprob: -12.126086235046387
    6. '   ' → logprob: -12.251086235046387
    7. ':**' → logprob: -12.376086235046387
    8. '>:' → logprob: -13.501086235046387
    9. '():' → logprob: -14.376086235046387
    10. ' and' → logprob: -14.376086235046387

Token 29: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7283025979995728
    2. ':' → logprob: -1.4783025979995728
    3. '    ' → logprob: -1.8533025979995728
    4. ' :' → logprob: -2.728302478790283
    5. '   ' → logprob: -3.478302478790283
    6. '       ' → logprob: -4.478302478790283
    7. '     ' → logprob: -5.103302478790283
    8. ' A' → logprob: -5.478302478790283
    9. '"' → logprob: -5.978302478790283
    10. ',' → logprob: -6.228302478790283

Token 30: ' A' (ID: 355)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6549234986305237
    2. 'print' → logprob: -1.029923439025879
    3. ' A' → logprob: -2.779923439025879
    4. '   ' → logprob: -3.654923439025879
    5. 'A' (adapté à ' A') → logprob: -3.779923439025879
    6. ' ' → logprob: -4.904923439025879
    7. '    ' → logprob: -6.154923439025879
    8. ' B' → logprob: -7.029923439025879
    9. '       ' → logprob: -7.654923439025879
    10. ' for' → logprob: -7.904923439025879

Token 31: ' //' (ID: 602)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.26746147871017456
    2. ' -=' → logprob: -1.6424615383148193
    3. '+=' → logprob: -3.5174615383148193
    4. ' *=' → logprob: -5.89246129989624
    5. '+' → logprob: -6.26746129989624
    6. '-' → logprob: -6.26746129989624
    7. ' +' → logprob: -6.64246129989624
    8. '-=' → logprob: -7.26746129989624
    9. ' -' → logprob: -7.39246129989624
    10. '    ' → logprob: -7.51746129989624

Token 32: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.334533878136426e-05
    2. '=B' → logprob: -10.125042915344238
    3. '=A' → logprob: -12.750042915344238
    4. '2' → logprob: -15.625042915344238
    5. '=b' → logprob: -17.000043869018555
    6. '=}' → logprob: -17.125043869018555
    7. '=_' → logprob: -17.375043869018555
    8. '=i' → logprob: -17.750043869018555
    9. '=k' → logprob: -18.000043869018555
    10. ' =' → logprob: -18.125043869018555

Token 33: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16031481325626373
    2. 'B' → logprob: -1.9103147983551025
    3. ' ' → logprob: -9.785314559936523
    4. '3' → logprob: -11.160314559936523
    5. ' B' → logprob: -11.410314559936523
    6. '   ' → logprob: -12.285314559936523
    7. 'b' → logprob: -13.035314559936523
    8. '  ' → logprob: -14.035314559936523
    9. '10' → logprob: -14.410314559936523
    10. '4' → logprob: -16.035314559936523

Token 34: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5760851502418518
    2. 'B' → logprob: -0.8260851502418518
    3. ' ' → logprob: -9.076085090637207
    4. ' B' → logprob: -11.201085090637207
    5. '   ' → logprob: -11.451085090637207
    6. '  ' → logprob: -12.576085090637207
    7. '3' → logprob: -13.451085090637207
    8. 'b' → logprob: -14.701085090637207
    9. '10' → logprob: -15.201085090637207
    10. 'D' → logprob: -15.701085090637207

Token 35: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037624359130859375
    2. 'else' → logprob: -3.6626243591308594
    3. ' else' → logprob: -4.912624359130859
    4. '<|end|>' → logprob: -6.537624359130859
    5. '    
' → logprob: -7.037624359130859
    6. '       ' → logprob: -7.162624359130859
    7. ' ' → logprob: -8.66262435913086
    8. '	else' → logprob: -8.78762435913086
    9. '```' → logprob: -9.53762435913086
    10. '
' → logprob: -9.66262435913086

Token 36: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05011296272277832
    2. 'else' → logprob: -3.5501129627227783
    3. ' else' → logprob: -4.800112724304199
    4. ' ' → logprob: -5.050112724304199
    5. '       ' → logprob: -5.675112724304199
    6. '<|end|>' → logprob: -6.550112724304199
    7. '```' → logprob: -8.5501127243042
    8. '    
' → logprob: -8.8001127243042
    9. '    ' → logprob: -9.9251127243042
    10. 'elif' → logprob: -10.1751127243042

Token 37: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.035074081271886826
    2. ' B' → logprob: -3.91007399559021
    3. 'else' → logprob: -4.785074234008789
    4. '   ' → logprob: -5.660074234008789
    5. ' else' → logprob: -6.035074234008789
    6. ' ' → logprob: -9.785074234008789
    7. 'elif' → logprob: -9.785074234008789
    8. '    ' → logprob: -10.285074234008789
    9. ' elif' → logprob: -11.035074234008789
    10. '       ' → logprob: -11.160074234008789

Token 38: ' +=' (ID: 2757)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.09507539868354797
    2. ' //' → logprob: -3.4700753688812256
    3. '*=' → logprob: -3.5950753688812256
    4. '+=' → logprob: -4.220075607299805
    5. ' *=' → logprob: -4.970075607299805
    6. '//' → logprob: -4.970075607299805
    7. '=' → logprob: -6.595075607299805
    8. ' +=' → logprob: -6.970075607299805
    9. '-=' → logprob: -7.220075607299805
    10. '*' → logprob: -8.720075607299805

Token 39: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.642556369304657
    2. '1' → logprob: -0.767556369304657
    3. ' A' → logprob: -5.267556190490723
    4. ' ' → logprob: -6.142556190490723
    5. '10' → logprob: -6.392556190490723
    6. '2' → logprob: -8.017556190490723
    7. '3' → logprob: -8.892556190490723
    8. '   ' → logprob: -9.517556190490723
    9. '100' → logprob: -9.892556190490723
    10. '(A' → logprob: -9.892556190490723

Token 40: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30469146370887756
    2. ':' → logprob: -1.4296914339065552
    3. '   ' → logprob: -4.179691314697266
    4. ':
' → logprob: -5.179691314697266
    5. ' B' → logprob: -7.054691314697266
    6. 'B' → logprob: -7.179691314697266
    7. ' ' → logprob: -8.429691314697266
    8. ' :' → logprob: -9.429691314697266
    9. '<|end|>' → logprob: -9.554691314697266
    10. '    ' → logprob: -9.804691314697266

Token 44: '       ' (ID: 309)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.03543613478541374
    2. '       ' → logprob: -4.410436153411865
    3. ' B' → logprob: -4.535436153411865
    4. 'A' → logprob: -4.660436153411865
    5. 'K' → logprob: -6.410436153411865
    6. '   ' → logprob: -7.535436153411865
    7. ' A' → logprob: -9.285435676574707
    8. '        ' → logprob: -9.910435676574707
    9. '```' → logprob: -9.910435676574707
    10. '    ' → logprob: -10.285435676574707

Token 45: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.02907843515276909
    2. ' B' → logprob: -3.654078483581543
    3. 'A' → logprob: -6.404078483581543
    4. '   ' → logprob: -7.029078483581543
    5. 'K' → logprob: -9.654078483581543
    6. '       ' → logprob: -9.779078483581543
    7. ' A' → logprob: -10.279078483581543
    8. '    ' → logprob: -10.404078483581543
    9. '```' → logprob: -10.404078483581543
    10. 'b' → logprob: -12.904078483581543

Token 46: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.10796888172626495
    2. ' //' → logprob: -2.607968807220459
    3. '*=' → logprob: -4.232968807220459
    4. '//' → logprob: -4.607968807220459
    5. ' *=' → logprob: -6.357968807220459
    6. '+=' → logprob: -7.107968807220459
    7. '=' → logprob: -7.232968807220459
    8. '-=' → logprob: -7.982968807220459
    9. '*' → logprob: -8.607969284057617
    10. '%=' → logprob: -9.607969284057617

Token 47: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0006706207641400397
    2. '/=' → logprob: -7.375670433044434
    3. '//=' → logprob: -11.000670433044434
    4. '*=' → logprob: -11.250670433044434
    5. '-=' → logprob: -12.250670433044434
    6. '%=' → logprob: -12.500670433044434
    7. '+=' → logprob: -12.875670433044434
    8. ' /=' → logprob: -13.250670433044434
    9. '       ' → logprob: -15.250670433044434
    10. '   ' → logprob: -15.375670433044434

Token 48: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005073997308500111
    2. ' ' → logprob: -7.625507354736328
    3. '3' → logprob: -11.000507354736328
    4. '1' → logprob: -13.875507354736328
    5. '   ' → logprob: -13.875507354736328
    6. '  ' → logprob: -15.563007354736328
    7. '=' → logprob: -16.375507354736328
    8. '4' → logprob: -16.563007354736328
    9. '```' → logprob: -16.563007354736328
    10. '<|end|>' → logprob: -17.063007354736328

Token 49: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.250040054321289
    3. '3' → logprob: -12.500040054321289
    4. '   ' → logprob: -14.750040054321289
    5. '  ' → logprob: -15.625040054321289
    6. '4' → logprob: -16.50004005432129
    7. '1' → logprob: -16.62504005432129
    8. '10' → logprob: -16.81254005432129
    9. '20' → logprob: -16.81254005432129
    10. '=' → logprob: -17.25004005432129

Token 50: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0356021448969841
    2. '   ' → logprob: -4.16060209274292
    3. '```' → logprob: -4.53560209274292
    4. '<|end|>' → logprob: -4.91060209274292
    5. 'A' → logprob: -7.41060209274292
    6. ' ' → logprob: -8.535602569580078
    7. 'B' → logprob: -8.660602569580078
    8. ' A' → logprob: -9.410602569580078
    9. ' B' → logprob: -10.410602569580078
    10. '``' → logprob: -10.410602569580078

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007240279112011194
    2. '```' → logprob: -5.257240295410156
    3. '   ' → logprob: -6.632240295410156
    4. 'A' → logprob: -8.257240295410156
    5. '<|end|>' → logprob: -8.757240295410156
    6. 'B' → logprob: -9.382240295410156
    7. '``' → logprob: -9.632240295410156
    8. '        
' → logprob: -10.007240295410156
    9. ' ' → logprob: -10.757240295410156
    10. ' A' → logprob: -11.507240295410156

Token 52: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.00018494461255613714
    2. ' A' → logprob: -8.750185012817383
    3. '   ' → logprob: -11.000185012817383
    4. '       ' → logprob: -12.250185012817383
    5. '```' → logprob: -13.250185012817383
    6. 'C' → logprob: -13.500185012817383
    7. ' ' → logprob: -15.000185012817383
    8. '	A' → logprob: -15.000185012817383
    9. 'D' → logprob: -15.750185012817383
    10. 'B' → logprob: -16.000185012817383

Token 53: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06774088740348816
    2. ' +=' → logprob: -2.9427409172058105
    3. '=' → logprob: -4.4427409172058105
    4. '```' → logprob: -8.692740440368652
    5. '+' → logprob: -8.817740440368652
    6. ' ' → logprob: -9.067740440368652
    7. '-=' → logprob: -9.067740440368652
    8. '//=' → logprob: -9.317740440368652
    9. '*=' → logprob: -9.442740440368652
    10. '+='' → logprob: -10.067740440368652

Token 54: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.018150877207517624
    2. ' B' → logprob: -4.018150806427002
    3. '   ' → logprob: -14.26815128326416
    4. ' ' → logprob: -15.14315128326416
    5. '       ' → logprob: -17.018150329589844
    6. '  ' → logprob: -17.393150329589844
    7. '	B' → logprob: -17.643150329589844
    8. '    ' → logprob: -17.768150329589844
    9. '(B' → logprob: -19.143150329589844
    10. '_B' → logprob: -19.518150329589844

Token 55: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04464114457368851
    2. '(A' → logprob: -3.1696412563323975
    3. '(B' → logprob: -6.794641017913818
    4. '()' → logprob: -7.919641017913818
    5. '('' → logprob: -9.044641494750977
    6. '((' → logprob: -11.169641494750977
    7. '("' → logprob: -11.794641494750977
    8. '(print' → logprob: -12.294641494750977
    9. '(sum' → logprob: -13.419641494750977
    10. '(max' → logprob: -13.544641494750977

Token 58: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8206473871250637e-05
    2. ',' → logprob: -10.625028610229492
    3. '))' → logprob: -13.625028610229492
    4. ',)' → logprob: -14.250028610229492
    5. ',B' → logprob: -14.375028610229492
    6. ')`' → logprob: -14.875028610229492
    7. '`)' → logprob: -15.125028610229492
    8. '),' → logprob: -15.250028610229492
    9. ' )' → logprob: -15.875028610229492
    10. '+' → logprob: -16.250028610229492

Token 59: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.28441503643989563
    2. 'B' → logprob: -1.4094150066375732
    3. ')' → logprob: -6.034415245056152
    4. ''' → logprob: -7.284415245056152
    5. ' ' → logprob: -9.409415245056152
    6. ' )' → logprob: -9.659415245056152
    7. '`' → logprob: -11.409415245056152
    8. '"' → logprob: -11.784415245056152
    9. ' ' → logprob: -12.659415245056152
    10. '```' → logprob: -12.784415245056152

Token 60: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -14.875000953674316
    3. ')`' → logprob: -16.5
    4. '`)' → logprob: -17.625
    5. ' )' → logprob: -17.75
    6. ')
' → logprob: -18.0
    7. '```' → logprob: -18.5
    8. '')' → logprob: -18.625
    9. ')}' → logprob: -18.875
    10. '#' → logprob: -18.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 58
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 46
Précision stricte (1ère position): 22.41%
Précision adaptée (1ère position): 27.59%
Précision (top 10): 79.31%
================================================================================
