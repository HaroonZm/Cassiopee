================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import bisect
import os
import sys

# Constants for system configuration and modular arithmetic
CONST_INPUT_RECURSION_LIMIT = 10 ** 9
CONST_INF_FLOAT = float("inf")
CONST_INF_INT = 10 ** 18
CONST_MODULO = 10 ** 9 + 7
# CONST_ALT_MODULO = 998244353

# Input configuration for local/remote environments
if os.getenv("LOCAL"):
    sys.stdin = open("_in.txt", "r")

sys.setrecursionlimit(CONST_INPUT_RECURSION_LIMIT)

# Input parsing with systematic variable naming
var_num_nodes, var_num_ranges = map(int, sys.stdin.buffer.readline().split())
list_pair_node_states = [list(map(int, sys.stdin.buffer.readline().split())) for _ in range(var_num_nodes)]
list_pair_range_edges = [list(map(int, sys.stdin.buffer.readline().split())) for _ in range(var_num_ranges)]

# Preprocessing input data
list_pair_node_states.sort()
var_node_index_odd = 0  # unused
list_tuple_nodes_extended = [(0, 0)] + list_pair_node_states + [(CONST_INF_FLOAT, 0)]
list_val_a = [val_a for val_a, val_b in list_tuple_nodes_extended]
list_val_b = [val_b for val_a, val_b in list_tuple_nodes_extended]

var_nodes_total = len(list_tuple_nodes_extended)
list_adjacent_graph = [[] for _ in range(var_nodes_total)]
for idx_edge, (var_left, var_right) in enumerate(list_pair_range_edges, start=1):
    idx_left = bisect.bisect_left(list_val_a, var_left) - 1
    idx_right = bisect.bisect_right(list_val_a, var_right) - 1
    list_adjacent_graph[idx_left].append((idx_right, idx_edge))
    list_adjacent_graph[idx_right].append((idx_left, idx_edge))

list_node_parity = [0] * var_nodes_total
for idx_node, (val_b_prev, val_b_next) in enumerate(zip(list_val_b, list_val_b[1:])):
    if val_b_prev == 0 and val_b_next == 1:
        list_node_parity[idx_node] = 1
    if val_b_prev == 1 and val_b_next == 0:
        list_node_parity[idx_node] = 1

list_node_visited = [False] * var_nodes_total
list_all_trees_edges = []

for idx_tree_root in range(var_nodes_total):
    if list_node_visited[idx_tree_root] or not list_adjacent_graph[idx_tree_root]:
        continue
    list_stack_edges = []
    list_node_visited[idx_tree_root] = True
    list_dfs_stack = [idx_tree_root]
    while list_dfs_stack:
        idx_current_node = list_dfs_stack.pop()
        for idx_neighbor, idx_graph_edge in list_adjacent_graph[idx_current_node]:
            if list_node_visited[idx_neighbor]:
                continue
            list_node_visited[idx_neighbor] = True
            list_dfs_stack.append(idx_neighbor)
            list_stack_edges.append((idx_current_node, idx_neighbor, idx_graph_edge))
    if not list_stack_edges and list_node_parity[idx_tree_root] == 1:
        print(-1)
        exit()
    list_all_trees_edges.append(list_stack_edges)

list_adjacent_graph = [[] for _ in range(var_nodes_total)]
list_node_degrees = [0] * var_nodes_total
for list_edges_tree in list_all_trees_edges:
    for idx_from, idx_to, idx_edge_id in list_edges_tree:
        list_adjacent_graph[idx_from].append((idx_to, idx_edge_id))
        list_adjacent_graph[idx_to].append((idx_from, idx_edge_id))
        list_node_degrees[idx_from] += 1
        list_node_degrees[idx_to] += 1

list_result_edges = []
list_node_used = [False] * var_nodes_total
list_leaf_stack = [idx_node for idx_node, deg in enumerate(list_node_degrees) if deg == 1]
while list_leaf_stack:
    idx_leaf = list_leaf_stack.pop()
    if list_node_degrees[idx_leaf] == 0:
        continue
    assert list_node_degrees[idx_leaf] == 1
    if list_node_used[idx_leaf]:
        continue
    list_node_used[idx_leaf] = True
    list_node_degrees[idx_leaf] = 0
    for idx_neighbor, idx_edge_label in list_adjacent_graph[idx_leaf]:
        if list_node_used[idx_neighbor]:
            continue
        if list_node_parity[idx_leaf] == list_node_parity[idx_neighbor] == 1:
            list_node_parity[idx_leaf] = 0
            list_node_parity[idx_neighbor] = 0
            list_result_edges.append(idx_edge_label)
        elif list_node_parity[idx_leaf] == 1 and list_node_parity[idx_neighbor] == 0:
            list_node_parity[idx_leaf] = 0
            list_node_parity[idx_neighbor] = 1
            list_result_edges.append(idx_edge_label)
        list_node_degrees[idx_neighbor] -= 1
        if list_node_degrees[idx_neighbor] == 1:
            list_leaf_stack.append(idx_neighbor)

if 1 in list_node_parity:
    print(-1)
else:
    print(len(list_result_edges))
    print(*sorted(list_result_edges))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00018577903392724693
    2. '(' → logprob: -8.7501859664917
    3. '\' → logprob: -12.5001859664917
    4. '\n' → logprob: -12.8751859664917
    5. '.\' → logprob: -13.0001859664917
    6. 'newline' → logprob: -13.0001859664917
    7. ' ' → logprob: -13.3751859664917
    8. '```' → logprob: -13.5001859664917
    9. '[' → logprob: -13.6251859664917
    10. '.b' → logprob: -13.6251859664917

Token 4: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0009755438077263534
    2. '(' → logprob: -7.750975608825684
    3. '\n' → logprob: -8.625975608825684
    4. '\' → logprob: -9.500975608825684
    5. '

' → logprob: -9.750975608825684
    6. '```' → logprob: -10.375975608825684
    7. '.b' → logprob: -10.500975608825684
    8. '.
' → logprob: -10.500975608825684
    9. '.

' → logprob: -10.625975608825684
    10. ',' → logprob: -10.750975608825684

Token 5: ' os' (ID: 1994)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16773360967636108
    2. ' math' → logprob: -2.042733669281006
    3. ' heap' → logprob: -4.417733669281006
    4. ' collections' → logprob: -4.792733669281006
    5. 'sys' → logprob: -6.417733669281006
    6. ' itertools' → logprob: -6.667733669281006
    7. ' os' → logprob: -7.542733669281006
    8. 'collections' → logprob: -8.167733192443848
    9. 'heap' → logprob: -8.417733192443848
    10. 'math' → logprob: -8.542733192443848

Token 6: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5663332343101501
    2. '\n' → logprob: -1.316333293914795
    3. '.' → logprob: -2.816333293914795
    4. 'import' → logprob: -3.191333293914795
    5. '<|end|>' → logprob: -3.566333293914795
    6. '

' → logprob: -3.941333293914795
    7. '\' → logprob: -5.941333293914795
    8. '```' → logprob: -6.066333293914795
    9. 'newline' → logprob: -6.316333293914795
    10. '' → logprob: -6.566333293914795

Token 7: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22872090339660645
    2. '\n' → logprob: -2.4787209033966064
    3. '
' → logprob: -3.2287209033966064
    4. '\' → logprob: -3.7287209033966064
    5. 'import' → logprob: -3.8537209033966064
    6. '```' → logprob: -4.228720664978027
    7. '

' → logprob: -5.353720664978027
    8. '.
' → logprob: -5.978720664978027
    9. '' → logprob: -6.103720664978027
    10. '#' → logprob: -6.228720664978027

Token 8: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.12708014249801636
    2. 'sys' → logprob: -2.127080202102661
    3. ' re' → logprob: -9.377079963684082
    4. 're' → logprob: -10.377079963684082
    5. ' math' → logprob: -10.877079963684082
    6. ' shutil' → logprob: -12.252079963684082
    7. ' pathlib' → logprob: -12.752079963684082
    8. 'math' → logprob: -12.752079963684082
    9. ' io' → logprob: -13.627079963684082
    10. ' time' → logprob: -14.252079963684082

Token 9: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0172537565231323
    2. '\n' → logprob: -1.1422537565231323
    3. '

' → logprob: -1.3922537565231323
    4. '<|end|>' → logprob: -3.642253875732422
    5. '```' → logprob: -3.892253875732422
    6. 'import' → logprob: -4.267253875732422
    7. '\' → logprob: -5.142253875732422
    8. '<|end|>' → logprob: -6.767253875732422
    9. '#' → logprob: -7.517253875732422
    10. '.' → logprob: -7.642253875732422

Token 10: '#' (ID: 2)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5112614631652832
    2. '```' → logprob: -1.7612614631652832
    3. '
' → logprob: -2.261261463165283
    4. '\' → logprob: -3.011261463165283
    5. 'import' → logprob: -3.761261463165283
    6. '#' → logprob: -4.011261463165283
    7. '

' → logprob: -4.261261463165283
    8. 'def' → logprob: -4.636261463165283
    9. 'from' → logprob: -6.261261463165283
    10. '`' → logprob: -6.386261463165283

Token 11: ' Constants' (ID: 31976)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3538886606693268
    2. 'def' → logprob: -1.7288886308670044
    3. ' def' → logprob: -2.978888750076294
    4. '#' → logprob: -3.978888750076294
    5. '_' → logprob: -3.978888750076294
    6. ' #' → logprob: -4.228888511657715
    7. 'import' → logprob: -5.853888511657715
    8. '\' → logprob: -6.228888511657715
    9. 'd' → logprob: -6.728888511657715
    10. ' _' → logprob: -6.853888511657715

Token 12: ' for' (ID: 395)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6206308007240295
    2. '=' → logprob: -2.4956307411193848
    3. '_MAX' → logprob: -2.4956307411193848
    4. 'MAX' → logprob: -2.6206307411193848
    5. ' =' → logprob: -2.7456307411193848
    6. ':' → logprob: -4.245630741119385
    7. '```' → logprob: -4.370630741119385
    8. '_SPACE' → logprob: -4.495630741119385
    9. 'S' → logprob: -5.120630741119385
    10. '_LINE' → logprob: -5.620630741119385

Token 13: ' system' (ID: 2420)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3425435423851013
    2. ' file' → logprob: -2.217543601989746
    3. ' FILE' → logprob: -3.592543601989746
    4. ' PATH' → logprob: -3.717543601989746
    5. 'the' → logprob: -4.342543601989746
    6. ' DATA' → logprob: -4.592543601989746
    7. 'DATA' → logprob: -4.717543601989746
    8. ' MAX' → logprob: -5.092543601989746
    9. ' sorting' → logprob: -5.092543601989746
    10. 'FILE' → logprob: -5.342543601989746

Token 14: ' configuration' (ID: 12282)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -1.462666392326355
    2. ' paths' → logprob: -1.712666392326355
    3. '_' → logprob: -1.837666392326355
    4. ' path' → logprob: -1.837666392326355
    5. '_path' → logprob: -2.2126665115356445
    6. 'paths' → logprob: -3.2126665115356445
    7. '_paths' → logprob: -3.3376665115356445
    8. ' PATH' → logprob: -3.9626665115356445
    9. 'PATH' → logprob: -4.4626665115356445
    10. ' _' → logprob: -5.0876665115356445

Token 15: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07908850908279419
    2. '_
' → logprob: -3.7040884494781494
    3. '_

' → logprob: -4.5790886878967285
    4. '_S' → logprob: -4.7040886878967285
    5. '_SYSTEM' → logprob: -5.2040886878967285
    6. '\' → logprob: -5.8290886878967285
    7. '_NEW' → logprob: -6.0790886878967285
    8. 'S' → logprob: -6.0790886878967285
    9. '_MAX' → logprob: -6.3290886878967285
    10. '
' → logprob: -6.4540886878967285

Token 16: ' modular' (ID: 61198)
  Prédit: ' paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' paths' → logprob: -1.2080408334732056
    2. ' environment' → logprob: -1.7080408334732056
    3. ' file' → logprob: -1.8330408334732056
    4. ' path' → logprob: -2.958040714263916
    5. ' logging' → logprob: -2.958040714263916
    6. ' resource' → logprob: -3.583040714263916
    7. ' memory' → logprob: -3.583040714263916
    8. ' hardware' → logprob: -3.958040714263916
    9. ' settings' → logprob: -4.208040714263916
    10. ' parameters' → logprob: -4.333040714263916

Token 17: ' arithmetic' (ID: 81645)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.197167992591858
    2. '_' → logprob: -1.322167992591858
    3. 'ization' → logprob: -1.572167992591858
    4. ' arithmetic' → logprob: -2.4471678733825684
    5. 'ity' → logprob: -2.8221678733825684
    6. ' code' → logprob: -4.197167873382568
    7. '_code' → logprob: -4.697167873382568
    8. '_

' → logprob: -5.322167873382568
    9. ' import' → logprob: -5.572167873382568
    10. ' constants' → logprob: -5.697167873382568

Token 18: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.398957371711731
    2. '
' → logprob: -1.523957371711731
    3. '```' → logprob: -2.5239572525024414
    4. '_
' → logprob: -2.7739572525024414
    5. '_

' → logprob: -2.7739572525024414
    6. '_MAX' → logprob: -3.2739572525024414
    7. '_MOD' → logprob: -3.2739572525024414
    8. 'MOD' → logprob: -3.5239572525024414
    9. '\' → logprob: -3.6489572525024414
    10. '

' → logprob: -3.8989572525024414

Token 19: 'CONST' (ID: 168319)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5987416505813599
    2. 'MAX' → logprob: -1.5987416505813599
    3. '_MAX' → logprob: -1.5987416505813599
    4. 'MOD' → logprob: -2.8487415313720703
    5. '```' → logprob: -2.9737415313720703
    6. '_

' → logprob: -3.4737415313720703
    7. '_MOD' → logprob: -3.8487415313720703
    8. '_
' → logprob: -3.8487415313720703
    9. '_PI' → logprob: -4.09874153137207
    10. '\' → logprob: -4.09874153137207

Token 20: '_INPUT' (ID: 47683)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09816150367259979
    2. 'ANT' → logprob: -2.598161458969116
    3. ' =' → logprob: -5.098161697387695
    4. 'S' → logprob: -5.098161697387695
    5. 'ANTS' → logprob: -6.098161697387695
    6. '_VAL' → logprob: -6.598161697387695
    7. '_A' → logprob: -6.723161697387695
    8. '=' → logprob: -7.723161697387695
    9. ' ' → logprob: -8.223161697387695
    10. '_VALUE' → logprob: -8.723161697387695

Token 21: '_RE' (ID: 4375)
  Prédit: '_SIZE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_SIZE' → logprob: -0.36319512128829956
    2. ' =' → logprob: -2.6131951808929443
    3. '_LEN' → logprob: -2.6131951808929443
    4. '_BUFFER' → logprob: -2.7381951808929443
    5. '_BUF' → logprob: -4.238194942474365
    6. '_DATA' → logprob: -4.488194942474365
    7. '=' → logprob: -4.738194942474365
    8. '_' → logprob: -4.988194942474365
    9. '_MAX' → logprob: -4.988194942474365
    10. '_LENGTH' → logprob: -5.238194942474365

Token 22: 'CUR' (ID: 53580)
  Prédit: 'AD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AD' → logprob: -0.05349389463663101
    2. 'S' → logprob: -3.6784939765930176
    3. 'ADER' → logprob: -5.303493976593018
    4. 'G' → logprob: -5.303493976593018
    5. 'F' → logprob: -5.553493976593018
    6. 'QUEST' → logprob: -5.928493976593018
    7. 'A' → logprob: -6.553493976593018
    8. 'PEAT' → logprob: -6.553493976593018
    9. 'D' → logprob: -7.428493976593018
    10. 'ADING' → logprob: -7.553493976593018

Token 23: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.028594302013516426
    2. 'R' → logprob: -3.6535942554473877
    3. 's' → logprob: -7.653594493865967
    4. 'RE' → logprob: -7.653594493865967
    5. 'SOR' → logprob: -7.653594493865967
    6. 'SE' → logprob: -8.778594017028809
    7. 'RS' → logprob: -9.028594017028809
    8. 'SSION' → logprob: -9.153594017028809
    9. 'RATION' → logprob: -9.403594017028809
    10. 'REN' → logprob: -9.778594017028809

Token 24: 'ION' (ID: 2044)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.4565751254558563
    2. 'ENCE' → logprob: -1.9565751552581787
    3. 'S' → logprob: -2.5815751552581787
    4. 'IVE' → logprob: -2.9565751552581787
    5. 'ION' → logprob: -3.0815751552581787
    6. 'ENT' → logprob: -4.3315749168396
    7. 'TION' → logprob: -4.7065749168396
    8. 'T' → logprob: -4.9565749168396
    9. 'EN' → logprob: -5.5815749168396
    10. '```' → logprob: -6.2065749168396

Token 25: '_LIMIT' (ID: 64862)
  Prédit: '_LIMIT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LIMIT' → logprob: -0.12712517380714417
    2. '_DEPTH' → logprob: -2.1271252632141113
    3. '_L' → logprob: -10.252124786376953
    4. '=' → logprob: -10.377124786376953
    5. '_' → logprob: -10.627124786376953
    6. '_LEVEL' → logprob: -10.752124786376953
    7. 'LIMIT' → logprob: -10.752124786376953
    8. '_MAX' → logprob: -10.877124786376953
    9. '_STACK' → logprob: -11.377124786376953
    10. 'DEP' → logprob: -11.377124786376953

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22567623853683472
    2. '=' → logprob: -1.6006762981414795
    3. ' ' → logprob: -8.725676536560059
    4. '_' → logprob: -9.850676536560059
    5. '   ' → logprob: -10.850676536560059
    6. ',' → logprob: -11.725676536560059
    7. 'S' → logprob: -11.850676536560059
    8. '  ' → logprob: -12.225676536560059
    9. '=_' → logprob: -13.850676536560059
    10. '=int' → logprob: -13.975676536560059

Token 27: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6764663457870483
    2. '10' → logprob: -0.8014663457870483
    3. '300' → logprob: -3.926466464996338
    4. ' ' → logprob: -4.426466464996338
    5. '500' → logprob: -5.676466464996338
    6. '200' → logprob: -5.676466464996338
    7. '1' → logprob: -6.301466464996338
    8. '2' → logprob: -7.426466464996338
    9. '250' → logprob: -7.426466464996338
    10. '409' → logprob: -8.05146598815918

Token 28: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.38209277391433716
    2. '10' → logprob: -1.2570927143096924
    3. '300' → logprob: -4.0070929527282715
    4. '200' → logprob: -5.0070929527282715
    5. '500' → logprob: -5.5070929527282715
    6. ' ' → logprob: -6.7570929527282715
    7. '150' → logprob: -7.0070929527282715
    8. '1' → logprob: -7.0070929527282715
    9. '250' → logprob: -7.8820929527282715
    10. '2' → logprob: -8.382092475891113

Token 29: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007178021594882011
    2. '00' → logprob: -5.257177829742432
    3. '**' → logprob: -6.507177829742432
    4. '000' → logprob: -8.38217830657959
    5. '2' → logprob: -9.13217830657959
    6. '^' → logprob: -9.88217830657959
    7. '24' → logprob: -11.13217830657959
    8. '_' → logprob: -11.38217830657959
    9. '4' → logprob: -11.38217830657959
    10. '6' → logprob: -12.13217830657959

Token 30: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.5858669281005859
    2. '6' → logprob: -0.9608669281005859
    3. '9' → logprob: -3.210866928100586
    4. '5' → logprob: -4.585866928100586
    5. '4' → logprob: -4.960866928100586
    6. '8' → logprob: -5.835866928100586
    7. '3' → logprob: -8.085866928100586
    8. '**' → logprob: -9.960866928100586
    9. '```' → logprob: -11.835866928100586
    10. '2' → logprob: -13.523366928100586

Token 31: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.19147846102714539
    2. '6' → logprob: -1.8164784908294678
    3. '9' → logprob: -4.691478252410889
    4. '8' → logprob: -6.441478252410889
    5. '5' → logprob: -7.191478252410889
    6. '4' → logprob: -9.066478729248047
    7. '3' → logprob: -11.066478729248047
    8. '**' → logprob: -11.566478729248047
    9. '```' → logprob: -13.253978729248047
    10. '``' → logprob: -14.691478729248047

Token 32: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1324760466814041
    2. ')' → logprob: -2.5074760913848877
    3. '\n' → logprob: -4.132475852966309
    4. '' → logprob: -4.632475852966309
    5. '#' → logprob: -6.007475852966309
    6. '**' → logprob: -6.132475852966309
    7. '0' → logprob: -6.132475852966309
    8. '
' → logprob: -6.132475852966309
    9. '<|end|>' → logprob: -6.382475852966309
    10. '```' → logprob: -7.132475852966309

Token 33: 'CONST' (ID: 168319)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006881369277834892
    2. '
' → logprob: -5.506881237030029
    3. '

' → logprob: -6.881881237030029
    4. '' → logprob: -7.756881237030029
    5. '0' → logprob: -7.881881237030029
    6. '\n' → logprob: -8.256881713867188
    7. '**' → logprob: -9.381881713867188
    8. '#' → logprob: -9.381881713867188
    9. '```' → logprob: -9.381881713867188
    10. '+' → logprob: -9.756881713867188

Token 34: '_INF' (ID: 173649)
  Prédit: '_MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_MOD' → logprob: -0.02181522734463215
    2. '_RE' → logprob: -5.146815299987793
    3. '_MAX' → logprob: -5.271815299987793
    4. '_INPUT' → logprob: -5.396815299987793
    5. '_OUTPUT' → logprob: -7.021815299987793
    6. '_M' → logprob: -7.021815299987793
    7. '_STACK' → logprob: -7.146815299987793
    8. '_INT' → logprob: -7.396815299987793
    9. '_SYS' → logprob: -7.646815299987793
    10. '_' → logprob: -7.771815299987793

Token 35: '_FLOAT' (ID: 53417)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05104691535234451
    2. '=' → logprob: -3.051046848297119
    3. '   ' → logprob: -6.301046848297119
    4. '  ' → logprob: -8.676047325134277
    5. 'INT' → logprob: -9.676047325134277
    6. 'ITY' → logprob: -9.801047325134277
    7. '_' → logprob: -9.801047325134277
    8. ' ' → logprob: -10.051047325134277
    9. '```' → logprob: -10.176047325134277
    10. '=int' → logprob: -10.801047325134277

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023384306579828262
    2. '=' → logprob: -3.7733843326568604
    3. '   ' → logprob: -9.773384094238281
    4. ' ' → logprob: -10.398384094238281
    5. '  ' → logprob: -10.523384094238281
    6. '=float' → logprob: -11.773384094238281
    7. '_' → logprob: -12.148384094238281
    8. '    ' → logprob: -13.398384094238281
    9. '＝' → logprob: -14.023384094238281
    10. 'LOAT' → logprob: -14.398384094238281

Token 37: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.4893345534801483
    2. ' float' → logprob: -0.9893345832824707
    3. '1' → logprob: -4.489334583282471
    4. ' ' → logprob: -6.114334583282471
    5. '10' → logprob: -7.364334583282471
    6. 'inf' → logprob: -8.364334106445312
    7. ' inf' → logprob: -8.614334106445312
    8. '3' → logprob: -8.614334106445312
    9. '100' → logprob: -8.739334106445312
    10. '9' → logprob: -9.864334106445312

Token 38: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0027221334166824818
    2. '("' → logprob: -6.002722263336182
    3. '(' → logprob: -8.502721786499023
    4. ''' → logprob: -10.627721786499023
    5. ''in' → logprob: -11.877721786499023
    6. '('+' → logprob: -12.502721786499023
    7. '('-' → logprob: -12.627721786499023
    8. '"' → logprob: -13.002721786499023
    9. '32' → logprob: -14.877721786499023
    10. ' ('' → logprob: -15.127721786499023

Token 39: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.29078733921051025
    2. 'inf' → logprob: -1.5407873392105103
    3. ''' → logprob: -3.4157872200012207
    4. 'info' → logprob: -7.040787220001221
    5. ''ins' → logprob: -7.290787220001221
    6. '"' → logprob: -7.540787220001221
    7. ''im' → logprob: -7.665787220001221
    8. 'in' → logprob: -8.165787696838379
    9. ''i' → logprob: -8.290787696838379
    10. ''inc' → logprob: -8.540787696838379

Token 40: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0017632400849834085
    2. ')' → logprob: -6.501763343811035
    3. ')")' → logprob: -8.876763343811035
    4. '")
' → logprob: -9.626763343811035
    5. '")
' → logprob: -10.251763343811035
    6. '"' → logprob: -11.626763343811035
    7. ' ")' → logprob: -12.376763343811035
    8. '}")' → logprob: -13.876763343811035
    9. '')' → logprob: -14.001763343811035
    10. '.")' → logprob: -14.251763343811035

Token 41: 'CONST' (ID: 168319)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06488267332315445
    2. '
' → logprob: -3.564882755279541
    3. '

' → logprob: -4.439882755279541
    4. '<|end|>' → logprob: -5.064882755279541
    5. 'CONST' → logprob: -5.939882755279541
    6. '#' → logprob: -5.939882755279541
    7. '' → logprob: -6.189882755279541
    8. ')' → logprob: -6.689882755279541
    9. '_CONST' → logprob: -6.939882755279541
    10. '\n' → logprob: -7.064882755279541

Token 42: '_INF' (ID: 173649)
  Prédit: '_INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INF' → logprob: -0.5033674240112305
    2. '_INT' → logprob: -1.3783674240112305
    3. '_MOD' → logprob: -2.6283674240112305
    4. '_MAX' → logprob: -3.2533674240112305
    5. '_IN' → logprob: -4.3783674240112305
    6. '_' → logprob: -5.3783674240112305
    7. '_INFINITY' → logprob: -5.7533674240112305
    8. '_INTEGER' → logprob: -6.6283674240112305
    9. '_UINT' → logprob: -6.7533674240112305
    10. '_M' → logprob: -6.8783674240112305

Token 43: '_INT' (ID: 20388)
  Prédit: '_INT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INT' → logprob: -0.5207558274269104
    2. '_int' → logprob: -2.1457557678222656
    3. '_float' → logprob: -2.8957557678222656
    4. ' _' → logprob: -3.1457557678222656
    5. '_INTEGER' → logprob: -3.2707557678222656
    6. '<|end|>' → logprob: -3.2707557678222656
    7. '_FLOAT' → logprob: -3.6457557678222656
    8. '```' → logprob: -4.020755767822266
    9. '=int' → logprob: -4.145755767822266
    10. ' =' → logprob: -4.270755767822266

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018158841878175735
    2. '=' → logprob: -4.018158912658691
    3. ' ' → logprob: -11.893158912658691
    4. '  ' → logprob: -13.768158912658691
    5. '=int' → logprob: -14.518158912658691
    6. '=float' → logprob: -16.143157958984375
    7. '   ' → logprob: -16.393157958984375
    8. ',' → logprob: -16.518157958984375
    9. ' ' → logprob: -16.643157958984375
    10. '_' → logprob: -17.018157958984375

Token 45: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5442277789115906
    2. '10' → logprob: -0.9192277789115906
    3. '922' → logprob: -4.294227600097656
    4. '100' → logprob: -6.294227600097656
    5. 'int' → logprob: -6.544227600097656
    6. 'float' → logprob: -7.044227600097656
    7. '214' → logprob: -7.419227600097656
    8. '999' → logprob: -7.544227600097656
    9. '1' → logprob: -7.669227600097656
    10. '2' → logprob: -7.919227600097656

Token 46: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.026606803759932518
    2. 'int' → logprob: -4.276607036590576
    3. 'float' → logprob: -5.151607036590576
    4. '922' → logprob: -5.776607036590576
    5. '1' → logprob: -7.151607036590576
    6. '999' → logprob: -7.276607036590576
    7. ' ' → logprob: -7.401607036590576
    8. 'sys' → logprob: -8.026606559753418
    9. '100' → logprob: -8.151606559753418
    10. '214' → logprob: -8.401606559753418

Token 47: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3820537328720093
    2. '9' → logprob: -1.2570537328720093
    3. '18' → logprob: -4.007053852081299
    4. '000' → logprob: -5.507053852081299
    5. '10' → logprob: -5.632053852081299
    6. '12' → logprob: -6.132053852081299
    7. '15' → logprob: -6.507053852081299
    8. '8' → logprob: -7.507053852081299
    9. '14' → logprob: -7.882053852081299
    10. '00' → logprob: -7.882053852081299

Token 48: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.2590274214744568
    2. '9' → logprob: -2.1340274810791016
    3. '15' → logprob: -2.5090274810791016
    4. '10' → logprob: -4.009027481079102
    5. '12' → logprob: -5.384027481079102
    6. '20' → logprob: -5.634027481079102
    7. '16' → logprob: -7.134027481079102
    8. '19' → logprob: -7.384027481079102
    9. '14' → logprob: -8.384027481079102
    10. '17' → logprob: -8.509027481079102

Token 49: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.14738613367080688
    2. '15' → logprob: -2.272386074066162
    3. '9' → logprob: -4.022386074066162
    4. '20' → logprob: -5.147386074066162
    5. '10' → logprob: -5.147386074066162
    6. '12' → logprob: -6.022386074066162
    7. '16' → logprob: -7.147386074066162
    8. '19' → logprob: -7.522386074066162
    9. '14' → logprob: -8.27238655090332
    10. '13' → logprob: -9.02238655090332

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05672793462872505
    2. '<|end|>' → logprob: -3.556727886199951
    3. '

' → logprob: -4.681727886199951
    4. '#' → logprob: -4.806727886199951
    5. '```' → logprob: -5.806727886199951
    6. '\n' → logprob: -5.806727886199951
    7. '
' → logprob: -6.431727886199951
    8. 'newline' → logprob: -7.931727886199951
    9. '' → logprob: -8.30672836303711
    10. '<|end|>' → logprob: -8.43172836303711

Token 51: 'CONST' (ID: 168319)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9128676652908325
    2. '#' → logprob: -1.5378676652908325
    3. '

' → logprob: -1.6628676652908325
    4. 'CONST' → logprob: -2.412867546081543
    5. '\n' → logprob: -3.287867546081543
    6. '
' → logprob: -4.412867546081543
    7. '_CONST' → logprob: -4.537867546081543
    8. '\' → logprob: -5.162867546081543
    9. '```' → logprob: -5.287867546081543
    10. 'MAX' → logprob: -5.412867546081543

Token 52: '_MOD' (ID: 45275)
  Prédit: '_MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MOD' → logprob: -0.02748269774019718
    2. '_MAX' → logprob: -4.902482509613037
    3. '_' → logprob: -5.777482509613037
    4. '_INPUT' → logprob: -5.902482509613037
    5. '_M' → logprob: -6.152482509613037
    6. 'MOD' → logprob: -7.152482509613037
    7. '_MODULE' → logprob: -7.277482509613037
    8. '_INF' → logprob: -7.402482509613037
    9. '_MULT' → logprob: -7.402482509613037
    10. '_LIMIT' → logprob: -7.527482509613037

Token 53: 'ULO' (ID: 63916)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007623184472322464
    2. '=' → logprob: -4.882623195648193
    3. '_' → logprob: -11.757622718811035
    4. '  ' → logprob: -12.882622718811035
    5. 'ULO' → logprob: -13.132622718811035
    6. ' ' → logprob: -13.757622718811035
    7. '1' → logprob: -14.257622718811035
    8. ',' → logprob: -14.507622718811035
    9. '```' → logprob: -15.257622718811035
    10. '   ' → logprob: -15.382622718811035

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004633522592484951
    2. '=' → logprob: -5.37963342666626
    3. ' ' → logprob: -11.629633903503418
    4. '_' → logprob: -13.254633903503418
    5. '  ' → logprob: -13.254633903503418
    6. ',' → logprob: -16.0046329498291
    7. '1' → logprob: -16.0046329498291
    8. '   ' → logprob: -16.1296329498291
    9. '```' → logprob: -16.5046329498291
    10. ' =
' → logprob: -16.8796329498291

Token 55: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3671743869781494
    2. ' ' → logprob: -1.9921743869781494
    3. '100' → logprob: -2.1171743869781494
    4. '998' → logprob: -2.9921743869781494
    5. '1' → logprob: -8.11717414855957
    6. '(' → logprob: -10.49217414855957
    7. ' (' → logprob: -11.99217414855957
    8. '999' → logprob: -11.99217414855957
    9. '2' → logprob: -11.99217414855957
    10. 'int' → logprob: -12.49217414855957

Token 56: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1540381759405136
    2. '100' → logprob: -2.154038190841675
    3. '998' → logprob: -3.654038190841675
    4. '(' → logprob: -7.779037952423096
    5. '1' → logprob: -7.904037952423096
    6. ' ' → logprob: -10.154038429260254
    7. 'int' → logprob: -10.904038429260254
    8. '2' → logprob: -12.904038429260254
    9. '999' → logprob: -13.029038429260254
    10. '(int' → logprob: -13.154038429260254

Token 57: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.023348666727542877
    2. '**' → logprob: -3.773348569869995
    3. '09' → logprob: -9.273348808288574
    4. ' **' → logprob: -12.148348808288574
    5. '7' → logprob: -13.148348808288574
    6. '```' → logprob: -14.273348808288574
    7. ' ' → logprob: -14.398348808288574
    8. '009' → logprob: -15.023348808288574
    9. '+' → logprob: -16.148347854614258
    10. '000' → logprob: -16.148347854614258

Token 58: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.2664456789934775e-06
    2. '09' → logprob: -14.625000953674316
    3. '18' → logprob: -15.375000953674316
    4. ' ' → logprob: -15.625000953674316
    5. '10' → logprob: -16.250001907348633
    6. '8' → logprob: -16.875001907348633
    7. '+' → logprob: -16.875001907348633
    8. '19' → logprob: -17.500001907348633
    9. '```' → logprob: -17.500001907348633
    10. '12' → logprob: -17.750001907348633

Token 59: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.3856492842023727e-06
    2. '09' → logprob: -14.375000953674316
    3. '18' → logprob: -15.500000953674316
    4. '10' → logprob: -16.125001907348633
    5. '8' → logprob: -16.250001907348633
    6. ' ' → logprob: -16.375001907348633
    7. '```' → logprob: -17.125001907348633
    8. '12' → logprob: -17.562501907348633
    9. '+' → logprob: -17.625001907348633
    10. '19' → logprob: -17.750001907348633

Token 60: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024144190829247236
    2. ' +' → logprob: -6.502414226531982
    3. '7' → logprob: -7.002414226531982
    4. '+
' → logprob: -14.37741470336914
    5. ' plus' → logprob: -14.75241470336914
    6. '＋' → logprob: -14.87741470336914
    7. 'plus' → logprob: -15.62741470336914
    8. '```' → logprob: -16.12741470336914
    9. '9' → logprob: -16.37741470336914
    10. ' ' → logprob: -16.62741470336914

Token 61: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '+' → logprob: -15.875
    4. '```' → logprob: -18.875
    5. '07' → logprob: -19.5
    6. '   ' → logprob: -19.875
    7. '9' → logprob: -19.875
    8. '  ' → logprob: -21.3125
    9. '' → logprob: -21.8125
    10. ' +' → logprob: -22.0625

Token 62: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -18.5
    3. ' ' → logprob: -18.625
    4. '```' → logprob: -19.5
    5. '07' → logprob: -19.875
    6. '   ' → logprob: -21.375
    7. '9' → logprob: -21.375
    8. '７' → logprob: -21.8125
    9. '۷' → logprob: -22.1875
    10. '' → logprob: -22.3125

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6106964349746704
    2. '#' → logprob: -1.1106964349746704
    3. '```' → logprob: -3.610696315765381
    4. '<|end|>' → logprob: -3.735696315765381
    5. '

' → logprob: -3.860696315765381
    6. '' → logprob: -4.110696315765381
    7. '\n' → logprob: -4.110696315765381
    8. 'newline' → logprob: -5.110696315765381
    9. ')' → logprob: -5.485696315765381
    10. '
' → logprob: -5.485696315765381

Token 64: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.32220587134361267
    2. '
' → logprob: -1.322205901145935
    3. '
' → logprob: -5.822206020355225
    4. '#' → logprob: -6.697206020355225
    5. '' → logprob: -6.697206020355225
    6. '\n' → logprob: -6.822206020355225
    7. 'def' → logprob: -7.447206020355225
    8. '


' → logprob: -7.697206020355225
    9. '\' → logprob: -8.447205543518066
    10. '

' → logprob: -8.447205543518066

Token 65: ' CONST' (ID: 116101)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5658591985702515
    2. ' ' → logprob: -1.9408591985702515
    3. '#' → logprob: -2.690859317779541
    4. '<|end|>' → logprob: -2.690859317779541
    5. '

' → logprob: -3.315859317779541
    6. 'def' → logprob: -3.315859317779541
    7. ' 

' → logprob: -3.690859317779541
    8. ' 
' → logprob: -4.565859317779541
    9. '```' → logprob: -4.815859317779541
    10. '<|end|>' → logprob: -4.940859317779541

Token 66: '_ALT' (ID: 142927)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4918672740459442
    2. '_MOD' → logprob: -1.6168673038482666
    3. '_INPUT' → logprob: -2.2418673038482666
    4. '_S' → logprob: -4.6168670654296875
    5. '_MAX' → logprob: -4.8668670654296875
    6. '_ARRAY' → logprob: -4.8668670654296875
    7. '_SET' → logprob: -5.1168670654296875
    8. '_M' → logprob: -5.4918670654296875
    9. '_PREFIX' → logprob: -5.8668670654296875
    10. '_MULT' → logprob: -6.1168670654296875

Token 67: '_MOD' (ID: 45275)
  Prédit: '_MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MOD' → logprob: -0.13825908303260803
    2. ' =' → logprob: -2.763259172439575
    3. '_' → logprob: -3.763259172439575
    4. 'MOD' → logprob: -4.388258934020996
    5. '_INPUT' → logprob: -4.763258934020996
    6. '_MODULE' → logprob: -4.888258934020996
    7. '_CONST' → logprob: -5.388258934020996
    8. '=' → logprob: -5.763258934020996
    9. 'ULO' → logprob: -7.388258934020996
    10. '_M' → logprob: -7.638258934020996

Token 68: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.1323319375514984
    2. ' =' → logprob: -2.2573318481445312
    3. '=' → logprob: -4.132331848144531
    4. '_' → logprob: -6.507331848144531
    5. '1' → logprob: -7.757331848144531
    6. 'ULE' → logprob: -8.007331848144531
    7. 'UL' → logprob: -8.507331848144531
    8. '_CONST' → logprob: -8.882331848144531
    9. '2' → logprob: -9.382331848144531
    10. 'U' → logprob: -9.632331848144531

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005271345842629671
    2. ' ' → logprob: -5.8802714347839355
    3. '=' → logprob: -6.1302714347839355
    4. '_' → logprob: -8.380270957946777
    5. '2' → logprob: -11.005270957946777
    6. ':' → logprob: -11.505270957946777
    7. ' _' → logprob: -11.630270957946777
    8. '1' → logprob: -12.380270957946777
    9. ' =
' → logprob: -12.380270957946777
    10. '  ' → logprob: -12.755270957946777

Token 70: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.060253072530031204
    2. '10' → logprob: -3.310253143310547
    3. '998' → logprob: -4.060253143310547
    4. '100' → logprob: -5.935253143310547
    5. ' (' → logprob: -6.810253143310547
    6. '1' → logprob: -8.435253143310547
    7. '2' → logprob: -8.560253143310547
    8. 'CONST' → logprob: -8.935253143310547
    9. '(' → logprob: -9.185253143310547
    10. ' CONST' → logprob: -9.935253143310547

Token 71: '998' (ID: 34589)
  Prédit: '998'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '998' → logprob: -0.3307859003543854
    2. '10' → logprob: -1.330785870552063
    3. '(' → logprob: -4.705785751342773
    4. '2' → logprob: -5.205785751342773
    5. '100' → logprob: -6.330785751342773
    6. '1' → logprob: -7.830785751342773
    7. ' ' → logprob: -8.705785751342773
    8. '987' → logprob: -9.455785751342773
    9. 'int' → logprob: -9.830785751342773
    10. '(int' → logprob: -10.205785751342773

Token 72: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.375000953674316
    3. '444' → logprob: -17.125
    4. '243' → logprob: -17.875
    5. '344' → logprob: -18.875
    6. '247' → logprob: -19.25
    7. '245' → logprob: -20.125
    8. '{' → logprob: -20.5
    9. '544' → logprob: -20.5
    10. '242' → logprob: -20.625

Token 73: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.0004885728703811765
    2. '853' → logprob: -7.625488758087158
    3. '857' → logprob: -15.00048828125
    4. '357' → logprob: -16.25048828125
    5. '```' → logprob: -16.25048828125
    6. '553' → logprob: -17.25048828125
    7. '753' → logprob: -18.00048828125
    8. '"""' → logprob: -18.62548828125
    9. '053' → logprob: -18.75048828125
    10. '351' → logprob: -18.75048828125

Token 74: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10983254015445709
    2. '

' → logprob: -2.609832525253296
    3. '#' → logprob: -3.984832525253296
    4. '\n' → logprob: -5.109832763671875
    5. '<|end|>' → logprob: -6.359832763671875
    6. '
' → logprob: -6.484832763671875
    7. '```' → logprob: -7.234832763671875
    8. 'newline' → logprob: -7.609832763671875
    9. '' → logprob: -7.859832763671875
    10. '<|end|>' → logprob: -8.109832763671875

Token 75: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.31742238998413086
    2. 'def' → logprob: -1.9424223899841309
    3. '
' → logprob: -2.192422389984131
    4. '
' → logprob: -4.817422389984131
    5. '#' → logprob: -5.692422389984131
    6. '


' → logprob: -6.567422389984131
    7. '' → logprob: -7.067422389984131
    8. '

' → logprob: -7.442422389984131
    9. 'class' → logprob: -7.692422389984131
    10. '\' → logprob: -7.692422389984131

Token 76: ' Input' (ID: 10090)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017822109162807465
    2. ' def' → logprob: -4.517822265625
    3. 'from' → logprob: -5.892822265625
    4. 'class' → logprob: -6.392822265625
    5. '#' → logprob: -7.267822265625
    6. 'import' → logprob: -7.267822265625
    7. ' class' → logprob: -9.017822265625
    8. ' from' → logprob: -9.392822265625
    9. 'DEFAULT' → logprob: -9.642822265625
    10. 'DEBUG' → logprob: -9.892822265625

Token 77: ' configuration' (ID: 12282)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22298169136047363
    2. ' =' → logprob: -2.2229816913604736
    3. '=' → logprob: -2.7229816913604736
    4. '_data' → logprob: -5.0979814529418945
    5. 's' → logprob: -5.0979814529418945
    6. 'def' → logprob: -5.7229814529418945
    7. '(' → logprob: -6.0979814529418945
    8. ':' → logprob: -6.0979814529418945
    9. '()' → logprob: -6.5979814529418945
    10. 'data' → logprob: -7.0979814529418945

Token 78: ' for' (ID: 395)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.7654894590377808
    2. ' =' → logprob: -1.3904894590377808
    3. '=' → logprob: -2.8904895782470703
    4. '_' → logprob: -3.0154895782470703
    5. '_MAX' → logprob: -3.0154895782470703
    6. 'def' → logprob: -3.7654895782470703
    7. '_INPUT' → logprob: -4.01548957824707
    8. '#' → logprob: -4.39048957824707
    9. 'MAX' → logprob: -4.51548957824707
    10. 'import' → logprob: -4.51548957824707

Token 79: ' local' (ID: 2698)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.19327470660209656
    2. 'sys' → logprob: -1.818274736404419
    3. ' input' → logprob: -5.19327449798584
    4. 'input' → logprob: -6.81827449798584
    5. ' stdin' → logprob: -6.81827449798584
    6. 'stdin' → logprob: -6.94327449798584
    7. ' the' → logprob: -7.06827449798584
    8. ' recursion' → logprob: -7.06827449798584
    9. ' fast' → logprob: -7.31827449798584
    10. 'def' → logprob: -7.94327449798584

Token 80: '/' (ID: 14)
  Prédit: '_testing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_testing' → logprob: -0.7602108120918274
    2. ' testing' → logprob: -1.8852107524871826
    3. '_debug' → logprob: -2.5102107524871826
    4. '_execution' → logprob: -2.8852107524871826
    5. ' environment' → logprob: -3.1352107524871826
    6. 'testing' → logprob: -3.6352107524871826
    7. '_' → logprob: -3.7602107524871826
    8. ' and' → logprob: -3.8852107524871826
    9. '_run' → logprob: -4.260210990905762
    10. '_environment' → logprob: -4.260210990905762

Token 81: 'remote' (ID: 23744)
  Prédit: 'online'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'online' → logprob: -0.5506641268730164
    2. ' online' → logprob: -1.9256641864776611
    3. 'remote' → logprob: -2.175664186477661
    4. ' testing' → logprob: -4.050663948059082
    5. 'contest' → logprob: -4.050663948059082
    6. ' contest' → logprob: -4.425663948059082
    7. 'testing' → logprob: -4.550663948059082
    8. 'debug' → logprob: -4.550663948059082
    9. ' remote' → logprob: -4.800663948059082
    10. 'submission' → logprob: -4.925663948059082

Token 82: ' environments' (ID: 30392)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1691579818725586
    2. ' environment' → logprob: -1.7941579818725586
    3. '_execution' → logprob: -1.9191579818725586
    4. '_' → logprob: -2.7941579818725586
    5. ' execution' → logprob: -3.2941579818725586
    6. 'environment' → logprob: -3.5441579818725586
    7. '_env' → logprob: -3.5441579818725586
    8. '_runtime' → logprob: -4.044157981872559
    9. 'execution' → logprob: -4.044157981872559
    10. '_testing' → logprob: -4.044157981872559

Token 83: '
' (ID: 198)
  Prédit: 'LOCAL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LOCAL' → logprob: -0.9500080943107605
    2. 'is' → logprob: -1.7000081539154053
    3. 'IS' → logprob: -1.8250081539154053
    4. '_LOCAL' → logprob: -2.3250081539154053
    5. '_INPUT' → logprob: -3.7000081539154053
    6. 'INPUT' → logprob: -3.7000081539154053
    7. '_IS' → logprob: -3.9500081539154053
    8. 'DEBUG' → logprob: -4.450007915496826
    9. '_local' → logprob: -4.700007915496826
    10. '_input' → logprob: -4.825007915496826

Token 84: 'if' (ID: 366)
  Prédit: 'LOCAL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LOCAL' → logprob: -1.0377191305160522
    2. 'IS' → logprob: -1.2877191305160522
    3. 'INPUT' → logprob: -2.287719249725342
    4. 'is' → logprob: -2.662719249725342
    5. '_INPUT' → logprob: -3.537719249725342
    6. '_LOCAL' → logprob: -3.537719249725342
    7. 'input' → logprob: -3.537719249725342
    8. 'CONST' → logprob: -4.162719249725342
    9. 'REMOTE' → logprob: -4.287719249725342
    10. 'def' → logprob: -4.912719249725342

Token 85: ' os' (ID: 1994)
  Prédit: ' os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.09742985665798187
    2. ' __' → logprob: -2.8474297523498535
    3. ' "' → logprob: -4.2224297523498535
    4. ' '' → logprob: -5.2224297523498535
    5. ' sys' → logprob: -5.2224297523498535
    6. ' hasattr' → logprob: -5.7224297523498535
    7. '"' → logprob: -6.3474297523498535
    8. ' ' → logprob: -7.0974297523498535
    9. ''' → logprob: -7.0974297523498535
    10. ' not' → logprob: -7.2224297523498535

Token 86: '.getenv' (ID: 105382)
  Prédit: '.environ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.environ' → logprob: -0.6517373919487
    2. '.getenv' → logprob: -1.2767374515533447
    3. '.name' → logprob: -2.0267374515533447
    4. ' .' → logprob: -2.9017374515533447
    5. '.path' → logprob: -4.651737213134766
    6. '.getcwd' → logprob: -6.276737213134766
    7. '.' → logprob: -6.401737213134766
    8. '.env' → logprob: -10.526737213134766
    9. 'name' → logprob: -10.651737213134766
    10. '.get' → logprob: -10.901737213134766

Token 87: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.396993488073349
    2. '('' → logprob: -1.3969935178756714
    3. '(' → logprob: -2.521993398666382
    4. '("_' → logprob: -12.271993637084961
    5. '(
' → logprob: -12.271993637084961
    6. '("("' → logprob: -12.396993637084961
    7. '("__' → logprob: -12.896993637084961
    8. '('_' → logprob: -13.271993637084961
    9. '(\'' → logprob: -13.771993637084961
    10. '(

' → logprob: -13.896993637084961

Token 88: 'LOCAL' (ID: 90515)
  Prédit: 'LOCAL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LOCAL' → logprob: -0.32302600145339966
    2. '"' → logprob: -1.6980259418487549
    3. 'USER' → logprob: -4.073026180267334
    4. ''' → logprob: -4.073026180267334
    5. 'LOC' → logprob: -4.698026180267334
    6. 'REMOTE' → logprob: -4.823026180267334
    7. 'ENV' → logprob: -5.323026180267334
    8. 'PY' → logprob: -5.448026180267334
    9. 'HOME' → logprob: -5.448026180267334
    10. 'RUN' → logprob: -5.573026180267334

Token 89: '"):
' (ID: 33645)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.8350918889045715
    2. '"):' → logprob: -0.9600918889045715
    3. '_ENV' → logprob: -2.8350918292999268
    4. '"):
' → logprob: -2.9600918292999268
    5. '_RUN' → logprob: -4.585092067718506
    6. 'ENV' → logprob: -4.710092067718506
    7. '_TEST' → logprob: -4.710092067718506
    8. '"):
' → logprob: -4.710092067718506
    9. 'RUN' → logprob: -5.335092067718506
    10. '_EXEC' → logprob: -5.460092067718506

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05227522924542427
    2. ' sys' → logprob: -3.8022751808166504
    3. ':' → logprob: -4.30227518081665
    4. '	sys' → logprob: -5.05227518081665
    5. ' :' → logprob: -6.05227518081665
    6. 'sys' → logprob: -6.17727518081665
    7. ':
' → logprob: -6.17727518081665
    8. 'import' → logprob: -8.302275657653809
    9. ' :
' → logprob: -8.427275657653809
    10. ' input' → logprob: -8.552275657653809

Token 91: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.22135280072689056
    2. 'sys' (adapté à ' sys') → logprob: -2.3463528156280518
    3. ' input' → logprob: -3.0963528156280518
    4. '   ' → logprob: -3.9713528156280518
    5. ' import' → logprob: -4.471352577209473
    6. 'import' → logprob: -4.846352577209473
    7. 'input' → logprob: -5.096352577209473
    8. 'CONST' → logprob: -6.221352577209473
    9. ' CONST' → logprob: -6.221352577209473
    10. ' pass' → logprob: -6.596352577209473

Token 92: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.046077851206064224
    2. '.set' → logprob: -4.046077728271484
    3. '.stdout' → logprob: -4.046077728271484
    4. '.' → logprob: -5.296077728271484
    5. '.stderr' → logprob: -5.796077728271484
    6. '.argv' → logprob: -6.546077728271484
    7. '.exit' → logprob: -8.046077728271484
    8. '.setdefault' → logprob: -8.921077728271484
    9. ' .' → logprob: -9.796077728271484
    10. '.path' → logprob: -10.046077728271484

Token 93: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6915315389633179
    2. ' =' → logprob: -0.8165315389633179
    3. '.readline' → logprob: -3.3165316581726074
    4. '=open' → logprob: -4.066531658172607
    5. '.read' → logprob: -5.816531658172607
    6. '.' → logprob: -8.94153118133545
    7. '=sys' → logprob: -8.94153118133545
    8. '.seek' → logprob: -9.31653118133545
    9. '.write' → logprob: -9.44153118133545
    10. ' ' → logprob: -9.56653118133545

Token 94: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.2014327198266983
    2. ' open' → logprob: -1.701432704925537
    3. 'sys' → logprob: -11.326433181762695
    4. '	open' → logprob: -12.201433181762695
    5. 'os' → logprob: -13.826433181762695
    6. ' sys' → logprob: -14.201433181762695
    7. 'io' → logprob: -14.701433181762695
    8. '=open' → logprob: -15.701433181762695
    9. '   ' → logprob: -16.076433181762695
    10. ' ' → logprob: -17.076433181762695

Token 95: '("_' (ID: 35483)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3290157914161682
    2. '('' → logprob: -1.7040157318115234
    3. '(' → logprob: -2.3290157318115234
    4. '("/' → logprob: -8.079015731811523
    5. '("./' → logprob: -8.079015731811523
    6. '("../' → logprob: -9.329015731811523
    7. '('./' → logprob: -9.579015731811523
    8. ' ("' → logprob: -9.704015731811523
    9. '(os' → logprob: -9.829015731811523
    10. '('/' → logprob: -10.454015731811523

Token 96: 'in' (ID: 258)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.012169597670435905
    2. 'local' → logprob: -5.262169361114502
    3. '_input' → logprob: -5.762169361114502
    4. 'in' → logprob: -7.262169361114502
    5. 'inputs' → logprob: -7.512169361114502
    6. 'test' → logprob: -7.637169361114502
    7. 'tests' → logprob: -7.887169361114502
    8. 'INPUT' → logprob: -8.51216983795166
    9. '.input' → logprob: -8.63716983795166
    10. 'temp' → logprob: -8.76216983795166

Token 97: '.txt' (ID: 7186)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.001559258671477437
    2. 'puts' → logprob: -6.501559257507324
    3. '.txt' → logprob: -10.626559257507324
    4. 'p' → logprob: -10.751559257507324
    5. '.' → logprob: -11.751559257507324
    6. '_put' → logprob: -13.876559257507324
    7. 'PUT' → logprob: -14.376559257507324
    8. 'pu' → logprob: -15.126559257507324
    9. '.py' → logprob: -15.126559257507324
    10. 'pt' → logprob: -15.126559257507324

Token 98: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.15857304632663727
    2. '","' → logprob: -2.2835731506347656
    3. '")' → logprob: -3.6585731506347656
    4. ',' → logprob: -4.408573150634766
    5. '"' → logprob: -5.658573150634766
    6. ')' → logprob: -6.158573150634766
    7. ',"' → logprob: -6.908573150634766
    8. '',' → logprob: -9.408573150634766
    9. '",'' → logprob: -10.158573150634766
    10. '','' → logprob: -11.158573150634766

Token 99: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.19059942662715912
    2. ' "' → logprob: -2.4405994415283203
    3. ''r' → logprob: -2.6905994415283203
    4. 'r' → logprob: -4.19059944152832
    5. '"text' → logprob: -7.31559944152832
    6. ''' → logprob: -7.56559944152832
    7. ' '' → logprob: -7.56559944152832
    8. ''t' → logprob: -8.06559944152832
    9. '"encoding' → logprob: -8.06559944152832
    10. '"os' → logprob: -8.56559944152832

Token 100: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0015056940028443933
    2. 'rt' → logprob: -6.5015058517456055
    3. ' r' → logprob: -13.876505851745605
    4. 't' → logprob: -14.001505851745605
    5. 'read' → logprob: -14.251505851745605
    6. 'w' → logprob: -14.876505851745605
    7. 'rb' → logprob: -14.876505851745605
    8. '"' → logprob: -16.87650489807129
    9. '")' → logprob: -17.12650489807129
    10. '```' → logprob: -17.25150489807129

Token 101: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.01259594690054655
    2. ')' → logprob: -4.387596130371094
    3. '")
' → logprob: -9.887596130371094
    4. '')' → logprob: -11.512596130371094
    5. ')")' → logprob: -11.512596130371094
    6. '"' → logprob: -11.637596130371094
    7. ' )' → logprob: -13.512596130371094
    8. ')
' → logprob: -13.637596130371094
    9. ' ")' → logprob: -14.137596130371094
    10. 'r' → logprob: -14.762596130371094

Token 102: 'sys' (ID: 17324)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.5937860012054443
    2. 'sys' → logprob: -1.8437860012054443
    3. 'else' → logprob: -1.9687860012054443
    4. '#' → logprob: -2.2187860012054443
    5. 'n' → logprob: -2.8437860012054443
    6. 'def' → logprob: -3.0937860012054443
    7. '    
' → logprob: -3.2187860012054443
    8. '
' → logprob: -3.3437860012054443
    9. '\n' → logprob: -3.3437860012054443
    10. 'elif' → logprob: -3.8437860012054443

Token 103: '.set' (ID: 1230)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.46863657236099243
    2. '.stdout' → logprob: -1.2186365127563477
    3. '.' → logprob: -2.7186365127563477
    4. '.exit' → logprob: -4.468636512756348
    5. '.stderr' → logprob: -7.593636512756348
    6. '.argv' → logprob: -7.968636512756348
    7. '.setdefault' → logprob: -9.343636512756348
    8. '.std' → logprob: -9.468636512756348
    9. '.readline' → logprob: -11.093636512756348
    10. '.set' → logprob: -11.218636512756348

Token 104: 'rec' (ID: 9285)
  Prédit: 'ursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.5957386493682861
    2. 'rec' → logprob: -0.8457386493682861
    3. '_rec' → logprob: -4.595738410949707
    4. '_limit' → logprob: -5.720738410949707
    5. 'limit' → logprob: -5.845738410949707
    6. ' recursion' → logprob: -5.970738410949707
    7. 'set' → logprob: -9.095738410949707
    8. 'lection' → logprob: -9.220738410949707
    9. 'ault' → logprob: -9.720738410949707
    10. '_' → logprob: -9.970738410949707

Token 105: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -2.45848218582978e-06
    2. 'urs' → logprob: -14.12500286102295
    3. 'usion' → logprob: -14.50000286102295
    4. 'limit' → logprob: -14.50000286102295
    5. '_limit' → logprob: -14.62500286102295
    6. 'ursive' → logprob: -15.50000286102295
    7. 'ur' → logprob: -17.125001907348633
    8. 'ursor' → logprob: -17.625001907348633
    9. '_' → logprob: -17.875001907348633
    10. 'ision' → logprob: -18.500001907348633

Token 106: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.0564331205387134e-05
    2. '_limit' → logprob: -11.50001049041748
    3. 'lim' → logprob: -16.250011444091797
    4. 'depth' → logprob: -16.750011444091797
    5. '(limit' → logprob: -16.750011444091797
    6. ' limit' → logprob: -17.875011444091797
    7. '.limit' → logprob: -18.125011444091797
    8. 'imit' → logprob: -18.875011444091797
    9. 'Limit' → logprob: -18.875011444091797
    10. '-' → logprob: -19.375011444091797

Token 107: '(CON' (ID: 63333)
  Prédit: '(CON'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(CON' → logprob: -0.02325456403195858
    2. '(' → logprob: -3.773254632949829
    3. '(const' → logprob: -11.89825439453125
    4. '(Const' → logprob: -14.39825439453125
    5. '(
' → logprob: -14.52325439453125
    6. '((' → logprob: -14.52325439453125
    7. ' (' → logprob: -15.14825439453125
    8. '(C' → logprob: -15.27325439453125
    9. '(CONFIG' → logprob: -16.39825439453125
    10. '(COM' → logprob: -17.14825439453125

Token 108: 'ST' (ID: 1117)
  Prédit: 'ST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: 0.0
    2. 'S' → logprob: -17.375
    3. 'T' → logprob: -18.0
    4. '**' → logprob: -19.125
    5. '

' → logprob: -19.5
    6. ' ST' → logprob: -19.625
    7. '
' → logprob: -19.875
    8. 'СТ' → logprob: -19.875
    9. 'st' → logprob: -20.5
    10. '   ' → logprob: -20.5

Token 109: '_INPUT' (ID: 47683)
  Prédit: '_INPUT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INPUT' → logprob: -3.4121114822482923e-06
    2. ' _' → logprob: -13.375003814697266
    3. '_input' → logprob: -14.625003814697266
    4. 'INPUT' → logprob: -15.250003814697266
    5. '```' → logprob: -15.250003814697266
    6. '_OUTPUT' → logprob: -15.375003814697266
    7. '_' → logprob: -15.625003814697266
    8. ')_' → logprob: -16.000003814697266
    9. '_Input' → logprob: -16.375003814697266
    10. '\Input' → logprob: -16.500003814697266

Token 110: '_RE' (ID: 4375)
  Prédit: '_RE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_RE' → logprob: -0.00250217504799366
    2. '_LIMIT' → logprob: -6.002501964569092
    3. '_REC' → logprob: -11.12750244140625
    4. 'RE' → logprob: -11.62750244140625
    5. '_INFINITY' → logprob: -13.75250244140625
    6. '_RES' → logprob: -14.87750244140625
    7. '```' → logprob: -15.50250244140625
    8. '\' → logprob: -15.62750244140625
    9. '_' → logprob: -16.00250244140625
    10. '	RE' → logprob: -16.00250244140625

Token 111: 'CUR' (ID: 53580)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3888593912124634
    2. 'CUR' → logprob: -1.1388593912124634
    3. 'URS' → logprob: -6.888859272003174
    4. 'ursion' → logprob: -8.138859748840332
    5. 'c' → logprob: -8.138859748840332
    6. 'CUS' → logprob: -8.888859748840332
    7. 'RS' → logprob: -9.763859748840332
    8. 'S' → logprob: -10.513859748840332
    9. '```' → logprob: -10.513859748840332
    10. '**' → logprob: -11.138859748840332

Token 112: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00024025145103223622
    2. '```' → logprob: -9.750240325927734
    3. 'TION' → logprob: -10.500240325927734
    4. 'ION' → logprob: -10.625240325927734
    5. 'SSION' → logprob: -11.000240325927734
    6. '``' → logprob: -11.250240325927734
    7. 'LIMIT' → logprob: -11.250240325927734
    8. '   ' → logprob: -11.625240325927734
    9. 's' → logprob: -11.750240325927734
    10. '**' → logprob: -11.750240325927734

Token 113: 'ION' (ID: 2044)
  Prédit: 'ION'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ION' → logprob: -0.025311434641480446
    2. 'L' → logprob: -5.025311470031738
    3. 'S' → logprob: -5.150311470031738
    4. '_LIMIT' → logprob: -5.525311470031738
    5. 'LIMIT' → logprob: -6.025311470031738
    6. 'ursion' → logprob: -6.275311470031738
    7. 'TION' → logprob: -7.150311470031738
    8. '```' → logprob: -7.400311470031738
    9. 'ON' → logprob: -7.525311470031738
    10. 'Limit' → logprob: -7.525311470031738

Token 114: '_LIMIT' (ID: 64862)
  Prédit: 'LIMIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIMIT' → logprob: -0.2826094627380371
    2. '_LIMIT' → logprob: -1.407609462738037
    3. 'Limit' → logprob: -7.032609462738037
    4. 'T' → logprob: -8.532609939575195
    5. 'MIT' → logprob: -8.907609939575195
    6. 'IMIT' → logprob: -9.532609939575195
    7. '```' → logprob: -10.032609939575195
    8. 'IT' → logprob: -10.282609939575195
    9. 'limit' → logprob: -10.532609939575195
    10. 'L' → logprob: -10.907609939575195

Token 115: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ' )' → logprob: -12.875003814697266
    3. ')
' → logprob: -14.375003814697266
    4. '))' → logprob: -15.250003814697266
    5. ')

' → logprob: -17.250003814697266
    6. ')`' → logprob: -18.125003814697266
    7. '),' → logprob: -18.375003814697266
    8. ')}' → logprob: -18.625003814697266
    9. '```' → logprob: -18.625003814697266
    10. ')
' → logprob: -18.875003814697266

Token 116: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06122724711894989
    2. '\n' → logprob: -3.186227321624756
    3. '
' → logprob: -5.186227321624756
    4. '\' → logprob: -5.561227321624756
    5. '#' → logprob: -5.811227321624756
    6. 'n' → logprob: -5.811227321624756
    7. 'input' → logprob: -7.811227321624756
    8. 'class' → logprob: -7.811227321624756
    9. 'import' → logprob: -8.186226844787598
    10. '```' → logprob: -8.436226844787598

Token 117: ' Input' (ID: 10090)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015485897660255432
    2. 'from' → logprob: -5.140485763549805
    3. 'class' → logprob: -5.390485763549805
    4. ' def' → logprob: -5.640485763549805
    5. 'import' → logprob: -7.515485763549805
    6. ' class' → logprob: -8.265485763549805
    7. '#' → logprob: -8.640485763549805
    8. 'input' → logprob: -9.015485763549805
    9. ' from' → logprob: -9.515485763549805
    10. '_' → logprob: -10.765485763549805

Token 118: ' parsing' (ID: 51039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23231421411037445
    2. '=' → logprob: -2.482314109802246
    3. '_data' → logprob: -2.607314109802246
    4. '()' → logprob: -3.357314109802246
    5. 's' → logprob: -5.232314109802246
    6. '_' → logprob: -5.732314109802246
    7. '_lines' → logprob: -6.107314109802246
    8. '_line' → logprob: -6.482314109802246
    9. 'data' → logprob: -6.732314109802246
    10. '_str' → logprob: -8.357314109802246

Token 119: ' with' (ID: 483)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.15564009547233582
    2. 'input' → logprob: -2.780640125274658
    3. 'def' → logprob: -3.280640125274658
    4. 'n' → logprob: -3.780640125274658
    5. 'for' → logprob: -4.280640125274658
    6. 'import' → logprob: -7.155640125274658
    7. 's' → logprob: -7.280640125274658
    8. 'line' → logprob: -7.405640125274658
    9. ' data' → logprob: -7.530640125274658
    10. '_data' → logprob: -7.905640125274658

Token 120: ' systematic' (ID: 62813)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.7236396670341492
    2. 'sys' → logprob: -0.8486396670341492
    3. 'bis' → logprob: -3.848639726638794
    4. 'input' → logprob: -4.098639488220215
    5. ' input' → logprob: -4.348639488220215
    6. ' bis' → logprob: -4.848639488220215
    7. 'def' → logprob: -5.098639488220215
    8. 'split' → logprob: -5.348639488220215
    9. '=sys' → logprob: -6.098639488220215
    10. ' def' → logprob: -6.348639488220215

Token 121: ' variable' (ID: 11076)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'token' → logprob: -1.1884825229644775
    2. 'def' → logprob: -1.6884825229644775
    3. ' token' → logprob: -2.1884825229644775
    4. ' splitting' → logprob: -2.5634825229644775
    5. ' methods' → logprob: -3.1884825229644775
    6. '_token' → logprob: -3.4384825229644775
    7. 'split' → logprob: -3.4384825229644775
    8. 'tokens' → logprob: -3.5634825229644775
    9. ' tokens' → logprob: -4.063482284545898
    10. ' def' → logprob: -4.188482284545898

Token 122: ' naming' (ID: 64882)
  Prédit: 'names'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'names' → logprob: -1.5188919305801392
    2. 's' → logprob: -1.7688919305801392
    3. ' =' → logprob: -1.7688919305801392
    4. '_names' → logprob: -2.0188918113708496
    5. '_name' → logprob: -2.6438918113708496
    6. ' splitting' → logprob: -2.7688918113708496
    7. ' names' → logprob: -3.5188918113708496
    8. '=' → logprob: -3.6438918113708496
    9. ' assignment' → logprob: -3.8938918113708496
    10. 'name' → logprob: -4.01889181137085

Token 123: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6285154223442078
    2. 'data' → logprob: -1.8785154819488525
    3. 'input' → logprob: -2.0035154819488525
    4. 'a' → logprob: -3.1285154819488525
    5. 'def' → logprob: -3.3785154819488525
    6. 'line' → logprob: -3.7535154819488525
    7. 'for' → logprob: -3.8785154819488525
    8. 'N' → logprob: -4.253515243530273
    9. 'lines' → logprob: -5.003515243530273
    10. '_' → logprob: -5.128515243530273

Token 124: 'var' (ID: 1465)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43462640047073364
    2. 'n' → logprob: -1.8096263408660889
    3. 'input' → logprob: -1.8096263408660889
    4. 'N' → logprob: -4.184626579284668
    5. 'data' → logprob: -5.559626579284668
    6. '_input' → logprob: -6.934626579284668
    7. 'T' → logprob: -7.184626579284668
    8. 'raw' → logprob: -7.184626579284668
    9. 'a' → logprob: -7.434626579284668
    10. '_' → logprob: -8.184626579284668

Token 125: '_num' (ID: 9834)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4392743706703186
    2. '_input' → logprob: -1.5642743110656738
    3. '_name' → logprob: -2.314274311065674
    4. 'iable' → logprob: -3.939274311065674
    5. ' =' → logprob: -4.814274311065674
    6. '_i' → logprob: -5.189274311065674
    7. '_list' → logprob: -5.939274311065674
    8. '_names' → logprob: -6.189274311065674
    9. 'i' → logprob: -6.314274311065674
    10. '_' → logprob: -6.439274311065674

Token 126: '_nodes' (ID: 34593)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06529327481985092
    2. ' =' → logprob: -3.315293312072754
    3. 'ber' → logprob: -4.565293312072754
    4. '_vars' → logprob: -4.940293312072754
    5. '_inputs' → logprob: -5.690293312072754
    6. '=' → logprob: -6.565293312072754
    7. '_items' → logprob: -6.815293312072754
    8. 'bers' → logprob: -7.190293312072754
    9. '_input' → logprob: -7.190293312072754
    10. '_lines' → logprob: -7.315293312072754

Token 127: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3092022240161896
    2. ',' → logprob: -1.8092021942138672
    3. '=' → logprob: -2.309202194213867
    4. ' ,' → logprob: -5.934202194213867
    5. ' ' → logprob: -9.434202194213867
    6. '=int' → logprob: -10.684202194213867
    7. 's' → logprob: -10.934202194213867
    8. '   ' → logprob: -10.934202194213867
    9. '_' → logprob: -10.934202194213867
    10. '  ' → logprob: -11.559202194213867

Token 128: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.20382457971572876
    2. ' var' → logprob: -1.703824520111084
    3. '=' → logprob: -6.578824520111084
    4. ' =' → logprob: -7.078824520111084
    5. '_var' → logprob: -9.328824996948242
    6. 'input' → logprob: -11.078824996948242
    7. '_' → logprob: -11.453824996948242
    8. ',' → logprob: -11.703824996948242
    9. ' ' → logprob: -11.703824996948242
    10. ',var' → logprob: -11.703824996948242

Token 129: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.013227052055299282
    2. '_edges' → logprob: -4.3882269859313965
    3. '_' → logprob: -7.5132269859313965
    4. '_nodes' → logprob: -10.013227462768555
    5. 'num' → logprob: -10.888227462768555
    6. '_edge' → logprob: -11.013227462768555
    7. '_input' → logprob: -11.138227462768555
    8. '_var' → logprob: -11.888227462768555
    9. '_total' → logprob: -12.013227462768555
    10. '_nums' → logprob: -12.263227462768555

Token 130: '_ranges' (ID: 155774)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0005948548787273467
    2. '_queries' → logprob: -7.8755950927734375
    3. 'edges' → logprob: -10.000595092773438
    4. '_paths' → logprob: -10.250595092773438
    5. '_' → logprob: -10.500595092773438
    6. '_nodes' → logprob: -10.750595092773438
    7. '_neighbors' → logprob: -11.125595092773438
    8. '_elements' → logprob: -11.750595092773438
    9. '_children' → logprob: -11.750595092773438
    10. '_ed' → logprob: -12.250595092773438

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14369788765907288
    2. '=' → logprob: -2.01869797706604
    3. ',' → logprob: -6.893697738647461
    4. ' ' → logprob: -12.518697738647461
    5. '=input' → logprob: -13.268697738647461
    6. ' ,' → logprob: -13.518697738647461
    7. '=int' → logprob: -14.643697738647461
    8. ' ' → logprob: -15.143697738647461
    9. ' =
' → logprob: -15.768697738647461
    10. '=sys' → logprob: -16.01869773864746

Token 132: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.02056559920310974
    2. 'map' → logprob: -3.8955655097961426
    3. ' list' → logprob: -11.7705659866333
    4. '[' → logprob: -12.1455659866333
    5. '	map' → logprob: -12.5205659866333
    6. ' ' → logprob: -12.8955659866333
    7. ' [' → logprob: -13.6455659866333
    8. 'list' → logprob: -13.7705659866333
    9. '(map' → logprob: -14.1455659866333
    10. ' ' → logprob: -14.5205659866333

Token 133: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0012822567950934172
    2. '(' → logprob: -6.751282215118408
    3. 'int' → logprob: -9.126282691955566
    4. '(input' → logprob: -13.001282691955566
    5. '[int' → logprob: -15.501282691955566
    6. '(
' → logprob: -15.626282691955566
    7. '<int' → logprob: -15.626282691955566
    8. '=int' → logprob: -16.00128173828125
    9. '(lambda' → logprob: -16.37628173828125
    10. 'input' → logprob: -16.62628173828125

Token 134: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.12143278867006302
    2. '(input' → logprob: -2.7464327812194824
    3. 'sys' → logprob: -3.6214327812194824
    4. 'input' → logprob: -4.496432781219482
    5. ')' → logprob: -4.746432781219482
    6. '(' → logprob: -5.746432781219482
    7. '=sys' → logprob: -8.87143325805664
    8. ',input' → logprob: -9.37143325805664
    9. ' sys' → logprob: -9.62143325805664
    10. ',' → logprob: -9.87143325805664

Token 135: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20605330169200897
    2. 'input' → logprob: -1.9560532569885254
    3. ' sys' → logprob: -3.2060532569885254
    4. ' input' → logprob: -5.456053256988525
    5. '   ' → logprob: -12.831053733825684
    6. '(sys' → logprob: -12.956053733825684
    7. '=sys' → logprob: -13.581053733825684
    8. ')' → logprob: -13.706053733825684
    9. 'stdin' → logprob: -14.831053733825684
    10. '	sys' → logprob: -15.206053733825684

Token 136: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.935296834039036e-06
    2. 'stdin' → logprob: -12.87500286102295
    3. '.argv' → logprob: -16.125003814697266
    4. '(stdin' → logprob: -16.625003814697266
    5. '.readline' → logprob: -17.000003814697266
    6. '.std' → logprob: -17.375003814697266
    7. '.next' → logprob: -18.250003814697266
    8. ' stdin' → logprob: -19.125003814697266
    9. ' .' → logprob: -19.375003814697266
    10. '.stdout' → logprob: -19.625003814697266

Token 137: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.319370302458992e-06
    2. '.read' → logprob: -12.375005722045898
    3. '.' → logprob: -14.000005722045898
    4. '.readlines' → logprob: -15.500005722045898
    5. ').' → logprob: -17.1250057220459
    6. '.buffer' → logprob: -18.2500057220459
    7. '.stdin' → logprob: -18.2500057220459
    8. ' .' → logprob: -18.3750057220459
    9. ')' → logprob: -18.3750057220459
    10. '.next' → logprob: -19.6250057220459

Token 138: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.002482553943991661
    2. '.read' → logprob: -6.0024824142456055
    3. '.readlines' → logprob: -12.127482414245605
    4. '.' → logprob: -14.252482414245605
    5. '.decode' → logprob: -15.252482414245605
    6. '.peek' → logprob: -15.752482414245605
    7. '.recv' → logprob: -15.877482414245605
    8. ' .' → logprob: -16.377483367919922
    9. '.raw' → logprob: -17.127483367919922
    10. ').' → logprob: -17.252483367919922

Token 139: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00032712158281356096
    2. '())' → logprob: -8.375327110290527
    3. '()' → logprob: -9.250327110290527
    4. '(' → logprob: -15.500327110290527
    5. ' ().' → logprob: -15.750327110290527
    6. '()[' → logprob: -17.125328063964844
    7. '()
' → logprob: -17.875328063964844
    8. '()]' → logprob: -18.500328063964844
    9. ' ())' → logprob: -19.000328063964844
    10. '（）' → logprob: -19.000328063964844

Token 140: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.82369464635849
    2. 'decode' → logprob: -0.82369464635849
    3. 'strip' → logprob: -2.3236947059631348
    4. 'rstrip' → logprob: -3.8236947059631348
    5. 'read' → logprob: -5.948694705963135
    6. ')' → logprob: -11.698694229125977
    7. '```' → logprob: -13.198694229125977
    8. ' split' → logprob: -13.323694229125977
    9. ' decode' → logprob: -13.573694229125977
    10. '.decode' → logprob: -13.698694229125977

Token 141: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0015491410158574581
    2. '()' → logprob: -6.501549243927002
    3. '(' → logprob: -10.751548767089844
    4. ')' → logprob: -11.251548767089844
    5. '())
' → logprob: -12.626548767089844
    6. 'b' → logprob: -12.626548767089844
    7. ' ())' → logprob: -13.251548767089844
    8. '(),' → logprob: -13.626548767089844
    9. '()]' → logprob: -14.251548767089844
    10. '()))' → logprob: -14.251548767089844

Token 142: 'list' (ID: 2641)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.05566150322556496
    2. '
' → logprob: -3.30566143989563
    3. ')' → logprob: -4.680661678314209
    4. '\n' → logprob: -5.930661678314209
    5. '  
' → logprob: -7.180661678314209
    6. ' var' → logprob: -7.180661678314209
    7. '#' → logprob: -7.805661678314209
    8. '()' → logprob: -7.805661678314209
    9. ' 
' → logprob: -7.930661678314209
    10. 'tokens' → logprob: -7.930661678314209

Token 143: '_pair' (ID: 34819)
  Prédit: '_ranges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ranges' → logprob: -0.7634215950965881
    2. '_nodes' → logprob: -0.8884215950965881
    3. '_num' → logprob: -3.1384215354919434
    4. '_' → logprob: -3.6384215354919434
    5. '_var' → logprob: -3.6384215354919434
    6. '_of' → logprob: -4.513421535491943
    7. '_points' → logprob: -5.513421535491943
    8. '_edges' → logprob: -5.888421535491943
    9. '_node' → logprob: -6.138421535491943
    10. '_inter' → logprob: -6.513421535491943

Token 144: '_node' (ID: 11390)
  Prédit: '_ranges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ranges' → logprob: -0.05383465066552162
    2. 's' → logprob: -3.0538346767425537
    3. '_nodes' → logprob: -6.053834438323975
    4. '_of' → logprob: -7.303834438323975
    5. '_range' → logprob: -7.553834438323975
    6. '_edges' → logprob: -8.053834915161133
    7. '_s' → logprob: -8.178834915161133
    8. '_inter' → logprob: -8.303834915161133
    9. '_points' → logprob: -8.428834915161133
    10. '_pairs' → logprob: -8.428834915161133

Token 145: '_states' (ID: 53795)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016263917088508606
    2. '_ranges' → logprob: -4.141263961791992
    3. 'ranges' → logprob: -9.766263961791992
    4. '_s' → logprob: -10.016263961791992
    5. '_indices' → logprob: -10.266263961791992
    6. '_range' → logprob: -10.516263961791992
    7. ' =' → logprob: -10.891263961791992
    8. '_pairs' → logprob: -11.641263961791992
    9. '_indexes' → logprob: -12.016263961791992
    10. 'Ranges' → logprob: -12.391263961791992

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020754072815179825
    2. '=' → logprob: -3.895754098892212
    3. 's' → logprob: -9.645753860473633
    4. '=[]' → logprob: -9.645753860473633
    5. ',' → logprob: -9.895753860473633
    6. '_pairs' → logprob: -11.895753860473633
    7. '_states' → logprob: -12.020753860473633
    8. '_' → logprob: -12.270753860473633
    9. '[]' → logprob: -12.395753860473633
    10. '_ranges' → logprob: -12.770753860473633

Token 147: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5802996158599854
    2. '[list' → logprob: -0.8302996158599854
    3. '[int' → logprob: -6.705299377441406
    4. '[var' → logprob: -7.080299377441406
    5. '[]' → logprob: -7.205299377441406
    6. '[List' → logprob: -7.580299377441406
    7. '[array' → logprob: -7.705299377441406
    8. '[
' → logprob: -8.455299377441406
    9. '[b' → logprob: -9.455299377441406
    10. '[str' → logprob: -9.580299377441406

Token 148: 'list' (ID: 2641)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.001933277933858335
    2. 'list' → logprob: -6.5019330978393555
    3. ' tuple' → logprob: -7.8769330978393555
    4. 'map' → logprob: -10.001933097839355
    5. '(tuple' → logprob: -12.751933097839355
    6. ']' → logprob: -13.251933097839355
    7. '   ' → logprob: -14.126933097839355
    8. '
' → logprob: -14.751933097839355
    9. ' list' → logprob: -16.876934051513672
    10. '  ' → logprob: -17.001934051513672

Token 149: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.000961362209636718
    2. '(' → logprob: -7.3759613037109375
    3. 'map' → logprob: -8.875961303710938
    4. '()' → logprob: -9.125961303710938
    5. '()]' → logprob: -10.125961303710938
    6. '(sys' → logprob: -10.750961303710938
    7. ']' → logprob: -11.000961303710938
    8. '(int' → logprob: -13.000961303710938
    9. '(
' → logprob: -13.250961303710938
    10. ' map' → logprob: -13.500961303710938

Token 150: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0073291524313390255
    2. 'int' → logprob: -5.132328987121582
    3. '(' → logprob: -7.132328987121582
    4. ',int' → logprob: -8.507328987121582
    5. ']int' → logprob: -8.757328987121582
    6. ')' → logprob: -9.257328987121582
    7. '=int' → logprob: -9.632328987121582
    8. '<int' → logprob: -10.382328987121582
    9. '[int' → logprob: -10.882328987121582
    10. ' int' → logprob: -11.757328987121582

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11906348913908005
    2. '(sys' → logprob: -2.244063377380371
    3. 'sys' → logprob: -5.119063377380371
    4. '=sys' → logprob: -9.369063377380371
    5. ' ,' → logprob: -9.994063377380371
    6. '(),' → logprob: -10.119063377380371
    7. ' sys' → logprob: -10.744063377380371
    8. ',
' → logprob: -10.994063377380371
    9. '(' → logprob: -11.369063377380371
    10. '	sys' → logprob: -11.869063377380371

Token 152: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.003190309274941683
    2. ' sys' → logprob: -5.753190517425537
    3. ')' → logprob: -12.128190040588379
    4. '(sys' → logprob: -12.628190040588379
    5. '=sys' → logprob: -13.753190040588379
    6. '	sys' → logprob: -13.878190040588379
    7. '...)' → logprob: -14.628190040588379
    8. ',' → logprob: -15.003190040588379
    9. '.sys' → logprob: -15.503190040588379
    10. '...' → logprob: -15.628190040588379

Token 153: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.3358446166384965e-05
    2. '.stdout' → logprob: -10.500053405761719
    3. 'stdin' → logprob: -11.375053405761719
    4. '.sys' → logprob: -11.875053405761719
    5. '=sys' → logprob: -12.375053405761719
    6. '.stderr' → logprob: -13.625053405761719
    7. 'sys' → logprob: -14.375053405761719
    8. '.buffer' → logprob: -14.500053405761719
    9. '(stdin' → logprob: -15.625053405761719
    10. '.std' → logprob: -16.00005340576172

Token 154: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.019184499979019165
    2. '.readline' → logprob: -4.019184589385986
    3. '.stdin' → logprob: -7.019184589385986
    4. 'buffer' → logprob: -9.644184112548828
    5. '=sys' → logprob: -10.394184112548828
    6. '.sys' → logprob: -10.519184112548828
    7. 'sys' → logprob: -12.394184112548828
    8. '.stdout' → logprob: -12.519184112548828
    9. '	buffer' → logprob: -13.644184112548828
    10. '().' → logprob: -13.894184112548828

Token 155: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.531315314830863e-06
    2. '.readlines' → logprob: -12.750003814697266
    3. ' readline' → logprob: -14.500003814697266
    4. '.read' → logprob: -15.875003814697266
    5. 'read' → logprob: -17.625003814697266
    6. '.rstrip' → logprob: -21.125003814697266
    7. '().' → logprob: -21.500003814697266
    8. '.decode' → logprob: -21.500003814697266
    9. ')' → logprob: -21.500003814697266
    10. '.' → logprob: -21.875003814697266

Token 156: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.546478935983032e-05
    2. '()' → logprob: -10.625025749206543
    3. ' ().' → logprob: -14.750025749206543
    4. '(' → logprob: -15.250025749206543
    5. '.readline' → logprob: -15.750025749206543
    6. '()
' → logprob: -16.625024795532227
    7. '()))' → logprob: -16.750024795532227
    8. '().__' → logprob: -17.000024795532227
    9. ')' → logprob: -17.125024795532227
    10. '())' → logprob: -17.125024795532227

Token 157: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.452426608419046e-05
    2. 'rstrip' → logprob: -11.12503433227539
    3. 'read' → logprob: -11.37503433227539
    4. 'decode' → logprob: -12.37503433227539
    5. 'strip' → logprob: -12.62503433227539
    6. ' split' → logprob: -14.25003433227539
    7. '.split' → logprob: -17.00003433227539
    8. '(split' → logprob: -17.87503433227539
    9. 'tolist' → logprob: -19.25003433227539
    10. 'spl' → logprob: -20.12503433227539

Token 158: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02138601616024971
    2. '))' → logprob: -4.14638614654541
    3. '()' → logprob: -5.27138614654541
    4. '())' → logprob: -9.52138614654541
    5. '().' → logprob: -9.89638614654541
    6. '()))
' → logprob: -10.52138614654541
    7. '()));' → logprob: -11.27138614654541
    8. '())).' → logprob: -11.39638614654541
    9. '())))' → logprob: -12.02138614654541
    10. '(' → logprob: -12.52138614654541

Token 159: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12726005911827087
    2. ' for' → logprob: -2.6272599697113037
    3. 'for' → logprob: -3.6272599697113037
    4. ')' → logprob: -4.127260208129883
    5. '()]' → logprob: -5.877260208129883
    6. ']' → logprob: -6.627260208129883
    7. '())' → logprob: -9.002260208129883
    8. ')]' → logprob: -9.127260208129883
    9. '	for' → logprob: -10.377260208129883
    10. '[:]' → logprob: -10.502260208129883

Token 160: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010659268125891685
    2. '_range' → logprob: -5.135659217834473
    3. ' range' → logprob: -5.635659217834473
    4. 'range' → logprob: -7.010659217834473
    5. ' _' → logprob: -8.510659217834473
    6. '_in' → logprob: -10.635659217834473
    7. ' in' → logprob: -11.385659217834473
    8. '_var' → logprob: -12.885659217834473
    9. '_tokens' → logprob: -13.135659217834473
    10. '_pair' → logprob: -14.010659217834473

Token 161: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0978398472070694
    2. 'in' → logprob: -2.847839832305908
    3. ' in' → logprob: -3.597839832305908
    4. ' range' → logprob: -4.847839832305908
    5. '(range' → logprob: -12.472840309143066
    6. '_' → logprob: -13.472840309143066
    7. '  ' → logprob: -13.597840309143066
    8. '	range' → logprob: -14.347840309143066
    9. ' ' → logprob: -14.847840309143066
    10. 'var' → logprob: -15.097840309143066

Token 162: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033546582562848926
    2. ' range' → logprob: -8.000335693359375
    3. '	range' → logprob: -17.125335693359375
    4. '(range' → logprob: -17.250335693359375
    5. '   ' → logprob: -19.750335693359375
    6. ' ' → logprob: -20.375335693359375
    7. 'var' → logprob: -20.625335693359375
    8. '  ' → logprob: -20.750335693359375
    9. 'rang' → logprob: -21.000335693359375
    10. '[' → logprob: -21.125335693359375

Token 163: '(var' (ID: 15816)
  Prédit: '(var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(var' → logprob: -2.2127087504486553e-05
    2. 'var' → logprob: -10.750021934509277
    3. '(' → logprob: -14.750021934509277
    4. ' var' → logprob: -16.125022888183594
    5. ')var' → logprob: -16.625022888183594
    6. '(VAR' → logprob: -18.625022888183594
    7. ' (' → logprob: -18.750022888183594
    8. '[var' → logprob: -18.875022888183594
    9. ',var' → logprob: -20.125022888183594
    10. '_var' → logprob: -20.250022888183594

Token 164: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.003179975086823106
    2. 'num' → logprob: -5.753180027008057
    3. 'Num' → logprob: -14.503179550170898
    4. '_' → logprob: -14.753179550170898
    5. '_nodes' → logprob: -15.128179550170898
    6. '_var' → logprob: -15.378179550170898
    7. ' num' → logprob: -15.753179550170898
    8. 'var' → logprob: -15.878179550170898
    9. '_NUM' → logprob: -15.878179550170898
    10. '(num' → logprob: -16.2531795501709

Token 165: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.25202682614326477
    2. '_ranges' → logprob: -1.5020267963409424
    3. '_pairs' → logprob: -10.002026557922363
    4. '_num' → logprob: -10.127026557922363
    5. 'ranges' → logprob: -11.752026557922363
    6. '_range' → logprob: -13.252026557922363
    7. '_node' → logprob: -13.752026557922363
    8. 'nodes' → logprob: -14.002026557922363
    9. '_' → logprob: -15.627026557922363
    10. ' ranges' → logprob: -16.00202751159668

Token 166: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002840537577867508
    2. ']' → logprob: -5.877840518951416
    3. ')' → logprob: -10.502840995788574
    4. '()]' → logprob: -12.252840995788574
    5. '}]' → logprob: -14.002840995788574
    6. ')],' → logprob: -14.252840995788574
    7. '])]' → logprob: -15.002840995788574
    8. ')]
' → logprob: -15.377840995788574
    9. '')]' → logprob: -15.377840995788574
    10. '])' → logprob: -15.502840995788574

Token 167: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8764566779136658
    2. '
' → logprob: -1.7514567375183105
    3. 'var' → logprob: -2.0014567375183105
    4. '#' → logprob: -2.2514567375183105
    5. '<|end|>' → logprob: -2.7514567375183105
    6. 'for' → logprob: -2.8764567375183105
    7. '[]' → logprob: -4.7514567375183105
    8. '```' → logprob: -5.0014567375183105
    9. ')' → logprob: -5.2514567375183105
    10. '[
' → logprob: -5.6264567375183105

Token 168: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.02390403114259243
    2. '_ranges' → logprob: -4.273903846740723
    3. '_range' → logprob: -5.023903846740723
    4. '_pairs' → logprob: -6.898903846740723
    5. '_' → logprob: -7.023903846740723
    6. '_inter' → logprob: -8.148903846740723
    7. '_interval' → logprob: -9.273903846740723
    8. '_token' → logprob: -9.648903846740723
    9. '_query' → logprob: -9.898903846740723
    10. '_states' → logprob: -10.523903846740723

Token 169: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.08325892686843872
    2. '_node' → logprob: -2.833258867263794
    3. '_ranges' → logprob: -4.583259105682373
    4. '_pair' → logprob: -5.958259105682373
    5. '_query' → logprob: -5.958259105682373
    6. '_state' → logprob: -6.708259105682373
    7. '_interval' → logprob: -7.208259105682373
    8. '_edge' → logprob: -7.833259105682373
    9. '_token' → logprob: -7.958259105682373
    10. '_point' → logprob: -8.458258628845215

Token 170: '_edges' (ID: 68870)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.010226069018244743
    2. 's' → logprob: -5.010226249694824
    3. '_nodes' → logprob: -6.885226249694824
    4. ' =' → logprob: -7.510226249694824
    5. '_ranges' → logprob: -7.510226249694824
    6. '_limits' → logprob: -7.635226249694824
    7. '_state' → logprob: -8.760226249694824
    8. '_bounds' → logprob: -8.885226249694824
    9. '_node' → logprob: -8.885226249694824
    10. '=' → logprob: -9.385226249694824

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043001942336559296
    2. '=' → logprob: -3.168001890182495
    3. '=[]' → logprob: -13.543002128601074
    4. ',' → logprob: -13.918002128601074
    5. ' =
' → logprob: -15.918002128601074
    6. ' ' → logprob: -15.918002128601074
    7. 's' → logprob: -16.043001174926758
    8. ')' → logprob: -16.543001174926758
    9. '=list' → logprob: -16.918001174926758
    10. ']' → logprob: -17.168001174926758

Token 172: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.5909722447395325
    2. ' [' → logprob: -0.8409722447395325
    3. '[' → logprob: -4.215972423553467
    4. '[List' → logprob: -9.215971946716309
    5. '[b' → logprob: -11.215971946716309
    6. '[int' → logprob: -11.465971946716309
    7. '[]' → logprob: -11.840971946716309
    8. '[array' → logprob: -12.090971946716309
    9. ' ' → logprob: -12.340971946716309
    10. '[len' → logprob: -12.715971946716309

Token 173: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.619311974034645e-05
    2. 'tuple' → logprob: -10.375036239624023
    3. ' list' → logprob: -12.375036239624023
    4. 'map' → logprob: -14.625036239624023
    5. '[list' → logprob: -16.625036239624023
    6. '(list' → logprob: -17.375036239624023
    7. '
' → logprob: -17.500036239624023
    8. '[' → logprob: -17.750036239624023
    9. ' tuple' → logprob: -18.250036239624023
    10. '	list' → logprob: -18.875036239624023

Token 174: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.5014188799541444e-05
    2. 'map' → logprob: -10.500044822692871
    3. '(' → logprob: -11.250044822692871
    4. '(int' → logprob: -13.000044822692871
    5. ',map' → logprob: -14.375044822692871
    6. '(list' → logprob: -15.500044822692871
    7. '	map' → logprob: -15.750044822692871
    8. '(sys' → logprob: -15.750044822692871
    9. '(
' → logprob: -15.750044822692871
    10. '(tuple' → logprob: -15.875044822692871

Token 175: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.12127808178775e-05
    2. 'int' → logprob: -10.375051498413086
    3. '<int' → logprob: -12.000051498413086
    4. ',int' → logprob: -12.250051498413086
    5. '=int' → logprob: -12.750051498413086
    6. '[int' → logprob: -13.000051498413086
    7. '(' → logprob: -13.375051498413086
    8. ' (' → logprob: -13.750051498413086
    9. ']int' → logprob: -14.375051498413086
    10. ' int' → logprob: -14.500051498413086

Token 176: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0630791112780571
    2. ',' → logprob: -2.8130791187286377
    3. '=sys' → logprob: -7.188078880310059
    4. 'sys' → logprob: -8.063078880310059
    5. '(),' → logprob: -11.438078880310059
    6. ' ,' → logprob: -11.563078880310059
    7. ',s' → logprob: -12.313078880310059
    8. ',(' → logprob: -12.938078880310059
    9. '(' → logprob: -13.063078880310059
    10. ' sys' → logprob: -13.188078880310059

Token 177: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10024247318506241
    2. ' sys' → logprob: -2.3502423763275146
    3. '(sys' → logprob: -10.350242614746094
    4. '=sys' → logprob: -13.225242614746094
    5. '	sys' → logprob: -14.350242614746094
    6. ')' → logprob: -14.350242614746094
    7. 's' → logprob: -15.475242614746094
    8. ',' → logprob: -15.725242614746094
    9. '/sys' → logprob: -15.850242614746094
    10. '.sys' → logprob: -16.350242614746094

Token 178: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.030772676691412926
    2. '.buffer' → logprob: -3.6557726860046387
    3. '.sys' → logprob: -6.280772686004639
    4. '=sys' → logprob: -6.530772686004639
    5. '.stdout' → logprob: -7.155772686004639
    6. 'sys' → logprob: -9.03077220916748
    7. '.stderr' → logprob: -9.28077220916748
    8. 'buffer' → logprob: -9.90577220916748
    9. 'stdin' → logprob: -10.40577220916748
    10. '.std' → logprob: -11.40577220916748

Token 179: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.0005735247395932674
    2. 'buffer' → logprob: -7.500573635101318
    3. 'sys' → logprob: -11.62557315826416
    4. '.readline' → logprob: -12.25057315826416
    5. 'BUFFER' → logprob: -13.25057315826416
    6. '	buffer' → logprob: -13.25057315826416
    7. '(buffer' → logprob: -13.87557315826416
    8. '.stdin' → logprob: -14.12557315826416
    9. '_buffer' → logprob: -14.37557315826416
    10. '.sys' → logprob: -15.00057315826416

Token 180: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00381076498888433
    2. 'buffer' → logprob: -6.253810882568359
    3. '.buffer' → logprob: -6.503810882568359
    4. 'sys' → logprob: -8.75381088256836
    5. '=sys' → logprob: -8.87881088256836
    6. '(buffer' → logprob: -10.50381088256836
    7. '().' → logprob: -10.87881088256836
    8. '```' → logprob: -11.25381088256836
    9. '_buffer' → logprob: -11.62881088256836
    10. '.readlines' → logprob: -12.12881088256836

Token 181: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1041145626222715e-05
    2. '()' → logprob: -11.500011444091797
    3. '()[' → logprob: -14.875011444091797
    4. ' ().' → logprob: -15.750011444091797
    5. '()
' → logprob: -16.500011444091797
    6. '.readline' → logprob: -16.875011444091797
    7. '()).' → logprob: -17.000011444091797
    8. '())' → logprob: -17.250011444091797
    9. '()].' → logprob: -17.500011444091797
    10. '   ' → logprob: -17.875011444091797

Token 182: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.026612835004925728
    2. 'sys' → logprob: -3.6516127586364746
    3. '(sys' → logprob: -9.026613235473633
    4. 'range' → logprob: -9.526613235473633
    5. '(split' → logprob: -10.401613235473633
    6. '(' → logprob: -10.776613235473633
    7. 'read' → logprob: -11.151613235473633
    8. 'buffer' → logprob: -11.651613235473633
    9. 'skip' → logprob: -11.776613235473633
    10. '=sys' → logprob: -12.401613235473633

Token 183: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.12929773330688477
    2. '())' → logprob: -2.1292977333068848
    3. '))' → logprob: -6.379297733306885
    4. '()' → logprob: -7.504297733306885
    5. ')' → logprob: -10.129297256469727
    6. '(),' → logprob: -10.754297256469727
    7. ' ())' → logprob: -11.379297256469727
    8. '()[' → logprob: -11.879297256469727
    9. '(' → logprob: -12.129297256469727
    10. '().' → logprob: -12.254297256469727

Token 184: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15771053731441498
    2. ' for' → logprob: -2.032710552215576
    3. ')' → logprob: -4.782710552215576
    4. '()' → logprob: -5.157710552215576
    5. '(var' → logprob: -7.782710552215576
    6. 'var' → logprob: -8.407710075378418
    7. '(' → logprob: -9.532710075378418
    8. '(for' → logprob: -10.157710075378418
    9. '	for' → logprob: -10.907710075378418
    10. '(range' → logprob: -12.032710075378418

Token 185: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.24749723076820374
    2. '_' → logprob: -1.6224972009658813
    3. ' range' → logprob: -3.997497320175171
    4. ' in' → logprob: -6.747497081756592
    5. 'range' → logprob: -6.747497081756592
    6. ' var' → logprob: -6.997497081756592
    7. 'var' → logprob: -9.24749755859375
    8. '_range' → logprob: -10.12249755859375
    9. '(var' → logprob: -10.62249755859375
    10. ' ' → logprob: -10.87249755859375

Token 186: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07929203659296036
    2. ' range' → logprob: -2.579292058944702
    3. '_' → logprob: -8.454292297363281
    4. '(range' → logprob: -9.329292297363281
    5. '_range' → logprob: -9.704292297363281
    6. 'var' → logprob: -10.704292297363281
    7. ' in' → logprob: -11.454292297363281
    8. 'in' → logprob: -12.454292297363281
    9. ' _' → logprob: -13.579292297363281
    10. '	range' → logprob: -14.329292297363281

Token 187: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07890553772449493
    2. ' range' → logprob: -2.5789055824279785
    3. 'var' → logprob: -11.32890510559082
    4. '(range' → logprob: -12.57890510559082
    5. '_range' → logprob: -15.82890510559082
    6. '	range' → logprob: -16.82890510559082
    7. '_' → logprob: -17.07890510559082
    8. ' var' → logprob: -17.20390510559082
    9. ' in' → logprob: -18.07890510559082
    10. 'in' → logprob: -18.20390510559082

Token 188: '(var' (ID: 15816)
  Prédit: '(var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(var' → logprob: -5.621933451038785e-05
    2. 'var' → logprob: -11.000056266784668
    3. '(' → logprob: -11.125056266784668
    4. '(range' → logprob: -11.500056266784668
    5. 'range' → logprob: -11.500056266784668
    6. ' (' → logprob: -12.500056266784668
    7. ' range' → logprob: -15.625056266784668
    8. '(variable' → logprob: -15.750056266784668
    9. '[var' → logprob: -16.25005531311035
    10. ')var' → logprob: -16.25005531311035

Token 189: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.00266055460087955
    2. 'range' → logprob: -6.377660751342773
    3. 'num' → logprob: -7.752660751342773
    4. '_nodes' → logprob: -8.627660751342773
    5. '_var' → logprob: -8.752660751342773
    6. 'var' → logprob: -9.377660751342773
    7. '_range' → logprob: -9.752660751342773
    8. '_pairs' → logprob: -11.877660751342773
    9. 'in' → logprob: -12.002660751342773
    10. '_ranges' → logprob: -12.127660751342773

Token 190: '_ranges' (ID: 155774)
  Prédit: '_ranges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ranges' → logprob: -0.0009686299599707127
    2. 'ranges' → logprob: -7.2509684562683105
    3. '_nodes' → logprob: -8.375968933105469
    4. '_pairs' → logprob: -11.125968933105469
    5. '_edges' → logprob: -12.250968933105469
    6. '_range' → logprob: -12.375968933105469
    7. 'var' → logprob: -13.125968933105469
    8. 'range' → logprob: -13.500968933105469
    9. 'Ranges' → logprob: -14.125968933105469
    10. ' ranges' → logprob: -15.625968933105469

Token 191: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.018360992893576622
    2. ']' → logprob: -4.0183610916137695
    3. '()]' → logprob: -8.64336109161377
    4. ')' → logprob: -10.51836109161377
    5. '}]' → logprob: -12.89336109161377
    6. '])' → logprob: -13.89336109161377
    7. '])]' → logprob: -14.14336109161377
    8. ' ]' → logprob: -14.39336109161377
    9. ']
' → logprob: -14.76836109161377
    10. '')]' → logprob: -14.89336109161377

Token 192: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.687380313873291
    2. '#' → logprob: -1.187380313873291
    3. 'for' → logprob: -2.937380313873291
    4. 'var' → logprob: -2.937380313873291
    5. 'class' → logprob: -3.812380313873291
    6. 'list' → logprob: -4.062380313873291
    7. 'import' → logprob: -4.187380313873291
    8. 'result' → logprob: -4.937380313873291
    9. 'dp' → logprob: -5.562380313873291
    10. 'deque' → logprob: -5.562380313873291

Token 193: ' Pre' (ID: 4659)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.583979606628418
    2. 'def' → logprob: -1.208979606628418
    3. 'class' → logprob: -2.958979606628418
    4. 'list' → logprob: -3.583979606628418
    5. 'var' → logprob: -4.083979606628418
    6. 'result' → logprob: -4.833979606628418
    7. 'import' → logprob: -4.958979606628418
    8. 'dict' → logprob: -5.208979606628418
    9. 'dp' → logprob: -5.583979606628418
    10. 'from' → logprob: -5.833979606628418

Token 194: 'processing' (ID: 41376)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -1.081275224685669
    2. 'fix' → logprob: -1.331275224685669
    3. 'processing' → logprob: -1.456275224685669
    4. 'process' → logprob: -3.081275224685669
    5. 'sum' → logprob: -3.581275224685669
    6. 'paring' → logprob: -3.831275224685669
    7. 'd' → logprob: -4.08127498626709
    8. 'sent' → logprob: -4.58127498626709
    9. 'compute' → logprob: -4.95627498626709
    10. 'processed' → logprob: -5.08127498626709

Token 195: ' input' (ID: 3422)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 196: ' data' (ID: 1238)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8055393695831299
    2. '<|end|>' → logprob: -1.1805393695831299
    3. 'for' → logprob: -2.55553936958313
    4. 'def' → logprob: -3.18053936958313
    5. '<|end|>' → logprob: -4.180539131164551
    6. 'list' → logprob: -4.180539131164551
    7. '
' → logprob: -4.305539131164551
    8. 'max' → logprob: -4.680539131164551
    9. '```' → logprob: -4.805539131164551
    10. 'sorted' → logprob: -5.055539131164551

Token 197: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5532752275466919
    2. '<|end|>' → logprob: -1.303275227546692
    3. 'for' → logprob: -2.9282751083374023
    4. '
' → logprob: -3.5532751083374023
    5. 'max' → logprob: -4.178275108337402
    6. 'list' → logprob: -4.303275108337402
    7. 'var' → logprob: -4.803275108337402
    8. 'def' → logprob: -4.928275108337402
    9. '```' → logprob: -5.678275108337402
    10. '<|end|>' → logprob: -5.678275108337402

Token 198: 'list' (ID: 2641)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0658912658691406
    2. '#' → logprob: -1.3158912658691406
    3. 'list' → logprob: -1.8158912658691406
    4. 'var' → logprob: -3.1908912658691406
    5. 'sorted' → logprob: -3.4408912658691406
    6. '
' → logprob: -3.5658912658691406
    7. 'for' → logprob: -3.5658912658691406
    8. 'min' → logprob: -4.190891265869141
    9. 'def' → logprob: -4.690891265869141
    10. '<|end|>' → logprob: -4.815891265869141

Token 199: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.020230606198310852
    2. '_' → logprob: -4.895230770111084
    3. '_node' → logprob: -5.645230770111084
    4. '_nodes' → logprob: -5.895230770111084
    5. '_range' → logprob: -6.020230770111084
    6. '_num' → logprob: -6.770230770111084
    7. '_pairs' → logprob: -7.645230770111084
    8. '_ranges' → logprob: -8.020230293273926
    9. '_sorted' → logprob: -8.395230293273926
    10. '_indices' → logprob: -9.020230293273926

Token 200: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.2268834263086319
    2. '_range' → logprob: -1.6018834114074707
    3. '_pair' → logprob: -6.851883411407471
    4. '_nodes' → logprob: -9.101883888244629
    5. '_ranges' → logprob: -9.101883888244629
    6. '_' → logprob: -9.351883888244629
    7. '_edge' → logprob: -10.101883888244629
    8. '_state' → logprob: -11.226883888244629
    9. '_interval' → logprob: -11.601883888244629
    10. '_edges' → logprob: -11.851883888244629

Token 201: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.0003821716527454555
    2. '_ranges' → logprob: -8.625382423400879
    3. 'states' → logprob: -9.375382423400879
    4. '_state' → logprob: -10.250382423400879
    5. '_edges' → logprob: -10.625382423400879
    6. '_values' → logprob: -11.625382423400879
    7. '_nodes' → logprob: -11.875382423400879
    8. '_indices' → logprob: -12.125382423400879
    9. '_pairs' → logprob: -12.250382423400879
    10. '_weights' → logprob: -12.500382423400879

Token 202: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.02061394974589348
    2. ' =' → logprob: -4.645614147186279
    3. '<|end|>' → logprob: -5.020614147186279
    4. ',' → logprob: -6.520614147186279
    5. '=' → logprob: -7.145614147186279
    6. '[:]' → logprob: -7.520614147186279
    7. 'sort' → logprob: -7.645614147186279
    8. '[' → logprob: -8.770613670349121
    9. '_sorted' → logprob: -9.145613670349121
    10. '.append' → logprob: -9.395613670349121

Token 203: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0026571087073534727
    2. '()
' → logprob: -6.752656936645508
    3. '<|end|>' → logprob: -6.752656936645508
    4. '#' → logprob: -8.877656936645508
    5. '<|end|>' → logprob: -9.877656936645508
    6. 'def' → logprob: -10.377656936645508
    7. '(' → logprob: -10.752656936645508
    8. '()

' → logprob: -11.127656936645508
    9. '(reverse' → logprob: -11.752656936645508
    10. '();' → logprob: -11.877656936645508

Token 204: 'var' (ID: 1465)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.42395511269569397
    2. '<|end|>' → logprob: -2.173955202102661
    3. 'for' → logprob: -2.673955202102661
    4. '#' → logprob: -2.673955202102661
    5. 'var' → logprob: -3.173955202102661
    6. '
' → logprob: -3.923955202102661
    7. '```' → logprob: -5.173954963684082
    8. ')' → logprob: -5.548954963684082
    9. 'max' → logprob: -5.798954963684082
    10. '[' → logprob: -5.923954963684082

Token 205: '_node' (ID: 11390)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.1159386858344078
    2. '_prev' → logprob: -3.615938663482666
    3. '_max' → logprob: -4.365938663482666
    4. '_pair' → logprob: -4.490938663482666
    5. '_min' → logprob: -4.740938663482666
    6. '_current' → logprob: -4.740938663482666
    7. '_low' → logprob: -4.865938663482666
    8. '_left' → logprob: -5.115938663482666
    9. '_node' → logprob: -5.115938663482666
    10. '_last' → logprob: -5.615938663482666

Token 206: '_index' (ID: 7748)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.6626920700073242
    2. '_index' → logprob: -1.9126920700073242
    3. '_states' → logprob: -1.9126920700073242
    4. '_num' → logprob: -2.662692070007324
    5. '_count' → logprob: -3.537692070007324
    6. '_id' → logprob: -3.787692070007324
    7. '_pos' → logprob: -4.787692070007324
    8. '_val' → logprob: -4.787692070007324
    9. '_' → logprob: -4.912692070007324
    10. 's' → logprob: -5.037692070007324

Token 207: '_' (ID: 62)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7179543375968933
    2. ' =' → logprob: -0.8429543375968933
    3. ',' → logprob: -2.592954397201538
    4. '_' → logprob: -5.217954158782959
    5. 's' → logprob: -7.217954158782959
    6. '_map' → logprob: -8.717954635620117
    7. ')' → logprob: -9.342954635620117
    8. '_,' → logprob: -9.467954635620117
    9. ' ' → logprob: -9.592954635620117
    10. ',_' → logprob: -9.717954635620117

Token 208: 'odd' (ID: 18303)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03898667171597481
    2. ' =' → logprob: -3.2889866828918457
    3. 's' → logprob: -7.538986682891846
    4. ',' → logprob: -9.288986206054688
    5. '_map' → logprob: -9.663986206054688
    6. 'map' → logprob: -10.038986206054688
    7. 'pointer' → logprob: -10.038986206054688
    8. 'ptr' → logprob: -11.038986206054688
    9. '_pointer' → logprob: -11.413986206054688
    10. 'idx' → logprob: -11.538986206054688

Token 209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.535932183265686
    2. ',' → logprob: -1.535932183265686
    3. '=' → logprob: -1.660932183265686
    4. '_' → logprob: -4.7859320640563965
    5. 's' → logprob: -7.5359320640563965
    6. ',_' → logprob: -8.410932540893555
    7. ' ,' → logprob: -9.160932540893555
    8. '_idx' → logprob: -9.160932540893555
    9. '_,' → logprob: -9.285932540893555
    10. '_index' → logprob: -10.285932540893555

Token 210: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1233878135681152
    2. 'bis' → logprob: -1.2483878135681152
    3. '-' → logprob: -1.6233878135681152
    4. '[var' → logprob: -3.4983878135681152
    5. '[]' → logprob: -3.6233878135681152
    6. ' bis' → logprob: -3.6233878135681152
    7. '[len' → logprob: -3.7483878135681152
    8. '[' → logprob: -3.9983878135681152
    9. 'var' → logprob: -3.9983878135681152
    10. 'len' → logprob: -4.623387813568115

Token 211: '0' (ID: 15)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.8301758766174316
    2. '-' → logprob: -1.5801758766174316
    3. '0' → logprob: -1.8301758766174316
    4. '[' → logprob: -3.0801758766174316
    5. '[var' → logprob: -3.3301758766174316
    6. 'var' → logprob: -3.7051758766174316
    7. '[len' → logprob: -3.8301758766174316
    8. '[]' → logprob: -3.8301758766174316
    9. 'next' → logprob: -4.330175876617432
    10. '{}' → logprob: -4.330175876617432

Token 212: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09109926968812943
    2. 'for' → logprob: -3.341099262237549
    3. 'var' → logprob: -3.341099262237549
    4. 'while' → logprob: -4.591099262237549
    5. 'if' → logprob: -5.841099262237549
    6. '<|end|>' → logprob: -6.341099262237549
    7. '[var' → logprob: -7.466099262237549
    8. ' for' → logprob: -7.966099262237549
    9. ' while' → logprob: -9.341099739074707
    10. ' 
' → logprob: -9.591099739074707

Token 213: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23020021617412567
    2. 'for' → logprob: -1.980200171470642
    3. 'var' → logprob: -3.2302002906799316
    4. 'while' → logprob: -4.105200290679932
    5. 'if' → logprob: -4.605200290679932
    6. '<|end|>' → logprob: -7.230200290679932
    7. '[var' → logprob: -7.730200290679932
    8. '#' → logprob: -8.730199813842773
    9. ' for' → logprob: -9.730199813842773
    10. '0' → logprob: -11.105199813842773

Token 214: ' unused' (ID: 38192)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5764227509498596
    2. '<|end|>' → logprob: -1.4514226913452148
    3. 'var' → logprob: -2.451422691345215
    4. ' for' → logprob: -2.451422691345215
    5. 'while' → logprob: -4.451422691345215
    6. '
' → logprob: -4.701422691345215
    7. ' var' → logprob: -5.826422691345215
    8. '<|end|>' → logprob: -6.451422691345215
    9. '#' → logprob: -6.701422691345215
    10. ' while' → logprob: -6.826422691345215

Token 215: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 216: 'list' (ID: 2641)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.02400750108063221
    2. '
' → logprob: -3.899007558822632
    3. '<|end|>' → logprob: -6.399007320404053
    4. 'for' → logprob: -7.274007320404053
    5. '#' → logprob: -8.024007797241211
    6. '[var' → logprob: -8.399007797241211
    7. '```' → logprob: -8.774007797241211
    8. ' var' → logprob: -9.149007797241211
    9. 'list' → logprob: -9.524007797241211
    10. '<|end|>' → logprob: -9.774007797241211

Token 217: '_tuple' (ID: 53371)
  Prédit: '_pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.009441436268389225
    2. '_range' → logprob: -6.134441375732422
    3. '_node' → logprob: -6.759441375732422
    4. '_' → logprob: -7.134441375732422
    5. '_ranges' → logprob: -7.134441375732422
    6. '_inter' → logprob: -7.384441375732422
    7. '_pairs' → logprob: -7.884441375732422
    8. '_nodes' → logprob: -7.884441375732422
    9. '_sorted' → logprob: -7.884441375732422
    10. '_var' → logprob: -8.134441375732422

Token 218: '_nodes' (ID: 34593)
  Prédit: '_range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.8099258542060852
    2. '_ranges' → logprob: -1.3099257946014404
    3. '_pair' → logprob: -2.5599257946014404
    4. '_node' → logprob: -2.5599257946014404
    5. '_inter' → logprob: -3.5599257946014404
    6. '_edges' → logprob: -4.0599260330200195
    7. '_interval' → logprob: -4.3099260330200195
    8. '_edge' → logprob: -4.5599260330200195
    9. '_nodes' → logprob: -4.8099260330200195
    10. '_sorted' → logprob: -5.0599260330200195

Token 219: '_extended' (ID: 147320)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3876536786556244
    2. ' =' → logprob: -1.1376537084579468
    3. '=[]' → logprob: -7.637653827667236
    4. ',' → logprob: -8.387653350830078
    5. ')' → logprob: -11.262653350830078
    6. '<|end|>' → logprob: -11.262653350830078
    7. '[]' → logprob: -12.387653350830078
    8. '_' → logprob: -12.512653350830078
    9. '.append' → logprob: -12.512653350830078
    10. '_nodes' → logprob: -12.762653350830078

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06222053989768028
    2. '=' → logprob: -2.812220573425293
    3. '=[]' → logprob: -8.562220573425293
    4. ',' → logprob: -10.062220573425293
    5. '=list' → logprob: -12.187220573425293
    6. '.append' → logprob: -12.687220573425293
    7. '<|end|>' → logprob: -13.062220573425293
    8. '=[]
' → logprob: -13.312220573425293
    9. '=[' → logprob: -13.687220573425293
    10. '[' → logprob: -13.687220573425293

Token 221: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.03353331238031387
    2. '[]' → logprob: -3.5335333347320557
    3. '[list' → logprob: -6.533533096313477
    4. 'list' → logprob: -6.783533096313477
    5. '[' → logprob: -7.658533096313477
    6. ' [(' → logprob: -8.033533096313477
    7. '[
' → logprob: -8.408533096313477
    8. '[]
' → logprob: -10.158533096313477
    9. '[((' → logprob: -10.283533096313477
    10. ' []' → logprob: -11.033533096313477

Token 222: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8845038414001465
    2. '0' → logprob: -1.7595038414001465
    3. 'list' → logprob: -1.7595038414001465
    4. 'var' → logprob: -2.0095038414001465
    5. 'pair' → logprob: -3.5095038414001465
    6. 'v' → logprob: -4.2595038414001465
    7. 'state' → logprob: -4.2595038414001465
    8. 'node' → logprob: -4.3845038414001465
    9. 'val' → logprob: -4.7595038414001465
    10. '-' → logprob: -5.2595038414001465

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028135839966125786
    2. ' ,' → logprob: -9.37528133392334
    3. ')]' → logprob: -9.37528133392334
    4. ',
' → logprob: -10.12528133392334
    5. '0' → logprob: -10.75028133392334
    6. ',)' → logprob: -10.87528133392334
    7. ')' → logprob: -12.25028133392334
    8. '-' → logprob: -12.43778133392334
    9. 'x' → logprob: -12.43778133392334
    10. ',-' → logprob: -12.56278133392334

Token 224: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1117139533162117
    2. '-' → logprob: -2.6117138862609863
    3. 'CONST' → logprob: -4.236713886260986
    4. ' ' → logprob: -4.736713886260986
    5. ')' → logprob: -6.236713886260986
    6. '1' → logprob: -6.361713886260986
    7. ' CONST' → logprob: -6.736713886260986
    8. 'float' → logprob: -6.861713886260986
    9. ' -' → logprob: -6.861713886260986
    10. 'False' → logprob: -7.861713886260986

Token 225: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08047955483198166
    2. '-' → logprob: -2.705479621887207
    3. 'CONST' → logprob: -5.080479621887207
    4. ')' → logprob: -6.330479621887207
    5. '-CON' → logprob: -7.580479621887207
    6. 'float' → logprob: -7.955479621887207
    7. '-C' → logprob: -8.580479621887207
    8. '1' → logprob: -8.830479621887207
    9. '-inf' → logprob: -8.955479621887207
    10. '"' → logprob: -8.955479621887207

Token 226: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.015866247937083244
    2. '),' → logprob: -4.640866279602051
    3. ',' → logprob: -5.265866279602051
    4. ')' → logprob: -7.890866279602051
    5. '),
' → logprob: -8.39086627960205
    6. '),(' → logprob: -8.51586627960205
    7. ')]
' → logprob: -10.39086627960205
    8. ' )' → logprob: -10.76586627960205
    9. ')],' → logprob: -11.51586627960205
    10. ',),' → logprob: -11.51586627960205

Token 227: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31398776173591614
    2. '
' → logprob: -2.4389877319335938
    3. '<|end|>' → logprob: -2.5639877319335938
    4. ' +' → logprob: -2.9389877319335938
    5. ')' → logprob: -3.5639877319335938
    6. '+
' → logprob: -4.688987731933594
    7. ',' → logprob: -5.563987731933594
    8. '*' → logprob: -6.438987731933594
    9. ')+' → logprob: -6.438987731933594
    10. ']' → logprob: -6.438987731933594

Token 228: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0013569057919085026
    2. '[(' → logprob: -7.501357078552246
    3. ' list' → logprob: -8.001357078552246
    4. '[list' → logprob: -8.251357078552246
    5. 'tuple' → logprob: -9.126357078552246
    6. '[' → logprob: -10.001357078552246
    7. 'var' → logprob: -10.876357078552246
    8. 'sorted' → logprob: -11.001357078552246
    9. '[var' → logprob: -11.376357078552246
    10. '(list' → logprob: -13.126357078552246

Token 229: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -9.088346359931165e-07
    2. 'pair' → logprob: -14.125000953674316
    3. '_tuple' → logprob: -17.0
    4. '(pair' → logprob: -17.0
    5. '```' → logprob: -18.25
    6. '_pairs' → logprob: -18.75
    7. '_PAIR' → logprob: -18.75
    8. '_trip' → logprob: -18.75
    9. 'Pair' → logprob: -19.0
    10. '<pair' → logprob: -19.25

Token 230: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.5358694731257856e-05
    2. '_pair' → logprob: -10.500035285949707
    3. 'node' → logprob: -12.000035285949707
    4. '_nodes' → logprob: -13.375035285949707
    5. 'Node' → logprob: -17.875036239624023
    6. '_range' → logprob: -17.875036239624023
    7. 'nodes' → logprob: -18.500036239624023
    8. '_' → logprob: -18.750036239624023
    9. '_tuple' → logprob: -18.875036239624023
    10. 'pair' → logprob: -19.000036239624023

Token 231: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -1.5048530030981055e-06
    2. '_state' → logprob: -14.125001907348633
    3. 'states' → logprob: -14.250001907348633
    4. '_nodes' → logprob: -16.625001907348633
    5. '```' → logprob: -18.125001907348633
    6. ' states' → logprob: -18.500001907348633
    7. 'States' → logprob: -18.625001907348633
    8. 's' → logprob: -18.750001907348633
    9. '_s' → logprob: -19.375001907348633
    10. '_node' → logprob: -20.250001907348633

Token 232: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21938373148441315
    2. '<|end|>' → logprob: -2.094383716583252
    3. '+' → logprob: -3.344383716583252
    4. ')' → logprob: -4.719383716583252
    5. ',' → logprob: -5.219383716583252
    6. '[' → logprob: -5.469383716583252
    7. ' +' → logprob: -5.719383716583252
    8. '[
' → logprob: -5.844383716583252
    9. '#' → logprob: -6.344383716583252
    10. 'list' → logprob: -6.469383716583252

Token 233: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -2.4272752852994017e-05
    2. ' [(' → logprob: -10.75002384185791
    3. '[' → logprob: -13.00002384185791
    4. '[((' → logprob: -15.00002384185791
    5. '[list' → logprob: -17.000024795532227
    6. 'list' → logprob: -17.250024795532227
    7. '([(' → logprob: -17.375024795532227
    8. '[var' → logprob: -19.000024795532227
    9. ' ' → logprob: -19.500024795532227
    10. '[max' → logprob: -20.250024795532227

Token 234: 'CONST' (ID: 168319)
  Prédit: 'CONST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CONST' → logprob: -0.49665188789367676
    2. '10' → logprob: -1.4966518878936768
    3. '(' → logprob: -2.2466518878936768
    4. 'var' → logprob: -4.746651649475098
    5. 'const' → logprob: -4.871651649475098
    6. 'list' → logprob: -4.871651649475098
    7. '100' → logprob: -4.996651649475098
    8. '(CON' → logprob: -5.121651649475098
    9. '1' → logprob: -5.496651649475098
    10. 'sys' → logprob: -5.621651649475098

Token 235: '_INF' (ID: 173649)
  Prédit: '_INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INF' → logprob: -0.0005501718260347843
    2. '_MOD' → logprob: -7.875550270080566
    3. 'INF' → logprob: -9.375550270080566
    4. '_INPUT' → logprob: -9.750550270080566
    5. '_IN' → logprob: -11.500550270080566
    6. '_INT' → logprob: -12.375550270080566
    7. '_INFINITY' → logprob: -12.500550270080566
    8. '_inf' → logprob: -13.375550270080566
    9. ' INF' → logprob: -13.875550270080566
    10. '_ALT' → logprob: -14.000550270080566

Token 236: '_FLOAT' (ID: 53417)
  Prédit: '_INT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INT' → logprob: -0.020051153376698494
    2. ',' → logprob: -4.020051002502441
    3. '_int' → logprob: -6.770051002502441
    4. ',int' → logprob: -8.145051002502441
    5. '_FLOAT' → logprob: -8.770051002502441
    6. 'INT' → logprob: -8.770051002502441
    7. 'int' → logprob: -9.895051002502441
    8. '_Int' → logprob: -10.520051002502441
    9. ' ,' → logprob: -10.645051002502441
    10. 'Int' → logprob: -11.520051002502441

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017028623551595956
    2. ' ,' → logprob: -8.750170707702637
    3. ',
' → logprob: -12.875170707702637
    4. ')]' → logprob: -13.250170707702637
    5. ')' → logprob: -13.375170707702637
    6. ',float' → logprob: -13.625170707702637
    7. '(' → logprob: -14.375170707702637
    8. '[' → logprob: -14.750170707702637
    9. ' ' → logprob: -15.000170707702637
    10. '
' → logprob: -15.000170707702637

Token 238: ' ' (ID: 220)
  Prédit: 'CONST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CONST' → logprob: -0.54502272605896
    2. '0' → logprob: -0.92002272605896
    3. ' CONST' → logprob: -4.170022964477539
    4. ' ' → logprob: -5.295022964477539
    5. 'const' → logprob: -8.170022964477539
    6. '_CONST' → logprob: -8.170022964477539
    7. 'Const' → logprob: -8.732522964477539
    8. 'CON' → logprob: -8.982522964477539
    9. '1' → logprob: -9.795022964477539
    10. ')' → logprob: -10.232522964477539

Token 239: '0' (ID: 15)
  Prédit: 'CONST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CONST' → logprob: -0.5775761604309082
    2. '0' → logprob: -0.8275761604309082
    3. ' CONST' → logprob: -6.952576160430908
    4. 'const' → logprob: -8.70257568359375
    5. ' ' → logprob: -8.82757568359375
    6. '_CONST' → logprob: -9.20257568359375
    7. 'Const' → logprob: -9.57757568359375
    8. 'CON' → logprob: -9.95257568359375
    9. '1' → logprob: -10.07757568359375
    10. '-' → logprob: -10.57757568359375

Token 240: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003473825636319816
    2. '),' → logprob: -8.375347137451172
    3. ')' → logprob: -9.875347137451172
    4. ')]
' → logprob: -10.000347137451172
    5. ' )' → logprob: -11.375347137451172
    6. ',' → logprob: -12.750347137451172
    7. '),
' → logprob: -13.875347137451172
    8. ')],' → logprob: -14.125347137451172
    9. ')
' → logprob: -14.250347137451172
    10. ']' → logprob: -14.625347137451172

Token 241: 'list' (ID: 2641)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25293534994125366
    2. 'var' → logprob: -2.7529354095458984
    3. '[
' → logprob: -3.0029354095458984
    4. '[' → logprob: -3.6279354095458984
    5. '<|end|>' → logprob: -3.7529354095458984
    6. ')' → logprob: -4.002935409545898
    7. '(
' → logprob: -4.627935409545898
    8. 'list' → logprob: -5.377935409545898
    9. ',
' → logprob: -5.502935409545898
    10. '```' → logprob: -5.877935409545898

Token 242: '_val' (ID: 13694)
  Prédit: '_tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.18381747603416443
    2. '_pair' → logprob: -2.3088173866271973
    3. '_index' → logprob: -4.183817386627197
    4. '_indices' → logprob: -4.683817386627197
    5. '_idx' → logprob: -5.433817386627197
    6. '_num' → logprob: -5.433817386627197
    7. '_value' → logprob: -5.683817386627197
    8. '_node' → logprob: -5.683817386627197
    9. '_sorted' → logprob: -5.933817386627197
    10. '_var' → logprob: -6.183817386627197

Token 243: '_a' (ID: 10852)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.7434556484222412
    2. '_node' → logprob: -1.7434556484222412
    3. '_indices' → logprob: -2.118455648422241
    4. '_tuple' → logprob: -2.243455648422241
    5. '_positions' → logprob: -2.493455648422241
    6. 's' → logprob: -2.743455648422241
    7. '_nodes' → logprob: -2.868455648422241
    8. '_pair' → logprob: -2.868455648422241
    9. '_dist' → logprob: -4.11845588684082
    10. '_prev' → logprob: -4.24345588684082

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46861550211906433
    2. '=' → logprob: -1.2186155319213867
    3. ',' → logprob: -2.5936155319213867
    4. '_' → logprob: -6.968615531921387
    5. 's' → logprob: -7.218615531921387
    6. '_idx' → logprob: -7.968615531921387
    7. ',_' → logprob: -8.218615531921387
    8. ' ,' → logprob: -8.843615531921387
    9. '_values' → logprob: -8.968615531921387
    10. '_indices' → logprob: -9.218615531921387

Token 245: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02990819327533245
    2. '[list' → logprob: -4.779908180236816
    3. '[len' → logprob: -4.779908180236816
    4. '[]' → logprob: -5.029908180236816
    5. '[var' → logprob: -5.529908180236816
    6. ' [' → logprob: -6.779908180236816
    7. '[-' → logprob: -7.529908180236816
    8. '[int' → logprob: -9.404908180236816
    9. '0' → logprob: -9.404908180236816
    10. '[value' → logprob: -10.029908180236816

Token 246: 'val' (ID: 1105)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5026932954788208
    2. 't' → logprob: -2.0026931762695312
    3. 'pair' → logprob: -2.3776931762695312
    4. 'tpl' → logprob: -2.8776931762695312
    5. 'item' → logprob: -3.0026931762695312
    6. 'tp' → logprob: -4.252693176269531
    7. 'elem' → logprob: -4.377693176269531
    8. 'p' → logprob: -4.627693176269531
    9. '0' → logprob: -5.002693176269531
    10. 'val' → logprob: -5.252693176269531

Token 247: '_a' (ID: 10852)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.45153898000717163
    2. 'for' → logprob: -1.4515390396118164
    3. '[' → logprob: -2.0765390396118164
    4. ' ' → logprob: -6.326539039611816
    5. 'a' → logprob: -7.326539039611816
    6. '_a' → logprob: -8.326539039611816
    7. '
' → logprob: -8.326539039611816
    8. '_' → logprob: -8.326539039611816
    9. '_tuple' → logprob: -8.326539039611816
    10. '	for' → logprob: -8.701539039611816

Token 248: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21193620562553406
    2. '[' → logprob: -2.0869362354278564
    3. 'for' → logprob: -2.7119362354278564
    4. ' ' → logprob: -7.836935997009277
    5. '
' → logprob: -9.961935997009277
    6. '	for' → logprob: -10.461935997009277
    7. '   ' → logprob: -11.211935997009277
    8. '  ' → logprob: -12.211935997009277
    9. '    ' → logprob: -13.211935997009277
    10. '_tuple' → logprob: -13.211935997009277

Token 249: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.003644257318228483
    2. '(val' → logprob: -6.2536444664001465
    3. ' val' → logprob: -6.3786444664001465
    4. ' (' → logprob: -12.253643989562988
    5. '_val' → logprob: -12.503643989562988
    6. '_,' → logprob: -13.128643989562988
    7. ',val' → logprob: -13.378643989562988
    8. '  ' → logprob: -13.753643989562988
    9. '	val' → logprob: -13.878643989562988
    10. '[val' → logprob: -14.128643989562988

Token 250: '_a' (ID: 10852)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0067484090104699135
    2. ',' → logprob: -5.881748199462891
    3. '_,' → logprob: -6.631748199462891
    4. '_val' → logprob: -7.006748199462891
    5. ',val' → logprob: -7.006748199462891
    6. '(val' → logprob: -7.381748199462891
    7. ' val' → logprob: -10.00674819946289
    8. 'pair' → logprob: -10.88174819946289
    9. 'tuple' → logprob: -11.13174819946289
    10. '_tuple' → logprob: -11.38174819946289

Token 251: ',' (ID: 11)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7670612335205078
    2. ',' → logprob: -0.8920612335205078
    3. ',val' → logprob: -2.142061233520508
    4. '_,' → logprob: -5.142061233520508
    5. '_val' → logprob: -6.642061233520508
    6. '(val' → logprob: -6.892061233520508
    7. ' val' → logprob: -9.517061233520508
    8. ' ,' → logprob: -9.892061233520508
    9. '[val' → logprob: -10.142061233520508
    10. ',_' → logprob: -11.017061233520508

Token 252: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2619285583496094
    2. '_' → logprob: -1.7619285583496094
    3. ' val' → logprob: -3.0119285583496094
    4. '_val' → logprob: -4.886928558349609
    5. ' _' → logprob: -6.261928558349609
    6. '__' → logprob: -11.01192855834961
    7. '_=' → logprob: -11.51192855834961
    8. '

' → logprob: -12.13692855834961
    9. ' ' → logprob: -12.38692855834961
    10. '	val' → logprob: -12.51192855834961

Token 253: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.03612532839179039
    2. '_s' → logprob: -3.786125421524048
    3. 'b' → logprob: -5.536125183105469
    4. '_val' → logprob: -5.536125183105469
    5. '_state' → logprob: -6.536125183105469
    6. '_v' → logprob: -7.286125183105469
    7. '_c' → logprob: -7.536125183105469
    8. 'val' → logprob: -7.911125183105469
    9. 's' → logprob: -7.911125183105469
    10. '_a' → logprob: -8.161125183105469

Token 254: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6693994998931885
    2. ' in' → logprob: -1.2943994998931885
    3. ',' → logprob: -1.5443994998931885
    4. ',_' → logprob: -8.04439926147461
    5. ' ,' → logprob: -9.04439926147461
    6. ',list' → logprob: -11.41939926147461
    7. ' ' → logprob: -11.66939926147461
    8. '
' → logprob: -12.29439926147461
    9. ',
' → logprob: -12.79439926147461
    10. ',in' → logprob: -13.04439926147461

Token 255: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0009119403548538685
    2. ' list' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.125911712646484
    4. '(list' → logprob: -16.875911712646484
    5. '
' → logprob: -17.000911712646484
    6. ' ' → logprob: -17.375911712646484
    7. '  ' → logprob: -17.375911712646484
    8. '	list' → logprob: -17.625911712646484
    9. '_list' → logprob: -18.125911712646484
    10. 'lst' → logprob: -18.125911712646484

Token 256: '_tuple' (ID: 53371)
  Prédit: '_pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.14598610997200012
    2. '_tuple' → logprob: -2.0209860801696777
    3. '_val' → logprob: -6.020986080169678
    4. 'pair' → logprob: -7.895986080169678
    5. '_node' → logprob: -8.520986557006836
    6. 'val' → logprob: -9.020986557006836
    7. 'tuple' → logprob: -9.520986557006836
    8. '
' → logprob: -10.020986557006836
    9. '_' → logprob: -11.020986557006836
    10. '_nodes' → logprob: -11.645986557006836

Token 257: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.00030066570616327226
    2. 'nodes' → logprob: -8.125300407409668
    3. 's' → logprob: -13.375300407409668
    4. '(nodes' → logprob: -14.500300407409668
    5. '
' → logprob: -14.625300407409668
    6. 'node' → logprob: -14.750300407409668
    7. 'val' → logprob: -15.250300407409668
    8. '```' → logprob: -15.500300407409668
    9. 'tuple' → logprob: -15.625300407409668
    10. '_tuple' → logprob: -16.125301361083984

Token 258: '_extended' (ID: 147320)
  Prédit: '_extended'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_extended' → logprob: -0.0015077205607667565
    2. 'extended' → logprob: -6.501507759094238
    3. ']' → logprob: -12.501507759094238
    4. '_states' → logprob: -14.751507759094238
    5. 'Extended' → logprob: -14.876507759094238
    6. '
' → logprob: -15.876507759094238
    7. '```' → logprob: -15.876507759094238
    8. ')' → logprob: -16.126506805419922
    9. '_ext' → logprob: -16.251506805419922
    10. '[' → logprob: -16.751506805419922

Token 259: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000597116129938513
    2. ' ]' → logprob: -7.50059700012207
    3. ' in' → logprob: -11.50059700012207
    4. ']
' → logprob: -11.75059700012207
    5. '[' → logprob: -11.87559700012207
    6. ',' → logprob: -12.75059700012207
    7. ' if' → logprob: -12.75059700012207
    8. 'if' → logprob: -12.87559700012207
    9. 'in' → logprob: -13.12559700012207
    10. '()]' → logprob: -13.12559700012207

Token 260: 'list' (ID: 2641)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.268745481967926
    2. '_' → logprob: -2.8937454223632812
    3. '[
' → logprob: -3.0187454223632812
    4. '<|end|>' → logprob: -3.2687454223632812
    5. ',' → logprob: -4.018745422363281
    6. 'list' → logprob: -4.518745422363281
    7. ')' → logprob: -4.643745422363281
    8. '[var' → logprob: -4.768745422363281
    9. '(' → logprob: -5.018745422363281
    10. ' ' → logprob: -5.393745422363281

Token 261: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0010887817479670048
    2. '_pair' → logprob: -7.251088619232178
    3. '_tuple' → logprob: -8.251089096069336
    4. '_vals' → logprob: -10.626089096069336
    5. '_var' → logprob: -10.751089096069336
    6. '_idx' → logprob: -11.126089096069336
    7. '_pos' → logprob: -11.626089096069336
    8. '_' → logprob: -11.876089096069336
    9. 'val' → logprob: -12.126089096069336
    10. '_node' → logprob: -12.251089096069336

Token 262: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00019591135787777603
    2. '_a' → logprob: -9.375195503234863
    3. '_val' → logprob: -9.750195503234863
    4. 'b' → logprob: -10.375195503234863
    5. '_c' → logprob: -12.125195503234863
    6. '```' → logprob: -13.250195503234863
    7. '_v' → logprob: -13.375195503234863
    8. '_pair' → logprob: -13.625195503234863
    9. '_x' → logprob: -13.875195503234863
    10. '_d' → logprob: -14.125195503234863

Token 263: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931519508361816
    2. ' =' → logprob: -0.6931519508361816
    3. '[' → logprob: -12.943151473999023
    4. '=[' → logprob: -14.068151473999023
    5. ',' → logprob: -14.818151473999023
    6. '=[]' → logprob: -14.943151473999023
    7. ' =[' → logprob: -14.943151473999023
    8. ')' → logprob: -15.193151473999023
    9. ' ' → logprob: -16.318151473999023
    10. '<|end|>' → logprob: -16.693151473999023

Token 264: ' [' (ID: 723)
  Prédit: '[val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[val' → logprob: -0.008646951988339424
    2. ' [' → logprob: -4.7586469650268555
    3. '[' → logprob: -10.508646965026855
    4. '[b' → logprob: -12.383646965026855
    5. '[var' → logprob: -14.508646965026855
    6. '[v' → logprob: -16.75864601135254
    7. '[col' → logprob: -16.88364601135254
    8. '[int' → logprob: -17.00864601135254
    9. '[t' → logprob: -17.13364601135254
    10. '[value' → logprob: -17.25864601135254

Token 265: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.012514598667621613
    2. ' val' → logprob: -4.387514591217041
    3. '	val' → logprob: -13.1375150680542
    4. '_val' → logprob: -14.3875150680542
    5. ' ' → logprob: -14.5125150680542
    6. '(val' → logprob: -14.6375150680542
    7. 'var' → logprob: -15.2625150680542
    8. '[val' → logprob: -15.2625150680542
    9. 'int' → logprob: -15.6375150680542
    10. 'b' → logprob: -16.012514114379883

Token 266: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -8.537868779967539e-06
    2. 'b' → logprob: -12.250008583068848
    3. '_' → logprob: -13.500008583068848
    4. 'for' → logprob: -14.125008583068848
    5. 'val' → logprob: -14.625008583068848
    6. '_a' → logprob: -14.750008583068848
    7. '_val' → logprob: -15.375008583068848
    8. ' _' → logprob: -15.375008583068848
    9. ' for' → logprob: -16.37500762939453
    10. '```' → logprob: -16.87500762939453

Token 267: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11287928372621536
    2. 'for' → logprob: -2.2378792762756348
    3. ' in' → logprob: -10.362879753112793
    4. ',' → logprob: -11.987879753112793
    5. ')' → logprob: -12.112879753112793
    6. ' ' → logprob: -12.237879753112793
    7. 'in' → logprob: -12.362879753112793
    8. '	for' → logprob: -12.737879753112793
    9. '
' → logprob: -14.737879753112793
    10. '[' → logprob: -14.737879753112793

Token 268: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.15926200151443481
    2. ' val' → logprob: -2.28426194190979
    3. '_,' → logprob: -3.15926194190979
    4. ',' → logprob: -6.159262180328369
    5. ' _,' → logprob: -7.909262180328369
    6. ',val' → logprob: -8.409261703491211
    7. ' ' → logprob: -9.784261703491211
    8. '_val' → logprob: -9.784261703491211
    9. '_' → logprob: -10.159261703491211
    10. ' ,' → logprob: -10.784261703491211

Token 269: '_a' (ID: 10852)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.297594279050827
    2. ',' → logprob: -1.7975943088531494
    3. ' in' → logprob: -3.0475943088531494
    4. 'in' → logprob: -3.5475943088531494
    5. ' val' → logprob: -4.54759407043457
    6. ',val' → logprob: -6.42259407043457
    7. 'list' → logprob: -7.04759407043457
    8. '_,' → logprob: -7.29759407043457
    9. '_val' → logprob: -7.67259407043457
    10. ' ' → logprob: -8.29759407043457

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2990471422672272
    2. 'in' → logprob: -1.4240471124649048
    3. ' in' → logprob: -4.049046993255615
    4. ',val' → logprob: -8.674047470092773
    5. ' ,' → logprob: -9.049047470092773
    6. ',list' → logprob: -12.799047470092773
    7. ' ' → logprob: -13.174047470092773
    8. ',_' → logprob: -14.049047470092773
    9. '
' → logprob: -14.174047470092773
    10. ',in' → logprob: -14.174047470092773

Token 271: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.03804768621921539
    2. ' val' → logprob: -3.2880477905273438
    3. 'list' → logprob: -12.288047790527344
    4. '_val' → logprob: -14.163047790527344
    5. 'var' → logprob: -15.163047790527344
    6. '
' → logprob: -15.913047790527344
    7. '	val' → logprob: -16.038047790527344
    8. '```' → logprob: -16.538047790527344
    9. ' in' → logprob: -16.663047790527344
    10. ' ' → logprob: -16.788047790527344

Token 272: '_b' (ID: 1535)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5133115649223328
    2. 'list' → logprob: -1.7633116245269775
    3. '_b' → logprob: -2.1383116245269775
    4. 'b' → logprob: -2.6383116245269775
    5. ' in' → logprob: -3.5133116245269775
    6. 'val' → logprob: -5.013311386108398
    7. 'pair' → logprob: -6.263311386108398
    8. ',' → logprob: -7.888311386108398
    9. '(list' → logprob: -7.888311386108398
    10. 'tuple' → logprob: -7.888311386108398

Token 273: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22543174028396606
    2. 'in' → logprob: -1.6004316806793213
    3. ']' → logprob: -11.100431442260742
    4. ' ' → logprob: -13.350431442260742
    5. ')' → logprob: -14.475431442260742
    6. '	in' → logprob: -14.975431442260742
    7. '_in' → logprob: -15.350431442260742
    8. ',' → logprob: -15.475431442260742
    9. '```' → logprob: -15.725431442260742
    10. 'In' → logprob: -15.850431442260742

Token 274: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.002185472520068288
    2. ' list' → logprob: -6.127185344696045
    3. '
' → logprob: -15.752185821533203
    4. '   ' → logprob: -16.252185821533203
    5. ']' → logprob: -16.752185821533203
    6. '	list' → logprob: -17.377185821533203
    7. ' ' → logprob: -17.502185821533203
    8. '(list' → logprob: -17.752185821533203
    9. '[list' → logprob: -18.002185821533203
    10. '```' → logprob: -18.377185821533203

Token 275: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.007634543348103762
    2. 'tuple' → logprob: -4.88263463973999
    3. '_pair' → logprob: -11.007634162902832
    4. 'val' → logprob: -12.632634162902832
    5. 'pair' → logprob: -12.882634162902832
    6. '
' → logprob: -13.257634162902832
    7. '_t' → logprob: -13.882634162902832
    8. '_extended' → logprob: -14.007634162902832
    9. '_val' → logprob: -14.382634162902832
    10. 'list' → logprob: -14.632634162902832

Token 276: '_nodes' (ID: 34593)
  Prédit: '_extended'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_extended' → logprob: -0.00012582694762386382
    2. 'extended' → logprob: -9.250125885009766
    3. 'list' → logprob: -10.500125885009766
    4. 'Extended' → logprob: -14.125125885009766
    5. '_ext' → logprob: -14.875125885009766
    6. '```' → logprob: -15.375125885009766
    7. '_nodes' → logprob: -15.625125885009766
    8. '
' → logprob: -15.625125885009766
    9. '...' → logprob: -15.625125885009766
    10. '(list' → logprob: -16.125125885009766

Token 277: '_extended' (ID: 147320)
  Prédit: '_extended'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_extended' → logprob: -0.0005730479606427252
    2. 'extended' → logprob: -7.50057315826416
    3. ']' → logprob: -11.00057315826416
    4. 'Extended' → logprob: -12.87557315826416
    5. '_]' → logprob: -15.25057315826416
    6. '_ext' → logprob: -15.62557315826416
    7. ']
' → logprob: -16.375572204589844
    8. ']_' → logprob: -16.375572204589844
    9. '
' → logprob: -17.000572204589844
    10. '   ' → logprob: -17.500572204589844

Token 278: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.3451433409936726e-05
    2. ']
' → logprob: -11.000033378601074
    3. ' ]' → logprob: -11.250033378601074
    4. ')]' → logprob: -12.875033378601074
    5. '()]' → logprob: -14.375033378601074
    6. ')' → logprob: -15.125033378601074
    7. ']

' → logprob: -15.375033378601074
    8. '])' → logprob: -17.62503433227539
    9. ']
' → logprob: -17.75003433227539
    10. '`]' → logprob: -18.12503433227539

Token 279: 'var' (ID: 1465)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22819781303405762
    2. 'var' → logprob: -2.7281978130340576
    3. '```' → logprob: -4.228198051452637
    4. 'list' → logprob: -4.353198051452637
    5. '[' → logprob: -4.478198051452637
    6. ',' → logprob: -4.603198051452637
    7. ')' → logprob: -4.728198051452637
    8. '#' → logprob: -4.728198051452637
    9. '\n' → logprob: -4.853198051452637
    10. ',
' → logprob: -4.853198051452637

Token 280: '_nodes' (ID: 34593)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.8961679935455322
    2. '_node' → logprob: -1.2711679935455322
    3. '_index' → logprob: -2.2711679935455322
    4. '_num' → logprob: -2.7711679935455322
    5. '_' → logprob: -3.0211679935455322
    6. '_pos' → logprob: -3.7711679935455322
    7. '_idx' → logprob: -3.8961679935455322
    8. '_pair' → logprob: -5.146167755126953
    9. '_left' → logprob: -5.146167755126953
    10. '_range' → logprob: -5.271167755126953

Token 281: '_total' (ID: 23814)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.4602947533130646
    2. '_index' → logprob: -1.3352947235107422
    3. '_num' → logprob: -3.835294723510742
    4. '_idx' → logprob: -4.085294723510742
    5. '_val' → logprob: -4.585294723510742
    6. '_indices' → logprob: -4.585294723510742
    7. '_len' → logprob: -4.835294723510742
    8. '_size' → logprob: -5.085294723510742
    9. ' =' → logprob: -5.335294723510742
    10. '_' → logprob: -5.335294723510742

Token 282: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22851507365703583
    2. '=' → logprob: -1.6035150289535522
    3. ',' → logprob: -6.103515148162842
    4. '_' → logprob: -7.353515148162842
    5. '_count' → logprob: -9.603514671325684
    6. '_nodes' → logprob: -10.603514671325684
    7. '_num' → logprob: -11.103514671325684
    8. '_=' → logprob: -11.103514671325684
    9. '=int' → logprob: -11.478514671325684
    10. ' ' → logprob: -11.478514671325684

Token 283: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10779497027397156
    2. 'var' → logprob: -2.607795000076294
    3. ' len' → logprob: -3.607795000076294
    4. ' var' → logprob: -6.607794761657715
    5. '  ' → logprob: -11.357794761657715
    6. '   ' → logprob: -11.482794761657715
    7. ' ' → logprob: -12.232794761657715
    8. '    ' → logprob: -13.982794761657715
    9. '(len' → logprob: -14.107794761657715
    10. '	len' → logprob: -14.982794761657715

Token 284: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.0008102210704237223
    2. 'list' → logprob: -7.125810146331787
    3. '(' → logprob: -12.375810623168945
    4. '(var' → logprob: -14.000810623168945
    5. 'var' → logprob: -15.250810623168945
    6. ' list' → logprob: -15.500810623168945
    7. '(lst' → logprob: -16.250810623168945
    8. '=list' → logprob: -16.625810623168945
    9. ' (' → logprob: -17.000810623168945
    10. '(lista' → logprob: -17.500810623168945

Token 285: '_tuple' (ID: 53371)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.09098325669765472
    2. '_tuple' → logprob: -2.4659831523895264
    3. '_pair' → logprob: -6.2159833908081055
    4. 'val' → logprob: -10.590983390808105
    5. 'tuple' → logprob: -11.715983390808105
    6. '_' → logprob: -12.465983390808105
    7. '_var' → logprob: -12.715983390808105
    8. '```' → logprob: -14.090983390808105
    9. '_node' → logprob: -14.590983390808105
    10. '_t' → logprob: -14.590983390808105

Token 286: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.00011903966515092179
    2. 'nodes' → logprob: -9.12511920928955
    3. '
' → logprob: -13.12511920928955
    4. '_tuple' → logprob: -13.50011920928955
    5. '_node' → logprob: -13.62511920928955
    6. '```' → logprob: -13.62511920928955
    7. '_extended' → logprob: -14.25011920928955
    8. 'val' → logprob: -14.25011920928955
    9. 'tuple' → logprob: -14.37511920928955
    10. 'node' → logprob: -14.50011920928955

Token 287: '_extended' (ID: 147320)
  Prédit: '_extended'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_extended' → logprob: -0.0005973544903099537
    2. 'extended' → logprob: -7.5005974769592285
    3. ')' → logprob: -10.12559700012207
    4. 'Extended' → logprob: -13.62559700012207
    5. '_ext' → logprob: -14.25059700012207
    6. '
' → logprob: -14.25059700012207
    7. '```' → logprob: -14.62559700012207
    8. ')_' → logprob: -14.87559700012207
    9. '_)' → logprob: -15.25059700012207
    10. ')
' → logprob: -15.62559700012207

Token 288: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.881560041918419e-05
    2. ')-' → logprob: -10.500039100646973
    3. ')
' → logprob: -11.750039100646973
    4. ' )' → logprob: -12.875039100646973
    5. ')#' → logprob: -15.500039100646973
    6. '<|end|>' → logprob: -15.625039100646973
    7. '[' → logprob: -16.000038146972656
    8. ')

' → logprob: -16.250038146972656
    9. '```' → logprob: -17.000038146972656
    10. '#' → logprob: -17.000038146972656

Token 289: 'list' (ID: 2641)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16052092611789703
    2. 'var' → logprob: -2.7855210304260254
    3. '#' → logprob: -3.6605210304260254
    4. 'list' → logprob: -4.535521030426025
    5. 'def' → logprob: -4.535521030426025
    6. '```' → logprob: -4.535521030426025
    7. '[' → logprob: -5.660521030426025
    8. 'for' → logprob: -5.910521030426025
    9. '[
' → logprob: -5.910521030426025
    10. ')' → logprob: -6.160521030426025

Token 290: '_adj' (ID: 117293)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.6764498353004456
    2. '_dp' → logprob: -1.8014497756958008
    3. '_pair' → logprob: -2.551449775695801
    4. '_dist' → logprob: -2.676449775695801
    5. '_idx' → logprob: -3.551449775695801
    6. '_index' → logprob: -4.426449775695801
    7. '_indices' → logprob: -4.551449775695801
    8. '_' → logprob: -4.676449775695801
    9. '_edges' → logprob: -4.676449775695801
    10. '_next' → logprob: -4.926449775695801

Token 291: 'acent' (ID: 28063)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5107178092002869
    2. 'acency' → logprob: -1.5107178688049316
    3. ' =' → logprob: -2.1357178688049316
    4. 'acent' → logprob: -3.1357178688049316
    5. '=[]' → logprob: -4.635717868804932
    6. '_' → logprob: -5.760717868804932
    7. 'ac' → logprob: -6.260717868804932
    8. '[' → logprob: -6.885717868804932
    9. '[]' → logprob: -8.010717391967773
    10. 'acen' → logprob: -8.635717391967773

Token 292: '_graph' (ID: 33441)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18126441538333893
    2. ' =' → logprob: -1.8062644004821777
    3. '_' → logprob: -7.431264400482178
    4. '=[]' → logprob: -7.431264400482178
    5. 's' → logprob: -9.306264877319336
    6. '[' → logprob: -9.431264877319336
    7. '_edges' → logprob: -10.306264877319336
    8. '_nodes' → logprob: -10.556264877319336
    9. '_=' → logprob: -10.556264877319336
    10. '=[]
' → logprob: -11.431264877319336

Token 293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34851551055908203
    2. '=' → logprob: -1.223515510559082
    3. '=[]' → logprob: -9.723515510559082
    4. '[' → logprob: -13.098515510559082
    5. '=[' → logprob: -13.223515510559082
    6. '<|end|>' → logprob: -13.348515510559082
    7. ':' → logprob: -13.598515510559082
    8. 's' → logprob: -13.973515510559082
    9. '=[[' → logprob: -14.348515510559082
    10. ' ' → logprob: -14.473515510559082

Token 294: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02975442260503769
    2. ' [[]' → logprob: -3.529754400253296
    3. '[[' → logprob: -13.529754638671875
    4. '[]' → logprob: -13.529754638671875
    5. '   ' → logprob: -14.154754638671875
    6. '[
' → logprob: -15.154754638671875
    7. '[len' → logprob: -15.779754638671875
    8. ' [' → logprob: -16.154754638671875
    9. '[list' → logprob: -17.279754638671875
    10. '[s' → logprob: -17.404754638671875

Token 295: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4741514325141907
    2. ' for' → logprob: -0.9741514325141907
    3. ')' → logprob: -10.099151611328125
    4. ']' → logprob: -11.224151611328125
    5. ',' → logprob: -12.099151611328125
    6. 'var' → logprob: -12.349151611328125
    7. ' ' → logprob: -12.599151611328125
    8. '()' → logprob: -12.849151611328125
    9. '	for' → logprob: -13.474151611328125
    10. '   ' → logprob: -13.724151611328125

Token 296: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0007768734358251095
    2. ' _' → logprob: -7.375776767730713
    3. '_range' → logprob: -9.125777244567871
    4. ' range' → logprob: -10.500777244567871
    5. '_var' → logprob: -11.875777244567871
    6. 'range' → logprob: -12.125777244567871
    7. '_in' → logprob: -14.500777244567871
    8. '_i' → logprob: -15.500777244567871
    9. '_
' → logprob: -15.500777244567871
    10. '_=' → logprob: -16.125776290893555

Token 297: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1984245926141739
    2. ' in' → logprob: -2.4484245777130127
    3. ' range' → logprob: -2.8234245777130127
    4. 'in' → logprob: -3.8234245777130127
    5. '_' → logprob: -4.448424816131592
    6. 'var' → logprob: -8.573424339294434
    7. '_range' → logprob: -9.073424339294434
    8. '(range' → logprob: -9.073424339294434
    9. ' ' → logprob: -9.573424339294434
    10. ' _' → logprob: -10.198424339294434

Token 298: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4741038978099823
    2. ' range' → logprob: -0.9741039276123047
    3. '_' → logprob: -10.599103927612305
    4. '_range' → logprob: -13.349103927612305
    5. '(range' → logprob: -15.974103927612305
    6. 'var' → logprob: -16.224103927612305
    7. '0' → logprob: -16.474103927612305
    8. ' _' → logprob: -17.724103927612305
    9. '	range' → logprob: -17.974103927612305
    10. 'in' → logprob: -18.224103927612305

Token 299: '(var' (ID: 15816)
  Prédit: '(var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(var' → logprob: -0.008409019559621811
    2. 'var' → logprob: -5.258409023284912
    3. 'range' → logprob: -5.883409023284912
    4. '(range' → logprob: -8.133408546447754
    5. ' range' → logprob: -9.633408546447754
    6. '(' → logprob: -11.383408546447754
    7. ')var' → logprob: -12.133408546447754
    8. '[var' → logprob: -12.633408546447754
    9. ' var' → logprob: -12.758408546447754
    10. '(VAR' → logprob: -13.883408546447754

Token 300: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.0035447163973003626
    2. 'var' → logprob: -5.753544807434082
    3. 'val' → logprob: -9.128544807434082
    4. 'range' → logprob: -9.378544807434082
    5. 'pair' → logprob: -9.628544807434082
    6. 'node' → logprob: -10.253544807434082
    7. '_var' → logprob: -10.753544807434082
    8. '_val' → logprob: -11.378544807434082
    9. '_node' → logprob: -11.503544807434082
    10. 'nodes' → logprob: -12.253544807434082

Token 301: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.0003951648832298815
    2. 'total' → logprob: -7.87539529800415
    3. 'var' → logprob: -11.875394821166992
    4. '_var' → logprob: -12.875394821166992
    5. '_nodes' → logprob: -13.375394821166992
    6. ')' → logprob: -13.375394821166992
    7. 's' → logprob: -14.375394821166992
    8. '_' → logprob: -15.250394821166992
    9. '_TOTAL' → logprob: -15.250394821166992
    10. '
' → logprob: -15.500394821166992

Token 302: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000182921823579818
    2. ']' → logprob: -8.87518310546875
    3. ')]
' → logprob: -10.37518310546875
    4. ')' → logprob: -11.87518310546875
    5. '])]' → logprob: -13.00018310546875
    6. '])' → logprob: -14.62518310546875
    7. ')])' → logprob: -15.25018310546875
    8. '')]' → logprob: -15.25018310546875
    9. '()]' → logprob: -15.25018310546875
    10. ' )' → logprob: -15.37518310546875

Token 303: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004100246820598841
    2. '
' → logprob: -6.254100322723389
    3. ' for' → logprob: -6.379100322723389
    4. '<|end|>' → logprob: -8.75409984588623
    5. 'range' → logprob: -9.12909984588623
    6. 'var' → logprob: -9.12909984588623
    7. '[
' → logprob: -11.00409984588623
    8. ')' → logprob: -11.25409984588623
    9. '[' → logprob: -11.50409984588623
    10. '```' → logprob: -11.50409984588623

Token 304: ' idx' (ID: 14016)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.39994722604751587
    2. ' var' → logprob: -2.399947166442871
    3. 'i' → logprob: -2.524947166442871
    4. '_i' → logprob: -3.149947166442871
    5. 'idx' → logprob: -3.274947166442871
    6. ' i' → logprob: -4.024947166442871
    7. '_var' → logprob: -4.149947166442871
    8. ' idx' → logprob: -4.399947166442871
    9. 'val' → logprob: -5.024947166442871
    10. '_' → logprob: -5.149947166442871

Token 305: '_edge' (ID: 43226)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22982344031333923
    2. 'in' → logprob: -1.7298234701156616
    3. ',' → logprob: -3.979823350906372
    4. '_' → logprob: -5.104823589324951
    5. ' ' → logprob: -6.104823589324951
    6. '_in' → logprob: -7.729823589324951
    7. ' ,' → logprob: -8.729823112487793
    8. '_,' → logprob: -8.729823112487793
    9. ' _' → logprob: -10.229823112487793
    10. ')' → logprob: -10.479823112487793

Token 306: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6422356963157654
    2. ',' → logprob: -1.1422357559204102
    3. ' in' → logprob: -1.8922357559204102
    4. ' ,' → logprob: -6.76723575592041
    5. '_in' → logprob: -7.39223575592041
    6. '_,' → logprob: -7.39223575592041
    7. ',_' → logprob: -7.64223575592041
    8. 'range' → logprob: -7.89223575592041
    9. '1' → logprob: -8.64223575592041
    10. ',var' → logprob: -8.89223575592041

Token 307: ' (' (ID: 350)
  Prédit: '(var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(var' → logprob: -0.9421332478523254
    2. '(val' → logprob: -0.9421332478523254
    3. '(start' → logprob: -1.9421331882476807
    4. ' (' → logprob: -3.5671331882476807
    5. '(list' → logprob: -4.31713342666626
    6. '(pair' → logprob: -4.31713342666626
    7. '(range' → logprob: -5.19213342666626
    8. '(' → logprob: -5.69213342666626
    9. '(src' → logprob: -6.19213342666626
    10. '(from' → logprob: -6.31713342666626

Token 308: 'var' (ID: 1465)
  Prédit: 'var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.6734523177146912
    2. 'val' → logprob: -1.173452377319336
    3. 'start' → logprob: -2.298452377319336
    4. 'left' → logprob: -3.673452377319336
    5. 'l' → logprob: -3.798452377319336
    6. 'u' → logprob: -4.673452377319336
    7. 'idx' → logprob: -4.673452377319336
    8. 'a' → logprob: -5.173452377319336
    9. 'x' → logprob: -6.673452377319336
    10. 'index' → logprob: -6.798452377319336

Token 309: '_left' (ID: 22189)
  Prédit: '_u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_u' → logprob: -1.352070927619934
    2. 'a' → logprob: -1.602070927619934
    3. '_start' → logprob: -1.977070927619934
    4. 'u' → logprob: -2.1020708084106445
    5. '_a' → logprob: -2.2270708084106445
    6. '_from' → logprob: -3.3520708084106445
    7. 'from' → logprob: -3.4770708084106445
    8. 'start' → logprob: -3.6020708084106445
    9. '_num' → logprob: -4.3520708084106445
    10. '_i' → logprob: -4.8520708084106445

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7971501350402832
    2. '_node' → logprob: -0.7971501350402832
    3. '_,' → logprob: -4.047150135040283
    4. '_idx' → logprob: -4.047150135040283
    5. '_edge' → logprob: -4.047150135040283
    6. '_start' → logprob: -4.422150135040283
    7. '_index' → logprob: -4.797150135040283
    8. '_range' → logprob: -5.047150135040283
    9. '_left' → logprob: -5.172150135040283
    10. ',_' → logprob: -5.297150135040283

Token 311: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.020544106140732765
    2. ' var' → logprob: -3.8955440521240234
    3. '_var' → logprob: -13.770544052124023
    4. ')var' → logprob: -14.895544052124023
    5. ')' → logprob: -15.520544052124023
    6. ' ' → logprob: -16.145544052124023
    7. '```' → logprob: -16.395544052124023
    8. '   ' → logprob: -16.645544052124023
    9. '	var' → logprob: -16.770544052124023
    10. ',var' → logprob: -16.895544052124023

Token 312: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.16028910875320435
    2. 'right' → logprob: -1.9102890491485596
    3. 'Right' → logprob: -10.28528881072998
    4. ' right' → logprob: -12.28528881072998
    5. ')' → logprob: -12.41028881072998
    6. '_idx' → logprob: -12.78528881072998
    7. '_nodes' → logprob: -13.03528881072998
    8. '_edge' → logprob: -13.53528881072998
    9. 'idx' → logprob: -13.53528881072998
    10. '```' → logprob: -13.53528881072998

Token 313: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1875571544806007e-05
    2. ' )' → logprob: -11.750011444091797
    3. 'in' → logprob: -13.250011444091797
    4. ',' → logprob: -13.625011444091797
    5. ' in' → logprob: -15.625011444091797
    6. 'var' → logprob: -16.250011444091797
    7. ',)' → logprob: -16.500011444091797
    8. '))' → logprob: -16.750011444091797
    9. ')=' → logprob: -16.875011444091797
    10. '_idx' → logprob: -16.875011444091797

Token 314: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35644981265068054
    2. 'in' → logprob: -1.231449842453003
    3. ')' → logprob: -4.856449604034424
    4. ',' → logprob: -9.731450080871582
    5. '):
' → logprob: -10.231450080871582
    6. '
' → logprob: -11.106450080871582
    7. '_in' → logprob: -11.481450080871582
    8. 'to' → logprob: -11.606450080871582
    9. 'range' → logprob: -11.981450080871582
    10. '```' → logprob: -12.106450080871582

Token 315: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.005234475247561932
    2. ' enumerate' → logprob: -5.255234241485596
    3. 'range' → logprob: -15.005234718322754
    4. '   ' → logprob: -16.380233764648438
    5. 'enum' → logprob: -16.630233764648438
    6. 'in' → logprob: -17.005233764648438
    7. 'en' → logprob: -17.130233764648438
    8. '
' → logprob: -17.880233764648438
    9. 'list' → logprob: -18.005233764648438
    10. '```' → logprob: -18.130233764648438

Token 316: '(list' (ID: 13116)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0011720098555088043
    2. ' list' → logprob: -6.751172065734863
    3. '(list' → logprob: -13.501172065734863
    4. 'range' → logprob: -14.876172065734863
    5. 'enumer' → logprob: -16.876171112060547
    6. '	list' → logprob: -18.376171112060547
    7. 'var' → logprob: -18.501171112060547
    8. ':list' → logprob: -18.501171112060547
    9. '[list' → logprob: -18.501171112060547
    10. '=list' → logprob: -19.001171112060547

Token 317: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.012596650049090385
    2. '_adj' → logprob: -4.637596607208252
    3. '_val' → logprob: -6.512596607208252
    4. '_range' → logprob: -6.762596607208252
    5. '_tuple' → logprob: -9.13759708404541
    6. 'pair' → logprob: -10.26259708404541
    7. 'range' → logprob: -10.88759708404541
    8. 'val' → logprob: -11.38759708404541
    9. 'adj' → logprob: -12.63759708404541
    10. ')' → logprob: -12.88759708404541

Token 318: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.003388264449313283
    2. '_node' → logprob: -5.753388404846191
    3. 'range' → logprob: -8.503388404846191
    4. 'node' → logprob: -12.878388404846191
    5. '_ranges' → logprob: -13.628388404846191
    6. '_nodes' → logprob: -13.753388404846191
    7. '_edges' → logprob: -14.253388404846191
    8. ' range' → logprob: -14.253388404846191
    9. '_edge' → logprob: -14.503388404846191
    10. ')' → logprob: -15.378388404846191

Token 319: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0017751421546563506
    2. '_range' → logprob: -6.62677526473999
    3. '_nodes' → logprob: -8.251774787902832
    4. 's' → logprob: -9.376774787902832
    5. 'edges' → logprob: -10.251774787902832
    6. 'range' → logprob: -10.876774787902832
    7. '_ranges' → logprob: -11.001774787902832
    8. ')' → logprob: -11.501774787902832
    9. '_node' → logprob: -12.376774787902832
    10. '   ' → logprob: -12.501774787902832

Token 320: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04904375597834587
    2. '):
' → logprob: -3.049043655395508
    3. ':' → logprob: -7.799043655395508
    4. '):
' → logprob: -10.299043655395508
    5. ')' → logprob: -12.174043655395508
    6. ':
' → logprob: -12.424043655395508
    7. ',' → logprob: -13.674043655395508
    8. ']:' → logprob: -14.424043655395508
    9. ' ):' → logprob: -14.674043655395508
    10. '):

' → logprob: -15.049043655395508

Token 321: ' start' (ID: 1604)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16228973865509033
    2. 'start' → logprob: -1.9122897386550903
    3. ' start' → logprob: -6.662289619445801
    4. ' ' → logprob: -7.162289619445801
    5. '0' → logprob: -11.6622896194458
    6. '):' → logprob: -14.6622896194458
    7. '):
' → logprob: -15.5372896194458
    8. '   ' → logprob: -16.037290573120117
    9. '	start' → logprob: -16.037290573120117
    10. '_start' → logprob: -16.162290573120117

Token 322: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.726595241460018e-05
    2. '1' → logprob: -10.25003719329834
    3. ')' → logprob: -14.12503719329834
    4. ' =' → logprob: -14.12503719329834
    5. '=
' → logprob: -16.000038146972656
    6. ')=' → logprob: -16.375038146972656
    7. '=len' → logprob: -16.500038146972656
    8. 'def' → logprob: -17.750038146972656
    9. ' ' → logprob: -17.750038146972656
    10. 'var' → logprob: -18.000038146972656

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019662656995933503
    2. '0' → logprob: -9.62519645690918
    3. '2' → logprob: -9.62519645690918
    4. ' ' → logprob: -9.75019645690918
    5. 'var' → logprob: -12.37519645690918
    6. '   ' → logprob: -13.50019645690918
    7. ')' → logprob: -15.00019645690918
    8. '=' → logprob: -15.25019645690918
    9. 'len' → logprob: -18.00019645690918
    10. '  ' → logprob: -18.62519645690918

Token 324: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3870084881782532
    2. '):' → logprob: -1.1370084285736084
    3. '):
' → logprob: -9.262008666992188
    4. ':' → logprob: -10.637008666992188
    5. '   ' → logprob: -11.387008666992188
    6. ')' → logprob: -12.387008666992188
    7. ':
' → logprob: -13.387008666992188
    8. ' ):
' → logprob: -14.387008666992188
    9. '):

' → logprob: -15.262008666992188
    10. ' ):' → logprob: -15.762008666992188

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004088373854756355
    2. ' list' → logprob: -6.629088401794434
    3. '<|end|>' → logprob: -7.379088401794434
    4. '    
' → logprob: -7.629088401794434
    5. '
' → logprob: -7.754088401794434
    6. ' var' → logprob: -8.629088401794434
    7. '```' → logprob: -8.629088401794434
    8. '	list' → logprob: -9.129088401794434
    9. '[var' → logprob: -9.379088401794434
    10. ',' → logprob: -9.379088401794434

Token 326: ' idx' (ID: 14016)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.19106504321098328
    2. 'list' → logprob: -1.9410650730133057
    3. '   ' → logprob: -3.5660650730133057
    4. ' if' → logprob: -7.316064834594727
    5. 'var' → logprob: -7.691064834594727
    6. ' for' → logprob: -8.191064834594727
    7. ' var' → logprob: -8.316064834594727
    8. 'if' → logprob: -8.441064834594727
    9. 'for' → logprob: -9.816064834594727
    10. '```' → logprob: -10.441064834594727

Token 327: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.011030614376068115
    2. '_adj' → logprob: -5.386030673980713
    3. '_right' → logprob: -7.011030673980713
    4. ' =' → logprob: -7.011030673980713
    5. '_var' → logprob: -7.261030673980713
    6. '_source' → logprob: -7.511030673980713
    7. '_from' → logprob: -7.511030673980713
    8. '_node' → logprob: -7.511030673980713
    9. '_edge' → logprob: -7.761030673980713
    10. 'left' → logprob: -8.011030197143555

Token 328: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0952162966132164
    2. ' =' → logprob: -2.4702162742614746
    3. ',' → logprob: -5.095216274261475
    4. 'idx' → logprob: -10.720216751098633
    5. '_idx' → logprob: -11.345216751098633
    6. ',var' → logprob: -11.470216751098633
    7. ',val' → logprob: -11.720216751098633
    8. '-=' → logprob: -11.720216751098633
    9. '+=' → logprob: -11.845216751098633
    10. '=list' → logprob: -11.970216751098633

Token 329: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.018555959686636925
    2. ' bis' → logprob: -4.018556118011475
    3. 'var' → logprob: -7.893556118011475
    4. '   ' → logprob: -11.143555641174316
    5. 'binary' → logprob: -11.768555641174316
    6. '1' → logprob: -12.768555641174316
    7. ' var' → logprob: -13.018555641174316
    8. 'bin' → logprob: -13.268555641174316
    9. ' ' → logprob: -13.393555641174316
    10. 'list' → logprob: -14.643555641174316

Token 330: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.0339031834737398e-05
    2. '```' → logprob: -12.250020027160645
    3. 'sect' → logprob: -12.375020027160645
    4. 'ct' → logprob: -12.875020027160645
    5. '
' → logprob: -13.875020027160645
    6. 'e' → logprob: -14.000020027160645
    7. '``' → logprob: -14.125020027160645
    8. '<' → logprob: -14.250020027160645
    9. '`' → logprob: -14.625020027160645
    10. '#' → logprob: -14.625020027160645

Token 331: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.04889789596199989
    2. '_left' → logprob: -3.0488979816436768
    3. '_right' → logprob: -9.298897743225098
    4. '.' → logprob: -9.548897743225098
    5. 'bis' → logprob: -10.048897743225098
    6. 'var' → logprob: -10.923897743225098
    7. '(list' → logprob: -11.048897743225098
    8. '.var' → logprob: -11.548897743225098
    9. ' bis' → logprob: -11.673897743225098
    10. 'list' → logprob: -11.673897743225098

Token 332: 'is' (ID: 276)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.030122311785817146
    2. 'ect' → logprob: -3.5301222801208496
    3. 'n' → logprob: -9.655122756958008
    4. 's' → logprob: -9.655122756958008
    5. 'st' → logprob: -9.655122756958008
    6. 'sect' → logprob: -9.780122756958008
    7. '```' → logprob: -9.905122756958008
    8. 'r' → logprob: -11.280122756958008
    9. 't' → logprob: -11.780122756958008
    10. 'c' → logprob: -11.905122756958008

Token 333: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.003233917523175478
    2. 'ect' → logprob: -5.753233909606934
    3. 'n' → logprob: -11.003233909606934
    4. 'sect' → logprob: -11.003233909606934
    5. 'r' → logprob: -11.878233909606934
    6. 't' → logprob: -12.628233909606934
    7. '```' → logprob: -12.753233909606934
    8. 'c' → logprob: -13.253233909606934
    9. '#' → logprob: -14.003233909606934
    10. '
' → logprob: -14.003233909606934

Token 334: '_left' (ID: 22189)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.04441823810338974
    2. '_left' → logprob: -3.1694183349609375
    3. '_right' → logprob: -6.9194183349609375
    4. 'left' → logprob: -8.044418334960938
    5. 'list' → logprob: -9.669418334960938
    6. 'Left' → logprob: -10.794418334960938
    7. 'Right' → logprob: -12.294418334960938
    8. '(left' → logprob: -12.419418334960938
    9. '(' → logprob: -12.669418334960938
    10. 'right' → logprob: -12.794418334960938

Token 335: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -2.0219828002154827e-05
    2. 'list' → logprob: -11.000020027160645
    3. '(' → logprob: -12.750020027160645
    4. ' list' → logprob: -15.375020027160645
    5. '(
' → logprob: -15.750020027160645
    6. ' (' → logprob: -16.62502098083496
    7. '(lst' → logprob: -16.75002098083496
    8. '=list' → logprob: -17.37502098083496
    9. '   ' → logprob: -17.75002098083496
    10. '[list' → logprob: -18.00002098083496

Token 336: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.014212633483111858
    2. 'val' → logprob: -4.264212608337402
    3. 'list' → logprob: -10.014212608337402
    4. '(val' → logprob: -13.639212608337402
    5. 'Val' → logprob: -13.889212608337402
    6. '(list' → logprob: -14.139212608337402
    7. ' val' → logprob: -14.389212608337402
    8. '```' → logprob: -15.139212608337402
    9. '_list' → logprob: -16.01421356201172
    10. '   ' → logprob: -16.13921356201172

Token 337: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.005979277193546295
    2. 'a' → logprob: -5.755979061126709
    3. '_val' → logprob: -6.130979061126709
    4. 'val' → logprob: -7.755979061126709
    5. 'list' → logprob: -9.380979537963867
    6. ',' → logprob: -10.005979537963867
    7. ',val' → logprob: -11.380979537963867
    8. '[val' → logprob: -12.005979537963867
    9. '```' → logprob: -12.255979537963867
    10. '_b' → logprob: -12.380979537963867

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005198297556489706
    2. ',var' → logprob: -5.3801984786987305
    3. ',val' → logprob: -7.7551984786987305
    4. ' ,' → logprob: -9.13019847869873
    5. 'var' → logprob: -10.75519847869873
    6. '(var' → logprob: -12.13019847869873
    7. ',
' → logprob: -12.25519847869873
    8. ',list' → logprob: -12.63019847869873
    9. '[var' → logprob: -13.38019847869873
    10. ',(' → logprob: -13.88019847869873

Token 339: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.0009125363430939615
    2. ' var' → logprob: -7.000912666320801
    3. '   ' → logprob: -15.0009126663208
    4. '(var' → logprob: -15.5009126663208
    5. 'const' → logprob: -16.125911712646484
    6. ')var' → logprob: -16.125911712646484
    7. '
' → logprob: -16.500911712646484
    8. '[var' → logprob: -16.625911712646484
    9. ' ' → logprob: -17.125911712646484
    10. '_var' → logprob: -17.875911712646484

Token 340: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -2.045823566731997e-05
    2. 'left' → logprob: -11.000020027160645
    3. '_right' → logprob: -12.750020027160645
    4. 'Left' → logprob: -15.500020027160645
    5. '
' → logprob: -16.25002098083496
    6. 'var' → logprob: -16.50002098083496
    7. '_LEFT' → logprob: -16.75002098083496
    8. ')' → logprob: -17.12502098083496
    9. '   ' → logprob: -17.12502098083496
    10. 't' → logprob: -17.25002098083496

Token 341: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4752609431743622
    2. ')
' → logprob: -0.9752609729766846
    3. ' )' → logprob: -7.7252607345581055
    4. ' )
' → logprob: -7.8502607345581055
    5. ')
' → logprob: -8.850260734558105
    6. ',' → logprob: -9.600260734558105
    7. ')+' → logprob: -10.225260734558105
    8. '   ' → logprob: -10.350260734558105
    9. ')

' → logprob: -10.975260734558105
    10. ')-' → logprob: -11.475260734558105

Token 342: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10689713805913925
    2. '
' → logprob: -2.6068971157073975
    3. '    
' → logprob: -4.606897354125977
    4. ')' → logprob: -4.731897354125977
    5. ')
' → logprob: -5.356897354125977
    6. '  
' → logprob: -6.981897354125977
    7. '   
' → logprob: -7.231897354125977
    8. 'idx' → logprob: -7.231897354125977
    9. ' 
' → logprob: -7.981897354125977
    10. 'var' → logprob: -8.606897354125977

Token 343: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.995397365652025e-05
    2. ' ' → logprob: -9.375089645385742
    3. '0' → logprob: -12.500089645385742
    4. '2' → logprob: -13.875089645385742
    5. '   ' → logprob: -15.750089645385742
    6. '
' → logprob: -17.000089645385742
    7. '```' → logprob: -17.500089645385742
    8. '<|end|>' → logprob: -17.625089645385742
    9. '  ' → logprob: -18.250089645385742
    10. ')' → logprob: -18.375089645385742

Token 344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -12.125011444091797
    3. '0' → logprob: -12.250011444091797
    4. '2' → logprob: -14.625011444091797
    5. '
' → logprob: -16.000011444091797
    6. '   ' → logprob: -17.937511444091797
    7. '```' → logprob: -17.937511444091797
    8. '(' → logprob: -18.312511444091797
    9. '3' → logprob: -18.812511444091797
    10. '[' → logprob: -19.000011444091797

Token 345: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5892210006713867
    2. '
' → logprob: -0.8392210006713867
    3. '    
' → logprob: -5.589221000671387
    4. ' list' → logprob: -6.464221000671387
    5. ' 
' → logprob: -6.839221000671387
    6. '  
' → logprob: -6.964221000671387
    7. ')' → logprob: -6.964221000671387
    8. 'var' → logprob: -6.964221000671387
    9. ')
' → logprob: -7.089221000671387
    10. 'list' → logprob: -7.214221000671387

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06411262601613998
    2. '
' → logprob: -2.939112663269043
    3. 'idx' → logprob: -4.939112663269043
    4. ' idx' → logprob: -7.189112663269043
    5. '    
' → logprob: -7.189112663269043
    6. '	idx' → logprob: -9.064112663269043
    7. ',
' → logprob: -9.564112663269043
    8. '  
' → logprob: -9.689112663269043
    9. '```' → logprob: -10.189112663269043
    10. '
' → logprob: -10.189112663269043

Token 347: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.010835699737071991
    2. ' idx' → logprob: -4.635835647583008
    3. '   ' → logprob: -7.760835647583008
    4. 'if' → logprob: -7.885835647583008
    5. 'list' → logprob: -8.510835647583008
    6. ' if' → logprob: -10.885835647583008
    7. ' list' → logprob: -11.510835647583008
    8. '```' → logprob: -11.635835647583008
    9. '	idx' → logprob: -11.760835647583008
    10. 'adj' → logprob: -12.135835647583008

Token 348: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0005135946557857096
    2. '_left' → logprob: -8.750514030456543
    3. '_adj' → logprob: -9.250514030456543
    4. 'right' → logprob: -9.375514030456543
    5. 'Right' → logprob: -10.375514030456543
    6. '=' → logprob: -10.375514030456543
    7. '```' → logprob: -11.125514030456543
    8. '   ' → logprob: -11.250514030456543
    9. '_RIGHT' → logprob: -11.625514030456543
    10. 'adj' → logprob: -11.750514030456543

Token 349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11282271891832352
    2. '=' → logprob: -2.2378227710723877
    3. ' ' → logprob: -15.612822532653809
    4. '=b' → logprob: -16.737823486328125
    5. ',' → logprob: -16.862823486328125
    6. ')' → logprob: -16.862823486328125
    7. ' =
' → logprob: -17.362823486328125
    8. '   ' → logprob: -17.612823486328125
    9. '```' → logprob: -17.862823486328125
    10. ' +=' → logprob: -18.237823486328125

Token 350: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.08895266801118851
    2. 'bis' → logprob: -2.4639527797698975
    3. '1' → logprob: -12.838953018188477
    4. 'b' → logprob: -12.963953018188477
    5. '0' → logprob: -13.588953018188477
    6. '	b' → logprob: -13.901453018188477
    7. ' ' → logprob: -14.151453018188477
    8. '   ' → logprob: -14.338953018188477
    9. '2' → logprob: -14.838953018188477
    10. '```' → logprob: -14.901453018188477

Token 351: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.09121625125408173
    2. 'ct' → logprob: -2.4662163257598877
    3. 'sect' → logprob: -6.091216087341309
    4. 'ce' → logprob: -12.466216087341309
    5. 't' → logprob: -13.466216087341309
    6. 'set' → logprob: -13.966216087341309
    7. '```' → logprob: -14.091216087341309
    8. 'с' → logprob: -14.091216087341309
    9. 'rect' → logprob: -14.216216087341309
    10. 'cet' → logprob: -14.591216087341309

Token 352: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -3.7385154428193346e-05
    2. '_right' → logprob: -10.62503719329834
    3. '_left' → logprob: -11.37503719329834
    4. '.' → logprob: -14.87503719329834
    5. ' .' → logprob: -15.25003719329834
    6. '```' → logprob: -15.37503719329834
    7. '
' → logprob: -15.50003719329834
    8. 'bis' → logprob: -15.62503719329834
    9. 'Right' → logprob: -16.125038146972656
    10. ' bis' → logprob: -16.125038146972656

Token 353: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3973233699798584
    2. 'sect' → logprob: -1.1473233699798584
    3. 'ect' → logprob: -5.1473236083984375
    4. 's' → logprob: -5.8973236083984375
    5. 'ct' → logprob: -6.7723236083984375
    6. 'bis' → logprob: -7.8973236083984375
    7. 'sc' → logprob: -9.522323608398438
    8. '```' → logprob: -9.772323608398438
    9. ' bis' → logprob: -10.647323608398438
    10. 'ist' → logprob: -10.897323608398438

Token 354: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.08992858231067657
    2. 'ect' → logprob: -2.46492862701416
    3. 'sect' → logprob: -6.96492862701416
    4. 'n' → logprob: -10.83992862701416
    5. 'с' → logprob: -12.21492862701416
    6. 'ce' → logprob: -12.33992862701416
    7. 't' → logprob: -12.46492862701416
    8. '#' → logprob: -13.08992862701416
    9. '```' → logprob: -13.21492862701416
    10. '`' → logprob: -13.58992862701416

Token 355: '_right' (ID: 24402)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.38931575417518616
    2. '_right' → logprob: -1.1393157243728638
    3. 'right' → logprob: -6.764315605163574
    4. 'left' → logprob: -6.764315605163574
    5. 'bis' → logprob: -9.014315605163574
    6. 'Right' → logprob: -12.014315605163574
    7. 'Left' → logprob: -13.514315605163574
    8. '.b' → logprob: -13.764315605163574
    9. '```' → logprob: -13.889315605163574
    10. 'ight' → logprob: -14.639315605163574

Token 356: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -1.2471589798224159e-05
    2. '(' → logprob: -11.375012397766113
    3. ' (' → logprob: -14.000012397766113
    4. '(
' → logprob: -17.00001335144043
    5. '(lst' → logprob: -17.62501335144043
    6. ' list' → logprob: -17.75001335144043
    7. 'list' → logprob: -18.00001335144043
    8. '=list' → logprob: -18.12501335144043
    9. ',list' → logprob: -18.12501335144043
    10. '(lista' → logprob: -18.37501335144043

Token 357: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0004240011621732265
    2. 'val' → logprob: -8.1254243850708
    3. 'list' → logprob: -9.0004243850708
    4. '```' → logprob: -13.8754243850708
    5. 'a' → logprob: -14.3754243850708
    6. '_a' → logprob: -14.6254243850708
    7. '(list' → logprob: -14.7504243850708
    8. ' list' → logprob: -15.0004243850708
    9. '_list' → logprob: -15.1254243850708
    10. 'Val' → logprob: -15.6254243850708

Token 358: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.8056634664535522
    2. '_val' → logprob: -0.8056634664535522
    3. '_b' → logprob: -2.430663585662842
    4. 'val' → logprob: -4.305663585662842
    5. 'list' → logprob: -6.055663585662842
    6. '(list' → logprob: -6.805663585662842
    7. 'a' → logprob: -7.930663585662842
    8. '   ' → logprob: -8.305663108825684
    9. '```' → logprob: -8.930663108825684
    10. ' list' → logprob: -9.180663108825684

Token 359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001855406299000606
    2. ',list' → logprob: -9.0001859664917
    3. ' ,' → logprob: -9.7501859664917
    4. ',
' → logprob: -13.2501859664917
    5. 'list' → logprob: -14.5001859664917
    6. ' list' → logprob: -14.7501859664917
    7. '(list' → logprob: -14.7501859664917
    8. ',[' → logprob: -15.6251859664917
    9. '   ' → logprob: -15.8751859664917
    10. '[' → logprob: -16.125185012817383

Token 360: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.7106316685676575
    2. 'list' → logprob: -1.0856316089630127
    3. ' list' → logprob: -2.4606316089630127
    4. ' var' → logprob: -2.4606316089630127
    5. '[var' → logprob: -8.710631370544434
    6. '[' → logprob: -11.835631370544434
    7. ' [' → logprob: -11.835631370544434
    8. ' ' → logprob: -11.960631370544434
    9. ')' → logprob: -11.960631370544434
    10. ')var' → logprob: -12.085631370544434

Token 361: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.08896400779485703
    2. 'right' → logprob: -2.4639639854431152
    3. '_left' → logprob: -11.713964462280273
    4. ' right' → logprob: -12.963964462280273
    5. '	right' → logprob: -12.963964462280273
    6. 'Right' → logprob: -13.213964462280273
    7. '
' → logprob: -13.463964462280273
    8. '```' → logprob: -13.588964462280273
    9. 'left' → logprob: -13.713964462280273
    10. '   ' → logprob: -13.713964462280273

Token 362: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003598051844164729
    2. ' -' → logprob: -6.003598213195801
    3. ' )' → logprob: -7.128598213195801
    4. ')-' → logprob: -8.8785982131958
    5. '-' → logprob: -9.2535982131958
    6. '   ' → logprob: -9.6285982131958
    7. ',' → logprob: -12.6285982131958
    8. ')
' → logprob: -12.6285982131958
    9. ' ' → logprob: -13.0035982131958
    10. '")' → logprob: -13.3785982131958

Token 363: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3796056807041168
    2. ' -' → logprob: -1.3796056509017944
    3. '-' → logprob: -3.004605770111084
    4. ' +' → logprob: -5.004605770111084
    5. '+' → logprob: -6.004605770111084
    6. '<|end|>' → logprob: -6.004605770111084
    7. ')' → logprob: -6.629605770111084
    8. ' ' → logprob: -7.879605770111084
    9. '
' → logprob: -7.879605770111084
    10. ',' → logprob: -9.004605293273926

Token 364: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026614928618073463
    2. ' ' → logprob: -3.6516149044036865
    3. '2' → logprob: -8.151615142822266
    4. '0' → logprob: -10.651615142822266
    5. '   ' → logprob: -13.651615142822266
    6. '```' → logprob: -14.714115142822266
    7. '
' → logprob: -14.901615142822266
    8. ' ' → logprob: -15.401615142822266
    9. '  ' → logprob: -16.526615142822266
    10. '3' → logprob: -17.089115142822266

Token 365: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005007467232644558
    2. '2' → logprob: -5.380007266998291
    3. ' ' → logprob: -8.00500774383545
    4. '0' → logprob: -9.88000774383545
    5. '
' → logprob: -14.25500774383545
    6. '   ' → logprob: -14.50500774383545
    7. '```' → logprob: -14.50500774383545
    8. '           ' → logprob: -16.005006790161133
    9. '  ' → logprob: -17.192506790161133
    10. '3' → logprob: -17.192506790161133

Token 366: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038336943835020065
    2. '
' → logprob: -3.913336992263794
    3. '<|end|>' → logprob: -4.163336753845215
    4. ')' → logprob: -7.538336753845215
    5. 'list' → logprob: -7.663336753845215
    6. '    
' → logprob: -7.913336753845215
    7. ' list' → logprob: -8.163336753845215
    8. '	list' → logprob: -9.038336753845215
    9. '<|end|>' → logprob: -9.913336753845215
    10. '[
' → logprob: -10.163336753845215

Token 367: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05830750986933708
    2. 'list' → logprob: -3.808307409286499
    3. '
' → logprob: -4.183307647705078
    4. '<|end|>' → logprob: -4.433307647705078
    5. '```' → logprob: -5.808307647705078
    6. ' list' → logprob: -6.558307647705078
    7. ')' → logprob: -7.308307647705078
    8. '    
' → logprob: -7.308307647705078
    9. '	list' → logprob: -7.808307647705078
    10. '[
' → logprob: -8.058307647705078

Token 368: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.0745292454957962
    2. ' list' → logprob: -2.6995291709899902
    3. '   ' → logprob: -5.69952917098999
    4. '
' → logprob: -7.44952917098999
    5. '```' → logprob: -8.199529647827148
    6. 'if' → logprob: -8.949529647827148
    7. ' if' → logprob: -9.699529647827148
    8. '	list' → logprob: -9.824529647827148
    9. ')' → logprob: -10.449529647827148
    10. '    
' → logprob: -10.699529647827148

Token 369: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -2.248469718324486e-05
    2. 'adj' → logprob: -11.250022888183594
    3. '_ad' → logprob: -12.625022888183594
    4. '_pair' → logprob: -12.875022888183594
    5. '_val' → logprob: -13.750022888183594
    6. 's' → logprob: -15.250022888183594
    7. '```' → logprob: -15.625022888183594
    8. 'Adj' → logprob: -15.750022888183594
    9. '`' → logprob: -16.125022888183594
    10. '_' → logprob: -16.125022888183594

Token 370: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.0004481885116547346
    2. '_adj' → logprob: -8.375448226928711
    3. '_cent' → logprob: -9.500448226928711
    4. 'ent' → logprob: -10.250448226928711
    5. 'acency' → logprob: -10.250448226928711
    6. 'cent' → logprob: -10.250448226928711
    7. '_' → logprob: -11.625448226928711
    8. '```' → logprob: -11.750448226928711
    9. 'ac' → logprob: -12.000448226928711
    10. '_list' → logprob: -13.125448226928711

Token 371: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -6.511406809295295e-06
    2. '_list' → logprob: -12.750006675720215
    3. '_adj' → logprob: -13.750006675720215
    4. '```' → logprob: -14.250006675720215
    5. 'graph' → logprob: -14.625006675720215
    6. '[' → logprob: -14.750006675720215
    7. '_gr' → logprob: -15.875006675720215
    8. '_nodes' → logprob: -16.1250057220459
    9. '
' → logprob: -16.2500057220459
    10. '[_' → logprob: -16.2500057220459

Token 372: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.250000953674316
    3. '[var' → logprob: -15.875000953674316
    4. ' [' → logprob: -16.75
    5. '```' → logprob: -16.75
    6. 'idx' → logprob: -16.875
    7. '   ' → logprob: -17.5
    8. '.append' → logprob: -18.0
    9. '[id' → logprob: -18.0
    10. '[i' → logprob: -18.0

Token 373: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.017287753522396088
    2. '_right' → logprob: -4.142287731170654
    3. '_adj' → logprob: -7.267287731170654
    4. '_edge' → logprob: -8.392288208007812
    5. '[idx' → logprob: -9.642288208007812
    6. '_edges' → logprob: -9.767288208007812
    7. 'left' → logprob: -9.892288208007812
    8. '_idx' → logprob: -10.392288208007812
    9. '```' → logprob: -10.517288208007812
    10. '.append' → logprob: -10.642288208007812

Token 374: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003332299180328846
    2. '].' → logprob: -5.753332138061523
    3. '.' → logprob: -8.878332138061523
    4. ').' → logprob: -11.503332138061523
    5. '.app' → logprob: -13.378332138061523
    6. '.extend' → logprob: -13.503332138061523
    7. '.add' → logprob: -13.753332138061523
    8. '.ap' → logprob: -14.878332138061523
    9. ' .' → logprob: -15.253332138061523
    10. '}.' → logprob: -15.628332138061523

Token 375: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. '.append' → logprob: -15.0
    3. ' append' → logprob: -16.75
    4. 'app' → logprob: -20.25
    5. '_append' → logprob: -20.625
    6. 'appen' → logprob: -21.75
    7. '	append' → logprob: -22.5
    8. 'insert' → logprob: -24.0
    9. 'add' → logprob: -24.125
    10. 'extend' → logprob: -24.125

Token 376: '((' (ID: 2054)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.0074302079156041145
    2. 'idx' → logprob: -5.007430076599121
    3. '((' → logprob: -7.257430076599121
    4. ' idx' → logprob: -12.257430076599121
    5. '(' → logprob: -13.382430076599121
    6. ' (' → logprob: -13.507430076599121
    7. '[idx' → logprob: -14.507430076599121
    8. '	idx' → logprob: -14.507430076599121
    9. '(id' → logprob: -15.507430076599121
    10. 'var' → logprob: -15.507430076599121

Token 377: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0040939548052847385
    2. ' idx' → logprob: -5.504094123840332
    3. '   ' → logprob: -11.504094123840332
    4. '(idx' → logprob: -13.629094123840332
    5. '
' → logprob: -14.004094123840332
    6. '	idx' → logprob: -14.129094123840332
    7. 'index' → logprob: -14.629094123840332
    8. 'var' → logprob: -14.754094123840332
    9. ' ' → logprob: -15.254094123840332
    10. 'id' → logprob: -15.504094123840332

Token 378: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.00164590694475919
    2. '_edge' → logprob: -7.001646041870117
    3. '_left' → logprob: -7.251646041870117
    4. 'right' → logprob: -11.001646041870117
    5. 'Right' → logprob: -12.376646041870117
    6. '_adj' → logprob: -14.001646041870117
    7. '_edges' → logprob: -14.251646041870117
    8. '_' → logprob: -14.751646041870117
    9. '_RIGHT' → logprob: -14.876646041870117
    10. '   ' → logprob: -15.751646041870117

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043853666284121573
    2. ' ,' → logprob: -7.750438690185547
    3. '   ' → logprob: -12.625438690185547
    4. 'idx' → logprob: -14.375438690185547
    5. ',
' → logprob: -14.500438690185547
    6. '‌,' → logprob: -14.875438690185547
    7. '-' → logprob: -15.125438690185547
    8. ',index' → logprob: -15.125438690185547
    9. ' ' → logprob: -15.250438690185547
    10. '+' → logprob: -15.750438690185547

Token 380: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.11374707520008087
    2. ' idx' → logprob: -2.2387471199035645
    3. '1' → logprob: -7.3637471199035645
    4. 'var' → logprob: -9.113746643066406
    5. '0' → logprob: -9.363746643066406
    6. ' ' → logprob: -10.988746643066406
    7. ' var' → logprob: -11.113746643066406
    8. '(idx' → logprob: -11.363746643066406
    9. 'True' → logprob: -11.488746643066406
    10. '+' → logprob: -11.863746643066406

Token 381: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0002787359117064625
    2. 'edge' → logprob: -8.25027847290039
    3. ')' → logprob: -11.75027847290039
    4. 'Edge' → logprob: -13.25027847290039
    5. ' edge' → logprob: -13.62527847290039
    6. '_idx' → logprob: -13.87527847290039
    7. '_EDGE' → logprob: -14.00027847290039
    8. '_token' → logprob: -14.37527847290039
    9. '_edges' → logprob: -14.50027847290039
    10. '_' → logprob: -14.62527847290039

Token 382: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006179290823638439
    2. '))
' → logprob: -5.881179332733154
    3. ',' → logprob: -6.006179332733154
    4. ')' → logprob: -7.631179332733154
    5. ' ))' → logprob: -8.256178855895996
    6. '   ' → logprob: -9.006178855895996
    7. ' ' → logprob: -12.506178855895996
    8. ' ,' → logprob: -12.506178855895996
    9. ')))' → logprob: -12.506178855895996
    10. '));' → logprob: -12.631178855895996

Token 383: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006633778568357229
    2. ')' → logprob: -5.506633758544922
    3. '<|end|>' → logprob: -6.006633758544922
    4. '```' → logprob: -10.631633758544922
    5. '<|end|>' → logprob: -11.506633758544922
    6. '[' → logprob: -11.631633758544922
    7. '...' → logprob: -12.131633758544922
    8. '.' → logprob: -12.256633758544922
    9. 'list' → logprob: -12.381633758544922
    10. 'for' → logprob: -12.381633758544922

Token 384: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.023552339524030685
    2. '   ' → logprob: -3.773552417755127
    3. ' list' → logprob: -8.148551940917969
    4. ')' → logprob: -12.023551940917969
    5. '	list' → logprob: -12.648551940917969
    6. '...' → logprob: -13.148551940917969
    7. '```' → logprob: -13.648551940917969
    8. '  ' → logprob: -14.148551940917969
    9. '(list' → logprob: -14.648551940917969
    10. '[' → logprob: -14.648551940917969

Token 385: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -8.65707261255011e-06
    2. 'adj' → logprob: -12.250008583068848
    3. '_right' → logprob: -13.375008583068848
    4. '_ad' → logprob: -13.750008583068848
    5. 'Adjacent' → logprob: -15.500008583068848
    6. '_val' → logprob: -16.000009536743164
    7. 'Adj' → logprob: -16.250009536743164
    8. 's' → logprob: -16.375009536743164
    9. ' adjacent' → logprob: -16.750009536743164
    10. '```' → logprob: -16.875009536743164

Token 386: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -1.4617256056226324e-05
    2. 'cent' → logprob: -11.250014305114746
    3. 'acency' → logprob: -14.125014305114746
    4. '[' → logprob: -15.250014305114746
    5. 'ent' → logprob: -15.875014305114746
    6. 'ac' → logprob: -16.000015258789062
    7. 'oint' → logprob: -16.500015258789062
    8. '_cent' → logprob: -17.000015258789062
    9. '_list' → logprob: -17.125015258789062
    10. '#' → logprob: -17.250015258789062

Token 387: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -1.4974866644479334e-05
    2. 'graph' → logprob: -11.375015258789062
    3. '```' → logprob: -13.750015258789062
    4. 's' → logprob: -14.750015258789062
    5. ')_' → logprob: -15.375015258789062
    6. '[' → logprob: -15.750015258789062
    7. '_' → logprob: -15.875015258789062
    8. '_chart' → logprob: -15.875015258789062
    9. '_gr' → logprob: -16.250015258789062
    10. '_g' → logprob: -16.250015258789062

Token 388: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0003422567679081112
    2. '[var' → logprob: -8.12534236907959
    3. '[' → logprob: -10.87534236907959
    4. 'idx' → logprob: -11.37534236907959
    5. '```' → logprob: -13.12534236907959
    6. '<|end|>' → logprob: -13.12534236907959
    7. 'var' → logprob: -13.87534236907959
    8. '=' → logprob: -13.87534236907959
    9. ')' → logprob: -14.12534236907959
    10. '[src' → logprob: -14.12534236907959

Token 389: '_right' (ID: 24402)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.633204996585846
    2. '_right' → logprob: -0.758204996585846
    3. 'left' → logprob: -7.883204936981201
    4. 'right' → logprob: -8.63320541381836
    5. 'Right' → logprob: -10.88320541381836
    6. '```' → logprob: -11.63320541381836
    7. 'Left' → logprob: -12.13320541381836
    8. '   ' → logprob: -12.88320541381836
    9. '_RIGHT' → logprob: -13.38320541381836
    10. ' ' → logprob: -13.88320541381836

Token 390: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.2814258635044098
    2. ').' → logprob: -1.4064258337020874
    3. ']' → logprob: -9.531425476074219
    4. '.append' → logprob: -9.906425476074219
    5. '   ' → logprob: -10.031425476074219
    6. ' ' → logprob: -10.531425476074219
    7. ' ].' → logprob: -10.781425476074219
    8. ')' → logprob: -10.906425476074219
    9. ']).' → logprob: -11.406425476074219
    10. '.' → logprob: -11.781425476074219

Token 391: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.153795766294934e-06
    2. '.append' → logprob: -12.625005722045898
    3. ' append' → logprob: -12.875005722045898
    4. '```' → logprob: -16.6250057220459
    5. 'appen' → logprob: -16.7500057220459
    6. '	append' → logprob: -17.2500057220459
    7. 'app' → logprob: -17.5000057220459
    8. '   ' → logprob: -17.7500057220459
    9. ' ' → logprob: -18.3750057220459
    10. 'extend' → logprob: -18.5000057220459

Token 392: '((' (ID: 2054)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.3167163133621216
    2. '((' → logprob: -1.3167163133621216
    3. ' (' → logprob: -5.691716194152832
    4. '(' → logprob: -10.316716194152832
    5. '   ' → logprob: -10.816716194152832
    6. ' ((' → logprob: -12.316716194152832
    7. '(None' → logprob: -12.316716194152832
    8. '  ' → logprob: -12.691716194152832
    9. ' ' → logprob: -13.066716194152832
    10. '(var' → logprob: -13.191716194152832

Token 393: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.13223043084144592
    2. ' idx' → logprob: -2.132230520248413
    3. '(idx' → logprob: -5.257230281829834
    4. ' (' → logprob: -9.632230758666992
    5. '	idx' → logprob: -11.882230758666992
    6. '[idx' → logprob: -13.132230758666992
    7. '   ' → logprob: -13.257230758666992
    8. '_idx' → logprob: -14.007230758666992
    9. '.idx' → logprob: -14.507230758666992
    10. 'var' → logprob: -15.507230758666992

Token 394: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0015303362160921097
    2. 'left' → logprob: -6.501530170440674
    3. '_right' → logprob: -11.251530647277832
    4. 'idx' → logprob: -11.501530647277832
    5. 'Left' → logprob: -13.001530647277832
    6. '_LEFT' → logprob: -14.126530647277832
    7. '_idx' → logprob: -14.626530647277832
    8. 'LEFT' → logprob: -15.251530647277832
    9. '   ' → logprob: -15.876530647277832
    10. ')' → logprob: -16.001529693603516

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.897412822581828e-05
    2. ' ,' → logprob: -9.625068664550781
    3. '<|end|>' → logprob: -13.875068664550781
    4. ',
' → logprob: -14.125068664550781
    5. '),' → logprob: -14.750068664550781
    6. '[' → logprob: -15.875068664550781
    7. ')' → logprob: -15.875068664550781
    8. '```' → logprob: -16.12506866455078
    9. '‌,' → logprob: -16.25006866455078
    10. '   ' → logprob: -16.75006866455078

Token 396: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6351737976074219
    2. ' idx' → logprob: -0.7601737976074219
    3. '(idx' → logprob: -6.135173797607422
    4. 'var' → logprob: -8.385173797607422
    5. ' var' → logprob: -9.385173797607422
    6. ' (' → logprob: -9.885173797607422
    7. '0' → logprob: -11.135173797607422
    8. '(' → logprob: -11.260173797607422
    9. '	idx' → logprob: -12.635173797607422
    10. ' ' → logprob: -13.010173797607422

Token 397: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0009024077444337308
    2. 'edge' → logprob: -7.87590217590332
    3. '))' → logprob: -9.00090217590332
    4. ' ' → logprob: -9.12590217590332
    5. ',' → logprob: -9.62590217590332
    6. ' edge' → logprob: -10.00090217590332
    7. ' _' → logprob: -10.37590217590332
    8. '   ' → logprob: -10.87590217590332
    9. '-edge' → logprob: -10.87590217590332
    10. '1' → logprob: -11.12590217590332

Token 398: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.347765181795694e-05
    2. ')
' → logprob: -10.625053405761719
    3. '))' → logprob: -11.000053405761719
    4. ' )' → logprob: -11.625053405761719
    5. '   ' → logprob: -12.875053405761719
    6. ')}' → logprob: -15.250053405761719
    7. ')]' → logprob: -15.875053405761719
    8. '])' → logprob: -16.12505340576172
    9. ')`' → logprob: -16.25005340576172
    10. '),' → logprob: -16.75005340576172

Token 399: 'list' (ID: 2641)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8276947736740112
    2. 'var' → logprob: -1.2026947736740112
    3. 'def' → logprob: -2.577694892883301
    4. '```' → logprob: -3.077694892883301
    5. 'import' → logprob: -3.452694892883301
    6. 'deque' → logprob: -3.577694892883301
    7. 'dp' → logprob: -4.202694892883301
    8. 'visited' → logprob: -5.077694892883301
    9. '<|end|>' → logprob: -5.202694892883301
    10. ')' → logprob: -5.202694892883301

Token 400: '_node' (ID: 11390)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.7949822545051575
    2. '_dp' → logprob: -1.6699821949005127
    3. '_' → logprob: -1.9199821949005127
    4. '_distance' → logprob: -2.2949821949005127
    5. '_val' → logprob: -3.1699821949005127
    6. '_pair' → logprob: -4.544982433319092
    7. '_cost' → logprob: -4.669982433319092
    8. '_used' → logprob: -4.794982433319092
    9. '_prev' → logprob: -5.294982433319092
    10. '_min' → logprob: -5.294982433319092

Token 401: '_par' (ID: 31329)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.8071539998054504
    2. '_' → logprob: -1.5571539402008057
    3. '_de' → logprob: -2.5571539402008057
    4. '_dist' → logprob: -3.0571539402008057
    5. '_state' → logprob: -3.3071539402008057
    6. '_stack' → logprob: -3.5571539402008057
    7. '_used' → logprob: -3.8071539402008057
    8. '_edges' → logprob: -4.182154178619385
    9. '_degree' → logprob: -4.182154178619385
    10. '_val' → logprob: -4.307154178619385

Token 402: 'ity' (ID: 536)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.09272332489490509
    2. 'ents' → logprob: -2.4677233695983887
    3. 'ts' → logprob: -6.092723369598389
    4. 't' → logprob: -7.467723369598389
    5. 'nt' → logprob: -8.46772289276123
    6. 'nts' → logprob: -8.46772289276123
    7. '```' → logprob: -8.71772289276123
    8. 'ty' → logprob: -9.09272289276123
    9. '_par' → logprob: -9.59272289276123
    10. '   ' → logprob: -10.84272289276123

Token 403: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28128156065940857
    2. '=' → logprob: -1.406281590461731
    3. ',' → logprob: -10.281281471252441
    4. '_' → logprob: -10.406281471252441
    5. '=[]' → logprob: -10.531281471252441
    6. ')' → logprob: -11.656281471252441
    7. '=[' → logprob: -12.156281471252441
    8. '_=' → logprob: -12.281281471252441
    9. '<|end|>' → logprob: -12.281281471252441
    10. '[' → logprob: -12.781281471252441

Token 404: ' [' (ID: 723)
  Prédit: '[val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[val' → logprob: -0.45058658719062805
    2. '[' → logprob: -1.4505865573883057
    3. '[var' → logprob: -2.2005865573883057
    4. ' [' → logprob: -4.700586795806885
    5. '[(' → logprob: -5.200586795806885
    6. '[len' → logprob: -6.950586795806885
    7. '[list' → logprob: -7.200586795806885
    8. '[v' → logprob: -7.950586795806885
    9. '[i' → logprob: -8.700586318969727
    10. '[-' → logprob: -8.950586318969727

Token 405: '0' (ID: 15)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6947275400161743
    2. '(val' → logprob: -1.0697275400161743
    3. '0' → logprob: -2.6947274208068848
    4. '(' → logprob: -3.1947274208068848
    5. '(b' → logprob: -4.444727420806885
    6. ' val' → logprob: -4.444727420806885
    7. 'b' → logprob: -5.069727420806885
    8. 'False' → logprob: -5.819727420806885
    9. '(var' → logprob: -5.819727420806885
    10. 'var' → logprob: -6.069727420806885

Token 406: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4043472111225128
    2. ']' → logprob: -1.1543471813201904
    3. 'for' → logprob: -4.5293474197387695
    4. ',' → logprob: -5.1543474197387695
    5. ' ]' → logprob: -8.52934741973877
    6. ']*' → logprob: -8.77934741973877
    7. ' ' → logprob: -9.15434741973877
    8. '   ' → logprob: -9.40434741973877
    9. ']*(' → logprob: -9.90434741973877
    10. '0' → logprob: -10.02934741973877

Token 407: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6710402369499207
    2. 'for' → logprob: -1.0460402965545654
    3. ']' → logprob: -2.0460402965545654
    4. ']*' → logprob: -6.171040058135986
    5. ',' → logprob: -6.546040058135986
    6. ')' → logprob: -6.671040058135986
    7. '+' → logprob: -7.046040058135986
    8. '<|end|>' → logprob: -7.671040058135986
    9. '0' → logprob: -7.796040058135986
    10. ']*(' → logprob: -8.046040534973145

Token 408: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -1.4021237802808173e-05
    2. ' var' → logprob: -12.000014305114746
    3. 'len' → logprob: -12.125014305114746
    4. '(var' → logprob: -13.000014305114746
    5. '(' → logprob: -16.75001335144043
    6. ')var' → logprob: -18.00001335144043
    7. '(len' → logprob: -18.12501335144043
    8. '   ' → logprob: -19.12501335144043
    9. ' (' → logprob: -19.12501335144043
    10. '[var' → logprob: -19.50001335144043

Token 409: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -3.1424973713001236e-05
    2. 'nodes' → logprob: -10.500031471252441
    3. '_node' → logprob: -13.125031471252441
    4. 'var' → logprob: -13.875031471252441
    5. 'node' → logprob: -15.125031471252441
    6. '
' → logprob: -15.875031471252441
    7. 'val' → logprob: -15.875031471252441
    8. '```' → logprob: -16.500030517578125
    9. '_var' → logprob: -16.750030517578125
    10. '_' → logprob: -16.750030517578125

Token 410: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.0015102163888514042
    2. 'total' → logprob: -6.501510143280029
    3. '_nodes' → logprob: -13.501510620117188
    4. '_' → logprob: -13.876510620117188
    5. ' total' → logprob: -13.876510620117188
    6. '
' → logprob: -14.001510620117188
    7. 'Total' → logprob: -14.126510620117188
    8. '_val' → logprob: -14.501510620117188
    9. '   ' → logprob: -14.626510620117188
    10. '_TOTAL' → logprob: -15.001510620117188

Token 411: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18281951546669006
    2. '<|end|>' → logprob: -2.4328196048736572
    3. 'for' → logprob: -2.9328196048736572
    4. 'list' → logprob: -4.557819366455078
    5. 'var' → logprob: -5.557819366455078
    6. ')' → logprob: -5.807819366455078
    7. '```' → logprob: -6.057819366455078
    8. ' for' → logprob: -6.307819366455078
    9. ',
' → logprob: -7.182819366455078
    10. '[' → logprob: -7.307819366455078

Token 412: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47126540541648865
    2. 'stack' → logprob: -1.846265435218811
    3. 'def' → logprob: -2.8462653160095215
    4. 'var' → logprob: -2.8462653160095215
    5. 'deque' → logprob: -3.0962653160095215
    6. 'visited' → logprob: -4.0962653160095215
    7. '[' → logprob: -4.5962653160095215
    8. '```' → logprob: -4.8462653160095215
    9. 'list' → logprob: -4.9712653160095215
    10. 'import' → logprob: -5.5962653160095215

Token 413: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.32531389594078064
    2. ' idx' → logprob: -1.700313925743103
    3. 'i' → logprob: -2.7003138065338135
    4. 'var' → logprob: -4.075314044952393
    5. ' i' → logprob: -4.825314044952393
    6. ' var' → logprob: -6.700314044952393
    7. 'index' → logprob: -7.200314044952393
    8. 'node' → logprob: -8.325313568115234
    9. '_idx' → logprob: -8.325313568115234
    10. ' index' → logprob: -9.200313568115234

Token 414: '_node' (ID: 11390)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03701270371675491
    2. 'in' → logprob: -3.787012815475464
    3. '_node' → logprob: -5.287012577056885
    4. ',' → logprob: -5.412012577056885
    5. 'node' → logprob: -5.912012577056885
    6. '_' → logprob: -7.537012577056885
    7. ' node' → logprob: -7.787012577056885
    8. '_,' → logprob: -9.412013053894043
    9. ',node' → logprob: -9.412013053894043
    10. '_idx' → logprob: -9.537013053894043

Token 415: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.051673147827386856
    2. 'in' → logprob: -3.051673173904419
    3. ',' → logprob: -5.92667293548584
    4. '_' → logprob: -8.80167293548584
    5. ' ' → logprob: -9.17667293548584
    6. '	in' → logprob: -10.17667293548584
    7. '_in' → logprob: -10.55167293548584
    8. ' ,' → logprob: -11.05167293548584
    9. '<|end|>' → logprob: -11.17667293548584
    10. '   ' → logprob: -11.42667293548584

Token 416: ' (' (ID: 350)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.4246739149093628
    2. '(_,' → logprob: -2.1746740341186523
    3. 'val' → logprob: -2.2996740341186523
    4. ' val' → logprob: -2.5496740341186523
    5. ' (' → logprob: -3.1746740341186523
    6. '(var' → logprob: -5.924674034118652
    7. '(' → logprob: -6.049674034118652
    8. ' (_,' → logprob: -6.299674034118652
    9. '(idx' → logprob: -6.549674034118652
    10. '(_' → logprob: -6.799674034118652

Token 417: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.024658221751451492
    2. 'var' → logprob: -4.399658203125
    3. '_val' → logprob: -5.399658203125
    4. '_,' → logprob: -5.524658203125
    5. 'a' → logprob: -5.899658203125
    6. '_a' → logprob: -8.274658203125
    7. '_' → logprob: -8.524658203125
    8. ' val' → logprob: -9.024658203125
    9. 'va' → logprob: -10.149658203125
    10. 'idx' → logprob: -10.274658203125

Token 418: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00030852947384119034
    2. 'a' → logprob: -8.250308990478516
    3. '_b' → logprob: -10.750308990478516
    4. '_,' → logprob: -12.000308990478516
    5. ',' → logprob: -12.125308990478516
    6. ',_' → logprob: -12.750308990478516
    7. '_val' → logprob: -12.750308990478516
    8. 'val' → logprob: -13.250308990478516
    9. ' _' → logprob: -13.250308990478516
    10. ')' → logprob: -14.000308990478516

Token 419: '_prev' (ID: 60491)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14084690809249878
    2. ',' → logprob: -2.3908469676971436
    3. ',)' → logprob: -3.2658469676971436
    4. ' )' → logprob: -6.7658467292785645
    5. ' ,' → logprob: -8.765847206115723
    6. '_idx' → logprob: -9.515847206115723
    7. '_)' → logprob: -10.015847206115723
    8. ')=' → logprob: -10.515847206115723
    9. '=' → logprob: -10.890847206115723
    10. '_,' → logprob: -11.015847206115723

Token 420: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11505984514951706
    2. ',' → logprob: -2.4900598526000977
    3. ',)' → logprob: -3.7400598526000977
    4. ' )' → logprob: -7.115059852600098
    5. '_val' → logprob: -7.740059852600098
    6. ' ,' → logprob: -8.240059852600098
    7. ',val' → logprob: -8.365059852600098
    8. 'val' → logprob: -8.990059852600098
    9. '_,' → logprob: -10.740059852600098
    10. '_)' → logprob: -11.115059852600098

Token 421: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.010226773098111153
    2. ' val' → logprob: -4.635226726531982
    3. '_)' → logprob: -8.76022720336914
    4. ')' → logprob: -9.13522720336914
    5. '_' → logprob: -9.38522720336914
    6. '_val' → logprob: -9.63522720336914
    7. 'var' → logprob: -10.38522720336914
    8. ' _)' → logprob: -11.38522720336914
    9. ' _' → logprob: -12.88522720336914
    10. ' ' → logprob: -13.38522720336914

Token 422: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.004632334224879742
    2. ')' → logprob: -5.629632472991943
    3. '_a' → logprob: -7.379632472991943
    4. 'b' → logprob: -8.379631996154785
    5. ')_' → logprob: -9.504631996154785
    6. '_val' → logprob: -10.129631996154785
    7. '_node' → logprob: -10.629631996154785
    8. 'a' → logprob: -11.254631996154785
    9. '_)' → logprob: -11.754631996154785
    10. '_prev' → logprob: -12.504631996154785

Token 423: '_next' (ID: 25436)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021089358255267143
    2. '_prev' → logprob: -3.8960893154144287
    3. '_next' → logprob: -8.521089553833008
    4. ' )' → logprob: -9.271089553833008
    5. '_idx' → logprob: -9.271089553833008
    6. ',' → logprob: -9.646089553833008
    7. 'prev' → logprob: -10.396089553833008
    8. '_)' → logprob: -11.021089553833008
    9. '   ' → logprob: -11.521089553833008
    10. ')=' → logprob: -11.646089553833008

Token 424: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001035787514410913
    2. ',' → logprob: -7.501035690307617
    3. ' )' → logprob: -8.126035690307617
    4. '),' → logprob: -9.001035690307617
    5. ' in' → logprob: -11.001035690307617
    6. 'in' → logprob: -11.126035690307617
    7. '   ' → logprob: -11.501035690307617
    8. ')=' → logprob: -12.001035690307617
    9. '_prev' → logprob: -12.876035690307617
    10. ',)' → logprob: -13.251035690307617

Token 425: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4372038245201111
    2. 'in' → logprob: -1.0622038841247559
    3. ',' → logprob: -4.812203884124756
    4. '=' → logprob: -9.562203407287598
    5. '_in' → logprob: -9.812203407287598
    6. ')' → logprob: -10.062203407287598
    7. '<|end|>' → logprob: -10.062203407287598
    8. ' ' → logprob: -11.187203407287598
    9. ' =' → logprob: -11.312203407287598
    10. '	in' → logprob: -11.499703407287598

Token 426: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.14780904352664948
    2. ' enumerate' → logprob: -2.0228090286254883
    3. 'zip' → logprob: -5.772809028625488
    4. 'in' → logprob: -7.022809028625488
    5. ' zip' → logprob: -7.397809028625488
    6. 'list' → logprob: -8.022809028625488
    7. '(zip' → logprob: -9.897809028625488
    8. ' in' → logprob: -10.147809028625488
    9. '[(' → logprob: -10.272809028625488
    10. '(list' → logprob: -11.022809028625488

Token 427: '(zip' (ID: 87520)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.07551061362028122
    2. '(zip' → logprob: -2.8255105018615723
    3. ' zip' → logprob: -4.450510501861572
    4. 'list' → logprob: -6.450510501861572
    5. '[(' → logprob: -9.20051097869873
    6. '(list' → logprob: -9.95051097869873
    7. 'enumer' → logprob: -11.45051097869873
    8. '((' → logprob: -11.70051097869873
    9. '   ' → logprob: -11.95051097869873
    10. '.zip' → logprob: -12.32551097869873

Token 428: '(list' (ID: 13116)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.008619419299066067
    2. ' list' → logprob: -4.75861930847168
    3. '   ' → logprob: -12.38361930847168
    4. '(list' → logprob: -14.63361930847168
    5. '	list' → logprob: -16.25861930847168
    6. '  ' → logprob: -16.88361930847168
    7. '_list' → logprob: -17.13361930847168
    8. '    ' → logprob: -17.25861930847168
    9. ' ' → logprob: -17.75861930847168
    10. ',list' → logprob: -18.75861930847168

Token 429: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.007646848913282156
    2. 'val' → logprob: -5.0076470375061035
    3. 'list' → logprob: -7.0076470375061035
    4. '[' → logprob: -12.632646560668945
    5. 'b' → logprob: -12.632646560668945
    6. '[val' → logprob: -13.007646560668945
    7. '_var' → logprob: -13.132646560668945
    8. 'const' → logprob: -13.132646560668945
    9. '```' → logprob: -13.257646560668945
    10. '   ' → logprob: -13.632646560668945

Token 430: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0005052540800534189
    2. 'b' → logprob: -7.875505447387695
    3. '_a' → logprob: -9.500505447387695
    4. '   ' → logprob: -11.500505447387695
    5. 'a' → logprob: -11.625505447387695
    6. '
' → logprob: -11.750505447387695
    7. ',' → logprob: -12.125505447387695
    8. '[' → logprob: -12.875505447387695
    9. ' ' → logprob: -13.000505447387695
    10. '```' → logprob: -13.250505447387695

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003255907678976655
    2. '[:-' → logprob: -6.003255844116211
    3. ',list' → logprob: -8.003255844116211
    4. ' ,' → logprob: -8.253255844116211
    5. '   ' → logprob: -9.378255844116211
    6. '[' → logprob: -9.378255844116211
    7. ',var' → logprob: -11.753255844116211
    8. ',
' → logprob: -13.253255844116211
    9. 'list' → logprob: -13.628255844116211
    10. '[list' → logprob: -13.753255844116211

Token 432: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10056991875171661
    2. ' list' → logprob: -2.3505699634552
    3. '   ' → logprob: -8.100569725036621
    4. '    ' → logprob: -10.850569725036621
    5. '       ' → logprob: -11.350569725036621
    6. ' ' → logprob: -12.225569725036621
    7. '        ' → logprob: -12.225569725036621
    8. '	list' → logprob: -12.225569725036621
    9. '     ' → logprob: -12.600569725036621
    10. '  ' → logprob: -12.600569725036621

Token 433: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.6366010904312134
    2. '[' → logprob: -0.7616010904312134
    3. 'val' → logprob: -6.511600971221924
    4. '1' → logprob: -6.761600971221924
    5. 'list' → logprob: -8.136601448059082
    6. ' ' → logprob: -8.261601448059082
    7. '(' → logprob: -8.386601448059082
    8. '   ' → logprob: -9.386601448059082
    9. '_' → logprob: -9.636601448059082
    10. '```' → logprob: -9.886601448059082

Token 434: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.31712162494659424
    2. '[' → logprob: -1.3171216249465942
    3. '_a' → logprob: -6.317121505737305
    4. 'b' → logprob: -6.692121505737305
    5. '_val' → logprob: -8.192121505737305
    6. '```' → logprob: -9.442121505737305
    7. '   ' → logprob: -9.692121505737305
    8. ' ' → logprob: -9.817121505737305
    9. '_[' → logprob: -10.067121505737305
    10. '
' → logprob: -10.192121505737305

Token 435: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00043400691356509924
    2. ',' → logprob: -7.875433921813965
    3. '[idx' → logprob: -9.875433921813965
    4. '[:-' → logprob: -14.250433921813965
    5. '))' → logprob: -14.750433921813965
    6. '[::-' → logprob: -15.000433921813965
    7. '```' → logprob: -15.625433921813965
    8. '   ' → logprob: -15.750433921813965
    9. ',[' → logprob: -16.12543487548828
    10. '
' → logprob: -16.50043487548828

Token 436: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.750001907348633
    3. ' ' → logprob: -14.250001907348633
    4. 'idx' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.250001907348633
    6. '
' → logprob: -16.500001907348633
    7. '```' → logprob: -17.000001907348633
    8. '[:-' → logprob: -17.125001907348633
    9. 'range' → logprob: -18.375001907348633
    10. '(' → logprob: -18.375001907348633

Token 437: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005186012131161988
    2. ':],' → logprob: -8.375518798828125
    3. '])):
' → logprob: -8.875518798828125
    4. ':]' → logprob: -9.125518798828125
    5. ']))' → logprob: -11.375518798828125
    6. ']):' → logprob: -12.375518798828125
    7. ')):' → logprob: -12.375518798828125
    8. '):' → logprob: -12.500518798828125
    9. '1' → logprob: -12.750518798828125
    10. ' :' → logprob: -13.000518798828125

Token 438: '])):
' (ID: 145266)
  Prédit: ')):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.0239739827811718
    2. ')):' → logprob: -3.8989739418029785
    3. '):
' → logprob: -5.8989739418029785
    4. ')):
' → logprob: -8.273974418640137
    5. '))' → logprob: -8.773974418640137
    6. '),' → logprob: -9.523974418640137
    7. ')' → logprob: -9.648974418640137
    8. '):' → logprob: -10.023974418640137
    9. ' ' → logprob: -11.148974418640137
    10. ',' → logprob: -11.148974418640137

Token 439: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0154549116268754
    2. ':' → logprob: -4.6404547691345215
    3. ',' → logprob: -6.2654547691345215
    4. ':
' → logprob: -6.3904547691345215
    5. '):
' → logprob: -6.5154547691345215
    6. '):' → logprob: -8.64045524597168
    7. '```' → logprob: -8.76545524597168
    8. ',
' → logprob: -9.26545524597168
    9. '    
' → logprob: -10.01545524597168
    10. '[' → logprob: -10.64045524597168

Token 440: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06541890650987625
    2. ' list' → logprob: -3.1904189586639404
    3. 'list' → logprob: -3.8154189586639404
    4. '	list' → logprob: -9.44041919708252
    5. '```' → logprob: -10.19041919708252
    6. ' if' → logprob: -11.56541919708252
    7. '   ' → logprob: -12.31541919708252
    8. 'if' (adapté à ' if') → logprob: -12.81541919708252
    9. '
' → logprob: -13.31541919708252
    10. '    
' → logprob: -13.69041919708252

Token 441: ' val' (ID: 1459)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.06273702532052994
    2. 'val' → logprob: -3.187736988067627
    3. ' (' → logprob: -4.687736988067627
    4. ' val' → logprob: -4.937736988067627
    5. '(abs' → logprob: -6.062736988067627
    6. 'abs' → logprob: -7.687736988067627
    7. '(' → logprob: -9.312737464904785
    8. ' abs' → logprob: -9.437737464904785
    9. '(list' → logprob: -9.812737464904785
    10. '[val' → logprob: -10.062737464904785

Token 442: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0002690840628929436
    2. '_a' → logprob: -8.250268936157227
    3. '_val' → logprob: -12.875268936157227
    4. '_' → logprob: -13.250268936157227
    5. 'b' → logprob: -13.625268936157227
    6. 'a' → logprob: -14.625268936157227
    7. 'val' → logprob: -15.375268936157227
    8. ' _' → logprob: -15.500268936157227
    9. '```' → logprob: -15.750268936157227
    10. '_
' → logprob: -16.000268936157227

Token 443: '_prev' (ID: 60491)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.026818394660949707
    2. '_next' → logprob: -4.02681827545166
    3. '_prev' → logprob: -4.90181827545166
    4. '_' → logprob: -7.90181827545166
    5. '%' → logprob: -8.15181827545166
    6. '[' → logprob: -9.02681827545166
    7. '!=' → logprob: -9.52681827545166
    8. '   ' → logprob: -9.77681827545166
    9. '(idx' → logprob: -9.77681827545166
    10. '[val' → logprob: -10.52681827545166

Token 444: ' ==' (ID: 951)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5385826230049133
    2. '!=' → logprob: -1.5385825634002686
    3. ' !=' → logprob: -2.1635825634002686
    4. ' %' → logprob: -2.5385825634002686
    5. '^' → logprob: -6.163582801818848
    6. ' ^' → logprob: -6.163582801818848
    7. '+' → logprob: -6.913582801818848
    8. '&' → logprob: -7.038582801818848
    9. '==' → logprob: -7.788582801818848
    10. ' &' → logprob: -8.163582801818848

Token 445: ' ' (ID: 220)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.26496052742004395
    2. '1' → logprob: -1.889960527420044
    3. '0' → logprob: -2.764960527420044
    4. ' val' → logprob: -4.389960289001465
    5. ' ' → logprob: -5.389960289001465
    6. '(' → logprob: -7.514960289001465
    7. '(val' → logprob: -7.514960289001465
    8. 'list' → logprob: -8.514960289001465
    9. 'var' → logprob: -8.764960289001465
    10. ' (' → logprob: -9.264960289001465

Token 446: '0' (ID: 15)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6684353351593018
    2. '1' → logprob: -1.0434353351593018
    3. '0' → logprob: -2.0434353351593018
    4. '(val' → logprob: -6.418435096740723
    5. ' val' → logprob: -7.043435096740723
    6. ' ' → logprob: -7.043435096740723
    7. 'list' → logprob: -7.168435096740723
    8. 'var' → logprob: -7.293435096740723
    9. '(' → logprob: -7.668435096740723
    10. '2' → logprob: -9.418435096740723

Token 447: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.19407038390636444
    2. 'and' → logprob: -1.9440703392028809
    3. ' or' → logprob: -3.944070339202881
    4. ':' → logprob: -4.694070339202881
    5. ':
' → logprob: -6.194070339202881
    6. ' !=' → logprob: -7.444070339202881
    7. 'or' → logprob: -7.444070339202881
    8. '   ' → logprob: -7.694070339202881
    9. '!=' → logprob: -7.694070339202881
    10. ' ' → logprob: -8.569070816040039

Token 448: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.08905147016048431
    2. ' val' → logprob: -2.4640514850616455
    3. '(val' → logprob: -9.714051246643066
    4. '   ' → logprob: -10.839051246643066
    5. ' ' → logprob: -11.464051246643066
    6. ' (' → logprob: -12.089051246643066
    7. '  ' → logprob: -12.214051246643066
    8. '(' → logprob: -12.589051246643066
    9. '	val' → logprob: -13.339051246643066
    10. '1' → logprob: -13.339051246643066

Token 449: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.006843361537903547
    2. '_next' → logprob: -5.006843566894531
    3. 'b' → logprob: -9.006843566894531
    4. '_' → logprob: -12.506843566894531
    5. '_val' → logprob: -14.256843566894531
    6. '_prev' → logprob: -15.506843566894531
    7. 'next' → logprob: -15.756843566894531
    8. '_new' → logprob: -16.38184356689453
    9. '0' → logprob: -16.38184356689453
    10. ' _' → logprob: -16.88184356689453

Token 450: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -8.41866585687967e-06
    2. '==' → logprob: -12.875008583068848
    3. 'next' → logprob: -13.250008583068848
    4. '_' → logprob: -13.500008583068848
    5. '_prev' → logprob: -14.000008583068848
    6. '!=' → logprob: -14.500008583068848
    7. '_NEXT' → logprob: -14.750008583068848
    8. 'Next' → logprob: -15.375008583068848
    9. '```' → logprob: -16.00000762939453
    10. '+' → logprob: -16.25000762939453

Token 451: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3937704563140869
    2. '==' → logprob: -1.143770456314087
    3. ' !=' → logprob: -5.268770217895508
    4. '!=' → logprob: -6.768770217895508
    5. ' ^' → logprob: -8.518770217895508
    6. ' ' → logprob: -8.768770217895508
    7. '^' → logprob: -9.143770217895508
    8. '%' → logprob: -10.643770217895508
    9. '+' → logprob: -10.893770217895508
    10. '[' → logprob: -11.393770217895508

Token 452: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2096109688282013
    2. '0' → logprob: -1.709610939025879
    3. ' ' → logprob: -4.834610939025879
    4. '   ' → logprob: -8.709610939025879
    5. '  ' → logprob: -11.772110939025879
    6. '```' → logprob: -12.084610939025879
    7. '(' → logprob: -12.584610939025879
    8. '    
' → logprob: -12.772110939025879
    9. '=' → logprob: -12.897110939025879
    10. '    ' → logprob: -12.959610939025879

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10392984747886658
    2. '0' → logprob: -2.3539297580718994
    3. ' ' → logprob: -5.6039299964904785
    4. '
' → logprob: -11.79142951965332
    5. '   ' → logprob: -11.91642951965332
    6. '2' → logprob: -12.60392951965332
    7. '```' → logprob: -13.22892951965332
    8. '-' → logprob: -13.41642951965332
    9. '  ' → logprob: -13.41642951965332
    10. '(' → logprob: -14.16642951965332

Token 454: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43484556674957275
    2. ':' → logprob: -1.0598455667495728
    3. '   ' → logprob: -5.684845447540283
    4. '):
' → logprob: -6.434845447540283
    5. ' and' → logprob: -7.184845447540283
    6. '       ' → logprob: -8.684845924377441
    7. '):' → logprob: -9.559845924377441
    8. ',' → logprob: -10.309845924377441
    9. 'and' → logprob: -10.434845924377441
    10. ' :
' → logprob: -10.934845924377441

Token 455: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20714594423770905
    2. '	list' → logprob: -2.082145929336548
    3. '       ' → logprob: -2.957145929336548
    4. '	   ' → logprob: -5.082146167755127
    5. ' list' → logprob: -5.707146167755127
    6. ',' → logprob: -8.332145690917969
    7. '```' → logprob: -9.207145690917969
    8. '	       ' → logprob: -9.707145690917969
    9. '	tab' → logprob: -9.707145690917969
    10. 'list' → logprob: -9.707145690917969

Token 456: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.013391145505011082
    2. '   ' → logprob: -4.763391017913818
    3. ' list' → logprob: -5.388391017913818
    4. 'var' → logprob: -9.138391494750977
    5. 'for' → logprob: -10.263391494750977
    6. 'idx' → logprob: -10.513391494750977
    7. 'if' → logprob: -12.138391494750977
    8. '       ' → logprob: -12.763391494750977
    9. ' ' → logprob: -13.263391494750977
    10. 'print' → logprob: -13.388391494750977

Token 457: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.2664456789934775e-06
    2. 'node' → logprob: -14.125000953674316
    3. '_' → logprob: -16.000001907348633
    4. '
' → logprob: -16.375001907348633
    5. '```' → logprob: -16.375001907348633
    6. '_nodes' → logprob: -17.000001907348633
    7. '_user' → logprob: -17.250001907348633
    8. '_code' → logprob: -17.250001907348633
    9. '_token' → logprob: -17.875001907348633
    10. '_Node' → logprob: -18.000001907348633

Token 458: '_par' (ID: 31329)
  Prédit: '_par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -9.93710636976175e-05
    2. '_node' → logprob: -9.250099182128906
    3. 'par' → logprob: -12.875099182128906
    4. '_pair' → logprob: -15.875099182128906
    5. 'node' → logprob: -16.000099182128906
    6. '_val' → logprob: -16.750099182128906
    7. ' parity' → logprob: -17.000099182128906
    8. '```' → logprob: -17.000099182128906
    9. '
' → logprob: -17.500099182128906
    10. 'Parity' → logprob: -17.500099182128906

Token 459: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -8.41129949549213e-05
    2. 'ty' → logprob: -10.500083923339844
    3. '[' → logprob: -11.125083923339844
    4. 'par' → logprob: -11.750083923339844
    5. 's' → logprob: -12.125083923339844
    6. '```' → logprob: -12.750083923339844
    7. '#' → logprob: -12.875083923339844
    8. 'city' → logprob: -12.875083923339844
    9. '_' → logprob: -12.875083923339844
    10. 'it' → logprob: -13.000083923339844

Token 460: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.145118848304264e-05
    2. '[' → logprob: -10.250051498413086
    3. '=' → logprob: -12.250051498413086
    4. '[val' → logprob: -12.500051498413086
    5. '[list' → logprob: -12.625051498413086
    6. ' [' → logprob: -14.000051498413086
    7. ' =' → logprob: -14.125051498413086
    8. '[int' → logprob: -14.625051498413086
    9. '[var' → logprob: -15.000051498413086
    10. '[index' → logprob: -15.250051498413086

Token 461: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00017755765293259174
    2. 'node' → logprob: -9.250177383422852
    3. '_par' → logprob: -10.250177383422852
    4. '_]' → logprob: -11.250177383422852
    5. '_' → logprob: -11.500177383422852
    6. ']' → logprob: -11.750177383422852
    7. '_nodes' → logprob: -12.500177383422852
    8. 'par' → logprob: -13.125177383422852
    9. ']_' → logprob: -13.625177383422852
    10. '
' → logprob: -14.000177383422852

Token 462: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013378331437706947
    2. '=' → logprob: -5.263378143310547
    3. ' =' → logprob: -5.763378143310547
    4. ' ^=' → logprob: -6.138378143310547
    5. ']=' → logprob: -6.263378143310547
    6. ' ]' → logprob: -8.263378143310547
    7. ']+=' → logprob: -8.763378143310547
    8. '   ' → logprob: -9.013378143310547
    9. '[' → logprob: -9.513378143310547
    10. ' +=' → logprob: -9.513378143310547

Token 463: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0488525927066803
    2. ' =' → logprob: -3.0488526821136475
    3. ' ^=' → logprob: -8.423852920532227
    4. '+=' → logprob: -10.673852920532227
    5. ' |=' → logprob: -11.673852920532227
    6. '^' → logprob: -12.673852920532227
    7. '|' → logprob: -12.673852920532227
    8. ' +=' → logprob: -12.923852920532227
    9. '   ' → logprob: -13.423852920532227
    10. ' ' → logprob: -13.423852920532227

Token 464: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.791440293658525e-05
    2. '0' → logprob: -10.125078201293945
    3. ' ' → logprob: -10.625078201293945
    4. '   ' → logprob: -11.875078201293945
    5. '(' → logprob: -13.125078201293945
    6. 'var' → logprob: -13.625078201293945
    7. '2' → logprob: -14.125078201293945
    8. 'idx' → logprob: -14.125078201293945
    9. '-' → logprob: -14.375078201293945
    10. '(idx' → logprob: -15.000078201293945

Token 465: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024370834580622613
    2. '0' → logprob: -9.000244140625
    3. '(' → logprob: -10.500244140625
    4. 'idx' → logprob: -10.875244140625
    5. '-' → logprob: -11.000244140625
    6. ' ' → logprob: -11.125244140625
    7. 'var' → logprob: -11.125244140625
    8. '(idx' → logprob: -11.625244140625
    9. '2' → logprob: -11.875244140625
    10. '   ' → logprob: -12.625244140625

Token 466: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 468: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.29637569189071655
    2. '<|end|>' → logprob: -2.4213757514953613
    3. 'else' → logprob: -2.9213757514953613
    4. ' elif' → logprob: -3.1713757514953613
    5. ' ' → logprob: -3.5463757514953613
    6. ' else' → logprob: -4.171375751495361
    7. ')' → logprob: -4.296375751495361
    8. '
' → logprob: -5.171375751495361
    9. '   ' → logprob: -5.546375751495361
    10. '#' → logprob: -7.671375751495361

Token 469: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.12716296315193176
    2. 'val' → logprob: -2.1271629333496094
    3. 'list' → logprob: -9.25216293334961
    4. ' list' → logprob: -9.25216293334961
    5. ' ' → logprob: -10.75216293334961
    6. '(val' → logprob: -12.75216293334961
    7. ' not' → logprob: -12.81466293334961
    8. ' ' → logprob: -13.31466293334961
    9. '	val' → logprob: -13.31466293334961
    10. '   ' → logprob: -13.56466293334961

Token 470: '_b' (ID: 1535)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.11324722319841385
    2. '_b' → logprob: -2.2382471561431885
    3. '_val' → logprob: -7.863247394561768
    4. '_pair' → logprob: -11.73824691772461
    5. '_token' → logprob: -11.98824691772461
    6. '_' → logprob: -11.98824691772461
    7. '_idx' → logprob: -12.48824691772461
    8. '```' → logprob: -12.73824691772461
    9. 'node' → logprob: -13.48824691772461
    10. '_a' → logprob: -13.73824691772461

Token 471: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.04875745624303818
    2. '_next' → logprob: -3.048757553100586
    3. '_idx' → logprob: -9.548757553100586
    4. '[idx' → logprob: -9.798757553100586
    5. 'prev' → logprob: -10.298757553100586
    6. '```' → logprob: -13.048757553100586
    7. '_previous' → logprob: -13.423757553100586
    8. '[' → logprob: -14.173757553100586
    9. '_node' → logprob: -14.173757553100586
    10. '_' → logprob: -14.548757553100586

Token 472: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20161029696464539
    2. '==' → logprob: -1.7016103267669678
    3. ' ' → logprob: -9.076610565185547
    4. ' !=' → logprob: -10.576610565185547
    5. '```' → logprob: -11.326610565185547
    6. '   ' → logprob: -12.076610565185547
    7. '+' → logprob: -12.326610565185547
    8. '[' → logprob: -12.451610565185547
    9. '!=' → logprob: -12.701610565185547
    10. '...' → logprob: -12.701610565185547

Token 473: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5786178112030029
    2. '1' → logprob: -0.8286178112030029
    3. '0' → logprob: -5.953618049621582
    4. '
' → logprob: -11.203618049621582
    5. '   ' → logprob: -11.328618049621582
    6. ' ' → logprob: -11.828618049621582
    7. '=' → logprob: -12.266118049621582
    8. '2' → logprob: -13.078618049621582
    9. ' list' → logprob: -13.078618049621582
    10. '```' → logprob: -13.078618049621582

Token 474: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021992849186062813
    2. '0' → logprob: -4.5219926834106445
    3. ' ' → logprob: -4.5219926834106445
    4. '```' → logprob: -12.271992683410645
    5. '
' → logprob: -13.021992683410645
    6. '   ' → logprob: -13.459492683410645
    7. '...' → logprob: -13.834492683410645
    8. '`' → logprob: -14.084492683410645
    9. '  ' → logprob: -14.334492683410645
    10. '=' → logprob: -14.334492683410645

Token 475: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023265859112143517
    2. 'and' → logprob: -3.773265838623047
    3. ' ' → logprob: -11.523265838623047
    4. '==' → logprob: -12.023265838623047
    5. '0' → logprob: -12.773265838623047
    6. ' ==' → logprob: -14.148265838623047
    7. '   ' → logprob: -15.898265838623047
    8. '```' → logprob: -16.523265838623047
    9. '<|end|>' → logprob: -16.523265838623047
    10. ',' → logprob: -16.773265838623047

Token 476: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.012590412981808186
    2. 'val' → logprob: -4.387590408325195
    3. ' list' → logprob: -9.762590408325195
    4. 'list' → logprob: -11.637590408325195
    5. '0' → logprob: -11.762590408325195
    6. ' var' → logprob: -13.137590408325195
    7. ' ' → logprob: -13.762590408325195
    8. ' not' → logprob: -14.012590408325195
    9. '	val' → logprob: -14.387590408325195
    10. '1' → logprob: -15.137590408325195

Token 477: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.003839382901787758
    2. '_next' → logprob: -5.628839492797852
    3. 'b' → logprob: -8.753839492797852
    4. '_val' → logprob: -10.003839492797852
    5. '_node' → logprob: -10.628839492797852
    6. 'val' → logprob: -12.003839492797852
    7. '0' → logprob: -13.878839492797852
    8. '```' → logprob: -14.128839492797852
    9. ' b' → logprob: -14.253839492797852
    10. 'next' → logprob: -14.253839492797852

Token 478: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.843177233240567e-05
    2. 'next' → logprob: -11.125018119812012
    3. '_prev' → logprob: -12.750018119812012
    4. 'Next' → logprob: -15.375018119812012
    5. '_' → logprob: -16.125019073486328
    6. '[next' → logprob: -16.250019073486328
    7. '_NEXT' → logprob: -16.375019073486328
    8. '0' → logprob: -16.750019073486328
    9. '```' → logprob: -16.875019073486328
    10. '_val' → logprob: -17.125019073486328

Token 479: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07432043552398682
    2. '==' → logprob: -2.6993203163146973
    3. '[idx' → logprob: -5.449320316314697
    4. '   ' → logprob: -10.699320793151855
    5. '```' → logprob: -11.199320793151855
    6. ']==' → logprob: -11.824320793151855
    7. ' ' → logprob: -11.949320793151855
    8. '[index' → logprob: -12.324320793151855
    9. '[]' → logprob: -12.449320793151855
    10. '...' → logprob: -12.574320793151855

Token 480: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03811240941286087
    2. ' ' → logprob: -3.2881124019622803
    3. '1' → logprob: -9.66311264038086
    4. '   ' → logprob: -12.66311264038086
    5. '2' → logprob: -13.78811264038086
    6. '```' → logprob: -14.10061264038086
    7. ' ' → logprob: -14.78811264038086
    8. '  ' → logprob: -15.41311264038086
    9. '
' → logprob: -15.78811264038086
    10. ',' → logprob: -16.35061264038086

Token 481: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00037251986213959754
    2. ' ' → logprob: -8.250372886657715
    3. '1' → logprob: -9.125372886657715
    4. '2' → logprob: -13.937872886657715
    5. '   ' → logprob: -15.062872886657715
    6. '-' → logprob: -15.750372886657715
    7. '```' → logprob: -16.0003719329834
    8. '  ' → logprob: -16.1878719329834
    9. '
' → logprob: -16.3128719329834
    10. ' ' → logprob: -16.5628719329834

Token 482: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18841424584388733
    2. ':' → logprob: -2.4384143352508545
    3. ':
' → logprob: -2.5634143352508545
    4. '   ' → logprob: -5.563414096832275
    5. ':list' → logprob: -6.813414096832275
    6. ' =' → logprob: -7.688414096832275
    7. '[' → logprob: -7.813414096832275
    8. ',' → logprob: -8.063414573669434
    9. '):
' → logprob: -8.188414573669434
    10. '=' → logprob: -8.188414573669434

Token 483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007267289329320192
    2. ':
' → logprob: -8.375726699829102
    3. '   ' → logprob: -8.500726699829102
    4. ':' → logprob: -8.500726699829102
    5. '[' → logprob: -11.000726699829102
    6. '	' → logprob: -11.250726699829102
    7. ' =' → logprob: -11.250726699829102
    8. '=' → logprob: -11.500726699829102
    9. ',' → logprob: -12.375726699829102
    10. '):
' → logprob: -12.375726699829102

Token 484: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.6347526907920837
    2. ' list' → logprob: -0.7597526907920837
    3. '   ' → logprob: -6.2597527503967285
    4. 'break' → logprob: -9.75975227355957
    5. ' break' → logprob: -10.00975227355957
    6. '       ' → logprob: -10.13475227355957
    7. '```' → logprob: -10.25975227355957
    8. '	list' → logprob: -10.63475227355957
    9. '1' → logprob: -11.63475227355957
    10. '0' → logprob: -12.00975227355957

Token 485: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -4.842555426876061e-06
    2. '_token' → logprob: -12.750004768371582
    3. 'node' → logprob: -13.625004768371582
    4. '```' → logprob: -15.750004768371582
    5. '_user' → logprob: -16.2500057220459
    6. '_code' → logprob: -17.2500057220459
    7. '_index' → logprob: -17.2500057220459
    8. '_pair' → logprob: -17.3750057220459
    9. '_' → logprob: -17.3750057220459
    10. '[node' → logprob: -17.6250057220459

Token 486: '_par' (ID: 31329)
  Prédit: '_par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -0.00020520923135336488
    2. 'par' → logprob: -8.500205039978027
    3. '_node' → logprob: -14.875205039978027
    4. '	par' → logprob: -15.750205039978027
    5. 'import' → logprob: -16.000205993652344
    6. '_per' → logprob: -16.250205993652344
    7. 'node' → logprob: -16.250205993652344
    8. '[' → logprob: -16.500205993652344
    9. ' parity' → logprob: -16.625205993652344
    10. '[node' → logprob: -16.750205993652344

Token 487: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.0014054712373763323
    2. 'ty' → logprob: -7.501405239105225
    3. 'arity' → logprob: -7.501405239105225
    4. 'ality' → logprob: -8.501405715942383
    5. 'ti' → logprob: -11.126405715942383
    6. 'it' → logprob: -11.626405715942383
    7. 's' → logprob: -11.751405715942383
    8. 'r' → logprob: -11.751405715942383
    9. '[' → logprob: -12.001405715942383
    10. 'ar' → logprob: -12.126405715942383

Token 488: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.7432603272027336e-06
    2. 'idx' → logprob: -13.875001907348633
    3. '[' → logprob: -15.250001907348633
    4. ' idx' → logprob: -16.250001907348633
    5. '=' → logprob: -16.750001907348633
    6. '[int' → logprob: -16.875001907348633
    7. ' [' → logprob: -17.000001907348633
    8. '```' → logprob: -17.375001907348633
    9. '[
' → logprob: -17.625001907348633
    10. '	idx' → logprob: -17.625001907348633

Token 489: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.023517176508903503
    2. '_idx' → logprob: -3.77351713180542
    3. 'idx' → logprob: -8.773517608642578
    4. '[idx' → logprob: -9.148517608642578
    5. '_token' → logprob: -12.773517608642578
    6. 'node' → logprob: -13.398517608642578
    7. '[node' → logprob: -13.648517608642578
    8. '(idx' → logprob: -13.773517608642578
    9. '```' → logprob: -13.898517608642578
    10. ' idx' → logprob: -14.398517608642578

Token 490: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13419190049171448
    2. '=' → logprob: -2.2591919898986816
    3. ']=' → logprob: -4.509191989898682
    4. '[idx' → logprob: -5.009191989898682
    5. ' =' → logprob: -6.134191989898682
    6. '   ' → logprob: -6.884191989898682
    7. ' ]' → logprob: -9.134191513061523
    8. ')' → logprob: -9.384191513061523
    9. '       ' → logprob: -11.509191513061523
    10. ']+=' → logprob: -11.509191513061523

Token 491: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0803159847855568
    2. ' =' → logprob: -2.7053160667419434
    3. '[idx' → logprob: -4.580316066741943
    4. '+=' → logprob: -10.080315589904785
    5. '   ' → logprob: -11.080315589904785
    6. ' +=' → logprob: -12.330315589904785
    7. '```' → logprob: -12.580315589904785
    8. '       ' → logprob: -12.830315589904785
    9. '[' → logprob: -13.830315589904785
    10. 'idx' → logprob: -14.330315589904785

Token 492: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09950825572013855
    2. '1' → logprob: -2.474508285522461
    3. '2' → logprob: -4.849508285522461
    4. ' -' → logprob: -6.474508285522461
    5. '0' → logprob: -7.474508285522461
    6. ' ' → logprob: -7.474508285522461
    7. '   ' → logprob: -13.224508285522461
    8. '−' → logprob: -14.099508285522461
    9. '3' → logprob: -14.849508285522461
    10. '  ' → logprob: -16.03700828552246

Token 493: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4111488461494446
    2. '1' → logprob: -1.1611487865447998
    3. '2' → logprob: -3.9111487865448
    4. '0' → logprob: -5.536149024963379
    5. ' -' → logprob: -11.536149024963379
    6. '3' → logprob: -12.036149024963379
    7. '−' → logprob: -13.036149024963379
    8. ' ' → logprob: -13.161149024963379
    9. '-
' → logprob: -13.411149024963379
    10. '4' → logprob: -14.473649024963379

Token 494: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 495: 'list' (ID: 2641)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9688520431518555
    2. 'deque' → logprob: -1.0938520431518555
    3. 'visited' → logprob: -2.0938520431518555
    4. 'import' → logprob: -2.8438520431518555
    5. 'from' → logprob: -2.8438520431518555
    6. 'for' → logprob: -4.8438520431518555
    7. 'list' → logprob: -4.9688520431518555
    8. 'queue' → logprob: -4.9688520431518555
    9. 'stack' → logprob: -5.0938520431518555
    10. '
' → logprob: -5.4688520431518555

Token 496: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.9341883063316345
    2. '_val' → logprob: -1.8091883659362793
    3. '_path' → logprob: -1.9341883659362793
    4. '_pair' → logprob: -2.0591883659362793
    5. '_' → logprob: -3.1841883659362793
    6. '_stack' → logprob: -3.4341883659362793
    7. '_edge' → logprob: -3.5591883659362793
    8. '_queue' → logprob: -3.8091883659362793
    9. '_depth' → logprob: -4.559188365936279
    10. '_dist' → logprob: -4.809188365936279

Token 497: '_' (ID: 62)
  Prédit: '_par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_par' → logprob: -0.028640758246183395
    2. '_states' → logprob: -4.7786407470703125
    3. '_de' → logprob: -5.0286407470703125
    4. '_degree' → logprob: -6.0286407470703125
    5. '_queue' → logprob: -6.4036407470703125
    6. '_dist' → logprob: -6.6536407470703125
    7. '_depth' → logprob: -6.9036407470703125
    8. '_state' → logprob: -7.0286407470703125
    9. '_stack' → logprob: -7.0286407470703125
    10. '_distance' → logprob: -7.1536407470703125

Token 498: 'visited' (ID: 52453)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.0010075619211420417
    2. 'queue' → logprob: -9.001008033752441
    3. 'adj' → logprob: -9.001008033752441
    4. 'state' → logprob: -9.126008033752441
    5. 'states' → logprob: -9.251008033752441
    6. 'color' → logprob: -9.376008033752441
    7. 'distance' → logprob: -9.626008033752441
    8. 'stack' → logprob: -9.751008033752441
    9. 'visited' → logprob: -10.001008033752441
    10. 'dist' → logprob: -10.501008033752441

Token 499: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602250337600708
    2. ' =' → logprob: -1.9102250337600708
    3. '=[' → logprob: -14.535224914550781
    4. '[' → logprob: -15.535224914550781
    5. ' =[' → logprob: -15.785224914550781
    6. '=[]' → logprob: -17.28522491455078
    7. '＝' → logprob: -18.41022491455078
    8. '_=' → logprob: -18.41022491455078
    9. ')' → logprob: -18.66022491455078
    10. ' ' → logprob: -18.66022491455078

Token 500: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00075125927105546
    2. ' [' → logprob: -7.250751495361328
    3. '[var' → logprob: -10.125751495361328
    4. '   ' → logprob: -15.375751495361328
    5. '[class' → logprob: -15.375751495361328
    6. '[val' → logprob: -15.375751495361328
    7. '[list' → logprob: -15.625751495361328
    8. '[len' → logprob: -16.000751495361328
    9. '[node' → logprob: -16.625751495361328
    10. '[int' → logprob: -16.750751495361328

Token 501: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.018573042005300522
    2. '0' → logprob: -4.018572807312012
    3. ' False' → logprob: -7.768572807312012
    4. ' ' → logprob: -15.518572807312012
    5. '(False' → logprob: -17.143573760986328
    6. '   ' → logprob: -18.268573760986328
    7. 'True' → logprob: -19.268573760986328
    8. '[' → logprob: -20.018573760986328
    9. '.False' → logprob: -20.143573760986328
    10. '=False' → logprob: -20.518573760986328

Token 502: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015955790877342224
    2. ' ]' → logprob: -9.00015926361084
    3. ']*' → logprob: -10.37515926361084
    4. ' for' → logprob: -13.25015926361084
    5. ')' → logprob: -13.87515926361084
    6. 'for' → logprob: -13.87515926361084
    7. ' *' → logprob: -15.25015926361084
    8. '*' → logprob: -15.25015926361084
    9. '   ' → logprob: -15.62515926361084
    10. '[' → logprob: -16.250160217285156

Token 503: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.846977710723877
    2. ' *' → logprob: -0.971977710723877
    3. ')' → logprob: -1.846977710723877
    4. ']' → logprob: -4.346977710723877
    5. ' for' → logprob: -4.471977710723877
    6. '[var' → logprob: -5.346977710723877
    7. 'for' → logprob: -5.971977710723877
    8. '(var' → logprob: -6.846977710723877
    9. 'var' → logprob: -7.971977710723877
    10. '+' → logprob: -7.971977710723877

Token 504: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -7.517272024415433e-05
    2. ' var' → logprob: -9.500075340270996
    3. 'len' → logprob: -15.750075340270996
    4. '(var' → logprob: -16.25007438659668
    5. '```' → logprob: -18.37507438659668
    6. ')var' → logprob: -20.00007438659668
    7. '[var' → logprob: -20.25007438659668
    8. '.var' → logprob: -21.25007438659668
    9. '(' → logprob: -21.37507438659668
    10. '_var' → logprob: -21.50007438659668

Token 505: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -1.9361264946837764e-07
    2. 'nodes' → logprob: -17.25
    3. 'var' → logprob: -17.5
    4. '
' → logprob: -17.5
    5. '```' → logprob: -18.0
    6. '_node' → logprob: -18.875
    7. '_
' → logprob: -19.75
    8. '_' → logprob: -19.875
    9. '_tokens' → logprob: -19.875
    10. 'Nodes' → logprob: -20.25

Token 506: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -1.723973582556937e-05
    2. 'total' → logprob: -11.250017166137695
    3. '_TOTAL' → logprob: -13.500017166137695
    4. '_nodes' → logprob: -13.500017166137695
    5. 'Total' → logprob: -14.500017166137695
    6. 'otal' → logprob: -14.625017166137695
    7. '_tot' → logprob: -15.500017166137695
    8. ' total' → logprob: -16.625017166137695
    9. '$total' → logprob: -16.750017166137695
    10. 'TOTAL' → logprob: -17.000017166137695

Token 507: '
' (ID: 198)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.6469115614891052
    2. 'from' → logprob: -1.27191162109375
    3. 'def' → logprob: -2.64691162109375
    4. 'import' → logprob: -3.02191162109375
    5. 'list' → logprob: -3.52191162109375
    6. 'for' → logprob: -3.77191162109375
    7. 'deque' → logprob: -3.89691162109375
    8. 'queue' → logprob: -5.89691162109375
    9. '```' → logprob: -7.64691162109375
    10. 'var' → logprob: -9.14691162109375

Token 508: 'list' (ID: 2641)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8421459794044495
    2. 'stack' → logprob: -1.4671459197998047
    3. 'def' → logprob: -2.0921459197998047
    4. 'deque' → logprob: -2.2171459197998047
    5. 'import' → logprob: -2.7171459197998047
    6. 'for' → logprob: -3.5921459197998047
    7. 'queue' → logprob: -4.592145919799805
    8. 'var' → logprob: -6.592145919799805
    9. '```' → logprob: -7.592145919799805
    10. 'list' → logprob: -8.592145919799805

Token 509: '_all' (ID: 13305)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.4959149956703186
    2. '_edge' → logprob: -1.9959149360656738
    3. '_stack' → logprob: -1.9959149360656738
    4. '_queue' → logprob: -3.370914936065674
    5. '_edges' → logprob: -3.495914936065674
    6. '_path' → logprob: -3.745914936065674
    7. '_d' → logprob: -4.745914936065674
    8. '_distance' → logprob: -5.620914936065674
    9. '_nodes' → logprob: -5.745914936065674
    10. '_pair' → logprob: -5.870914936065674

Token 510: '_t' (ID: 838)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.6672702431678772
    2. '_path' → logprob: -2.4172701835632324
    3. '_edges' → logprob: -2.4172701835632324
    4. '_paths' → logprob: -2.5422701835632324
    5. '_stack' → logprob: -2.7922701835632324
    6. '_components' → logprob: -2.9172701835632324
    7. '_node' → logprob: -3.5422701835632324
    8. '_' → logprob: -3.9172701835632324
    9. '_component' → logprob: -4.042270183563232
    10. '_queue' → logprob: -4.667270183563232

Token 511: 'rees' (ID: 12339)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.34498462080955505
    2. 'okens' → logprob: -2.469984531402588
    3. 'mp' → logprob: -2.719984531402588
    4. 'ouched' → logprob: -2.844984531402588
    5. 'uples' → logprob: -4.219984531402588
    6. 'oken' → logprob: -4.344984531402588
    7. 'ime' → logprob: -4.969984531402588
    8. 'h' → logprob: -5.469984531402588
    9. 'our' → logprob: -5.594984531402588
    10. 'rans' → logprob: -5.719984531402588

Token 512: '_edges' (ID: 68870)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5771083235740662
    2. '=' → logprob: -0.8271083235740662
    3. '=[]' → logprob: -6.827108383178711
    4. '_nodes' → logprob: -11.077108383178711
    5. '_edges' → logprob: -11.077108383178711
    6. '_' → logprob: -11.577108383178711
    7. ',' → logprob: -11.577108383178711
    8. 's' → logprob: -11.952108383178711
    9. '_stack' → logprob: -12.202108383178711
    10. '<|end|>' → logprob: -12.577108383178711

Token 513: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2258593589067459
    2. ' =' → logprob: -1.6008594036102295
    3. '=[]' → logprob: -7.72585916519165
    4. ',' → logprob: -13.600859642028809
    5. '[]' → logprob: -13.850859642028809
    6. '<|end|>' → logprob: -14.100859642028809
    7. '=[]
' → logprob: -14.225859642028809
    8. ' ' → logprob: -15.475859642028809
    9. 's' → logprob: -15.850859642028809
    10. ']' → logprob: -15.850859642028809

Token 514: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -7.815280696377158e-05
    2. '[' → logprob: -9.500078201293945
    3. '[]
' → logprob: -13.250078201293945
    4. ' []' → logprob: -14.000078201293945
    5. '[][]' → logprob: -14.250078201293945
    6. '[]}' → logprob: -16.375078201293945
    7. '[]"' → logprob: -18.000078201293945
    8. '[]

' → logprob: -18.125078201293945
    9. '[[' → logprob: -19.125078201293945
    10. '[],' → logprob: -19.250078201293945

Token 515: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004944239743053913
    2. 'stack' → logprob: -6.129944324493408
    3. 'for' → logprob: -6.504944324493408
    4. 'from' → logprob: -6.879944324493408
    5. 'import' → logprob: -8.75494384765625
    6. 'deque' → logprob: -10.25494384765625
    7. ' def' → logprob: -10.87994384765625
    8. '```' → logprob: -11.87994384765625
    9. ' for' → logprob: -12.37994384765625
    10. ' stack' → logprob: -12.50494384765625

Token 516: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.16483327746391296
    2. ' idx' → logprob: -2.2898333072662354
    3. 'var' → logprob: -3.0398333072662354
    4. ' var' → logprob: -6.164833068847656
    5. 'node' → logprob: -7.789833068847656
    6. 'current' → logprob: -9.414833068847656
    7. 'start' → logprob: -9.539833068847656
    8. '_idx' → logprob: -10.539833068847656
    9. ' node' → logprob: -10.789833068847656
    10. 'i' → logprob: -10.914833068847656

Token 517: '_tree' (ID: 27118)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0007600766839459538
    2. 'node' → logprob: -7.875760078430176
    3. ' in' → logprob: -8.375760078430176
    4. '_' → logprob: -9.750760078430176
    5. '_start' → logprob: -11.000760078430176
    6. '_idx' → logprob: -11.750760078430176
    7. ' node' → logprob: -12.000760078430176
    8. '_range' → logprob: -12.250760078430176
    9. 'in' → logprob: -12.500760078430176
    10. '_var' → logprob: -12.500760078430176

Token 518: '_root' (ID: 29989)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08439332246780396
    2. 'in' → logprob: -2.584393262863159
    3. ',' → logprob: -5.334393501281738
    4. '_in' → logprob: -7.959393501281738
    5. '_' → logprob: -8.959393501281738
    6. ' _' → logprob: -9.209393501281738
    7. ' ' → logprob: -10.584393501281738
    8. '	in' → logprob: -10.834393501281738
    9. ' ,' → logprob: -11.459393501281738
    10. 'In' → logprob: -12.209393501281738

Token 519: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03000919334590435
    2. 'in' → logprob: -3.5300092697143555
    3. ',' → logprob: -8.280009269714355
    4. ' ' → logprob: -13.280009269714355
    5. '	in' → logprob: -14.530009269714355
    6. '   ' → logprob: -15.030009269714355
    7. '_in' → logprob: -15.155009269714355
    8. '_' → logprob: -15.405009269714355
    9. 'In' → logprob: -15.405009269714355
    10. ')' → logprob: -15.405009269714355

Token 520: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002613358374219388
    2. ' range' → logprob: -8.250261306762695
    3. '(range' → logprob: -19.125261306762695
    4. '   ' → logprob: -19.750261306762695
    5. '	range' → logprob: -20.875261306762695
    6. ' ' → logprob: -21.500261306762695
    7. 'in' → logprob: -21.500261306762695
    8. 'filter' → logprob: -21.875261306762695
    9. '0' → logprob: -22.375261306762695
    10. '  ' → logprob: -22.625261306762695

Token 521: '(var' (ID: 15816)
  Prédit: '(var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(var' → logprob: -0.030905717983841896
    2. '(' → logprob: -3.5309057235717773
    3. 'var' → logprob: -6.780905723571777
    4. '1' → logprob: -11.280905723571777
    5. '(len' → logprob: -12.030905723571777
    6. ' var' → logprob: -15.530905723571777
    7. ',var' → logprob: -15.655905723571777
    8. '(v' → logprob: -16.65590476989746
    9. '(VAR' → logprob: -16.65590476989746
    10. '[var' → logprob: -17.03090476989746

Token 522: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -4.620622712536715e-05
    2. '_node' → logprob: -10.625045776367188
    3. 'nodes' → logprob: -11.750045776367188
    4. 'var' → logprob: -12.500045776367188
    5. 'node' → logprob: -12.750045776367188
    6. '_tree' → logprob: -12.875045776367188
    7. 'tree' → logprob: -14.125045776367188
    8. '0' → logprob: -14.875045776367188
    9. '1' → logprob: -15.000045776367188
    10. '_num' → logprob: -15.000045776367188

Token 523: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.00023679454170633107
    2. 'total' → logprob: -8.375236511230469
    3. '_TOTAL' → logprob: -12.875236511230469
    4. 'otal' → logprob: -13.250236511230469
    5. 'Total' → logprob: -14.875236511230469
    6. '_nodes' → logprob: -15.375236511230469
    7. '
' → logprob: -15.500236511230469
    8. '_extended' → logprob: -15.500236511230469
    9. ')' → logprob: -15.875236511230469
    10. '_' → logprob: -16.00023651123047

Token 524: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06239381060004234
    2. '):' → logprob: -2.8123939037323
    3. '):
' → logprob: -8.312394142150879
    4. ':' → logprob: -9.687394142150879
    5. ')' → logprob: -10.062394142150879
    6. ' ):
' → logprob: -10.187394142150879
    7. ':
' → logprob: -11.187394142150879
    8. ',' → logprob: -12.312394142150879
    9. ' ):' → logprob: -12.312394142150879
    10. '   ' → logprob: -12.437394142150879

Token 525: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008262785151600838
    2. ' if' → logprob: -4.883262634277344
    3. 'if' → logprob: -7.758262634277344
    4. '```' → logprob: -9.383262634277344
    5. '   ' → logprob: -9.383262634277344
    6. '	if' → logprob: -9.883262634277344
    7. '   ' → logprob: -13.008262634277344
    8. '...' → logprob: -13.383262634277344
    9. '    
' → logprob: -13.883262634277344
    10. ' ' → logprob: -14.008262634277344

Token 526: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6456508040428162
    2. ' if' → logprob: -0.7706508040428162
    3. 'if' (adapté à ' if') → logprob: -4.395650863647461
    4. '   ' → logprob: -8.020650863647461
    5. '```' → logprob: -8.645650863647461
    6. '	if' → logprob: -9.395650863647461
    7. '
' → logprob: -11.145650863647461
    8. ' stack' → logprob: -11.270650863647461
    9. '   ' → logprob: -11.520650863647461
    10. 'stack' → logprob: -12.395650863647461

Token 527: ' list' (ID: 1562)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.43341729044914246
    2. ' not' → logprob: -1.0584173202514648
    3. 'list' → logprob: -5.558417320251465
    4. ' list' → logprob: -7.183417320251465
    5. '   ' → logprob: -9.433417320251465
    6. '(not' → logprob: -11.808417320251465
    7. '(list' → logprob: -13.808417320251465
    8. '!' → logprob: -14.058417320251465
    9. '	not' → logprob: -14.183417320251465
    10. ' ' → logprob: -14.433417320251465

Token 528: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -4.127333340875339e-06
    2. 'not' → logprob: -13.625003814697266
    3. '```' → logprob: -14.125003814697266
    4. '
' → logprob: -14.500003814697266
    5. 'node' → logprob: -14.750003814697266
    6. '_code' → logprob: -15.125003814697266
    7. '_not' → logprob: -16.250003814697266
    8. '_' → logprob: -16.500003814697266
    9. '_all' → logprob: -16.500003814697266
    10. ' _' → logprob: -16.625003814697266

Token 529: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.896309739408025e-07
    2. 'visited' → logprob: -14.375000953674316
    3. '```' → logprob: -16.25
    4. '[' → logprob: -17.5
    5. '_par' → logprob: -18.125
    6. '[node' → logprob: -18.25
    7. '[_' → logprob: -18.375
    8. '
' → logprob: -18.75
    9. '_
' → logprob: -18.75
    10. '_node' → logprob: -18.75

Token 530: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -9.729906196298543e-06
    2. '_' → logprob: -11.625009536743164
    3. ' visited' → logprob: -14.375009536743164
    4. '```' → logprob: -15.875009536743164
    5. 'not' → logprob: -16.875009536743164
    6. '
' → logprob: -18.500009536743164
    7. 'Visited' → logprob: -18.750009536743164
    8. '[' → logprob: -19.375009536743164
    9. '[node' → logprob: -19.500009536743164
    10. 'v' → logprob: -19.875009536743164

Token 531: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -14.000001907348633
    3. ' [' → logprob: -15.000001907348633
    4. '   ' → logprob: -15.500001907348633
    5. '[
' → logprob: -15.500001907348633
    6. 'idx' → logprob: -15.625001907348633
    7. '```' → logprob: -15.625001907348633
    8. 'not' → logprob: -16.250001907348633
    9. '==' → logprob: -16.500001907348633
    10. '[id' → logprob: -17.750001907348633

Token 532: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -3.531315314830863e-06
    2. '_node' → logprob: -13.750003814697266
    3. '_TREE' → logprob: -14.000003814697266
    4. 'tree' → logprob: -14.625003814697266
    5. '<Tree' → logprob: -14.875003814697266
    6. '_' → logprob: -15.500003814697266
    7. '```' → logprob: -16.250003814697266
    8. 'Tree' → logprob: -16.375003814697266
    9. '_t' → logprob: -16.750003814697266
    10. '   ' → logprob: -17.000003814697266

Token 533: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.0033721078652888536
    2. '_' → logprob: -5.8783721923828125
    3. 'root' → logprob: -7.5033721923828125
    4. 'visited' → logprob: -11.753372192382812
    5. '   ' → logprob: -13.503372192382812
    6. '```' → logprob: -13.503372192382812
    7. '_ROOT' → logprob: -14.003372192382812
    8. '_tree' → logprob: -14.128372192382812
    9. '_idx' → logprob: -14.253372192382812
    10. '[root' → logprob: -14.378372192382812

Token 534: ']' (ID: 60)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -1.3442578315734863
    2. ':' → logprob: -1.4692578315734863
    3. ':
' → logprob: -1.4692578315734863
    4. ']:
' → logprob: -1.5942578315734863
    5. '==' → logprob: -3.5942578315734863
    6. ']' → logprob: -4.094257831573486
    7. ']==' → logprob: -4.469257831573486
    8. ' or' → logprob: -4.969257831573486
    9. '):
' → logprob: -5.094257831573486
    10. ' ==' → logprob: -6.219257831573486

Token 535: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.062274642288684845
    2. ':
' → logprob: -2.812274694442749
    3. ':return' → logprob: -8.937274932861328
    4. ' or' → logprob: -9.062274932861328
    5. '==' → logprob: -10.687274932861328
    6. 'continue' → logprob: -11.062274932861328
    7. '   ' → logprob: -11.937274932861328
    8. ' continue' → logprob: -12.437274932861328
    9. ' ==' → logprob: -12.687274932861328
    10. ' :' → logprob: -12.687274932861328

Token 536: ' not' (ID: 625)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0013170238817110658
    2. 'not' → logprob: -7.376317024230957
    3. 'var' → logprob: -7.876317024230957
    4. 'idx' → logprob: -8.376317024230957
    5. ' list' → logprob: -9.626317024230957
    6. 'len' → logprob: -12.751317024230957
    7. '   ' → logprob: -12.751317024230957
    8. 'val' → logprob: -13.126317024230957
    9. ' not' → logprob: -13.126317024230957
    10. '(list' → logprob: -13.376317024230957

Token 537: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0008282098569907248
    2. ' list' → logprob: -7.125828266143799
    3. '(list' → logprob: -11.25082778930664
    4. '   ' → logprob: -11.87582778930664
    5. 'bool' → logprob: -14.37582778930664
    6. '(' → logprob: -14.37582778930664
    7. 'var' → logprob: -14.75082778930664
    8. 'idx' → logprob: -14.87582778930664
    9. ' ' → logprob: -15.12582778930664
    10. ' (' → logprob: -15.25082778930664

Token 538: '_adj' (ID: 117293)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0009146820520982146
    2. '_val' → logprob: -7.625914573669434
    3. '_pair' → logprob: -8.375914573669434
    4. 'node' → logprob: -10.125914573669434
    5. '_par' → logprob: -10.500914573669434
    6. '_adj' → logprob: -10.500914573669434
    7. 'val' → logprob: -11.125914573669434
    8. '_' → logprob: -11.125914573669434
    9. '
' → logprob: -11.750914573669434
    10. '_list' → logprob: -12.000914573669434

Token 539: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -2.534558552724775e-05
    2. 'cent' → logprob: -11.000025749206543
    3. '[' → logprob: -13.375025749206543
    4. 'ent' → logprob: -13.875025749206543
    5. '_adj' → logprob: -13.875025749206543
    6. '```' → logprob: -14.000025749206543
    7. '_cent' → logprob: -14.125025749206543
    8. 'ac' → logprob: -14.875025749206543
    9. '
' → logprob: -14.875025749206543
    10. 'acency' → logprob: -14.875025749206543

Token 540: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -4.584861744660884e-05
    2. 'graph' → logprob: -10.500045776367188
    3. '[idx' → logprob: -12.500045776367188
    4. '```' → logprob: -12.500045776367188
    5. '_tree' → logprob: -12.625045776367188
    6. '[' → logprob: -13.125045776367188
    7. 's' → logprob: -13.250045776367188
    8. '_GRAPH' → logprob: -14.500045776367188
    9. '[_' → logprob: -14.625045776367188
    10. '_list' → logprob: -14.875045776367188

Token 541: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.0280383548888494e-06
    2. '```' → logprob: -14.875000953674316
    3. 'idx' → logprob: -15.500000953674316
    4. '[var' → logprob: -16.375001907348633
    5. '[
' → logprob: -16.500001907348633
    6. '[' → logprob: -17.125001907348633
    7. ' [' → logprob: -17.500001907348633
    8. '(idx' → logprob: -17.625001907348633
    9. '   ' → logprob: -17.625001907348633
    10. '
' → logprob: -17.750001907348633

Token 542: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.0013473768485710025
    2. '_root' → logprob: -6.626347541809082
    3. 'tree' → logprob: -11.751347541809082
    4. '_idx' → logprob: -11.751347541809082
    5. 'idx' → logprob: -13.126347541809082
    6. '```' → logprob: -13.376347541809082
    7. '_TREE' → logprob: -14.501347541809082
    8. '_node' → logprob: -15.126347541809082
    9. 'Tree' → logprob: -15.626347541809082
    10. '树' → logprob: -15.876347541809082

Token 543: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.0002346488763578236
    2. 'root' → logprob: -8.375234603881836
    3. '```' → logprob: -13.875234603881836
    4. '[root' → logprob: -13.875234603881836
    5. '_ROOT' → logprob: -14.375234603881836
    6. '_idx' → logprob: -15.125234603881836
    7. 'Root' → logprob: -15.125234603881836
    8. ']' → logprob: -15.750234603881836
    9. '_tree' → logprob: -15.750234603881836
    10. '_index' → logprob: -15.875234603881836

Token 544: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.8968548774719238
    2. '):' → logprob: -1.0218548774719238
    3. '):
' → logprob: -2.021854877471924
    4. ':' → logprob: -3.021854877471924
    5. ']:
' → logprob: -3.146854877471924
    6. ':
' → logprob: -5.021854877471924
    7. '   ' → logprob: -7.021854877471924
    8. '}:' → logprob: -8.521854400634766
    9. ']):' → logprob: -9.271854400634766
    10. '>:' → logprob: -9.271854400634766

Token 545: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23730126023292542
    2. ':' → logprob: -2.1123013496398926
    3. ':
' → logprob: -2.4873013496398926
    4. ' continue' → logprob: -5.362301349639893
    5. '       ' → logprob: -6.487301349639893
    6. 'continue' → logprob: -7.362301349639893
    7. '	continue' → logprob: -8.612300872802734
    8. '```' → logprob: -10.237300872802734
    9. ',' → logprob: -10.737300872802734
    10. '_continue' → logprob: -10.987300872802734

Token 546: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01538166869431734
    2. ' continue' → logprob: -4.765381813049316
    3. 'continue' (adapté à ' continue') → logprob: -5.015381813049316
    4. '	continue' → logprob: -9.640381813049316
    5. '       ' → logprob: -10.265381813049316
    6. '```' → logprob: -12.265381813049316
    7. '   ' → logprob: -12.390381813049316
    8. '_continue' → logprob: -15.640381813049316
    9. ' ' → logprob: -16.390380859375
    10. '
' → logprob: -16.765380859375

Token 547: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009930337546393275
    2. ' stack' → logprob: -7.500993251800537
    3. '
' → logprob: -8.750992774963379
    4. '    
' → logprob: -9.250992774963379
    5. ' from' → logprob: -10.000992774963379
    6. '```' → logprob: -10.125992774963379
    7. ' queue' → logprob: -10.500992774963379
    8. 'import' → logprob: -10.750992774963379
    9. 'from' → logprob: -10.875992774963379
    10. 'stack' → logprob: -11.375992774963379

Token 548: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020175350829958916
    2. '	stack' → logprob: -4.270175457000732
    3. ' stack' → logprob: -5.520175457000732
    4. '```' → logprob: -6.645175457000732
    5. '	queue' → logprob: -8.395174980163574
    6. ' from' → logprob: -8.645174980163574
    7. 'stack' → logprob: -9.645174980163574
    8. ' queue' → logprob: -9.895174980163574
    9. '	from' → logprob: -10.270174980163574
    10. ' list' → logprob: -10.520174980163574

Token 549: ' list' (ID: 1562)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.16732186079025269
    2. 'from' → logprob: -2.0423219203948975
    3. 'import' → logprob: -4.292321681976318
    4. '   ' → logprob: -5.542321681976318
    5. ' stack' → logprob: -6.042321681976318
    6. 'deque' → logprob: -6.292321681976318
    7. 'queue' → logprob: -6.792321681976318
    8. ' from' → logprob: -7.542321681976318
    9. 'list' (adapté à ' list') → logprob: -7.792321681976318
    10. '```' → logprob: -7.917321681976318

Token 550: '_stack' (ID: 35650)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0637744665145874
    2. '_stack' → logprob: -2.938774585723877
    3. '_nodes' → logprob: -5.438774585723877
    4. '_queue' → logprob: -5.563774585723877
    5. 'stack' → logprob: -8.563774108886719
    6. '_d' → logprob: -8.813774108886719
    7. '_edges' → logprob: -9.688774108886719
    8. '_edge' → logprob: -10.188774108886719
    9. '_to' → logprob: -10.313774108886719
    10. '_all' → logprob: -10.438774108886719

Token 551: '_edges' (ID: 68870)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7879548072814941
    2. ' =' → logprob: -0.7879548072814941
    3. '.append' → logprob: -2.412954807281494
    4. '=[' → logprob: -7.162954807281494
    5. '=[]' → logprob: -9.912954330444336
    6. 'append' → logprob: -10.912954330444336
    7. '   ' → logprob: -11.037954330444336
    8. '=[]
' → logprob: -11.287954330444336
    9. ' =[' → logprob: -11.912954330444336
    10. '=[
' → logprob: -12.162954330444336

Token 552: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4753313958644867
    2. ' =' → logprob: -0.9753314256668091
    3. ',' → logprob: -6.8503313064575195
    4. '=[]' → logprob: -8.72533130645752
    5. '.append' → logprob: -10.85033130645752
    6. '[]' → logprob: -12.72533130645752
    7. '=[]
' → logprob: -13.47533130645752
    8. '[' → logprob: -13.97533130645752
    9. '.' → logprob: -14.22533130645752
    10. '   ' → logprob: -14.35033130645752

Token 553: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.005236479919403791
    2. '[(' → logprob: -5.755236625671387
    3. '[' → logprob: -6.255236625671387
    4. '[]
' → logprob: -9.130236625671387
    5. ' []' → logprob: -11.755236625671387
    6. '[list' → logprob: -12.005236625671387
    7. '[]}' → logprob: -12.380236625671387
    8. '[-' → logprob: -12.505236625671387
    9. '[((' → logprob: -12.755236625671387
    10. '[:]' → logprob: -14.255236625671387

Token 554: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004148680251091719
    2. 'list' → logprob: -6.504148483276367
    3. ' list' → logprob: -6.629148483276367
    4. 'stack' → logprob: -7.754148483276367
    5. '	stack' → logprob: -7.879148483276367
    6. '	list' → logprob: -8.129148483276367
    7. ' stack' → logprob: -9.379148483276367
    8. '```' → logprob: -9.754148483276367
    9. '
' → logprob: -10.254148483276367
    10. '    
' → logprob: -11.504148483276367

Token 555: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.03893014043569565
    2. 'stack' → logprob: -3.2889301776885986
    3. '   ' → logprob: -7.7889299392700195
    4. 'from' → logprob: -7.7889299392700195
    5. ' list' → logprob: -10.41392993927002
    6. 'deque' → logprob: -11.16392993927002
    7. '```' → logprob: -12.41392993927002
    8. ' stack' → logprob: -12.41392993927002
    9. 'var' → logprob: -12.91392993927002
    10. 'import' → logprob: -13.03892993927002

Token 556: '_node' (ID: 11390)
  Prédit: '_stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.03368166461586952
    2. '_node' → logprob: -3.408681631088257
    3. 'stack' → logprob: -10.908681869506836
    4. '_nodes' → logprob: -11.908681869506836
    5. '_queue' → logprob: -12.533681869506836
    6. '
' → logprob: -13.033681869506836
    7. '_' → logprob: -13.908681869506836
    8. '_depth' → logprob: -14.533681869506836
    9. '```' → logprob: -14.533681869506836
    10. 'node' → logprob: -14.783681869506836

Token 557: '_' (ID: 62)
  Prédit: '_stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.026398062705993652
    2. '_' → logprob: -3.651398181915283
    3. 'stack' → logprob: -9.526397705078125
    4. '_depth' → logprob: -12.151397705078125
    5. '_to' → logprob: -12.901397705078125
    6. '	stack' → logprob: -13.026397705078125
    7. '=' → logprob: -13.026397705078125
    8. ' =' → logprob: -13.651397705078125
    9. '_
' → logprob: -13.901397705078125
    10. '_visit' → logprob: -13.901397705078125

Token 558: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.038175180554389954
    2. 'stack' → logprob: -3.288175106048584
    3. '_stack' → logprob: -9.538175582885742
    4. 'to' → logprob: -11.913175582885742
    5. 'depth' → logprob: -11.913175582885742
    6. ' visited' → logprob: -12.288175582885742
    7. 'dfs' → logprob: -12.413175582885742
    8. '```' → logprob: -12.413175582885742
    9. 'deque' → logprob: -12.538175582885742
    10. 'parent' → logprob: -12.913175582885742

Token 559: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.05770726129412651
    2. '_stack' → logprob: -3.5577073097229004
    3. '.append' → logprob: -4.4327073097229
    4. '_idx' → logprob: -5.6827073097229
    5. ' =' → logprob: -5.9327073097229
    6. '[' → logprob: -6.4327073097229
    7. '   ' → logprob: -6.9327073097229
    8. '=' → logprob: -6.9327073097229
    9. '_tokens' → logprob: -7.1827073097229
    10. '=[' → logprob: -7.3077073097229

Token 560: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.004171475768089294
    2. '_root' → logprob: -5.504171371459961
    3. 'tree' → logprob: -10.379171371459961
    4. '[root' → logprob: -11.004171371459961
    5. '```' → logprob: -12.004171371459961
    6. '   ' → logprob: -12.129171371459961
    7. '=' → logprob: -12.379171371459961
    8. ']' → logprob: -12.629171371459961
    9. '_idx' → logprob: -13.004171371459961
    10. '<Tree' → logprob: -13.004171371459961

Token 561: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.013892562128603458
    2. '_' → logprob: -4.388892650604248
    3. 'root' → logprob: -6.888892650604248
    4. 'visited' → logprob: -9.01389217376709
    5. '_stack' → logprob: -9.38889217376709
    6. '       ' → logprob: -9.88889217376709
    7. '   ' → logprob: -10.88889217376709
    8. '_ROOT' → logprob: -11.26389217376709
    9. '```' → logprob: -11.26389217376709
    10. '[root' → logprob: -11.26389217376709

Token 562: ']' (ID: 60)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07332338392734528
    2. ']' → logprob: -3.5733234882354736
    3. '].' → logprob: -4.0733232498168945
    4. ' =' → logprob: -4.4483232498168945
    5. ',' → logprob: -4.6983232498168945
    6. '=' → logprob: -5.8233232498168945
    7. '_stack' → logprob: -7.9483232498168945
    8. '.stack' → logprob: -7.9483232498168945
    9. ')' → logprob: -8.448323249816895
    10. '   ' → logprob: -8.448323249816895

Token 563: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.178217813372612
    2. '=' → logprob: -2.178217887878418
    3. ' =' → logprob: -3.178217887878418
    4. '_stack' → logprob: -5.553217887878418
    5. ',' → logprob: -6.428217887878418
    6. 'stack' → logprob: -6.553217887878418
    7. 'append' → logprob: -7.303217887878418
    8. '.extend' → logprob: -8.803217887878418
    9. '=True' → logprob: -9.053217887878418
    10. '.' → logprob: -9.053217887878418

Token 564: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00012523093027994037
    2. ' True' → logprob: -9.00012493133545
    3. '[' → logprob: -13.25012493133545
    4. '(True' → logprob: -19.500125885009766
    5. 'False' → logprob: -21.000125885009766
    6. '   ' → logprob: -21.000125885009766
    7. '=True' → logprob: -21.250125885009766
    8. ' ' → logprob: -21.375125885009766
    9. 'true' → logprob: -22.000125885009766
    10. '
' → logprob: -22.375125885009766

Token 565: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019191285595297813
    2. '
' → logprob: -4.019191265106201
    3. '	stack' → logprob: -7.269191265106201
    4. 'stack' → logprob: -9.01919174194336
    5. '    
' → logprob: -9.51919174194336
    6. ' stack' → logprob: -9.89419174194336
    7. '```' → logprob: -10.26919174194336
    8. '	list' → logprob: -11.51919174194336
    9. 'list' → logprob: -11.51919174194336
    10. ' list' → logprob: -11.76919174194336

Token 566: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018310615560039878
    2. ' for' → logprob: -7.7518310546875
    3. ' list' → logprob: -7.7518310546875
    4. ' stack' → logprob: -8.0018310546875
    5. '```' → logprob: -8.8768310546875
    6. '
' → logprob: -9.1268310546875
    7. 'for' → logprob: -9.1268310546875
    8. '	stack' → logprob: -9.1268310546875
    9. 'stack' → logprob: -9.3768310546875
    10. 'list' → logprob: -10.0018310546875

Token 567: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.3823160231113434
    2. 'stack' → logprob: -1.382315993309021
    3. 'from' → logprob: -3.1323161125183105
    4. '   ' → logprob: -3.8823161125183105
    5. '```' → logprob: -6.3823161125183105
    6. 'import' → logprob: -7.6323161125183105
    7. 'deque' → logprob: -9.132315635681152
    8. ' list' → logprob: -9.257315635681152
    9. ' stack' → logprob: -9.882315635681152
    10. ' from' → logprob: -10.507315635681152

Token 568: '_d' (ID: 1565)
  Prédit: '_stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.0002501343551557511
    2. 'stack' → logprob: -8.375249862670898
    3. '_node' → logprob: -11.375249862670898
    4. '_queue' → logprob: -12.500249862670898
    5. '_nodes' → logprob: -12.750249862670898
    6. ' stack' → logprob: -14.750249862670898
    7. '```' → logprob: -15.000249862670898
    8. '	stack' → logprob: -15.375249862670898
    9. '
' → logprob: -15.875249862670898
    10. 'deque' → logprob: -16.2502498626709

Token 569: 'fs' (ID: 6469)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.058666057884693146
    2. 'fs' → logprob: -3.9336659908294678
    3. 'stack' → logprob: -4.058666229248047
    4. 'eep' → logprob: -4.683666229248047
    5. '_stack' → logprob: -4.808666229248047
    6. 'ep' → logprob: -6.433666229248047
    7. 'ef' → logprob: -7.683666229248047
    8. 'ee' → logprob: -8.058666229248047
    9. ' stack' → logprob: -9.058666229248047
    10. '   ' → logprob: -10.058666229248047

Token 570: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.0015640194760635495
    2. ' =' → logprob: -6.626564025878906
    3. '_nodes' → logprob: -9.126564025878906
    4. '=' → logprob: -9.876564025878906
    5. 'stack' → logprob: -9.876564025878906
    6. '_' → logprob: -11.126564025878906
    7. '_edges' → logprob: -12.751564025878906
    8. ' stack' → logprob: -13.126564025878906
    9. '	stack' → logprob: -13.251564025878906
    10. '_STACK' → logprob: -13.376564025878906

Token 571: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038074202835559845
    2. '=' → logprob: -3.288074254989624
    3. '.append' → logprob: -10.663074493408203
    4. '=[' → logprob: -11.913074493408203
    5. '=[]' → logprob: -13.413074493408203
    6. ' =[' → logprob: -14.788074493408203
    7. '=[]
' → logprob: -16.288074493408203
    8. '   ' → logprob: -16.413074493408203
    9. '=[[' → logprob: -16.413074493408203
    10. '```' → logprob: -16.538074493408203

Token 572: ' [' (ID: 723)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.25333359837532043
    2. '[idx' → logprob: -1.503333568572998
    3. '[var' → logprob: -7.003333568572998
    4. '[' → logprob: -8.253334045410156
    5. '[index' → logprob: -9.128334045410156
    6. '[ind' → logprob: -10.253334045410156
    7. ' [(' → logprob: -10.378334045410156
    8. '[id' → logprob: -11.128334045410156
    9. '[obj' → logprob: -11.753334045410156
    10. '[node' → logprob: -11.878334045410156

Token 573: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00884595699608326
    2. '(idx' → logprob: -4.758845806121826
    3. ' idx' → logprob: -8.383846282958984
    4. ' (' → logprob: -13.758846282958984
    5. '[idx' → logprob: -13.758846282958984
    6. '   ' → logprob: -14.508846282958984
    7. '	idx' → logprob: -16.258846282958984
    8. 'var' → logprob: -17.508846282958984
    9. '.idx' → logprob: -17.758846282958984
    10. '_idx' → logprob: -17.758846282958984

Token 574: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -9.491498531133402e-06
    2. 'idx' → logprob: -12.500009536743164
    3. 'tree' → logprob: -13.375009536743164
    4. '
' → logprob: -13.875009536743164
    5. '_node' → logprob: -14.625009536743164
    6. '_stack' → logprob: -14.750009536743164
    7. '_idx' → logprob: -14.750009536743164
    8. '(idx' → logprob: -14.875009536743164
    9. 'for' → logprob: -15.125009536743164
    10. '_TREE' → logprob: -15.125009536743164

Token 575: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -9.014684110297821e-06
    2. 'root' → logprob: -11.750008583068848
    3. '_ROOT' → logprob: -14.875008583068848
    4. '```' → logprob: -15.625008583068848
    5. '[root' → logprob: -16.000009536743164
    6. '_stack' → logprob: -16.000009536743164
    7. 'Root' → logprob: -16.125009536743164
    8. '	root' → logprob: -17.250009536743164
    9. ' root' → logprob: -18.125009536743164
    10. '_idx' → logprob: -18.375009536743164

Token 576: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.2015165537595749
    2. ']' → logprob: -1.7015165090560913
    3. '   ' → logprob: -9.826516151428223
    4. ']
' → logprob: -10.951516151428223
    5. ' ]
' → logprob: -10.951516151428223
    6. ']

' → logprob: -11.826516151428223
    7. ',' → logprob: -12.826516151428223
    8. ' ]' → logprob: -12.951516151428223
    9. '
' → logprob: -14.826516151428223
    10. '```' → logprob: -14.951516151428223

Token 577: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22438961267471313
    2. 'while' → logprob: -1.9743895530700684
    3. ' while' → logprob: -2.9743895530700684
    4. '	while' → logprob: -4.724389553070068
    5. '```' → logprob: -6.349389553070068
    6. '
' → logprob: -7.849389553070068
    7. '    
' → logprob: -10.474390029907227
    8. '   ' → logprob: -11.349390029907227
    9. '``' → logprob: -12.349390029907227
    10. 'While' → logprob: -13.099390029907227

Token 578: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.04292210936546326
    2. '   ' → logprob: -3.792922019958496
    3. ' while' → logprob: -4.542922019958496
    4. '```' → logprob: -4.792922019958496
    5. '	while' → logprob: -7.542922019958496
    6. '``' → logprob: -10.917922019958496
    7. 'While' → logprob: -12.667922019958496
    8. '
' → logprob: -13.542922019958496
    9. '       ' → logprob: -14.417922019958496
    10. '   ' → logprob: -14.792922019958496

Token 579: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.04859338700771332
    2. ' list' → logprob: -3.048593282699585
    3. 'len' → logprob: -12.173593521118164
    4. 'd' → logprob: -15.048593521118164
    5. ' len' → logprob: -15.298593521118164
    6. '   ' → logprob: -15.798593521118164
    7. 'List' → logprob: -16.923593521118164
    8. ' ' → logprob: -17.048593521118164
    9. '
' → logprob: -17.173593521118164
    10. '```' → logprob: -17.548593521118164

Token 580: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -4.246537173457909e-06
    2. 'dfs' → logprob: -13.750003814697266
    3. '_node' → logprob: -13.875003814697266
    4. '   ' → logprob: -14.500003814697266
    5. '
' → logprob: -14.500003814697266
    6. '```' → logprob: -14.625003814697266
    7. '_' → logprob: -15.750003814697266
    8. '_depth' → logprob: -16.000003814697266
    9. '\' → logprob: -16.250003814697266
    10. '_
' → logprob: -16.500003814697266

Token 581: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.0016030559781938791
    2. 'dfs' → logprob: -6.501603126525879
    3. '_fs' → logprob: -9.876603126525879
    4. '_d' → logprob: -10.001603126525879
    5. 'efs' → logprob: -14.001603126525879
    6. 'f' → logprob: -14.501603126525879
    7. '```' → logprob: -14.626603126525879
    8. ' dfs' → logprob: -14.751603126525879
    9. '_' → logprob: -15.126603126525879
    10. '[' → logprob: -15.501603126525879

Token 582: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -5.438573680294212e-06
    2. 'stack' → logprob: -12.875005722045898
    3. '```' → logprob: -14.000005722045898
    4. '   ' → logprob: -14.250005722045898
    5. '_' → logprob: -14.750005722045898
    6. '_d' → logprob: -15.625005722045898
    7. '
' → logprob: -16.0000057220459
    8. 'd' → logprob: -16.3750057220459
    9. '_STACK' → logprob: -16.5000057220459
    10. '[-' → logprob: -16.6250057220459

Token 583: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06330528110265732
    2. ':
' → logprob: -3.188305377960205
    3. '.pop' → logprob: -3.938305377960205
    4. '[-' → logprob: -7.938305377960205
    5. '):
' → logprob: -9.063304901123047
    6. '):' → logprob: -9.688304901123047
    7. '.append' → logprob: -10.313304901123047
    8. 'pop' → logprob: -10.563304901123047
    9. '```' → logprob: -11.688304901123047
    10. '   ' → logprob: -12.563304901123047

Token 584: '       ' (ID: 309)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.29634952545166016
    2. '       ' → logprob: -1.9213495254516602
    3. '   ' → logprob: -3.17134952545166
    4. 'idx' → logprob: -3.54634952545166
    5. ' node' → logprob: -4.54634952545166
    6. ' list' → logprob: -4.92134952545166
    7. '```' → logprob: -5.17134952545166
    8. ' var' → logprob: -5.17134952545166
    9. '    ' → logprob: -5.92134952545166
    10. 'var' → logprob: -6.17134952545166

Token 585: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.07404373586177826
    2. ' idx' → logprob: -3.0740437507629395
    3. 'var' → logprob: -4.0740437507629395
    4. 'current' → logprob: -5.4490437507629395
    5. ' current' → logprob: -6.4490437507629395
    6. ' var' → logprob: -7.0740437507629395
    7. 'cur' → logprob: -7.5740437507629395
    8. 'node' → logprob: -7.8240437507629395
    9. '   ' → logprob: -8.574043273925781
    10. 'curr' → logprob: -9.074043273925781

Token 586: '_current' (ID: 23981)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.15676330029964447
    2. '_d' → logprob: -3.0317633152008057
    3. '_current' → logprob: -3.1567633152008057
    4. '_cur' → logprob: -3.2817633152008057
    5. '_curr' → logprob: -4.156763076782227
    6. '_top' → logprob: -7.531763076782227
    7. 'cur' → logprob: -8.906763076782227
    8. 'node' → logprob: -9.156763076782227
    9. '_next' → logprob: -9.406763076782227
    10. 'd' → logprob: -10.031763076782227

Token 587: '_node' (ID: 11390)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2859900891780853
    2. '=' → logprob: -2.035989999771118
    3. '_node' → logprob: -2.160989999771118
    4. '_stack' → logprob: -6.910990238189697
    5. '_current' → logprob: -7.660990238189697
    6. '_d' → logprob: -8.160989761352539
    7. '=node' → logprob: -8.160989761352539
    8. 'node' → logprob: -8.535989761352539
    9. '_token' → logprob: -8.660989761352539
    10. '_' → logprob: -8.910989761352539

Token 588: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575941801071167
    2. ' =' → logprob: -0.825941801071167
    3. '=list' → logprob: -13.325942039489746
    4. ',' → logprob: -15.200942039489746
    5. '=
' → logprob: -15.825942039489746
    6. '   ' → logprob: -16.07594108581543
    7. ' ' → logprob: -16.45094108581543
    8. ' =
' → logprob: -16.82594108581543
    9. '    ' → logprob: -16.95094108581543
    10. '	' → logprob: -17.70094108581543

Token 589: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02324547804892063
    2. ' list' → logprob: -3.7732455730438232
    3. '   ' → logprob: -20.648244857788086
    4. '	list' → logprob: -21.023244857788086
    5. ' ' → logprob: -21.648244857788086
    6. 'List' → logprob: -21.648244857788086
    7. 'lst' → logprob: -22.023244857788086
    8. '_list' → logprob: -22.523244857788086
    9. 'pop' → logprob: -23.523244857788086
    10. 'd' → logprob: -23.648244857788086

Token 590: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -3.0948158382670954e-05
    2. 'dfs' → logprob: -10.625030517578125
    3. '.pop' → logprob: -13.125030517578125
    4. 'pop' → logprob: -13.375030517578125
    5. '```' → logprob: -14.875030517578125
    6. 'd' → logprob: -14.875030517578125
    7. '_node' → logprob: -15.000030517578125
    8. '_current' → logprob: -15.250030517578125
    9. '.append' → logprob: -15.250030517578125
    10. '[-' → logprob: -15.625030517578125

Token 591: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.0002632430987432599
    2. 'dfs' → logprob: -8.375263214111328
    3. '_fs' → logprob: -11.125263214111328
    4. 'sf' → logprob: -11.500263214111328
    5. 's' → logprob: -12.250263214111328
    6. 'f' → logprob: -13.250263214111328
    7. 'fst' → logprob: -15.250263214111328
    8. '_d' → logprob: -15.375263214111328
    9. 'stack' → logprob: -15.875263214111328
    10. 'fsi' → logprob: -16.500263214111328

Token 592: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -7.226628895296017e-06
    2. 'stack' → logprob: -11.875007629394531
    3. '[-' → logprob: -16.50000762939453
    4. 'Stack' → logprob: -16.75000762939453
    5. '_STACK' → logprob: -17.37500762939453
    6. 'append' → logprob: -17.50000762939453
    7. '_' → logprob: -18.00000762939453
    8. '[' → logprob: -18.37500762939453
    9. '_node' → logprob: -18.50000762939453
    10. '.append' → logprob: -18.75000762939453

Token 593: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -3.5358694731257856e-05
    2. '[-' → logprob: -10.750035285949707
    3. 'pop' → logprob: -11.375035285949707
    4. '_pop' → logprob: -13.250035285949707
    5. '   ' → logprob: -14.500035285949707
    6. '.' → logprob: -16.875036239624023
    7. ' .' → logprob: -17.000036239624023
    8. 'Pop' → logprob: -18.625036239624023
    9. '=' → logprob: -19.000036239624023
    10. '       ' → logprob: -19.375036239624023

Token 594: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.762356209335849e-05
    2. '(' → logprob: -10.62503719329834
    3. '()
' → logprob: -11.25003719329834
    4. '()

' → logprob: -16.375038146972656
    5. ' ()' → logprob: -16.750038146972656
    6. '();' → logprob: -16.750038146972656
    7. '(),' → logprob: -17.375038146972656
    8. ')' → logprob: -17.500038146972656
    9. '())' → logprob: -17.750038146972656
    10. '()
' → logprob: -17.875038146972656

Token 595: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11579642444849014
    2. ' for' → logprob: -2.3657963275909424
    3. 'for' → logprob: -4.3657965660095215
    4. '	for' → logprob: -6.2407965660095215
    5. '       ' → logprob: -8.115796089172363
    6. '    
' → logprob: -8.490796089172363
    7. '```' → logprob: -8.615796089172363
    8. '   ' → logprob: -9.865796089172363
    9. '
' → logprob: -10.115796089172363
    10. '    ' → logprob: -11.740796089172363

Token 596: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10646791756153107
    2. '   ' → logprob: -2.6064679622650146
    3. ' for' → logprob: -3.6064679622650146
    4. '	for' → logprob: -10.481468200683594
    5. '```' → logprob: -11.106468200683594
    6. '
' → logprob: -11.856468200683594
    7. '   ' → logprob: -13.481468200683594
    8. '    
' → logprob: -13.481468200683594
    9. ' ' → logprob: -14.606468200683594
    10. '       ' → logprob: -16.106468200683594

Token 597: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.01586015522480011
    2. '(idx' → logprob: -4.515860080718994
    3. ' idx' → logprob: -5.390860080718994
    4. 'adj' → logprob: -9.140860557556152
    5. 'neighbor' → logprob: -9.515860557556152
    6. ' (' → logprob: -10.140860557556152
    7. '(' → logprob: -12.015860557556152
    8. 'next' → logprob: -12.640860557556152
    9. 'var' → logprob: -12.890860557556152
    10. '(adj' → logprob: -13.140860557556152

Token 598: '_neighbor' (ID: 177120)
  Prédit: '_neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.19943426549434662
    2. 'neighbor' → logprob: -2.074434280395508
    3. '_adj' → logprob: -3.574434280395508
    4. '_next' → logprob: -3.824434280395508
    5. 'adj' → logprob: -5.949434280395508
    6. '_ne' → logprob: -6.699434280395508
    7. 'next' → logprob: -7.074434280395508
    8. ',' → logprob: -8.074434280395508
    9. '_,' → logprob: -9.449434280395508
    10. '_edge' → logprob: -9.824434280395508

Token 599: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008241381496191025
    2. '_neighbor' → logprob: -4.883241176605225
    3. 'neighbor' → logprob: -8.383241653442383
    4. '_node' → logprob: -9.008241653442383
    5. '_,' → logprob: -9.008241653442383
    6. ' ,' → logprob: -9.383241653442383
    7. ',node' → logprob: -10.383241653442383
    8. '_neighbors' → logprob: -11.258241653442383
    9. ',_' → logprob: -11.508241653442383
    10. '```' → logprob: -12.133241653442383

Token 600: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.22164040803909302
    2. ' idx' → logprob: -2.3466403484344482
    3. 'edge' → logprob: -2.8466403484344482
    4. 'var' → logprob: -3.5966403484344482
    5. ' edge' → logprob: -5.471640586853027
    6. '_edge' → logprob: -5.596640586853027
    7. ' var' → logprob: -5.721640586853027
    8. '_idx' → logprob: -5.846640586853027
    9. 'id' → logprob: -6.346640586853027
    10. 'token' → logprob: -7.971640586853027

Token 601: '_graph' (ID: 33441)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0113375848159194
    2. '_current' → logprob: -5.386337757110596
    3. '_neighbor' → logprob: -6.011337757110596
    4. '_tree' → logprob: -6.511337757110596
    5. '_edges' → logprob: -7.136337757110596
    6. 'edge' → logprob: -7.761337757110596
    7. '_token' → logprob: -8.386337280273438
    8. '_next' → logprob: -8.636337280273438
    9. '_adj' → logprob: -8.761337280273438
    10. '_pair' → logprob: -8.886337280273438

Token 602: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.018114596605300903
    2. 'edge' → logprob: -4.1431145668029785
    3. ',' → logprob: -7.3931145668029785
    4. '   ' → logprob: -7.3931145668029785
    5. ' edge' → logprob: -8.143115043640137
    6. '_edges' → logprob: -9.768115043640137
    7. ' =' → logprob: -9.768115043640137
    8. 'Edge' → logprob: -9.893115043640137
    9. 'EDGE' → logprob: -10.393115043640137
    10. ' ' → logprob: -10.518115043640137

Token 603: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03976805508136749
    2. 'in' → logprob: -3.2897679805755615
    3. '   ' → logprob: -7.414768218994141
    4. '_edge' → logprob: -7.539768218994141
    5. '_in' → logprob: -8.41476821899414
    6. 'edge' → logprob: -8.91476821899414
    7. '	in' → logprob: -10.16476821899414
    8. '_edges' → logprob: -10.16476821899414
    9. ' ' → logprob: -10.28976821899414
    10. '  ' → logprob: -10.78976821899414

Token 604: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3145553767681122
    2. ' list' → logprob: -1.3145554065704346
    3. 'in' → logprob: -6.9395551681518555
    4. ' in' → logprob: -8.064555168151855
    5. '   ' → logprob: -13.064555168151855
    6. '	list' → logprob: -13.189555168151855
    7. ',list' → logprob: -13.814555168151855
    8. ':list' → logprob: -13.814555168151855
    9. ',' → logprob: -14.064555168151855
    10. '(list' → logprob: -14.564555168151855

Token 605: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.0006050990778021514
    2. 'adj' → logprob: -8.500604629516602
    3. '_current' → logprob: -9.750604629516602
    4. '_edges' → logprob: -10.125604629516602
    5. '_pair' → logprob: -10.500604629516602
    6. '.append' → logprob: -10.625604629516602
    7. '```' → logprob: -11.000604629516602
    8. '_append' → logprob: -11.000604629516602
    9. 'append' → logprob: -11.125604629516602
    10. '_neighbor' → logprob: -11.125604629516602

Token 606: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.00011963568249484524
    2. 'ent' → logprob: -10.12511920928955
    3. 'cent' → logprob: -10.87511920928955
    4. 'ac' → logprob: -11.37511920928955
    5. 'acency' → logprob: -11.37511920928955
    6. '_list' → logprob: -11.87511920928955
    7. '_node' → logprob: -12.50011920928955
    8. '[' → logprob: -12.50011920928955
    9. 'oint' → logprob: -13.00011920928955
    10. '_graph' → logprob: -13.12511920928955

Token 607: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.0010422171326354146
    2. 'graph' → logprob: -6.876042366027832
    3. '```' → logprob: -12.751042366027832
    4. '_stack' → logprob: -13.626042366027832
    5. '   ' → logprob: -14.001042366027832
    6. '[' → logprob: -14.001042366027832
    7. '(graph' → logprob: -14.626042366027832
    8. '[-' → logprob: -14.876042366027832
    9. '       ' → logprob: -15.001042366027832
    10. '_GRAPH' → logprob: -15.126042366027832

Token 608: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.723352049040841e-06
    2. '(idx' → logprob: -12.875004768371582
    3. 'idx' → logprob: -13.875004768371582
    4. '   ' → logprob: -14.375004768371582
    5. '[' → logprob: -15.750004768371582
    6. '_idx' → logprob: -16.375003814697266
    7. '```' → logprob: -16.500003814697266
    8. ' idx' → logprob: -16.750003814697266
    9. '[
' → logprob: -17.125003814697266
    10. ' [' → logprob: -17.250003814697266

Token 609: '_current' (ID: 23981)
  Prédit: '_current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -5.967624019831419e-05
    2. 'current' → logprob: -9.750060081481934
    3. 'idx' → logprob: -14.125060081481934
    4. 'Current' → logprob: -15.375060081481934
    5. '```' → logprob: -16.625059127807617
    6. '[current' → logprob: -17.000059127807617
    7. '_idx' → logprob: -17.000059127807617
    8. '[idx' → logprob: -17.750059127807617
    9. '_neighbor' → logprob: -17.875059127807617
    10. ' current' → logprob: -17.875059127807617

Token 610: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.011500573717057705
    2. '_graph' → logprob: -4.511500358581543
    3. 'node' → logprob: -7.886500358581543
    4. 'graph' → logprob: -10.261500358581543
    5. '_stack' → logprob: -11.386500358581543
    6. '_nodes' → logprob: -11.761500358581543
    7. '_neighbor' → logprob: -12.386500358581543
    8. '_tree' → logprob: -12.636500358581543
    9. '[node' → logprob: -12.761500358581543
    10. '```' → logprob: -13.136500358581543

Token 611: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5365197658538818
    2. ':
' → logprob: -1.6615197658538818
    3. ' in' → logprob: -2.411519765853882
    4. '):
' → logprob: -2.661519765853882
    5. '):' → logprob: -3.536519765853882
    6. '       ' → logprob: -3.911519765853882
    7. ']:
' → logprob: -5.036520004272461
    8. '   ' → logprob: -5.911520004272461
    9. ']:' → logprob: -5.911520004272461
    10. '           ' → logprob: -7.161520004272461

Token 612: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0496300607919693
    2. ' if' → logprob: -3.6746301651000977
    3. '       ' → logprob: -4.174630165100098
    4. '<|end|>' → logprob: -6.424630165100098
    5. 'if' → logprob: -6.549630165100098
    6. '	       ' → logprob: -6.674630165100098
    7. '   ' → logprob: -6.924630165100098
    8. '            ' → logprob: -7.674630165100098
    9. '        ' → logprob: -7.799630165100098
    10. '```' → logprob: -8.049630165100098

Token 613: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.008079150691628456
    2. '       ' → logprob: -5.6330790519714355
    3. 'if' (adapté à ' if') → logprob: -6.1330790519714355
    4. '           ' → logprob: -6.6330790519714355
    5. '               ' → logprob: -7.6330790519714355
    6. '   ' → logprob: -8.008079528808594
    7. '	if' → logprob: -9.758079528808594
    8. '    ' → logprob: -10.383079528808594
    9. '            ' → logprob: -10.883079528808594
    10. '        ' → logprob: -11.133079528808594

Token 614: ' list' (ID: 1562)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1222296878695488
    2. 'not' → logprob: -2.24722957611084
    3. ' list' → logprob: -5.24722957611084
    4. 'list' → logprob: -5.49722957611084
    5. '!' → logprob: -14.37222957611084
    6. '   ' → logprob: -14.62222957611084
    7. '(not' → logprob: -14.74722957611084
    8. ' ' → logprob: -14.93472957611084
    9. '	not' → logprob: -15.18472957611084
    10. '(list' → logprob: -15.37222957611084

Token 615: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0006996880983933806
    2. 'not' → logprob: -7.875699520111084
    3. 'node' → logprob: -8.125699996948242
    4. '_not' → logprob: -11.625699996948242
    5. ' not' → logprob: -12.000699996948242
    6. '_' → logprob: -13.125699996948242
    7. '```' → logprob: -13.375699996948242
    8. '#' → logprob: -14.125699996948242
    9. '_adj' → logprob: -14.250699996948242
    10. '_edge' → logprob: -14.250699996948242

Token 616: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.988221684878226e-06
    2. 'visited' → logprob: -12.125006675720215
    3. '```' → logprob: -14.375006675720215
    4. '_par' → logprob: -14.750006675720215
    5. '[' → logprob: -16.12500762939453
    6. '<|end|>' → logprob: -16.37500762939453
    7. '_not' → logprob: -17.62500762939453
    8. '_adj' → logprob: -17.87500762939453
    9. '‌' → logprob: -18.00000762939453
    10. '_visit' → logprob: -18.25000762939453

Token 617: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.2352385965641588e-05
    2. 'adj' → logprob: -12.250012397766113
    3. 'neighbor' → logprob: -12.625012397766113
    4. 'not' → logprob: -13.750012397766113
    5. ' visited' → logprob: -13.875012397766113
    6. 'node' → logprob: -14.375012397766113
    7. '_' → logprob: -14.375012397766113
    8. '
' → logprob: -14.750012397766113
    9. '```' → logprob: -15.625012397766113
    10. 'neighbors' → logprob: -15.875012397766113

Token 618: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.5
    3. 'idx' → logprob: -16.875
    4. '   ' → logprob: -17.125
    5. ' idx' → logprob: -17.75
    6. '       ' → logprob: -18.5
    7. '(idx' → logprob: -18.625
    8. '	idx' → logprob: -18.625
    9. ' [' → logprob: -19.0
    10. '           ' → logprob: -19.25

Token 619: '_neighbor' (ID: 177120)
  Prédit: '_neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.0002669384120963514
    2. 'neighbor' → logprob: -8.250267028808594
    3. '_' → logprob: -13.500267028808594
    4. '[' → logprob: -14.000267028808594
    5. '```' → logprob: -14.000267028808594
    6. 'Neighbor' → logprob: -14.250267028808594
    7. '_neighbors' → logprob: -14.375267028808594
    8. '
' → logprob: -15.000267028808594
    9. '_current' → logprob: -15.125267028808594
    10. '_ne' → logprob: -15.875267028808594

Token 620: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.37619832158088684
    2. ':' → logprob: -1.2511982917785645
    3. '==' → logprob: -5.0011982917785645
    4. ']:
' → logprob: -5.1261982917785645
    5. ']==' → logprob: -5.8761982917785645
    6. 'continue' → logprob: -6.1261982917785645
    7. ':return' → logprob: -6.1261982917785645
    8. ']:' → logprob: -6.2511982917785645
    9. '           ' → logprob: -6.5011982917785645
    10. ' continue' → logprob: -6.6261982917785645

Token 621: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10230465978384018
    2. ':' → logprob: -2.852304697036743
    3. ':
' → logprob: -3.727304697036743
    4. ' continue' → logprob: -4.352304458618164
    5. 'continue' → logprob: -6.852304458618164
    6. '           ' → logprob: -7.352304458618164
    7. '       ' → logprob: -7.602304458618164
    8. '	continue' → logprob: -9.602304458618164
    9. '   ' → logprob: -9.727304458618164
    10. ',' → logprob: -9.977304458618164

Token 622: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.13559772074222565
    2. 'continue' (adapté à ' continue') → logprob: -2.7605977058410645
    3. '               ' → logprob: -3.1355977058410645
    4. '   ' → logprob: -4.3855977058410645
    5. '       ' → logprob: -5.7605977058410645
    6. '           ' → logprob: -5.8855977058410645
    7. '	continue' → logprob: -6.5105977058410645
    8. '                   ' → logprob: -9.135598182678223
    9. '```' → logprob: -9.635598182678223
    10. '_continue' → logprob: -10.760598182678223

Token 623: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006770553067326546
    2. ' list' → logprob: -5.256770610809326
    3. '               ' → logprob: -7.006770610809326
    4. '            
' → logprob: -8.756770133972168
    5. 'list' → logprob: -8.881770133972168
    6. '
' → logprob: -9.131770133972168
    7. '   ' → logprob: -9.381770133972168
    8. '       ' → logprob: -9.881770133972168
    9. '```' → logprob: -11.131770133972168
    10. '                
' → logprob: -11.256770133972168

Token 624: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12095779180526733
    2. '   ' → logprob: -2.995957851409912
    3. '       ' → logprob: -3.120957851409912
    4. '               ' → logprob: -4.745957851409912
    5. ' list' → logprob: -4.995957851409912
    6. '
' → logprob: -6.245957851409912
    7. '```' → logprob: -6.620957851409912
    8. 'list' → logprob: -7.870957851409912
    9. '            
' → logprob: -8.495957374572754
    10. '	list' → logprob: -9.245957374572754

Token 625: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.3704753518104553
    2. '           ' → logprob: -1.8704752922058105
    3. ' list' → logprob: -2.1204752922058105
    4. '   ' → logprob: -3.8704752922058105
    5. '               ' → logprob: -4.6204752922058105
    6. '       ' → logprob: -5.3704752922058105
    7. '	list' → logprob: -9.370475769042969
    8. '                   ' → logprob: -9.995475769042969
    9. '```' → logprob: -10.120475769042969
    10. '            ' → logprob: -11.995475769042969

Token 626: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.676981345459353e-06
    2. '_stack' → logprob: -12.375005722045898
    3. '_' → logprob: -14.000005722045898
    4. '_d' → logprob: -14.500005722045898
    5. '_nodes' → logprob: -16.8750057220459
    6. 'node' → logprob: -17.3750057220459
    7. '```' → logprob: -18.1250057220459
    8. '_Node' → logprob: -18.6250057220459
    9. '_list' → logprob: -18.7500057220459
    10. '   ' → logprob: -19.3750057220459

Token 627: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.226628895296017e-06
    2. 'visited' → logprob: -11.875007629394531
    3. '```' → logprob: -15.875007629394531
    4. '_visible' → logprob: -17.75000762939453
    5. 'Visited' → logprob: -17.75000762939453
    6. '[' → logprob: -18.00000762939453
    7. '‌' → logprob: -18.50000762939453
    8. 'import' → logprob: -18.56250762939453
    9. '_visit' → logprob: -18.56250762939453
    10. '#' → logprob: -18.62500762939453

Token 628: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -4.127333340875339e-06
    2. 'adj' → logprob: -12.750003814697266
    3. 'stack' → logprob: -14.875003814697266
    4. 'valu' → logprob: -15.125003814697266
    5. '_' → logprob: -16.000003814697266
    6. 'val' → logprob: -16.000003814697266
    7. '
' → logprob: -16.625003814697266
    8. '```' → logprob: -17.125003814697266
    9. ' visited' → logprob: -17.625003814697266
    10. 'dfs' → logprob: -17.625003814697266

Token 629: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.375
    3. '[index' → logprob: -17.125
    4. '```' → logprob: -17.625
    5. 'idx' → logprob: -18.625
    6. ' [' → logprob: -18.875
    7. '[ind' → logprob: -18.875
    8. '
' → logprob: -19.125
    9. '[
' → logprob: -19.375
    10. '	idx' → logprob: -19.375

Token 630: '_neighbor' (ID: 177120)
  Prédit: '_neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.0009271837188862264
    2. 'neighbor' → logprob: -7.000926971435547
    3. '[' → logprob: -11.750926971435547
    4. '_neighbors' → logprob: -12.500926971435547
    5. '```' → logprob: -13.250926971435547
    6. '_' → logprob: -14.500926971435547
    7. ' neighbor' → logprob: -15.000926971435547
    8. '
' → logprob: -15.000926971435547
    9. '_ne' → logprob: -15.625926971435547
    10. 'Neighbor' → logprob: -15.875926971435547

Token 631: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0698627308011055
    2. '=' → logprob: -2.8198628425598145
    3. ']=' → logprob: -4.9448628425598145
    4. ' =' → logprob: -7.3198628425598145
    5. '[idx' → logprob: -9.944862365722656
    6. '[' → logprob: -11.194862365722656
    7. '=True' → logprob: -11.944862365722656
    8. ')' → logprob: -12.069862365722656
    9. ' ]' → logprob: -12.444862365722656
    10. '```' → logprob: -14.194862365722656

Token 632: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004079470410943031
    2. ' =' → logprob: -5.504079341888428
    3. ']' → logprob: -14.754079818725586
    4. '[' → logprob: -15.504079818725586
    5. '=True' → logprob: -15.504079818725586
    6. ']=' → logprob: -15.629079818725586
    7. '   ' → logprob: -17.504079818725586
    8. ')' → logprob: -18.504079818725586
    9. ' ' → logprob: -19.004079818725586
    10. '```' → logprob: -19.004079818725586

Token 633: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001584850688232109
    2. ' True' → logprob: -8.750158309936523
    3. '(True' → logprob: -19.500158309936523
    4. '           ' → logprob: -20.625158309936523
    5. '=True' → logprob: -20.750158309936523
    6. '                   ' → logprob: -21.875158309936523
    7. '               ' → logprob: -22.375158309936523
    8. '
' → logprob: -22.500158309936523
    9. 'true' → logprob: -22.625158309936523
    10. 'False' → logprob: -23.125158309936523

Token 634: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006650181603617966
    2. '
' → logprob: -7.750665187835693
    3. '<|end|>' → logprob: -8.875664710998535
    4. ' list' → logprob: -11.125664710998535
    5. '<|end|>' → logprob: -11.125664710998535
    6. '            
' → logprob: -11.250664710998535
    7. '               ' → logprob: -11.375664710998535
    8. '		' → logprob: -11.625664710998535
    9. '   ' → logprob: -11.750664710998535
    10. '       ' → logprob: -12.125664710998535

Token 635: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006027388386428356
    2. ' list' → logprob: -5.8810272216796875
    3. '   ' → logprob: -6.7560272216796875
    4. 'list' → logprob: -7.1310272216796875
    5. '
' → logprob: -7.6310272216796875
    6. '       ' → logprob: -8.131027221679688
    7. '               ' → logprob: -9.006027221679688
    8. '```' → logprob: -9.131027221679688
    9. '	list' → logprob: -9.506027221679688
    10. '            
' → logprob: -10.506027221679688

Token 636: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -1.7432603272027336e-06
    2. ' list' → logprob: -14.000001907348633
    3. '   ' → logprob: -14.250001907348633
    4. '```' → logprob: -15.875001907348633
    5. '           ' → logprob: -16.500001907348633
    6. '``' → logprob: -18.875001907348633
    7. '
' → logprob: -19.750001907348633
    8. '       ' → logprob: -19.875001907348633
    9. '	list' → logprob: -22.500001907348633
    10. '               ' → logprob: -22.750001907348633

Token 637: '_d' (ID: 1565)
  Prédit: '_stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.0013304755557328463
    2. '_d' → logprob: -6.626330375671387
    3. 'stack' → logprob: -13.001330375671387
    4. '_list' → logprob: -14.126330375671387
    5. '_all' → logprob: -14.251330375671387
    6. '_node' → logprob: -15.126330375671387
    7. '_' → logprob: -15.501330375671387
    8. 'Stack' → logprob: -15.751330375671387
    9. 'd' → logprob: -15.876330375671387
    10. 'dfs' → logprob: -17.376331329345703

Token 638: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -1.8624639324116288e-06
    2. '_fs' → logprob: -13.750001907348633
    3. 'dfs' → logprob: -14.375001907348633
    4. 'f' → logprob: -16.250001907348633
    5. 's' → logprob: -16.875001907348633
    6. 'efs' → logprob: -18.000001907348633
    7. 'FS' → logprob: -18.125001907348633
    8. ' fs' → logprob: -18.250001907348633
    9. 'sf' → logprob: -18.375001907348633
    10. '(fs' → logprob: -19.125001907348633

Token 639: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -3.128163257315464e-07
    2. 'stack' → logprob: -15.125
    3. '_STACK' → logprob: -17.5
    4. '```' → logprob: -17.875
    5. 'append' → logprob: -18.0
    6. '_' → logprob: -18.125
    7. '_append' → logprob: -18.5
    8. '
' → logprob: -18.875
    9. ' stack' → logprob: -19.25
    10. '   ' → logprob: -19.375

Token 640: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -13.875000953674316
    3. 'append' → logprob: -15.500000953674316
    4. '.extend' → logprob: -18.125001907348633
    5. '.app' → logprob: -19.250001907348633
    6. '.push' → logprob: -19.375001907348633
    7. ' .' → logprob: -19.750001907348633
    8. '_append' → logprob: -19.875001907348633
    9. 'Append' → logprob: -21.000001907348633
    10. '   ' → logprob: -21.375001907348633

Token 641: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.00026264708139933646
    2. '(' → logprob: -8.250262260437012
    3. 'idx' → logprob: -14.375262260437012
    4. '(
' → logprob: -15.125262260437012
    5. '((' → logprob: -15.125262260437012
    6. ' (' → logprob: -16.000263214111328
    7. '(index' → logprob: -16.875263214111328
    8. ' idx' → logprob: -17.250263214111328
    9. '	idx' → logprob: -18.375263214111328
    10. '[idx' → logprob: -18.750263214111328

Token 642: '_neighbor' (ID: 177120)
  Prédit: '_neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -8.745069499127567e-05
    2. 'neighbor' → logprob: -9.37508773803711
    3. '```' → logprob: -13.62508773803711
    4. '_ne' → logprob: -14.25008773803711
    5. '_neighbors' → logprob: -14.87508773803711
    6. 'Neighbor' → logprob: -16.62508773803711
    7. '_node' → logprob: -16.75008773803711
    8. '``' → logprob: -17.25008773803711
    9. ' neighbor' → logprob: -17.62508773803711
    10. '\' → logprob: -17.62508773803711

Token 643: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4649409353733063
    2. ')
' → logprob: -1.3399409055709839
    3. '           ' → logprob: -2.2149410247802734
    4. '       ' → logprob: -7.839941024780273
    5. ',' → logprob: -8.839941024780273
    6. '               ' → logprob: -9.214941024780273
    7. '   ' → logprob: -10.464941024780273
    8. '            
' → logprob: -11.089941024780273
    9. '          ' → logprob: -11.214941024780273
    10. '
' → logprob: -11.339941024780273

Token 644: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003191501135006547
    2. '   ' → logprob: -6.2531914710998535
    3. 'list' → logprob: -7.2531914710998535
    4. ' list' → logprob: -8.128191947937012
    5. '       ' → logprob: -8.753191947937012
    6. '
' → logprob: -9.878191947937012
    7. '               ' → logprob: -10.503191947937012
    8. '```' → logprob: -11.128191947937012
    9. '		' → logprob: -13.503191947937012
    10. '                   ' → logprob: -14.003191947937012

Token 645: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -9.794061770662665e-05
    2. ' list' → logprob: -9.25009822845459
    3. '           ' → logprob: -13.25009822845459
    4. '   ' → logprob: -16.625097274780273
    5. '
' → logprob: -19.000097274780273
    6. '```' → logprob: -19.125097274780273
    7. '               ' → logprob: -19.375097274780273
    8. '       ' → logprob: -19.500097274780273
    9. 'if' → logprob: -20.750097274780273
    10. '                   ' → logprob: -21.625097274780273

Token 646: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -1.688212614681106e-05
    2. '_list' → logprob: -11.625017166137695
    3. '_all' → logprob: -12.000017166137695
    4. '_pair' → logprob: -13.875017166137695
    5. '_adj' → logprob: -15.500017166137695
    6. 'all' → logprob: -16.125017166137695
    7. '_node' → logprob: -16.250017166137695
    8. '```' → logprob: -16.875017166137695
    9. '_queue' → logprob: -17.000017166137695
    10. '_tree' → logprob: -17.125017166137695

Token 647: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.00043341092532500625
    2. '.append' → logprob: -7.875433444976807
    3. 'edges' → logprob: -10.000432968139648
    4. '```' → logprob: -12.375432968139648
    5. 'append' → logprob: -13.625432968139648
    6. '_stack' → logprob: -14.500432968139648
    7. '_edge' → logprob: -15.250432968139648
    8. '_append' → logprob: -15.250432968139648
    9. '   ' → logprob: -15.375432968139648
    10. 'Edges' → logprob: -15.625432968139648

Token 648: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.080963092041202e-06
    2. '.' → logprob: -12.250004768371582
    3. '.app' → logprob: -16.2500057220459
    4. ' .' → logprob: -16.5000057220459
    5. 'append' → logprob: -16.5000057220459
    6. '.ap' → logprob: -17.2500057220459
    7. '.extend' → logprob: -17.7500057220459
    8. ').' → logprob: -18.2500057220459
    9. '.Append' → logprob: -18.3750057220459
    10. '.add' → logprob: -19.2500057220459

Token 649: '((' (ID: 2054)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.03819525986909866
    2. '((' → logprob: -3.2881953716278076
    3. '(' → logprob: -8.788195610046387
    4. 'idx' → logprob: -14.788195610046387
    5. ' (' → logprob: -15.163195610046387
    6. '(id' → logprob: -15.163195610046387
    7. '(
' → logprob: -15.538195610046387
    8. '(index' → logprob: -17.41319465637207
    9. '(ix' → logprob: -17.53819465637207
    10. '[idx' → logprob: -18.03819465637207

Token 650: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0007416110602207482
    2. ' idx' → logprob: -7.250741481781006
    3. '(idx' → logprob: -10.750741958618164
    4. 'var' → logprob: -13.000741958618164
    5. '   ' → logprob: -13.250741958618164
    6. '	idx' → logprob: -13.375741958618164
    7. '[idx' → logprob: -13.750741958618164
    8. '
' → logprob: -14.000741958618164
    9. 'min' → logprob: -15.125741958618164
    10. '_idx' → logprob: -15.125741958618164

Token 651: '_current' (ID: 23981)
  Prédit: '_current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -0.00935404747724533
    2. 'current' → logprob: -4.759354114532471
    3. '_neighbor' → logprob: -7.384354114532471
    4. '_graph' → logprob: -9.384353637695312
    5. 'neighbor' → logprob: -10.884353637695312
    6. '_neighbors' → logprob: -12.009353637695312
    7. '(current' → logprob: -14.009353637695312
    8. '$current' → logprob: -14.009353637695312
    9. 'graph' → logprob: -14.259353637695312
    10. 'Current' → logprob: -14.384353637695312

Token 652: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -7.457669562427327e-05
    2. '_current' → logprob: -9.75007438659668
    3. 'node' → logprob: -12.12507438659668
    4. '_graph' → logprob: -12.62507438659668
    5. '_nodes' → logprob: -12.75007438659668
    6. '_neighbor' → logprob: -13.25007438659668
    7. 'current' → logprob: -14.12507438659668
    8. '_edge' → logprob: -14.25007438659668
    9. '_stack' → logprob: -14.87507438659668
    10. '[node' → logprob: -16.00007438659668

Token 653: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.707997428951785e-05
    2. ' ,' → logprob: -10.125077247619629
    3. ',
' → logprob: -10.250077247619629
    4. '[idx' → logprob: -14.750077247619629
    5. ',index' → logprob: -15.000077247619629
    6. '           ' → logprob: -15.250077247619629
    7. '   ' → logprob: -15.375077247619629
    8. 'idx' → logprob: -16.125076293945312
    9. ' idx' → logprob: -17.125076293945312
    10. '(idx' → logprob: -17.250076293945312

Token 654: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0007101670489646494
    2. ' idx' → logprob: -7.2507100105285645
    3. '           ' → logprob: -16.125709533691406
    4. '	idx' → logprob: -16.250709533691406
    5. '               ' → logprob: -17.500709533691406
    6. '(idx' → logprob: -17.875709533691406
    7. 'index' → logprob: -18.250709533691406
    8. '   ' → logprob: -18.750709533691406
    9. '[idx' → logprob: -18.875709533691406
    10. '
' → logprob: -19.000709533691406

Token 655: '_neighbor' (ID: 177120)
  Prédit: '_neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.02414039708673954
    2. 'neighbor' → logprob: -3.7741403579711914
    3. '_graph' → logprob: -7.149140357971191
    4. '_current' → logprob: -9.649140357971191
    5. '_neighbors' → logprob: -11.024140357971191
    6. '
' → logprob: -11.774140357971191
    7. 'graph' → logprob: -12.149140357971191
    8. ' neighbor' → logprob: -12.899140357971191
    9. 'current' → logprob: -13.024140357971191
    10. '_node' → logprob: -13.024140357971191

Token 656: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000399091251892969
    2. ' ,' → logprob: -7.875399112701416
    3. '))' → logprob: -11.000398635864258
    4. ',
' → logprob: -13.625398635864258
    5. ')' → logprob: -15.250398635864258
    6. ',index' → logprob: -15.750398635864258
    7. '))
' → logprob: -15.875398635864258
    8. '[idx' → logprob: -16.375398635864258
    9. 'idx' → logprob: -16.875398635864258
    10. ' ))' → logprob: -17.000398635864258

Token 657: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.06196959316730499
    2. ' idx' → logprob: -2.811969518661499
    3. '(idx' → logprob: -14.686969757080078
    4. ')' → logprob: -15.061969757080078
    5. '	idx' → logprob: -15.061969757080078
    6. '[idx' → logprob: -15.061969757080078
    7. '
' → logprob: -15.811969757080078
    8. ' ' → logprob: -16.061969757080078
    9. '   ' → logprob: -16.436969757080078
    10. '.idx' → logprob: -16.436969757080078

Token 658: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -1.0280383548888494e-06
    2. ' _' → logprob: -15.875000953674316
    3. ')_' → logprob: -15.875000953674316
    4. '_
' → logprob: -15.875000953674316
    5. '_' → logprob: -16.000001907348633
    6. '
' → logprob: -16.125001907348633
    7. 'graph' → logprob: -16.250001907348633
    8. '```' → logprob: -16.250001907348633
    9. '_GRAPH' → logprob: -17.625001907348633
    10. '_grid' → logprob: -17.750001907348633

Token 659: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -4.7994282795116305e-05
    2. ')_' → logprob: -10.75004768371582
    3. '_edges' → logprob: -11.75004768371582
    4. '_' → logprob: -11.87504768371582
    5. ')' → logprob: -12.75004768371582
    6. 'edge' → logprob: -13.00004768371582
    7. '_)' → logprob: -13.50004768371582
    8. '_EDGE' → logprob: -13.50004768371582
    9. '```' → logprob: -14.37504768371582
    10. '_
' → logprob: -14.50004768371582

Token 660: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005294238682836294
    2. '))' → logprob: -5.255294322967529
    3. ')
' → logprob: -9.880293846130371
    4. ' )' → logprob: -11.880293846130371
    5. '))
' → logprob: -13.880293846130371
    6. ')))' → logprob: -14.255293846130371
    7. ')}' → logprob: -15.630293846130371
    8. '   ' → logprob: -15.880293846130371
    9. ')]' → logprob: -16.005294799804688
    10. ')`' → logprob: -16.255294799804688

Token 661: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4514409899711609
    2. '   ' → logprob: -1.0764410495758057
    3. 'if' → logprob: -5.076440811157227
    4. '<|end|>' → logprob: -5.201440811157227
    5. '```' → logprob: -5.951440811157227
    6. 'for' → logprob: -6.201440811157227
    7. ' if' → logprob: -6.576440811157227
    8. '       ' → logprob: -6.826440811157227
    9. ']' → logprob: -7.076440811157227
    10. ',' → logprob: -7.951440811157227

Token 662: ' if' (ID: 538)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5978834629058838
    2. 'if' (adapté à ' if') → logprob: -0.9728834629058838
    3. 'for' → logprob: -2.972883462905884
    4. '
' → logprob: -5.472883224487305
    5. 'var' → logprob: -5.972883224487305
    6. '#' → logprob: -5.972883224487305
    7. '<|end|>' → logprob: -6.097883224487305
    8. 'sum' → logprob: -6.347883224487305
    9. 'total' → logprob: -6.472883224487305
    10. '```' → logprob: -6.972883224487305

Token 663: ' not' (ID: 625)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3893226385116577
    2. ' list' → logprob: -2.1393227577209473
    3. 'len' → logprob: -2.3893227577209473
    4. ' not' → logprob: -2.8893227577209473
    5. ' len' → logprob: -3.3893227577209473
    6. 'not' → logprob: -4.264322757720947
    7. 'all' → logprob: -5.639322757720947
    8. ' all' → logprob: -6.264322757720947
    9. 'var' → logprob: -6.889322757720947
    10. 'any' → logprob: -6.889322757720947

Token 664: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.010565018281340599
    2. ' list' → logprob: -4.635564804077148
    3. 'len' → logprob: -8.135564804077148
    4. 'var' → logprob: -8.260564804077148
    5. 'all' → logprob: -9.385564804077148
    6. '(list' → logprob: -9.635564804077148
    7. 'any' → logprob: -10.885564804077148
    8. ' len' → logprob: -11.010564804077148
    9. 'not' → logprob: -11.635564804077148
    10. '
' → logprob: -11.885564804077148

Token 665: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.001612696796655655
    2. '_node' → logprob: -6.751612663269043
    3. 'stack' → logprob: -8.001612663269043
    4. 'all' → logprob: -10.376612663269043
    5. '_all' → logprob: -10.501612663269043
    6. '_tree' → logprob: -11.001612663269043
    7. 'list' → logprob: -11.376612663269043
    8. 'len' → logprob: -11.626612663269043
    9. 'node' → logprob: -12.501612663269043
    10. '_list' → logprob: -13.001612663269043

Token 666: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -6.921253225300461e-05
    2. 'edges' → logprob: -10.000069618225098
    3. '_stack' → logprob: -10.750069618225098
    4. '_' → logprob: -13.500069618225098
    5. 'stack' → logprob: -14.750069618225098
    6. '```' → logprob: -16.37506866455078
    7. '_nodes' → logprob: -16.50006866455078
    8. '
' → logprob: -16.75006866455078
    9. ' edges' → logprob: -16.75006866455078
    10. '   ' → logprob: -16.87506866455078

Token 667: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1015070378780365
    2. ':
' → logprob: -2.3515069484710693
    3. ':return' → logprob: -7.601507186889648
    4. '   ' → logprob: -7.726507186889648
    5. '==' → logprob: -9.101507186889648
    6. 'continue' → logprob: -9.476507186889648
    7. ' or' → logprob: -9.601507186889648
    8. '.append' → logprob: -10.351507186889648
    9. 'or' → logprob: -10.726507186889648
    10. '[' → logprob: -11.351507186889648

Token 668: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.04052938148379326
    2. ' list' → logprob: -3.790529489517212
    3. 'not' → logprob: -4.790529251098633
    4. ' not' → logprob: -5.665529251098633
    5. 'var' → logprob: -5.665529251098633
    6. 'len' → logprob: -7.540529251098633
    7. 'idx' → logprob: -7.665529251098633
    8. '0' → logprob: -7.915529251098633
    9. ' var' → logprob: -9.165529251098633
    10. '(list' → logprob: -9.415529251098633

Token 669: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -8.578184497309849e-05
    2. '_stack' → logprob: -10.250085830688477
    3. '_val' → logprob: -10.875085830688477
    4. 'node' → logprob: -11.250085830688477
    5. '_pair' → logprob: -11.625085830688477
    6. '_adj' → logprob: -12.750085830688477
    7. '_num' → logprob: -13.625085830688477
    8. '_all' → logprob: -13.750085830688477
    9. '_' → logprob: -14.125085830688477
    10. '
' → logprob: -14.500085830688477

Token 670: '_par' (ID: 31329)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005643534241244197
    2. '_edges' → logprob: -8.125564575195312
    3. '_stack' → logprob: -9.125564575195312
    4. '_par' → logprob: -9.375564575195312
    5. 'visited' → logprob: -9.875564575195312
    6. '_root' → logprob: -12.250564575195312
    7. '_visible' → logprob: -12.875564575195312
    8. '_vis' → logprob: -13.500564575195312
    9. '_indices' → logprob: -13.500564575195312
    10. '```' → logprob: -13.500564575195312

Token 671: 'ity' (ID: 536)
  Prédit: 'arity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arity' → logprob: -0.5240231156349182
    2. 'ity' → logprob: -0.8990231156349182
    3. 'ty' → logprob: -7.399023056030273
    4. 'ar' → logprob: -8.399023056030273
    5. 'irty' → logprob: -11.524023056030273
    6. 'node' → logprob: -11.774023056030273
    7. 'ality' → logprob: -11.899023056030273
    8. 'r' → logprob: -12.149023056030273
    9. 'try' → logprob: -12.524023056030273
    10. '_node' → logprob: -12.524023056030273

Token 672: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0005604196921922266
    2. '[list' → logprob: -7.500560283660889
    3. 'idx' → logprob: -13.625560760498047
    4. '[' → logprob: -13.875560760498047
    5. '```' → logprob: -14.125560760498047
    6. '[len' → logprob: -14.500560760498047
    7. '(idx' → logprob: -14.750560760498047
    8. '[var' → logprob: -14.875560760498047
    9. ')' → logprob: -14.875560760498047
    10. '   ' → logprob: -15.000560760498047

Token 673: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.09431067109107971
    2. '_root' → logprob: -2.594310760498047
    3. '_current' → logprob: -4.219310760498047
    4. 'idx' → logprob: -8.469310760498047
    5. '_stack' → logprob: -8.594310760498047
    6. '_idx' → logprob: -8.969310760498047
    7. 'tree' → logprob: -10.594310760498047
    8. '[idx' → logprob: -10.969310760498047
    9. 'root' → logprob: -12.094310760498047
    10. '```' → logprob: -12.344310760498047

Token 674: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.0010893779108300805
    2. '_' → logprob: -7.626089572906494
    3. '_par' → logprob: -7.626089572906494
    4. 'root' → logprob: -9.501089096069336
    5. '_current' → logprob: -11.501089096069336
    6. '_stack' → logprob: -12.126089096069336
    7. '_idx' → logprob: -12.126089096069336
    8. 'par' → logprob: -12.126089096069336
    9. '[root' → logprob: -12.751089096069336
    10. ')' → logprob: -14.001089096069336

Token 675: ']' (ID: 60)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.20658926665782928
    2. '==' → logprob: -1.8315892219543457
    3. ']==' → logprob: -4.331589221954346
    4. ' ==' → logprob: -5.331589221954346
    5. ']' → logprob: -5.456589221954346
    6. ':' → logprob: -6.831589221954346
    7. '[' → logprob: -7.081589221954346
    8. ')==' → logprob: -7.456589221954346
    9. ']:' → logprob: -7.706589221954346
    10. '):' → logprob: -8.206589698791504

Token 676: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11479395627975464
    2. ' ==' → logprob: -2.4897940158843994
    3. ':' → logprob: -3.8647940158843994
    4. ':
' → logprob: -6.61479377746582
    5. '<|end|>' → logprob: -6.86479377746582
    6. '!=' → logprob: -6.98979377746582
    7. '[' → logprob: -7.36479377746582
    8. ' !=' → logprob: -7.98979377746582
    9. ']==' → logprob: -9.98979377746582
    10. ')==' → logprob: -10.36479377746582

Token 677: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048685815185308456
    2. '0' → logprob: -3.1736857891082764
    3. ' ' → logprob: -5.1736860275268555
    4. '<|end|>' → logprob: -12.798686027526855
    5. '   ' → logprob: -14.298686027526855
    6. '  ' → logprob: -14.486186027526855
    7. '```' → logprob: -14.611186027526855
    8. '[' → logprob: -15.111186027526855
    9. '...' → logprob: -15.173686027526855
    10. '۱' → logprob: -15.423686027526855

Token 678: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03384669870138168
    2. '0' → logprob: -3.408846616744995
    3. ' ' → logprob: -8.533846855163574
    4. '```' → logprob: -13.846346855163574
    5. '[' → logprob: -14.533846855163574
    6. '<|end|>' → logprob: -14.846346855163574
    7. '   ' → logprob: -15.221346855163574
    8. '...' → logprob: -15.408846855163574
    9. '-' → logprob: -15.783846855163574
    10. '  ' → logprob: -15.783846855163574

Token 679: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.400048166513443
    2. ':' → logprob: -1.4000481367111206
    3. '   ' → logprob: -2.52504825592041
    4. '       ' → logprob: -6.65004825592041
    5. ' or' → logprob: -7.15004825592041
    6. ':return' → logprob: -7.52504825592041
    7. ' and' → logprob: -8.02504825592041
    8. '==' → logprob: -10.65004825592041
    9. 'and' → logprob: -10.77504825592041
    10. '):
' → logprob: -11.02504825592041

Token 680: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29481086134910583
    2. '   ' → logprob: -1.5448108911514282
    3. 'print' → logprob: -3.6698107719421387
    4. '```' → logprob: -4.669810771942139
    5. ' print' → logprob: -5.544810771942139
    6. ':
' → logprob: -6.919810771942139
    7. 'raise' → logprob: -7.169810771942139
    8. '#' → logprob: -7.794810771942139
    9. '``' → logprob: -8.419811248779297
    10. ' raise' → logprob: -8.544811248779297

Token 681: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0007514976896345615
    2. '   ' → logprob: -7.250751495361328
    3. ' print' → logprob: -11.500751495361328
    4. '       ' → logprob: -12.125751495361328
    5. 'list' → logprob: -12.125751495361328
    6. '           ' → logprob: -12.375751495361328
    7. '```' → logprob: -12.625751495361328
    8. 'raise' → logprob: -13.125751495361328
    9. '
' → logprob: -13.250751495361328
    10. 'pass' → logprob: -13.250751495361328

Token 682: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05518240109086037
    2. '(-' → logprob: -2.930182456970215
    3. '("' → logprob: -8.680182456970215
    4. '0' → logprob: -10.180182456970215
    5. '("-' → logprob: -10.305182456970215
    6. '(' → logprob: -10.555182456970215
    7. '-im' → logprob: -11.805182456970215
    8. '"-' → logprob: -12.430182456970215
    9. 'im' → logprob: -12.555182456970215
    10. '"' → logprob: -12.555182456970215

Token 683: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.500005722045898
    3. '2' → logprob: -14.250005722045898
    4. '
' → logprob: -14.375005722045898
    5. '   ' → logprob: -15.375005722045898
    6. '0' → logprob: -16.2500057220459
    7. '`' → logprob: -16.5625057220459
    8. '```' → logprob: -16.6875057220459
    9. '{' → logprob: -16.7500057220459
    10. '3' → logprob: -17.0000057220459

Token 684: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029810892418026924
    2. ')' → logprob: -3.529810905456543
    3. ')return' → logprob: -10.654810905456543
    4. '   ' → logprob: -11.279810905456543
    5. ')
' → logprob: -11.529810905456543
    6. '       ' → logprob: -11.904810905456543
    7. ' )
' → logprob: -12.279810905456543
    8. ')`
' → logprob: -14.154810905456543
    9. ');' → logprob: -14.279810905456543
    10. ' )' → logprob: -14.904810905456543

Token 685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004134799353778362
    2. '   ' → logprob: -5.629134654998779
    3. '```' → logprob: -8.254135131835938
    4. '<|end|>' → logprob: -9.629135131835938
    5. 'continue' → logprob: -9.754135131835938
    6. '           ' → logprob: -10.004135131835938
    7. ')' → logprob: -10.129135131835938
    8. 'else' → logprob: -10.379135131835938
    9. 'import' → logprob: -11.254135131835938
    10. '[' → logprob: -12.504135131835938

Token 686: ' exit' (ID: 10654)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02859453856945038
    2. '
' → logprob: -4.278594493865967
    3. 'continue' → logprob: -5.028594493865967
    4. 'exit' (adapté à ' exit') → logprob: -5.903594493865967
    5. '           ' → logprob: -6.778594493865967
    6. '   ' → logprob: -7.153594493865967
    7. '```' → logprob: -7.153594493865967
    8. ' continue' → logprob: -7.653594493865967
    9. '               ' → logprob: -8.028594970703125
    10. 'return' → logprob: -8.153594970703125

Token 687: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.38934725522994995
    2. '(' → logprob: -1.1393473148345947
    3. '()
' → logprob: -6.139347076416016
    4. '0' → logprob: -8.139347076416016
    5. '()\' → logprob: -11.014347076416016
    6. '()

' → logprob: -12.764347076416016
    7. '()`' → logprob: -13.014347076416016
    8. '())' → logprob: -14.014347076416016
    9. ' ()' → logprob: -14.264347076416016
    10. '(
' → logprob: -14.389347076416016

Token 688: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1544584184885025
    2. '```' → logprob: -2.779458522796631
    3. 'list' → logprob: -3.654458522796631
    4. 'if' → logprob: -3.904458522796631
    5. 'count' → logprob: -4.154458522796631
    6. 'total' → logprob: -5.529458522796631
    7. 'sum' → logprob: -6.029458522796631
    8. 'remaining' → logprob: -6.404458522796631
    9. ')' → logprob: -6.529458522796631
    10. 'valid' → logprob: -7.029458522796631

Token 689: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.48747777938842773
    2. 'for' → logprob: -1.3624777793884277
    3. 'var' → logprob: -2.9874777793884277
    4. 'sum' → logprob: -3.4874777793884277
    5. 'if' → logprob: -3.6124777793884277
    6. '   ' → logprob: -4.862477779388428
    7. 'count' → logprob: -5.612477779388428
    8. 'total' → logprob: -6.112477779388428
    9. 'all' → logprob: -6.362477779388428
    10. 'val' → logprob: -6.737477779388428

Token 690: '_all' (ID: 13305)
  Prédit: '_stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.029791690409183502
    2. '_all' → logprob: -3.5297915935516357
    3. '_node' → logprob: -10.654791831970215
    4. 'all' → logprob: -12.154791831970215
    5. '_tree' → logprob: -12.279791831970215
    6. 'for' → logprob: -13.279791831970215
    7. '_for' → logprob: -14.029791831970215
    8. '```' → logprob: -14.279791831970215
    9. '_' → logprob: -14.654791831970215
    10. 'All' → logprob: -14.904791831970215

Token 691: '_t' (ID: 838)
  Prédit: '_stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.0014920076355338097
    2. '_t' → logprob: -7.001492023468018
    3. '_tree' → logprob: -7.501492023468018
    4. '_all' → logprob: -11.37649154663086
    5. '```' → logprob: -11.62649154663086
    6. '_edges' → logprob: -13.00149154663086
    7. 'stack' → logprob: -13.87649154663086
    8. 'all' → logprob: -13.87649154663086
    9. ')_' → logprob: -14.50149154663086
    10. '
' → logprob: -15.00149154663086

Token 692: 'rees' (ID: 12339)
  Prédit: 'rees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rees' → logprob: -0.018909987062215805
    2. 'ree' → logprob: -4.018909931182861
    3. 'trees' → logprob: -7.268909931182861
    4. '_stack' → logprob: -11.14391040802002
    5. 're' → logprob: -11.51891040802002
    6. 'ees' → logprob: -11.64391040802002
    7. '```' → logprob: -12.39391040802002
    8. '_' → logprob: -12.76891040802002
    9. '[' → logprob: -12.89391040802002
    10. 'stack' → logprob: -13.01891040802002

Token 693: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0015017713885754347
    2. '.append' → logprob: -6.751501560211182
    3. '.extend' → logprob: -8.12650203704834
    4. '+=' → logprob: -11.62650203704834
    5. 'edges' → logprob: -12.12650203704834
    6. '=_' → logprob: -12.37650203704834
    7. '=' → logprob: -12.50150203704834
    8. 'append' → logprob: -13.00150203704834
    9. '```' → logprob: -13.12650203704834
    10. '_.' → logprob: -13.62650203704834

Token 694: '.append' (ID: 3709)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.0837368294596672
    2. '.append' → logprob: -2.5837368965148926
    3. '.' → logprob: -5.833736896514893
    4. '+=' → logprob: -6.333736896514893
    5. ' +=' → logprob: -8.958736419677734
    6. ' .' → logprob: -13.958736419677734
    7. '=' → logprob: -14.083736419677734
    8. ',' → logprob: -14.208736419677734
    9. '.=' → logprob: -14.333736419677734
    10. 'append' → logprob: -15.083736419677734

Token 695: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -1.6240566083070007e-06
    2. 'list' → logprob: -14.000001907348633
    3. '((' → logprob: -15.125001907348633
    4. '(' → logprob: -15.375001907348633
    5. '(tuple' → logprob: -15.625001907348633
    6. '(len' → logprob: -16.625001907348633
    7. '(lst' → logprob: -17.500001907348633
    8. ' (' → logprob: -18.500001907348633
    9. '(
' → logprob: -18.625001907348633
    10. '(sorted' → logprob: -18.625001907348633

Token 696: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -1.7432603272027336e-06
    2. 'stack' → logprob: -14.625001907348633
    3. '_tree' → logprob: -15.125001907348633
    4. '(_' → logprob: -15.250001907348633
    5. '(' → logprob: -15.500001907348633
    6. '((' → logprob: -16.125001907348633
    7. ')_' → logprob: -16.250001907348633
    8. '[(' → logprob: -16.500001907348633
    9. '_' → logprob: -16.750001907348633
    10. ')' → logprob: -16.750001907348633

Token 697: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -2.2200749754119897e-06
    2. 'edges' → logprob: -13.625001907348633
    3. 's' → logprob: -15.375001907348633
    4. '```' → logprob: -15.375001907348633
    5. ')' → logprob: -15.750001907348633
    6. ')_' → logprob: -16.000001907348633
    7. 'Edges' → logprob: -17.125001907348633
    8. '_ed' → logprob: -17.500001907348633
    9. '   ' → logprob: -17.625001907348633
    10. '_' → logprob: -18.125001907348633

Token 698: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1637164789135568e-05
    2. ')
' → logprob: -11.750011444091797
    3. '   ' → logprob: -13.000011444091797
    4. ' )' → logprob: -13.625011444091797
    5. ']' → logprob: -16.375011444091797
    6. '))' → logprob: -16.625011444091797
    7. '[::-' → logprob: -17.750011444091797
    8. '
' → logprob: -18.000011444091797
    9. '<|end|>' → logprob: -18.000011444091797
    10. '),' → logprob: -18.125011444091797

Token 699: 'list' (ID: 2641)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.9535252451896667
    2. 'list' → logprob: -1.3285253047943115
    3. 'sum' → logprob: -2.2035253047943115
    4. 'count' → logprob: -2.3285253047943115
    5. 'total' → logprob: -3.0785253047943115
    6. 'for' → logprob: -3.4535253047943115
    7. 'answer' → logprob: -3.7035253047943115
    8. 'result' → logprob: -4.328525066375732
    9. 'val' → logprob: -5.328525066375732
    10. '#' → logprob: -5.828525066375732

Token 700: '_adj' (ID: 117293)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.2280743569135666
    2. '_all' → logprob: -1.603074312210083
    3. '_nodes' → logprob: -7.728074550628662
    4. '_val' → logprob: -7.978074550628662
    5. '_pair' → logprob: -8.103074073791504
    6. '_' → logprob: -8.353074073791504
    7. '_stack' → logprob: -8.478074073791504
    8. '```' → logprob: -8.478074073791504
    9. '<|end|>' → logprob: -9.353074073791504
    10. '_user' → logprob: -9.478074073791504

Token 701: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.004663899540901184
    2. 'acency' → logprob: -5.629663944244385
    3. 'ac' → logprob: -8.129663467407227
    4. '```' → logprob: -8.754663467407227
    5. '_node' → logprob: -9.504663467407227
    6. '_list' → logprob: -9.629663467407227
    7. '_cent' → logprob: -9.754663467407227
    8. '_' → logprob: -10.379663467407227
    9. 'cent' → logprob: -10.629663467407227
    10. '_connected' → logprob: -10.754663467407227

Token 702: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.022426463663578033
    2. '_nodes' → logprob: -4.522426605224609
    3. '_list' → logprob: -6.272426605224609
    4. '_edges' → logprob: -6.397426605224609
    5. '_matrix' → logprob: -6.647426605224609
    6. '_set' → logprob: -6.772426605224609
    7. 'graph' → logprob: -7.147426605224609
    8. '_par' → logprob: -7.397426605224609
    9. '_sets' → logprob: -7.647426605224609
    10. '_stack' → logprob: -8.02242660522461

Token 703: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 704: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0024763736873865128
    2. ' [[]' → logprob: -6.752476215362549
    3. '[]' → logprob: -7.127476215362549
    4. '[[' → logprob: -7.627476215362549
    5. 'None' → logprob: -12.127476692199707
    6. '[list' → logprob: -12.877476692199707
    7. '[...]' → logprob: -13.377476692199707
    8. 'default' → logprob: -13.752476692199707
    9. '[:]' → logprob: -13.877476692199707
    10. '[]
' → logprob: -13.877476692199707

Token 705: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18394848704338074
    2. 'var' → logprob: -2.433948516845703
    3. '[var' → logprob: -3.308948516845703
    4. ' for' → logprob: -3.808948516845703
    5. '(var' → logprob: -4.183948516845703
    6. ')' → logprob: -5.183948516845703
    7. ')var' → logprob: -7.683948516845703
    8. ']' → logprob: -9.058948516845703
    9. ' var' → logprob: -9.308948516845703
    10. ',var' → logprob: -10.558948516845703

Token 706: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002161921700462699
    2. ' in' → logprob: -7.127161979675293
    3. 'var' → logprob: -7.627161979675293
    4. ' range' → logprob: -7.752161979675293
    5. '_var' → logprob: -8.502161979675293
    6. 'range' → logprob: -9.127161979675293
    7. 'in' → logprob: -9.752161979675293
    8. '_range' → logprob: -9.877161979675293
    9. ' var' → logprob: -11.627161979675293
    10. ' _' → logprob: -11.877161979675293

Token 707: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6298499703407288
    2. '_' → logprob: -1.629849910736084
    3. 'var' → logprob: -1.629849910736084
    4. ' range' → logprob: -3.504849910736084
    5. 'range' → logprob: -3.754849910736084
    6. 'in' → logprob: -4.004849910736084
    7. ' var' → logprob: -6.004849910736084
    8. ' _' → logprob: -7.129849910736084
    9. 'i' → logprob: -8.879850387573242
    10. 'x' → logprob: -9.879850387573242

Token 708: ' range' (ID: 3352)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.0027297406923025846
    2. 'range' → logprob: -6.002729892730713
    3. ' var' → logprob: -8.627729415893555
    4. ' range' → logprob: -9.752729415893555
    5. '(var' → logprob: -11.377729415893555
    6. '_' → logprob: -13.002729415893555
    7. '_var' → logprob: -13.002729415893555
    8. 'len' → logprob: -14.752729415893555
    9. '[var' → logprob: -14.877729415893555
    10. '_range' → logprob: -16.877729415893555

Token 709: '(var' (ID: 15816)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -1.9981420336989686e-05
    2. ' var' → logprob: -11.125020027160645
    3. '(var' → logprob: -12.375020027160645
    4. 'len' → logprob: -13.875020027160645
    5. '[var' → logprob: -18.125019073486328
    6. ')var' → logprob: -18.250019073486328
    7. '0' → logprob: -19.625019073486328
    8. '   ' → logprob: -19.750019073486328
    9. '
' → logprob: -19.875019073486328
    10. '(' → logprob: -20.250019073486328

Token 710: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.000491672137286514
    2. 'nodes' → logprob: -7.625491619110107
    3. '
' → logprob: -13.875492095947266
    4. 'var' → logprob: -14.000492095947266
    5. 'val' → logprob: -14.375492095947266
    6. 'Nodes' → logprob: -15.500492095947266
    7. '_node' → logprob: -15.500492095947266
    8. '```' → logprob: -16.000492095947266
    9. '_adj' → logprob: -16.000492095947266
    10. '0' → logprob: -16.125492095947266

Token 711: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.000399925687815994
    2. 'total' → logprob: -7.875400066375732
    3. '_TOTAL' → logprob: -11.875399589538574
    4. 'Total' → logprob: -12.500399589538574
    5. '$total' → logprob: -13.250399589538574
    6. '
' → logprob: -13.875399589538574
    7. '	total' → logprob: -14.250399589538574
    8. ']_' → logprob: -14.375399589538574
    9. ')_' → logprob: -14.750399589538574
    10. 's' → logprob: -14.750399589538574

Token 712: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.2018042951822281
    2. ']' → logprob: -1.701804280281067
    3. ']
' → logprob: -8.076804161071777
    4. ']

' → logprob: -9.451804161071777
    5. ' ]
' → logprob: -14.576804161071777
    6. ')]' → logprob: -14.951804161071777
    7. ']

' → logprob: -15.451804161071777
    8. '()]
' → logprob: -15.826804161071777
    9. ')]
' → logprob: -15.951804161071777
    10. ' ]' → logprob: -16.076805114746094

Token 713: 'list' (ID: 2641)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008663260377943516
    2. 'list' → logprob: -4.883663177490234
    3. 'var' → logprob: -8.258663177490234
    4. 'edge' → logprob: -8.258663177490234
    5. 'stack' → logprob: -8.883663177490234
    6. 'edges' → logprob: -9.133663177490234
    7. 'sum' → logprob: -10.258663177490234
    8. 'idx' → logprob: -10.258663177490234
    9. 'count' → logprob: -10.383663177490234
    10. 'par' → logprob: -10.883663177490234

Token 714: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.8226719498634338
    2. '_stack' → logprob: -0.8226719498634338
    3. '_edge' → logprob: -3.322671890258789
    4. '_all' → logprob: -3.822671890258789
    5. '_par' → logprob: -3.947671890258789
    6. '_queue' → logprob: -4.572671890258789
    7. '_pair' → logprob: -4.822671890258789
    8. '_degree' → logprob: -5.072671890258789
    9. '_val' → logprob: -5.322671890258789
    10. '_sum' → logprob: -5.572671890258789

Token 715: '_de' (ID: 5047)
  Prédit: '_par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -0.04158588498830795
    2. '_' → logprob: -4.416585922241211
    3. '_degree' → logprob: -4.416585922241211
    4. '_val' → logprob: -5.541585922241211
    5. '_parent' → logprob: -5.666585922241211
    6. '_de' → logprob: -6.166585922241211
    7. '_stack' → logprob: -6.166585922241211
    8. '_queue' → logprob: -6.791585922241211
    9. '_edge' → logprob: -7.416585922241211
    10. '_depth' → logprob: -7.416585922241211

Token 716: 'grees' (ID: 86997)
  Prédit: 'gree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gree' → logprob: -0.12130936235189438
    2. 'grees' → logprob: -2.246309280395508
    3. 'g' → logprob: -4.996309280395508
    4. 'que' → logprob: -7.371309280395508
    5. 'pth' → logprob: -7.746309280395508
    6. 'egree' → logprob: -7.996309280395508
    7. 'queue' → logprob: -9.496309280395508
    8. 'queued' → logprob: -9.871309280395508
    9. 'gr' → logprob: -10.371309280395508
    10. 'gre' → logprob: -10.496309280395508

Token 717: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693829834461212
    2. ' =' → logprob: -2.1269383430480957
    3. '[:]' → logprob: -12.626937866210938
    4. '=[' → logprob: -12.876937866210938
    5. '[' → logprob: -13.251937866210938
    6. '=[]' → logprob: -13.501937866210938
    7. ']' → logprob: -15.001937866210938
    8. ')' → logprob: -15.376937866210938
    9. ' =[' → logprob: -15.626937866210938
    10. ' ' → logprob: -16.001937866210938

Token 718: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07889232039451599
    2. ' [' → logprob: -2.578892230987549
    3. '[var' → logprob: -14.328892707824707
    4. '   ' → logprob: -14.828892707824707
    5. '[val' → logprob: -14.828892707824707
    6. '[len' → logprob: -14.953892707824707
    7. '[list' → logprob: -15.203892707824707
    8. '[node' → logprob: -15.453892707824707
    9. '0' → logprob: -15.578892707824707
    10. '[i' → logprob: -16.70389175415039

Token 719: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015550498210359365
    2. ' ' → logprob: -8.875155448913574
    3. 'len' → logprob: -11.250155448913574
    4. '1' → logprob: -14.875155448913574
    5. '(' → logprob: -14.875155448913574
    6. ' len' → logprob: -15.312655448913574
    7. 'var' → logprob: -15.437655448913574
    8. '   ' → logprob: -15.625155448913574
    9. '[' → logprob: -15.750155448913574
    10. 'idx' → logprob: -15.750155448913574

Token 720: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006956780795007944
    2. ']*' → logprob: -5.756956577301025
    3. ' for' → logprob: -5.756956577301025
    4. 'for' → logprob: -7.631956577301025
    5. '*' → logprob: -9.756957054138184
    6. ' *' → logprob: -10.256957054138184
    7. ' ]' → logprob: -11.256957054138184
    8. '   ' → logprob: -12.506957054138184
    9. '+' → logprob: -12.631957054138184
    10. ' ' → logprob: -12.756957054138184

Token 721: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39084890484809875
    2. ' =' → logprob: -1.7658488750457764
    3. '=' → logprob: -2.2658488750457764
    4. '=[' → logprob: -4.3908491134643555
    5. ' for' → logprob: -4.8908491134643555
    6. 'for' → logprob: -4.8908491134643555
    7. '<|end|>' → logprob: -5.1408491134643555
    8. '0' → logprob: -5.3908491134643555
    9. '[:]' → logprob: -6.0158491134643555
    10. ')' → logprob: -6.1408491134643555

Token 722: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -4.596781946020201e-05
    2. ' var' → logprob: -10.000045776367188
    3. '(var' → logprob: -14.875045776367188
    4. 'len' → logprob: -16.375045776367188
    5. '[var' → logprob: -19.750045776367188
    6. '```' → logprob: -20.375045776367188
    7. ')var' → logprob: -21.000045776367188
    8. '(' → logprob: -21.625045776367188
    9. ' (' → logprob: -22.500045776367188
    10. '   ' → logprob: -22.625045776367188

Token 723: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -4.961759259458631e-06
    2. '_total' → logprob: -13.125004768371582
    3. 'nodes' → logprob: -13.750004768371582
    4. '_tokens' → logprob: -14.250004768371582
    5. 'var' → logprob: -14.625004768371582
    6. '
' → logprob: -15.500004768371582
    7. 'total' → logprob: -15.750004768371582
    8. '```' → logprob: -16.3750057220459
    9. '_' → logprob: -17.0000057220459
    10. 'Nodes' → logprob: -17.5000057220459

Token 724: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -2.975612187583465e-05
    2. 'total' → logprob: -10.500029563903809
    3. '_TOTAL' → logprob: -13.750029563903809
    4. 'Total' → logprob: -14.375029563903809
    5. 'otal' → logprob: -15.125029563903809
    6. '$total' → logprob: -16.625030517578125
    7. '	total' → logprob: -16.875030517578125
    8. ' total' → logprob: -17.000030517578125
    9. 'TOTAL' → logprob: -17.125030517578125
    10. 'val' → logprob: -17.375030517578125

Token 725: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026855304837226868
    2. 'list' → logprob: -3.776855230331421
    3. 'stack' → logprob: -6.15185546875
    4. 'var' → logprob: -7.90185546875
    5. 'idx' → logprob: -8.15185546875
    6. '
' → logprob: -8.52685546875
    7. 'queue' → logprob: -9.15185546875
    8. ' for' → logprob: -9.40185546875
    9. 'degree' → logprob: -9.52685546875
    10. ')' → logprob: -9.90185546875

Token 726: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016229959146585315
    2. 'list' → logprob: -9.250162124633789
    3. 'idx' → logprob: -10.000162124633789
    4. ' for' → logprob: -11.500162124633789
    5. 'var' → logprob: -12.500162124633789
    6. 'stack' → logprob: -13.125162124633789
    7. 'edge' → logprob: -14.000162124633789
    8. 'edges' → logprob: -14.125162124633789
    9. 'current' → logprob: -14.500162124633789
    10. '```' → logprob: -14.625162124633789

Token 727: ' list' (ID: 1562)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.35227712988853455
    2. 'list' → logprob: -1.352277159690857
    3. 'edges' → logprob: -4.1022772789001465
    4. ' idx' → logprob: -4.8522772789001465
    5. '_,' → logprob: -5.4772772789001465
    6. 'tree' → logprob: -6.4772772789001465
    7. 'lst' → logprob: -6.4772772789001465
    8. ' list' → logprob: -6.9772772789001465
    9. '(idx' → logprob: -7.1022772789001465
    10. '(' → logprob: -7.2272772789001465

Token 728: '_edges' (ID: 68870)
  Prédit: '_stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.009391121566295624
    2. '_tree' → logprob: -5.8843913078308105
    3. '_edges' → logprob: -5.8843913078308105
    4. 'stack' → logprob: -6.5093913078308105
    5. '_node' → logprob: -6.7593913078308105
    6. '_edge' → logprob: -8.009390830993652
    7. '_current' → logprob: -9.009390830993652
    8. 'edges' → logprob: -9.134390830993652
    9. '_idx' → logprob: -9.509390830993652
    10. 'tree' → logprob: -9.634390830993652

Token 729: '_tree' (ID: 27118)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5470728874206543
    2. ' in' → logprob: -0.9220728874206543
    3. '_edges' → logprob: -4.422072887420654
    4. '_in' → logprob: -4.922072887420654
    5. '_current' → logprob: -6.422072887420654
    6. '_tree' → logprob: -6.547072887420654
    7. '_edge' → logprob: -8.547073364257812
    8. '_chunk' → logprob: -8.672073364257812
    9. '_stack' → logprob: -8.922073364257812
    10. 'tree' → logprob: -9.047073364257812

Token 730: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.350093275308609
    2. 'in' → logprob: -1.2250932455062866
    3. '_tree' → logprob: -7.100093364715576
    4. '_in' → logprob: -7.475093364715576
    5. 'tree' → logprob: -9.100092887878418
    6. '_' → logprob: -10.225092887878418
    7. '_edges' → logprob: -10.225092887878418
    8. '_edge' → logprob: -11.225092887878418
    9. '   ' → logprob: -11.725092887878418
    10. 'for' → logprob: -12.100092887878418

Token 731: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.004078401252627373
    2. ' list' → logprob: -5.504078388214111
    3. ' ' → logprob: -18.004077911376953
    4. '(list' → logprob: -18.379077911376953
    5. '   ' → logprob: -18.504077911376953
    6. '[list' → logprob: -18.629077911376953
    7. '
' → logprob: -19.129077911376953
    8. '	list' → logprob: -19.379077911376953
    9. 'l' → logprob: -19.629077911376953
    10. '[' → logprob: -19.879077911376953

Token 732: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.00017636561824474484
    2. 'all' → logprob: -9.250176429748535
    3. '_edges' → logprob: -9.500176429748535
    4. 'list' → logprob: -13.500176429748535
    5. '_t' → logprob: -13.875176429748535
    6. '_nodes' → logprob: -14.125176429748535
    7. 'All' → logprob: -15.000176429748535
    8. '_tree' → logprob: -15.125176429748535
    9. 'trees' → logprob: -15.125176429748535
    10. 'tree' → logprob: -15.375176429748535

Token 733: '_t' (ID: 838)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.00011009939044015482
    2. '_tree' → logprob: -9.625109672546387
    3. 'edges' → logprob: -11.125109672546387
    4. 'tree' → logprob: -12.125109672546387
    5. '_t' → logprob: -12.250109672546387
    6. '_edge' → logprob: -12.625109672546387
    7. 'for' → logprob: -13.000109672546387
    8. '_nodes' → logprob: -13.125109672546387
    9. '```' → logprob: -13.125109672546387
    10. '_' → logprob: -13.500109672546387

Token 734: 'rees' (ID: 12339)
  Prédit: 'rees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rees' → logprob: -0.05357740446925163
    2. 'edges' → logprob: -3.803577423095703
    3. '_edges' → logprob: -4.053577423095703
    4. 'ree' → logprob: -4.678577423095703
    5. 'trees' → logprob: -5.928577423095703
    6. 'all' → logprob: -9.053577423095703
    7. '_all' → logprob: -9.178577423095703
    8. 'for' → logprob: -9.803577423095703
    9. 'ees' → logprob: -10.303577423095703
    10. '```' → logprob: -10.428577423095703

Token 735: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.00027825910365208983
    2. 'edges' → logprob: -8.25027847290039
    3. 'for' → logprob: -11.37527847290039
    4. 's' → logprob: -12.87527847290039
    5. '   ' → logprob: -14.25027847290039
    6. '.edges' → logprob: -14.62527847290039
    7. '```' → logprob: -15.00027847290039
    8. ' edges' → logprob: -15.00027847290039
    9. 'Edges' → logprob: -15.25027847290039
    10. '_' → logprob: -15.75027847290039

Token 736: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5315207839012146
    2. ':
' → logprob: -0.9065207839012146
    3. '   ' → logprob: -5.156520843505859
    4. ' in' → logprob: -6.031520843505859
    5. 'in' → logprob: -9.28152084350586
    6. ',' → logprob: -10.15652084350586
    7. '):
' → logprob: -10.40652084350586
    8. ':
' → logprob: -12.03152084350586
    9. '       ' → logprob: -12.40652084350586
    10. '<|end|>' → logprob: -12.78152084350586

Token 737: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001975802006199956
    2. '       ' → logprob: -9.000197410583496
    3. 'for' → logprob: -10.250197410583496
    4. '```' → logprob: -10.375197410583496
    5. ' for' → logprob: -11.875197410583496
    6. ',' → logprob: -15.625197410583496
    7. ':
' → logprob: -15.750197410583496
    8. '``' → logprob: -16.000198364257812
    9. '   ' → logprob: -16.000198364257812
    10. ':' → logprob: -16.875198364257812

Token 738: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030476778745651245
    2. 'for' (adapté à ' for') → logprob: -3.6554768085479736
    3. ' for' → logprob: -5.5304765701293945
    4. '```' → logprob: -8.655476570129395
    5. '	for' → logprob: -11.155476570129395
    6. '``' → logprob: -11.905476570129395
    7. '       ' → logprob: -11.905476570129395
    8. '   ' → logprob: -13.280476570129395
    9. '    
' → logprob: -16.78047752380371
    10. 'var' → logprob: -17.90547752380371

Token 739: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.05715642124414444
    2. '_,' → logprob: -4.057156562805176
    3. '(idx' → logprob: -4.057156562805176
    4. 'var' → logprob: -4.682156562805176
    5. '(_,' → logprob: -5.057156562805176
    6. ' idx' → logprob: -5.682156562805176
    7. 'val' → logprob: -7.682156562805176
    8. '(var' → logprob: -7.807156562805176
    9. '_idx' → logprob: -8.682156562805176
    10. '(' → logprob: -8.807156562805176

Token 740: '_from' (ID: 12526)
  Prédit: '_current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_current' → logprob: -0.01160498894751072
    2. '_node' → logprob: -4.8866047859191895
    3. '_u' → logprob: -6.0116047859191895
    4. '_curr' → logprob: -8.261605262756348
    5. '_source' → logprob: -8.636605262756348
    6. 'current' → logprob: -8.761605262756348
    7. '_edge' → logprob: -8.886605262756348
    8. '_parent' → logprob: -9.261605262756348
    9. '_,' → logprob: -9.261605262756348
    10. 'u' → logprob: -9.636605262756348

Token 741: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39911046624183655
    2. '_node' → logprob: -1.6491104364395142
    3. '_from' → logprob: -2.1491105556488037
    4. '_,' → logprob: -4.774110317230225
    5. 'from' → logprob: -5.524110317230225
    6. '_edge' → logprob: -5.649110317230225
    7. ',node' → logprob: -6.524110317230225
    8. '_source' → logprob: -6.899110317230225
    9. '_vertex' → logprob: -7.399110317230225
    10. ',_' → logprob: -7.774110317230225

Token 742: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.06196993216872215
    2. ' idx' → logprob: -2.8119699954986572
    3. '	idx' → logprob: -13.811969757080078
    4. '_idx' → logprob: -14.436969757080078
    5. '   ' → logprob: -14.811969757080078
    6. '(idx' → logprob: -15.936969757080078
    7. '.idx' → logprob: -16.311969757080078
    8. '[idx' → logprob: -16.436969757080078
    9. ' ' → logprob: -17.436969757080078
    10. '  ' → logprob: -18.686969757080078

Token 743: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0005544631858356297
    2. 'to' → logprob: -7.50055456161499
    3. '_from' → logprob: -14.250554084777832
    4. '_neighbor' → logprob: -15.125554084777832
    5. 'To' → logprob: -15.500554084777832
    6. ' to' → logprob: -15.875554084777832
    7. '_node' → logprob: -16.50055503845215
    8. '_next' → logprob: -16.75055503845215
    9. '_for' → logprob: -16.75055503845215
    10. '_neighbors' → logprob: -17.25055503845215

Token 744: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026163244619965553
    2. ' ,' → logprob: -6.8776164054870605
    3. '_,' → logprob: -7.1276164054870605
    4. 'in' → logprob: -7.5026164054870605
    5. ' in' → logprob: -8.752615928649902
    6. ',_' → logprob: -10.252615928649902
    7. '   ' → logprob: -10.877615928649902
    8. ',in' → logprob: -12.877615928649902
    9. '```' → logprob: -12.877615928649902
    10. ' _,' → logprob: -13.502615928649902

Token 745: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5759469270706177
    2. ' idx' → logprob: -0.8259469270706177
    3. '	idx' → logprob: -12.950946807861328
    4. '_idx' → logprob: -13.200946807861328
    5. '   ' → logprob: -14.075946807861328
    6. ' ' → logprob: -14.950946807861328
    7. 'id' → logprob: -14.950946807861328
    8. 'var' → logprob: -15.075946807861328
    9. '(idx' → logprob: -15.075946807861328
    10. '    ' → logprob: -15.200946807861328

Token 746: '_edge' (ID: 43226)
  Prédit: '_graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.00016098834748845547
    2. 'graph' → logprob: -9.125161170959473
    3. '_edge' → logprob: -10.125161170959473
    4. 'from' → logprob: -12.375161170959473
    5. '_edges' → logprob: -12.750161170959473
    6. '_from' → logprob: -12.875161170959473
    7. '_tree' → logprob: -14.375161170959473
    8. '   ' → logprob: -14.750161170959473
    9. '_to' → logprob: -14.750161170959473
    10. '_' → logprob: -15.875161170959473

Token 747: '_id' (ID: 1537)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20417426526546478
    2. ',' → logprob: -1.954174280166626
    3. 'in' → logprob: -3.579174280166626
    4. '   ' → logprob: -4.954174041748047
    5. '_in' → logprob: -5.829174041748047
    6. '_edge' → logprob: -6.204174041748047
    7. '_' → logprob: -7.079174041748047
    8. ' ,' → logprob: -7.704174041748047
    9. '_edges' → logprob: -7.954174041748047
    10. ',_' → logprob: -8.329174041748047

Token 748: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02641315571963787
    2. 'in' → logprob: -3.6514132022857666
    3. '   ' → logprob: -9.651412963867188
    4. ',' → logprob: -10.901412963867188
    5. '	in' → logprob: -11.401412963867188
    6. '_in' → logprob: -11.526412963867188
    7. ' ' → logprob: -12.776412963867188
    8. ')' → logprob: -13.651412963867188
    9. '  ' → logprob: -13.776412963867188
    10. '    ' → logprob: -13.901412963867188

Token 749: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00026205103495158255
    2. ' list' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.375262260437012
    4. '(list' → logprob: -16.375261306762695
    5. ' ' → logprob: -17.625261306762695
    6. '[list' → logprob: -17.625261306762695
    7. '
' → logprob: -18.375261306762695
    8. '  ' → logprob: -18.625261306762695
    9. 'range' → logprob: -18.750261306762695
    10. '    ' → logprob: -18.875261306762695

Token 750: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -1.5570885807392187e-05
    2. 'edges' → logprob: -11.500015258789062
    3. '
' → logprob: -14.125015258789062
    4. '```' → logprob: -14.125015258789062
    5. 'from' → logprob: -14.375015258789062
    6. 'list' → logprob: -14.750015258789062
    7. 'range' → logprob: -14.750015258789062
    8. '_tree' → logprob: -15.000015258789062
    9. 'tree' → logprob: -15.250015258789062
    10. '   ' → logprob: -15.375015258789062

Token 751: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.003176402533426881
    2. '   ' → logprob: -6.378176212310791
    3. 'tree' → logprob: -7.878176212310791
    4. 'in' → logprob: -8.37817668914795
    5. 'from' → logprob: -8.50317668914795
    6. ':
' → logprob: -8.62817668914795
    7. ':' → logprob: -9.25317668914795
    8. ',' → logprob: -9.62817668914795
    9. '_from' → logprob: -9.87817668914795
    10. ' in' → logprob: -10.37817668914795

Token 752: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.28809285163879395
    2. ':' → logprob: -1.413092851638794
    3. '   ' → logprob: -5.163092613220215
    4. ':list' → logprob: -7.413092613220215
    5. '[' → logprob: -8.663092613220215
    6. '       ' → logprob: -8.788092613220215
    7. ',' → logprob: -8.913092613220215
    8. ' :
' → logprob: -10.663092613220215
    9. '):
' → logprob: -10.663092613220215
    10. ':
' → logprob: -11.038092613220215

Token 753: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11407099664211273
    2. '   ' → logprob: -2.2390708923339844
    3. '```' → logprob: -6.989070892333984
    4. ' list' → logprob: -9.114070892333984
    5. '        
' → logprob: -10.239070892333984
    6. 'list' → logprob: -10.364070892333984
    7. ',' → logprob: -10.364070892333984
    8. '    
' → logprob: -10.489070892333984
    9. ',list' → logprob: -11.114070892333984
    10. '[list' → logprob: -11.114070892333984

Token 754: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.2591245770454407
    2. '   ' → logprob: -1.509124517440796
    3. ' list' → logprob: -5.384124755859375
    4. '       ' → logprob: -6.009124755859375
    5. '```' → logprob: -9.634124755859375
    6. '	list' → logprob: -10.634124755859375
    7. '``' → logprob: -10.884124755859375
    8. ' ' → logprob: -12.259124755859375
    9. '  ' → logprob: -12.509124755859375
    10. '           ' → logprob: -12.634124755859375

Token 755: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.2014368176460266
    2. '_node' → logprob: -1.7014367580413818
    3. 'adj' → logprob: -11.076436996459961
    4. 'node' → logprob: -12.326436996459961
    5. '_' → logprob: -13.826436996459961
    6. '_edge' → logprob: -14.576436996459961
    7. '_ad' → logprob: -14.576436996459961
    8. '```' → logprob: -14.701436996459961
    9. '   ' → logprob: -15.576436996459961
    10. '`' → logprob: -15.576436996459961

Token 756: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.0033496515825390816
    2. '_adj' → logprob: -5.753349781036377
    3. 'acency' → logprob: -9.503349304199219
    4. 'ac' → logprob: -11.128349304199219
    5. '```' → logprob: -11.128349304199219
    6. '_cent' → logprob: -11.378349304199219
    7. 'adj' → logprob: -11.378349304199219
    8. '_node' → logprob: -11.753349304199219
    9. 'cent' → logprob: -12.128349304199219
    10. '_' → logprob: -12.378349304199219

Token 757: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -1.3425219549390022e-05
    2. 'graph' → logprob: -11.25001335144043
    3. '[' → logprob: -15.87501335144043
    4. '```' → logprob: -16.00001335144043
    5. '_GRAPH' → logprob: -16.87501335144043
    6. '	graph' → logprob: -17.62501335144043
    7. '
' → logprob: -18.12501335144043
    8. 'Graph' → logprob: -18.25001335144043
    9. 's' → logprob: -18.75001335144043
    10. '   ' → logprob: -18.75001335144043

Token 758: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -9.088346359931165e-07
    2. 'idx' → logprob: -14.500000953674316
    3. '[' → logprob: -15.750000953674316
    4. '   ' → logprob: -17.25
    5. '[id' → logprob: -17.875
    6. '```' → logprob: -18.25
    7. '[index' → logprob: -18.375
    8. '[var' → logprob: -18.5
    9. ' [' → logprob: -18.75
    10. ' idx' → logprob: -19.0

Token 759: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.0003942112671211362
    2. 'from' → logprob: -7.875394344329834
    3. '_to' → logprob: -11.875393867492676
    4. '_' → logprob: -13.000393867492676
    5. '_current' → logprob: -14.250393867492676
    6. '[from' → logprob: -14.500393867492676
    7. '```' → logprob: -14.875393867492676
    8. '__' → logprob: -14.875393867492676
    9. ' from' → logprob: -15.500393867492676
    10. '_FROM' → logprob: -15.625393867492676

Token 760: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.5894641280174255
    2. '.append' → logprob: -0.8394641280174255
    3. ').' → logprob: -4.83946418762207
    4. '[' → logprob: -5.83946418762207
    5. '.' → logprob: -6.21446418762207
    6. '   ' → logprob: -8.21446418762207
    7. '[].' → logprob: -9.08946418762207
    8. '       ' → logprob: -9.96446418762207
    9. '.app' → logprob: -10.08946418762207
    10. '```' → logprob: -10.33946418762207

Token 761: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.896309739408025e-07
    2. ' append' → logprob: -14.250000953674316
    3. '.append' → logprob: -16.125
    4. 'appen' → logprob: -18.375
    5. '	append' → logprob: -19.625
    6. '_append' → logprob: -20.625
    7. 'app' → logprob: -21.5
    8. '```' → logprob: -21.75
    9. 'Append' → logprob: -22.5
    10. '   ' → logprob: -23.375

Token 762: '((' (ID: 2054)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.04431002214550972
    2. '((' → logprob: -3.1693100929260254
    3. '(' → logprob: -7.169310092926025
    4. 'idx' → logprob: -8.169309616088867
    5. ' (' → logprob: -8.294309616088867
    6. '(id' → logprob: -13.169309616088867
    7. '(index' → logprob: -13.544309616088867
    8. ' idx' → logprob: -13.669309616088867
    9. '   ' → logprob: -14.169309616088867
    10. ' ((' → logprob: -14.794309616088867

Token 763: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0007102862582542002
    2. ' idx' → logprob: -7.250710487365723
    3. '(idx' → logprob: -15.125710487365723
    4. '	idx' → logprob: -17.250709533691406
    5. '   ' → logprob: -18.250709533691406
    6. '_idx' → logprob: -18.500709533691406
    7. '           ' → logprob: -18.500709533691406
    8. '       ' → logprob: -18.750709533691406
    9. 'index' → logprob: -20.125709533691406
    10. '[idx' → logprob: -20.375709533691406

Token 764: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.000340945553034544
    2. 'to' → logprob: -8.000341415405273
    3. 'To' → logprob: -13.125341415405273
    4. 'idx' → logprob: -13.750341415405273
    5. '_idx' → logprob: -14.375341415405273
    6. '_' → logprob: -14.875341415405273
    7. '
' → logprob: -16.000341415405273
    8. '_edge' → logprob: -16.125341415405273
    9. '_
' → logprob: -16.375341415405273
    10. '__' → logprob: -16.500341415405273

Token 765: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.229872087715194e-05
    2. ' ,' → logprob: -9.750061988830566
    3. ',
' → logprob: -12.625061988830566
    4. '<|end|>' → logprob: -15.125061988830566
    5. ',index' → logprob: -16.125062942504883
    6. '
' → logprob: -17.125062942504883
    7. '   ' → logprob: -17.375062942504883
    8. '       ' → logprob: -17.375062942504883
    9. '‌,' → logprob: -17.375062942504883
    10. ',list' → logprob: -17.625062942504883

Token 766: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.3868727385997772
    2. 'idx' → logprob: -1.1368727684020996
    3. '(idx' → logprob: -14.261872291564941
    4. '	idx' → logprob: -14.636872291564941
    5. '[idx' → logprob: -15.386872291564941
    6. '
' → logprob: -16.261873245239258
    7. '_idx' → logprob: -16.511873245239258
    8. ' ' → logprob: -16.511873245239258
    9. ' 
' → logprob: -16.511873245239258
    10. ' ' → logprob: -17.011873245239258

Token 767: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.001173321157693863
    2. 'edge' → logprob: -6.751173496246338
    3. '_id' → logprob: -13.75117301940918
    4. 'id' → logprob: -14.37617301940918
    5. ' edge' → logprob: -15.12617301940918
    6. 'Edge' → logprob: -15.50117301940918
    7. '_EDGE' → logprob: -15.62617301940918
    8. '   ' → logprob: -16.00117301940918
    9. 'idx' → logprob: -16.12617301940918
    10. '
' → logprob: -16.50117301940918

Token 768: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -9.729906196298543e-06
    2. 'id' → logprob: -11.625009536743164
    3. ')' → logprob: -16.125009536743164
    4. '))' → logprob: -16.375009536743164
    5. '_idx' → logprob: -16.500009536743164
    6. '_edge' → logprob: -16.625009536743164
    7. '   ' → logprob: -16.750009536743164
    8. ',' → logprob: -17.000009536743164
    9. '```' → logprob: -17.250009536743164
    10. '<|end|>' → logprob: -17.250009536743164

Token 769: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.042448073625564575
    2. ')' → logprob: -3.917448043823242
    3. '))
' → logprob: -3.917448043823242
    4. ',' → logprob: -6.417448043823242
    5. ')
' → logprob: -10.417448043823242
    6. '       ' → logprob: -10.667448043823242
    7. ' ))' → logprob: -11.042448043823242
    8. '),' → logprob: -11.292448043823242
    9. '));' → logprob: -11.417448043823242
    10. '<|end|>' → logprob: -11.792448043823242

Token 770: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09660849720239639
    2. 'for' → logprob: -3.0966084003448486
    3. 'list' → logprob: -3.2216084003448486
    4. '   ' → logprob: -5.846608638763428
    5. '```' → logprob: -5.846608638763428
    6. ' for' → logprob: -7.096608638763428
    7. ' list' → logprob: -8.47160816192627
    8. '<|end|>' → logprob: -9.97160816192627
    9. '           ' → logprob: -10.09660816192627
    10. '[' → logprob: -11.22160816192627

Token 771: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.0003827676991932094
    2. '       ' → logprob: -7.875382900238037
    3. '   ' → logprob: -13.625382423400879
    4. ' list' → logprob: -14.375382423400879
    5. '           ' → logprob: -14.500382423400879
    6. 'var' → logprob: -16.125383377075195
    7. 'for' → logprob: -16.125383377075195
    8. '```' → logprob: -16.250383377075195
    9. '        
' → logprob: -16.875383377075195
    10. '	list' → logprob: -17.875383377075195

Token 772: '_adj' (ID: 117293)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00011021859245374799
    2. '_adj' → logprob: -9.125110626220703
    3. 'node' → logprob: -14.000110626220703
    4. '_edge' → logprob: -15.000110626220703
    5. 'adj' → logprob: -16.750110626220703
    6. '_' → logprob: -18.000110626220703
    7. '_nodes' → logprob: -18.125110626220703
    8. '_ad' → logprob: -18.250110626220703
    9. '_from' → logprob: -18.750110626220703
    10. 'Node' → logprob: -18.875110626220703

Token 773: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -4.842555426876061e-06
    2. 'cent' → logprob: -12.625004768371582
    3. 'ac' → logprob: -14.500004768371582
    4. 'acency' → logprob: -15.875004768371582
    5. '_adj' → logprob: -16.0000057220459
    6. '[' → logprob: -16.0000057220459
    7. '_list' → logprob: -16.1250057220459
    8. '   ' → logprob: -16.7500057220459
    9. '_node' → logprob: -17.2500057220459
    10. '_cent' → logprob: -17.2500057220459

Token 774: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -6.754368223482743e-05
    2. 'graph' → logprob: -9.625067710876465
    3. '_' → logprob: -15.000067710876465
    4. '[' → logprob: -15.125067710876465
    5. '```' → logprob: -15.375067710876465
    6. '_list' → logprob: -15.875067710876465
    7. 'Graph' → logprob: -16.12506675720215
    8. '_GRAPH' → logprob: -16.62506675720215
    9. '_gr' → logprob: -16.75006675720215
    10. 'adj' → logprob: -17.00006675720215

Token 775: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.008129963040119e-06
    2. 'idx' → logprob: -12.875003814697266
    3. '[var' → logprob: -14.625003814697266
    4. '[' → logprob: -15.500003814697266
    5. '[index' → logprob: -16.375003814697266
    6. '[id' → logprob: -16.625003814697266
    7. '```' → logprob: -16.750003814697266
    8. '[from' → logprob: -16.750003814697266
    9. '[src' → logprob: -16.750003814697266
    10. '[to' → logprob: -17.000003814697266

Token 776: '_to' (ID: 5089)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.0004944138927385211
    2. '_to' → logprob: -8.000494003295898
    3. 'from' → logprob: -8.750494003295898
    4. '[from' → logprob: -16.2504940032959
    5. '_FROM' → logprob: -16.6254940032959
    6. '```' → logprob: -16.8754940032959
    7. '.from' → logprob: -16.8754940032959
    8. 'From' → logprob: -16.8754940032959
    9. '
' → logprob: -17.0004940032959
    10. '_for' → logprob: -17.1254940032959

Token 777: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.4666154980659485
    2. '].' → logprob: -1.4666154384613037
    3. ').' → logprob: -1.9666154384613037
    4. '.' → logprob: -6.341615676879883
    5. '<|end|>' → logprob: -8.341615676879883
    6. '.app' → logprob: -9.966615676879883
    7. '}.' → logprob: -9.966615676879883
    8. ' .' → logprob: -10.091615676879883
    9. '>.' → logprob: -10.466615676879883
    10. ',' → logprob: -10.716615676879883

Token 778: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.896309739408025e-07
    2. '.append' → logprob: -14.625000953674316
    3. ' append' → logprob: -15.125000953674316
    4. 'appen' → logprob: -17.5
    5. '	append' → logprob: -18.375
    6. '```' → logprob: -19.5
    7. 'app' → logprob: -20.25
    8. 'extend' → logprob: -21.75
    9. 'Append' → logprob: -21.75
    10. 'add' → logprob: -21.875

Token 779: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.07905403524637222
    2. '(idx' → logprob: -2.579054117202759
    3. '(' → logprob: -8.82905387878418
    4. ' (' → logprob: -11.07905387878418
    5. ' ((' → logprob: -13.82905387878418
    6. '(None' → logprob: -14.95405387878418
    7. '[idx' → logprob: -15.45405387878418
    8. '(
' → logprob: -15.57905387878418
    9. '(index' → logprob: -15.57905387878418
    10. '   ' → logprob: -15.70405387878418

Token 780: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.049116846174001694
    2. '(idx' → logprob: -3.049116849899292
    3. ' idx' → logprob: -7.674116611480713
    4. '	idx' → logprob: -10.299117088317871
    5. '[idx' → logprob: -11.049117088317871
    6. ' (' → logprob: -11.424117088317871
    7. '(' → logprob: -13.174117088317871
    8. '_idx' → logprob: -14.424117088317871
    9. '.idx' → logprob: -14.799117088317871
    10. '   ' → logprob: -15.049117088317871

Token 781: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.004141910932958126
    2. 'from' → logprob: -5.504141807556152
    3. '_to' → logprob: -9.754141807556152
    4. '_idx' → logprob: -13.004141807556152
    5. 'idx' → logprob: -13.254141807556152
    6. ' from' → logprob: -14.379141807556152
    7. '_FROM' → logprob: -15.379141807556152
    8. 'From' → logprob: -16.12914276123047
    9. '_edge' → logprob: -16.50414276123047
    10. ',' → logprob: -16.75414276123047

Token 782: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9795445849886164e-05
    2. ' ,' → logprob: -10.500060081481934
    3. ',(' → logprob: -10.500060081481934
    4. ',
' → logprob: -13.250060081481934
    5. '       ' → logprob: -14.500060081481934
    6. '<|end|>' → logprob: -14.750060081481934
    7. '           ' → logprob: -14.875060081481934
    8. '(' → logprob: -14.875060081481934
    9. ' (' → logprob: -15.125060081481934
    10. '```' → logprob: -15.250060081481934

Token 783: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.4748135507106781
    2. 'idx' → logprob: -0.9748135805130005
    3. '(idx' → logprob: -7.224813461303711
    4. ' (' → logprob: -12.849813461303711
    5. '[idx' → logprob: -13.099813461303711
    6. '	idx' → logprob: -13.224813461303711
    7. '(' → logprob: -13.974813461303711
    8. '_idx' → logprob: -15.599813461303711
    9. '.idx' → logprob: -15.974813461303711
    10. ' ' → logprob: -16.09981346130371

Token 784: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0037214572075754404
    2. 'edge' → logprob: -5.628721237182617
    3. '_id' → logprob: -9.128721237182617
    4. 'id' → logprob: -13.003721237182617
    5. '```' → logprob: -13.253721237182617
    6. ')' → logprob: -13.378721237182617
    7. '_EDGE' → logprob: -13.628721237182617
    8. 'Edge' → logprob: -13.753721237182617
    9. 'idx' → logprob: -14.003721237182617
    10. '_idx' → logprob: -14.128721237182617

Token 785: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.00011021859245374799
    2. 'id' → logprob: -9.875110626220703
    3. 'd' → logprob: -10.125110626220703
    4. '_edge' → logprob: -11.500110626220703
    5. '))' → logprob: -12.500110626220703
    6. ')]' → logprob: -13.625110626220703
    7. '```' → logprob: -13.875110626220703
    8. '_d' → logprob: -14.875110626220703
    9. ')' → logprob: -15.000110626220703
    10. 'edge' → logprob: -15.125110626220703

Token 786: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06205775961279869
    2. ')' → logprob: -2.8120577335357666
    3. '))
' → logprob: -9.812057495117188
    4. '       ' → logprob: -10.812057495117188
    5. ')))' → logprob: -12.437057495117188
    6. ')
' → logprob: -12.687057495117188
    7. '<|end|>' → logprob: -13.312057495117188
    8. '   ' → logprob: -13.687057495117188
    9. ')}' → logprob: -13.687057495117188
    10. ' ))' → logprob: -14.187057495117188

Token 787: '       ' (ID: 309)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.020981380715966225
    2. 'for' → logprob: -4.020981311798096
    3. 'var' → logprob: -6.645981311798096
    4. '```' → logprob: -6.770981311798096
    5. 'idx' → logprob: -9.520981788635254
    6. ' list' → logprob: -9.770981788635254
    7. ' for' → logprob: -9.770981788635254
    8. 'stack' → logprob: -10.145981788635254
    9. 'visited' → logprob: -10.520981788635254
    10. ')' → logprob: -11.270981788635254

Token 788: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -1.1517960956552997e-05
    2. '   ' → logprob: -11.500011444091797
    3. '       ' → logprob: -14.000011444091797
    4. ' list' → logprob: -15.000011444091797
    5. '```' → logprob: -16.250011444091797
    6. '           ' → logprob: -18.875011444091797
    7. '  ' → logprob: -19.625011444091797
    8. '``' → logprob: -20.875011444091797
    9. ' ' → logprob: -21.000011444091797
    10. '    ' → logprob: -21.250011444091797

Token 789: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.7697225252486533e-06
    2. 'node' → logprob: -12.750003814697266
    3. '_user' → logprob: -14.625003814697266
    4. '```' → logprob: -16.250003814697266
    5. '_nodes' → logprob: -16.625003814697266
    6. '_token' → logprob: -17.125003814697266
    7. '[node' → logprob: -17.125003814697266
    8. 'Node' → logprob: -17.125003814697266
    9. '_NODE' → logprob: -17.875003814697266
    10. '_Node' → logprob: -17.875003814697266

Token 790: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -2.141186450899113e-05
    2. '_degree' → logprob: -11.250020980834961
    3. 'degrees' → logprob: -11.750020980834961
    4. 'de' → logprob: -15.750020980834961
    5. '_deg' → logprob: -16.12502098083496
    6. 'Degrees' → logprob: -16.62502098083496
    7. '```' → logprob: -16.87502098083496
    8. ' degrees' → logprob: -18.00002098083496
    9. 'degree' → logprob: -18.12502098083496
    10. '_DE' → logprob: -18.25002098083496

Token 791: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -1.0280383548888494e-06
    2. 'eg' → logprob: -15.125000953674316
    3. 'gree' → logprob: -15.125000953674316
    4. 'degrees' → logprob: -15.750000953674316
    5. 'g' → logprob: -16.000001907348633
    6. 'gre' → logprob: -16.625001907348633
    7. '```' → logprob: -18.250001907348633
    8. 'gress' → logprob: -18.750001907348633
    9. 'rees' → logprob: -19.250001907348633
    10. '[' → logprob: -19.500001907348633

Token 792: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -6.749814019713085e-06
    2. '[list' → logprob: -13.000006675720215
    3. '[' → logprob: -13.750006675720215
    4. 'idx' → logprob: -14.125006675720215
    5. '=' → logprob: -14.625006675720215
    6. '[var' → logprob: -15.125006675720215
    7. ' [' → logprob: -15.500006675720215
    8. '[index' → logprob: -15.750006675720215
    9. ' =' → logprob: -15.750006675720215
    10. ' idx' → logprob: -15.875006675720215

Token 793: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.03807752579450607
    2. '_to' → logprob: -3.4130775928497314
    3. 'from' → logprob: -6.038077354431152
    4. '_idx' → logprob: -6.538077354431152
    5. 'idx' → logprob: -8.163077354431152
    6. '[idx' → logprob: -8.413077354431152
    7. '_' → logprob: -11.538077354431152
    8. 'to' → logprob: -11.663077354431152
    9. '_id' → logprob: -11.788077354431152
    10. '[from' → logprob: -11.913077354431152

Token 794: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12889918684959412
    2. ']+=' → logprob: -2.378899097442627
    3. '[idx' → logprob: -4.253899097442627
    4. ' +=' → logprob: -4.628899097442627
    5. ']' → logprob: -5.628899097442627
    6. '[' → logprob: -7.378899097442627
    7. '```' → logprob: -10.003899574279785
    8. '[index' → logprob: -11.003899574279785
    9. '+' → logprob: -11.878899574279785
    10. ']+' → logprob: -12.378899574279785

Token 795: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0005548207554966211
    2. ' +=' → logprob: -7.500555038452148
    3. ']+=' → logprob: -13.375555038452148
    4. '=' → logprob: -16.37555503845215
    5. '   ' → logprob: -16.37555503845215
    6. '[' → logprob: -17.00055503845215
    7. '+' → logprob: -17.12555503845215
    8. '```' → logprob: -17.62555503845215
    9. '-=' → logprob: -19.87555503845215
    10. '+=(' → logprob: -19.87555503845215

Token 796: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. '+' → logprob: -17.505233764648438
    4. ' ' → logprob: -18.005233764648438
    5. '   ' → logprob: -18.130233764648438
    6. '```' → logprob: -18.130233764648438
    7. '0' → logprob: -18.880233764648438
    8. '  ' → logprob: -19.630233764648438
    9. ' +' → logprob: -19.880233764648438
    10. '2' → logprob: -20.442733764648438

Token 797: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -17.125003814697266
    4. '   ' → logprob: -17.687503814697266
    5. '<|end|>' → logprob: -18.750003814697266
    6. '-' → logprob: -19.000003814697266
    7. '+' → logprob: -19.250003814697266
    8. '
' → logprob: -19.312503814697266
    9. '0' → logprob: -19.437503814697266
    10. '>' → logprob: -19.625003814697266

Token 798: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5859847664833069
    2. 'list' → logprob: -0.8359847664833069
    3. '   ' → logprob: -4.835984706878662
    4. '```' → logprob: -6.710984706878662
    5. 'for' → logprob: -8.21098518371582
    6. ' list' → logprob: -8.33598518371582
    7. '<|end|>' → logprob: -9.21098518371582
    8. '           ' → logprob: -9.71098518371582
    9. '[list' → logprob: -9.71098518371582
    10. ' ' → logprob: -10.58598518371582

Token 799: '       ' (ID: 309)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.19721683859825134
    2. '```' → logprob: -2.322216749191284
    3. '<|end|>' → logprob: -3.197216749191284
    4. 'for' → logprob: -3.447216749191284
    5. '   ' → logprob: -5.947216987609863
    6. 'var' → logprob: -6.447216987609863
    7. ' list' → logprob: -6.572216987609863
    8. '       ' → logprob: -7.447216987609863
    9. '	list' → logprob: -8.197216987609863
    10. '[' → logprob: -8.447216987609863

Token 800: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.00022535098833031952
    2. ' list' → logprob: -8.500225067138672
    3. '       ' → logprob: -10.750225067138672
    4. '1' → logprob: -14.875225067138672
    5. '   ' → logprob: -17.000225067138672
    6. '```' → logprob: -18.500225067138672
    7. '           ' → logprob: -18.875225067138672
    8. ' ' → logprob: -19.375225067138672
    9. '	list' → logprob: -20.250225067138672
    10. '
' → logprob: -20.875225067138672

Token 801: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.771655115589965e-05
    2. '_to' → logprob: -12.250018119812012
    3. 'node' → logprob: -12.250018119812012
    4. '_user' → logprob: -12.750018119812012
    5. '_' → logprob: -13.750018119812012
    6. '_edge' → logprob: -13.875018119812012
    7. 'Node' → logprob: -14.500018119812012
    8. '[node' → logprob: -14.625018119812012
    9. '_token' → logprob: -14.625018119812012
    10. '```' → logprob: -14.875018119812012

Token 802: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -7.696077227592468e-05
    2. '[idx' → logprob: -10.250077247619629
    3. 'degrees' → logprob: -10.500077247619629
    4. 'de' → logprob: -12.250077247619629
    5. '```' → logprob: -12.875077247619629
    6. '	de' → logprob: -13.500077247619629
    7. 'Degrees' → logprob: -13.875077247619629
    8. '_degree' → logprob: -13.875077247619629
    9. '_DE' → logprob: -14.125077247619629
    10. '[' → logprob: -14.750077247619629

Token 803: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -6.170270353322849e-05
    2. 'eg' → logprob: -10.250061988830566
    3. 'degrees' → logprob: -11.000061988830566
    4. 'g' → logprob: -11.750061988830566
    5. 'gre' → logprob: -14.375061988830566
    6. 'gree' → logprob: -15.000061988830566
    7. '```' → logprob: -15.500061988830566
    8. '[' → logprob: -15.500061988830566
    9. 'gr' → logprob: -15.625061988830566
    10. 'rees' → logprob: -16.75006103515625

Token 804: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -13.250003814697266
    3. 'idx' → logprob: -14.125003814697266
    4. '[
' → logprob: -15.125003814697266
    5. '[...]' → logprob: -15.625003814697266
    6. '```' → logprob: -16.000003814697266
    7. '[var' → logprob: -16.375003814697266
    8. '(idx' → logprob: -16.500003814697266
    9. '[index' → logprob: -17.250003814697266
    10. '[id' → logprob: -17.250003814697266

Token 805: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.007924106903374195
    2. '[idx' → logprob: -5.0079240798950195
    3. '_from' → logprob: -7.6329240798950195
    4. 'to' → logprob: -8.13292407989502
    5. '_idx' → logprob: -8.38292407989502
    6. 'idx' → logprob: -9.63292407989502
    7. '[to' → logprob: -9.88292407989502
    8. 'To' → logprob: -10.13292407989502
    9. 'from' → logprob: -11.38292407989502
    10. '```' → logprob: -11.50792407989502

Token 806: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6114189624786377
    2. ' +=' → logprob: -0.8614189624786377
    3. '[idx' → logprob: -3.6114189624786377
    4. ']+=' → logprob: -5.111418724060059
    5. '[' → logprob: -7.111418724060059
    6. '+' → logprob: -7.611418724060059
    7. ']' → logprob: -8.361418724060059
    8. '```' → logprob: -8.736418724060059
    9. '   ' → logprob: -10.111418724060059
    10. ')' → logprob: -11.236418724060059

Token 807: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014241538941860199
    2. ' +=' → logprob: -4.264241695404053
    3. ']+=' → logprob: -9.514241218566895
    4. '[' → logprob: -13.139241218566895
    5. '   ' → logprob: -14.014241218566895
    6. '+' → logprob: -14.264241218566895
    7. '```' → logprob: -15.889241218566895
    8. ' ' → logprob: -16.13924217224121
    9. '    ' → logprob: -16.26424217224121
    10. '[idx' → logprob: -16.38924217224121

Token 808: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006268949946388602
    2. ' ' → logprob: -7.375627040863037
    3. '2' → logprob: -15.375626564025879
    4. '   ' → logprob: -16.750627517700195
    5. '```' → logprob: -17.250627517700195
    6. '0' → logprob: -19.563127517700195
    7. '+' → logprob: -19.625627517700195
    8. '  ' → logprob: -19.625627517700195
    9. '-' → logprob: -19.688127517700195
    10. ')' → logprob: -19.938127517700195

Token 809: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014084660506341606
    2. ' ' → logprob: -8.875141143798828
    3. '2' → logprob: -14.500141143798828
    4. '```' → logprob: -15.937641143798828
    5. '   ' → logprob: -16.250141143798828
    6. '-' → logprob: -16.750141143798828
    7. '
' → logprob: -16.937641143798828
    8. '+' → logprob: -17.937641143798828
    9. '１' → logprob: -18.062641143798828
    10. '۱' → logprob: -18.062641143798828

Token 810: '

' (ID: 279)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.033897869288921356
    2. 'var' → logprob: -4.158897876739502
    3. 'for' → logprob: -5.033897876739502
    4. 'from' → logprob: -5.783897876739502
    5. 'queue' → logprob: -6.158897876739502
    6. 'stack' → logprob: -6.158897876739502
    7. 'deque' → logprob: -6.783897876739502
    8. 'idx' → logprob: -7.033897876739502
    9. 'def' → logprob: -7.658897876739502
    10. 'import' → logprob: -8.283897399902344

Token 811: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02150573395192623
    2. 'for' → logprob: -4.146505832672119
    3. 'var' → logprob: -6.271505832672119
    4. 'from' → logprob: -6.396505832672119
    5. 'import' → logprob: -7.271505832672119
    6. 'idx' → logprob: -7.896505832672119
    7. 'deque' → logprob: -7.896505832672119
    8. 'stack' → logprob: -8.896505355834961
    9. 'queue' → logprob: -9.021505355834961
    10. 'def' → logprob: -9.646505355834961

Token 812: '_result' (ID: 11623)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.7960551977157593
    2. '_stack' → logprob: -0.7960551977157593
    3. '_queue' → logprob: -3.546055316925049
    4. '_' → logprob: -4.046055316925049
    5. '_edge' → logprob: -4.296055316925049
    6. '_par' → logprob: -4.796055316925049
    7. '_degree' → logprob: -5.171055316925049
    8. '_de' → logprob: -5.421055316925049
    9. '_edges' → logprob: -5.671055316925049
    10. '_nodes' → logprob: -5.796055316925049

Token 813: '_edges' (ID: 68870)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4234980642795563
    2. '_edges' → logprob: -1.2984980344772339
    3. '_selected' → logprob: -3.2984981536865234
    4. '_' → logprob: -4.423498153686523
    5. '=' → logprob: -5.048498153686523
    6. '=[]' → logprob: -5.423498153686523
    7. '_edge' → logprob: -5.798498153686523
    8. '_used' → logprob: -6.048498153686523
    9. '_indices' → logprob: -7.173498153686523
    10. '_stack' → logprob: -7.173498153686523

Token 814: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4289621412754059
    2. ' =' → logprob: -1.0539621114730835
    3. '=[]' → logprob: -8.303961753845215
    4. '[:]' → logprob: -12.553961753845215
    5. '=[' → logprob: -13.428961753845215
    6. '[]' → logprob: -13.678961753845215
    7. '=[]
' → logprob: -13.803961753845215
    8. '.append' → logprob: -14.053961753845215
    9. '[' → logprob: -14.053961753845215
    10. '_' → logprob: -14.178961753845215

Token 815: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -3.702754474943504e-05
    2. '[]
' → logprob: -11.00003719329834
    3. '[' → logprob: -11.25003719329834
    4. ' []' → logprob: -11.87503719329834
    5. '[]}' → logprob: -15.87503719329834
    6. '[]

' → logprob: -16.500036239624023
    7. '[],' → logprob: -17.375036239624023
    8. '[])' → logprob: -17.375036239624023
    9. '=[]' → logprob: -18.500036239624023
    10. 'set' → logprob: -18.750036239624023

Token 816: 'list' (ID: 2641)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020023923367261887
    2. 'def' → logprob: -4.895023822784424
    3. 'stack' → logprob: -5.145023822784424
    4. 'from' → logprob: -5.770023822784424
    5. 'list' → logprob: -6.645023822784424
    6. 'idx' → logprob: -7.520023822784424
    7. 'deque' → logprob: -7.520023822784424
    8. 'var' → logprob: -8.270024299621582
    9. 'queue' → logprob: -8.270024299621582
    10. 'while' → logprob: -9.145024299621582

Token 817: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.7949647307395935
    2. '_stack' → logprob: -0.7949647307395935
    3. '_queue' → logprob: -2.9199647903442383
    4. '_par' → logprob: -3.7949647903442383
    5. '_edge' → logprob: -5.794964790344238
    6. '_' → logprob: -5.794964790344238
    7. '_degree' → logprob: -5.919964790344238
    8. '_de' → logprob: -6.169964790344238
    9. '_nodes' → logprob: -6.294964790344238
    10. '_d' → logprob: -6.919964790344238

Token 818: '_used' (ID: 67016)
  Prédit: '_par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_par' → logprob: -0.5931028723716736
    2. '_stack' → logprob: -1.5931029319763184
    3. '_queue' → logprob: -2.2181029319763184
    4. '_degree' → logprob: -2.5931029319763184
    5. '_de' → logprob: -3.2181029319763184
    6. '_' → logprob: -5.218102931976318
    7. '_to' → logprob: -6.093102931976318
    8. '_color' → logprob: -6.343102931976318
    9. '_colors' → logprob: -7.093102931976318
    10. '_current' → logprob: -7.343102931976318

Token 819: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25198885798454285
    2. ' =' → logprob: -1.5019888877868652
    3. '=[' → logprob: -10.501988410949707
    4. '[' → logprob: -11.001988410949707
    5. '_' → logprob: -13.251988410949707
    6. ' =[' → logprob: -13.251988410949707
    7. '_used' → logprob: -13.501988410949707
    8. '   ' → logprob: -13.626988410949707
    9. '=[]' → logprob: -14.001988410949707
    10. '_idx' → logprob: -14.001988410949707

Token 820: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013727048644796014
    2. ' [' → logprob: -9.000137329101562
    3. '[]' → logprob: -11.875137329101562
    4. '[len' → logprob: -13.375137329101562
    5. '[list' → logprob: -13.875137329101562
    6. '[node' → logprob: -14.000137329101562
    7. '[var' → logprob: -14.875137329101562
    8. '[n' → logprob: -15.125137329101562
    9. '   ' → logprob: -15.125137329101562
    10. '[size' → logprob: -15.375137329101562

Token 821: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.380904672667384e-05
    2. ' False' → logprob: -10.500033378601074
    3. '0' → logprob: -12.000033378601074
    4. 'True' → logprob: -17.00003433227539
    5. '(False' → logprob: -17.87503433227539
    6. '   ' → logprob: -18.62503433227539
    7. '=False' → logprob: -20.62503433227539
    8. '.False' → logprob: -20.87503433227539
    9. '[' → logprob: -21.37503433227539
    10. '
' → logprob: -21.50003433227539

Token 822: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014609156642109156
    2. ' ]' → logprob: -9.37514591217041
    3. ']*' → logprob: -10.50014591217041
    4. ' *' → logprob: -11.50014591217041
    5. '   ' → logprob: -11.62514591217041
    6. '*' → logprob: -11.87514591217041
    7. '[' → logprob: -13.25014591217041
    8. ')' → logprob: -13.50014591217041
    9. 'for' → logprob: -14.00014591217041
    10. ']
' → logprob: -14.25014591217041

Token 823: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6423306465148926
    2. ' *' → logprob: -0.7673306465148926
    3. '[' → logprob: -5.767330646514893
    4. ' [' → logprob: -6.142330646514893
    5. ')' → logprob: -6.517330646514893
    6. 'False' → logprob: -6.892330646514893
    7. '[var' → logprob: -7.142330646514893
    8. ']' → logprob: -7.767330646514893
    9. '*[' → logprob: -8.392330169677734
    10. '```' → logprob: -9.392330169677734

Token 824: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.0003420183784328401
    2. ' var' → logprob: -8.00034236907959
    3. 'len' → logprob: -12.00034236907959
    4. '(var' → logprob: -15.00034236907959
    5. ')var' → logprob: -18.750341415405273
    6. '   ' → logprob: -18.875341415405273
    7. ' ' → logprob: -19.250341415405273
    8. '[var' → logprob: -19.375341415405273
    9. ' len' → logprob: -19.625341415405273
    10. '0' → logprob: -20.000341415405273

Token 825: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -7.226628895296017e-06
    2. 'nodes' → logprob: -12.500007629394531
    3. '```' → logprob: -13.875007629394531
    4. '_tokens' → logprob: -14.125007629394531
    5. '
' → logprob: -14.750007629394531
    6. '_total' → logprob: -14.875007629394531
    7. 'var' → logprob: -14.875007629394531
    8. '_node' → logprob: -15.250007629394531
    9. 'val' → logprob: -16.37500762939453
    10. 'len' → logprob: -16.62500762939453

Token 826: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -2.935296834039036e-06
    2. 'total' → logprob: -13.00000286102295
    3. 'otal' → logprob: -15.37500286102295
    4. '_nodes' → logprob: -15.75000286102295
    5. '_used' → logprob: -15.87500286102295
    6. 'Total' → logprob: -16.875003814697266
    7. '$total' → logprob: -18.000003814697266
    8. '```' → logprob: -18.000003814697266
    9. '_size' → logprob: -18.125003814697266
    10. '_TOTAL' → logprob: -18.500003814697266

Token 827: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09320931136608124
    2. 'def' → logprob: -3.7182092666625977
    3. 'from' → logprob: -3.9682092666625977
    4. 'stack' → logprob: -3.9682092666625977
    5. '
' → logprob: -4.218209266662598
    6. 'list' → logprob: -4.843209266662598
    7. 'idx' → logprob: -6.218209266662598
    8. 'import' → logprob: -7.343209266662598
    9. ' for' → logprob: -7.343209266662598
    10. 'queue' → logprob: -8.468209266662598

Token 828: 'list' (ID: 2641)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05799663066864014
    2. 'def' → logprob: -3.4329967498779297
    3. 'from' → logprob: -4.18299674987793
    4. 'stack' → logprob: -4.93299674987793
    5. 'list' → logprob: -7.30799674987793
    6. 'idx' → logprob: -7.68299674987793
    7. 'import' → logprob: -8.30799674987793
    8. 'deque' → logprob: -9.18299674987793
    9. 'var' → logprob: -10.43299674987793
    10. ' for' → logprob: -10.55799674987793

Token 829: '_leaf' (ID: 96627)
  Prédit: '_stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.19612134993076324
    2. '_node' → logprob: -2.1961214542388916
    3. '_d' → logprob: -3.0711214542388916
    4. '_queue' → logprob: -4.1961212158203125
    5. '_par' → logprob: -6.4461212158203125
    6. '_de' → logprob: -6.8211212158203125
    7. '_degree' → logprob: -7.0711212158203125
    8. '_edge' → logprob: -7.8211212158203125
    9. '_nodes' → logprob: -8.696121215820312
    10. '_val' → logprob: -8.696121215820312

Token 830: '_stack' (ID: 35650)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.24385324120521545
    2. '_stack' → logprob: -2.4938533306121826
    3. '_' → logprob: -2.7438533306121826
    4. 's' → logprob: -3.1188533306121826
    5. ' =' → logprob: -4.9938530921936035
    6. '_queue' → logprob: -5.3688530921936035
    7. '=' → logprob: -5.4938530921936035
    8. '_leaf' → logprob: -5.8688530921936035
    9. '_indices' → logprob: -6.1188530921936035
    10. '=[]' → logprob: -6.8688530921936035

Token 831: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38806480169296265
    2. '=' → logprob: -1.1380648612976074
    3. '=[]' → logprob: -6.763064861297607
    4. '.append' → logprob: -10.63806438446045
    5. '[]' → logprob: -12.51306438446045
    6. '[:]' → logprob: -12.63806438446045
    7. '=[]
' → logprob: -13.38806438446045
    8. '.' → logprob: -13.38806438446045
    9. '=[' → logprob: -13.51306438446045
    10. ',' → logprob: -14.38806438446045

Token 832: ' [' (ID: 723)
  Prédit: '[var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[var' → logprob: -0.9047748446464539
    2. '[idx' → logprob: -1.5297749042510986
    3. '[' → logprob: -2.1547749042510986
    4. '[i' → logprob: -2.4047749042510986
    5. '[]' → logprob: -2.4047749042510986
    6. '[val' → logprob: -2.6547749042510986
    7. '[v' → logprob: -5.9047746658325195
    8. '[id' → logprob: -6.4047746658325195
    9. '[
' → logprob: -6.5297746658325195
    10. '[value' → logprob: -7.2797746658325195

Token 833: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.003732380224391818
    2. 'i' → logprob: -5.628732204437256
    3. ' idx' → logprob: -10.003732681274414
    4. 'node' → logprob: -10.253732681274414
    5. '(idx' → logprob: -11.628732681274414
    6. 'index' → logprob: -11.753732681274414
    7. 'x' → logprob: -12.003732681274414
    8. 'var' → logprob: -12.128732681274414
    9. '
' → logprob: -12.503732681274414
    10. ']' → logprob: -12.753732681274414

Token 834: '_node' (ID: 11390)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23101533949375153
    2. 'for' → logprob: -1.7310153245925903
    3. '_node' → logprob: -3.60601544380188
    4. 'i' → logprob: -6.731015205383301
    5. 'node' → logprob: -7.981015205383301
    6. 'idx' → logprob: -8.4810152053833
    7. '
' → logprob: -9.3560152053833
    8. '_leaf' → logprob: -10.1060152053833
    9. '_i' → logprob: -10.2310152053833
    10. ' i' → logprob: -10.6060152053833

Token 835: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3132835030555725
    2. ' for' → logprob: -1.3132834434509277
    3. ' ' → logprob: -11.063283920288086
    4. '
' → logprob: -12.688283920288086
    5. '	for' → logprob: -13.438283920288086
    6. '   ' → logprob: -13.688283920288086
    7. '           ' → logprob: -15.938283920288086
    8. '```' → logprob: -16.438283920288086
    9. '       ' → logprob: -16.813283920288086
    10. '  ' → logprob: -17.313283920288086

Token 836: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.1128639429807663
    2. ' idx' → logprob: -2.2378640174865723
    3. ',' → logprob: -10.612863540649414
    4. '_,' → logprob: -12.362863540649414
    5. '(idx' → logprob: -12.362863540649414
    6. '	idx' → logprob: -12.862863540649414
    7. '_idx' → logprob: -12.987863540649414
    8. ' ' → logprob: -14.362863540649414
    9. ' in' → logprob: -14.487863540649414
    10. '.idx' → logprob: -14.612863540649414

Token 837: '_node' (ID: 11390)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3586488366127014
    2. 'idx' → logprob: -1.2336487770080566
    3. '_node' → logprob: -5.358648777008057
    4. '_idx' → logprob: -6.483648777008057
    5. ' idx' → logprob: -6.733648777008057
    6. ' in' → logprob: -7.233648777008057
    7. 'in' → logprob: -7.858648777008057
    8. 'node' → logprob: -7.858648777008057
    9. ' ,' → logprob: -7.983648777008057
    10. 'var' → logprob: -8.233649253845215

Token 838: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08025360852479935
    2. ' in' → logprob: -3.2052536010742188
    3. 'in' → logprob: -3.3302536010742188
    4. 'idx' → logprob: -7.955253601074219
    5. ',var' → logprob: -8.705253601074219
    6. ',val' → logprob: -9.455253601074219
    7. ' ,' → logprob: -9.580253601074219
    8. 'var' → logprob: -10.830253601074219
    9. 'i' → logprob: -10.955253601074219
    10. ',node' → logprob: -11.205253601074219

Token 839: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.022233521565794945
    2. 'degree' → logprob: -3.897233486175537
    3. ' deg' → logprob: -6.647233486175537
    4. 'val' → logprob: -8.272233963012695
    5. ' degree' → logprob: -9.647233963012695
    6. 'var' → logprob: -9.897233963012695
    7. 'idx' → logprob: -12.147233963012695
    8. ' val' → logprob: -12.272233963012695
    9. 'used' → logprob: -13.147233963012695
    10. 'd' → logprob: -13.147233963012695

Token 840: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3168240189552307
    2. ' in' → logprob: -1.441823959350586
    3. 'in' → logprob: -3.941823959350586
    4. 'n' → logprob: -4.566823959350586
    5. 'd' → logprob: -6.066823959350586
    6. ' ,' → logprob: -6.441823959350586
    7. 'x' → logprob: -7.566823959350586
    8. ' ' → logprob: -8.816823959350586
    9. 'nt' → logprob: -9.066823959350586
    10. 'dx' → logprob: -9.441823959350586

Token 841: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.04859282076358795
    2. ' enumerate' → logprob: -3.0485928058624268
    3. 'enum' → logprob: -13.173592567443848
    4. '
' → logprob: -13.923592567443848
    5. '```' → logprob: -14.173592567443848
    6. 'range' → logprob: -14.548592567443848
    7. ',' → logprob: -14.923592567443848
    8. 'in' → logprob: -15.048592567443848
    9. 'en' → logprob: -15.048592567443848
    10. 'deg' → logprob: -15.298592567443848

Token 842: '(list' (ID: 13116)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20157325267791748
    2. '(list' → logprob: -1.7015732526779175
    3. ' list' → logprob: -8.826573371887207
    4. 'var' → logprob: -11.951573371887207
    5. 'enumer' → logprob: -12.701573371887207
    6. '(var' → logprob: -14.201573371887207
    7. ',list' → logprob: -14.576573371887207
    8. '	list' → logprob: -14.826573371887207
    9. 'range' → logprob: -15.326573371887207
    10. '(' → logprob: -15.326573371887207

Token 843: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.1472419600977446e-06
    2. '_nodes' → logprob: -15.125000953674316
    3. '
' → logprob: -16.000001907348633
    4. 'node' → logprob: -16.125001907348633
    5. '_' → logprob: -16.250001907348633
    6. '(_' → logprob: -16.375001907348633
    7. '_list' → logprob: -16.875001907348633
    8. ' _' → logprob: -17.000001907348633
    9. '_leaf' → logprob: -17.250001907348633
    10. '```' → logprob: -17.250001907348633

Token 844: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.00045914790825918317
    2. '_node' → logprob: -8.125458717346191
    3. ')' → logprob: -10.000458717346191
    4. 'degrees' → logprob: -10.375458717346191
    5. '
' → logprob: -11.000458717346191
    6. 'node' → logprob: -11.125458717346191
    7. '_degree' → logprob: -11.625458717346191
    8. 's' → logprob: -11.875458717346191
    9. '_nodes' → logprob: -12.375458717346191
    10. '_deg' → logprob: -12.375458717346191

Token 845: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -0.00011868205183418468
    2. 'g' → logprob: -9.125118255615234
    3. 'eg' → logprob: -11.875118255615234
    4. 'degrees' → logprob: -13.500118255615234
    5. 'gree' → logprob: -14.500118255615234
    6. 'gr' → logprob: -15.125118255615234
    7. 'gre' → logprob: -15.750118255615234
    8. 'rees' → logprob: -16.000118255615234
    9. '```' → logprob: -16.250118255615234
    10. 'gres' → logprob: -17.000118255615234

Token 846: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4423202574253082
    2. 'if' → logprob: -1.0673202276229858
    3. ')' → logprob: -4.317320346832275
    4. ' ' → logprob: -9.817319869995117
    5. '0' → logprob: -10.067319869995117
    6. '()' → logprob: -10.067319869995117
    7. ',' → logprob: -10.942319869995117
    8. '	if' → logprob: -11.692319869995117
    9. '   ' → logprob: -11.817319869995117
    10. '),' → logprob: -12.567319869995117

Token 847: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3869069218635559
    2. ' if' → logprob: -1.1369068622589111
    3. '	if' → logprob: -11.261906623840332
    4. '   ' → logprob: -11.636906623840332
    5. '0' → logprob: -12.511906623840332
    6. ' ' → logprob: -12.636906623840332
    7. '  ' → logprob: -13.261906623840332
    8. '    ' → logprob: -13.636906623840332
    9. ',' → logprob: -14.386906623840332
    10. '()' → logprob: -14.761906623840332

Token 848: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.018150178715586662
    2. ' deg' → logprob: -4.018150329589844
    3. '   ' → logprob: -15.893150329589844
    4. ' ' → logprob: -17.018150329589844
    5. 'de' → logprob: -17.143150329589844
    6. '  ' → logprob: -17.393150329589844
    7. '	de' → logprob: -17.518150329589844
    8. '
' → logprob: -17.643150329589844
    9. ' ' → logprob: -18.768150329589844
    10. '```' → logprob: -19.018150329589844

Token 849: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.19286930561065674
    2. '==' → logprob: -1.8178693056106567
    3. ' <=' → logprob: -4.442869186401367
    4. '<=' → logprob: -6.692869186401367
    5. ')' → logprob: -12.067869186401367
    6. '>' → logprob: -12.067869186401367
    7. ' <' → logprob: -12.317869186401367
    8. '```' → logprob: -12.317869186401367
    9. ']==' → logprob: -12.567869186401367
    10. ' ' → logprob: -12.817869186401367

Token 850: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012999906903132796
    2. ' ' → logprob: -9.000129699707031
    3. '0' → logprob: -12.000129699707031
    4. '```' → logprob: -15.875129699707031
    5. '   ' → logprob: -16.87512969970703
    6. '=' → logprob: -16.87512969970703
    7. '
' → logprob: -17.56262969970703
    8. '  ' → logprob: -18.25012969970703
    9. '==' → logprob: -18.31262969970703
    10. '(' → logprob: -18.43762969970703

Token 851: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.117345684382599e-05
    2. ' ' → logprob: -11.000020980834961
    3. '0' → logprob: -12.500020980834961
    4. '```' → logprob: -14.875020980834961
    5. '
' → logprob: -15.750020980834961
    6. '   ' → logprob: -17.68752098083496
    7. '==' → logprob: -17.68752098083496
    8. '=' → logprob: -17.81252098083496
    9. '۱' → logprob: -18.18752098083496
    10. '...' → logprob: -18.43752098083496

Token 852: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006478638388216496
    2. ' ]' → logprob: -7.375648021697998
    3. ')]' → logprob: -11.75064754486084
    4. ')' → logprob: -12.12564754486084
    5. ' if' → logprob: -13.25064754486084
    6. ']
' → logprob: -13.37564754486084
    7. '])' → logprob: -13.50064754486084
    8. '()]' → logprob: -13.62564754486084
    9. 'if' → logprob: -14.25064754486084
    10. '   ' → logprob: -14.62564754486084

Token 853: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -8.149051427608356e-05
    2. '```' → logprob: -9.625081062316895
    3. ' while' → logprob: -11.500081062316895
    4. '
' → logprob: -12.500081062316895
    5. 'for' → logprob: -14.250081062316895
    6. '``' → logprob: -15.000081062316895
    7. '	while' → logprob: -15.375081062316895
    8. 'list' → logprob: -16.00008201599121
    9. 'While' → logprob: -16.75008201599121
    10. '   ' → logprob: -17.00008201599121

Token 854: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.008616461418569088
    2. ' list' → logprob: -4.7586164474487305
    3. 'len' → logprob: -13.38361644744873
    4. 'not' → logprob: -15.50861644744873
    5. ' not' → logprob: -17.008617401123047
    6. ' len' → logprob: -17.383617401123047
    7. '	list' → logprob: -17.758617401123047
    8. '
' → logprob: -17.883617401123047
    9. '(list' → logprob: -18.383617401123047
    10. ' ' → logprob: -18.633617401123047

Token 855: '_leaf' (ID: 96627)
  Prédit: '_leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_leaf' → logprob: -4.723352049040841e-06
    2. '_node' → logprob: -12.875004768371582
    3. 'leaf' → logprob: -13.125004768371582
    4. '_' → logprob: -17.000003814697266
    5. '```' → logprob: -17.625003814697266
    6. 'Leaf' → logprob: -17.875003814697266
    7. '
' → logprob: -18.375003814697266
    8. '_leave' → logprob: -18.500003814697266
    9. '_stack' → logprob: -19.250003814697266
    10. '_len' → logprob: -19.500003814697266

Token 856: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.00017648482753429562
    2. '_leaf' → logprob: -8.750176429748535
    3. 'stack' → logprob: -11.375176429748535
    4. '_' → logprob: -12.375176429748535
    5. '_node' → logprob: -14.250176429748535
    6. '_nodes' → logprob: -14.875176429748535
    7. '```' → logprob: -15.000176429748535
    8. '_pop' → logprob: -15.250176429748535
    9. '_
' → logprob: -16.12517738342285
    10. '
' → logprob: -16.25017738342285

Token 857: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027363929897546768
    2. ':
' → logprob: -3.6523640155792236
    3. '.pop' → logprob: -7.0273637771606445
    4. 'pop' → logprob: -8.777363777160645
    5. '):' → logprob: -12.152363777160645
    6. '):
' → logprob: -12.527363777160645
    7. '```' → logprob: -12.527363777160645
    8. '_pop' → logprob: -12.777363777160645
    9. ' :' → logprob: -13.902363777160645
    10. 'Pop' → logprob: -14.152363777160645

Token 858: '   ' (ID: 271)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.05824890732765198
    2. ' idx' → logprob: -3.308248996734619
    3. '   ' → logprob: -3.933248996734619
    4. '	idx' → logprob: -8.933248519897461
    5. '```' → logprob: -9.808248519897461
    6. '
' → logprob: -9.808248519897461
    7. '_idx' → logprob: -9.933248519897461
    8. 'current' → logprob: -10.308248519897461
    9. 'var' → logprob: -10.308248519897461
    10. 'list' → logprob: -10.808248519897461

Token 859: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0034185550175607204
    2. ' idx' → logprob: -5.753418445587158
    3. '   ' → logprob: -8.628418922424316
    4. 'var' → logprob: -10.503418922424316
    5. 'list' → logprob: -10.878418922424316
    6. '```' → logprob: -12.253418922424316
    7. 'current' → logprob: -12.378418922424316
    8. '	idx' → logprob: -13.128418922424316
    9. '
' → logprob: -14.128418922424316
    10. '_idx' → logprob: -14.128418922424316

Token 860: '_leaf' (ID: 96627)
  Prédit: '_leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_leaf' → logprob: -0.027023201808333397
    2. '_node' → logprob: -4.1520233154296875
    3. '_current' → logprob: -4.5270233154296875
    4. 'leaf' → logprob: -10.527023315429688
    5. '_cur' → logprob: -10.652023315429688
    6. '_curr' → logprob: -10.652023315429688
    7. 'node' → logprob: -11.277023315429688
    8. 'current' → logprob: -11.402023315429688
    9. '_leave' → logprob: -12.402023315429688
    10. '_last' → logprob: -12.652023315429688

Token 861: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5766558051109314
    2. ' =' → logprob: -0.8266558051109314
    3. '_' → logprob: -7.701655864715576
    4. '_node' → logprob: -9.451655387878418
    5. '_=' → logprob: -9.826655387878418
    6. '_leaf' → logprob: -10.326655387878418
    7. '_stack' → logprob: -10.451655387878418
    8. '   ' → logprob: -10.576655387878418
    9. '=node' → logprob: -11.326655387878418
    10. '=list' → logprob: -11.451655387878418

Token 862: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.008615161292254925
    2. ' list' → logprob: -4.758615016937256
    3. 'pop' → logprob: -14.383615493774414
    4. '   ' → logprob: -20.383615493774414
    5. '_list' → logprob: -21.133615493774414
    6. ' pop' → logprob: -21.133615493774414
    7. '	list' → logprob: -21.383615493774414
    8. 'List' → logprob: -22.258615493774414
    9. '=list' → logprob: -22.258615493774414
    10. 'lst' → logprob: -22.508615493774414

Token 863: '_leaf' (ID: 96627)
  Prédit: '_leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_leaf' → logprob: -3.292907877039397e-06
    2. '_node' → logprob: -13.50000286102295
    3. 'leaf' → logprob: -13.75000286102295
    4. '```' → logprob: -15.37500286102295
    5. '   ' → logprob: -15.62500286102295
    6. '_leave' → logprob: -15.87500286102295
    7. '_pop' → logprob: -16.125003814697266
    8. '
' → logprob: -16.625003814697266
    9. 'Leaf' → logprob: -16.875003814697266
    10. 'pop' → logprob: -17.500003814697266

Token 864: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.3980066180229187
    2. '_leaf' → logprob: -1.1480066776275635
    3. 'pop' → logprob: -5.023006439208984
    4. '_pop' → logprob: -6.148006439208984
    5. '   ' → logprob: -7.273006439208984
    6. '.pop' → logprob: -7.273006439208984
    7. 'stack' → logprob: -8.398006439208984
    8. '_node' → logprob: -8.523006439208984
    9. 'leaf' → logprob: -8.648006439208984
    10. '=' → logprob: -9.273006439208984

Token 865: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.2303621470928192
    2. '=' → logprob: -1.7303621768951416
    3. ' =' → logprob: -3.6053621768951416
    4. 'pop' → logprob: -6.9803619384765625
    5. '_pop' → logprob: -8.230361938476562
    6. '   ' → logprob: -9.105361938476562
    7. '=list' → logprob: -11.105361938476562
    8. ' pop' → logprob: -11.605361938476562
    9. '.' → logprob: -12.105361938476562
    10. '	pop' → logprob: -12.480361938476562

Token 866: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08899793028831482
    2. '()
' → logprob: -2.4639978408813477
    3. '   ' → logprob: -10.588997840881348
    4. ')' → logprob: -11.338997840881348
    5. '(' → logprob: -11.463997840881348
    6. ')
' → logprob: -12.713997840881348
    7. ' ()' → logprob: -13.213997840881348
    8. '()
' → logprob: -13.838997840881348
    9. '
' → logprob: -13.963997840881348
    10. '(
' → logprob: -14.088997840881348

Token 867: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12399441748857498
    2. '   ' → logprob: -2.3739943504333496
    3. 'list' → logprob: -4.12399435043335
    4. 'for' → logprob: -5.12399435043335
    5. ' if' → logprob: -6.74899435043335
    6. '```' → logprob: -9.373994827270508
    7. 'while' → logprob: -9.623994827270508
    8. ' list' → logprob: -10.748994827270508
    9. '    
' → logprob: -11.498994827270508
    10. ' for' → logprob: -11.623994827270508

Token 868: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0640343651175499
    2. 'list' → logprob: -2.8140344619750977
    3. 'for' → logprob: -6.439034461975098
    4. '   ' → logprob: -8.314034461975098
    5. 'while' → logprob: -8.564034461975098
    6. 'idx' → logprob: -11.439034461975098
    7. ' if' → logprob: -12.314034461975098
    8. 'node' → logprob: -12.564034461975098
    9. 'var' → logprob: -12.564034461975098
    10. '```' → logprob: -13.189034461975098

Token 869: ' list' (ID: 1562)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4679115414619446
    2. 'list' → logprob: -1.2179114818572998
    3. ' not' → logprob: -2.5929114818573
    4. ' list' → logprob: -5.842911720275879
    5. '   ' → logprob: -8.967911720275879
    6. 'idx' → logprob: -12.592911720275879
    7. 'len' → logprob: -12.717911720275879
    8. ' ' → logprob: -13.842911720275879
    9. '	not' → logprob: -13.967911720275879
    10. '(list' → logprob: -14.092911720275879

Token 870: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0005753128207288682
    2. '_leaf' → logprob: -7.500575542449951
    3. '_' → logprob: -11.375575065612793
    4. 'node' → logprob: -11.875575065612793
    5. '_result' → logprob: -14.000575065612793
    6. '_used' → logprob: -14.125575065612793
    7. '```' → logprob: -14.750575065612793
    8. '_
' → logprob: -15.375575065612793
    9. '_not' → logprob: -15.625575065612793
    10. ' _' → logprob: -16.25057601928711

Token 871: '_de' (ID: 5047)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0002631238894537091
    2. 'used' → logprob: -8.375263214111328
    3. '_' → logprob: -10.500263214111328
    4. '_leaf' → logprob: -12.500263214111328
    5. '_USED' → logprob: -14.750263214111328
    6. '```' → logprob: -15.375263214111328
    7. 'Used' → logprob: -15.875263214111328
    8. '_unused' → logprob: -16.000263214111328
    9. '_node' → logprob: -16.375263214111328
    10. 'visited' → logprob: -16.500263214111328

Token 872: 'grees' (ID: 86997)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9150597453117371
    2. 'used' → logprob: -1.0400598049163818
    3. '_used' → logprob: -1.6650598049163818
    4. '_' → logprob: -4.040059566497803
    5. 'ad' → logprob: -4.915059566497803
    6. 'leted' → logprob: -5.290059566497803
    7. 'd' → logprob: -5.540059566497803
    8. '```' → logprob: -5.665059566497803
    9. 'visited' → logprob: -5.915059566497803
    10. 'sed' → logprob: -5.915059566497803

Token 873: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.320199877838604e-07
    2. 'idx' → logprob: -16.25
    3. '   ' → logprob: -16.625
    4. ' idx' → logprob: -17.125
    5. '```' → logprob: -17.5
    6. ' [' → logprob: -17.625
    7. '	idx' → logprob: -17.875
    8. '[' → logprob: -18.0
    9. '==' → logprob: -18.0
    10. '
' → logprob: -19.125

Token 874: '_leaf' (ID: 96627)
  Prédit: '_leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_leaf' → logprob: -2.057743949990254e-05
    2. 'leaf' → logprob: -10.875020980834961
    3. '_used' → logprob: -13.625020980834961
    4. '_leave' → logprob: -15.875020980834961
    5. '```' → logprob: -15.875020980834961
    6. 'Leaf' → logprob: -16.37502098083496
    7. '_' → logprob: -16.75002098083496
    8. '   ' → logprob: -17.37502098083496
    9. '_node' → logprob: -17.50002098083496
    10. 'used' → logprob: -17.87502098083496

Token 875: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5960809588432312
    2. ']' → logprob: -1.221081018447876
    3. '==' → logprob: -2.346081018447876
    4. ']==' → logprob: -2.846081018447876
    5. '```' → logprob: -9.596080780029297
    6. '[' → logprob: -9.846080780029297
    7. ' ]' → logprob: -10.096080780029297
    8. '   ' → logprob: -10.471080780029297
    9. ' <=' → logprob: -10.596080780029297
    10. ')' → logprob: -11.596080780029297

Token 876: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.007186780218034983
    2. ' ==' → logprob: -5.1321868896484375
    3. '!=' → logprob: -7.1321868896484375
    4. '<=' → logprob: -7.7571868896484375
    5. ']==' → logprob: -11.882186889648438
    6. '```' → logprob: -12.007186889648438
    7. '==
' → logprob: -12.132186889648438
    8. '<' → logprob: -13.007186889648438
    9. ' !=' → logprob: -13.007186889648438
    10. '=' → logprob: -13.007186889648438

Token 877: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000474521511932835
    2. ' ' → logprob: -7.750474452972412
    3. '1' → logprob: -10.12547492980957
    4. '   ' → logprob: -13.00047492980957
    5. '```' → logprob: -14.12547492980957
    6. '=' → logprob: -15.12547492980957
    7. '>' → logprob: -15.87547492980957
    8. '
' → logprob: -16.00047492980957
    9. '  ' → logprob: -16.93797492980957
    10. ')' → logprob: -17.56297492980957

Token 878: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019294669618830085
    2. '1' → logprob: -6.25192928314209
    3. ' ' → logprob: -14.50192928314209
    4. '```' → logprob: -15.25192928314209
    5. '
' → logprob: -15.75192928314209
    6. '   ' → logprob: -17.814430236816406
    7. '``' → logprob: -18.001930236816406
    8. '=' → logprob: -18.001930236816406
    9. '۰' → logprob: -18.126930236816406
    10. '==' → logprob: -18.564430236816406

Token 879: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4923505187034607
    2. ':
' → logprob: -1.4923505783081055
    3. '       ' → logprob: -1.9923505783081055
    4. '   ' → logprob: -3.7423505783081055
    5. ' or' → logprob: -5.8673505783081055
    6. ' and' → logprob: -7.4923505783081055
    7. ':return' → logprob: -8.367350578308105
    8. ' continue' → logprob: -9.742350578308105
    9. '	continue' → logprob: -9.742350578308105
    10. '<|end|>' → logprob: -9.992350578308105

Token 880: '       ' (ID: 309)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.4653488099575043
    2. '   ' → logprob: -1.0903488397598267
    3. '       ' → logprob: -3.590348720550537
    4. 'continue' → logprob: -5.340348720550537
    5. '	continue' → logprob: -5.840348720550537
    6. ':' → logprob: -8.340349197387695
    7. ':
' → logprob: -8.465349197387695
    8. ' continues' → logprob: -8.965349197387695
    9. '_continue' → logprob: -10.590349197387695
    10. '
' → logprob: -11.215349197387695

Token 881: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.07086005806922913
    2. '   ' → logprob: -3.0708601474761963
    3. ' continue' → logprob: -3.8208601474761963
    4. '	continue' → logprob: -9.195859909057617
    5. '```' → logprob: -12.320859909057617
    6. 'if' → logprob: -12.570859909057617
    7. 'contin' → logprob: -13.070859909057617
    8. 'list' → logprob: -13.195859909057617
    9. ' ' → logprob: -13.445859909057617
    10. '       ' → logprob: -13.820859909057617

Token 882: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19592556357383728
    2. ' for' → logprob: -2.32092547416687
    3. 'for' → logprob: -3.44592547416687
    4. 'idx' → logprob: -3.94592547416687
    5. ' if' → logprob: -4.695925712585449
    6. '
' → logprob: -5.195925712585449
    7. 'if' → logprob: -5.320925712585449
    8. ' idx' → logprob: -5.320925712585449
    9. '    
' → logprob: -6.320925712585449
    10. '```' → logprob: -7.445925712585449

Token 883: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6821137070655823
    2. 'for' → logprob: -0.8071137070655823
    3. ' for' → logprob: -3.6821136474609375
    4. 'idx' → logprob: -3.9321136474609375
    5. 'if' → logprob: -5.9321136474609375
    6. ' idx' → logprob: -8.182113647460938
    7. '    
' → logprob: -8.807113647460938
    8. '	for' → logprob: -9.307113647460938
    9. 'list' → logprob: -9.557113647460938
    10. '```' → logprob: -9.682113647460938

Token 884: ' assert' (ID: 3696)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.007503698114305735
    2. 'for' → logprob: -5.007503509521484
    3. '   ' → logprob: -8.257503509521484
    4. ' idx' → logprob: -8.632503509521484
    5. 'var' → logprob: -9.382503509521484
    6. '(idx' → logprob: -9.382503509521484
    7. 'list' → logprob: -9.757503509521484
    8. 'parent' → logprob: -10.632503509521484
    9. 'neighbor' → logprob: -10.632503509521484
    10. 'val' → logprob: -11.382503509521484

Token 885: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.017344923689961433
    2. ' list' → logprob: -4.267344951629639
    3. 'len' → logprob: -5.892344951629639
    4. 'not' → logprob: -9.01734447479248
    5. ' len' → logprob: -9.26734447479248
    6. '   ' → logprob: -9.89234447479248
    7. 'var' → logprob: -9.89234447479248
    8. '(list' → logprob: -10.51734447479248
    9. ' not' → logprob: -10.64234447479248
    10. '
' → logprob: -11.26734447479248

Token 886: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -4.537180211627856e-05
    2. '_leaf' → logprob: -10.125045776367188
    3. '_adj' → logprob: -13.250045776367188
    4. 'node' → logprob: -13.750045776367188
    5. '_result' → logprob: -14.500045776367188
    6. '_' → logprob: -14.625045776367188
    7. '```' → logprob: -14.875045776367188
    8. '
' → logprob: -15.250045776367188
    9. '_
' → logprob: -15.875045776367188
    10. '_nodes' → logprob: -16.250045776367188

Token 887: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.014175145886838436
    2. '_used' → logprob: -4.264174938201904
    3. '_degree' → logprob: -12.139175415039062
    4. 'degrees' → logprob: -12.889175415039062
    5. '_node' → logprob: -13.014175415039062
    6. '_' → logprob: -14.014175415039062
    7. 'used' → logprob: -14.889175415039062
    8. '_leaf' → logprob: -15.764175415039062
    9. '```' → logprob: -16.514175415039062
    10. '_deg' → logprob: -17.014175415039062

Token 888: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -1.2233183042553719e-05
    2. 'degrees' → logprob: -12.000012397766113
    3. 'g' → logprob: -12.500012397766113
    4. 'eg' → logprob: -13.500012397766113
    5. 'gree' → logprob: -15.125012397766113
    6. 'gress' → logprob: -15.375012397766113
    7. '```' → logprob: -15.375012397766113
    8. 'gre' → logprob: -15.875012397766113
    9. '[' → logprob: -18.000011444091797
    10. '``' → logprob: -18.125011444091797

Token 889: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00011105302110081539
    2. '[' → logprob: -9.250110626220703
    3. '```' → logprob: -11.750110626220703
    4. '[id' → logprob: -13.625110626220703
    5. '!=' → logprob: -14.125110626220703
    6. '[index' → logprob: -14.125110626220703
    7. '[int' → logprob: -14.375110626220703
    8. '>' → logprob: -14.625110626220703
    9. '[
' → logprob: -14.875110626220703
    10. '(idx' → logprob: -15.000110626220703

Token 890: '_leaf' (ID: 96627)
  Prédit: '_leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_leaf' → logprob: -2.5107177862082608e-05
    2. '[' → logprob: -11.875024795532227
    3. 'leaf' → logprob: -12.000024795532227
    4. '```' → logprob: -12.125024795532227
    5. '_' → logprob: -12.500024795532227
    6. '_idx' → logprob: -14.500024795532227
    7. 'Leaf' → logprob: -14.500024795532227
    8. '[_' → logprob: -14.875024795532227
    9. '[idx' → logprob: -15.375024795532227
    10. '   ' → logprob: -15.750024795532227

Token 891: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09530691057443619
    2. '>' → logprob: -3.095306873321533
    3. ' ==' → logprob: -4.470306873321533
    4. '==' → logprob: -4.595306873321533
    5. ')' → logprob: -4.720306873321533
    6. ']==' → logprob: -4.970306873321533
    7. ' >' → logprob: -5.470306873321533
    8. '[idx' → logprob: -6.720306873321533
    9. ']>' → logprob: -6.845306873321533
    10. '>=' → logprob: -7.595306873321533

Token 892: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25335097312927246
    2. ' ==' → logprob: -1.5033509731292725
    3. '>' → logprob: -7.378351211547852
    4. '>=' → logprob: -7.378351211547852
    5. ' >=' → logprob: -9.128351211547852
    6. ' >' → logprob: -10.378351211547852
    7. '1' → logprob: -11.878351211547852
    8. '[' → logprob: -12.128351211547852
    9. ')' → logprob: -12.253351211547852
    10. '<=' → logprob: -12.378351211547852

Token 893: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.375009536743164
    4. '```' → logprob: -18.625009536743164
    5. '
' → logprob: -18.750009536743164
    6. '  ' → logprob: -19.250009536743164
    7. '=' → logprob: -20.500009536743164
    8. '۱' → logprob: -20.875009536743164
    9. '    ' → logprob: -21.000009536743164
    10. '     ' → logprob: -21.562509536743164

Token 894: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -18.875
    4. '
' → logprob: -19.0
    5. '   ' → logprob: -20.0
    6. '۱' → logprob: -20.5
    7. '=' → logprob: -20.625
    8. '' → logprob: -20.75
    9. '[' → logprob: -20.875
    10. '﻿' → logprob: -21.5

Token 895: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04834478348493576
    2. '
' → logprob: -3.673344850540161
    3. '    
' → logprob: -4.673344612121582
    4. 'idx' → logprob: -4.923344612121582
    5. ' for' → logprob: -7.048344612121582
    6. ',' → logprob: -7.173344612121582
    7. 'var' → logprob: -7.173344612121582
    8. ' 
' → logprob: -7.548344612121582
    9. '  
' → logprob: -7.923344612121582
    10. 'for' → logprob: -7.923344612121582

Token 896: '   ' (ID: 271)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4874376952648163
    2. '   ' → logprob: -1.3624377250671387
    3. ' idx' → logprob: -2.9874377250671387
    4. ' for' → logprob: -3.2374377250671387
    5. 'for' → logprob: -3.3624377250671387
    6. 'var' → logprob: -6.487437725067139
    7. '    
' → logprob: -6.737437725067139
    8. 'parent' → logprob: -7.112437725067139
    9. '	idx' → logprob: -7.612437725067139
    10. '_idx' → logprob: -8.61243724822998

Token 897: ' if' (ID: 538)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.019379185512661934
    2. 'for' → logprob: -4.144379138946533
    3. 'neighbor' → logprob: -6.769379138946533
    4. '(idx' → logprob: -7.144379138946533
    5. 'var' → logprob: -7.519379138946533
    6. 'val' → logprob: -8.019379615783691
    7. 'if' (adapté à ' if') → logprob: -8.144379615783691
    8. 'list' → logprob: -9.894379615783691
    9. 'node' → logprob: -10.269379615783691
    10. ' idx' → logprob: -10.394379615783691

Token 898: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.026296235620975494
    2. ' list' → logprob: -4.276296138763428
    3. 'not' → logprob: -4.651296138763428
    4. ' not' → logprob: -6.026296138763428
    5. '   ' → logprob: -9.651296615600586
    6. 'len' → logprob: -11.901296615600586
    7. ' ' → logprob: -12.026296615600586
    8. 'idx' → logprob: -12.401296615600586
    9. '(list' → logprob: -13.026296615600586
    10. '  ' → logprob: -13.026296615600586

Token 899: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0007044489029794931
    2. '_leaf' → logprob: -7.375704288482666
    3. 'node' → logprob: -10.375704765319824
    4. '_result' → logprob: -10.875704765319824
    5. '_val' → logprob: -11.250704765319824
    6. '```' → logprob: -13.000704765319824
    7. '_' → logprob: -13.125704765319824
    8. '_pair' → logprob: -13.750704765319824
    9. '_used' → logprob: -13.875704765319824
    10. '_list' → logprob: -14.000704765319824

Token 900: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.3883630931377411
    2. '_par' → logprob: -1.1383631229400635
    3. '_node' → logprob: -6.888362884521484
    4. '_leaf' → logprob: -8.013362884521484
    5. '_de' → logprob: -9.263362884521484
    6. '_' → logprob: -10.388362884521484
    7. 'used' → logprob: -11.888362884521484
    8. '_le' → logprob: -13.638362884521484
    9. 'par' → logprob: -13.763362884521484
    10. '_unused' → logprob: -13.763362884521484

Token 901: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0006444069440476596
    2. '[' → logprob: -7.375644207000732
    3. ' [' → logprob: -11.37564468383789
    4. '   ' → logprob: -13.00064468383789
    5. '[id' → logprob: -13.87564468383789
    6. '```' → logprob: -14.37564468383789
    7. '[
' → logprob: -14.75064468383789
    8. ' ' → logprob: -14.87564468383789
    9. '[index' → logprob: -15.12564468383789
    10. '(idx' → logprob: -15.25064468383789

Token 902: '_leaf' (ID: 96627)
  Prédit: '_leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_leaf' → logprob: -4.842555426876061e-06
    2. 'leaf' → logprob: -12.375004768371582
    3. '_' → logprob: -15.375004768371582
    4. '```' → logprob: -15.500004768371582
    5. '_leave' → logprob: -16.6250057220459
    6. 'Leaf' → logprob: -16.7500057220459
    7. '_le' → logprob: -17.8750057220459
    8. '__' → logprob: -18.7500057220459
    9. ' leaf' → logprob: -19.1250057220459
    10. '   ' → logprob: -19.6250057220459

Token 903: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.1016840934753418
    2. ':' → logprob: -1.4766840934753418
    3. ']' → logprob: -2.226684093475342
    4. ']:' → logprob: -2.351684093475342
    5. ' ==' → logprob: -2.476684093475342
    6. ']:
' → logprob: -2.851684093475342
    7. '==' → logprob: -2.976684093475342
    8. ']==' → logprob: -4.601684093475342
    9. ' ' → logprob: -4.726684093475342
    10. '   ' → logprob: -4.976684093475342

Token 904: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42117777466773987
    2. ':
' → logprob: -1.5461777448654175
    3. '   ' → logprob: -3.171177864074707
    4. ' =' → logprob: -3.546177864074707
    5. ':' → logprob: -3.671177864074707
    6. ' ==' → logprob: -4.171177864074707
    7. '=' → logprob: -5.046177864074707
    8. '==' → logprob: -5.046177864074707
    9. ' False' → logprob: -6.421177864074707
    10. '    ' → logprob: -7.046177864074707

Token 905: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.633056640625
    2. ' continue' → logprob: -1.133056640625
    3. '   ' → logprob: -2.008056640625
    4. 'list' → logprob: -4.633056640625
    5. ' list' → logprob: -6.258056640625
    6. '	continue' → logprob: -7.258056640625
    7. '       ' → logprob: -8.633056640625
    8. '```' → logprob: -9.508056640625
    9. 'idx' → logprob: -10.508056640625
    10. 'for' → logprob: -10.883056640625

Token 906: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3083692789077759
    2. 'idx' → logprob: -1.5583692789077759
    3. ' idx' → logprob: -3.6833691596984863
    4. 'for' → logprob: -4.558369159698486
    5. ' for' → logprob: -4.558369159698486
    6. '    
' → logprob: -5.933369159698486
    7. 'parent' → logprob: -6.558369159698486
    8. 'list' → logprob: -6.933369159698486
    9. 'var' → logprob: -7.433369159698486
    10. '```' → logprob: -7.558369159698486

Token 907: '   ' (ID: 271)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4853566288948059
    2. 'for' → logprob: -1.4853565692901611
    3. '   ' → logprob: -2.235356569290161
    4. ' for' → logprob: -3.485356569290161
    5. 'list' → logprob: -4.48535680770874
    6. ' idx' → logprob: -4.98535680770874
    7. ' list' → logprob: -7.61035680770874
    8. '    
' → logprob: -7.73535680770874
    9. '```' → logprob: -7.86035680770874
    10. '_idx' → logprob: -8.735356330871582

Token 908: ' list' (ID: 1562)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.08213324099779129
    2. 'for' → logprob: -2.9571332931518555
    3. 'list' (adapté à ' list') → logprob: -3.8321332931518555
    4. 'if' → logprob: -6.5821332931518555
    5. 'var' → logprob: -6.5821332931518555
    6. 'neighbor' → logprob: -7.3321332931518555
    7. 'parent' → logprob: -7.8321332931518555
    8. '#' → logprob: -7.9571332931518555
    9. 'current' → logprob: -8.207133293151855
    10. 'val' → logprob: -8.457133293151855

Token 909: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.004105827305465937
    2. '_leaf' → logprob: -5.629106044769287
    3. '_used' → logprob: -8.129105567932129
    4. '_result' → logprob: -8.879105567932129
    5. '_' → logprob: -10.004105567932129
    6. '```' → logprob: -12.254105567932129
    7. '_stack' → logprob: -12.754105567932129
    8. '_edge' → logprob: -13.254105567932129
    9. '_
' → logprob: -13.629105567932129
    10. '_user' → logprob: -13.629105567932129

Token 910: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -1.1279553291387856e-05
    2. '_user' → logprob: -12.625011444091797
    3. '_usage' → logprob: -13.250011444091797
    4. 'used' → logprob: -13.250011444091797
    5. '_use' → logprob: -13.500011444091797
    6. '_USED' → logprob: -14.125011444091797
    7. '_unused' → logprob: -14.375011444091797
    8. 'Used' → logprob: -14.875011444091797
    9. '```' → logprob: -14.875011444091797
    10. '_node' → logprob: -15.750011444091797

Token 911: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00019150081789121032
    2. '[' → logprob: -8.625191688537598
    3. '[list' → logprob: -12.250191688537598
    4. '=' → logprob: -13.750191688537598
    5. '[id' → logprob: -13.750191688537598
    6. '```' → logprob: -13.875191688537598
    7. '[index' → logprob: -14.125191688537598
    8. ' [' → logprob: -14.500191688537598
    9. '_idx' → logprob: -14.625191688537598
    10. '[:]' → logprob: -14.875191688537598

Token 912: '_leaf' (ID: 96627)
  Prédit: '_leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_leaf' → logprob: -0.0022721777204424143
    2. '_used' → logprob: -6.252272129058838
    3. '[' → logprob: -8.877272605895996
    4. 'leaf' → logprob: -9.127272605895996
    5. 'used' → logprob: -10.502272605895996
    6. 'Leaf' → logprob: -11.502272605895996
    7. '   ' → logprob: -11.627272605895996
    8. '_le' → logprob: -11.752272605895996
    9. '```' → logprob: -12.002272605895996
    10. '_leave' → logprob: -12.752272605895996

Token 913: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.137703076004982
    2. '=' → logprob: -2.1377031803131104
    3. ']=' → logprob: -4.637702941894531
    4. ' =' → logprob: -7.012702941894531
    5. '=True' → logprob: -9.887702941894531
    6. '[idx' → logprob: -10.137702941894531
    7. '   ' → logprob: -10.762702941894531
    8. '[' → logprob: -11.262702941894531
    9. ' ]' → logprob: -12.762702941894531
    10. ')' → logprob: -12.887702941894531

Token 914: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.9266199160483666e-05
    2. ' =' → logprob: -10.875019073486328
    3. '=True' → logprob: -15.250019073486328
    4. '.=' → logprob: -18.000019073486328
    5. ']=' → logprob: -18.500019073486328
    6. '[' → logprob: -19.000019073486328
    7. '=
' → logprob: -19.625019073486328
    8. '+=' → logprob: -20.125019073486328
    9. ']' → logprob: -20.250019073486328
    10. '```' → logprob: -20.750019073486328

Token 915: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.547789674485102e-05
    2. ' True' → logprob: -10.250035285949707
    3. 'False' → logprob: -16.500036239624023
    4. '   ' → logprob: -18.625036239624023
    5. '(True' → logprob: -18.875036239624023
    6. '1' → logprob: -19.500036239624023
    7. '=True' → logprob: -21.250036239624023
    8. '[' → logprob: -21.500036239624023
    9. 'true' → logprob: -22.500036239624023
    10. '       ' → logprob: -23.125036239624023

Token 916: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.099998839199543
    2. ' for' → logprob: -3.099998950958252
    3. 'for' → logprob: -3.724998950958252
    4. '    
' → logprob: -4.224998950958252
    5. '
' → logprob: -5.099998950958252
    6. 'idx' → logprob: -5.599998950958252
    7. 'if' → logprob: -8.099998474121094
    8. ' 
' → logprob: -8.474998474121094
    9. ' idx' → logprob: -8.599998474121094
    10. 'var' → logprob: -8.974998474121094

Token 917: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5180080533027649
    2. '   ' → logprob: -1.0180079936981201
    3. 'idx' → logprob: -3.64300799369812
    4. ' for' → logprob: -4.268008232116699
    5. '	for' → logprob: -6.768008232116699
    6. '```' → logprob: -7.018008232116699
    7. '    
' → logprob: -8.1430082321167
    8. 'while' → logprob: -8.7680082321167
    9. '   ' → logprob: -9.6430082321167
    10. '	idx' → logprob: -9.6430082321167

Token 918: ' list' (ID: 1562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1093539148569107
    2. 'idx' → logprob: -2.359354019165039
    3. '(idx' → logprob: -5.234354019165039
    4. 'neighbor' → logprob: -6.734354019165039
    5. 'found' → logprob: -7.484354019165039
    6. 'var' → logprob: -7.484354019165039
    7. 'if' → logprob: -7.859354019165039
    8. 'neighbors' → logprob: -8.234354019165039
    9. 'val' → logprob: -8.859354019165039
    10. 'adj' → logprob: -9.359354019165039

Token 919: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.09325752407312393
    2. '_adj' → logprob: -3.593257427215576
    3. '_leaf' → logprob: -3.718257427215576
    4. '_stack' → logprob: -4.093257427215576
    5. '_result' → logprob: -4.593257427215576
    6. '_edge' → logprob: -5.468257427215576
    7. '_neighbor' → logprob: -6.718257427215576
    8. 'node' → logprob: -6.968257427215576
    9. '_edges' → logprob: -7.468257427215576
    10. '_current' → logprob: -7.468257427215576

Token 920: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.16537964344024658
    2. 'degrees' → logprob: -1.9153796434402466
    3. 'de' → logprob: -5.790379524230957
    4. 'used' → logprob: -7.290379524230957
    5. '_used' → logprob: -7.665379524230957
    6. '_par' → logprob: -8.165379524230957
    7. 'degree' → logprob: -8.290379524230957
    8. '_degree' → logprob: -9.040379524230957
    9. 'par' → logprob: -9.040379524230957
    10. 'parent' → logprob: -10.915379524230957

Token 921: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -7.107425062713446e-06
    2. 'g' → logprob: -12.750006675720215
    3. 'degrees' → logprob: -13.375006675720215
    4. 'gre' → logprob: -14.000006675720215
    5. 'eg' → logprob: -14.125006675720215
    6. 'gress' → logprob: -14.625006675720215
    7. 'gree' → logprob: -15.875006675720215
    8. 'gr' → logprob: -16.25000762939453
    9. '```' → logprob: -16.87500762939453
    10. 'GRE' → logprob: -17.00000762939453

Token 922: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.11842706054449081
    2. '[list' → logprob: -2.243427038192749
    3. 'idx' → logprob: -5.868427276611328
    4. '[' → logprob: -7.243427276611328
    5. '_idx' → logprob: -7.243427276611328
    6. 'list' → logprob: -7.868427276611328
    7. '=' → logprob: -8.868427276611328
    8. '=list' → logprob: -9.243427276611328
    9. '[next' → logprob: -9.368427276611328
    10. '```' → logprob: -9.368427276611328

Token 923: '_leaf' (ID: 96627)
  Prédit: '_leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_leaf' → logprob: -0.03174296393990517
    2. '[idx' → logprob: -3.781743049621582
    3. '[' → logprob: -5.781743049621582
    4. 'idx' → logprob: -6.156743049621582
    5. '_idx' → logprob: -6.281743049621582
    6. '[_' → logprob: -7.406743049621582
    7. 'leaf' → logprob: -8.031743049621582
    8. '```' → logprob: -9.531743049621582
    9. 'Leaf' → logprob: -9.656743049621582
    10. '   ' → logprob: -10.281743049621582

Token 924: ']' (ID: 60)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.5397741794586182
    2. '-=' → logprob: -0.9147741794586182
    3. '=' → logprob: -4.789773941040039
    4. '-' → logprob: -5.414773941040039
    5. ']' → logprob: -6.289773941040039
    6. '   ' → logprob: -6.664773941040039
    7. ')' → logprob: -8.414773941040039
    8. ' =' → logprob: -8.914773941040039
    9. '[' → logprob: -9.289773941040039
    10. ' -' → logprob: -9.914773941040039

Token 925: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.009883936494588852
    2. ' -=' → logprob: -5.009883880615234
    3. '=' → logprob: -5.759883880615234
    4. '-' → logprob: -11.884883880615234
    5. ' =' → logprob: -13.009883880615234
    6. '+=' → logprob: -13.259883880615234
    7. '   ' → logprob: -14.634883880615234
    8. '0' → logprob: -15.259883880615234
    9. '[' → logprob: -15.259883880615234
    10. '```' → logprob: -15.634883880615234

Token 926: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -15.625000953674316
    4. '۰' → logprob: -20.0
    5. '```' → logprob: -20.625
    6. '    ' → logprob: -21.0
    7. '  ' → logprob: -21.125
    8. '-' → logprob: -21.125
    9. '０' → logprob: -21.375
    10. '=' → logprob: -21.5

Token 927: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -16.5
    4. '-' → logprob: -16.875
    5. '```' → logprob: -19.125
    6. '1' → logprob: -19.25
    7. '۰' → logprob: -19.5
    8. '=' → logprob: -19.625
    9. '00' → logprob: -19.625
    10. '000' → logprob: -20.1875

Token 928: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05829896032810211
    2. 'for' → logprob: -3.8082990646362305
    3. ' for' → logprob: -4.3082990646362305
    4. '    
' → logprob: -4.8082990646362305
    5. 'idx' → logprob: -5.0582990646362305
    6. '
' → logprob: -5.5582990646362305
    7. '	for' → logprob: -7.3082990646362305
    8. ' 
' → logprob: -7.9332990646362305
    9. '\t' → logprob: -7.9332990646362305
    10. ' idx' → logprob: -8.43329906463623

Token 929: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.729092538356781
    2. 'for' → logprob: -0.854092538356781
    3. 'idx' → logprob: -2.729092597961426
    4. '	for' → logprob: -4.354092597961426
    5. ' for' → logprob: -4.729092597961426
    6. '```' → logprob: -6.104092597961426
    7. '	idx' → logprob: -6.229092597961426
    8. '   ' → logprob: -8.104092597961426
    9. 'while' → logprob: -8.729092597961426
    10. ' idx' → logprob: -8.979092597961426

Token 930: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.18029743432998657
    2. 'idx' → logprob: -1.8052973747253418
    3. 'while' → logprob: -8.6802978515625
    4. '(idx' → logprob: -8.6802978515625
    5. 'neighbor' → logprob: -9.5552978515625
    6. 'if' → logprob: -9.8052978515625
    7. 'var' → logprob: -10.5552978515625
    8. 'neighbors' → logprob: -11.4302978515625
    9. 'adj' → logprob: -11.9302978515625
    10. ' for' → logprob: -12.0552978515625

Token 931: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.001790374517440796
    2. ' idx' → logprob: -6.626790523529053
    3. '(idx' → logprob: -8.251790046691895
    4. 'neighbor' → logprob: -8.626790046691895
    5. '   ' → logprob: -11.501790046691895
    6. 'adj' → logprob: -12.126790046691895
    7. '(' → logprob: -12.626790046691895
    8. ' (' → logprob: -12.751790046691895
    9. ' neighbor' → logprob: -14.251790046691895
    10. 'nbr' → logprob: -14.501790046691895

Token 932: '_neighbor' (ID: 177120)
  Prédit: '_neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.016475588083267212
    2. '_to' → logprob: -5.016475677490234
    3. '_node' → logprob: -5.516475677490234
    4. '_,' → logprob: -6.141475677490234
    5. ',' → logprob: -6.391475677490234
    6. 'neighbor' → logprob: -6.891475677490234
    7. '_adj' → logprob: -8.016475677490234
    8. '_edge' → logprob: -8.266475677490234
    9. 'to' → logprob: -9.391475677490234
    10. '_ne' → logprob: -9.766475677490234

Token 933: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.742448022123426e-05
    2. ' ,' → logprob: -10.000067710876465
    3. 'neighbor' → logprob: -12.375067710876465
    4. 'idx' → logprob: -12.500067710876465
    5. ' in' → logprob: -13.125067710876465
    6. 'in' → logprob: -13.125067710876465
    7. '_,' → logprob: -13.250067710876465
    8. '   ' → logprob: -13.500067710876465
    9. '_neighbor' → logprob: -13.625067710876465
    10. ',
' → logprob: -14.375067710876465

Token 934: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4740820825099945
    2. ' idx' → logprob: -0.9740821123123169
    3. '_idx' → logprob: -12.599081993103027
    4. '	idx' → logprob: -13.724081993103027
    5. '(idx' → logprob: -15.599081993103027
    6. 'id' → logprob: -15.849081993103027
    7. '_' → logprob: -16.599082946777344
    8. ' _' → logprob: -16.849082946777344
    9. 'index' → logprob: -16.974082946777344
    10. '[idx' → logprob: -17.099082946777344

Token 935: '_edge' (ID: 43226)
  Prédit: '_graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.25366395711898804
    2. '_edge' → logprob: -1.5036640167236328
    3. 'graph' → logprob: -6.878664016723633
    4. 'edge' → logprob: -8.378664016723633
    5. '_edges' → logprob: -9.128664016723633
    6. '_' → logprob: -9.128664016723633
    7. '_neighbor' → logprob: -9.628664016723633
    8. '_adj' → logprob: -10.128664016723633
    9. '_,' → logprob: -10.628664016723633
    10. '   ' → logprob: -10.628664016723633

Token 936: '_label' (ID: 13175)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.011857469566166401
    2. ' in' → logprob: -4.761857509613037
    3. 'id' → logprob: -5.886857509613037
    4. '   ' → logprob: -8.886857032775879
    5. 'in' → logprob: -9.011857032775879
    6. '_' → logprob: -9.136857032775879
    7. '```' → logprob: -10.136857032775879
    8. ',' → logprob: -10.761857032775879
    9. ' _' → logprob: -12.136857032775879
    10. ' id' → logprob: -12.386857032775879

Token 937: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018162349238991737
    2. 'in' → logprob: -4.018162250518799
    3. '	in' → logprob: -12.518162727355957
    4. ' ' → logprob: -12.643162727355957
    5. '   ' → logprob: -13.643162727355957
    6. '_in' → logprob: -14.018162727355957
    7. ' 
' → logprob: -14.643162727355957
    8. ',' → logprob: -14.643162727355957
    9. '  ' → logprob: -14.893162727355957
    10. '    ' → logprob: -15.018162727355957

Token 938: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0619698166847229
    2. ' list' → logprob: -2.811969757080078
    3. 'in' → logprob: -13.686969757080078
    4. '   ' → logprob: -14.936969757080078
    5. '	list' → logprob: -15.186969757080078
    6. '(list' → logprob: -15.436969757080078
    7. ' in' → logprob: -15.686969757080078
    8. ':list' → logprob: -16.561969757080078
    9. '```' → logprob: -17.436969757080078
    10. '_list' → logprob: -17.811969757080078

Token 939: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -4.4656579120783135e-05
    2. 'adj' → logprob: -10.250044822692871
    3. '_ad' → logprob: -13.000044822692871
    4. '[' → logprob: -13.125044822692871
    5. 'Adjacent' → logprob: -13.125044822692871
    6. '```' → logprob: -14.500044822692871
    7. '   ' → logprob: -14.750044822692871
    8. '_neighbor' → logprob: -15.250044822692871
    9. ' adjacent' → logprob: -15.500044822692871
    10. '[node' → logprob: -15.500044822692871

Token 940: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -1.2471589798224159e-05
    2. 'ac' → logprob: -12.375012397766113
    3. 'acency' → logprob: -12.500012397766113
    4. 'adj' → logprob: -13.500012397766113
    5. '_adj' → logprob: -14.000012397766113
    6. 'cent' → logprob: -14.875012397766113
    7. '_neighbor' → logprob: -15.000012397766113
    8. '[' → logprob: -15.250012397766113
    9. '_node' → logprob: -15.750012397766113
    10. 'acenter' → logprob: -15.875012397766113

Token 941: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -9.805981972021982e-05
    2. 'graph' → logprob: -9.25009822845459
    3. '[idx' → logprob: -14.37509822845459
    4. '[' → logprob: -14.87509822845459
    5. '[_' → logprob: -16.000097274780273
    6. 'adj' → logprob: -16.250097274780273
    7. '_GRAPH' → logprob: -16.250097274780273
    8. '```' → logprob: -16.250097274780273
    9. 'Graph' → logprob: -16.625097274780273
    10. 'raph' → logprob: -16.875097274780273

Token 942: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.875001907348633
    3. '   ' → logprob: -14.875001907348633
    4. ' [' → logprob: -15.875001907348633
    5. 'idx' → logprob: -17.250001907348633
    6. '[
' → logprob: -17.500001907348633
    7. '[id' → logprob: -17.625001907348633
    8. ' idx' → logprob: -18.125001907348633
    9. '	idx' → logprob: -18.375001907348633
    10. '       ' → logprob: -18.875001907348633

Token 943: '_leaf' (ID: 96627)
  Prédit: '_leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_leaf' → logprob: -0.0001439459010725841
    2. '_neighbor' → logprob: -9.125144004821777
    3. 'leaf' → logprob: -10.750144004821777
    4. 'Leaf' → logprob: -12.750144004821777
    5. '```' → logprob: -13.125144004821777
    6. '_' → logprob: -13.125144004821777
    7. '_current' → logprob: -13.500144004821777
    8. '_neighbors' → logprob: -13.625144004821777
    9. '[' → logprob: -13.875144004821777
    10. '_node' → logprob: -14.250144004821777

Token 944: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.06732961535453796
    2. ']:
' → logprob: -3.0673296451568604
    3. ':' → logprob: -4.067329406738281
    4. '):' → logprob: -7.442329406738281
    5. '   ' → logprob: -7.817329406738281
    6. '):
' → logprob: -9.192329406738281
    7. '       ' → logprob: -9.317329406738281
    8. ':
' → logprob: -9.442329406738281
    9. ']:
' → logprob: -9.942329406738281
    10. ']' → logprob: -10.067329406738281

Token 945: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10418262332677841
    2. '       ' → logprob: -2.354182720184326
    3. ' if' → logprob: -6.104182720184326
    4. '<|end|>' → logprob: -7.229182720184326
    5. '    
' → logprob: -8.104182243347168
    6. '        
' → logprob: -8.729182243347168
    7. '```' → logprob: -8.854182243347168
    8. '	if' → logprob: -9.104182243347168
    9. 'if' → logprob: -9.729182243347168
    10. ',' → logprob: -10.229182243347168

Token 946: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.39275315403938293
    2. 'list' → logprob: -1.1427531242370605
    3. '   ' → logprob: -5.1427531242370605
    4. ' if' → logprob: -11.892753601074219
    5. '       ' → logprob: -12.267753601074219
    6. '```' → logprob: -12.392753601074219
    7. ' list' → logprob: -12.642753601074219
    8. 'assert' → logprob: -14.017753601074219
    9. '   ' → logprob: -14.267753601074219
    10. 'var' → logprob: -14.642753601074219

Token 947: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06835619360208511
    2. 'not' → logprob: -3.0683562755584717
    3. ' list' → logprob: -4.568356037139893
    4. ' not' → logprob: -4.693356037139893
    5. '   ' → logprob: -10.19335651397705
    6. ' ' → logprob: -14.19335651397705
    7. '(list' → logprob: -14.31835651397705
    8. '	list' → logprob: -14.31835651397705
    9. '       ' → logprob: -14.44335651397705
    10. '$list' → logprob: -14.56835651397705

Token 948: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -9.13388703338569e-06
    2. 'node' → logprob: -11.750009536743164
    3. '_adj' → logprob: -14.750009536743164
    4. 'adj' → logprob: -15.250009536743164
    5. '```' → logprob: -16.125009536743164
    6. '_' → logprob: -16.375009536743164
    7. '_neighbor' → logprob: -16.500009536743164
    8. 'not' → logprob: -16.500009536743164
    9. '_nodes' → logprob: -16.625009536743164
    10. '
' → logprob: -17.250009536743164

Token 949: '_used' (ID: 67016)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.011257074773311615
    2. '_used' → logprob: -4.511257171630859
    3. 'degrees' → logprob: -8.76125717163086
    4. 'used' → logprob: -10.01125717163086
    5. 'de' → logprob: -12.13625717163086
    6. '_degree' → logprob: -13.76125717163086
    7. '_' → logprob: -14.63625717163086
    8. '   ' → logprob: -16.01125717163086
    9. '```' → logprob: -16.01125717163086
    10. '	de' → logprob: -16.13625717163086

Token 950: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.796184723294573e-06
    2. '[' → logprob: -12.375005722045898
    3. '```' → logprob: -14.625005722045898
    4. 'idx' → logprob: -15.125005722045898
    5. '[
' → logprob: -15.625005722045898
    6. '   ' → logprob: -15.750005722045898
    7. '       ' → logprob: -16.2500057220459
    8. '(idx' → logprob: -16.5000057220459
    9. ' [' → logprob: -16.5000057220459
    10. '           ' → logprob: -17.5000057220459

Token 951: '_neighbor' (ID: 177120)
  Prédit: '_neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.007170455064624548
    2. 'neighbor' → logprob: -5.007170677185059
    3. '_leaf' → logprob: -7.882170677185059
    4. '_used' → logprob: -10.382170677185059
    5. '_node' → logprob: -11.757170677185059
    6. '
' → logprob: -11.757170677185059
    7. '_neighbors' → logprob: -12.007170677185059
    8. '_' → logprob: -12.382170677185059
    9. '```' → logprob: -12.382170677185059
    10. '_adj' → logprob: -12.632170677185059

Token 952: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -1.0140142440795898
    2. ':
' → logprob: -1.5140142440795898
    3. '==' → logprob: -1.6390142440795898
    4. ']==' → logprob: -2.26401424407959
    5. ' ==' → logprob: -3.13901424407959
    6. ':' → logprob: -3.88901424407959
    7. ']' → logprob: -3.88901424407959
    8. '       ' → logprob: -4.38901424407959
    9. '[' → logprob: -5.51401424407959
    10. ']:' → logprob: -5.76401424407959

Token 953: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9152404069900513
    2. ' continue' → logprob: -1.5402404069900513
    3. '       ' → logprob: -1.7902404069900513
    4. '           ' → logprob: -2.1652402877807617
    5. ':' → logprob: -2.6652402877807617
    6. 'continue' → logprob: -4.040240287780762
    7. '   ' → logprob: -5.165240287780762
    8. '==' → logprob: -5.540240287780762
    9. ' ==' → logprob: -6.665240287780762
    10. ',' → logprob: -7.040240287780762

Token 954: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.11970596015453339
    2. 'continue' (adapté à ' continue') → logprob: -2.99470591545105
    3. '       ' → logprob: -3.49470591545105
    4. '           ' → logprob: -3.49470591545105
    5. '   ' → logprob: -7.119706153869629
    6. ' list' → logprob: -7.494706153869629
    7. '```' → logprob: -8.244706153869629
    8. '    ' → logprob: -8.994706153869629
    9. '	continue' → logprob: -9.119706153869629
    10. 'list' → logprob: -9.494706153869629

Token 955: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15338130295276642
    2. '       ' → logprob: -2.02838134765625
    3. ' list' → logprob: -4.77838134765625
    4. 'list' → logprob: -6.77838134765625
    5. '```' → logprob: -8.65338134765625
    6. '           ' → logprob: -8.77838134765625
    7. ':list' → logprob: -8.77838134765625
    8. '    
' → logprob: -9.15338134765625
    9. ':' → logprob: -9.27838134765625
    10. ':
' → logprob: -9.52838134765625

Token 956: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16413982212543488
    2. 'list' → logprob: -2.289139747619629
    3. '       ' → logprob: -3.164139747619629
    4. ' list' → logprob: -4.914139747619629
    5. '```' → logprob: -8.664139747619629
    6. 'if' → logprob: -8.914139747619629
    7. '
' → logprob: -10.164139747619629
    8. '           ' → logprob: -10.664139747619629
    9. ' if' → logprob: -10.914139747619629
    10. '	list' → logprob: -11.289139747619629

Token 957: ' if' (ID: 538)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -6.897412822581828e-05
    2. '   ' → logprob: -9.875068664550781
    3. '       ' → logprob: -11.000068664550781
    4. 'if' (adapté à ' if') → logprob: -15.500068664550781
    5. ' list' → logprob: -15.500068664550781
    6. 'assert' → logprob: -15.875068664550781
    7. '           ' → logprob: -16.00006866455078
    8. '```' → logprob: -16.62506866455078
    9. '
' → logprob: -17.50006866455078
    10. 'print' → logprob: -17.87506866455078

Token 958: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0003254527400713414
    2. ' list' → logprob: -8.250325202941895
    3. 'not' → logprob: -10.000325202941895
    4. '   ' → logprob: -12.000325202941895
    5. 'var' → logprob: -12.500325202941895
    6. 'len' → logprob: -12.875325202941895
    7. '       ' → logprob: -13.500325202941895
    8. 'idx' → logprob: -13.875325202941895
    9. '(list' → logprob: -13.875325202941895
    10. ' not' → logprob: -14.000325202941895

Token 959: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.56233171664644e-05
    2. 'node' → logprob: -10.125055313110352
    3. '_leaf' → logprob: -11.875055313110352
    4. '_result' → logprob: -12.625055313110352
    5. '_edge' → logprob: -13.375055313110352
    6. '_val' → logprob: -13.750055313110352
    7. '_adj' → logprob: -14.500055313110352
    8. '_nodes' → logprob: -14.875055313110352
    9. '
' → logprob: -15.125055313110352
    10. 'adj' → logprob: -15.375055313110352

Token 960: '_par' (ID: 31329)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_de' → logprob: -1.1994775377388578e-05
    2. '_used' → logprob: -12.000012397766113
    3. 'degrees' → logprob: -12.250012397766113
    4. 'de' → logprob: -14.375012397766113
    5. '_degree' → logprob: -16.125011444091797
    6. 'used' → logprob: -16.250011444091797
    7. '	de' → logprob: -16.625011444091797
    8. 'Degrees' → logprob: -17.000011444091797
    9. '   ' → logprob: -17.500011444091797
    10. '```' → logprob: -18.125011444091797

Token 961: 'ity' (ID: 536)
  Prédit: 'arity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arity' → logprob: -0.011248352006077766
    2. 'ity' → logprob: -5.136248588562012
    3. 'ar' → logprob: -5.386248588562012
    4. '_node' → logprob: -8.636248588562012
    5. 'node' → logprob: -8.761248588562012
    6. 'par' → logprob: -9.261248588562012
    7. '_par' → logprob: -9.761248588562012
    8. 'ty' → logprob: -10.136248588562012
    9. 'ority' → logprob: -10.261248588562012
    10. 'air' → logprob: -10.386248588562012

Token 962: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.200166469876422e-06
    2. '[' → logprob: -12.250004768371582
    3. 'idx' → logprob: -15.625004768371582
    4. ' [' → logprob: -16.5000057220459
    5. ' idx' → logprob: -17.0000057220459
    6. '	idx' → logprob: -17.3750057220459
    7. '   ' → logprob: -17.8750057220459
    8. '(idx' → logprob: -18.0000057220459
    9. '[id' → logprob: -18.5000057220459
    10. '[ix' → logprob: -18.5000057220459

Token 963: '_leaf' (ID: 96627)
  Prédit: '_neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.007468550931662321
    2. '_leaf' → logprob: -5.0074687004089355
    3. 'neighbor' → logprob: -7.6324687004089355
    4. '_used' → logprob: -8.382468223571777
    5. '_neighbors' → logprob: -11.132468223571777
    6. '```' → logprob: -12.132468223571777
    7. '[' → logprob: -12.132468223571777
    8. '_ne' → logprob: -12.257468223571777
    9. 'leaf' → logprob: -13.507468223571777
    10. '_' → logprob: -13.757468223571777

Token 964: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01613747701048851
    2. ':' → logprob: -5.266137599945068
    3. ' ==' → logprob: -5.766137599945068
    4. ']==' → logprob: -5.891137599945068
    5. ':
' → logprob: -6.641137599945068
    6. '^' → logprob: -6.766137599945068
    7. '!=' → logprob: -6.891137599945068
    8. ']' → logprob: -7.391137599945068
    9. '[' → logprob: -7.516137599945068
    10. '[idx' → logprob: -8.89113712310791

Token 965: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06035475805401802
    2. ':' → logprob: -3.185354709625244
    3. ':
' → logprob: -4.810354709625244
    4. '!=' → logprob: -5.435354709625244
    5. ' ==' → logprob: -5.935354709625244
    6. '^' → logprob: -6.435354709625244
    7. '[' → logprob: -8.560355186462402
    8. ' ^=' → logprob: -9.935355186462402
    9. ' !=' → logprob: -10.060355186462402
    10. '   ' → logprob: -10.185355186462402

Token 966: ' list' (ID: 1562)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007598382653668523
    2. ' ' → logprob: -7.250759601593018
    3. '0' → logprob: -10.000760078430176
    4. '   ' → logprob: -12.500760078430176
    5. 'list' → logprob: -16.25075912475586
    6. '[' → logprob: -16.62575912475586
    7. '  ' → logprob: -16.62575912475586
    8. '       ' → logprob: -16.62575912475586
    9. '=' → logprob: -16.68825912475586
    10. '```' → logprob: -16.68825912475586

Token 967: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.017944354563951492
    2. '_neighbor' → logprob: -4.3929443359375
    3. '_par' → logprob: -5.2679443359375
    4. 'node' → logprob: -8.8929443359375
    5. '_leaf' → logprob: -9.5179443359375
    6. 'neighbor' → logprob: -11.0179443359375
    7. 'par' → logprob: -11.5179443359375
    8. '```' → logprob: -11.6429443359375
    9. '_adj' → logprob: -12.5179443359375
    10. '_edge' → logprob: -12.6429443359375

Token 968: '_par' (ID: 31329)
  Prédit: '_par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -0.033899370580911636
    2. '_used' → logprob: -3.5338993072509766
    3. 'par' → logprob: -5.533899307250977
    4. '_neighbor' → logprob: -9.283899307250977
    5. 'used' → logprob: -10.533899307250977
    6. '_' → logprob: -11.283899307250977
    7. '_neighbors' → logprob: -11.408899307250977
    8. '_de' → logprob: -11.408899307250977
    9. 'neighbor' → logprob: -11.533899307250977
    10. '_ne' → logprob: -11.783899307250977

Token 969: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -6.587483221665025e-05
    2. 'ty' → logprob: -11.125065803527832
    3. 'city' → logprob: -11.750065803527832
    4. '```' → logprob: -11.875065803527832
    5. 'it' → logprob: -12.750065803527832
    6. '   ' → logprob: -12.750065803527832
    7. '[' → logprob: -12.750065803527832
    8. 'node' → logprob: -12.875065803527832
    9. '#' → logprob: -13.125065803527832
    10. '1' → logprob: -13.125065803527832

Token 970: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.417976379045285e-05
    2. 'idx' → logprob: -11.250043869018555
    3. '[' → logprob: -11.625043869018555
    4. ' idx' → logprob: -11.625043869018555
    5. ' [' → logprob: -11.875043869018555
    6. '       ' → logprob: -13.500043869018555
    7. '   ' → logprob: -13.500043869018555
    8. '	idx' → logprob: -14.125043869018555
    9. '(idx' → logprob: -14.250043869018555
    10. '```' → logprob: -14.500043869018555

Token 971: '_neighbor' (ID: 177120)
  Prédit: '_neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.007461569271981716
    2. 'neighbor' → logprob: -5.2574615478515625
    3. '_leaf' → logprob: -6.1324615478515625
    4. 'idx' → logprob: -11.007461547851562
    5. '_idx' → logprob: -11.507461547851562
    6. '[' → logprob: -11.507461547851562
    7. '```' → logprob: -12.132461547851562
    8. 'leaf' → logprob: -12.632461547851562
    9. '
' → logprob: -12.757461547851562
    10. 'Neighbor' → logprob: -14.007461547851562

Token 972: ']' (ID: 60)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.68374103307724
    2. ':
' → logprob: -0.80874103307724
    3. ' and' → logprob: -3.1837410926818848
    4. '):
' → logprob: -6.058741092681885
    5. 'and' → logprob: -6.558741092681885
    6. ' :' → logprob: -6.808741092681885
    7. ' :
' → logprob: -6.808741092681885
    8. ']:
' → logprob: -7.683741092681885
    9. '):' → logprob: -7.808741092681885
    10. ']' → logprob: -8.433740615844727

Token 973: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2998543977737427
    2. ':
' → logprob: -1.4248543977737427
    3. ' and' → logprob: -4.674854278564453
    4. '==' → logprob: -5.174854278564453
    5. '!=' → logprob: -6.799854278564453
    6. 'and' → logprob: -7.424854278564453
    7. ' ==' → logprob: -7.924854278564453
    8. ' !=' → logprob: -8.424854278564453
    9. '=' → logprob: -8.549854278564453
    10. '   ' → logprob: -8.799854278564453

Token 974: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000918008794542402
    2. '0' → logprob: -7.000917911529541
    3. ' ' → logprob: -12.1259183883667
    4. 'True' → logprob: -14.6884183883667
    5. '
' → logprob: -15.5009183883667
    6. '   ' → logprob: -15.7509183883667
    7. '```' → logprob: -16.938417434692383
    8. 'true' → logprob: -17.438417434692383
    9. '[' → logprob: -18.000917434692383
    10. '=' → logprob: -18.125917434692383

Token 975: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034392563975416124
    2. '0' → logprob: -8.000344276428223
    3. ' ' → logprob: -11.750344276428223
    4. '   ' → logprob: -16.812843322753906
    5. 'list' → logprob: -16.875343322753906
    6. '```' → logprob: -17.187843322753906
    7. '' → logprob: -17.250343322753906
    8. 'True' → logprob: -17.250343322753906
    9. '۱' → logprob: -17.625343322753906
    10. '
' → logprob: -17.875343322753906

Token 976: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08173509687185287
    2. ':' → logprob: -2.581735134124756
    3. ' and' → logprob: -6.331735134124756
    4. '       ' → logprob: -7.956735134124756
    5. '   ' → logprob: -8.206734657287598
    6. 'and' → logprob: -8.956734657287598
    7. '):
' → logprob: -8.956734657287598
    8. '           ' → logprob: -9.081734657287598
    9. ' or' → logprob: -11.331734657287598
    10. ':list' → logprob: -11.456734657287598

Token 977: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27187836170196533
    2. '   ' → logprob: -2.521878242492676
    3. ' list' → logprob: -2.896878242492676
    4. 'list' → logprob: -2.896878242492676
    5. '           ' → logprob: -3.521878242492676
    6. ':
' → logprob: -5.146878242492676
    7. ':' → logprob: -5.396878242492676
    8. '```' → logprob: -5.771878242492676
    9. ':list' → logprob: -6.646878242492676
    10. '):
' → logprob: -6.771878242492676

Token 978: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.0009661303483881056
    2. '   ' → logprob: -7.1259660720825195
    3. ' list' → logprob: -8.87596607208252
    4. '       ' → logprob: -11.37596607208252
    5. 'continue' → logprob: -12.25096607208252
    6. '```' → logprob: -13.25096607208252
    7. 'print' → logprob: -13.37596607208252
    8. '           ' → logprob: -13.50096607208252
    9. '
' → logprob: -15.00096607208252
    10. '	list' → logprob: -15.62596607208252

Token 979: '_node' (ID: 11390)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.0017433661269024014
    2. '_node' → logprob: -6.376743316650391
    3. 'result' → logprob: -10.62674331665039
    4. '_leaf' → logprob: -11.12674331665039
    5. '_list' → logprob: -14.00174331665039
    6. '_edge' → logprob: -15.25174331665039
    7. '_adj' → logprob: -15.50174331665039
    8. '_results' → logprob: -15.50174331665039
    9. 'node' → logprob: -15.87674331665039
    10. '_val' → logprob: -16.00174331665039

Token 980: '_par' (ID: 31329)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.060639750212430954
    2. '_used' → logprob: -3.0606398582458496
    3. '_par' → logprob: -4.43563985824585
    4. '_node' → logprob: -9.810639381408691
    5. '_degree' → logprob: -10.435639381408691
    6. '_result' → logprob: -10.560639381408691
    7. '_deg' → logprob: -12.310639381408691
    8. '_' → logprob: -12.435639381408691
    9. 'used' → logprob: -12.810639381408691
    10. '_usage' → logprob: -12.935639381408691

Token 981: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.007464881986379623
    2. 'arity' → logprob: -5.00746488571167
    3. 'ar' → logprob: -8.132464408874512
    4. 'used' → logprob: -9.257464408874512
    5. 'ality' → logprob: -9.882464408874512
    6. '```' → logprob: -10.007464408874512
    7. 'ities' → logprob: -10.382464408874512
    8. '[' → logprob: -10.757464408874512
    9. 'par' → logprob: -10.882464408874512
    10. 'it' → logprob: -10.882464408874512

Token 982: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00014561474381480366
    2. '[' → logprob: -8.87514591217041
    3. '[list' → logprob: -13.00014591217041
    4. 'idx' → logprob: -14.50014591217041
    5. '[ix' → logprob: -14.87514591217041
    6. '[ind' → logprob: -15.12514591217041
    7. '[_' → logprob: -15.37514591217041
    8. '```' → logprob: -15.37514591217041
    9. '	idx' → logprob: -15.50014591217041
    10. '[next' → logprob: -15.50014591217041

Token 983: '_leaf' (ID: 96627)
  Prédit: '_neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.2937747836112976
    2. '_leaf' → logprob: -1.9187748432159424
    3. '_used' → logprob: -2.4187748432159424
    4. '[' → logprob: -4.418774604797363
    5. 'neighbor' → logprob: -5.918774604797363
    6. '_ne' → logprob: -6.418774604797363
    7. '_par' → logprob: -7.543774604797363
    8. 'leaf' → logprob: -8.168774604797363
    9. 'used' → logprob: -8.293774604797363
    10. '_neighbors' → logprob: -8.418774604797363

Token 984: ']' (ID: 60)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.495745986700058
    2. ']' → logprob: -1.6207460165023804
    3. '=' → logprob: -1.8707460165023804
    4. '[' → logprob: -3.995745897293091
    5. ' ^=' → logprob: -4.49574613571167
    6. ']=' → logprob: -5.87074613571167
    7. '^' → logprob: -5.99574613571167
    8. '-=' → logprob: -6.62074613571167
    9. 'idx' → logprob: -7.37074613571167
    10. '[
' → logprob: -8.120745658874512

Token 985: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49298378825187683
    2. '^' → logprob: -0.9929838180541992
    3. ' ^=' → logprob: -3.992983818054199
    4. '-=' → logprob: -8.7429838180542
    5. ',' → logprob: -10.2429838180542
    6. '+=' → logprob: -10.4929838180542
    7. ' =' → logprob: -10.6179838180542
    8. '!=' → logprob: -12.2429838180542
    9. '^

' → logprob: -12.2429838180542
    10. '=!' → logprob: -12.6179838180542

Token 986: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003242607053834945
    2. 'list' → logprob: -8.250324249267578
    3. ' ' → logprob: -9.875324249267578
    4. '   ' → logprob: -12.750324249267578
    5. '1' → logprob: -12.750324249267578
    6. 'not' → logprob: -13.750324249267578
    7. '2' → logprob: -13.875324249267578
    8. '-' → logprob: -14.000324249267578
    9. ' list' → logprob: -14.375324249267578
    10. '```' → logprob: -14.375324249267578

Token 987: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006993304705247283
    2. 'list' → logprob: -7.375699520111084
    3. 'not' → logprob: -10.875699043273926
    4. '1' → logprob: -11.000699043273926
    5. '-' → logprob: -11.125699043273926
    6. '(' → logprob: -11.500699043273926
    7. '(list' → logprob: -12.625699043273926
    8. '2' → logprob: -12.750699043273926
    9. ' ' → logprob: -12.875699043273926
    10. 'var' → logprob: -14.125699043273926

Token 988: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0208305474370718
    2. '   ' → logprob: -5.1458306312561035
    3. '       ' → logprob: -5.5208306312561035
    4. ' list' → logprob: -5.7708306312561035
    5. '
' → logprob: -6.0208306312561035
    6. '<|end|>' → logprob: -6.0208306312561035
    7. '               ' → logprob: -7.3958306312561035
    8. 'list' → logprob: -7.7708306312561035
    9. ',' → logprob: -8.145830154418945
    10. ' 
' → logprob: -8.270830154418945

Token 989: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001058771857060492
    2. '   ' → logprob: -7.376058578491211
    3. '       ' → logprob: -8.376058578491211
    4. ' list' → logprob: -9.251058578491211
    5. 'list' → logprob: -10.126058578491211
    6. '<|end|>' → logprob: -10.626058578491211
    7. '               ' → logprob: -11.001058578491211
    8. '```' → logprob: -11.251058578491211
    9. ',' → logprob: -12.876058578491211
    10. ' and' → logprob: -13.251058578491211

Token 990: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -5.080963092041202e-06
    2. '           ' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.3750057220459
    4. '       ' → logprob: -16.5000057220459
    5. ' list' → logprob: -17.5000057220459
    6. '```' → logprob: -17.8750057220459
    7. '
' → logprob: -18.1250057220459
    8. '               ' → logprob: -19.2500057220459
    9. 'for' → logprob: -19.6250057220459
    10. 'var' → logprob: -20.1250057220459

Token 991: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.633317232131958
    2. '_result' → logprob: -0.758317232131958
    3. '_leaf' → logprob: -7.508316993713379
    4. '_edge' → logprob: -9.258316993713379
    5. 'result' → logprob: -10.633316993713379
    6. '_adj' → logprob: -10.883316993713379
    7. 'node' → logprob: -11.383316993713379
    8. '_results' → logprob: -12.008316993713379
    9. '_list' → logprob: -13.383316993713379
    10. '_val' → logprob: -13.758316993713379

Token 992: '_par' (ID: 31329)
  Prédit: '_par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -0.01395098865032196
    2. 'par' → logprob: -4.513950824737549
    3. '_used' → logprob: -6.138950824737549
    4. '_de' → logprob: -7.388950824737549
    5. 'used' → logprob: -9.138951301574707
    6. '_' → logprob: -12.138951301574707
    7. 'degrees' → logprob: -12.388951301574707
    8. 'de' → logprob: -13.763951301574707
    9. '	par' → logprob: -14.513951301574707
    10. '_per' → logprob: -14.513951301574707

Token 993: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.03093681111931801
    2. 'arity' → logprob: -3.5309367179870605
    3. 'ality' → logprob: -8.030937194824219
    4. 'par' → logprob: -8.655937194824219
    5. 'ati' → logprob: -8.905937194824219
    6. 'air' → logprob: -9.405937194824219
    7. 'aty' → logprob: -9.405937194824219
    8. 'ar' → logprob: -9.530937194824219
    9. '_par' → logprob: -9.530937194824219
    10. 'a' → logprob: -9.905937194824219

Token 994: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -7.703443770878948e-06
    2. '[' → logprob: -11.875007629394531
    3. 'idx' → logprob: -15.750007629394531
    4. '```' → logprob: -16.00000762939453
    5. '_idx' → logprob: -16.87500762939453
    6. '	idx' → logprob: -17.12500762939453
    7. '[ind' → logprob: -17.25000762939453
    8. '[node' → logprob: -17.25000762939453
    9. '[next' → logprob: -17.37500762939453
    10. '[parent' → logprob: -17.62500762939453

Token 995: '_neighbor' (ID: 177120)
  Prédit: '_neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.00027099132421426475
    2. '_leaf' → logprob: -8.62527084350586
    3. 'neighbor' → logprob: -9.37527084350586
    4. '_neighbors' → logprob: -13.75027084350586
    5. 'Neighbor' → logprob: -14.00027084350586
    6. '```' → logprob: -14.37527084350586
    7. '_node' → logprob: -14.50027084350586
    8. '_partner' → logprob: -14.50027084350586
    9. '_used' → logprob: -14.75027084350586
    10. '_friend' → logprob: -14.87527084350586

Token 996: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133000433444977
    2. ' =' → logprob: -1.3133000135421753
    3. ']=' → logprob: -11.438300132751465
    4. ']' → logprob: -12.188300132751465
    5. '           ' → logprob: -12.313300132751465
    6. ')' → logprob: -12.313300132751465
    7. '<|end|>' → logprob: -13.063300132751465
    8. ')=' → logprob: -13.188300132751465
    9. '```' → logprob: -13.438300132751465
    10. '   ' → logprob: -13.813300132751465

Token 997: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029752686619758606
    2. ' =' → logprob: -3.529752731323242
    3. ' ^=' → logprob: -13.404752731323242
    4. '=
' → logprob: -15.279752731323242
    5. '```' → logprob: -16.279752731323242
    6. '.=' → logprob: -16.654752731323242
    7. ',' → logprob: -17.154752731323242
    8. '-=' → logprob: -17.279752731323242
    9. '<|end|>' → logprob: -17.279752731323242
    10. '=False' → logprob: -17.404752731323242

Token 998: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.843177233240567e-05
    2. ' ' → logprob: -11.000018119812012
    3. '1' → logprob: -13.875018119812012
    4. '           ' → logprob: -14.375018119812012
    5. '   ' → logprob: -16.250019073486328
    6. '               ' → logprob: -16.625019073486328
    7. '       ' → logprob: -18.000019073486328
    8. '                   ' → logprob: -18.937519073486328
    9. '```' → logprob: -19.187519073486328
    10. '  ' → logprob: -19.875019073486328

Token 999: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012630375567823648
    2. '1' → logprob: -9.000125885009766
    3. ' ' → logprob: -13.000125885009766
    4. '   ' → logprob: -15.625125885009766
    5. '```' → logprob: -15.937625885009766
    6. '۰' → logprob: -17.312625885009766
    7. '           ' → logprob: -17.875125885009766
    8. '       ' → logprob: -18.062625885009766
    9. 'not' → logprob: -18.562625885009766
    10. '
' → logprob: -18.625125885009766

Token 1000: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4176989793777466
    2. ' list' → logprob: -1.6676989793777466
    3. 'list' → logprob: -1.9176989793777466
    4. '```' → logprob: -6.292698860168457
    5. ')' → logprob: -6.917698860168457
    6. ',
' → logprob: -7.167698860168457
    7. ',' → logprob: -7.542698860168457
    8. '	list' → logprob: -7.792698860168457
    9. '
' → logprob: -8.167698860168457
    10. '<|end|>' → logprob: -8.667698860168457

Token 1001: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14900577068328857
    2. 'list' → logprob: -2.649005889892578
    3. ' list' → logprob: -2.774005889892578
    4. '           ' → logprob: -5.899005889892578
    5. '	list' → logprob: -6.649005889892578
    6. '       ' → logprob: -6.774005889892578
    7. ',' → logprob: -10.524005889892578
    8. '```' → logprob: -10.524005889892578
    9. '    ' → logprob: -11.399005889892578
    10. ' ' → logprob: -11.649005889892578

Token 1002: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.00039015832589939237
    2. '           ' → logprob: -8.75039005279541
    3. '```' → logprob: -9.25039005279541
    4. '   ' → logprob: -9.62539005279541
    5. ' list' → logprob: -9.87539005279541
    6. '       ' → logprob: -11.37539005279541
    7. '``' → logprob: -12.62539005279541
    8. '               ' → logprob: -13.25039005279541
    9. ')' → logprob: -14.12539005279541
    10. '	list' → logprob: -15.62539005279541

Token 1003: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -7.226628895296017e-06
    2. 'result' → logprob: -11.875007629394531
    3. '_node' → logprob: -16.12500762939453
    4. '_results' → logprob: -17.87500762939453
    5. '.append' → logprob: -18.00000762939453
    6. 's' → logprob: -18.00000762939453
    7. '```' → logprob: -18.62500762939453
    8. '   ' → logprob: -18.75000762939453
    9. 'Result' → logprob: -18.87500762939453
    10. '_list' → logprob: -18.87500762939453

Token 1004: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.00026383911608718336
    2. '.append' → logprob: -8.250264167785645
    3. '```' → logprob: -13.875264167785645
    4. '_.' → logprob: -15.000264167785645
    5. 'edges' → logprob: -15.125264167785645
    6. '_append' → logprob: -15.375264167785645
    7. '._' → logprob: -15.500264167785645
    8. '_edge' → logprob: -16.375263214111328
    9. 's' → logprob: -16.500263214111328
    10. '_faces' → logprob: -16.875263214111328

Token 1005: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.961759259458631e-06
    2. '.' → logprob: -12.375004768371582
    3. '.extend' → logprob: -15.000004768371582
    4. '.app' → logprob: -15.250004768371582
    5. '.add' → logprob: -16.7500057220459
    6. 'append' → logprob: -17.2500057220459
    7. '.ap' → logprob: -17.3750057220459
    8. '.Append' → logprob: -17.3750057220459
    9. ' .' → logprob: -18.5000057220459
    10. '_append' → logprob: -18.6250057220459

Token 1006: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.00017767686222214252
    2. '(' → logprob: -9.125177383422852
    3. '((' → logprob: -9.750177383422852
    4. 'idx' → logprob: -12.375177383422852
    5. '(str' → logprob: -12.750177383422852
    6. '(
' → logprob: -13.625177383422852
    7. '(f' → logprob: -13.875177383422852
    8. '(id' → logprob: -14.375177383422852
    9. '[idx' → logprob: -16.00017738342285
    10. ' (' → logprob: -16.12517738342285

Token 1007: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -8.65707261255011e-06
    2. 'edge' → logprob: -11.875008583068848
    3. '_graph' → logprob: -13.500008583068848
    4. '```' → logprob: -16.125009536743164
    5. '_' → logprob: -16.375009536743164
    6. '(edge' → logprob: -17.000009536743164
    7. '_EDGE' → logprob: -17.125009536743164
    8. '_edges' → logprob: -17.750009536743164
    9. '`' → logprob: -18.250009536743164
    10. 'Edge' → logprob: -18.500009536743164

Token 1008: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -2.1008713702030946e-06
    2. 'label' → logprob: -13.375001907348633
    3. 'Label' → logprob: -16.250001907348633
    4. '_id' → logprob: -16.375001907348633
    5. '_LABEL' → logprob: -16.875001907348633
    6. '_' → logprob: -17.000001907348633
    7. '```' → logprob: -17.000001907348633
    8. '_edge' → logprob: -17.250001907348633
    9. ')' → logprob: -18.250001907348633
    10. ''label' → logprob: -18.375001907348633

Token 1009: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036845204886049032
    2. ')
' → logprob: -6.0036845207214355
    3. '<|end|>' → logprob: -6.7536845207214355
    4. '   ' → logprob: -11.253684043884277
    5. '       ' → logprob: -11.378684043884277
    6. '<|end|>' → logprob: -11.878684043884277
    7. ' )' → logprob: -12.628684043884277
    8. '           ' → logprob: -13.753684043884277
    9. ')return' → logprob: -14.128684043884277
    10. '```' → logprob: -14.378684043884277

Token 1010: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0702735185623169
    2. 'list' → logprob: -3.4452733993530273
    3. '       ' → logprob: -3.6952733993530273
    4. '           ' → logprob: -4.945273399353027
    5. '```' → logprob: -5.570273399353027
    6. ' list' → logprob: -9.945273399353027
    7. '               ' → logprob: -10.695273399353027
    8. '``' → logprob: -10.820273399353027
    9. 'for' → logprob: -11.070273399353027
    10. '                   ' → logprob: -11.195273399353027

Token 1011: ' elif' (ID: 9497)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1455230563879013
    2. '   ' → logprob: -2.6455230712890625
    3. '       ' → logprob: -2.7705230712890625
    4. '           ' → logprob: -6.5205230712890625
    5. '```' → logprob: -8.395523071289062
    6. ' list' → logprob: -9.895523071289062
    7. 'for' → logprob: -10.520523071289062
    8. '               ' → logprob: -10.895523071289062
    9. '                   ' → logprob: -12.145523071289062
    10. '``' → logprob: -12.520523071289062

Token 1012: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07516269385814667
    2. ' list' → logprob: -2.700162649154663
    3. 'not' → logprob: -5.575162887573242
    4. ' not' → logprob: -6.575162887573242
    5. '   ' → logprob: -11.200162887573242
    6. 'len' → logprob: -12.325162887573242
    7. '       ' → logprob: -12.950162887573242
    8. '    ' → logprob: -13.575162887573242
    9. '           ' → logprob: -13.950162887573242
    10. 'True' → logprob: -14.200162887573242

Token 1013: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.8889261304575484e-06
    2. 'node' → logprob: -13.500003814697266
    3. '```' → logprob: -13.750003814697266
    4. '
' → logprob: -14.250003814697266
    5. '_leaf' → logprob: -15.625003814697266
    6. '_edge' → logprob: -16.125003814697266
    7. '_neighbor' → logprob: -16.250003814697266
    8. 'Node' → logprob: -16.500003814697266
    9. '[node' → logprob: -17.250003814697266
    10. '_' → logprob: -17.375003814697266

Token 1014: '_par' (ID: 31329)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.10310831665992737
    2. '_par' → logprob: -2.8531084060668945
    3. '_used' → logprob: -3.2281084060668945
    4. '_node' → logprob: -8.478108406066895
    5. 'degrees' → logprob: -8.978108406066895
    6. 'par' → logprob: -9.603108406066895
    7. 'used' → logprob: -9.603108406066895
    8. '_' → logprob: -9.853108406066895
    9. '_degree' → logprob: -10.103108406066895
    10. '```' → logprob: -10.353108406066895

Token 1015: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.0005941396811977029
    2. 'used' → logprob: -8.125594139099121
    3. '_used' → logprob: -9.000594139099121
    4. 'arity' → logprob: -10.125594139099121
    5. 'node' → logprob: -11.125594139099121
    6. '_node' → logprob: -11.375594139099121
    7. 'par' → logprob: -11.375594139099121
    8. 'ty' → logprob: -11.375594139099121
    9. 't' → logprob: -11.500594139099121
    10. '```' → logprob: -11.625594139099121

Token 1016: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -14.00000286102295
    3. 'idx' → logprob: -14.62500286102295
    4. '```' → logprob: -14.87500286102295
    5. '	idx' → logprob: -15.50000286102295
    6. '(idx' → logprob: -15.87500286102295
    7. '==' → logprob: -16.125001907348633
    8. ' idx' → logprob: -16.250001907348633
    9. ' [' → logprob: -16.250001907348633
    10. '   ' → logprob: -16.500001907348633

Token 1017: '_leaf' (ID: 96627)
  Prédit: '_neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.011622891761362553
    2. '_leaf' → logprob: -4.511622905731201
    3. '_used' → logprob: -8.636622428894043
    4. 'neighbor' → logprob: -8.886622428894043
    5. '_par' → logprob: -9.261622428894043
    6. '_ne' → logprob: -10.386622428894043
    7. '_neighbors' → logprob: -10.636622428894043
    8. '```' → logprob: -10.761622428894043
    9. '_node' → logprob: -11.136622428894043
    10. '[' → logprob: -11.386622428894043

Token 1018: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6615180373191833
    2. ']==' → logprob: -1.1615180969238281
    3. ']' → logprob: -2.286518096923828
    4. ' ==' → logprob: -2.786518096923828
    5. '[' → logprob: -5.661518096923828
    6. '][' → logprob: -6.411518096923828
    7. '[idx' → logprob: -6.911518096923828
    8. ')==' → logprob: -8.036518096923828
    9. ')' → logprob: -8.661518096923828
    10. '           ' → logprob: -8.786518096923828

Token 1019: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2812913656234741
    2. ' ==' → logprob: -1.4062913656234741
    3. '[' → logprob: -9.906291007995605
    4. ' !=' → logprob: -10.531291007995605
    5. '!=' → logprob: -10.781291007995605
    6. ']==' → logprob: -11.031291007995605
    7. '==-' → logprob: -11.656291007995605
    8. '```' → logprob: -11.781291007995605
    9. '==
' → logprob: -12.656291007995605
    10. ')==' → logprob: -13.156291007995605

Token 1020: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16753904521465302
    2. '0' → logprob: -1.9175390005111694
    3. ' ' → logprob: -5.292539119720459
    4. 'list' → logprob: -6.167539119720459
    5. ' list' → logprob: -8.7925386428833
    6. '   ' → logprob: -12.7300386428833
    7. '```' → logprob: -13.7300386428833
    8. '[list' → logprob: -13.8550386428833
    9. '  ' → logprob: -13.9175386428833
    10. '(list' → logprob: -14.1050386428833

Token 1021: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18028558790683746
    2. '0' → logprob: -1.8052855730056763
    3. 'list' → logprob: -7.930285453796387
    4. ' ' → logprob: -8.680285453796387
    5. ' list' → logprob: -12.430285453796387
    6. '[list' → logprob: -13.117785453796387
    7. '`' → logprob: -14.555285453796387
    8. '[' → logprob: -14.680285453796387
    9. 'neighbor' → logprob: -14.742785453796387
    10. '```' → logprob: -15.055285453796387

Token 1022: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05105110630393028
    2. 'and' → logprob: -3.051051139831543
    3. '==' → logprob: -6.926051139831543
    4. ':
' → logprob: -7.676051139831543
    5. ':' → logprob: -8.301051139831543
    6. '       ' → logprob: -8.301051139831543
    7. '=' → logprob: -8.926051139831543
    8. '   ' → logprob: -9.176051139831543
    9. '           ' → logprob: -9.176051139831543
    10. ' ==' → logprob: -9.176051139831543

Token 1023: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2854886054992676
    2. ' list' → logprob: -1.6604886054992676
    3. ' not' → logprob: -3.5354886054992676
    4. 'not' → logprob: -3.5354886054992676
    5. ' ' → logprob: -12.28548812866211
    6. '   ' → logprob: -12.66048812866211
    7. '(list' → logprob: -12.78548812866211
    8. '(not' → logprob: -14.03548812866211
    9. 'True' → logprob: -14.28548812866211
    10. '```' → logprob: -14.28548812866211

Token 1024: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -7.171581091824919e-05
    2. '_neighbor' → logprob: -9.87507152557373
    3. '_leaf' → logprob: -11.12507152557373
    4. '```' → logprob: -13.00007152557373
    5. '_edge' → logprob: -13.50007152557373
    6. 'node' → logprob: -13.87507152557373
    7. '_' → logprob: -15.62507152557373
    8. '
' → logprob: -15.87507152557373
    9. '``' → logprob: -16.250072479248047
    10. '_user' → logprob: -16.500072479248047

Token 1025: '_par' (ID: 31329)
  Prédit: '_par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -0.25420114398002625
    2. 'par' → logprob: -1.5042011737823486
    3. '_de' → logprob: -6.5042009353637695
    4. '_used' → logprob: -7.5042009353637695
    5. 'used' → logprob: -9.25420093536377
    6. 'degrees' → logprob: -9.50420093536377
    7. 'de' → logprob: -11.37920093536377
    8. '_' → logprob: -11.87920093536377
    9. 'degree' → logprob: -12.00420093536377
    10. 'node' → logprob: -12.25420093536377

Token 1026: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.08693289756774902
    2. 'arity' → logprob: -2.961932897567749
    3. 'used' → logprob: -4.711933135986328
    4. 'ar' → logprob: -4.711933135986328
    5. '_used' → logprob: -5.086933135986328
    6. 'neighbor' → logprob: -5.836933135986328
    7. '_neighbor' → logprob: -6.961933135986328
    8. 'ality' → logprob: -7.336933135986328
    9. 'par' → logprob: -7.461933135986328
    10. '_par' → logprob: -8.211933135986328

Token 1027: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.7697225252486533e-06
    2. 'idx' → logprob: -13.375003814697266
    3. '_idx' → logprob: -13.875003814697266
    4. '```' → logprob: -15.625003814697266
    5. '	idx' → logprob: -15.750003814697266
    6. '[
' → logprob: -15.750003814697266
    7. '_neighbor' → logprob: -15.875003814697266
    8. '(idx' → logprob: -16.250003814697266
    9. '[next' → logprob: -16.375003814697266
    10. '[' → logprob: -16.500003814697266

Token 1028: '_neighbor' (ID: 177120)
  Prédit: '_neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.0016882737400010228
    2. 'neighbor' → logprob: -6.751688480377197
    3. '_leaf' → logprob: -7.626688480377197
    4. '_par' → logprob: -11.501688003540039
    5. '_neighbors' → logprob: -12.376688003540039
    6. '```' → logprob: -12.501688003540039
    7. '[' → logprob: -12.626688003540039
    8. '_idx' → logprob: -13.376688003540039
    9. 'Neighbor' → logprob: -13.626688003540039
    10. '_node' → logprob: -13.751688003540039

Token 1029: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12701620161533356
    2. '==' → logprob: -2.127016305923462
    3. ']==' → logprob: -9.752016067504883
    4. ')==' → logprob: -11.877016067504883
    5. '```' → logprob: -11.877016067504883
    6. ' ' → logprob: -12.377016067504883
    7. '[' → logprob: -12.752016067504883
    8. ')' → logprob: -13.002016067504883
    9. '<|end|>' → logprob: -13.752016067504883
    10. ']' → logprob: -13.877016067504883

Token 1030: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06197945028543472
    2. ' ==' → logprob: -2.8119795322418213
    3. ']==' → logprob: -12.811979293823242
    4. '```' → logprob: -12.811979293823242
    5. '==
' → logprob: -12.936979293823242
    6. ')==' → logprob: -13.686979293823242
    7. '===' → logprob: -14.436979293823242
    8. '()==' → logprob: -14.436979293823242
    9. '<|end|>' → logprob: -14.561979293823242
    10. '=' → logprob: -14.561979293823242

Token 1031: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016024599317461252
    2. '1' → logprob: -6.501602649688721
    3. ' ' → logprob: -9.251602172851562
    4. '-' → logprob: -13.001602172851562
    5. '```' → logprob: -14.501602172851562
    6. '
' → logprob: -15.251602172851562
    7. '   ' → logprob: -15.251602172851562
    8. '2' → logprob: -15.814102172851562
    9. '`' → logprob: -16.064102172851562
    10. ' -' → logprob: -16.626602172851562

Token 1032: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003623354248702526
    2. '1' → logprob: -5.6286234855651855
    3. ' ' → logprob: -10.753623008728027
    4. '```' → logprob: -14.628623008728027
    5. '
' → logprob: -14.753623008728027
    6. '-' → logprob: -15.378623008728027
    7. '`' → logprob: -16.003623962402344
    8. '``' → logprob: -16.253623962402344
    9. '   ' → logprob: -16.316123962402344
    10. ' ' → logprob: -16.503623962402344

Token 1033: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.733702540397644
    2. ':
' → logprob: -0.733702540397644
    3. '       ' → logprob: -3.4837026596069336
    4. ' and' → logprob: -5.483702659606934
    5. '   ' → logprob: -5.483702659606934
    6. '           ' → logprob: -7.858702659606934
    7. ',' → logprob: -9.608702659606934
    8. 'and' → logprob: -9.608702659606934
    9. ':

' → logprob: -10.358702659606934
    10. '               ' → logprob: -10.483702659606934

Token 1034: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5664384961128235
    2. '       ' → logprob: -0.9414384961128235
    3. ':
' → logprob: -4.441438674926758
    4. '   ' → logprob: -4.566438674926758
    5. ' list' → logprob: -4.816438674926758
    6. '```' → logprob: -5.066438674926758
    7. '               ' → logprob: -5.816438674926758
    8. 'list' → logprob: -6.816438674926758
    9. ':' → logprob: -7.566438674926758
    10. '                   ' → logprob: -8.566438674926758

Token 1035: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.04830002784729004
    2. '   ' → logprob: -3.79830002784729
    3. '           ' → logprob: -4.423299789428711
    4. '       ' → logprob: -4.923299789428711
    5. ' list' → logprob: -5.298299789428711
    6. '               ' → logprob: -8.298299789428711
    7. 'continue' → logprob: -9.673299789428711
    8. 'if' → logprob: -9.923299789428711
    9. '	list' → logprob: -10.048299789428711
    10. '```' → logprob: -11.048299789428711

Token 1036: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0009327789884991944
    2. '_result' → logprob: -7.500932693481445
    3. '_leaf' → logprob: -8.625932693481445
    4. 'node' → logprob: -9.125932693481445
    5. '_adj' → logprob: -9.875932693481445
    6. '_edge' → logprob: -11.500932693481445
    7. '```' → logprob: -12.250932693481445
    8. '_par' → logprob: -12.375932693481445
    9. '_used' → logprob: -12.625932693481445
    10. 'adj' → logprob: -12.750932693481445

Token 1037: '_par' (ID: 31329)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.024791620671749115
    2. '_par' → logprob: -4.149791717529297
    3. '_used' → logprob: -4.774791717529297
    4. 'degrees' → logprob: -9.149791717529297
    5. 'par' → logprob: -9.774791717529297
    6. 'used' → logprob: -9.899791717529297
    7. '_degree' → logprob: -10.524791717529297
    8. 'de' → logprob: -10.649791717529297
    9. '_deg' → logprob: -12.524791717529297
    10. '_' → logprob: -12.774791717529297

Token 1038: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.08709101378917694
    2. 'used' → logprob: -2.8370909690856934
    3. '_used' → logprob: -3.8370909690856934
    4. 'ities' → logprob: -7.212090969085693
    5. 'arity' → logprob: -7.712090969085693
    6. 'Used' → logprob: -8.337091445922852
    7. '```' → logprob: -8.337091445922852
    8. 'e' → logprob: -8.837091445922852
    9. 'ality' → logprob: -9.087091445922852
    10. 'ef' → logprob: -9.087091445922852

Token 1039: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00010008628305513412
    2. '[' → logprob: -9.250100135803223
    3. 'idx' → logprob: -13.750100135803223
    4. '	idx' → logprob: -14.250100135803223
    5. '[node' → logprob: -15.000100135803223
    6. '   ' → logprob: -15.000100135803223
    7. '_idx' → logprob: -15.375100135803223
    8. '[ix' → logprob: -15.500100135803223
    9. '[next' → logprob: -15.750100135803223
    10. '[ind' → logprob: -15.875100135803223

Token 1040: '_leaf' (ID: 96627)
  Prédit: '_neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.11653628200292587
    2. 'neighbor' → logprob: -2.2415363788604736
    3. '_leaf' → logprob: -5.8665361404418945
    4. '_used' → logprob: -7.6165361404418945
    5. '_par' → logprob: -8.741536140441895
    6. 'leaf' → logprob: -9.491536140441895
    7. '[' → logprob: -10.366536140441895
    8. 'used' → logprob: -10.491536140441895
    9. 'par' → logprob: -10.741536140441895
    10. '```' → logprob: -10.866536140441895

Token 1041: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759427547454834
    2. ' =' → logprob: -0.8259427547454834
    3. ')' → logprob: -13.950942993164062
    4. ',' → logprob: -14.200942993164062
    5. '=
' → logprob: -15.325942993164062
    6. ' ' → logprob: -15.450942993164062
    7. ' =
' → logprob: -15.450942993164062
    8. '```' → logprob: -15.700942993164062
    9. '<|end|>' → logprob: -15.825942993164062
    10. ']' → logprob: -16.075942993164062

Token 1042: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01816340535879135
    2. ' =' → logprob: -4.018163204193115
    3. ',' → logprob: -11.518163681030273
    4. '-=' → logprob: -13.393163681030273
    5. '=
' → logprob: -14.643163681030273
    6. ' ^=' → logprob: -15.018163681030273
    7. ' -=' → logprob: -15.393163681030273
    8. '+=' → logprob: -15.518163681030273
    9. '           ' → logprob: -16.018163681030273
    10. '   ' → logprob: -16.143163681030273

Token 1043: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001205893131555058
    2. ' ' → logprob: -9.375120162963867
    3. '1' → logprob: -10.250120162963867
    4. '           ' → logprob: -15.750120162963867
    5. '   ' → logprob: -16.312620162963867
    6. '```' → logprob: -17.625120162963867
    7. '=' → logprob: -17.750120162963867
    8. '               ' → logprob: -17.875120162963867
    9. '       ' → logprob: -18.000120162963867
    10. '2' → logprob: -18.437620162963867

Token 1044: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006277294596657157
    2. '1' → logprob: -7.375627517700195
    3. ' ' → logprob: -14.688127517700195
    4. 'list' → logprob: -15.500627517700195
    5. '2' → logprob: -16.188127517700195
    6. '```' → logprob: -16.375627517700195
    7. '-' → logprob: -16.438127517700195
    8. '   ' → logprob: -17.000627517700195
    9. 'not' → logprob: -17.563127517700195
    10. '=' → logprob: -17.813127517700195

Token 1045: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1735655516386032
    2. '   ' → logprob: -1.9235655069351196
    3. '       ' → logprob: -4.67356538772583
    4. 'list' → logprob: -5.67356538772583
    5. ' list' → logprob: -8.548565864562988
    6. '```' → logprob: -9.548565864562988
    7. '<|end|>' → logprob: -9.798565864562988
    8. '               ' → logprob: -10.173565864562988
    9. 'and' → logprob: -11.048565864562988
    10. ' ' → logprob: -11.173565864562988

Token 1046: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41534915566444397
    2. '       ' → logprob: -1.9153491258621216
    3. '```' → logprob: -2.165349245071411
    4. '           ' → logprob: -2.665349245071411
    5. '               ' → logprob: -6.040349006652832
    6. ' list' → logprob: -6.540349006652832
    7. '<|end|>' → logprob: -6.915349006652832
    8. '    ' → logprob: -7.665349006652832
    9. '                   ' → logprob: -7.665349006652832
    10. 'list' → logprob: -7.790349006652832

Token 1047: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.06313294917345047
    2. ' list' → logprob: -2.8131330013275146
    3. '           ' → logprob: -6.9381327629089355
    4. '```' → logprob: -9.438133239746094
    5. '   ' → logprob: -9.563133239746094
    6. '       ' → logprob: -10.813133239746094
    7. '               ' → logprob: -11.063133239746094
    8. '``' → logprob: -13.063133239746094
    9. 'idx' → logprob: -13.688133239746094
    10. '`' → logprob: -14.063133239746094

Token 1048: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0005054924986325204
    2. '_par' → logprob: -7.625505447387695
    3. 'node' → logprob: -11.875505447387695
    4. '```' → logprob: -12.125505447387695
    5. 'Node' → logprob: -13.000505447387695
    6. 'par' → logprob: -14.500505447387695
    7. '[node' → logprob: -14.500505447387695
    8. '_code' → logprob: -14.750505447387695
    9. '#' → logprob: -15.250505447387695
    10. '_user' → logprob: -15.500505447387695

Token 1049: '_par' (ID: 31329)
  Prédit: '_par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -0.000344640837283805
    2. 'par' → logprob: -8.000344276428223
    3. '_used' → logprob: -12.375344276428223
    4. '_de' → logprob: -12.625344276428223
    5. '_per' → logprob: -15.375344276428223
    6. '[node' → logprob: -15.500344276428223
    7. 'Par' → logprob: -15.750344276428223
    8. 'used' → logprob: -15.750344276428223
    9. '_p' → logprob: -16.00034523010254
    10. '```' → logprob: -16.25034523010254

Token 1050: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.35145655274391174
    2. 'arity' → logprob: -1.3514565229415894
    3. 'ar' → logprob: -3.601456642150879
    4. 'par' → logprob: -5.726456642150879
    5. 'neighbor' → logprob: -5.976456642150879
    6. 'ality' → logprob: -6.351456642150879
    7. '_par' → logprob: -7.726456642150879
    8. '_neighbor' → logprob: -7.726456642150879
    9. 'used' → logprob: -8.351456642150879
    10. 'adj' → logprob: -9.101456642150879

Token 1051: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.981667537620524e-06
    2. 'idx' → logprob: -13.875001907348633
    3. '[' → logprob: -14.875001907348633
    4. '```' → logprob: -15.625001907348633
    5. '[
' → logprob: -16.250001907348633
    6. '       ' → logprob: -16.625001907348633
    7. '   ' → logprob: -16.750001907348633
    8. '           ' → logprob: -16.875001907348633
    9. ' [' → logprob: -17.000001907348633
    10. ' idx' → logprob: -17.125001907348633

Token 1052: '_neighbor' (ID: 177120)
  Prédit: '_neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.0022644479759037495
    2. 'neighbor' → logprob: -6.127264499664307
    3. '_leaf' → logprob: -10.377264022827148
    4. '[' → logprob: -11.752264022827148
    5. '```' → logprob: -11.877264022827148
    6. '_idx' → logprob: -11.877264022827148
    7. '_neighbors' → logprob: -12.127264022827148
    8. 'Neighbor' → logprob: -12.252264022827148
    9. 'idx' → logprob: -12.627264022827148
    10. '
' → logprob: -13.002264022827148

Token 1053: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20151138305664062
    2. ' =' → logprob: -1.7015113830566406
    3. '<|end|>' → logprob: -9.57651138305664
    4. '=True' → logprob: -11.95151138305664
    5. '[' → logprob: -12.07651138305664
    6. '+=' → logprob: -12.45151138305664
    7. '=
' → logprob: -12.70151138305664
    8. '```' → logprob: -12.82651138305664
    9. ' +=' → logprob: -13.57651138305664
    10. '   ' → logprob: -14.32651138305664

Token 1054: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000522650487255305
    2. ' =' → logprob: -7.875522613525391
    3. '+=' → logprob: -8.87552261352539
    4. '```' → logprob: -14.50052261352539
    5. ' +=' → logprob: -14.62552261352539
    6. '==' → logprob: -14.62552261352539
    7. '=True' → logprob: -14.75052261352539
    8. '   ' → logprob: -15.12552261352539
    9. '=
' → logprob: -15.62552261352539
    10. ' ^=' → logprob: -15.62552261352539

Token 1055: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. '0' → logprob: -16.000001907348633
    4. '   ' → logprob: -16.500001907348633
    5. '           ' → logprob: -17.125001907348633
    6. '=' → logprob: -19.187501907348633
    7. '<|end|>' → logprob: -19.187501907348633
    8. '       ' → logprob: -19.750001907348633
    9. 'not' → logprob: -19.750001907348633
    10. 's' → logprob: -19.812501907348633

Token 1056: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -13.75000286102295
    3. '(' → logprob: -14.50000286102295
    4. '0' → logprob: -14.50000286102295
    5. 'list' → logprob: -15.12500286102295
    6. 'not' → logprob: -15.50000286102295
    7. '(not' → logprob: -15.75000286102295
    8. '=' → logprob: -16.562503814697266
    9. '(list' → logprob: -16.625003814697266
    10. '   ' → logprob: -16.937503814697266

Token 1057: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5918951034545898
    2. '   ' → logprob: -0.9668951034545898
    3. '           ' → logprob: -2.71689510345459
    4. '```' → logprob: -8.96689510345459
    5. '               ' → logprob: -9.96689510345459
    6. '                   ' → logprob: -10.46689510345459
    7. '
' → logprob: -10.46689510345459
    8. ',' → logprob: -10.71689510345459
    9. ' list' → logprob: -10.71689510345459
    10. '        
' → logprob: -10.96689510345459

Token 1058: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31885239481925964
    2. '       ' → logprob: -1.818852424621582
    3. '   ' → logprob: -2.318852424621582
    4. ' list' → logprob: -5.068852424621582
    5. 'list' → logprob: -5.193852424621582
    6. '               ' → logprob: -8.443852424621582
    7. '```' → logprob: -8.568852424621582
    8. '                   ' → logprob: -9.443852424621582
    9. '(list' → logprob: -10.818852424621582
    10. '            
' → logprob: -11.068852424621582

Token 1059: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.00011117222311440855
    2. '           ' → logprob: -9.87511157989502
    3. '   ' → logprob: -10.25011157989502
    4. '       ' → logprob: -11.00011157989502
    5. 'if' → logprob: -12.50011157989502
    6. ' list' → logprob: -13.75011157989502
    7. 'idx' → logprob: -14.00011157989502
    8. '               ' → logprob: -14.12511157989502
    9. 'for' → logprob: -14.25011157989502
    10. '```' → logprob: -14.87511157989502

Token 1060: '_result' (ID: 11623)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.7014437364414334e-05
    2. '_leaf' → logprob: -10.62502670288086
    3. 'node' → logprob: -13.87502670288086
    4. '_result' → logprob: -14.12502670288086
    5. '_adj' → logprob: -14.50002670288086
    6. '_edge' → logprob: -15.25002670288086
    7. '_nodes' → logprob: -16.62502670288086
    8. '```' → logprob: -17.62502670288086
    9. 'Node' → logprob: -17.87502670288086
    10. '   ' → logprob: -17.87502670288086

Token 1061: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.00015550498210359365
    2. '.append' → logprob: -9.625155448913574
    3. 'edges' → logprob: -9.625155448913574
    4. '```' → logprob: -11.125155448913574
    5. 'Edges' → logprob: -12.250155448913574
    6. '_' → logprob: -14.125155448913574
    7. ' edges' → logprob: -14.500155448913574
    8. '.edges' → logprob: -14.625155448913574
    9. '.extend' → logprob: -14.875155448913574
    10. '   ' → logprob: -15.000155448913574

Token 1062: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.165027217415627e-05
    2. '.' → logprob: -10.750021934509277
    3. '.extend' → logprob: -16.00002098083496
    4. ' .' → logprob: -16.75002098083496
    5. '.app' → logprob: -17.62502098083496
    6. 'append' → logprob: -19.25002098083496
    7. '.ap' → logprob: -19.87502098083496
    8. '.add' → logprob: -20.50002098083496
    9. '.remove' → logprob: -21.25002098083496
    10. '           ' → logprob: -21.50002098083496

Token 1063: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.023251067847013474
    2. '(' → logprob: -3.7732510566711426
    3. '(
' → logprob: -12.8982515335083
    4. ' (' → logprob: -14.2732515335083
    5. '(id' → logprob: -14.2732515335083
    6. '('' → logprob: -15.0232515335083
    7. '(index' → logprob: -15.1482515335083
    8. '(ix' → logprob: -15.2732515335083
    9. 'idx' → logprob: -15.3982515335083
    10. '((' → logprob: -15.5232515335083

Token 1064: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -4.084206375409849e-05
    2. 'edge' → logprob: -10.125041007995605
    3. '```' → logprob: -15.250041007995605
    4. 'Edge' → logprob: -16.00004005432129
    5. '_EDGE' → logprob: -16.00004005432129
    6. '_' → logprob: -16.50004005432129
    7. '
' → logprob: -17.37504005432129
    8. '-edge' → logprob: -17.50004005432129
    9. '_
' → logprob: -17.62504005432129
    10. '_edges' → logprob: -17.62504005432129

Token 1065: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -1.9743012671824545e-05
    2. '_' → logprob: -11.250020027160645
    3. ')' → logprob: -12.250020027160645
    4. '_LABEL' → logprob: -15.000020027160645
    5. 'label' → logprob: -15.125020027160645
    6. '   ' → logprob: -15.250020027160645
    7. '_
' → logprob: -16.000019073486328
    8. 'Label' → logprob: -16.000019073486328
    9. '
' → logprob: -16.000019073486328
    10. ' _' → logprob: -16.125019073486328

Token 1066: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39565935730934143
    2. '       ' → logprob: -1.395659327507019
    3. ')
' → logprob: -3.3956594467163086
    4. '   ' → logprob: -3.6456594467163086
    5. '           ' → logprob: -4.395659446716309
    6. '<|end|>' → logprob: -5.020659446716309
    7. '
' → logprob: -8.770659446716309
    8. '               ' → logprob: -9.020659446716309
    9. '<|end|>' → logprob: -9.270659446716309
    10. '  ' → logprob: -10.770659446716309

Token 1067: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.246022567152977
    2. '       ' → logprob: -1.6210225820541382
    3. 'list' → logprob: -4.121022701263428
    4. '           ' → logprob: -5.871022701263428
    5. ' list' → logprob: -7.371022701263428
    6. '```' → logprob: -8.24602222442627
    7. 'for' → logprob: -8.37102222442627
    8. '[' → logprob: -9.87102222442627
    9. '                   ' → logprob: -10.12102222442627
    10. '               ' → logprob: -10.24602222442627

Token 1068: ' list' (ID: 1562)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39824411273002625
    2. 'list' (adapté à ' list') → logprob: -1.5232441425323486
    3. '   ' → logprob: -2.2732441425323486
    4. '           ' → logprob: -5.0232439041137695
    5. '```' → logprob: -7.2732439041137695
    6. ' list' → logprob: -9.14824390411377
    7. '               ' → logprob: -9.89824390411377
    8. '        
' → logprob: -10.89824390411377
    9. '``' → logprob: -10.89824390411377
    10. '	list' → logprob: -11.77324390411377

Token 1069: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.339278580620885e-06
    2. '_leaf' → logprob: -13.500001907348633
    3. 'node' → logprob: -14.750001907348633
    4. '_adj' → logprob: -15.375001907348633
    5. '   ' → logprob: -16.750001907348633
    6. '```' → logprob: -17.000001907348633
    7. '_' → logprob: -17.125001907348633
    8. 'Node' → logprob: -17.750001907348633
    9. '_edge' → logprob: -18.000001907348633
    10. '
' → logprob: -18.250001907348633

Token 1070: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.004160552751272917
    2. 'degrees' → logprob: -5.504160404205322
    3. 'de' → logprob: -9.62916088104248
    4. '_used' → logprob: -11.75416088104248
    5. 'used' → logprob: -12.75416088104248
    6. '_degree' → logprob: -13.12916088104248
    7. '_par' → logprob: -13.50416088104248
    8. 'Degrees' → logprob: -13.75416088104248
    9. '_deg' → logprob: -15.12916088104248
    10. 'deg' → logprob: -15.37916088104248

Token 1071: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -9.221884101862088e-05
    2. 'g' → logprob: -10.000092506408691
    3. 'eg' → logprob: -10.750092506408691
    4. 'degrees' → logprob: -11.375092506408691
    5. 'gre' → logprob: -11.500092506408691
    6. 'gree' → logprob: -13.000092506408691
    7. '```' → logprob: -14.375092506408691
    8. 'gr' → logprob: -14.750092506408691
    9. 'gress' → logprob: -14.875092506408691
    10. '_g' → logprob: -15.625092506408691

Token 1072: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00016802136087790132
    2. '[' → logprob: -8.875167846679688
    3. '[list' → logprob: -10.750167846679688
    4. '```' → logprob: -12.750167846679688
    5. 'idx' → logprob: -13.875167846679688
    6. '[ix' → logprob: -15.000167846679688
    7. '[next' → logprob: -15.000167846679688
    8. '[ind' → logprob: -15.125167846679688
    9. '[
' → logprob: -15.250167846679688
    10. '[index' → logprob: -15.625167846679688

Token 1073: '_neighbor' (ID: 177120)
  Prédit: '_neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.009420528076589108
    2. '_leaf' → logprob: -4.884420394897461
    3. 'neighbor' → logprob: -7.009420394897461
    4. '_neighbors' → logprob: -7.259420394897461
    5. '_used' → logprob: -9.759420394897461
    6. '[' → logprob: -9.759420394897461
    7. '_ne' → logprob: -10.634420394897461
    8. '_adj' → logprob: -10.884420394897461
    9. '```' → logprob: -11.509420394897461
    10. 'Neighbor' → logprob: -11.759420394897461

Token 1074: ']' (ID: 60)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.02333492413163185
    2. ' -=' → logprob: -3.7733349800109863
    3. '-' → logprob: -9.773334503173828
    4. '   ' → logprob: -11.023334503173828
    5. '[idx' → logprob: -11.898334503173828
    6. '=' → logprob: -12.023334503173828
    7. '+=' → logprob: -13.148334503173828
    8. '[' → logprob: -14.773334503173828
    9. '```' → logprob: -15.148334503173828
    10. '           ' → logprob: -15.523334503173828

Token 1075: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0002234437270089984
    2. ' -=' → logprob: -8.500223159790039
    3. '-' → logprob: -10.875223159790039
    4. '=' → logprob: -14.125223159790039
    5. '+=' → logprob: -15.625223159790039
    6. '   ' → logprob: -15.875223159790039
    7. '[' → logprob: -18.75022315979004
    8. '```' → logprob: -19.50022315979004
    9. '       ' → logprob: -19.75022315979004
    10. '[-' → logprob: -20.12522315979004

Token 1076: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -17.375
    4. '```' → logprob: -20.25
    5. '۱' → logprob: -21.625
    6. '       ' → logprob: -21.75
    7. '
' → logprob: -22.125
    8. '<|end|>' → logprob: -22.25
    9. '  ' → logprob: -22.75
    10. '           ' → logprob: -22.875

Token 1077: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -17.375
    4. '   ' → logprob: -18.0
    5. '۱' → logprob: -19.125
    6. '<|end|>' → logprob: -19.5
    7. '2' → logprob: -20.5
    8. '=' → logprob: -20.6875
    9. '１' → logprob: -21.125
    10. '১' → logprob: -21.1875

Token 1078: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2282400280237198
    2. 'if' → logprob: -1.9782400131225586
    3. '   ' → logprob: -2.7282400131225586
    4. ' if' → logprob: -8.353240013122559
    5. '           ' → logprob: -8.853240013122559
    6. '	if' → logprob: -11.228240013122559
    7. '               ' → logprob: -11.978240013122559
    8. '	' → logprob: -12.353240013122559
    9. '	   ' → logprob: -12.353240013122559
    10. ' ' → logprob: -12.853240013122559

Token 1079: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01829930581152439
    2. '       ' → logprob: -4.893299102783203
    3. 'if' → logprob: -5.143299102783203
    4. ' if' → logprob: -5.518299102783203
    5. '	if' → logprob: -8.268299102783203
    6. '```' → logprob: -8.518299102783203
    7. ' ' → logprob: -9.268299102783203
    8. '           ' → logprob: -9.518299102783203
    9. '[' → logprob: -9.893299102783203
    10. '    
' → logprob: -11.268299102783203

Token 1080: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00787443295121193
    2. 'list' → logprob: -4.882874488830566
    3. '   ' → logprob: -8.382874488830566
    4. '       ' → logprob: -10.757874488830566
    5. ' if' → logprob: -11.382874488830566
    6. '```' → logprob: -12.757874488830566
    7. '	if' → logprob: -13.007874488830566
    8. '           ' → logprob: -13.507874488830566
    9. '	list' → logprob: -16.13287353515625
    10. '
' → logprob: -16.75787353515625

Token 1081: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.56102097814437e-05
    2. ' list' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.500045776367188
    4. ' ' → logprob: -18.750045776367188
    5. '       ' → logprob: -19.125045776367188
    6. '  ' → logprob: -19.375045776367188
    7. '    ' → logprob: -20.250045776367188
    8. '           ' → logprob: -20.500045776367188
    9. 'not' → logprob: -21.000045776367188
    10. '	list' → logprob: -21.000045776367188

Token 1082: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.3856492842023727e-06
    2. '_leaf' → logprob: -13.750000953674316
    3. '```' → logprob: -15.500000953674316
    4. 'node' → logprob: -16.750001907348633
    5. '
' → logprob: -17.250001907348633
    6. '_NODE' → logprob: -18.625001907348633
    7. '_edge' → logprob: -18.750001907348633
    8. '_neighbor' → logprob: -18.875001907348633
    9. 'Node' → logprob: -19.250001907348633
    10. 'append' → logprob: -19.500001907348633

Token 1083: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -4.008129963040119e-06
    2. 'degrees' → logprob: -13.125003814697266
    3. 'de' → logprob: -13.500003814697266
    4. '_node' → logprob: -14.625003814697266
    5. '	de' → logprob: -16.250003814697266
    6. '_degree' → logprob: -16.375003814697266
    7. '_DE' → logprob: -18.500003814697266
    8. '_deg' → logprob: -18.625003814697266
    9. 'node' → logprob: -18.750003814697266
    10. 'Degrees' → logprob: -19.375003814697266

Token 1084: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -0.0001431114797014743
    2. 'g' → logprob: -8.875143051147461
    3. 'degrees' → logprob: -13.125143051147461
    4. 'eg' → logprob: -14.750143051147461
    5. 'gree' → logprob: -14.875143051147461
    6. 'gress' → logprob: -15.500143051147461
    7. 'gr' → logprob: -16.50014305114746
    8. '```' → logprob: -16.62514305114746
    9. 'gre' → logprob: -17.37514305114746
    10. 'Degrees' → logprob: -18.50014305114746

Token 1085: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.5048530030981055e-06
    2. 'idx' → logprob: -13.625001907348633
    3. '   ' → logprob: -16.750001907348633
    4. '```' → logprob: -16.750001907348633
    5. '	idx' → logprob: -17.250001907348633
    6. '[
' → logprob: -17.250001907348633
    7. '       ' → logprob: -17.750001907348633
    8. '[' → logprob: -17.875001907348633
    9. '
' → logprob: -18.000001907348633
    10. ' idx' → logprob: -18.125001907348633

Token 1086: '_neighbor' (ID: 177120)
  Prédit: '_neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.00022916549642104656
    2. 'neighbor' → logprob: -8.500228881835938
    3. '```' → logprob: -11.125228881835938
    4. 'Neighbor' → logprob: -12.375228881835938
    5. '_leaf' → logprob: -13.375228881835938
    6. '_neighbors' → logprob: -13.500228881835938
    7. '[' → logprob: -13.875228881835938
    8. '_ne' → logprob: -14.125228881835938
    9. ' neighbor' → logprob: -14.625228881835938
    10. '_node' → logprob: -14.625228881835938

Token 1087: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3870852589607239
    2. ' ==' → logprob: -1.137085199356079
    3. ']==' → logprob: -9.2620849609375
    4. ')' → logprob: -10.2620849609375
    5. ']' → logprob: -10.5120849609375
    6. '```' → logprob: -11.0120849609375
    7. '[' → logprob: -11.2620849609375
    8. ')==' → logprob: -11.7620849609375
    9. '==
' → logprob: -12.0120849609375
    10. '<=' → logprob: -12.8870849609375

Token 1088: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00023596010578330606
    2. ' ==' → logprob: -8.375235557556152
    3. '==
' → logprob: -12.500235557556152
    4. '=' → logprob: -14.375235557556152
    5. '===' → logprob: -14.750235557556152
    6. '<=' → logprob: -15.250235557556152
    7. ']==' → logprob: -15.750235557556152
    8. '```' → logprob: -16.00023651123047
    9. '()==' → logprob: -17.25023651123047
    10. '#' → logprob: -17.37523651123047

Token 1089: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -17.250001907348633
    4. '=' → logprob: -18.875001907348633
    5. '       ' → logprob: -19.625001907348633
    6. '```' → logprob: -19.625001907348633
    7. '           ' → logprob: -20.125001907348633
    8. '
' → logprob: -21.125001907348633
    9. '==' → logprob: -21.250001907348633
    10. '۱' → logprob: -21.750001907348633

Token 1090: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -19.5
    4. '0' → logprob: -21.25
    5. '
' → logprob: -21.375
    6. '۱' → logprob: -21.625
    7. '```' → logprob: -21.875
    8. '=' → logprob: -22.0
    9. '[' → logprob: -22.375
    10. '' → logprob: -22.875

Token 1091: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7609112858772278
    2. ':
' → logprob: -0.7609112858772278
    3. ':' → logprob: -2.760911226272583
    4. '       ' → logprob: -7.135911464691162
    5. ',' → logprob: -7.885911464691162
    6. ' and' → logprob: -8.135910987854004
    7. '   ' → logprob: -8.510910987854004
    8. '.append' → logprob: -8.760910987854004
    9. '	       ' → logprob: -8.885910987854004
    10. '               ' → logprob: -9.385910987854004

Token 1092: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0823441669344902
    2. ' list' → logprob: -3.4573440551757812
    3. '       ' → logprob: -3.8323440551757812
    4. '	       ' → logprob: -4.207344055175781
    5. '	   ' → logprob: -5.457344055175781
    6. '   ' → logprob: -5.832344055175781
    7. '		' → logprob: -6.582344055175781
    8. '               ' → logprob: -7.707344055175781
    9. '	list' → logprob: -7.957344055175781
    10. '```' → logprob: -7.957344055175781

Token 1093: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.06073421612381935
    2. '   ' → logprob: -3.560734272003174
    3. '           ' → logprob: -4.185734272003174
    4. ' list' → logprob: -5.185734272003174
    5. '	list' → logprob: -5.185734272003174
    6. '       ' → logprob: -5.685734272003174
    7. '               ' → logprob: -7.810734272003174
    8. '		' → logprob: -8.685733795166016
    9. '```' → logprob: -10.060733795166016
    10. '	' → logprob: -10.435733795166016

Token 1094: '_leaf' (ID: 96627)
  Prédit: '_leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_leaf' → logprob: -0.00011081460979767144
    2. '_node' → logprob: -9.125110626220703
    3. 'leaf' → logprob: -13.875110626220703
    4. 'Leaf' → logprob: -14.375110626220703
    5. '_leave' → logprob: -16.000110626220703
    6. '_append' → logprob: -16.000110626220703
    7. '_edge' → logprob: -17.625110626220703
    8. '.append' → logprob: -17.625110626220703
    9. '_' → logprob: -17.875110626220703
    10. '_branch' → logprob: -18.250110626220703

Token 1095: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.00010640407708706334
    2. '_leaf' → logprob: -10.125106811523438
    3. 'stack' → logprob: -10.375106811523438
    4. '.append' → logprob: -11.125106811523438
    5. 'append' → logprob: -11.125106811523438
    6. '_append' → logprob: -12.250106811523438
    7. '_list' → logprob: -15.750106811523438
    8. '_push' → logprob: -15.875106811523438
    9. '_STACK' → logprob: -16.250106811523438
    10. 'Stack' → logprob: -16.750106811523438

Token 1096: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -14.250000953674316
    3. 'append' → logprob: -19.375
    4. '.app' → logprob: -20.0
    5. '.extend' → logprob: -20.875
    6. ' .' → logprob: -21.25
    7. '.ap' → logprob: -22.25
    8. '.push' → logprob: -22.75
    9. '   ' → logprob: -23.125
    10. '.Append' → logprob: -23.375

Token 1097: '(idx' (ID: 42793)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.000556012790184468
    2. '(idx' → logprob: -7.500555992126465
    3. ' idx' → logprob: -12.750555992126465
    4. '	idx' → logprob: -16.50055694580078
    5. '[idx' → logprob: -18.50055694580078
    6. '_idx' → logprob: -20.50055694580078
    7. '   ' → logprob: -21.75055694580078
    8. '.idx' → logprob: -21.87555694580078
    9. 'index' → logprob: -22.50055694580078
    10. 'Idx' → logprob: -23.75055694580078

Token 1098: '_neighbor' (ID: 177120)
  Prédit: '_neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.00011248346709180623
    2. '_node' → logprob: -9.500112533569336
    3. 'neighbor' → logprob: -10.375112533569336
    4. '```' → logprob: -12.750112533569336
    5. 'Neighbor' → logprob: -14.125112533569336
    6. '``' → logprob: -14.250112533569336
    7. '_ne' → logprob: -14.500112533569336
    8. '_neighbors' → logprob: -15.250112533569336
    9. '_edge' → logprob: -15.875112533569336
    10. '
' → logprob: -16.000112533569336

Token 1099: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003244990948587656
    2. '<|end|>' → logprob: -8.250324249267578
    3. ')
' → logprob: -10.125324249267578
    4. '()' → logprob: -12.625324249267578
    5. ' )' → logprob: -12.625324249267578
    6. ')return' → logprob: -13.000324249267578
    7. '```' → logprob: -13.125324249267578
    8. ']' → logprob: -13.125324249267578
    9. '<|end|>' → logprob: -13.125324249267578
    10. '   ' → logprob: -13.625324249267578

Token 1100: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12261171638965607
    2. 'if' → logprob: -2.3726117610931396
    3. 'for' → logprob: -3.8726117610931396
    4. '#' → logprob: -7.3726115226745605
    5. '```' → logprob: -7.8726115226745605
    6. '
' → logprob: -8.622611999511719
    7. 'list' → logprob: -9.122611999511719
    8. ')
' → logprob: -10.872611999511719
    9. '#print' → logprob: -11.497611999511719
    10. '#
' → logprob: -11.997611999511719

Token 1101: ' ' (ID: 220)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.7099491357803345
    2. ' any' → logprob: -1.3349491357803345
    3. 'all' → logprob: -2.209949016571045
    4. 'any' → logprob: -2.959949016571045
    5. ' list' → logprob: -3.834949016571045
    6. ' len' → logprob: -3.959949016571045
    7. ' sum' → logprob: -4.209949016571045
    8. ' not' → logprob: -4.459949016571045
    9. 'sum' → logprob: -4.584949016571045
    10. 'list' → logprob: -5.709949016571045

Token 1102: '1' (ID: 16)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6450064182281494
    2. 'list' → logprob: -1.6450064182281494
    3. 'len' → logprob: -1.7700064182281494
    4. 'any' → logprob: -2.5200064182281494
    5. 'sum' → logprob: -3.5200064182281494
    6. 'not' → logprob: -6.89500617980957
    7. 'set' → logprob: -7.77000617980957
    8. 'print' → logprob: -9.14500617980957
    9. 'sorted' → logprob: -9.27000617980957
    10. '0' → logprob: -9.52000617980957

Token 1103: ' in' (ID: 306)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9409914016723633
    2. ' ==' → logprob: -1.0659914016723633
    3. '<len' → logprob: -2.4409914016723633
    4. ':' → logprob: -2.6909914016723633
    5. 'len' → logprob: -3.4409914016723633
    6. ' in' → logprob: -3.4409914016723633
    7. 'in' → logprob: -4.065991401672363
    8. '(len' → logprob: -4.565991401672363
    9. '(list' → logprob: -5.440991401672363
    10. ' len' → logprob: -5.440991401672363

Token 1104: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.003177952254191041
    2. ' list' → logprob: -5.753178119659424
    3. '(list' → logprob: -15.503177642822266
    4. '[list' → logprob: -16.503177642822266
    5. ':list' → logprob: -19.128177642822266
    6. 'var' → logprob: -19.253177642822266
    7. '	list' → logprob: -19.503177642822266
    8. '$list' → logprob: -20.128177642822266
    9. '```' → logprob: -20.128177642822266
    10. '`' → logprob: -20.253177642822266

Token 1105: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: 0.0
    2. 'node' → logprob: -17.375
    3. '_leaf' → logprob: -18.75
    4. '_par' → logprob: -18.875
    5. '_result' → logprob: -19.75
    6. '_nodes' → logprob: -20.375
    7. '_' → logprob: -20.875
    8. '_NODE' → logprob: -21.25
    9. '_user' → logprob: -21.625
    10. '_Node' → logprob: -21.875

Token 1106: '_par' (ID: 31329)
  Prédit: '_par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -1.0280383548888494e-06
    2. 'par' → logprob: -15.250000953674316
    3. '_de' → logprob: -15.250000953674316
    4. '_per' → logprob: -16.250001907348633
    5. '_p' → logprob: -16.250001907348633
    6. '_used' → logprob: -16.625001907348633
    7. '_pal' → logprob: -16.875001907348633
    8. '_' → logprob: -17.375001907348633
    9. '\' → logprob: -17.625001907348633
    10. '_parallel' → logprob: -17.750001907348633

Token 1107: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -6.153795766294934e-06
    2. 'ty' → logprob: -12.375005722045898
    3. 'arity' → logprob: -14.375005722045898
    4. '_node' → logprob: -14.625005722045898
    5. '_' → logprob: -15.250005722045898
    6. '```' → logprob: -15.500005722045898
    7. '[' → logprob: -15.750005722045898
    8. 'node' → logprob: -16.8750057220459
    9. 'aty' → logprob: -17.3750057220459
    10. 'it' → logprob: -17.8750057220459

Token 1108: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6329360008239746
    2. ':' → logprob: -0.7579360008239746
    3. ' :' → logprob: -8.757936477661133
    4. '[' → logprob: -9.632936477661133
    5. ' :
' → logprob: -10.507936477661133
    6. '[:' → logprob: -11.507936477661133
    7. ':return' → logprob: -11.507936477661133
    8. ':not' → logprob: -11.632936477661133
    9. ':list' → logprob: -11.882936477661133
    10. ' and' → logprob: -11.882936477661133

Token 1109: '   ' (ID: 271)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3626141846179962
    2. ':' → logprob: -1.2376141548156738
    3. 'print' → logprob: -4.737614154815674
    4. '   ' → logprob: -5.362614154815674
    5. '       ' → logprob: -9.112614631652832
    6. '):
' → logprob: -9.362614631652832
    7. ' print' → logprob: -9.737614631652832
    8. '[' → logprob: -9.737614631652832
    9. ' and' → logprob: -9.862614631652832
    10. '():
' → logprob: -10.237614631652832

Token 1110: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009176511666737497
    2. '   ' → logprob: -7.250917434692383
    3. '```' → logprob: -8.750917434692383
    4. ' print' → logprob: -10.000917434692383
    5. '``' → logprob: -12.500917434692383
    6. '	print' → logprob: -15.500917434692383
    7. '       ' → logprob: -16.625917434692383
    8. '
' → logprob: -17.750917434692383
    9. '#' → logprob: -18.500917434692383
    10. 'for' → logprob: -20.000917434692383

Token 1111: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0002084277366520837
    2. '-' → logprob: -8.500208854675293
    3. '(' → logprob: -12.375208854675293
    4. '("-' → logprob: -14.625208854675293
    5. '(
' → logprob: -15.750208854675293
    6. '('-' → logprob: -18.375207901000977
    7. '()-' → logprob: -18.875207901000977
    8. '```' → logprob: -19.125207901000977
    9. '{-' → logprob: -19.875207901000977
    10. '[-' → logprob: -20.875207901000977

Token 1112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '-' → logprob: -15.875
    3. '2' → logprob: -15.875
    4. ' ' → logprob: -17.75
    5. '4' → logprob: -18.375
    6. '0' → logprob: -18.375
    7. '3' → logprob: -18.875
    8. '10' → logprob: -19.25
    9. '   ' → logprob: -19.25
    10. '9' → logprob: -19.375

Token 1113: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04215633496642113
    2. ')' → logprob: -3.667156219482422
    3. '   ' → logprob: -4.167156219482422
    4. 'else' → logprob: -8.417156219482422
    5. ' )
' → logprob: -12.167156219482422
    6. ')
' → logprob: -12.917156219482422
    7. ')return' → logprob: -13.042156219482422
    8. '```' → logprob: -13.667156219482422
    9. ' else' → logprob: -14.292156219482422
    10. '())
' → logprob: -14.792156219482422

Token 1114: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00014597235713154078
    2. '```' → logprob: -9.87514591217041
    3. 'continue' → logprob: -10.62514591217041
    4. '
' → logprob: -11.00014591217041
    5. 'print' → logprob: -11.00014591217041
    6. ' else' → logprob: -11.37514591217041
    7. '   ' → logprob: -11.50014591217041
    8. 'elif' → logprob: -12.12514591217041
    9. '``' → logprob: -13.00014591217041
    10. 'return' → logprob: -13.12514591217041

Token 1115: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.029119884595274925
    2. ':' → logprob: -3.9041199684143066
    3. '   ' → logprob: -4.779119968414307
    4. 'print' → logprob: -9.529119491577148
    5. ' :
' → logprob: -10.404119491577148
    6. '():
' → logprob: -11.654119491577148
    7. ' print' → logprob: -11.779119491577148
    8. '       ' → logprob: -12.654119491577148
    9. ':

' → logprob: -12.904119491577148
    10. ':
' → logprob: -13.154119491577148

Token 1116: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. '   ' → logprob: -15.125000953674316
    3. '```' → logprob: -15.125000953674316
    4. ' print' → logprob: -15.750000953674316
    5. 'for' → logprob: -17.125
    6. '``' → logprob: -19.375
    7. '#print' → logprob: -19.375
    8. '(print' → logprob: -20.125
    9. 'printf' → logprob: -20.25
    10. '	print' → logprob: -20.375

Token 1117: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9146995327901095e-05
    2. 'for' → logprob: -11.000019073486328
    3. 'list' → logprob: -13.000019073486328
    4. '   ' → logprob: -17.250019073486328
    5. ' print' → logprob: -17.250019073486328
    6. 'if' → logprob: -17.625019073486328
    7. '```' → logprob: -18.250019073486328
    8. 'sys' → logprob: -18.750019073486328
    9. 'printf' → logprob: -19.875019073486328
    10. '       ' → logprob: -20.875019073486328

Token 1118: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0008559550042264163
    2. 'len' → logprob: -7.125855922698975
    3. '(*' → logprob: -10.500856399536133
    4. '(sum' → logprob: -11.000856399536133
    5. '("' → logprob: -12.500856399536133
    6. '('' → logprob: -13.375856399536133
    7. '(' → logprob: -13.625856399536133
    8. '('\' → logprob: -15.625856399536133
    9. 'sum' → logprob: -15.875856399536133
    10. '(sorted' → logprob: -16.125856399536133

Token 1119: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.0002726601669564843
    2. '(' → logprob: -8.375272750854492
    3. 'list' → logprob: -10.125272750854492
    4. ' list' → logprob: -14.125272750854492
    5. ' (' → logprob: -14.125272750854492
    6. '(
' → logprob: -15.125272750854492
    7. ')' → logprob: -15.625272750854492
    8. '=list' → logprob: -17.250272750854492
    9. '$list' → logprob: -17.375272750854492
    10. '(result' → logprob: -17.750272750854492

Token 1120: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -6.749814019713085e-06
    2. '(list' → logprob: -12.125006675720215
    3. '_list' → logprob: -13.875006675720215
    4. 'result' → logprob: -15.500006675720215
    5. '(' → logprob: -18.00000762939453
    6. '_results' → logprob: -18.12500762939453
    7. 'list' → logprob: -18.37500762939453
    8. 'Result' → logprob: -18.50000762939453
    9. '(result' → logprob: -18.87500762939453
    10. '_' → logprob: -19.00000762939453

Token 1121: '_edges' (ID: 68870)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.6182088255882263
    2. '_edges' → logprob: -0.8682088255882263
    3. '_result' → logprob: -3.618208885192871
    4. ')' → logprob: -5.368208885192871
    5. '_list' → logprob: -5.993208885192871
    6. '_results' → logprob: -5.993208885192871
    7. 'list' → logprob: -6.618208885192871
    8. '(' → logprob: -6.868208885192871
    9. '_' → logprob: -6.993208885192871
    10. ')
' → logprob: -7.993208885192871

Token 1122: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.004170883446931839
    2. ')' → logprob: -5.504170894622803
    3. ',' → logprob: -9.379170417785645
    4. ' )
' → logprob: -12.004170417785645
    5. ')
' → logprob: -14.129170417785645
    6. ',
' → logprob: -14.504170417785645
    7. ')`
' → logprob: -15.379170417785645
    8. ',)
' → logprob: -15.379170417785645
    9. '   ' → logprob: -16.50417137145996
    10. '
' → logprob: -17.25417137145996

Token 1123: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5856744647026062
    2. 'print' → logprob: -0.8356744647026062
    3. '   ' → logprob: -4.835674285888672
    4. '```' → logprob: -6.835674285888672
    5. ' for' → logprob: -7.710674285888672
    6. '``' → logprob: -9.835674285888672
    7. '    
' → logprob: -10.210674285888672
    8. 'list' → logprob: -10.585674285888672
    9. ')
' → logprob: -10.710674285888672
    10. '[
' → logprob: -10.960674285888672

Token 1124: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3132801651954651
    2. 'print' (adapté à ' print') → logprob: -1.3132801055908203
    3. 'if' → logprob: -11.56328010559082
    4. '   ' → logprob: -12.06328010559082
    5. '```' → logprob: -12.93828010559082
    6. ' for' → logprob: -14.81328010559082
    7. 'list' → logprob: -15.18828010559082
    8. ' print' → logprob: -16.68828010559082
    9. '    
' → logprob: -17.81328010559082
    10. '``' → logprob: -18.18828010559082

Token 1125: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.006886934861540794
    2. '("' → logprob: -5.256886959075928
    3. '('' → logprob: -6.506886959075928
    4. '*' → logprob: -9.25688648223877
    5. '(' → logprob: -10.00688648223877
    6. '(*(' → logprob: -11.38188648223877
    7. '"' → logprob: -12.13188648223877
    8. ''' → logprob: -14.50688648223877
    9. '(
' → logprob: -14.75688648223877
    10. '()' → logprob: -14.88188648223877

Token 1126: 'sorted' (ID: 64288)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -6.2729995988775045e-06
    2. 'sorted' → logprob: -12.000006675720215
    3. '(list' → logprob: -17.7500057220459
    4. ' list' → logprob: -19.7500057220459
    5. '[list' → logprob: -21.2500057220459
    6. '(sorted' → logprob: -22.2500057220459
    7. 'map' → logprob: -22.6250057220459
    8. '	list' → logprob: -24.2500057220459
    9. 'tuple' → logprob: -25.0000057220459
    10. '$list' → logprob: -25.7500057220459

Token 1127: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -1.306760805164231e-05
    2. 'list' → logprob: -11.25001335144043
    3. '(' → logprob: -17.50001335144043
    4. '[list' → logprob: -20.00001335144043
    5. '(
' → logprob: -20.25001335144043
    6. '=list' → logprob: -20.37501335144043
    7. '$list' → logprob: -20.75001335144043
    8. '(lst' → logprob: -21.75001335144043
    9. '(set' → logprob: -21.87501335144043
    10. ',list' → logprob: -22.00001335144043

Token 1128: '_result' (ID: 11623)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.08632040023803711
    2. '(list' → logprob: -3.211320400238037
    3. '_result' → logprob: -3.211320400238037
    4. 'result' → logprob: -6.586320400238037
    5. '_list' → logprob: -7.336320400238037
    6. '[list' → logprob: -10.461320877075195
    7. ')' → logprob: -11.711320877075195
    8. '=list' → logprob: -12.211320877075195
    9. '_results' → logprob: -12.336320877075195
    10. '```' → logprob: -12.461320877075195

Token 1129: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -1.7432603272027336e-06
    2. 'edges' → logprob: -13.500001907348633
    3. 'Edges' → logprob: -15.500001907348633
    4. '_ed' → logprob: -17.375001907348633
    5. '_nodes' → logprob: -17.750001907348633
    6. '```' → logprob: -17.750001907348633
    7. ')' → logprob: -18.125001907348633
    8. 'es' → logprob: -18.250001907348633
    9. 's' → logprob: -18.375001907348633
    10. '_angles' → logprob: -19.125001907348633

Token 1130: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001737431448418647
    2. '))' → logprob: -9.375173568725586
    3. '())' → logprob: -9.375173568725586
    4. '()' → logprob: -12.625173568725586
    5. ' )' → logprob: -14.500173568725586
    6. '(' → logprob: -16.625173568725586
    7. ')
' → logprob: -17.250173568725586
    8. ')))' → logprob: -17.250173568725586
    9. '])' → logprob: -17.625173568725586
    10. '   ' → logprob: -17.625173568725586


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1128
Tokens correctement prédits (1ère position, stricte): 540
Tokens correctement prédits (1ère position, avec adaptation): 575
Tokens correctement prédits (top 10): 995
Précision stricte (1ère position): 47.87%
Précision adaptée (1ère position): 50.98%
Précision (top 10): 88.21%
================================================================================
