================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce, lru_cache, partial
import sys, itertools, operator as op, functools as ft

sys.setrecursionlimit(int('1' * 5) * int('2' * 5))  # 100000

acinput = lambda: list(map(int, __import__('sys').stdin.readline().split()))

II = lambda: int(__import__('sys').stdin.readline())
mod = 10**9+7

def factorial(n):
    """Factorial, via functools.reduce and operator.mul, with itertools.chain for 1-edge cases"""
    return reduce(op.mul, itertools.chain([1], range(1, n+1)))

def cmb2(n, r):
    # Binomial coefficient via itertools.accumulate and fractions for excess ingenuity
    from fractions import Fraction
    r = min(r, n - r)
    if r == 0:
        return 1
    nums = (n-i for i in range(r))
    dens = (i+1 for i in range(r))
    f = lambda acc, x: acc * x
    num = reduce(f, nums, 1)
    den = reduce(f, dens, 1)
    # Use Fraction to ensure reduction and conversion at the end
    return int(Fraction(num, den))

egcd = lambda a, b: (b, 0, 1) if not a else (
    lambda g, y, x: (g, x - (b//a)*y, y))(*egcd(b % a, a))

def modinv(a, m):
    # Modular inverse using pow and custom not-operator
    # Return pow(a, -1, m) if Python >=3.8, else egcd
    try:
        return pow(a, -1, m)
    except TypeError:
        g, x, y = egcd(a, m)
        if g != 1: raise Exception('modular inverse does not exist')
        return x % m

def combination(n, r, mod=mod):
    # Combination mod using reduce, map, lambda, and modinv -- all together
    r = min(r, n - r)
    ts = zip(range(n, n - r, -1), range(1, r+1))
    return reduce(lambda acc, tpl: acc * tpl[0] * modinv(tpl[1], mod) % mod, ts, 1)

def modpow(a, n, mod):
    # Exponentiation by squaring, abusing reduce and itertools
    # Not at all optimal, very creative
    bits = bin(n)[2:]
    pow_chain = (int(b) for b in bits)
    res = 1
    base_powers = []
    b = a
    for bi in reversed(bits):
        if bi == '1':
            base_powers.append(b)
        b = b * b % mod
    return reduce(lambda x, y: x*y%mod, base_powers, 1) if base_powers else 1

n, a, b = acinput()

c = sum(map(lambda k: combination(n, min(k, n-k)), [n - a, n - b]))

print((modpow(2, n, mod) - c - 1) % mod)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.25372281670570374
    2. 'partial' → logprob: -1.7537227869033813
    3. 'reduce' → logprob: -3.503722906112671
    4. ' wraps' → logprob: -4.003722667694092
    5. 'l' → logprob: -6.753722667694092
    6. ' partial' → logprob: -7.378722667694092
    7. 'cache' → logprob: -8.37872314453125
    8. '```' → logprob: -8.62872314453125
    9. 'cached' → logprob: -9.00372314453125
    10. 'cmp' → logprob: -9.25372314453125

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019195254892110825
    2. '(lambda' → logprob: -4.394195079803467
    3. '.' → logprob: -5.144195079803467
    4. ',' → logprob: -8.019195556640625
    5. ' (' → logprob: -8.519195556640625
    6. '```' → logprob: -9.519195556640625
    7. '(
' → logprob: -10.144195556640625
    8. '\(' → logprob: -10.269195556640625
    9. '\' → logprob: -10.394195556640625
    10. 'lambda' → logprob: -11.019195556640625

Token 5: ' l' (ID: 305)
  Prédit: ' partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' partial' → logprob: -0.2739412784576416
    2. 'partial' → logprob: -1.6489412784576416
    3. ' operator' → logprob: -3.3989412784576416
    4. 'operator' → logprob: -4.6489410400390625
    5. ' cmp' → logprob: -6.8989410400390625
    6. 'wrap' → logprob: -7.3989410400390625
    7. '```' → logprob: -7.5239410400390625
    8. ' ' → logprob: -7.6489410400390625
    9. '.partial' → logprob: -7.7739410400390625
    10. ' accumulate' → logprob: -8.273941040039062

Token 6: 'ru' (ID: 1942)
  Prédit: 'ambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ambda' → logprob: -0.4444900155067444
    2. 'amb' → logprob: -1.1944899559020996
    3. 'ist' → logprob: -3.3194899559020996
    4. 'ru' → logprob: -5.1944899559021
    5. 'map' → logprob: -5.3194899559021
    6. 'lambda' → logprob: -6.3194899559021
    7. 'am' → logprob: -6.5694899559021
    8. 'a' → logprob: -6.5694899559021
    9. '```' → logprob: -7.1944899559021
    10. 'l' → logprob: -7.1944899559021

Token 7: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -3.2020991056924686e-05
    2. 'cache' → logprob: -11.250032424926758
    3. '_' → logprob: -12.000032424926758
    4. '_cached' → logprob: -12.250032424926758
    5. '_c' → logprob: -12.500032424926758
    6. '```' → logprob: -13.625032424926758
    7. '_ca' → logprob: -13.875032424926758
    8. '\' → logprob: -14.125032424926758
    9. 'Cache' → logprob: -15.625032424926758
    10. '_CACHE' → logprob: -15.625032424926758

Token 8: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06291704624891281
    2. '(
' → logprob: -4.062917232513428
    3. '\' → logprob: -4.062917232513428
    4. 'def' → logprob: -4.937917232513428
    5. ',' → logprob: -5.187917232513428
    6. '@' → logprob: -5.437917232513428
    7. '\n' → logprob: -6.062917232513428
    8. '\(' → logprob: -6.562917232513428
    9. '
' → logprob: -6.812917232513428
    10. '#' → logprob: -6.937917232513428

Token 9: ' partial' (ID: 13664)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.7127698063850403
    2. ' partial' → logprob: -1.3377697467803955
    3. ' wraps' → logprob: -1.7127697467803955
    4. 'wrap' → logprob: -3.4627697467803955
    5. ' singled' → logprob: -3.9627697467803955
    6. 'cached' → logprob: -5.462769985198975
    7. ' total' → logprob: -5.837769985198975
    8. ' cached' → logprob: -5.962769985198975
    9. 'total' → logprob: -6.462769985198975
    10. ' cmp' → logprob: -6.587769985198975

Token 10: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22105124592781067
    2. '(' → logprob: -2.2210512161254883
    3. ',' → logprob: -2.9710512161254883
    4. '\' → logprob: -3.9710512161254883
    5. 'import' → logprob: -5.721051216125488
    6. 'def' → logprob: -6.096051216125488
    7. '```' → logprob: -6.096051216125488
    8. '(
' → logprob: -6.471051216125488
    9. '[' → logprob: -6.846051216125488
    10. ')' → logprob: -6.971051216125488

Token 11: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13205914199352264
    2. '.' → logprob: -2.257059097290039
    3. ',' → logprob: -5.257059097290039
    4. '(
' → logprob: -5.257059097290039
    5. '\' → logprob: -5.882059097290039
    6. '```' → logprob: -6.507059097290039
    7. 'def' → logprob: -7.257059097290039
    8. '\n' → logprob: -7.882059097290039
    9. ' (' → logprob: -8.007059097290039
    10. '\(' → logprob: -8.132059097290039

Token 12: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.08111850917339325
    2. ' math' → logprob: -3.206118583679199
    3. ' sys' → logprob: -3.956118583679199
    4. ' itertools' → logprob: -4.456118583679199
    5. ' operator' → logprob: -5.956118583679199
    6. ' collections' → logprob: -6.331118583679199
    7. ' numpy' → logprob: -7.581118583679199
    8. ' re' → logprob: -7.831118583679199
    9. ' functools' → logprob: -7.956118583679199
    10. 'os' → logprob: -7.956118583679199

Token 13: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0043169260025024
    2. '\n' → logprob: -1.6293169260025024
    3. '\' → logprob: -2.004316806793213
    4. '
' → logprob: -2.129316806793213
    5. '```' → logprob: -2.629316806793213
    6. ',' → logprob: -3.129316806793213
    7. '

' → logprob: -3.754316806793213
    8. '<|end|>' → logprob: -4.629316806793213
    9. 'import' → logprob: -5.004316806793213
    10. '[' → logprob: -5.504316806793213

Token 14: ' itertools' (ID: 103178)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.058049269020557404
    2. ' os' → logprob: -2.933049201965332
    3. 'math' → logprob: -6.683049201965332
    4. 'io' → logprob: -7.558049201965332
    5. 'operator' → logprob: -7.558049201965332
    6. 'collections' → logprob: -8.183049201965332
    7. ' threading' → logprob: -9.183049201965332
    8. ' itertools' → logprob: -9.308049201965332
    9. ' math' → logprob: -9.558049201965332
    10. ' collections' → logprob: -10.183049201965332

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25558754801750183
    2. '
' → logprob: -2.255587577819824
    3. '.' → logprob: -3.255587577819824
    4. '

' → logprob: -3.255587577819824
    5. '<|end|>' → logprob: -4.005587577819824
    6. ',
' → logprob: -5.380587577819824
    7. 'import' → logprob: -5.380587577819824
    8. '\n' → logprob: -5.630587577819824
    9. ',

' → logprob: -6.005587577819824
    10. '<|end|>' → logprob: -6.130587577819824

Token 16: ' operator' (ID: 11019)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.6362624764442444
    2. 'os' → logprob: -1.7612624168395996
    3. ' operator' → logprob: -1.7612624168395996
    4. 'collections' → logprob: -2.8862624168395996
    5. 'math' → logprob: -3.1362624168395996
    6. ' collections' → logprob: -4.5112624168396
    7. ' os' → logprob: -4.8862624168396
    8. ' math' → logprob: -5.1362624168396
    9. 'heap' → logprob: -6.6362624168396
    10. 're' → logprob: -8.011262893676758

Token 17: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1011735275387764
    2. '.' → logprob: -3.2261736392974854
    3. '\' → logprob: -4.101173400878906
    4. '```' → logprob: -4.101173400878906
    5. '\n' → logprob: -5.226173400878906
    6. ',
' → logprob: -5.476173400878906
    7. '
' → logprob: -5.601173400878906
    8. '<|end|>' → logprob: -5.726173400878906
    9. '`' → logprob: -6.726173400878906
    10. ',

' → logprob: -6.976173400878906

Token 18: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.20413324236869812
    2. ' op' → logprob: -1.7041332721710205
    3. 'operator' → logprob: -7.329133033752441
    4. 'opt' → logprob: -7.454133033752441
    5. 'ops' → logprob: -7.579133033752441
    6. 'oper' → logprob: -7.954133033752441
    7. 'opy' → logprob: -8.454133033752441
    8. ' ' → logprob: -9.704133033752441
    9. ' opt' → logprob: -10.079133033752441
    10. '	op' → logprob: -10.079133033752441

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02291884832084179
    2. '<|end|>' → logprob: -4.522918701171875
    3. '.' → logprob: -5.897918701171875
    4. ',
' → logprob: -6.022918701171875
    5. ' ' → logprob: -6.647918701171875
    6. 'import' → logprob: -7.022918701171875
    7. '\' → logprob: -7.272918701171875
    8. '\n' → logprob: -7.272918701171875
    9. '
' → logprob: -7.397918701171875
    10. ')' → logprob: -7.522918701171875

Token 20: ' functools' (ID: 142636)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.7491841912269592
    2. 'collections' → logprob: -0.9991841912269592
    3. 'os' → logprob: -2.1241841316223145
    4. 'heap' → logprob: -4.6241841316223145
    5. ' collections' → logprob: -4.7491841316223145
    6. ' math' → logprob: -4.9991841316223145
    7. 'operator' → logprob: -5.7491841316223145
    8. 're' → logprob: -5.9991841316223145
    9. 'fun' → logprob: -5.9991841316223145
    10. 'random' → logprob: -6.4991841316223145

Token 21: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.26543372869491577
    2. ',' → logprob: -1.5154337882995605
    3. '\' → logprob: -5.7654337882995605
    4. '<|end|>' → logprob: -5.8904337882995605
    5. ',
' → logprob: -6.6404337882995605
    6. '
' → logprob: -7.3904337882995605
    7. '#' → logprob: -7.3904337882995605
    8. '.
' → logprob: -7.6404337882995605
    9. 'import' → logprob: -7.7654337882995605
    10. ')' → logprob: -7.7654337882995605

Token 22: ' ft' (ID: 16280)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.19028796255588531
    2. 'f' → logprob: -2.4402880668640137
    3. 'ft' → logprob: -2.8152880668640137
    4. ' ft' → logprob: -4.940288066864014
    5. ' functools' → logprob: -5.315288066864014
    6. 'func' → logprob: -5.440288066864014
    7. 'fp' → logprob: -5.690288066864014
    8. '_ft' → logprob: -6.190288066864014
    9. '_f' → logprob: -6.440288066864014
    10. ' f' → logprob: -7.565288066864014

Token 23: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3898051679134369
    2. ',' → logprob: -1.1398051977157593
    3. '<|end|>' → logprob: -7.264805316925049
    4. ' ' → logprob: -7.889805316925049
    5. '_' → logprob: -8.01480484008789
    6. ',
' → logprob: -8.13980484008789
    7. ')' → logprob: -8.26480484008789
    8. '.
' → logprob: -8.88980484008789
    9. 'import' → logprob: -8.88980484008789
    10. '
' → logprob: -9.13980484008789

Token 24: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.47241872549057007
    2. ',' → logprob: -1.2224187850952148
    3. 'def' → logprob: -3.972418785095215
    4. '#' → logprob: -4.597418785095215
    5. '\' → logprob: -5.347418785095215
    6. '_' → logprob: -5.347418785095215
    7. '
' → logprob: -5.347418785095215
    8. '@' → logprob: -5.347418785095215
    9. ',
' → logprob: -5.347418785095215
    10. '.
' → logprob: -5.597418785095215

Token 25: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00010282796574756503
    2. '.exit' → logprob: -10.500102996826172
    3. '.stdout' → logprob: -11.125102996826172
    4. '.argv' → logprob: -11.500102996826172
    5. '.setdefault' → logprob: -11.500102996826172
    6. ' .' → logprob: -11.875102996826172
    7. '.readline' → logprob: -12.000102996826172
    8. '.stdin' → logprob: -12.125102996826172
    9. '.stderr' → logprob: -12.250102996826172
    10. '.version' → logprob: -13.000102996826172

Token 26: 'rec' (ID: 9285)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.6950013637542725
    2. ' _' → logprob: -2.1950013637542725
    3. '_rec' → logprob: -2.1950013637542725
    4. 'rec' → logprob: -2.1950013637542725
    5. '_version' → logprob: -3.6950013637542725
    6. '_execution' → logprob: -3.8200013637542725
    7. '_int' → logprob: -4.070001602172852
    8. '_max' → logprob: -4.195001602172852
    9. '_exc' → logprob: -4.445001602172852
    10. '_trace' → logprob: -4.570001602172852

Token 27: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0005635190173052251
    2. 'urs' → logprob: -8.625563621520996
    3. 'limit' → logprob: -8.750563621520996
    4. 'ursive' → logprob: -9.000563621520996
    5. 'ur' → logprob: -9.375563621520996
    6. 'urse' → logprob: -12.125563621520996
    7. 'ursor' → logprob: -12.500563621520996
    8. 'urf' → logprob: -13.000563621520996
    9. 'urst' → logprob: -13.750563621520996
    10. 'usion' → logprob: -14.125563621520996

Token 28: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.011075885966420174
    2. '_limit' → logprob: -4.511075973510742
    3. 'lim' → logprob: -10.886075973510742
    4. '_depth' → logprob: -12.136075973510742
    5. ' limit' → logprob: -13.011075973510742
    6. 'depth' → logprob: -13.761075973510742
    7. '_lim' → logprob: -14.761075973510742
    8. '-limit' → logprob: -15.261075973510742
    9. '.limit' → logprob: -16.261075973510742
    10. 'Limit' → logprob: -17.011075973510742

Token 29: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6240566083070007e-06
    2. ' (' → logprob: -14.750001907348633
    3. '(
' → logprob: -15.000001907348633
    4. '(

' → logprob: -15.500001907348633
    5. '((' → logprob: -15.500001907348633
    6. '()' → logprob: -15.875001907348633
    7. '("("' → logprob: -16.750001907348633
    8. '```' → logprob: -16.875001907348633
    9. '(`' → logprob: -17.375001907348633
    10. ')' → logprob: -17.500001907348633

Token 30: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008727794513106346
    2. '('' → logprob: -4.75872802734375
    3. '("' → logprob: -9.75872802734375
    4. ' (' → logprob: -10.25872802734375
    5. ')' → logprob: -12.50872802734375
    6. '((' → logprob: -12.88372802734375
    7. ')(' → logprob: -13.00872802734375
    8. '1' → logprob: -13.25872802734375
    9. '(`' → logprob: -13.25872802734375
    10. ''' → logprob: -13.88372802734375

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15387089550495148
    2. ''' → logprob: -2.5288708209991455
    3. '(' → logprob: -3.0288708209991455
    4. '9' → logprob: -5.778871059417725
    5. '('' → logprob: -5.903871059417725
    6. ' ' → logprob: -6.028871059417725
    7. '3' → logprob: -6.153871059417725
    8. '2' → logprob: -6.528871059417725
    9. '10' → logprob: -7.153871059417725
    10. '100' → logprob: -7.528871059417725

Token 32: ''' (ID: 6)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.3195209205150604
    2. '0' → logprob: -1.6945209503173828
    3. 'e' → logprob: -2.694520950317383
    4. '00' → logprob: -4.944520950317383
    5. '2' → logprob: -5.194520950317383
    6. '07' → logprob: -6.194520950317383
    7. '8' → logprob: -7.069520950317383
    8. '9' → logprob: -7.194520950317383
    9. '06' → logprob: -7.319520950317383
    10. '6' → logprob: -7.444520950317383

Token 33: ' *' (ID: 425)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.09114966541528702
    2. '0' → logprob: -2.7161495685577393
    3. '000' → logprob: -4.216149806976318
    4. '8' → logprob: -6.341149806976318
    5. '7' → logprob: -6.841149806976318
    6. '6' → logprob: -7.091149806976318
    7. '2' → logprob: -7.216149806976318
    8. '9' → logprob: -7.716149806976318
    9. '1' → logprob: -7.841149806976318
    10. '00' → logprob: -8.09114933013916

Token 34: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0526931956410408
    2. '6' → logprob: -4.0526933670043945
    3. '8' → logprob: -4.1776933670043945
    4. '9' → logprob: -4.1776933670043945
    5. '10' → logprob: -6.1776933670043945
    6. '5' → logprob: -7.4276933670043945
    7. ' ' → logprob: -8.052693367004395
    8. '100' → logprob: -9.177693367004395
    9. '999' → logprob: -9.802693367004395
    10. '4' → logprob: -10.552693367004395

Token 35: '5' (ID: 20)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.12476308643817902
    2. '6' → logprob: -2.499763011932373
    3. '9' → logprob: -4.124763011932373
    4. '8' → logprob: -4.374763011932373
    5. '5' → logprob: -5.624763011932373
    6. '10' → logprob: -5.999763011932373
    7. '4' → logprob: -9.499763488769531
    8. '100' → logprob: -9.749763488769531
    9. '11' → logprob: -10.499763488769531
    10. '12' → logprob: -10.624763488769531

Token 36: ')' (ID: 8)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05772954225540161
    2. '))' → logprob: -3.432729482650757
    3. '5' → logprob: -4.682729721069336
    4. ')' → logprob: -5.057729721069336
    5. '000' → logprob: -5.682729721069336
    6. '6' → logprob: -6.432729721069336
    7. '7' → logprob: -6.432729721069336
    8. '3' → logprob: -6.932729721069336
    9. '2' → logprob: -8.682729721069336
    10. '1' → logprob: -8.932729721069336

Token 37: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24547366797924042
    2. '0' → logprob: -1.7454736232757568
    3. '))' → logprob: -3.245473623275757
    4. '5' → logprob: -6.870473861694336
    5. '6' → logprob: -7.370473861694336
    6. '1' → logprob: -7.495473861694336
    7. '2' → logprob: -7.620473861694336
    8. '3' → logprob: -8.120473861694336
    9. '00' → logprob: -8.245473861694336
    10. '7' → logprob: -8.245473861694336

Token 38: ' int' (ID: 677)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02343321219086647
    2. ' ' → logprob: -4.398433208465576
    3. '10' → logprob: -5.273433208465576
    4. '2' → logprob: -6.273433208465576
    5. '1' → logprob: -6.773433208465576
    6. '9' → logprob: -7.023433208465576
    7. '3' → logprob: -7.648433208465576
    8. '6' → logprob: -7.773433208465576
    9. '(' → logprob: -7.898433208465576
    10. '100' → logprob: -8.898433685302734

Token 39: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3186531364917755
    2. '(' → logprob: -1.3186531066894531
    3. ''' → logprob: -5.693653106689453
    4. '('(' → logprob: -7.318653106689453
    5. ''(' → logprob: -7.693653106689453
    6. '("("' → logprob: -8.318653106689453
    7. '40' → logprob: -8.568653106689453
    8. '2' → logprob: -9.568653106689453
    9. '(('' → logprob: -9.568653106689453
    10. '('.')' → logprob: -10.193653106689453

Token 40: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5290045738220215
    2. '5' → logprob: -1.4040045738220215
    3. '7' → logprob: -3.4040045738220215
    4. '1' → logprob: -3.5290045738220215
    5. '6' → logprob: -3.9040045738220215
    6. '3' → logprob: -3.9040045738220215
    7. '000' → logprob: -4.1540045738220215
    8. '9' → logprob: -4.2790045738220215
    9. '2' → logprob: -4.4040045738220215
    10. '4' → logprob: -4.5290045738220215

Token 41: ''' (ID: 6)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06679240614175797
    2. '5' → logprob: -3.3167924880981445
    3. '000' → logprob: -4.3167924880981445
    4. '4' → logprob: -5.5667924880981445
    5. '3' → logprob: -5.6917924880981445
    6. '6' → logprob: -6.1917924880981445
    7. '7' → logprob: -6.4417924880981445
    8. ' ' → logprob: -6.9417924880981445
    9. '1' → logprob: -7.3167924880981445
    10. ''' → logprob: -7.5667924880981445

Token 42: ' *' (ID: 425)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22013568878173828
    2. '5' → logprob: -2.4701356887817383
    3. ''' → logprob: -3.3451356887817383
    4. '000' → logprob: -3.4701356887817383
    5. '00' → logprob: -4.470135688781738
    6. '**' → logprob: -4.595135688781738
    7. '*' → logprob: -4.970135688781738
    8. '3' → logprob: -5.720135688781738
    9. ''*' → logprob: -5.845135688781738
    10. ' ' → logprob: -6.095135688781738

Token 43: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.20479203760623932
    2. '4' → logprob: -2.204792022705078
    3. '3' → logprob: -2.954792022705078
    4. '6' → logprob: -4.454792022705078
    5. '2' → logprob: -5.204792022705078
    6. ' ' → logprob: -5.704792022705078
    7. '7' → logprob: -7.204792022705078
    8. '10' → logprob: -7.454792022705078
    9. '1' → logprob: -7.579792022705078
    10. '9' → logprob: -8.579792022705078

Token 44: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.10556021332740784
    2. '4' → logprob: -2.730560302734375
    3. '3' → logprob: -3.980560302734375
    4. '6' → logprob: -4.355560302734375
    5. '2' → logprob: -6.480560302734375
    6. '7' → logprob: -7.605560302734375
    7. '10' → logprob: -7.605560302734375
    8. '9' → logprob: -7.980560302734375
    9. '1' → logprob: -8.730560302734375
    10. '8' → logprob: -8.855560302734375

Token 45: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3910871744155884
    2. '))' → logprob: -1.1410871744155884
    3. ' )' → logprob: -6.266087055206299
    4. '0' → logprob: -7.016087055206299
    5. ' ))' → logprob: -7.141087055206299
    6. ')))' → logprob: -8.016087532043457
    7. '3' → logprob: -10.141087532043457
    8. ' ' → logprob: -10.266087532043457
    9. '1' → logprob: -10.391087532043457
    10. '6' → logprob: -10.516087532043457

Token 46: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40096166729927063
    2. ')' → logprob: -1.5259616374969482
    3. '\n' → logprob: -3.2759616374969482
    4. '' → logprob: -3.6509616374969482
    5. '
' → logprob: -4.525961875915527
    6. ' 
' → logprob: -5.025961875915527
    7. '(' → logprob: -5.400961875915527
    8. ')
' → logprob: -5.525961875915527
    9. '\' → logprob: -5.525961875915527
    10. '  
' → logprob: -5.900961875915527

Token 47: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2819979786872864
    2. ')' → logprob: -1.7819979190826416
    3. '\n' → logprob: -4.156998157501221
    4. '
' → logprob: -4.531998157501221
    5. '\' → logprob: -4.906998157501221
    6. '' → logprob: -5.031998157501221
    7. '*' → logprob: -5.031998157501221
    8. '0' → logprob: -5.656998157501221
    9. ' 
' → logprob: -5.656998157501221
    10. '

' → logprob: -5.656998157501221

Token 48: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4246460199356079
    2. ' ' → logprob: -1.174646019935608
    3. '000' → logprob: -4.174645900726318
    4. '1' → logprob: -5.299645900726318
    5. '100' → logprob: -5.674645900726318
    6. '2' → logprob: -6.174645900726318
    7. '10' → logprob: -6.174645900726318
    8. '00' → logprob: -6.424645900726318
    9. '_' → logprob: -6.924645900726318
    10. '(' → logprob: -7.174645900726318

Token 49: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.0742483139038086
    2. '0' → logprob: -1.1992483139038086
    3. ' ' → logprob: -1.4492483139038086
    4. '10' → logprob: -2.9492483139038086
    5. '000' → logprob: -3.6992483139038086
    6. '1' → logprob: -4.199248313903809
    7. '(' → logprob: -5.199248313903809
    8. '2' → logprob: -5.324248313903809
    9. ')' → logprob: -5.449248313903809
    10. '102' → logprob: -6.324248313903809

Token 50: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14610828459262848
    2. '000' → logprob: -2.396108388900757
    3. '00' → logprob: -3.146108388900757
    4. '_' → logprob: -6.771108150482178
    5. ' ' → logprob: -7.771108150482178
    6. ',' → logprob: -9.146108627319336
    7. ')' → logprob: -9.521108627319336
    8. ''' → logprob: -11.083608627319336
    9. ' )' → logprob: -11.896108627319336
    10. '```' → logprob: -11.958608627319336

Token 51: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11234191805124283
    2. '0' → logprob: -3.86234188079834
    3. '

' → logprob: -3.86234188079834
    4. '' → logprob: -4.23734188079834
    5. '\n' → logprob: -4.48734188079834
    6. ' 
' → logprob: -5.11234188079834
    7. '
' → logprob: -5.11234188079834
    8. ')' → logprob: -5.23734188079834
    9. '\' → logprob: -5.48734188079834
    10. ',' → logprob: -5.73734188079834

Token 52: 'ac' (ID: 359)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26018935441970825
    2. '#' → logprob: -2.6351892948150635
    3. '

' → logprob: -2.8851892948150635
    4. '@' → logprob: -3.5101892948150635
    5. 'def' → logprob: -3.8851892948150635
    6. '_' → logprob: -4.010189533233643
    7. ':' → logprob: -5.260189533233643
    8. '\' → logprob: -5.260189533233643
    9. '
' → logprob: -6.010189533233643
    10. '' → logprob: -6.010189533233643

Token 53: 'input' (ID: 2586)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3673734962940216
    2. 't' → logprob: -2.367373466491699
    3. 'cept' → logprob: -2.992373466491699
    4. 'cum' → logprob: -2.992373466491699
    5. 'count' → logprob: -3.117373466491699
    6. 'e' → logprob: -3.992373466491699
    7. 'cess' → logprob: -4.242373466491699
    8. 'ct' → logprob: -5.492373466491699
    9. 'ce' → logprob: -5.867373466491699
    10. 'counts' → logprob: -5.992373466491699

Token 54: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.005482641514390707
    2. 'ut' → logprob: -5.2554826736450195
    3. 'ts' → logprob: -9.63048267364502
    4. '()' → logprob: -9.75548267364502
    5. 'rt' → logprob: -10.13048267364502
    6. 'r' → logprob: -10.63048267364502
    7. 'u' → logprob: -11.38048267364502
    8. ' =' → logprob: -11.38048267364502
    9. ''t' → logprob: -12.13048267364502
    10. ' t' → logprob: -12.13048267364502

Token 55: ' lambda' (ID: 27871)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.160899356007576
    2. 'lambda' → logprob: -2.2858994007110596
    3. 'sys' → logprob: -3.6608994007110596
    4. 'partial' → logprob: -4.9108991622924805
    5. ' input' → logprob: -5.1608991622924805
    6. ' lambda' → logprob: -5.7858991622924805
    7. 'raw' → logprob: -7.4108991622924805
    8. ' sys' → logprob: -7.5358991622924805
    9. '(lambda' → logprob: -7.5358991622924805
    10. 'iter' → logprob: -7.6608991622924805

Token 56: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35266995429992676
    2. ' :' → logprob: -2.2276699542999268
    3. ' input' → logprob: -2.4776699542999268
    4. 'input' → logprob: -2.4776699542999268
    5. ' ' → logprob: -5.352669715881348
    6. 'f' → logprob: -5.977669715881348
    7. 's' → logprob: -6.102669715881348
    8. 'x' → logprob: -6.352669715881348
    9. ' sys' → logprob: -6.352669715881348
    10. ' f' → logprob: -6.602669715881348

Token 57: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20868101716041565
    2. ' input' → logprob: -1.7086809873580933
    3. 'sys' → logprob: -5.458681106567383
    4. ' sys' → logprob: -5.833681106567383
    5. 'int' → logprob: -10.458681106567383
    6. 'in' → logprob: -11.958681106567383
    7. 'raw' → logprob: -12.458681106567383
    8. 'inp' → logprob: -12.708681106567383
    9. '<input' → logprob: -13.333681106567383
    10. ' ' → logprob: -13.708681106567383

Token 58: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.09672192484140396
    2. '(input' → logprob: -2.596721887588501
    3. '(' → logprob: -4.72172212600708
    4. '(sys' → logprob: -4.84672212600708
    5. '(int' → logprob: -7.34672212600708
    6. '()' → logprob: -9.346721649169922
    7. '(eval' → logprob: -9.471721649169922
    8. '(str' → logprob: -9.596721649169922
    9. '(range' → logprob: -11.721721649169922
    10. '(list' → logprob: -11.971721649169922

Token 59: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.009130209684371948
    2. '(str' → logprob: -4.884130001068115
    3. '(' → logprob: -6.634130001068115
    4. 'int' → logprob: -9.259130477905273
    5. 'str' → logprob: -9.634130477905273
    6. '<|end|>' → logprob: -11.009130477905273
    7. '(ord' → logprob: -11.759130477905273
    8. ')' → logprob: -12.259130477905273
    9. '(input' → logprob: -12.384130477905273
    10. '(
' → logprob: -12.634130477905273

Token 60: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.11896803230047226
    2. '(sys' → logprob: -2.4939680099487305
    3. '(' → logprob: -3.8689680099487305
    4. ',input' → logprob: -5.1189680099487305
    5. 'input' → logprob: -6.1189680099487305
    6. ',' → logprob: -8.24396800994873
    7. ')' → logprob: -9.36896800994873
    8. 'sys' → logprob: -9.61896800994873
    9. ' (' → logprob: -10.49396800994873
    10. ' input' → logprob: -10.61896800994873

Token 61: ' __' (ID: 2516)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3984474241733551
    2. ' input' → logprob: -1.1484473943710327
    3. 'sys' → logprob: -4.898447513580322
    4. ' sys' → logprob: -5.523447513580322
    5. '(input' → logprob: -10.898447036743164
    6. '(sys' → logprob: -11.398447036743164
    7. ',input' → logprob: -11.523447036743164
    8. '	input' → logprob: -11.898447036743164
    9. ' ' → logprob: -12.898447036743164
    10. ')' → logprob: -13.273447036743164

Token 62: 'import' (ID: 561)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.166764035820961
    2. 'stdin' → logprob: -2.1667640209198
    3. 'built' → logprob: -4.041764259338379
    4. 'sys' → logprob: -4.416764259338379
    5. '.stdin' → logprob: -5.166764259338379
    6. 'import' → logprob: -6.791764259338379
    7. 'builtin' → logprob: -6.916764259338379
    8. 'next' → logprob: -6.916764259338379
    9. 'code' → logprob: -8.916764259338379
    10. 'file' → logprob: -9.166764259338379

Token 63: '__('' (ID: 54460)
  Prédit: '__(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__('' → logprob: -0.0625726580619812
    2. '(' → logprob: -3.437572717666626
    3. '__("' → logprob: -4.562572479248047
    4. '('' → logprob: -5.062572479248047
    5. '__' → logprob: -5.187572479248047
    6. '('__' → logprob: -5.812572479248047
    7. '__(' → logprob: -6.687572479248047
    8. '__(
' → logprob: -7.312572479248047
    9. '(__' → logprob: -8.437572479248047
    10. '__.__' → logprob: -8.687572479248047

Token 64: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.006730407476425171
    2. 'built' → logprob: -5.006730556488037
    3. 'os' → logprob: -12.006730079650879
    4. 'stdin' → logprob: -12.381730079650879
    5. 'io' → logprob: -13.131730079650879
    6. '__' → logprob: -13.756730079650879
    7. ' built' → logprob: -15.131730079650879
    8. 'builtin' → logprob: -15.506730079650879
    9. 'it' → logprob: -15.631730079650879
    10. 'bis' → logprob: -15.631730079650879

Token 65: '').' (ID: 3426)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00033665422233752906
    2. '.argv' → logprob: -8.500336647033691
    3. '.stdout' → logprob: -9.125336647033691
    4. '.' → logprob: -11.375336647033691
    5. '.std' → logprob: -12.125336647033691
    6. '.modules' → logprob: -13.000336647033691
    7. '.stderr' → logprob: -13.625336647033691
    8. ').' → logprob: -14.250336647033691
    9. '.st' → logprob: -14.250336647033691
    10. '.input' → logprob: -14.500336647033691

Token 66: 'stdin' (ID: 132953)
  Prédit: 'stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.00012403888104017824
    2. '.stdin' → logprob: -9.000123977661133
    3. ' stdin' → logprob: -15.250123977661133
    4. '(stdin' → logprob: -15.750123977661133
    5. '__' → logprob: -16.625123977661133
    6. 'std' → logprob: -17.500123977661133
    7. 'argv' → logprob: -17.625123977661133
    8. 'stdout' → logprob: -18.000123977661133
    9. 'stderr' → logprob: -18.250123977661133
    10. '_st' → logprob: -18.375123977661133

Token 67: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.006948618683964014
    2. '.read' → logprob: -5.006948471069336
    3. '.' → logprob: -9.131948471069336
    4. '.readlines' → logprob: -9.131948471069336
    5. '.buffer' → logprob: -11.006948471069336
    6. ').' → logprob: -16.256948471069336
    7. '.write' → logprob: -16.381948471069336
    8. ' .' → logprob: -16.756948471069336
    9. 'read' → logprob: -16.756948471069336
    10. ')' → logprob: -16.881948471069336

Token 68: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.015334125608205795
    2. '()))' → logprob: -4.265334129333496
    3. '()' → logprob: -7.015334129333496
    4. '())' → logprob: -8.640334129333496
    5. '))' → logprob: -9.765334129333496
    6. '(' → logprob: -12.265334129333496
    7. '())))' → logprob: -12.265334129333496
    8. '(),' → logprob: -12.515334129333496
    9. ')' → logprob: -12.640334129333496
    10. '()[' → logprob: -13.015334129333496

Token 69: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0383039228618145
    2. 'rstrip' → logprob: -3.288303852081299
    3. ' strip' → logprob: -8.413304328918457
    4. 'split' → logprob: -10.788304328918457
    5. 'read' → logprob: -11.038304328918457
    6. ')' → logprob: -12.788304328918457
    7. 'decode' → logprob: -14.413304328918457
    8. '-strip' → logprob: -16.41330337524414
    9. '_strip' → logprob: -16.53830337524414
    10. '(strip' → logprob: -16.66330337524414

Token 70: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5838393568992615
    2. '))' → logprob: -0.8338393568992615
    3. '())' → logprob: -5.583839416503906
    4. '()' → logprob: -5.708839416503906
    5. ')' → logprob: -7.333839416503906
    6. ')))' → logprob: -9.583839416503906
    7. '(' → logprob: -10.333839416503906
    8. '())))' → logprob: -10.833839416503906
    9. '()))
' → logprob: -11.583839416503906
    10. '()));' → logprob: -12.583839416503906

Token 71: 'II' (ID: 6013)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.531448483467102
    2. '#' → logprob: -2.1564483642578125
    3. 'd' → logprob: -2.7814483642578125
    4. 'n' → logprob: -3.1564483642578125
    5. '_' → logprob: -3.4064483642578125
    6. '@' → logprob: -3.4064483642578125
    7. '(' → logprob: -3.9064483642578125
    8. '
' → logprob: -3.9064483642578125
    9. '\' → logprob: -4.1564483642578125
    10. 'a' → logprob: -4.5314483642578125

Token 72: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14125098288059235
    2. 'P' → logprob: -2.6412510871887207
    3. 'n' → logprob: -4.141251087188721
    4. '=' → logprob: -4.516251087188721
    5. 'N' → logprob: -4.766251087188721
    6. '(' → logprob: -5.141251087188721
    7. 'I' → logprob: -5.516251087188721
    8. 'p' → logprob: -5.766251087188721
    9. 'np' → logprob: -6.016251087188721
    10. 'input' → logprob: -7.141251087188721

Token 73: ' lambda' (ID: 27871)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1219436526298523
    2. ' int' → logprob: -3.371943712234497
    3. '10' → logprob: -3.496943712234497
    4. 'lambda' → logprob: -4.121943473815918
    5. ' lambda' → logprob: -4.621943473815918
    6. 'input' → logprob: -4.871943473815918
    7. ' ' → logprob: -5.746943473815918
    8. ' ac' → logprob: -5.871943473815918
    9. 'iter' → logprob: -6.246943473815918
    10. ' iter' → logprob: -6.371943473815918

Token 74: ':' (ID: 25)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.09269051253795624
    2. ' int' → logprob: -3.3426904678344727
    3. 'x' → logprob: -3.5926904678344727
    4. ':' → logprob: -5.342690467834473
    5. 'n' → logprob: -5.717690467834473
    6. 'ac' → logprob: -5.842690467834473
    7. ' ac' → logprob: -6.092690467834473
    8. 'lambda' → logprob: -6.092690467834473
    9. 'input' → logprob: -6.217690467834473
    10. ' x' → logprob: -6.217690467834473

Token 75: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.11297479271888733
    2. ' int' → logprob: -2.2379748821258545
    3. 'map' → logprob: -10.237975120544434
    4. 'ac' → logprob: -10.612975120544434
    5. ' ac' → logprob: -10.612975120544434
    6. 'in' → logprob: -10.987975120544434
    7. ' map' → logprob: -11.237975120544434
    8. 'list' → logprob: -11.237975120544434
    9. '[int' → logprob: -12.112975120544434
    10. ' in' → logprob: -12.362975120544434

Token 76: '(__' (ID: 11782)
  Prédit: '(ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ac' → logprob: -0.026306919753551483
    2. '(' → logprob: -4.026307106018066
    3. '(input' → logprob: -5.026307106018066
    4. '(__' → logprob: -6.776307106018066
    5. '(sys' → logprob: -8.401307106018066
    6. '()' → logprob: -9.776307106018066
    7. 'ac' → logprob: -10.026307106018066
    8. 'input' → logprob: -11.026307106018066
    9. '((' → logprob: -11.401307106018066
    10. '(a' → logprob: -11.526307106018066

Token 77: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0008502478594891727
    2. '.' → logprob: -7.875850200653076
    3. 'input' → logprob: -8.500850677490234
    4. '.import' → logprob: -8.500850677490234
    5. '(import' → logprob: -11.125850677490234
    6. 'stdin' → logprob: -11.250850677490234
    7. '.stdin' → logprob: -11.500850677490234
    8. '_import' → logprob: -11.625850677490234
    9. 'sys' → logprob: -12.250850677490234
    10. ''import' → logprob: -13.125850677490234

Token 78: '__('' (ID: 54460)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.2759397029876709
    2. '__('' → logprob: -1.650939702987671
    3. '(' → logprob: -3.025939702987671
    4. '(__('' → logprob: -8.77593994140625
    5. '('__' → logprob: -8.77593994140625
    6. '(('' → logprob: -9.27593994140625
    7. '(','' → logprob: -10.15093994140625
    8. '(\'' → logprob: -10.27593994140625
    9. '(_('' → logprob: -10.27593994140625
    10. '__("' → logprob: -10.52593994140625

Token 79: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -3.726595241460018e-05
    2. ' sys' → logprob: -10.25003719329834
    3. '(sys' → logprob: -13.75003719329834
    4. ''s' → logprob: -15.37503719329834
    5. '	sys' → logprob: -15.50003719329834
    6. '=sys' → logprob: -15.87503719329834
    7. 'input' → logprob: -16.250038146972656
    8. 'built' → logprob: -16.500038146972656
    9. 'system' → logprob: -17.500038146972656
    10. 'stdin' → logprob: -18.000038146972656

Token 80: '').' (ID: 3426)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00298328697681427
    2. '.stdout' → logprob: -6.502983093261719
    3. ').' → logprob: -6.752983093261719
    4. '').' → logprob: -8.752983093261719
    5. '.argv' → logprob: -9.502983093261719
    6. '.modules' → logprob: -10.502983093261719
    7. '.stderr' → logprob: -10.627983093261719
    8. '.' → logprob: -11.627983093261719
    9. ' .' → logprob: -11.877983093261719
    10. ' ).' → logprob: -12.002983093261719

Token 81: 'stdin' (ID: 132953)
  Prédit: 'stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -2.2200749754119897e-06
    2. '.stdin' → logprob: -13.250001907348633
    3. 'stdout' → logprob: -15.500001907348633
    4. ' stdin' → logprob: -16.250001907348633
    5. 'std' → logprob: -16.875001907348633
    6. 'argv' → logprob: -17.250001907348633
    7. '(stdin' → logprob: -17.750001907348633
    8. 'st' → logprob: -18.125001907348633
    9. 'stderr' → logprob: -18.375001907348633
    10. 'stan' → logprob: -19.875001907348633

Token 82: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.2855416066013277e-05
    2. '.read' → logprob: -10.625032424926758
    3. '.' → logprob: -12.125032424926758
    4. ' readline' → logprob: -12.875032424926758
    5. '().' → logprob: -14.750032424926758
    6. 'read' → logprob: -16.625032424926758
    7. ')' → logprob: -16.875032424926758
    8. ' .' → logprob: -18.125032424926758
    9. '.write' → logprob: -18.500032424926758
    10. ').' → logprob: -18.500032424926758

Token 83: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3196021616458893
    2. '().' → logprob: -1.319602131843567
    3. '()' → logprob: -5.069602012634277
    4. ' ())' → logprob: -11.194602012634277
    5. ')' → logprob: -11.319602012634277
    6. '();)' → logprob: -13.069602012634277
    7. '()))' → logprob: -13.444602012634277
    8. '()]' → logprob: -14.069602012634277
    9. '().__' → logprob: -14.069602012634277
    10. '())
' → logprob: -14.194602012634277

Token 84: 'mod' (ID: 4847)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9034818410873413
    2. 'def' → logprob: -2.153481960296631
    3. '\' → logprob: -2.528481960296631
    4. '
' → logprob: -3.028481960296631
    5. '\n' → logprob: -3.278481960296631
    6. '' → logprob: -3.653481960296631
    7. '#' → logprob: -4.028481960296631
    8. 'I' → logprob: -4.028481960296631
    9. 'n' → logprob: -4.153481960296631
    10. ' ' → logprob: -4.153481960296631

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5232635140419006
    2. '=' → logprob: -0.8982635140419006
    3. ' ' → logprob: -9.773263931274414
    4. ',' → logprob: -10.773263931274414
    5. '<|end|>' → logprob: -11.023263931274414
    6. ' =
' → logprob: -11.398263931274414
    7. '_' → logprob: -11.523263931274414
    8. ':' → logprob: -12.273263931274414
    9. '.' → logprob: -12.523263931274414
    10. ' =)' → logprob: -12.648263931274414

Token 86: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14273974299430847
    2. '10' → logprob: -2.017739772796631
    3. '100' → logprob: -9.892739295959473
    4. '1' → logprob: -11.892739295959473
    5. '998' → logprob: -12.267739295959473
    6. 'int' → logprob: -14.267739295959473
    7. ' int' → logprob: -14.517739295959473
    8. ' ' → logprob: -14.517739295959473
    9. 'pow' → logprob: -15.392739295959473
    10. ' (' → logprob: -16.51774024963379

Token 87: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.01943027973175049
    2. '100' → logprob: -4.144430160522461
    3. '998' → logprob: -5.769430160522461
    4. '1' → logprob: -9.144430160522461
    5. ' ' → logprob: -9.269430160522461
    6. 'int' → logprob: -9.894430160522461
    7. '999' → logprob: -12.519430160522461
    8. '(' → logprob: -12.644430160522461
    9. '2' → logprob: -13.144430160522461
    10. 'pow' → logprob: -13.644430160522461

Token 88: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3141636550426483
    2. '9' → logprob: -1.3141636848449707
    3. '09' → logprob: -7.064163684844971
    4. '000' → logprob: -10.564163208007812
    5. ' **' → logprob: -11.939163208007812
    6. ' ' → logprob: -12.564163208007812
    7. '*' → logprob: -12.939163208007812
    8. '009' → logprob: -13.314163208007812
    9. '^' → logprob: -13.439163208007812
    10. '99' → logprob: -13.814163208007812

Token 89: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.25
    3. '```' → logprob: -18.625
    4. '+' → logprob: -18.875
    5. ' ' → logprob: -19.0
    6. '10' → logprob: -19.5
    7. '19' → logprob: -20.375
    8. '8' → logprob: -21.25
    9. '18' → logprob: -21.375
    10. '4' → logprob: -21.375

Token 90: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001509739668108523
    2. '7' → logprob: -6.501509666442871
    3. '9' → logprob: -12.876509666442871
    4. ' +' → logprob: -13.001509666442871
    5. '+
' → logprob: -14.001509666442871
    6. '```' → logprob: -14.001509666442871
    7. 'plus' → logprob: -15.251509666442871
    8. '＋' → logprob: -15.501509666442871
    9. 'Plus' → logprob: -16.626510620117188
    10. '+</' → logprob: -16.751510620117188

Token 91: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -8.017927029868588e-05
    2. '+' → logprob: -9.500080108642578
    3. '9' → logprob: -12.250080108642578
    4. '```' → logprob: -15.250080108642578
    5. '07' → logprob: -16.625080108642578
    6. ' ' → logprob: -16.750080108642578
    7. '87' → logprob: -19.375080108642578
    8. '   ' → logprob: -19.500080108642578
    9. '007' → logprob: -19.562580108642578
    10. '79' → logprob: -19.687580108642578

Token 92: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19103942811489105
    2. ' 
' → logprob: -2.8160393238067627
    3. '<|end|>' → logprob: -3.5660393238067627
    4. '#' → logprob: -3.6910393238067627
    5. ' ' → logprob: -4.691039562225342
    6. 'def' → logprob: -4.816039562225342
    7. '\n' → logprob: -5.066039562225342
    8. '' → logprob: -5.191039562225342
    9. ',' → logprob: -5.316039562225342
    10. '

' → logprob: -5.441039562225342

Token 93: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7722071409225464
    2. '
' → logprob: -1.1472071409225464
    3. '#' → logprob: -2.272207260131836
    4. ' 
' → logprob: -3.647207260131836
    5. '

' → logprob: -3.897207260131836
    6. ' 

' → logprob: -4.397207260131836
    7. '\n' → logprob: -4.522207260131836
    8. '\' → logprob: -4.647207260131836
    9. ':' → logprob: -5.022207260131836
    10. 'n' → logprob: -5.022207260131836

Token 94: ' factorial' (ID: 111204)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -1.222845435142517
    2. ' solve' → logprob: -1.472845435142517
    3. ' main' → logprob: -1.847845435142517
    4. ' factorial' → logprob: -1.972845435142517
    5. ' pow' → logprob: -2.5978455543518066
    6. ' dfs' → logprob: -3.9728455543518066
    7. ' fast' → logprob: -4.347845554351807
    8. ' fac' → logprob: -4.472845554351807
    9. ' factor' → logprob: -4.597845554351807
    10. ' dp' → logprob: -5.222845554351807

Token 95: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08205724507570267
    2. '(n' → logprob: -2.582057237625122
    3. '_' → logprob: -6.082057476043701
    4. '_factor' → logprob: -8.082056999206543
    5. '_n' → logprob: -9.457056999206543
    6. '(_' → logprob: -9.582056999206543
    7. ' (' → logprob: -9.707056999206543
    8. '(x' → logprob: -10.332056999206543
    9. '_cache' → logprob: -10.707056999206543
    10. '(num' → logprob: -10.707056999206543

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010366219794377685
    2. ')' → logprob: -7.001036643981934
    3. ' ):' → logprob: -9.876036643981934
    4. ':' → logprob: -10.001036643981934
    5. ',' → logprob: -11.126036643981934
    6. '):
' → logprob: -11.626036643981934
    7. '(n' → logprob: -13.876036643981934
    8. '**' → logprob: -14.501036643981934
    9. ''):' → logprob: -14.876036643981934
    10. ' ' → logprob: -15.126036643981934

Token 97: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3713938593864441
    2. '   ' → logprob: -1.4963939189910889
    3. ' if' → logprob: -3.496393918991089
    4. '):' → logprob: -3.871393918991089
    5. ' ' → logprob: -4.62139368057251
    6. '<|end|>' → logprob: -5.24639368057251
    7. ' factorial' → logprob: -5.24639368057251
    8. '	if' → logprob: -6.12139368057251
    9. '    ' → logprob: -6.49639368057251
    10. ',' → logprob: -6.62139368057251

Token 98: ' """' (ID: 9280)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.704306960105896
    2. ' return' → logprob: -2.2043070793151855
    3. 'return' → logprob: -2.7043070793151855
    4. ' result' → logprob: -2.7043070793151855
    5. ' res' → logprob: -2.8293070793151855
    6. 'if' → logprob: -3.0793070793151855
    7. 'result' → logprob: -3.4543070793151855
    8. ' f' → logprob: -3.4543070793151855
    9. 'f' → logprob: -3.7043070793151855
    10. '1' → logprob: -3.8293070793151855

Token 99: 'Factor' (ID: 23681)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47073620557785034
    2. 'n' → logprob: -2.595736265182495
    3. ' """' → logprob: -2.595736265182495
    4. '   ' → logprob: -2.970736265182495
    5. 'if' → logprob: -3.220736265182495
    6. '
' → logprob: -4.095736026763916
    7. ')' → logprob: -4.470736026763916
    8. ' return' → logprob: -4.470736026763916
    9. 'i' → logprob: -4.595736026763916
    10. '#' → logprob: -4.845736026763916

Token 100: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.0908234715461731
    2. 'al' → logprob: -2.5908234119415283
    3. '(n' → logprob: -5.465823650360107
    4. ')' → logprob: -6.090823650360107
    5. 'ialize' → logprob: -6.215823650360107
    6. 'ary' → logprob: -6.965823650360107
    7. '   ' → logprob: -7.465823650360107
    8. ' ' → logprob: -7.715823650360107
    9. '):' → logprob: -8.46582317352295
    10. ' n' → logprob: -8.71582317352295

Token 101: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005489164497703314
    2. '(' → logprob: -5.380489349365234
    3. ' (' → logprob: -7.630489349365234
    4. ' of' → logprob: -8.630489349365234
    5. ':' → logprob: -9.130489349365234
    6. ')' → logprob: -10.130489349365234
    7. ' n' → logprob: -11.380489349365234
    8. '(
' → logprob: -11.880489349365234
    9. ' for' → logprob: -12.130489349365234
    10. 'n' → logprob: -12.255489349365234

Token 102: ' via' (ID: 4493)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.14754413068294525
    2. 'n' → logprob: -2.0225441455841064
    3. 'def' → logprob: -6.772543907165527
    4. ' def' → logprob: -6.897543907165527
    5. ' k' → logprob: -7.397543907165527
    6. ' x' → logprob: -7.647543907165527
    7. '```' → logprob: -8.147543907165527
    8. 'k' → logprob: -8.272543907165527
    9. ' cache' → logprob: -8.522543907165527
    10. ' ' → logprob: -8.647543907165527

Token 103: ' functools' (ID: 142636)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.555058479309082
    2. 'l' → logprob: -1.680058479309082
    3. ' l' → logprob: -2.555058479309082
    4. 'ft' → logprob: -2.555058479309082
    5. 'def' → logprob: -2.680058479309082
    6. ' recursion' → logprob: -2.930058479309082
    7. '   ' → logprob: -3.055058479309082
    8. 'rec' → logprob: -3.305058479309082
    9. 'math' → logprob: -3.430058479309082
    10. ' reduce' → logprob: -3.680058479309082

Token 104: '.reduce' (ID: 49441)
  Prédit: '.l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -1.1801292896270752
    2. '.cache' → logprob: -1.1801292896270752
    3. '.reduce' → logprob: -1.6801292896270752
    4. '.partial' → logprob: -2.055129289627075
    5. '.wrap' → logprob: -2.930129289627075
    6. '.cached' → logprob: -5.180129051208496
    7. '.' → logprob: -5.430129051208496
    8. '@' → logprob: -6.430129051208496
    9. 'l' → logprob: -6.555129051208496
    10. '   ' → logprob: -6.805129051208496

Token 105: ' and' (ID: 326)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8181812763214111
    2. '   ' → logprob: -1.1931812763214111
    3. ',' → logprob: -1.6931812763214111
    4. ')' → logprob: -3.193181276321411
    5. ':' → logprob: -4.693181037902832
    6. '):
' → logprob: -5.443181037902832
    7. 'def' → logprob: -5.568181037902832
    8. '(' → logprob: -6.193181037902832
    9. '.' → logprob: -6.318181037902832
    10. '```' → logprob: -6.693181037902832

Token 106: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.0970679372549057
    2. 'operator' → logprob: -3.2220678329467773
    3. ' op' → logprob: -3.8470678329467773
    4. ' range' → logprob: -4.472067832946777
    5. ' math' → logprob: -5.097067832946777
    6. ' functools' → logprob: -5.097067832946777
    7. 'op' → logprob: -6.472067832946777
    8. '   ' → logprob: -6.722067832946777
    9. 'range' → logprob: -6.722067832946777
    10. ' itertools' → logprob: -7.347067832946777

Token 107: '.mul' (ID: 106202)
  Prédit: '.mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mul' → logprob: -0.003529986832290888
    2. '.' → logprob: -6.503530025482178
    3. '   ' → logprob: -7.628530025482178
    4. '.op' → logprob: -7.878530025482178
    5. 'mul' → logprob: -7.878530025482178
    6. ' .' → logprob: -8.25352954864502
    7. '.multiply' → logprob: -9.12852954864502
    8. '.prod' → logprob: -9.50352954864502
    9. '.matmul' → logprob: -9.62852954864502
    10. '.operator' → logprob: -9.87852954864502

Token 108: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17786861956119537
    2. '   ' → logprob: -2.552868604660034
    3. ')' → logprob: -2.802868604660034
    4. '):
' → logprob: -4.427868843078613
    5. ',' → logprob: -4.552868843078613
    6. ').' → logprob: -8.177868843078613
    7. '"""
' → logprob: -8.552868843078613
    8. '"""' → logprob: -8.677868843078613
    9. '.' → logprob: -8.802868843078613
    10. '):
' → logprob: -8.802868843078613

Token 109: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34848877787590027
    2. '    ' → logprob: -1.7234888076782227
    3. ')' → logprob: -2.9734888076782227
    4. '):' → logprob: -4.098488807678223
    5. '):
' → logprob: -5.098488807678223
    6. 'def' → logprob: -5.223488807678223
    7. ' n' → logprob: -5.973488807678223
    8. 'n' → logprob: -5.973488807678223
    9. ' operator' → logprob: -5.973488807678223
    10. ' x' → logprob: -6.098488807678223

Token 110: ' itertools' (ID: 103178)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.6651654243469238
    2. ' cache' → logprob: -1.6651654243469238
    3. 'l' → logprob: -2.540165424346924
    4. ' caching' → logprob: -2.665165424346924
    5. '@' → logprob: -3.040165424346924
    6. ' l' → logprob: -3.165165424346924
    7. ' memo' → logprob: -3.540165424346924
    8. 'memo' → logprob: -4.540165424346924
    9. ' @' → logprob: -5.040165424346924
    10. 'cached' → logprob: -6.290165424346924

Token 111: '.chain' (ID: 103950)
  Prédit: '.product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.product' → logprob: -1.207538366317749
    2. '.acc' → logprob: -1.457538366317749
    3. '.chain' → logprob: -1.582538366317749
    4. '.c' → logprob: -1.957538366317749
    5. 'import' → logprob: -3.207538366317749
    6. '.count' → logprob: -4.207538604736328
    7. ' .' → logprob: -4.457538604736328
    8. '.repeat' → logprob: -4.582538604736328
    9. '.is' → logprob: -4.707538604736328
    10. ' import' → logprob: -5.082538604736328

Token 112: ' for' (ID: 395)
  Prédit: '.from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.38622504472732544
    2. '):' → logprob: -2.2612249851226807
    3. ' from' → logprob: -2.5112249851226807
    4. 'from' → logprob: -2.6362249851226807
    5. ')' → logprob: -4.01122522354126
    6. ',' → logprob: -5.01122522354126
    7. '(chain' → logprob: -5.26122522354126
    8. '):
' → logprob: -5.63622522354126
    9. '"""
' → logprob: -5.88622522354126
    10. '([' → logprob: -5.88622522354126

Token 113: ' ' (ID: 220)
  Prédit: ' caching'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' caching' → logprob: -1.375159502029419
    2. 'range' → logprob: -2.750159502029419
    3. 're' → logprob: -3.000159502029419
    4. ')' → logprob: -3.375159502029419
    5. ' memo' → logprob: -3.500159502029419
    6. ' range' → logprob: -3.625159502029419
    7. 'memo' → logprob: -3.625159502029419
    8. 'cache' → logprob: -3.875159502029419
    9. ' chaining' → logprob: -4.00015926361084
    10. 'repeat' → logprob: -4.12515926361084

Token 114: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.1182515621185303
    2. 'flatten' → logprob: -1.8682515621185303
    3. 'chain' → logprob: -2.2432515621185303
    4. ')' → logprob: -3.1182515621185303
    5. 'empty' → logprob: -3.1182515621185303
    6. 're' → logprob: -3.2432515621185303
    7. '[]' → logprob: -3.6182515621185303
    8. 'iter' → logprob: -3.8682515621185303
    9. 'initial' → logprob: -3.9932515621185303
    10. '()' → logprob: -4.243251800537109

Token 115: '-edge' (ID: 61174)
  Prédit: '.from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.11217387020587921
    2. 'from' → logprob: -2.8621737957000732
    3. ',' → logprob: -3.4871737957000732
    4. '(' → logprob: -4.612174034118652
    5. '.' → logprob: -7.112174034118652
    6. '(chain' → logprob: -7.112174034118652
    7. '(range' → logprob: -7.362174034118652
    8. '([' → logprob: -7.362174034118652
    9. ' from' → logprob: -7.487174034118652
    10. '()' → logprob: -7.487174034118652

Token 116: ' cases' (ID: 7911)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.5244629979133606
    2. 'cases' → logprob: -1.7744629383087158
    3. ' cases' → logprob: -2.149462938308716
    4. ' case' → logprob: -2.274462938308716
    5. 's' → logprob: -4.274463176727295
    6. '_case' → logprob: -6.649463176727295
    7. '_cases' → logprob: -6.899463176727295
    8. ')' → logprob: -7.274463176727295
    9. ',' → logprob: -8.024462699890137
    10. ' ' → logprob: -8.524462699890137

Token 117: '"""
' (ID: 15611)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6712849736213684
    2. '   ' → logprob: -0.9212849736213684
    3. '):
' → logprob: -2.7962849140167236
    4. '"""
' → logprob: -4.171285152435303
    5. ')' → logprob: -5.296285152435303
    6. ':' → logprob: -5.421285152435303
    7. '"""' → logprob: -6.171285152435303
    8. '```' → logprob: -7.421285152435303
    9. 'def' → logprob: -7.671285152435303
    10. '.' → logprob: -8.171284675598145

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015718759968876839
    2. '(' → logprob: -7.6265716552734375
    3. ':' → logprob: -7.7515716552734375
    4. 'return' → logprob: -8.501571655273438
    5. ' return' → logprob: -8.626571655273438
    6. '    
' → logprob: -9.751571655273438
    7. 'def' → logprob: -10.001571655273438
    8. '(n' → logprob: -10.626571655273438
    9. '(
' → logprob: -10.626571655273438
    10. '
' → logprob: -11.126571655273438

Token 119: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27354660630226135
    2. ' return' → logprob: -1.773546576499939
    3. 'return' (adapté à ' return') → logprob: -2.7735466957092285
    4. ' if' → logprob: -5.1485466957092285
    5. 'if' → logprob: -7.2735466957092285
    6. 'from' → logprob: -8.77354621887207
    7. ' from' → logprob: -9.02354621887207
    8. '    ' → logprob: -9.14854621887207
    9. ' f' → logprob: -10.52354621887207
    10. ' chain' → logprob: -10.64854621887207

Token 120: ' reduce' (ID: 10389)
  Prédit: 'ft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ft' → logprob: -0.6497095227241516
    2. 'reduce' → logprob: -1.0247094631195068
    3. 'fun' → logprob: -2.649709463119507
    4. ' functools' → logprob: -3.899709463119507
    5. ' reduce' → logprob: -4.024709701538086
    6. ' ft' → logprob: -4.649709701538086
    7. '   ' → logprob: -8.399709701538086
    8. ' ' → logprob: -9.149709701538086
    9. '1' → logprob: -9.274709701538086
    10. '  ' → logprob: -11.149709701538086

Token 121: '(op' (ID: 34275)
  Prédit: '(op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.030589746311306953
    2. '(' → logprob: -3.5305898189544678
    3. '(
' → logprob: -7.530589580535889
    4. '(operator' → logprob: -8.280590057373047
    5. '(lambda' → logprob: -10.280590057373047
    6. ' (' → logprob: -11.780590057373047
    7. '(

' → logprob: -12.655590057373047
    8. '```' → logprob: -14.280590057373047
    9. '(Op' → logprob: -14.655590057373047
    10. '	op' → logprob: -14.655590057373047

Token 122: '.mul' (ID: 106202)
  Prédit: '.mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mul' → logprob: -0.0002819544170051813
    2. '.' → logprob: -8.250282287597656
    3. '.mu' → logprob: -12.000282287597656
    4. ' .' → logprob: -12.375282287597656
    5. '.matmul' → logprob: -12.375282287597656
    6. '.operator' → logprob: -13.000282287597656
    7. '.im' → logprob: -13.750282287597656
    8. '.multiply' → logprob: -14.125282287597656
    9. '_mul' → logprob: -14.625282287597656
    10. '   ' → logprob: -15.250282287597656

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021259987261146307
    2. ' ,' → logprob: -8.750212669372559
    3. ',it' → logprob: -10.250212669372559
    4. ',
' → logprob: -12.000212669372559
    5. ',[' → logprob: -12.250212669372559
    6. ',map' → logprob: -13.250212669372559
    7. ',int' → logprob: -13.500212669372559
    8. ',list' → logprob: -13.625212669372559
    9. ',(' → logprob: -13.875212669372559
    10. 'it' → logprob: -14.375212669372559

Token 124: ' itertools' (ID: 103178)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0317593812942505
    2. 'it' → logprob: -1.2817593812942505
    3. ' itertools' → logprob: -1.6567593812942505
    4. ' range' → logprob: -1.7817593812942505
    5. '   ' → logprob: -6.156759262084961
    6. ' ' → logprob: -6.781759262084961
    7. ' it' → logprob: -6.906759262084961
    8. 'chain' → logprob: -7.656759262084961
    9. '    ' → logprob: -7.781759262084961
    10. '(range' → logprob: -7.906759262084961

Token 125: '.chain' (ID: 103950)
  Prédit: '.chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.chain' → logprob: -0.0006874137907288969
    2. '.count' → logprob: -7.750687599182129
    3. '.' → logprob: -8.500687599182129
    4. '.ch' → logprob: -10.875687599182129
    5. '.repeat' → logprob: -11.875687599182129
    6. '.c' → logprob: -12.000687599182129
    7. '.acc' → logprob: -12.000687599182129
    8. ' .' → logprob: -12.000687599182129
    9. '.arange' → logprob: -13.500687599182129
    10. '   ' → logprob: -13.750687599182129

Token 126: '([' (ID: 5194)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.47867682576179504
    2. '([' → logprob: -0.9786767959594727
    3. '((' → logprob: -5.478676795959473
    4. '(' → logprob: -8.478676795959473
    5. '(iter' → logprob: -9.728676795959473
    6. '.from' → logprob: -9.853676795959473
    7. '([(' → logprob: -10.228676795959473
    8. '   ' → logprob: -11.103676795959473
    9. '(([' → logprob: -11.103676795959473
    10. 'from' → logprob: -11.978676795959473

Token 127: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.19399185478687286
    2. '1' → logprob: -1.8189918994903564
    3. '(range' → logprob: -4.693991661071777
    4. '(' → logprob: -5.943991661071777
    5. 'n' → logprob: -6.693991661071777
    6. '(n' → logprob: -7.568991661071777
    7. 'from' → logprob: -8.068991661071777
    8. ' range' → logprob: -9.193991661071777
    9. '2' → logprob: -9.693991661071777
    10. '```' → logprob: -10.068991661071777

Token 128: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019035033881664276
    2. '(range' → logprob: -4.5190348625183105
    3. '],' → logprob: -4.8940348625183105
    4. 'range' → logprob: -8.394035339355469
    5. ' ,' → logprob: -9.269035339355469
    6. ',n' → logprob: -9.894035339355469
    7. '),' → logprob: -10.644035339355469
    8. '   ' → logprob: -11.519035339355469
    9. ',(' → logprob: -11.644035339355469
    10. '],[' → logprob: -11.894035339355469

Token 129: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02326062321662903
    2. ' range' → logprob: -3.7732605934143066
    3. '(range' → logprob: -11.148261070251465
    4. '	range' → logprob: -14.648261070251465
    5. ' xrange' → logprob: -15.523261070251465
    6. '   ' → logprob: -16.77326011657715
    7. 'iter' → logprob: -17.52326011657715
    8. ' ' → logprob: -17.52326011657715
    9. '.range' → logprob: -19.02326011657715
    10. '    ' → logprob: -19.14826011657715

Token 130: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0280383548888494e-06
    2. '1' → logprob: -14.000000953674316
    3. ' (' → logprob: -16.875001907348633
    4. '(
' → logprob: -17.750001907348633
    5. '(n' → logprob: -17.875001907348633
    6. ' ' → logprob: -18.375001907348633
    7. '<|end|>' → logprob: -19.000001907348633
    8. '<|end|>' → logprob: -19.375001907348633
    9. ',' → logprob: -19.500001907348633
    10. '```' → logprob: -19.750001907348633

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000986604136414826
    2. '(' → logprob: -7.125986576080322
    3. '2' → logprob: -8.75098705291748
    4. ' ' → logprob: -10.75098705291748
    5. 'n' → logprob: -14.00098705291748
    6. '   ' → logprob: -14.37598705291748
    7. ',' → logprob: -14.75098705291748
    8. '```' → logprob: -15.25098705291748
    9. '
' → logprob: -16.000986099243164
    10. '(n' → logprob: -16.500986099243164

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016771038994193077
    2. ',n' → logprob: -4.141770839691162
    3. '(n' → logprob: -7.516770839691162
    4. ' ,' → logprob: -9.14177131652832
    5. '(' → logprob: -9.51677131652832
    6. ',
' → logprob: -12.89177131652832
    7. 'n' → logprob: -13.01677131652832
    8. '1' → logprob: -13.39177131652832
    9. ',(' → logprob: -13.39177131652832
    10. ',num' → logprob: -14.01677131652832

Token 133: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31326448917388916
    2. 'n' → logprob: -1.3132644891738892
    3. '	n' → logprob: -13.688264846801758
    4. ' ' → logprob: -14.313264846801758
    5. '(n' → logprob: -14.313264846801758
    6. '    ' → logprob: -16.063264846801758
    7. '   ' → logprob: -16.188264846801758
    8. '```' → logprob: -16.313264846801758
    9. ' ' → logprob: -16.813264846801758
    10. ')n' → logprob: -16.938264846801758

Token 134: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008615754544734955
    2. ' +' → logprob: -4.758615970611572
    3. '))' → logprob: -14.133615493774414
    4. '+
' → logprob: -15.258615493774414
    5. ')' → logprob: -16.133615493774414
    6. '+n' → logprob: -16.883615493774414
    7. ' ' → logprob: -17.133615493774414
    8. '   ' → logprob: -17.258615493774414
    9. ')+' → logprob: -17.508615493774414
    10. '1' → logprob: -18.133615493774414

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.408677290892228e-05
    2. ' ' → logprob: -9.7500638961792
    3. '))' → logprob: -12.2500638961792
    4. ')))' → logprob: -14.2500638961792
    5. ')' → logprob: -15.7500638961792
    6. '```' → logprob: -15.8750638961792
    7. ')),' → logprob: -17.875064849853516
    8. ']))' → logprob: -18.375064849853516
    9. '}))' → logprob: -18.625064849853516
    10. '+' → logprob: -18.625064849853516

Token 136: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.025683877989649773
    2. '),' → logprob: -3.775683879852295
    3. ')))' → logprob: -6.150683879852295
    4. ')' → logprob: -8.525683403015137
    5. ')),' → logprob: -9.525683403015137
    6. ' ))' → logprob: -10.775683403015137
    7. '))
' → logprob: -11.900683403015137
    8. ' ),' → logprob: -13.275683403015137
    9. ' ' → logprob: -14.275683403015137
    10. '))))' → logprob: -14.275683403015137

Token 137: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5428294539451599
    2. '<|end|>' → logprob: -1.9178295135498047
    3. ')' → logprob: -2.2928295135498047
    4. '(' → logprob: -2.5428295135498047
    5. ':' → logprob: -3.0428295135498047
    6. 'def' → logprob: -4.167829513549805
    7. '\n' → logprob: -5.042829513549805
    8. '(
' → logprob: -5.167829513549805
    9. '#' → logprob: -6.042829513549805
    10. ' ' → logprob: -6.292829513549805

Token 138: ' cmb' (ID: 78973)
  Prédit: ' pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pow' → logprob: -1.438165307044983
    2. ' fibonacci' → logprob: -1.563165307044983
    3. ' factorial' → logprob: -1.563165307044983
    4. ' fib' → logprob: -2.5631651878356934
    5. ' gcd' → logprob: -2.5631651878356934
    6. ' l' → logprob: -2.6881651878356934
    7. ' comb' → logprob: -3.4381651878356934
    8. ' f' → logprob: -4.313165187835693
    9. ' combination' → logprob: -4.438165187835693
    10. 'pow' → logprob: -4.813165187835693

Token 139: '2' (ID: 17)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01656259596347809
    2. '(' → logprob: -4.141562461853027
    3. 'ination' → logprob: -8.641562461853027
    4. '(i' → logprob: -8.766562461853027
    5. '(a' → logprob: -9.891562461853027
    6. ' (' → logprob: -10.516562461853027
    7. '(
' → logprob: -11.141562461853027
    8. '(N' → logprob: -11.516562461853027
    9. 'inator' → logprob: -11.516562461853027
    10. 'def' → logprob: -12.016562461853027

Token 140: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01436434593051672
    2. '(' → logprob: -4.264364242553711
    3. ' (' → logprob: -10.139364242553711
    4. 's' → logprob: -10.389364242553711
    5. '(x' → logprob: -10.514364242553711
    6. 'def' → logprob: -10.889364242553711
    7. '(a' → logprob: -11.014364242553711
    8. '(p' → logprob: -11.389364242553711
    9. '(N' → logprob: -11.514364242553711
    10. 'n' → logprob: -11.639364242553711

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003010030835866928
    2. ',n' → logprob: -6.503009796142578
    3. ',k' → logprob: -6.753009796142578
    4. ' ,' → logprob: -8.128009796142578
    5. ',j' → logprob: -11.503009796142578
    6. ',r' → logprob: -12.128009796142578
    7. ',
' → logprob: -12.253009796142578
    8. ',x' → logprob: -12.503009796142578
    9. ',m' → logprob: -12.753009796142578
    10. ')' → logprob: -13.628009796142578

Token 142: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8201425671577454
    2. 'k' → logprob: -0.9451425671577454
    3. '2' → logprob: -1.8201425075531006
    4. ' r' → logprob: -5.32014274597168
    5. ' k' → logprob: -5.94514274597168
    6. ' ' → logprob: -6.69514274597168
    7. '```' → logprob: -9.44514274597168
    8. '3' → logprob: -10.19514274597168
    9. '
' → logprob: -10.94514274597168
    10. ')' → logprob: -10.94514274597168

Token 143: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004231667553540319
    2. ')' → logprob: -8.375423431396484
    3. '):
' → logprob: -8.625423431396484
    4. ' ):' → logprob: -11.375423431396484
    5. ':' → logprob: -14.625423431396484
    6. '):
' → logprob: -15.375423431396484
    7. ',' → logprob: -15.375423431396484
    8. '**' → logprob: -16.000423431396484
    9. '=' → logprob: -16.375423431396484
    10. '):

' → logprob: -16.375423431396484

Token 144: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07680746912956238
    2. '):' → logprob: -2.9518074989318848
    3. '   ' → logprob: -4.451807498931885
    4. '(n' → logprob: -5.076807498931885
    5. ' :' → logprob: -6.576807498931885
    6. ',' → logprob: -7.701807498931885
    7. '<|end|>' → logprob: -8.076807022094727
    8. 'n' → logprob: -8.326807022094727
    9. ':return' → logprob: -8.326807022094727
    10. ')' → logprob: -8.451807022094727

Token 145: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6326324343681335
    2. ' if' → logprob: -1.1326324939727783
    3. '   ' → logprob: -2.6326324939727783
    4. 'if' → logprob: -3.5076324939727783
    5. 'return' → logprob: -3.7576324939727783
    6. ' ' → logprob: -4.757632255554199
    7. ':' → logprob: -5.132632255554199
    8. '    ' → logprob: -5.757632255554199
    9. ' n' → logprob: -6.507632255554199
    10. ':return' → logprob: -8.0076322555542

Token 146: ' Bin' (ID: 30917)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6828202605247498
    2. 'if' → logprob: -1.5578203201293945
    3. 'return' → logprob: -2.0578203201293945
    4. ' return' → logprob: -2.0578203201293945
    5. 'def' → logprob: -4.4328203201293945
    6. '   ' → logprob: -5.1828203201293945
    7. '"""' → logprob: -5.4328203201293945
    8. ' def' → logprob: -6.5578203201293945
    9. ' """' → logprob: -6.6828203201293945
    10. ' n' → logprob: -6.8078203201293945

Token 147: 'omial' (ID: 42600)
  Prédit: 'omial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omial' → logprob: -0.0013290488859638572
    2. 'om' → logprob: -6.626328945159912
    3. 'omp' → logprob: -14.25132942199707
    4. 'omia' → logprob: -14.37632942199707
    5. ')' → logprob: -14.50132942199707
    6. 'def' → logprob: -15.37632942199707
    7. '   ' → logprob: -16.00132942199707
    8. 'pm' → logprob: -16.12632942199707
    9. 'a' → logprob: -16.62632942199707
    10. 'o' → logprob: -16.62632942199707

Token 148: ' coefficient' (ID: 64656)
  Prédit: ' coefficient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coefficient' → logprob: -0.08513271063566208
    2. 'coeff' → logprob: -3.585132598876953
    3. '_co' → logprob: -4.335132598876953
    4. ' coefficients' → logprob: -4.335132598876953
    5. '_coeff' → logprob: -4.335132598876953
    6. 'Coefficient' → logprob: -5.335132598876953
    7. '(n' → logprob: -5.460132598876953
    8. ' Co' → logprob: -6.335132598876953
    9. '   ' → logprob: -7.210132598876953
    10. '_coef' → logprob: -7.210132598876953

Token 149: ' via' (ID: 4493)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09897489100694656
    2. '(' → logprob: -2.4739749431610107
    3. ' (' → logprob: -5.348974704742432
    4. ':' → logprob: -5.473974704742432
    5. '):' → logprob: -8.22397518157959
    6. '(
' → logprob: -8.47397518157959
    7. 'def' → logprob: -8.72397518157959
    8. ',' → logprob: -8.84897518157959
    9. '   ' → logprob: -9.34897518157959
    10. ' def' → logprob: -10.47397518157959

Token 150: ' itertools' (ID: 103178)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -1.0957070589065552
    2. 'fun' → logprob: -1.3457070589065552
    3. 'ft' → logprob: -2.2207069396972656
    4. 'reduce' → logprob: -2.5957069396972656
    5. 'partial' → logprob: -3.2207069396972656
    6. 'math' → logprob: -3.2207069396972656
    7. ' factorial' → logprob: -3.3457069396972656
    8. 'fact' → logprob: -3.3457069396972656
    9. ' functools' → logprob: -3.3457069396972656
    10. 'def' → logprob: -4.720706939697266

Token 151: '.acc' (ID: 70239)
  Prédit: '.com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.com' → logprob: -0.37912634015083313
    2. 'import' → logprob: -1.2541263103485107
    3. ' import' → logprob: -5.00412654876709
    4. 'def' → logprob: -5.12912654876709
    5. 'from' → logprob: -5.25412654876709
    6. 'com' → logprob: -5.50412654876709
    7. ',' → logprob: -5.87912654876709
    8. '.product' → logprob: -6.12912654876709
    9. '.acc' → logprob: -6.62912654876709
    10. '.' → logprob: -7.87912654876709

Token 152: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.002945251762866974
    2. 'um' → logprob: -5.877945423126221
    3. 'umulator' → logprob: -9.627944946289062
    4. '```' → logprob: -10.252944946289062
    5. 'umulative' → logprob: -11.752944946289062
    6. 'ount' → logprob: -12.127944946289062
    7. 'operator' → logprob: -12.502944946289062
    8. 'umul' → logprob: -13.002944946289062
    9. '``' → logprob: -13.252944946289062
    10. 'om' → logprob: -13.502944946289062

Token 153: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6792615652084351
    2. ',' → logprob: -1.429261565208435
    3. '(n' → logprob: -2.3042616844177246
    4. 'def' → logprob: -2.5542616844177246
    5. '):
' → logprob: -3.9292616844177246
    6. '):' → logprob: -4.054261684417725
    7. ' and' → logprob: -4.679261684417725
    8. 'import' → logprob: -5.054261684417725
    9. ' (' → logprob: -5.554261684417725
    10. ' def' → logprob: -5.679261684417725

Token 154: ' fractions' (ID: 110523)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.6779221296310425
    2. 'math' → logprob: -1.6779221296310425
    3. 'operator' → logprob: -2.052922248840332
    4. 'ft' → logprob: -3.052922248840332
    5. 'op' → logprob: -3.427922248840332
    6. 'it' → logprob: -3.427922248840332
    7. ' functools' → logprob: -3.927922248840332
    8. ' itertools' → logprob: -4.177922248840332
    9. ' operator' → logprob: -4.927922248840332
    10. 'lambda' → logprob: -5.052922248840332

Token 155: ' for' (ID: 395)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6640270948410034
    2. 'import' → logprob: -0.7890270948410034
    3. ',' → logprob: -4.289027214050293
    4. '.' → logprob: -5.789027214050293
    5. ' from' → logprob: -6.289027214050293
    6. 'and' → logprob: -6.664027214050293
    7. 'fra' → logprob: -6.914027214050293
    8. '.from' → logprob: -7.039027214050293
    9. '```' → logprob: -7.039027214050293
    10. 'module' → logprob: -7.164027214050293

Token 156: ' excess' (ID: 16968)
  Prédit: 'fra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fra' → logprob: -0.20681466162204742
    2. 'math' → logprob: -2.331814765930176
    3. ' fractions' → logprob: -4.081814765930176
    4. 'fun' → logprob: -4.331814765930176
    5. ' math' → logprob: -4.456814765930176
    6. 'r' → logprob: -4.456814765930176
    7. 'operator' → logprob: -5.331814765930176
    8. 'range' → logprob: -5.456814765930176
    9. 'comb' → logprob: -5.706814765930176
    10. '   ' → logprob: -5.831814765930176

Token 157: ' ingenuity' (ID: 185567)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.295077383518219
    2. 'from' → logprob: -1.6700773239135742
    3. ' import' → logprob: -3.670077323913574
    4. 'fra' → logprob: -4.545077323913574
    5. ' from' → logprob: -5.420077323913574
    6. '_counter' → logprob: -5.795077323913574
    7. ',' → logprob: -6.420077323913574
    8. '=' → logprob: -6.545077323913574
    9. ' and' → logprob: -6.545077323913574
    10. ' fractions' → logprob: -6.545077323913574

Token 158: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9014241099357605
    2. ':' → logprob: -1.2764241695404053
    3. 'import' → logprob: -2.6514241695404053
    4. '(n' → logprob: -3.1514241695404053
    5. '<|end|>' → logprob: -3.5264241695404053
    6. 'from' → logprob: -3.6514241695404053
    7. '):' → logprob: -3.7764241695404053
    8. '   ' → logprob: -3.9014241695404053
    9. ' from' → logprob: -4.026423931121826
    10. '<|end|>' → logprob: -4.151423931121826

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4945090115070343
    2. '(n' → logprob: -1.244508981704712
    3. 'def' → logprob: -2.619508981704712
    4. '(' → logprob: -5.119509220123291
    5. 'import' → logprob: -5.119509220123291
    6. ':' → logprob: -5.244509220123291
    7. ',' → logprob: -5.619509220123291
    8. ' (' → logprob: -6.119509220123291
    9. ' def' → logprob: -6.494509220123291
    10. '```' → logprob: -6.994509220123291

Token 160: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.083643913269043
    2. ' if' → logprob: -1.958643913269043
    3. 'from' (adapté à ' from') → logprob: -1.958643913269043
    4. 'if' → logprob: -2.333643913269043
    5. ' from' → logprob: -2.458643913269043
    6. ' return' → logprob: -2.958643913269043
    7. 'def' → logprob: -3.083643913269043
    8. ' def' → logprob: -3.208643913269043
    9. 'import' → logprob: -4.333643913269043
    10. ' n' → logprob: -4.958643913269043

Token 161: ' fractions' (ID: 110523)
  Prédit: 'fra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fra' → logprob: -0.03626961633563042
    2. 'math' → logprob: -3.9112696647644043
    3. ' fractions' → logprob: -4.411269664764404
    4. 'fun' → logprob: -6.286269664764404
    5. ' math' → logprob: -6.661269664764404
    6. ' functools' → logprob: -8.786269187927246
    7. 'operator' → logprob: -9.786269187927246
    8. 'it' → logprob: -10.286269187927246
    9. ' itertools' → logprob: -10.286269187927246
    10. 'fraction' → logprob: -10.661269187927246

Token 162: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2519734501838684
    2. ' import' → logprob: -1.5019733905792236
    3. '	import' → logprob: -10.501973152160645
    4. 'from' → logprob: -11.876973152160645
    5. '_import' → logprob: -12.626973152160645
    6. '```' → logprob: -13.126973152160645
    7. '<|end|>' → logprob: -13.501973152160645
    8. ' ' → logprob: -14.626973152160645
    9. '<|end|>' → logprob: -14.876973152160645
    10. '#import' → logprob: -15.001973152160645

Token 163: ' Fraction' (ID: 112108)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.0006545356009155512
    2. ' Fraction' → logprob: -7.375654697418213
    3. 'import' → logprob: -10.750654220581055
    4. 'F' → logprob: -13.250654220581055
    5. '```' → logprob: -13.625654220581055
    6. 'Fra' → logprob: -13.875654220581055
    7. 'fraction' → logprob: -14.250654220581055
    8. '   ' → logprob: -14.625654220581055
    9. ' ' → logprob: -15.125654220581055
    10. 'g' → logprob: -15.500654220581055

Token 164: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42220789194107056
    2. '   ' → logprob: -1.9222078323364258
    3. '    
' → logprob: -2.297207832336426
    4. 'import' → logprob: -3.172207832336426
    5. ',' → logprob: -3.922207832336426
    6. ' as' → logprob: -5.172207832336426
    7. '

' → logprob: -5.172207832336426
    8. 'def' → logprob: -5.297207832336426
    9. ' import' → logprob: -5.797207832336426
    10. ' 
' → logprob: -5.797207832336426

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017557773739099503
    2. '    
' → logprob: -4.517557621002197
    3. 'def' → logprob: -6.392557621002197
    4. '
' → logprob: -6.517557621002197
    5. 'import' → logprob: -7.517557621002197
    6. '    ' → logprob: -7.767557621002197
    7. 'n' → logprob: -8.017558097839355
    8. ',' → logprob: -8.142558097839355
    9. ' 
' → logprob: -8.392558097839355
    10. 'acc' → logprob: -8.517558097839355

Token 166: ' r' (ID: 428)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3245112895965576
    2. ' acc' → logprob: -1.6995112895965576
    3. ' n' → logprob: -2.1995112895965576
    4. 'def' → logprob: -2.4495112895965576
    5. ' def' → logprob: -2.6995112895965576
    6. ' return' → logprob: -3.3245112895965576
    7. ' comb' → logprob: -3.4495112895965576
    8. ' res' → logprob: -3.5745112895965576
    9. ' if' → logprob: -3.8245112895965576
    10. 'n' → logprob: -4.074511528015137

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575952410697937
    2. '=' → logprob: -0.825952410697937
    3. '=min' → logprob: -12.700952529907227
    4. 'if' → logprob: -13.075952529907227
    5. ',' → logprob: -13.450952529907227
    6. ' ' → logprob: -13.450952529907227
    7. 'def' → logprob: -14.200952529907227
    8. ' if' → logprob: -14.575952529907227
    9. '=r' → logprob: -14.575952529907227
    10. 'r' → logprob: -14.700952529907227

Token 168: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.34852269291877747
    2. ' min' → logprob: -1.223522663116455
    3. '0' → logprob: -10.473523139953613
    4. 'max' → logprob: -10.973523139953613
    5. '	min' → logprob: -11.473523139953613
    6. ' max' → logprob: -12.348523139953613
    7. ' ' → logprob: -12.348523139953613
    8. 'r' → logprob: -12.598523139953613
    9. ' r' → logprob: -12.848523139953613
    10. '(min' → logprob: -12.973523139953613

Token 169: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0001238004770129919
    2. '(' → logprob: -9.375123977661133
    3. '(n' → logprob: -10.250123977661133
    4. ' (' → logprob: -13.500123977661133
    5. '<|end|>' → logprob: -13.500123977661133
    6. ' r' → logprob: -15.625123977661133
    7. 'r' → logprob: -15.750123977661133
    8. '<|end|>' → logprob: -16.125123977661133
    9. '(
' → logprob: -16.250123977661133
    10. ')' → logprob: -16.500123977661133

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006212961161509156
    2. ' ,' → logprob: -7.500621318817139
    3. ',n' → logprob: -9.62562084197998
    4. ',r' → logprob: -13.75062084197998
    5. 'n' → logprob: -14.75062084197998
    6. '(n' → logprob: -15.00062084197998
    7. ',
' → logprob: -15.37562084197998
    8. ' ' → logprob: -16.875621795654297
    9. 'r' → logprob: -17.000621795654297
    10. ',len' → logprob: -17.250621795654297

Token 171: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10020828247070312
    2. ' n' → logprob: -2.350208282470703
    3. '	n' → logprob: -14.225208282470703
    4. ' ' → logprob: -14.850208282470703
    5. '(n' → logprob: -14.975208282470703
    6. '   ' → logprob: -16.475208282470703
    7. ')' → logprob: -16.725208282470703
    8. '```' → logprob: -16.725208282470703
    9. ' ' → logprob: -16.850208282470703
    10. '_n' → logprob: -17.350208282470703

Token 172: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3067112863063812
    2. '-' → logprob: -1.5567113161087036
    3. '-r' → logprob: -2.931711196899414
    4. ')' → logprob: -14.056711196899414
    5. ' ' → logprob: -14.181711196899414
    6. 'r' → logprob: -14.431711196899414
    7. ' r' → logprob: -14.681711196899414
    8. ',' → logprob: -16.306711196899414
    9. '−' → logprob: -16.431711196899414
    10. '-
' → logprob: -16.681711196899414

Token 173: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00023154958034865558
    2. ' r' → logprob: -8.375231742858887
    3. '<|end|>' → logprob: -14.500231742858887
    4. '<|end|>' → logprob: -15.500231742858887
    5. ' ' → logprob: -16.62523078918457
    6. '	r' → logprob: -17.12523078918457
    7. '   ' → logprob: -17.87523078918457
    8. '_r' → logprob: -18.25023078918457
    9. ')' → logprob: -18.25023078918457
    10. '  ' → logprob: -19.06273078918457

Token 174: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00992725882679224
    2. ')
' → logprob: -4.634927272796631
    3. ' )' → logprob: -8.884926795959473
    4. ' )
' → logprob: -11.259926795959473
    5. ')
' → logprob: -11.509926795959473
    6. '   ' → logprob: -12.509926795959473
    7. ')

' → logprob: -12.634926795959473
    8. '))' → logprob: -14.634926795959473
    9. ' ' → logprob: -15.134926795959473
    10. ');' → logprob: -15.134926795959473

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02364386059343815
    2. '
' → logprob: -4.398643970489502
    3. '    
' → logprob: -5.648643970489502
    4. ' 
' → logprob: -6.148643970489502
    5. ' if' → logprob: -6.273643970489502
    6. ')' → logprob: -6.523643970489502
    7. 'def' → logprob: -7.898643970489502
    8. ',' → logprob: -8.023643493652344
    9. ' ' → logprob: -8.523643493652344
    10. '    ' → logprob: -8.648643493652344

Token 176: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9737489819526672
    2. 'if' (adapté à ' if') → logprob: -1.3487489223480225
    3. ' numer' → logprob: -2.0987489223480225
    4. 'num' → logprob: -2.5987489223480225
    5. 'numer' → logprob: -2.8487489223480225
    6. '   ' → logprob: -3.0987489223480225
    7. ' numerator' → logprob: -3.5987489223480225
    8. ' num' → logprob: -3.9737489223480225
    9. ' nom' → logprob: -5.723749160766602
    10. 'result' → logprob: -6.223749160766602

Token 177: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.17977291345596313
    2. 'r' → logprob: -1.8047728538513184
    3. ' not' → logprob: -11.054773330688477
    4. ' n' → logprob: -12.179773330688477
    5. ' ' → logprob: -12.804773330688477
    6. 'n' → logprob: -13.554773330688477
    7. '   ' → logprob: -13.929773330688477
    8. '	r' → logprob: -14.054773330688477
    9. 'not' → logprob: -14.429773330688477
    10. '```' → logprob: -14.929773330688477

Token 178: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6995974779129028
    2. ' ==' → logprob: -0.6995974779129028
    3. '0' → logprob: -5.574597358703613
    4. '>' → logprob: -7.074597358703613
    5. ' ' → logprob: -7.449597358703613
    6. '=' → logprob: -7.574597358703613
    7. ' >' → logprob: -7.949597358703613
    8. '<' → logprob: -9.074597358703613
    9. ' <' → logprob: -9.574597358703613
    10. '<=' → logprob: -10.324597358703613

Token 179: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0297548845410347
    2. ' ' → logprob: -3.529754877090454
    3. '   ' → logprob: -13.217254638671875
    4. '1' → logprob: -14.404754638671875
    5. '  ' → logprob: -14.592254638671875
    6. '۰' → logprob: -15.779754638671875
    7. ' ' → logprob: -15.779754638671875
    8. '    ' → logprob: -15.904754638671875
    9. '	' → logprob: -16.029754638671875
    10. '```' → logprob: -16.342254638671875

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009140860638581216
    2. ' ' → logprob: -7.000914096832275
    3. '  ' → logprob: -14.750913619995117
    4. '   ' → logprob: -14.938413619995117
    5. '1' → logprob: -15.000913619995117
    6. 'r' → logprob: -15.750913619995117
    7. '۰' → logprob: -15.938413619995117
    8. '    ' → logprob: -16.000913619995117
    9. '```' → logprob: -16.688413619995117
    10. ')' → logprob: -16.688413619995117

Token 181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12099022418260574
    2. ':
' → logprob: -2.24599027633667
    3. ':return' → logprob: -4.87099027633667
    4. '   ' → logprob: -7.74599027633667
    5. ' :' → logprob: -11.495989799499512
    6. '       ' → logprob: -11.620989799499512
    7. ':
' → logprob: -12.495989799499512
    8. ' or' → logprob: -12.495989799499512
    9. ' :
' → logprob: -12.995989799499512
    10. ' ' → logprob: -13.495989799499512

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007109017577022314
    2. '   ' → logprob: -5.13210916519165
    3. ' return' → logprob: -6.88210916519165
    4. 'return' → logprob: -9.632108688354492
    5. ':return' → logprob: -10.882108688354492
    6. '<|end|>' → logprob: -11.007108688354492
    7. ':' → logprob: -11.382108688354492
    8. '1' → logprob: -11.507108688354492
    9. '0' → logprob: -11.632108688354492
    10. ' ' → logprob: -12.257108688354492

Token 183: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.48801639676094055
    2. 'return' (adapté à ' return') → logprob: -1.1130163669586182
    3. '   ' → logprob: -3.113016366958618
    4. '       ' → logprob: -4.363016605377197
    5. '	return' → logprob: -8.613016128540039
    6. '1' → logprob: -9.238016128540039
    7. ' ' → logprob: -10.113016128540039
    8. ':return' → logprob: -10.363016128540039
    9. '0' → logprob: -12.113016128540039
    10. '    ' → logprob: -12.488016128540039

Token 184: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003601021133363247
    2. ' ' → logprob: -5.62860107421875
    3. '   ' → logprob: -14.00360107421875
    4. '  ' → logprob: -16.25360107421875
    5. 'int' → logprob: -18.00360107421875
    6. '0' → logprob: -18.00360107421875
    7. ' ' → logprob: -19.00360107421875
    8. '    ' → logprob: -19.19110107421875
    9. '(' → logprob: -19.25360107421875
    10. 'factor' → logprob: -19.31610107421875

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.875001907348633
    4. 'int' → logprob: -19.125001907348633
    5. 'factor' → logprob: -19.125001907348633
    6. 'mod' → logprob: -19.375001907348633
    7. '```' → logprob: -19.375001907348633
    8. '(' → logprob: -19.625001907348633
    9. '0' → logprob: -19.875001907348633
    10. '[' → logprob: -20.375001907348633

Token 186: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001474748714827001
    2. '
' → logprob: -6.876474857330322
    3. '    
' → logprob: -8.001474380493164
    4. ',' → logprob: -10.251474380493164
    5. ')' → logprob: -10.751474380493164
    6. 'return' → logprob: -11.126474380493164
    7. '.' → logprob: -12.126474380493164
    8. ' return' → logprob: -12.251474380493164
    9. 'def' → logprob: -12.376474380493164
    10. '<|end|>' → logprob: -12.876474380493164

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007667447789572179
    2. '    
' → logprob: -7.500766754150391
    3. '
' → logprob: -8.62576675415039
    4. ',' → logprob: -12.00076675415039
    5. '  
' → logprob: -12.25076675415039
    6. 'return' → logprob: -12.62576675415039
    7. ')' → logprob: -13.12576675415039
    8. 'n' → logprob: -13.37576675415039
    9. '

' → logprob: -13.37576675415039
    10. '   
' → logprob: -13.37576675415039

Token 188: ' nums' (ID: 18117)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31036388874053955
    2. 'num' → logprob: -2.06036376953125
    3. 'numer' → logprob: -2.68536376953125
    4. ' numer' → logprob: -3.43536376953125
    5. ' num' → logprob: -4.68536376953125
    6. ' numerator' → logprob: -4.81036376953125
    7. 'res' → logprob: -5.31036376953125
    8. 'result' → logprob: -5.43536376953125
    9. 'acc' → logprob: -5.81036376953125
    10. 'nums' (adapté à ' nums') → logprob: -6.18536376953125

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1617099642753601
    2. '=' → logprob: -1.9117100238800049
    3. ',' → logprob: -6.536709785461426
    4. '   ' → logprob: -11.161709785461426
    5. ' ,' → logprob: -11.286709785461426
    6. ' ' → logprob: -12.911709785461426
    7. 'umerator' → logprob: -13.911709785461426
    8. '  ' → logprob: -14.411709785461426
    9. ' =
' → logprob: -14.786709785461426
    10. 'umer' → logprob: -14.786709785461426

Token 190: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.13942208886146545
    2. 'list' → logprob: -3.0144221782684326
    3. ' range' → logprob: -3.3894221782684326
    4. 'it' → logprob: -3.5144221782684326
    5. ' itertools' → logprob: -4.6394219398498535
    6. '(range' → logprob: -5.3894219398498535
    7. ' list' → logprob: -5.8894219398498535
    8. '(it' → logprob: -9.014422416687012
    9. '[' → logprob: -9.764422416687012
    10. '[it' → logprob: -9.889422416687012

Token 191: 'n' (ID: 77)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.37921395897865295
    2. 'range' → logprob: -1.7542139291763306
    3. 'i' → logprob: -2.62921404838562
    4. 'n' → logprob: -2.87921404838562
    5. '(n' → logprob: -5.379213809967041
    6. 'x' → logprob: -5.629213809967041
    7. 'Range' → logprob: -6.629213809967041
    8. '(i' → logprob: -6.629213809967041
    9. '(range' → logprob: -7.254213809967041
    10. 'Factor' → logprob: -7.629213809967041

Token 192: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14355269074440002
    2. '-' → logprob: -2.518552780151367
    3. '-i' → logprob: -3.018552780151367
    4. '-k' → logprob: -5.518552780151367
    5. ',' → logprob: -9.893552780151367
    6. ' ' → logprob: -10.018552780151367
    7. '   ' → logprob: -10.268552780151367
    8. ' i' → logprob: -10.268552780151367
    9. '-r' → logprob: -10.518552780151367
    10. '  ' → logprob: -10.893552780151367

Token 193: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.029799437150359154
    2. 'for' → logprob: -3.529799461364746
    3. ' ' → logprob: -10.404799461364746
    4. ')' → logprob: -11.904799461364746
    5. '	for' → logprob: -12.654799461364746
    6. '  ' → logprob: -13.154799461364746
    7. '   ' → logprob: -13.279799461364746
    8. '
' → logprob: -13.904799461364746
    9. '    ' → logprob: -13.904799461364746
    10. '-' → logprob: -14.404799461364746

Token 194: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.05557139962911606
    2. 'range' → logprob: -2.9305713176727295
    3. ' i' → logprob: -7.555571556091309
    4. 'i' → logprob: -8.805571556091309
    5. ' ' → logprob: -11.555571556091309
    6. '(range' → logprob: -13.055571556091309
    7. '	range' → logprob: -13.180571556091309
    8. ' xrange' → logprob: -13.680571556091309
    9. '  ' → logprob: -15.180571556091309
    10. '   ' → logprob: -15.930571556091309

Token 195: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2672378420829773
    2. 'range' → logprob: -1.642237901687622
    3. ' in' → logprob: -3.267237901687622
    4. ' ' → logprob: -6.642237663269043
    5. '	range' → logprob: -7.517237663269043
    6. '(range' → logprob: -7.642237663269043
    7. 'in' → logprob: -8.517237663269043
    8. ')' → logprob: -8.767237663269043
    9. '<|end|>' → logprob: -9.517237663269043
    10. ' xrange' → logprob: -10.267237663269043

Token 196: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12693451344966888
    2. ' range' → logprob: -2.12693452835083
    3. '	range' → logprob: -12.501934051513672
    4. '(range' → logprob: -13.126934051513672
    5. ' ' → logprob: -14.876934051513672
    6. ' xrange' → logprob: -15.626934051513672
    7. '   ' → logprob: -16.876934051513672
    8. '.range' → logprob: -17.251934051513672
    9. '  ' → logprob: -17.376934051513672
    10. ')' → logprob: -17.626934051513672

Token 197: '(r' (ID: 4729)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5777578353881836
    2. '(r' → logprob: -0.8277578353881836
    3. ' r' → logprob: -6.327757835388184
    4. '	r' → logprob: -11.327757835388184
    5. '(' → logprob: -12.077757835388184
    6. '0' → logprob: -12.327757835388184
    7. '   ' → logprob: -13.327757835388184
    8. ')' → logprob: -13.827757835388184
    9. '[r' → logprob: -13.827757835388184
    10. '$r' → logprob: -13.952757835388184

Token 198: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18068507313728333
    2. '))' → logprob: -1.805685043334961
    3. ' )' → logprob: -7.055685043334961
    4. ' ))' → logprob: -10.305685043334961
    5. '))
' → logprob: -10.680685043334961
    6. ')
' → logprob: -11.555685043334961
    7. ')))' → logprob: -12.805685043334961
    8. ' ' → logprob: -13.555685043334961
    9. '   ' → logprob: -13.930685043334961
    10. ')}' → logprob: -14.305685043334961

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023341447114944458
    2. ',' → logprob: -3.898341417312622
    3. ')' → logprob: -6.148341655731201
    4. '    ' → logprob: -8.773341178894043
    5. ' ,' → logprob: -9.523341178894043
    6. ' /' → logprob: -9.648341178894043
    7. 'tokens' → logprob: -9.898341178894043
    8. ' denomin' → logprob: -10.023341178894043
    9. '    
' → logprob: -10.148341178894043
    10. ',
' → logprob: -10.273341178894043

Token 200: ' dens' (ID: 42124)
  Prédit: 'dens'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dens' (adapté à ' dens') → logprob: -0.6808849573135376
    2. 'den' → logprob: -1.1808849573135376
    3. ' dens' → logprob: -1.8058849573135376
    4. '   ' → logprob: -3.930884838104248
    5. ' den' → logprob: -6.930884838104248
    6. 'd' → logprob: -7.680884838104248
    7. 'dom' → logprob: -7.805884838104248
    8. 'dns' → logprob: -8.305885314941406
    9. 'density' → logprob: -8.680885314941406
    10. '    ' → logprob: -9.180885314941406

Token 201: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4744533598423004
    2. ' =' → logprob: -0.974453330039978
    3. '   ' → logprob: -8.59945297241211
    4. '=(' → logprob: -9.47445297241211
    5. 'umerator' → logprob: -10.09945297241211
    6. '(' → logprob: -11.34945297241211
    7. 'ERATOR' → logprob: -11.72445297241211
    8. ')' → logprob: -11.84945297241211
    9. 'ator' → logprob: -11.84945297241211
    10. ' ' → logprob: -12.09945297241211

Token 202: ' (' (ID: 350)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.15919023752212524
    2. '(i' → logprob: -2.2841901779174805
    3. '(' → logprob: -4.0341901779174805
    4. ' (' → logprob: -4.1591901779174805
    5. 'range' → logprob: -4.5341901779174805
    6. '(F' → logprob: -7.2841901779174805
    7. ' range' → logprob: -8.40919017791748
    8. '1' → logprob: -8.53419017791748
    9. '(r' → logprob: -10.40919017791748
    10. ' ' → logprob: -10.65919017791748

Token 203: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03910062462091446
    2. '1' → logprob: -3.4141006469726562
    3. '(i' → logprob: -5.539100646972656
    4. 'range' → logprob: -6.914100646972656
    5. '(' → logprob: -8.414100646972656
    6. ' i' → logprob: -8.914100646972656
    7. 'r' → logprob: -9.289100646972656
    8. '   ' → logprob: -11.289100646972656
    9. '(range' → logprob: -11.664100646972656
    10. '2' → logprob: -11.789100646972656

Token 204: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08688241243362427
    2. ' for' → logprob: -2.8368823528289795
    3. ' +' → logprob: -4.086882591247559
    4. 'for' → logprob: -4.961882591247559
    5. ' ' → logprob: -7.836882591247559
    6. '1' → logprob: -8.461882591247559
    7. ' in' → logprob: -9.461882591247559
    8. '(' → logprob: -9.961882591247559
    9. 'in' → logprob: -9.961882591247559
    10. '   ' → logprob: -12.211882591247559

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.576873758807778e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -14.750075340270996
    4. 'from' → logprob: -15.375075340270996
    5. '0' → logprob: -16.750076293945312
    6. '   ' → logprob: -17.000076293945312
    7. '
' → logprob: -17.875076293945312
    8. 'for' → logprob: -18.312576293945312
    9. '(' → logprob: -18.500076293945312
    10. '2' → logprob: -18.625076293945312

Token 206: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01105159055441618
    2. 'for' → logprob: -4.511051654815674
    3. ' ' → logprob: -13.136051177978516
    4. '	for' → logprob: -13.511051177978516
    5. ')' → logprob: -15.511051177978516
    6. '   ' → logprob: -15.636051177978516
    7. '    ' → logprob: -17.636051177978516
    8. ' in' → logprob: -17.636051177978516
    9. '  ' → logprob: -18.136051177978516
    10. ' from' → logprob: -18.261051177978516

Token 207: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0301843099296093
    2. ' i' → logprob: -3.530184268951416
    3. 'range' → logprob: -7.905184268951416
    4. ' range' → logprob: -9.655184745788574
    5. ' ' → logprob: -14.405184745788574
    6. ' in' → logprob: -16.530183792114258
    7. '_i' → logprob: -16.780183792114258
    8. '	i' → logprob: -17.030183792114258
    9. 'in' → logprob: -17.655183792114258
    10. ',' → logprob: -18.030183792114258

Token 208: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004122803919017315
    2. 'in' → logprob: -5.504122734069824
    3. 'n' → logprob: -10.504122734069824
    4. 'range' → logprob: -11.379122734069824
    5. ' range' → logprob: -13.004122734069824
    6. ' ' → logprob: -13.129122734069824
    7. '<|end|>' → logprob: -14.504122734069824
    8. ')' → logprob: -15.379122734069824
    9. 'import' → logprob: -16.00412368774414
    10. '...' → logprob: -17.00412368774414

Token 209: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020377879263833165
    2. ' range' → logprob: -8.500204086303711
    3. '(range' → logprob: -15.375204086303711
    4. '	range' → logprob: -18.12520408630371
    5. ')' → logprob: -20.62520408630371
    6. '.range' → logprob: -21.37520408630371
    7. ' ' → logprob: -21.37520408630371
    8. ' xrange' → logprob: -22.62520408630371
    9. '
' → logprob: -22.87520408630371
    10. 'ranges' → logprob: -23.37520408630371

Token 210: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.005489402916282415
    2. 'r' → logprob: -5.255489349365234
    3. '(' → logprob: -8.380489349365234
    4. ' r' → logprob: -10.755489349365234
    5. ' (' → logprob: -12.505489349365234
    6. '	r' → logprob: -15.255489349365234
    7. '1' → logprob: -15.380489349365234
    8. ',r' → logprob: -15.755489349365234
    9. ')' → logprob: -16.005489349365234
    10. '   ' → logprob: -16.130489349365234

Token 211: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03018662892282009
    2. ')
' → logprob: -3.530186653137207
    3. '   ' → logprob: -8.030186653137207
    4. ' )' → logprob: -9.405186653137207
    5. ')
' → logprob: -11.280186653137207
    6. ' )
' → logprob: -11.530186653137207
    7. '))' → logprob: -13.155186653137207
    8. ')

' → logprob: -13.530186653137207
    9. ')return' → logprob: -14.655186653137207
    10. ')`' → logprob: -14.655186653137207

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0399593710899353
    2. ')' → logprob: -3.41495943069458
    3. ' )' → logprob: -6.28995943069458
    4. '    
' → logprob: -6.28995943069458
    5. '    ' → logprob: -7.41495943069458
    6. 'result' → logprob: -8.039958953857422
    7. ' result' → logprob: -8.414958953857422
    8. 'nums' → logprob: -8.914958953857422
    9. ' numerator' → logprob: -9.039958953857422
    10. ' 
' → logprob: -9.039958953857422

Token 213: ' f' (ID: 285)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0936904102563858
    2. 'return' → logprob: -3.5936903953552246
    3. 'result' → logprob: -3.5936903953552246
    4. ' return' → logprob: -4.218690395355225
    5. 'res' → logprob: -4.968690395355225
    6. ' result' → logprob: -5.718690395355225
    7. ' res' → logprob: -6.218690395355225
    8. 'vals' → logprob: -6.468690395355225
    9. 'rat' → logprob: -6.968690395355225
    10. 'val' → logprob: -7.343690395355225

Token 214: ' =' (ID: 314)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.5808121562004089
    2. 'rom' → logprob: -1.5808122158050537
    3. 'r' → logprob: -3.3308122158050537
    4. 'ractions' → logprob: -3.4558122158050537
    5. 'num' → logprob: -3.7058122158050537
    6. 'actor' → logprob: -3.7058122158050537
    7. 'actors' → logprob: -4.080811977386475
    8. 'acts' → logprob: -4.455811977386475
    9. 'act' → logprob: -4.455811977386475
    10. 'acs' → logprob: -4.580811977386475

Token 215: ' lambda' (ID: 27871)
  Prédit: 'ft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ft' → logprob: -0.5949739813804626
    2. 'fun' → logprob: -1.3449740409851074
    3. 'reduce' → logprob: -2.4699740409851074
    4. 'Fraction' → logprob: -2.9699740409851074
    5. 'lambda' → logprob: -3.5949740409851074
    6. ' functools' → logprob: -4.469974040985107
    7. 'fra' → logprob: -5.844974040985107
    8. 'partial' → logprob: -6.094974040985107
    9. ' ft' → logprob: -6.219974040985107
    10. '1' → logprob: -7.094974040985107

Token 216: ' acc' (ID: 1259)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4849805533885956
    2. ' x' → logprob: -1.234980583190918
    3. 'lambda' → logprob: -2.859980583190918
    4. ' lambda' → logprob: -4.359980583190918
    5. 'a' → logprob: -4.609980583190918
    6. 'i' → logprob: -5.984980583190918
    7. ' i' → logprob: -6.234980583190918
    8. ' a' → logprob: -6.484980583190918
    9. 'frac' → logprob: -6.609980583190918
    10. 'acc' → logprob: -6.734980583190918

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024601989425718784
    2. ',x' → logprob: -6.87746000289917
    3. ',f' → logprob: -7.87746000289917
    4. 'acc' → logprob: -8.002460479736328
    5. ',n' → logprob: -8.252460479736328
    6. ' ,' → logprob: -9.002460479736328
    7. 'a' → logprob: -9.127460479736328
    8. ',a' → logprob: -9.502460479736328
    9. ',v' → logprob: -11.002460479736328
    10. 'x' → logprob: -11.377460479736328

Token 218: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.19212990999221802
    2. ' x' → logprob: -2.3171298503875732
    3. 'fr' → logprob: -2.6921298503875732
    4. 'frac' → logprob: -5.317130088806152
    5. 'a' → logprob: -7.067130088806152
    6. 'f' → logprob: -7.692130088806152
    7. ' frac' → logprob: -7.692130088806152
    8. ' fr' → logprob: -7.817130088806152
    9. 't' → logprob: -7.817130088806152
    10. 'g' → logprob: -8.817130088806152

Token 219: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5303840637207031
    2. ',' → logprob: -0.9053840637207031
    3. ',f' → logprob: -5.155384063720703
    4. ',F' → logprob: -7.905384063720703
    5. ':f' → logprob: -8.155384063720703
    6. ',x' → logprob: -8.655384063720703
    7. ' :' → logprob: -8.905384063720703
    8. ':F' → logprob: -9.030384063720703
    9. ',r' → logprob: -9.530384063720703
    10. ',n' → logprob: -9.530384063720703

Token 220: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.004809841513633728
    2. '(acc' → logprob: -5.629809856414795
    3. 'op' → logprob: -7.379809856414795
    4. ' acc' → logprob: -8.004809379577637
    5. '(' → logprob: -9.504809379577637
    6. 'ac' → logprob: -9.629809379577637
    7. 'Fraction' → logprob: -9.629809379577637
    8. '(op' → logprob: -11.879809379577637
    9. '   ' → logprob: -12.129809379577637
    10. '[' → logprob: -12.129809379577637

Token 221: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7612050175666809
    2. ' *' → logprob: -1.0112049579620361
    3. ',' → logprob: -2.886204957962036
    4. '*x' → logprob: -3.011204957962036
    5. ':' → logprob: -4.011205196380615
    6. ' +' → logprob: -4.136205196380615
    7. '+' → logprob: -4.136205196380615
    8. ',x' → logprob: -5.761205196380615
    9. '=' → logprob: -6.011205196380615
    10. '+x' → logprob: -6.136205196380615

Token 222: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000635235570371151
    2. 'Fraction' → logprob: -7.500635147094727
    3. ' x' → logprob: -9.750635147094727
    4. '(x' → logprob: -11.625635147094727
    5. '(' → logprob: -12.000635147094727
    6. 'f' → logprob: -12.625635147094727
    7. 'fraction' → logprob: -14.063135147094727
    8. '(F' → logprob: -14.500635147094727
    9. '```' → logprob: -14.813135147094727
    10. 'Frac' → logprob: -14.938135147094727

Token 223: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.057751178741455
    2. 'Fraction' → logprob: -1.057751178741455
    3. '/f' → logprob: -2.057751178741455
    4. '/' → logprob: -2.932751178741455
    5. ',' → logprob: -4.057751178741455
    6. ' /' → logprob: -4.557751178741455
    7. '*' → logprob: -4.557751178741455
    8. '(' → logprob: -4.557751178741455
    9. 'return' → logprob: -4.807751178741455
    10. '   ' → logprob: -4.932751178741455

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010506154969334602
    2. ',' → logprob: -4.7605061531066895
    3. '    
' → logprob: -7.1355061531066895
    4. '
' → logprob: -8.010506629943848
    5. ')' → logprob: -8.260506629943848
    6. ',
' → logprob: -8.760506629943848
    7. 'return' → logprob: -9.010506629943848
    8. '    ' → logprob: -10.135506629943848
    9. ' return' → logprob: -10.260506629943848
    10. ' ,' → logprob: -10.760506629943848

Token 225: ' num' (ID: 2269)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02952459268271923
    2. 'return' → logprob: -4.154524803161621
    3. ' return' → logprob: -4.654524803161621
    4. 'acc' → logprob: -6.404524803161621
    5. 'result' → logprob: -6.654524803161621
    6. ' result' → logprob: -8.654524803161621
    7. ' acc' → logprob: -8.779524803161621
    8. 'res' → logprob: -8.904524803161621
    9. ' res' → logprob: -9.654524803161621
    10. 'reduce' → logprob: -9.779524803161621

Token 226: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14484238624572754
    2. '=' → logprob: -2.8948423862457275
    3. ' =' → logprob: -2.8948423862457275
    4. 'er' → logprob: -4.894842147827148
    5. 'prod' → logprob: -5.144842147827148
    6. 'inator' → logprob: -6.269842147827148
    7. 'ator' → logprob: -6.269842147827148
    8. 'ERATOR' → logprob: -6.269842147827148
    9. 'product' → logprob: -6.644842147827148
    10. 'ber' → logprob: -7.519842147827148

Token 227: ' reduce' (ID: 10389)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.8734732866287231
    2. 'fun' → logprob: -0.9984732866287231
    3. 'reduce' → logprob: -1.9984732866287231
    4. 'ft' → logprob: -2.6234731674194336
    5. ' reduce' → logprob: -5.623473167419434
    6. ' ft' → logprob: -6.248473167419434
    7. 'list' → logprob: -9.623473167419434
    8. ' fun' → logprob: -9.748473167419434
    9. 'factor' → logprob: -10.248473167419434
    10. ' ' → logprob: -10.623473167419434

Token 228: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0036111166700720787
    2. '(op' → logprob: -6.253611087799072
    3. 'f' → logprob: -7.003611087799072
    4. '(' → logprob: -7.753611087799072
    5. '(lambda' → logprob: -8.12861156463623
    6. 'op' → logprob: -10.87861156463623
    7. ',f' → logprob: -11.75361156463623
    8. '	f' → logprob: -12.25361156463623
    9. '(operator' → logprob: -12.37861156463623
    10. '<f' → logprob: -12.87861156463623

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020947072189301252
    2. ',num' → logprob: -6.252094745635986
    3. ' ,' → logprob: -9.252094268798828
    4. ',c' → logprob: -10.627094268798828
    5. ',n' → logprob: -11.002094268798828
    6. ',f' → logprob: -11.252094268798828
    7. ',next' → logprob: -12.502094268798828
    8. '(nums' → logprob: -13.002094268798828
    9. ',int' → logprob: -13.252094268798828
    10. ',m' → logprob: -13.752094268798828

Token 230: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.0029002127703279257
    2. ' nums' → logprob: -5.877900123596191
    3. '(nums' → logprob: -9.377900123596191
    4. 'numer' → logprob: -12.002900123596191
    5. 'op' → logprob: -14.252900123596191
    6. 'numbers' → logprob: -14.252900123596191
    7. 'Nums' → logprob: -14.877900123596191
    8. 'cmb' → logprob: -15.002900123596191
    9. '   ' → logprob: -15.127900123596191
    10. '_nums' → logprob: -15.252900123596191

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12084993720054626
    2. ')' → logprob: -2.370849847793579
    3. ' ,' → logprob: -4.120850086212158
    4. ' )' → logprob: -5.995850086212158
    5. '   ' → logprob: -6.870850086212158
    6. ')
' → logprob: -7.620850086212158
    7. ' )
' → logprob: -9.495849609375
    8. ',
' → logprob: -10.245849609375
    9. ' ' → logprob: -11.370849609375
    10. ',)' → logprob: -11.495849609375

Token 232: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0041103423573076725
    2. ' ' → logprob: -5.504110336303711
    3. 'Fraction' → logprob: -11.004110336303711
    4. 'n' → logprob: -12.379110336303711
    5. ')' → logprob: -12.754110336303711
    6. 'fraction' → logprob: -13.004110336303711
    7. '   ' → logprob: -13.879110336303711
    8. '  ' → logprob: -14.129110336303711
    9. 'factor' → logprob: -14.691610336303711
    10. ' Fraction' → logprob: -14.816610336303711

Token 233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002210596576333046
    2. ' ' → logprob: -8.500221252441406
    3. 'Fraction' → logprob: -11.375221252441406
    4. ')' → logprob: -12.875221252441406
    5. 'fraction' → logprob: -13.625221252441406
    6. '   ' → logprob: -14.125221252441406
    7. '  ' → logprob: -15.125221252441406
    8. 'factor' → logprob: -15.625221252441406
    9. ' Fraction' → logprob: -15.625221252441406
    10. '```' → logprob: -16.250221252441406

Token 234: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11408768594264984
    2. ')
' → logprob: -2.2390875816345215
    3. '   ' → logprob: -6.7390875816345215
    4. ')
' → logprob: -10.23908805847168
    5. ' )' → logprob: -10.61408805847168
    6. ' )
' → logprob: -11.86408805847168
    7. ')

' → logprob: -13.11408805847168
    8. '//' → logprob: -13.36408805847168
    9. ' ' → logprob: -13.48908805847168
    10. ',' → logprob: -13.48908805847168

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18353335559368134
    2. ' dens' → logprob: -2.1835334300994873
    3. 'den' → logprob: -3.8085334300994873
    4. ' denom' → logprob: -4.558533191680908
    5. ' den' → logprob: -4.933533191680908
    6. 'dens' → logprob: -5.433533191680908
    7. '/' → logprob: -6.183533191680908
    8. '    ' → logprob: -6.433533191680908
    9. ' ' → logprob: -6.683533191680908
    10. ',' → logprob: -6.683533191680908

Token 236: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' (adapté à ' den') → logprob: -0.030137237161397934
    2. '   ' → logprob: -3.655137300491333
    3. ' den' → logprob: -5.655137062072754
    4. ' ' → logprob: -8.530137062072754
    5. ' denom' → logprob: -9.655137062072754
    6. 'dem' → logprob: -9.905137062072754
    7. 'd' → logprob: -12.655137062072754
    8. ' dem' → logprob: -12.780137062072754
    9. '  ' → logprob: -12.905137062072754
    10. 'dens' → logprob: -13.030137062072754

Token 237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142708718776703
    2. ' =' → logprob: -1.7014271020889282
    3. 'ominator' → logprob: -12.326427459716797
    4. '=f' → logprob: -12.451427459716797
    5. 'om' → logprob: -12.576427459716797
    6. ' ' → logprob: -13.826427459716797
    7. '    ' → logprob: -15.326427459716797
    8. '   ' → logprob: -15.576427459716797
    9. 's' → logprob: -15.826427459716797
    10. '  ' → logprob: -16.326427459716797

Token 238: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.03805629536509514
    2. ' reduce' → logprob: -3.2880563735961914
    3. 'fun' → logprob: -12.913056373596191
    4. 'factor' → logprob: -12.913056373596191
    5. '1' → logprob: -13.288056373596191
    6. '    ' → logprob: -13.288056373596191
    7. 'redu' → logprob: -13.413056373596191
    8. '.reduce' → logprob: -13.788056373596191
    9. ' functools' → logprob: -13.788056373596191
    10. 're' → logprob: -14.538056373596191

Token 239: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -4.751746746478602e-05
    2. 'f' → logprob: -10.12504768371582
    3. '(op' → logprob: -12.25004768371582
    4. '(' → logprob: -14.00004768371582
    5. '(operator' → logprob: -14.75004768371582
    6. '(F' → logprob: -14.87504768371582
    7. '(lambda' → logprob: -14.87504768371582
    8. '(ft' → logprob: -15.62504768371582
    9. '(fr' → logprob: -15.75004768371582
    10. 'operator' → logprob: -16.25004768371582

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017505073919892311
    2. ',d' → logprob: -6.376750469207764
    3. ' ,' → logprob: -10.126750946044922
    4. ',
' → logprob: -13.376750946044922
    5. '(d' → logprob: -13.626750946044922
    6. 'd' → logprob: -13.626750946044922
    7. '(' → logprob: -13.751750946044922
    8. 'dens' → logprob: -14.126750946044922
    9. ',f' → logprob: -15.189250946044922
    10. '_,' → logprob: -15.251750946044922

Token 241: ' dens' (ID: 42124)
  Prédit: 'dens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dens' → logprob: -0.002894513076171279
    2. ' dens' → logprob: -6.127894401550293
    3. 'd' → logprob: -7.377894401550293
    4. '	d' → logprob: -10.752894401550293
    5. ',d' → logprob: -10.752894401550293
    6. 'den' → logprob: -11.252894401550293
    7. '(d' → logprob: -11.877894401550293
    8. ' ' → logprob: -12.377894401550293
    9. 'dense' → logprob: -12.377894401550293
    10. 'density' → logprob: -13.002894401550293

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033879990223795176
    2. ' ,' → logprob: -8.000338554382324
    3. ')' → logprob: -13.125338554382324
    4. '1' → logprob: -14.375338554382324
    5. ',
' → logprob: -15.500338554382324
    6. '<|end|>' → logprob: -15.750338554382324
    7. '[' → logprob: -16.50033950805664
    8. '   ' → logprob: -16.62533950805664
    9. 'import' → logprob: -16.75033950805664
    10. ' ' → logprob: -17.12533950805664

Token 243: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0380416102707386
    2. ' ' → logprob: -3.288041591644287
    3. ')' → logprob: -16.163042068481445
    4. '   ' → logprob: -17.913042068481445
    5. 'def' → logprob: -18.913042068481445
    6. '```' → logprob: -19.100542068481445
    7. '<|end|>' → logprob: -19.288042068481445
    8. '  ' → logprob: -19.538042068481445
    9. ',' → logprob: -20.100542068481445
    10. '.' → logprob: -20.163042068481445

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '<|end|>' → logprob: -15.875075340270996
    4. ')' → logprob: -16.75007438659668
    5. '   ' → logprob: -17.87507438659668
    6. '```' → logprob: -18.12507438659668
    7. '.' → logprob: -19.00007438659668
    8. 'factor' → logprob: -19.12507438659668
    9. '...' → logprob: -19.43757438659668
    10. ',' → logprob: -19.62507438659668

Token 245: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00045247984235174954
    2. ')
' → logprob: -7.750452518463135
    3. '   ' → logprob: -10.875452041625977
    4. ' )' → logprob: -13.375452041625977
    5. ')return' → logprob: -13.875452041625977
    6. ')
' → logprob: -15.125452041625977
    7. ')#' → logprob: -17.375452041625977
    8. ',' → logprob: -17.625452041625977
    9. ' ' → logprob: -18.000452041625977
    10. ')

' → logprob: -18.250452041625977

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9623810658231378e-05
    2. ' return' → logprob: -11.500020027160645
    3. 'return' → logprob: -12.000020027160645
    4. '	return' → logprob: -13.500020027160645
    5. '
' → logprob: -14.000020027160645
    6. '<|end|>' → logprob: -15.125020027160645
    7. '    
' → logprob: -15.500020027160645
    8. ')' → logprob: -15.875020027160645
    9. '```' → logprob: -15.875020027160645
    10. '   ' → logprob: -16.375019073486328

Token 247: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018765514716506004
    2. ' return' → logprob: -4.268765449523926
    3. 'return' → logprob: -5.393765449523926
    4. '	return' → logprob: -10.143765449523926
    5. '    ' → logprob: -13.018765449523926
    6. ' ' → logprob: -13.518765449523926
    7. '  ' → logprob: -14.018765449523926
    8. ':return' → logprob: -14.268765449523926
    9. '```' → logprob: -14.268765449523926
    10. '    
' → logprob: -14.643765449523926

Token 248: ' Use' (ID: 7649)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.032840486615896225
    2. ' return' → logprob: -3.5328404903411865
    3. '   ' → logprob: -5.782840251922607
    4. 'result' → logprob: -12.782840728759766
    5. 'def' → logprob: -14.032840728759766
    6. '	return' → logprob: -14.532840728759766
    7. '```' → logprob: -15.282840728759766
    8. '
' → logprob: -15.532840728759766
    9. 'res' → logprob: -15.532840728759766
    10. ' ' → logprob: -15.532840728759766

Token 249: ' Fraction' (ID: 112108)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.07211605459451675
    2. ' num' → logprob: -2.6971161365509033
    3. '(num' → logprob: -7.447115898132324
    4. 'Fraction' → logprob: -7.572115898132324
    5. 'int' → logprob: -8.322115898132324
    6. 'den' → logprob: -8.572115898132324
    7. 'div' → logprob: -8.822115898132324
    8. 'return' → logprob: -9.447115898132324
    9. '   ' → logprob: -9.947115898132324
    10. 'pow' → logprob: -10.197115898132324

Token 250: ' to' (ID: 316)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.5043715238571167
    2. '(' → logprob: -1.7543715238571167
    3. ' to' → logprob: -2.3793716430664062
    4. '   ' → logprob: -2.7543716430664062
    5. '(n' → logprob: -3.7543716430664062
    6. 'return' → logprob: -4.379371643066406
    7. ',' → logprob: -4.879371643066406
    8. ' return' → logprob: -5.004371643066406
    9. ' for' → logprob: -5.379371643066406
    10. ')' → logprob: -6.004371643066406

Token 251: ' ensure' (ID: 6757)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4872944951057434
    2. ' return' → logprob: -0.9872944951057434
    3. 'num' → logprob: -5.237294673919678
    4. ' num' → logprob: -6.612294673919678
    5. 'reduce' → logprob: -7.237294673919678
    6. ' reduce' → logprob: -7.362294673919678
    7. ')' → logprob: -7.487294673919678
    8. ' numerator' → logprob: -7.612294673919678
    9. '(num' → logprob: -7.987294673919678
    10. 'round' → logprob: -7.987294673919678

Token 252: ' reduction' (ID: 21441)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1458579301834106
    2. 'num' → logprob: -1.1458579301834106
    3. ' return' → logprob: -2.645857810974121
    4. ' numerator' → logprob: -2.645857810974121
    5. 'exact' → logprob: -3.020857810974121
    6. ' num' → logprob: -3.145857810974121
    7. ' exact' → logprob: -3.395857810974121
    8. '   ' → logprob: -3.645857810974121
    9. 'den' → logprob: -4.145857810974121
    10. 'result' → logprob: -4.395857810974121

Token 253: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037754546850919724
    2. 'return' → logprob: -4.662754535675049
    3. ')' → logprob: -4.912754535675049
    4. ',' → logprob: -5.037754535675049
    5. ' return' → logprob: -5.162754535675049
    6. ' and' → logprob: -6.412754535675049
    7. 'result' → logprob: -6.662754535675049
    8. '<|end|>' → logprob: -6.912754535675049
    9. ' numerator' → logprob: -7.287754535675049
    10. '.' → logprob: -7.412754535675049

Token 254: ' conversion' (ID: 22165)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.37567436695098877
    2. ' return' → logprob: -1.5006743669509888
    3. ')' → logprob: -3.500674247741699
    4. 'exact' → logprob: -4.125674247741699
    5. ' exact' → logprob: -4.625674247741699
    6. '#' → logprob: -5.375674247741699
    7. 'avoid' → logprob: -5.375674247741699
    8. 'integer' → logprob: -5.625674247741699
    9. ' integer' → logprob: -5.625674247741699
    10. 'accuracy' → logprob: -6.000674247741699

Token 255: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20181383192539215
    2. ' to' → logprob: -2.3268139362335205
    3. ' return' → logprob: -4.076813697814941
    4. 'return' → logprob: -4.326813697814941
    5. 'num' → logprob: -4.451813697814941
    6. '(num' → logprob: -4.826813697814941
    7. ',' → logprob: -4.826813697814941
    8. ' =' → logprob: -5.201813697814941
    9. ' num' → logprob: -5.201813697814941
    10. ')' → logprob: -5.201813697814941

Token 256: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.31115201115608215
    2. ' the' → logprob: -2.1861519813537598
    3. 'return' → logprob: -3.3111519813537598
    4. 'end' → logprob: -3.3111519813537598
    5. 'den' → logprob: -3.8111519813537598
    6. ' end' → logprob: -4.68615198135376
    7. 'last' → logprob: -5.06115198135376
    8. 'exact' → logprob: -5.06115198135376
    9. 'int' → logprob: -5.43615198135376
    10. ')' → logprob: -5.43615198135376

Token 257: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.22120709717273712
    2. ' end' → logprob: -2.0962071418762207
    3. 'return' → logprob: -2.8462071418762207
    4. 'den' → logprob: -4.846207141876221
    5. 'last' → logprob: -5.221207141876221
    6. ' return' → logprob: -6.221207141876221
    7. 'fraction' → logprob: -8.096206665039062
    8. 'final' → logprob: -8.346206665039062
    9. '#' → logprob: -8.471206665039062
    10. '0' → logprob: -8.846206665039062

Token 258: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00220818561501801
    2. 'return' → logprob: -6.752208232879639
    3. ' return' → logprob: -6.877208232879639
    4. ',' → logprob: -13.00220775604248
    5. '
' → logprob: -13.37720775604248
    6. '	return' → logprob: -13.62720775604248
    7. '    
' → logprob: -14.25220775604248
    8. ')' → logprob: -15.87720775604248
    9. '```' → logprob: -16.377208709716797
    10. ':return' → logprob: -16.502208709716797

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009855014272034168
    2. 'return' → logprob: -5.259854793548584
    3. ' return' → logprob: -5.384854793548584
    4. '	return' → logprob: -11.509855270385742
    5. '
' → logprob: -11.634855270385742
    6. '    
' → logprob: -12.509855270385742
    7. ',' → logprob: -14.134855270385742
    8. '       ' → logprob: -15.384855270385742
    9. '   ' → logprob: -15.509855270385742
    10. '```' → logprob: -15.634855270385742

Token 260: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.42022591829299927
    2. '   ' → logprob: -1.1702258586883545
    3. ' return' → logprob: -3.4202258586883545
    4. 'result' → logprob: -9.670226097106934
    5. '
' → logprob: -10.920226097106934
    6. 'res' → logprob: -12.295226097106934
    7. ' ' → logprob: -13.295226097106934
    8. '```' → logprob: -13.420226097106934
    9. 'ret' → logprob: -13.545226097106934
    10. ' result' → logprob: -13.545226097106934

Token 261: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.0079052448272705
    2. 'Fraction' → logprob: -1.1329052448272705
    3. 'int' → logprob: -1.7579052448272705
    4. ' Fraction' → logprob: -2.3829052448272705
    5. 'num' → logprob: -3.8829052448272705
    6. ' num' → logprob: -3.8829052448272705
    7. ' (' → logprob: -6.007905006408691
    8. '(int' → logprob: -6.382905006408691
    9. '(num' → logprob: -6.882905006408691
    10. ' fraction' → logprob: -8.132905006408691

Token 262: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -1.735893965815194e-05
    2. '(' → logprob: -11.625017166137695
    3. 'Fraction' → logprob: -12.000017166137695
    4. '(f' → logprob: -13.625017166137695
    5. '((' → logprob: -14.000017166137695
    6. ' (' → logprob: -17.500017166137695
    7. 'Fra' → logprob: -17.625017166137695
    8. ' Fraction' → logprob: -18.125017166137695
    9. '```' → logprob: -18.250017166137695
    10. '()' → logprob: -19.000017166137695

Token 263: 'raction' (ID: 33644)
  Prédit: 'raction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raction' → logprob: -0.00024311232846230268
    2. 'Fraction' → logprob: -9.000243186950684
    3. 'ractions' → logprob: -9.375243186950684
    4. 'r' → logprob: -10.375243186950684
    5. 'fraction' → logprob: -13.125243186950684
    6. '_fraction' → logprob: -15.125243186950684
    7. 'rac' → logprob: -15.125243186950684
    8. 'unction' → logprob: -15.500243186950684
    9. 'rom' → logprob: -15.625243186950684
    10. 'action' → logprob: -15.750243186950684

Token 264: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0015054593095555902
    2. 'num' → logprob: -6.501505374908447
    3. ' num' → logprob: -13.501505851745605
    4. '[num' → logprob: -14.501505851745605
    5. ',num' → logprob: -14.626505851745605
    6. '<num' → logprob: -14.876505851745605
    7. '	num' → logprob: -15.876505851745605
    8. '(' → logprob: -16.12650489807129
    9. '=num' → logprob: -16.87650489807129
    10. ':num' → logprob: -17.62650489807129

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02343333140015602
    2. ' ,' → logprob: -3.7734334468841553
    3. ' //' → logprob: -8.773433685302734
    4. '//' → logprob: -11.023433685302734
    5. ' /' → logprob: -11.898433685302734
    6. 'den' → logprob: -13.023433685302734
    7. ' ' → logprob: -13.523433685302734
    8. ')' → logprob: -13.773433685302734
    9. '   ' → logprob: -13.898433685302734
    10. '/' → logprob: -14.023433685302734

Token 266: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.00029625516617670655
    2. ' den' → logprob: -8.125296592712402
    3. ' ' → logprob: -16.250295639038086
    4. '   ' → logprob: -17.375295639038086
    5. ')' → logprob: -17.750295639038086
    6. '
' → logprob: -18.000295639038086
    7. '  ' → logprob: -18.000295639038086
    8. 'def' → logprob: -19.000295639038086
    9. '
' → logprob: -19.500295639038086
    10. '    ' → logprob: -20.000295639038086

Token 267: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023907754570245743
    2. ')' → logprob: -3.7739076614379883
    3. ').' → logprob: -7.398907661437988
    4. ')))' → logprob: -10.273907661437988
    5. ' ))' → logprob: -12.023907661437988
    6. '))
' → logprob: -12.773907661437988
    7. '()))' → logprob: -13.648907661437988
    8. ').__' → logprob: -13.773907661437988
    9. '),' → logprob: -14.398907661437988
    10. ')
' → logprob: -14.773907661437988

Token 268: 'eg' (ID: 1207)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0038016228936612606
    2. '@' → logprob: -5.6288018226623535
    3. 'class' → logprob: -9.753801345825195
    4. 'from' → logprob: -9.753801345825195
    5. '#' → logprob: -9.878801345825195
    6. ')' → logprob: -12.253801345825195
    7. ' def' → logprob: -12.378801345825195
    8. '@n' → logprob: -12.503801345825195
    9. 'import' → logprob: -13.003801345825195
    10. 'n' → logprob: -13.628801345825195

Token 269: 'cd' (ID: 8301)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.685160756111145
    2. '=' → logprob: -1.310160756111145
    3. ':' → logprob: -2.1851606369018555
    4. 'def' → logprob: -2.4351606369018555
    5. 'f' → logprob: -5.4351606369018555
    6. '(' → logprob: -5.6851606369018555
    7. '.' → logprob: -5.9351606369018555
    8. ' ' → logprob: -6.1851606369018555
    9. 's' → logprob: -6.5601606369018555
    10. '#' → logprob: -6.6851606369018555

Token 270: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15155869722366333
    2. '_' → logprob: -2.2765586376190186
    3. '(a' → logprob: -3.9015586376190186
    4. ' (' → logprob: -4.901558876037598
    5. '<|end|>' → logprob: -5.651558876037598
    6. 'def' → logprob: -6.651558876037598
    7. '<|end|>' → logprob: -7.651558876037598
    8. '(x' → logprob: -7.776558876037598
    9. '(user' → logprob: -8.026558876037598
    10. '(_)' → logprob: -8.276558876037598

Token 271: ' lambda' (ID: 27871)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.202056646347046
    2. ' op' → logprob: -1.202056646347046
    3. 'lambda' → logprob: -1.202056646347046
    4. ' lambda' → logprob: -2.452056646347046
    5. 'def' → logprob: -5.827056884765625
    6. 'ft' → logprob: -5.827056884765625
    7. '(lambda' → logprob: -5.952056884765625
    8. '(op' → logprob: -6.452056884765625
    9. 'partial' → logprob: -6.577056884765625
    10. ' partial' → logprob: -8.702056884765625

Token 272: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7416356801986694
    2. 'lambda' → logprob: -0.7416356801986694
    3. 'op' → logprob: -3.116635799407959
    4. ' lambda' → logprob: -6.616635799407959
    5. '(lambda' → logprob: -6.991635799407959
    6. 'def' → logprob: -7.866635799407959
    7. ' op' → logprob: -8.8666353225708
    8. ' a' → logprob: -9.4916353225708
    9. '=lambda' → logprob: -9.9916353225708
    10. '   ' → logprob: -10.1166353225708

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18095579743385315
    2. ',b' → logprob: -1.8059557676315308
    3. 'b' → logprob: -7.18095588684082
    4. ' ,' → logprob: -7.93095588684082
    5. ',a' → logprob: -9.68095588684082
    6. ' b' → logprob: -10.93095588684082
    7. 'a' → logprob: -12.68095588684082
    8. '_,' → logprob: -12.93095588684082
    9. ' ' → logprob: -14.05595588684082
    10. ',d' → logprob: -14.68095588684082

Token 274: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002615742268972099
    2. ' b' → logprob: -8.250261306762695
    3. ' ' → logprob: -16.000261306762695
    4. '   ' → logprob: -16.250261306762695
    5. 'lambda' → logprob: -16.875261306762695
    6. '    ' → logprob: -17.500261306762695
    7. '  ' → logprob: -17.750261306762695
    8. 'm' → logprob: -18.000261306762695
    9. '	b' → logprob: -18.250261306762695
    10. '

' → logprob: -18.250261306762695

Token 275: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005154181271791458
    2. ' :' → logprob: -5.380154132843018
    3. ',' → logprob: -7.755154132843018
    4. ':(' → logprob: -9.505154609680176
    5. ':[' → logprob: -11.380154609680176
    6. ' :(' → logprob: -12.130154609680176
    7. ':
' → logprob: -12.630154609680176
    8. '=' → logprob: -12.755154609680176
    9. '   ' → logprob: -13.130154609680176
    10. ',b' → logprob: -13.880154609680176

Token 276: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.8797879219055176
    2. '(b' → logprob: -1.0047879219055176
    3. ' (' → logprob: -2.3797879219055176
    4. '(op' → logprob: -2.3797879219055176
    5. 'eg' → logprob: -4.254787921905518
    6. '(' → logprob: -4.504787921905518
    7. '((' → logprob: -5.754787921905518
    8. 'op' → logprob: -6.629787921905518
    9. '(lambda' → logprob: -6.754787921905518
    10. 'b' → logprob: -7.754787921905518

Token 277: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07436802238225937
    2. 'eg' → logprob: -2.8243680000305176
    3. '(b' → logprob: -4.699368000030518
    4. 'a' → logprob: -6.449368000030518
    5. 'lambda' → logprob: -7.199368000030518
    6. '(lambda' → logprob: -8.199368476867676
    7. ' b' → logprob: -8.574368476867676
    8. '(' → logprob: -8.949368476867676
    9. '(a' → logprob: -8.949368476867676
    10. ' (' → logprob: -9.824368476867676

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.847109812544659e-05
    2. ' ,' → logprob: -10.500048637390137
    3. ' if' → logprob: -12.000048637390137
    4. ',a' → logprob: -12.250048637390137
    5. ',
' → logprob: -12.875048637390137
    6. 'and' → logprob: -13.375048637390137
    7. '<|end|>' → logprob: -13.500048637390137
    8. 'if' → logprob: -13.625048637390137
    9. 'a' → logprob: -13.875048637390137
    10. 'eg' → logprob: -14.500048637390137

Token 279: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.130576806142926e-05
    2. ' a' → logprob: -10.375031471252441
    3. '(a' → logprob: -19.875030517578125
    4. '	a' → logprob: -19.875030517578125
    5. '   ' → logprob: -20.125030517578125
    6. ')' → logprob: -20.750030517578125
    7. ' ' → logprob: -20.875030517578125
    8. '0' → logprob: -21.000030517578125
    9. '```' → logprob: -21.250030517578125
    10. '  ' → logprob: -21.375030517578125

Token 280: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.7610454708337784e-05
    2. ' a' → logprob: -10.500027656555176
    3. '(a' → logprob: -17.50002670288086
    4. '```' → logprob: -18.12502670288086
    5. ')' → logprob: -18.25002670288086
    6. '0' → logprob: -18.25002670288086
    7. 'b' → logprob: -18.50002670288086
    8. '   ' → logprob: -18.75002670288086
    9. ''a' → logprob: -19.37502670288086
    10. ' ' → logprob: -19.62502670288086

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002110051456838846
    2. ' if' → logprob: -6.502110004425049
    3. ' ,' → logprob: -7.502110004425049
    4. 'if' → logprob: -10.502110481262207
    5. ')' → logprob: -10.877110481262207
    6. '   ' → logprob: -13.252110481262207
    7. ',
' → logprob: -13.377110481262207
    8. ',b' → logprob: -13.502110481262207
    9. '),' → logprob: -14.002110481262207
    10. ' ' → logprob: -14.752110481262207

Token 282: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061985280364751816
    2. 'a' → logprob: -2.8119852542877197
    3. '0' → logprob: -11.18698501586914
    4. ' ' → logprob: -12.68698501586914
    5. ' a' → logprob: -14.68698501586914
    6. ')' → logprob: -16.43698501586914
    7. 'b' → logprob: -17.43698501586914
    8. ')a' → logprob: -17.68698501586914
    9. '   ' → logprob: -17.81198501586914
    10. '```' → logprob: -17.93698501586914

Token 283: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015644963132217526
    2. 'a' → logprob: -6.5015645027160645
    3. '0' → logprob: -10.001564025878906
    4. ' ' → logprob: -11.001564025878906
    5. ' a' → logprob: -16.751564025878906
    6. '<|end|>' → logprob: -16.876564025878906
    7. '   ' → logprob: -18.126564025878906
    8. '```' → logprob: -18.501564025878906
    9. '  ' → logprob: -18.626564025878906
    10. ')a' → logprob: -18.626564025878906

Token 284: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002175243105739355
    2. 'if' → logprob: -6.377175331115723
    3. ' if' → logprob: -8.127175331115723
    4. ')[' → logprob: -8.877175331115723
    5. ',' → logprob: -10.752175331115723
    6. 'lambda' → logprob: -12.377175331115723
    7. ' )' → logprob: -12.502175331115723
    8. '0' → logprob: -13.002175331115723
    9. 'a' → logprob: -13.127175331115723
    10. 'def' → logprob: -13.627175331115723

Token 285: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1002785935997963
    2. 'if' → logprob: -2.350278615951538
    3. '<|end|>' → logprob: -9.975278854370117
    4. ',' → logprob: -11.225278854370117
    5. 'def' → logprob: -12.100278854370117
    6. ')' → logprob: -13.350278854370117
    7. 'eg' → logprob: -13.600278854370117
    8. ' and' → logprob: -14.350278854370117
    9. '

' → logprob: -15.100278854370117
    10. 'and' → logprob: -15.100278854370117

Token 286: ' not' (ID: 625)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00025001514586620033
    2. 'b' → logprob: -8.875249862670898
    3. ' a' → logprob: -9.125249862670898
    4. 'not' → logprob: -14.000249862670898
    5. ' not' → logprob: -15.375249862670898
    6. ' b' → logprob: -15.500249862670898
    7. '0' → logprob: -17.6252498626709
    8. '	a' → logprob: -18.6252498626709
    9. '(a' → logprob: -19.2502498626709
    10. '```' → logprob: -20.0002498626709

Token 287: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0068437191657722
    2. 'a' → logprob: -5.006843566894531
    3. ' b' → logprob: -9.006843566894531
    4. ' a' → logprob: -12.131843566894531
    5. '	b' → logprob: -15.006843566894531
    6. '```' → logprob: -18.38184356689453
    7. '	a' → logprob: -19.00684356689453
    8. ' ' → logprob: -19.13184356689453
    9. '%b' → logprob: -19.38184356689453
    10. '(b' → logprob: -19.50684356689453

Token 288: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.020634382963180542
    2. 'else' → logprob: -3.895634412765503
    3. '[' → logprob: -10.520634651184082
    4. ' and' → logprob: -11.270634651184082
    5. '==' → logprob: -11.520634651184082
    6. ')' → logprob: -11.770634651184082
    7. '<|end|>' → logprob: -12.020634651184082
    8. ' or' → logprob: -12.520634651184082
    9. ',' → logprob: -12.645634651184082
    10. 'and' → logprob: -12.770634651184082

Token 289: ' (
' (ID: 4112)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.0245469119399786
    2. '(lambda' → logprob: -3.8995468616485596
    3. 'lambda' → logprob: -6.149547100067139
    4. ' eg' → logprob: -7.149547100067139
    5. '(' → logprob: -7.524547100067139
    6. ' (' → logprob: -8.27454662322998
    7. '(*' → logprob: -9.02454662322998
    8. '((' → logprob: -9.64954662322998
    9. '*' → logprob: -10.27454662322998
    10. ' lambda' → logprob: -10.77454662322998

Token 290: '   ' (ID: 271)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.12748560309410095
    2. '(lambda' → logprob: -2.627485513687134
    3. 'eg' → logprob: -3.377485513687134
    4. 'g' → logprob: -5.127485752105713
    5. '   ' → logprob: -5.502485752105713
    6. 'c' → logprob: -7.002485752105713
    7. '(g' → logprob: -7.002485752105713
    8. ' lambda' → logprob: -7.877485752105713
    9. '(c' → logprob: -8.752485275268555
    10. '*' → logprob: -8.877485275268555

Token 291: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.4365648925304413
    2. 'eg' → logprob: -1.6865649223327637
    3. '(lambda' → logprob: -2.4365649223327637
    4. 'g' → logprob: -3.3115649223327637
    5. '*' → logprob: -3.4365649223327637
    6. '   ' → logprob: -4.936564922332764
    7. '(g' → logprob: -6.561564922332764
    8. '(' → logprob: -7.561564922332764
    9. 'c' → logprob: -7.561564922332764
    10. '(*' → logprob: -7.811564922332764

Token 292: ' g' (ID: 329)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.01957174576818943
    2. 'g' → logprob: -4.644571781158447
    3. '(lambda' → logprob: -5.269571781158447
    4. '   ' → logprob: -5.769571781158447
    5. ' lambda' → logprob: -7.019571781158447
    6. 'b' → logprob: -8.144571304321289
    7. '_lambda' → logprob: -9.519571304321289
    8. 'p' → logprob: -10.269571304321289
    9. '*' → logprob: -10.269571304321289
    10. '=lambda' → logprob: -10.394571304321289

Token 293: ',' (ID: 11)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.4067893326282501
    2. 'b' → logprob: -1.6567893028259277
    3. 'g' → logprob: -2.6567893028259277
    4. 'eg' → logprob: -3.9067893028259277
    5. '=lambda' → logprob: -4.156789302825928
    6. 'a' → logprob: -4.406789302825928
    7. '(lambda' → logprob: -5.156789302825928
    8. '   ' → logprob: -5.531789302825928
    9. '*' → logprob: -5.656789302825928
    10. 'c' → logprob: -6.031789302825928

Token 294: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6880010366439819
    2. 'x' → logprob: -0.8130010366439819
    3. 'lambda' → logprob: -3.4380011558532715
    4. 'p' → logprob: -4.3130011558532715
    5. 'b' → logprob: -5.4380011558532715
    6. 'eg' → logprob: -6.0630011558532715
    7. '(lambda' → logprob: -7.6880011558532715
    8. 'a' → logprob: -8.063000679016113
    9. 'g' → logprob: -8.688000679016113
    10. ' y' → logprob: -8.813000679016113

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01590837351977825
    2. 's' → logprob: -5.390908241271973
    3. '=' → logprob: -5.515908241271973
    4. ',x' → logprob: -6.390908241271973
    5. 'b' → logprob: -6.640908241271973
    6. ',b' → logprob: -7.015908241271973
    7. 'op' → logprob: -7.015908241271973
    8. 'g' → logprob: -7.640908241271973
    9. 'a' → logprob: -7.765908241271973
    10. ':' → logprob: -8.015908241271973

Token 296: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.56102097814437e-05
    2. ' x' → logprob: -10.000045776367188
    3. 'g' → logprob: -17.000045776367188
    4. 'eg' → logprob: -17.125045776367188
    5. '"x' → logprob: -17.625045776367188
    6. '	x' → logprob: -18.250045776367188
    7. '```' → logprob: -18.500045776367188
    8. 'y' → logprob: -18.625045776367188
    9. '_x' → logprob: -18.750045776367188
    10. 'z' → logprob: -18.750045776367188

Token 297: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001283567980863154
    2. '=' → logprob: -7.501283645629883
    3. ' :' → logprob: -7.501283645629883
    4. ':(' → logprob: -8.751283645629883
    5. '=(' → logprob: -12.126283645629883
    6. ' :(' → logprob: -12.251283645629883
    7. ':[' → logprob: -13.626283645629883
    8. ':
' → logprob: -14.001283645629883
    9. '_:' → logprob: -14.251283645629883
    10. 'a' → logprob: -14.626283645629883

Token 298: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.118697166442871
    2. 'eg' → logprob: -1.493697166442871
    3. '(g' → logprob: -1.618697166442871
    4. '(y' → logprob: -2.243697166442871
    5. '(x' → logprob: -2.618697166442871
    6. ' (' → logprob: -3.368697166442871
    7. '(b' → logprob: -3.993697166442871
    8. ' eg' → logprob: -4.368697166442871
    9. '(e' → logprob: -6.493697166442871
    10. '(
' → logprob: -6.618697166442871

Token 299: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -2.081584716506768e-05
    2. '(g' → logprob: -11.375020980834961
    3. ' g' → logprob: -11.875020980834961
    4. '   ' → logprob: -13.125020980834961
    5. ')' → logprob: -15.875020980834961
    6. '	g' → logprob: -16.50002098083496
    7. ' (' → logprob: -16.75002098083496
    8. '[g' → logprob: -17.00002098083496
    9. '    ' → logprob: -18.25002098083496
    10. '  ' → logprob: -18.75002098083496

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018286957638338208
    2. 'b' → logprob: -7.126828670501709
    3. ',b' → logprob: -7.126828670501709
    4. 'a' → logprob: -9.751829147338867
    5. '[' → logprob: -10.251829147338867
    6. ',a' → logprob: -10.751829147338867
    7. ' ,' → logprob: -11.001829147338867
    8. 'g' → logprob: -11.001829147338867
    9. ',x' → logprob: -11.251829147338867
    10. ',y' → logprob: -11.501829147338867

Token 301: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0008090290939435363
    2. ' x' → logprob: -7.125809192657471
    3. '(x' → logprob: -12.375808715820312
    4. '   ' → logprob: -15.625808715820312
    5. '	x' → logprob: -17.125808715820312
    6. ' (' → logprob: -17.250808715820312
    7. 'y' → logprob: -17.625808715820312
    8. ')' → logprob: -17.750808715820312
    9. ' ' → logprob: -18.125808715820312
    10. ',x' → logprob: -18.375808715820312

Token 302: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0983160212635994
    2. ' -' → logprob: -2.848315954208374
    3. ',' → logprob: -3.348315954208374
    4. 'y' → logprob: -8.098316192626953
    5. '-g' → logprob: -9.098316192626953
    6. '-y' → logprob: -9.348316192626953
    7. ',y' → logprob: -11.223316192626953
    8. ' ,' → logprob: -11.473316192626953
    9. ' y' → logprob: -11.598316192626953
    10. 'g' → logprob: -12.223316192626953

Token 303: ' (' (ID: 350)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.1387203484773636
    2. 'b' → logprob: -2.1387202739715576
    3. '(y' → logprob: -5.263720512390137
    4. '(' → logprob: -5.638720512390137
    5. ' (' → logprob: -6.388720512390137
    6. 'y' → logprob: -7.263720512390137
    7. '(op' → logprob: -8.263720512390137
    8. '(q' → logprob: -9.138720512390137
    9. '   ' → logprob: -9.763720512390137
    10. ' b' → logprob: -10.138720512390137

Token 304: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -8.220573363360018e-05
    2. '(b' → logprob: -10.125082015991211
    3. 'y' → logprob: -10.500082015991211
    4. 'g' → logprob: -11.625082015991211
    5. ' b' → logprob: -12.500082015991211
    6. 'a' → logprob: -14.000082015991211
    7. '(a' → logprob: -15.000082015991211
    8. '   ' → logprob: -15.625082015991211
    9. '	b' → logprob: -15.750082015991211
    10. '(y' → logprob: -16.00008201599121

Token 305: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -6.718606891809031e-05
    2. '#' → logprob: -9.750066757202148
    3. '//=' → logprob: -12.125066757202148
    4. ' //' → logprob: -13.750066757202148
    5. '```' → logprob: -14.750066757202148
    6. 'q' → logprob: -14.750066757202148
    7. 'div' → logprob: -15.000066757202148
    8. '//
' → logprob: -15.375066757202148
    9. '`' → logprob: -16.00006675720215
    10. '``' → logprob: -16.00006675720215

Token 306: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: 0.0
    2. ' a' → logprob: -19.125
    3. 'g' → logprob: -21.375
    4. '	a' → logprob: -23.625
    5. '//' → logprob: -23.875
    6. '[a' → logprob: -24.25
    7. '[' → logprob: -24.875
    8. ''a' → logprob: -25.0
    9. '   ' → logprob: -25.125
    10. ',a' → logprob: -25.125

Token 307: ')*' (ID: 11043)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2481759637594223
    2. ')' → logprob: -2.123175859451294
    3. ')*' → logprob: -3.248175859451294
    4. '*y' → logprob: -3.373175859451294
    5. ' *' → logprob: -3.623175859451294
    6. '*g' → logprob: -8.623175621032715
    7. 'y' → logprob: -10.123175621032715
    8. '*)' → logprob: -10.498175621032715
    9. ' y' → logprob: -10.748175621032715
    10. ' )' → logprob: -11.373175621032715

Token 308: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0003811025235336274
    2. ' y' → logprob: -7.875380992889404
    3. '	y' → logprob: -14.125381469726562
    4. '*y' → logprob: -16.375381469726562
    5. ''y' → logprob: -16.875381469726562
    6. '   ' → logprob: -17.000381469726562
    7. ',y' → logprob: -17.625381469726562
    8. ')y' → logprob: -18.500381469726562
    9. '‘y' → logprob: -18.625381469726562
    10. ' ' → logprob: -18.625381469726562

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010757269337773323
    2. 'y' → logprob: -5.3857574462890625
    3. 'g' → logprob: -5.7607574462890625
    4. ',y' → logprob: -6.5107574462890625
    5. ',g' → logprob: -7.5107574462890625
    6. ')' → logprob: -7.7607574462890625
    7. ' ,' → logprob: -7.7607574462890625
    8. '),' → logprob: -10.885757446289062
    9. '(g' → logprob: -11.135757446289062
    10. ' y' → logprob: -11.635757446289062

Token 310: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00026264708139933646
    2. ' y' → logprob: -8.250262260437012
    3. 'x' → logprob: -14.000262260437012
    4. '	y' → logprob: -15.125262260437012
    5. 'g' → logprob: -15.250262260437012
    6. '<|end|>' → logprob: -17.500263214111328
    7. ')y' → logprob: -17.750263214111328
    8. '   ' → logprob: -18.250263214111328
    9. ')' → logprob: -18.875263214111328
    10. '[' → logprob: -19.375263214111328

Token 311: '))' (ID: 915)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')(' → logprob: -3.404745439183898e-05
    2. ' )(' → logprob: -10.75003433227539
    3. ')' → logprob: -11.75003433227539
    4. '(a' → logprob: -13.25003433227539
    5. '   ' → logprob: -14.00003433227539
    6. ')((' → logprob: -14.00003433227539
    7. ' ' → logprob: -14.87503433227539
    8. '))(' → logprob: -15.25003433227539
    9. ')(
' → logprob: -15.50003433227539
    10. ')(__' → logprob: -15.87503433227539

Token 312: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.01585780829191208
    2. 'eg' → logprob: -4.265857696533203
    3. '*' → logprob: -6.640857696533203
    4. '(*(' → logprob: -8.140857696533203
    5. '(' → logprob: -10.390857696533203
    6. ' *' → logprob: -10.390857696533203
    7. ' eg' → logprob: -11.140857696533203
    8. ' (*' → logprob: -12.140857696533203
    9. '*(' → logprob: -12.390857696533203
    10. '   ' → logprob: -13.140857696533203

Token 313: 'eg' (ID: 1207)
  Prédit: 'eg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eg' → logprob: -2.696889623621246e-06
    2. ' eg' → logprob: -12.87500286102295
    3. 'eq' → logprob: -17.875001907348633
    4. 'Eg' → logprob: -19.625001907348633
    5. '
' → logprob: -20.000001907348633
    6. 'egd' → logprob: -20.500001907348633
    7. 'ag' → logprob: -20.750001907348633
    8. '   ' → logprob: -21.625001907348633
    9. 'ef' → logprob: -21.750001907348633
    10. 'eb' → logprob: -21.750001907348633

Token 314: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -6.704273118884885e-07
    2. 'cg' → logprob: -15.250000953674316
    3. 'c' → logprob: -15.875000953674316
    4. 'eg' → logprob: -16.625
    5. 'cdf' → logprob: -16.875
    6. 'cdn' → logprob: -17.75
    7. ' gcd' → logprob: -17.875
    8. 'fg' → logprob: -17.875
    9. 'g' → logprob: -18.25
    10. '```' → logprob: -18.625

Token 315: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00041279601282440126
    2. ' (' → logprob: -8.250412940979004
    3. 'b' → logprob: -8.875412940979004
    4. '(
' → logprob: -12.250412940979004
    5. '((' → logprob: -12.500412940979004
    6. '(' → logprob: -13.125412940979004
    7. ' b' → logprob: -14.375412940979004
    8. ' ' → logprob: -15.500412940979004
    9. '(B' → logprob: -16.500411987304688
    10. '   ' → logprob: -17.000411987304688

Token 316: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.28273123502731323
    2. 'a' → logprob: -1.532731294631958
    3. ' %' → logprob: -3.532731294631958
    4. ' a' → logprob: -7.657731056213379
    5. '%b' → logprob: -8.157731056213379
    6. '(a' → logprob: -9.407731056213379
    7. ',a' → logprob: -9.907731056213379
    8. ',' → logprob: -10.032731056213379
    9. '%d' → logprob: -10.032731056213379
    10. '%A' → logprob: -10.657731056213379

Token 317: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.896309739408025e-07
    2. ' a' → logprob: -14.250000953674316
    3. '<|end|>' → logprob: -16.625
    4. ' ' → logprob: -18.875
    5. ',a' → logprob: -20.375
    6. '-a' → logprob: -20.75
    7. '{' → logprob: -21.75
    8. ',' → logprob: -22.0
    9. ')a' → logprob: -22.0
    10. ''a' → logprob: -22.0

Token 318: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.6656825866666622e-05
    2. ' a' → logprob: -10.62502670288086
    3. ',' → logprob: -13.25002670288086
    4. ',a' → logprob: -15.37502670288086
    5. '<|end|>' → logprob: -16.25002670288086
    6. ' ' → logprob: -16.50002670288086
    7. ' ,' → logprob: -18.87502670288086
    8. '  ' → logprob: -19.37502670288086
    9. ''a' → logprob: -19.37502670288086
    10. ')' → logprob: -19.37502670288086

Token 319: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.36574100604048e-06
    2. ' a' → logprob: -12.375004768371582
    3. '```' → logprob: -19.125003814697266
    4. ' ' → logprob: -19.500003814697266
    5. '   ' → logprob: -20.375003814697266
    6. '<|end|>' → logprob: -20.500003814697266
    7. ''a' → logprob: -20.750003814697266
    8. '	a' → logprob: -21.000003814697266
    9. '{' → logprob: -21.000003814697266
    10. '  ' → logprob: -21.125003814697266

Token 320: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.048607468605041504
    2. ')' → logprob: -3.048607349395752
    3. ')))' → logprob: -11.17360782623291
    4. '))
' → logprob: -13.42360782623291
    5. ')a' → logprob: -14.29860782623291
    6. 'a' → logprob: -15.04860782623291
    7. ' ))' → logprob: -15.04860782623291
    8. '0' → logprob: -15.04860782623291
    9. ')[' → logprob: -15.17360782623291
    10. ')
' → logprob: -15.17360782623291

Token 321: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008622847497463226
    2. 'pow' → logprob: -5.383622646331787
    3. '(' → logprob: -6.383622646331787
    4. '<|end|>' → logprob: -7.383622646331787
    5. ')' → logprob: -7.508622646331787
    6. 'g' → logprob: -8.258623123168945
    7. '#' → logprob: -8.508623123168945
    8. 'factor' → logprob: -9.008623123168945
    9. '.' → logprob: -9.383623123168945
    10. '1' → logprob: -10.008623123168945

Token 322: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.32827869057655334
    2. ' mod' → logprob: -1.328278660774231
    3. 'pow' → logprob: -4.453278541564941
    4. 'inv' → logprob: -6.453278541564941
    5. 'main' → logprob: -7.703278541564941
    6. 'mul' → logprob: -8.453278541564941
    7. ' modular' → logprob: -8.578278541564941
    8. ' pow' → logprob: -8.828278541564941
    9. 'n' → logprob: -9.078278541564941
    10. 'bin' → logprob: -9.453278541564941

Token 323: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0412561409175396
    2. '_inv' → logprob: -3.2912561893463135
    3. '_inverse' → logprob: -5.791255950927734
    4. 'pow' → logprob: -9.791255950927734
    5. 'inverse' → logprob: -10.291255950927734
    6. '_pow' → logprob: -10.791255950927734
    7. 'exp' → logprob: -11.291255950927734
    8. 'ular' → logprob: -11.291255950927734
    9. '_mul' → logprob: -11.666255950927734
    10. '_exp' → logprob: -12.416255950927734

Token 324: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.676981345459353e-06
    2. 'a' → logprob: -12.625005722045898
    3. '(' → logprob: -13.625005722045898
    4. ' (' → logprob: -14.375005722045898
    5. '(x' → logprob: -14.875005722045898
    6. 'def' → logprob: -16.5000057220459
    7. '(n' → logprob: -17.3750057220459
    8. '(b' → logprob: -17.7500057220459
    9. '(k' → logprob: -18.1250057220459
    10. '(q' → logprob: -18.3750057220459

Token 325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.011373155459296e-05
    2. ' ,' → logprob: -10.500030517578125
    3. ',n' → logprob: -13.500030517578125
    4. ',a' → logprob: -14.125030517578125
    5. ',b' → logprob: -15.500030517578125
    6. ',
' → logprob: -16.750030517578125
    7. ',int' → logprob: -17.500030517578125
    8. '<|end|>' → logprob: -17.500030517578125
    9. '‌,' → logprob: -17.875030517578125
    10. '):' → logprob: -17.875030517578125

Token 326: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.709362268447876
    2. 'mod' → logprob: -0.709362268447876
    3. ' mod' → logprob: -4.209362030029297
    4. ' m' → logprob: -6.709362030029297
    5. '	mod' → logprob: -13.209362030029297
    6. 'MOD' → logprob: -13.334362030029297
    7. 'int' → logprob: -13.709362030029297
    8. '```' → logprob: -13.834362030029297
    9. 'b' → logprob: -14.459362030029297
    10. '   ' → logprob: -14.709362030029297

Token 327: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002466774603817612
    2. '):
' → logprob: -8.37524700164795
    3. ':' → logprob: -11.75024700164795
    4. '=' → logprob: -12.25024700164795
    5. ')' → logprob: -13.25024700164795
    6. '):
' → logprob: -14.25024700164795
    7. ' ):' → logprob: -14.62524700164795
    8. ',' → logprob: -16.000246047973633
    9. 'def' → logprob: -16.500246047973633
    10. '=None' → logprob: -16.750246047973633

Token 328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010794912232086062
    2. ' return' → logprob: -7.751079559326172
    3. '<|end|>' → logprob: -8.251079559326172
    4. ' ' → logprob: -9.251079559326172
    5. 'x' → logprob: -9.501079559326172
    6. 'a' → logprob: -9.876079559326172
    7. 'return' → logprob: -10.001079559326172
    8. '	return' → logprob: -11.001079559326172
    9. 'b' → logprob: -11.501079559326172
    10. 'n' → logprob: -11.626079559326172

Token 329: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0665210634469986
    2. 'g' → logprob: -3.566521167755127
    3. '   ' → logprob: -3.816521167755127
    4. 'b' → logprob: -4.941521167755127
    5. 'def' → logprob: -5.941521167755127
    6. ' return' → logprob: -6.066521167755127
    7. 'x' → logprob: -6.566521167755127
    8. 'eg' → logprob: -8.066520690917969
    9. '_,' → logprob: -9.816520690917969
    10. '	return' → logprob: -9.941520690917969

Token 330: ' Modular' (ID: 137262)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.040326397866010666
    2. 'return' → logprob: -3.2903263568878174
    3. 'def' → logprob: -6.1653265953063965
    4. 'x' → logprob: -9.665326118469238
    5. '_,' → logprob: -9.665326118469238
    6. ' return' → logprob: -10.665326118469238
    7. ' g' → logprob: -11.540326118469238
    8. 'b' → logprob: -11.665326118469238
    9. '"""' → logprob: -12.290326118469238
    10. '   ' → logprob: -13.290326118469238

Token 331: ' inverse' (ID: 53743)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3568772077560425
    2. 'def' → logprob: -1.8568772077560425
    3. 'return' → logprob: -2.731877326965332
    4. 'inverse' → logprob: -2.856877326965332
    5. ' a' → logprob: -4.981877326965332
    6. 'pow' → logprob: -5.481877326965332
    7. ' return' → logprob: -5.606877326965332
    8. ' inverse' → logprob: -5.731877326965332
    9. '   ' → logprob: -6.856877326965332
    10. 'inv' → logprob: -7.106877326965332

Token 332: ' using' (ID: 2360)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17826469242572784
    2. 'return' → logprob: -1.9282647371292114
    3. ' return' → logprob: -4.803264617919922
    4. 'def' → logprob: -4.928264617919922
    5. 'b' → logprob: -6.428264617919922
    6. '=' → logprob: -8.678264617919922
    7. '(a' → logprob: -8.678264617919922
    8. 'a' → logprob: -8.928264617919922
    9. '	return' → logprob: -9.303264617919922
    10. '(b' → logprob: -9.928264617919922

Token 333: ' pow' (ID: 9779)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eg' → logprob: -5.288163083605468e-05
    2. ' eg' → logprob: -9.875052452087402
    3. 'pow' → logprob: -14.375052452087402
    4. 'lambda' → logprob: -14.500052452087402
    5. '*' → logprob: -16.50005340576172
    6. 'mod' → logprob: -16.75005340576172
    7. 'def' → logprob: -17.25005340576172
    8. '   ' → logprob: -18.37505340576172
    9. 'ef' → logprob: -19.00005340576172
    10. 'ec' → logprob: -19.25005340576172

Token 334: ' and' (ID: 326)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00011236425780225545
    2. '(' → logprob: -9.750112533569336
    3. 'def' → logprob: -10.000112533569336
    4. 'a' → logprob: -12.750112533569336
    5. '(pow' → logprob: -13.000112533569336
    6. 'pow' → logprob: -14.000112533569336
    7. 'return' → logprob: -14.500112533569336
    8. '```' → logprob: -14.750112533569336
    9. '   ' → logprob: -15.000112533569336
    10. ' (' → logprob: -15.125112533569336

Token 335: ' custom' (ID: 2602)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.17527234554290771
    2. 'mod' → logprob: -2.0502724647521973
    3. 'eg' → logprob: -4.050272464752197
    4. 'pow' → logprob: -4.675272464752197
    5. 'a' → logprob: -5.925272464752197
    6. 'def' → logprob: -6.675272464752197
    7. ' m' → logprob: -7.800272464752197
    8. '   ' → logprob: -7.800272464752197
    9. ' eg' → logprob: -9.300271987915039
    10. 'e' → logprob: -9.425271987915039

Token 336: ' not' (ID: 625)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.5460746884346008
    2. 'def' → logprob: -1.796074628829956
    3. '(' → logprob: -1.921074628829956
    4. 'mod' → logprob: -2.671074628829956
    5. '(a' → logprob: -4.171074867248535
    6. 'erm' → logprob: -5.421074867248535
    7. 'pow' → logprob: -5.546074867248535
    8. '(mod' → logprob: -5.546074867248535
    9. '(e' → logprob: -5.921074867248535
    10. '(pow' → logprob: -6.171074867248535

Token 337: '-' (ID: 12)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.3221646845340729
    2. 'a' → logprob: -1.8221646547317505
    3. 'def' → logprob: -2.94716477394104
    4. 'rec' → logprob: -3.57216477394104
    5. '(a' → logprob: -4.947164535522461
    6. '   ' → logprob: -4.947164535522461
    7. 'ation' → logprob: -5.822164535522461
    8. 'implemented' → logprob: -5.822164535522461
    9. 'tail' → logprob: -5.947164535522461
    10. ' eg' → logprob: -6.447164535522461

Token 338: 'operator' (ID: 15184)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.1024086475372314
    2. 'local' → logprob: -1.6024086475372314
    3. 'tail' → logprob: -1.8524086475372314
    4. 'implemented' → logprob: -2.6024086475372314
    5. 'none' → logprob: -2.8524086475372314
    6. 'zero' → logprob: -3.3524086475372314
    7. 'empty' → logprob: -3.3524086475372314
    8. 'a' → logprob: -3.4774086475372314
    9. 'def' → logprob: -4.602408409118652
    10. 'eg' → logprob: -4.727408409118652

Token 339: '
' (ID: 198)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.8433582782745361
    2. 'def' → logprob: -1.3433582782745361
    3. '(' → logprob: -2.343358278274536
    4. ' not' → logprob: -2.718358278274536
    5. ' (' → logprob: -2.843358278274536
    6. '   ' → logprob: -3.593358278274536
    7. '(not' → logprob: -4.593358039855957
    8. 'not' → logprob: -4.968358039855957
    9. '(
' → logprob: -4.968358039855957
    10. ' def' → logprob: -5.218358039855957

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6350363492965698
    2. '(a' → logprob: -1.1350363492965698
    3. 'def' → logprob: -2.2600364685058594
    4. '(' → logprob: -4.385036468505859
    5. ' (' → logprob: -4.635036468505859
    6. 'pow' → logprob: -4.885036468505859
    7. '(pow' → logprob: -5.385036468505859
    8. '(
' → logprob: -6.260036468505859
    9. ' def' → logprob: -6.385036468505859
    10. '```' → logprob: -7.010036468505859

Token 341: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3166455328464508
    2. '   ' → logprob: -1.3166455030441284
    3. ' return' → logprob: -5.691645622253418
    4. '	return' → logprob: -13.441645622253418
    5. 'def' → logprob: -14.316645622253418
    6. 'b' → logprob: -14.316645622253418
    7. '```' → logprob: -15.316645622253418
    8. '
' → logprob: -15.566645622253418
    9. 'try' → logprob: -15.566645622253418
    10. '#' (adapté à ' #') → logprob: -15.566645622253418

Token 342: ' Return' (ID: 6318)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20338279008865356
    2. '   ' → logprob: -2.328382730484009
    3. ' return' → logprob: -2.453382730484009
    4. 'assert' → logprob: -8.70338249206543
    5. 'a' → logprob: -8.95338249206543
    6. 'b' → logprob: -9.45338249206543
    7. 'def' → logprob: -9.82838249206543
    8. '#' → logprob: -10.20338249206543
    9. ' assert' → logprob: -10.45338249206543
    10. 'if' → logprob: -11.07838249206543

Token 343: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0014845087425783277
    2. ' pow' → logprob: -6.751484394073486
    3. '   ' → logprob: -9.126484870910645
    4. '(pow' → logprob: -9.251484870910645
    5. 'None' → logprob: -9.626484870910645
    6. '1' → logprob: -10.876484870910645
    7. '0' → logprob: -11.751484870910645
    8. '(' → logprob: -13.001484870910645
    9. 'a' → logprob: -13.001484870910645
    10. '    ' → logprob: -13.376484870910645

Token 344: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.000111768240458332
    2. 'a' → logprob: -9.62511157989502
    3. '(' → logprob: -11.25011157989502
    4. 'def' → logprob: -11.50011157989502
    5. 'pow' → logprob: -11.75011157989502
    6. '(pow' → logprob: -11.87511157989502
    7. '```' → logprob: -12.00011157989502
    8. 'mod' → logprob: -14.37511157989502
    9. '(
' → logprob: -14.75011157989502
    10. '   ' → logprob: -15.37511157989502

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.042468637228012085
    2. '(a' → logprob: -4.667468547821045
    3. '(' → logprob: -4.792468547821045
    4. '(-' → logprob: -5.167468547821045
    5. ',m' → logprob: -5.292468547821045
    6. ',a' → logprob: -5.542468547821045
    7. ',-' → logprob: -5.667468547821045
    8. 'a' → logprob: -6.042468547821045
    9. '-' → logprob: -6.417468547821045
    10. '(mod' → logprob: -7.542468547821045

Token 346: ' -' (ID: 533)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002959631150588393
    2. '-' → logprob: -5.877959728240967
    3. ' m' → logprob: -9.752959251403809
    4. 'mod' → logprob: -9.752959251403809
    5. '-m' → logprob: -10.627959251403809
    6. '(m' → logprob: -12.502959251403809
    7. ' -' → logprob: -13.002959251403809
    8. ')m' → logprob: -13.627959251403809
    9. ',m' → logprob: -13.752959251403809
    10. '%m' → logprob: -14.002959251403809

Token 347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.125
    3. 'm' → logprob: -16.625
    4. '
' → logprob: -17.25
    5. '-' → logprob: -17.5
    6. '```' → logprob: -17.625
    7. '

' → logprob: -17.75
    8. 'mod' → logprob: -18.375
    9. '   ' → logprob: -19.375
    10. '
' → logprob: -19.75

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007932034321129322
    2. ' ,' → logprob: -5.132932186126709
    3. ',m' → logprob: -6.257932186126709
    4. 'm' → logprob: -9.88293170928955
    5. 'mod' → logprob: -11.00793170928955
    6. ')' → logprob: -12.25793170928955
    7. '```' → logprob: -12.38293170928955
    8. 'a' → logprob: -13.00793170928955
    9. '%m' → logprob: -13.50793170928955
    10. ' mod' → logprob: -13.75793170928955

Token 349: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0067190444096922874
    2. ' m' → logprob: -5.00671911239624
    3. 'mod' → logprob: -12.881718635559082
    4. ')' → logprob: -14.756718635559082
    5. ' ' → logprob: -15.881718635559082
    6. ' mod' → logprob: -15.881718635559082
    7. '   ' → logprob: -15.881718635559082
    8. ')m' → logprob: -15.881718635559082
    9. '	m' → logprob: -16.5067195892334
    10. '```' → logprob: -16.7567195892334

Token 350: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.749814019713085e-06
    2. ' )' → logprob: -12.375006675720215
    3. '))' → logprob: -14.625006675720215
    4. '),' → logprob: -15.000006675720215
    5. 'def' → logprob: -15.125006675720215
    6. ')m' → logprob: -15.375006675720215
    7. ')
' → logprob: -15.500006675720215
    8. ')}' → logprob: -15.750006675720215
    9. ');' → logprob: -16.12500762939453
    10. ')return' → logprob: -16.25000762939453

Token 351: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4654737114906311
    2. '   ' → logprob: -1.0904736518859863
    3. 'def' → logprob: -3.7154736518859863
    4. '<|end|>' → logprob: -5.215473651885986
    5. ' )' → logprob: -6.465473651885986
    6. ',' → logprob: -6.590473651885986
    7. ' ' → logprob: -7.090473651885986
    8. ' if' → logprob: -7.465473651885986
    9. '<|end|>' → logprob: -7.965473651885986
    10. '  ' → logprob: -8.590474128723145

Token 352: ' Python' (ID: 26534)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5655354857444763
    2. 'a' → logprob: -1.690535545349121
    3. 'has' → logprob: -1.815535545349121
    4. 'False' → logprob: -3.440535545349121
    5. 'sys' → logprob: -3.815535545349121
    6. ' hasattr' → logprob: -4.065535545349121
    7. 'True' → logprob: -5.440535545349121
    8. 'not' → logprob: -5.940535545349121
    9. 'pow' → logprob: -6.440535545349121
    10. '0' → logprob: -7.315535545349121

Token 353: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.8684506416320801
    2. 'version' → logprob: -1.49345064163208
    3. ' >=' → logprob: -1.74345064163208
    4. ' ' → logprob: -2.24345064163208
    5. ' version' → logprob: -3.74345064163208
    6. '3' → logprob: -3.86845064163208
    7. '_version' → logprob: -4.24345064163208
    8. ' <' → logprob: -5.24345064163208
    9. '<' → logprob: -5.74345064163208
    10. '>' → logprob: -5.86845064163208

Token 354: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.002204855205491185
    2. ' ' → logprob: -6.127204895019531
    3. 'pow' → logprob: -11.252204895019531
    4. 'python' → logprob: -13.252204895019531
    5. '```' → logprob: -14.127204895019531
    6. '9' → logprob: -14.377204895019531
    7. '{' → logprob: -14.502204895019531
    8. '39' → logprob: -15.064704895019531
    9. '>=' → logprob: -15.189704895019531
    10. '38' → logprob: -15.502204895019531

Token 355: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.37300026416778564
    2. '7' → logprob: -1.3730002641677856
    3. '8' → logprob: -2.998000144958496
    4. ' ' → logprob: -5.873000144958496
    5. '9' → logprob: -6.123000144958496
    6. '>=' → logprob: -6.998000144958496
    7. '```' → logprob: -7.373000144958496
    8. 'pow' → logprob: -7.623000144958496
    9. 'def' → logprob: -9.123000144958496
    10. '_' → logprob: -9.248000144958496

Token 356: '8' (ID: 23)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.22519688308238983
    2. '   ' → logprob: -2.4751968383789062
    3. ' ' → logprob: -2.9751968383789062
    4. 'else' → logprob: -3.9751968383789062
    5. '    ' → logprob: -4.225196838378906
    6. ' if' → logprob: -4.725196838378906
    7. '```' → logprob: -5.600196838378906
    8. '  ' → logprob: -5.850196838378906
    9. ',' → logprob: -5.975196838378906
    10. ' ,' → logprob: -6.350196838378906

Token 357: ',' (ID: 11)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.560451328754425
    2. '   ' → logprob: -1.1854512691497803
    3. ')' → logprob: -2.5604512691497803
    4. 'else' → logprob: -3.3104512691497803
    5. ',' → logprob: -5.935451507568359
    6. ':' → logprob: -6.685451507568359
    7. ' )' → logprob: -6.685451507568359
    8. 'def' → logprob: -6.935451507568359
    9. ' ' → logprob: -7.435451507568359
    10. '):' → logprob: -7.685451507568359

Token 358: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03779472038149834
    2. ' else' → logprob: -3.662794828414917
    3. 'else' → logprob: -4.537794589996338
    4. '    ' → logprob: -8.412795066833496
    5. ' return' → logprob: -8.787795066833496
    6. '    
' → logprob: -9.287795066833496
    7. 'return' → logprob: -9.787795066833496
    8. '
' → logprob: -9.912795066833496
    9. 'def' → logprob: -10.662795066833496
    10. ' ' → logprob: -10.662795066833496

Token 359: ' eg' (ID: 9768)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3293538987636566
    2. 'pow' → logprob: -2.4543538093566895
    3. 'eg' → logprob: -3.2043538093566895
    4. ' eg' → logprob: -3.3293538093566895
    5. ' op' → logprob: -3.5793538093566895
    6. ' pow' → logprob: -3.5793538093566895
    7. '    ' → logprob: -4.4543538093566895
    8. '"' → logprob: -4.4543538093566895
    9. ' None' → logprob: -4.4543538093566895
    10. ' a' → logprob: -5.4543538093566895

Token 360: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -3.047134305234067e-05
    2. 'g' → logprob: -10.875030517578125
    3. '```' → logprob: -12.250030517578125
    4. 'cdn' → logprob: -13.750030517578125
    5. '   ' → logprob: -13.750030517578125
    6. '_cd' → logprob: -14.000030517578125
    7. 'def' → logprob: -14.375030517578125
    8. 'val' → logprob: -14.500030517578125
    9. ' gcd' → logprob: -14.500030517578125
    10. 'c' → logprob: -14.500030517578125

Token 361: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2534486949443817
    2. '(a' → logprob: -2.253448724746704
    3. 'def' → logprob: -2.503448724746704
    4. 'a' → logprob: -4.003448486328125
    5. 'if' → logprob: -5.128448486328125
    6. ' if' → logprob: -5.253448486328125
    7. ':' → logprob: -5.878448486328125
    8. ' =' → logprob: -7.628448486328125
    9. '```' → logprob: -7.628448486328125
    10. ' (' → logprob: -7.753448486328125

Token 362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003149438416585326
    2. ':' → logprob: -6.003149509429932
    3. ' if' → logprob: -7.753149509429932
    4. ':
' → logprob: -9.753149032592773
    5. '(' → logprob: -10.003149032592773
    6. '(a' → logprob: -10.253149032592773
    7. 'if' → logprob: -11.003149032592773
    8. '{' → logprob: -11.128149032592773
    9. 'a' → logprob: -11.253149032592773
    10. ' (' → logprob: -11.503149032592773

Token 363: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6199133396148682
    2. 'try' (adapté à ' try') → logprob: -0.8699133396148682
    3. 'if' → logprob: -3.619913339614868
    4. ' try' → logprob: -4.869913101196289
    5. 'return' → logprob: -5.119913101196289
    6. ' if' → logprob: -6.119913101196289
    7. ' return' → logprob: -8.119913101196289
    8. 'import' → logprob: -10.244913101196289
    9. '	try' → logprob: -10.494913101196289
    10. '```' → logprob: -11.869913101196289

Token 364: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14574915170669556
    2. ':
' → logprob: -2.020749092102051
    3. '   ' → logprob: -6.645749092102051
    4. ' :' → logprob: -7.145749092102051
    5. ':return' → logprob: -7.520749092102051
    6. '       ' → logprob: -8.14574909210205
    7. ' :
' → logprob: -9.02074909210205
    8. ':
' → logprob: -11.64574909210205
    9. ' return' → logprob: -11.77074909210205
    10. ':

' → logprob: -12.64574909210205

Token 365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20904086530208588
    2. '   ' → logprob: -1.834040880203247
    3. ' return' → logprob: -4.084040641784668
    4. 'return' → logprob: -4.459040641784668
    5. '	return' → logprob: -8.334040641784668
    6. '	' → logprob: -9.209040641784668
    7. '
' → logprob: -10.209040641784668
    8. ':return' → logprob: -10.584040641784668
    9. '   ' → logprob: -10.959040641784668
    10. '{return' → logprob: -11.584040641784668

Token 366: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1840018481016159
    2. 'return' (adapté à ' return') → logprob: -1.9340018033981323
    3. ' return' → logprob: -3.809001922607422
    4. '       ' → logprob: -6.684001922607422
    5. 'r' → logprob: -10.309001922607422
    6. 'ret' → logprob: -10.934001922607422
    7. '{return' → logprob: -12.559001922607422
    8. '    ' → logprob: -12.684001922607422
    9. '```' → logprob: -12.684001922607422
    10. ':return' → logprob: -12.934001922607422

Token 367: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -9.639096970204264e-05
    2. ' pow' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.625096321105957
    4. '(pow' → logprob: -16.375097274780273
    5. 'Pow' → logprob: -20.875097274780273
    6. '    ' → logprob: -21.125097274780273
    7. ' ' → logprob: -21.250097274780273
    8. '_pow' → logprob: -21.500097274780273
    9. '  ' → logprob: -21.625097274780273
    10. 'power' → logprob: -21.625097274780273

Token 368: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0160470362752676
    2. '(' → logprob: -4.14104700088501
    3. 'a' → logprob: -12.016047477722168
    4. '(
' → logprob: -12.516047477722168
    5. '<|end|>' → logprob: -13.016047477722168
    6. '(ai' → logprob: -15.016047477722168
    7. '<|end|>' → logprob: -16.76604652404785
    8. '(token' → logprob: -17.01604652404785
    9. '(ans' → logprob: -17.14104652404785
    10. '(abs' → logprob: -17.26604652404785

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005818653153255582
    2. ',-' → logprob: -7.500581741333008
    3. ' ,' → logprob: -10.625581741333008
    4. ' ,-' → logprob: -12.750581741333008
    5. ',
' → logprob: -15.000581741333008
    6. '-' → logprob: -15.375581741333008
    7. ' ' → logprob: -15.500581741333008
    8. 'a' → logprob: -15.875581741333008
    9. '```' → logprob: -15.875581741333008
    10. 'mod' → logprob: -15.875581741333008

Token 370: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.2020991056924686e-05
    2. ' -' → logprob: -10.625032424926758
    3. '-mod' → logprob: -12.000032424926758
    4. 'mod' → logprob: -13.875032424926758
    5. '-m' → logprob: -14.500032424926758
    6. 'm' → logprob: -16.500032424926758
    7. '–' → logprob: -18.250032424926758
    8. '(mod' → logprob: -18.750032424926758
    9. ' mod' → logprob: -19.000032424926758
    10. ' ' → logprob: -19.375032424926758

Token 371: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '۱' → logprob: -20.75
    4. '```' → logprob: -21.0
    5. '

' → logprob: -21.5
    6. '１' → logprob: -21.75
    7. '   ' → logprob: -22.0
    8. '১' → logprob: -23.25
    9. '  ' → logprob: -23.375
    10. 'm' → logprob: -23.625

Token 372: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006761906202882528
    2. ',m' → logprob: -5.0067620277404785
    3. ' ,' → logprob: -10.38176155090332
    4. 'm' → logprob: -11.13176155090332
    5. 'mod' → logprob: -14.50676155090332
    6. ',module' → logprob: -15.50676155090332
    7. '   ' → logprob: -16.00676155090332
    8. ' m' → logprob: -16.50676155090332
    9. ' mod' → logprob: -17.88176155090332
    10. ')' → logprob: -18.25676155090332

Token 373: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.000916935910936445
    2. ' m' → logprob: -7.000916957855225
    3. 'mod' → logprob: -12.125916481018066
    4. ' mod' → logprob: -16.875917434692383
    5. '	m' → logprob: -18.875917434692383
    6. ')m' → logprob: -19.750917434692383
    7. '   ' → logprob: -20.000917434692383
    8. 'м' → logprob: -20.125917434692383
    9. ')' → logprob: -20.500917434692383
    10. 'module' → logprob: -20.625917434692383

Token 374: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04862642660737038
    2. ')
' → logprob: -3.04862642288208
    3. ')
' → logprob: -10.173626899719238
    4. '   ' → logprob: -15.298626899719238
    5. ')

' → logprob: -15.423626899719238
    6. ' )' → logprob: -15.548626899719238
    7. 'except' → logprob: -15.798626899719238
    8. ' )
' → logprob: -17.048625946044922
    9. ')return' → logprob: -18.173625946044922
    10. ')`
' → logprob: -18.423625946044922

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03156302869319916
    2. 'except' → logprob: -3.7815630435943604
    3. ' except' → logprob: -5.156562805175781
    4. '	except' → logprob: -6.031562805175781
    5. '       ' → logprob: -9.406562805175781
    6. '
' → logprob: -10.781562805175781
    7. '    
' → logprob: -12.031562805175781
    8. '<|end|>' → logprob: -12.906562805175781
    9. '[' → logprob: -14.156562805175781
    10. 'Except' → logprob: -14.156562805175781

Token 376: ' except' (ID: 6384)
  Prédit: ' except'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' except' → logprob: -0.7520887851715088
    2. 'except' (adapté à ' except') → logprob: -0.7520887851715088
    3. '   ' → logprob: -2.877088785171509
    4. '	except' → logprob: -7.00208854675293
    5. 'ex' → logprob: -11.62708854675293
    6. '
' → logprob: -11.87708854675293
    7. ' ' → logprob: -12.25208854675293
    8. ',' → logprob: -13.00208854675293
    9. ')' → logprob: -13.50208854675293
    10. '  ' → logprob: -13.62708854675293

Token 377: ' Type' (ID: 7003)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.01016400195658207
    2. 'Type' → logprob: -4.6351637840271
    3. '(Value' → logprob: -8.635164260864258
    4. 'Attribute' → logprob: -8.885164260864258
    5. 'Name' → logprob: -10.385164260864258
    6. ' Value' → logprob: -10.885164260864258
    7. '(Type' → logprob: -11.135164260864258
    8. 'Import' → logprob: -11.260164260864258
    9. 'Key' → logprob: -11.885164260864258
    10. ':' → logprob: -13.510164260864258

Token 378: 'Error' (ID: 2255)
  Prédit: 'rror'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rror' → logprob: -0.31365710496902466
    2. 'Error' → logprob: -1.3136570453643799
    3. 'error' → logprob: -8.0636568069458
    4. 'ror' → logprob: -9.4386568069458
    5. 'r' → logprob: -14.1886568069458
    6. '_error' → logprob: -16.063657760620117
    7. 'rr' → logprob: -16.813657760620117
    8. ' error' → logprob: -17.313657760620117
    9. ' Error' → logprob: -17.313657760620117
    10. 'SError' → logprob: -17.563657760620117

Token 379: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003909915219992399
    2. ':
' → logprob: -5.628910064697266
    3. ' as' → logprob: -8.378910064697266
    4. '):' → logprob: -9.753910064697266
    5. '   ' → logprob: -11.378910064697266
    6. ' :' → logprob: -11.878910064697266
    7. '):
' → logprob: -13.878910064697266
    8. ')' → logprob: -13.878910064697266
    9. ':return' → logprob: -14.003910064697266
    10. ':

' → logprob: -15.378910064697266

Token 380: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046062711626291275
    2. '       ' → logprob: -3.546062707901001
    3. 'g' → logprob: -4.79606294631958
    4. 'return' → logprob: -5.42106294631958
    5. ' return' → logprob: -6.29606294631958
    6. ' g' → logprob: -7.67106294631958
    7. '    ' → logprob: -7.79606294631958
    8. 'u' → logprob: -8.296062469482422
    9. 'x' → logprob: -9.046062469482422
    10. 'a' → logprob: -9.046062469482422

Token 381: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.00021212305000517517
    2. ' g' → logprob: -9.000211715698242
    3. '   ' → logprob: -9.375211715698242
    4. 'a' → logprob: -13.625211715698242
    5. '       ' → logprob: -14.250211715698242
    6. '    
' → logprob: -14.500211715698242
    7. 'b' → logprob: -14.625211715698242
    8. '    ' → logprob: -14.750211715698242
    9. '	g' → logprob: -15.250211715698242
    10. ' ' → logprob: -16.125211715698242

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.686778503237292e-05
    2. ',x' → logprob: -9.750097274780273
    3. ',a' → logprob: -11.250097274780273
    4. ',g' → logprob: -11.500097274780273
    5. ',d' → logprob: -12.500097274780273
    6. ',p' → logprob: -13.000097274780273
    7. ',c' → logprob: -13.375097274780273
    8. ',e' → logprob: -13.625097274780273
    9. ',m' → logprob: -13.750097274780273
    10. '=' → logprob: -14.000097274780273

Token 383: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.537868779967539e-06
    2. ' x' → logprob: -12.125008583068848
    3. 'y' → logprob: -12.750008583068848
    4. '_x' → logprob: -16.50000762939453
    5. '_,' → logprob: -17.87500762939453
    6. '	x' → logprob: -19.25000762939453
    7. 'u' → logprob: -19.50000762939453
    8. '"x' → logprob: -19.75000762939453
    9. ''x' → logprob: -19.75000762939453
    10. 'p' → logprob: -19.87500762939453

Token 384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017004783148877323
    2. '=' → logprob: -8.75016975402832
    3. ',b' → logprob: -12.87516975402832
    4. ',y' → logprob: -13.00016975402832
    5. '_,' → logprob: -13.75016975402832
    6. ' ,' → logprob: -14.00016975402832
    7. '<|end|>' → logprob: -14.62516975402832
    8. ' =' → logprob: -14.75016975402832
    9. ',m' → logprob: -14.87516975402832
    10. ',x' → logprob: -14.87516975402832

Token 385: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4749898910522461
    2. '_' → logprob: -0.9749898910522461
    3. '_y' → logprob: -7.224989891052246
    4. '_=' → logprob: -8.724989891052246
    5. ' y' → logprob: -11.224989891052246
    6. ' _' → logprob: -13.224989891052246
    7. '=' → logprob: -13.724989891052246
    8. 'm' → logprob: -13.849989891052246
    9. '_m' → logprob: -13.849989891052246
    10. 'z' → logprob: -13.849989891052246

Token 386: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031803252641111612
    2. ' =' → logprob: -5.753180503845215
    3. ',' → logprob: -13.003180503845215
    4. '=g' → logprob: -15.003180503845215
    5. '=_' → logprob: -18.3781795501709
    6. ')' → logprob: -19.0031795501709
    7. '=}' → logprob: -19.1281795501709
    8. ')=' → logprob: -19.2531795501709
    9. '=*/' → logprob: -19.2531795501709
    10. '=a' → logprob: -19.3781795501709

Token 387: ' eg' (ID: 9768)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eg' → logprob: -2.935296834039036e-06
    2. ' eg' → logprob: -12.75000286102295
    3. '   ' → logprob: -20.125003814697266
    4. 'Eg' → logprob: -20.500003814697266
    5. 'eq' → logprob: -21.625003814697266
    6. '
' → logprob: -22.875003814697266
    7. 'egl' → logprob: -23.375003814697266
    8. 'e' → logprob: -23.500003814697266
    9. 'EG' → logprob: -23.625003814697266
    10. 'ef' → logprob: -23.750003814697266

Token 388: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.1041145626222715e-05
    2. 'c' → logprob: -11.625011444091797
    3. 'cg' → logprob: -14.500011444091797
    4. 'cdf' → logprob: -14.625011444091797
    5. 'g' → logprob: -15.000011444091797
    6. 'd' → logprob: -15.750011444091797
    7. 'xcd' → logprob: -15.875011444091797
    8. 'ctx' → logprob: -16.000011444091797
    9. 'cwd' → logprob: -16.625011444091797
    10. 'cdn' → logprob: -17.125011444091797

Token 389: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.167648876318708e-05
    2. 'a' → logprob: -10.125041961669922
    3. '(' → logprob: -13.500041961669922
    4. '(
' → logprob: -17.250041961669922
    5. '(abs' → logprob: -17.625041961669922
    6. ' (' → logprob: -17.875041961669922
    7. '<|end|>' → logprob: -17.875041961669922
    8. '```' → logprob: -18.625041961669922
    9. 'def' → logprob: -19.125041961669922
    10. '((' → logprob: -19.875041961669922

Token 390: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013565480476245284
    2. ',m' → logprob: -7.126356601715088
    3. 'm' → logprob: -8.50135612487793
    4. 'mod' → logprob: -8.75135612487793
    5. ' ,' → logprob: -8.87635612487793
    6. '%m' → logprob: -10.25135612487793
    7. ' mod' → logprob: -12.12635612487793
    8. '%' → logprob: -12.50135612487793
    9. ' m' → logprob: -13.00135612487793
    10. ' %' → logprob: -13.25135612487793

Token 391: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0564331205387134e-05
    2. ' m' → logprob: -11.50001049041748
    3. 'mod' → logprob: -14.87501049041748
    4. '%m' → logprob: -19.250011444091797
    5. '```' → logprob: -20.875011444091797
    6. '<|end|>' → logprob: -21.000011444091797
    7. '&m' → logprob: -21.125011444091797
    8. '   ' → logprob: -21.250011444091797
    9. ',m' → logprob: -21.375011444091797
    10. '<m' → logprob: -21.500011444091797

Token 392: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07904455810785294
    2. ')' → logprob: -2.5790445804595947
    3. ')
' → logprob: -8.829044342041016
    4. ')

' → logprob: -12.454044342041016
    5. '   ' → logprob: -12.579044342041016
    6. 'if' → logprob: -14.704044342041016
    7. ' )
' → logprob: -15.829044342041016
    8. 'return' → logprob: -16.329044342041016
    9. ')return' → logprob: -16.954044342041016
    10. 'def' → logprob: -17.329044342041016

Token 393: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11521463096141815
    2. '       ' → logprob: -2.2402145862579346
    3. 'if' → logprob: -6.365214824676514
    4. ' if' → logprob: -7.490214824676514
    5. '	if' → logprob: -10.115214347839355
    6. '<|end|>' → logprob: -10.240214347839355
    7. '	   ' → logprob: -11.740214347839355
    8. ' ' → logprob: -11.990214347839355
    9. '	' → logprob: -12.740214347839355
    10. '```' → logprob: -13.115214347839355

Token 394: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0056639062240719795
    2. ' if' → logprob: -5.255663871765137
    3. 'return' → logprob: -8.380663871765137
    4. '   ' → logprob: -9.255663871765137
    5. '       ' → logprob: -9.755663871765137
    6. 'assert' → logprob: -10.505663871765137
    7. '	if' → logprob: -10.880663871765137
    8. ' return' → logprob: -14.255663871765137
    9. '	return' → logprob: -16.255664825439453
    10. ';if' → logprob: -16.505664825439453

Token 395: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -6.635164754698053e-05
    2. ' g' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.500066757202148
    4. '(g' → logprob: -17.12506675720215
    5. '	g' → logprob: -17.25006675720215
    6. 'not' → logprob: -18.37506675720215
    7. ' ' → logprob: -18.62506675720215
    8. '_g' → logprob: -18.75006675720215
    9. '    ' → logprob: -18.75006675720215
    10. '[g' → logprob: -18.75006675720215

Token 396: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0012679706560447812
    2. '==' → logprob: -7.251267910003662
    3. ' !=' → logprob: -7.501267910003662
    4. 'is' → logprob: -12.75126838684082
    5. '!==' → logprob: -14.00126838684082
    6. ')!=' → logprob: -14.75126838684082
    7. '=' → logprob: -15.00126838684082
    8. '>' → logprob: -15.37626838684082
    9. '```' → logprob: -15.37626838684082
    10. '1' → logprob: -16.12626838684082

Token 397: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -17.250003814697266
    4. '```' → logprob: -19.625003814697266
    5. '  ' → logprob: -20.875003814697266
    6. ' ' → logprob: -21.250003814697266
    7. '=' → logprob: -21.625003814697266
    8. '    ' → logprob: -22.125003814697266
    9. '
' → logprob: -22.250003814697266
    10. 'def' → logprob: -22.500003814697266

Token 398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -19.375001907348633
    4. '   ' → logprob: -20.500001907348633
    5. 'int' → logprob: -21.625001907348633
    6. '۱' → logprob: -22.500001907348633
    7. '  ' → logprob: -22.625001907348633
    8. '
' → logprob: -23.000001907348633
    9. '<|end|>' → logprob: -23.375001907348633
    10. '１' → logprob: -23.375001907348633

Token 399: ':' (ID: 25)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5833057761192322
    2. ':' → logprob: -0.8333057761192322
    3. ':return' → logprob: -4.958305835723877
    4. ' or' → logprob: -8.583305358886719
    5. '       ' → logprob: -10.083305358886719
    6. '           ' → logprob: -10.458305358886719
    7. ':
' → logprob: -10.958305358886719
    8. '):
' → logprob: -11.708305358886719
    9. ':

' → logprob: -11.958305358886719
    10. ',' → logprob: -12.208305358886719

Token 400: ' raise' (ID: 9338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3888334631919861
    2. 'raise' → logprob: -1.7638335227966309
    3. ' raise' → logprob: -2.513833522796631
    4. 'return' → logprob: -3.138833522796631
    5. ' return' → logprob: -3.638833522796631
    6. '	raise' → logprob: -10.013833045959473
    7. 'Raise' → logprob: -11.013833045959473
    8. 'None' → logprob: -11.138833045959473
    9. '       ' → logprob: -11.263833045959473
    10. '
' → logprob: -11.263833045959473

Token 401: ' Exception' (ID: 6851)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.005610084626823664
    2. 'Exception' → logprob: -5.25560998916626
    3. ' Value' → logprob: -8.005610466003418
    4. 'Assertion' → logprob: -11.130610466003418
    5. 'Zero' → logprob: -11.380610466003418
    6. '(Value' → logprob: -11.755610466003418
    7. ' Exception' → logprob: -12.505610466003418
    8. 'Arithmetic' → logprob: -12.755610466003418
    9. 'Runtime' → logprob: -13.880610466003418
    10. '(Exception' → logprob: -15.380610466003418

Token 402: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.02706729806959629
    2. '("' → logprob: -3.652067184448242
    3. '(' → logprob: -7.777067184448242
    4. '       ' → logprob: -8.652067184448242
    5. '   ' → logprob: -9.652067184448242
    6. '           ' → logprob: -9.902067184448242
    7. ''' → logprob: -10.152067184448242
    8. '"' → logprob: -12.027067184448242
    9. '(Value' → logprob: -12.402067184448242
    10. '()' → logprob: -13.527067184448242

Token 403: 'mod' (ID: 4847)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8909201622009277
    2. 'Mod' → logprob: -1.2659201622009277
    3. 'No' → logprob: -1.3909201622009277
    4. 'mod' → logprob: -3.3909201622009277
    5. 'Inverse' → logprob: -4.515920162200928
    6. ''M' → logprob: -5.640920162200928
    7. 'Value' → logprob: -6.265920162200928
    8. ''a' → logprob: -6.265920162200928
    9. ''m' → logprob: -6.640920162200928
    10. ' modular' → logprob: -7.015920162200928

Token 404: 'ular' (ID: 1492)
  Prédit: 'ular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ular' → logprob: -0.0022287636529654264
    2. 'inv' → logprob: -6.377228736877441
    3. 'inverse' → logprob: -7.752228736877441
    4. 'invert' → logprob: -10.127228736877441
    5. '   ' → logprob: -11.377228736877441
    6. 'not' → logprob: -11.502228736877441
    7. 'ulo' → logprob: -11.877228736877441
    8. ' inverse' → logprob: -12.252228736877441
    9. 'uler' → logprob: -12.377228736877441
    10. '
' → logprob: -12.752228736877441

Token 405: ' inverse' (ID: 53743)
  Prédit: ' inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.6979131102561951
    2. 'inverse' → logprob: -0.6979131102561951
    3. 'invert' → logprob: -5.57291316986084
    4. 'not' → logprob: -8.19791316986084
    5. ' inversion' → logprob: -8.44791316986084
    6. '_inverse' → logprob: -9.19791316986084
    7. 'in' → logprob: -9.32291316986084
    8. ' not' → logprob: -9.82291316986084
    9. 'inv' → logprob: -9.82291316986084
    10. ' invert' → logprob: -9.94791316986084

Token 406: ' does' (ID: 2226)
  Prédit: ' does'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' does' → logprob: -0.006876637227833271
    2. 'does' → logprob: -5.006876468658447
    3. ' not' → logprob: -9.131876945495605
    4. 'not' → logprob: -10.131876945495605
    5. 'Does' → logprob: -12.131876945495605
    6. '   ' → logprob: -12.756876945495605
    7. ' ' → logprob: -13.256876945495605
    8. ' do' → logprob: -14.381876945495605
    9. 'do' → logprob: -14.381876945495605
    10. '```' → logprob: -14.756876945495605

Token 407: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.02976299449801445
    2. ' not' → logprob: -3.5297629833221436
    3. ')' → logprob: -11.654763221740723
    4. 'n't' → logprob: -13.529763221740723
    5. '	not' → logprob: -14.529763221740723
    6. 'None' → logprob: -14.654763221740723
    7. '_not' → logprob: -14.654763221740723
    8. 'n' → logprob: -15.279763221740723
    9. 'return' → logprob: -15.404763221740723
    10. 'none' → logprob: -15.529763221740723

Token 408: ' exist' (ID: 4310)
  Prédit: 'exist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exist' → logprob: -0.22542564570903778
    2. ' exist' → logprob: -1.6004256010055542
    3. '_exist' → logprob: -11.850425720214844
    4. 'Exist' → logprob: -12.600425720214844
    5. '0' → logprob: -15.225425720214844
    6. 'existent' → logprob: -15.225425720214844
    7. 'exact' → logprob: -15.350425720214844
    8. 'exit' → logprob: -15.475425720214844
    9. 'exists' → logprob: -15.600425720214844
    10. '2' → logprob: -15.725425720214844

Token 409: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.010431371629238129
    2. '')' → logprob: -4.635431289672852
    3. '')
' → logprob: -8.635431289672852
    4. '       ' → logprob: -8.760431289672852
    5. ')')
' → logprob: -8.885431289672852
    6. ')
' → logprob: -9.010431289672852
    7. ')' → logprob: -9.510431289672852
    8. '   ' → logprob: -13.010431289672852
    9. '")
' → logprob: -13.885431289672852
    10. '')

' → logprob: -14.760431289672852

Token 410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040934275602921844
    2. 'return' → logprob: -8.125409126281738
    3. ' return' → logprob: -9.375409126281738
    4. '   ' → logprob: -11.375409126281738
    5. '<|end|>' → logprob: -11.750409126281738
    6. '	return' → logprob: -12.250409126281738
    7. '	' → logprob: -13.750409126281738
    8. ',' → logprob: -13.750409126281738
    9. '	   ' → logprob: -14.125409126281738
    10. '           ' → logprob: -14.500409126281738

Token 411: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2995067834854126
    2. '       ' → logprob: -2.049506664276123
    3. ' return' → logprob: -2.049506664276123
    4. '	return' → logprob: -7.174506664276123
    5. '   ' → logprob: -7.799506664276123
    6. '	' → logprob: -10.924507141113281
    7. ':return' → logprob: -11.549507141113281
    8. '	   ' → logprob: -12.049507141113281
    9. '{return' → logprob: -12.299507141113281
    10. 'eturn' → logprob: -13.049507141113281

Token 412: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3868711292743683
    2. ' x' → logprob: -1.136871099472046
    3. '(x' → logprob: -16.761871337890625
    4. '	x' → logprob: -18.386871337890625
    5. ' (' → logprob: -20.011871337890625
    6. '   ' → logprob: -20.136871337890625
    7. ' ' → logprob: -20.136871337890625
    8. '{x' → logprob: -20.761871337890625
    9. '"x' → logprob: -20.761871337890625
    10. '    ' → logprob: -23.386871337890625

Token 413: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5853354930877686
    2. ' %' → logprob: -0.8353354930877686
    3. '%m' → logprob: -4.710335731506348
    4. '%n' → logprob: -8.585335731506348
    5. '%b' → logprob: -9.460335731506348
    6. '%x' → logprob: -10.085335731506348
    7. '%d' → logprob: -10.835335731506348
    8. '%s' → logprob: -11.585335731506348
    9. '%i' → logprob: -11.710335731506348
    10. '%e' → logprob: -12.585335731506348

Token 414: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -6.988221684878226e-06
    2. ' m' → logprob: -11.875006675720215
    3. 'mod' → logprob: -18.75000762939453
    4. '	m' → logprob: -20.75000762939453
    5. '```' → logprob: -20.75000762939453
    6. '%m' → logprob: -21.37500762939453
    7. ' м' → logprob: -22.00000762939453
    8. '#m' → logprob: -22.25000762939453
    9. '(m' → logprob: -22.62500762939453
    10. ')m' → logprob: -23.00000762939453

Token 415: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 416: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3759533166885376
    2. '#' → logprob: -1.6259533166885376
    3. '
' → logprob: -1.6259533166885376
    4. '<|end|>' → logprob: -1.6259533166885376
    5. '```' → logprob: -2.875953197479248
    6. ')' → logprob: -3.375953197479248
    7. '\n' → logprob: -3.750953197479248
    8. '%' → logprob: -4.250953197479248
    9. '<|end|>' → logprob: -5.125953197479248
    10. '

' → logprob: -5.875953197479248

Token 417: ' combination' (ID: 14083)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.2809038460254669
    2. 'mod' → logprob: -1.7809038162231445
    3. 'pow' → logprob: -2.7809038162231445
    4. ' pow' → logprob: -4.9059038162231445
    5. ' power' → logprob: -6.9059038162231445
    6. 'bin' → logprob: -7.1559038162231445
    7. 'power' → logprob: -7.2809038162231445
    8. 'comb' → logprob: -7.5309038162231445
    9. 'n' → logprob: -7.6559038162231445
    10. ' n' → logprob: -7.7809038162231445

Token 418: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006541779730468988
    2. '(' → logprob: -7.375654220581055
    3. ' (' → logprob: -10.875654220581055
    4. '2' → logprob: -12.500654220581055
    5. '(a' → logprob: -13.625654220581055
    6. '(N' → logprob: -14.000654220581055
    7. '(k' → logprob: -14.750654220581055
    8. '(
' → logprob: -15.250654220581055
    9. '_mod' → logprob: -15.375654220581055
    10. 'n' → logprob: -15.500654220581055

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000422570708906278
    2. ',r' → logprob: -8.125422477722168
    3. ',k' → logprob: -9.750422477722168
    4. ',n' → logprob: -10.250422477722168
    5. ' ,' → logprob: -10.375422477722168
    6. ',
' → logprob: -13.875422477722168
    7. ',p' → logprob: -16.125423431396484
    8. ',j' → logprob: -16.875423431396484
    9. ',m' → logprob: -16.875423431396484
    10. ',s' → logprob: -17.000423431396484

Token 420: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.050749633461236954
    2. 'k' → logprob: -3.0507495403289795
    3. ' r' → logprob: -6.175749778747559
    4. ' k' → logprob: -9.550749778747559
    5. '```' → logprob: -12.550749778747559
    6. '   ' → logprob: -12.925749778747559
    7. '
' → logprob: -14.050749778747559
    8. ' ' → logprob: -14.050749778747559
    9. 'm' → logprob: -14.425749778747559
    10. 'def' → logprob: -14.925749778747559

Token 421: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002060436672763899
    2. '):
' → logprob: -8.875205993652344
    3. ')' → logprob: -10.250205993652344
    4. ',' → logprob: -10.500205993652344
    5. ' ):' → logprob: -13.375205993652344
    6. ':' → logprob: -13.750205993652344
    7. '):
' → logprob: -14.750205993652344
    8. '   ' → logprob: -15.750205993652344
    9. '}:' → logprob: -17.125205993652344
    10. ' ' → logprob: -17.375205993652344

Token 422: ' mod' (ID: 1812)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7125363945960999
    2. 'mod' → logprob: -0.7125363945960999
    3. ' mod' → logprob: -4.587536334991455
    4. ' m' → logprob: -4.837536334991455
    5. 'p' → logprob: -6.962536334991455
    6. 'MOD' → logprob: -9.337536811828613
    7. ' p' → logprob: -10.337536811828613
    8. '   ' → logprob: -11.837536811828613
    9. '```' → logprob: -11.837536811828613
    10. ' ' → logprob: -12.587536811828613

Token 423: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06705184280872345
    2. '=None' → logprob: -3.317051887512207
    3. '=' → logprob: -3.567051887512207
    4. ')' → logprob: -8.067051887512207
    5. '):
' → logprob: -10.942051887512207
    6. ')=' → logprob: -11.567051887512207
    7. ':' → logprob: -12.317051887512207
    8. ' ):' → logprob: -12.317051887512207
    9. ' =' → logprob: -12.817051887512207
    10. ')):' → logprob: -15.067051887512207

Token 424: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0003728774609044194
    2. '10' → logprob: -8.250372886657715
    3. ' mod' → logprob: -9.500372886657715
    4. 'None' → logprob: -10.250372886657715
    5. ' None' → logprob: -14.250372886657715
    6. '0' → logprob: -14.750372886657715
    7. '100' → logprob: -15.375372886657715
    8. '(mod' → logprob: -16.8753719329834
    9. ' ' → logprob: -17.2503719329834
    10. '
' → logprob: -17.7503719329834

Token 425: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00036537862615659833
    2. ')' → logprob: -8.000365257263184
    3. '):
' → logprob: -10.750365257263184
    4. ',' → logprob: -12.250365257263184
    5. ' ):' → logprob: -12.750365257263184
    6. ':' → logprob: -15.250365257263184
    7. '):
' → logprob: -16.0003662109375
    8. '=None' → logprob: -16.2503662109375
    9. '=' → logprob: -16.5003662109375
    10. '**' → logprob: -16.5003662109375

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004156987648457289
    2. ':' → logprob: -5.754157066345215
    3. ' if' → logprob: -7.254157066345215
    4. '):' → logprob: -8.754157066345215
    5. 'if' → logprob: -10.504157066345215
    6. '	if' → logprob: -10.754157066345215
    7. '):
' → logprob: -11.129157066345215
    8. ',' → logprob: -11.379157066345215
    9. ':
' → logprob: -11.754157066345215
    10. '```' → logprob: -12.004157066345215

Token 427: ' #' (ID: 1069)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7707841992378235
    2. 'if' → logprob: -1.1457841396331787
    3. '   ' → logprob: -2.3957841396331787
    4. ' if' → logprob: -2.7707841396331787
    5. 'res' → logprob: -2.8957841396331787
    6. 'result' → logprob: -5.520784378051758
    7. ' res' → logprob: -5.520784378051758
    8. ' r' → logprob: -6.270784378051758
    9. '"""' → logprob: -8.895784378051758
    10. 'return' → logprob: -9.270784378051758

Token 428: ' Combination' (ID: 134507)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7179054617881775
    2. 'if' → logprob: -0.7179054617881775
    3. ' if' → logprob: -4.842905521392822
    4. 'res' → logprob: -4.842905521392822
    5. 'numer' → logprob: -5.342905521392822
    6. 'num' → logprob: -6.592905521392822
    7. 'result' → logprob: -6.842905521392822
    8. '   ' → logprob: -6.842905521392822
    9. ' r' → logprob: -8.717905044555664
    10. 'return' → logprob: -9.342905044555664

Token 429: ' mod' (ID: 1812)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4928191602230072
    2. '=' → logprob: -1.9928191900253296
    3. ' =' → logprob: -2.61781907081604
    4. 'def' → logprob: -2.74281907081604
    5. ' if' → logprob: -3.49281907081604
    6. '   ' → logprob: -3.61781907081604
    7. ':' → logprob: -3.74281907081604
    8. 'if' → logprob: -3.99281907081604
    9. '(' → logprob: -5.367819309234619
    10. '):' → logprob: -5.492819309234619

Token 430: ' using' (ID: 2360)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005155839025974274
    2. 'def' → logprob: -6.00515604019165
    3. ' (' → logprob: -6.88015604019165
    4. ' n' → logprob: -7.75515604019165
    5. 'n' → logprob: -8.255155563354492
    6. '   ' → logprob: -8.380155563354492
    7. '=' → logprob: -9.005155563354492
    8. ' ' → logprob: -9.130155563354492
    9. ' def' → logprob: -9.255155563354492
    10. ',' → logprob: -9.505155563354492

Token 431: ' reduce' (ID: 10389)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.11820731312036514
    2. 'factor' → logprob: -3.1182072162628174
    3. 'ft' → logprob: -3.3682072162628174
    4. 'min' → logprob: -4.1182074546813965
    5. '@' → logprob: -5.4932074546813965
    6. 'partial' → logprob: -5.4932074546813965
    7. 'def' → logprob: -6.4932074546813965
    8. 'reduce' → logprob: -6.6182074546813965
    9. 'fac' → logprob: -6.8682074546813965
    10. 'math' → logprob: -6.9932074546813965

Token 432: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7433834671974182
    2. '   ' → logprob: -1.7433834075927734
    3. '(op' → logprob: -2.1183834075927734
    4. 'def' → logprob: -2.6183834075927734
    5. '(
' → logprob: -3.2433834075927734
    6. '(lambda' → logprob: -3.2433834075927734
    7. ' and' → logprob: -3.3683834075927734
    8. '(' → logprob: -3.6183834075927734
    9. ' (' → logprob: -5.368383407592773
    10. ')' → logprob: -6.243383407592773

Token 433: ' map' (ID: 4014)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.27177679538726807
    2. 'op' → logprob: -2.5217766761779785
    3. 'partial' → logprob: -2.6467766761779785
    4. 'def' → logprob: -3.6467766761779785
    5. 'operator' → logprob: -3.6467766761779785
    6. 'fun' → logprob: -3.8967766761779785
    7. 'ft' → logprob: -5.8967766761779785
    8. 'reduce' → logprob: -6.2717766761779785
    9. '   ' → logprob: -6.5217766761779785
    10. 'fact' → logprob: -7.2717766761779785

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04069443792104721
    2. '(lambda' → logprob: -4.165694236755371
    3. ' and' → logprob: -4.415694236755371
    4. '(op' → logprob: -5.165694236755371
    5. '(operator' → logprob: -6.290694236755371
    6. ')' → logprob: -6.540694236755371
    7. '   ' → logprob: -6.665694236755371
    8. 'and' → logprob: -8.040694236755371
    9. '=lambda' → logprob: -8.040694236755371
    10. ' ,' → logprob: -8.040694236755371

Token 435: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.32135915756225586
    2. 'op' → logprob: -1.5713591575622559
    3. 'partial' → logprob: -3.071359157562256
    4. 'operator' → logprob: -4.946359157562256
    5. ' lambda' → logprob: -5.696359157562256
    6. 'filter' → logprob: -6.321359157562256
    7. '   ' → logprob: -6.571359157562256
    8. ' op' → logprob: -6.696359157562256
    9. ' and' → logprob: -6.696359157562256
    10. 'pow' → logprob: -6.821359157562256

Token 436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10895587503910065
    2. '(lambda' → logprob: -2.7339558601379395
    3. '   ' → logprob: -3.7339558601379395
    4. ':' → logprob: -5.1089558601379395
    5. ' ,' → logprob: -6.1089558601379395
    6. ' lambda' → logprob: -6.2339558601379395
    7. ' ' → logprob: -7.1089558601379395
    8. ' and' → logprob: -7.1089558601379395
    9. 'lambda' → logprob: -7.2339558601379395
    10. '=lambda' → logprob: -7.9839558601379395

Token 437: ' and' (ID: 326)
  Prédit: 'filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filter' → logprob: -0.7360047698020935
    2. 'op' → logprob: -1.1110048294067383
    3. 'partial' → logprob: -2.9860048294067383
    4. 'operator' → logprob: -3.6110048294067383
    5. 'lambda' → logprob: -3.6110048294067383
    6. 'ft' → logprob: -4.111004829406738
    7. 'range' → logprob: -4.486004829406738
    8. '   ' → logprob: -4.861004829406738
    9. 'reduce' → logprob: -4.861004829406738
    10. '    ' → logprob: -4.986004829406738

Token 438: ' mod' (ID: 1812)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.6334807872772217
    2. 'partial' → logprob: -1.2584807872772217
    3. 'operator' → logprob: -2.3834807872772217
    4. 'ft' → logprob: -3.1334807872772217
    5. 'lambda' → logprob: -3.3834807872772217
    6. 'fun' → logprob: -5.508481025695801
    7. 'range' → logprob: -5.758481025695801
    8. 'pow' → logprob: -5.758481025695801
    9. 'filter' → logprob: -6.633481025695801
    10. ' partial' → logprob: -6.883481025695801

Token 439: 'inv' (ID: 31086)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1943923681974411
    2. '):' → logprob: -2.819392442703247
    3. ':' → logprob: -3.319392442703247
    4. '=' → logprob: -3.444392442703247
    5. ',' → logprob: -3.819392442703247
    6. 'def' → logprob: -4.819392204284668
    7. '):
' → logprob: -5.194392204284668
    8. ' ' → logprob: -6.069392204284668
    9. ')' → logprob: -6.069392204284668
    10. ' and' → logprob: -6.694392204284668

Token 440: ' --' (ID: 2230)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.604753315448761
    2. '(n' → logprob: -1.2297532558441162
    3. ':' → logprob: -2.104753255844116
    4. '(' → logprob: -3.604753255844116
    5. '):' → logprob: -5.604753494262695
    6. '(
' → logprob: -5.604753494262695
    7. ',' → logprob: -5.979753494262695
    8. 'def' → logprob: -6.979753494262695
    9. ' (' → logprob: -8.104753494262695
    10. '       ' → logprob: -9.104753494262695

Token 441: ' all' (ID: 722)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30764320492744446
    2. ' reduce' → logprob: -2.432643175125122
    3. ' return' → logprob: -2.682643175125122
    4. ' if' → logprob: -3.682643175125122
    5. ' lambda' → logprob: -3.932643175125122
    6. ' n' → logprob: -4.307643413543701
    7. 'return' → logprob: -4.807643413543701
    8. 'reduce' → logprob: -4.932643413543701
    9. ' (' → logprob: -5.057643413543701
    10. ' f' → logprob: -5.432643413543701

Token 442: ' together' (ID: 4717)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25613051652908325
    2. '=lambda' → logprob: -2.2561304569244385
    3. '):' → logprob: -3.2561304569244385
    4. ')' → logprob: -3.8811304569244385
    5. '(' → logprob: -4.006130695343018
    6. ' in' → logprob: -4.756130695343018
    7. ' for' → logprob: -5.006130695343018
    8. ',' → logprob: -5.006130695343018
    9. '   ' → logprob: -5.631130695343018
    10. ' =' → logprob: -5.881130695343018

Token 443: '
' (ID: 198)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.25095224380493164
    2. '   ' → logprob: -1.6259522438049316
    3. '(' → logprob: -4.250952243804932
    4. ':' → logprob: -5.375952243804932
    5. '(
' → logprob: -5.750952243804932
    6. ' (' → logprob: -7.000952243804932
    7. 'def' → logprob: -7.125952243804932
    8. ',' → logprob: -8.250951766967773
    9. '(r' → logprob: -8.250951766967773
    10. '):' → logprob: -8.375951766967773

Token 444: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25502198934555054
    2. ':' → logprob: -1.8800220489501953
    3. '):' → logprob: -3.0050220489501953
    4. '(n' → logprob: -4.255022048950195
    5. ',' → logprob: -6.630022048950195
    6. '```' → logprob: -6.755022048950195
    7. ')' → logprob: -6.880022048950195
    8. '(' → logprob: -6.880022048950195
    9. ' (' → logprob: -7.130022048950195
    10. '():' → logprob: -7.505022048950195

Token 445: ' r' (ID: 428)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35035067796707153
    2. 'return' → logprob: -1.9753506183624268
    3. ' if' → logprob: -2.4753506183624268
    4. '   ' → logprob: -3.2253506183624268
    5. 'r' (adapté à ' r') → logprob: -4.225350856781006
    6. 'numer' → logprob: -4.600350856781006
    7. ' return' → logprob: -5.600350856781006
    8. 'num' → logprob: -5.850350856781006
    9. 'result' → logprob: -7.225350856781006
    10. ' numerator' → logprob: -7.975350856781006

Token 446: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3871544599533081
    2. '=' → logprob: -1.137154459953308
    3. ',' → logprob: -8.887154579162598
    4. ')' → logprob: -9.887154579162598
    5. '   ' → logprob: -10.762154579162598
    6. '=r' → logprob: -10.887154579162598
    7. '=max' → logprob: -11.637154579162598
    8. ' <<=' → logprob: -11.762154579162598
    9. ' ' → logprob: -12.262154579162598
    10. '=min' → logprob: -12.262154579162598

Token 447: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01417032815515995
    2. ' min' → logprob: -4.264170169830322
    3. '0' → logprob: -12.38917064666748
    4. '(min' → logprob: -13.63917064666748
    5. '=min' → logprob: -14.26417064666748
    6. '	min' → logprob: -14.51417064666748
    7. 'r' → logprob: -15.76417064666748
    8. '[min' → logprob: -16.514169692993164
    9. 'n' → logprob: -17.139169692993164
    10. '.min' → logprob: -17.639169692993164

Token 448: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -2.7848862373502925e-05
    2. '(' → logprob: -10.500027656555176
    3. 'r' → logprob: -16.500028610229492
    4. '(
' → logprob: -16.625028610229492
    5. ' (' → logprob: -17.125028610229492
    6. ' r' → logprob: -20.000028610229492
    7. '(n' → logprob: -20.375028610229492
    8. ')' → logprob: -20.875028610229492
    9. '```' → logprob: -20.875028610229492
    10. '	r' → logprob: -21.000028610229492

Token 449: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008268986130133271
    2. ',r' → logprob: -7.500826835632324
    3. ' ,' → logprob: -8.750826835632324
    4. 'r' → logprob: -9.750826835632324
    5. '(r' → logprob: -9.875826835632324
    6. '(n' → logprob: -12.750826835632324
    7. ',n' → logprob: -13.750826835632324
    8. ' r' → logprob: -13.750826835632324
    9. '(' → logprob: -15.000826835632324
    10. ',
' → logprob: -15.250826835632324

Token 450: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47409588098526
    2. ' n' → logprob: -0.97409588098526
    3. 'r' → logprob: -11.224096298217773
    4. '(n' → logprob: -13.224096298217773
    5. ' r' → logprob: -13.474096298217773
    6. '	n' → logprob: -14.224096298217773
    7. ' ' → logprob: -14.349096298217773
    8. ')n' → logprob: -14.724096298217773
    9. ')' → logprob: -15.474096298217773
    10. '```' → logprob: -15.849096298217773

Token 451: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05658004432916641
    2. '-' → logprob: -2.931580066680908
    3. '-r' → logprob: -6.431580066680908
    4. ')' → logprob: -9.43157958984375
    5. ',' → logprob: -12.68157958984375
    6. 'r' → logprob: -13.80657958984375
    7. ' )' → logprob: -14.93157958984375
    8. '))' → logprob: -14.93157958984375
    9. ' ' → logprob: -15.05657958984375
    10. ' r' → logprob: -15.43157958984375

Token 452: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0001398929744027555
    2. ' r' → logprob: -8.875140190124512
    3. ' ' → logprob: -18.375139236450195
    4. '	r' → logprob: -19.375139236450195
    5. '<|end|>' → logprob: -20.500139236450195
    6. '_r' → logprob: -20.750139236450195
    7. ')' → logprob: -21.375139236450195
    8. '(r' → logprob: -21.500139236450195
    9. '   ' → logprob: -21.625139236450195
    10. '[r' → logprob: -22.250139236450195

Token 453: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3874417841434479
    2. ')' → logprob: -1.1374417543411255
    3. ')
' → logprob: -7.887441635131836
    4. '   ' → logprob: -9.137441635131836
    5. ' )
' → logprob: -9.512441635131836
    6. ' )' → logprob: -11.762441635131836
    7. ')

' → logprob: -13.012441635131836
    8. ')`
' → logprob: -14.387441635131836
    9. ')n' → logprob: -15.012441635131836
    10. ' if' → logprob: -15.012441635131836

Token 454: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022887103259563446
    2. ' if' → logprob: -6.377288818359375
    3. 'if' → logprob: -7.502288818359375
    4. 'return' → logprob: -11.377288818359375
    5. ' return' → logprob: -12.377288818359375
    6. 'result' → logprob: -12.377288818359375
    7. '    
' → logprob: -12.627288818359375
    8. 'n' → logprob: -12.752288818359375
    9. 'num' → logprob: -13.502288818359375
    10. ' result' → logprob: -13.627288818359375

Token 455: ' ts' (ID: 6601)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numer' → logprob: -1.1691968441009521
    2. '   ' → logprob: -1.2941968441009521
    3. 'if' → logprob: -1.5441968441009521
    4. 'num' → logprob: -1.7941968441009521
    5. ' if' → logprob: -4.294197082519531
    6. ' numerator' → logprob: -4.544197082519531
    7. ' numer' → logprob: -5.669197082519531
    8. 'return' → logprob: -5.794197082519531
    9. 'nums' → logprob: -6.669197082519531
    10. ' num' → logprob: -7.169197082519531

Token 456: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5297043919563293
    2. '=' → logprob: -0.9047043919563293
    3. 'up' → logprob: -6.904704570770264
    4. 'nums' → logprob: -7.529704570770264
    5. 'okens' → logprob: -7.654704570770264
    6. 'r' → logprob: -7.904704570770264
    7. 's' → logprob: -8.029704093933105
    8. 'erms' → logprob: -8.279704093933105
    9. 'um' → logprob: -8.404704093933105
    10. 't' → logprob: -8.529704093933105

Token 457: ' zip' (ID: 16216)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.44873887300491333
    2. '(range' → logprob: -1.4487388134002686
    3. 'list' → logprob: -2.3237388134002686
    4. ' range' → logprob: -4.823739051818848
    5. ' list' → logprob: -5.448739051818848
    6. 'tuple' → logprob: -5.823739051818848
    7. '[' → logprob: -5.948739051818848
    8. 'lambda' → logprob: -6.448739051818848
    9. 'map' → logprob: -6.448739051818848
    10. '[(' → logprob: -6.948739051818848

Token 458: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0001720742875477299
    2. '(' → logprob: -9.750171661376953
    3. 'range' → logprob: -9.750171661376953
    4. '(it' → logprob: -9.875171661376953
    5. '(
' → logprob: -13.125171661376953
    6. '(iter' → logprob: -14.125171661376953
    7. 'it' → logprob: -14.125171661376953
    8. '((' → logprob: -16.000171661376953
    9. '(*' → logprob: -16.500171661376953
    10. '(count' → logprob: -16.500171661376953

Token 459: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4741881787776947
    2. '(r' → logprob: -0.9741882085800171
    3. '(' → logprob: -9.474187850952148
    4. 'r' → logprob: -10.974187850952148
    5. 'n' → logprob: -11.349187850952148
    6. '(k' → logprob: -13.099187850952148
    7. '((' → logprob: -14.224187850952148
    8. '1' → logprob: -14.599187850952148
    9. '(i' → logprob: -14.599187850952148
    10. '(
' → logprob: -14.724187850952148

Token 460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.588993489742279
    2. '-r' → logprob: -1.2139935493469238
    3. '-' → logprob: -2.463993549346924
    4. ' -' → logprob: -2.963993549346924
    5. ',r' → logprob: -4.963993549346924
    6. 'r' → logprob: -5.838993549346924
    7. ' ,' → logprob: -7.713993549346924
    8. ',n' → logprob: -7.838993549346924
    9. '   ' → logprob: -8.463993072509766
    10. '),' → logprob: -8.588993072509766

Token 461: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.6537622034084052e-05
    2. '   ' → logprob: -11.25002670288086
    3. ' n' → logprob: -11.62502670288086
    4. '(n' → logprob: -13.00002670288086
    5. ' ' → logprob: -14.12502670288086
    6. '
' → logprob: -15.25002670288086
    7. '    ' → logprob: -15.50002670288086
    8. '	n' → logprob: -15.62502670288086
    9. '     ' → logprob: -16.00002670288086
    10. '  ' → logprob: -16.25002670288086

Token 462: ' -' (ID: 533)
  Prédit: '-r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.2057109922170639
    2. ' -' → logprob: -2.2057108879089355
    3. '-' → logprob: -2.5807108879089355
    4. '-n' → logprob: -11.080711364746094
    5. '   ' → logprob: -11.705711364746094
    6. ' ' → logprob: -12.830711364746094
    7. '```' → logprob: -12.955711364746094
    8. '-re' → logprob: -13.205711364746094
    9. '-risk' → logprob: -13.455711364746094
    10. '-t' → logprob: -13.830711364746094

Token 463: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.8624639324116288e-06
    2. ' r' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.125001907348633
    4. '1' → logprob: -19.250001907348633
    5. '	r' → logprob: -21.125001907348633
    6. ' ' → logprob: -21.875001907348633
    7. '
' → logprob: -21.875001907348633
    8. '-r' → logprob: -22.250001907348633
    9. '  ' → logprob: -22.625001907348633
    10. '```' → logprob: -22.875001907348633

Token 464: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.873571692267433e-05
    2. ',-' → logprob: -9.625068664550781
    3. ' ,' → logprob: -13.000068664550781
    4. ' ,-' → logprob: -15.875068664550781
    5. '   ' → logprob: -16.12506866455078
    6. ',
' → logprob: -16.62506866455078
    7. ',None' → logprob: -17.37506866455078
    8. '-' → logprob: -17.50006866455078
    9. ',r' → logprob: -17.75006866455078
    10. '```' → logprob: -18.25006866455078

Token 465: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00671584764495492
    2. ' -' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.756715774536133
    4. '```' → logprob: -16.256715774536133
    5. '-step' → logprob: -16.256715774536133
    6. ' ' → logprob: -16.881715774536133
    7. '1' → logprob: -17.381715774536133
    8. '-ħ' → logprob: -17.506715774536133
    9. '  ' → logprob: -17.631715774536133
    10. '-m' → logprob: -17.756715774536133

Token 466: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -17.375
    4. '   ' → logprob: -18.0
    5. '
' → logprob: -18.75
    6. ')' → logprob: -19.625
    7. '１' → logprob: -19.9375
    8. '

' → logprob: -20.0625
    9. '  ' → logprob: -20.375
    10. '১' → logprob: -20.375

Token 467: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.003921076189726591
    2. ',' → logprob: -5.628921031951904
    3. ' ),' → logprob: -9.003921508789062
    4. ')' → logprob: -9.503921508789062
    5. '   ' → logprob: -9.753921508789062
    6. '),
' → logprob: -10.003921508789062
    7. '),(' → logprob: -11.628921508789062
    8. ',),' → logprob: -12.378921508789062
    9. ' ,' → logprob: -13.253921508789062
    10. ' ' → logprob: -13.628921508789062

Token 468: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06197004392743111
    2. ' range' → logprob: -2.8119699954986572
    3. '(range' → logprob: -13.061969757080078
    4. '    ' → logprob: -15.811969757080078
    5. '	range' → logprob: -15.936969757080078
    6. 'map' → logprob: -17.686969757080078
    7. ' ' → logprob: -19.811969757080078
    8. '   ' → logprob: -19.811969757080078
    9. 'Range' → logprob: -20.561969757080078
    10. ' map' → logprob: -20.686969757080078

Token 469: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018911674851551652
    2. '1' → logprob: -8.625188827514648
    3. '(r' → logprob: -11.625188827514648
    4. '```' → logprob: -15.500188827514648
    5. 'from' → logprob: -16.00018882751465
    6. 'r' → logprob: -16.50018882751465
    7. ' (' → logprob: -16.50018882751465
    8. '(
' → logprob: -17.12518882751465
    9. '   ' → logprob: -17.87518882751465
    10. '	' → logprob: -18.00018882751465

Token 470: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010592726175673306
    2. '(' → logprob: -9.875105857849121
    3. 'r' → logprob: -9.875105857849121
    4. '(r' → logprob: -13.875105857849121
    5. ' ' → logprob: -14.125105857849121
    6. '   ' → logprob: -14.500105857849121
    7. '```' → logprob: -14.875105857849121
    8. '2' → logprob: -15.875105857849121
    9. '	' → logprob: -17.062606811523438
    10. ' r' → logprob: -17.312606811523438

Token 471: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09383444488048553
    2. 'r' → logprob: -2.843834400177002
    3. ',r' → logprob: -3.468834400177002
    4. ' ,' → logprob: -8.71883487701416
    5. '1' → logprob: -10.71883487701416
    6. ' r' → logprob: -11.46883487701416
    7. '(r' → logprob: -12.21883487701416
    8. '```' → logprob: -12.34383487701416
    9. '   ' → logprob: -13.09383487701416
    10. ',
' → logprob: -13.21883487701416

Token 472: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0017025562701746821
    2. ' r' → logprob: -6.376702785491943
    3. ' ' → logprob: -15.751702308654785
    4. '	r' → logprob: -16.1267032623291
    5. '   ' → logprob: -16.5017032623291
    6. '(r' → logprob: -17.1267032623291
    7. '  ' → logprob: -17.5017032623291
    8. '<|end|>' → logprob: -17.5017032623291
    9. '1' → logprob: -18.3767032623291
    10. ',' → logprob: -18.7517032623291

Token 473: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2746153473854065
    2. ',' → logprob: -2.1496152877807617
    3. ' +' → logprob: -2.2746152877807617
    4. '+r' → logprob: -4.149615287780762
    5. ',r' → logprob: -5.774615287780762
    6. 'r' → logprob: -7.274615287780762
    7. ' ,' → logprob: -7.774615287780762
    8. ' r' → logprob: -7.899615287780762
    9. ' ' → logprob: -9.024615287780762
    10. '```' → logprob: -9.274615287780762

Token 474: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017426691949367523
    2. '+' → logprob: -4.642426490783691
    3. ' ' → logprob: -5.142426490783691
    4. 'r' → logprob: -7.267426490783691
    5. '```' → logprob: -7.767426490783691
    6. ')' → logprob: -8.267426490783691
    7. ' r' → logprob: -8.517426490783691
    8. ' +' → logprob: -8.892426490783691
    9. '+r' → logprob: -10.892426490783691
    10. '   ' → logprob: -10.892426490783691

Token 475: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007794944569468498
    2. ')' → logprob: -5.0077948570251465
    3. '))
' → logprob: -7.3827948570251465
    4. ')):' → logprob: -8.882795333862305
    5. '):' → logprob: -9.257795333862305
    6. '),' → logprob: -9.507795333862305
    7. ')):
' → logprob: -9.757795333862305
    8. ',' → logprob: -10.382795333862305
    9. '):
' → logprob: -10.757795333862305
    10. ' ))' → logprob: -10.882795333862305

Token 476: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009691067971289158
    2. ')' → logprob: -7.625968933105469
    3. ',' → logprob: -8.125968933105469
    4. ' return' → logprob: -10.125968933105469
    5. 'def' → logprob: -10.125968933105469
    6. 'result' → logprob: -10.375968933105469
    7. 'return' → logprob: -11.000968933105469
    8. ' result' → logprob: -11.125968933105469
    9. '    
' → logprob: -11.375968933105469
    10. '):' → logprob: -12.125968933105469

Token 477: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10313928127288818
    2. 'res' → logprob: -2.8531394004821777
    3. 'result' → logprob: -3.4781394004821777
    4. ' res' → logprob: -5.478139400482178
    5. 'prod' → logprob: -6.853139400482178
    6. ' result' → logprob: -6.978139400482178
    7. 'return' (adapté à ' return') → logprob: -7.103139400482178
    8. 'acc' → logprob: -7.728139400482178
    9. 'val' → logprob: -7.853139400482178
    10. 'ans' → logprob: -7.853139400482178

Token 478: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.07408270239830017
    2. 'ft' → logprob: -3.574082612991333
    3. 'fun' → logprob: -3.824082612991333
    4. ' reduce' → logprob: -4.199082851409912
    5. ' functools' → logprob: -5.574082851409912
    6. ' ft' → logprob: -6.699082851409912
    7. ' ' → logprob: -7.324082851409912
    8. '   ' → logprob: -8.449082374572754
    9. '(ft' → logprob: -8.699082374572754
    10. 'sum' → logprob: -9.199082374572754

Token 479: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0008359544444829226
    2. '(' → logprob: -7.25083589553833
    3. '(
' → logprob: -9.125836372375488
    4. '(op' → logprob: -11.375836372375488
    5. ' (' → logprob: -13.250836372375488
    6. '(mod' → logprob: -13.875836372375488
    7. '   ' → logprob: -14.125836372375488
    8. '((' → logprob: -14.250836372375488
    9. '(operator' → logprob: -14.750836372375488
    10. 'lambda' → logprob: -15.000836372375488

Token 480: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.7187544107437134
    2. 'x' → logprob: -1.3437544107437134
    3. ' acc' → logprob: -1.7187544107437134
    4. 'a' → logprob: -3.093754291534424
    5. 'lambda' → logprob: -4.093754291534424
    6. ' x' → logprob: -5.343754291534424
    7. ' lambda' → logprob: -5.718754291534424
    8. '   ' → logprob: -6.843754291534424
    9. ' a' → logprob: -7.468754291534424
    10. 'ac' → logprob: -8.968754768371582

Token 481: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03323435038328171
    2. 'acc' → logprob: -3.6582343578338623
    3. ' acc' → logprob: -5.033234119415283
    4. '(acc' → logprob: -9.033234596252441
    5. 'x' → logprob: -9.158234596252441
    6. ' ,' → logprob: -9.658234596252441
    7. 'a' → logprob: -10.283234596252441
    8. ' x' → logprob: -10.658234596252441
    9. '   ' → logprob: -11.408234596252441
    10. ',x' → logprob: -11.783234596252441

Token 482: ' tpl' (ID: 138784)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2727614939212799
    2. 'xy' → logprob: -1.7727614641189575
    3. 't' → logprob: -3.647761583328247
    4. 'pair' → logprob: -4.397761344909668
    5. 'acc' → logprob: -5.272761344909668
    6. 'pr' → logprob: -5.397761344909668
    7. 'nr' → logprob: -5.522761344909668
    8. ' x' → logprob: -5.647761344909668
    9. 'p' → logprob: -5.647761344909668
    10. 'tp' → logprob: -5.897761344909668

Token 483: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009425500174984336
    2. ',' → logprob: -7.375942707061768
    3. ' :' → logprob: -8.12594223022461
    4. 'acc' → logprob: -11.62594223022461
    5. '(acc' → logprob: -12.00094223022461
    6. ' acc' → logprob: -12.75094223022461
    7. ':
' → logprob: -14.00094223022461
    8. '   ' → logprob: -14.87594223022461
    9. ':return' → logprob: -15.25094223022461
    10. ' ,' → logprob: -15.75094223022461

Token 484: ' acc' (ID: 1259)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6599754095077515
    2. '(acc' → logprob: -0.7849754095077515
    3. ' acc' → logprob: -3.784975528717041
    4. 'acc' → logprob: -5.784975528717041
    5. '   ' → logprob: -6.909975528717041
    6. '(ac' → logprob: -9.284975051879883
    7. '(op' → logprob: -10.284975051879883
    8. '(' → logprob: -10.409975051879883
    9. '       ' → logprob: -11.534975051879883
    10. '  ' → logprob: -11.784975051879883

Token 485: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6363222002983093
    2. ' *' → logprob: -0.7613222002983093
    3. ',' → logprob: -5.761322021484375
    4. ':' → logprob: -8.886322021484375
    5. '*(' → logprob: -8.886322021484375
    6. ' (' → logprob: -9.386322021484375
    7. ' ' → logprob: -9.386322021484375
    8. '(' → logprob: -10.636322021484375
    9. '   ' → logprob: -11.136322021484375
    10. '```' → logprob: -11.136322021484375

Token 486: ' tpl' (ID: 138784)
  Prédit: 'tpl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tpl' → logprob: -0.006125260144472122
    2. '(t' → logprob: -6.256125450134277
    3. ' tpl' → logprob: -6.631125450134277
    4. 'mod' → logprob: -6.756125450134277
    5. 'pow' → logprob: -7.381125450134277
    6. '(mod' → logprob: -7.756125450134277
    7. '(tp' → logprob: -9.006125450134277
    8. '(op' → logprob: -9.006125450134277
    9. ' (' → logprob: -9.131125450134277
    10. 'tmpl' → logprob: -9.756125450134277

Token 487: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011326150968670845
    2. '0' → logprob: -4.511326313018799
    3. '(' → logprob: -8.76132583618164
    4. '```' → logprob: -10.88632583618164
    5. 'op' → logprob: -11.13632583618164
    6. 'mod' → logprob: -11.51132583618164
    7. ' [' → logprob: -11.63632583618164
    8. ' ' → logprob: -11.76132583618164
    9. '
' → logprob: -12.38632583618164
    10. '   ' → logprob: -12.57382583618164

Token 488: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -14.250001907348633
    3. '[' → logprob: -14.750001907348633
    4. '```' → logprob: -15.125001907348633
    5. '   ' → logprob: -15.625001907348633
    6. '
' → logprob: -16.875001907348633
    7. '1' → logprob: -17.062501907348633
    8. '00' → logprob: -17.812501907348633
    9. 'mod' → logprob: -18.000001907348633
    10. '    ' → logprob: -18.187501907348633

Token 489: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.17205579578876495
    2. '*' → logprob: -2.422055721282959
    3. '%' → logprob: -2.922055721282959
    4. ' %' → logprob: -4.172055721282959
    5. '   ' → logprob: -10.047056198120117
    6. ' ' → logprob: -10.422056198120117
    7. '```' → logprob: -12.922056198120117
    8. 'mod' → logprob: -13.297056198120117
    9. '  ' → logprob: -14.047056198120117
    10. '    ' → logprob: -14.172056198120117

Token 490: ' *' (ID: 425)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16033978760242462
    2. '%' → logprob: -1.9103398323059082
    3. ' *' → logprob: -9.41033935546875
    4. '%n' → logprob: -12.03533935546875
    5. '%c' → logprob: -12.03533935546875
    6. '*' → logprob: -12.16033935546875
    7. ',' → logprob: -12.16033935546875
    8. ' %=' → logprob: -13.28533935546875
    9. '%x' → logprob: -13.41033935546875
    10. ' ' → logprob: -13.41033935546875

Token 491: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00039468807517550886
    2. ' mod' → logprob: -8.000394821166992
    3. 'pow' → logprob: -9.750394821166992
    4. '   ' → logprob: -15.000394821166992
    5. '(mod' → logprob: -15.125394821166992
    6. '           ' → logprob: -15.625394821166992
    7. '	mod' → logprob: -15.750394821166992
    8. ' pow' → logprob: -17.125394821166992
    9. '       ' → logprob: -17.375394821166992
    10. '               ' → logprob: -18.875394821166992

Token 492: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -9.329167369287461e-05
    2. 'pow' → logprob: -10.000093460083008
    3. 'mod' → logprob: -10.875093460083008
    4. '_inv' → logprob: -11.000093460083008
    5. ' inv' → logprob: -11.625093460083008
    6. 'inverse' → logprob: -14.250093460083008
    7. '   ' → logprob: -14.375093460083008
    8. 'in' → logprob: -14.375093460083008
    9. '(inv' → logprob: -15.000093460083008
    10. '*' → logprob: -15.750093460083008

Token 493: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.010194925591349602
    2. '(' → logprob: -4.760194778442383
    3. 'tpl' → logprob: -6.635194778442383
    4. '_tpl' → logprob: -9.135194778442383
    5. '(
' → logprob: -9.760194778442383
    6. ' (' → logprob: -10.260194778442383
    7. ' tpl' → logprob: -10.635194778442383
    8. '(tp' → logprob: -11.385194778442383
    9. '	t' → logprob: -12.135194778442383
    10. 't' → logprob: -12.385194778442383

Token 494: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.0001831565605243668
    2. '(t' → logprob: -9.75018310546875
    3. '(' → logprob: -10.00018310546875
    4. 'p' → logprob: -10.12518310546875
    5. '(pl' → logprob: -10.75018310546875
    6. '[' → logprob: -12.00018310546875
    7. 'l' → logprob: -12.50018310546875
    8. 'lp' → logprob: -12.75018310546875
    9. '(l' → logprob: -13.50018310546875
    10. '(p' → logprob: -14.12518310546875

Token 495: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.162282367469743e-05
    2. '(' → logprob: -10.250091552734375
    3. 'tpl' → logprob: -10.250091552734375
    4. '```' → logprob: -12.375091552734375
    5. '(t' → logprob: -12.500091552734375
    6. '1' → logprob: -13.125091552734375
    7. '_tpl' → logprob: -13.375091552734375
    8. '(
' → logprob: -13.875091552734375
    9. '(lambda' → logprob: -14.125091552734375
    10. ')' → logprob: -14.125091552734375

Token 496: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.12500286102295
    3. '```' → logprob: -14.87500286102295
    4. '   ' → logprob: -15.75000286102295
    5. '-' → logprob: -16.500001907348633
    6. ' ' → logprob: -16.625001907348633
    7. '0' → logprob: -16.750001907348633
    8. '(' → logprob: -16.750001907348633
    9. 'tpl' → logprob: -18.187501907348633
    10. '``' → logprob: -18.250001907348633

Token 497: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021557629224844277
    2. '(mod' → logprob: -9.000215530395508
    3. 'mod' → logprob: -9.500215530395508
    4. ' ,' → logprob: -11.375215530395508
    5. ',
' → logprob: -12.250215530395508
    6. ' mod' → logprob: -14.250215530395508
    7. ',module' → logprob: -16.500215530395508
    8. '```' → logprob: -16.500215530395508
    9. '   ' → logprob: -16.625215530395508
    10. '[' → logprob: -16.875215530395508

Token 498: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -8.494741632603109e-05
    2. ' mod' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.000085830688477
    4. '	mod' → logprob: -17.500085830688477
    5. '(mod' → logprob: -18.625085830688477
    6. '           ' → logprob: -18.625085830688477
    7. '    ' → logprob: -19.375085830688477
    8. '       ' → logprob: -19.375085830688477
    9. 'MOD' → logprob: -19.625085830688477
    10. 'm' → logprob: -20.125085830688477

Token 499: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009225545451045036
    2. ',' → logprob: -4.759225368499756
    3. '),' → logprob: -8.509225845336914
    4. ' )' → logprob: -9.009225845336914
    5. ')%' → logprob: -9.134225845336914
    6. '(mod' → logprob: -9.634225845336914
    7. 'mod' → logprob: -10.009225845336914
    8. ')
' → logprob: -10.259225845336914
    9. '   ' → logprob: -11.134225845336914
    10. '))' → logprob: -12.884225845336914

Token 500: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16023245453834534
    2. '%' → logprob: -1.910232424736023
    3. ',' → logprob: -12.535232543945312
    4. '   ' → logprob: -13.285232543945312
    5. ' %=' → logprob: -13.910232543945312
    6. ' ' → logprob: -14.160232543945312
    7. '%c' → logprob: -15.285232543945312
    8. ')' → logprob: -15.285232543945312
    9. '```' → logprob: -15.785232543945312
    10. ' `%' → logprob: -15.910232543945312

Token 501: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0005537479883059859
    2. ' mod' → logprob: -7.500553607940674
    3. '(mod' → logprob: -14.125554084777832
    4. '	mod' → logprob: -17.750553131103516
    5. ' ' → logprob: -19.125553131103516
    6. '   ' → logprob: -19.500553131103516
    7. 'm' → logprob: -19.875553131103516
    8. '```' → logprob: -20.250553131103516
    9. '  ' → logprob: -21.250553131103516
    10. ' мод' → logprob: -21.375553131103516

Token 502: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010032742284238338
    2. ' ,' → logprob: -7.251003265380859
    3. ')' → logprob: -8.50100326538086
    4. '),' → logprob: -9.62600326538086
    5. ',
' → logprob: -11.62600326538086
    6. ' ' → logprob: -12.25100326538086
    7. '   ' → logprob: -12.37600326538086
    8. '  ' → logprob: -13.12600326538086
    9. 'mod' → logprob: -14.12600326538086
    10. ' )' → logprob: -14.62600326538086

Token 503: ' ts' (ID: 6601)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.06204409524798393
    2. ' ts' → logprob: -2.812044143676758
    3. '   ' → logprob: -9.687044143676758
    4. '	ts' → logprob: -11.687044143676758
    5. '    ' → logprob: -13.812044143676758
    6. '(ts' → logprob: -14.187044143676758
    7. '           ' → logprob: -14.312044143676758
    8. '            ' → logprob: -14.312044143676758
    9. '        ' → logprob: -14.687044143676758
    10. ' ' → logprob: -14.687044143676758

Token 504: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6405310816480778e-05
    2. ' ,' → logprob: -11.125016212463379
    3. ')' → logprob: -14.000016212463379
    4. ',
' → logprob: -14.125016212463379
    5. '0' → logprob: -17.875017166137695
    6. '<|end|>' → logprob: -18.000017166137695
    7. '1' → logprob: -18.125017166137695
    8. '),' → logprob: -18.750017166137695
    9. '   ' → logprob: -19.000017166137695
    10. 'import' → logprob: -19.250017166137695

Token 505: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.250001907348633
    4. '  ' → logprob: -19.875001907348633
    5. '    ' → logprob: -22.875001907348633
    6. '       ' → logprob: -22.875001907348633
    7. '```' → logprob: -22.875001907348633
    8. '۱' → logprob: -23.000001907348633
    9. '     ' → logprob: -23.875001907348633
    10. '`' → logprob: -23.875001907348633

Token 506: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -20.5
    4. '```' → logprob: -22.375
    5. '۱' → logprob: -23.0
    6. '`' → logprob: -23.0
    7. '  ' → logprob: -23.25
    8. '１' → logprob: -23.875
    9. 'def' → logprob: -24.25
    10. '(' → logprob: -24.4375

Token 507: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.250000953674316
    3. ')
' → logprob: -15.500000953674316
    4. ')return' → logprob: -18.375
    5. ')`' → logprob: -20.0
    6. ')#' → logprob: -20.0
    7. ')}' → logprob: -20.125
    8. '))' → logprob: -20.125
    9. ')

' → logprob: -20.25
    10. '),' → logprob: -20.375

Token 508: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2148343175649643
    2. '
' → logprob: -2.714834213256836
    3. '<|end|>' → logprob: -2.714834213256836
    4. '#' → logprob: -3.589834213256836
    5. '```' → logprob: -4.714834213256836
    6. '(' → logprob: -4.839834213256836
    7. ':' → logprob: -5.089834213256836
    8. '<|end|>' → logprob: -6.339834213256836
    9. 'def' → logprob: -6.589834213256836
    10. '%' → logprob: -6.589834213256836

Token 509: ' mod' (ID: 1812)
  Prédit: ' pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pow' → logprob: -0.7231451869010925
    2. ' power' → logprob: -2.0981452465057373
    3. ' main' → logprob: -2.2231452465057373
    4. 'pow' → logprob: -2.2231452465057373
    5. ' mod' → logprob: -2.7231452465057373
    6. ' permutations' → logprob: -4.598145008087158
    7. ' perm' → logprob: -4.723145008087158
    8. ' solve' → logprob: -4.848145008087158
    9. ' bin' → logprob: -4.848145008087158
    10. 'main' → logprob: -5.098145008087158

Token 510: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.09748317301273346
    2. 'exp' → logprob: -2.4724831581115723
    3. 'mul' → logprob: -5.597483158111572
    4. 'inv' → logprob: -5.972483158111572
    5. '_pow' → logprob: -6.347483158111572
    6. '_mul' → logprob: -8.84748363494873
    7. '_exp' → logprob: -9.09748363494873
    8. 'add' → logprob: -9.34748363494873
    9. '_add' → logprob: -9.97248363494873
    10. 'prod' → logprob: -11.09748363494873

Token 511: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.018846945837140083
    2. '(base' → logprob: -4.0188469886779785
    3. '(' → logprob: -7.6438469886779785
    4. '(b' → logprob: -8.89384651184082
    5. '(x' → logprob: -10.26884651184082
    6. '(n' → logprob: -10.51884651184082
    7. ' (' → logprob: -11.26884651184082
    8. '(p' → logprob: -13.01884651184082
    9. '(q' → logprob: -13.39384651184082
    10. '(pow' → logprob: -14.51884651184082

Token 512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.633853652398102e-05
    2. ' ,' → logprob: -10.500056266784668
    3. ',a' → logprob: -11.250056266784668
    4. ',n' → logprob: -11.750056266784668
    5. '<|end|>' → logprob: -12.750056266784668
    6. ')' → logprob: -13.375056266784668
    7. 'a' → logprob: -14.375056266784668
    8. ',b' → logprob: -14.750056266784668
    9. ',
' → logprob: -14.875056266784668
    10. ',k' → logprob: -15.000056266784668

Token 513: ' n' (ID: 297)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00018768629524856806
    2. ' b' → logprob: -8.750187873840332
    3. 'n' → logprob: -10.625187873840332
    4. 'p' → logprob: -12.875187873840332
    5. 'x' → logprob: -13.375187873840332
    6. 'k' → logprob: -14.875187873840332
    7. 'm' → logprob: -15.500187873840332
    8. 'e' → logprob: -15.500187873840332
    9. ' ' → logprob: -17.000186920166016
    10. 'mod' → logprob: -17.000186920166016

Token 514: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.848420551046729e-05
    2. ' ,' → logprob: -9.8750581741333
    3. ',a' → logprob: -13.0000581741333
    4. ',n' → logprob: -13.5000581741333
    5. ',
' → logprob: -13.8750581741333
    6. '):' → logprob: -14.6250581741333
    7. ',b' → logprob: -14.8750581741333
    8. ' ' → logprob: -15.6250581741333
    9. '_,' → logprob: -15.6250581741333
    10. 's' → logprob: -16.000059127807617

Token 515: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1012234166264534
    2. 'm' → logprob: -2.3512234687805176
    3. ' mod' → logprob: -6.976223468780518
    4. ' m' → logprob: -9.97622299194336
    5. 'b' → logprob: -10.47622299194336
    6. 'MOD' → logprob: -12.60122299194336
    7. 'p' → logprob: -12.72622299194336
    8. 'mo' → logprob: -15.35122299194336
    9. '	mod' → logprob: -15.60122299194336
    10. ' ' → logprob: -15.60122299194336

Token 516: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011946874670684338
    2. '=' → logprob: -4.636946678161621
    3. ',' → logprob: -6.511946678161621
    4. '):
' → logprob: -7.386946678161621
    5. ')' → logprob: -9.761946678161621
    6. ' ):' → logprob: -12.011946678161621
    7. ':' → logprob: -12.136946678161621
    8. '):
' → logprob: -12.261946678161621
    9. '=None' → logprob: -12.511946678161621
    10. ')=' → logprob: -13.136946678161621

Token 517: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030182812362909317
    2. '   ' → logprob: -3.6551828384399414
    3. '=' → logprob: -6.655182838439941
    4. ':
' → logprob: -7.030182838439941
    5. 'return' → logprob: -7.405182838439941
    6. 'result' → logprob: -8.155182838439941
    7. 'a' → logprob: -8.155182838439941
    8. ' :' → logprob: -8.405182838439941
    9. ':return' → logprob: -9.030182838439941
    10. '):' → logprob: -10.155182838439941

Token 518: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1532333940267563
    2. 'r' → logprob: -2.653233289718628
    3. 'return' → logprob: -3.403233289718628
    4. 'res' → logprob: -3.653233289718628
    5. 'pow' → logprob: -4.403233528137207
    6. '   ' → logprob: -9.153233528137207
    7. ' result' → logprob: -10.278233528137207
    8. '0' → logprob: -10.653233528137207
    9. '```' → logprob: -10.903233528137207
    10. 'p' → logprob: -11.528233528137207

Token 519: ' Ex' (ID: 1771)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.007290700450539589
    2. 'res' → logprob: -5.507290840148926
    3. 'r' → logprob: -6.007290840148926
    4. 'pow' → logprob: -8.132290840148926
    5. 'def' → logprob: -8.507290840148926
    6. ' result' → logprob: -9.007290840148926
    7. 'return' → logprob: -9.132290840148926
    8. '   ' → logprob: -12.132290840148926
    9. ' res' → logprob: -12.507290840148926
    10. '0' → logprob: -12.757290840148926

Token 520: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.009694354608654976
    2. 'p' → logprob: -5.134694576263428
    3. 'ponential' → logprob: -6.259694576263428
    4. 'def' → logprob: -7.509694576263428
    5. 'pow' → logprob: -7.884694576263428
    6. 'pon' → logprob: -8.13469409942627
    7. '```' → logprob: -8.13469409942627
    8. '
' → logprob: -9.00969409942627
    9. '   ' → logprob: -9.25969409942627
    10. '**' → logprob: -10.75969409942627

Token 521: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -0.4281933307647705
    2. '   ' → logprob: -1.5531933307647705
    3. 'def' → logprob: -2.5531933307647705
    4. ' def' → logprob: -3.6781933307647705
    5. ')' → logprob: -4.928193092346191
    6. '       ' → logprob: -4.928193092346191
    7. '=' → logprob: -5.428193092346191
    8. '```' → logprob: -5.553193092346191
    9. 'a' → logprob: -6.053193092346191
    10. '(a' → logprob: -6.428193092346191

Token 522: ' by' (ID: 656)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0010400752071291208
    2. '(' → logprob: -7.001039981842041
    3. 'def' → logprob: -9.3760404586792
    4. '(
' → logprob: -10.7510404586792
    5. '(base' → logprob: -12.3760404586792
    6. ' (' → logprob: -12.5010404586792
    7. '   ' → logprob: -12.6260404586792
    8. ')' → logprob: -12.8760404586792
    9. '_pow' → logprob: -12.8760404586792
    10. '):' → logprob: -13.5010404586792

Token 523: ' squ' (ID: 14685)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28582116961479187
    2. 'mod' → logprob: -1.7858211994171143
    3. 'iter' → logprob: -3.7858211994171143
    4. 'b' → logprob: -4.160820960998535
    5. 'sq' → logprob: -4.285820960998535
    6. 'pow' → logprob: -4.535820960998535
    7. 'def' → logprob: -5.285820960998535
    8. '
' → logprob: -6.035820960998535
    9. 'square' → logprob: -6.285820960998535
    10. 'a' → logprob: -6.410820960998535

Token 524: 'aring' (ID: 4115)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.5856167078018188
    2. 'aring' → logprob: -0.8356167078018188
    3. 'ared' → logprob: -5.210616588592529
    4. 're' → logprob: -5.835616588592529
    5. 'a' → logprob: -7.710616588592529
    6. 'ar' → logprob: -8.335617065429688
    7. '```' → logprob: -8.585617065429688
    8. 'ares' → logprob: -9.210617065429688
    9. '**' → logprob: -9.335617065429688
    10. 'ere' → logprob: -10.085617065429688

Token 525: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0062067704275250435
    2. ':' → logprob: -5.88120698928833
    3. 'def' → logprob: -6.63120698928833
    4. '   ' → logprob: -7.00620698928833
    5. '(' → logprob: -7.00620698928833
    6. '):' → logprob: -9.131206512451172
    7. 'a' → logprob: -10.256206512451172
    8. ' (' → logprob: -10.381206512451172
    9. ',' → logprob: -11.006206512451172
    10. ' def' → logprob: -11.006206512451172

Token 526: ' abusing' (ID: 168717)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31883567571640015
    2. 'b' → logprob: -1.818835735321045
    3. 'result' → logprob: -3.193835735321045
    4. '   ' → logprob: -3.443835735321045
    5. ' b' → logprob: -3.943835735321045
    6. ' def' → logprob: -4.943835735321045
    7. ' result' → logprob: -5.318835735321045
    8. 'res' → logprob: -5.943835735321045
    9. ' res' → logprob: -6.568835735321045
    10. 'd' → logprob: -7.443835735321045

Token 527: ' reduce' (ID: 10389)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7310300469398499
    2. 'pow' → logprob: -1.231029987335205
    3. 'op' → logprob: -2.356029987335205
    4. 'operator' → logprob: -3.356029987335205
    5. 'tail' → logprob: -3.856029987335205
    6. '   ' → logprob: -4.231029987335205
    7. 'def' → logprob: -4.606029987335205
    8. 'lambda' → logprob: -4.731029987335205
    9. 'bin' → logprob: -5.356029987335205
    10. 'bits' → logprob: -5.356029987335205

Token 528: ' and' (ID: 326)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.02407442405819893
    2. '(' → logprob: -4.399074554443359
    3. ',' → logprob: -5.399074554443359
    4. '(
' → logprob: -6.399074554443359
    5. 'def' → logprob: -6.649074554443359
    6. '   ' → logprob: -6.774074554443359
    7. ')' → logprob: -6.899074554443359
    8. 'lambda' → logprob: -7.649074554443359
    9. '=lambda' → logprob: -8.14907455444336
    10. '(operator' → logprob: -8.27407455444336

Token 529: ' itertools' (ID: 103178)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.15828563272953033
    2. 'partial' → logprob: -2.658285617828369
    3. 'operator' → logprob: -3.783285617828369
    4. 'pow' → logprob: -3.783285617828369
    5. 'op' → logprob: -3.908285617828369
    6. 'ft' → logprob: -6.158285617828369
    7. 'filter' → logprob: -6.158285617828369
    8. 'fun' → logprob: -6.533285617828369
    9. '(lambda' → logprob: -6.533285617828369
    10. 'iter' → logprob: -7.283285617828369

Token 530: '
' (ID: 198)
  Prédit: '.acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.acc' → logprob: -0.15623442828655243
    2. '.chain' → logprob: -2.0312345027923584
    3. '.repeat' → logprob: -5.281234264373779
    4. '.count' → logprob: -5.656234264373779
    5. '.reduce' → logprob: -6.781234264373779
    6. 'acc' → logprob: -6.906234264373779
    7. '(acc' → logprob: -7.406234264373779
    8. '.c' → logprob: -7.656234264373779
    9. '   ' → logprob: -8.031234741210938
    10. '.product' → logprob: -8.156234741210938

Token 531: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025523616932332516
    2. 'def' → logprob: -6.252552509307861
    3. ':' → logprob: -8.377552032470703
    4. ',' → logprob: -9.002552032470703
    5. ' for' → logprob: -9.627552032470703
    6. ' def' → logprob: -10.127552032470703
    7. ' return' → logprob: -10.502552032470703
    8. '(' → logprob: -10.877552032470703
    9. '```' → logprob: -11.127552032470703
    10. 'import' → logprob: -11.377552032470703

Token 532: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1650238186120987
    2. 'res' → logprob: -2.2900238037109375
    3. 'return' → logprob: -3.7900238037109375
    4. 'r' → logprob: -3.7900238037109375
    5. 'def' → logprob: -5.4150238037109375
    6. 's' → logprob: -8.040023803710938
    7. 'if' → logprob: -8.540023803710938
    8. '   ' → logprob: -8.790023803710938
    9. ' result' → logprob: -9.165023803710938
    10. 'base' → logprob: -9.415023803710938

Token 533: ' Not' (ID: 4037)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6848695874214172
    2. 'r' → logprob: -0.8098695874214172
    3. 'res' → logprob: -3.1848695278167725
    4. 'return' → logprob: -5.809869766235352
    5. ' result' → logprob: -6.309869766235352
    6. 'def' → logprob: -6.934869766235352
    7. '   ' → logprob: -6.934869766235352
    8. 'if' → logprob: -7.059869766235352
    9. ' r' → logprob: -7.184869766235352
    10. ' res' → logprob: -7.934869766235352

Token 534: ' at' (ID: 540)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.90558260679245
    2. 'return' → logprob: -1.6555826663970947
    3. 'def' → logprob: -2.0305826663970947
    4. ' a' → logprob: -2.4055826663970947
    5. ' return' → logprob: -2.7805826663970947
    6. 'pow' → logprob: -3.7805826663970947
    7. ' (' → logprob: -4.155582427978516
    8. 'n' → logprob: -4.155582427978516
    9. '(a' → logprob: -4.280582427978516
    10. '(' → logprob: -4.530582427978516

Token 535: ' all' (ID: 722)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9790490865707397
    2. 'a' → logprob: -1.2290490865707397
    3. 'pow' → logprob: -1.4790490865707397
    4. 'return' → logprob: -3.4790492057800293
    5. 'lambda' → logprob: -4.104049205780029
    6. 'while' → logprob: -4.229049205780029
    7. 'for' → logprob: -5.104049205780029
    8. '```' → logprob: -5.729049205780029
    9. 'import' → logprob: -5.854049205780029
    10. ' a' → logprob: -6.104049205780029

Token 536: ' optimal' (ID: 24174)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8313905000686646
    2. 'pow' → logprob: -1.5813905000686646
    3. 'a' → logprob: -2.206390380859375
    4. 'implemented' → logprob: -3.206390380859375
    5. 'using' → logprob: -3.456390380859375
    6. 'complete' → logprob: -3.831390380859375
    7. '   ' → logprob: -3.956390380859375
    8. 'finished' → logprob: -3.956390380859375
    9. 'efficient' → logprob: -4.206390380859375
    10. 'optimized' → logprob: -4.331390380859375

Token 537: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8431978225708008
    2. ':' → logprob: -1.4681978225708008
    3. 'def' → logprob: -1.7181978225708008
    4. '(a' → logprob: -3.093197822570801
    5. ',' → logprob: -3.468197822570801
    6. '(' → logprob: -3.718197822570801
    7. '):' → logprob: -3.718197822570801
    8. ' for' → logprob: -4.968197822570801
    9. '.' → logprob: -5.218197822570801
    10. ')' → logprob: -5.343197822570801

Token 538: ' very' (ID: 1869)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.7105362415313721
    2. ' return' → logprob: -1.460536241531372
    3. 'result' → logprob: -2.335536241531372
    4. 'def' → logprob: -2.460536241531372
    5. ' def' → logprob: -3.210536241531372
    6. 'return' → logprob: -3.835536241531372
    7. ' res' → logprob: -4.835536003112793
    8. ' for' → logprob: -4.960536003112793
    9. ' but' → logprob: -5.835536003112793
    10. ' acc' → logprob: -6.085536003112793

Token 539: ' creative' (ID: 12879)
  Prédit: 'slow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'slow' → logprob: -0.8256102800369263
    2. 'def' → logprob: -1.5756102800369263
    3. 'ine' → logprob: -2.0756101608276367
    4. ' slow' → logprob: -2.9506101608276367
    5. ' inefficient' → logprob: -3.2006101608276367
    6. 'cle' → logprob: -3.5756101608276367
    7. 'long' → logprob: -3.5756101608276367
    8. 'clear' → logprob: -4.075610160827637
    9. 'python' → logprob: -4.450610160827637
    10. 'verbose' → logprob: -5.075610160827637

Token 540: '
' (ID: 198)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7153204083442688
    2. ':' → logprob: -1.465320348739624
    3. '   ' → logprob: -2.215320348739624
    4. ',' → logprob: -2.590320348739624
    5. 'def' → logprob: -3.965320348739624
    6. ')' → logprob: -4.340320587158203
    7. ' ):' → logprob: -4.590320587158203
    8. ' return' → logprob: -4.715320587158203
    9. ' :' → logprob: -4.715320587158203
    10. 'return' → logprob: -4.965320587158203

Token 541: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5865581035614014
    2. ' return' → logprob: -1.3365581035614014
    3. 'return' → logprob: -2.0865581035614014
    4. ' if' → logprob: -4.3365583419799805
    5. 'def' → logprob: -4.4615583419799805
    6. ' res' → logprob: -4.8365583419799805
    7. 'if' → logprob: -5.3365583419799805
    8. 'result' → logprob: -5.7115583419799805
    9. ' result' → logprob: -5.8365583419799805
    10. 'res' → logprob: -6.2115583419799805

Token 542: ' bits' (ID: 18189)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7627760767936707
    2. 'return' → logprob: -1.1377761363983154
    3. 'res' → logprob: -2.3877761363983154
    4. 'if' → logprob: -2.7627761363983154
    5. 'r' → logprob: -3.5127761363983154
    6. 'def' → logprob: -3.7627761363983154
    7. 's' → logprob: -6.387775897979736
    8. 'from' → logprob: -7.137775897979736
    9. 'p' → logprob: -7.887775897979736
    10. '   ' → logprob: -8.012776374816895

Token 543: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1270875781774521
    2. '=' → logprob: -2.1270875930786133
    3. ',' → logprob: -8.877087593078613
    4. ' ' → logprob: -11.752087593078613
    5. '   ' → logprob: -12.252087593078613
    6. ' ,' → logprob: -13.127087593078613
    7. 's' → logprob: -14.127087593078613
    8. ' =
' → logprob: -14.252087593078613
    9. '=int' → logprob: -14.252087593078613
    10. ')' → logprob: -14.377087593078613

Token 544: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.006510848179459572
    2. 're' → logprob: -6.0065107345581055
    3. '[(' → logprob: -7.0065107345581055
    4. 'list' → logprob: -7.0065107345581055
    5. '(bin' → logprob: -7.0065107345581055
    6. 'map' → logprob: -7.7565107345581055
    7. 'format' → logprob: -8.131510734558105
    8. '[' → logprob: -8.256510734558105
    9. 'lambda' → logprob: -9.506510734558105
    10. '(re' → logprob: -9.756510734558105

Token 545: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.857719275401905e-05
    2. 'n' → logprob: -10.500038146972656
    3. '(' → logprob: -11.500038146972656
    4. '(
' → logprob: -15.375038146972656
    5. '[n' → logprob: -15.500038146972656
    6. ' (' → logprob: -16.000038146972656
    7. '	n' → logprob: -16.375038146972656
    8. ' n' → logprob: -16.500038146972656
    9. 'a' → logprob: -16.875038146972656
    10. ')n' → logprob: -17.375038146972656

Token 546: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.7046611309051514
    2. '(' → logprob: -1.0796611309051514
    3. '(n' → logprob: -2.7046611309051514
    4. '()[' → logprob: -2.8296611309051514
    5. '[' → logprob: -3.8296611309051514
    6. '())[' → logprob: -4.2046613693237305
    7. '   ' → logprob: -6.7046613693237305
    8. 'a' → logprob: -7.9546613693237305
    9. ' )[' → logprob: -8.07966136932373
    10. '(a' → logprob: -8.07966136932373

Token 547: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08072876930236816
    2. '3' → logprob: -2.580728769302368
    3. ':' → logprob: -6.580728530883789
    4. '```' → logprob: -9.205728530883789
    5. '][' → logprob: -9.580728530883789
    6. '(' → logprob: -9.830728530883789
    7. ' ' → logprob: -10.080728530883789
    8. '   ' → logprob: -10.205728530883789
    9. '::-' → logprob: -10.205728530883789
    10. ')[' → logprob: -11.205728530883789

Token 548: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.011075528338551521
    2. ':].' → logprob: -5.011075496673584
    3. ':' → logprob: -5.761075496673584
    4. ':]
' → logprob: -6.886075496673584
    5. ' :]' → logprob: -9.761075973510742
    6. ']' → logprob: -10.136075973510742
    7. ':],' → logprob: -10.636075973510742
    8. '::' → logprob: -10.886075973510742
    9. ':]

' → logprob: -10.886075973510742
    10. '::-' → logprob: -11.511075973510742

Token 549: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026424888521432877
    2. 'result' → logprob: -4.276424884796143
    3. ' result' → logprob: -6.026424884796143
    4. '
' → logprob: -6.151424884796143
    5. 'acc' → logprob: -6.401424884796143
    6. 'return' → logprob: -6.651424884796143
    7. 'res' → logprob: -7.026424884796143
    8. '```' → logprob: -7.151424884796143
    9. ' acc' → logprob: -7.276424884796143
    10. ' return' → logprob: -7.401424884796143

Token 550: ' pow' (ID: 9779)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11152193695306778
    2. 'return' → logprob: -3.2365219593048096
    3. 'res' → logprob: -3.6115219593048096
    4. '   ' → logprob: -4.4865217208862305
    5. ' result' → logprob: -4.4865217208862305
    6. 'acc' → logprob: -5.2365217208862305
    7. 'r' → logprob: -5.3615217208862305
    8. ' return' → logprob: -6.1115217208862305
    9. 'def' → logprob: -6.6115217208862305
    10. ' res' → logprob: -6.7365217208862305

Token 551: '_chain' (ID: 74449)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6254292726516724
    2. 'er' → logprob: -1.7504292726516724
    3. 's' → logprob: -2.500429153442383
    4. 'a' → logprob: -3.250429153442383
    5. '_val' → logprob: -3.750429153442383
    6. 'r' → logprob: -4.000429153442383
    7. '_' → logprob: -4.125429153442383
    8. '_list' → logprob: -4.250429153442383
    9. ' =' → logprob: -4.375429153442383
    10. '(a' → logprob: -4.750429153442383

Token 552: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16091427206993103
    2. '=' → logprob: -1.9109143018722534
    3. 's' → logprob: -7.535914421081543
    4. ',' → logprob: -9.285914421081543
    5. '=lambda' → logprob: -10.910914421081543
    6. ' ' → logprob: -11.535914421081543
    7. '(' → logprob: -11.785914421081543
    8. '   ' → logprob: -12.410914421081543
    9. ' =
' → logprob: -12.785914421081543
    10. ')' → logprob: -12.785914421081543

Token 553: ' (' (ID: 350)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -1.3165335655212402
    2. '[' → logprob: -1.4415335655212402
    3. 'lambda' → logprob: -1.8165335655212402
    4. 'reduce' → logprob: -2.5665335655212402
    5. '(lambda' → logprob: -2.8165335655212402
    6. 'ft' → logprob: -2.9415335655212402
    7. 'partial' → logprob: -2.9415335655212402
    8. 'list' → logprob: -3.8165335655212402
    9. 'fun' → logprob: -4.19153356552124
    10. 'acc' → logprob: -4.56653356552124

Token 554: 'int' (ID: 491)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.26043689250946045
    2. '(a' → logprob: -2.13543701171875
    3. '(lambda' → logprob: -2.88543701171875
    4. 'lambda' → logprob: -3.63543701171875
    5. '(' → logprob: -4.51043701171875
    6. '((' → logprob: -5.26043701171875
    7. 'pow' → logprob: -5.38543701171875
    8. '1' → logprob: -5.38543701171875
    9. 'fun' → logprob: -6.38543701171875
    10. 'partial' → logprob: -7.51043701171875

Token 555: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.9499704241752625
    2. '(bit' → logprob: -0.9499704241752625
    3. '(x' → logprob: -2.6999704837799072
    4. '(a' → logprob: -2.6999704837799072
    5. 'bit' → logprob: -2.9499704837799072
    6. 'a' → logprob: -4.574970245361328
    7. 'b' → logprob: -5.199970245361328
    8. '(d' → logprob: -5.449970245361328
    9. '(i' → logprob: -5.699970245361328
    10. '('' → logprob: -5.949970245361328

Token 556: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05725233256816864
    2. 'it' → logprob: -3.5572524070739746
    3. 'for' → logprob: -3.9322524070739746
    4. ')' → logprob: -6.057252407073975
    5. '**' → logprob: -6.182252407073975
    6. ',' → logprob: -6.307252407073975
    7. 'in' → logprob: -8.057251930236816
    8. ' ' → logprob: -8.057251930236816
    9. ')**' → logprob: -9.057251930236816
    10. ' **' → logprob: -9.432251930236816

Token 557: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6933300495147705
    2. 'for' → logprob: -0.6933300495147705
    3. ',' → logprob: -9.193329811096191
    4. '<<' → logprob: -10.068329811096191
    5. ' ' → logprob: -11.193329811096191
    6. '   ' → logprob: -12.193329811096191
    7. ')' → logprob: -12.318329811096191
    8. '	for' → logprob: -12.318329811096191
    9. '  ' → logprob: -13.318329811096191
    10. '
' → logprob: -13.568329811096191

Token 558: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009338455274701118
    2. ' b' → logprob: -4.75933837890625
    3. 'bits' → logprob: -7.38433837890625
    4. ' bits' → logprob: -9.25933837890625
    5. 'bit' → logprob: -12.50933837890625
    6. '	b' → logprob: -13.63433837890625
    7. '_' → logprob: -14.00933837890625
    8. '_bits' → logprob: -14.38433837890625
    9. ' in' → logprob: -14.50933837890625
    10. ' bit' → logprob: -14.75933837890625

Token 559: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47499972581863403
    2. ' in' → logprob: -0.974999725818634
    3. 'bits' → logprob: -7.849999904632568
    4. ' bits' → logprob: -8.97499942779541
    5. 'n' → logprob: -9.47499942779541
    6. 'ins' → logprob: -9.97499942779541
    7. ' ' → logprob: -10.09999942779541
    8. 'bin' → logprob: -10.66249942779541
    9. 's' → logprob: -10.66249942779541
    10. 'its' → logprob: -10.78749942779541

Token 560: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.0015105740167200565
    2. ' bits' → logprob: -6.5015106201171875
    3. 'bin' → logprob: -13.126510620117188
    4. '(bits' → logprob: -13.126510620117188
    5. 'bit' → logprob: -13.376510620117188
    6. 'b' → logprob: -14.126510620117188
    7. '
' → logprob: -14.626510620117188
    8. 'str' → logprob: -14.751510620117188
    9. ' ' → logprob: -15.251510620117188
    10. 'f' → logprob: -15.751510620117188

Token 561: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016779717057943344
    2. ')
' → logprob: -5.016779899597168
    3. ' )' → logprob: -5.141779899597168
    4. ' if' → logprob: -6.391779899597168
    5. 'if' → logprob: -6.516779899597168
    6. '   ' → logprob: -7.391779899597168
    7. '[::-' → logprob: -8.891779899597168
    8. ' )
' → logprob: -9.266779899597168
    9. ' ' → logprob: -10.391779899597168
    10. 'for' → logprob: -10.641779899597168

Token 562: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2886092960834503
    2. 'result' → logprob: -2.663609266281128
    3. 'res' → logprob: -2.788609266281128
    4. ' res' → logprob: -3.038609266281128
    5. ' result' → logprob: -3.663609266281128
    6. 'acc' → logprob: -4.288609504699707
    7. 'r' → logprob: -4.413609504699707
    8. ' acc' → logprob: -4.538609504699707
    9. ' r' → logprob: -5.788609504699707
    10. 'def' → logprob: -6.913609504699707

Token 563: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.8364611864089966
    2. 'result' → logprob: -1.0864611864089966
    3. 'def' → logprob: -2.336461067199707
    4. 'return' → logprob: -2.711461067199707
    5. 'acc' → logprob: -3.211461067199707
    6. '   ' → logprob: -4.086461067199707
    7. 'r' → logprob: -6.211461067199707
    8. 'base' → logprob: -6.461461067199707
    9. 'val' → logprob: -6.711461067199707
    10. 'pow' → logprob: -6.961461067199707

Token 564: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16308513283729553
    2. '=' → logprob: -1.9130851030349731
    3. ',' → logprob: -5.913084983825684
    4. ' ' → logprob: -9.413084983825684
    5. ' ,' → logprob: -10.163084983825684
    6. '  ' → logprob: -11.538084983825684
    7. '   ' → logprob: -12.038084983825684
    8. '    ' → logprob: -12.788084983825684
    9. ' =
' → logprob: -12.788084983825684
    10. '	' → logprob: -13.038084983825684

Token 565: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006104522035457194
    2. ' ' → logprob: -8.1256103515625
    3. 'reduce' → logprob: -8.5006103515625
    4. 'fun' → logprob: -10.3756103515625
    5. '   ' → logprob: -10.6256103515625
    6. 'pow' → logprob: -10.7506103515625
    7. 'ft' → logprob: -11.0006103515625
    8. '[' → logprob: -11.8756103515625
    9. '0' → logprob: -13.1256103515625
    10. 'lambda' → logprob: -13.6256103515625

Token 566: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005809116992168128
    2. 'reduce' → logprob: -7.750580787658691
    3. '[' → logprob: -9.500580787658691
    4. 'ft' → logprob: -10.750580787658691
    5. 'pow' → logprob: -10.875580787658691
    6. 'lambda' → logprob: -11.125580787658691
    7. 'fun' → logprob: -11.125580787658691
    8. '(' → logprob: -13.375580787658691
    9. '[(' → logprob: -14.250580787658691
    10. '0' → logprob: -14.625580787658691

Token 567: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7938668727874756
    2. '   ' → logprob: -1.0438668727874756
    3. '<|end|>' → logprob: -2.0438668727874756
    4. ' 
' → logprob: -3.9188668727874756
    5. ' ' → logprob: -4.668867111206055
    6. ',' → logprob: -4.668867111206055
    7. 'for' → logprob: -4.793867111206055
    8. 'def' → logprob: -5.668867111206055
    9. '    
' → logprob: -5.793867111206055
    10. '<|end|>' → logprob: -6.043867111206055

Token 568: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36526307463645935
    2. '   ' → logprob: -1.3652631044387817
    3. ',' → logprob: -3.865262985229492
    4. 'for' → logprob: -3.865262985229492
    5. 'def' → logprob: -6.490262985229492
    6. '
' → logprob: -6.490262985229492
    7. ' 
' → logprob: -6.740262985229492
    8. '    
' → logprob: -6.990262985229492
    9. ' ' → logprob: -7.115262985229492
    10. ' ,' → logprob: -7.365262985229492

Token 569: ' base' (ID: 3611)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07182043790817261
    2. ' for' → logprob: -2.6968204975128174
    3. '   ' → logprob: -6.571820259094238
    4. 'base' (adapté à ' base') → logprob: -8.321820259094238
    5. 'a' → logprob: -9.196820259094238
    6. '
' → logprob: -10.071820259094238
    7. ' base' → logprob: -10.696820259094238
    8. '    
' → logprob: -10.946820259094238
    9. 'def' → logprob: -11.321820259094238
    10. 'pow' → logprob: -12.321820259094238

Token 570: '_p' (ID: 1359)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9840663075447083
    2. ' =' → logprob: -1.1090662479400635
    3. ',' → logprob: -1.2340662479400635
    4. ' <<=' → logprob: -6.109066486358643
    5. ' ' → logprob: -6.234066486358643
    6. ' ,' → logprob: -7.734066486358643
    7. ' *=' → logprob: -9.234066009521484
    8. '   ' → logprob: -9.359066009521484
    9. '_' → logprob: -9.609066009521484
    10. ')' → logprob: -9.859066009521484

Token 571: 'owers' (ID: 23882)
  Prédit: 'ow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ow' → logprob: -0.001283448887988925
    2. '=' → logprob: -7.251283645629883
    3. 'ower' → logprob: -7.876283645629883
    4. ' =' → logprob: -9.251283645629883
    5. 'rod' → logprob: -9.501283645629883
    6. 'r' → logprob: -11.751283645629883
    7. 'wr' → logprob: -11.876283645629883
    8. 'art' → logprob: -13.376283645629883
    9. 'ro' → logprob: -13.626283645629883
    10. 'pow' → logprob: -14.251283645629883

Token 572: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5763136148452759
    2. ' =' → logprob: -0.8263136148452759
    3. ',' → logprob: -7.951313495635986
    4. 's' → logprob: -12.076313972473145
    5. ' ' → logprob: -12.451313972473145
    6. '	' → logprob: -13.326313972473145
    7. '   ' → logprob: -13.576313972473145
    8. ':' → logprob: -13.826313972473145
    9. '  ' → logprob: -13.951313972473145
    10. '    ' → logprob: -14.076313972473145

Token 573: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23327261209487915
    2. '[it' → logprob: -2.6082725524902344
    3. 'partial' → logprob: -3.4832725524902344
    4. '(lambda' → logprob: -3.7332725524902344
    5. '[f' → logprob: -4.108272552490234
    6. '(it' → logprob: -4.233272552490234
    7. 'it' → logprob: -4.358272552490234
    8. '(part' → logprob: -5.108272552490234
    9. '(ft' → logprob: -5.358272552490234
    10. '[a' → logprob: -5.608272552490234

Token 574: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9541776180267334
    2. '   ' → logprob: -1.2041776180267334
    3. ' for' → logprob: -1.2041776180267334
    4. 'base' → logprob: -4.8291778564453125
    5. 'def' → logprob: -5.9541778564453125
    6. ',' → logprob: -6.8291778564453125
    7. '[' → logprob: -7.0791778564453125
    8. '<|end|>' → logprob: -7.2041778564453125
    9. 'pow' → logprob: -8.454177856445312
    10. ')' → logprob: -9.079177856445312

Token 575: ' b' (ID: 287)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8397624492645264
    2. 'base' → logprob: -0.9647624492645264
    3. 'b' (adapté à ' b') → logprob: -2.3397624492645264
    4. 'cur' → logprob: -3.2147624492645264
    5. 'current' → logprob: -4.7147626876831055
    6. 'curr' → logprob: -4.7147626876831055
    7. 'p' → logprob: -4.9647626876831055
    8. 'def' → logprob: -5.2147626876831055
    9. ' for' → logprob: -5.4647626876831055
    10. 'acc' → logprob: -5.5897626876831055

Token 576: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27992913126945496
    2. ' =' → logprob: -1.7799291610717773
    3. 'ase' → logprob: -2.6549291610717773
    4. 'ases' → logprob: -6.279929161071777
    5. 'a' → logprob: -7.154929161071777
    6. 'it' → logprob: -7.529929161071777
    7. '=[]' → logprob: -8.154929161071777
    8. 'p' → logprob: -8.404929161071777
    9. 'its' → logprob: -8.404929161071777
    10. '=[' → logprob: -8.779929161071777

Token 577: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4021237802808173e-05
    2. ' a' → logprob: -11.625014305114746
    3. '2' → logprob: -12.500014305114746
    4. '1' → logprob: -14.125014305114746
    5. 'pow' → logprob: -15.625014305114746
    6. '(a' → logprob: -15.750014305114746
    7. 'base' → logprob: -16.00001335144043
    8. '	a' → logprob: -17.12501335144043
    9. '0' → logprob: -17.62501335144043
    10. '[a' → logprob: -17.75001335144043

Token 578: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.25550904870033264
    2. '
' → logprob: -2.0055091381073
    3. 'for' → logprob: -2.8805091381073
    4. ' while' → logprob: -4.880508899688721
    5. 'def' → logprob: -5.005508899688721
    6. ',' → logprob: -5.005508899688721
    7. '   ' → logprob: -5.505508899688721
    8. ' for' → logprob: -5.755508899688721
    9. 'mod' → logprob: -6.005508899688721
    10. '<|end|>' → logprob: -7.755508899688721

Token 579: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.3645896911621094
    2. ' 
' → logprob: -1.6145896911621094
    3. ' for' → logprob: -1.7395896911621094
    4. 'for' → logprob: -1.8645896911621094
    5. ' while' → logprob: -2.4895896911621094
    6. '
' → logprob: -2.7395896911621094
    7. '	while' → logprob: -4.364589691162109
    8. '  
' → logprob: -4.614589691162109
    9. '[' → logprob: -4.739589691162109
    10. '   ' → logprob: -4.864589691162109

Token 580: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0483572483062744
    2. 'for' (adapté à ' for') → logprob: -1.2983572483062744
    3. 'while' → logprob: -1.4233572483062744
    4. ' while' → logprob: -2.0483572483062744
    5. '	while' → logprob: -5.798357009887695
    6. '	for' → logprob: -6.298357009887695
    7. '   ' → logprob: -6.798357009887695
    8. '
' → logprob: -7.673357009887695
    9. ' 
' → logprob: -9.798357009887695
    10. '[' → logprob: -9.923357009887695

Token 581: ' bi' (ID: 4424)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00561541598290205
    2. '_bit' → logprob: -6.005615234375
    3. '_i' → logprob: -6.505615234375
    4. 'i' → logprob: -7.255615234375
    5. 'bit' → logprob: -7.255615234375
    6. ' _' → logprob: -9.380615234375
    7. '_p' → logprob: -9.755615234375
    8. '_b' → logprob: -10.255615234375
    9. ' bit' → logprob: -11.630615234375
    10. 'p' → logprob: -11.755615234375

Token 582: ' in' (ID: 306)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7770252227783203
    2. 'n' → logprob: -0.9020252227783203
    3. ' in' → logprob: -2.0270252227783203
    4. 'in' → logprob: -6.15202522277832
    5. 'ts' → logprob: -8.02702522277832
    6. ',' → logprob: -8.90202522277832
    7. 'te' → logprob: -10.15202522277832
    8. 's' → logprob: -10.27702522277832
    9. 'nd' → logprob: -10.77702522277832
    10. 'th' → logprob: -11.40202522277832

Token 583: ' reversed' (ID: 57184)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.16069534420967102
    2. 'bits' → logprob: -1.9106953144073486
    3. '[' → logprob: -9.16069507598877
    4. 'range' → logprob: -9.66069507598877
    5. 'bin' → logprob: -9.78569507598877
    6. '(pow' → logprob: -9.91069507598877
    7. 're' → logprob: -10.03569507598877
    8. ' pow' → logprob: -10.28569507598877
    9. 'bit' → logprob: -10.78569507598877
    10. 'iter' → logprob: -10.78569507598877

Token 584: '(bits' (ID: 170698)
  Prédit: '(bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -0.0007324361358769238
    2. 'bits' → logprob: -7.500732421875
    3. '(range' → logprob: -9.125732421875
    4. '(bin' → logprob: -10.500732421875
    5. '(pow' → logprob: -10.625732421875
    6. '(b' → logprob: -11.250732421875
    7. '(bit' → logprob: -12.875732421875
    8. ' bits' → logprob: -14.250732421875
    9. '(binary' → logprob: -14.500732421875
    10. '(base' → logprob: -14.625732421875

Token 585: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.041909109801054
    2. '):
' → logprob: -3.2919092178344727
    3. ':' → logprob: -5.791909217834473
    4. '[::-' → logprob: -7.291909217834473
    5. '   ' → logprob: -10.291909217834473
    6. '):
' → logprob: -10.541909217834473
    7. '[:-' → logprob: -11.041909217834473
    8. '[' → logprob: -11.291909217834473
    9. ')' → logprob: -12.041909217834473
    10. '       ' → logprob: -12.041909217834473

Token 586: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7001375555992126
    2. ':' → logprob: -1.0751376152038574
    3. '   ' → logprob: -2.2001376152038574
    4. ':
' → logprob: -3.8251376152038574
    5. ' :' → logprob: -4.325137615203857
    6. '[' → logprob: -5.075137615203857
    7. ' :
' → logprob: -6.325137615203857
    8. '    ' → logprob: -6.450137615203857
    9. ' ' → logprob: -6.700137615203857
    10. '):' → logprob: -7.325137615203857

Token 587: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.138155221939087
    2. '       ' → logprob: -1.388155221939087
    3. '   ' → logprob: -1.888155221939087
    4. ' b' → logprob: -2.013155221939087
    5. 'b' → logprob: -3.013155221939087
    6. ' base' → logprob: -3.388155221939087
    7. 'if' (adapté à ' if') → logprob: -3.763155221939087
    8. 'base' → logprob: -4.263154983520508
    9. ' ' → logprob: -4.638154983520508
    10. ' 
' → logprob: -5.013154983520508

Token 588: ' bi' (ID: 4424)
  Prédit: 'bi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -0.011165844276547432
    2. 'int' → logprob: -5.011165618896484
    3. ' bi' → logprob: -5.511165618896484
    4. 'b' → logprob: -8.011165618896484
    5. ' int' → logprob: -9.886165618896484
    6. '   ' → logprob: -11.761165618896484
    7. 'bool' → logprob: -13.011165618896484
    8. ' ' → logprob: -13.511165618896484
    9. 'bit' → logprob: -13.761165618896484
    10. '  ' → logprob: -13.886165618896484

Token 589: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03717202693223953
    2. '==' → logprob: -3.7871720790863037
    3. '=='' → logprob: -4.287171840667725
    4. '=="' → logprob: -9.912172317504883
    5. '==
' → logprob: -12.037172317504883
    6. ' =' → logprob: -12.162172317504883
    7. ')' → logprob: -12.412172317504883
    8. ' '' → logprob: -12.537172317504883
    9. ' =='' → logprob: -12.662172317504883
    10. '=' → logprob: -12.787172317504883

Token 590: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00021045419271104038
    2. '"' → logprob: -8.750210762023926
    3. '1' → logprob: -10.250210762023926
    4. ' '' → logprob: -11.125210762023926
    5. ''b' → logprob: -14.750210762023926
    6. ' ' → logprob: -15.125210762023926
    7. ''a' → logprob: -15.125210762023926
    8. ''y' → logprob: -15.875210762023926
    9. ''l' → logprob: -15.875210762023926
    10. ''i' → logprob: -16.37520980834961

Token 591: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. '0' → logprob: -12.000008583068848
    3. ''' → logprob: -13.000008583068848
    4. '')' → logprob: -15.500008583068848
    5. '"' → logprob: -15.875008583068848
    6. ' ' → logprob: -16.250009536743164
    7. '2' → logprob: -17.125009536743164
    8. '`' → logprob: -18.375009536743164
    9. '''' → logprob: -18.437509536743164
    10. 'b' → logprob: -18.812509536743164

Token 592: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06252383440732956
    2. ':' → logprob: -2.93752384185791
    3. '):
' → logprob: -5.31252384185791
    4. '':
' → logprob: -6.06252384185791
    5. '       ' → logprob: -9.06252384185791
    6. '':' → logprob: -9.06252384185791
    7. '):' → logprob: -10.18752384185791
    8. '   ' → logprob: -11.06252384185791
    9. '           ' → logprob: -11.06252384185791
    10. ':
' → logprob: -11.18752384185791

Token 593: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02176705189049244
    2. '       ' → logprob: -4.1467671394348145
    3. ':
' → logprob: -5.8967671394348145
    4. ':' → logprob: -6.0217671394348145
    5. 'b' → logprob: -9.021766662597656
    6. '          ' → logprob: -9.646766662597656
    7. '):
' → logprob: -9.896766662597656
    8. 'base' → logprob: -9.896766662597656
    9. ' and' → logprob: -10.271766662597656
    10. '	       ' → logprob: -10.271766662597656

Token 594: ' base' (ID: 3611)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.31432434916496277
    2. ' res' → logprob: -1.3143243789672852
    3. '       ' → logprob: -7.439324378967285
    4. '           ' → logprob: -7.814324378967285
    5. '               ' → logprob: -10.814324378967285
    6. '```' → logprob: -11.064324378967285
    7. '   ' → logprob: -11.689324378967285
    8. 'return' → logprob: -12.564324378967285
    9. '    ' → logprob: -12.814324378967285
    10. 'b' → logprob: -12.939324378967285

Token 595: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0016016254667192698
    2. '=' → logprob: -7.126601696014404
    3. ' =' → logprob: -7.751601696014404
    4. '*=' → logprob: -8.376601219177246
    5. '**' → logprob: -10.126601219177246
    6. ' *=' → logprob: -10.251601219177246
    7. ' <<=' → logprob: -10.876601219177246
    8. 'powers' → logprob: -10.876601219177246
    9. '_pow' → logprob: -12.126601219177246
    10. '_power' → logprob: -12.751601219177246

Token 596: 'owers' (ID: 23882)
  Prédit: 'owers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owers' → logprob: -0.00047475993051193655
    2. 'powers' → logprob: -8.12547492980957
    3. 'ow' → logprob: -8.75047492980957
    4. 'ower' → logprob: -12.00047492980957
    5. '   ' → logprob: -13.00047492980957
    6. '```' → logprob: -13.12547492980957
    7. 'ows' → logprob: -13.75047492980957
    8. '#' → logprob: -14.12547492980957
    9. '1' → logprob: -14.12547492980957
    10. '=' → logprob: -14.25047492980957

Token 597: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.236549335066229e-05
    2. '.' → logprob: -10.750021934509277
    3. '=' → logprob: -14.875021934509277
    4. 'append' → logprob: -15.375021934509277
    5. '.app' → logprob: -16.125022888183594
    6. '+=' → logprob: -16.250022888183594
    7. ' .' → logprob: -16.750022888183594
    8. '.ap' → logprob: -17.875022888183594
    9. '.insert' → logprob: -18.375022888183594
    10. ',' → logprob: -18.625022888183594

Token 598: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.5235065817832947
    2. 'b' → logprob: -0.8985065817832947
    3. '(base' → logprob: -8.773506164550781
    4. 'pow' → logprob: -9.148506164550781
    5. '(pow' → logprob: -10.148506164550781
    6. '(' → logprob: -10.648506164550781
    7. ' b' → logprob: -11.773506164550781
    8. 'int' → logprob: -12.023506164550781
    9. '	b' → logprob: -12.273506164550781
    10. 'a' → logprob: -12.273506164550781

Token 599: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5784164071083069
    2. ')
' → logprob: -0.8284164071083069
    3. '%' → logprob: -6.078416347503662
    4. '**' → logprob: -10.45341682434082
    5. ' %' → logprob: -10.45341682434082
    6. ');' → logprob: -10.57841682434082
    7. ' )
' → logprob: -10.57841682434082
    8. ')
' → logprob: -10.57841682434082
    9. ' )' → logprob: -11.32841682434082
    10. ')%' → logprob: -11.45341682434082

Token 600: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005666275974363089
    2. '           ' → logprob: -5.505666255950928
    3. '   ' → logprob: -7.130666255950928
    4. 'b' → logprob: -7.505666255950928
    5. ' b' → logprob: -9.130666732788086
    6. '	' → logprob: -10.130666732788086
    7. 'return' → logprob: -11.130666732788086
    8. ' ' → logprob: -11.505666732788086
    9. '<|end|>' → logprob: -11.755666732788086
    10. '	   ' → logprob: -11.880666732788086

Token 601: ' b' (ID: 287)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029226834885776043
    2. 'b' (adapté à ' b') → logprob: -6.252922534942627
    3. '   ' → logprob: -7.002922534942627
    4. ' b' → logprob: -10.502923011779785
    5. '	' → logprob: -10.752923011779785
    6. '           ' → logprob: -11.002923011779785
    7. ' ' → logprob: -12.752923011779785
    8. '	   ' → logprob: -12.877923011779785
    9. '    ' → logprob: -13.127923011779785
    10. '      ' → logprob: -13.377923011779785

Token 602: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01584501750767231
    2. '*=' → logprob: -4.265844821929932
    3. ' =' → logprob: -6.390844821929932
    4. '*' → logprob: -13.76584529876709
    5. ' *=' → logprob: -14.14084529876709
    6. '%=' → logprob: -14.64084529876709
    7. ':=' → logprob: -14.64084529876709
    8. '=(' → logprob: -15.39084529876709
    9. '**' → logprob: -15.89084529876709
    10. '//=' → logprob: -16.015844345092773

Token 603: ' b' (ID: 287)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.06375332176685333
    2. 'b' → logprob: -2.813753366470337
    3. '(pow' → logprob: -6.813753128051758
    4. 'pow' → logprob: -7.438753128051758
    5. '(op' → logprob: -9.688753128051758
    6. ' (' → logprob: -10.688753128051758
    7. '(' → logprob: -12.563753128051758
    8. '(res' → logprob: -12.563753128051758
    9. ' b' → logprob: -13.563753128051758
    10. '(base' → logprob: -14.188753128051758

Token 604: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.048838626593351364
    2. '*b' → logprob: -3.0488386154174805
    3. ' *' → logprob: -8.29883861541748
    4. '**' → logprob: -13.79883861541748
    5. 'b' → logprob: -14.54883861541748
    6. '*a' → logprob: -14.92383861541748
    7. '*=' → logprob: -15.54883861541748
    8. 'pow' → logprob: -16.173839569091797
    9. '   ' → logprob: -16.298839569091797
    10. ' ' → logprob: -16.798839569091797

Token 605: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.014684110297821e-06
    2. ' b' → logprob: -11.625008583068848
    3. '2' → logprob: -18.375009536743164
    4. '*b' → logprob: -20.250009536743164
    5. '	b' → logprob: -20.750009536743164
    6. '_b' → logprob: -22.250009536743164
    7. ' ' → logprob: -23.500009536743164
    8. ')b' → logprob: -23.500009536743164
    9. 'a' → logprob: -23.875009536743164
    10. '>b' → logprob: -24.000009536743164

Token 606: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.47418713569641113
    2. ' %' → logprob: -0.9741871356964111
    3. '%n' → logprob: -9.599186897277832
    4. '%c' → logprob: -11.599186897277832
    5. ')%' → logprob: -12.099186897277832
    6. '<|end|>' → logprob: -12.099186897277832
    7. ')' → logprob: -12.599186897277832
    8. '%s' → logprob: -12.849186897277832
    9. ' mod' → logprob: -12.849186897277832
    10. '   ' → logprob: -13.224186897277832

Token 607: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: 0.0
    2. ' mod' → logprob: -17.0
    3. '(mod' → logprob: -23.0
    4. '	mod' → logprob: -24.375
    5. 'moder' → logprob: -24.875
    6. 'm' → logprob: -25.0
    7. 'mo' → logprob: -26.25
    8. ' ' → logprob: -26.25
    9. '```' → logprob: -26.25
    10. 'module' → logprob: -27.125

Token 608: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21901914477348328
    2. '
' → logprob: -2.0940191745758057
    3. '<|end|>' → logprob: -3.2190191745758057
    4. ' ' → logprob: -4.719018936157227
    5. ' return' → logprob: -5.219018936157227
    6. 'return' → logprob: -5.344018936157227
    7. ')' → logprob: -5.344018936157227
    8. '    
' → logprob: -6.094018936157227
    9. ' 
' → logprob: -6.594018936157227
    10. '	return' → logprob: -6.719018936157227

Token 609: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02170266956090927
    2. '<|end|>' → logprob: -3.896702766418457
    3. ')' → logprob: -7.646702766418457
    4. ' return' → logprob: -7.771702766418457
    5. 'return' → logprob: -9.896702766418457
    6. ' ' → logprob: -10.146702766418457
    7. '  ' → logprob: -10.521702766418457
    8. '    ' → logprob: -10.521702766418457
    9. '	return' → logprob: -11.021702766418457
    10. '       ' → logprob: -11.396702766418457

Token 610: ' return' (ID: 622)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3429264426231384
    2. '   ' → logprob: -1.8429265022277832
    3. ' for' → logprob: -2.592926502227783
    4. 'return' (adapté à ' return') → logprob: -3.092926502227783
    5. 'res' → logprob: -4.967926502227783
    6. ' return' → logprob: -6.717926502227783
    7. 'base' → logprob: -6.717926502227783
    8. 'result' → logprob: -7.342926502227783
    9. 'i' → logprob: -7.467926502227783
    10. ' res' → logprob: -8.217926025390625

Token 611: ' reduce' (ID: 10389)
  Prédit: 'ft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ft' → logprob: -0.812609076499939
    2. 'reduce' → logprob: -1.062609076499939
    3. 'fun' → logprob: -1.562609076499939
    4. 'pow' → logprob: -7.5626091957092285
    5. 'res' → logprob: -8.18760871887207
    6. 'sum' → logprob: -8.68760871887207
    7. '1' → logprob: -9.68760871887207
    8. ' functools' → logprob: -9.81260871887207
    9. 'prod' → logprob: -11.06260871887207
    10. ' reduce' → logprob: -11.43760871887207

Token 612: '(lambda' (ID: 43341)
  Prédit: '(op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.12748423218727112
    2. '(lambda' → logprob: -2.1274843215942383
    3. '(' → logprob: -7.877484321594238
    4. '(operator' → logprob: -8.752484321594238
    5. ' (' → logprob: -12.127484321594238
    6. 'lambda' → logprob: -12.502484321594238
    7. '```' → logprob: -13.252484321594238
    8. '(pow' → logprob: -13.752484321594238
    9. 'op' → logprob: -14.002484321594238
    10. '(
' → logprob: -14.002484321594238

Token 613: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.4917154312133789
    2. ' lambda' → logprob: -1.241715431213379
    3. '(lambda' → logprob: -2.366715431213379
    4. 'op' → logprob: -5.866715431213379
    5. ' op' → logprob: -6.366715431213379
    6. '(op' → logprob: -7.991715431213379
    7. 'acc' → logprob: -7.991715431213379
    8. 'operator' → logprob: -7.991715431213379
    9. ' (' → logprob: -9.491715431213379
    10. ' operator' → logprob: -10.616715431213379

Token 614: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3319124011322856e-05
    2. ',x' → logprob: -11.250022888183594
    3. ' ,' → logprob: -12.125022888183594
    4. 'lambda' → logprob: -13.375022888183594
    5. ',y' → logprob: -14.125022888183594
    6. 'a' → logprob: -14.250022888183594
    7. ',b' → logprob: -15.375022888183594
    8. ',a' → logprob: -15.500022888183594
    9. 'op' → logprob: -15.625022888183594
    10. ',k' → logprob: -15.750022888183594

Token 615: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.009479453787207603
    2. 'lambda' → logprob: -5.009479522705078
    3. ' y' → logprob: -6.134479522705078
    4. 'acc' → logprob: -8.384479522705078
    5. '(lambda' → logprob: -9.259479522705078
    6. 'op' → logprob: -9.259479522705078
    7. ' lambda' → logprob: -10.009479522705078
    8. 'res' → logprob: -10.134479522705078
    9. 'x' → logprob: -10.259479522705078
    10. 'pow' → logprob: -11.259479522705078

Token 616: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002932894742116332
    2. ',' → logprob: -5.877933025360107
    3. ' :' → logprob: -9.25293254852295
    4. '   ' → logprob: -11.62793254852295
    5. 'lambda' → logprob: -12.00293254852295
    6. ':x' → logprob: -12.50293254852295
    7. '=' → logprob: -12.75293254852295
    8. 'x' → logprob: -12.75293254852295
    9. ',x' → logprob: -12.87793254852295
    10. '=lambda' → logprob: -13.37793254852295

Token 617: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07982014864683151
    2. '(x' → logprob: -2.579820156097412
    3. ' x' → logprob: -7.579820156097412
    4. '(' → logprob: -8.329819679260254
    5. ' (' → logprob: -8.954819679260254
    6. '(lambda' → logprob: -10.579819679260254
    7. '   ' → logprob: -11.329819679260254
    8. 'lambda' → logprob: -11.954819679260254
    9. '((' → logprob: -14.079819679260254
    10. '(op' → logprob: -14.204819679260254

Token 618: '*y' (ID: 83575)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09001312404870987
    2. ' *' → logprob: -2.465013027191162
    3. '*y' → logprob: -7.465013027191162
    4. ':' → logprob: -7.840013027191162
    5. ' ' → logprob: -10.34001350402832
    6. 'y' → logprob: -10.84001350402832
    7. ',' → logprob: -11.34001350402832
    8. '*x' → logprob: -11.59001350402832
    9. '   ' → logprob: -11.71501350402832
    10. ' y' → logprob: -11.71501350402832

Token 619: '%' (ID: 4)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.25196680426597595
    2. '%' → logprob: -1.5019668340682983
    3. ',' → logprob: -10.25196647644043
    4. '%c' → logprob: -14.87696647644043
    5. '%,' → logprob: -14.87696647644043
    6. '   ' → logprob: -15.12696647644043
    7. '%x' → logprob: -15.50196647644043
    8. '%s' → logprob: -15.50196647644043
    9. ' ' → logprob: -15.75196647644043
    10. '```' → logprob: -15.75196647644043

Token 620: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.306760805164231e-05
    2. ' mod' → logprob: -11.25001335144043
    3. '(mod' → logprob: -17.75001335144043
    4. '	mod' → logprob: -21.12501335144043
    5. 'MOD' → logprob: -22.37501335144043
    6. 'm' → logprob: -22.62501335144043
    7. '```' → logprob: -23.12501335144043
    8. '100' → logprob: -23.37501335144043
    9. ' ' → logprob: -23.37501335144043
    10. '   ' → logprob: -23.62501335144043

Token 621: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001843485952122137
    2. ' ,' → logprob: -8.625184059143066
    3. '   ' → logprob: -13.625184059143066
    4. '%' → logprob: -14.125184059143066
    5. ')' → logprob: -14.500184059143066
    6. '(base' → logprob: -15.250184059143066
    7. '),' → logprob: -15.500184059143066
    8. ',
' → logprob: -15.625184059143066
    9. '```' → logprob: -15.750184059143066
    10. '       ' → logprob: -15.750184059143066

Token 622: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.017771875485777855
    2. 're' → logprob: -4.3927717208862305
    3. ' base' → logprob: -5.2677717208862305
    4. ' reversed' → logprob: -10.14277172088623
    5. '   ' → logprob: -10.64277172088623
    6. '(base' → logprob: -11.39277172088623
    7. 'reverse' → logprob: -11.76777172088623
    8. '	base' → logprob: -13.26777172088623
    9. '           ' → logprob: -13.39277172088623
    10. '[' → logprob: -13.39277172088623

Token 623: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0032261949963867664
    2. '_chain' → logprob: -5.753226280212402
    3. '_ch' → logprob: -11.128226280212402
    4. '_pow' → logprob: -11.378226280212402
    5. 'powers' → logprob: -11.378226280212402
    6. 'pow' → logprob: -12.253226280212402
    7. 'chain' → logprob: -12.878226280212402
    8. 'p' → logprob: -13.753226280212402
    9. '_power' → logprob: -14.128226280212402
    10. '\' → logprob: -14.128226280212402

Token 624: 'owers' (ID: 23882)
  Prédit: 'ow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ow' → logprob: -0.27142953872680664
    2. 'owers' → logprob: -2.1464295387268066
    3. 'chain' → logprob: -2.7714295387268066
    4. 'ower' → logprob: -2.8964295387268066
    5. '_chain' → logprob: -6.521429538726807
    6. 'pow' → logprob: -7.896429538726807
    7. 'ows' → logprob: -8.021429061889648
    8. 'powers' → logprob: -8.521429061889648
    9. 'o' → logprob: -8.896429061889648
    10. 'Chain' → logprob: -9.146429061889648

Token 625: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012905937619507313
    2. ',res' → logprob: -7.126290798187256
    3. ')' → logprob: -8.126290321350098
    4. ' ,' → logprob: -8.626290321350098
    5. '%' → logprob: -12.626290321350098
    6. ',n' → logprob: -12.876290321350098
    7. ',a' → logprob: -13.626290321350098
    8. '   ' → logprob: -14.751290321350098
    9. ')%' → logprob: -14.876290321350098
    10. ' if' → logprob: -15.001290321350098

Token 626: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5232548713684082
    2. 'res' → logprob: -0.8982548713684082
    3. ' ' → logprob: -9.77325439453125
    4. ' res' → logprob: -9.77325439453125
    5. '   ' → logprob: -11.14825439453125
    6. '  ' → logprob: -14.39825439453125
    7. '	res' → logprob: -14.64825439453125
    8. '(res' → logprob: -14.77325439453125
    9. '       ' → logprob: -14.77325439453125
    10. '$res' → logprob: -15.02325439453125

Token 627: '1' (ID: 16)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5759415626525879
    2. '1' → logprob: -0.8259415626525879
    3. ' res' → logprob: -13.70094108581543
    4. ' ' → logprob: -15.20094108581543
    5. '(res' → logprob: -15.70094108581543
    6. '$res' → logprob: -16.07594108581543
    7. '```' → logprob: -16.45094108581543
    8. '_res' → logprob: -16.82594108581543
    9. 'Res' → logprob: -16.95094108581543
    10. '   ' → logprob: -17.07594108581543

Token 628: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0445127372804563e-05
    2. ' )' → logprob: -11.75001049041748
    3. ')
' → logprob: -14.12501049041748
    4. ')#' → logprob: -14.50001049041748
    5. ')return' → logprob: -14.50001049041748
    6. '   ' → logprob: -15.00001049041748
    7. '#' → logprob: -16.250009536743164
    8. ')a' → logprob: -16.750009536743164
    9. ')`' → logprob: -16.750009536743164
    10. '+' → logprob: -16.875009536743164

Token 629: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 630: ' base' (ID: 3611)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.02183925174176693
    2. 'n' → logprob: -4.521839141845703
    3. ' bits' → logprob: -5.271839141845703
    4. 'base' → logprob: -5.896839141845703
    5. 'pow' → logprob: -6.146839141845703
    6. ' n' → logprob: -8.521839141845703
    7. ' base' → logprob: -8.771839141845703
    8. 'len' → logprob: -9.021839141845703
    9. 'res' → logprob: -10.021839141845703
    10. 'a' → logprob: -10.271839141845703

Token 631: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.07140440493822098
    2. 'powers' → logprob: -2.821404457092285
    3. '_chain' → logprob: -5.446404457092285
    4. 'else' → logprob: -5.571404457092285
    5. 'pow' → logprob: -7.321404457092285
    6. '_pow' → logprob: -9.071404457092285
    7. 'chain' → logprob: -9.446404457092285
    8. '_power' → logprob: -9.821404457092285
    9. 'p' → logprob: -9.946404457092285
    10. '_ch' → logprob: -10.071404457092285

Token 632: 'owers' (ID: 23882)
  Prédit: 'ow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ow' → logprob: -0.00043949027894996107
    2. 'ower' → logprob: -8.750439643859863
    3. 'w' → logprob: -9.375439643859863
    4. 'pow' → logprob: -9.375439643859863
    5. 'owers' → logprob: -10.250439643859863
    6. 'ot' → logprob: -11.250439643859863
    7. 'owed' → logprob: -11.500439643859863
    8. 'ows' → logprob: -12.250439643859863
    9. 'owered' → logprob: -12.250439643859863
    10. 'r' → logprob: -12.625439643859863

Token 633: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1002255454659462
    2. ' else' → logprob: -2.3502254486083984
    3. '!=' → logprob: -10.975225448608398
    4. '==' → logprob: -14.225225448608398
    5. '	else' → logprob: -14.850225448608398
    6. ' !=' → logprob: -15.725225448608398
    7. '>' → logprob: -16.2252254486084
    8. ' ' → logprob: -16.4752254486084
    9. '[]' → logprob: -16.6002254486084
    10. 'not' → logprob: -16.6002254486084

Token 634: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.50007438659668
    4. '0' → logprob: -18.87507438659668
    5. '  ' → logprob: -19.12507438659668
    6. 'def' → logprob: -19.50007438659668
    7. '۱' → logprob: -20.31257438659668
    8. '    ' → logprob: -20.43757438659668
    9. '```' → logprob: -20.56257438659668
    10. 'pow' → logprob: -20.81257438659668

Token 635: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '0' → logprob: -15.500007629394531
    4. 'pow' → logprob: -18.12500762939453
    5. '   ' → logprob: -18.31250762939453
    6. 'def' → logprob: -19.00000762939453
    7. '```' → logprob: -19.12500762939453
    8. '{' → logprob: -19.18750762939453
    9. 'a' → logprob: -19.56250762939453
    10. '  ' → logprob: -20.00000762939453

Token 636: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 637: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3790742754936218
    2. '#' → logprob: -2.1290743350982666
    3. ':' → logprob: -2.7540743350982666
    4. '<|end|>' → logprob: -3.1290743350982666
    5. 'def' → logprob: -3.1290743350982666
    6. '+' → logprob: -5.1290740966796875
    7. '(' → logprob: -5.1290740966796875
    8. 'a' → logprob: -5.2540740966796875
    9. '```' → logprob: -5.5040740966796875
    10. '^' → logprob: -5.7540740966796875

Token 638: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5270457863807678
    2. ',' → logprob: -1.527045726776123
    3. ' =' → logprob: -1.652045726776123
    4. '.' → logprob: -8.527046203613281
    5. ' ' → logprob: -8.527046203613281
    6. ')' → logprob: -8.777046203613281
    7. '>' → logprob: -9.777046203613281
    8. ' ,' → logprob: -10.152046203613281
    9. '_' → logprob: -10.652046203613281
    10. '=int' → logprob: -11.027046203613281

Token 639: ' a' (ID: 261)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4785998463630676
    2. 'k' → logprob: -0.9785998463630676
    3. 'm' → logprob: -5.478600025177002
    4. 'q' → logprob: -9.728599548339844
    5. '*r' → logprob: -9.728599548339844
    6. '*k' → logprob: -9.978599548339844
    7. '_r' → logprob: -10.353599548339844
    8. 'a' → logprob: -10.478599548339844
    9. 'n' → logprob: -10.978599548339844
    10. ' r' → logprob: -11.103599548339844

Token 640: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.032844867557287216
    2. ' =' → logprob: -3.5328447818756104
    3. ',' → logprob: -5.7828450202941895
    4. 'b' → logprob: -13.282844543457031
    5. ',b' → logprob: -13.907844543457031
    6. 'd' → logprob: -14.032844543457031
    7. 'm' → logprob: -14.407844543457031
    8. 'r' → logprob: -14.407844543457031
    9. 'rray' → logprob: -14.657844543457031
    10. 'n' → logprob: -14.657844543457031

Token 641: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00016110755677800626
    2. 'k' → logprob: -9.000161170959473
    3. 'x' → logprob: -11.750161170959473
    4. ' b' → logprob: -12.000161170959473
    5. 'm' → logprob: -12.125161170959473
    6. 'n' → logprob: -12.125161170959473
    7. 'r' → logprob: -13.125161170959473
    8. 'd' → logprob: -13.250161170959473
    9. 'p' → logprob: -13.500161170959473
    10. 'c' → logprob: -13.750161170959473

Token 642: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007382771000266075
    2. ' =' → logprob: -7.250738143920898
    3. ',' → logprob: -10.750738143920898
    4. '=sys' → logprob: -12.250738143920898
    5. '=input' → logprob: -14.125738143920898
    6. '=n' → logprob: -14.375738143920898
    7. 'n' → logprob: -15.750738143920898
    8. '=a' → logprob: -16.0007381439209
    9. '=int' → logprob: -16.1257381439209
    10. '=list' → logprob: -16.1257381439209

Token 643: ' ac' (ID: 1375)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.5755439400672913
    2. 'II' → logprob: -0.9505439400672913
    3. 'map' → logprob: -3.3255438804626465
    4. ' ac' → logprob: -4.4505438804626465
    5. ' II' → logprob: -6.0755438804626465
    6. ' map' → logprob: -7.2005438804626465
    7. 'AC' → logprob: -8.200544357299805
    8. 'ii' → logprob: -10.200544357299805
    9. ' ' → logprob: -10.950544357299805
    10. 'III' → logprob: -10.950544357299805

Token 644: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.1472419600977446e-06
    2. '(input' → logprob: -14.250000953674316
    3. 'n' → logprob: -16.250001907348633
    4. ' input' → logprob: -16.250001907348633
    5. '_input' → logprob: -16.250001907348633
    6. 'int' → logprob: -17.875001907348633
    7. '=input' → logprob: -18.250001907348633
    8. '<input' → logprob: -19.000001907348633
    9. 'list' → logprob: -19.125001907348633
    10. 'inputs' → logprob: -19.125001907348633

Token 645: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30595412850379944
    2. '<|end|>' → logprob: -1.555954098701477
    3. 'n' → logprob: -3.9309542179107666
    4. 'print' → logprob: -4.8059539794921875
    5. 'for' → logprob: -5.1809539794921875
    6. '[' → logprob: -5.4309539794921875
    7. 'result' → logprob: -6.1809539794921875
    8. ',' → logprob: -6.4309539794921875
    9. '#' → logprob: -6.6809539794921875
    10. '<|end|>' → logprob: -6.9309539794921875

Token 646: 'c' (ID: 66)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4839459657669067
    2. 'ans' → logprob: -1.7339459657669067
    3. 's' → logprob: -1.9839459657669067
    4. 'total' → logprob: -2.108945846557617
    5. 'result' → logprob: -2.108945846557617
    6. 'res' → logprob: -2.233945846557617
    7. 'if' → logprob: -2.858945846557617
    8. 'dp' → logprob: -3.733945846557617
    9. 'c' → logprob: -5.233945846557617
    10. 'k' → logprob: -5.358945846557617

Token 647: ' =' (ID: 314)
  Prédit: 'omb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omb' → logprob: -0.1625458300113678
    2. ' =' → logprob: -2.662545919418335
    3. '=' → logprob: -3.162545919418335
    4. 'mb' → logprob: -3.787545919418335
    5. 'val' → logprob: -5.912545680999756
    6. 'om' → logprob: -6.037545680999756
    7. 'nt' → logprob: -6.287545680999756
    8. 'ombo' → logprob: -6.662545680999756
    9. '_result' → logprob: -7.287545680999756
    10. 'c' → logprob: -7.287545680999756

Token 648: ' sum' (ID: 4215)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.002183449687436223
    2. 'omb' → logprob: -6.752183437347412
    3. ' combination' → logprob: -7.002183437347412
    4. 'om' → logprob: -9.87718391418457
    5. '(com' → logprob: -10.37718391418457
    6. 'mod' → logprob: -11.62718391418457
    7. 'com' → logprob: -12.37718391418457
    8. 'cmb' → logprob: -13.37718391418457
    9. 'mb' → logprob: -13.87718391418457
    10. 'combo' → logprob: -14.25218391418457

Token 649: '(map' (ID: 16946)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.009696951135993004
    2. '(' → logprob: -4.759696960449219
    3. '(range' → logprob: -7.634696960449219
    4. '((' → logprob: -8.384696960449219
    5. 'comb' → logprob: -9.009696960449219
    6. '([' → logprob: -9.259696960449219
    7. '(
' → logprob: -9.634696960449219
    8. '(c' → logprob: -10.634696960449219
    9. '(mod' → logprob: -10.759696960449219
    10. '(map' → logprob: -11.509696960449219

Token 650: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.10919414460659027
    2. '(part' → logprob: -2.359194040298462
    3. 'partial' → logprob: -4.984194278717041
    4. 'lambda' → logprob: -6.734194278717041
    5. '(' → logprob: -7.859194278717041
    6. '(int' → logprob: -8.234193801879883
    7. '(f' → logprob: -8.859193801879883
    8. '(
' → logprob: -9.609193801879883
    9. '(com' → logprob: -10.484193801879883
    10. '   ' → logprob: -11.359193801879883

Token 651: ' k' (ID: 372)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15906915068626404
    2. 'lambda' → logprob: -2.284069061279297
    3. 'i' → logprob: -3.159069061279297
    4. '   ' → logprob: -6.659069061279297
    5. '(lambda' → logprob: -7.534069061279297
    6. 'k' → logprob: -8.284069061279297
    7. 'r' → logprob: -8.784069061279297
    8. 'n' → logprob: -8.909069061279297
    9. ' x' → logprob: -9.159069061279297
    10. 'c' → logprob: -10.409069061279297

Token 652: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013393278641160578
    2. ' :' → logprob: -9.750133514404297
    3. 'k' → logprob: -10.750133514404297
    4. '   ' → logprob: -11.125133514404297
    5. ':k' → logprob: -11.500133514404297
    6. 'comb' → logprob: -12.125133514404297
    7. 'a' → logprob: -12.250133514404297
    8. 'n' → logprob: -12.875133514404297
    9. ':
' → logprob: -12.875133514404297
    10. ',' → logprob: -13.000133514404297

Token 653: ' combination' (ID: 14083)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.1431514173746109
    2. 'lambda' → logprob: -2.1431515216827393
    3. ' combination' → logprob: -4.51815128326416
    4. 'partial' → logprob: -5.76815128326416
    5. ' lambda' → logprob: -6.39315128326416
    6. '(lambda' → logprob: -8.39315128326416
    7. '   ' → logprob: -9.51815128326416
    8. 'mod' → logprob: -10.26815128326416
    9. 'combo' → logprob: -11.01815128326416
    10. ' partial' → logprob: -12.01815128326416

Token 654: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0003025729674845934
    2. '(a' → logprob: -8.3753023147583
    3. '(' → logprob: -10.2503023147583
    4. '(
' → logprob: -10.7503023147583
    5. 'n' → logprob: -11.3753023147583
    6. 'a' → logprob: -12.7503023147583
    7. ' (' → logprob: -14.8753023147583
    8. '   ' → logprob: -16.000303268432617
    9. '
' → logprob: -16.000303268432617
    10. '(k' → logprob: -16.500303268432617

Token 655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14277540147304535
    2. ',k' → logprob: -2.017775297164917
    3. 'k' → logprob: -9.642775535583496
    4. ' ,' → logprob: -11.142775535583496
    5. ',
' → logprob: -11.642775535583496
    6. ',b' → logprob: -12.767775535583496
    7. '-' → logprob: -12.767775535583496
    8. ',a' → logprob: -13.392775535583496
    9. 'a' → logprob: -14.017775535583496
    10. ',n' → logprob: -14.267775535583496

Token 656: ' min' (ID: 1349)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.8550976164988242e-05
    2. ' k' → logprob: -11.000018119812012
    3. '   ' → logprob: -14.250018119812012
    4. 'a' → logprob: -14.250018119812012
    5. ',' → logprob: -16.375019073486328
    6. ' ' → logprob: -16.375019073486328
    7. '
' → logprob: -16.750019073486328
    8. ')' → logprob: -17.250019073486328
    9. '```' → logprob: -17.375019073486328
    10. ',k' → logprob: -17.500019073486328

Token 657: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.011668838560581207
    2. '(a' → logprob: -4.511668682098389
    3. 'k' → logprob: -7.636668682098389
    4. '(b' → logprob: -9.261669158935547
    5. 'a' → logprob: -11.136669158935547
    6. '(' → logprob: -11.511669158935547
    7. '(n' → logprob: -12.261669158935547
    8. '=k' → logprob: -12.636669158935547
    9. '((' → logprob: -12.761669158935547
    10. '(
' → logprob: -13.386669158935547

Token 658: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6009644865989685
    2. ',' → logprob: -0.9759644865989685
    3. ',a' → logprob: -2.9759645462036133
    4. ',k' → logprob: -4.100964546203613
    5. '(k' → logprob: -5.725964546203613
    6. 'a' → logprob: -6.225964546203613
    7. ',b' → logprob: -6.975964546203613
    8. ',(' → logprob: -8.225964546203613
    9. '(b' → logprob: -8.475964546203613
    10. '(' → logprob: -8.725964546203613

Token 659: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6755454540252686
    2. 'a' → logprob: -1.1755454540252686
    3. 'n' → logprob: -2.6755454540252686
    4. 'max' → logprob: -2.6755454540252686
    5. 'b' → logprob: -3.1755454540252686
    6. 'c' → logprob: -6.050545692443848
    7. 'min' → logprob: -8.300545692443848
    8. ' max' → logprob: -10.175545692443848
    9. '1' → logprob: -10.300545692443848
    10. '(k' → logprob: -10.550545692443848

Token 660: '-k' (ID: 10897)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9399967193603516
    2. ',' → logprob: -1.0649967193603516
    3. ' -' → logprob: -2.1899967193603516
    4. '-k' → logprob: -2.5649967193603516
    5. '-a' → logprob: -2.9399967193603516
    6. 'a' → logprob: -4.564996719360352
    7. ',k' → logprob: -5.064996719360352
    8. ',a' → logprob: -6.314996719360352
    9. '-b' → logprob: -7.564996719360352
    10. ')' → logprob: -7.689996719360352

Token 661: ')),' (ID: 12098)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15540744364261627
    2. '),' → logprob: -2.030407428741455
    3. ',a' → logprob: -5.405407428741455
    4. ')' → logprob: -6.155407428741455
    5. ')),' → logprob: -6.155407428741455
    6. 'a' → logprob: -6.280407428741455
    7. ' ,' → logprob: -7.530407428741455
    8. '   ' → logprob: -7.780407428741455
    9. ',b' → logprob: -7.905407428741455
    10. 'b' → logprob: -9.155407905578613

Token 662: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00821181945502758
    2. '[a' → logprob: -5.383211612701416
    3. ' range' → logprob: -5.758211612701416
    4. '(range' → logprob: -8.133212089538574
    5. '[' → logprob: -9.508212089538574
    6. 'a' → logprob: -10.758212089538574
    7. '(a' → logprob: -11.633212089538574
    8. 'filter' → logprob: -11.883212089538574
    9. '[b' → logprob: -12.008212089538574
    10. ' [' → logprob: -12.008212089538574

Token 663: 'n' (ID: 77)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009544049389660358
    2. 'i' → logprob: -5.5095438957214355
    3. 'range' → logprob: -5.5095438957214355
    4. '*a' → logprob: -7.5095438957214355
    5. '*' → logprob: -7.8845438957214355
    6. 'x' → logprob: -8.884544372558594
    7. '0' → logprob: -9.009544372558594
    8. 'k' → logprob: -9.384544372558594
    9. '1' → logprob: -10.259544372558594
    10. '(a' → logprob: -10.759544372558594

Token 664: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.28084567189216614
    2. ',' → logprob: -2.2808456420898438
    3. 'a' → logprob: -2.6558456420898438
    4. ' -' → logprob: -3.6558456420898438
    5. ']))' → logprob: -3.7808456420898438
    6. ',a' → logprob: -5.155845642089844
    7. '//' → logprob: -5.280845642089844
    8. '-a' → logprob: -5.780845642089844
    9. '])' → logprob: -6.030845642089844
    10. 'for' → logprob: -6.155845642089844

Token 665: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.013436553068459034
    2. '1' → logprob: -4.388436317443848
    3. 'b' → logprob: -7.888436317443848
    4. ' a' → logprob: -8.763436317443848
    5. '2' → logprob: -8.888436317443848
    6. 'i' → logprob: -9.388436317443848
    7. '0' → logprob: -9.513436317443848
    8. 'k' → logprob: -10.513436317443848
    9. '(a' → logprob: -10.763436317443848
    10. '   ' → logprob: -11.013436317443848

Token 666: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01376605499535799
    2. ']))' → logprob: -5.263766288757324
    3. '-' → logprob: -5.513766288757324
    4. ',b' → logprob: -6.263766288757324
    5. ' -' → logprob: -7.013766288757324
    6. ']),' → logprob: -7.638766288757324
    7. ',n' → logprob: -8.138766288757324
    8. ' ,' → logprob: -8.263766288757324
    9. '])),' → logprob: -8.888766288757324
    10. ']' → logprob: -9.013766288757324

Token 667: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10407757014036179
    2. 'b' → logprob: -2.3540775775909424
    3. 'a' → logprob: -5.729077339172363
    4. ' n' → logprob: -7.729077339172363
    5. '   ' → logprob: -9.479077339172363
    6. ' b' → logprob: -10.229077339172363
    7. '
' → logprob: -10.729077339172363
    8. '    
' → logprob: -12.354077339172363
    9. ' ' → logprob: -12.604077339172363
    10. '    ' → logprob: -12.729077339172363

Token 668: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03303011506795883
    2. ' -' → logprob: -3.6580300331115723
    3. '-b' → logprob: -5.158030033111572
    4. '+' → logprob: -7.283030033111572
    5. ',' → logprob: -8.90803050994873
    6. 'b' → logprob: -9.40803050994873
    7. ' ' → logprob: -10.90803050994873
    8. ' +' → logprob: -12.03303050994873
    9. '])' → logprob: -12.03303050994873
    10. '+b' → logprob: -12.40803050994873

Token 669: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00018220659694634378
    2. ' b' → logprob: -8.625182151794434
    3. '   ' → logprob: -13.625182151794434
    4. 'a' → logprob: -14.250182151794434
    5. '	b' → logprob: -14.500182151794434
    6. ' ' → logprob: -15.875182151794434
    7. '_b' → logprob: -16.87518310546875
    8. '    ' → logprob: -17.00018310546875
    9. '           ' → logprob: -17.12518310546875
    10. '1' → logprob: -17.50018310546875

Token 670: ']))

' (ID: 92947)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.006797201931476593
    2. '])' → logprob: -6.2567973136901855
    3. '],' → logprob: -6.3817973136901855
    4. '))' → logprob: -6.8817973136901855
    5. ']))
' → logprob: -7.1317973136901855
    6. ']' → logprob: -7.6317973136901855
    7. ',' → logprob: -7.8817973136901855
    8. ']))

' → logprob: -8.756796836853027
    9. '),' → logprob: -9.881796836853027
    10. ')))' → logprob: -10.131796836853027

Token 671: 'print' (ID: 1598)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4678157866001129
    2. ')' → logprob: -1.2178157567977905
    3. ' %' → logprob: -2.96781587600708
    4. 'print' → logprob: -4.96781587600708
    5. ',' → logprob: -5.59281587600708
    6. '%c' → logprob: -5.96781587600708
    7. '(' → logprob: -6.09281587600708
    8. '+' → logprob: -6.21781587600708
    9. ')%' → logprob: -6.34281587600708
    10. 'c' → logprob: -6.46781587600708

Token 672: '((' (ID: 2054)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0009616006282158196
    2. '((' → logprob: -7.000961780548096
    3. '(' → logprob: -10.375961303710938
    4. 'c' → logprob: -11.625961303710938
    5. '(pow' → logprob: -12.250961303710938
    6. '(f' → logprob: -12.500961303710938
    7. '(int' → logprob: -15.375961303710938
    8. '(
' → logprob: -15.500961303710938
    9. '(sum' → logprob: -15.625961303710938
    10. '()' → logprob: -15.750961303710938

Token 673: 'mod' (ID: 4847)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.4257481098175049
    2. 'mod' → logprob: -1.6757481098175049
    3. '(pow' → logprob: -2.425748109817505
    4. '(mod' → logprob: -2.800748109817505
    5. '(' → logprob: -5.425747871398926
    6. '(c' → logprob: -6.175747871398926
    7. 'comb' → logprob: -6.925747871398926
    8. '((' → logprob: -7.425747871398926
    9. 'c' → logprob: -7.425747871398926
    10. '(f' → logprob: -7.550747871398926

Token 674: 'pow' (ID: 30304)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.695478081703186
    2. 'pow' → logprob: -1.195478081703186
    3. '-' → logprob: -2.4454779624938965
    4. '+' → logprob: -2.5704779624938965
    5. '-p' → logprob: -4.4454779624938965
    6. ' +' → logprob: -4.6954779624938965
    7. '-c' → logprob: -5.0704779624938965
    8. '**' → logprob: -6.1954779624938965
    9. '(pow' → logprob: -6.4454779624938965
    10. ' pow' → logprob: -6.5704779624938965

Token 675: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03579078987240791
    2. '2' → logprob: -3.5357906818389893
    3. '(n' → logprob: -5.535790920257568
    4. '(c' → logprob: -6.535790920257568
    5. '(a' → logprob: -7.660790920257568
    6. ')' → logprob: -9.41079044342041
    7. 'c' → logprob: -11.16079044342041
    8. 'n' → logprob: -11.78579044342041
    9. '(
' → logprob: -11.78579044342041
    10. 'a' → logprob: -12.28579044342041

Token 676: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.455048449221067e-05
    2. '(' → logprob: -10.500054359436035
    3. 'n' → logprob: -12.000054359436035
    4. ')' → logprob: -12.125054359436035
    5. '
' → logprob: -12.625054359436035
    6. '10' → logprob: -12.875054359436035
    7. 'a' → logprob: -13.000054359436035
    8. ' ' → logprob: -13.375054359436035
    9. '3' → logprob: -13.500054359436035
    10. 'c' → logprob: -13.875054359436035

Token 677: ',' (ID: 11)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.6596131920814514
    2. ',' → logprob: -0.9096131920814514
    3. 'n' → logprob: -3.1596131324768066
    4. '(n' → logprob: -3.2846131324768066
    5. ' ,' → logprob: -8.159613609313965
    6. ' n' → logprob: -10.409613609313965
    7. '(' → logprob: -10.534613609313965
    8. '**' → logprob: -11.284613609313965
    9. ' (' → logprob: -12.909613609313965
    10. '
' → logprob: -13.159613609313965

Token 678: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.8889261304575484e-06
    2. ' n' → logprob: -12.500003814697266
    3. '	n' → logprob: -17.875003814697266
    4. '(n' → logprob: -18.875003814697266
    5. '   ' → logprob: -19.250003814697266
    6. ' ' → logprob: -20.625003814697266
    7. '
' → logprob: -20.875003814697266
    8. '[n' → logprob: -21.000003814697266
    9. ')n' → logprob: -21.375003814697266
    10. '_n' → logprob: -21.875003814697266

Token 679: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004014645703136921
    2. ',' → logprob: -5.629014492034912
    3. ' )' → logprob: -9.00401496887207
    4. ')-' → logprob: -9.25401496887207
    5. '-' → logprob: -10.25401496887207
    6. '}' → logprob: -10.37901496887207
    7. ' ' → logprob: -10.87901496887207
    8. ' -' → logprob: -11.00401496887207
    9. ',n' → logprob: -11.00401496887207
    10. '```' → logprob: -11.37901496887207

Token 680: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.0206720617134124e-05
    2. ' mod' → logprob: -11.50001049041748
    3. '(mod' → logprob: -18.000009536743164
    4. '10' → logprob: -19.750009536743164
    5. ')' → logprob: -20.625009536743164
    6. 'MOD' → logprob: -20.625009536743164
    7. '	mod' → logprob: -21.250009536743164
    8. '100' → logprob: -22.000009536743164
    9. 'm' → logprob: -22.125009536743164
    10. 'moder' → logprob: -22.500009536743164

Token 681: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.32654589228332e-05
    2. ')-' → logprob: -10.000073432922363
    3. ' )' → logprob: -10.875073432922363
    4. '-' → logprob: -12.625073432922363
    5. ' ' → logprob: -13.125073432922363
    6. ' -' → logprob: -13.875073432922363
    7. '   ' → logprob: -14.625073432922363
    8. '-)' → logprob: -14.875073432922363
    9. '```' → logprob: -15.000073432922363
    10. '}' → logprob: -15.125073432922363

Token 682: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6933287382125854
    2. ' -' → logprob: -0.6933287382125854
    3. '-c' → logprob: -8.693328857421875
    4. ' ' → logprob: -11.693328857421875
    5. '-k' → logprob: -13.568328857421875
    6. ' ' → logprob: -13.818328857421875
    7. '-f' → logprob: -14.193328857421875
    8. ')' → logprob: -14.693328857421875
    9. '-p' → logprob: -14.943328857421875
    10. ',' → logprob: -15.068328857421875

Token 683: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005333751323632896
    2. ' c' → logprob: -8.500533103942871
    3. '(c' → logprob: -8.625533103942871
    4. '1' → logprob: -8.875533103942871
    5. '(' → logprob: -11.750533103942871
    6. ')c' → logprob: -13.250533103942871
    7. ' (' → logprob: -15.375533103942871
    8. '
' → logprob: -16.125534057617188
    9. '	c' → logprob: -16.125534057617188
    10. ')' → logprob: -16.125534057617188

Token 684: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11601182818412781
    2. '%' → logprob: -2.36601185798645
    3. ')%' → logprob: -4.366011619567871
    4. '+' → logprob: -5.866011619567871
    5. ' %' → logprob: -9.491011619567871
    6. '-' → logprob: -10.491011619567871
    7. ' )' → logprob: -11.241011619567871
    8. '%c' → logprob: -11.616011619567871
    9. ' +' → logprob: -11.616011619567871
    10. '%n' → logprob: -12.616011619567871

Token 685: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.171581091824919e-05
    2. ' ' → logprob: -10.12507152557373
    3. '2' → logprob: -10.75007152557373
    4. '(' → logprob: -12.37507152557373
    5. 'mod' → logprob: -12.37507152557373
    6. '(mod' → logprob: -13.62507152557373
    7. ' (' → logprob: -16.250072479248047
    8. '   ' → logprob: -16.250072479248047
    9. '0' → logprob: -16.875072479248047
    10. '((' → logprob: -16.875072479248047

Token 686: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00195384887047112
    2. '2' → logprob: -6.251954078674316
    3. 'mod' → logprob: -11.001954078674316
    4. ' ' → logprob: -12.751954078674316
    5. '(mod' → logprob: -12.751954078674316
    6. '(' → logprob: -12.876954078674316
    7. '0' → logprob: -16.376953125
    8. '3' → logprob: -17.001953125
    9. '((' → logprob: -17.251953125
    10. 'print' → logprob: -17.501953125

Token 687: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005722135538235307
    2. ')%' → logprob: -7.500572204589844
    3. '%' → logprob: -11.125572204589844
    4. '))' → logprob: -12.750572204589844
    5. ' )' → logprob: -14.500572204589844
    6. ')`' → logprob: -14.625572204589844
    7. ')
' → logprob: -16.125572204589844
    8. '+' → logprob: -16.250572204589844
    9. ')}' → logprob: -16.375572204589844
    10. '%)' → logprob: -17.000572204589844

Token 688: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001669942052103579
    2. '%' → logprob: -6.626669883728027
    3. ')%' → logprob: -8.001669883728027
    4. ' )' → logprob: -12.501669883728027
    5. '%)' → logprob: -13.126669883728027
    6. ' %' → logprob: -14.001669883728027
    7. '))' → logprob: -14.376669883728027
    8. '```' → logprob: -14.626669883728027
    9. ')`' → logprob: -14.751669883728027
    10. ')
' → logprob: -15.251669883728027

Token 689: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.2664456789934775e-06
    2. ' mod' → logprob: -14.250000953674316
    3. '(mod' → logprob: -14.500000953674316
    4. '	mod' → logprob: -22.750001907348633
    5. '(' → logprob: -24.125001907348633
    6. 'MOD' → logprob: -24.250001907348633
    7. ' мод' → logprob: -24.375001907348633
    8. '```' → logprob: -24.625001907348633
    9. 'moder' → logprob: -24.625001907348633
    10. 'modal' → logprob: -24.875001907348633

Token 690: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -17.0
    4. '))' → logprob: -18.75
    5. '<|end|>' → logprob: -19.0
    6. '```' → logprob: -19.25
    7. '),' → logprob: -19.625
    8. '())' → logprob: -19.75
    9. ')#' → logprob: -19.875
    10. ')`' → logprob: -19.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 688
Tokens correctement prédits (1ère position, stricte): 246
Tokens correctement prédits (1ère position, avec adaptation): 254
Tokens correctement prédits (top 10): 534
Précision stricte (1ère position): 35.76%
Précision adaptée (1ère position): 36.92%
Précision (top 10): 77.62%
================================================================================
