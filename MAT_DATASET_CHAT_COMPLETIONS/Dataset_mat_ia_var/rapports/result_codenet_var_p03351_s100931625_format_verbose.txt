================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
start_position, intermediary_position, target_position, maximum_distance = map(int, input().split())

if abs(start_position - target_position) <= maximum_distance:
    print("Yes")

elif abs(start_position - intermediary_position) <= maximum_distance and abs(intermediary_position - target_position) <= maximum_distance:
    print("Yes")

else:
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'start' (ID: 5236)
  → Token d'amorce (pas de prédiction)

Token 1: '_position' (ID: 23739)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' intermediary' (ID: 188083)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.6875184178352356
    2. 'end' → logprob: -0.9375184178352356
    3. 'offset' → logprob: -3.562518358230591
    4. 'start' → logprob: -4.06251859664917
    5. 'length' → logprob: -4.31251859664917
    6. ' next' → logprob: -4.68751859664917
    7. ' start' → logprob: -4.93751859664917
    8. ' offset' → logprob: -5.31251859664917
    9. ' step' → logprob: -5.81251859664917
    10. ' length' → logprob: -6.18751859664917

Token 4: '_position' (ID: 23739)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7077395915985107
    2. '=' → logprob: -0.9577395915985107
    3. '_' → logprob: -2.3327395915985107
    4. ' =' → logprob: -4.70773983001709
    5. '.' → logprob: -4.83273983001709
    6. ')' → logprob: -5.08273983001709
    7. '_,' → logprob: -6.70773983001709
    8. '+' → logprob: -8.08273983001709
    9. '_token' → logprob: -8.45773983001709
    10. '```' → logprob: -8.45773983001709

Token 5: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.051523249596357346
    2. '_' → logprob: -3.801523208618164
    3. '=' → logprob: -4.176523208618164
    4. '.' → logprob: -5.051523208618164
    5. '```' → logprob: -5.926523208618164
    6. ')' → logprob: -6.801523208618164
    7. ' =' → logprob: -6.801523208618164
    8. '_,' → logprob: -7.676523208618164
    9. '[' → logprob: -8.926523208618164
    10. ',_' → logprob: -9.301523208618164

Token 6: ' target' (ID: 3783)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8422465920448303
    2. 'final' → logprob: -1.2172465324401855
    3. 'destination' → logprob: -2.2172465324401855
    4. ' final' → logprob: -3.0922465324401855
    5. 'target' → logprob: -3.4672465324401855
    6. ' destination' → logprob: -3.8422465324401855
    7. 'next' → logprob: -4.2172465324401855
    8. 'end' → logprob: -4.3422465324401855
    9. ' next' → logprob: -4.7172465324401855
    10. ' target' → logprob: -5.3422465324401855

Token 7: '_position' (ID: 23739)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8711128234863281
    2. '_' → logprob: -1.1211128234863281
    3. ' =' → logprob: -2.371112823486328
    4. ',' → logprob: -2.746112823486328
    5. '.' → logprob: -2.871112823486328
    6. ')' → logprob: -3.871112823486328
    7. '```' → logprob: -4.496112823486328
    8. '[' → logprob: -5.246112823486328
    9. '(' → logprob: -6.121112823486328
    10. ':' → logprob: -8.121112823486328

Token 8: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26414069533348083
    2. '.' → logprob: -2.3891406059265137
    3. ' =' → logprob: -3.1391406059265137
    4. '_' → logprob: -3.3891406059265137
    5. ',' → logprob: -3.5141406059265137
    6. '```' → logprob: -4.014140605926514
    7. '(' → logprob: -5.264140605926514
    8. ')' → logprob: -5.389140605926514
    9. '[' → logprob: -5.514140605926514
    10. ':' → logprob: -7.514140605926514

Token 9: ' maximum' (ID: 10562)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4736294746398926
    2. ',' → logprob: -1.2236294746398926
    3. ' =' → logprob: -2.5986294746398926
    4. ')' → logprob: -5.473629474639893
    5. '<|end|>' → logprob: -6.098629474639893
    6. '```' → logprob: -6.848629474639893
    7. ':' → logprob: -8.473628997802734
    8. 'def' → logprob: -8.973628997802734
    9. ' are' → logprob: -9.348628997802734
    10. '.' → logprob: -9.598628997802734

Token 10: '_distance' (ID: 45537)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003319353563711047
    2. '_position' → logprob: -7.128319263458252
    3. '_distance' → logprob: -7.253319263458252
    4. '_space' → logprob: -7.253319263458252
    5. '=' → logprob: -8.75331974029541
    6. '_length' → logprob: -9.00331974029541
    7. '_step' → logprob: -9.00331974029541
    8. '_positions' → logprob: -9.50331974029541
    9. '_steps' → logprob: -10.00331974029541
    10. ')' → logprob: -10.00331974029541

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3137052059173584
    2. ',' → logprob: -2.3137052059173584
    3. ')' → logprob: -2.9387052059173584
    4. ' =' → logprob: -3.0637052059173584
    5. '.' → logprob: -3.9387052059173584
    6. '_' → logprob: -4.0637054443359375
    7. '```' → logprob: -4.1887054443359375
    8. ':' → logprob: -4.4387054443359375
    9. '(' → logprob: -5.6887054443359375
    10. '[' → logprob: -6.8137054443359375

Token 12: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44787341356277466
    2. '0' → logprob: -1.0728733539581299
    3. ' (' → logprob: -4.947873592376709
    4. 'start' → logprob: -6.072873592376709
    5. ' [' → logprob: -6.322873592376709
    6. ' None' → logprob: -6.447873592376709
    7. '(' → logprob: -6.572873592376709
    8. ' start' → logprob: -6.947873592376709
    9. '[start' → logprob: -6.947873592376709
    10. 'None' → logprob: -7.197873592376709

Token 13: '(int' (ID: 2742)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.41973862051963806
    2. '(' → logprob: -1.4197386503219604
    3. '(int' → logprob: -2.794738531112671
    4. '<|end|>' → logprob: -3.544738531112671
    5. 'lambda' → logprob: -5.41973876953125
    6. '(str' → logprob: -6.66973876953125
    7. '```' → logprob: -7.16973876953125
    8. '(
' → logprob: -7.41973876953125
    9. 'int' → logprob: -7.54473876953125
    10. '<|end|>' → logprob: -7.66973876953125

Token 14: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.537071943283081
    2. '(input' → logprob: -1.037071943283081
    3. 'input' → logprob: -4.03707218170166
    4. '(' → logprob: -4.03707218170166
    5. '<|end|>' → logprob: -4.28707218170166
    6. '(user' → logprob: -5.03707218170166
    7. '<|end|>' → logprob: -6.66207218170166
    8. 'user' → logprob: -6.91207218170166
    9. '[input' → logprob: -7.16207218170166
    10. '('' → logprob: -7.66207218170166

Token 15: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4741084575653076
    2. ' input' → logprob: -0.9741084575653076
    3. ')' → logprob: -10.724108695983887
    4. '(input' → logprob: -11.849108695983887
    5. ' )' → logprob: -14.224108695983887
    6. ',input' → logprob: -15.099108695983887
    7. '<input' → logprob: -15.474108695983887
    8. '```' → logprob: -15.474108695983887
    9. '[input' → logprob: -16.09910774230957
    10. '`' → logprob: -16.09910774230957

Token 16: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.10007143020629883
    2. '()' → logprob: -2.600071430206299
    3. '())' → logprob: -4.100071430206299
    4. ')' → logprob: -5.975071430206299
    5. '.readline' → logprob: -7.225071430206299
    6. '(' → logprob: -8.10007095336914
    7. '();)' → logprob: -8.35007095336914
    8. '()[' → logprob: -9.47507095336914
    9. '());' → logprob: -9.60007095336914
    10. '()));' → logprob: -10.47507095336914

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00026658078422769904
    2. 'strip' → logprob: -8.250267028808594
    3. 'rstrip' → logprob: -12.500267028808594
    4. ' split' → logprob: -13.750267028808594
    5. 'spl' → logprob: -15.375267028808594
    6. 'read' → logprob: -15.625267028808594
    7. ')' → logprob: -16.500267028808594
    8. '(split' → logprob: -16.625267028808594
    9. 'replace' → logprob: -17.500267028808594
    10. 'startswith' → logprob: -17.500267028808594

Token 18: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21941523253917694
    2. '())' → logprob: -1.8444151878356934
    3. '()' → logprob: -3.9694151878356934
    4. '(' → logprob: -4.219415187835693
    5. '('' → logprob: -5.844415187835693
    6. '))' → logprob: -6.844415187835693
    7. '(()' → logprob: -8.094415664672852
    8. '`)' → logprob: -8.844415664672852
    9. '()))' → logprob: -9.094415664672852
    10. '```' → logprob: -9.219415664672852

Token 19: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07036495953798294
    2. ' if' → logprob: -3.4453649520874023
    3. '
' → logprob: -4.570364952087402
    4. 'i' → logprob: -5.445364952087402
    5. '```' → logprob: -5.570364952087402
    6. 'while' → logprob: -5.820364952087402
    7. ')' → logprob: -6.070364952087402
    8. 'x' → logprob: -6.445364952087402
    9. '#' → logprob: -6.570364952087402
    10. ',' → logprob: -6.695364952087402

Token 20: ' abs' (ID: 8443)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.17338262498378754
    2. ' ' → logprob: -2.423382520675659
    3. ' maximum' → logprob: -3.173382520675659
    4. ' abs' → logprob: -3.798382520675659
    5. 'start' → logprob: -5.548382759094238
    6. 'abs' → logprob: -7.048382759094238
    7. '  ' → logprob: -7.548382759094238
    8. ' (' → logprob: -8.298382759094238
    9. 'maximum' → logprob: -8.673382759094238
    10. ' not' → logprob: -9.048382759094238

Token 21: '(start' (ID: 20008)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25202563405036926
    2. '(start' → logprob: -1.5020256042480469
    3. '(target' → logprob: -10.002025604248047
    4. '(max' → logprob: -11.127025604248047
    5. '(end' → logprob: -11.752025604248047
    6. '(s' → logprob: -12.377025604248047
    7. '((' → logprob: -12.502025604248047
    8. '(distance' → logprob: -12.502025604248047
    9. '(source' → logprob: -12.877025604248047
    10. '(st' → logprob: -13.252025604248047

Token 22: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.00013500562636181712
    2. '-' → logprob: -10.00013542175293
    3. '-position' → logprob: -10.50013542175293
    4. '-_' → logprob: -10.62513542175293
    5. ' -' → logprob: -11.50013542175293
    6. '_' → logprob: -11.75013542175293
    7. '_positions' → logprob: -12.75013542175293
    8. '_-' → logprob: -13.12513542175293
    9. '(position' → logprob: -13.25013542175293
    10. ' _' → logprob: -13.37513542175293

Token 23: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6939067244529724
    2. ' -' → logprob: -0.6939067244529724
    3. '-target' → logprob: -7.318906784057617
    4. ' ' → logprob: -9.318906784057617
    5. '-inter' → logprob: -12.693906784057617
    6. '+' → logprob: -14.318906784057617
    7. ' ' → logprob: -14.818906784057617
    8. '-start' → logprob: -14.818906784057617
    9. '-end' → logprob: -15.193906784057617
    10. '  ' → logprob: -15.318906784057617

Token 24: ' target' (ID: 3783)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.8163498044013977
    2. 'target' → logprob: -0.9413498044013977
    3. ' intermediary' → logprob: -2.191349744796753
    4. ' target' → logprob: -2.941349744796753
    5. ' intermediate' → logprob: -6.066349983215332
    6. ' inter' → logprob: -7.691349983215332
    7. ' intermedi' → logprob: -9.316349983215332
    8. ' interm' → logprob: -9.441349983215332
    9. ' ' → logprob: -9.566349983215332
    10. '   ' → logprob: -9.941349983215332

Token 25: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -1.7120533811976202e-05
    2. '_' → logprob: -11.125017166137695
    3. '_positions' → logprob: -13.875017166137695
    4. ' _' → logprob: -15.250017166137695
    5. '_location' → logprob: -15.375017166137695
    6. '_pos' → logprob: -15.625017166137695
    7. '_distance' → logprob: -16.125017166137695
    8. ')' → logprob: -16.375017166137695
    9. '_POSITION' → logprob: -16.375017166137695
    10. ')_' → logprob: -16.375017166137695

Token 26: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021915239631198347
    2. ' )' → logprob: -8.500219345092773
    3. ')>' → logprob: -12.125219345092773
    4. ')<=' → logprob: -12.375219345092773
    5. '>' → logprob: -13.250219345092773
    6. ')>=' → logprob: -13.875219345092773
    7. ' ' → logprob: -14.375219345092773
    8. ')`' → logprob: -14.625219345092773
    9. '```' → logprob: -14.750219345092773
    10. ' <=' → logprob: -15.437719345092773

Token 27: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4362870156764984
    2. ' >' → logprob: -1.3112870454788208
    3. '>' → logprob: -2.8112869262695312
    4. '<=' → logprob: -3.9362869262695312
    5. ' ' → logprob: -5.936286926269531
    6. ')' → logprob: -6.936286926269531
    7. ' >=' → logprob: -7.936286926269531
    8. ' <' → logprob: -9.436286926269531
    9. ' ==' → logprob: -9.811286926269531
    10. '">' → logprob: -9.936286926269531

Token 28: ' maximum' (ID: 10562)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.4741905927658081
    2. ' maximum' → logprob: -0.9741905927658081
    3. 'max' → logprob: -9.599190711975098
    4. ' ' → logprob: -10.224190711975098
    5. '0' → logprob: -12.724190711975098
    6. '.maximum' → logprob: -12.974190711975098
    7. '1' → logprob: -14.474190711975098
    8. 'm' → logprob: -14.474190711975098
    9. ' ' → logprob: -14.974190711975098
    10. ' max' → logprob: -15.161690711975098

Token 29: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.0007286362233571708
    2. '_' → logprob: -7.375728607177734
    3. '_dist' → logprob: -9.625728607177734
    4. '_d' → logprob: -10.875728607177734
    5. ' _' → logprob: -11.625728607177734
    6. '_difference' → logprob: -12.750728607177734
    7. '_dis' → logprob: -13.625728607177734
    8. '_position' → logprob: -13.875728607177734
    9. '_space' → logprob: -14.125728607177734
    10. 'distance' → logprob: -14.250728607177734

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005062076961621642
    2. ' :' → logprob: -8.250506401062012
    3. '):' → logprob: -8.625506401062012
    4. ' and' → logprob: -10.125506401062012
    5. ',' → logprob: -11.625506401062012
    6. ':
' → logprob: -12.125506401062012
    7. ')' → logprob: -12.875506401062012
    8. 'and' → logprob: -13.250506401062012
    9. '<|end|>' → logprob: -13.625506401062012
    10. ':return' → logprob: -13.750506401062012

Token 31: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9187899827957153
    2. 'print' → logprob: -1.7937899827957153
    3. ':
' → logprob: -1.7937899827957153
    4. ' print' → logprob: -1.9187899827957153
    5. '   ' → logprob: -2.168789863586426
    6. '
' → logprob: -5.543789863586426
    7. '\n' → logprob: -6.918789863586426
    8. ',' → logprob: -7.668789863586426
    9. '	print' → logprob: -7.793789863586426
    10. ' ' → logprob: -7.918789863586426

Token 32: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.180240198969841
    2. 'print' (adapté à ' print') → logprob: -1.8052401542663574
    3. '   ' → logprob: -7.930240154266357
    4. '    ' → logprob: -10.055240631103516
    5. '\n' → logprob: -10.180240631103516
    6. ' ' → logprob: -11.680240631103516
    7. ' \' → logprob: -11.930240631103516
    8. ' pass' → logprob: -11.930240631103516
    9. '\' → logprob: -12.555240631103516
    10. ''' → logprob: -12.555240631103516

Token 33: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03625582531094551
    2. '("' → logprob: -3.5362558364868164
    3. '('' → logprob: -5.536255836486816
    4. '(start' → logprob: -6.411255836486816
    5. '(True' → logprob: -8.036255836486816
    6. '("("' → logprob: -8.036255836486816
    7. '("(' → logprob: -8.911255836486816
    8. '()' → logprob: -9.911255836486816
    9. '(f' → logprob: -10.911255836486816
    10. '(end' → logprob: -11.661255836486816

Token 34: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.02901451289653778
    2. 'YES' → logprob: -4.029014587402344
    3. 'Can' → logprob: -6.654014587402344
    4. 'Y' → logprob: -6.904014587402344
    5. 'yes' → logprob: -6.904014587402344
    6. 'Happy' → logprob: -7.404014587402344
    7. 'start' → logprob: -7.654014587402344
    8. '0' → logprob: -7.654014587402344
    9. '1' → logprob: -7.779014587402344
    10. 'True' → logprob: -7.779014587402344

Token 35: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.02127702534198761
    2. '")
' → logprob: -4.021276950836182
    3. ')' → logprob: -5.896276950836182
    4. '")
' → logprob: -8.64627742767334
    5. 'else' → logprob: -9.02127742767334
    6. ')
' → logprob: -10.39627742767334
    7. ')")' → logprob: -10.77127742767334
    8. '"' → logprob: -11.77127742767334
    9. 'elif' → logprob: -12.14627742767334
    10. ')")
' → logprob: -13.14627742767334

Token 36: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.22821764647960663
    2. 'else' → logprob: -1.603217601776123
    3. ' else' → logprob: -6.478217601776123
    4. ' elif' → logprob: -6.853217601776123
    5. '<|end|>' → logprob: -9.103218078613281
    6. '```' → logprob: -10.228218078613281
    7. ')' → logprob: -10.603218078613281
    8. 'el' → logprob: -11.853218078613281
    9. '<|end|>' → logprob: -12.228218078613281
    10. '    
' → logprob: -12.728218078613281

Token 37: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.03866490349173546
    2. 'abs' → logprob: -3.2886648178100586
    3. ' ' → logprob: -7.663664817810059
    4. ' ' → logprob: -10.288664817810059
    5. ' start' → logprob: -10.413664817810059
    6. ' (' → logprob: -10.663664817810059
    7. ' max' → logprob: -10.788664817810059
    8. '(abs' → logprob: -11.038664817810059
    9. '  ' → logprob: -11.663664817810059
    10. '   ' → logprob: -12.163664817810059

Token 38: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.12411151081323624
    2. '(inter' → logprob: -2.4991114139556885
    3. '(' → logprob: -3.3741114139556885
    4. '(target' → logprob: -8.49911117553711
    5. 'start' → logprob: -9.87411117553711
    6. '(end' → logprob: -10.74911117553711
    7. '((' → logprob: -11.12411117553711
    8. 'inter' → logprob: -11.99911117553711
    9. '(ind' → logprob: -12.74911117553711
    10. ' (' → logprob: -13.12411117553711

Token 39: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.001296662027016282
    2. '_inter' → logprob: -6.876296520233154
    3. '(' → logprob: -9.001296997070312
    4. '_' → logprob: -10.126296997070312
    5. 'inter' → logprob: -10.126296997070312
    6. '(_' → logprob: -11.001296997070312
    7. '(inter' → logprob: -11.376296997070312
    8. 'position' → logprob: -11.501296997070312
    9. '_positions' → logprob: -12.126296997070312
    10. 'Position' → logprob: -12.501296997070312

Token 40: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011076119728386402
    2. '-' → logprob: -4.511075973510742
    3. ' ' → logprob: -10.761075973510742
    4. ' -
' → logprob: -13.011075973510742
    5. ')' → logprob: -13.511075973510742
    6. ' ' → logprob: -13.886075973510742
    7. '+' → logprob: -14.011075973510742
    8. ' +' → logprob: -14.136075973510742
    9. '<|end|>' → logprob: -15.698575973510742
    10. ' to' → logprob: -16.261075973510742

Token 41: ' intermediary' (ID: 188083)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.03870503976941109
    2. ' intermediary' → logprob: -3.2887051105499268
    3. ' intermediate' → logprob: -8.163704872131348
    4. 'target' → logprob: -8.288704872131348
    5. ' inter' → logprob: -10.163704872131348
    6. '(inter' → logprob: -10.538704872131348
    7. ' intermedi' → logprob: -10.663704872131348
    8. ' target' → logprob: -11.038704872131348
    9. ')' → logprob: -11.413704872131348
    10. ' interm' → logprob: -12.788704872131348

Token 42: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.00011927806917810813
    2. '_' → logprob: -9.62511920928955
    3. '_positions' → logprob: -10.62511920928955
    4. ')_' → logprob: -11.50011920928955
    5. ' _' → logprob: -11.50011920928955
    6. ')' → logprob: -12.50011920928955
    7. '_pos' → logprob: -13.37511920928955
    8. '_POSITION' → logprob: -13.87511920928955
    9. '_location' → logprob: -14.37511920928955
    10. '_Position' → logprob: -14.50011920928955

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0430859737098217
    2. ' )' → logprob: -3.168086051940918
    3. ' <=' → logprob: -9.918086051940918
    4. ')<=' → logprob: -10.418086051940918
    5. '<=' → logprob: -13.918086051940918
    6. ')+' → logprob: -14.293086051940918
    7. '`)' → logprob: -14.293086051940918
    8. '   ' → logprob: -14.293086051940918
    9. ' ' → logprob: -14.418086051940918
    10. '）' → logprob: -14.668086051940918

Token 44: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.26326897740364075
    2. ' +' → logprob: -1.5132689476013184
    3. '+' → logprob: -5.263268947601318
    4. ' ' → logprob: -6.013268947601318
    5. ')' → logprob: -6.388268947601318
    6. '<=' → logprob: -6.388268947601318
    7. ' >' → logprob: -9.388269424438477
    8. ' )' → logprob: -9.763269424438477
    9. ')<=' → logprob: -10.763269424438477
    10. '```' → logprob: -10.888269424438477

Token 45: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.25201907753944397
    2. 'maximum' → logprob: -1.5020190477371216
    3. ' ' → logprob: -9.627018928527832
    4. '.maximum' → logprob: -11.002018928527832
    5. 'max' → logprob: -12.377018928527832
    6. ' ' → logprob: -13.752018928527832
    7. ' max' → logprob: -14.502018928527832
    8. '	max' → logprob: -14.877018928527832
    9. '  ' → logprob: -15.252018928527832
    10. ' maximale' → logprob: -15.752018928527832

Token 46: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.00012284684635233134
    2. '_dist' → logprob: -9.375123023986816
    3. '_' → logprob: -10.750123023986816
    4. '_d' → logprob: -11.625123023986816
    5. ' _' → logprob: -12.875123023986816
    6. '_position' → logprob: -13.250123023986816
    7. '_difference' → logprob: -14.000123023986816
    8. '_dis' → logprob: -14.250123023986816
    9. 'distance' → logprob: -14.625123023986816
    10. ')_' → logprob: -15.125123023986816

Token 47: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17103101313114166
    2. ' and' → logprob: -1.9210309982299805
    3. 'and' → logprob: -4.5460309982299805
    4. ' :' → logprob: -9.42103099822998
    5. '   ' → logprob: -10.17103099822998
    6. ':
' → logprob: -11.54603099822998
    7. ' ' → logprob: -12.92103099822998
    8. '):' → logprob: -13.04603099822998
    9. '    ' → logprob: -14.29603099822998
    10. ')' → logprob: -14.42103099822998

Token 48: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.007930849678814411
    2. 'abs' → logprob: -4.882930755615234
    3. ' ' → logprob: -8.257930755615234
    4. ' ' → logprob: -10.007930755615234
    5. '(abs' → logprob: -11.507930755615234
    6. '  ' → logprob: -12.757930755615234
    7. ' (' → logprob: -13.507930755615234
    8. '    ' → logprob: -13.882930755615234
    9. '   ' → logprob: -14.132930755615234
    10. ' 
' → logprob: -14.257930755615234

Token 49: '(inter' (ID: 62819)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16028495132923126
    2. '(inter' → logprob: -1.9102849960327148
    3. '(ind' → logprob: -10.910284996032715
    4. '(start' → logprob: -11.285284996032715
    5. '(end' → logprob: -11.660284996032715
    6. '(target' → logprob: -11.785284996032715
    7. 'inter' → logprob: -13.035284996032715
    8. '((' → logprob: -13.160284996032715
    9. '(user' → logprob: -13.410284996032715
    10. '(im' → logprob: -13.910284996032715

Token 50: 'medi' (ID: 30353)
  Prédit: 'edi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edi' → logprob: -0.35126644372940063
    2. 'ary' → logprob: -1.3512663841247559
    3. 'medi' → logprob: -4.476266384124756
    4. 'iary' → logprob: -4.476266384124756
    5. 'di' → logprob: -4.976266384124756
    6. 'mediate' → logprob: -6.101266384124756
    7. 'position' → logprob: -6.351266384124756
    8. '_position' → logprob: -6.726266384124756
    9. 'ediator' → logprob: -6.726266384124756
    10. 'ed' → logprob: -8.101266860961914

Token 51: 'ary' (ID: 815)
  Prédit: 'ary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ary' → logprob: -6.515961285913363e-05
    2. '_position' → logprob: -9.875064849853516
    3. 'iary' → logprob: -12.125064849853516
    4. 'position' → logprob: -12.250064849853516
    5. '_positions' → logprob: -14.750064849853516
    6. 'ate' → logprob: -14.750064849853516
    7. 'acy' → logprob: -15.250064849853516
    8. 'arys' → logprob: -15.250064849853516
    9. '-' → logprob: -15.375064849853516
    10. ' ary' → logprob: -15.375064849853516

Token 52: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -3.292907877039397e-06
    2. '-position' → logprob: -13.25000286102295
    3. '-' → logprob: -14.87500286102295
    4. '_positions' → logprob: -14.87500286102295
    5. '_' → logprob: -15.25000286102295
    6. ' _' → logprob: -15.87500286102295
    7. 'position' → logprob: -15.87500286102295
    8. 'Position' → logprob: -16.875003814697266
    9. '_POSITION' → logprob: -16.875003814697266
    10. '-_' → logprob: -17.000003814697266

Token 53: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012521425262093544
    2. '-' → logprob: -4.387521266937256
    3. ' ' → logprob: -11.512521743774414
    4. '<|end|>' → logprob: -14.262521743774414
    5. ')' → logprob: -15.012521743774414
    6. ' ' → logprob: -15.387521743774414
    7. ' -
' → logprob: -15.512521743774414
    8. '-target' → logprob: -16.637521743774414
    9. '<|end|>' → logprob: -17.137521743774414
    10. '  ' → logprob: -17.137521743774414

Token 54: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.1269463747739792
    2. 'target' → logprob: -2.126946449279785
    3. ' ' → logprob: -11.626946449279785
    4. ' start' → logprob: -12.626946449279785
    5. '(target' → logprob: -13.751946449279785
    6. '	target' → logprob: -13.876946449279785
    7. 'start' → logprob: -14.001946449279785
    8. ' ' → logprob: -14.001946449279785
    9. ')' → logprob: -14.126946449279785
    10. '_target' → logprob: -14.376946449279785

Token 55: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -4.008129963040119e-06
    2. 'position' → logprob: -12.500003814697266
    3. '_' → logprob: -16.000003814697266
    4. '-position' → logprob: -16.875003814697266
    5. 'Position' → logprob: -17.250003814697266
    6. '_POSITION' → logprob: -17.500003814697266
    7. '_distance' → logprob: -18.125003814697266
    8. '_pos' → logprob: -18.125003814697266
    9. 'osition' → logprob: -18.250003814697266
    10. '_positions' → logprob: -18.375003814697266

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015312091272789985
    2. ' )' → logprob: -9.250153541564941
    3. ')<=' → logprob: -9.875153541564941
    4. '`)' → logprob: -13.250153541564941
    5. '")' → logprob: -13.375153541564941
    6. '')' → logprob: -13.875153541564941
    7. '）' → logprob: -14.375153541564941
    8. '   ' → logprob: -15.000153541564941
    9. ')`' → logprob: -16.375152587890625
    10. ' <=' → logprob: -17.000152587890625

Token 57: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.013021635822951794
    2. '<=' → logprob: -4.763021469116211
    3. ')' → logprob: -5.638021469116211
    4. ')<=' → logprob: -7.388021469116211
    5. ' ' → logprob: -8.763021469116211
    6. ' )' → logprob: -10.513021469116211
    7. ']<=' → logprob: -11.763021469116211
    8. '```' → logprob: -11.888021469116211
    9. '  ' → logprob: -12.263021469116211
    10. '<|end|>' → logprob: -13.013021469116211

Token 58: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.004079589620232582
    2. 'maximum' → logprob: -5.504079818725586
    3. '.maximum' → logprob: -14.004079818725586
    4. 'max' → logprob: -16.129079818725586
    5. ' ' → logprob: -17.004079818725586
    6. ' ' → logprob: -17.254079818725586
    7. 'Maximum' → logprob: -17.504079818725586
    8. ' maximal' → logprob: -18.004079818725586
    9. ' max' → logprob: -18.504079818725586
    10. ' maksimum' → logprob: -19.129079818725586

Token 59: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -1.8550976164988242e-05
    2. '_dist' → logprob: -11.500018119812012
    3. 'distance' → logprob: -12.500018119812012
    4. '_' → logprob: -13.250018119812012
    5. '_d' → logprob: -13.375018119812012
    6. ' _' → logprob: -14.625018119812012
    7. '_position' → logprob: -14.875018119812012
    8. '_difference' → logprob: -15.625018119812012
    9. '_DISTANCE' → logprob: -16.250019073486328
    10. '_dis' → logprob: -16.625019073486328

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.7120533811976202e-05
    2. '):' → logprob: -11.250017166137695
    3. ':**' → logprob: -13.000017166137695
    4. '>:' → logprob: -14.250017166137695
    5. ':
' → logprob: -14.625017166137695
    6. ' :' → logprob: -15.125017166137695
    7. '':' → logprob: -16.500017166137695
    8. '+:' → logprob: -17.000017166137695
    9. '():' → logprob: -17.500017166137695
    10. '   ' → logprob: -17.625017166137695

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09527038782835007
    2. ':' → logprob: -2.4702703952789307
    3. '       ' → logprob: -5.220270156860352
    4. ':
' → logprob: -7.595270156860352
    5. ' print' → logprob: -9.095270156860352
    6. '    ' → logprob: -9.095270156860352
    7. 'print' → logprob: -9.345270156860352
    8. '    
' → logprob: -10.595270156860352
    9. '     ' → logprob: -11.595270156860352
    10. ' :' → logprob: -11.845270156860352

Token 62: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5020843744277954
    2. ' print' → logprob: -1.2520843744277954
    3. 'print' (adapté à ' print') → logprob: -2.252084255218506
    4. '       ' → logprob: -5.627084255218506
    5. '    ' → logprob: -10.627084732055664
    6. '	print' → logprob: -12.252084732055664
    7. '
' → logprob: -12.627084732055664
    8. '   ' → logprob: -13.002084732055664
    9. '    
' → logprob: -13.127084732055664
    10. ' ' → logprob: -13.377084732055664

Token 63: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.321386456489563
    2. '(' → logprob: -1.321386456489563
    3. '("("' → logprob: -4.821386337280273
    4. '('' → logprob: -10.821386337280273
    5. '("(' → logprob: -12.071386337280273
    6. '("")' → logprob: -12.196386337280273
    7. '()' → logprob: -13.321386337280273
    8. '(""' → logprob: -13.571386337280273
    9. '("""' → logprob: -14.196386337280273
    10. '(">' → logprob: -14.946386337280273

Token 64: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0046355342492461205
    2. '"' → logprob: -5.379635334014893
    3. 'No' → logprob: -11.62963581085205
    4. ' Yes' → logprob: -13.00463581085205
    5. 'YES' → logprob: -13.62963581085205
    6. '“Yes' → logprob: -13.87963581085205
    7. 'Ye' → logprob: -14.25463581085205
    8. '"No' → logprob: -14.87963581085205
    9. ''' → logprob: -15.50463581085205
    10. '")' → logprob: -16.254634857177734

Token 65: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.18053393065929413
    2. ')' → logprob: -1.9305338859558105
    3. '")
' → logprob: -4.1805338859558105
    4. ')
' → logprob: -5.4305338859558105
    5. 'else' → logprob: -8.055534362792969
    6. ')")' → logprob: -9.555534362792969
    7. ')")
' → logprob: -11.555534362792969
    8. '")

' → logprob: -11.555534362792969
    9. '"' → logprob: -11.930534362792969
    10. '")
' → logprob: -12.305534362792969

Token 66: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -5.512236498361744e-07
    2. ' else' → logprob: -14.500000953674316
    3. '```' → logprob: -17.75
    4. 'Else' → logprob: -20.125
    5. 'e' → logprob: -20.125
    6. 'elif' → logprob: -20.375
    7. '_else' → logprob: -20.5
    8. 'els' → logprob: -20.5
    9. 'elser' → logprob: -21.125
    10. 'elses' → logprob: -21.25

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.491498531133402e-06
    2. ':
' → logprob: -11.625009536743164
    3. ' :' → logprob: -14.750009536743164
    4. ':def' → logprob: -17.625009536743164
    5. ':

' → logprob: -17.750009536743164
    6. ':return' → logprob: -17.875009536743164
    7. ':
' → logprob: -18.500009536743164
    8. ':**' → logprob: -19.250009536743164
    9. '   ' → logprob: -19.375009536743164
    10. '):' → logprob: -19.375009536743164

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1355348527431488
    2. 'print' → logprob: -2.3855347633361816
    3. ' print' → logprob: -3.3855347633361816
    4. '"' → logprob: -7.885534763336182
    5. '    ' → logprob: -9.13553524017334
    6. '\n' → logprob: -9.51053524017334
    7. '```' → logprob: -9.51053524017334
    8. ' ' → logprob: -9.76053524017334
    9. '    
' → logprob: -10.26053524017334
    10. '\' → logprob: -10.51053524017334

Token 69: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07890564948320389
    2. ' print' → logprob: -2.5789055824279785
    3. '   ' → logprob: -11.078906059265137
    4. '.print' → logprob: -16.07890510559082
    5. '	print' → logprob: -16.20390510559082
    6. 'printf' → logprob: -16.95390510559082
    7. '```' → logprob: -16.95390510559082
    8. '"' → logprob: -16.95390510559082
    9. '    ' → logprob: -17.32890510559082
    10. ' ' → logprob: -17.57890510559082

Token 70: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47595131397247314
    2. '("' → logprob: -0.9759513139724731
    3. '("("' → logprob: -6.350951194763184
    4. '("")' → logprob: -9.350951194763184
    5. '('' → logprob: -11.225951194763184
    6. '("(' → logprob: -11.475951194763184
    7. '("""' → logprob: -12.100951194763184
    8. '()' → logprob: -12.475951194763184
    9. '(""' → logprob: -12.850951194763184
    10. '(False' → logprob: -13.475951194763184

Token 71: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.2014143168926239
    2. '"No' → logprob: -1.7014143466949463
    3. '"' → logprob: -14.326414108276367
    4. '“No' → logprob: -15.451414108276367
    5. 'NO' → logprob: -16.201414108276367
    6. ' No' → logprob: -16.326414108276367
    7. '"N' → logprob: -17.201414108276367
    8. '")' → logprob: -18.076414108276367
    9. '>No' → logprob: -18.201414108276367
    10. 'N' → logprob: -18.576414108276367

Token 72: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6941204071044922
    2. '")' → logprob: -0.6941204071044922
    3. ')")' → logprob: -6.944120407104492
    4. ')
' → logprob: -12.694120407104492
    5. '")
' → logprob: -13.194120407104492
    6. '')' → logprob: -13.319120407104492
    7. '`)' → logprob: -14.444120407104492
    8. ')"' → logprob: -14.944120407104492
    9. '```' → logprob: -14.944120407104492
    10. '}")' → logprob: -15.569120407104492


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 70
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 38
Tokens correctement prédits (top 10): 62
Précision stricte (1ère position): 52.86%
Précision adaptée (1ère position): 54.29%
Précision (top 10): 88.57%
================================================================================
