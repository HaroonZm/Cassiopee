================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, X = map(int, input().split())
L = list(map(int, input().split()))
D = 0
cnt = 1
for i in range(N):
    D += L[i]
    if D <= X:
        cnt += 1
print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' X' (ID: 2127)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.055288441479206085
    2. '[' → logprob: -3.930288553237915
    3. ' =' → logprob: -4.305288314819336
    4. ',' → logprob: -4.555288314819336
    5. '.' → logprob: -4.930288314819336
    6. '+' → logprob: -6.805288314819336
    7. '_' → logprob: -7.805288314819336
    8. ':' → logprob: -7.930288314819336
    9. '#' → logprob: -8.680288314819336
    10. ')' → logprob: -8.680288314819336

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.9201867580413818
    2. 'map' → logprob: -1.0451867580413818
    3. '10' → logprob: -2.170186758041382
    4. ' np' → logprob: -3.295186758041382
    5. '5' → logprob: -3.420186758041382
    6. ' ' → logprob: -3.920186758041382
    7. 'np' → logprob: -4.045186996459961
    8. '50' → logprob: -5.045186996459961
    9. 'input' → logprob: -5.670186996459961
    10. '20' → logprob: -6.170186996459961

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08505474776029587
    2. '(lambda' → logprob: -3.085054636001587
    3. '<|end|>' → logprob: -3.585054636001587
    4. '(int' → logprob: -5.335054874420166
    5. '```' → logprob: -6.710054874420166
    6. '<|end|>' → logprob: -8.585054397583008
    7. ')' → logprob: -8.585054397583008
    8. '(user' → logprob: -8.585054397583008
    9. '(str' → logprob: -8.710054397583008
    10. '("("' → logprob: -8.835054397583008

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4887307286262512
    2. '(input' → logprob: -1.1137306690216064
    3. ',' → logprob: -3.8637306690216064
    4. 'input' → logprob: -4.2387309074401855
    5. '(' → logprob: -4.9887309074401855
    6. ',input' → logprob: -5.2387309074401855
    7. '```' → logprob: -5.6137309074401855
    8. '`)' → logprob: -6.2387309074401855
    9. '`' → logprob: -6.8637309074401855
    10. ')(' → logprob: -7.4887309074401855

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10023320466279984
    2. ' input' → logprob: -2.350233316421509
    3. '(input' → logprob: -10.72523307800293
    4. ')' → logprob: -12.72523307800293
    5. ',input' → logprob: -13.85023307800293
    6. '=input' → logprob: -14.97523307800293
    7. '<input' → logprob: -15.85023307800293
    8. '[input' → logprob: -16.22523307800293
    9. '	input' → logprob: -16.97523307800293
    10. 'user' → logprob: -17.97523307800293

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.689306378364563
    2. '()' → logprob: -1.064306378364563
    3. '().' → logprob: -1.939306378364563
    4. ')' → logprob: -4.939306259155273
    5. '(' → logprob: -7.564306259155273
    6. '();)' → logprob: -8.189306259155273
    7. '()`' → logprob: -8.439306259155273
    8. '()>' → logprob: -8.689306259155273
    9. '());' → logprob: -8.814306259155273
    10. '`()' → logprob: -8.939306259155273

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020067949662916362
    2. 'strip' → logprob: -8.625200271606445
    3. ')' → logprob: -11.250200271606445
    4. ' split' → logprob: -12.625200271606445
    5. 'rstrip' → logprob: -12.625200271606445
    6. 'read' → logprob: -14.000200271606445
    7. '(split' → logprob: -14.500200271606445
    8. 'spl' → logprob: -16.500200271606445
    9. 'replace' → logprob: -17.625200271606445
    10. '_split' → logprob: -17.625200271606445

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008538920432329178
    2. '())' → logprob: -5.258538722991943
    3. '))' → logprob: -5.883538722991943
    4. '()' → logprob: -8.508539199829102
    5. '`)' → logprob: -8.758539199829102
    6. '(' → logprob: -9.008539199829102
    7. '()))' → logprob: -12.008539199829102
    8. ')`' → logprob: -12.258539199829102
    9. '')' → logprob: -12.633539199829102
    10. '('' → logprob: -13.008539199829102

Token 11: 'L' (ID: 43)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7277554273605347
    2. '[' → logprob: -2.102755546569824
    3. '#' → logprob: -2.227755546569824
    4. 'x' → logprob: -2.852755546569824
    5. '`' → logprob: -2.852755546569824
    6. ',' → logprob: -3.477755546569824
    7. 'for' → logprob: -3.477755546569824
    8. '```' → logprob: -3.602755546569824
    9. 'if' → logprob: -4.602755546569824
    10. ')' → logprob: -4.727755546569824

Token 12: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4614478349685669
    2. ' =' → logprob: -1.461447834968567
    3. '.' → logprob: -3.2114477157592773
    4. 'ist' → logprob: -3.8364477157592773
    5. '_' → logprob: -3.9614477157592773
    6. 'i' → logprob: -4.086447715759277
    7. 's' → logprob: -4.461447715759277
    8. '[' → logprob: -4.586447715759277
    9. '=[]' → logprob: -5.711447715759277
    10. 'st' → logprob: -5.836447715759277

Token 13: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6519470810890198
    2. '[]' → logprob: -1.276947021484375
    3. ' [' → logprob: -2.901947021484375
    4. 'list' → logprob: -2.901947021484375
    5. '[int' → logprob: -3.151947021484375
    6. '[list' → logprob: -4.026947021484375
    7. ' []' → logprob: -4.401947021484375
    8. '[input' → logprob: -5.026947021484375
    9. ' list' → logprob: -5.151947021484375
    10. '[len' → logprob: -6.776947021484375

Token 14: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003832736751064658
    2. '(range' → logprob: -5.878832817077637
    3. '(map' → logprob: -7.378832817077637
    4. '()' → logprob: -9.378832817077637
    5. '(input' → logprob: -9.378832817077637
    6. '(int' → logprob: -9.628832817077637
    7. '(
' → logprob: -9.628832817077637
    8. '[' → logprob: -11.253832817077637
    9. '[int' → logprob: -11.503832817077637
    10. 's' → logprob: -11.753832817077637

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0036472335923463106
    2. '(' → logprob: -5.628647327423096
    3. 'int' → logprob: -10.753646850585938
    4. '(str' → logprob: -11.628646850585938
    5. '[int' → logprob: -12.003646850585938
    6. '=int' → logprob: -12.878646850585938
    7. '(input' → logprob: -13.128646850585938
    8. '```' → logprob: -13.253646850585938
    9. '<int' → logprob: -13.503646850585938
    10. ',int' → logprob: -13.878646850585938

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5142877101898193
    2. ',input' → logprob: -1.0142877101898193
    3. '(input' → logprob: -3.2642877101898193
    4. '(' → logprob: -6.889287948608398
    5. ' ,' → logprob: -9.389287948608398
    6. ',int' → logprob: -10.514287948608398
    7. 'input' → logprob: -10.889287948608398
    8. ')' → logprob: -11.764287948608398
    9. '```' → logprob: -12.014287948608398
    10. '),' → logprob: -12.139287948608398

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16022838652133942
    2. ' input' → logprob: -1.9102283716201782
    3. '(input' → logprob: -13.160228729248047
    4. ',input' → logprob: -13.910228729248047
    5. '=input' → logprob: -14.285228729248047
    6. '	input' → logprob: -15.410228729248047
    7. '<input' → logprob: -15.785228729248047
    8. '_input' → logprob: -16.410228729248047
    9. '[input' → logprob: -16.535228729248047
    10. ' ' → logprob: -16.535228729248047

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0014857008354738355
    2. '()' → logprob: -7.251485824584961
    3. '(.' → logprob: -7.751485824584961
    4. '(' → logprob: -8.126485824584961
    5. '()))' → logprob: -11.501485824584961
    6. '.' → logprob: -11.751485824584961
    7. ')' → logprob: -11.751485824584961
    8. '())' → logprob: -11.876485824584961
    9. ' ().' → logprob: -12.626485824584961
    10. '(input' → logprob: -13.376485824584961

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7432603272027336e-06
    2. 'strip' → logprob: -13.875001907348633
    3. ' split' → logprob: -14.375001907348633
    4. '(split' → logprob: -16.750001907348633
    5. 'rstrip' → logprob: -16.750001907348633
    6. 'spl' → logprob: -19.250001907348633
    7. ')' → logprob: -20.250001907348633
    8. 'read' → logprob: -20.375001907348633
    9. '.split' → logprob: -21.250001907348633
    10. 'plit' → logprob: -22.000001907348633

Token 20: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8346921801567078
    2. '()))' → logprob: -1.0846922397613525
    3. ')' → logprob: -1.8346922397613525
    4. '())' → logprob: -2.8346922397613525
    5. '(' → logprob: -5.084692001342773
    6. '()' → logprob: -5.709692001342773
    7. ')))' → logprob: -11.084692001342773
    8. ''))' → logprob: -11.834692001342773
    9. '()));' → logprob: -12.084692001342773
    10. '('' → logprob: -12.209692001342773

Token 21: 'D' (ID: 35)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2848951816558838
    2. 's' → logprob: -1.7848951816558838
    3. 'L' → logprob: -2.159895181655884
    4. 'result' → logprob: -2.284895181655884
    5. 'c' → logprob: -2.784895181655884
    6. 'count' → logprob: -2.909895181655884
    7. 'dp' → logprob: -3.159895181655884
    8. 'd' → logprob: -3.534895181655884
    9. 'S' → logprob: -3.909895181655884
    10. 'sum' → logprob: -4.159894943237305

Token 22: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0449005365371704
    2. '=' → logprob: -1.2949005365371704
    3. '.' → logprob: -1.6699005365371704
    4. ' =' → logprob: -2.419900417327881
    5. '[i' → logprob: -3.294900417327881
    6. '.append' → logprob: -4.544900417327881
    7. '[:]' → logprob: -4.669900417327881
    8. 'iv' → logprob: -4.919900417327881
    9. 'ef' → logprob: -5.044900417327881
    10. '=[]' → logprob: -5.169900417327881

Token 23: ' ' (ID: 220)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.32157689332962036
    2. '0' → logprob: -2.4465768337249756
    3. '[]' → logprob: -2.4465768337249756
    4. 'L' → logprob: -3.5715768337249756
    5. '[' → logprob: -4.071577072143555
    6. 'int' → logprob: -4.071577072143555
    7. '[int' → logprob: -4.571577072143555
    8. 'X' → logprob: -5.071577072143555
    9. '{' → logprob: -5.196577072143555
    10. 'list' → logprob: -5.571577072143555

Token 24: '0' (ID: 15)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.6315751075744629
    2. '[]' → logprob: -2.006575107574463
    3. '{' → logprob: -2.506575107574463
    4. 'L' → logprob: -2.631575107574463
    5. '[' → logprob: -2.756575107574463
    6. '[int' → logprob: -3.256575107574463
    7. '[L' → logprob: -3.881575107574463
    8. '0' → logprob: -4.131575107574463
    9. 'list' → logprob: -4.131575107574463
    10. '[max' → logprob: -5.381575107574463

Token 25: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025562798604369164
    2. ' for' → logprob: -3.7755627632141113
    3. '<|end|>' → logprob: -6.900562763214111
    4. '
' → logprob: -7.650562763214111
    5. ' ' → logprob: -8.40056324005127
    6. 'f' → logprob: -9.15056324005127
    7. '\n' → logprob: -9.52556324005127
    8. ')' → logprob: -9.65056324005127
    9. ',' → logprob: -10.02556324005127
    10. '+' → logprob: -10.27556324005127

Token 26: 'cnt' (ID: 33160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000486680306494236
    2. ' for' → logprob: -8.125486373901367
    3. 'f' → logprob: -9.875486373901367
    4. 'F' → logprob: -10.000486373901367
    5. '
' → logprob: -10.625486373901367
    6. 'i' → logprob: -11.000486373901367
    7. 'max' → logprob: -11.375486373901367
    8. 'd' → logprob: -11.500486373901367
    9. '```' → logprob: -11.875486373901367
    10. 'r' → logprob: -12.375486373901367

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8693705797195435
    2. ' +=' → logprob: -0.9943705797195435
    3. '=' → logprob: -1.7443705797195435
    4. '+=' → logprob: -3.869370460510254
    5. '+' → logprob: -4.369370460510254
    6. '_' → logprob: -6.744370460510254
    7. ' ' → logprob: -7.744370460510254
    8. ' +' → logprob: -8.494370460510254
    9. ')' → logprob: -8.494370460510254
    10. 'space' → logprob: -9.619370460510254

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05516570433974266
    2. ' ' → logprob: -2.9301657676696777
    3. '1' → logprob: -8.18016529083252
    4. '2' → logprob: -14.55516529083252
    5. ' ' → logprob: -15.11766529083252
    6. '[' → logprob: -15.49266529083252
    7. '10' → logprob: -15.61766529083252
    8. '3' → logprob: -15.80516529083252
    9. 'N' → logprob: -15.99266529083252
    10. '100' → logprob: -16.055166244506836

Token 29: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018567692022770643
    2. '1' → logprob: -6.876856803894043
    3. ' ' → logprob: -7.126856803894043
    4. '{}' → logprob: -11.626856803894043
    5. 'N' → logprob: -12.626856803894043
    6. '-' → logprob: -13.564356803894043
    7. '{' → logprob: -13.626856803894043
    8. '[' → logprob: -13.689356803894043
    9. '[]' → logprob: -14.751856803894043
    10. 'X' → logprob: -14.939356803894043

Token 30: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17748187482357025
    2. ' for' → logprob: -2.0524818897247314
    3. ' ' → logprob: -4.552481651306152
    4. '<|end|>' → logprob: -5.177481651306152
    5. ' 
' → logprob: -5.927481651306152
    6. '```' → logprob: -6.052481651306152
    7. '
' → logprob: -6.177481651306152
    8. 'i' → logprob: -6.302481651306152
    9. 'while' → logprob: -6.302481651306152
    10. '\n' → logprob: -6.427481651306152

Token 31: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025352109223604202
    2. ' for' → logprob: -3.9003520011901855
    3. '
' → logprob: -5.5253520011901855
    4. '\n' → logprob: -8.025352478027344
    5. ' 
' → logprob: -9.150352478027344
    6. 'f' → logprob: -9.900352478027344
    7. '```' → logprob: -10.025352478027344
    8. ' ' → logprob: -10.150352478027344
    9. 'i' → logprob: -10.275352478027344
    10. '=' → logprob: -10.275352478027344

Token 32: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07883382588624954
    2. 'i' → logprob: -2.828833818435669
    3. ' x' → logprob: -4.578834056854248
    4. 'x' → logprob: -6.828834056854248
    5. ' L' → logprob: -7.078834056854248
    6. ' ' → logprob: -7.203834056854248
    7. ' X' → logprob: -7.203834056854248
    8. '_' → logprob: -7.453834056854248
    9. ' d' → logprob: -7.703834056854248
    10. ' _' → logprob: -8.07883358001709

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018370119854807854
    2. 'in' → logprob: -4.143370151519775
    3. ' ' → logprob: -6.143370151519775
    4. '  ' → logprob: -9.018369674682617
    5. 'n' → logprob: -11.143369674682617
    6. ' n' → logprob: -11.768369674682617
    7. ' range' → logprob: -12.143369674682617
    8. ' i' → logprob: -12.143369674682617
    9. '_' → logprob: -12.268369674682617
    10. '	in' → logprob: -12.393369674682617

Token 34: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759976506233215
    2. ' range' → logprob: -0.8259976506233215
    3. 'L' → logprob: -10.200997352600098
    4. ' L' → logprob: -11.075997352600098
    5. '	range' → logprob: -13.450997352600098
    6. ' ' → logprob: -13.950997352600098
    7. ')' → logprob: -14.325997352600098
    8. '(range' → logprob: -14.325997352600098
    9. ' xrange' → logprob: -14.450997352600098
    10. ' in' → logprob: -14.950997352600098

Token 35: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012026121839880943
    2. '(N' → logprob: -6.876202583312988
    3. ' (' → logprob: -8.876202583312988
    4. '(len' → logprob: -10.626202583312988
    5. '(n' → logprob: -13.251202583312988
    6. '(
' → logprob: -13.626202583312988
    7. ' ' → logprob: -13.876202583312988
    8. '(range' → logprob: -14.876202583312988
    9. '(i' → logprob: -15.376202583312988
    10. '(D' → logprob: -15.626202583312988

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5022680163383484
    2. '-' → logprob: -1.0022680759429932
    3. ' -' → logprob: -3.752268075942993
    4. ' ):' → logprob: -5.627267837524414
    5. '):
' → logprob: -7.627267837524414
    6. ')' → logprob: -8.752267837524414
    7. '1' → logprob: -10.752267837524414
    8. '+' → logprob: -11.002267837524414
    9. ' ' → logprob: -11.127267837524414
    10. '[' → logprob: -11.877267837524414

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48650455474853516
    2. ' ' → logprob: -1.4865045547485352
    3. ':' → logprob: -3.111504554748535
    4. ' if' → logprob: -3.861504554748535
    5. '```' → logprob: -3.986504554748535
    6. '[' → logprob: -4.111504554748535
    7. '<|end|>' → logprob: -4.236504554748535
    8. '    ' → logprob: -4.236504554748535
    9. '  ' → logprob: -4.861504554748535
    10. 'if' → logprob: -5.486504554748535

Token 38: ' D' (ID: 415)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.801094651222229
    2. ' if' → logprob: -1.176094651222229
    3. 'if' → logprob: -1.426094651222229
    4. '```' → logprob: -7.3010945320129395
    5. '    ' → logprob: -7.6760945320129395
    6. ' for' → logprob: -8.551095008850098
    7. 'i' → logprob: -8.676095008850098
    8. 'for' → logprob: -8.801095008850098
    9. ' ' → logprob: -8.926095008850098
    10. ' i' → logprob: -8.926095008850098

Token 39: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.034684617072343826
    2. '+=' → logprob: -3.534684658050537
    3. '+' → logprob: -6.159684658050537
    4. ' -=' → logprob: -7.159684658050537
    5. ' +' → logprob: -7.284684658050537
    6. ' ==' → logprob: -7.659684658050537
    7. ' =' → logprob: -8.284684181213379
    8. '=' → logprob: -8.659684181213379
    9. '==' → logprob: -9.284684181213379
    10. '>' → logprob: -9.784684181213379

Token 40: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0002702760975807905
    2. '1' → logprob: -9.250269889831543
    3. ' L' → logprob: -9.250269889831543
    4. 'abs' → logprob: -10.250269889831543
    5. 'X' → logprob: -11.000269889831543
    6. 'i' → logprob: -11.125269889831543
    7. '(L' → logprob: -13.000269889831543
    8. '   ' → logprob: -13.375269889831543
    9. 'D' → logprob: -13.625269889831543
    10. ' ' → logprob: -13.750269889831543

Token 41: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0019815717823803425
    2. '[' → logprob: -6.251981735229492
    3. '[I' → logprob: -10.751981735229492
    4. '[D' → logprob: -11.376981735229492
    5. '\[' → logprob: -12.251981735229492
    6. ' [' → logprob: -12.251981735229492
    7. '[L' → logprob: -13.501981735229492
    8. '```' → logprob: -13.501981735229492
    9. '[
' → logprob: -14.251981735229492
    10. 'i' → logprob: -14.376981735229492

Token 42: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3134326934814453
    2. ')' → logprob: -1.4384326934814453
    3. '])' → logprob: -3.5634326934814453
    4. ' )' → logprob: -7.313432693481445
    5. ']==' → logprob: -7.563432693481445
    6. ']>' → logprob: -7.938432693481445
    7. ' ]' → logprob: -8.063432693481445
    8. '>' → logprob: -8.438432693481445
    9. ')]' → logprob: -8.563432693481445
    10. 'if' → logprob: -8.688432693481445

Token 43: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3169783353805542
    2. 'if' → logprob: -1.4419783353805542
    3. '<|end|>' → logprob: -1.5669783353805542
    4. '+' → logprob: -2.0669784545898438
    5. '   ' → logprob: -2.3169784545898438
    6. ' ' → logprob: -3.4419784545898438
    7. '  ' → logprob: -4.691978454589844
    8. '<|end|>' → logprob: -5.691978454589844
    9. '
' → logprob: -5.816978454589844
    10. '	if' → logprob: -5.816978454589844

Token 44: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2881258428096771
    2. 'if' (adapté à ' if') → logprob: -1.5381258726119995
    3. '   ' → logprob: -4.288125991821289
    4. ' ' → logprob: -5.038125991821289
    5. '\n' → logprob: -5.413125991821289
    6. '\' → logprob: -6.538125991821289
    7. ' while' → logprob: -6.663125991821289
    8. ''' → logprob: -7.038125991821289
    9. ' \' → logprob: -7.163125991821289
    10. '    ' → logprob: -7.163125991821289

Token 45: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.0794193223118782
    2. 'D' → logprob: -2.5794193744659424
    3. ' ' → logprob: -7.704419136047363
    4. ' L' → logprob: -10.704419136047363
    5. ' ' → logprob: -10.704419136047363
    6. ' X' → logprob: -11.454419136047363
    7. 'X' → logprob: -12.829419136047363
    8. '   ' → logprob: -13.079419136047363
    9. 'L' → logprob: -13.079419136047363
    10. 'd' → logprob: -13.204419136047363

Token 46: ' <=' (ID: 5017)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2513309419155121
    2. '>' → logprob: -2.126330852508545
    3. ' >=' → logprob: -3.001330852508545
    4. '==' → logprob: -3.376330852508545
    5. '<=' → logprob: -4.876330852508545
    6. ' >' → logprob: -5.001330852508545
    7. ' ==' → logprob: -5.626330852508545
    8. ' <=' → logprob: -7.376330852508545
    9. '+' → logprob: -8.626331329345703
    10. '%' → logprob: -8.626331329345703

Token 47: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.6935773491859436
    2. ' X' → logprob: -0.6935773491859436
    3. ' ' → logprob: -7.818577289581299
    4. '   ' → logprob: -11.818577766418457
    5. '	X' → logprob: -12.568577766418457
    6. '  ' → logprob: -12.756077766418457
    7. '>X' → logprob: -13.256077766418457
    8. '    ' → logprob: -13.256077766418457
    9. '100' → logprob: -13.318577766418457
    10. '_X' → logprob: -14.256077766418457

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001552355824969709
    2. ':
' → logprob: -6.751552581787109
    3. ' and' → logprob: -8.00155258178711
    4. 'and' → logprob: -11.12655258178711
    5. ' :' → logprob: -11.50155258178711
    6. '   ' → logprob: -11.75155258178711
    7. ':
' → logprob: -13.00155258178711
    8. ''s' → logprob: -13.12655258178711
    9. ',' → logprob: -13.25155258178711
    10. ' or' → logprob: -13.37655258178711

Token 49: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18740563094615936
    2. '       ' → logprob: -2.437405586242676
    3. '   ' → logprob: -3.312405586242676
    4. ':
' → logprob: -3.562405586242676
    5. ' and' → logprob: -4.562405586242676
    6. '	cnt' → logprob: -5.937405586242676
    7. ' :' → logprob: -7.062405586242676
    8. '    ' → logprob: -7.062405586242676
    9. 'cnt' → logprob: -7.312405586242676
    10. ' cnt' → logprob: -7.562405586242676

Token 50: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.6449043154716492
    2. ' cnt' → logprob: -0.7699043154716492
    3. '	cnt' → logprob: -4.644904136657715
    4. '(cnt' → logprob: -7.019904136657715
    5. '   ' → logprob: -7.519904136657715
    6. '[cnt' → logprob: -7.644904136657715
    7. '_cnt' → logprob: -8.519904136657715
    8. ' ' → logprob: -9.019904136657715
    9. '       ' → logprob: -9.394904136657715
    10. '    ' → logprob: -9.769904136657715

Token 51: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06218065693974495
    2. '+=' → logprob: -2.812180757522583
    3. '+' → logprob: -8.687180519104004
    4. ' =' → logprob: -10.937180519104004
    5. '=' → logprob: -10.937180519104004
    6. ' +' → logprob: -12.687180519104004
    7. ' *=' → logprob: -12.937180519104004
    8. ' ' → logprob: -13.062180519104004
    9. ' -=' → logprob: -15.562180519104004
    10. '+='' → logprob: -15.562180519104004

Token 52: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31328558921813965
    2. ' ' → logprob: -1.3132855892181396
    3. ' L' → logprob: -11.188285827636719
    4. 'L' → logprob: -12.063285827636719
    5. ' i' → logprob: -14.188285827636719
    6. 'i' → logprob: -14.750785827636719
    7. '2' → logprob: -14.938285827636719
    8. '0' → logprob: -15.000785827636719
    9. 'D' → logprob: -15.125785827636719
    10. ' D' → logprob: -15.188285827636719

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00045188379590399563
    2. ' ' → logprob: -8.000452041625977
    3. 'L' → logprob: -9.125452041625977
    4. 'D' → logprob: -13.125452041625977
    5. 'i' → logprob: -13.125452041625977
    6. '0' → logprob: -13.750452041625977
    7. '2' → logprob: -14.000452041625977
    8. ' L' → logprob: -14.000452041625977
    9. 'N' → logprob: -16.500452041625977
    10. '3' → logprob: -16.625452041625977

Token 54: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.15919074416160583
    2. ' else' → logprob: -2.4091906547546387
    3. 'print' → logprob: -3.0341906547546387
    4. '<|end|>' → logprob: -4.784190654754639
    5. 'elif' → logprob: -7.909190654754639
    6. '```' → logprob: -8.409191131591797
    7. '   ' → logprob: -9.534191131591797
    8. '    ' → logprob: -10.784191131591797
    9. ' print' → logprob: -10.784191131591797
    10. 'return' → logprob: -11.159191131591797

Token 55: 'print' (ID: 1598)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.34881600737571716
    2. ' else' → logprob: -1.4738160371780396
    3. '<|end|>' → logprob: -3.47381591796875
    4. 'print' → logprob: -3.59881591796875
    5. ' ' → logprob: -5.59881591796875
    6. '```' → logprob: -6.59881591796875
    7. 'elif' → logprob: -6.84881591796875
    8. '[' → logprob: -9.22381591796875
    9. ' elif' → logprob: -9.22381591796875
    10. '<|end|>' → logprob: -9.22381591796875

Token 56: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018305042758584023
    2. '(cnt' → logprob: -4.018304824829102
    3. '()' → logprob: -8.893304824829102
    4. '('' → logprob: -12.268304824829102
    5. '(count' → logprob: -12.518304824829102
    6. '(C' → logprob: -13.268304824829102
    7. '(c' → logprob: -13.393304824829102
    8. '(

' → logprob: -13.768304824829102
    9. '(max' → logprob: -14.018304824829102
    10. '(
' → logprob: -14.143304824829102

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.750000953674316
    3. '))' → logprob: -15.000000953674316
    4. ')`' → logprob: -16.875
    5. ')
' → logprob: -17.625
    6. '`)' → logprob: -18.75
    7. '')' → logprob: -18.75
    8. '）' → logprob: -19.125
    9. ')#' → logprob: -19.25
    10. '#' → logprob: -19.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 55
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 46
Précision stricte (1ère position): 32.73%
Précision adaptée (1ère position): 34.55%
Précision (top 10): 83.64%
================================================================================
