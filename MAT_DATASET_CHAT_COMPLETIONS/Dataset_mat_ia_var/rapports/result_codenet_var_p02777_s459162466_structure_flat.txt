================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
word = input().split()
a_b = input().split()
a = int(a_b[0])
b = int(a_b[1])
target = input()
if word[0] == target:
    a = a - 1
else:
    b = b - 1
print(a, b)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'word' (ID: 1801)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001277853618375957
    2. ''' → logprob: -7.751277923583984
    3. '(
' → logprob: -8.501277923583984
    4. '('' → logprob: -8.751277923583984
    5. '`' → logprob: -9.001277923583984
    6. '```' → logprob: -9.126277923583984
    7. '()' → logprob: -9.751277923583984
    8. '.' → logprob: -9.876277923583984
    9. '"' → logprob: -10.001277923583984
    10. ' (' → logprob: -10.626277923583984

Token 4: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03695514053106308
    2. '.strip' → logprob: -3.6619551181793213
    3. '\n' → logprob: -6.4119553565979
    4. '=' → logprob: -6.6619553565979
    5. '.lower' → logprob: -6.9119553565979
    6. '_' → logprob: -7.0369553565979
    7. '.split' → logprob: -7.2869553565979
    8. '\' → logprob: -7.2869553565979
    9. '```' → logprob: -7.2869553565979
    10. ' ' → logprob: -7.7869553565979

Token 5: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013038069009780884
    2. '()' → logprob: -6.876303672790527
    3. '"' → logprob: -9.626303672790527
    4. '`' → logprob: -10.126303672790527
    5. '('' → logprob: -10.126303672790527
    6. ' (' → logprob: -10.626303672790527
    7. ''' → logprob: -10.751303672790527
    8. '(
' → logprob: -10.751303672790527
    9. '```' → logprob: -10.751303672790527
    10. '("("' → logprob: -11.501303672790527

Token 6: 'a' (ID: 64)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4047735631465912
    2. '.' → logprob: -1.6547735929489136
    3. 'for' → logprob: -2.029773473739624
    4. '=' → logprob: -6.154773712158203
    5. 'if' → logprob: -6.404773712158203
    6. '.sort' → logprob: -6.529773712158203
    7. 'count' → logprob: -6.904773712158203
    8. 'print' → logprob: -6.904773712158203
    9. '```' → logprob: -7.154773712158203
    10. '.count' → logprob: -8.029773712158203

Token 7: '_b' (ID: 1535)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46481505036354065
    2. '=' → logprob: -1.7148150205612183
    3. '.' → logprob: -2.464815139770508
    4. ' =' → logprob: -2.464815139770508
    5. 'p' → logprob: -5.089815139770508
    6. 's' → logprob: -5.089815139770508
    7. 'pp' → logprob: -5.964815139770508
    8. 'ss' → logprob: -6.714815139770508
    9. ',' → logprob: -7.214815139770508
    10. '+' → logprob: -7.214815139770508

Token 8: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6297743916511536
    2. '=' → logprob: -1.0047743320465088
    3. '.' → logprob: -3.004774332046509
    4. ' =' → logprob: -3.504774332046509
    5. '+' → logprob: -5.004774570465088
    6. '_' → logprob: -5.129774570465088
    7. 'a' → logprob: -6.254774570465088
    8. '[word' → logprob: -6.754774570465088
    9. ' ' → logprob: -6.879774570465088
    10. ',' → logprob: -7.254774570465088

Token 9: ' input' (ID: 3422)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.6428901553153992
    2. '[word' → logprob: -1.517890214920044
    3. '[]' → logprob: -2.017890214920044
    4. 'list' → logprob: -3.517890214920044
    5. 'int' → logprob: -3.767890214920044
    6. 'len' → logprob: -3.892890214920044
    7. '[' → logprob: -4.017889976501465
    8. '[int' → logprob: -4.642889976501465
    9. ' []' → logprob: -5.267889976501465
    10. '0' → logprob: -5.892889976501465

Token 10: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43024638295173645
    2. '()' → logprob: -1.055246353149414
    3. '().' → logprob: -7.680246353149414
    4. '('' → logprob: -7.805246353149414
    5. '```' → logprob: -9.055246353149414
    6. '.' → logprob: -9.430246353149414
    7. ''' → logprob: -9.680246353149414
    8. '("("' → logprob: -9.805246353149414
    9. '"' → logprob: -9.930246353149414
    10. ')' → logprob: -10.305246353149414

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.047545187175273895
    2. 'strip' → logprob: -3.2975451946258545
    3. 'startswith' → logprob: -5.047544956207275
    4. 'count' → logprob: -6.922544956207275
    5. 'lower' → logprob: -7.547544956207275
    6. 'isdigit' → logprob: -7.672544956207275
    7. 'join' → logprob: -7.922544956207275
    8. 'replace' → logprob: -8.047545433044434
    9. 'append' → logprob: -8.922545433044434
    10. 'rstrip' → logprob: -8.922545433044434

Token 12: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.033703334629535675
    2. '(' → logprob: -3.408703327178955
    3. '`()' → logprob: -11.033703804016113
    4. '()`' → logprob: -11.533703804016113
    5. ')' → logprob: -11.783703804016113
    6. '```' → logprob: -12.658703804016113
    7. '('' → logprob: -12.658703804016113
    8. '(
' → logprob: -12.783703804016113
    9. '().' → logprob: -13.408703804016113
    10. '()
' → logprob: -13.408703804016113

Token 13: 'a' (ID: 64)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6813759207725525
    2. 'a' → logprob: -1.5563759803771973
    3. 'if' → logprob: -2.4313759803771973
    4. '[' → logprob: -3.4313759803771973
    5. 'result' → logprob: -3.4313759803771973
    6. 'count' → logprob: -3.4313759803771973
    7. 'c' → logprob: -3.6813759803771973
    8. 'word' → logprob: -3.9313759803771973
    9. 'i' → logprob: -4.556375980377197
    10. '_' → logprob: -4.681375980377197

Token 14: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4367840588092804
    2. '_b' → logprob: -1.436784029006958
    3. '[' → logprob: -2.186784029006958
    4. '[_' → logprob: -6.186784267425537
    5. ' _' → logprob: -7.686784267425537
    6. '_[' → logprob: -7.811784267425537
    7. '[]' → logprob: -8.061783790588379
    8. '_a' → logprob: -8.436783790588379
    9. '[a' → logprob: -9.311783790588379
    10. '\[' → logprob: -9.311783790588379

Token 15: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2603047788143158
    2. 'a' → logprob: -2.1353046894073486
    3. ' int' → logprob: -2.2603046894073486
    4. ' a' → logprob: -5.260304927825928
    5. '[int' → logprob: -7.385304927825928
    6. 'list' → logprob: -7.635304927825928
    7. ' list' → logprob: -8.51030445098877
    8. ' ' → logprob: -10.51030445098877
    9. '(int' → logprob: -10.51030445098877
    10. 'word' → logprob: -11.01030445098877

Token 16: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012594534084200859
    2. '(a' → logprob: -4.512594699859619
    3. '(word' → logprob: -6.637594699859619
    4. '('' → logprob: -8.887594223022461
    5. 'a' → logprob: -10.012594223022461
    6. '()' → logprob: -11.512594223022461
    7. '("("' → logprob: -11.762594223022461
    8. ' (' → logprob: -12.137594223022461
    9. '("' → logprob: -12.512594223022461
    10. '(
' → logprob: -12.762594223022461

Token 17: '_b' (ID: 1535)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07797686755657196
    2. '_b' → logprob: -3.077976942062378
    3. ')' → logprob: -3.577976942062378
    4. '[_' → logprob: -8.077977180480957
    5. ')_' → logprob: -8.327977180480957
    6. '_)' → logprob: -9.452977180480957
    7. ' )' → logprob: -9.452977180480957
    8. ')[' → logprob: -9.577977180480957
    9. '[b' → logprob: -9.952977180480957
    10. '_' → logprob: -10.202977180480957

Token 18: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ' [' → logprob: -14.750000953674316
    3. '\[' → logprob: -16.375
    4. ')' → logprob: -16.5
    5. '[a' → logprob: -17.625
    6. '0' → logprob: -18.375
    7. '(' → logprob: -18.5
    8. '[
' → logprob: -19.0
    9. ')[' → logprob: -19.5
    10. ' ' → logprob: -19.625

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '1' → logprob: -15.750001907348633
    4. ')' → logprob: -17.625001907348633
    5. '۰' → logprob: -18.875001907348633
    6. '   ' → logprob: -19.000001907348633
    7. '```' → logprob: -19.500001907348633
    8. '[' → logprob: -19.562501907348633
    9. ']' → logprob: -19.625001907348633
    10. '０' → logprob: -19.750001907348633

Token 20: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5762976408004761
    2. '])' → logprob: -0.8262976408004761
    3. ']' → logprob: -8.326297760009766
    4. ''])' → logprob: -10.451297760009766
    5. ' ])' → logprob: -10.951297760009766
    6. ')])' → logprob: -11.076297760009766
    7. ')]' → logprob: -11.201297760009766
    8. ')
' → logprob: -11.826297760009766
    9. '))' → logprob: -12.076297760009766
    10. ' )' → logprob: -12.076297760009766

Token 21: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9520487189292908
    2. '+' → logprob: -1.4520487785339355
    3. '<|end|>' → logprob: -1.7020487785339355
    4. ' ' → logprob: -2.5770487785339355
    5. 'a' → logprob: -2.9520487785339355
    6. '```' → logprob: -3.3270487785339355
    7. '_' → logprob: -5.0770487785339355
    8. '  
' → logprob: -5.0770487785339355
    9. ' 
' → logprob: -5.7020487785339355
    10. '[' → logprob: -5.7020487785339355

Token 22: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1002078503370285
    2. ' int' → logprob: -2.350207805633545
    3. 'a' → logprob: -14.350208282470703
    4. '=int' → logprob: -15.350208282470703
    5. ' a' → logprob: -15.850208282470703
    6. '(int' → logprob: -16.100208282470703
    7. ' ' → logprob: -16.350208282470703
    8. '<int' → logprob: -16.975208282470703
    9. '[int' → logprob: -17.850208282470703
    10. '	int' → logprob: -17.850208282470703

Token 24: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.25213319063186646
    2. '(' → logprob: -1.5021331310272217
    3. '(b' → logprob: -8.7521333694458
    4. '((' → logprob: -11.1271333694458
    5. '('' → logprob: -11.7521333694458
    6. '("("' → logprob: -12.5021333694458
    7. ' (' → logprob: -12.6271333694458
    8. '(`' → logprob: -12.7521333694458
    9. 'a' → logprob: -13.1271333694458
    10. '(ab' → logprob: -13.2521333694458

Token 25: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.03944001346826553
    2. '[' → logprob: -3.2894399166107178
    3. ')' → logprob: -7.039440155029297
    4. '])' → logprob: -8.164440155029297
    5. '1' → logprob: -10.164440155029297
    6. ')[' → logprob: -10.164440155029297
    7. '_)' → logprob: -10.289440155029297
    8. '_' → logprob: -10.539440155029297
    9. '[_' → logprob: -10.539440155029297
    10. 'b' → logprob: -11.039440155029297

Token 26: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014740281039848924
    2. '1' → logprob: -8.875147819519043
    3. ' [' → logprob: -12.625147819519043
    4. '])' → logprob: -13.125147819519043
    5. '][' → logprob: -14.375147819519043
    6. '```' → logprob: -14.375147819519043
    7. ')' → logprob: -15.250147819519043
    8. ']' → logprob: -15.375147819519043
    9. ' ' → logprob: -15.875147819519043
    10. '   ' → logprob: -16.000146865844727

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.492120155598968e-05
    2. '])' → logprob: -10.125064849853516
    3. '0' → logprob: -10.625064849853516
    4. ' ' → logprob: -15.125064849853516
    5. ']' → logprob: -16.500064849853516
    6. ')' → logprob: -16.875064849853516
    7. '   ' → logprob: -17.625064849853516
    8. '```' → logprob: -17.625064849853516
    9. '])
' → logprob: -18.500064849853516
    10. ')]' → logprob: -18.500064849853516

Token 28: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -15.750000953674316
    3. '`)' → logprob: -16.375
    4. '')' → logprob: -16.75
    5. ' )' → logprob: -17.25
    6. ')
' → logprob: -17.25
    7. '),' → logprob: -18.0
    8. '```' → logprob: -18.0
    9. ')`' → logprob: -18.75
    10. ']' → logprob: -18.75

Token 29: 'target' (ID: 10857)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1936283111572266
    2. 'c' → logprob: -1.6936283111572266
    3. 'for' → logprob: -2.4436283111572266
    4. '+' → logprob: -2.5686283111572266
    5. 'print' → logprob: -2.8186283111572266
    6. 'i' → logprob: -2.9436283111572266
    7. 'result' → logprob: -3.0686283111572266
    8. '#' → logprob: -3.1936283111572266
    9. '[' → logprob: -3.3186283111572266
    10. 'sum' → logprob: -3.6936283111572266

Token 30: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6092873811721802
    2. ' =' → logprob: -1.1092873811721802
    3. '=' → logprob: -2.1092872619628906
    4. 's' → logprob: -5.984287261962891
    5. '_word' → logprob: -7.484287261962891
    6. ' _' → logprob: -8.10928726196289
    7. '(' → logprob: -8.60928726196289
    8. '_sum' → logprob: -8.60928726196289
    9. '_=' → logprob: -8.85928726196289
    10. '_index' → logprob: -8.85928726196289

Token 31: ' input' (ID: 3422)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8159530162811279
    2. 'word' → logprob: -1.440953016281128
    3. 'int' → logprob: -2.190953016281128
    4. ' a' → logprob: -2.565953016281128
    5. ' int' → logprob: -3.315953016281128
    6. ' word' → logprob: -3.315953016281128
    7. '"' → logprob: -3.440953016281128
    8. ''' → logprob: -5.190953254699707
    9. '0' → logprob: -5.315953254699707
    10. ' "' → logprob: -5.815953254699707

Token 32: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08991365879774094
    2. '()' → logprob: -2.4649136066436768
    3. '.' → logprob: -8.089913368225098
    4. '('' → logprob: -8.089913368225098
    5. '().' → logprob: -9.214913368225098
    6. '(
' → logprob: -9.964913368225098
    7. ''' → logprob: -9.964913368225098
    8. ')' → logprob: -10.089913368225098
    9. '("("' → logprob: -10.339913368225098
    10. ' (' → logprob: -11.214913368225098

Token 33: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9642789959907532
    2. 'for' → logprob: -1.0892789363861084
    3. 'result' → logprob: -1.8392789363861084
    4. 'i' → logprob: -2.8392789363861084
    5. 'count' → logprob: -3.9642789363861084
    6. 'found' → logprob: -4.9642791748046875
    7. 'res' → logprob: -5.3392791748046875
    8. 'word' → logprob: -5.3392791748046875
    9. 'target' → logprob: -5.4642791748046875
    10. 'n' → logprob: -5.4642791748046875

Token 34: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.8045421838760376
    2. ' target' → logprob: -0.9295421838760376
    3. ' ' → logprob: -2.429542064666748
    4. ' '' → logprob: -3.554542064666748
    5. 'target' → logprob: -4.429542064666748
    6. ' len' → logprob: -4.554542064666748
    7. ' a' → logprob: -5.304542064666748
    8. ''' → logprob: -5.304542064666748
    9. ' "' → logprob: -5.804542064666748
    10. 'word' → logprob: -6.304542064666748

Token 35: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.036546528339385986
    2. ' ==' → logprob: -3.911546468734741
    3. '.count' → logprob: -5.16154670715332
    4. '.' → logprob: -5.41154670715332
    5. '==' → logprob: -5.66154670715332
    6. '[:]' → logprob: -7.16154670715332
    7. '[i' → logprob: -7.91154670715332
    8. '[index' → logprob: -8.28654670715332
    9. '[count' → logprob: -8.91154670715332
    10. '[len' → logprob: -9.28654670715332

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021625321358442307
    2. 'a' → logprob: -3.896625280380249
    3. '1' → logprob: -7.146625518798828
    4. ' ' → logprob: -8.521625518798828
    5. '2' → logprob: -10.396625518798828
    6. 'b' → logprob: -10.646625518798828
    7. ' a' → logprob: -11.646625518798828
    8. ':' → logprob: -11.896625518798828
    9. '-' → logprob: -12.021625518798828
    10. '3' → logprob: -12.896625518798828

Token 37: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09201747179031372
    2. '==' → logprob: -2.467017412185669
    3. '=' → logprob: -6.467017650604248
    4. ']' → logprob: -7.342017650604248
    5. '[' → logprob: -8.21701717376709
    6. ')' → logprob: -8.46701717376709
    7. ' =' → logprob: -8.96701717376709
    8. ']==' → logprob: -9.34201717376709
    9. ' ' → logprob: -9.96701717376709
    10. ' ]' → logprob: -10.34201717376709

Token 38: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6381077170372009
    2. ' ==' → logprob: -0.7631077170372009
    3. '=' → logprob: -5.638107776641846
    4. '[' → logprob: -6.513107776641846
    5. ' =' → logprob: -8.638107299804688
    6. ' in' → logprob: -9.388107299804688
    7. '[:]' → logprob: -10.388107299804688
    8. '.' → logprob: -10.888107299804688
    9. '!=' → logprob: -10.888107299804688
    10. ')' → logprob: -11.013107299804688

Token 39: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.06434258073568344
    2. ' target' → logprob: -2.814342498779297
    3. ''' → logprob: -6.939342498779297
    4. ''t' → logprob: -6.939342498779297
    5. '"' → logprob: -8.564342498779297
    6. ' '' → logprob: -8.939342498779297
    7. ''a' → logprob: -10.939342498779297
    8. 'a' → logprob: -11.064342498779297
    9. ' a' → logprob: -11.439342498779297
    10. '	target' → logprob: -11.439342498779297

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026370109990239143
    2. ' and' → logprob: -6.502636909484863
    3. ' :' → logprob: -6.877636909484863
    4. 'and' → logprob: -9.877636909484863
    5. '.' → logprob: -11.627636909484863
    6. '[' → logprob: -11.752636909484863
    7. '[:]' → logprob: -11.877636909484863
    8. ' ' → logprob: -12.377636909484863
    9. ' ':'' → logprob: -12.377636909484863
    10. '':'' → logprob: -13.002636909484863

Token 41: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25060853362083435
    2. 'print' → logprob: -2.625608444213867
    3. '   ' → logprob: -2.875608444213867
    4. ' print' → logprob: -3.250608444213867
    5. ' :' → logprob: -4.375608444213867
    6. ' ' → logprob: -4.750608444213867
    7. ' and' → logprob: -4.750608444213867
    8. ''' → logprob: -5.500608444213867
    9. '\n' → logprob: -5.500608444213867
    10. ':
' → logprob: -5.625608444213867

Token 42: ' a' (ID: 261)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016400780528783798
    2. ' print' → logprob: -4.5164008140563965
    3. 'word' → logprob: -6.3914008140563965
    4. 'a' (adapté à ' a') → logprob: -6.6414008140563965
    5. 'pr' → logprob: -6.6414008140563965
    6. ' a' → logprob: -8.391400337219238
    7. 'prin' → logprob: -8.766400337219238
    8. ' word' → logprob: -8.891400337219238
    9. ' ' → logprob: -9.141400337219238
    10. 'if' → logprob: -9.516400337219238

Token 43: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31858310103416443
    2. ' +' → logprob: -1.8185831308364868
    3. ' +=' → logprob: -2.4435830116271973
    4. '+=' → logprob: -4.568583011627197
    5. ' ==' → logprob: -5.443583011627197
    6. '-' → logprob: -6.068583011627197
    7. ' *' → logprob: -6.943583011627197
    8. '=' → logprob: -6.943583011627197
    9. '<|end|>' → logprob: -6.943583011627197
    10. '==' → logprob: -7.568583011627197

Token 44: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17322605848312378
    2. ' a' → logprob: -2.4232261180877686
    3. '0' → logprob: -3.0482261180877686
    4. 'b' → logprob: -4.7982258796691895
    5. '1' → logprob: -5.2982258796691895
    6. ' b' → logprob: -5.5482258796691895
    7. ' ' → logprob: -5.6732258796691895
    8. '10' → logprob: -6.9232258796691895
    9. '20' → logprob: -8.298226356506348
    10. 'target' → logprob: -8.298226356506348

Token 45: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016878293827176094
    2. '-' → logprob: -4.266878128051758
    3. ' +' → logprob: -6.766878128051758
    4. '<|end|>' → logprob: -6.891878128051758
    5. '*' → logprob: -7.891878128051758
    6. ' ' → logprob: -10.141878128051758
    7. '+b' → logprob: -10.266878128051758
    8. '+
' → logprob: -11.141878128051758
    9. 'else' → logprob: -11.391878128051758
    10. 'a' → logprob: -11.641878128051758

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036037517711520195
    2. ' ' → logprob: -5.628603935241699
    3. 'a' → logprob: -12.8786039352417
    4. ' a' → logprob: -14.7536039352417
    5. 'b' → logprob: -15.2536039352417
    6. '<|end|>' → logprob: -15.2536039352417
    7. ' b' → logprob: -16.003602981567383
    8. '2' → logprob: -16.503602981567383
    9. '  ' → logprob: -17.878602981567383
    10. '   ' → logprob: -18.003602981567383

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.225939872208983e-05
    2. ' ' → logprob: -11.000032424926758
    3. 'b' → logprob: -11.750032424926758
    4. 'a' → logprob: -12.125032424926758
    5. '2' → logprob: -13.500032424926758
    6. '10' → logprob: -15.250032424926758
    7. '3' → logprob: -16.375032424926758
    8. 'int' → logprob: -16.875032424926758
    9. '20' → logprob: -17.000032424926758
    10. '5' → logprob: -17.250032424926758

Token 48: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.14052502810955048
    2. 'else' → logprob: -3.1405251026153564
    3. '
' → logprob: -3.5155251026153564
    4. '\n' → logprob: -3.6405251026153564
    5. ' ' → logprob: -4.515524864196777
    6. ' elif' → logprob: -5.140524864196777
    7. 'if' → logprob: -5.265524864196777
    8. ' 
' → logprob: -5.640524864196777
    9. '<|end|>' → logprob: -6.765524864196777
    10. '' → logprob: -7.390524864196777

Token 49: 'else' (ID: 2807)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.8409972190856934
    2. '<|end|>' → logprob: -1.7159972190856934
    3. ' ' → logprob: -1.9659972190856934
    4. '
' → logprob: -2.2159972190856934
    5. '\n' → logprob: -2.7159972190856934
    6. ' 
' → logprob: -3.4659972190856934
    7. 'else' → logprob: -4.090997219085693
    8. ' elif' → logprob: -4.715997219085693
    9. '  
' → logprob: -5.590997219085693
    10. 'if' → logprob: -6.590997219085693

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011570196511456743
    2. ' :' → logprob: -9.125115394592285
    3. ':
' → logprob: -12.875115394592285
    4. '   ' → logprob: -13.750115394592285
    5. '{' → logprob: -14.625115394592285
    6. ',' → logprob: -14.625115394592285
    7. 'if' → logprob: -14.750115394592285
    8. ' if' → logprob: -15.375115394592285
    9. ':

' → logprob: -15.375115394592285
    10. 'a' → logprob: -15.500115394592285

Token 51: '   ' (ID: 271)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.38862577080726624
    2. 'b' → logprob: -1.5136257410049438
    3. '   ' → logprob: -2.5136258602142334
    4. ' a' → logprob: -4.763625621795654
    5. '    ' → logprob: -5.138625621795654
    6. 'a' → logprob: -5.513625621795654
    7. ' ' → logprob: -6.263625621795654
    8. '```' → logprob: -8.013626098632812
    9. ' if' → logprob: -9.763626098632812
    10. ':' → logprob: -10.638626098632812

Token 52: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.019990971311926842
    2. ' b' → logprob: -4.269990921020508
    3. 'a' → logprob: -5.269990921020508
    4. '   ' → logprob: -8.019990921020508
    5. ' a' → logprob: -9.144990921020508
    6. 'word' → logprob: -9.519990921020508
    7. 'if' → logprob: -9.519990921020508
    8. ' word' → logprob: -10.144990921020508
    9. '1' → logprob: -11.144990921020508
    10. ' if' → logprob: -11.394990921020508

Token 53: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759677886962891
    2. ' =' → logprob: -0.8259677886962891
    3. ' -=' → logprob: -10.950967788696289
    4. '=b' → logprob: -12.575967788696289
    5. ' ' → logprob: -13.325967788696289
    6. '-' → logprob: -13.700967788696289
    7. 'b' → logprob: -13.825967788696289
    8. '-=' → logprob: -13.825967788696289
    9. '_' → logprob: -14.075967788696289
    10. ')' → logprob: -14.575967788696289

Token 54: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0011706985533237457
    2. ' b' → logprob: -6.751170635223389
    3. '0' → logprob: -14.626171112060547
    4. ' ' → logprob: -17.876171112060547
    5. '   ' → logprob: -19.126171112060547
    6. '	b' → logprob: -19.251171112060547
    7. '-' → logprob: -19.501171112060547
    8. '1' → logprob: -20.501171112060547
    9. '  ' → logprob: -20.626171112060547
    10. '_b' → logprob: -21.501171112060547

Token 55: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31328803300857544
    2. ' -' → logprob: -1.3132879734039307
    3. ' ' → logprob: -10.938287734985352
    4. 'b' → logprob: -13.313287734985352
    5. '<|end|>' → logprob: -13.688287734985352
    6. '+' → logprob: -14.063287734985352
    7. ')' → logprob: -14.063287734985352
    8. '-
' → logprob: -14.188287734985352
    9. ' b' → logprob: -14.438287734985352
    10. ' -
' → logprob: -14.438287734985352

Token 56: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023245595395565033
    2. ' ' → logprob: -3.7732455730438232
    3. '   ' → logprob: -17.148244857788086
    4. '<|end|>' → logprob: -17.273244857788086
    5. '```' → logprob: -17.523244857788086
    6. '0' → logprob: -18.085744857788086
    7. '  ' → logprob: -18.273244857788086
    8. '-' → logprob: -18.335744857788086
    9. ' b' → logprob: -18.773244857788086
    10. '.' → logprob: -18.835744857788086

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.7500057220459
    4. '```' → logprob: -17.7500057220459
    5. '  ' → logprob: -18.7500057220459
    6. '<|end|>' → logprob: -19.1250057220459
    7. '`' → logprob: -19.1875057220459
    8. 'a' → logprob: -19.2500057220459
    9. '0' → logprob: -19.3750057220459
    10. '-' → logprob: -19.5000057220459

Token 58: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9751846790313721
    2. '<|end|>' → logprob: -1.225184679031372
    3. 'print' → logprob: -1.975184679031372
    4. ' if' → logprob: -2.600184679031372
    5. '\n' → logprob: -2.975184679031372
    6. '
' → logprob: -3.725184679031372
    7. '#' → logprob: -4.100184440612793
    8. ' ' → logprob: -4.600184440612793
    9. '```' → logprob: -5.975184440612793
    10. '\' → logprob: -6.475184440612793

Token 59: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.30182620882987976
    2. 'if' → logprob: -1.5518262386322021
    3. '<|end|>' → logprob: -3.676826238632202
    4. ' if' → logprob: -4.426826000213623
    5. '#' → logprob: -5.801826000213623
    6. 'result' → logprob: -6.176826000213623
    7. ' ' → logprob: -6.301826000213623
    8. 'c' → logprob: -7.176826000213623
    9. '\n' → logprob: -7.176826000213623
    10. ' print' → logprob: -8.051826477050781

Token 60: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0064882272854447365
    2. '("("' → logprob: -5.88148832321167
    3. '(word' → logprob: -6.13148832321167
    4. '('' → logprob: -6.63148832321167
    5. '(a' → logprob: -9.006487846374512
    6. '((' → logprob: -10.256487846374512
    7. '()' → logprob: -12.006487846374512
    8. '("' → logprob: -12.006487846374512
    9. '(len' → logprob: -12.506487846374512
    10. '(f' → logprob: -13.256487846374512

Token 61: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031472966074943542
    2. ',' → logprob: -6.003147125244141
    3. ',b' → logprob: -7.378147125244141
    4. ' )' → logprob: -10.62814712524414
    5. ')b' → logprob: -11.62814712524414
    6. ' ,' → logprob: -12.50314712524414
    7. '),' → logprob: -12.87814712524414
    8. ',)' → logprob: -13.37814712524414
    9. ',a' → logprob: -14.25314712524414
    10. '```' → logprob: -14.50314712524414

Token 62: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007107630372047424
    2. ' b' → logprob: -7.250710964202881
    3. ')' → logprob: -15.000710487365723
    4. '"' → logprob: -15.375710487365723
    5. ''' → logprob: -16.37571144104004
    6. ' ' → logprob: -16.75071144104004
    7. '    ' → logprob: -17.62571144104004
    8. '   ' → logprob: -18.87571144104004
    9. ' )' → logprob: -19.00071144104004
    10. '  ' → logprob: -19.00071144104004

Token 63: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ')`' → logprob: -18.375
    3. ' )' → logprob: -18.875
    4. '))' → logprob: -18.875
    5. '')' → logprob: -20.0
    6. '),' → logprob: -20.0
    7. ')
' → logprob: -20.875
    8. ')#' → logprob: -21.0
    9. ')}' → logprob: -21.125
    10. '```' → logprob: -21.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 61
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 45
Précision stricte (1ère position): 26.23%
Précision adaptée (1ère position): 27.87%
Précision (top 10): 73.77%
================================================================================
