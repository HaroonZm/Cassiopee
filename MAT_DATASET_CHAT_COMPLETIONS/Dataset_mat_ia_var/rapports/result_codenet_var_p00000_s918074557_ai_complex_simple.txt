================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:23:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import mul

_ = (lambda x: list(map(lambda i: list(map(lambda j: print(''.join(reduce(lambda a, b: a + b, ((str(i), 'x', str(j), '=', str(mul(i, j)))))), range(1, 10))), range(1, 10))))(None)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00469451118260622
    2. 'wrap' → logprob: -6.12969446182251
    3. 'partial' → logprob: -6.50469446182251
    4. 'cache' → logprob: -7.62969446182251
    5. 'cached' → logprob: -8.379694938659668
    6. 'reduce' → logprob: -8.629694938659668
    7. 'cmp' → logprob: -10.004694938659668
    8. 'wr' → logprob: -10.879694938659668
    9. 'import' → logprob: -10.879694938659668
    10. 'total' → logprob: -11.754694938659668

Token 4: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 5: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -1.0638236999511719
    2. ' itertools' → logprob: -1.4388236999511719
    3. ' import' → logprob: -1.8138236999511719
    4. 'operator' → logprob: -2.063823699951172
    5. 'import' → logprob: -3.188823699951172
    6. 'math' → logprob: -3.938823699951172
    7. ' math' → logprob: -4.188823699951172
    8. ' typing' → logprob: -4.188823699951172
    9. ' functools' → logprob: -4.313823699951172
    10. 'typing' → logprob: -4.313823699951172

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.3132849931716919
    2. 'import' → logprob: -1.313284993171692
    3. '.import' → logprob: -11.313284873962402
    4. '.' → logprob: -11.688284873962402
    5. 'Import' → logprob: -13.938284873962402
    6. '_import' → logprob: -14.813284873962402
    7. '	import' → logprob: -15.063284873962402
    8. ' Import' → logprob: -15.063284873962402
    9. ' импорт' → logprob: -15.063284873962402
    10. '-import' → logprob: -15.688284873962402

Token 8: ' mul' (ID: 9975)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.10969731211662292
    2. 'add' → logprob: -2.7346973419189453
    3. 'item' → logprob: -3.4846973419189453
    4. 'getitem' → logprob: -5.484697341918945
    5. 'attr' → logprob: -6.984697341918945
    6. 'or' → logprob: -7.109697341918945
    7. ' mul' → logprob: -7.734697341918945
    8. 'icon' → logprob: -8.109697341918945
    9. 'sub' → logprob: -8.109697341918945
    10. '*' → logprob: -8.109697341918945

Token 9: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03216496855020523
    2. '#' → logprob: -4.282165050506592
    3. '<|end|>' → logprob: -4.532165050506592
    4. 'import' → logprob: -6.282165050506592
    5. '__' → logprob: -6.407165050506592
    6. '_' → logprob: -7.657165050506592
    7. '<|end|>' → logprob: -7.782165050506592
    8. ',' → logprob: -7.782165050506592
    9. 'from' → logprob: -8.032164573669434
    10. '```' → logprob: -8.032164573669434

Token 10: '_' (ID: 62)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023646991699934006
    2. 'numbers' → logprob: -4.148646831512451
    3. 'result' → logprob: -5.523646831512451
    4. 'nums' → logprob: -6.648646831512451
    5. 'data' → logprob: -6.898646831512451
    6. '#' → logprob: -7.648646831512451
    7. 'a' → logprob: -8.39864730834961
    8. 'x' → logprob: -9.64864730834961
    9. 'num' → logprob: -9.64864730834961
    10. '__' → logprob: -9.77364730834961

Token 11: ' =' (ID: 314)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.291240394115448
    2. 'result' → logprob: -1.9162404537200928
    3. 'def' → logprob: -3.7912404537200928
    4. '_' → logprob: -4.416240215301514
    5. 'product' → logprob: -4.666240215301514
    6. 'sum' → logprob: -4.916240215301514
    7. 'print' → logprob: -5.041240215301514
    8. 'list' → logprob: -5.291240215301514
    9. 'max' → logprob: -5.666240215301514
    10. 'import' → logprob: -6.166240215301514

Token 12: ' (' (ID: 350)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.0010362643515691161
    2. ' reduce' → logprob: -6.876036167144775
    3. 're' → logprob: -13.751036643981934
    4. '.reduce' → logprob: -14.376036643981934
    5. 'redu' → logprob: -14.376036643981934
    6. '_reduce' → logprob: -14.751036643981934
    7. ' ' → logprob: -15.126036643981934
    8. 'red' → logprob: -15.626036643981934
    9. '   ' → logprob: -16.376035690307617
    10. '1' → logprob: -16.376035690307617

Token 13: 'lambda' (ID: 35280)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -2.3319124011322856e-05
    2. ' reduce' → logprob: -11.750022888183594
    3. 'mul' → logprob: -12.875022888183594
    4. 'map' → logprob: -12.875022888183594
    5. 'lambda' → logprob: -13.250022888183594
    6. '1' → logprob: -13.500022888183594
    7. '.reduce' → logprob: -13.500022888183594
    8. '_reduce' → logprob: -13.750022888183594
    9. 'redu' → logprob: -13.875022888183594
    10. ' ' → logprob: -14.000022888183594

Token 14: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014220389537513256
    2. 'f' → logprob: -4.389220237731934
    3. ':' → logprob: -6.514220237731934
    4. '_:' → logprob: -9.514220237731934
    5. 'n' → logprob: -10.014220237731934
    6. 'a' → logprob: -10.264220237731934
    7. ' x' → logprob: -10.764220237731934
    8. 'fn' → logprob: -10.764220237731934
    9. 'func' → logprob: -11.139220237731934
    10. 's' → logprob: -13.014220237731934

Token 15: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.512236498361744e-07
    2. '):' → logprob: -15.625000953674316
    3. ':x' → logprob: -16.125
    4. ':_' → logprob: -16.5
    5. ':(' → logprob: -17.125
    6. ':*' → logprob: -17.125
    7. ' :' → logprob: -17.25
    8. ',' → logprob: -17.375
    9. '：' → logprob: -17.75
    10. ':**' → logprob: -17.875

Token 16: ' list' (ID: 1562)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.004775906912982464
    2. 'x' → logprob: -5.3797760009765625
    3. ' reduce' → logprob: -9.629776000976562
    4. 'mul' → logprob: -10.004776000976562
    5. '_reduce' → logprob: -10.629776000976562
    6. 'multiply' → logprob: -12.379776000976562
    7. '.reduce' → logprob: -12.504776000976562
    8. '   ' → logprob: -12.629776000976562
    9. 'redu' → logprob: -13.129776000976562
    10. ' ' → logprob: -13.254776000976562

Token 17: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.0459884405136108
    2. '())' → logprob: -1.2959884405136108
    3. '(' → logprob: -2.1709885597229004
    4. '()' → logprob: -2.2959885597229004
    5. '(_' → logprob: -2.6709885597229004
    6. '(range' → logprob: -3.4209885597229004
    7. '(_)' → logprob: -3.5459885597229004
    8. '()(' → logprob: -4.4209885597229
    9. '(x' → logprob: -5.5459885597229
    10. '(...)' → logprob: -5.9209885597229

Token 18: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0585799366235733
    2. '(' → logprob: -2.933579921722412
    3. '(int' → logprob: -6.683579921722412
    4. '(func' → logprob: -7.558579921722412
    5. '(re' → logprob: -7.683579921722412
    6. '(...)' → logprob: -8.30858039855957
    7. '((' → logprob: -9.05858039855957
    8. '(_' → logprob: -9.18358039855957
    9. '(f' → logprob: -9.18358039855957
    10. '(None' → logprob: -9.30858039855957

Token 19: ' i' (ID: 575)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30655479431152344
    2. 'x' → logprob: -1.5565547943115234
    3. 'y' → logprob: -3.4315547943115234
    4. 'f' → logprob: -3.9315547943115234
    5. '_:' → logprob: -7.681554794311523
    6. 'func' → logprob: -8.306554794311523
    7. 'a' → logprob: -8.556554794311523
    8. 'fn' → logprob: -10.306554794311523
    9. ':_' → logprob: -10.431554794311523
    10. ':x' → logprob: -10.556554794311523

Token 20: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.088346359931165e-07
    2. ',' → logprob: -14.125000953674316
    3. ':i' → logprob: -17.375
    4. ':_' → logprob: -17.875
    5. ':x' → logprob: -18.0
    6. ':**' → logprob: -18.75
    7. ':*' → logprob: -18.875
    8. '_:' → logprob: -19.125
    9. ':int' → logprob: -19.375
    10. '：' → logprob: -19.5

Token 21: ' list' (ID: 1562)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.009337624534964561
    2. 'x' → logprob: -5.009337425231934
    3. 'i' → logprob: -6.259337425231934
    4. 'reduce' → logprob: -7.509337425231934
    5. ' mul' → logprob: -9.134337425231934
    6. 'm' → logprob: -10.634337425231934
    7. 'multiply' → logprob: -11.884337425231934
    8. 'mult' → logprob: -12.634337425231934
    9. 'mu' → logprob: -12.634337425231934
    10. ' i' → logprob: -13.134337425231934

Token 22: '(map' (ID: 16946)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.5414978265762329
    2. '(map' → logprob: -1.916497826576233
    3. '(' → logprob: -2.4164977073669434
    4. '(zip' → logprob: -3.1664977073669434
    5. '()' → logprob: -3.2914977073669434
    6. '(i' → logprob: -3.4164977073669434
    7. '(x' → logprob: -3.4164977073669434
    8. '(_' → logprob: -4.541497707366943
    9. '(_)' → logprob: -4.541497707366943
    10. '([]' → logprob: -5.791497707366943

Token 23: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0052717034704983234
    2. '(' → logprob: -5.755271911621094
    3. '(int' → logprob: -7.255271911621094
    4. '(i' → logprob: -8.005271911621094
    5. '(list' → logprob: -8.630271911621094
    6. '(m' → logprob: -8.630271911621094
    7. '(len' → logprob: -8.880271911621094
    8. '(func' → logprob: -9.380271911621094
    9. '(re' → logprob: -9.505271911621094
    10. '(range' → logprob: -9.630271911621094

Token 24: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06516663730144501
    2. 'x' → logprob: -3.190166711807251
    3. ':' → logprob: -3.940166711807251
    4. 'i' → logprob: -6.065166473388672
    5. 'y' → logprob: -10.440166473388672
    6. 'n' → logprob: -10.690166473388672
    7. '_:' → logprob: -10.940166473388672
    8. 'k' → logprob: -10.940166473388672
    9. ' j' → logprob: -11.065166473388672
    10. ':j' → logprob: -11.315166473388672

Token 25: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.061054359131958e-06
    2. '(i' → logprob: -12.250007629394531
    3. ':i' → logprob: -12.750007629394531
    4. '(x' → logprob: -16.00000762939453
    5. ':x' → logprob: -16.37500762939453
    6. ':j' → logprob: -16.87500762939453
    7. 'i' → logprob: -17.87500762939453
    8. ':`' → logprob: -17.87500762939453
    9. '：' → logprob: -18.00000762939453
    10. '(' → logprob: -18.25000762939453

Token 26: ' print' (ID: 2123)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.02151845023036003
    2. 'x' → logprob: -4.271518230438232
    3. 'i' → logprob: -5.771518230438232
    4. 'j' → logprob: -6.521518230438232
    5. 'reduce' → logprob: -6.521518230438232
    6. 'range' → logprob: -6.896518230438232
    7. '   ' → logprob: -9.27151870727539
    8. ' mul' → logprob: -9.77151870727539
    9. 'multiply' → logprob: -10.52151870727539
    10. ' ' → logprob: -10.77151870727539

Token 27: '('' (ID: 706)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.011741775088012218
    2. '(j' → logprob: -5.261741638183594
    3. '(f' → logprob: -5.386741638183594
    4. '(' → logprob: -6.636741638183594
    5. '('' → logprob: -8.761741638183594
    6. '(x' → logprob: -8.886741638183594
    7. '("' → logprob: -9.261741638183594
    8. '())' → logprob: -10.636741638183594
    9. '("("' → logprob: -10.636741638183594
    10. '(_,' → logprob: -10.886741638183594

Token 28: ''.' (ID: 6120)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16412362456321716
    2. 'i' → logprob: -1.9141236543655396
    3. '(i' → logprob: -6.53912353515625
    4. ''' → logprob: -6.66412353515625
    5. '(j' → logprob: -8.28912353515625
    6. ''i' → logprob: -8.28912353515625
    7. 'print' → logprob: -8.66412353515625
    8. 'end' → logprob: -9.16412353515625
    9. 'f' → logprob: -9.41412353515625
    10. '   ' → logprob: -10.28912353515625

Token 29: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.004391663707792759
    2. 'format' → logprob: -5.504391670227051
    3. 'strip' → logprob: -8.37939167022705
    4. 'center' → logprob: -10.12939167022705
    5. 'rstrip' → logprob: -10.75439167022705
    6. 'expand' → logprob: -12.12939167022705
    7. 'replace' → logprob: -12.50439167022705
    8. 'end' → logprob: -12.87939167022705
    9. '.join' → logprob: -13.37939167022705
    10. 'z' → logprob: -13.37939167022705

Token 30: '(re' (ID: 8178)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.01469894777983427
    2. '(j' → logprob: -4.6396989822387695
    3. '('' → logprob: -6.1396989822387695
    4. '(map' → logprob: -6.5146989822387695
    5. '(' → logprob: -7.5146989822387695
    6. '(x' → logprob: -8.51469898223877
    7. '(f' → logprob: -8.88969898223877
    8. '(m' → logprob: -9.88969898223877
    9. '(range' → logprob: -10.01469898223877
    10. '(re' → logprob: -10.26469898223877

Token 31: 'duce' (ID: 21375)
  Prédit: 'peat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peat' → logprob: -0.2606106996536255
    2. 'duce' → logprob: -2.010610580444336
    3. '(*' → logprob: -2.510610580444336
    4. '(' → logprob: -6.260610580444336
    5. '('' → logprob: -6.885610580444336
    6. '(p' → logprob: -7.010610580444336
    7. 'peated' → logprob: -7.385610580444336
    8. 'ep' → logprob: -7.385610580444336
    9. 'duc' → logprob: -7.385610580444336
    10. 'place' → logprob: -7.635610580444336

Token 32: '(lambda' (ID: 43341)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.06817638128995895
    2. '('' → logprob: -3.44317626953125
    3. '(' → logprob: -4.56817626953125
    4. '(lambda' → logprob: -4.94317626953125
    5. '('',' → logprob: -5.31817626953125
    6. '(j' → logprob: -5.31817626953125
    7. '(map' → logprob: -6.31817626953125
    8. '(m' → logprob: -6.44317626953125
    9. '(('' → logprob: -7.81817626953125
    10. '('_' → logprob: -7.94317626953125

Token 33: ' a' (ID: 261)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.28640976548194885
    2. 'i' → logprob: -1.9114097356796265
    3. ''' → logprob: -2.911409854888916
    4. 'mul' → logprob: -4.661409854888916
    5. 'x' → logprob: -5.286409854888916
    6. ''_' → logprob: -5.411409854888916
    7. 'print' → logprob: -5.661409854888916
    8. '   ' → logprob: -5.661409854888916
    9. ''*' → logprob: -5.911409854888916
    10. ''.' → logprob: -6.286409854888916

Token 34: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02917766198515892
    2. ''' → logprob: -5.279177665710449
    3. '+' → logprob: -5.779177665710449
    4. '```' → logprob: -5.779177665710449
    5. '``' → logprob: -6.904177665710449
    6. 'e' → logprob: -7.029177665710449
    7. ',' → logprob: -7.154177665710449
    8. '*' → logprob: -7.154177665710449
    9. 'f' → logprob: -7.154177665710449
    10. '''.' → logprob: -7.154177665710449

Token 35: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005254268646240234
    2. 'a' → logprob: -5.25525426864624
    3. 'j' → logprob: -11.130254745483398
    4. ''' → logprob: -13.380254745483398
    5. ' b' → logprob: -14.005254745483398
    6. '''.' → logprob: -14.255254745483398
    7. 'x' → logprob: -14.630254745483398
    8. ''b' → logprob: -14.880254745483398
    9. 'c' → logprob: -15.005254745483398
    10. 'i' → logprob: -15.130254745483398

Token 36: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001758956117555499
    2. ',' → logprob: -7.251759052276611
    3. '':' → logprob: -7.376759052276611
    4. ':'' → logprob: -9.376758575439453
    5. '```' → logprob: -9.626758575439453
    6. '`' → logprob: -10.501758575439453
    7. ''' → logprob: -10.626758575439453
    8. '',' → logprob: -10.626758575439453
    9. ':',' → logprob: -10.876758575439453
    10. 'j' → logprob: -11.001758575439453

Token 37: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0028998551424592733
    2. 'b' → logprob: -5.877899646759033
    3. '(a' → logprob: -10.752900123596191
    4. 'f' → logprob: -11.002900123596191
    5. ' a' → logprob: -11.127900123596191
    6. '''.' → logprob: -11.127900123596191
    7. 'i' → logprob: -12.127900123596191
    8. 'mul' → logprob: -12.252900123596191
    9. ''' → logprob: -12.752900123596191
    10. 'j' → logprob: -12.877900123596191

Token 38: ' +' (ID: 659)
  Prédit: '+b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+b' → logprob: -0.07239551842212677
    2. '+' → logprob: -2.8223955631256104
    3. ' +' → logprob: -4.572395324707031
    4. '+j' → logprob: -10.447395324707031
    5. '+c' → logprob: -12.697395324707031
    6. '+B' → logprob: -13.197395324707031
    7. '*b' → logprob: -13.322395324707031
    8. '+a' → logprob: -13.572395324707031
    9. 'b' → logprob: -13.822395324707031
    10. '*' → logprob: -14.447395324707031

Token 39: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.088346359931165e-07
    2. ' b' → logprob: -14.000000953674316
    3. '(b' → logprob: -19.5
    4. ''b' → logprob: -21.0
    5. '	b' → logprob: -21.125
    6. '   ' → logprob: -21.125
    7. 'j' → logprob: -22.0
    8. 'c' → logprob: -22.375
    9. ' б' → logprob: -22.375
    10. ' ' → logprob: -22.5

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003034074034076184
    2. '',' → logprob: -8.750303268432617
    3. ',i' → logprob: -10.000303268432617
    4. '(i' → logprob: -10.625303268432617
    5. ','' → logprob: -11.000303268432617
    6. ''' → logprob: -11.500303268432617
    7. 'i' → logprob: -11.625303268432617
    8. '(),' → logprob: -11.625303268432617
    9. '+' → logprob: -11.750303268432617
    10. '),' → logprob: -12.250303268432617

Token 41: ' ((' (ID: 3536)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.016750872135162354
    2. 'j' → logprob: -4.391750812530518
    3. '[i' → logprob: -6.016750812530518
    4. '(i' → logprob: -7.016750812530518
    5. 'x' → logprob: -7.891750812530518
    6. '['' → logprob: -8.641751289367676
    7. '[' → logprob: -9.016751289367676
    8. 'list' → logprob: -10.141751289367676
    9. 'b' → logprob: -10.391751289367676
    10. '[j' → logprob: -10.391751289367676

Token 42: 'str' (ID: 689)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5890260934829712
    2. 'j' → logprob: -0.8390260934829712
    3. '(i' → logprob: -4.839025974273682
    4. 'x' → logprob: -6.464025974273682
    5. 'map' → logprob: -7.089025974273682
    6. '(j' → logprob: -7.714025974273682
    7. '[i' → logprob: -8.08902645111084
    8. ''' → logprob: -8.33902645111084
    9. '(' → logprob: -8.58902645111084
    10. 'list' → logprob: -8.71402645111084

Token 43: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00485741114243865
    2. '(j' → logprob: -5.879857540130615
    3. '(x' → logprob: -7.254857540130615
    4. '(' → logprob: -8.004857063293457
    5. '(a' → logprob: -8.379857063293457
    6. '(int' → logprob: -8.504857063293457
    7. '(map' → logprob: -9.379857063293457
    8. '(m' → logprob: -9.629857063293457
    9. '(_' → logprob: -10.004857063293457
    10. '((' → logprob: -10.004857063293457

Token 44: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.115377277135849
    2. ').' → logprob: -2.240377187728882
    3. ')`' → logprob: -6.865377426147461
    4. '))' → logprob: -7.990377426147461
    5. 'for' → logprob: -8.115377426147461
    6. '),' → logprob: -8.490377426147461
    7. ')+' → logprob: -9.115377426147461
    8. '+' → logprob: -9.240377426147461
    9. '```' → logprob: -9.740377426147461
    10. ' for' → logprob: -9.990377426147461

Token 45: ' '' (ID: 461)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6955918669700623
    2. 'str' → logprob: -0.6955918669700623
    3. ''' → logprob: -6.945591926574707
    4. '''.' → logprob: -7.695591926574707
    5. '',' → logprob: -8.820591926574707
    6. '''' → logprob: -8.820591926574707
    7. ''.' → logprob: -8.945591926574707
    8. ''\' → logprob: -9.445591926574707
    9. ' str' → logprob: -9.695591926574707
    10. '               ' → logprob: -9.695591926574707

Token 46: 'x' (ID: 87)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8663775324821472
    2. 'j' → logprob: -0.8663775324821472
    3. 'n' → logprob: -3.741377592086792
    4. ''.' → logprob: -3.741377592086792
    5. 'str' → logprob: -4.116377353668213
    6. '',' → logprob: -4.116377353668213
    7. 'i' → logprob: -4.116377353668213
    8. '''' → logprob: -4.241377353668213
    9. 'r' → logprob: -4.616377353668213
    10. '')' → logprob: -4.741377353668213

Token 47: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6030111312866211
    2. ''*' → logprob: -2.103011131286621
    3. 'range' → logprob: -3.103011131286621
    4. '*' → logprob: -3.103011131286621
    5. ')' → logprob: -3.228011131286621
    6. ''.' → logprob: -3.353011131286621
    7. 'for' → logprob: -3.728011131286621
    8. 'str' → logprob: -4.103011131286621
    9. '   ' → logprob: -4.478011131286621
    10. ' *' → logprob: -4.478011131286621

Token 48: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.11918549984693527
    2. 'j' → logprob: -2.244185447692871
    3. ''' → logprob: -5.619185447692871
    4. 'i' → logprob: -6.119185447692871
    5. ''.' → logprob: -9.244185447692871
    6. '''.' → logprob: -9.244185447692871
    7. '''' → logprob: -9.619185447692871
    8. ''i' → logprob: -10.244185447692871
    9. ' str' → logprob: -10.369185447692871
    10. '',' → logprob: -10.369185447692871

Token 49: '(j' (ID: 4997)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0001414426224073395
    2. '(j' → logprob: -8.875141143798828
    3. '(str' → logprob: -14.750141143798828
    4. '(ii' → logprob: -15.125141143798828
    5. '(' → logprob: -15.250141143798828
    6. '(int' → logprob: -15.375141143798828
    7. '(a' → logprob: -16.250141143798828
    8. '(n' → logprob: -16.625141143798828
    9. '(re' → logprob: -16.750141143798828
    10. '(x' → logprob: -17.000141143798828

Token 50: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5958119630813599
    2. '))' → logprob: -0.8458119630813599
    3. '))))' → logprob: -4.84581184387207
    4. ')))' → logprob: -4.97081184387207
    5. '),' → logprob: -6.09581184387207
    6. ').' → logprob: -6.97081184387207
    7. ')`' → logprob: -7.47081184387207
    8. ')).' → logprob: -8.47081184387207
    9. '))),' → logprob: -8.59581184387207
    10. ')),' → logprob: -8.59581184387207

Token 51: ' '=',' (ID: 62404)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5770823359489441
    2. 'i' → logprob: -1.3270823955535889
    3. ''' → logprob: -1.8270823955535889
    4. ''i' → logprob: -5.45208215713501
    5. ''.' → logprob: -6.20208215713501
    6. 'j' → logprob: -6.32708215713501
    7. '')' → logprob: -6.45208215713501
    8. '',' → logprob: -6.82708215713501
    9. ''\' → logprob: -7.70208215713501
    10. ')' → logprob: -8.702082633972168

Token 52: ' str' (ID: 989)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08791550993919373
    2. 'str' → logprob: -2.9629154205322266
    3. ''' → logprob: -4.337915420532227
    4. 'f' → logprob: -5.087915420532227
    5. '(i' → logprob: -5.087915420532227
    6. 'j' → logprob: -5.962915420532227
    7. ' i' → logprob: -6.462915420532227
    8. ''i' → logprob: -7.337915420532227
    9. 'mul' → logprob: -8.212915420532227
    10. 'x' → logprob: -8.337915420532227

Token 53: '(m' (ID: 2145)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0003758575767278671
    2. '(j' → logprob: -8.375375747680664
    3. '('' → logprob: -9.000375747680664
    4. '(f' → logprob: -12.125375747680664
    5. '(a' → logprob: -12.250375747680664
    6. '(' → logprob: -12.375375747680664
    7. '(m' → logprob: -13.375375747680664
    8. '(int' → logprob: -13.750375747680664
    9. '((' → logprob: -13.750375747680664
    10. '(k' → logprob: -14.875375747680664

Token 54: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -0.20488907396793365
    2. '(i' → logprob: -2.3298890590667725
    3. 'ax' → logprob: -3.0798890590667725
    4. '[i' → logprob: -4.579889297485352
    5. 'ulti' → logprob: -5.204889297485352
    6. 'ult' → logprob: -5.579889297485352
    7. 'ultip' → logprob: -5.579889297485352
    8. '(a' → logprob: -5.829889297485352
    9. 'ap' → logprob: -6.204889297485352
    10. '*i' → logprob: -6.204889297485352

Token 55: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.2961512513575144e-05
    2. '(j' → logprob: -10.875022888183594
    3. '(str' → logprob: -13.250022888183594
    4. '(' → logprob: -13.875022888183594
    5. '(int' → logprob: -14.750022888183594
    6. '(a' → logprob: -15.000022888183594
    7. '('' → logprob: -15.500022888183594
    8. '(len' → logprob: -16.000022888183594
    9. '(x' → logprob: -16.625022888183594
    10. '(`' → logprob: -16.875022888183594

Token 56: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.38914233446121216
    2. '(j' → logprob: -1.1391422748565674
    3. ',' → logprob: -6.3891425132751465
    4. '*j' → logprob: -8.264142036437988
    5. '*' → logprob: -8.764142036437988
    6. '*i' → logprob: -9.764142036437988
    7. '(' → logprob: -10.514142036437988
    8. '(*' → logprob: -10.514142036437988
    9. '*(' → logprob: -10.889142036437988
    10. ',j' → logprob: -11.139142036437988

Token 57: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: 0.0
    2. ' j' → logprob: -18.625
    3. '(j' → logprob: -21.5
    4. '	j' → logprob: -22.75
    5. '   ' → logprob: -22.875
    6. '[j' → logprob: -23.875
    7. 'i' → logprob: -24.25
    8. '$j' → logprob: -24.75
    9. '_j' → logprob: -25.0
    10. '.j' → logprob: -25.125

Token 58: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.029752805829048157
    2. ')))' → logprob: -4.029752731323242
    3. '))))' → logprob: -4.779752731323242
    4. '))(' → logprob: -6.154752731323242
    5. '()))' → logprob: -7.154752731323242
    6. ')' → logprob: -10.154752731323242
    7. ')).' → logprob: -10.279752731323242
    8. '))*' → logprob: -10.404752731323242
    9. ')),' → logprob: -10.529752731323242
    10. '))),' → logprob: -10.779752731323242

Token 59: ')))),' (ID: 35247)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7848729491233826
    2. '))' → logprob: -0.9098729491233826
    3. '))))' → logprob: -2.0348730087280273
    4. ')))' → logprob: -5.034873008728027
    5. ')),' → logprob: -6.909873008728027
    6. ')))))
' → logprob: -7.034873008728027
    7. '))),' → logprob: -7.159873008728027
    8. ')))),' → logprob: -7.659873008728027
    9. '),' → logprob: -8.159873008728027
    10. ').' → logprob: -9.409873008728027

Token 60: ' range' (ID: 3352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.42384183406829834
    2. ''\' → logprob: -1.2988418340682983
    3. '''' → logprob: -2.673841953277588
    4. ''))' → logprob: -6.673841953277588
    5. '''.' → logprob: -6.798841953277588
    6. ''.' → logprob: -8.17384147644043
    7. 'f' → logprob: -8.17384147644043
    8. '))' → logprob: -8.54884147644043
    9. ')))' → logprob: -9.92384147644043
    10. 'print' → logprob: -10.29884147644043

Token 61: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11313246935606003
    2. '(range' → logprob: -2.2381324768066406
    3. '(len' → logprob: -9.61313247680664
    4. '(i' → logprob: -9.73813247680664
    5. '(n' → logprob: -10.23813247680664
    6. '(x' → logprob: -10.36313247680664
    7. '((' → logprob: -10.48813247680664
    8. '(re' → logprob: -11.11313247680664
    9. '(num' → logprob: -11.61313247680664
    10. '(m' → logprob: -11.98813247680664

Token 62: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7495542764663696
    2. '1' → logprob: -1.1245542764663696
    3. '(' → logprob: -2.24955415725708
    4. '0' → logprob: -2.49955415725708
    5. 'i' → logprob: -4.87455415725708
    6. '11' → logprob: -5.87455415725708
    7. '100' → logprob: -6.87455415725708
    8. '(i' → logprob: -6.87455415725708
    9. 'j' → logprob: -7.37455415725708
    10. '2' → logprob: -7.87455415725708

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008678716840222478
    2. '(' → logprob: -7.25086784362793
    3. ')' → logprob: -10.12586784362793
    4. '),' → logprob: -10.50086784362793
    5. '))' → logprob: -10.62586784362793
    6. '(range' → logprob: -11.00086784362793
    7. ',(' → logprob: -11.50086784362793
    8. '```' → logprob: -12.25086784362793
    9. ').' → logprob: -12.37586784362793
    10. ' ,' → logprob: -12.50086784362793

Token 64: ' ' (ID: 220)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '11' → logprob: -0.7612364292144775
    2. '10' → logprob: -1.1362364292144775
    3. 'n' → logprob: -1.6362364292144775
    4. '12' → logprob: -5.386236190795898
    5. '101' → logprob: -5.761236190795898
    6. '9' → logprob: -6.136236190795898
    7. 'num' → logprob: -6.636236190795898
    8. 'N' → logprob: -7.011236190795898
    9. '8' → logprob: -7.261236190795898
    10. '21' → logprob: -7.386236190795898

Token 65: '10' (ID: 702)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.6645130515098572
    2. '10' → logprob: -0.7895130515098572
    3. 'n' → logprob: -3.914513111114502
    4. '12' → logprob: -5.414513111114502
    5. 'i' → logprob: -6.289513111114502
    6. '101' → logprob: -7.039513111114502
    7. '9' → logprob: -7.164513111114502
    8. 'j' → logprob: -7.289513111114502
    9. '100' → logprob: -7.789513111114502
    10. 'x' → logprob: -8.164512634277344

Token 66: '))),' (ID: 85891)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.5070073008537292
    2. '))' → logprob: -1.007007360458374
    3. ')))' → logprob: -4.007007122039795
    4. ')))),' → logprob: -5.007007122039795
    5. '))),' → logprob: -5.507007122039795
    6. ')))))
' → logprob: -6.382007122039795
    7. ')),' → logprob: -7.757007122039795
    8. ')' → logprob: -7.882007122039795
    9. ''))' → logprob: -8.257007598876953
    10. '))))
' → logprob: -8.757007598876953

Token 67: ' range' (ID: 3352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9176782965660095
    2. 'j' → logprob: -1.4176783561706543
    3. 'end' → logprob: -1.6676783561706543
    4. 'range' → logprob: -3.1676783561706543
    5. 'sep' → logprob: -3.1676783561706543
    6. ''\' → logprob: -3.5426783561706543
    7. ''' → logprob: -4.292678356170654
    8. ')' → logprob: -4.667678356170654
    9. 'x' → logprob: -4.667678356170654
    10. '))' → logprob: -4.917678356170654

Token 68: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. '(range' → logprob: -14.500000953674316
    3. '(len' → logprob: -16.25
    4. '()))' → logprob: -17.125
    5. '((' → logprob: -17.25
    6. ' (' → logprob: -17.625
    7. '(i' → logprob: -17.75
    8. '(x' → logprob: -17.875
    9. '(...' → logprob: -18.125
    10. '))' → logprob: -18.25

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005014224909245968
    2. '10' → logprob: -5.505014419555664
    3. '(' → logprob: -7.005014419555664
    4. '11' → logprob: -10.880014419555664
    5. '9' → logprob: -12.005014419555664
    6. '2' → logprob: -13.380014419555664
    7. '0' → logprob: -13.880014419555664
    8. '12' → logprob: -15.630014419555664
    9. '3' → logprob: -15.755014419555664
    10. '8' → logprob: -16.005014419555664

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007707939948886633
    2. '))' → logprob: -7.750770568847656
    3. ')))' → logprob: -8.875770568847656
    4. '))))' → logprob: -9.750770568847656
    5. ')),' → logprob: -10.250770568847656
    6. '))),' → logprob: -11.125770568847656
    7. ')):' → logprob: -11.125770568847656
    8. '),' → logprob: -11.250770568847656
    9. '9' → logprob: -11.875770568847656
    10. ')):
' → logprob: -12.000770568847656

Token 71: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20149442553520203
    2. '11' → logprob: -1.7014944553375244
    3. '12' → logprob: -9.826494216918945
    4. '101' → logprob: -11.576494216918945
    5. '100' → logprob: -11.701494216918945
    6. ' ' → logprob: -12.076494216918945
    7. '9' → logprob: -13.201494216918945
    8. '13' → logprob: -14.201494216918945
    9. '14' → logprob: -14.951494216918945
    10. '20' → logprob: -15.201494216918945

Token 72: '10' (ID: 702)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.043032873421907425
    2. '10' → logprob: -3.1680328845977783
    3. '101' → logprob: -11.0430326461792
    4. '100' → logprob: -11.6680326461792
    5. '12' → logprob: -12.1680326461792
    6. '9' → logprob: -13.5430326461792
    7. '6' → logprob: -13.9180326461792
    8. '4' → logprob: -15.4180326461792
    9. '13' → logprob: -15.4180326461792
    10. '20' → logprob: -15.5430326461792

Token 73: '))))' (ID: 57459)
  Prédit: '))))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.2099384218454361
    2. '))' → logprob: -1.709938406944275
    3. ')))' → logprob: -5.4599385261535645
    4. ')))),' → logprob: -6.2099385261535645
    5. ')))))
' → logprob: -6.9599385261535645
    6. '))),' → logprob: -7.7099385261535645
    7. '()))' → logprob: -8.459938049316406
    8. '))))
' → logprob: -8.584938049316406
    9. ')):' → logprob: -8.709938049316406
    10. ')))));
' → logprob: -9.709938049316406

Token 74: '(' (ID: 7)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7596272826194763
    2. '))(' → logprob: -0.7596272826194763
    3. ')(_' → logprob: -3.634627342224121
    4. ')(' → logprob: -4.384627342224121
    5. '()))' → logprob: -4.634627342224121
    6. '(_' → logprob: -4.634627342224121
    7. '(x' → logprob: -6.509627342224121
    8. '_' → logprob: -7.009627342224121
    9. '))))' → logprob: -7.259627342224121
    10. ')))' → logprob: -7.259627342224121

Token 75: 'None' (ID: 8505)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.056150514632463455
    2. '1' → logprob: -4.306150436401367
    3. '_' → logprob: -4.431150436401367
    4. '))' → logprob: -4.806150436401367
    5. ')' → logprob: -5.056150436401367
    6. 'x' → logprob: -5.306150436401367
    7. '0' → logprob: -5.681150436401367
    8. 'list' → logprob: -6.431150436401367
    9. 'None' → logprob: -7.056150436401367
    10. '10' → logprob: -7.056150436401367

Token 76: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01362671609967947
    2. ')' → logprob: -5.013626575469971
    3. '))(' → logprob: -5.513626575469971
    4. ')))' → logprob: -6.263626575469971
    5. '))))' → logprob: -7.138626575469971
    6. ')(' → logprob: -9.388627052307129
    7. '))[' → logprob: -11.388627052307129
    8. '   ' → logprob: -11.638627052307129
    9. '()))' → logprob: -11.638627052307129
    10. '}))' → logprob: -11.888627052307129


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 74
Tokens correctement prédits (1ère position, stricte): 21
Tokens correctement prédits (1ère position, avec adaptation): 21
Tokens correctement prédits (top 10): 50
Précision stricte (1ère position): 28.38%
Précision adaptée (1ère position): 28.38%
Précision (top 10): 67.57%
================================================================================
