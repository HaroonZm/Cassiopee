================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def ss(n):
    return n / s(n)

def s(n):
    return sum([int(a) for a in str(n)])

K = int(input())
n = 0
d = 1
while K > 0:
    t1 = ss(n + d)
    t2 = ss(n + 10 * d)
    if t1 > t2:
        d *= 10
    n += d
    print(n)
    K -= 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' ss' (ID: 20928)
  → Token d'amorce (pas de prédiction)

Token 2: '(n' (ID: 2406)
  → Token d'amorce (pas de prédiction)

Token 3: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31356170773506165
    2. ')' → logprob: -1.3135616779327393
    3. ':' → logprob: -9.43856143951416
    4. ',' → logprob: -9.56356143951416
    5. 's' → logprob: -10.43856143951416
    6. '_' → logprob: -10.81356143951416
    7. '*' → logprob: -11.06356143951416
    8. 'u' → logprob: -11.18856143951416
    9. '):
' → logprob: -11.56356143951416
    10. '=' → logprob: -11.81356143951416

Token 4: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33721303939819336
    2. ':' → logprob: -1.5872130393981934
    3. '```' → logprob: -2.8372130393981934
    4. '    ' → logprob: -4.837213039398193
    5. ' if' → logprob: -5.712213039398193
    6. '\' → logprob: -5.837213039398193
    7. ' ' → logprob: -6.087213039398193
    8. ' return' → logprob: -6.462213039398193
    9. ':return' → logprob: -6.837213039398193
    10. '``' → logprob: -6.962213039398193

Token 5: ' return' (ID: 622)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4536912441253662
    2. '   ' → logprob: -1.9536912441253662
    3. 'r' → logprob: -2.203691244125366
    4. 'if' → logprob: -3.203691244125366
    5. ' ' → logprob: -3.328691244125366
    6. ' if' → logprob: -4.203691482543945
    7. 'return' (adapté à ' return') → logprob: -5.328691482543945
    8. 's' → logprob: -5.453691482543945
    9. '```' → logprob: -6.078691482543945
    10. ''' → logprob: -6.453691482543945

Token 6: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11905967444181442
    2. 'n' → logprob: -2.3690595626831055
    3. ' ' → logprob: -3.9940595626831055
    4. ' None' → logprob: -9.244059562683105
    5. '(n' → logprob: -10.369059562683105
    6. '"' → logprob: -10.619059562683105
    7. ''' → logprob: -10.869059562683105
    8. ' ' → logprob: -11.119059562683105
    9. 's' → logprob: -11.369059562683105
    10. ' (' → logprob: -11.494059562683105

Token 7: ' /' (ID: 820)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5794395208358765
    2. '+' → logprob: -0.9544395208358765
    3. '**' → logprob: -3.079439640045166
    4. '(' → logprob: -5.579439640045166
    5. '_' → logprob: -6.704439640045166
    6. ')' → logprob: -6.829439640045166
    7. '.' → logprob: -7.579439640045166
    8. '*(' → logprob: -7.954439640045166
    9. '[' → logprob: -8.079439163208008
    10. '#' → logprob: -8.204439163208008

Token 8: ' s' (ID: 265)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0456354059278965
    2. ' ' → logprob: -3.170635461807251
    3. 'n' → logprob: -6.295635223388672
    4. ' n' → logprob: -8.295635223388672
    5. '1' → logprob: -8.545635223388672
    6. '10' → logprob: -8.795635223388672
    7. '3' → logprob: -9.170635223388672
    8. '100' → logprob: -10.670635223388672
    9. '```' → logprob: -10.795635223388672
    10. '5' → logprob: -11.045635223388672

Token 9: '(n' (ID: 2406)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00021093101531732827
    2. ''s' → logprob: -8.625210762023926
    3. '"s' → logprob: -12.000210762023926
    4. ')' → logprob: -12.250210762023926
    5. '`s' → logprob: -12.250210762023926
    6. ' s' → logprob: -12.375210762023926
    7. 'n' → logprob: -13.250210762023926
    8. ')s' → logprob: -13.250210762023926
    9. '```' → logprob: -13.250210762023926
    10. '_s' → logprob: -14.250210762023926

Token 10: ')

' (ID: 1029)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.019647836685180664
    2. ')' → logprob: -4.019647598266602
    3. ')s' → logprob: -6.644647598266602
    4. '2' → logprob: -8.894647598266602
    5. ''s' → logprob: -11.019647598266602
    6. '`s' → logprob: -12.019647598266602
    7. 'S' → logprob: -12.144647598266602
    8. '_s' → logprob: -12.269647598266602
    9. ')n' → logprob: -12.394647598266602
    10. '.s' → logprob: -12.769647598266602

Token 11: 'def' (ID: 1314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -7.44574936106801e-05
    2. '(' → logprob: -10.50007438659668
    3. '(s' → logprob: -10.87507438659668
    4. ''s' → logprob: -11.25007438659668
    5. '`s' → logprob: -12.75007438659668
    6. '_s' → logprob: -13.00007438659668
    7. ')' → logprob: -13.00007438659668
    8. ')s' → logprob: -13.50007438659668
    9. '"s' → logprob: -13.75007438659668
    10. '-' → logprob: -14.37507438659668

Token 12: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20286165177822113
    2. ' s' → logprob: -1.7028616666793823
    3. ' ss' → logprob: -7.327861785888672
    4. 'ss' → logprob: -7.452861785888672
    5. ' ' → logprob: -9.077861785888672
    6. 'n' → logprob: -10.327861785888672
    7. ' ' → logprob: -10.702861785888672
    8. '_s' → logprob: -11.577861785888672
    9. ' n' → logprob: -11.577861785888672
    10. 'f' → logprob: -12.452861785888672

Token 13: '(n' (ID: 2406)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0007636455120518804
    2. '(n' → logprob: -7.625763416290283
    3. 'n' → logprob: -8.250763893127441
    4. '(s' → logprob: -12.250763893127441
    5. 'S' → logprob: -12.875763893127441
    6. '(' → logprob: -13.625763893127441
    7. 'qrt' → logprob: -14.000763893127441
    8. 'q' → logprob: -14.125763893127441
    9. ' s' → logprob: -14.250763893127441
    10. '```' → logprob: -14.750763893127441

Token 14: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6480143666267395
    2. '):' → logprob: -0.7730143666267395
    3. '(n' → logprob: -4.523014545440674
    4. '**' → logprob: -6.523014545440674
    5. ')n' → logprob: -7.648014545440674
    6. ')**' → logprob: -7.773014545440674
    7. '):
' → logprob: -8.398014068603516
    8. 's' → logprob: -8.398014068603516
    9. '[]):' → logprob: -8.523014068603516
    10. '[' → logprob: -8.523014068603516

Token 15: '   ' (ID: 271)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3253019154071808
    2. 'n' → logprob: -1.5753018856048584
    3. ' n' → logprob: -3.2003018856048584
    4. 's' → logprob: -4.4503021240234375
    5. ' ' → logprob: -5.0753021240234375
    6. '2' → logprob: -5.0753021240234375
    7. 'sum' → logprob: -6.2003021240234375
    8. '   ' → logprob: -6.7003021240234375
    9. 'int' → logprob: -7.4503021240234375
    10. ' sum' → logprob: -7.5753021240234375

Token 16: ' return' (ID: 622)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21047914028167725
    2. ' n' → logprob: -2.210479259490967
    3. '1' → logprob: -2.960479259490967
    4. 's' → logprob: -4.460479259490967
    5. 'sum' → logprob: -4.960479259490967
    6. ' ' → logprob: -6.210479259490967
    7. ' sum' → logprob: -6.210479259490967
    8. '2' → logprob: -6.460479259490967
    9. '   ' → logprob: -6.960479259490967
    10. '0' → logprob: -7.085479259490967

Token 17: ' sum' (ID: 4215)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1810264140367508
    2. 'n' → logprob: -1.9310264587402344
    3. ' sum' → logprob: -5.306026458740234
    4. 's' → logprob: -5.681026458740234
    5. ' ' → logprob: -5.806026458740234
    6. ' int' → logprob: -6.056026458740234
    7. 'sum' → logprob: -6.056026458740234
    8. '1' → logprob: -6.556026458740234
    9. 'int' → logprob: -6.681026458740234
    10. ' s' → logprob: -6.806026458740234

Token 18: '([' (ID: 5194)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6728286743164062
    2. '(' → logprob: -1.5478286743164062
    3. '(range' → logprob: -1.6728286743164062
    4. '(int' → logprob: -2.7978286743164062
    5. '([' → logprob: -4.422828674316406
    6. '(abs' → logprob: -4.922828674316406
    7. '(i' → logprob: -5.797828674316406
    8. '(s' → logprob: -6.547828674316406
    9. 's' → logprob: -7.297828674316406
    10. '((' → logprob: -7.547828674316406

Token 19: 'int' (ID: 491)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.36309173703193665
    2. 'int' → logprob: -1.2380917072296143
    3. 'n' → logprob: -4.613091945648193
    4. ' i' → logprob: -6.488091945648193
    5. 'range' → logprob: -6.488091945648193
    6. 'x' → logprob: -7.238091945648193
    7. ' int' → logprob: -8.363091468811035
    8. '   ' → logprob: -8.613091468811035
    9. '1' → logprob: -8.988091468811035
    10. 'abs' → logprob: -9.238091468811035

Token 20: '(a' (ID: 6271)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.7350046038627625
    2. '(i' → logprob: -1.1100046634674072
    3. '(x' → logprob: -1.7350046634674072
    4. '(' → logprob: -4.985004425048828
    5. '(c' → logprob: -5.235004425048828
    6. '(char' → logprob: -6.985004425048828
    7. '(a' → logprob: -7.610004425048828
    8. '(ch' → logprob: -7.985004425048828
    9. '(str' → logprob: -8.235004425048828
    10. '(n' → logprob: -8.735004425048828

Token 21: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06583207845687866
    2. '(x' → logprob: -4.190832138061523
    3. '(d' → logprob: -4.690832138061523
    4. ')d' → logprob: -4.815832138061523
    5. '(i' → logprob: -5.065832138061523
    6. 'd' → logprob: -5.190832138061523
    7. ')x' → logprob: -5.315832138061523
    8. 'i' → logprob: -5.565832138061523
    9. 'a' → logprob: -6.065832138061523
    10. 'x' → logprob: -6.690832138061523

Token 22: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20984122157096863
    2. ')' → logprob: -2.084841251373291
    3. 'for' → logprob: -3.334841251373291
    4. 'a' → logprob: -4.334841251373291
    5. 'd' → logprob: -5.209841251373291
    6. '(a' → logprob: -5.584841251373291
    7. '(d' → logprob: -6.584841251373291
    8. 'digit' → logprob: -6.709841251373291
    9. '(x' → logprob: -7.084841251373291
    10. 's' → logprob: -7.459841251373291

Token 23: ' a' (ID: 261)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.12763755023479462
    2. 'str' → logprob: -2.1276376247406006
    3. ' a' → logprob: -8.50263786315918
    4. ' ' → logprob: -9.12763786315918
    5. ' n' → logprob: -9.12763786315918
    6. 'a' → logprob: -9.25263786315918
    7. 'n' → logprob: -9.75263786315918
    8. ' list' → logprob: -9.75263786315918
    9. 'list' → logprob: -10.00263786315918
    10. '(str' → logprob: -11.75263786315918

Token 24: ' in' (ID: 306)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.18517537415027618
    2. 'str' → logprob: -2.3101754188537598
    3. ' in' → logprob: -2.8101754188537598
    4. 'a' → logprob: -5.31017541885376
    5. ' a' → logprob: -5.56017541885376
    6. ' ' → logprob: -8.060174942016602
    7. 'in' → logprob: -8.310174942016602
    8. '=str' → logprob: -9.310174942016602
    9. ' n' → logprob: -9.810174942016602
    10. 'n' → logprob: -10.435174942016602

Token 25: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.03824654221534729
    2. ' str' → logprob: -3.2882466316223145
    3. 'list' → logprob: -8.788246154785156
    4. '(str' → logprob: -11.288246154785156
    5. 'n' → logprob: -11.538246154785156
    6. ' list' → logprob: -11.913246154785156
    7. 's' → logprob: -12.038246154785156
    8. ' ' → logprob: -12.163246154785156
    9. 'st' → logprob: -12.538246154785156
    10. '	str' → logprob: -13.413246154785156

Token 26: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00038014890742488205
    2. '(' → logprob: -8.375380516052246
    3. 'n' → logprob: -9.375380516052246
    4. '(abs' → logprob: -9.750380516052246
    5. 'abs' → logprob: -12.375380516052246
    6. ' (' → logprob: -14.375380516052246
    7. 'a' → logprob: -15.000380516052246
    8. '(int' → logprob: -15.000380516052246
    9. ' n' → logprob: -15.125380516052246
    10. ')n' → logprob: -16.00037956237793

Token 27: ')])

' (ID: 182226)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.00287489197216928
    2. ')]' → logprob: -6.502874851226807
    3. ')' → logprob: -6.627874851226807
    4. ' )' → logprob: -10.627875328063965
    5. '])' → logprob: -11.002875328063965
    6. ')])
' → logprob: -13.127875328063965
    7. ')])

' → logprob: -13.377875328063965
    8. '))' → logprob: -13.752875328063965
    9. '   ' → logprob: -14.252875328063965
    10. ' ])' → logprob: -14.627875328063965

Token 28: 'K' (ID: 42)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.551230251789093
    2. 's' → logprob: -1.0512301921844482
    3. ')' → logprob: -2.9262301921844482
    4. '*' → logprob: -4.426230430603027
    5. '(n' → logprob: -5.676230430603027
    6. '(s' → logprob: -7.426230430603027
    7. '0' → logprob: -7.551230430603027
    8. 'a' → logprob: -7.676230430603027
    9. 'n' → logprob: -7.676230430603027
    10. '+' → logprob: -7.926230430603027

Token 29: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6294021606445312
    2. '()' → logprob: -1.6294021606445312
    3. ')' → logprob: -1.8794021606445312
    4. '<|end|>' → logprob: -2.8794021606445312
    5. 's' → logprob: -3.6294021606445312
    6. '(n' → logprob: -5.004402160644531
    7. 'K' → logprob: -5.504402160644531
    8. '(s' → logprob: -5.629402160644531
    9. '<|end|>' → logprob: -5.629402160644531
    10. '())' → logprob: -5.629402160644531

Token 30: ' int' (ID: 677)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.1032339334487915
    2. '100' → logprob: -1.1032339334487915
    3. ' ' → logprob: -1.7282339334487915
    4. '1' → logprob: -2.228233814239502
    5. 'int' → logprob: -4.353233814239502
    6. '18' → logprob: -4.603233814239502
    7. '0' → logprob: -4.603233814239502
    8. ' int' → logprob: -5.603233814239502
    9. '9' → logprob: -5.853233814239502
    10. '999' → logprob: -5.853233814239502

Token 31: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0489162839949131
    2. '(input' → logprob: -3.0489163398742676
    3. '(K' → logprob: -9.17391586303711
    4. '('' → logprob: -9.79891586303711
    5. 'input' → logprob: -9.92391586303711
    6. '()' → logprob: -10.42391586303711
    7. ' (' → logprob: -10.79891586303711
    8. ' ' → logprob: -11.42391586303711
    9. '(s' → logprob: -11.54891586303711
    10. '(
' → logprob: -11.54891586303711

Token 32: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5407836437225342
    2. '()' → logprob: -1.7907836437225342
    3. '('' → logprob: -1.7907836437225342
    4. '(' → logprob: -2.790783643722534
    5. '("("' → logprob: -4.540783882141113
    6. '("' → logprob: -4.665783882141113
    7. '(""))' → logprob: -6.665783882141113
    8. '(">' → logprob: -8.165783882141113
    9. '("")' → logprob: -8.165783882141113
    10. '()))' → logprob: -8.290783882141113

Token 33: 'n' (ID: 77)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.34736329317092896
    2. 'for' → logprob: -2.597363233566284
    3. 'result' → logprob: -2.847363233566284
    4. 'r' → logprob: -2.972363233566284
    5. 's' → logprob: -3.472363233566284
    6. 'n' → logprob: -4.097363471984863
    7. 'while' → logprob: -4.222363471984863
    8. 'a' → logprob: -4.597363471984863
    9. 'if' → logprob: -4.722363471984863
    10. '```' → logprob: -5.097363471984863

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9054024815559387
    2. ' ' → logprob: -1.280402421951294
    3. '=' → logprob: -2.030402421951294
    4. '%' → logprob: -2.655402421951294
    5. '*' → logprob: -3.655402421951294
    6. '**' → logprob: -3.655402421951294
    7. '_' → logprob: -4.530402660369873
    8. '+' → logprob: -4.655402660369873
    9. ' *' → logprob: -5.030402660369873
    10. ' **' → logprob: -5.030402660369873

Token 35: ' ' (ID: 220)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.3957524597644806
    2. 'K' → logprob: -1.1457524299621582
    3. 'int' → logprob: -5.395752429962158
    4. ' int' → logprob: -6.020752429962158
    5. '1' → logprob: -7.145752429962158
    6. ' ' → logprob: -7.395752429962158
    7. 's' → logprob: -9.270752906799316
    8. 'n' → logprob: -9.395752906799316
    9. ' n' → logprob: -9.395752906799316
    10. '0' → logprob: -10.020752906799316

Token 36: '0' (ID: 15)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.19043497741222382
    2. 'int' → logprob: -1.8154349327087402
    3. 'ss' → logprob: -4.69043493270874
    4. 's' → logprob: -7.56543493270874
    5. '1' → logprob: -8.065435409545898
    6. 'input' → logprob: -8.690435409545898
    7. 'n' → logprob: -9.065435409545898
    8. '100' → logprob: -9.815435409545898
    9. ' K' → logprob: -9.940435409545898
    10. ' int' → logprob: -10.440435409545898

Token 37: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2839573621749878
    2. '<|end|>' → logprob: -1.6589573621749878
    3. ' 
' → logprob: -3.5339574813842773
    4. '+' → logprob: -4.408957481384277
    5. '  
' → logprob: -5.783957481384277
    6. ' ' → logprob: -5.908957481384277
    7. '<|end|>' → logprob: -5.908957481384277
    8. '\n' → logprob: -6.033957481384277
    9. '0' → logprob: -6.908957481384277
    10. 'n' → logprob: -7.158957481384277

Token 38: 'd' (ID: 67)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3455921709537506
    2. '<|end|>' → logprob: -1.3455921411514282
    3. ' while' → logprob: -3.7205922603607178
    4. '0' → logprob: -6.845592021942139
    5. 'n' → logprob: -6.970592021942139
    6. '
' → logprob: -7.095592021942139
    7. '+' → logprob: -7.095592021942139
    8. '```' → logprob: -7.220592021942139
    9. 'for' → logprob: -7.470592021942139
    10. '<|end|>' → logprob: -7.595592021942139

Token 39: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3036462366580963
    2. ' =' → logprob: -1.928646206855774
    3. 'ef' → logprob: -2.1786463260650635
    4. 'o' → logprob: -6.428646087646484
    5. 'e' → logprob: -7.428646087646484
    6. 'f' → logprob: -7.553646087646484
    7. ' ' → logprob: -8.928646087646484
    8. ',' → logprob: -9.178646087646484
    9. '+=' → logprob: -9.428646087646484
    10. '+' → logprob: -9.553646087646484

Token 40: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8524272441864014
    2. '{}' → logprob: -1.7274272441864014
    3. ' ' → logprob: -1.9774272441864014
    4. '0' → logprob: -2.2274272441864014
    5. ' {}' → logprob: -2.2274272441864014
    6. '100' → logprob: -3.9774272441864014
    7. '10' → logprob: -4.2274274826049805
    8. '{' → logprob: -5.9774274826049805
    9. 'K' → logprob: -6.6024274826049805
    10. ' K' → logprob: -7.2274274826049805

Token 41: '1' (ID: 16)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.6977081894874573
    2. '1' → logprob: -0.9477081894874573
    3. '0' → logprob: -2.6977081298828125
    4. '{' → logprob: -3.5727081298828125
    5. 'K' → logprob: -4.5727081298828125
    6. 'int' → logprob: -6.3227081298828125
    7. '10' → logprob: -6.4477081298828125
    8. 'dict' → logprob: -6.5727081298828125
    9. '100' → logprob: -6.9477081298828125
    10. '2' → logprob: -7.3227081298828125

Token 42: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.056660689413547516
    2. '<|end|>' → logprob: -4.0566606521606445
    3. ' ' → logprob: -4.6816606521606445
    4. ' while' → logprob: -4.6816606521606445
    5. 'while' → logprob: -5.4316606521606445
    6. ' 
' → logprob: -6.0566606521606445
    7. '*' → logprob: -6.5566606521606445
    8. ',' → logprob: -6.6816606521606445
    9. 'n' → logprob: -6.8066606521606445
    10. ' +' → logprob: -7.0566606521606445

Token 43: 'while' (ID: 7032)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0863124281167984
    2. 'while' → logprob: -3.5863125324249268
    3. '
' → logprob: -4.086312294006348
    4. '+
' → logprob: -4.461312294006348
    5. ' while' → logprob: -4.586312294006348
    6. '0' → logprob: -4.711312294006348
    7. '*' → logprob: -6.461312294006348
    8. '<|end|>' → logprob: -6.586312294006348
    9. ' ' → logprob: -7.086312294006348
    10. '#' → logprob: -7.836312294006348

Token 44: ' K' (ID: 658)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5739917159080505
    2. ' d' → logprob: -1.0739917755126953
    3. 'n' → logprob: -2.9489917755126953
    4. 'd' → logprob: -3.1989917755126953
    5. ' K' → logprob: -7.073991775512695
    6. ' ' → logprob: -7.448991775512695
    7. ' True' → logprob: -8.448991775512695
    8. 'K' → logprob: -9.198991775512695
    9. 'True' → logprob: -10.198991775512695
    10. '(n' → logprob: -10.448991775512695

Token 45: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7882230877876282
    2. ' >=' → logprob: -1.1632230281829834
    3. '>' → logprob: -1.6632230281829834
    4. '>=' → logprob: -3.1632230281829834
    5. ' ' → logprob: -7.9132232666015625
    6. '-' → logprob: -8.538223266601562
    7. ' -' → logprob: -8.663223266601562
    8. '%' → logprob: -9.788223266601562
    9. ' !=' → logprob: -9.913223266601562
    10. ':' → logprob: -10.413223266601562

Token 46: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5972358584403992
    2. ' ' → logprob: -0.8472358584403992
    3. 'd' → logprob: -4.472235679626465
    4. ' d' → logprob: -5.222235679626465
    5. ' s' → logprob: -6.722235679626465
    6. 's' → logprob: -6.722235679626465
    7. 'n' → logprob: -7.347235679626465
    8. ' n' → logprob: -7.472235679626465
    9. '=' → logprob: -7.597235679626465
    10. '  ' → logprob: -10.472235679626465

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006163886282593012
    2. '9' → logprob: -5.881164073944092
    3. 's' → logprob: -6.256164073944092
    4. ' ' → logprob: -7.631164073944092
    5. 'd' → logprob: -7.756164073944092
    6. '1' → logprob: -7.756164073944092
    7. 'n' → logprob: -9.881163597106934
    8. '999' → logprob: -11.006163597106934
    9. ' s' → logprob: -12.506163597106934
    10. '10' → logprob: -12.506163597106934

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02763856202363968
    2. ' and' → logprob: -3.7776386737823486
    3. ':
' → logprob: -6.0276384353637695
    4. ' :' → logprob: -6.4026384353637695
    5. 'and' → logprob: -8.40263843536377
    6. ',' → logprob: -10.52763843536377
    7. ' :
' → logprob: -10.65263843536377
    8. '*' → logprob: -12.15263843536377
    9. '   ' → logprob: -12.15263843536377
    10. ' *' → logprob: -12.52763843536377

Token 49: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.0492016077041626
    2. ' ' → logprob: -1.2992016077041626
    3. ' n' → logprob: -1.7992016077041626
    4. 'n' → logprob: -2.049201488494873
    5. '   ' → logprob: -3.549201488494873
    6. 'd' → logprob: -4.299201488494873
    7. ' if' → logprob: -4.549201488494873
    8. ' d' → logprob: -4.799201488494873
    9. '    ' → logprob: -5.174201488494873
    10. '    
' → logprob: -5.799201488494873

Token 50: ' t' (ID: 260)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7499105930328369
    2. 'n' → logprob: -1.124910593032837
    3. ' if' → logprob: -3.374910593032837
    4. ' s' → logprob: -3.499910593032837
    5. 'd' → logprob: -3.624910593032837
    6. ' d' → logprob: -3.749910593032837
    7. ' ' → logprob: -3.749910593032837
    8. '    ' → logprob: -3.999910593032837
    9. ' 
' → logprob: -4.249910354614258
    10. 's' → logprob: -4.749910354614258

Token 51: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24744082987308502
    2. '=' → logprob: -1.8724408149719238
    3. ' *=' → logprob: -3.372440814971924
    4. '*=' → logprob: -4.497440814971924
    5. '*' → logprob: -5.247440814971924
    6. ' +=' → logprob: -5.497440814971924
    7. ' *' → logprob: -5.872440814971924
    8. '+=' → logprob: -5.997440814971924
    9. 'o' → logprob: -7.872440814971924
    10. ' ' → logprob: -7.997440814971924

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08996627479791641
    2. '=' → logprob: -2.464966297149658
    3. ',' → logprob: -7.964966297149658
    4. ' ' → logprob: -8.0899658203125
    5. ' *=' → logprob: -9.5899658203125
    6. ' +=' → logprob: -9.8399658203125
    7. '*' → logprob: -9.9649658203125
    8. ' *' → logprob: -10.0899658203125
    9. '0' → logprob: -10.3399658203125
    10. '+=' → logprob: -11.2149658203125

Token 53: ' ss' (ID: 20928)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8597821593284607
    2. 's' → logprob: -1.2347822189331055
    3. 'ss' → logprob: -2.8597822189331055
    4. 'n' → logprob: -2.9847822189331055
    5. ' d' → logprob: -2.9847822189331055
    6. ' s' → logprob: -3.2347822189331055
    7. 'K' → logprob: -3.9847822189331055
    8. '10' → logprob: -4.2347822189331055
    9. '9' → logprob: -4.3597822189331055
    10. ' n' → logprob: -4.8597822189331055

Token 54: '(n' (ID: 2406)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.014377626590430737
    2. '(n' → logprob: -4.389377593994141
    3. '(' → logprob: -6.389377593994141
    4. 'd' → logprob: -9.01437759399414
    5. '(s' → logprob: -10.76437759399414
    6. '((' → logprob: -11.13937759399414
    7. '(k' → logprob: -11.51437759399414
    8. '(t' → logprob: -11.63937759399414
    9. ' (' → logprob: -13.13937759399414
    10. '(div' → logprob: -13.38937759399414

Token 55: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01148420199751854
    2. '+' → logprob: -5.136484146118164
    3. ')
' → logprob: -6.511484146118164
    4. ' +' → logprob: -7.011484146118164
    5. 'd' → logprob: -7.261484146118164
    6. ')*' → logprob: -7.636484146118164
    7. '*d' → logprob: -7.636484146118164
    8. '+d' → logprob: -7.636484146118164
    9. '*' → logprob: -8.136484146118164
    10. ' )' → logprob: -8.636484146118164

Token 56: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1268298178911209
    2. ' d' → logprob: -2.6268298625946045
    3. '1' → logprob: -3.2518298625946045
    4. ' ' → logprob: -4.876829624176025
    5. '   ' → logprob: -8.876830101013184
    6. 's' → logprob: -9.251830101013184
    7. '  ' → logprob: -10.564330101013184
    8. '7' → logprob: -10.939330101013184
    9. ' s' → logprob: -11.001830101013184
    10. '2' → logprob: -11.001830101013184

Token 57: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004033875651657581
    2. ')
' → logprob: -5.629034042358398
    3. ' )' → logprob: -8.754034042358398
    4. ')
' → logprob: -9.129034042358398
    5. ')

' → logprob: -9.379034042358398
    6. '   ' → logprob: -10.754034042358398
    7. ')`' → logprob: -11.504034042358398
    8. '))' → logprob: -11.629034042358398
    9. '`)' → logprob: -11.629034042358398
    10. ' ' → logprob: -12.004034042358398

Token 58: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8557196259498596
    2. ')' → logprob: -0.9807196259498596
    3. ')
' → logprob: -3.355719566345215
    4. '<|end|>' → logprob: -3.605719566345215
    5. ' if' → logprob: -3.730719566345215
    6. 'if' → logprob: -4.105719566345215
    7. ' ' → logprob: -4.355719566345215
    8. '+' → logprob: -4.480719566345215
    9. ' 
' → logprob: -4.605719566345215
    10. '*' → logprob: -4.855719566345215

Token 59: ' t' (ID: 260)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1054673120379448
    2. '   ' → logprob: -3.6054673194885254
    3. '+' → logprob: -4.230467319488525
    4. ' if' → logprob: -4.980467319488525
    5. '
' → logprob: -5.105467319488525
    6. ' *' → logprob: -5.355467319488525
    7. ' 
' → logprob: -5.355467319488525
    8. ',' → logprob: -5.730467319488525
    9. ' +' → logprob: -5.730467319488525
    10. '*' → logprob: -5.730467319488525

Token 60: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6342768669128418
    2. '1' → logprob: -1.0092768669128418
    3. '=' → logprob: -2.759276866912842
    4. '2' → logprob: -3.384276866912842
    5. '_' → logprob: -5.259276866912842
    6. '+' → logprob: -7.634276866912842
    7. ' ' → logprob: -8.00927734375
    8. '0' → logprob: -8.25927734375
    9. ' +=' → logprob: -8.25927734375
    10. 'd' → logprob: -8.63427734375

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005929274018853903
    2. '=' → logprob: -5.130929470062256
    3. ' ' → logprob: -15.005928993225098
    4. ',' → logprob: -15.505928993225098
    5. ' ' → logprob: -16.380929946899414
    6. ' =
' → logprob: -17.630929946899414
    7. '_' → logprob: -17.880929946899414
    8. ')' → logprob: -18.380929946899414
    9. '   ' → logprob: -18.505929946899414
    10. ' ,' → logprob: -18.880929946899414

Token 62: ' ss' (ID: 20928)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.5777546167373657
    2. ' ss' → logprob: -0.8277546167373657
    3. 's' → logprob: -6.952754497528076
    4. ' ' → logprob: -7.827754497528076
    5. ' s' → logprob: -9.077754974365234
    6. '(ss' → logprob: -9.327754974365234
    7. 't' → logprob: -9.702754974365234
    8. '   ' → logprob: -9.952754974365234
    9. '  ' → logprob: -10.077754974365234
    10. '	ss' → logprob: -10.327754974365234

Token 63: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009140860638581216
    2. '(' → logprob: -7.125914096832275
    3. '(d' → logprob: -10.500913619995117
    4. ' (' → logprob: -10.500913619995117
    5. '((' → logprob: -10.625913619995117
    6. 'n' → logprob: -10.750913619995117
    7. ' n' → logprob: -13.250913619995117
    8. '(s' → logprob: -13.500913619995117
    9. 'd' → logprob: -13.625913619995117
    10. '(
' → logprob: -13.625913619995117

Token 64: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.57666015625
    2. ' +' → logprob: -0.82666015625
    3. ')' → logprob: -8.20166015625
    4. '+d' → logprob: -9.07666015625
    5. ' ' → logprob: -9.20166015625
    6. '+n' → logprob: -10.32666015625
    7. ' -' → logprob: -10.76416015625
    8. '-' → logprob: -11.07666015625
    9. 'd' → logprob: -11.13916015625
    10. ' ' → logprob: -11.26416015625

Token 65: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0413134098052979
    2. ' d' → logprob: -1.2913134098052979
    3. '2' → logprob: -1.5413134098052979
    4. ' ' → logprob: -1.9163134098052979
    5. ' (' → logprob: -5.291313171386719
    6. '(' → logprob: -6.166313171386719
    7. '(d' → logprob: -6.541313171386719
    8. '1' → logprob: -6.791313171386719
    9. '3' → logprob: -7.916313171386719
    10. '10' → logprob: -9.228813171386719

Token 66: '10' (ID: 702)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3734903931617737
    2. '2' → logprob: -1.248490333557129
    3. ' d' → logprob: -4.998490333557129
    4. '(' → logprob: -5.123490333557129
    5. '(d' → logprob: -5.123490333557129
    6. '1' → logprob: -5.998490333557129
    7. ' ' → logprob: -6.123490333557129
    8. ' (' → logprob: -7.623490333557129
    9. '10' → logprob: -8.248490333557129
    10. '3' → logprob: -8.248490333557129

Token 67: ' *' (ID: 425)
  Prédit: '*d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*d' → logprob: -0.004654880613088608
    2. 'd' → logprob: -5.504654884338379
    3. '*' → logprob: -8.129654884338379
    4. ' *' → logprob: -8.504654884338379
    5. ')' → logprob: -10.379654884338379
    6. ' d' → logprob: -11.254654884338379
    7. '*(' → logprob: -12.254654884338379
    8. '   ' → logprob: -12.379654884338379
    9. '**' → logprob: -12.879654884338379
    10. ' ' → logprob: -12.879654884338379

Token 68: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.007617156486958265
    2. ' d' → logprob: -4.882616996765137
    3. '*d' → logprob: -12.257616996765137
    4. ' ' → logprob: -12.882616996765137
    5. '	d' → logprob: -13.257616996765137
    6. ')d' → logprob: -14.632616996765137
    7. '   ' → logprob: -14.757616996765137
    8. '(d' → logprob: -15.007616996765137
    9. '  ' → logprob: -15.632616996765137
    10. '>d' → logprob: -15.882616996765137

Token 69: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015229015843942761
    2. ')
' → logprob: -8.875152587890625
    3. ')

' → logprob: -12.125152587890625
    4. ' )' → logprob: -12.625152587890625
    5. '+)' → logprob: -14.250152587890625
    6. '   ' → logprob: -14.375152587890625
    7. '+' → logprob: -14.750152587890625
    8. '))' → logprob: -14.875152587890625
    9. ')>' → logprob: -15.375152587890625
    10. ')#' → logprob: -15.500152587890625

Token 70: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01986803486943245
    2. '<|end|>' → logprob: -4.269867897033691
    3. '   ' → logprob: -5.269867897033691
    4. '<|end|>' → logprob: -9.144867897033691
    5. ')' → logprob: -9.269867897033691
    6. ' if' → logprob: -9.269867897033691
    7. '    
' → logprob: -9.644867897033691
    8. '
' → logprob: -10.144867897033691
    9. '

' → logprob: -10.269867897033691
    10. ')
' → logprob: -10.644867897033691

Token 71: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04820835962891579
    2. ' if' → logprob: -4.298208236694336
    3. '\n' → logprob: -4.673208236694336
    4. 'if' (adapté à ' if') → logprob: -4.673208236694336
    5. '   ' → logprob: -4.798208236694336
    6. '<|end|>' → logprob: -5.423208236694336
    7. '    
' → logprob: -7.423208236694336
    8. '```' → logprob: -7.923208236694336
    9. ' 
' → logprob: -8.673208236694336
    10. '<|end|>' → logprob: -8.798208236694336

Token 72: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.4287285804748535
    2. 't' → logprob: -1.0537285804748535
    3. ' ' → logprob: -10.678728103637695
    4. ' ' → logprob: -12.803728103637695
    5. 'abs' → logprob: -14.553728103637695
    6. '	t' → logprob: -14.928728103637695
    7. ' abs' → logprob: -15.178728103637695
    8. '  ' → logprob: -15.428728103637695
    9. 's' → logprob: -15.553728103637695
    10. 'd' → logprob: -15.928728103637695

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04434183984994888
    2. '2' → logprob: -3.169341802597046
    3. 's' → logprob: -8.106842041015625
    4. 'n' → logprob: -8.856842041015625
    5. 't' → logprob: -8.919342041015625
    6. ')' → logprob: -8.981842041015625
    7. 'ss' → logprob: -9.606842041015625
    8. '_' → logprob: -9.856842041015625
    9. '   ' → logprob: -10.044342041015625
    10. ' ' → logprob: -10.294342041015625

Token 74: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2677557170391083
    2. '>' → logprob: -1.6427557468414307
    3. ' <' → logprob: -3.2677557468414307
    4. ' ' → logprob: -6.517755508422852
    5. '<' → logprob: -7.142755508422852
    6. ' >=' → logprob: -8.142755508422852
    7. '.' → logprob: -8.517755508422852
    8. ' <=' → logprob: -9.267755508422852
    9. '   ' → logprob: -9.517755508422852
    10. '/' → logprob: -9.767755508422852

Token 75: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.4287879168987274
    2. 't' → logprob: -1.0537879467010498
    3. '   ' → logprob: -9.928788185119629
    4. ' ' → logprob: -10.428788185119629
    5. '  ' → logprob: -12.803788185119629
    6. '    ' → logprob: -12.803788185119629
    7. 's' → logprob: -13.553788185119629
    8. '	t' → logprob: -14.553788185119629
    9. ' ' → logprob: -14.678788185119629
    10. ' s' → logprob: -14.803788185119629

Token 76: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0020775748416781425
    2. '1' → logprob: -7.002077579498291
    3. '<|end|>' → logprob: -7.877077579498291
    4. ' ' → logprob: -8.252077102661133
    5. '<|end|>' → logprob: -9.002077102661133
    6. 's' → logprob: -9.002077102661133
    7. 't' → logprob: -9.252077102661133
    8. 'token' → logprob: -9.877077102661133
    9. '  ' → logprob: -11.189577102661133
    10. 'oken' → logprob: -11.377077102661133

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005967192351818085
    2. ':
' → logprob: -5.130967140197754
    3. ' :' → logprob: -10.755967140197754
    4. ':

' → logprob: -12.505967140197754
    5. ' :
' → logprob: -13.130967140197754
    6. ':
' → logprob: -13.130967140197754
    7. ' and' → logprob: -13.380967140197754
    8. ' or' → logprob: -13.380967140197754
    9. '):' → logprob: -13.630967140197754
    10. '   ' → logprob: -14.255967140197754

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05831076204776764
    2. 'n' → logprob: -3.5583107471466064
    3. '   ' → logprob: -4.1833109855651855
    4. ' n' → logprob: -4.4333109855651855
    5. '<|end|>' → logprob: -8.433310508728027
    6. 'd' → logprob: -8.683310508728027
    7. '    ' → logprob: -8.808310508728027
    8. ':' → logprob: -8.933310508728027
    9. '	n' → logprob: -9.183310508728027
    10. '(n' → logprob: -10.183310508728027

Token 79: ' d' (ID: 272)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17003005743026733
    2. '   ' → logprob: -2.295030117034912
    3. ' n' → logprob: -3.420030117034912
    4. 'd' (adapté à ' d') → logprob: -3.920030117034912
    5. '
' → logprob: -6.170030117034912
    6. ' d' → logprob: -7.920030117034912
    7. '	n' → logprob: -8.295029640197754
    8. '       ' → logprob: -9.295029640197754
    9. '    ' → logprob: -9.420029640197754
    10. '10' → logprob: -10.170029640197754

Token 80: ' *=' (ID: 25253)
  Prédit: ' *='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.22679725289344788
    2. '*=' → logprob: -1.9767972230911255
    3. ' =' → logprob: -3.226797342300415
    4. '=' → logprob: -3.726797342300415
    5. '0' → logprob: -8.101797103881836
    6. '    ' → logprob: -9.226797103881836
    7. ' <<=' → logprob: -9.476797103881836
    8. '   ' → logprob: -10.101797103881836
    9. ' ' → logprob: -10.726797103881836
    10. ' +=' → logprob: -10.726797103881836

Token 81: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.028109129518270493
    2. '1' → logprob: -3.778109073638916
    3. ' ' → logprob: -5.653109073638916
    4. '0' → logprob: -6.653109073638916
    5. '   ' → logprob: -11.215609550476074
    6. '2' → logprob: -11.715609550476074
    7. '  ' → logprob: -12.090609550476074
    8. '>' → logprob: -12.465609550476074
    9. '100' → logprob: -12.778109550476074
    10. '9' → logprob: -13.340609550476074

Token 82: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.01101929135620594
    2. '1' → logprob: -4.636019229888916
    3. '0' → logprob: -6.886019229888916
    4. ' ' → logprob: -8.636019706726074
    5. '   ' → logprob: -11.011019706726074
    6. '2' → logprob: -12.011019706726074
    7. '5' → logprob: -12.261019706726074
    8. '  ' → logprob: -12.386019706726074
    9. '    ' → logprob: -12.511019706726074
    10. '100' → logprob: -12.636019706726074

Token 83: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2870948016643524
    2. '   ' → logprob: -1.4120948314666748
    3. ' else' → logprob: -5.287094593048096
    4. 'n' → logprob: -7.412094593048096
    5. 'elif' → logprob: -8.537095069885254
    6. '```' → logprob: -11.537095069885254
    7. 'continue' → logprob: -11.662095069885254
    8. '    
' → logprob: -11.662095069885254
    9. 'd' → logprob: -11.662095069885254
    10. '       ' → logprob: -12.287095069885254

Token 84: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.440711110830307
    2. '   ' → logprob: -1.0657111406326294
    3. ' else' → logprob: -4.81571102142334
    4. 'n' → logprob: -5.69071102142334
    5. 'elif' → logprob: -8.69071102142334
    6. '```' → logprob: -9.69071102142334
    7. '       ' → logprob: -10.06571102142334
    8. ' ' → logprob: -10.44071102142334
    9. '  ' → logprob: -10.69071102142334
    10. '
' → logprob: -10.81571102142334

Token 85: ' n' (ID: 297)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.014746524393558502
    2. ' else' → logprob: -4.26474666595459
    3. 'elif' → logprob: -8.01474666595459
    4. '   ' → logprob: -8.38974666595459
    5. 'n' (adapté à ' n') → logprob: -11.51474666595459
    6. '_else' → logprob: -13.13974666595459
    7. '	else' → logprob: -13.26474666595459
    8. ' elif' → logprob: -13.38974666595459
    9. '
' → logprob: -13.63974666595459
    10. '```' → logprob: -13.88974666595459

Token 86: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2371627539396286
    2. '+=' → logprob: -2.1121628284454346
    3. '=' → logprob: -2.7371628284454346
    4. ' =' → logprob: -3.8621628284454346
    5. '+' → logprob: -5.4871625900268555
    6. '<|end|>' → logprob: -9.362162590026855
    7. ' +' → logprob: -9.612162590026855
    8. '+='' → logprob: -10.737162590026855
    9. ' ' → logprob: -11.362162590026855
    10. '   ' → logprob: -11.362162590026855

Token 87: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06238127127289772
    2. ' d' → logprob: -2.8123812675476074
    3. '10' → logprob: -8.812381744384766
    4. 't' → logprob: -8.937381744384766
    5. ' ' → logprob: -10.062381744384766
    6. '   ' → logprob: -10.312381744384766
    7. ' t' → logprob: -10.687381744384766
    8. '1' → logprob: -10.687381744384766
    9. '	d' → logprob: -12.812381744384766
    10. '    ' → logprob: -12.812381744384766

Token 88: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.785662829875946
    2. '<|end|>' → logprob: -1.7856628894805908
    3. 'K' → logprob: -1.9106628894805908
    4. '#' → logprob: -3.035662889480591
    5. '
' → logprob: -3.535662889480591
    6. '```' → logprob: -3.660662889480591
    7. '*' → logprob: -4.035662651062012
    8. 'n' → logprob: -4.160662651062012
    9. '-' → logprob: -4.535662651062012
    10. ' K' → logprob: -4.535662651062012

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2189950942993164
    2. 'K' → logprob: -1.4689950942993164
    3. '```' → logprob: -1.8439950942993164
    4. '<|end|>' → logprob: -1.8439950942993164
    5. ')' → logprob: -3.4689950942993164
    6. ' K' → logprob: -3.4689950942993164
    7. '#' → logprob: -3.5939950942993164
    8. '1' → logprob: -4.093995094299316
    9. '+' → logprob: -4.968995094299316
    10. '*' → logprob: -4.968995094299316

Token 90: ' print' (ID: 2123)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.030064832419157028
    2. '   ' → logprob: -4.030065059661865
    3. ' K' → logprob: -4.530065059661865
    4. 'n' → logprob: -8.405064582824707
    5. '    ' → logprob: -8.780064582824707
    6. 'k' → logprob: -9.405064582824707
    7. '0' → logprob: -9.530064582824707
    8. '  ' → logprob: -9.655064582824707
    9. '```' → logprob: -10.030064582824707
    10. 'print' (adapté à ' print') → logprob: -10.155064582824707

Token 91: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00540616549551487
    2. '(' → logprob: -5.255406379699707
    3. 'n' → logprob: -9.130406379699707
    4. '()' → logprob: -10.380406379699707
    5. ' (' → logprob: -11.380406379699707
    6. '((' → logprob: -12.130406379699707
    7. '(t' → logprob: -12.130406379699707
    8. '(s' → logprob: -12.505406379699707
    9. '('' → logprob: -13.130406379699707
    10. '(int' → logprob: -13.880406379699707

Token 92: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008751892484724522
    2. ',' → logprob: -5.38375186920166
    3. ' )' → logprob: -5.75875186920166
    4. ')
' → logprob: -7.13375186920166
    5. ',)' → logprob: -9.25875186920166
    6. ' ,' → logprob: -11.38375186920166
    7. ')`' → logprob: -11.50875186920166
    8. '))' → logprob: -11.88375186920166
    9. ' ' → logprob: -12.00875186920166
    10. '   ' → logprob: -12.13375186920166

Token 93: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03986188396811485
    2. '<|end|>' → logprob: -3.7898619174957275
    3. '   ' → logprob: -5.414861679077148
    4. '#' → logprob: -5.664861679077148
    5. 'K' → logprob: -6.289861679077148
    6. '=' → logprob: -6.289861679077148
    7. '-' → logprob: -6.539861679077148
    8. '```' → logprob: -7.164861679077148
    9. '+' → logprob: -7.414861679077148
    10. '*' → logprob: -7.789861679077148

Token 94: ' K' (ID: 658)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5535074472427368
    2. ')' → logprob: -1.5535074472427368
    3. 'K' (adapté à ' K') → logprob: -1.8035074472427368
    4. '#' → logprob: -3.9285073280334473
    5. ' K' → logprob: -4.803507328033447
    6. '    ' → logprob: -4.803507328033447
    7. '<|end|>' → logprob: -5.803507328033447
    8. '```' → logprob: -6.053507328033447
    9. '-' → logprob: -6.928507328033447
    10. '0' → logprob: -7.053507328033447

Token 95: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.05385475605726242
    2. ' -=' → logprob: -3.0538547039031982
    3. '-' → logprob: -5.303854942321777
    4. '=' → logprob: -8.303854942321777
    5. ' ' → logprob: -11.303854942321777
    6. '+=' → logprob: -11.303854942321777
    7. '   ' → logprob: -12.178854942321777
    8. '  ' → logprob: -13.803854942321777
    9. ' -' → logprob: -13.803854942321777
    10. '```' → logprob: -14.928854942321777

Token 96: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005234002135694027
    2. ' ' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.255233764648438
    4. 'd' → logprob: -17.380233764648438
    5. '  ' → logprob: -18.005233764648438
    6. ' ' → logprob: -18.255233764648438
    7. 'n' → logprob: -18.505233764648438
    8. '10' → logprob: -18.630233764648438
    9. '１' → logprob: -18.817733764648438
    10. 't' → logprob: -18.942733764648438

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.670925358776003e-05
    2. ' ' → logprob: -9.625066757202148
    3. 'd' → logprob: -15.375066757202148
    4. '10' → logprob: -15.875066757202148
    5. 't' → logprob: -16.12506675720215
    6. 'n' → logprob: -17.50006675720215
    7. 'int' → logprob: -17.62506675720215
    8. '2' → logprob: -17.75006675720215
    9. '   ' → logprob: -17.87506675720215
    10. 'K' → logprob: -18.62506675720215


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 95
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 77
Précision stricte (1ère position): 25.26%
Précision adaptée (1ère position): 25.26%
Précision (top 10): 81.05%
================================================================================
