================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

INF = float("inf")

class Graph:
    def __init__(self, n):
        self.n = n
        self.edges = []
        for i in range(n):
            self.edges.append([])

    def add_edge(self, u, v, w=1):
        self.edges[u].append((v, w))
        self.edges[v].append((u, w))

def warshall_floyd(graph):
    n = graph.n
    dist = []
    for i in range(n):
        dist.append([INF]*n)
    for i in range(n):
        for (j, w) in graph.edges[i]:
            dist[i][j] = w
    for k in range(n):
        for i in range(n):
            for j in range(n):
                if dist[i][k] + dist[k][j] < dist[i][j]:
                    dist[i][j] = dist[i][k] + dist[k][j]
    return dist

def solve(n, m, l, a, b, c, q, s, t):
    g = Graph(n)
    for i in range(m):
        g.add_edge(a[i]-1, b[i]-1, c[i])
    dist = warshall_floyd(g)

    g2 = Graph(n)
    for i in range(n):
        for j in range(i+1, n):
            if dist[i][j] <= l:
                g2.add_edge(i, j, 1)
    dist2 = warshall_floyd(g2)

    for i in range(q):
        ans = dist2[s[i]-1][t[i]-1] - 1
        if ans == INF - 1:
            print(-1)
        elif dist2[s[i]-1][t[i]-1] == INF:
            print(-1)
        else:
            print(ans)

def main():
    inputs = []
    for line in sys.stdin:
        for word in line.strip().split():
            inputs.append(word)
    idx = 0
    n = int(inputs[idx])
    idx += 1
    m = int(inputs[idx])
    idx += 1
    l = int(inputs[idx])
    idx += 1
    a = []
    b = []
    c = []
    for i in range(m):
        a.append(int(inputs[idx]))
        idx += 1
        b.append(int(inputs[idx]))
        idx += 1
        c.append(int(inputs[idx]))
        idx += 1
    q = int(inputs[idx])
    idx += 1
    s = []
    t = []
    for i in range(q):
        s.append(int(inputs[idx]))
        idx += 1
        t.append(int(inputs[idx]))
        idx += 1
    solve(n, m, l, a, b, c, q, s, t)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'INF' (ID: 64358)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.668724536895752
    2. ' =' → logprob: -0.793724536895752
    3. '_' → logprob: -3.418724536895752
    4. ' _' → logprob: -7.418724536895752
    5. '```' → logprob: -8.043724060058594
    6. 'ORT' → logprob: -8.418724060058594
    7. 'O' → logprob: -9.043724060058594
    8. ' ' → logprob: -9.168724060058594
    9. '  ' → logprob: -9.293724060058594
    10. '   ' → logprob: -9.293724060058594

Token 5: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.6018105745315552
    2. ' float' → logprob: -0.8518105745315552
    3. '10' → logprob: -4.101810455322266
    4. ' ' → logprob: -4.726810455322266
    5. 'int' → logprob: -9.351810455322266
    6. ' int' → logprob: -10.351810455322266
    7. '1' → logprob: -11.726810455322266
    8. '   ' → logprob: -12.351810455322266
    9. '	float' → logprob: -12.476810455322266
    10. ' sys' → logprob: -13.476810455322266

Token 6: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.01275649480521679
    2. '(' → logprob: -4.38775634765625
    3. ''' → logprob: -9.13775634765625
    4. '("' → logprob: -9.38775634765625
    5. ''s' → logprob: -11.76275634765625
    6. '('.')' → logprob: -11.88775634765625
    7. '("("' → logprob: -12.13775634765625
    8. '('+' → logprob: -12.51275634765625
    9. '32' → logprob: -12.51275634765625
    10. '>('' → logprob: -12.76275634765625

Token 7: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.02394837886095047
    2. ''in' → logprob: -3.7739484310150146
    3. ''' → logprob: -8.023948669433594
    4. 'in' → logprob: -9.398948669433594
    5. '-inf' → logprob: -9.773948669433594
    6. ''ins' → logprob: -10.148948669433594
    7. 'INF' → logprob: -10.148948669433594
    8. '_inf' → logprob: -10.523948669433594
    9. '"' → logprob: -10.523948669433594
    10. 'info' → logprob: -10.648948669433594

Token 8: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.48023879528045654
    2. ')' → logprob: -0.9802387952804565
    3. ')")' → logprob: -5.105238914489746
    4. '"' → logprob: -9.855238914489746
    5. ')"' → logprob: -10.855238914489746
    6. ' )' → logprob: -12.855238914489746
    7. '')' → logprob: -14.105238914489746
    8. '}")' → logprob: -14.105238914489746
    9. '()' → logprob: -14.355238914489746
    10. ']' → logprob: -15.230238914489746

Token 9: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03191652148962021
    2. '```' → logprob: -4.281916618347168
    3. '\' → logprob: -4.906916618347168
    4. '
' → logprob: -6.156916618347168
    5. '

' → logprob: -6.281916618347168
    6. 'n' → logprob: -6.406916618347168
    7. '\n' → logprob: -6.531916618347168
    8. 'max' → logprob: -7.656916618347168
    9. ':' → logprob: -8.031916618347168
    10. 'class' → logprob: -8.281916618347168

Token 10: ' Graph' (ID: 15559)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0018297502538189292
    2. ' Graph' → logprob: -6.626829624176025
    3. ' A' → logprob: -8.501830101013184
    4. ' Node' → logprob: -9.251830101013184
    5. ' My' → logprob: -9.626830101013184
    6. ' Solver' → logprob: -10.501830101013184
    7. ' Space' → logprob: -10.751830101013184
    8. ' D' → logprob: -11.126830101013184
    9. ' Solution' → logprob: -11.501830101013184
    10. ' S' → logprob: -11.751830101013184

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4736459888808895e-05
    2. '(' → logprob: -12.375014305114746
    3. '():' → logprob: -12.375014305114746
    4. ' :' → logprob: -13.125014305114746
    5. ':
' → logprob: -13.750014305114746
    6. '):' → logprob: -14.125014305114746
    7. '(Graph' → logprob: -14.750014305114746
    8. '>:' → logprob: -14.875014305114746
    9. ':**' → logprob: -15.000014305114746
    10. '{' → logprob: -15.125014305114746

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02209780178964138
    2. ':' → logprob: -4.147097587585449
    3. ' def' → logprob: -6.397097587585449
    4. '    
' → logprob: -6.647097587585449
    5. '    ' → logprob: -6.772097587585449
    6. '```' → logprob: -7.522097587585449
    7. '<|end|>' → logprob: -8.02209758758545
    8. 'def' → logprob: -8.02209758758545
    9. ' :' → logprob: -8.89709758758545
    10. ' 
' → logprob: -9.39709758758545

Token 13: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.8381281495094299
    2. '   ' → logprob: -1.0881280899047852
    3. ' ' → logprob: -2.213128089904785
    4. 'def' (adapté à ' def') → logprob: -2.338128089904785
    5. '    ' → logprob: -4.463128089904785
    6. ' :' → logprob: -5.838128089904785
    7. ':' → logprob: -5.963128089904785
    8. '(' → logprob: -6.338128089904785
    9. '  ' → logprob: -6.463128089904785
    10. ' (' → logprob: -7.088128089904785

Token 14: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.010413194075226784
    2. 'init' → logprob: -4.88541316986084
    3. '__' → logprob: -7.01041316986084
    4. ' init' → logprob: -7.13541316986084
    5. '_init' → logprob: -7.38541316986084
    6. ' _' → logprob: -8.13541316986084
    7. 'nit' → logprob: -9.13541316986084
    8. 'it' → logprob: -10.38541316986084
    9. '_' → logprob: -11.38541316986084
    10. 'n' → logprob: -11.51041316986084

Token 15: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. ' init' → logprob: -16.625
    3. 'ini' → logprob: -16.875
    4. 'innit' → logprob: -18.625
    5. 'inite' → logprob: -18.75
    6. '	init' → logprob: -19.75
    7. 'in' → logprob: -20.25
    8. 'int' → logprob: -20.375
    9. 'inti' → logprob: -20.875
    10. '   ' → logprob: -21.375

Token 16: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.04889097064733505
    2. '(self' → logprob: -3.673891067504883
    3. '(' → logprob: -4.423891067504883
    4. '__' → logprob: -4.798891067504883
    5. ' (' → logprob: -7.298891067504883
    6. '__(
' → logprob: -7.673891067504883
    7. '_(' → logprob: -8.548891067504883
    8. '```' → logprob: -8.673891067504883
    9. ')(' → logprob: -8.798891067504883
    10. '__((' → logprob: -9.173891067504883

Token 17: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005726903327740729
    2. ' self' → logprob: -7.500572681427002
    3. ')' → logprob: -11.00057315826416
    4. '(self' → logprob: -13.37557315826416
    5. '	self' → logprob: -14.00057315826416
    6. ',self' → logprob: -15.37557315826416
    7. ' ' → logprob: -16.375572204589844
    8. ' )' → logprob: -16.500572204589844
    9. '_self' → logprob: -16.750572204589844
    10. ',' → logprob: -17.125572204589844

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1273140162229538
    2. ' ,' → logprob: -2.1273140907287598
    3. 'self' → logprob: -9.252313613891602
    4. ' )' → logprob: -9.252313613891602
    5. ')' → logprob: -9.377313613891602
    6. ',self' → logprob: -9.502313613891602
    7. ' ' → logprob: -11.127313613891602
    8. ' self' → logprob: -12.627313613891602
    9. ',node' → logprob: -13.002313613891602
    10. ',s' → logprob: -13.252313613891602

Token 19: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.241399347782135
    2. 'n' → logprob: -1.7413992881774902
    3. ' self' → logprob: -4.61639928817749
    4. ' )' → logprob: -4.74139928817749
    5. ' vertices' → logprob: -4.99139928817749
    6. ')' → logprob: -5.61639928817749
    7. 'vertices' → logprob: -5.99139928817749
    8. 'self' → logprob: -6.11639928817749
    9. '   ' → logprob: -7.11639928817749
    10. '):' → logprob: -7.24139928817749

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7712405920028687
    2. ',' → logprob: -1.0212405920028687
    3. ')' → logprob: -1.8962405920028687
    4. ' ):' → logprob: -4.271240711212158
    5. ' )' → logprob: -5.021240711212158
    6. ' ,' → logprob: -5.021240711212158
    7. ':' → logprob: -10.021240234375
    8. ' ' → logprob: -10.771240234375
    9. ',)' → logprob: -11.646240234375
    10. '),' → logprob: -12.271240234375

Token 21: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2207408845424652
    2. '):' → logprob: -3.095740795135498
    3. '   ' → logprob: -3.220740795135498
    4. '       ' → logprob: -3.470740795135498
    5. 'n' → logprob: -3.595740795135498
    6. ':' → logprob: -3.595740795135498
    7. '    ' → logprob: -4.845740795135498
    8. ',' → logprob: -5.095740795135498
    9. '(n' → logprob: -5.970740795135498
    10. ' )' → logprob: -6.095740795135498

Token 22: ' self' (ID: 1051)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12506452202796936
    2. 'self' (adapté à ' self') → logprob: -2.8750646114349365
    3. ' self' → logprob: -3.7500646114349365
    4. ' n' → logprob: -3.8750646114349365
    5. ' ' → logprob: -5.000064373016357
    6. '   ' → logprob: -5.500064373016357
    7. '       ' → logprob: -6.000064373016357
    8. '    ' → logprob: -6.250064373016357
    9. ' )' → logprob: -8.125064849853516
    10. '_' → logprob: -8.250064849853516

Token 23: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.000570667558349669
    2. '.n' → logprob: -8.125570297241211
    3. ' .' → logprob: -8.250570297241211
    4. '._' → logprob: -13.375570297241211
    5. '.user' → logprob: -13.750570297241211
    6. ' ' → logprob: -14.000570297241211
    7. '.points' → logprob: -14.500570297241211
    8. '.e' → logprob: -14.625570297241211
    9. '.nodes' → logprob: -14.625570297241211
    10. '.graph' → logprob: -14.625570297241211

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03146566078066826
    2. '=' → logprob: -3.656465768814087
    3. ' ' → logprob: -5.531465530395508
    4. '<|end|>' → logprob: -7.406465530395508
    5. '  ' → logprob: -8.906465530395508
    6. ')' → logprob: -9.156465530395508
    7. ' =)' → logprob: -9.156465530395508
    8. ' ,' → logprob: -10.156465530395508
    9. '    ' → logprob: -10.281465530395508
    10. ',' → logprob: -10.531465530395508

Token 25: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06197698414325714
    2. 'n' → logprob: -2.811976909637451
    3. ' ' → logprob: -11.81197738647461
    4. ' ' → logprob: -13.43697738647461
    5. '	n' → logprob: -14.93697738647461
    6. ' ‌' → logprob: -17.31197738647461
    7. '_n' → logprob: -17.43697738647461
    8. '_' → logprob: -17.68697738647461
    9. ')n' → logprob: -18.06197738647461
    10. ' н' → logprob: -18.06197738647461

Token 26: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.220876544713974
    2. '<|end|>' → logprob: -1.7208765745162964
    3. '
' → logprob: -4.970876693725586
    4. ' ' → logprob: -5.845876693725586
    5. '        ' → logprob: -6.470876693725586
    6. '   ' → logprob: -6.470876693725586
    7. '<|end|>' → logprob: -6.470876693725586
    8. ')' → logprob: -6.595876693725586
    9. '    ' → logprob: -6.595876693725586
    10. '        
' → logprob: -8.095876693725586

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0131419962272048
    2. '<|end|>' → logprob: -4.763142108917236
    3. '   ' → logprob: -6.888142108917236
    4. '
' → logprob: -7.138142108917236
    5. '    ' → logprob: -7.138142108917236
    6. '        ' → logprob: -7.638142108917236
    7. ' ' → logprob: -8.138141632080078
    8. ')' → logprob: -8.638141632080078
    9. '      ' → logprob: -8.763141632080078
    10. '<|end|>' → logprob: -8.763141632080078

Token 28: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015192531980574131
    2. 'self' (adapté à ' self') → logprob: -4.26519250869751
    3. ' self' → logprob: -7.26519250869751
    4. '   ' → logprob: -9.015192985534668
    5. '```' → logprob: -10.140192985534668
    6. '<|end|>' → logprob: -10.140192985534668
    7. '
' → logprob: -11.015192985534668
    8. '	' → logprob: -11.140192985534668
    9. '0' → logprob: -11.265192985534668
    10. '	self' → logprob: -11.515192985534668

Token 29: '.edges' (ID: 102481)
  Prédit: '.ad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.700516402721405
    2. '.edges' → logprob: -1.3255164623260498
    3. '.' → logprob: -1.5755164623260498
    4. ' .' → logprob: -3.95051646232605
    5. '.graph' → logprob: -5.325516223907471
    6. '.nodes' → logprob: -5.700516223907471
    7. '.vertices' → logprob: -6.200516223907471
    8. '.connections' → logprob: -8.075516700744629
    9. '._' → logprob: -8.325516700744629
    10. '.edge' → logprob: -8.325516700744629

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003843778744339943
    2. '=' → logprob: -5.628843784332275
    3. '=[]' → logprob: -8.878843307495117
    4. '[]' → logprob: -10.253843307495117
    5. ' ' → logprob: -10.378843307495117
    6. '<|end|>' → logprob: -11.878843307495117
    7. '[:]' → logprob: -11.878843307495117
    8. '[' → logprob: -12.003843307495117
    9. '   ' → logprob: -12.503843307495117
    10. ' []' → logprob: -12.753843307495117

Token 31: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.038910992443561554
    2. ' []' → logprob: -3.2889111042022705
    3. '{}' → logprob: -7.538910865783691
    4. ' [[]' → logprob: -9.038910865783691
    5. '[' → logprob: -9.163910865783691
    6. ' defaultdict' → logprob: -9.663910865783691
    7. ' {}' → logprob: -10.288910865783691
    8. ' ' → logprob: -11.913910865783691
    9. '[][]' → logprob: -13.038910865783691
    10. 'default' → logprob: -13.288910865783691

Token 32: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05315076559782028
    2. '
' → logprob: -3.3031506538391113
    3. '    
' → logprob: -4.303150653839111
    4. '       ' → logprob: -7.678150653839111
    5. '<|end|>' → logprob: -7.803150653839111
    6. '        
' → logprob: -8.42815113067627
    7. 'def' → logprob: -8.80315113067627
    8. '	def' → logprob: -9.92815113067627
    9. ' def' → logprob: -9.92815113067627
    10. ' 
' → logprob: -9.92815113067627

Token 33: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08839968591928482
    2. '
' → logprob: -3.088399648666382
    3. '    
' → logprob: -3.463399648666382
    4. '        
' → logprob: -5.963399887084961
    5. '       ' → logprob: -6.088399887084961
    6. 'def' → logprob: -6.213399887084961
    7. '<|end|>' → logprob: -7.963399887084961
    8. ' 
' → logprob: -8.963399887084961
    9. '	def' → logprob: -9.463399887084961
    10. ' def' → logprob: -9.713399887084961

Token 34: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.199806347489357
    2. ' _' → logprob: -1.8248063325881958
    3. '_' → logprob: -4.324806213378906
    4. 'i' → logprob: -5.074806213378906
    5. ' ' → logprob: -8.574806213378906
    6. ' v' → logprob: -9.449806213378906
    7. ' range' → logprob: -9.574806213378906
    8. ' u' → logprob: -10.949806213378906
    9. '_i' → logprob: -12.449806213378906
    10. ' node' → logprob: -12.824806213378906

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027412880212068558
    2. 'in' → logprob: -3.7774128913879395
    3. 'n' → logprob: -6.0274128913879395
    4. ' ' → logprob: -6.4024128913879395
    5. ' n' → logprob: -9.777412414550781
    6. '  ' → logprob: -11.652412414550781
    7. ' i' → logprob: -12.027412414550781
    8. '	in' → logprob: -12.152412414550781
    9. '_' → logprob: -12.652412414550781
    10. ',' → logprob: -13.027412414550781

Token 36: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00043698702938854694
    2. 'range' → logprob: -7.750436782836914
    3. ' ' → logprob: -12.625436782836914
    4. '	range' → logprob: -13.625436782836914
    5. ' ran' → logprob: -13.750436782836914
    6. ' xrange' → logprob: -15.125436782836914
    7. ' ra' → logprob: -15.875436782836914
    8. ' rang' → logprob: -17.250436782836914
    9. '(range' → logprob: -17.250436782836914
    10. ' r' → logprob: -17.500436782836914

Token 37: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09130766242742538
    2. '(n' → logprob: -3.2163076400756836
    3. '(self' → logprob: -3.3413076400756836
    4. ' (' → logprob: -4.841307640075684
    5. '(s' → logprob: -5.591307640075684
    6. '(
' → logprob: -10.091307640075684
    7. '<|end|>' → logprob: -10.466307640075684
    8. ' ' → logprob: -10.841307640075684
    9. '()' → logprob: -12.091307640075684
    10. ' self' → logprob: -12.091307640075684

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08982659876346588
    2. ')' → logprob: -2.4648265838623047
    3. ' ):' → logprob: -7.964826583862305
    4. '):
' → logprob: -8.214826583862305
    5. ':' → logprob: -9.089826583862305
    6. '+' → logprob: -9.339826583862305
    7. ' )' → logprob: -10.214826583862305
    8. '-' → logprob: -11.464826583862305
    9. ' ' → logprob: -12.339826583862305
    10. '*' → logprob: -12.464826583862305

Token 39: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1284865438938141
    2. '        ' → logprob: -3.1284866333007812
    3. ' ' → logprob: -3.3784866333007812
    4. '   ' → logprob: -4.128486633300781
    5. '<|end|>' → logprob: -4.253486633300781
    6. '    ' → logprob: -5.378486633300781
    7. '           ' → logprob: -5.503486633300781
    8. ' 
' → logprob: -7.128486633300781
    9. ' self' → logprob: -7.503486633300781
    10. '<|end|>' → logprob: -7.878486633300781

Token 40: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.024062156677246
    2. ' ' → logprob: -1.524062156677246
    3. ' []' → logprob: -1.649062156677246
    4. '[]' → logprob: -2.524062156677246
    5. 'self' (adapté à ' self') → logprob: -3.024062156677246
    6. '<|end|>' → logprob: -3.899062156677246
    7. '   ' → logprob: -4.024062156677246
    8. '    ' → logprob: -4.274062156677246
    9. ' for' → logprob: -4.774062156677246
    10. '        ' → logprob: -5.024062156677246

Token 41: '.edges' (ID: 102481)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5798669457435608
    2. '.edges' → logprob: -0.8298669457435608
    3. ' .' → logprob: -5.704866886138916
    4. '.nodes' → logprob: -8.829867362976074
    5. '.vertices' → logprob: -8.829867362976074
    6. 'edges' → logprob: -9.954867362976074
    7. '.rows' → logprob: -10.454867362976074
    8. '.tabs' → logprob: -10.829867362976074
    9. '   ' → logprob: -11.079867362976074
    10. '.self' → logprob: -11.079867362976074

Token 42: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.38811421394348145
    2. '.' → logprob: -1.1381142139434814
    3. ' .' → logprob: -7.013113975524902
    4. '.extend' → logprob: -8.763113975524902
    5. '.=' → logprob: -9.763113975524902
    6. '[' → logprob: -10.138113975524902
    7. '.setdefault' → logprob: -10.513113975524902
    8. '.app' → logprob: -11.263113975524902
    9. '[i' → logprob: -11.513113975524902
    10. ' .=' → logprob: -11.763113975524902

Token 43: '([]' (ID: 18742)
  Prédit: '([]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([]' → logprob: -0.0005725711234845221
    2. '(' → logprob: -7.500572681427002
    3. '[]' → logprob: -11.250572204589844
    4. '([])
' → logprob: -12.875572204589844
    5. '({' → logprob: -13.000572204589844
    6. '([' → logprob: -13.375572204589844
    7. '()' → logprob: -16.500572204589844
    8. '((' → logprob: -17.125572204589844
    9. '([],' → logprob: -17.625572204589844
    10. '(
' → logprob: -18.000572204589844

Token 44: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031847211066633463
    2. '       ' → logprob: -6.503184795379639
    3. '<|end|>' → logprob: -6.503184795379639
    4. ' )' → logprob: -9.50318431854248
    5. '   ' → logprob: -10.00318431854248
    6. ')
' → logprob: -11.00318431854248
    7. '
' → logprob: -11.00318431854248
    8. ' ' → logprob: -12.25318431854248
    9. '<|end|>' → logprob: -12.25318431854248
    10. '           ' → logprob: -13.12818431854248

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09169960767030716
    2. ' 
' → logprob: -3.4666996002197266
    3. '    
' → logprob: -3.5916996002197266
    4. ' ' → logprob: -4.091699600219727
    5. ' def' → logprob: -5.841699600219727
    6. '<|end|>' → logprob: -6.091699600219727
    7. 'def' → logprob: -6.341699600219727
    8. '  
' → logprob: -6.466699600219727
    9. '
' → logprob: -7.216699600219727
    10. '  ' → logprob: -7.216699600219727

Token 46: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7273432016372681
    2. 'def' (adapté à ' def') → logprob: -0.7273432016372681
    3. '   ' → logprob: -3.8523430824279785
    4. ' ' → logprob: -4.4773430824279785
    5. ' 
' → logprob: -7.9773430824279785
    6. '	def' → logprob: -8.727343559265137
    7. '    
' → logprob: -8.977343559265137
    8. '    ' → logprob: -8.977343559265137
    9. '<|end|>' → logprob: -9.727343559265137
    10. '  ' → logprob: -9.852343559265137

Token 47: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.04167335852980614
    2. ' ' → logprob: -3.291673421859741
    3. 'add' → logprob: -5.791673183441162
    4. ' a' → logprob: -8.66667366027832
    5. ' space' → logprob: -9.41667366027832
    6. ' ad' → logprob: -9.54167366027832
    7. '_add' → logprob: -9.91667366027832
    8. ' addedge' → logprob: -10.41667366027832
    9. '	add' → logprob: -10.41667366027832
    10. 'a' → logprob: -10.91667366027832

Token 48: '_edge' (ID: 43226)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2015077769756317
    2. '_edge' → logprob: -1.701507806777954
    3. ' _' → logprob: -9.826507568359375
    4. '_node' → logprob: -10.951507568359375
    5. '_edges' → logprob: -11.576507568359375
    6. '_e' → logprob: -12.576507568359375
    7. ' ' → logprob: -12.576507568359375
    8. '_vertex' → logprob: -13.201507568359375
    9. '_ed' → logprob: -13.951507568359375
    10. '_space' → logprob: -14.951507568359375

Token 49: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28913867473602295
    2. '(self' → logprob: -1.414138674736023
    3. ' (' → logprob: -4.9141387939453125
    4. '(s' → logprob: -7.7891387939453125
    5. '(
' → logprob: -9.914138793945312
    6. '<|end|>' → logprob: -9.914138793945312
    7. ' ' → logprob: -10.039138793945312
    8. '   ' → logprob: -11.039138793945312
    9. 'self' → logprob: -11.664138793945312
    10. ' self' → logprob: -12.539138793945312

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0794932097196579
    2. ' ,' → logprob: -2.579493284225464
    3. ',u' → logprob: -7.454493045806885
    4. ',node' → logprob: -12.204493522644043
    5. 'u' → logprob: -12.454493522644043
    6. ',v' → logprob: -12.954493522644043
    7. 'self' → logprob: -13.454493522644043
    8. ',a' → logprob: -13.704493522644043
    9. ',parent' → logprob: -13.954493522644043
    10. ')' → logprob: -14.079493522644043

Token 51: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.043381769210100174
    2. 'u' → logprob: -3.168381690979004
    3. ' from' → logprob: -8.793381690979004
    4. ')' → logprob: -9.293381690979004
    5. 'from' → logprob: -9.543381690979004
    6. ' self' → logprob: -10.793381690979004
    7. ' v' → logprob: -11.293381690979004
    8. ' )' → logprob: -12.043381690979004
    9. ' frm' → logprob: -12.043381690979004
    10. 'self' → logprob: -12.793381690979004

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002187376143410802
    2. ' ,' → logprob: -6.127187252044678
    3. ',u' → logprob: -13.502187728881836
    4. '‌,' → logprob: -14.377187728881836
    5. ',user' → logprob: -16.002187728881836
    6. '<|end|>' → logprob: -16.127187728881836
    7. ')' → logprob: -17.252187728881836
    8. ',v' → logprob: -17.627187728881836
    9. ',int' → logprob: -17.752187728881836
    10. ' ' → logprob: -18.002187728881836

Token 53: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.313296914100647
    2. 'v' → logprob: -1.313296914100647
    3. '<|end|>' → logprob: -10.563297271728516
    4. ' ' → logprob: -12.813297271728516
    5. '	v' → logprob: -13.188297271728516
    6. ')' → logprob: -13.813297271728516
    7. ')v' → logprob: -13.813297271728516
    8. ',v' → logprob: -14.063297271728516
    9. ' )' → logprob: -14.313297271728516
    10. ' ,' → logprob: -14.688297271728516

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035453110467642546
    2. ' ,' → logprob: -8.000354766845703
    3. '):' → logprob: -11.000354766845703
    4. ')' → logprob: -13.625354766845703
    5. '‌,' → logprob: -15.375354766845703
    6. '),' → logprob: -15.500354766845703
    7. ',u' → logprob: -16.125354766845703
    8. '   ' → logprob: -16.750354766845703
    9. '<|end|>' → logprob: -17.000354766845703
    10. ' ):' → logprob: -17.000354766845703

Token 55: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.038392819464206696
    2. 'w' → logprob: -3.2883927822113037
    3. ' weight' → logprob: -8.788393020629883
    4. 'weight' → logprob: -9.413393020629883
    5. ' cost' → logprob: -10.413393020629883
    6. ' c' → logprob: -10.663393020629883
    7. 'cost' → logprob: -11.163393020629883
    8. ')' → logprob: -11.413393020629883
    9. ' d' → logprob: -12.038393020629883
    10. ' )' → logprob: -12.038393020629883

Token 56: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003396343090571463
    2. ',' → logprob: -8.62533950805664
    3. ')' → logprob: -9.25033950805664
    4. '):
' → logprob: -10.12533950805664
    5. ' ):' → logprob: -11.00033950805664
    6. ':' → logprob: -12.25033950805664
    7. '   ' → logprob: -14.12533950805664
    8. '):
' → logprob: -14.62533950805664
    9. ' ,' → logprob: -15.75033950805664
    10. ' ' → logprob: -15.75033950805664

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.059363897889852524
    2. ' ' → logprob: -3.434363842010498
    3. '0' → logprob: -3.809363842010498
    4. ' )' → logprob: -6.184363842010498
    5. ')' → logprob: -7.059363842010498
    6. 'inf' → logprob: -9.184364318847656
    7. 'INF' → logprob: -9.309364318847656
    8. ' INF' → logprob: -9.934364318847656
    9. ' None' → logprob: -11.309364318847656
    10. ' ):' → logprob: -11.934364318847656

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013565480476245284
    2. ')' → logprob: -6.626356601715088
    3. '):
' → logprob: -11.25135612487793
    4. ' ):' → logprob: -11.50135612487793
    5. ',' → logprob: -12.62635612487793
    6. ':' → logprob: -12.62635612487793
    7. '):
' → logprob: -14.75135612487793
    8. ')：' → logprob: -16.12635612487793
    9. ' ' → logprob: -16.37635612487793
    10. '),' → logprob: -16.50135612487793

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05570288002490997
    2. '<|end|>' → logprob: -3.5557029247283936
    3. ':' → logprob: -4.4307026863098145
    4. '):' → logprob: -5.3057026863098145
    5. ')' → logprob: -6.1807026863098145
    6. ' 
' → logprob: -6.1807026863098145
    7. '        
' → logprob: -7.1807026863098145
    8. '   ' → logprob: -7.6807026863098145
    9. '
' → logprob: -7.8057026863098145
    10. ' ' → logprob: -7.8057026863098145

Token 60: ' self' (ID: 1051)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4998331665992737
    2. ' self' → logprob: -1.624833106994629
    3. 'self' (adapté à ' self') → logprob: -1.999833106994629
    4. '<|end|>' → logprob: -3.624833106994629
    5. '       ' → logprob: -3.999833106994629
    6. ' 
' → logprob: -4.999833106994629
    7. '        ' → logprob: -5.249833106994629
    8. ' ' → logprob: -6.249833106994629
    9. 's' → logprob: -7.749833106994629
    10. '    ' → logprob: -7.874833106994629

Token 61: '.edges' (ID: 102481)
  Prédit: '.edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.11301832646131516
    2. '.' → logprob: -2.238018274307251
    3. ' .' → logprob: -9.613018035888672
    4. '.vertices' → logprob: -10.488018035888672
    5. '.points' → logprob: -11.238018035888672
    6. 'edges' → logprob: -11.363018035888672
    7. '.faces' → logprob: -11.738018035888672
    8. '.nodes' → logprob: -11.738018035888672
    9. '.entries' → logprob: -12.363018035888672
    10. '.users' → logprob: -12.363018035888672

Token 62: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -6.392202976712724e-06
    2. '[' → logprob: -12.000006675720215
    3. '[v' → logprob: -16.6250057220459
    4. ' [' → logprob: -17.5000057220459
    5. '][' → logprob: -19.0000057220459
    6. '[user' → logprob: -19.0000057220459
    7. '   ' → logprob: -19.1250057220459
    8. '[s' → logprob: -19.2500057220459
    9. 'u' → logprob: -19.3750057220459
    10. ')[' → logprob: -19.5000057220459

Token 63: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.17101414501667023
    2. ').' → logprob: -1.9210141897201538
    3. '.' → logprob: -5.296014308929443
    4. '.append' → logprob: -5.296014308929443
    5. ')' → logprob: -7.921014308929443
    6. ']' → logprob: -8.296013832092285
    7. '[' → logprob: -10.171013832092285
    8. '}.' → logprob: -11.296013832092285
    9. '   ' → logprob: -11.546013832092285
    10. ' ].' → logprob: -11.671013832092285

Token 64: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. '.append' → logprob: -15.25
    3. ' append' → logprob: -16.875
    4. 'appen' → logprob: -17.25
    5. '_append' → logprob: -18.875
    6. '	append' → logprob: -19.625
    7. 'Append' → logprob: -20.625
    8. 'appe' → logprob: -21.625
    9. 'add' → logprob: -21.75
    10. 'push' → logprob: -21.75

Token 65: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.02339141257107258
    2. '(' → logprob: -3.7733914852142334
    3. '(v' → logprob: -8.898391723632812
    4. '([' → logprob: -12.148391723632812
    5. '(
' → logprob: -13.023391723632812
    6. '(('' → logprob: -14.398391723632812
    7. '(u' → logprob: -14.773391723632812
    8. '({'' → logprob: -15.898391723632812
    9. '<|end|>' → logprob: -16.023391723632812
    10. '(

' → logprob: -16.648391723632812

Token 66: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.676981345459353e-06
    2. ' v' → logprob: -12.125005722045898
    3. ')v' → logprob: -16.6250057220459
    4. '	v' → logprob: -18.1250057220459
    5. '   ' → logprob: -18.1250057220459
    6. ')' → logprob: -19.1250057220459
    7. ' ' → logprob: -19.7500057220459
    8. 'vj' → logprob: -19.8750057220459
    9. 'vq' → logprob: -20.0000057220459
    10. 'vi' → logprob: -20.2500057220459

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005606581107713282
    2. ',w' → logprob: -7.875560760498047
    3. ' ,' → logprob: -8.625560760498047
    4. ',
' → logprob: -14.875560760498047
    5. 'w' → logprob: -15.250560760498047
    6. '<|end|>' → logprob: -15.750560760498047
    7. '‌,' → logprob: -16.375560760498047
    8. ' ' → logprob: -16.625560760498047
    9. '```' → logprob: -16.875560760498047
    10. ')' → logprob: -17.250560760498047

Token 68: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.6340367197990417
    2. 'w' → logprob: -0.7590367197990417
    3. ' ' → logprob: -6.634036540985107
    4. ' ' → logprob: -9.509037017822266
    5. ' )' → logprob: -10.634037017822266
    6. ')' → logprob: -11.884037017822266
    7. ' 
' → logprob: -12.384037017822266
    8. '​' → logprob: -13.134037017822266
    9. ''w' → logprob: -13.759037017822266
    10. ' ​' → logprob: -13.884037017822266

Token 69: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03806662559509277
    2. ')' → logprob: -3.2880666255950928
    3. ' ))' → logprob: -11.413066864013672
    4. '),' → logprob: -12.288066864013672
    5. '))
' → logprob: -12.413066864013672
    6. ',' → logprob: -13.163066864013672
    7. ')))' → logprob: -13.288066864013672
    8. ' )' → logprob: -13.788066864013672
    9. ')
' → logprob: -15.163066864013672
    10. '));' → logprob: -15.413066864013672

Token 70: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01079796627163887
    2. '<|end|>' → logprob: -5.13579797744751
    3. ' self' → logprob: -5.51079797744751
    4. '       ' → logprob: -7.38579797744751
    5. ' ' → logprob: -10.010797500610352
    6. '	self' → logprob: -10.385797500610352
    7. 's' → logprob: -10.635797500610352
    8. '[self' → logprob: -11.010797500610352
    9. '```' → logprob: -11.010797500610352
    10. '<|end|>' → logprob: -11.635797500610352

Token 72: '.edges' (ID: 102481)
  Prédit: '.edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.5238299369812012
    2. '.' → logprob: -0.8988299369812012
    3. 'edges' → logprob: -8.27383041381836
    4. 's' → logprob: -9.27383041381836
    5. '.points' → logprob: -9.39883041381836
    6. '.s' → logprob: -10.52383041381836
    7. '.period' → logprob: -10.77383041381836
    8. '.users' → logprob: -10.89883041381836
    9. '.faces' → logprob: -11.02383041381836
    10. '<|end|>' → logprob: -11.14883041381836

Token 73: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.25597333908081055
    2. '[u' → logprob: -1.5059733390808105
    3. '[' → logprob: -5.6309733390808105
    4. '[s' → logprob: -7.8809733390808105
    5. '[w' → logprob: -10.880973815917969
    6. '[user' → logprob: -11.255973815917969
    7. ')[' → logprob: -12.130973815917969
    8. '][' → logprob: -12.380973815917969
    9. '[self' → logprob: -12.755973815917969
    10. 'v' → logprob: -12.880973815917969

Token 74: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.012490347027778625
    2. '.' → logprob: -4.887490272521973
    3. '].' → logprob: -5.512490272521973
    4. ')' → logprob: -8.012490272521973
    5. '       ' → logprob: -9.137490272521973
    6. '.append' → logprob: -9.262490272521973
    7. ',' → logprob: -9.262490272521973
    8. '   ' → logprob: -9.762490272521973
    9. '}.' → logprob: -10.262490272521973
    10. ' ).' → logprob: -10.512490272521973

Token 75: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.127333340875339e-06
    2. '.append' → logprob: -12.750003814697266
    3. ' append' → logprob: -14.500003814697266
    4. '	append' → logprob: -14.875003814697266
    5. 'appen' → logprob: -15.250003814697266
    6. 'app' → logprob: -17.625003814697266
    7. 'Append' → logprob: -17.750003814697266
    8. '```' → logprob: -17.875003814697266
    9. ' ' → logprob: -18.500003814697266
    10. '1' → logprob: -18.750003814697266

Token 76: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.002675537718459964
    2. '(' → logprob: -6.127675533294678
    3. '(u' → logprob: -7.627675533294678
    4. ' (' → logprob: -13.627676010131836
    5. '(v' → logprob: -13.752676010131836
    6. '(None' → logprob: -14.752676010131836
    7. ' ((' → logprob: -15.377676010131836
    8. ' ' → logprob: -15.627676010131836
    9. '(
' → logprob: -15.877676010131836
    10. ')((' → logprob: -16.877676010131836

Token 77: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0017306297086179256
    2. '(u' → logprob: -6.376730442047119
    3. ' u' → logprob: -10.626730918884277
    4. ',u' → logprob: -14.001730918884277
    5. '	u' → logprob: -14.126730918884277
    6. '[u' → logprob: -14.126730918884277
    7. ' (' → logprob: -14.751730918884277
    8. ')' → logprob: -14.751730918884277
    9. '<|end|>' → logprob: -15.001730918884277
    10. '(' → logprob: -15.501730918884277

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3425219549390022e-05
    2. ',w' → logprob: -11.87501335144043
    3. ' ,' → logprob: -12.00001335144043
    4. 'w' → logprob: -16.50001335144043
    5. '),' → logprob: -17.12501335144043
    6. ',
' → logprob: -17.50001335144043
    7. ')' → logprob: -17.50001335144043
    8. ' ' → logprob: -17.62501335144043
    9. '‌,' → logprob: -18.37501335144043
    10. '```' → logprob: -18.50001335144043

Token 79: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.5761343836784363
    2. 'w' → logprob: -0.8261343836784363
    3. ' ' → logprob: -8.70113468170166
    4. ' 
' → logprob: -11.32613468170166
    5. ' )' → logprob: -11.95113468170166
    6. ' ' → logprob: -12.57613468170166
    7. ')' → logprob: -13.20113468170166
    8. '<|end|>' → logprob: -13.95113468170166
    9. ',' → logprob: -14.57613468170166
    10. ' 

' → logprob: -14.95113468170166

Token 80: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06198740750551224
    2. '))' → logprob: -2.8119874000549316
    3. ')
' → logprob: -11.06198787689209
    4. '))
' → logprob: -13.06198787689209
    5. ' )' → logprob: -13.43698787689209
    6. ')))' → logprob: -15.31198787689209
    7. ' ))' → logprob: -16.186986923217773
    8. '),' → logprob: -16.311986923217773
    9. '       ' → logprob: -16.561986923217773
    10. '   ' → logprob: -17.936986923217773

Token 81: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05207099765539169
    2. '   ' → logprob: -3.4270710945129395
    3. ' 
' → logprob: -5.1770710945129395
    4. ' ' → logprob: -5.8020710945129395
    5. 'd' → logprob: -6.0520710945129395
    6. '    
' → logprob: -6.4270710945129395
    7. '

' → logprob: -6.6770710945129395
    8. '' → logprob: -7.1770710945129395
    9. '\n' → logprob: -7.1770710945129395
    10. '```' → logprob: -7.1770710945129395

Token 82: ' war' (ID: 3656)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49988657236099243
    2. ' d' → logprob: -0.9998865723609924
    3. ' shortest' → logprob: -4.499886512756348
    4. ' dfs' → logprob: -5.124886512756348
    5. ' bfs' → logprob: -5.124886512756348
    6. ' bell' → logprob: -7.124886512756348
    7. 'd' → logprob: -7.749886512756348
    8. ' main' → logprob: -8.124886512756348
    9. ' dj' → logprob: -8.999886512756348
    10. ' find' → logprob: -9.124886512756348

Token 83: 'shall' (ID: 30275)
  Prédit: 'shall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shall' → logprob: -0.0010708003537729383
    2. 's' → logprob: -7.126070976257324
    3. 'shal' → logprob: -9.001070976257324
    4. 'sha' → logprob: -10.626070976257324
    5. 'sh' → logprob: -10.751070976257324
    6. ' shall' → logprob: -11.001070976257324
    7. 'shaw' → logprob: -11.126070976257324
    8. '_' → logprob: -11.376070976257324
    9. 'shaller' → logprob: -11.501070976257324
    10. '```' → logprob: -12.001070976257324

Token 84: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.001348211313597858
    2. '_' → logprob: -7.12634801864624
    3. 'F' → logprob: -8.501348495483398
    4. 'f' → logprob: -8.626348495483398
    5. '_F' → logprob: -10.251348495483398
    6. '\' → logprob: -11.001348495483398
    7. 'ford' → logprob: -11.626348495483398
    8. '   ' → logprob: -11.626348495483398
    9. '```' → logprob: -11.626348495483398
    10. '-f' → logprob: -11.751348495483398

Token 85: 'loyd' (ID: 58664)
  Prédit: 'loyd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loyd' → logprob: -0.11927078664302826
    2. '```' → logprob: -2.8692708015441895
    3. 'ord' → logprob: -3.8692708015441895
    4. 'ol' → logprob: -4.4942708015441895
    5. 'ill' → logprob: -5.3692708015441895
    6. 'or' → logprob: -5.6192708015441895
    7. 'ords' → logprob: -6.2442708015441895
    8. '

' → logprob: -6.3692708015441895
    9. '``' → logprob: -6.3692708015441895
    10. 'orld' → logprob: -6.4942708015441895

Token 86: '(graph' (ID: 51300)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027520956937223673
    2. '(self' → logprob: -6.502752304077148
    3. '(graph' → logprob: -7.877752304077148
    4. ' (' → logprob: -8.252752304077148
    5. '(_' → logprob: -8.627752304077148
    6. '_' → logprob: -9.002752304077148
    7. '(Graph' → logprob: -9.002752304077148
    8. '_(' → logprob: -9.502752304077148
    9. '(G' → logprob: -10.752752304077148
    10. '(a' → logprob: -10.752752304077148

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1799217015504837
    2. ',' → logprob: -2.3049216270446777
    3. ')' → logprob: -2.8049216270446777
    4. ' ):' → logprob: -5.679921627044678
    5. ' )' → logprob: -7.804921627044678
    6. ' ,' → logprob: -8.304922103881836
    7. ':' → logprob: -8.929922103881836
    8. '):
' → logprob: -9.179922103881836
    9. ',n' → logprob: -10.929922103881836
    10. '   ' → logprob: -11.804922103881836

Token 88: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4475065767765045
    2. '   ' → logprob: -1.5725065469741821
    3. 'n' → logprob: -2.0725066661834717
    4. '    ' → logprob: -4.947506427764893
    5. ' 
' → logprob: -4.947506427764893
    6. '	n' → logprob: -5.697506427764893
    7. '    
' → logprob: -6.072506427764893
    8. '
' → logprob: -6.322506427764893
    9. ' ' → logprob: -6.322506427764893
    10. '(n' → logprob: -6.822506427764893

Token 89: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5276944637298584
    2. 'n' (adapté à ' n') → logprob: -1.9026944637298584
    3. '   ' → logprob: -2.0276944637298584
    4. 'dist' → logprob: -2.6526944637298584
    5. ' dist' → logprob: -2.9026944637298584
    6. ' ' → logprob: -6.7776947021484375
    7. 'd' → logprob: -6.9026947021484375
    8. ' d' → logprob: -7.4026947021484375
    9. '    ' → logprob: -7.9026947021484375
    10. '    
' → logprob: -8.402694702148438

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002859320491552353
    2. '=' → logprob: -5.877859115600586
    3. ' ' → logprob: -10.127859115600586
    4. ',' → logprob: -11.877859115600586
    5. ' =
' → logprob: -13.502859115600586
    6. ')' → logprob: -13.502859115600586
    7. '   ' → logprob: -13.627859115600586
    8. '  ' → logprob: -14.127859115600586
    9. '    ' → logprob: -14.252859115600586
    10. ' =)' → logprob: -14.252859115600586

Token 91: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.018168320879340172
    2. 'graph' → logprob: -4.0181684494018555
    3. '	graph' → logprob: -11.393168449401855
    4. ' len' → logprob: -12.518168449401855
    5. '(graph' → logprob: -13.268168449401855
    6. 'len' → logprob: -14.393168449401855
    7. ' ' → logprob: -14.893168449401855
    8. ' ' → logprob: -15.018168449401855
    9. ' n' → logprob: -15.643168449401855
    10. '.graph' → logprob: -16.64316749572754

Token 92: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.005967072676867247
    2. '.' → logprob: -5.130967140197754
    3. ' .' → logprob: -10.255967140197754
    4. '​.' → logprob: -14.380967140197754
    5. ').' → logprob: -15.130967140197754
    6. '.i' → logprob: -15.380967140197754
    7. '`.' → logprob: -15.380967140197754
    8. ' ' → logprob: -15.505967140197754
    9. '.p' → logprob: -15.880967140197754
    10. '‌.' → logprob: -16.005966186523438

Token 93: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4299846291542053
    2. ' 
' → logprob: -1.9299845695495605
    3. '    
' → logprob: -2.9299845695495605
    4. '  
' → logprob: -3.1799845695495605
    5. ' ' → logprob: -3.3049845695495605
    6. '   ' → logprob: -4.0549845695495605
    7. ',' → logprob: -4.3049845695495605
    8. '   
' → logprob: -4.6799845695495605
    9. 'n' → logprob: -5.1799845695495605
    10. ')' → logprob: -5.3049845695495605

Token 94: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.09567391872406
    2. '   ' → logprob: -1.34567391872406
    3. '    
' → logprob: -2.2206740379333496
    4. 'd' → logprob: -3.0956740379333496
    5. '
' → logprob: -3.2206740379333496
    6. ' 
' → logprob: -3.2206740379333496
    7. '  
' → logprob: -3.9706740379333496
    8. ' distances' → logprob: -3.9706740379333496
    9. '   
' → logprob: -4.09567403793335
    10. ' dist' → logprob: -4.09567403793335

Token 95: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.020169857889413834
    2. ' dist' → logprob: -4.020169734954834
    3. '   ' → logprob: -7.270169734954834
    4. 'd' → logprob: -7.395169734954834
    5. 'dp' → logprob: -7.770169734954834
    6. 'distance' → logprob: -9.270170211791992
    7. ' ' → logprob: -9.645170211791992
    8. '```' → logprob: -10.395170211791992
    9. 'dis' → logprob: -10.520170211791992
    10. '    
' → logprob: -11.145170211791992

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026356272399425507
    2. '=' → logprob: -3.6513562202453613
    3. ' ' → logprob: -10.52635669708252
    4. '[' → logprob: -11.27635669708252
    5. ' =[' → logprob: -11.40135669708252
    6. '=[' → logprob: -13.27635669708252
    7. ',' → logprob: -13.90135669708252
    8. ' =
' → logprob: -14.77635669708252
    9. '=[[' → logprob: -14.77635669708252
    10. '  ' → logprob: -14.90135669708252

Token 97: ' []
' (ID: 8911)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.20534884929656982
    2. ' [[' → logprob: -1.7053488492965698
    3. '[' → logprob: -5.705348968505859
    4. ' [' → logprob: -7.455348968505859
    5. '[n' → logprob: -11.58034896850586
    6. '[]' → logprob: -11.70534896850586
    7. '[
' → logprob: -13.70534896850586
    8. '[i' → logprob: -14.83034896850586
    9. '[list' → logprob: -14.83034896850586
    10. ' []' → logprob: -14.95534896850586

Token 98: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9282056093215942
    2. '   ' → logprob: -1.0532056093215942
    3. '[' → logprob: -2.0532054901123047
    4. ' for' → logprob: -2.5532054901123047
    5. 'for' → logprob: -3.4282054901123047
    6. '<|end|>' → logprob: -5.303205490112305
    7. '    ' → logprob: -6.178205490112305
    8. '	for' → logprob: -6.553205490112305
    9. ' [
' → logprob: -6.803205490112305
    10. '  ' → logprob: -6.928205490112305

Token 99: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3119790852069855
    2. ' for' → logprob: -1.561979055404663
    3. '   ' → logprob: -3.561979055404663
    4. '[' → logprob: -3.561979055404663
    5. ' [' → logprob: -6.811979293823242
    6. ' ' → logprob: -9.311979293823242
    7. '	for' → logprob: -9.561979293823242
    8. '    ' → logprob: -9.561979293823242
    9. ' [
' → logprob: -9.936979293823242
    10. '[n' → logprob: -10.561979293823242

Token 100: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1754014939069748
    2. 'i' → logprob: -2.550401449203491
    3. ' i' → logprob: -3.175401449203491
    4. ' _' → logprob: -3.300401449203491
    5. '_i' → logprob: -5.80040168762207
    6. ' ' → logprob: -6.80040168762207
    7. ' in' → logprob: -10.30040168762207
    8. '	i' → logprob: -13.17540168762207
    9. 'range' → logprob: -13.67540168762207
    10. 'n' → logprob: -13.80040168762207

Token 101: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07122335582971573
    2. 'in' → logprob: -2.696223258972168
    3. ' ' → logprob: -7.196223258972168
    4. 'n' → logprob: -7.696223258972168
    5. '_' → logprob: -10.696223258972168
    6. '	in' → logprob: -10.696223258972168
    7. '  ' → logprob: -11.696223258972168
    8. ' i' → logprob: -12.196223258972168
    9. '0' → logprob: -12.821223258972168
    10. ',' → logprob: -12.946223258972168

Token 102: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029766805469989777
    2. ' range' → logprob: -3.529766798019409
    3. ' ' → logprob: -11.279767036437988
    4. '   ' → logprob: -13.904767036437988
    5. '  ' → logprob: -14.154767036437988
    6. 'r' → logprob: -14.404767036437988
    7. '	range' → logprob: -14.654767036437988
    8. 'rang' → logprob: -14.904767036437988
    9. '(range' → logprob: -15.529767036437988
    10. 'ran' → logprob: -15.779767036437988

Token 103: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004020713677164167
    2. '(' → logprob: -8.000402450561523
    3. 'n' → logprob: -10.250402450561523
    4. ' (' → logprob: -10.500402450561523
    5. ' n' → logprob: -12.625402450561523
    6. '(
' → logprob: -15.125402450561523
    7. ' ' → logprob: -16.750402450561523
    8. '	n' → logprob: -17.250402450561523
    9. ')n' → logprob: -17.375402450561523
    10. ')' → logprob: -17.875402450561523

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004019041545689106
    2. '):
' → logprob: -5.629019260406494
    3. ')' → logprob: -8.004018783569336
    4. ':' → logprob: -9.879018783569336
    5. ' ):' → logprob: -10.879018783569336
    6. ',' → logprob: -12.504018783569336
    7. '):
' → logprob: -13.004018783569336
    8. ']:' → logprob: -13.129018783569336
    9. '+' → logprob: -13.129018783569336
    10. '   ' → logprob: -13.379018783569336

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6750186681747437
    2. ' ' → logprob: -1.1750186681747437
    3. '   ' → logprob: -2.550018787384033
    4. '    ' → logprob: -2.675018787384033
    5. '[' → logprob: -3.800018787384033
    6. ' []' → logprob: -5.550018787384033
    7. '<|end|>' → logprob: -6.425018787384033
    8. '        ' → logprob: -6.800018787384033
    9. ' [' → logprob: -6.800018787384033
    10. '[]' → logprob: -6.925018787384033

Token 106: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.7021275162696838
    2. 'dist' (adapté à ' dist') → logprob: -1.327127456665039
    3. '   ' → logprob: -1.452127456665039
    4. '       ' → logprob: -5.952127456665039
    5. '[' → logprob: -6.702127456665039
    6. '	dist' → logprob: -7.077127456665039
    7. ' ' → logprob: -8.702127456665039
    8. '    ' → logprob: -8.952127456665039
    9. ' [' → logprob: -9.452127456665039
    10. '  ' → logprob: -10.452127456665039

Token 107: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2014455944299698
    2. '.' → logprob: -1.7014455795288086
    3. ' .' → logprob: -11.701445579528809
    4. '.extend' → logprob: -12.326445579528809
    5. '.=' → logprob: -12.326445579528809
    6. '.i' → logprob: -12.451445579528809
    7. '.ap' → logprob: -12.451445579528809
    8. '.app' → logprob: -13.201445579528809
    9. '.Append' → logprob: -13.451445579528809
    10. '=' → logprob: -13.951445579528809

Token 108: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.001419876585714519
    2. '[' → logprob: -6.626420021057129
    3. '([]' → logprob: -10.001420021057129
    4. '   ' → logprob: -11.126420021057129
    5. '(' → logprob: -11.751420021057129
    6. ' ([' → logprob: -12.251420021057129
    7. ' [' → logprob: -12.626420021057129
    8. '(([' → logprob: -12.751420021057129
    9. '([])
' → logprob: -12.876420021057129
    10. ' ' → logprob: -13.126420021057129

Token 109: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.007678077090531588
    2. '0' → logprob: -4.882678031921387
    3. 'inf' → logprob: -10.382678031921387
    4. ' INF' → logprob: -10.882678031921387
    5. '_INF' → logprob: -11.882678031921387
    6. 'IN' → logprob: -12.882678031921387
    7. '-INF' → logprob: -13.257678031921387
    8. 'Inf' → logprob: -13.382678031921387
    9. ' ' → logprob: -13.382678031921387
    10. '(' → logprob: -13.632678031921387

Token 110: ']*' (ID: 18579)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.394639253616333
    2. ']' → logprob: -1.644639253616333
    3. ']*' → logprob: -2.269639253616333
    4. 'if' → logprob: -4.144639015197754
    5. ' for' → logprob: -5.019639015197754
    6. ' ]' → logprob: -5.269639015197754
    7. ']*(' → logprob: -6.394639015197754
    8. ' ' → logprob: -8.769639015197754
    9. ']+' → logprob: -9.394639015197754
    10. 'for' → logprob: -9.519639015197754

Token 111: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005597044946625829
    2. ' n' → logprob: -7.5005598068237305
    3. '(n' → logprob: -12.00055980682373
    4. '	n' → logprob: -14.37555980682373
    5. ')n' → logprob: -16.750558853149414
    6. '   ' → logprob: -17.375558853149414
    7. ' (' → logprob: -19.375558853149414
    8. '(' → logprob: -19.500558853149414
    9. '    ' → logprob: -20.250558853149414
    10. ' ' → logprob: -21.125558853149414

Token 112: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009937490103766322
    2. '<|end|>' → logprob: -7.500993728637695
    3. ' )' → logprob: -8.375993728637695
    4. '
' → logprob: -9.250993728637695
    5. ')
' → logprob: -9.875993728637695
    6. '   ' → logprob: -10.500993728637695
    7. '       ' → logprob: -12.125993728637695
    8. ' ' → logprob: -12.125993728637695
    9. ')return' → logprob: -12.500993728637695
    10. ')n' → logprob: -12.750993728637695

Token 113: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9836387634277344
    2. '<|end|>' → logprob: -1.3586387634277344
    3. '   ' → logprob: -1.7336387634277344
    4. ' for' → logprob: -2.7336387634277344
    5. 'for' (adapté à ' for') → logprob: -3.2336387634277344
    6. ' 
' → logprob: -3.6086387634277344
    7. '    
' → logprob: -3.7336387634277344
    8. ' ' → logprob: -4.108638763427734
    9. '\n' → logprob: -4.733638763427734
    10. '  
' → logprob: -5.733638763427734

Token 115: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1606404334306717
    2. 'i' → logprob: -1.9106404781341553
    3. ' range' → logprob: -8.660640716552734
    4. '<|end|>' → logprob: -9.035640716552734
    5. 'range' → logprob: -9.660640716552734
    6. ' ' → logprob: -10.160640716552734
    7. ' in' → logprob: -11.660640716552734
    8. '<|end|>' → logprob: -12.660640716552734
    9. '	i' → logprob: -13.285640716552734
    10. ')' → logprob: -13.785640716552734

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014525912702083588
    2. ' ' → logprob: -4.514525890350342
    3. '<|end|>' → logprob: -6.014525890350342
    4. 'in' → logprob: -7.014525890350342
    5. '<|end|>' → logprob: -9.6395263671875
    6. '  ' → logprob: -11.3895263671875
    7. ',' → logprob: -11.5145263671875
    8. ' for' → logprob: -11.7645263671875
    9. '   ' → logprob: -12.1395263671875
    10. '    ' → logprob: -12.3895263671875

Token 117: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3484668731689453
    2. ' range' → logprob: -1.2234668731689453
    3. ' ' → logprob: -11.848466873168945
    4. '(range' → logprob: -12.223466873168945
    5. '	range' → logprob: -12.848466873168945
    6. '   ' → logprob: -13.223466873168945
    7. 'n' → logprob: -13.848466873168945
    8. '  ' → logprob: -14.098466873168945
    9. ')' → logprob: -14.223466873168945
    10. '```' → logprob: -14.598466873168945

Token 118: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.0590548703912646e-05
    2. '(' → logprob: -10.500030517578125
    3. 'n' → logprob: -12.750030517578125
    4. '(
' → logprob: -16.375030517578125
    5. ' (' → logprob: -18.125030517578125
    6. ')n' → logprob: -18.500030517578125
    7. '(nx' → logprob: -18.750030517578125
    8. '(s' → logprob: -18.750030517578125
    9. ' n' → logprob: -18.875030517578125
    10. ')' → logprob: -19.125030517578125

Token 119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011118779657408595
    2. ')' → logprob: -7.00111198425293
    3. ' ):' → logprob: -9.25111198425293
    4. '):
' → logprob: -9.37611198425293
    5. ':' → logprob: -11.62611198425293
    6. ' ' → logprob: -12.00111198425293
    7. '   ' → logprob: -13.75111198425293
    8. '       ' → logprob: -14.00111198425293
    9. '<|end|>' → logprob: -14.62611198425293
    10. ']:' → logprob: -14.87611198425293

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04626704007387161
    2. ' dist' → logprob: -4.171267032623291
    3. 'dist' → logprob: -4.296267032623291
    4. '<|end|>' → logprob: -4.296267032623291
    5. '	dist' → logprob: -7.296267032623291
    6. ' ' → logprob: -7.546267032623291
    7. '   ' → logprob: -7.796267032623291
    8. ' for' → logprob: -8.29626750946045
    9. '        
' → logprob: -9.29626750946045
    10. '<|end|>' → logprob: -9.54626750946045

Token 121: ' for' (ID: 395)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01128383632749319
    2. ' dist' → logprob: -4.511283874511719
    3. 'for' (adapté à ' for') → logprob: -9.261283874511719
    4. '   ' → logprob: -9.511283874511719
    5. '	dist' → logprob: -10.261283874511719
    6. ' for' → logprob: -10.761283874511719
    7. '       ' → logprob: -12.136283874511719
    8. '_dist' → logprob: -13.011283874511719
    9. 'Dist' → logprob: -14.011283874511719
    10. ' ' → logprob: -14.011283874511719

Token 122: ' (' (ID: 350)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5759906768798828
    2. 'j' → logprob: -0.8259906768798828
    3. ' ' → logprob: -10.825990676879883
    4. '	j' → logprob: -11.575990676879883
    5. ' v' → logprob: -11.700990676879883
    6. '   ' → logprob: -12.825990676879883
    7. '  ' → logprob: -12.825990676879883
    8. 'v' → logprob: -13.075990676879883
    9. '_j' → logprob: -13.700990676879883
    10. ')' → logprob: -14.200990676879883

Token 123: 'j' (ID: 73)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6597804427146912
    2. 'j' → logprob: -0.7847804427146912
    3. 'to' → logprob: -3.784780502319336
    4. '(v' → logprob: -5.784780502319336
    5. 'vj' → logprob: -8.034780502319336
    6. '(j' → logprob: -8.159780502319336
    7. ' v' → logprob: -8.534780502319336
    8. ' j' → logprob: -9.909780502319336
    9. 'w' → logprob: -10.534780502319336
    10. '(to' → logprob: -10.659780502319336

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013908311957493424
    2. ',w' → logprob: -6.7513909339904785
    3. ' ,' → logprob: -8.62639045715332
    4. ',v' → logprob: -11.25139045715332
    5. '<|end|>' → logprob: -12.12639045715332
    6. ')' → logprob: -12.50139045715332
    7. ',
' → logprob: -12.75139045715332
    8. '‌,' → logprob: -13.12639045715332
    9. 'w' → logprob: -13.37639045715332
    10. ',d' → logprob: -13.50139045715332

Token 125: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.14303891360759735
    2. ' w' → logprob: -2.0180389881134033
    3. ')' → logprob: -8.143038749694824
    4. '    ' → logprob: -10.518038749694824
    5. '<|end|>' → logprob: -11.768038749694824
    6. ' ' → logprob: -12.018038749694824
    7. 'weight' → logprob: -12.143038749694824
    8. '	w' → logprob: -12.143038749694824
    9. 'wj' → logprob: -12.393038749694824
    10. 'j' → logprob: -12.893038749694824

Token 126: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.157039049663581e-05
    2. ' )' → logprob: -10.250051498413086
    3. 'in' → logprob: -12.000051498413086
    4. ' in' → logprob: -12.625051498413086
    5. '),' → logprob: -13.250051498413086
    6. ',' → logprob: -13.250051498413086
    7. 's' → logprob: -14.625051498413086
    8. ',)' → logprob: -14.875051498413086
    9. ' ' → logprob: -15.375051498413086
    10. '<|end|>' → logprob: -15.375051498413086

Token 127: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13122449815273285
    2. 'in' → logprob: -2.7562243938446045
    3. ')' → logprob: -2.8812243938446045
    4. ' ' → logprob: -6.631224632263184
    5. '<|end|>' → logprob: -7.131224632263184
    6. ' )' → logprob: -7.506224632263184
    7. ',' → logprob: -8.131224632263184
    8. 's' → logprob: -9.381224632263184
    9. '  ' → logprob: -9.756224632263184
    10. '<|end|>' → logprob: -10.006224632263184

Token 128: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.007691917475312948
    2. ' graph' → logprob: -4.882691860198975
    3. '	graph' → logprob: -9.882692337036133
    4. '(graph' → logprob: -10.757692337036133
    5. '<|end|>' → logprob: -12.007692337036133
    6. ')' → logprob: -12.757692337036133
    7. '_graph' → logprob: -13.132692337036133
    8. 'raph' → logprob: -14.382692337036133
    9. 'Graph' → logprob: -14.757692337036133
    10. '.graph' → logprob: -15.007692337036133

Token 129: '.edges' (ID: 102481)
  Prédit: '.edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.018650388345122337
    2. '.' → logprob: -4.018650531768799
    3. ' .' → logprob: -7.768650531768799
    4. 'edges' → logprob: -10.26865005493164
    5. ' edges' → logprob: -11.89365005493164
    6. '_edges' → logprob: -12.89365005493164
    7. '.s' → logprob: -12.89365005493164
    8. '   ' → logprob: -13.14365005493164
    9. '.points' → logprob: -13.14365005493164
    10. '.ed' → logprob: -13.39365005493164

Token 130: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.652451464906335e-05
    2. '[' → logprob: -11.375016212463379
    3. '[j' → logprob: -13.125016212463379
    4. '[
' → logprob: -13.500016212463379
    5. 'i' → logprob: -15.125016212463379
    6. '[u' → logprob: -15.250016212463379
    7. ' [' → logprob: -15.375016212463379
    8. '[I' → logprob: -15.375016212463379
    9. '   ' → logprob: -15.500016212463379
    10. ' ' → logprob: -16.625017166137695

Token 131: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005829381989315152
    2. ':' → logprob: -8.125582695007324
    3. ')' → logprob: -9.125582695007324
    4. ' ):' → logprob: -9.375582695007324
    5. '):
' → logprob: -9.750582695007324
    6. ']:' → logprob: -11.000582695007324
    7. '       ' → logprob: -12.250582695007324
    8. ']):' → logprob: -12.875582695007324
    9. '   ' → logprob: -13.375582695007324
    10. '}:' → logprob: -13.500582695007324

Token 132: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47122418880462646
    2. ':' → logprob: -1.2212241888046265
    3. '           ' → logprob: -3.096224308013916
    4. ' :' → logprob: -4.221224308013916
    5. '):' → logprob: -5.221224308013916
    6. '<|end|>' → logprob: -5.596224308013916
    7. ' ' → logprob: -5.846224308013916
    8. '        ' → logprob: -6.471224308013916
    9. ',' → logprob: -6.596224308013916
    10. ' 
' → logprob: -7.096224308013916

Token 133: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.5298014879226685
    2. ' dist' → logprob: -0.9048014879226685
    3. '           ' → logprob: -6.154801368713379
    4. ' 
' → logprob: -7.154801368713379
    5. '	dist' → logprob: -7.279801368713379
    6. '       ' → logprob: -7.404801368713379
    7. '    ' → logprob: -8.029801368713379
    8. ' ' → logprob: -8.154801368713379
    9. '   ' → logprob: -8.154801368713379
    10. 'd' → logprob: -8.154801368713379

Token 134: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001657565007917583
    2. '[' → logprob: -9.750165939331055
    3. '[I' → logprob: -9.750165939331055
    4. '[j' → logprob: -10.375165939331055
    5. '[
' → logprob: -11.875165939331055
    6. '[s' → logprob: -12.750165939331055
    7. '][' → logprob: -13.250165939331055
    8. ')[' → logprob: -13.375165939331055
    9. '[u' → logprob: -14.000165939331055
    10. ' [' → logprob: -14.500165939331055

Token 135: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08521261811256409
    2. '[j' → logprob: -2.8352127075195312
    3. '[' → logprob: -3.9602127075195312
    4. '[i' → logprob: -6.585212707519531
    5. ')[' → logprob: -6.585212707519531
    6. ']' → logprob: -7.335212707519531
    7. ' ][' → logprob: -8.835212707519531
    8. ' [' → logprob: -9.710212707519531
    9. '[
' → logprob: -10.085212707519531
    10. ')' → logprob: -10.835212707519531

Token 136: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.15441757265944e-05
    2. ' j' → logprob: -10.875031471252441
    3. 'w' → logprob: -11.625031471252441
    4. ']' → logprob: -13.375031471252441
    5. '	j' → logprob: -14.500031471252441
    6. 'i' → logprob: -14.750031471252441
    7. ' ' → logprob: -15.250031471252441
    8. ')' → logprob: -16.000032424926758
    9. '[j' → logprob: -16.125032424926758
    10. 'v' → logprob: -16.250032424926758

Token 137: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09754210710525513
    2. ']' → logprob: -2.9725420475006104
    3. '=' → logprob: -3.8475420475006104
    4. ' ]' → logprob: -3.9725420475006104
    5. ']=' → logprob: -7.0975422859191895
    6. ')' → logprob: -7.8475422859191895
    7. ' ' → logprob: -8.222541809082031
    8. ' )' → logprob: -9.347541809082031
    9. ')=' → logprob: -11.722541809082031
    10. 'w' → logprob: -11.722541809082031

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0076401131227612495
    2. '=' → logprob: -4.8826398849487305
    3. ' ' → logprob: -10.50763988494873
    4. ' =
' → logprob: -12.50763988494873
    5. '=w' → logprob: -13.13263988494873
    6. ')' → logprob: -15.25763988494873
    7. 'w' → logprob: -15.63263988494873
    8. ',' → logprob: -16.257640838623047
    9. ' ' → logprob: -16.507640838623047
    10. ' =
' → logprob: -16.632640838623047

Token 139: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.38687217235565186
    2. ' w' → logprob: -1.1368721723556519
    3. ' ' → logprob: -14.261872291564941
    4. ' ' → logprob: -14.761872291564941
    5. '	w' → logprob: -16.636871337890625
    6. '<w' → logprob: -18.636871337890625
    7. '    ' → logprob: -18.761871337890625
    8. '_w' → logprob: -19.386871337890625
    9. '​' → logprob: -19.761871337890625
    10. '=w' → logprob: -19.761871337890625

Token 140: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20493927597999573
    2. '<|end|>' → logprob: -1.8299392461776733
    3. '\n' → logprob: -4.454939365386963
    4. ' 
' → logprob: -5.579939365386963
    5. '    
' → logprob: -6.079939365386963
    6. '\' → logprob: -6.329939365386963
    7. '  
' → logprob: -6.454939365386963
    8. '   ' → logprob: -6.704939365386963
    9. ' ' → logprob: -7.954939365386963
    10. '' → logprob: -8.329938888549805

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6199411153793335
    2. '<|end|>' → logprob: -0.9949411153793335
    3. '
' → logprob: -2.869941234588623
    4. '       ' → logprob: -3.869941234588623
    5. '    
' → logprob: -5.369941234588623
    6. ' 
' → logprob: -6.244941234588623
    7. '  
' → logprob: -6.369941234588623
    8. ' for' → logprob: -6.494941234588623
    9. ' ' → logprob: -6.619941234588623
    10. 'for' → logprob: -7.494941234588623

Token 142: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4776613414287567
    2. ' for' → logprob: -1.352661371231079
    3. '   ' → logprob: -2.727661371231079
    4. '
' → logprob: -3.602661371231079
    5. '\n' → logprob: -4.3526611328125
    6. ' ' → logprob: -4.9776611328125
    7. '\' → logprob: -5.9776611328125
    8. ' 
' → logprob: -6.4776611328125
    9. '    
' → logprob: -6.8526611328125
    10. '  
' → logprob: -7.6026611328125

Token 143: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05747712403535843
    2. ' ' → logprob: -2.9324772357940674
    3. ' k' → logprob: -6.557476997375488
    4. 'i' → logprob: -7.057476997375488
    5. ' ' → logprob: -9.307476997375488
    6. ' _' → logprob: -9.557476997375488
    7. '<|end|>' → logprob: -10.057476997375488
    8. ' t' → logprob: -11.057476997375488
    9. '  ' → logprob: -11.057476997375488
    10. ' ‌' → logprob: -11.557476997375488

Token 144: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007276826072484255
    2. 'in' → logprob: -7.250727653503418
    3. ' ' → logprob: -11.125727653503418
    4. ' range' → logprob: -13.750727653503418
    5. 'range' → logprob: -14.000727653503418
    6. 'n' → logprob: -15.500727653503418
    7. '   ' → logprob: -15.500727653503418
    8. '  ' → logprob: -15.875727653503418
    9. '	in' → logprob: -16.125728607177734
    10. '    ' → logprob: -16.250728607177734

Token 145: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31346145272254944
    2. ' range' → logprob: -1.313461422920227
    3. 'n' → logprob: -8.688461303710938
    4. ' n' → logprob: -11.438461303710938
    5. '(range' → logprob: -11.938461303710938
    6. '	range' → logprob: -12.688461303710938
    7. ' ' → logprob: -12.813461303710938
    8. ' xrange' → logprob: -13.563461303710938
    9. ')' → logprob: -13.813461303710938
    10. '```' → logprob: -14.188461303710938

Token 146: '(n' (ID: 2406)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07374159246683121
    2. '(n' → logprob: -3.3237416744232178
    3. 'n' → logprob: -3.5737416744232178
    4. ' ' → logprob: -5.448741436004639
    5. ' (' → logprob: -6.073741436004639
    6. '	n' → logprob: -8.698741912841797
    7. '(' → logprob: -9.073741912841797
    8. '<|end|>' → logprob: -9.948741912841797
    9. ')n' → logprob: -10.073741912841797
    10. ')' → logprob: -11.448741912841797

Token 147: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010246959514915943
    2. ' ):' → logprob: -5.260246753692627
    3. '):
' → logprob: -5.510246753692627
    4. ':' → logprob: -7.635246753692627
    5. ')' → logprob: -7.760246753692627
    6. ' ):
' → logprob: -10.635247230529785
    7. ' ' → logprob: -12.135247230529785
    8. ' )' → logprob: -12.135247230529785
    9. '   ' → logprob: -12.510247230529785
    10. ' :' → logprob: -13.010247230529785

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4259690046310425
    2. '
' → logprob: -1.4259690046310425
    3. ' 
' → logprob: -3.300969123840332
    4. '<|end|>' → logprob: -3.550969123840332
    5. ' ' → logprob: -3.925969123840332
    6. '    ' → logprob: -4.800969123840332
    7. '    
' → logprob: -5.800969123840332
    8. '        
' → logprob: -6.050969123840332
    9. '  
' → logprob: -6.175969123840332
    10. '   ' → logprob: -6.550969123840332

Token 149: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.34591442346572876
    2. 'for' (adapté à ' for') → logprob: -1.970914363861084
    3. '   ' → logprob: -2.220914363861084
    4. '       ' → logprob: -3.470914363861084
    5. '    ' → logprob: -5.220914363861084
    6. ' 
' → logprob: -5.845914363861084
    7. '    
' → logprob: -6.220914363861084
    8. ' ' → logprob: -6.345914363861084
    9. '
' → logprob: -7.220914363861084
    10. '        
' → logprob: -8.345914840698242

Token 150: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08974432200193405
    2. ' ' → logprob: -2.9647443294525146
    3. ' j' → logprob: -4.0897440910339355
    4. 'i' → logprob: -4.0897440910339355
    5. 'j' → logprob: -7.7147440910339355
    6. ' range' → logprob: -9.589744567871094
    7. ' n' → logprob: -9.589744567871094
    8. '  ' → logprob: -9.714744567871094
    9. 'range' → logprob: -10.589744567871094
    10. '```' → logprob: -11.089744567871094

Token 151: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016596360132098198
    2. 'in' → logprob: -4.14159631729126
    3. ' ' → logprob: -7.51659631729126
    4. '<|end|>' → logprob: -11.641596794128418
    5. ')' → logprob: -13.141596794128418
    6. 'n' → logprob: -13.766596794128418
    7. ',' → logprob: -13.891596794128418
    8. '    ' → logprob: -14.016596794128418
    9. '   ' → logprob: -14.391596794128418
    10. '  ' → logprob: -14.391596794128418

Token 152: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.27178695797920227
    2. 'range' → logprob: -2.14678692817688
    3. ' n' → logprob: -2.27178692817688
    4. 'n' → logprob: -4.021787166595459
    5. ' ' → logprob: -10.7717866897583
    6. ' in' → logprob: -10.8967866897583
    7. '(range' → logprob: -11.2717866897583
    8. '(n' → logprob: -11.7717866897583
    9. '	range' → logprob: -13.0217866897583
    10. 'in' → logprob: -13.1467866897583

Token 153: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007162463734857738
    2. 'n' → logprob: -7.750716209411621
    3. '(' → logprob: -8.375716209411621
    4. ' (' → logprob: -10.125716209411621
    5. ' n' → logprob: -11.125716209411621
    6. ')' → logprob: -16.125717163085938
    7. ' ' → logprob: -16.500717163085938
    8. '(
' → logprob: -16.750717163085938
    9. '	n' → logprob: -18.000717163085938
    10. '(k' → logprob: -18.375717163085938

Token 154: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.40319377183914185
    2. '):
' → logprob: -1.278193712234497
    3. ')' → logprob: -4.278193950653076
    4. ',' → logprob: -4.403193950653076
    5. ':' → logprob: -4.528193950653076
    6. '       ' → logprob: -5.528193950653076
    7. ',n' → logprob: -5.653193950653076
    8. '   ' → logprob: -5.903193950653076
    9. ' ):' → logprob: -6.403193950653076
    10. ' in' → logprob: -7.403193950653076

Token 155: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000953502138145268
    2. '            ' → logprob: -8.250953674316406
    3. ' for' → logprob: -8.625953674316406
    4. ' ' → logprob: -8.625953674316406
    5. '               ' → logprob: -9.250953674316406
    6. '        ' → logprob: -9.375953674316406
    7. ' 
' → logprob: -10.500953674316406
    8. '       ' → logprob: -10.750953674316406
    9. '   ' → logprob: -11.000953674316406
    10. ' ' → logprob: -11.250953674316406

Token 156: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6232107281684875
    2. '               ' → logprob: -0.8732107281684875
    3. 'for' (adapté à ' for') → logprob: -3.1232106685638428
    4. '           ' → logprob: -6.873210906982422
    5. ' ' → logprob: -7.748210906982422
    6. '                ' → logprob: -8.248210906982422
    7. '   ' → logprob: -9.248210906982422
    8. '            ' → logprob: -9.623210906982422
    9. ' ' → logprob: -9.748210906982422
    10. '       ' → logprob: -9.873210906982422

Token 157: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.16050297021865845
    2. 'j' → logprob: -1.9105029106140137
    3. ' ' → logprob: -8.535503387451172
    4. '<|end|>' → logprob: -10.160503387451172
    5. '    ' → logprob: -11.035503387451172
    6. '	j' → logprob: -11.535503387451172
    7. ')' → logprob: -12.535503387451172
    8. '<|end|>' → logprob: -13.035503387451172
    9. '0' → logprob: -13.410503387451172
    10. '  ' → logprob: -13.910503387451172

Token 158: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007670036982744932
    2. 'in' → logprob: -4.882669925689697
    3. ' ' → logprob: -9.757670402526855
    4. '	in' → logprob: -13.257670402526855
    5. '    ' → logprob: -14.757670402526855
    6. '=' → logprob: -14.882670402526855
    7. ')' → logprob: -15.132670402526855
    8. ' =' → logprob: -15.132670402526855
    9. '   ' → logprob: -15.257670402526855
    10. ',' → logprob: -15.257670402526855

Token 159: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4769362509250641
    2. 'range' → logprob: -0.9769362211227417
    3. 'n' → logprob: -6.101936340332031
    4. ' n' → logprob: -7.726936340332031
    5. '(n' → logprob: -8.851936340332031
    6. '(range' → logprob: -10.476936340332031
    7. '[n' → logprob: -13.351936340332031
    8. ' ' → logprob: -13.851936340332031
    9. ' (' → logprob: -14.601936340332031
    10. 'in' → logprob: -14.726936340332031

Token 160: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004653337877243757
    2. ' (' → logprob: -5.379653453826904
    3. 'n' → logprob: -10.879652976989746
    4. '(' → logprob: -11.629652976989746
    5. ' n' → logprob: -12.504652976989746
    6. '[n' → logprob: -14.629652976989746
    7. '(
' → logprob: -15.504652976989746
    8. ')' → logprob: -15.629652976989746
    9. '	n' → logprob: -16.129653930664062
    10. '<n' → logprob: -16.129653930664062

Token 161: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12194766104221344
    2. '):
' → logprob: -2.246947765350342
    3. ' ):' → logprob: -5.496947765350342
    4. ')' → logprob: -5.621947765350342
    5. ' ):
' → logprob: -7.621947765350342
    6. '           ' → logprob: -7.996947765350342
    7. '+' → logprob: -8.871947288513184
    8. '               ' → logprob: -9.121947288513184
    9. ':' → logprob: -9.371947288513184
    10. '       ' → logprob: -10.121947288513184

Token 162: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015530710807070136
    2. '                ' → logprob: -6.876553058624268
    3. '                   ' → logprob: -8.751553535461426
    4. '                       ' → logprob: -9.126553535461426
    5. '           ' → logprob: -9.751553535461426
    6. ' ' → logprob: -10.126553535461426
    7. ' :' → logprob: -10.876553535461426
    8. ':' → logprob: -10.876553535461426
    9. '            ' → logprob: -11.001553535461426
    10. '              ' → logprob: -11.251553535461426

Token 163: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2664753794670105
    2. '                    ' → logprob: -2.2664754390716553
    3. '                   ' → logprob: -2.6414754390716553
    4. 'if' (adapté à ' if') → logprob: -4.266475200653076
    5. ' dist' → logprob: -4.391475200653076
    6. '                ' → logprob: -4.641475200653076
    7. '    ' → logprob: -5.141475200653076
    8. '                       ' → logprob: -5.391475200653076
    9. 'dist' → logprob: -5.391475200653076
    10. ' ' → logprob: -5.516475200653076

Token 164: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.10038178414106369
    2. 'dist' → logprob: -2.350381851196289
    3. '	dist' → logprob: -8.850381851196289
    4. '   ' → logprob: -11.725381851196289
    5. '(dist' → logprob: -11.975381851196289
    6. ' ' → logprob: -12.225381851196289
    7. '    ' → logprob: -12.350381851196289
    8. ' ' → logprob: -12.975381851196289
    9. '_dist' → logprob: -13.850381851196289
    10. '               ' → logprob: -14.225381851196289

Token 165: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '[j' → logprob: -14.625001907348633
    3. '[' → logprob: -15.000001907348633
    4. '[
' → logprob: -15.500001907348633
    5. '[I' → logprob: -15.500001907348633
    6. 'i' → logprob: -15.875001907348633
    7. ' [' → logprob: -16.125001907348633
    8. '[k' → logprob: -17.250001907348633
    9. '][' → logprob: -18.000001907348633
    10. '```' → logprob: -18.375001907348633

Token 166: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.023142404854297638
    2. '[j' → logprob: -4.023142337799072
    3. '[k' → logprob: -5.523142337799072
    4. ' ][' → logprob: -7.398142337799072
    5. '[' → logprob: -8.77314281463623
    6. ' [' → logprob: -9.27314281463623
    7. ']' → logprob: -9.89814281463623
    8. '   ' → logprob: -10.27314281463623
    9. '[i' → logprob: -12.14814281463623
    10. ' ' → logprob: -12.39814281463623

Token 167: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00011975488450843841
    2. 'j' → logprob: -9.125120162963867
    3. ' k' → logprob: -11.625120162963867
    4. '[k' → logprob: -13.875120162963867
    5. ']' → logprob: -14.750120162963867
    6. ' ' → logprob: -16.625120162963867
    7. '	k' → logprob: -16.750120162963867
    8. '   ' → logprob: -16.750120162963867
    9. '][' → logprob: -17.000120162963867
    10. 'i' → logprob: -17.750120162963867

Token 168: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7002193927764893
    2. ']' → logprob: -0.8252193927764893
    3. '+' → logprob: -3.0752193927764893
    4. ']+' → logprob: -4.57521915435791
    5. ' !=' → logprob: -5.70021915435791
    6. ' ]' → logprob: -6.32521915435791
    7. ')' → logprob: -6.45021915435791
    8. ']!=' → logprob: -6.95021915435791
    9. '!=' → logprob: -7.32521915435791
    10. '>' → logprob: -8.45021915435791

Token 169: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.281341016292572
    2. ' +' → logprob: -1.4063410758972168
    3. '!=' → logprob: -8.781340599060059
    4. ' !=' → logprob: -10.906340599060059
    5. '>' → logprob: -11.406340599060059
    6. '<' → logprob: -13.531340599060059
    7. '[' → logprob: -14.031340599060059
    8. ' ' → logprob: -14.406340599060059
    9. '+k' → logprob: -14.406340599060059
    10. ' ' → logprob: -14.531340599060059

Token 170: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.16023294627666473
    2. ' dist' → logprob: -1.9102329015731812
    3. '	dist' → logprob: -11.910232543945312
    4. ' ' → logprob: -14.160232543945312
    5. '(dist' → logprob: -14.410232543945312
    6. '_dist' → logprob: -15.035232543945312
    7. 'Dist' → logprob: -15.660232543945312
    8. '<|end|>' → logprob: -15.785232543945312
    9. '.dist' → logprob: -16.035232543945312
    10. 'd' → logprob: -17.160232543945312

Token 171: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.4736459888808895e-05
    2. '[' → logprob: -11.500014305114746
    3. ' [' → logprob: -13.875014305114746
    4. '][' → logprob: -13.875014305114746
    5. '[j' → logprob: -13.875014305114746
    6. '[i' → logprob: -14.750014305114746
    7. 'k' → logprob: -14.875014305114746
    8. '[
' → logprob: -15.750014305114746
    9. '>[' → logprob: -15.875014305114746
    10. '[key' → logprob: -15.875014305114746

Token 172: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6332431435585022
    2. '[j' → logprob: -0.7582431435585022
    3. '[i' → logprob: -7.883243083953857
    4. ']' → logprob: -8.883243560791016
    5. ' ][' → logprob: -10.008243560791016
    6. '[' → logprob: -10.258243560791016
    7. ' [' → logprob: -10.758243560791016
    8. '[k' → logprob: -12.008243560791016
    9. '   ' → logprob: -12.383243560791016
    10. '>[' → logprob: -12.633243560791016

Token 173: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3902033970225602e-05
    2. ' j' → logprob: -11.250014305114746
    3. '[j' → logprob: -14.625014305114746
    4. ']' → logprob: -15.375014305114746
    5. '```' → logprob: -16.37501335144043
    6. '   ' → logprob: -16.62501335144043
    7. '	j' → logprob: -16.75001335144043
    8. '][' → logprob: -17.00001335144043
    9. '_j' → logprob: -17.87501335144043
    10. ' ' → logprob: -18.50001335144043

Token 174: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0021181427873671055
    2. '<' → logprob: -6.252118110656738
    3. ' ' → logprob: -8.627118110656738
    4. ')' → logprob: -12.627118110656738
    5. ']' → logprob: -14.127118110656738
    6. ' ' → logprob: -14.252118110656738
    7. '<|end|>' → logprob: -14.252118110656738
    8. '[' → logprob: -14.377118110656738
    9. ' <
' → logprob: -14.502118110656738
    10. '  ' → logprob: -14.752118110656738

Token 175: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12694185972213745
    2. '<' → logprob: -2.1269419193267822
    3. ' ' → logprob: -11.751941680908203
    4. '[' → logprob: -13.626941680908203
    5. '<n' → logprob: -14.126941680908203
    6. ')' → logprob: -14.376941680908203
    7. '<int' → logprob: -14.376941680908203
    8. ',' → logprob: -14.626941680908203
    9. '<|end|>' → logprob: -15.939441680908203
    10. '<len' → logprob: -16.126941680908203

Token 176: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.023259107023477554
    2. 'dist' → logprob: -3.773259162902832
    3. '	dist' → logprob: -11.648259162902832
    4. ' ' → logprob: -12.773259162902832
    5. '(dist' → logprob: -14.273259162902832
    6. ' ' → logprob: -14.523259162902832
    7. '0' → logprob: -15.773259162902832
    8. ' distress' → logprob: -15.898259162902832
    9. '    ' → logprob: -16.023258209228516
    10. '_dist' → logprob: -16.273258209228516

Token 177: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.747814349073451e-05
    2. '[' → logprob: -11.125017166137695
    3. '][' → logprob: -13.625017166137695
    4. '[
' → logprob: -14.000017166137695
    5. ' [' → logprob: -15.375017166137695
    6. '[j' → logprob: -15.750017166137695
    7. 'i' → logprob: -16.125017166137695
    8. '```' → logprob: -16.625017166137695
    9. '[I' → logprob: -17.125017166137695
    10. ']' → logprob: -17.500017166137695

Token 178: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00038598617538809776
    2. ' ][' → logprob: -8.750386238098145
    3. '[j' → logprob: -9.000386238098145
    4. ']' → logprob: -9.500386238098145
    5. '[i' → logprob: -10.875386238098145
    6. '[' → logprob: -12.125386238098145
    7. ']][' → logprob: -13.625386238098145
    8. '   ' → logprob: -14.625386238098145
    9. '"][' → logprob: -14.750386238098145
    10. '[k' → logprob: -15.000386238098145

Token 179: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.420598219847307e-05
    2. ']' → logprob: -9.8750638961792
    3. ' j' → logprob: -12.3750638961792
    4. '<|end|>' → logprob: -13.0000638961792
    5. ' ' → logprob: -13.3750638961792
    6. '```' → logprob: -13.5000638961792
    7. ')' → logprob: -13.6250638961792
    8. 'k' → logprob: -14.5000638961792
    9. '   ' → logprob: -14.6250638961792
    10. '][' → logprob: -15.2500638961792

Token 180: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.3941420018672943
    2. ':' → logprob: -1.1441420316696167
    3. '):' → logprob: -5.269142150878906
    4. ']:
' → logprob: -6.769142150878906
    5. ']' → logprob: -7.894142150878906
    6. ' :' → logprob: -8.769142150878906
    7. ':
' → logprob: -9.144142150878906
    8. '>:' → logprob: -9.144142150878906
    9. '}:' → logprob: -9.644142150878906
    10. '):
' → logprob: -10.269142150878906

Token 181: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002796199405565858
    2. '                       ' → logprob: -6.377796173095703
    3. ':' → logprob: -7.502796173095703
    4. '               ' → logprob: -8.627796173095703
    5. '                    ' → logprob: -8.627796173095703
    6. ' :' → logprob: -10.127796173095703
    7. '                    
' → logprob: -10.502796173095703
    8. '                           ' → logprob: -10.627796173095703
    9. '                  ' → logprob: -10.752796173095703
    10. '                ' → logprob: -11.127796173095703

Token 182: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.428078830242157
    2. 'dist' (adapté à ' dist') → logprob: -1.1780788898468018
    3. '                   ' → logprob: -3.9280788898468018
    4. '                       ' → logprob: -4.053078651428223
    5. '                    ' → logprob: -6.178078651428223
    6. '                        ' → logprob: -8.053078651428223
    7. '                ' → logprob: -8.803078651428223
    8. '               ' → logprob: -8.803078651428223
    9. '	dist' → logprob: -8.803078651428223
    10. ' ' → logprob: -9.303078651428223

Token 183: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.319370302458992e-06
    2. '[' → logprob: -12.375005722045898
    3. '][' → logprob: -14.750005722045898
    4. '[I' → logprob: -15.000005722045898
    5. '[j' → logprob: -15.875005722045898
    6. '```' → logprob: -17.0000057220459
    7. ' [' → logprob: -17.6250057220459
    8. 'i' → logprob: -18.0000057220459
    9. ')[' → logprob: -18.0000057220459
    10. '\[' → logprob: -18.5000057220459

Token 184: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00046808819752186537
    2. ']' → logprob: -8.125468254089355
    3. '[' → logprob: -9.500468254089355
    4. '[j' → logprob: -10.375468254089355
    5. ' ][' → logprob: -10.375468254089355
    6. '"][' → logprob: -11.250468254089355
    7. ']][' → logprob: -12.375468254089355
    8. '[i' → logprob: -12.500468254089355
    9. ''][' → logprob: -12.750468254089355
    10. '][]' → logprob: -13.000468254089355

Token 185: 'j' (ID: 73)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.016084695234894753
    2. 'j' → logprob: -4.141084671020508
    3. ']' → logprob: -10.016084671020508
    4. ' k' → logprob: -12.766084671020508
    5. ']=' → logprob: -14.766084671020508
    6. '][' → logprob: -14.766084671020508
    7. ' ' → logprob: -15.266084671020508
    8. '[' → logprob: -15.641084671020508
    9. ' j' → logprob: -15.766084671020508
    10. '```' → logprob: -15.766084671020508

Token 186: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5907513499259949
    2. ' =' → logprob: -0.9657513499259949
    3. '=' → logprob: -2.8407514095306396
    4. ' ]' → logprob: -5.0907511711120605
    5. ']=' → logprob: -7.0907511711120605
    6. ')' → logprob: -11.340751647949219
    7. ' =
' → logprob: -12.215751647949219
    8. ' ' → logprob: -12.840751647949219
    9. '                    ' → logprob: -14.090751647949219
    10. ' ' → logprob: -14.090751647949219

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048587486147880554
    2. '=' → logprob: -3.0485875606536865
    3. ' =
' → logprob: -16.548587799072266
    4. ' ' → logprob: -17.673587799072266
    5. '                    ' → logprob: -18.548587799072266
    6. '＝' → logprob: -19.048587799072266
    7. ' =)' → logprob: -19.048587799072266
    8. ' ' → logprob: -19.298587799072266
    9. '    ' → logprob: -19.673587799072266
    10. '=

' → logprob: -19.798587799072266

Token 188: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.575976550579071
    2. ' dist' → logprob: -0.825976550579071
    3. '	dist' → logprob: -10.325976371765137
    4. '    ' → logprob: -13.700976371765137
    5. '(dist' → logprob: -14.075976371765137
    6. 'd' → logprob: -14.450976371765137
    7. ' ' → logprob: -15.075976371765137
    8. '   ' → logprob: -15.200976371765137
    9. 'Dist' → logprob: -15.700976371765137
    10. ' ' → logprob: -15.700976371765137

Token 189: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4140441635390744e-05
    2. '[' → logprob: -11.375014305114746
    3. ' [' → logprob: -13.625014305114746
    4. 'i' → logprob: -14.375014305114746
    5. '[k' → logprob: -15.250014305114746
    6. '```' → logprob: -15.875014305114746
    7. '[j' → logprob: -16.12501335144043
    8. ' ' → logprob: -16.25001335144043
    9. '[I' → logprob: -17.25001335144043
    10. '   ' → logprob: -17.50001335144043

Token 190: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02707994543015957
    2. '[k' → logprob: -3.7770800590515137
    3. ' ][' → logprob: -5.902080059051514
    4. '[' → logprob: -8.027079582214355
    5. ']' → logprob: -8.277079582214355
    6. '[j' → logprob: -8.777079582214355
    7. ' [' → logprob: -9.777079582214355
    8. '   ' → logprob: -10.152079582214355
    9. '"][' → logprob: -10.652079582214355
    10. '>[' → logprob: -10.777079582214355

Token 191: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.8126592193730175e-05
    2. '[k' → logprob: -10.6250581741333
    3. ' k' → logprob: -10.8750581741333
    4. 'j' → logprob: -11.3750581741333
    5. '```' → logprob: -14.8750581741333
    6. '_k' → logprob: -15.0000581741333
    7. '	k' → logprob: -15.0000581741333
    8. '][' → logprob: -15.0000581741333
    9. '
' → logprob: -15.2500581741333
    10. ']' → logprob: -15.2500581741333

Token 192: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0047138528898358345
    2. ']+' → logprob: -5.379714012145996
    3. ' ]' → logprob: -9.504714012145996
    4. '[j' → logprob: -11.754714012145996
    5. '+' → logprob: -12.004714012145996
    6. '[' → logprob: -13.254714012145996
    7. '][' → logprob: -13.754714012145996
    8. '[k' → logprob: -14.379714012145996
    9. ' +' → logprob: -14.504714012145996
    10. '+]' → logprob: -14.754714012145996

Token 193: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6967979073524475
    2. ' +' → logprob: -0.6967979073524475
    3. '+k' → logprob: -6.571797847747803
    4. '[j' → logprob: -7.196797847747803
    5. '+j' → logprob: -7.321797847747803
    6. '[' → logprob: -7.321797847747803
    7. '[k' → logprob: -8.821798324584961
    8. '+w' → logprob: -11.696798324584961
    9. '+[' → logprob: -12.446798324584961
    10. ' ' → logprob: -13.196798324584961

Token 194: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5759519934654236
    2. ' dist' → logprob: -0.8259519934654236
    3. '	dist' → logprob: -11.82595157623291
    4. '_dist' → logprob: -12.82595157623291
    5. '(dist' → logprob: -13.82595157623291
    6. ' ' → logprob: -14.20095157623291
    7. ' ' → logprob: -14.82595157623291
    8. '<|end|>' → logprob: -15.95095157623291
    9. '.dist' → logprob: -16.200952529907227
    10. 'Dist' → logprob: -16.325952529907227

Token 195: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00010068230039905757
    2. '[' → logprob: -10.000101089477539
    3. '[j' → logprob: -10.500101089477539
    4. '[i' → logprob: -11.000101089477539
    5. '][' → logprob: -13.375101089477539
    6. ' [' → logprob: -13.375101089477539
    7. '```' → logprob: -13.375101089477539
    8. '[key' → logprob: -13.750101089477539
    9. ')[' → logprob: -14.500101089477539
    10. '_k' → logprob: -14.625101089477539

Token 196: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.09073582291603088
    2. ']' → logprob: -2.465735912322998
    3. '[j' → logprob: -6.465735912322998
    4. ' ][' → logprob: -9.71573543548584
    5. '"][' → logprob: -9.84073543548584
    6. ''][' → logprob: -10.21573543548584
    7. '   ' → logprob: -10.84073543548584
    8. ']][' → logprob: -11.59073543548584
    9. '```' → logprob: -11.71573543548584
    10. ' ]' → logprob: -11.71573543548584

Token 197: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2664456789934775e-06
    2. ' j' → logprob: -14.000000953674316
    3. ']' → logprob: -14.750000953674316
    4. '[j' → logprob: -17.250001907348633
    5. ')' → logprob: -19.375001907348633
    6. '```' → logprob: -19.500001907348633
    7. ' ' → logprob: -19.625001907348633
    8. '   ' → logprob: -19.625001907348633
    9. '	j' → logprob: -19.875001907348633
    10. '<|end|>' → logprob: -20.000001907348633

Token 198: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1666455715894699
    2. ')' → logprob: -2.1666455268859863
    3. '<|end|>' → logprob: -3.2916455268859863
    4. '
' → logprob: -7.666645526885986
    5. ']
' → logprob: -7.666645526885986
    6. ' ]' → logprob: -8.666646003723145
    7. '               ' → logprob: -9.041646003723145
    8. '```' → logprob: -9.416646003723145
    9. '<|end|>' → logprob: -9.416646003723145
    10. ')
' → logprob: -9.666646003723145

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08855898678302765
    2. '
' → logprob: -2.8385589122772217
    3. '       ' → logprob: -4.963559150695801
    4. 'return' → logprob: -5.213559150695801
    5. ' return' → logprob: -5.463559150695801
    6. '    
' → logprob: -5.838559150695801
    7. '\n' → logprob: -6.463559150695801
    8. '<|end|>' → logprob: -6.713559150695801
    9. ' for' → logprob: -7.338559150695801
    10. ' ' → logprob: -7.588559150695801

Token 200: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3634582757949829
    2. 'for' → logprob: -1.238458275794983
    3. '   ' → logprob: -4.738458156585693
    4. ' for' → logprob: -5.738458156585693
    5. ' return' → logprob: -5.863458156585693
    6. ' ' → logprob: -10.113458633422852
    7. '```' → logprob: -11.113458633422852
    8. '    
' → logprob: -11.613458633422852
    9. '  ' → logprob: -12.363458633422852
    10. '
' → logprob: -12.613458633422852

Token 201: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00861456897109747
    2. ' dist' → logprob: -4.758614540100098
    3. '(dist' → logprob: -18.383615493774414
    4. '	dist' → logprob: -18.508615493774414
    5. '_dist' → logprob: -21.133615493774414
    6. 'Dist' → logprob: -22.008615493774414
    7. ' ' → logprob: -22.133615493774414
    8. 'd' → logprob: -22.508615493774414
    9. '[' → logprob: -23.258615493774414
    10. '.dist' → logprob: -23.633615493774414

Token 202: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 203: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13484296202659607
    2. '<|end|>' → logprob: -2.384842872619629
    3. '
' → logprob: -4.509842872619629
    4. 'n' → logprob: -4.634842872619629
    5. '[' → logprob: -6.134842872619629
    6. 'd' → logprob: -6.259842872619629
    7. ' ' → logprob: -6.384842872619629
    8. 'def' → logprob: -6.634842872619629
    9. '```' → logprob: -6.759842872619629
    10. '.' → logprob: -6.884842872619629

Token 204: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.028497345745563507
    2. 'main' → logprob: -4.153497219085693
    3. ' bfs' → logprob: -4.778497219085693
    4. ' d' → logprob: -6.153497219085693
    5. ' shortest' → logprob: -7.403497219085693
    6. ' dfs' → logprob: -7.778497219085693
    7. 'b' → logprob: -8.403497695922852
    8. ' ' → logprob: -8.903497695922852
    9. 'd' → logprob: -9.028497695922852
    10. ' solve' → logprob: -9.653497695922852

Token 205: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001931970240548253
    2. '(graph' → logprob: -7.251932144165039
    3. '(' → logprob: -7.501932144165039
    4. ' ():' → logprob: -8.001932144165039
    5. '()' → logprob: -8.251932144165039
    6. '(n' → logprob: -10.876932144165039
    7. ' (' → logprob: -11.376932144165039
    8. '():
' → logprob: -11.876932144165039
    9. '()(' → logprob: -12.251932144165039
    10. '(problem' → logprob: -12.626932144165039

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025549851125106215
    2. ' ,' → logprob: -8.750255584716797
    3. '):' → logprob: -10.000255584716797
    4. ',m' → logprob: -10.375255584716797
    5. ',k' → logprob: -12.375255584716797
    6. ',n' → logprob: -12.500255584716797
    7. 'm' → logprob: -13.250255584716797
    8. ',p' → logprob: -13.375255584716797
    9. ')' → logprob: -13.750255584716797
    10. ',b' → logprob: -13.875255584716797

Token 207: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7653906941413879
    2. 'edges' → logprob: -0.7653906941413879
    3. 'graph' → logprob: -3.515390634536743
    4. ' edges' → logprob: -4.640390872955322
    5. 'k' → logprob: -4.765390872955322
    6. 'a' → logprob: -5.015390872955322
    7. ' m' → logprob: -5.015390872955322
    8. 'g' → logprob: -6.390390872955322
    9. ' graph' → logprob: -6.765390872955322
    10. 's' → logprob: -7.390390872955322

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.615255839889869e-05
    2. '):' → logprob: -9.750096321105957
    3. ' ,' → logprob: -10.375096321105957
    4. ',n' → logprob: -13.250096321105957
    5. ',input' → logprob: -14.125096321105957
    6. ')' → logprob: -14.375096321105957
    7. ',s' → logprob: -14.500096321105957
    8. ',m' → logprob: -14.750096321105957
    9. ',
' → logprob: -15.000096321105957
    10. ',p' → logprob: -15.250096321105957

Token 209: ' l' (ID: 305)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.07263277471065521
    2. 'ab' → logprob: -3.6976327896118164
    3. ' edges' → logprob: -3.9476327896118164
    4. 'abc' → logprob: -4.197632789611816
    5. 'edge' → logprob: -5.947632789611816
    6. 'a' → logprob: -6.697632789611816
    7. 'roads' → logprob: -6.822632789611816
    8. 'k' → logprob: -6.822632789611816
    9. 'abcd' → logprob: -7.072632789611816
    10. 'uv' → logprob: -7.197632789611816

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009667263948358595
    2. '):' → logprob: -7.000966548919678
    3. ' ,' → logprob: -9.875967025756836
    4. ')' → logprob: -13.875967025756836
    5. '):
' → logprob: -14.250967025756836
    6. ' ):' → logprob: -14.750967025756836
    7. ',
' → logprob: -14.875967025756836
    8. '   ' → logprob: -15.000967025756836
    9. '_,' → logprob: -15.875967025756836
    10. ',input' → logprob: -16.000967025756836

Token 211: ' a' (ID: 261)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.12835057079792023
    2. ' edges' → logprob: -3.0033504962921143
    3. 'ab' → logprob: -3.1283504962921143
    4. 'roads' → logprob: -4.753350734710693
    5. 'abc' → logprob: -5.128350734710693
    6. 'graph' → logprob: -5.628350734710693
    7. 'edge' → logprob: -6.628350734710693
    8. 'road' → logprob: -6.878350734710693
    9. 'AB' → logprob: -7.128350734710693
    10. ' roads' → logprob: -7.253350734710693

Token 212: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10265637934207916
    2. ',' → logprob: -2.352656364440918
    3. 's' → logprob: -6.977656364440918
    4. '_list' → logprob: -7.352656364440918
    5. '):
' → logprob: -7.977656364440918
    6. '[]):' → logprob: -8.977656364440918
    7. ' ):' → logprob: -9.102656364440918
    8. ')' → logprob: -9.477656364440918
    9. ',b' → logprob: -10.227656364440918
    10. ' ,' → logprob: -10.477656364440918

Token 213: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00441587483510375
    2. ' b' → logprob: -5.879415988922119
    3. 'edges' → logprob: -6.879415988922119
    4. 'k' → logprob: -9.004415512084961
    5. 's' → logprob: -9.504415512084961
    6. ' edges' → logprob: -9.629415512084961
    7. 'q' → logprob: -9.879415512084961
    8. 'graph' → logprob: -9.879415512084961
    9. ')' → logprob: -10.629415512084961
    10. 'p' → logprob: -10.754415512084961

Token 214: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02475626766681671
    2. ',' → logprob: -3.7747561931610107
    3. ')' → logprob: -6.52475643157959
    4. ' ):' → logprob: -10.77475643157959
    5. '):
' → logprob: -11.14975643157959
    6. ',n' → logprob: -13.77475643157959
    7. ' ,' → logprob: -13.89975643157959
    8. '[]):' → logprob: -14.52475643157959
    9. '):

' → logprob: -14.77475643157959
    10. '),' → logprob: -14.89975643157959

Token 215: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07102707028388977
    2. 'k' → logprob: -3.1960270404815674
    3. ')' → logprob: -4.6960272789001465
    4. ' c' → logprob: -5.5710272789001465
    5. 'q' → logprob: -5.9460272789001465
    6. 'edges' → logprob: -5.9460272789001465
    7. 'p' → logprob: -6.1960272789001465
    8. 'x' → logprob: -6.4460272789001465
    9. 'd' → logprob: -7.3210272789001465
    10. 's' → logprob: -7.5710272789001465

Token 216: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00020139472326263785
    2. ')' → logprob: -9.000201225280762
    3. '):
' → logprob: -9.625201225280762
    4. ',' → logprob: -11.875201225280762
    5. ' ):' → logprob: -12.375201225280762
    6. '):
' → logprob: -15.375201225280762
    7. ':' → logprob: -16.250202178955078
    8. ')：' → logprob: -16.375202178955078
    9. '):

' → logprob: -16.375202178955078
    10. '）：' → logprob: -16.875202178955078

Token 217: ' q' (ID: 2335)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1193523406982422
    2. '):' → logprob: -1.8693523406982422
    3. 'edges' → logprob: -1.8693523406982422
    4. ' edges' → logprob: -2.494352340698242
    5. 'k' → logprob: -3.369352340698242
    6. 'q' → logprob: -3.369352340698242
    7. 'g' → logprob: -3.494352340698242
    8. ' d' → logprob: -3.869352340698242
    9. 'graph' → logprob: -3.994352340698242
    10. '):
' → logprob: -3.994352340698242

Token 218: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000273136975010857
    2. ')' → logprob: -9.000272750854492
    3. ',' → logprob: -9.125272750854492
    4. ' ):' → logprob: -10.500272750854492
    5. '):
' → logprob: -11.375272750854492
    6. ':' → logprob: -14.750272750854492
    7. '):
' → logprob: -15.375272750854492
    8. ')：' → logprob: -15.875272750854492
    9. '   ' → logprob: -16.125272750854492
    10. '=' → logprob: -16.250272750854492

Token 219: ' s' (ID: 265)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9584658145904541
    2. 'd' → logprob: -2.333465814590454
    3. 's' → logprob: -2.333465814590454
    4. 'query' → logprob: -2.333465814590454
    5. 'queries' → logprob: -2.333465814590454
    6. ' queries' → logprob: -2.583465814590454
    7. 'p' → logprob: -4.208465576171875
    8. '   ' → logprob: -4.458465576171875
    9. 'st' → logprob: -4.458465576171875
    10. 'xyz' → logprob: -4.583465576171875

Token 220: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014272922649979591
    2. ',' → logprob: -4.389272689819336
    3. '):
' → logprob: -6.764272689819336
    4. 's' → logprob: -8.139272689819336
    5. ')' → logprob: -8.639272689819336
    6. ' ):' → logprob: -9.264272689819336
    7. '):
' → logprob: -11.514272689819336
    8. '[]):' → logprob: -12.139272689819336
    9. '_list' → logprob: -12.264272689819336
    10. '):

' → logprob: -12.889272689819336

Token 221: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.007505940739065409
    2. 'd' → logprob: -5.382505893707275
    3. ' t' → logprob: -6.132505893707275
    4. 'e' → logprob: -8.507506370544434
    5. 'x' → logprob: -9.382506370544434
    6. 'g' → logprob: -9.632506370544434
    7. ')' → logprob: -10.132506370544434
    8. 'ds' → logprob: -10.257506370544434
    9. 'queries' → logprob: -10.257506370544434
    10. '   ' → logprob: -10.382506370544434

Token 222: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001737431448418647
    2. ')' → logprob: -9.500173568725586
    3. '):
' → logprob: -9.625173568725586
    4. ' ):' → logprob: -10.375173568725586
    5. ',' → logprob: -14.500173568725586
    6. '):
' → logprob: -14.625173568725586
    7. ':' → logprob: -16.000173568725586
    8. ')：' → logprob: -16.250173568725586
    9. '):

' → logprob: -16.375173568725586
    10. 's' → logprob: -16.500173568725586

Token 223: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4076571464538574
    2. '   ' → logprob: -1.1576571464538574
    3. ':
' → logprob: -4.657657146453857
    4. ' :' → logprob: -5.282657146453857
    5. ',' → logprob: -6.407657146453857
    6. '
' → logprob: -6.782657146453857
    7. '):' → logprob: -6.907657146453857
    8. '    
' → logprob: -7.657657146453857
    9. '):
' → logprob: -7.907657146453857
    10. ' :
' → logprob: -8.157657623291016

Token 224: ' g' (ID: 329)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.6029844880104065
    2. 'graph' → logprob: -0.8529844880104065
    3. '   ' → logprob: -3.8529844284057617
    4. 'g' (adapté à ' g') → logprob: -5.852984428405762
    5. ' g' → logprob: -6.102984428405762
    6. '	graph' → logprob: -8.852984428405762
    7. ' ' → logprob: -9.852984428405762
    8. '    ' → logprob: -10.352984428405762
    9. '
' → logprob: -10.852984428405762
    10. '    
' → logprob: -11.415484428405762

Token 225: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28416016697883606
    2. ' =' → logprob: -1.7841601371765137
    3. 'raph' → logprob: -2.5341601371765137
    4. 'r' → logprob: -10.909160614013672
    5. 'ph' → logprob: -11.034160614013672
    6. '=g' → logprob: -11.409160614013672
    7. 'rap' → logprob: -12.284160614013672
    8. '=
' → logprob: -12.409160614013672
    9. '   ' → logprob: -12.534160614013672
    10. 'h' → logprob: -12.534160614013672

Token 226: ' Graph' (ID: 15559)
  Prédit: 'Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -0.5759432315826416
    2. ' Graph' → logprob: -0.8259432315826416
    3. '(Graph' → logprob: -13.700942993164062
    4. '   ' → logprob: -14.075942993164062
    5. 'graph' → logprob: -14.325942993164062
    6. ' graph' → logprob: -14.950942993164062
    7. ' ' → logprob: -15.200942993164062
    8. '.Graph' → logprob: -15.325942993164062
    9. 'raph' → logprob: -15.825942993164062
    10. '_graph' → logprob: -16.075942993164062

Token 227: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.13388703338569e-06
    2. '(' → logprob: -11.625009536743164
    3. '(
' → logprob: -16.375009536743164
    4. 'n' → logprob: -16.750009536743164
    5. ' (' → logprob: -17.125009536743164
    6. '((' → logprob: -18.875009536743164
    7. '(l' → logprob: -19.500009536743164
    8. '(s' → logprob: -19.750009536743164
    9. ')(' → logprob: -19.750009536743164
    10. ' n' → logprob: -20.250009536743164

Token 228: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01107140351086855
    2. ')
' → logprob: -4.51107120513916
    3. ')
' → logprob: -11.01107120513916
    4. ' )' → logprob: -12.51107120513916
    5. ')

' → logprob: -13.01107120513916
    6. ')add' → logprob: -15.63607120513916
    7. ')`' → logprob: -16.136072158813477
    8. '))' → logprob: -16.136072158813477
    9. ' )
' → logprob: -16.386072158813477
    10. ')`
' → logprob: -16.511072158813477

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6262187361717224
    2. ' for' → logprob: -1.1262187957763672
    3. 'for' → logprob: -2.876218795776367
    4. '
' → logprob: -3.376218795776367
    5. '    
' → logprob: -3.626218795776367
    6. '<|end|>' → logprob: -4.751218795776367
    7. '  
' → logprob: -5.001218795776367
    8. ' 
' → logprob: -5.626218795776367
    9. '	for' → logprob: -6.126218795776367
    10. ' ' → logprob: -7.001218795776367

Token 230: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00408053956925869
    2. ' for' → logprob: -5.504080772399902
    3. '	for' → logprob: -13.379080772399902
    4. '   ' → logprob: -14.504080772399902
    5. '<|end|>' → logprob: -17.129079818725586
    6. '```' → logprob: -17.629079818725586
    7. ' ' → logprob: -18.629079818725586
    8. '
' → logprob: -18.879079818725586
    9. 'i' → logprob: -19.379079818725586
    10. '    
' → logprob: -19.379079818725586

Token 231: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4765087366104126
    2. 'i' → logprob: -0.9765087366104126
    3. '_i' → logprob: -6.351508617401123
    4. ' _' → logprob: -7.851508617401123
    5. '_' → logprob: -8.351509094238281
    6. ' u' → logprob: -11.101509094238281
    7. ' ' → logprob: -11.101509094238281
    8. 'u' → logprob: -11.226509094238281
    9. '	i' → logprob: -12.351509094238281
    10. '(i' → logprob: -12.476509094238281

Token 232: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0050592985935509205
    2. 'in' → logprob: -5.380059242248535
    3. ' ' → logprob: -7.755059242248535
    4. '  ' → logprob: -11.755059242248535
    5. ',' → logprob: -14.130059242248535
    6. '	in' → logprob: -14.630059242248535
    7. ' i' → logprob: -14.880059242248535
    8. ' _' → logprob: -15.505059242248535
    9. 'range' → logprob: -15.505059242248535
    10. '   ' → logprob: -15.630059242248535

Token 233: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859759286046028
    2. ' range' → logprob: -3.048597574234009
    3. ' ' → logprob: -11.79859733581543
    4. '   ' → logprob: -13.67359733581543
    5. '  ' → logprob: -14.42359733581543
    6. '(range' → logprob: -14.92359733581543
    7. 'm' → logprob: -15.42359733581543
    8. 'r' → logprob: -15.67359733581543
    9. '	range' → logprob: -15.79859733581543
    10. 'ran' → logprob: -17.04859733581543

Token 234: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -5.5861724831629544e-05
    2. 'm' → logprob: -10.000056266784668
    3. '(' → logprob: -11.875056266784668
    4. ' (' → logprob: -13.250056266784668
    5. ' m' → logprob: -13.875056266784668
    6. '(
' → logprob: -14.750056266784668
    7. '	m' → logprob: -15.750056266784668
    8. '(M' → logprob: -17.00005531311035
    9. '(n' → logprob: -17.37505531311035
    10. '   ' → logprob: -17.50005531311035

Token 235: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005175283877179027
    2. ' ):' → logprob: -7.62551736831665
    3. '):
' → logprob: -10.750517845153809
    4. ':' → logprob: -11.875517845153809
    5. ')' → logprob: -14.625517845153809
    6. ',' → logprob: -16.000516891479492
    7. ']:' → logprob: -16.500516891479492
    8. '():' → logprob: -16.500516891479492
    9. '):
' → logprob: -16.875516891479492
    10. '   ' → logprob: -17.125516891479492

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04484529420733452
    2. '   ' → logprob: -3.5448453426361084
    3. ' g' → logprob: -4.794845104217529
    4. '<|end|>' → logprob: -6.294845104217529
    5. ' ' → logprob: -6.544845104217529
    6. '    ' → logprob: -7.169845104217529
    7. '	' → logprob: -7.794845104217529
    8. 'g' → logprob: -7.794845104217529
    9. '	g' → logprob: -7.794845104217529
    10. ')' → logprob: -8.544845581054688

Token 237: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.03917399048805237
    2. 'u' → logprob: -3.5391740798950195
    3. ' g' → logprob: -5.0391740798950195
    4. '   ' → logprob: -6.2891740798950195
    5. ' u' → logprob: -7.1641740798950195
    6. 'if' → logprob: -9.03917407989502
    7. '       ' → logprob: -9.41417407989502
    8. ' if' → logprob: -10.16417407989502
    9. '	g' → logprob: -11.41417407989502
    10. '    
' → logprob: -12.91417407989502

Token 238: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.004123753868043423
    2. '.' → logprob: -5.504123687744141
    3. ' .' → logprob: -10.37912368774414
    4. '.append' → logprob: -12.37912368774414
    5. '   ' → logprob: -13.00412368774414
    6. ').' → logprob: -13.25412368774414
    7. '`.' → logprob: -14.12912368774414
    8. 'add' → logprob: -14.50412368774414
    9. '.ad' → logprob: -14.62912368774414
    10. '.import' → logprob: -15.12912368774414

Token 239: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.00013738969573751092
    2. '_' → logprob: -9.000137329101562
    3. '_edges' → logprob: -11.750137329101562
    4. '_ed' → logprob: -13.250137329101562
    5. '_code' → logprob: -13.750137329101562
    6. '_e' → logprob: -13.875137329101562
    7. ' _' → logprob: -14.250137329101562
    8. '_line' → logprob: -14.875137329101562
    9. '_
' → logprob: -16.375137329101562
    10. '```' → logprob: -16.625137329101562

Token 240: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.596781946020201e-05
    2. '(' → logprob: -10.000045776367188
    3. '(
' → logprob: -15.000045776367188
    4. 'a' → logprob: -15.875045776367188
    5. '((' → logprob: -16.875045776367188
    6. '(i' → logprob: -17.375045776367188
    7. '(s' → logprob: -18.750045776367188
    8. ' (' → logprob: -18.750045776367188
    9. '(int' → logprob: -19.000045776367188
    10. ' ' → logprob: -21.375045776367188

Token 241: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.394135612528771e-05
    2. '[' → logprob: -10.500043869018555
    3. '[
' → logprob: -11.750043869018555
    4. ' [' → logprob: -12.500043869018555
    5. 'i' → logprob: -13.250043869018555
    6. ' ' → logprob: -14.500043869018555
    7. '
' → logprob: -14.500043869018555
    8. '[I' → logprob: -15.125043869018555
    9. '[a' → logprob: -15.250043869018555
    10. '][' → logprob: -15.500043869018555

Token 242: ']-' (ID: 27107)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.21524736285209656
    2. '],' → logprob: -1.715247392654419
    3. '][' → logprob: -4.71524715423584
    4. ']' → logprob: -5.59024715423584
    5. ',' → logprob: -7.71524715423584
    6. ' ],' → logprob: -8.46524715423584
    7. '],[' → logprob: -9.71524715423584
    8. '[' → logprob: -9.71524715423584
    9. 'i' → logprob: -9.96524715423584
    10. ']-' → logprob: -10.09024715423584

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.875007629394531
    4. '<|end|>' → logprob: -16.12500762939453
    5. '```' → logprob: -18.37500762939453
    6. ',' → logprob: -19.06250762939453
    7. '[' → logprob: -19.43750762939453
    8. '0' → logprob: -19.50000762939453
    9. 'def' → logprob: -19.81250762939453
    10. '...' → logprob: -19.87500762939453

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003102850168943405
    2. ' ,' → logprob: -6.003102779388428
    3. ',b' → logprob: -7.378102779388428
    4. 'b' → logprob: -14.003103256225586
    5. ',
' → logprob: -14.253103256225586
    6. ' b' → logprob: -14.378103256225586
    7. ')' → logprob: -16.128103256225586
    8. ' ,
' → logprob: -17.128103256225586
    9. ' ' → logprob: -17.628103256225586
    10. '‌,' → logprob: -18.128103256225586

Token 245: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001593195047462359
    2. ' b' → logprob: -8.75015926361084
    3. '   ' → logprob: -14.00015926361084
    4. '	b' → logprob: -17.875160217285156
    5. '    ' → logprob: -19.875160217285156
    6. '       ' → logprob: -20.000160217285156
    7. '           ' → logprob: -21.500160217285156
    8. '  ' → logprob: -21.625160217285156
    9. ' ' → logprob: -21.875160217285156
    10. '     ' → logprob: -21.875160217285156

Token 246: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.75
    3. '[' → logprob: -17.125
    4. '[
' → logprob: -18.25
    5. '(i' → logprob: -19.25
    6. '{i' → logprob: -19.375
    7. ' [' → logprob: -20.0
    8. ' i' → logprob: -20.125
    9. '```' → logprob: -20.125
    10. ')' → logprob: -20.875

Token 247: ']-' (ID: 27107)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.069732666015625
    2. ']-' → logprob: -2.944732666015625
    3. '-' → logprob: -4.444732666015625
    4. ']' → logprob: -5.944732666015625
    5. ' -' → logprob: -8.444732666015625
    6. 'i' → logprob: -9.819732666015625
    7. '[' → logprob: -10.194732666015625
    8. '][' → logprob: -10.944732666015625
    9. '1' → logprob: -11.569732666015625
    10. '[
' → logprob: -11.694732666015625

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. ' ' → logprob: -11.250014305114746
    3. '<|end|>' → logprob: -14.937514305114746
    4. '```' → logprob: -16.50001335144043
    5. ',' → logprob: -17.00001335144043
    6. '۱' → logprob: -17.18751335144043
    7. 's' → logprob: -17.31251335144043
    8. '...' → logprob: -17.37501335144043
    9. '-' → logprob: -17.75001335144043
    10. ')' → logprob: -17.87501335144043

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007894979789853096
    2. ' ,' → logprob: -7.250789642333984
    3. ',c' → logprob: -9.500789642333984
    4. ')' → logprob: -12.500789642333984
    5. ',
' → logprob: -15.250789642333984
    6. '   ' → logprob: -15.375789642333984
    7. ' ' → logprob: -15.625789642333984
    8. 'c' → logprob: -15.625789642333984
    9. '),' → logprob: -16.375789642333984
    10. ' c' → logprob: -17.125789642333984

Token 250: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0022033092100173235
    2. ' c' → logprob: -6.127203464508057
    3. ' ' → logprob: -12.252202987670898
    4. ')c' → logprob: -12.252202987670898
    5. '	c' → logprob: -12.877202987670898
    6. '1' → logprob: -12.877202987670898
    7. '   ' → logprob: -13.752202987670898
    8. ')' → logprob: -14.127202987670898
    9. '  ' → logprob: -14.877202987670898
    10. '
' → logprob: -15.127202987670898

Token 251: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.584239938296378e-06
    2. '[' → logprob: -11.875007629394531
    3. ' [' → logprob: -15.250007629394531
    4. '[
' → logprob: -16.62500762939453
    5. ')[' → logprob: -17.12500762939453
    6. '[u' → logprob: -17.50000762939453
    7. ')' → logprob: -17.62500762939453
    8. '[s' → logprob: -18.25000762939453
    9. '[a' → logprob: -18.37500762939453
    10. '[j' → logprob: -18.62500762939453

Token 252: '])
' (ID: 5169)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01866770349442959
    2. '][' → logprob: -4.393667697906494
    3. '])' → logprob: -5.768667697906494
    4. ']' → logprob: -5.893667697906494
    5. '[' → logprob: -8.893668174743652
    6. ' [' → logprob: -9.768668174743652
    7. 'i' → logprob: -10.268668174743652
    8. ' i' → logprob: -11.768668174743652
    9. '   ' → logprob: -12.143668174743652
    10. ')' → logprob: -13.018668174743652

Token 253: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5959453582763672
    2. '   ' → logprob: -1.2209453582763672
    3. '<|end|>' → logprob: -2.095945358276367
    4. ' for' → logprob: -4.470945358276367
    5. ' distances' → logprob: -5.720945358276367
    6. '    
' → logprob: -5.845945358276367
    7. ' if' → logprob: -6.345945358276367
    8. 's' → logprob: -6.345945358276367
    9. ' s' → logprob: -6.595945358276367
    10. 'for' → logprob: -6.595945358276367

Token 254: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.008985031396150589
    2. 'd' → logprob: -5.1339850425720215
    3. ' dist' → logprob: -6.1339850425720215
    4. 'dp' → logprob: -7.5089850425720215
    5. '   ' → logprob: -9.258984565734863
    6. 'distance' → logprob: -9.758984565734863
    7. '    
' → logprob: -10.133984565734863
    8. 'D' → logprob: -10.508984565734863
    9. 'dis' → logprob: -11.008984565734863
    10. 'res' → logprob: -11.008984565734863

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014293497428297997
    2. '=' → logprob: -4.264293670654297
    3. ',' → logprob: -9.389293670654297
    4. 's' → logprob: -10.889293670654297
    5. '[' → logprob: -11.264293670654297
    6. ' ' → logprob: -12.139293670654297
    7. ' ,' → logprob: -12.389293670654297
    8. '  ' → logprob: -13.264293670654297
    9. '_' → logprob: -13.764293670654297
    10. ' =
' → logprob: -14.264293670654297

Token 256: ' war' (ID: 3656)
  Prédit: ' war'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' war' → logprob: -0.12696431577205658
    2. 'war' → logprob: -2.1269643306732178
    3. ' ' → logprob: -10.876964569091797
    4. ' ' → logprob: -12.376964569091797
    5. ' warp' → logprob: -13.001964569091797
    6. 'War' → logprob: -13.626964569091797
    7. 'warf' → logprob: -13.751964569091797
    8. 'ware' → logprob: -13.751964569091797
    9. '   ' → logprob: -14.001964569091797
    10. 'warp' → logprob: -14.001964569091797

Token 257: 'shall' (ID: 30275)
  Prédit: 'shall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shall' → logprob: -0.0019301822176203132
    2. 's' → logprob: -6.876930236816406
    3. 'fall' → logprob: -7.501930236816406
    4. 'all' → logprob: -9.126930236816406
    5. 'sh' → logprob: -9.376930236816406
    6. 'shaw' → logprob: -10.376930236816406
    7. 'shal' → logprob: -10.751930236816406
    8. 'hall' → logprob: -10.876930236816406
    9. 'small' → logprob: -11.001930236816406
    10. ' shall' → logprob: -11.376930236816406

Token 258: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -3.650518920039758e-06
    2. '_' → logprob: -12.750003814697266
    3. '_floor' → logprob: -15.875003814697266
    4. 'f' → logprob: -16.250003814697266
    5. '_F' → logprob: -16.500003814697266
    6. '_g' → logprob: -16.500003814697266
    7. ' _' → logprob: -17.125003814697266
    8. ' Floyd' → logprob: -17.250003814697266
    9. '_fifo' → logprob: -17.375003814697266
    10. ')_' → logprob: -17.875003814697266

Token 259: 'loyd' (ID: 58664)
  Prédit: 'loyd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loyd' → logprob: -0.000229046301683411
    2. 'lo' → logprob: -8.625228881835938
    3. 'l' → logprob: -10.250228881835938
    4. 'loid' → logprob: -11.750228881835938
    5. 'oy' → logprob: -13.500228881835938
    6. '```' → logprob: -13.625228881835938
    7. '   ' → logprob: -14.500228881835938
    8. 'lord' → logprob: -14.750228881835938
    9. 'r' → logprob: -15.000228881835938
    10. 'll' → logprob: -15.500228881835938

Token 260: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.00019185843120794743
    2. '(' → logprob: -8.625191688537598
    3. '(graph' → logprob: -11.375191688537598
    4. ' (' → logprob: -14.250191688537598
    5. '(G' → logprob: -16.500192642211914
    6. '(
' → logprob: -17.750192642211914
    7. '(gr' → logprob: -18.250192642211914
    8. '(

' → logprob: -18.375192642211914
    9. ' ' → logprob: -19.250192642211914
    10. '((' → logprob: -19.375192642211914

Token 261: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032397438772022724
    2. ')
' → logprob: -5.753239631652832
    3. ' )' → logprob: -10.503239631652832
    4. ')
' → logprob: -10.628239631652832
    5. ')

' → logprob: -11.628239631652832
    6. ' )
' → logprob: -15.003239631652832
    7. ' ' → logprob: -15.253239631652832
    8. ')s' → logprob: -15.378239631652832
    9. '[' → logprob: -15.878239631652832
    10. ')return' → logprob: -16.12824058532715

Token 262: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6485248804092407
    2. '   ' → logprob: -1.3985248804092407
    3. ' for' → logprob: -1.8985248804092407
    4. 'answers' → logprob: -4.023524761199951
    5. 'answer' → logprob: -4.148524761199951
    6. 'result' → logprob: -4.273524761199951
    7. 'res' → logprob: -4.523524761199951
    8. 'results' → logprob: -4.898524761199951
    9. ' answers' → logprob: -5.773524761199951
    10. '    
' → logprob: -5.898524761199951

Token 263: ' g' (ID: 329)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6318643093109131
    2. 'res' → logprob: -1.631864309310913
    3. 'ans' → logprob: -2.506864309310913
    4. 'dp' → logprob: -2.631864309310913
    5. 'answer' → logprob: -3.256864309310913
    6. 'answers' → logprob: -3.381864309310913
    7. 'result' → logprob: -3.381864309310913
    8. 'results' → logprob: -5.006864547729492
    9. 'dist' → logprob: -6.381864547729492
    10. 'count' → logprob: -6.506864547729492

Token 264: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9827145338058472
    2. '.' → logprob: -1.4827145338058472
    3. ' =' → logprob: -2.1077146530151367
    4. '=' → logprob: -2.6077146530151367
    5. '_new' → logprob: -2.8577146530151367
    6. '_' → logprob: -3.7327146530151367
    7. '_edges' → logprob: -4.357714653015137
    8. '_s' → logprob: -4.482714653015137
    9. '_dist' → logprob: -4.607714653015137
    10. 's' → logprob: -4.732714653015137

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11283987760543823
    2. '=' → logprob: -2.237839937210083
    3. ' ' → logprob: -11.362839698791504
    4. '.' → logprob: -12.487839698791504
    5. 'g' → logprob: -14.362839698791504
    6. ' =
' → logprob: -15.112839698791504
    7. '  ' → logprob: -15.987839698791504
    8. '   ' → logprob: -16.36284065246582
    9. '.=' → logprob: -16.42534065246582
    10. '=g' → logprob: -16.48784065246582

Token 266: ' Graph' (ID: 15559)
  Prédit: 'Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -0.14271017909049988
    2. ' Graph' → logprob: -2.0177102088928223
    3. '(Graph' → logprob: -11.142709732055664
    4. '   ' → logprob: -11.892709732055664
    5. 'Graphs' → logprob: -12.642709732055664
    6. 'raph' → logprob: -12.767709732055664
    7. '.Graph' → logprob: -13.142709732055664
    8. ' ' → logprob: -13.642709732055664
    9. 'class' → logprob: -14.017709732055664
    10. '  ' → logprob: -14.267709732055664

Token 267: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.158350151963532e-05
    2. 'n' → logprob: -9.875061988830566
    3. ' n' → logprob: -12.500061988830566
    4. '(' → logprob: -12.500061988830566
    5. '(len' → logprob: -13.000061988830566
    6. ' (' → logprob: -15.875061988830566
    7. '(s' → logprob: -16.62506103515625
    8. '[n' → logprob: -16.75006103515625
    9. '(l' → logprob: -17.87506103515625
    10. '(
' → logprob: -18.12506103515625

Token 268: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009249189170077443
    2. ')
' → logprob: -7.000925064086914
    3. ' )' → logprob: -11.875925064086914
    4. ')
' → logprob: -13.000925064086914
    5. ')

' → logprob: -13.500925064086914
    6. '+' → logprob: -13.750925064086914
    7. '*' → logprob: -14.500925064086914
    8. ',' → logprob: -15.125925064086914
    9. ')n' → logprob: -15.250925064086914
    10. '   ' → logprob: -16.125925064086914

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007630296517163515
    2. 'for' → logprob: -5.007630348205566
    3. ' for' → logprob: -7.007630348205566
    4. '    
' → logprob: -12.507630348205566
    5. '<|end|>' → logprob: -12.757630348205566
    6. '	for' → logprob: -13.632630348205566
    7. '
' → logprob: -13.757630348205566
    8. '```' → logprob: -14.507630348205566
    9. 'def' → logprob: -16.75762939453125
    10. '       ' → logprob: -17.00762939453125

Token 270: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004890497075393796
    2. ' for' → logprob: -7.875489234924316
    3. '   ' → logprob: -9.125489234924316
    4. 'import' → logprob: -16.12548828125
    5. '	for' → logprob: -16.75048828125
    6. 'from' → logprob: -17.25048828125
    7. '
' → logprob: -17.37548828125
    8. ' ' → logprob: -18.25048828125
    9. '    
' → logprob: -18.50048828125
    10. '  ' → logprob: -18.62548828125

Token 271: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01806705817580223
    2. ' i' → logprob: -4.518066883087158
    3. 'u' → logprob: -5.143066883087158
    4. 'k' → logprob: -7.518066883087158
    5. '(i' → logprob: -8.518067359924316
    6. ' u' → logprob: -8.893067359924316
    7. '(u' → logprob: -9.143067359924316
    8. ' ' → logprob: -10.393067359924316
    9. '_i' → logprob: -10.393067359924316
    10. '   ' → logprob: -10.393067359924316

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019419649615883827
    2. 'in' → logprob: -6.251942157745361
    3. ' ' → logprob: -11.876941680908203
    4. 'range' → logprob: -13.376941680908203
    5. '   ' → logprob: -13.876941680908203
    6. 'n' → logprob: -13.876941680908203
    7. ',' → logprob: -14.126941680908203
    8. '  ' → logprob: -14.751941680908203
    9. '    ' → logprob: -15.126941680908203
    10. 's' → logprob: -15.376941680908203

Token 273: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03364938497543335
    2. ' range' → logprob: -3.408649444580078
    3. '(range' → logprob: -13.033649444580078
    4. 'ange' → logprob: -14.533649444580078
    5. ' ' → logprob: -14.908649444580078
    6. '   ' → logprob: -15.408649444580078
    7. 'r' → logprob: -15.533649444580078
    8. 'rang' → logprob: -16.908649444580078
    9. '	range' → logprob: -17.033649444580078
    10. '  ' → logprob: -17.408649444580078

Token 274: '(n' (ID: 2406)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.043527062982320786
    2. 'm' → logprob: -3.168527126312256
    3. '(' → logprob: -8.793526649475098
    4. '(l' → logprob: -8.918526649475098
    5. ' m' → logprob: -9.168526649475098
    6. ' (' → logprob: -10.293526649475098
    7. '   ' → logprob: -10.543526649475098
    8. '(n' → logprob: -10.543526649475098
    9. '(len' → logprob: -10.668526649475098
    10. 'l' → logprob: -11.793526649475098

Token 275: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.28314676880836487
    2. '):' → logprob: -1.4081467390060425
    3. ')' → logprob: -6.533146858215332
    4. '   ' → logprob: -7.658146858215332
    5. '):

' → logprob: -10.783146858215332
    6. '       ' → logprob: -10.908146858215332
    7. '):
' → logprob: -12.033146858215332
    8. ':' → logprob: -12.408146858215332
    9. ':
' → logprob: -12.783146858215332
    10. ' ):
' → logprob: -13.158146858215332

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5937492251396179
    2. '   ' → logprob: -1.5937492847442627
    3. ' for' → logprob: -1.5937492847442627
    4. 'for' → logprob: -3.2187492847442627
    5. '	for' → logprob: -7.093749046325684
    6. '<|end|>' → logprob: -8.593749046325684
    7. '	   ' → logprob: -8.718749046325684
    8. ' ' → logprob: -8.968749046325684
    9. '	' → logprob: -10.343749046325684
    10. ',' → logprob: -10.718749046325684

Token 277: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16180375218391418
    2. ' for' → logprob: -1.9118037223815918
    3. '   ' → logprob: -6.786803722381592
    4. '       ' → logprob: -8.03680419921875
    5. '	for' → logprob: -9.91180419921875
    6. 'g' → logprob: -9.91180419921875
    7. ' g' → logprob: -11.03680419921875
    8. ' ' → logprob: -12.66180419921875
    9. 'if' → logprob: -13.66180419921875
    10. 'dist' → logprob: -13.78680419921875

Token 278: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07623426616191864
    2. '(j' → logprob: -2.9512343406677246
    3. ' j' → logprob: -3.9512343406677246
    4. ' (' → logprob: -6.576234340667725
    5. '(v' → logprob: -8.076233863830566
    6. 'v' → logprob: -9.451233863830566
    7. '   ' → logprob: -9.951233863830566
    8. '(u' → logprob: -10.701233863830566
    9. '	j' → logprob: -11.451233863830566
    10. '_j' → logprob: -11.951233863830566

Token 279: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02976194955408573
    2. 'in' → logprob: -3.529762029647827
    3. 'range' → logprob: -12.404762268066406
    4. ' ' → logprob: -12.779762268066406
    5. '	in' → logprob: -13.404762268066406
    6. '   ' → logprob: -14.279762268066406
    7. 'n' → logprob: -14.279762268066406
    8. '    ' → logprob: -14.404762268066406
    9. 'In' → logprob: -15.529762268066406
    10. '<|end|>' → logprob: -15.779762268066406

Token 280: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868919014930725
    2. 'range' → logprob: -1.1368918418884277
    3. '(range' → logprob: -11.011892318725586
    4. '   ' → logprob: -12.636892318725586
    5. ' ' → logprob: -15.011892318725586
    6. 'in' → logprob: -15.261892318725586
    7. ' in' → logprob: -15.636892318725586
    8. '	range' → logprob: -15.886892318725586
    9. 'ran' → logprob: -16.511892318725586
    10. 'rang' → logprob: -16.636892318725586

Token 281: '(i' (ID: 3649)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.6128921508789062
    2. ' range' → logprob: -1.3628921508789062
    3. 'range' → logprob: -1.8628921508789062
    4. '(n' → logprob: -3.1128921508789062
    5. ' in' → logprob: -6.487892150878906
    6. 'in' → logprob: -7.237892150878906
    7. ' (' → logprob: -8.862892150878906
    8. '   ' → logprob: -9.487892150878906
    9. '(' → logprob: -9.737892150878906
    10. 'n' → logprob: -11.362892150878906

Token 282: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.042636457830667496
    2. ' +' → logprob: -3.5426363945007324
    3. ',n' → logprob: -4.792636394500732
    4. ',' → logprob: -6.042636394500732
    5. ' ,' → logprob: -7.542636394500732
    6. '+n' → logprob: -7.542636394500732
    7. '   ' → logprob: -7.917636394500732
    8. '):
' → logprob: -8.66763687133789
    9. ')' → logprob: -8.66763687133789
    10. ' n' → logprob: -9.29263687133789

Token 283: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011132830753922462
    2. 'n' → logprob: -4.511132717132568
    3. ' n' → logprob: -9.636133193969727
    4. ' ' → logprob: -11.386133193969727
    5. '   ' → logprob: -12.511133193969727
    6. '(n' → logprob: -13.261133193969727
    7. '       ' → logprob: -13.511133193969727
    8. ')n' → logprob: -14.886133193969727
    9. '           ' → logprob: -15.136133193969727
    10. '```' → logprob: -15.386133193969727

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22171586751937866
    2. ' ,' → logprob: -1.9717159271240234
    3. ',n' → logprob: -2.9717159271240234
    4. 'n' → logprob: -5.096715927124023
    5. ' n' → logprob: -6.096715927124023
    6. ')n' → logprob: -10.721715927124023
    7. ')' → logprob: -11.221715927124023
    8. ',
' → logprob: -12.221715927124023
    9. '   ' → logprob: -12.846715927124023
    10. '	n' → logprob: -13.221715927124023

Token 285: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31326526403427124
    2. ' n' → logprob: -1.313265323638916
    3. '   ' → logprob: -13.938264846801758
    4. '	n' → logprob: -14.063264846801758
    5. ')n' → logprob: -14.563264846801758
    6. ' ' → logprob: -14.938264846801758
    7. '    ' → logprob: -15.438264846801758
    8. ' ' → logprob: -15.563264846801758
    9. '<|end|>' → logprob: -15.813264846801758
    10. ')' → logprob: -16.188264846801758

Token 286: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20199522376060486
    2. '):' → logprob: -1.7019952535629272
    3. ' ):
' → logprob: -8.076994895935059
    4. ' ):' → logprob: -8.951994895935059
    5. '       ' → logprob: -9.201994895935059
    6. '   ' → logprob: -11.076994895935059
    7. 'n' → logprob: -11.951994895935059
    8. '):
' → logprob: -11.951994895935059
    9. ')' → logprob: -12.326994895935059
    10. '           ' → logprob: -12.951994895935059

Token 287: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10903777182102203
    2. '       ' → logprob: -2.6090378761291504
    3. ':' → logprob: -4.35903787612915
    4. '<|end|>' → logprob: -4.73403787612915
    5. ' if' → logprob: -4.98403787612915
    6. '   ' → logprob: -8.609037399291992
    7. '<|end|>' → logprob: -8.734037399291992
    8. ',' → logprob: -8.859037399291992
    9. ' and' → logprob: -8.859037399291992
    10. ' :' → logprob: -9.109037399291992

Token 288: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10727457702159882
    2. '               ' → logprob: -2.9822745323181152
    3. '       ' → logprob: -3.8572745323181152
    4. 'if' (adapté à ' if') → logprob: -3.8572745323181152
    5. '           ' → logprob: -4.857274532318115
    6. ' ' → logprob: -8.107275009155273
    7. '	if' → logprob: -8.607275009155273
    8. '   ' → logprob: -9.107275009155273
    9. ' ' → logprob: -9.232275009155273
    10. '<|end|>' → logprob: -9.732275009155273

Token 289: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.016067100688815117
    2. ' dist' → logprob: -4.141067028045654
    3. '0' → logprob: -11.516067504882812
    4. '   ' → logprob: -11.891067504882812
    5. '           ' → logprob: -12.141067504882812
    6. '	dist' → logprob: -12.266067504882812
    7. '(dist' → logprob: -13.391067504882812
    8. ' ' → logprob: -13.891067504882812
    9. 'd' → logprob: -14.641067504882812
    10. '               ' → logprob: -15.016067504882812

Token 290: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.703443770878948e-06
    2. '[j' → logprob: -12.375007629394531
    3. '[' → logprob: -12.750007629394531
    4. '[I' → logprob: -15.125007629394531
    5. '[
' → logprob: -16.75000762939453
    6. ' [' → logprob: -17.12500762939453
    7. '[n' → logprob: -17.25000762939453
    8. '[s' → logprob: -17.62500762939453
    9. '[u' → logprob: -17.62500762939453
    10. 'i' → logprob: -18.00000762939453

Token 291: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07204463332891464
    2. '[j' → logprob: -2.697044610977173
    3. '[' → logprob: -6.572044849395752
    4. '[i' → logprob: -7.572044849395752
    5. ']' → logprob: -9.697044372558594
    6. ' ][' → logprob: -10.447044372558594
    7. '}[' → logprob: -10.947044372558594
    8. ')[' → logprob: -10.947044372558594
    9. ' [' → logprob: -11.197044372558594
    10. '>[' → logprob: -11.197044372558594

Token 292: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.0391463193809614e-05
    2. ' j' → logprob: -9.750060081481934
    3. '	j' → logprob: -14.125060081481934
    4. '[j' → logprob: -14.250060081481934
    5. ',j' → logprob: -15.500060081481934
    6. ' ' → logprob: -15.625060081481934
    7. ':j' → logprob: -16.12506103515625
    8. '   ' → logprob: -16.62506103515625
    9. '<|end|>' → logprob: -17.00006103515625
    10. '_j' → logprob: -18.12506103515625

Token 293: ']' (ID: 60)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.020004643127322197
    2. ' <=' → logprob: -4.770004749298096
    3. ']<=' → logprob: -4.770004749298096
    4. ']' → logprob: -6.020004749298096
    5. ')<=' → logprob: -8.645004272460938
    6. '+' → logprob: -9.270004272460938
    7. ')' → logprob: -10.270004272460938
    8. '!=' → logprob: -11.020004272460938
    9. 'le' → logprob: -11.145004272460938
    10. '>' → logprob: -11.395004272460938

Token 294: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0006850333884358406
    2. ' <=' → logprob: -7.375685214996338
    3. '!=' → logprob: -10.75068473815918
    4. '==' → logprob: -11.00068473815918
    5. '+' → logprob: -11.37568473815918
    6. ']<=' → logprob: -13.25068473815918
    7. '<' → logprob: -13.62568473815918
    8. '>' → logprob: -13.62568473815918
    9. ')<=' → logprob: -14.25068473815918
    10. '>=' → logprob: -14.25068473815918

Token 295: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00011069540778407827
    2. ' l' → logprob: -9.125110626220703
    3. ' ' → logprob: -13.750110626220703
    4. '   ' → logprob: -14.875110626220703
    5. '	l' → logprob: -15.125110626220703
    6. '  ' → logprob: -17.125110626220703
    7. 'L' → logprob: -17.375110626220703
    8. '
' → logprob: -17.750110626220703
    9. '100' → logprob: -18.375110626220703
    10. '    ' → logprob: -18.375110626220703

Token 296: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005241583567112684
    2. ' and' → logprob: -5.880241394042969
    3. ' :' → logprob: -6.255241394042969
    4. ':
' → logprob: -7.755241394042969
    5. 'and' → logprob: -9.505241394042969
    6. ' :
' → logprob: -12.255241394042969
    7. ' or' → logprob: -12.505241394042969
    8. '   ' → logprob: -14.880241394042969
    9. ':
' → logprob: -15.005241394042969
    10. ':return' → logprob: -15.130241394042969

Token 297: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06555556505918503
    2. 'g' → logprob: -2.9405555725097656
    3. ' g' → logprob: -5.315555572509766
    4. '           ' → logprob: -5.565555572509766
    5. '       ' → logprob: -6.940555572509766
    6. '0' → logprob: -8.565555572509766
    7. ':' → logprob: -8.815555572509766
    8. '                       ' → logprob: -9.065555572509766
    9. ' ' → logprob: -9.690555572509766
    10. '   ' → logprob: -9.690555572509766

Token 298: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.0023500765673816204
    2. ' g' → logprob: -6.252349853515625
    3. '                   ' → logprob: -8.502349853515625
    4. '               ' → logprob: -8.752349853515625
    5. '   ' → logprob: -10.627349853515625
    6. 'distance' → logprob: -12.127349853515625
    7. '	g' → logprob: -12.627349853515625
    8. '           ' → logprob: -12.627349853515625
    9. ' ' → logprob: -12.752349853515625
    10. '                       ' → logprob: -12.752349853515625

Token 299: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.700132997939363e-05
    2. '.add' → logprob: -11.375017166137695
    3. '   ' → logprob: -13.250017166137695
    4. ' ' → logprob: -13.250017166137695
    5. '.' → logprob: -14.000017166137695
    6. '```' → logprob: -15.250017166137695
    7. ' .' → logprob: -15.625017166137695
    8. '２' → logprob: -16.187517166137695
    9. '  ' → logprob: -16.437517166137695
    10. '
' → logprob: -16.625017166137695

Token 300: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0009181279456242919
    2. '.' → logprob: -7.000917911529541
    3. ' .' → logprob: -12.1259183883667
    4. '   ' → logprob: -14.6259183883667
    5. '.ad' → logprob: -14.8759183883667
    6. 'add' → logprob: -15.3759183883667
    7. ').' → logprob: -17.125917434692383
    8. '.Add' → logprob: -17.125917434692383
    9. ':add' → logprob: -17.250917434692383
    10. '.g' → logprob: -17.500917434692383

Token 301: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -8.2994620242971e-06
    2. '_' → logprob: -12.375008583068848
    3. '_edges' → logprob: -13.375008583068848
    4. '_ed' → logprob: -14.250008583068848
    5. '```' → logprob: -14.750008583068848
    6. ' _' → logprob: -14.875008583068848
    7. '_e' → logprob: -15.500008583068848
    8. '_line' → logprob: -16.37500762939453
    9. '   ' → logprob: -16.37500762939453
    10. 'edge' → logprob: -16.50000762939453

Token 302: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.125001907348633
    3. ' (' → logprob: -17.500001907348633
    4. 'i' → logprob: -18.125001907348633
    5. '(
' → logprob: -18.875001907348633
    6. '(j' → logprob: -21.000001907348633
    7. ' i' → logprob: -21.125001907348633
    8. '[i' → logprob: -21.875001907348633
    9. '(u' → logprob: -22.750001907348633
    10. '(ii' → logprob: -22.875001907348633

Token 303: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004748503211885691
    2. ',j' → logprob: -6.004748344421387
    3. ' ,' → logprob: -6.254748344421387
    4. 'j' → logprob: -8.379748344421387
    5. ' j' → logprob: -9.129748344421387
    6. ',
' → logprob: -12.004748344421387
    7. '   ' → logprob: -12.629748344421387
    8. ' ' → logprob: -14.254748344421387
    9. '	j' → logprob: -15.254748344421387
    10. '           ' → logprob: -15.379748344421387

Token 304: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0008055794751271605
    2. ' j' → logprob: -7.125805377960205
    3. '	j' → logprob: -14.000805854797363
    4. '   ' → logprob: -15.375805854797363
    5. ' ' → logprob: -17.250804901123047
    6. ',j' → logprob: -18.000804901123047
    7. ' ' → logprob: -18.625804901123047
    8. '$j' → logprob: -18.875804901123047
    9. '    ' → logprob: -19.125804901123047
    10. '  ' → logprob: -19.250804901123047

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6328883767127991
    2. ')' → logprob: -0.7578883767127991
    3. ' ,' → logprob: -9.257888793945312
    4. ' )' → logprob: -9.507888793945312
    5. '1' → logprob: -9.632888793945312
    6. '2' → logprob: -11.757888793945312
    7. '   ' → logprob: -11.882888793945312
    8. '0' → logprob: -12.007888793945312
    9. ',)' → logprob: -12.132888793945312
    10. ')
' → logprob: -12.382888793945312

Token 306: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3438327843905427e-05
    2. ' ' → logprob: -11.12502384185791
    3. 'dist' → logprob: -12.12502384185791
    4. ' dist' → logprob: -13.75002384185791
    5. '0' → logprob: -13.87502384185791
    6. 'l' → logprob: -15.25002384185791
    7. '   ' → logprob: -15.37502384185791
    8. '100' → logprob: -15.62502384185791
    9. 'int' → logprob: -16.000022888183594
    10. '10' → logprob: -16.875022888183594

Token 307: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -14.875003814697266
    4. 'dist' → logprob: -16.375003814697266
    5. '0' → logprob: -16.500003814697266
    6. 'l' → logprob: -18.250003814697266
    7. '  ' → logprob: -18.437503814697266
    8. ')' → logprob: -18.500003814697266
    9. ' ' → logprob: -18.687503814697266
    10. '１' → logprob: -18.750003814697266

Token 308: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.923874702304602e-05
    2. ')
' → logprob: -9.375089645385742
    3. ' )' → logprob: -12.750089645385742
    4. ')

' → logprob: -15.125089645385742
    5. '       ' → logprob: -15.375089645385742
    6. '   ' → logprob: -15.375089645385742
    7. '
' → logprob: -16.000089645385742
    8. '           ' → logprob: -16.000089645385742
    9. '               ' → logprob: -16.500089645385742
    10. ')
' → logprob: -16.625089645385742

Token 309: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.018499204888939857
    2. '   ' → logprob: -4.518499374389648
    3. ' dist' → logprob: -5.768499374389648
    4. 'd' → logprob: -6.018499374389648
    5. 'dp' → logprob: -7.393499374389648
    6. 'q' → logprob: -8.518499374389648
    7. 'def' → logprob: -8.643499374389648
    8. '
' → logprob: -8.768499374389648
    9. '    
' → logprob: -9.143499374389648
    10. 'g' → logprob: -9.393499374389648

Token 310: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.010782515630126
    2. 'd' → logprob: -5.760782718658447
    3. '   ' → logprob: -6.010782718658447
    4. 'res' → logprob: -6.635782718658447
    5. 'ans' → logprob: -7.260782718658447
    6. 'new' → logprob: -7.385782718658447
    7. 'q' → logprob: -7.510782718658447
    8. 'dp' → logprob: -7.635782718658447
    9. ' dist' → logprob: -7.760782718658447
    10. 'result' → logprob: -8.510782241821289

Token 311: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014500769786536694
    2. ' =' → logprob: -4.764500617980957
    3. '=' → logprob: -5.389500617980957
    4. '_' → logprob: -6.889500617980957
    5. 's' → logprob: -8.764500617980957
    6. 'g' → logprob: -10.014500617980957
    7. '_=' → logprob: -10.264500617980957
    8. ',' → logprob: -11.514500617980957
    9. '_g' → logprob: -11.764500617980957
    10. ' ' → logprob: -12.389500617980957

Token 312: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693345546722412
    2. '=' → logprob: -2.1269335746765137
    3. ' ' → logprob: -12.376933097839355
    4. ',' → logprob: -14.626933097839355
    5. '[' → logprob: -15.376933097839355
    6. '  ' → logprob: -16.126934051513672
    7. '   ' → logprob: -16.626934051513672
    8. '_' → logprob: -17.001934051513672
    9. ' =
' → logprob: -17.001934051513672
    10. 's' → logprob: -17.001934051513672

Token 313: ' war' (ID: 3656)
  Prédit: ' war'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' war' → logprob: -0.6327160596847534
    2. 'war' → logprob: -0.7577160596847534
    3. ' ' → logprob: -10.507716178894043
    4. '   ' → logprob: -10.882716178894043
    5. 'warf' → logprob: -11.257716178894043
    6. 'ward' → logprob: -11.507716178894043
    7. 'warp' → logprob: -11.882716178894043
    8. 'wart' → logprob: -12.570216178894043
    9. ' ' → logprob: -12.632716178894043
    10. 'ware' → logprob: -12.632716178894043

Token 314: 'shall' (ID: 30275)
  Prédit: 'shall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shall' → logprob: -0.00022046364028938115
    2. 'fall' → logprob: -9.25022029876709
    3. 's' → logprob: -9.37522029876709
    4. 'sh' → logprob: -11.37522029876709
    5. ' shall' → logprob: -12.00022029876709
    6. 'small' → logprob: -12.00022029876709
    7. 'all' → logprob: -12.50022029876709
    8. 'ship' → logprob: -12.62522029876709
    9. 'stall' → logprob: -13.37522029876709
    10. 'hall' → logprob: -13.37522029876709

Token 315: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -2.248469718324486e-05
    2. 'f' → logprob: -10.750022888183594
    3. ' Floyd' → logprob: -14.625022888183594
    4. '_' → logprob: -15.000022888183594
    5. 'F' → logprob: -16.375022888183594
    6. '_F' → logprob: -17.000022888183594
    7. 'loyd' → logprob: -17.000022888183594
    8. '-f' → logprob: -17.500022888183594
    9. '_floor' → logprob: -17.750022888183594
    10. '_
' → logprob: -18.125022888183594

Token 316: 'loyd' (ID: 58664)
  Prédit: 'loyd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loyd' → logprob: -0.01465830858796835
    2. 'oy' → logprob: -4.639658451080322
    3. 'lo' → logprob: -5.389658451080322
    4. 'old' → logprob: -9.514657974243164
    5. '```' → logprob: -9.764657974243164
    6. 'y' → logprob: -9.889657974243164
    7. 'loid' → logprob: -10.139657974243164
    8. 'l' → logprob: -11.514657974243164
    9. '   ' → logprob: -11.639657974243164
    10. 'll' → logprob: -11.639657974243164

Token 317: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -17.125
    3. 'g' → logprob: -17.5
    4. ' (' → logprob: -17.75
    5. '(graph' → logprob: -18.75
    6. '[g' → logprob: -20.375
    7. '(
' → logprob: -21.125
    8. '(G' → logprob: -21.625
    9. '	g' → logprob: -22.125
    10. '(gs' → logprob: -22.375

Token 318: '2' (ID: 17)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.002721779514104128
    2. 'g' → logprob: -6.377721786499023
    3. ')' → logprob: -7.127721786499023
    4. '2' → logprob: -9.377721786499023
    5. '(' → logprob: -9.627721786499023
    6. ')(' → logprob: -9.877721786499023
    7. ' g' → logprob: -12.127721786499023
    8. ' (' → logprob: -12.502721786499023
    9. ',g' → logprob: -13.002721786499023
    10. '
' → logprob: -13.627721786499023

Token 319: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003281944082118571
    2. ')
' → logprob: -8.500328063964844
    3. ')

' → logprob: -9.000328063964844
    4. ' )' → logprob: -13.625328063964844
    5. ')
' → logprob: -15.875328063964844
    6. ')

' → logprob: -17.750328063964844
    7. '   ' → logprob: -18.125328063964844
    8. ' ' → logprob: -18.750328063964844
    9. ')`' → logprob: -19.750328063964844
    10. ')[' → logprob: -19.875328063964844

Token 320: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.191904217004776
    2. '   ' → logprob: -1.8169041872024536
    3. ' for' → logprob: -5.441904067993164
    4. 'result' → logprob: -6.191904067993164
    5. '
' → logprob: -6.316904067993164
    6. 'results' → logprob: -6.441904067993164
    7. 'return' → logprob: -7.191904067993164
    8. 'if' → logprob: -7.691904067993164
    9. 'answers' → logprob: -7.941904067993164
    10. 'answer' → logprob: -8.191904067993164

Token 321: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7548612952232361
    2. 'if' → logprob: -1.5048613548278809
    3. 'res' → logprob: -2.004861354827881
    4. 'return' → logprob: -2.129861354827881
    5. 'ans' → logprob: -3.754861354827881
    6. 'result' → logprob: -3.879861354827881
    7. 'answer' → logprob: -5.004861354827881
    8. 'results' → logprob: -6.754861354827881
    9. 'answers' → logprob: -7.004861354827881
    10. 'print' → logprob: -7.754861354827881

Token 322: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4871717393398285
    2. 'i' → logprob: -0.9871717691421509
    3. 'k' → logprob: -4.862171649932861
    4. '_i' → logprob: -5.987171649932861
    5. ' k' → logprob: -6.987171649932861
    6. '_' → logprob: -7.237171649932861
    7. '(i' → logprob: -8.23717212677002
    8. ' _' → logprob: -8.23717212677002
    9. ' ' → logprob: -9.36217212677002
    10. 'query' → logprob: -9.48717212677002

Token 323: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016270482912659645
    2. 'in' → logprob: -4.141270637512207
    3. ' ' → logprob: -9.141270637512207
    4. ',' → logprob: -9.391270637512207
    5. 'n' → logprob: -10.391270637512207
    6. '   ' → logprob: -12.266270637512207
    7. '_' → logprob: -12.641270637512207
    8. ' ,' → logprob: -13.266270637512207
    9. '  ' → logprob: -13.391270637512207
    10. '    ' → logprob: -13.766270637512207

Token 324: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016040585935115814
    2. ' range' → logprob: -4.141040802001953
    3. ' ' → logprob: -13.016040802001953
    4. '   ' → logprob: -13.141040802001953
    5. 'ran' → logprob: -14.266040802001953
    6. '(range' → logprob: -14.891040802001953
    7. 'r' → logprob: -15.391040802001953
    8. 'q' → logprob: -15.391040802001953
    9. '  ' → logprob: -15.516040802001953
    10. 'rang' → logprob: -15.641040802001953

Token 325: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00038264848990365863
    2. '(' → logprob: -8.125382423400879
    3. ' (' → logprob: -10.125382423400879
    4. 'q' → logprob: -10.625382423400879
    5. '(s' → logprob: -12.000382423400879
    6. ' q' → logprob: -12.125382423400879
    7. 'range' → logprob: -12.875382423400879
    8. '(len' → logprob: -13.125382423400879
    9. ' range' → logprob: -13.250382423400879
    10. '   ' → logprob: -13.250382423400879

Token 326: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2520027458667755
    2. '):
' → logprob: -1.5020027160644531
    3. '):
' → logprob: -10.377002716064453
    4. ' ):' → logprob: -10.377002716064453
    5. ':' → logprob: -12.252002716064453
    6. ' ):
' → logprob: -13.002002716064453
    7. '   ' → logprob: -13.252002716064453
    8. ')' → logprob: -13.752002716064453
    9. '):

' → logprob: -13.877002716064453
    10. ' ' → logprob: -15.127002716064453

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024736028164625168
    2. '   ' → logprob: -4.399735927581787
    3. 'if' → logprob: -5.149735927581787
    4. ' if' → logprob: -5.524735927581787
    5. 'print' → logprob: -6.899735927581787
    6. ' s' → logprob: -7.274735927581787
    7. 's' → logprob: -8.149736404418945
    8. ' print' → logprob: -8.774736404418945
    9. 'x' → logprob: -10.399736404418945
    10. '    ' → logprob: -10.649736404418945

Token 328: ' ans' (ID: 3345)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31072887778282166
    2. 'if' → logprob: -2.4357287883758545
    3. 'u' → logprob: -2.8107287883758545
    4. 'print' → logprob: -3.1857287883758545
    5. '   ' → logprob: -3.6857287883758545
    6. 's' → logprob: -4.060729026794434
    7. 'res' → logprob: -4.060729026794434
    8. 'ans' (adapté à ' ans') → logprob: -5.560729026794434
    9. 'si' → logprob: -5.685729026794434
    10. '       ' → logprob: -5.810729026794434

Token 329: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1778695285320282
    2. '=' → logprob: -1.9278695583343506
    3. ' ' → logprob: -4.0528693199157715
    4. '_' → logprob: -9.80286979675293
    5. ',' → logprob: -11.05286979675293
    6. '  ' → logprob: -11.80286979675293
    7. '_idx' → logprob: -12.55286979675293
    8. 'space' → logprob: -12.80286979675293
    9. ' =
' → logprob: -12.92786979675293
    10. '_space' → logprob: -13.05286979675293

Token 330: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0431160032749176
    2. ' dist' → logprob: -3.1681160926818848
    3. '-' → logprob: -9.543115615844727
    4. '   ' → logprob: -11.293115615844727
    5. ' -' → logprob: -11.668115615844727
    6. '	dist' → logprob: -12.043115615844727
    7. '-dist' → logprob: -12.168115615844727
    8. '"' → logprob: -12.168115615844727
    9. '(dist' → logprob: -13.168115615844727
    10. ' ' → logprob: -13.293115615844727

Token 331: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6405310816480778e-05
    2. '[' → logprob: -11.375016212463379
    3. ' ' → logprob: -13.000016212463379
    4. '[s' → logprob: -13.125016212463379
    5. '   ' → logprob: -15.500016212463379
    6. '       ' → logprob: -16.625017166137695
    7. '```' → logprob: -16.875017166137695
    8. 's' → logprob: -17.000017166137695
    9. ' [' → logprob: -17.375017166137695
    10. '[t' → logprob: -17.750017166137695

Token 332: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.00011653638648567721
    2. '.s' → logprob: -9.500116348266602
    3. '[' → logprob: -10.375116348266602
    4. ' [' → logprob: -12.250116348266602
    5. '   ' → logprob: -13.625116348266602
    6. ' ' → logprob: -14.250116348266602
    7. '.dist' → logprob: -14.375116348266602
    8. '
' → logprob: -14.375116348266602
    9. '.' → logprob: -15.125116348266602
    10. '[t' → logprob: -15.250116348266602

Token 333: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.910643762443215e-05
    2. '[s' → logprob: -9.500079154968262
    3. '[t' → logprob: -13.250079154968262
    4. '[' → logprob: -13.750079154968262
    5. '[q' → logprob: -14.125079154968262
    6. '-' → logprob: -15.125079154968262
    7. '][' → logprob: -15.625079154968262
    8. 'i' → logprob: -17.000078201293945
    9. ' -' → logprob: -17.875078201293945
    10. ' [' → logprob: -18.375078201293945

Token 334: ']-' (ID: 27107)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12089166790246964
    2. '-' → logprob: -2.370891571044922
    3. ']-' → logprob: -3.995891571044922
    4. ' -' → logprob: -6.495891571044922
    5. '[s' → logprob: -8.620891571044922
    6. '][' → logprob: -8.620891571044922
    7. '[-' → logprob: -9.745891571044922
    8. '[' → logprob: -9.745891571044922
    9. '[j' → logprob: -10.370891571044922
    10. ']' → logprob: -11.745891571044922

Token 335: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '-' → logprob: -16.87504005432129
    4. ']' → logprob: -17.50004005432129
    5. '１' → logprob: -18.87504005432129
    6. '   ' → logprob: -19.06254005432129
    7. '۱' → logprob: -19.31254005432129
    8. '][' → logprob: -19.75004005432129
    9. '2' → logprob: -19.81254005432129
    10. '  ' → logprob: -20.18754005432129

Token 336: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00019042797794099897
    2. ' ][' → logprob: -8.750190734863281
    3. '[t' → logprob: -11.375190734863281
    4. '[' → logprob: -12.125190734863281
    5. ']' → logprob: -12.500190734863281
    6. 't' → logprob: -12.875190734863281
    7. '   ' → logprob: -13.125190734863281
    8. '"][' → logprob: -13.250190734863281
    9. ',' → logprob: -13.750190734863281
    10. '-' → logprob: -13.875190734863281

Token 337: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -9.968312951968983e-06
    2. ' t' → logprob: -11.625009536743164
    3. '	t' → logprob: -14.625009536743164
    4. '   ' → logprob: -15.500009536743164
    5. '[t' → logprob: -15.625009536743164
    6. '
' → logprob: -16.625009536743164
    7. '`t' → logprob: -17.500009536743164
    8. ' ' → logprob: -18.625009536743164
    9. '(t' → logprob: -19.000009536743164
    10. '    ' → logprob: -19.500009536743164

Token 338: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.5
    3. '-' → logprob: -16.75
    4. ']' → logprob: -17.125
    5. '[
' → logprob: -17.875
    6. '```' → logprob: -18.0
    7. '[j' → logprob: -18.25
    8. 'i' → logprob: -18.375
    9. ' ' → logprob: -18.625
    10. ' [' → logprob: -18.875

Token 339: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22530527412891388
    2. '[i' → logprob: -2.2253053188323975
    3. ' -' → logprob: -2.6003053188323975
    4. ']-' → logprob: -3.9753053188323975
    5. '[' → logprob: -8.725305557250977
    6. ']' → logprob: -8.975305557250977
    7. '1' → logprob: -9.225305557250977
    8. '   ' → logprob: -9.850305557250977
    9. '[-' → logprob: -10.225305557250977
    10. '()-' → logprob: -10.350305557250977

Token 340: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. ']' → logprob: -15.125019073486328
    4. '   ' → logprob: -16.687519073486328
    5. '-' → logprob: -16.937519073486328
    6. '2' → logprob: -17.750019073486328
    7. '۱' → logprob: -17.875019073486328
    8. '１' → logprob: -18.000019073486328
    9. '```' → logprob: -18.187519073486328
    10. '  ' → logprob: -18.875019073486328

Token 341: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12296608090400696
    2. ']-' → logprob: -2.6229660511016846
    3. ']
' → logprob: -3.7479660511016846
    4. ' ]' → logprob: -4.872966289520264
    5. ' -' → logprob: -5.247966289520264
    6. '-' → logprob: -5.372966289520264
    7. ' if' → logprob: -6.997966289520264
    8. 'if' → logprob: -7.622966289520264
    9. ' ]
' → logprob: -7.747966289520264
    10. '       ' → logprob: -10.247965812683105

Token 342: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5748006701469421
    2. ' if' → logprob: -1.949800729751587
    3. ' -' → logprob: -1.949800729751587
    4. 'if' → logprob: -2.324800729751587
    5. '
' → logprob: -3.199800729751587
    6. '-
' → logprob: -4.824800491333008
    7. 'print' → logprob: -5.949800491333008
    8. '   ' → logprob: -6.699800491333008
    9. '	if' → logprob: -8.074800491333008
    10. '-if' → logprob: -8.324800491333008

Token 343: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014163747429847717
    2. ' ' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.639163970947266
    4. '  ' → logprob: -16.639163970947266
    5. ' ' → logprob: -16.764163970947266
    6. '	' → logprob: -18.264163970947266
    7. '    ' → logprob: -18.639163970947266
    8. '0' → logprob: -19.326663970947266
    9. '１' → logprob: -19.826663970947266
    10. '```' → logprob: -20.264163970947266

Token 344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -18.250625610351562
    4. '  ' → logprob: -18.500625610351562
    5. ' ' → logprob: -19.125625610351562
    6. '0' → logprob: -20.500625610351562
    7. '```' → logprob: -20.625625610351562
    8. '	' → logprob: -20.875625610351562
    9. '１' → logprob: -21.500625610351562
    10. '    ' → logprob: -21.688125610351562

Token 345: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06770702451467514
    2. '       ' → logprob: -3.192707061767578
    3. '<|end|>' → logprob: -3.817707061767578
    4. '
' → logprob: -6.317707061767578
    5. 'print' → logprob: -8.567707061767578
    6. ')' → logprob: -8.942707061767578
    7. '   ' → logprob: -9.192707061767578
    8. ')
' → logprob: -10.067707061767578
    9. '	' → logprob: -10.317707061767578
    10. ' if' → logprob: -10.442707061767578

Token 346: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0017907321453094482
    2. '<|end|>' → logprob: -6.626790523529053
    3. '
' → logprob: -8.251791000366211
    4. '       ' → logprob: -9.501791000366211
    5. '\n' → logprob: -9.626791000366211
    6. 'print' → logprob: -11.126791000366211
    7. '' → logprob: -11.251791000366211
    8. '   ' → logprob: -11.251791000366211
    9. '  
' → logprob: -12.376791000366211
    10. ' 
' → logprob: -12.501791000366211

Token 347: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028552833944559097
    2. 'print' → logprob: -3.653552770614624
    3. '
' → logprob: -7.153553009033203
    4. '<|end|>' → logprob: -7.403553009033203
    5. ' print' → logprob: -8.028553009033203
    6. '\n' → logprob: -8.403553009033203
    7. ' if' → logprob: -9.278553009033203
    8. '' → logprob: -9.653553009033203
    9. 'if' (adapté à ' if') → logprob: -10.278553009033203
    10. '   ' → logprob: -10.278553009033203

Token 348: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.02783614583313465
    2. 'ans' → logprob: -3.6528360843658447
    3. ' dist' → logprob: -6.527836322784424
    4. '	ans' → logprob: -10.527835845947266
    5. '(ans' → logprob: -10.777835845947266
    6. 'dist' → logprob: -11.027835845947266
    7. ' ' → logprob: -12.527835845947266
    8. ' ' → logprob: -12.902835845947266
    9. '_ans' → logprob: -14.527835845947266
    10. ' an' → logprob: -15.152835845947266

Token 349: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.026460643857717514
    2. '<' → logprob: -3.651460647583008
    3. ' ==' → logprob: -8.776460647583008
    4. '==' → logprob: -12.901460647583008
    5. ' ' → logprob: -13.776460647583008
    6. ' <=' → logprob: -14.401460647583008
    7. '<class' → logprob: -14.526460647583008
    8. ' >=' → logprob: -15.526460647583008
    9. '<int' → logprob: -15.526460647583008
    10. ' >' → logprob: -15.651460647583008

Token 350: ' INF' (ID: 69196)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.28786197304725647
    2. ' -' → logprob: -2.2878620624542236
    3. '-INF' → logprob: -2.4128620624542236
    4. 'INF' → logprob: -2.9128620624542236
    5. ' INF' → logprob: -5.9128618240356445
    6. '-inf' → logprob: -6.2878618240356445
    7. 'inf' → logprob: -9.537861824035645
    8. '_INF' → logprob: -10.037861824035645
    9. ' ' → logprob: -11.162861824035645
    10. '-IN' → logprob: -11.287861824035645

Token 351: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004747910890728235
    2. ':
' → logprob: -5.7547478675842285
    3. ' or' → logprob: -6.6297478675842285
    4. ' :' → logprob: -8.504748344421387
    5. ':return' → logprob: -10.629748344421387
    6. 'or' → logprob: -11.879748344421387
    7. '):' → logprob: -12.879748344421387
    8. ' :
' → logprob: -13.004748344421387
    9. ')' → logprob: -13.504748344421387
    10. ':
' → logprob: -13.504748344421387

Token 352: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027254095766693354
    2. ' ' → logprob: -8.375272750854492
    3. '0' → logprob: -11.250272750854492
    4. '-' → logprob: -12.125272750854492
    5. '999' → logprob: -12.375272750854492
    6. '>' → logprob: -12.500272750854492
    7. '(' → logprob: -12.750272750854492
    8. 'dist' → logprob: -13.125272750854492
    9. ' -' → logprob: -13.500272750854492
    10. '100' → logprob: -13.500272750854492

Token 353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.268254896393046e-05
    2. ' ' → logprob: -9.500082969665527
    3. '0' → logprob: -12.625082969665527
    4. '2' → logprob: -13.000082969665527
    5. '-' → logprob: -14.625082969665527
    6. '999' → logprob: -15.000082969665527
    7. '100' → logprob: -15.250082969665527
    8. 'dist' → logprob: -15.375082969665527
    9. 'inf' → logprob: -15.500082969665527
    10. 'float' → logprob: -15.625082969665527

Token 354: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043936602771282196
    2. ':
' → logprob: -3.1689364910125732
    3. ' or' → logprob: -7.043936729431152
    4. ' :' → logprob: -10.793936729431152
    5. '       ' → logprob: -11.293936729431152
    6. '   ' → logprob: -11.668936729431152
    7. ':return' → logprob: -11.793936729431152
    8. ' and' → logprob: -12.418936729431152
    9. ' :
' → logprob: -13.168936729431152
    10. '):
' → logprob: -13.293936729431152

Token 355: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44355592131614685
    2. 'print' → logprob: -1.1935559511184692
    3. ' print' → logprob: -3.1935558319091797
    4. '           ' → logprob: -4.81855583190918
    5. ':
' → logprob: -5.94355583190918
    6. '   ' → logprob: -7.31855583190918
    7. '0' → logprob: -7.56855583190918
    8. '
' → logprob: -7.69355583190918
    9. ':' → logprob: -7.81855583190918
    10. '-' → logprob: -8.31855583190918

Token 356: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03671569377183914
    2. '       ' → logprob: -4.036715507507324
    3. ' print' → logprob: -4.786715507507324
    4. 'ans' → logprob: -4.911715507507324
    5. '           ' → logprob: -6.661715507507324
    6. ' ans' → logprob: -6.911715507507324
    7. '   ' → logprob: -8.661715507507324
    8. 'pr' → logprob: -9.911715507507324
    9. '
' → logprob: -10.161715507507324
    10. 'answer' → logprob: -10.286715507507324

Token 357: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1756367712223437e-05
    2. '(-' → logprob: -11.500011444091797
    3. ' -' → logprob: -13.500011444091797
    4. '(' → logprob: -16.750011444091797
    5. '1' → logprob: -17.500011444091797
    6. '
' → logprob: -18.000011444091797
    7. '()-' → logprob: -18.500011444091797
    8. '\-' → logprob: -18.500011444091797
    9. '```' → logprob: -19.250011444091797
    10. '   ' → logprob: -19.250011444091797

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '１' → logprob: -18.625
    3. ')' → logprob: -19.9375
    4. '2' → logprob: -20.0
    5. ' ' → logprob: -20.125
    6. '۱' → logprob: -20.6875
    7. ' -' → logprob: -20.75
    8. '১' → logprob: -20.8125
    9. '१' → logprob: -21.25
    10. '   ' → logprob: -21.375

Token 359: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02394767664372921
    2. ')
' → logprob: -3.7739477157592773
    3. '       ' → logprob: -7.273947715759277
    4. ')
' → logprob: -12.773947715759277
    5. '   ' → logprob: -13.148947715759277
    6. ' )' → logprob: -13.273947715759277
    7. '           ' → logprob: -14.898947715759277
    8. ')return' → logprob: -15.523947715759277
    9. ')

' → logprob: -15.773947715759277
    10. ')`
' → logprob: -15.773947715759277

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13173985481262207
    2. 'else' → logprob: -2.131739854812622
    3. ' else' → logprob: -5.506739616394043
    4. '	' → logprob: -7.631739616394043
    5. '   ' → logprob: -9.381739616394043
    6. '	else' → logprob: -9.756739616394043
    7. ')' → logprob: -9.756739616394043
    8. '<|end|>' → logprob: -10.631739616394043
    9. '\
' → logprob: -12.131739616394043
    10. '           ' → logprob: -12.381739616394043

Token 361: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2617681920528412
    2. ' else' → logprob: -1.5117682218551636
    3. '       ' → logprob: -4.636768341064453
    4. '	else' → logprob: -9.886768341064453
    5. '   ' → logprob: -10.636768341064453
    6. '	' → logprob: -11.886768341064453
    7. 'elif' (adapté à ' elif') → logprob: -12.011768341064453
    8. '    ' → logprob: -12.761768341064453
    9. ' ' → logprob: -12.886768341064453
    10. '     ' → logprob: -13.261768341064453

Token 362: ' dist' (ID: 3601)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.12775179743766785
    2. 'ans' → logprob: -2.1277518272399902
    3. ' True' → logprob: -7.62775182723999
    4. 'True' → logprob: -8.377751350402832
    5. '	ans' → logprob: -10.627751350402832
    6. ' dist' → logprob: -10.752751350402832
    7. '(ans' → logprob: -10.752751350402832
    8. ' ' → logprob: -11.502751350402832
    9. ' ' → logprob: -11.877751350402832
    10. '    ' → logprob: -12.752751350402832

Token 363: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07834751904010773
    2. '[s' → logprob: -2.8283474445343018
    3. '[i' → logprob: -4.203347682952881
    4. '[t' → logprob: -7.078347682952881
    5. '[' → logprob: -8.328347206115723
    6. '   ' → logprob: -9.828347206115723
    7. '[a' → logprob: -10.203347206115723
    8. '[u' → logprob: -10.453347206115723
    9. ' [' → logprob: -11.328347206115723
    10. '[g' → logprob: -11.703347206115723

Token 364: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0001717166742309928
    2. 's' → logprob: -8.875171661376953
    3. '[' → logprob: -11.000171661376953
    4. '==' → logprob: -12.375171661376953
    5. ' ==' → logprob: -12.875171661376953
    6. ' s' → logprob: -13.000171661376953
    7. '[i' → logprob: -13.500171661376953
    8. ' [' → logprob: -13.500171661376953
    9. '   ' → logprob: -14.625171661376953
    10. ' is' → logprob: -15.125171661376953

Token 365: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.440506407059729e-05
    2. '[' → logprob: -10.50003433227539
    3. '[s' → logprob: -12.12503433227539
    4. ' [' → logprob: -13.87503433227539
    5. ' ' → logprob: -15.75003433227539
    6. '[
' → logprob: -16.37503433227539
    7. '   ' → logprob: -16.50003433227539
    8. 'i' → logprob: -17.00003433227539
    9. '  ' → logprob: -17.37503433227539
    10. '```' → logprob: -18.00003433227539

Token 366: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08307529985904694
    2. '][' → logprob: -2.8330752849578857
    3. ' -' → logprob: -4.708075523376465
    4. '[i' → logprob: -5.583075523376465
    5. ']-' → logprob: -5.583075523376465
    6. '[' → logprob: -6.583075523376465
    7. '   ' → logprob: -6.708075523376465
    8. ' ' → logprob: -7.583075523376465
    9. ']' → logprob: -7.708075523376465
    10. ' [' → logprob: -8.583075523376465

Token 367: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5570885807392187e-05
    2. ' ' → logprob: -11.250015258789062
    3. 't' → logprob: -13.875015258789062
    4. '
' → logprob: -15.187515258789062
    5. '   ' → logprob: -15.312515258789062
    6. '```' → logprob: -15.375015258789062
    7. '[' → logprob: -15.687515258789062
    8. 'i' → logprob: -16.062515258789062
    9. ' t' → logprob: -16.375015258789062
    10. '-' → logprob: -16.562515258789062

Token 368: '][' (ID: 2696)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.7367383241653442
    2. '][' → logprob: -0.9867383241653442
    3. '[s' → logprob: -2.2367382049560547
    4. '[' → logprob: -3.3617382049560547
    5. 's' → logprob: -6.486738204956055
    6. ' [' → logprob: -6.736738204956055
    7. '==' → logprob: -7.236738204956055
    8. 't' → logprob: -7.611738204956055
    9. '
' → logprob: -7.736738204956055
    10. ']' → logprob: -8.236738204956055

Token 369: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0006697862991131842
    2. '[t' → logprob: -7.375669956207275
    3. ' t' → logprob: -10.250669479370117
    4. '[' → logprob: -13.000669479370117
    5. '   ' → logprob: -13.375669479370117
    6. '	t' → logprob: -13.500669479370117
    7. '
' → logprob: -14.375669479370117
    8. '][' → logprob: -14.750669479370117
    9. '0' → logprob: -14.750669479370117
    10. ' ' → logprob: -15.125669479370117

Token 370: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.319370302458992e-06
    2. '[' → logprob: -12.875005722045898
    3. 'i' → logprob: -13.750005722045898
    4. '[j' → logprob: -14.875005722045898
    5. '1' → logprob: -15.125005722045898
    6. '   ' → logprob: -15.500005722045898
    7. ' [' → logprob: -15.625005722045898
    8. '][' → logprob: -15.750005722045898
    9. '-' → logprob: -16.2500057220459
    10. '(i' → logprob: -16.2500057220459

Token 371: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0011217609280720353
    2. ']-' → logprob: -7.626121997833252
    3. ' -' → logprob: -7.626121997833252
    4. '1' → logprob: -9.001121520996094
    5. '[' → logprob: -11.251121520996094
    6. ']' → logprob: -12.626121520996094
    7. '   ' → logprob: -12.876121520996094
    8. '```' → logprob: -13.876121520996094
    9. '       ' → logprob: -14.501121520996094
    10. '[-' → logprob: -15.126121520996094

Token 372: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.750024795532227
    3. '-' → logprob: -13.750024795532227
    4. '   ' → logprob: -14.500024795532227
    5. '```' → logprob: -14.750024795532227
    6. ']' → logprob: -15.437524795532227
    7. 's' → logprob: -15.437524795532227
    8. '  ' → logprob: -17.125024795532227
    9. '`' → logprob: -17.500024795532227
    10. '[' → logprob: -17.562524795532227

Token 373: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28277936577796936
    2. '==' → logprob: -1.407779335975647
    3. ' is' → logprob: -8.032779693603516
    4. '<' → logprob: -8.407779693603516
    5. ']==' → logprob: -8.407779693603516
    6. ' <' → logprob: -8.782779693603516
    7. '==-' → logprob: -8.782779693603516
    8. ')' → logprob: -8.782779693603516
    9. ' ' → logprob: -9.157779693603516
    10. '>' → logprob: -9.282779693603516

Token 374: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.35129314661026
    2. ' ==' → logprob: -1.2262930870056152
    3. '<' → logprob: -6.851293087005615
    4. '>=' → logprob: -7.101293087005615
    5. '==-' → logprob: -7.851293087005615
    6. ' is' → logprob: -8.726293563842773
    7. ' >=' → logprob: -9.226293563842773
    8. '>' → logprob: -9.476293563842773
    9. ' ' → logprob: -9.601293563842773
    10. ' <' → logprob: -9.726293563842773

Token 375: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.43339261412620544
    2. '0' → logprob: -1.0583926439285278
    3. '1' → logprob: -6.433392524719238
    4. ' INF' → logprob: -6.683392524719238
    5. ' ' → logprob: -7.058392524719238
    6. 'inf' → logprob: -7.308392524719238
    7. 'float' → logprob: -9.183392524719238
    8. 'Inf' → logprob: -10.683392524719238
    9. '   ' → logprob: -10.745892524719238
    10. 'sys' → logprob: -10.933392524719238

Token 376: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04111875966191292
    2. ':
' → logprob: -3.416118860244751
    3. '       ' → logprob: -5.916118621826172
    4. '-' → logprob: -6.166118621826172
    5. ' -' → logprob: -6.416118621826172
    6. '           ' → logprob: -8.041118621826172
    7. '):' → logprob: -8.291118621826172
    8. '   ' → logprob: -8.791118621826172
    9. '):
' → logprob: -9.166118621826172
    10. ' :' → logprob: -9.541118621826172

Token 377: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40644392371177673
    2. ':' → logprob: -1.4064439535140991
    3. ':
' → logprob: -2.5314438343048096
    4. '       ' → logprob: -5.781444072723389
    5. '):' → logprob: -6.656444072723389
    6. ',' → logprob: -6.656444072723389
    7. '):
' → logprob: -6.906444072723389
    8. 'print' → logprob: -7.156444072723389
    9. ')' → logprob: -7.281444072723389
    10. '		' → logprob: -8.90644359588623

Token 378: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0034180781804025173
    2. '       ' → logprob: -6.25341796875
    3. ' print' → logprob: -7.12841796875
    4. '           ' → logprob: -7.62841796875
    5. '-' → logprob: -8.75341796875
    6. '   ' → logprob: -10.75341796875
    7. '	print' → logprob: -11.12841796875
    8. '-print' → logprob: -13.00341796875
    9. '               ' → logprob: -14.00341796875
    10. ' -' → logprob: -14.50341796875

Token 379: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3132643401622772
    2. '(-' → logprob: -1.3132643699645996
    3. '(' → logprob: -13.313263893127441
    4. ' -' → logprob: -14.313263893127441
    5. '()-' → logprob: -15.563263893127441
    6. '   ' → logprob: -16.813264846801758
    7. '("-' → logprob: -17.063264846801758
    8. '\-' → logprob: -18.813264846801758
    9. '(
' → logprob: -19.063264846801758
    10. '1' → logprob: -19.188264846801758

Token 380: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.12500286102295
    3. ')' → logprob: -15.25000286102295
    4. '<|end|>' → logprob: -16.000001907348633
    5. '">' → logprob: -17.000001907348633
    6. '2' → logprob: -17.062501907348633
    7. '18' → logprob: -17.125001907348633
    8. '0' → logprob: -17.250001907348633
    9. '9' → logprob: -17.312501907348633
    10. '１' → logprob: -17.750001907348633

Token 381: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5950444936752319
    2. '       ' → logprob: -0.8450444936752319
    3. ')
' → logprob: -3.9700446128845215
    4. 'else' → logprob: -10.595044136047363
    5. '   ' → logprob: -11.845044136047363
    6. ' )' → logprob: -12.470044136047363
    7. ' else' → logprob: -12.595044136047363
    8. '<|end|>' → logprob: -13.095044136047363
    9. ')\
' → logprob: -13.470044136047363
    10. 'elif' → logprob: -13.720044136047363

Token 382: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05714291334152222
    2. 'else' → logprob: -2.932142972946167
    3. ' else' → logprob: -6.807142734527588
    4. '	' → logprob: -6.807142734527588
    5. '	else' → logprob: -10.307143211364746
    6. '   ' → logprob: -12.182143211364746
    7. '<|end|>' → logprob: -13.432143211364746
    8. ',' → logprob: -13.557143211364746
    9. 'elif' → logprob: -13.682143211364746
    10. '```' → logprob: -14.057143211364746

Token 383: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1322239488363266
    2. '       ' → logprob: -2.1322238445281982
    3. ' else' → logprob: -5.257224082946777
    4. '	' → logprob: -10.507224082946777
    5. '	else' → logprob: -10.507224082946777
    6. 'elif' → logprob: -11.382224082946777
    7. '   ' → logprob: -12.257224082946777
    8. '\
' → logprob: -15.507224082946777
    9. ' ' → logprob: -15.757224082946777
    10. '_else' → logprob: -16.00722312927246

Token 384: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3226727247238159
    2. ':' → logprob: -1.322672724723816
    3. ':
' → logprob: -4.9476728439331055
    4. '       ' → logprob: -6.9476728439331055
    5. ' print' → logprob: -7.6976728439331055
    6. 'print' → logprob: -8.322672843933105
    7. ' :' → logprob: -8.447672843933105
    8. '		' → logprob: -9.447672843933105
    9. '               ' → logprob: -9.822672843933105
    10. '        ' → logprob: -9.947672843933105

Token 385: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5305238962173462
    2. 'print' → logprob: -1.2805238962173462
    3. ' print' → logprob: -2.0305237770080566
    4. '           ' → logprob: -6.030523777008057
    5. '   ' → logprob: -8.905524253845215
    6. '	print' → logprob: -13.155524253845215
    7. '               ' → logprob: -13.655524253845215
    8. '        ' → logprob: -14.155524253845215
    9. '    ' → logprob: -14.655524253845215
    10. '     ' → logprob: -15.405524253845215

Token 386: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02975199744105339
    2. ' print' → logprob: -3.529752016067505
    3. 'pr' → logprob: -13.779751777648926
    4. ' prin' → logprob: -14.779751777648926
    5. 'prin' → logprob: -16.154752731323242
    6. ' pr' → logprob: -18.029752731323242
    7. 'printf' → logprob: -18.529752731323242
    8. '           ' → logprob: -19.029752731323242
    9. '    ' → logprob: -19.904752731323242
    10. 'prit' → logprob: -20.404752731323242

Token 387: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0016797020798549056
    2. 'ans' → logprob: -6.50167989730835
    3. ' ans' → logprob: -8.751679420471191
    4. '(' → logprob: -10.876679420471191
    5. '	ans' → logprob: -16.001680374145508
    6. ' (' → logprob: -16.501680374145508
    7. '(answer' → logprob: -17.751680374145508
    8. '(
' → logprob: -17.876680374145508
    9. '(max' → logprob: -18.001680374145508
    10. '_ans' → logprob: -18.001680374145508

Token 388: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3782830137643032e-05
    2. ')
' → logprob: -11.25001335144043
    3. ' )' → logprob: -15.00001335144043
    4. '<|end|>' → logprob: -15.62501335144043
    5. '       ' → logprob: -16.50001335144043
    6. '   ' → logprob: -17.50001335144043
    7. ')}' → logprob: -17.87501335144043
    8. ')#' → logprob: -17.87501335144043
    9. ')return' → logprob: -18.12501335144043
    10. '）' → logprob: -18.25001335144043

Token 389: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 390: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.062033675611019135
    2. 'main' → logprob: -2.8120336532592773
    3. '__' → logprob: -10.187033653259277
    4. ' __' → logprob: -11.062033653259277
    5. '_main' → logprob: -11.937033653259277
    6. ' input' → logprob: -13.312033653259277
    7. 'input' → logprob: -13.312033653259277
    8. '	main' → logprob: -13.937033653259277
    9. ' read' → logprob: -14.062033653259277
    10. ' parse' → logprob: -15.187033653259277

Token 391: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.3199920178740285e-05
    2. '():
' → logprob: -11.375022888183594
    3. ' ():' → logprob: -11.500022888183594
    4. '()' → logprob: -14.000022888183594
    5. '(' → logprob: -15.000022888183594
    6. '():
' → logprob: -15.875022888183594
    7. '()>' → logprob: -16.375022888183594
    8. '():

' → logprob: -17.750022888183594
    9. '(":' → logprob: -18.125022888183594
    10. '()">' → logprob: -18.375022888183594

Token 392: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46605944633483887
    2. ' import' → logprob: -1.0910594463348389
    3. 'import' → logprob: -3.716059446334839
    4. ' n' → logprob: -4.966059684753418
    5. 'n' → logprob: -5.841059684753418
    6. ' input' → logprob: -6.716059684753418
    7. '```' → logprob: -7.966059684753418
    8. ' readline' → logprob: -7.966059684753418
    9. ' pass' → logprob: -8.841059684753418
    10. '	import' → logprob: -9.466059684753418

Token 393: ' inputs' (ID: 21963)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11381494998931885
    2. 'n' → logprob: -2.8638148307800293
    3. ' input' → logprob: -3.3638148307800293
    4. 'import' → logprob: -4.863814830780029
    5. '   ' → logprob: -4.863814830780029
    6. ' n' → logprob: -8.113815307617188
    7. 'N' → logprob: -9.113815307617188
    8. ' import' → logprob: -9.863815307617188
    9. 'data' → logprob: -12.113815307617188
    10. ' ' → logprob: -12.113815307617188

Token 394: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3255387544631958
    2. '=' → logprob: -1.3255387544631958
    3. '()' → logprob: -4.575538635253906
    4. '_' → logprob: -6.450538635253906
    5. '(' → logprob: -8.950538635253906
    6. '   ' → logprob: -9.575538635253906
    7. ' ' → logprob: -10.325538635253906
    8. '_line' → logprob: -10.825538635253906
    9. '_=' → logprob: -10.825538635253906
    10. '.' → logprob: -11.950538635253906

Token 395: ' []
' (ID: 8911)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3868895173072815
    2. ' sys' → logprob: -1.1368894577026367
    3. 'input' → logprob: -11.761889457702637
    4. '[]' → logprob: -12.636889457702637
    5. '=sys' → logprob: -13.011889457702637
    6. '[' → logprob: -13.386889457702637
    7. '	sys' → logprob: -13.636889457702637
    8. 'list' → logprob: -14.136889457702637
    9. ' input' → logprob: -14.636889457702637
    10. '(sys' → logprob: -14.636889457702637

Token 396: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11666794121265411
    2. ' for' → logprob: -2.6166679859161377
    3. 'for' → logprob: -3.8666679859161377
    4. ' ' → logprob: -5.366667747497559
    5. '    
' → logprob: -5.991667747497559
    6. ' while' → logprob: -6.116667747497559
    7. ' line' → logprob: -6.741667747497559
    8. 'while' → logprob: -7.366667747497559
    9. ' 
' → logprob: -7.491667747497559
    10. '    ' → logprob: -7.741667747497559

Token 397: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.639128565788269
    2. ' for' → logprob: -0.764128565788269
    3. '   ' → logprob: -5.639128684997559
    4. ' lines' → logprob: -7.264128684997559
    5. 'while' → logprob: -7.264128684997559
    6. ' while' → logprob: -7.389128684997559
    7. ' line' → logprob: -7.639128684997559
    8. 'line' → logprob: -8.264128684997559
    9. 'lines' → logprob: -9.514128684997559
    10. ' n' → logprob: -10.514128684997559

Token 398: ' line' (ID: 2543)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14736196398735046
    2. 'line' → logprob: -2.647361993789673
    3. ' line' → logprob: -2.897361993789673
    4. '_line' → logprob: -5.147361755371094
    5. ' _' → logprob: -5.272361755371094
    6. 'l' → logprob: -10.272361755371094
    7. ' l' → logprob: -11.647361755371094
    8. '	line' → logprob: -11.897361755371094
    9. '_l' → logprob: -12.022361755371094
    10. ' ' → logprob: -13.022361755371094

Token 399: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0052422950975596905
    2. 'in' → logprob: -5.255242347717285
    3. ' ' → logprob: -12.630242347717285
    4. '	in' → logprob: -13.755242347717285
    5. 'import' → logprob: -14.630242347717285
    6. 's' → logprob: -14.630242347717285
    7. ' ' → logprob: -14.630242347717285
    8. ' i' → logprob: -14.755242347717285
    9. 'n' → logprob: -14.880242347717285
    10. '_' → logprob: -15.005242347717285

Token 400: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.014164687134325504
    2. ' sys' → logprob: -4.264164924621582
    3. '=sys' → logprob: -14.389164924621582
    4. '	sys' → logprob: -14.514164924621582
    5. 'stdin' → logprob: -16.389163970947266
    6. '(sys' → logprob: -16.639163970947266
    7. 'input' → logprob: -19.264163970947266
    8. 'iter' → logprob: -19.764163970947266
    9. 'sy' → logprob: -19.889163970947266
    10. '.sys' → logprob: -20.139163970947266

Token 401: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0017950162291526794
    2. 'stdin' → logprob: -6.376794815063477
    3. '.' → logprob: -9.751794815063477
    4. '.readline' → logprob: -11.501794815063477
    5. ' stdin' → logprob: -11.626794815063477
    6. '(stdin' → logprob: -11.876794815063477
    7. '.stdout' → logprob: -12.626794815063477
    8. 'input' → logprob: -13.501794815063477
    9. '.readlines' → logprob: -13.626794815063477
    10. '.argv' → logprob: -14.126794815063477

Token 402: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6011738181114197
    2. 'in' → logprob: -1.6011738777160645
    3. ':' → logprob: -2.1011738777160645
    4. '.readline' → logprob: -2.8511738777160645
    5. '.readlines' → logprob: -3.1011738777160645
    6. ':
' → logprob: -4.7261738777160645
    7. '   ' → logprob: -4.8511738777160645
    8. '.' → logprob: -4.9761738777160645
    9. '.rstrip' → logprob: -8.101173400878906
    10. 'rstrip' → logprob: -8.726173400878906

Token 403: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017054134514182806
    2. '   ' → logprob: -7.626705646514893
    3. ' inputs' → logprob: -7.876705646514893
    4. '<|end|>' → logprob: -8.001705169677734
    5. 'inputs' → logprob: -8.626705169677734
    6. '(inputs' → logprob: -9.001705169677734
    7. '<|end|>' → logprob: -10.251705169677734
    8. '    ' → logprob: -10.376705169677734
    9. ' if' → logprob: -10.626705169677734
    10. '    
' → logprob: -10.626705169677734

Token 404: ' for' (ID: 395)
  Prédit: ' inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inputs' → logprob: -0.2187262773513794
    2. 'inputs' → logprob: -1.8437262773513794
    3. '       ' → logprob: -3.71872615814209
    4. '   ' → logprob: -4.34372615814209
    5. ' if' → logprob: -7.09372615814209
    6. 'if' → logprob: -9.96872615814209
    7. '    ' → logprob: -10.34372615814209
    8. '(inputs' → logprob: -10.96872615814209
    9. '_inputs' → logprob: -11.71872615814209
    10. ' line' → logprob: -11.84372615814209

Token 405: ' word' (ID: 2195)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.2671054005622864
    2. ' token' → logprob: -2.1421053409576416
    3. 'x' → logprob: -2.7671053409576416
    4. ' x' → logprob: -3.3921053409576416
    5. 'part' → logprob: -5.517105579376221
    6. ' part' → logprob: -5.642105579376221
    7. 'v' → logprob: -5.642105579376221
    8. 'item' → logprob: -5.892105579376221
    9. 'tok' → logprob: -6.267105579376221
    10. ' val' → logprob: -6.892105579376221

Token 406: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015175960725173354
    2. 'in' → logprob: -6.5015177726745605
    3. 's' → logprob: -11.751517295837402
    4. ' ' → logprob: -12.376517295837402
    5. '_' → logprob: -14.751517295837402
    6. 'import' → logprob: -14.876517295837402
    7. '	in' → logprob: -15.126517295837402
    8. '_in' → logprob: -15.376517295837402
    9. ' ' → logprob: -15.814017295837402
    10. ' 
' → logprob: -15.876517295837402

Token 407: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.023246178403496742
    2. ' line' → logprob: -3.7732462882995605
    3. '(line' → logprob: -15.148245811462402
    4. '	line' → logprob: -15.523245811462402
    5. '[line' → logprob: -15.898245811462402
    6. '=line' → logprob: -16.89824676513672
    7. '#line' → logprob: -17.14824676513672
    8. '   ' → logprob: -18.27324676513672
    9. ' ' → logprob: -18.27324676513672
    10. 'lin' → logprob: -18.39824676513672

Token 408: '.strip' (ID: 40613)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.14532877504825592
    2. '.strip' → logprob: -2.0203287601470947
    3. '.' → logprob: -6.145328998565674
    4. ' .' → logprob: -8.020328521728516
    5. '.rstrip' → logprob: -8.895328521728516
    6. 'split' → logprob: -10.395328521728516
    7. '().' → logprob: -12.270328521728516
    8. '       ' → logprob: -13.520328521728516
    9. '   ' → logprob: -13.895328521728516
    10. ' split' → logprob: -13.895328521728516

Token 409: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.3915141355246305e-05
    2. '()' → logprob: -11.25002384185791
    3. '.split' → logprob: -11.50002384185791
    4. ' ().' → logprob: -15.12502384185791
    5. 'split' → logprob: -15.37502384185791
    6. '().'' → logprob: -16.750024795532227
    7. '.' → logprob: -17.750024795532227
    8. '   ' → logprob: -18.000024795532227
    9. ' .' → logprob: -18.250024795532227
    10. '       ' → logprob: -18.500024795532227

Token 410: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -15.625
    3. '(split' → logprob: -17.375
    4. '.split' → logprob: -18.125
    5. 'spl' → logprob: -20.5
    6. '_split' → logprob: -20.75
    7. 'rstrip' → logprob: -21.875
    8. 'plit' → logprob: -22.5
    9. 'Split' → logprob: -23.375
    10. 'strip' → logprob: -24.0

Token 411: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03222902491688728
    2. '()' → logprob: -3.532228946685791
    3. '():
' → logprob: -6.532228946685791
    4. '(' → logprob: -7.282228946685791
    5. '('' → logprob: -9.03222942352295
    6. ' ():' → logprob: -9.65722942352295
    7. '()>' → logprob: -9.78222942352295
    8. '()">' → logprob: -10.90722942352295
    9. '(),' → logprob: -11.15722942352295
    10. '():

' → logprob: -11.65722942352295

Token 412: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008057271130383015
    2. 'inputs' → logprob: -4.883057117462158
    3. ' inputs' → logprob: -8.008057594299316
    4. '       ' → logprob: -9.633057594299316
    5. '(inputs' → logprob: -10.633057594299316
    6. '   ' → logprob: -11.383057594299316
    7. '	       ' → logprob: -12.758057594299316
    8. '_inputs' → logprob: -13.008057594299316
    9. '            
' → logprob: -13.008057594299316
    10. ',' → logprob: -13.258057594299316

Token 413: ' inputs' (ID: 21963)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' (adapté à ' inputs') → logprob: -0.008615161292254925
    2. ' inputs' → logprob: -4.758615016937256
    3. '   ' → logprob: -14.758615493774414
    4. '               ' → logprob: -15.508615493774414
    5. '           ' → logprob: -16.258615493774414
    6. 'input' → logprob: -17.133615493774414
    7. '_inputs' → logprob: -18.258615493774414
    8. '       ' → logprob: -18.508615493774414
    9. '(inputs' → logprob: -18.758615493774414
    10. '.inputs' → logprob: -18.883615493774414

Token 414: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00026872646412812173
    2. '.' → logprob: -8.250268936157227
    3. '.app' → logprob: -12.750268936157227
    4. ' .' → logprob: -12.875268936157227
    5. '.ap' → logprob: -14.000268936157227
    6. '.extend' → logprob: -14.000268936157227
    7. '.push' → logprob: -16.375268936157227
    8. '.add' → logprob: -16.625268936157227
    9. '.py' → logprob: -16.625268936157227
    10. '.Append' → logprob: -16.875268936157227

Token 415: '(word' (ID: 35459)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8340796828269958
    2. '(int' → logprob: -1.3340797424316406
    3. '(word' → logprob: -1.5840797424316406
    4. 'word' → logprob: -2.3340797424316406
    5. '(' → logprob: -8.70907974243164
    6. ' word' → logprob: -9.45907974243164
    7. ' int' → logprob: -10.20907974243164
    8. '(
' → logprob: -11.95907974243164
    9. '(str' → logprob: -14.83407974243164
    10. '[word' → logprob: -15.08407974243164

Token 416: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.641841820150148e-05
    2. ' )' → logprob: -10.87502670288086
    3. ')
' → logprob: -12.12502670288086
    4. '<|end|>' → logprob: -14.50002670288086
    5. '   ' → logprob: -14.87502670288086
    6. ')}}' → logprob: -15.25002670288086
    7. '       ' → logprob: -15.37502670288086
    8. '))' → logprob: -16.12502670288086
    9. '           ' → logprob: -16.25002670288086
    10. ')return' → logprob: -16.62502670288086

Token 417: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016624849289655685
    2. '
' → logprob: -4.891624927520752
    3. '    
' → logprob: -4.891624927520752
    4. '<|end|>' → logprob: -7.516624927520752
    5. ' 
' → logprob: -8.641624450683594
    6. '  
' → logprob: -9.391624450683594
    7. ' ' → logprob: -9.391624450683594
    8. '    ' → logprob: -9.391624450683594
    9. 'index' → logprob: -9.391624450683594
    10. 'n' → logprob: -9.516624450683594

Token 418: ' idx' (ID: 14016)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5890465378761292
    2. 'n' → logprob: -0.9640465378761292
    3. 'i' → logprob: -3.7140464782714844
    4. ' i' → logprob: -3.9640464782714844
    5. 'idx' (adapté à ' idx') → logprob: -4.714046478271484
    6. ' idx' → logprob: -4.964046478271484
    7. '   ' → logprob: -5.839046478271484
    8. ' ' → logprob: -7.464046478271484
    9. ' 
' → logprob: -8.089046478271484
    10. 'index' → logprob: -9.214046478271484

Token 419: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889584451913834
    2. '=' → logprob: -2.5788958072662354
    3. ' +=' → logprob: -12.703895568847656
    4. ' ' → logprob: -13.078895568847656
    5. '+=' → logprob: -15.328895568847656
    6. ')' → logprob: -16.078895568847656
    7. '   ' → logprob: -16.203895568847656
    8. ' =
' → logprob: -16.328895568847656
    9. '  ' → logprob: -16.453895568847656
    10. ' ' → logprob: -16.453895568847656

Token 420: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005233882926404476
    2. ' ' → logprob: -5.2552337646484375
    3. '1' → logprob: -17.380233764648438
    4. '   ' → logprob: -19.380233764648438
    5. ' ' → logprob: -20.755233764648438
    6. '  ' → logprob: -20.880233764648438
    7. ' 
' → logprob: -21.380233764648438
    8. '۰' → logprob: -21.380233764648438
    9. '    ' → logprob: -22.005233764648438
    10. '```' → logprob: -22.380233764648438

Token 421: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.12500762939453
    4. '1' → logprob: -18.37500762939453
    5. 'int' → logprob: -20.25000762939453
    6. '```' → logprob: -20.75000762939453
    7. '[' → logprob: -21.00000762939453
    8. '  ' → logprob: -21.18750762939453
    9. 'len' → logprob: -21.18750762939453
    10. '۰' → logprob: -21.87500762939453

Token 422: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02423686720430851
    2. ' n' → logprob: -3.7742369174957275
    3. '   ' → logprob: -7.774236679077148
    4. '
' → logprob: -8.274236679077148
    5. ' 
' → logprob: -8.649236679077148
    6. '	n' → logprob: -9.774236679077148
    7. ' ' → logprob: -10.024236679077148
    8. '    
' → logprob: -11.024236679077148
    9. ',' → logprob: -11.774236679077148
    10. ' ,' → logprob: -12.399236679077148

Token 423: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05717295780777931
    2. '   ' → logprob: -3.307173013687134
    3. ' n' → logprob: -4.057172775268555
    4. '	n' → logprob: -7.057172775268555
    5. '
' → logprob: -7.307172775268555
    6. '    
' → logprob: -10.432172775268555
    7. ' ' → logprob: -10.807172775268555
    8. ' 
' → logprob: -11.182172775268555
    9. ',' → logprob: -11.432172775268555
    10. '```' → logprob: -11.432172775268555

Token 424: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0002913678181357682
    2. ' n' → logprob: -8.25029182434082
    3. 'def' → logprob: -11.25029182434082
    4. '   ' → logprob: -11.50029182434082
    5. '
' → logprob: -12.12529182434082
    6. '    
' → logprob: -14.00029182434082
    7. '	n' → logprob: -15.37529182434082
    8. 't' → logprob: -15.50029182434082
    9. '```' → logprob: -16.87529182434082
    10. '_n' → logprob: -16.87529182434082

Token 425: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35033953189849854
    2. '=' → logprob: -1.2253395318984985
    3. ',' → logprob: -6.350339412689209
    4. ' ' → logprob: -9.475339889526367
    5. ' =
' → logprob: -10.350339889526367
    6. ' ,' → logprob: -10.475339889526367
    7. '=int' → logprob: -13.225339889526367
    8. '=
' → logprob: -13.350339889526367
    9. ' =)' → logprob: -13.600339889526367
    10. '   ' → logprob: -13.725339889526367

Token 426: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019286326132714748
    2. ' int' → logprob: -6.251928806304932
    3. '=int' → logprob: -20.001928329467773
    4. ' ' → logprob: -20.376928329467773
    5. '[int' → logprob: -20.626928329467773
    6. '(int' → logprob: -21.376928329467773
    7. '	int' → logprob: -22.126928329467773
    8. '  ' → logprob: -22.251928329467773
    9. '   ' → logprob: -22.376928329467773
    10. '<int' → logprob: -22.501928329467773

Token 427: '(inputs' (ID: 78697)
  Prédit: '(inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inputs' → logprob: -0.011073997244238853
    2. '(' → logprob: -4.511074066162109
    3. 'inputs' → logprob: -10.88607406616211
    4. '(input' → logprob: -12.26107406616211
    5. '(
' → logprob: -13.26107406616211
    6. ' (' → logprob: -14.51107406616211
    7. ' inputs' → logprob: -16.01107406616211
    8. '(in' → logprob: -16.01107406616211
    9. '(

' → logprob: -16.63607406616211
    10. '(outputs' → logprob: -17.76107406616211

Token 428: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.375000953674316
    3. 'idx' → logprob: -15.625000953674316
    4. ' [' → logprob: -16.125
    5. ')' → logprob: -17.875
    6. ' idx' → logprob: -18.125
    7. '	idx' → logprob: -18.375
    8. '   ' → logprob: -19.125
    9. ' ' → logprob: -19.375
    10. '(idx' → logprob: -20.375

Token 429: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011140016838908195
    2. ')
' → logprob: -4.511139869689941
    3. ');' → logprob: -9.386139869689941
    4. ' )' → logprob: -12.011139869689941
    5. '])' → logprob: -14.136139869689941
    6. ' )
' → logprob: -14.386139869689941
    7. ');
' → logprob: -15.511139869689941
    8. ')
' → logprob: -15.511139869689941
    9. ']' → logprob: -15.886139869689941
    10. ')

' → logprob: -16.011140823364258

Token 430: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 431: ' idx' (ID: 14016)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 432: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6494080424308777
    2. ' +=' → logprob: -0.8994080424308777
    3. '+' → logprob: -2.6494081020355225
    4. ' +' → logprob: -9.399408340454102
    5. '=' → logprob: -9.899408340454102
    6. ' =' → logprob: -12.899408340454102
    7. '+="' → logprob: -13.399408340454102
    8. '+='' → logprob: -13.399408340454102
    9. ']+=' → logprob: -14.024408340454102
    10. ' ' → logprob: -14.274408340454102

Token 433: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '１' → logprob: -23.75002670288086
    4. '```' → logprob: -25.12502670288086
    5. '
' → logprob: -25.62502670288086
    6. ' ' → logprob: -26.00002670288086
    7. '   ' → logprob: -26.37502670288086
    8. '+' → logprob: -26.50002670288086
    9. '2' → logprob: -26.62502670288086
    10. '`' → logprob: -27.00002670288086

Token 434: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -20.25
    4. '１' → logprob: -20.375
    5. '
' → logprob: -20.875
    6. '   ' → logprob: -21.625
    7. '۱' → logprob: -22.3125
    8. '১' → logprob: -22.8125
    9. '१' → logprob: -22.9375
    10. '' → logprob: -23.3125

Token 435: '
' (ID: 198)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0044625201262533665
    2. ' m' → logprob: -5.504462718963623
    3. '   ' → logprob: -7.879462718963623
    4. '	m' → logprob: -12.379462242126465
    5. ',m' → logprob: -14.504462242126465
    6. '<|end|>' → logprob: -14.754462242126465
    7. ' ' → logprob: -15.254462242126465
    8. '
' → logprob: -16.12946319580078
    9. '  ' → logprob: -17.00446319580078
    10. ';m' → logprob: -17.62946319580078

Token 436: '   ' (ID: 271)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00011677479778882116
    2. ' m' → logprob: -9.750116348266602
    3. '   ' → logprob: -9.750116348266602
    4. '	m' → logprob: -16.3751163482666
    5. '```' → logprob: -20.0001163482666
    6. ' ' → logprob: -20.7501163482666
    7. '  ' → logprob: -21.1251163482666
    8. ',m' → logprob: -21.7501163482666
    9. '_m' → logprob: -21.8751163482666
    10. '    
' → logprob: -22.0001163482666

Token 437: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -1.9361264946837764e-07
    2. ' m' → logprob: -16.125
    3. '   ' → logprob: -16.75
    4. '	m' → logprob: -20.25
    5. '
' → logprob: -21.125
    6. '    
' → logprob: -22.125
    7. '```' → logprob: -22.375
    8. '_m' → logprob: -23.0
    9. ' 
' → logprob: -23.875
    10. 'м' → logprob: -23.875

Token 438: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06216206029057503
    2. '=' → logprob: -2.812162160873413
    3. ' ' → logprob: -9.062162399291992
    4. ' +=' → logprob: -9.812162399291992
    5. '+=' → logprob: -11.437162399291992
    6. '<|end|>' → logprob: -11.812162399291992
    7. ' =
' → logprob: -12.687162399291992
    8. '=int' → logprob: -14.687162399291992
    9. '=
' → logprob: -14.937162399291992
    10. ')' → logprob: -15.312162399291992

Token 439: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06196768581867218
    2. ' int' → logprob: -2.811967611312866
    3. '=int' → logprob: -17.811967849731445
    4. '[int' → logprob: -18.436967849731445
    5. '(int' → logprob: -19.311967849731445
    6. ':int' → logprob: -20.186967849731445
    7. '<int' → logprob: -21.186967849731445
    8. '	int' → logprob: -21.311967849731445
    9. '   ' → logprob: -21.686967849731445
    10. ' ' → logprob: -22.061967849731445

Token 440: '(inputs' (ID: 78697)
  Prédit: '(inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inputs' → logprob: -3.650518920039758e-06
    2. 'inputs' → logprob: -12.750003814697266
    3. '(' → logprob: -14.750003814697266
    4. '(input' → logprob: -15.375003814697266
    5. ' inputs' → logprob: -16.750003814697266
    6. ' (' → logprob: -16.875003814697266
    7. '(in' → logprob: -17.250003814697266
    8. '(inp' → logprob: -18.500003814697266
    9. '(outputs' → logprob: -19.500003814697266
    10. '(
' → logprob: -20.625003814697266

Token 441: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.225939872208983e-05
    2. 'idx' → logprob: -10.375032424926758
    3. ']' → logprob: -15.000032424926758
    4. ' idx' → logprob: -15.125032424926758
    5. '(idx' → logprob: -15.375032424926758
    6. ')' → logprob: -16.375032424926758
    7. '	idx' → logprob: -16.875032424926758
    8. '   ' → logprob: -18.375032424926758
    9. '][' → logprob: -18.500032424926758
    10. '```' → logprob: -18.500032424926758

Token 442: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001329287188127637
    2. ')
' → logprob: -6.62632942199707
    3. '   ' → logprob: -13.37632942199707
    4. ' )' → logprob: -15.00132942199707
    5. '<|end|>' → logprob: -15.00132942199707
    6. 'idx' → logprob: -15.12632942199707
    7. '),' → logprob: -15.25132942199707
    8. ')#' → logprob: -15.87632942199707
    9. ')\
' → logprob: -16.00132942199707
    10. ')

' → logprob: -16.37632942199707

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9408872723579407
    2. ' idx' → logprob: -1.065887212753296
    3. 'idx' → logprob: -2.315887212753296
    4. '<|end|>' → logprob: -2.690887212753296
    5. '	idx' → logprob: -3.190887212753296
    6. '[idx' → logprob: -3.190887212753296
    7. ' 
' → logprob: -4.940887451171875
    8. '(idx' → logprob: -6.065887451171875
    9. '
' → logprob: -6.065887451171875
    10. '    
' → logprob: -6.315887451171875

Token 444: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.00160138716455549
    2. 'idx' (adapté à ' idx') → logprob: -6.501601219177246
    3. ' 
' → logprob: -9.876601219177246
    4. '	idx' → logprob: -10.376601219177246
    5. '[idx' → logprob: -11.751601219177246
    6. '
' → logprob: -13.251601219177246
    7. '   ' → logprob: -13.376601219177246
    8. '(idx' → logprob: -13.376601219177246
    9. '_idx' → logprob: -13.376601219177246
    10. ' ' → logprob: -14.001601219177246

Token 445: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3868757486343384
    2. ' +=' → logprob: -1.1368757486343384
    3. '+' → logprob: -12.886876106262207
    4. '=' → logprob: -13.511876106262207
    5. ']+=' → logprob: -14.761876106262207
    6. '```' → logprob: -15.136876106262207
    7. ' =' → logprob: -16.88687515258789
    8. ' +' → logprob: -17.01187515258789
    9. '+="' → logprob: -18.13687515258789
    10. ' ' → logprob: -18.26187515258789

Token 446: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. '```' → logprob: -19.751928329467773
    4. ' ' → logprob: -19.876928329467773
    5. '
' → logprob: -20.876928329467773
    6. '１' → logprob: -21.376928329467773
    7. ' 
' → logprob: -22.126928329467773
    8. '0' → logprob: -22.126928329467773
    9. '`' → logprob: -22.376928329467773
    10. '+' → logprob: -22.501928329467773

Token 447: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '
' → logprob: -19.250001907348633
    4. '```' → logprob: -19.250001907348633
    5. '   ' → logprob: -20.750001907348633
    6. '１' → logprob: -21.562501907348633
    7. '+' → logprob: -21.625001907348633
    8. '۱' → logprob: -21.750001907348633
    9. '0' → logprob: -22.125001907348633
    10. '11' → logprob: -22.375001907348633

Token 448: '
' (ID: 198)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0011853496544063091
    2. '   ' → logprob: -6.751185417175293
    3. ' l' → logprob: -11.626185417175293
    4. '	l' → logprob: -12.126185417175293
    5. '
' → logprob: -14.126185417175293
    6. '    
' → logprob: -16.876184463500977
    7. '```' → logprob: -16.876184463500977
    8. 'n' → logprob: -17.751184463500977
    9. '_l' → logprob: -18.126184463500977
    10. '  ' → logprob: -18.626184463500977

Token 449: '   ' (ID: 271)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -3.5597102396423e-05
    2. ' l' → logprob: -10.875035285949707
    3. '   ' → logprob: -11.250035285949707
    4. '	l' → logprob: -12.750035285949707
    5. '
' → logprob: -14.500035285949707
    6. '_l' → logprob: -16.000036239624023
    7. '```' → logprob: -16.250036239624023
    8. 'n' → logprob: -17.250036239624023
    9. '    
' → logprob: -17.625036239624023
    10. ',l' → logprob: -18.375036239624023

Token 450: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -1.0280383548888494e-06
    2. ' l' → logprob: -14.375000953674316
    3. '   ' → logprob: -15.375000953674316
    4. '
' → logprob: -16.625001907348633
    5. '    
' → logprob: -17.750001907348633
    6. '```' → logprob: -17.875001907348633
    7. '_l' → logprob: -18.375001907348633
    8. '	l' → logprob: -18.625001907348633
    9. 'L' → logprob: -19.250001907348633
    10. '`' → logprob: -20.625001907348633

Token 451: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061972279101610184
    2. '=' → logprob: -2.8119723796844482
    3. ' ' → logprob: -12.686972618103027
    4. ' +=' → logprob: -13.686972618103027
    5. ' =
' → logprob: -15.311972618103027
    6. ',' → logprob: -16.68697166442871
    7. '=int' → logprob: -16.81197166442871
    8. '+=' → logprob: -17.06197166442871
    9. ' -=' → logprob: -17.43697166442871
    10. ' ,' → logprob: -17.56197166442871

Token 452: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006715370807796717
    2. ' int' → logprob: -5.006715297698975
    3. 'float' → logprob: -16.756715774536133
    4. '   ' → logprob: -20.006715774536133
    5. '(int' → logprob: -20.256715774536133
    6. '	int' → logprob: -20.881715774536133
    7. ' float' → logprob: -21.131715774536133
    8. ' ' → logprob: -21.256715774536133
    9. '=int' → logprob: -21.256715774536133
    10. '[int' → logprob: -21.506715774536133

Token 453: '(inputs' (ID: 78697)
  Prédit: '(inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inputs' → logprob: -6.742448022123426e-05
    2. 'inputs' → logprob: -10.000067710876465
    3. '(' → logprob: -10.875067710876465
    4. ' inputs' → logprob: -13.500067710876465
    5. '(input' → logprob: -13.875067710876465
    6. ' (' → logprob: -14.500067710876465
    7. '(in' → logprob: -16.75006675720215
    8. '(inp' → logprob: -17.00006675720215
    9. '(outputs' → logprob: -18.00006675720215
    10. '()' → logprob: -19.37506675720215

Token 454: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.1041145626222715e-05
    2. 'idx' → logprob: -11.500011444091797
    3. '(idx' → logprob: -14.500011444091797
    4. ' idx' → logprob: -15.500011444091797
    5. '	idx' → logprob: -16.250011444091797
    6. '
' → logprob: -17.500011444091797
    7. '   ' → logprob: -17.625011444091797
    8. ']' → logprob: -18.125011444091797
    9. '[
' → logprob: -19.000011444091797
    10. ' [' → logprob: -19.625011444091797

Token 455: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014168680645525455
    2. ')
' → logprob: -4.264168739318848
    3. '   ' → logprob: -12.389168739318848
    4. ' )' → logprob: -15.264168739318848
    5. ')
' → logprob: -15.514168739318848
    6. ']' → logprob: -15.514168739318848
    7. '）' → logprob: -16.38916778564453
    8. '),' → logprob: -16.88916778564453
    9. ')

' → logprob: -16.88916778564453
    10. ')#' → logprob: -17.13916778564453

Token 456: '   ' (ID: 271)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.8684451580047607
    2. ' idx' → logprob: -1.1184451580047607
    3. '   ' → logprob: -2.1184451580047607
    4. '	idx' → logprob: -2.7434451580047607
    5. '[idx' → logprob: -2.8684451580047607
    6. '(idx' → logprob: -4.86844539642334
    7. '<|end|>' → logprob: -6.11844539642334
    8. '_idx' → logprob: -7.11844539642334
    9. '
' → logprob: -7.36844539642334
    10. '```' → logprob: -8.36844539642334

Token 457: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.4413646459579468
    2. 'idx' (adapté à ' idx') → logprob: -1.0663646459579468
    3. '   ' → logprob: -5.316364765167236
    4. '	idx' → logprob: -5.941364765167236
    5. '[idx' → logprob: -6.191364765167236
    6. '
' → logprob: -6.191364765167236
    7. ' 
' → logprob: -8.191364288330078
    8. '_idx' → logprob: -8.191364288330078
    9. '(idx' → logprob: -8.441364288330078
    10. '\n' → logprob: -9.691364288330078

Token 458: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31327617168426514
    2. ' +=' → logprob: -1.3132761716842651
    3. '+' → logprob: -11.313276290893555
    4. '=' → logprob: -13.688276290893555
    5. ']+=' → logprob: -14.688276290893555
    6. ' +' → logprob: -15.063276290893555
    7. '```' → logprob: -16.313276290893555
    8. '++' → logprob: -16.313276290893555
    9. ' ' → logprob: -16.688276290893555
    10. ' =' → logprob: -17.063276290893555

Token 459: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06196768581867218
    2. ' ' → logprob: -2.811967611312866
    3. ' ' → logprob: -18.436967849731445
    4. '3' → logprob: -18.561967849731445
    5. '```' → logprob: -19.186967849731445
    6. '0' → logprob: -19.936967849731445
    7. ' 
' → logprob: -19.936967849731445
    8. '
' → logprob: -20.061967849731445
    9. '2' → logprob: -20.061967849731445
    10. '１' → logprob: -20.311967849731445

Token 460: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '3' → logprob: -17.75002670288086
    4. '```' → logprob: -18.75002670288086
    5. '   ' → logprob: -19.37502670288086
    6. '１' → logprob: -20.00002670288086
    7. '
' → logprob: -20.12502670288086
    8. '0' → logprob: -21.00002670288086
    9. '2' → logprob: -21.37502670288086
    10. ' ' → logprob: -22.06252670288086

Token 461: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0031859094742685556
    2. '   ' → logprob: -5.753185749053955
    3. ' a' → logprob: -12.003186225891113
    4. '    
' → logprob: -13.753186225891113
    5. 'for' → logprob: -14.378186225891113
    6. '	a' → logprob: -15.378186225891113
    7. '
' → logprob: -16.378185272216797
    8. '```' → logprob: -16.753185272216797
    9. ' ' → logprob: -17.253185272216797
    10. '  ' → logprob: -17.753185272216797

Token 462: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020461321400944144
    2. '   ' → logprob: -8.500205039978027
    3. ' a' → logprob: -13.750205039978027
    4. '	a' → logprob: -16.87520408630371
    5. '#a' → logprob: -18.62520408630371
    6. '    
' → logprob: -18.87520408630371
    7. '```' → logprob: -19.12520408630371
    8. '  ' → logprob: -19.62520408630371
    9. '       ' → logprob: -19.75020408630371
    10. ',a' → logprob: -19.87520408630371

Token 463: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -3.128163257315464e-07
    2. ' a' → logprob: -15.5
    3. '   ' → logprob: -17.375
    4. '    
' → logprob: -21.625
    5. '	a' → logprob: -22.625
    6. '  ' → logprob: -22.875
    7. ' ' → logprob: -24.25
    8. '```' → logprob: -24.625
    9. '    ' → logprob: -25.125
    10. '_a' → logprob: -25.5

Token 464: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03813650459051132
    2. ' =' → logprob: -3.2881364822387695
    3. '=[]' → logprob: -9.91313648223877
    4. ',' → logprob: -10.03813648223877
    5. '[' → logprob: -13.66313648223877
    6. '[]' → logprob: -15.66313648223877
    7. '=[' → logprob: -16.288137435913086
    8. 'a' → logprob: -16.413137435913086
    9. '=[]
' → logprob: -16.788137435913086
    10. ',a' → logprob: -17.288137435913086

Token 465: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.002573875244706869
    2. '[' → logprob: -6.0025739669799805
    3. '[]
' → logprob: -10.00257396697998
    4. '[int' → logprob: -10.25257396697998
    5. '[list' → logprob: -12.37757396697998
    6. '[a' → logprob: -13.25257396697998
    7. '[]>' → logprob: -13.62757396697998
    8. ' []' → logprob: -13.87757396697998
    9. '[num' → logprob: -13.87757396697998
    10. '[]}' → logprob: -14.00257396697998

Token 466: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08368255943059921
    2. '<|end|>' → logprob: -2.7086825370788574
    3. 'for' → logprob: -4.458682537078857
    4. ' for' → logprob: -7.208682537078857
    5. '   ' → logprob: -7.958682537078857
    6. '[]' → logprob: -8.333683013916016
    7. '[' → logprob: -8.583683013916016
    8. '<|end|>' → logprob: -9.083683013916016
    9. ',b' → logprob: -9.333683013916016
    10. ' b' → logprob: -9.833683013916016

Token 467: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0034581103827804327
    2. 'for' → logprob: -6.128458023071289
    3. '[]' → logprob: -7.253458023071289
    4. ' for' → logprob: -8.253458023071289
    5. '<|end|>' → logprob: -9.378458023071289
    6. '[' → logprob: -9.503458023071289
    7. ' b' → logprob: -9.753458023071289
    8. '=[]' → logprob: -10.128458023071289
    9. '[]
' → logprob: -10.378458023071289
    10. '=[]
' → logprob: -12.253458023071289

Token 468: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4744779169559479
    2. ' =' → logprob: -0.9744778871536255
    3. '=[]' → logprob: -7.849477767944336
    4. ',' → logprob: -12.474477767944336
    5. '=[]
' → logprob: -13.099477767944336
    6. ' ' → logprob: -13.474477767944336
    7. '<|end|>' → logprob: -13.599477767944336
    8. '[]' → logprob: -13.974477767944336
    9. '   ' → logprob: -14.849477767944336
    10. '.append' → logprob: -15.349477767944336

Token 469: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00020687808864749968
    2. ' []' → logprob: -8.62520694732666
    3. '[]
' → logprob: -10.62520694732666
    4. '=[]' → logprob: -13.37520694732666
    5. '[' → logprob: -14.37520694732666
    6. '[]}' → logprob: -14.87520694732666
    7. '[]

' → logprob: -15.50020694732666
    8. '[])' → logprob: -16.125205993652344
    9. '[]>' → logprob: -16.375205993652344
    10. '([]' → logprob: -16.625205993652344

Token 470: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.18015725910663605
    2. '   ' → logprob: -2.05515718460083
    3. ' c' → logprob: -3.68015718460083
    4. '	c' → logprob: -4.68015718460083
    5. ' ' → logprob: -7.18015718460083
    6. '<|end|>' → logprob: -7.30515718460083
    7. ',c' → logprob: -7.80515718460083
    8. 'for' → logprob: -9.305157661437988
    9. ' for' → logprob: -9.430157661437988
    10. '  ' → logprob: -9.555157661437988

Token 471: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0015029559144750237
    2. ' c' → logprob: -6.501502990722656
    3. '	c' → logprob: -14.501502990722656
    4. '   ' → logprob: -15.751502990722656
    5. '_c' → logprob: -19.501502990722656
    6. ' ' → logprob: -19.626502990722656
    7. ',c' → logprob: -20.751502990722656
    8. '  ' → logprob: -20.876502990722656
    9. 'for' → logprob: -22.251502990722656
    10. ')c' → logprob: -22.501502990722656

Token 472: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011059258133172989
    2. ' =' → logprob: -4.511059284210205
    3. '=[]' → logprob: -11.386058807373047
    4. '=[]
' → logprob: -16.761058807373047
    5. '[]' → logprob: -16.761058807373047
    6. ' ' → logprob: -18.136058807373047
    7. '[' → logprob: -18.386058807373047
    8. '   ' → logprob: -18.636058807373047
    9. '=
' → logprob: -18.636058807373047
    10. 'for' → logprob: -18.636058807373047

Token 473: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0005990233621560037
    2. '[]
' → logprob: -7.500598907470703
    3. ' []' → logprob: -10.000598907470703
    4. '[' → logprob: -14.625598907470703
    5. '[]

' → logprob: -15.875598907470703
    6. '[]}' → logprob: -16.625598907470703
    7. '[])' → logprob: -17.500598907470703
    8. ' []
' → logprob: -17.875598907470703
    9. '=[]' → logprob: -18.000598907470703
    10. '[]"' → logprob: -18.125598907470703

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6738487482070923
    2. 'for' → logprob: -1.2988487482070923
    3. ' for' → logprob: -1.5488487482070923
    4. '	for' → logprob: -5.798848628997803
    5. '<|end|>' → logprob: -6.423848628997803
    6. ' ' → logprob: -9.298849105834961
    7. '```' → logprob: -10.173849105834961
    8. '  ' → logprob: -10.173849105834961
    9. '
' → logprob: -10.423849105834961
    10. '    
' → logprob: -10.548849105834961

Token 475: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001578182796947658
    2. ' for' → logprob: -6.501578330993652
    3. '   ' → logprob: -9.501578330993652
    4. '	for' → logprob: -13.876578330993652
    5. ' ' → logprob: -16.001577377319336
    6. '
' → logprob: -17.126577377319336
    7. '    
' → logprob: -18.501577377319336
    8. '<|end|>' → logprob: -18.501577377319336
    9. '  ' → logprob: -19.001577377319336
    10. ' 
' → logprob: -19.751577377319336

Token 476: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0029243486933410168
    2. 'i' → logprob: -6.00292444229126
    3. '_i' → logprob: -8.502923965454102
    4. ' i' → logprob: -8.752923965454102
    5. ' _' → logprob: -9.377923965454102
    6. ' in' → logprob: -13.127923965454102
    7. ' ' → logprob: -14.877923965454102
    8. '_in' → logprob: -15.002923965454102
    9. 'in' → logprob: -15.877923965454102
    10. '_range' → logprob: -15.877923965454102

Token 477: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007608989719301462
    2. 'in' → logprob: -4.882608890533447
    3. ' ' → logprob: -12.882609367370605
    4. '=' → logprob: -16.38260841369629
    5. 'range' → logprob: -16.50760841369629
    6. '0' → logprob: -17.13260841369629
    7. 'n' → logprob: -17.25760841369629
    8. '  ' → logprob: -17.38260841369629
    9. 'i' → logprob: -17.75760841369629
    10. '	in' → logprob: -18.00760841369629

Token 478: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031777136027812958
    2. ' range' → logprob: -5.753177642822266
    3. '(range' → logprob: -18.753177642822266
    4. '	range' → logprob: -18.878177642822266
    5. ' ' → logprob: -19.628177642822266
    6. 'in' → logprob: -19.878177642822266
    7. '0' → logprob: -20.753177642822266
    8. '  ' → logprob: -21.003177642822266
    9. '   ' → logprob: -21.253177642822266
    10. 'r' → logprob: -21.628177642822266

Token 479: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.2519349455833435
    2. 'm' → logprob: -1.5019350051879883
    3. '	m' → logprob: -12.626935005187988
    4. '   ' → logprob: -14.251935005187988
    5. '0' → logprob: -14.376935005187988
    6. ' m' → logprob: -14.376935005187988
    7. '(' → logprob: -15.001935005187988
    8. '[m' → logprob: -16.001934051513672
    9. ',m' → logprob: -16.376934051513672
    10. '(
' → logprob: -16.501934051513672

Token 480: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11316099762916565
    2. '):
' → logprob: -2.238161087036133
    3. ':' → logprob: -8.488161087036133
    4. ' ):' → logprob: -9.738161087036133
    5. '*' → logprob: -10.988161087036133
    6. ')' → logprob: -11.113161087036133
    7. '   ' → logprob: -11.988161087036133
    8. '):
' → logprob: -12.238161087036133
    9. ' ):
' → logprob: -12.488161087036133
    10. '**' → logprob: -12.613161087036133

Token 481: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4767819046974182
    2. '       ' → logprob: -0.9767819046974182
    3. '<|end|>' → logprob: -6.601781845092773
    4. 'a' → logprob: -7.101781845092773
    5. ' ' → logprob: -9.226781845092773
    6. '	a' → logprob: -9.726781845092773
    7. '    ' → logprob: -9.851781845092773
    8. '	   ' → logprob: -9.851781845092773
    9. ' a' → logprob: -9.976781845092773
    10. '  ' → logprob: -10.101781845092773

Token 482: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.000825229799374938
    2. ' a' → logprob: -7.25082540512085
    3. '   ' → logprob: -9.250824928283691
    4. '	a' → logprob: -11.250824928283691
    5. '       ' → logprob: -12.000824928283691
    6. ' ' → logprob: -16.750825881958008
    7. '  ' → logprob: -17.375825881958008
    8. ',a' → logprob: -18.500825881958008
    9. '    ' → logprob: -18.625825881958008
    10. '_a' → logprob: -18.750825881958008

Token 483: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011257193982601166
    2. '.' → logprob: -4.511257171630859
    3. ' .' → logprob: -8.76125717163086
    4. 'append' → logprob: -11.38625717163086
    5. '.app' → logprob: -11.38625717163086
    6. '.ap' → logprob: -11.63625717163086
    7. '.p' → logprob: -12.01125717163086
    8. '_append' → logprob: -12.88625717163086
    9. ').' → logprob: -13.51125717163086
    10. '.pp' → logprob: -13.51125717163086

Token 484: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00034058792516589165
    2. '(int' → logprob: -8.000340461730957
    3. ' int' → logprob: -12.250340461730957
    4. '=int' → logprob: -15.750340461730957
    5. '	int' → logprob: -16.750341415405273
    6. '<int' → logprob: -16.875341415405273
    7. ':int' → logprob: -16.875341415405273
    8. '   ' → logprob: -17.125341415405273
    9. '[int' → logprob: -17.375341415405273
    10. ']int' → logprob: -18.000341415405273

Token 485: '(inputs' (ID: 78697)
  Prédit: '(inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inputs' → logprob: -2.176947600673884e-05
    2. 'inputs' → logprob: -10.750021934509277
    3. ' inputs' → logprob: -15.750021934509277
    4. '(input' → logprob: -16.75002098083496
    5. ' (' → logprob: -17.12502098083496
    6. '(' → logprob: -17.37502098083496
    7. ')' → logprob: -17.75002098083496
    8. ')(' → logprob: -19.25002098083496
    9. '(outputs' → logprob: -19.25002098083496
    10. '(
' → logprob: -19.50002098083496

Token 486: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.000495605927426368
    2. '(idx' → logprob: -7.625495433807373
    3. 'idx' → logprob: -12.000495910644531
    4. '[' → logprob: -14.250495910644531
    5. ' idx' → logprob: -15.750495910644531
    6. ')[' → logprob: -16.00049591064453
    7. '[id' → logprob: -16.25049591064453
    8. '[
' → logprob: -16.37549591064453
    9. ' [' → logprob: -16.50049591064453
    10. '   ' → logprob: -17.00049591064453

Token 487: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47579699754714966
    2. '))
' → logprob: -0.9757969975471497
    3. ')' → logprob: -6.475797176361084
    4. '));' → logprob: -9.350796699523926
    5. ')
' → logprob: -9.975796699523926
    6. ' ' → logprob: -11.350796699523926
    7. '])' → logprob: -11.850796699523926
    8. ' ))
' → logprob: -11.850796699523926
    9. '   ' → logprob: -12.100796699523926
    10. ' ))' → logprob: -12.475796699523926

Token 488: '       ' (ID: 309)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.178182914853096
    2. ' idx' → logprob: -3.05318284034729
    3. '   ' → logprob: -3.42818284034729
    4. '	idx' → logprob: -3.42818284034729
    5. '<|end|>' → logprob: -3.80318284034729
    6. '[idx' → logprob: -4.178183078765869
    7. ' 
' → logprob: -5.803183078765869
    8. '
' → logprob: -6.053183078765869
    9. '(idx' → logprob: -6.303183078765869
    10. ')' → logprob: -6.303183078765869

Token 489: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.3663991093635559
    2. ' idx' → logprob: -1.2413990497589111
    3. '	idx' → logprob: -4.74139928817749
    4. '<|end|>' → logprob: -5.11639928817749
    5. '[idx' → logprob: -6.86639928817749
    6. ' 
' → logprob: -6.99139928817749
    7. '_idx' → logprob: -8.366398811340332
    8. '(idx' → logprob: -8.616398811340332
    9. '<|end|>' → logprob: -8.741398811340332
    10. ' ' → logprob: -8.991398811340332

Token 490: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02975349873304367
    2. ' +=' → logprob: -3.5297534465789795
    3. ']+=' → logprob: -12.904753684997559
    4. '+' → logprob: -15.279753684997559
    5. '++' → logprob: -15.654753684997559
    6. '```' → logprob: -16.779752731323242
    7. '+="' → logprob: -16.904752731323242
    8. '   ' → logprob: -17.029752731323242
    9. '+='' → logprob: -17.279752731323242
    10. '+=(' → logprob: -17.529752731323242

Token 491: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '```' → logprob: -19.000024795532227
    4. '１' → logprob: -19.250024795532227
    5. '
' → logprob: -19.500024795532227
    6. '3' → logprob: -19.750024795532227
    7. '   ' → logprob: -20.125024795532227
    8. '+' → logprob: -21.500024795532227
    9. ' ' → logprob: -21.875024795532227
    10. '2' → logprob: -22.062524795532227

Token 492: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -17.875
    4. '3' → logprob: -19.0
    5. '
' → logprob: -19.625
    6. '１' → logprob: -20.0
    7. '   ' → logprob: -20.75
    8. '2' → logprob: -21.0
    9. '<|end|>' → logprob: -21.25
    10. '۱' → logprob: -21.5625

Token 493: '
' (ID: 198)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.42735615372657776
    2. '       ' → logprob: -1.1773561239242554
    3. '   ' → logprob: -3.802356243133545
    4. ' b' → logprob: -4.302356243133545
    5. ' ' → logprob: -6.802356243133545
    6. '	b' → logprob: -7.052356243133545
    7. '<|end|>' → logprob: -7.052356243133545
    8. ' 
' → logprob: -8.177355766296387
    9. '        
' → logprob: -8.427355766296387
    10. '	' → logprob: -9.177355766296387

Token 494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4213484525680542
    2. 'b' → logprob: -1.1713484525680542
    3. ' b' → logprob: -3.5463485717773438
    4. '   ' → logprob: -5.296348571777344
    5. ' ' → logprob: -10.546348571777344
    6. '	b' → logprob: -11.421348571777344
    7. '<|end|>' → logprob: -12.421348571777344
    8. '     ' → logprob: -13.171348571777344
    9. '           ' → logprob: -13.296348571777344
    10. '  ' → logprob: -13.421348571777344

Token 495: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -2.7610454708337784e-05
    2. ' b' → logprob: -10.500027656555176
    3. '   ' → logprob: -19.25002670288086
    4. '	b' → logprob: -19.50002670288086
    5. '       ' → logprob: -20.87502670288086
    6. 'c' → logprob: -21.12502670288086
    7. ' ' → logprob: -21.62502670288086
    8. '           ' → logprob: -23.25002670288086
    9. '  ' → logprob: -23.50002670288086
    10. '```' → logprob: -23.62502670288086

Token 496: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.12720464169979095
    2. '.' → logprob: -2.127204656600952
    3. ' .' → logprob: -8.377204895019531
    4. '<|end|>' → logprob: -10.752204895019531
    5. '.Append' → logprob: -12.002204895019531
    6. 'append' → logprob: -12.127204895019531
    7. '.app' → logprob: -12.252204895019531
    8. 'app' → logprob: -13.752204895019531
    9. '```' → logprob: -14.002204895019531
    10. '.setdefault' → logprob: -14.252204895019531

Token 497: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007205340662039816
    2. 'int' → logprob: -7.250720500946045
    3. '(' → logprob: -12.250720977783203
    4. '=int' → logprob: -13.125720977783203
    5. '<int' → logprob: -13.375720977783203
    6. ' int' → logprob: -13.375720977783203
    7. ' (' → logprob: -15.375720977783203
    8. ':int' → logprob: -15.500720977783203
    9. '[int' → logprob: -15.875720977783203
    10. ',int' → logprob: -16.125720977783203

Token 498: '(inputs' (ID: 78697)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.569207489490509
    2. '(inputs' → logprob: -1.3192074298858643
    3. '(int' → logprob: -1.8192074298858643
    4. 'inputs' → logprob: -5.444207668304443
    5. ' int' → logprob: -9.069207191467285
    6. '<int' → logprob: -10.069207191467285
    7. '[int' → logprob: -11.069207191467285
    8. ' inputs' → logprob: -11.569207191467285
    9. '(' → logprob: -12.069207191467285
    10. ']int' → logprob: -12.694207191467285

Token 499: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00011653638648567721
    2. '(idx' → logprob: -10.000116348266602
    3. '[int' → logprob: -10.000116348266602
    4. 'idx' → logprob: -10.625116348266602
    5. ' idx' → logprob: -14.625116348266602
    6. '	idx' → logprob: -15.625116348266602
    7. '[i' → logprob: -15.875116348266602
    8. 'int' → logprob: -16.1251163482666
    9. '[
' → logprob: -16.2501163482666
    10. '[' → logprob: -16.3751163482666

Token 500: ']))
' (ID: 24801)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00045700959162786603
    2. ')
' → logprob: -7.750456809997559
    3. '<|end|>' → logprob: -10.750456809997559
    4. ' )' → logprob: -12.750456809997559
    5. ')#' → logprob: -14.375456809997559
    6. '   ' → logprob: -14.750456809997559
    7. ')\
' → logprob: -15.625456809997559
    8. '),' → logprob: -15.875456809997559
    9. '))' → logprob: -16.250457763671875
    10. ')`' → logprob: -16.625457763671875

Token 501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0042145708575844765
    2. '   ' → logprob: -5.629214763641357
    3. 'idx' → logprob: -8.7542142868042
    4. '<|end|>' → logprob: -8.8792142868042
    5. ' idx' → logprob: -9.5042142868042
    6. '        
' → logprob: -9.7542142868042
    7. ' ' → logprob: -10.0042142868042
    8. '[idx' → logprob: -10.6292142868042
    9. '```' → logprob: -10.8792142868042
    10. ' 
' → logprob: -11.0042142868042

Token 502: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.06282950192689896
    2. 'idx' (adapté à ' idx') → logprob: -3.3128294944763184
    3. '       ' → logprob: -3.8128294944763184
    4. '	idx' → logprob: -6.312829494476318
    5. '   ' → logprob: -8.437829971313477
    6. ' ' → logprob: -9.437829971313477
    7. '[idx' → logprob: -9.562829971313477
    8. '(idx' → logprob: -9.812829971313477
    9. '<|end|>' → logprob: -9.812829971313477
    10. '_idx' → logprob: -10.312829971313477

Token 503: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3868859112262726
    2. '+=' → logprob: -1.1368858814239502
    3. '+' → logprob: -11.261885643005371
    4. ']+=' → logprob: -14.261885643005371
    5. ' +' → logprob: -15.011885643005371
    6. '++' → logprob: -15.511885643005371
    7. '+='' → logprob: -15.511885643005371
    8. ' ' → logprob: -15.636885643005371
    9. '+="' → logprob: -15.886885643005371
    10. '=' → logprob: -16.136886596679688

Token 504: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01814994215965271
    2. ' ' → logprob: -4.0181498527526855
    3. '```' → logprob: -16.893150329589844
    4. ' ' → logprob: -17.143150329589844
    5. ' 
' → logprob: -19.893150329589844
    6. '   ' → logprob: -20.018150329589844
    7. '
' → logprob: -20.393150329589844
    8. '2' → logprob: -20.518150329589844
    9. '１' → logprob: -20.643150329589844
    10. '`' → logprob: -21.143150329589844

Token 505: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -19.625001907348633
    4. '１' → logprob: -20.125001907348633
    5. '   ' → logprob: -21.000001907348633
    6. '۱' → logprob: -22.187501907348633
    7. '2' → logprob: -22.312501907348633
    8. '`' → logprob: -22.937501907348633
    9. '
' → logprob: -23.000001907348633
    10. '-' → logprob: -23.125001907348633

Token 506: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00240074354223907
    2. 'c' → logprob: -6.627400875091553
    3. '	' → logprob: -7.752400875091553
    4. ' c' → logprob: -8.627400398254395
    5. '   ' → logprob: -8.752400398254395
    6. '	c' → logprob: -8.752400398254395
    7. '        
' → logprob: -10.252400398254395
    8. ' ' → logprob: -10.752400398254395
    9. '
' → logprob: -10.877400398254395
    10. ' ' → logprob: -11.377400398254395

Token 507: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001057102927006781
    2. 'c' → logprob: -7.751057147979736
    3. ' c' → logprob: -8.001056671142578
    4. '   ' → logprob: -8.751056671142578
    5. '	c' → logprob: -9.876056671142578
    6. '	' → logprob: -10.126056671142578
    7. ' ' → logprob: -10.876056671142578
    8. ' ' → logprob: -11.501056671142578
    9. '	   ' → logprob: -12.126056671142578
    10. '     ' → logprob: -13.751056671142578

Token 508: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.048676278442144394
    2. ' c' → logprob: -3.0486762523651123
    3. '       ' → logprob: -9.423676490783691
    4. '   ' → logprob: -12.548676490783691
    5. '	c' → logprob: -12.798676490783691
    6. '           ' → logprob: -13.548676490783691
    7. ' ' → logprob: -15.548676490783691
    8. '```' → logprob: -16.673675537109375
    9. ')c' → logprob: -17.548675537109375
    10. '     ' → logprob: -18.298675537109375

Token 509: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.25615063309669495
    2. '=' → logprob: -1.8811506032943726
    3. '<|end|>' → logprob: -3.381150722503662
    4. '[int' → logprob: -4.131150722503662
    5. ' =' → logprob: -4.506150722503662
    6. ' ' → logprob: -5.881150722503662
    7. '.' → logprob: -6.131150722503662
    8. '[idx' → logprob: -6.256150722503662
    9. '=int' → logprob: -6.506150722503662
    10. '[' → logprob: -7.131150722503662

Token 510: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07890741527080536
    2. 'int' → logprob: -2.5789074897766113
    3. ' int' → logprob: -11.078907012939453
    4. '=int' → logprob: -13.703907012939453
    5. '<int' → logprob: -14.578907012939453
    6. '[int' → logprob: -14.828907012939453
    7. ':int' → logprob: -15.078907012939453
    8. '	int' → logprob: -17.703907012939453
    9. ']int' → logprob: -17.703907012939453
    10. ' (' → logprob: -18.828907012939453

Token 511: '(inputs' (ID: 78697)
  Prédit: '(inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inputs' → logprob: -0.11729996651411057
    2. 'inputs' → logprob: -2.367300033569336
    3. 'int' → logprob: -4.117300033569336
    4. '(int' → logprob: -7.617300033569336
    5. '[int' → logprob: -9.117300033569336
    6. ' inputs' → logprob: -10.242300033569336
    7. ')' → logprob: -10.867300033569336
    8. 'ints' → logprob: -14.367300033569336
    9. ' int' → logprob: -14.367300033569336
    10. 'input' → logprob: -14.742300033569336

Token 512: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.01651099883019924
    2. 'idx' → logprob: -4.141510963439941
    3. ' idx' → logprob: -8.266510963439941
    4. '	idx' → logprob: -8.641510963439941
    5. '(idx' → logprob: -11.391510963439941
    6. ')' → logprob: -11.516510963439941
    7. '_idx' → logprob: -12.016510963439941
    8. 'IDX' → logprob: -12.141510963439941
    9. '   ' → logprob: -12.891510963439941
    10. 'Idx' → logprob: -13.391510963439941

Token 513: ']))
' (ID: 24801)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6936081647872925
    2. ')
' → logprob: -0.6936081647872925
    3. '])
' → logprob: -8.443608283996582
    4. '))
' → logprob: -9.193608283996582
    5. '])' → logprob: -9.193608283996582
    6. '))' → logprob: -10.568608283996582
    7. ' )
' → logprob: -12.943608283996582
    8. '   ' → logprob: -13.068608283996582
    9. ' )' → logprob: -13.193608283996582
    10. '<|end|>' → logprob: -13.443608283996582

Token 514: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.779520092299208e-05
    2. '   ' → logprob: -10.000078201293945
    3. 'idx' → logprob: -10.875078201293945
    4. '<|end|>' → logprob: -12.375078201293945
    5. '	idx' → logprob: -13.000078201293945
    6. '	' → logprob: -13.250078201293945
    7. '	   ' → logprob: -13.250078201293945
    8. '           ' → logprob: -13.625078201293945
    9. ' idx' → logprob: -14.250078201293945
    10. '     ' → logprob: -14.875078201293945

Token 515: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.31399261951446533
    2. 'idx' (adapté à ' idx') → logprob: -1.3139926195144653
    3. '       ' → logprob: -7.688992500305176
    4. '	idx' → logprob: -8.313992500305176
    5. '[idx' → logprob: -11.813992500305176
    6. '_idx' → logprob: -11.938992500305176
    7. ' 
' → logprob: -12.313992500305176
    8. '(idx' → logprob: -12.938992500305176
    9. '   ' → logprob: -13.688992500305176
    10. ' ' → logprob: -13.813992500305176

Token 516: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759656429290771
    2. '+=' → logprob: -0.8259656429290771
    3. '+' → logprob: -10.575965881347656
    4. ' ' → logprob: -15.200965881347656
    5. ' +' → logprob: -15.575965881347656
    6. ']+=' → logprob: -16.075965881347656
    7. '++' → logprob: -16.825965881347656
    8. ' ++' → logprob: -17.075965881347656
    9. '+="' → logprob: -17.325965881347656
    10. ' ' → logprob: -17.450965881347656

Token 517: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. '```' → logprob: -17.505233764648438
    4. ' ' → logprob: -17.630233764648438
    5. '１' → logprob: -20.005233764648438
    6. ' 
' → logprob: -20.630233764648438
    7. '   ' → logprob: -20.755233764648438
    8. '`' → logprob: -20.755233764648438
    9. '
' → logprob: -21.067733764648438
    10. '	' → logprob: -21.067733764648438

Token 518: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '```' → logprob: -22.25
    4. '１' → logprob: -22.5
    5. '
' → logprob: -22.5
    6. '   ' → logprob: -22.875
    7. '3' → logprob: -23.25
    8. '۱' → logprob: -24.5
    9. '0' → logprob: -24.875
    10. '  ' → logprob: -25.0625

Token 519: '
' (ID: 198)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.003185198176652193
    2. '   ' → logprob: -5.753185272216797
    3. ' q' → logprob: -11.878185272216797
    4. '
' → logprob: -15.378185272216797
    5. '	q' → logprob: -15.378185272216797
    6. '```' → logprob: -16.753185272216797
    7. '    
' → logprob: -18.003185272216797
    8. '_q' → logprob: -18.003185272216797
    9. '       ' → logprob: -18.253185272216797
    10. '``' → logprob: -19.378185272216797

Token 520: '   ' (ID: 271)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0004319804720580578
    2. ' q' → logprob: -8.000432014465332
    3. '   ' → logprob: -9.250432014465332
    4. '	q' → logprob: -15.375432014465332
    5. '
' → logprob: -15.625432014465332
    6. ' ' → logprob: -16.625431060791016
    7. '```' → logprob: -18.500431060791016
    8. 'for' → logprob: -18.750431060791016
    9. 's' → logprob: -19.125431060791016
    10. '_q' → logprob: -19.375431060791016

Token 521: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.001502717612311244
    2. '   ' → logprob: -6.501502513885498
    3. ' q' → logprob: -15.001502990722656
    4. '
' → logprob: -16.751502990722656
    5. '	q' → logprob: -17.626502990722656
    6. '```' → logprob: -18.001502990722656
    7. '    
' → logprob: -18.126502990722656
    8. '_q' → logprob: -19.751502990722656
    9. '       ' → logprob: -19.876502990722656
    10. '  ' → logprob: -20.251502990722656

Token 522: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.69315105676651
    2. ' =' → logprob: -0.69315105676651
    3. '=int' → logprob: -12.568151473999023
    4. '   ' → logprob: -16.193151473999023
    5. '=
' → logprob: -16.318151473999023
    6. ' ' → logprob: -16.693151473999023
    7. ' =
' → logprob: -17.193151473999023
    8. '=

' → logprob: -19.818151473999023
    9. '  ' → logprob: -20.193151473999023
    10. '＝' → logprob: -20.318151473999023

Token 523: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007099286303855479
    2. ' int' → logprob: -7.2507100105285645
    3. '=int' → logprob: -18.750709533691406
    4. '   ' → logprob: -18.875709533691406
    5. '[int' → logprob: -19.875709533691406
    6. '(int' → logprob: -20.250709533691406
    7. '<int' → logprob: -20.375709533691406
    8. '	int' → logprob: -21.750709533691406
    9. ':int' → logprob: -22.250709533691406
    10. ']int' → logprob: -23.750709533691406

Token 524: '(inputs' (ID: 78697)
  Prédit: '(inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inputs' → logprob: -1.1041145626222715e-05
    2. 'inputs' → logprob: -11.500011444091797
    3. '(input' → logprob: -14.375011444091797
    4. '(' → logprob: -16.625011444091797
    5. ' inputs' → logprob: -16.750011444091797
    6. '(outputs' → logprob: -18.625011444091797
    7. '(inp' → logprob: -19.125011444091797
    8. '(in' → logprob: -19.375011444091797
    9. ' (' → logprob: -20.375011444091797
    10. '(items' → logprob: -22.250011444091797

Token 525: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.5570885807392187e-05
    2. '(idx' → logprob: -11.125015258789062
    3. 'idx' → logprob: -14.875015258789062
    4. '[' → logprob: -15.750015258789062
    5. '(inputs' → logprob: -15.875015258789062
    6. '[
' → logprob: -17.750015258789062
    7. ' idx' → logprob: -18.125015258789062
    8. 'inputs' → logprob: -18.375015258789062
    9. '   ' → logprob: -18.500015258789062
    10. ')' → logprob: -19.125015258789062

Token 526: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023260269314050674
    2. ')
' → logprob: -3.7732603549957275
    3. '<|end|>' → logprob: -11.648260116577148
    4. '   ' → logprob: -12.648260116577148
    5. ' )' → logprob: -14.523260116577148
    6. ')#' → logprob: -14.773260116577148
    7. ')\
' → logprob: -14.898260116577148
    8. ')
' → logprob: -15.148260116577148
    9. ')

' → logprob: -15.398260116577148
    10. '),' → logprob: -15.648260116577148

Token 527: '   ' (ID: 271)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6569546461105347
    2. '   ' → logprob: -0.7819546461105347
    3. ' idx' → logprob: -4.281954765319824
    4. '	idx' → logprob: -5.531954765319824
    5. '```' → logprob: -6.031954765319824
    6. '[idx' → logprob: -6.531954765319824
    7. '
' → logprob: -6.781954765319824
    8. '    
' → logprob: -7.156954765319824
    9. '(idx' → logprob: -8.656954765319824
    10. '_idx' → logprob: -9.031954765319824

Token 528: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.321674108505249
    2. ' idx' → logprob: -1.321674108505249
    3. '   ' → logprob: -5.196674346923828
    4. '	idx' → logprob: -6.571674346923828
    5. '[idx' → logprob: -6.946674346923828
    6. '
' → logprob: -8.446674346923828
    7. '(idx' → logprob: -9.321674346923828
    8. '_idx' → logprob: -9.571674346923828
    9. '```' → logprob: -9.946674346923828
    10. '    
' → logprob: -10.571674346923828

Token 529: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31328436732292175
    2. ' +=' → logprob: -1.3132843971252441
    3. '+' → logprob: -10.813283920288086
    4. '=' → logprob: -13.313283920288086
    5. ' +' → logprob: -14.938283920288086
    6. ']+=' → logprob: -15.188283920288086
    7. '+="' → logprob: -16.563283920288086
    8. '+='' → logprob: -16.688283920288086
    9. '```' → logprob: -16.938283920288086
    10. '   ' → logprob: -17.688283920288086

Token 530: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01814994215965271
    2. ' ' → logprob: -4.0181498527526855
    3. ' ' → logprob: -17.018150329589844
    4. '```' → logprob: -17.518150329589844
    5. ' 
' → logprob: -19.018150329589844
    6. '１' → logprob: -19.768150329589844
    7. '`' → logprob: -19.768150329589844
    8. '0' → logprob: -19.768150329589844
    9. '   ' → logprob: -20.018150329589844
    10. ' q' → logprob: -20.580650329589844

Token 531: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -19.875
    4. '   ' → logprob: -21.125
    5. '１' → logprob: -21.75
    6. '0' → logprob: -22.5
    7. '
' → logprob: -22.75
    8. '`' → logprob: -23.5
    9. '+' → logprob: -23.5625
    10. '۱' → logprob: -23.75

Token 532: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5759732723236084
    2. '   ' → logprob: -0.8259732723236084
    3. ' s' → logprob: -10.325973510742188
    4. '	s' → logprob: -14.325973510742188
    5. '_s' → logprob: -15.200973510742188
    6. ' ' → logprob: -16.200973510742188
    7. '       ' → logprob: -17.075973510742188
    8. '  ' → logprob: -17.325973510742188
    9. '(s' → logprob: -17.950973510742188
    10. ',s' → logprob: -18.075973510742188

Token 533: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029767613857984543
    2. '   ' → logprob: -3.5297675132751465
    3. ' s' → logprob: -11.029767990112305
    4. ' ' → logprob: -15.029767990112305
    5. '	s' → logprob: -15.154767990112305
    6. '_s' → logprob: -15.654767990112305
    7. '  ' → logprob: -15.904767990112305
    8. '       ' → logprob: -18.154767990112305
    9. '    ' → logprob: -18.279767990112305
    10. '(s' → logprob: -18.654767990112305

Token 534: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -1.9361264946837764e-07
    2. ' s' → logprob: -16.125
    3. '   ' → logprob: -18.5
    4. '_s' → logprob: -21.75
    5. '    
' → logprob: -23.0
    6. '`s' → logprob: -24.125
    7. '	s' → logprob: -24.25
    8. '<s' → logprob: -25.0
    9. '```' → logprob: -25.125
    10. '{s' → logprob: -25.125

Token 535: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.015064085833728313
    2. ' =' → logprob: -4.265064239501953
    3. '=[]' → logprob: -7.015064239501953
    4. ',' → logprob: -13.765064239501953
    5. '=[]
' → logprob: -14.515064239501953
    6. '=[' → logprob: -15.890064239501953
    7. '<|end|>' → logprob: -16.390064239501953
    8. 's' → logprob: -16.640064239501953
    9. '[]' → logprob: -16.890064239501953
    10. '=[],' → logprob: -17.140064239501953

Token 536: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -9.782141569303349e-05
    2. '[]
' → logprob: -9.25009822845459
    3. '[' → logprob: -14.12509822845459
    4. '=[]' → logprob: -15.00009822845459
    5. '[]

' → logprob: -15.00009822845459
    6. '[]}' → logprob: -15.87509822845459
    7. '[int' → logprob: -16.250097274780273
    8. '[]>' → logprob: -16.750097274780273
    9. '[])' → logprob: -16.875097274780273
    10. ' []' → logprob: -17.500097274780273

Token 537: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43536338210105896
    2. ' for' → logprob: -1.6853634119033813
    3. '<|end|>' → logprob: -2.060363292694092
    4. '   ' → logprob: -3.685363292694092
    5. '	for' → logprob: -5.560363292694092
    6. '[]' → logprob: -5.685363292694092
    7. '<|end|>' → logprob: -6.435363292694092
    8. 't' → logprob: -6.560363292694092
    9. ' ' → logprob: -6.560363292694092
    10. ' 
' → logprob: -7.560363292694092

Token 538: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.011783124879002571
    2. 'for' → logprob: -4.511783123016357
    3. '[]' → logprob: -7.511783123016357
    4. '[]
' → logprob: -9.386783599853516
    5. '[' → logprob: -9.636783599853516
    6. '[t' → logprob: -11.511783599853516
    7. ' t' → logprob: -11.761783599853516
    8. ' for' → logprob: -11.886783599853516
    9. '<|end|>' → logprob: -11.886783599853516
    10. '[
' → logprob: -12.886783599853516

Token 539: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06849746406078339
    2. ' =' → logprob: -2.8184974193573
    3. '=[]' → logprob: -5.443497657775879
    4. '.append' → logprob: -6.193497657775879
    5. '.' → logprob: -9.568497657775879
    6. '[]' → logprob: -10.193497657775879
    7. '=[]
' → logprob: -11.068497657775879
    8. 's' → logprob: -12.443497657775879
    9. '   ' → logprob: -12.693497657775879
    10. '[]=' → logprob: -12.943497657775879

Token 540: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0007224413566291332
    2. '[]
' → logprob: -7.250722408294678
    3. ' []' → logprob: -11.750722885131836
    4. '=[]' → logprob: -12.750722885131836
    5. '[]

' → logprob: -14.875722885131836
    6. '([]' → logprob: -15.250722885131836
    7. '[]}' → logprob: -15.375722885131836
    8. '[]>' → logprob: -15.375722885131836
    9. '[])' → logprob: -15.875722885131836
    10. '[int' → logprob: -16.250722885131836

Token 541: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3558051884174347
    2. ' for' → logprob: -1.6058051586151123
    3. '   ' → logprob: -2.4808051586151123
    4. '<|end|>' → logprob: -4.355805397033691
    5. '	for' → logprob: -6.355805397033691
    6. '<|end|>' → logprob: -8.730805397033691
    7. ' ' → logprob: -8.855805397033691
    8. '[' → logprob: -10.605805397033691
    9. '
' → logprob: -10.730805397033691
    10. '    
' → logprob: -11.355805397033691

Token 542: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002353640884393826
    2. ' for' → logprob: -8.500235557556152
    3. '   ' → logprob: -10.375235557556152
    4. '	for' → logprob: -14.500235557556152
    5. '<|end|>' → logprob: -16.000234603881836
    6. ' ' → logprob: -17.750234603881836
    7. '[' → logprob: -18.000234603881836
    8. '
' → logprob: -18.250234603881836
    9. '```' → logprob: -18.250234603881836
    10. 's' → logprob: -19.625234603881836

Token 543: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003303431672975421
    2. ' i' → logprob: -5.753303527832031
    3. '_' → logprob: -9.378303527832031
    4. '_i' → logprob: -10.128303527832031
    5. ' _' → logprob: -14.128303527832031
    6. '	i' → logprob: -14.503303527832031
    7. ' ' → logprob: -17.75330352783203
    8. '   ' → logprob: -18.12830352783203
    9. '__' → logprob: -19.00330352783203
    10. 'I' → logprob: -19.00330352783203

Token 544: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1002306118607521
    2. 'in' → logprob: -2.3502306938171387
    3. ' ' → logprob: -10.85023021697998
    4. 'range' → logprob: -13.22523021697998
    5. '(' → logprob: -13.97523021697998
    6. '   ' → logprob: -14.97523021697998
    7. 'i' → logprob: -14.97523021697998
    8. '0' → logprob: -15.35023021697998
    9. 'n' → logprob: -15.85023021697998
    10. '=' → logprob: -15.85023021697998

Token 545: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019297054968774319
    2. ' range' → logprob: -6.251929759979248
    3. '(range' → logprob: -13.75192928314209
    4. 'in' → logprob: -19.251930236816406
    5. '	range' → logprob: -20.376930236816406
    6. ' ' → logprob: -21.126930236816406
    7. ' in' → logprob: -21.626930236816406
    8. '   ' → logprob: -21.626930236816406
    9. '  ' → logprob: -23.001930236816406
    10. '_range' → logprob: -23.501930236816406

Token 546: '(q' (ID: 21479)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0837414339184761
    2. '(q' → logprob: -2.5837414264678955
    3. 'range' → logprob: -5.333741664886475
    4. ' q' → logprob: -11.583741188049316
    5. ' range' → logprob: -12.458741188049316
    6. '   ' → logprob: -15.458741188049316
    7. '(range' → logprob: -15.458741188049316
    8. '	q' → logprob: -15.958741188049316
    9. 'in' → logprob: -16.708742141723633
    10. '(' → logprob: -17.083742141723633

Token 547: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09193092584609985
    2. '):' → logprob: -2.466930866241455
    3. ':' → logprob: -6.216930866241455
    4. ':
' → logprob: -6.966930866241455
    5. '():
' → logprob: -11.591931343078613
    6. ')' → logprob: -11.591931343078613
    7. '   ' → logprob: -11.716931343078613
    8. '<|end|>' → logprob: -11.716931343078613
    9. '):
' → logprob: -12.091931343078613
    10. '):

' → logprob: -12.966931343078613

Token 548: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07183440774679184
    2. 's' → logprob: -2.8218343257904053
    3. '       ' → logprob: -4.821834564208984
    4. ' s' → logprob: -6.571834564208984
    5. 't' → logprob: -8.446834564208984
    6. ' ' → logprob: -9.946834564208984
    7. '<|end|>' → logprob: -10.196834564208984
    8. '  ' → logprob: -11.196834564208984
    9. '```' → logprob: -11.446834564208984
    10. '	s' → logprob: -11.571834564208984

Token 549: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.0005769816925749183
    2. ' s' → logprob: -8.250576972961426
    3. '   ' → logprob: -8.375576972961426
    4. '       ' → logprob: -9.375576972961426
    5. ' ' → logprob: -15.500576972961426
    6. '	s' → logprob: -16.125577926635742
    7. '  ' → logprob: -17.000577926635742
    8. '           ' → logprob: -17.375577926635742
    9. '    ' → logprob: -19.625577926635742
    10. '```' → logprob: -19.750577926635742

Token 550: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00033784625702537596
    2. '.' → logprob: -8.000337600708008
    3. ' .' → logprob: -13.125337600708008
    4. 'append' → logprob: -15.750337600708008
    5. '.Append' → logprob: -16.125337600708008
    6. '.app' → logprob: -16.500337600708008
    7. '.ap' → logprob: -17.750337600708008
    8. '().' → logprob: -18.250337600708008
    9. '_append' → logprob: -18.750337600708008
    10. '   ' → logprob: -19.250337600708008

Token 551: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0024773201439529657
    2. 'int' → logprob: -6.002477169036865
    3. ' int' → logprob: -14.127477645874023
    4. '   ' → logprob: -14.877477645874023
    5. '=int' → logprob: -15.252477645874023
    6. '[int' → logprob: -15.502477645874023
    7. '<int' → logprob: -16.502477645874023
    8. ':int' → logprob: -16.877477645874023
    9. '	int' → logprob: -18.502477645874023
    10. '(' → logprob: -18.502477645874023

Token 552: '(inputs' (ID: 78697)
  Prédit: '(inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inputs' → logprob: -6.2729995988775045e-06
    2. 'inputs' → logprob: -12.000006675720215
    3. '(input' → logprob: -17.2500057220459
    4. ' inputs' → logprob: -18.3750057220459
    5. ' (' → logprob: -19.5000057220459
    6. '(outputs' → logprob: -19.8750057220459
    7. '(' → logprob: -20.1250057220459
    8. '(
' → logprob: -20.6250057220459
    9. ')(' → logprob: -21.5000057220459
    10. ')' → logprob: -21.5000057220459

Token 553: '[idx' (ID: 25582)
  Prédit: '(inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inputs' → logprob: -0.10023050010204315
    2. 'inputs' → logprob: -2.3502304553985596
    3. ' inputs' → logprob: -10.97523021697998
    4. '[' → logprob: -12.47523021697998
    5. '[input' → logprob: -13.72523021697998
    6. ')' → logprob: -14.60023021697998
    7. '[idx' → logprob: -14.72523021697998
    8. '.inputs' → logprob: -14.97523021697998
    9. '```' → logprob: -15.35023021697998
    10. '   ' → logprob: -16.600231170654297

Token 554: ']))
' (ID: 24801)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5307706594467163
    2. '))' → logprob: -1.5307706594467163
    3. '))
' → logprob: -2.155770778656006
    4. ')
' → logprob: -2.530770778656006
    5. '])' → logprob: -10.655770301818848
    6. '])
' → logprob: -11.530770301818848
    7. ')
' → logprob: -11.780770301818848
    8. '   ' → logprob: -12.405770301818848
    9. ' )' → logprob: -12.405770301818848
    10. '       ' → logprob: -13.030770301818848

Token 555: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06753644347190857
    2. '   ' → logprob: -3.8175363540649414
    3. '<|end|>' → logprob: -3.9425363540649414
    4. 'idx' → logprob: -4.192536354064941
    5. '        
' → logprob: -6.192536354064941
    6. ' 
' → logprob: -6.567536354064941
    7. '	idx' → logprob: -7.067536354064941
    8. '
' → logprob: -7.317536354064941
    9. '[idx' → logprob: -7.442536354064941
    10. '    
' → logprob: -7.567536354064941

Token 556: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.23606832325458527
    2. ' idx' → logprob: -2.2360682487487793
    3. '       ' → logprob: -2.6110682487487793
    4. '	idx' → logprob: -4.361068248748779
    5. '<|end|>' → logprob: -4.611068248748779
    6. '[idx' → logprob: -5.486068248748779
    7. '_idx' → logprob: -6.986068248748779
    8. '(idx' → logprob: -7.361068248748779
    9. '<|end|>' → logprob: -7.736068248748779
    10. '   ' → logprob: -7.986068248748779

Token 557: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20216986536979675
    2. ' +=' → logprob: -1.7021698951721191
    3. '+' → logprob: -7.327169895172119
    4. '=' → logprob: -9.952169418334961
    5. '<|end|>' → logprob: -11.327169418334961
    6. '```' → logprob: -11.577169418334961
    7. ')' → logprob: -12.077169418334961
    8. ']+=' → logprob: -12.077169418334961
    9. ' +' → logprob: -12.452169418334961
    10. '+
' → logprob: -12.702169418334961

Token 558: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '   ' → logprob: -18.875804901123047
    4. '```' → logprob: -19.125804901123047
    5. ' ' → logprob: -19.250804901123047
    6. '１' → logprob: -19.375804901123047
    7. '
' → logprob: -20.625804901123047
    8. ' 
' → logprob: -21.000804901123047
    9. '	' → logprob: -21.375804901123047
    10. '2' → logprob: -21.375804901123047

Token 559: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -18.250001907348633
    4. '   ' → logprob: -18.875001907348633
    5. '１' → logprob: -20.000001907348633
    6. '<|end|>' → logprob: -21.062501907348633
    7. '۱' → logprob: -21.312501907348633
    8. '2' → logprob: -21.500001907348633
    9. '`' → logprob: -21.812501907348633
    10. '+' → logprob: -22.062501907348633

Token 560: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00414274213835597
    2. 't' → logprob: -5.754142761230469
    3. ' t' → logprob: -7.629142761230469
    4. '   ' → logprob: -8.004142761230469
    5. '	t' → logprob: -9.879142761230469
    6. '<|end|>' → logprob: -10.254142761230469
    7. ' ' → logprob: -11.004142761230469
    8. '
' → logprob: -11.629142761230469
    9. '	   ' → logprob: -11.754142761230469
    10. '        
' → logprob: -12.129142761230469

Token 561: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0757921114563942
    2. 't' → logprob: -3.200792074203491
    3. ' t' → logprob: -3.700792074203491
    4. '   ' → logprob: -4.95079231262207
    5. '	t' → logprob: -7.95079231262207
    6. ' ' → logprob: -9.95079231262207
    7. '<|end|>' → logprob: -10.57579231262207
    8. '           ' → logprob: -10.82579231262207
    9. '     ' → logprob: -11.95079231262207
    10. '  ' → logprob: -12.07579231262207

Token 562: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -3.054500666621607e-06
    2. ' t' → logprob: -12.75000286102295
    3. '       ' → logprob: -17.750003814697266
    4. '   ' → logprob: -18.500003814697266
    5. '`t' → logprob: -19.500003814697266
    6. '	t' → logprob: -19.750003814697266
    7. '```' → logprob: -23.000003814697266
    8. '           ' → logprob: -23.375003814697266
    9. '_t' → logprob: -24.500003814697266
    10. ' ' → logprob: -25.000003814697266

Token 563: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.061975862830877304
    2. '.' → logprob: -2.8119759559631348
    3. 'append' → logprob: -12.686975479125977
    4. '.Append' → logprob: -13.186975479125977
    5. ' .' → logprob: -13.436975479125977
    6. '.app' → logprob: -14.561975479125977
    7. '\.' → logprob: -15.436975479125977
    8. '<|end|>' → logprob: -15.436975479125977
    9. 's' → logprob: -15.561975479125977
    10. '.setdefault' → logprob: -16.311975479125977

Token 564: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.64839569455944e-05
    2. 'int' → logprob: -9.500076293945312
    3. '<int' → logprob: -14.625076293945312
    4. '=int' → logprob: -14.750076293945312
    5. '(' → logprob: -14.875076293945312
    6. ' int' → logprob: -16.000076293945312
    7. ' (' → logprob: -16.375076293945312
    8. ':int' → logprob: -16.750076293945312
    9. '[int' → logprob: -16.750076293945312
    10. '(in' → logprob: -17.250076293945312

Token 565: '(inputs' (ID: 78697)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01530242059379816
    2. '(int' → logprob: -4.765302658081055
    3. '(inputs' → logprob: -5.265302658081055
    4. 'inputs' → logprob: -6.515302658081055
    5. ' int' → logprob: -11.390302658081055
    6. 'ints' → logprob: -12.390302658081055
    7. '[int' → logprob: -13.890302658081055
    8. ' inputs' → logprob: -15.390302658081055
    9. '<int' → logprob: -15.640302658081055
    10. '(in' → logprob: -15.765302658081055

Token 566: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00023572170175611973
    2. 'idx' → logprob: -8.375235557556152
    3. ' idx' → logprob: -13.125235557556152
    4. '(idx' → logprob: -13.125235557556152
    5. '[int' → logprob: -14.625235557556152
    6. '[i' → logprob: -15.500235557556152
    7. '```' → logprob: -15.625235557556152
    8. '	idx' → logprob: -16.25023651123047
    9. '[
' → logprob: -17.12523651123047
    10. ')' → logprob: -17.37523651123047

Token 567: ']))
' (ID: 24801)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3265033960342407
    2. ')
' → logprob: -1.3265033960342407
    3. '])' → logprob: -1.4515033960342407
    4. '])
' → logprob: -1.4515033960342407
    5. '))
' → logprob: -8.57650375366211
    6. '       ' → logprob: -8.70150375366211
    7. '))' → logprob: -9.70150375366211
    8. ' )
' → logprob: -9.82650375366211
    9. ')]' → logprob: -9.95150375366211
    10. '   ' → logprob: -10.20150375366211

Token 568: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002897355705499649
    2. '   ' → logprob: -6.752897262573242
    3. 'idx' → logprob: -7.252897262573242
    4. ' idx' → logprob: -8.127897262573242
    5. '	idx' → logprob: -8.127897262573242
    6. '<|end|>' → logprob: -8.377897262573242
    7. '[idx' → logprob: -9.502897262573242
    8. '```' → logprob: -10.252897262573242
    9. '	' → logprob: -10.752897262573242
    10. '	   ' → logprob: -11.502897262573242

Token 569: ' idx' (ID: 14016)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7835766673088074
    2. '       ' → logprob: -1.1585767269134521
    3. ' idx' → logprob: -1.9085767269134521
    4. 'idx' (adapté à ' idx') → logprob: -2.533576726913452
    5. ' ' → logprob: -7.908576488494873
    6. '```' → logprob: -8.158576965332031
    7. '	idx' → logprob: -8.283576965332031
    8. '[idx' → logprob: -8.658576965332031
    9. '2' → logprob: -9.158576965332031
    10. '+' → logprob: -9.408576965332031

Token 570: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31329745054244995
    2. ' +=' → logprob: -1.3132975101470947
    3. '+' → logprob: -10.313297271728516
    4. ']+=' → logprob: -13.688297271728516
    5. '=' → logprob: -14.438297271728516
    6. ' +' → logprob: -15.063297271728516
    7. ' ' → logprob: -15.563297271728516
    8. '```' → logprob: -16.188297271728516
    9. ' ' → logprob: -16.438297271728516
    10. '   ' → logprob: -17.063297271728516

Token 571: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001502717612311244
    2. ' ' → logprob: -6.501502513885498
    3. '2' → logprob: -14.751502990722656
    4. '```' → logprob: -18.251502990722656
    5. '   ' → logprob: -19.001502990722656
    6. '１' → logprob: -19.126502990722656
    7. '<|end|>' → logprob: -20.564002990722656
    8. '0' → logprob: -20.814002990722656
    9. 's' → logprob: -21.001502990722656
    10. '
' → logprob: -21.189002990722656

Token 572: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.236549335066229e-05
    2. ' ' → logprob: -10.875021934509277
    3. '2' → logprob: -12.625021934509277
    4. '```' → logprob: -17.750022888183594
    5. '   ' → logprob: -19.250022888183594
    6. '１' → logprob: -19.375022888183594
    7. '<|end|>' → logprob: -19.812522888183594
    8. '`' → logprob: -19.812522888183594
    9. '۱' → logprob: -20.625022888183594
    10. '0' → logprob: -20.687522888183594

Token 573: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6079373955726624
    2. 'solve' → logprob: -0.8579373955726624
    3. '
' → logprob: -3.9829373359680176
    4. ' solve' → logprob: -4.482937335968018
    5. '```' → logprob: -6.732937335968018
    6. '.solve' → logprob: -8.732937812805176
    7. '<|end|>' → logprob: -10.357937812805176
    8. '    
' → logprob: -10.357937812805176
    9. 'def' → logprob: -10.482937812805176
    10. ')' → logprob: -10.857937812805176

Token 574: '   ' (ID: 271)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.4417808949947357
    2. '   ' → logprob: -1.066780924797058
    3. ' solve' → logprob: -4.566781044006348
    4. '```' → logprob: -6.191781044006348
    5. '
' → logprob: -8.191781044006348
    6. '.solve' → logprob: -8.941781044006348
    7. ')' → logprob: -9.816781044006348
    8. 's' → logprob: -10.441781044006348
    9. '    
' → logprob: -11.441781044006348
    10. '<|end|>' → logprob: -11.566781044006348

Token 575: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -0.0002930366899818182
    2. ' solve' → logprob: -8.625292778015137
    3. '   ' → logprob: -9.125292778015137
    4. '```' → logprob: -12.500292778015137
    5. '.solve' → logprob: -14.625292778015137
    6. '
' → logprob: -15.500292778015137
    7. 's' → logprob: -16.000293731689453
    8. 'print' → logprob: -17.375293731689453
    9. ' ' → logprob: -17.750293731689453
    10. '``' → logprob: -17.750293731689453

Token 576: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004362718027550727
    2. '(' → logprob: -7.750436305999756
    3. ' (' → logprob: -12.375435829162598
    4. '(
' → logprob: -13.625435829162598
    5. '(N' → logprob: -18.125436782836914
    6. '```' → logprob: -18.375436782836914
    7. '(num' → logprob: -18.500436782836914
    8. '((' → logprob: -18.750436782836914
    9. '(

' → logprob: -18.750436782836914
    10. '(main' → logprob: -18.750436782836914

Token 577: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001588058308698237
    2. ',m' → logprob: -6.501587867736816
    3. ' ,' → logprob: -9.376587867736816
    4. ',
' → logprob: -15.251587867736816
    5. 'm' → logprob: -15.501587867736816
    6. '   ' → logprob: -15.751587867736816
    7. ',n' → logprob: -16.126588821411133
    8. '‌,' → logprob: -16.126588821411133
    9. ',q' → logprob: -17.001588821411133
    10. '```' → logprob: -17.126588821411133

Token 578: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0015023599844425917
    2. ' m' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.876502990722656
    4. '    ' → logprob: -18.376502990722656
    5. '	m' → logprob: -18.376502990722656
    6. ' ' → logprob: -18.626502990722656
    7. '  ' → logprob: -19.876502990722656
    8. '```' → logprob: -20.626502990722656
    9. '
' → logprob: -21.626502990722656
    10. '       ' → logprob: -21.876502990722656

Token 579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005166939808987081
    2. ',l' → logprob: -7.750516891479492
    3. ' ,' → logprob: -9.375516891479492
    4. ',m' → logprob: -14.250516891479492
    5. 'l' → logprob: -14.875516891479492
    6. '   ' → logprob: -15.875516891479492
    7. ',q' → logprob: -16.000516891479492
    8. '```' → logprob: -17.250516891479492
    9. ' l' → logprob: -17.375516891479492
    10. ',
' → logprob: -18.250516891479492

Token 580: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -3.547789674485102e-05
    2. ' l' → logprob: -10.250035285949707
    3. 'q' → logprob: -17.750036239624023
    4. '	l' → logprob: -20.625036239624023
    5. '   ' → logprob: -21.375036239624023
    6. 'm' → logprob: -21.750036239624023
    7. ' ' → logprob: -21.875036239624023
    8. ',l' → logprob: -22.375036239624023
    9. 'k' → logprob: -22.750036239624023
    10. 'L' → logprob: -23.000036239624023

Token 581: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017922651022672653
    2. ',a' → logprob: -8.750179290771484
    3. ' ,' → logprob: -11.125179290771484
    4. 'a' → logprob: -12.125179290771484
    5. ',s' → logprob: -15.625179290771484
    6. ',m' → logprob: -16.375179290771484
    7. ',q' → logprob: -16.375179290771484
    8. '   ' → logprob: -17.375179290771484
    9. '```' → logprob: -18.500179290771484
    10. ',
' → logprob: -18.625179290771484

Token 582: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.15310683415737e-05
    2. ' a' → logprob: -10.750021934509277
    3. '	a' → logprob: -21.12502098083496
    4. '   ' → logprob: -23.62502098083496
    5. '_a' → logprob: -23.62502098083496
    6. '#a' → logprob: -24.50002098083496
    7. 'а' → logprob: -24.87502098083496
    8. ',a' → logprob: -25.12502098083496
    9. ')a' → logprob: -25.25002098083496
    10. ' ' → logprob: -26.37502098083496

Token 583: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00099648698233068
    2. ',b' → logprob: -7.0009965896606445
    3. ' ,' → logprob: -9.375996589660645
    4. 'b' → logprob: -15.125996589660645
    5. ',
' → logprob: -18.000995635986328
    6. ',s' → logprob: -19.750995635986328
    7. ' b' → logprob: -19.750995635986328
    8. ',B' → logprob: -20.250995635986328
    9. '=' → logprob: -20.750995635986328
    10. ',m' → logprob: -20.875995635986328

Token 584: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005530327325686812
    2. ' b' → logprob: -7.500553131103516
    3. ' ' → logprob: -20.125553131103516
    4. '<|end|>' → logprob: -20.375553131103516
    5. '	b' → logprob: -20.875553131103516
    6. '   ' → logprob: -21.250553131103516
    7. '    ' → logprob: -22.125553131103516
    8. ',b' → logprob: -22.500553131103516
    9. '  ' → logprob: -22.750553131103516
    10. ')b' → logprob: -23.250553131103516

Token 585: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.763666947837919e-05
    2. ',c' → logprob: -10.37504768371582
    3. ' ,' → logprob: -11.12504768371582
    4. 'c' → logprob: -13.37504768371582
    5. ',
' → logprob: -18.37504768371582
    6. ' c' → logprob: -18.87504768371582
    7. 's' → logprob: -19.87504768371582
    8. ',t' → logprob: -19.87504768371582
    9. ',s' → logprob: -20.37504768371582
    10. '_,' → logprob: -21.00004768371582

Token 586: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01416350994259119
    2. ' c' → logprob: -4.264163494110107
    3. '	c' → logprob: -18.639163970947266
    4. ')c' → logprob: -20.014163970947266
    5. ' ' → logprob: -20.139163970947266
    6. '   ' → logprob: -20.764163970947266
    7. 's' → logprob: -21.514163970947266
    8. 'с' → logprob: -21.639163970947266
    9. '_c' → logprob: -21.764163970947266
    10. '  ' → logprob: -21.889163970947266

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014609156642109156
    2. ',s' → logprob: -9.37514591217041
    3. ' ,' → logprob: -9.75014591217041
    4. 's' → logprob: -13.00014591217041
    5. ',q' → logprob: -14.50014591217041
    6. ' s' → logprob: -16.250146865844727
    7. '   ' → logprob: -17.125146865844727
    8. ')' → logprob: -17.250146865844727
    9. 'q' → logprob: -17.625146865844727
    10. ',
' → logprob: -18.125146865844727

Token 588: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.5491004129871726e-05
    2. ' q' → logprob: -10.000045776367188
    3. '	q' → logprob: -20.125045776367188
    4. '   ' → logprob: -23.875045776367188
    5. ',q' → logprob: -24.625045776367188
    6. '_q' → logprob: -25.125045776367188
    7. '$q' → logprob: -25.375045776367188
    8. '.q' → logprob: -25.375045776367188
    9. ' ' → logprob: -25.875045776367188
    10. '
' → logprob: -25.875045776367188

Token 589: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000612359493970871
    2. ' ,' → logprob: -7.625612258911133
    3. ',s' → logprob: -9.250612258911133
    4. 's' → logprob: -10.500612258911133
    5. ' s' → logprob: -14.250612258911133
    6. '   ' → logprob: -15.875612258911133
    7. ')' → logprob: -17.875612258911133
    8. ' ' → logprob: -18.750612258911133
    9. '‌,' → logprob: -19.375612258911133
    10. '```' → logprob: -19.375612258911133

Token 590: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018150178715586662
    2. ' s' → logprob: -4.018150329589844
    3. 't' → logprob: -15.393150329589844
    4. '	s' → logprob: -18.643150329589844
    5. ' t' → logprob: -19.018150329589844
    6. ' ' → logprob: -19.643150329589844
    7. '   ' → logprob: -19.893150329589844
    8. '_s' → logprob: -20.768150329589844
    9. ' ' → logprob: -21.143150329589844
    10. '
' → logprob: -21.393150329589844

Token 591: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.673547563375905e-05
    2. ' ,' → logprob: -9.625086784362793
    3. ',t' → logprob: -10.875086784362793
    4. ' t' → logprob: -13.625086784362793
    5. 't' → logprob: -15.125086784362793
    6. ',
' → logprob: -16.125085830688477
    7. 's' → logprob: -16.750085830688477
    8. ',s' → logprob: -17.625085830688477
    9. '‌,' → logprob: -19.875085830688477
    10. ')' → logprob: -20.250085830688477

Token 592: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2519291639328003
    2. ' t' → logprob: -1.5019291639328003
    3. '	t' → logprob: -16.251928329467773
    4. ' ' → logprob: -19.376928329467773
    5. ')t' → logprob: -20.251928329467773
    6. '`t' → logprob: -20.376928329467773
    7. '   ' → logprob: -20.501928329467773
    8. '[t' → logprob: -21.126928329467773
    9. ' т' → logprob: -21.626928329467773
    10. ' ' → logprob: -21.626928329467773

Token 593: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -14.875000953674316
    4. ')#' → logprob: -16.625001907348633
    5. ')`' → logprob: -17.000001907348633
    6. '())' → logprob: -17.500001907348633
    7. '))' → logprob: -18.250001907348633
    8. ')}' → logprob: -18.375001907348633
    9. ')return' → logprob: -18.750001907348633
    10. '   ' → logprob: -19.250001907348633

Token 594: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006943239714019
    2. '
' → logprob: -7.625694274902344
    3. '```' → logprob: -8.875694274902344
    4. ' if' → logprob: -10.125694274902344
    5. '<|end|>' → logprob: -11.000694274902344
    6. '#' → logprob: -12.500694274902344
    7. '\n' → logprob: -12.750694274902344
    8. '``' → logprob: -14.000694274902344
    9. '\' → logprob: -15.250694274902344
    10. 'i' → logprob: -15.500694274902344

Token 595: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.008645651862025261
    2. '__' → logprob: -4.758645534515381
    3. ' ' → logprob: -10.633646011352539
    4. '_name' → logprob: -12.633646011352539
    5. '_' → logprob: -13.383646011352539
    6. ' ' → logprob: -14.383646011352539
    7. 'name' → logprob: -14.883646011352539
    8. '​' → logprob: -15.008646011352539
    9. '___' → logprob: -15.383646011352539
    10. ' name' → logprob: -15.633646011352539

Token 596: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01369186770170927
    2. ' __' → logprob: -4.3886919021606445
    3. ' ==' → logprob: -7.5136919021606445
    4. '==' → logprob: -8.638691902160645
    5. '_' → logprob: -9.263691902160645
    6. '__.__' → logprob: -9.263691902160645
    7. '.__' → logprob: -9.388691902160645
    8. '[' → logprob: -10.013691902160645
    9. '__.' → logprob: -10.263691902160645
    10. '___' → logprob: -11.263691902160645

Token 597: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.061054359131958e-06
    2. '__.__' → logprob: -11.875007629394531
    3. '__
' → logprob: -14.750007629394531
    4. '==' → logprob: -15.000007629394531
    5. '____' → logprob: -15.875007629394531
    6. '_' → logprob: -16.62500762939453
    7. '___' → logprob: -16.87500762939453
    8. '__.' → logprob: -16.87500762939453
    9. '__["' → logprob: -17.50000762939453
    10. '__[' → logprob: -17.62500762939453

Token 598: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16802752017974854
    2. '==' → logprob: -2.043027400970459
    3. ' ==' → logprob: -3.793027400970459
    4. '=="' → logprob: -6.043027400970459
    5. '_' → logprob: -9.793027877807617
    6. '=='' → logprob: -10.418027877807617
    7. '=' → logprob: -11.043027877807617
    8. '___' → logprob: -11.543027877807617
    9. '==
' → logprob: -12.418027877807617
    10. '===' → logprob: -12.418027877807617

Token 599: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0067337267100811005
    2. ''' → logprob: -5.0067338943481445
    3. '__' → logprob: -11.131733894348145
    4. ' "__' → logprob: -12.631733894348145
    5. ''"' → logprob: -16.256732940673828
    6. '"name' → logprob: -16.381732940673828
    7. ' '__' → logprob: -17.006732940673828
    8. '"<?' → logprob: -17.256732940673828
    9. '"class' → logprob: -17.381732940673828
    10. '   ' → logprob: -17.381732940673828

Token 600: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.31338465213775635
    2. '__' → logprob: -1.3133846521377563
    3. '_main' → logprob: -10.063385009765625
    4. 'name' → logprob: -10.188385009765625
    5. '"' → logprob: -10.313385009765625
    6. ''' → logprob: -13.063385009765625
    7. '___' → logprob: -13.313385009765625
    8. '__":
' → logprob: -13.438385009765625
    9. '__
' → logprob: -13.688385009765625
    10. ' main' → logprob: -14.188385009765625

Token 601: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.07904765009880066
    2. '__' → logprob: -2.579047679901123
    3. '__':
' → logprob: -8.829047203063965
    4. '__.' → logprob: -12.329047203063965
    5. '__:' → logprob: -12.454047203063965
    6. '__["' → logprob: -13.079047203063965
    7. '__.__' → logprob: -14.329047203063965
    8. '__",' → logprob: -15.954047203063965
    9. '__("' → logprob: -16.57904815673828
    10. '__
' → logprob: -17.45404815673828

Token 602: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14915385842323303
    2. ' main' → logprob: -2.5241539478302
    3. 'main' → logprob: -3.2741539478302
    4. '	main' → logprob: -5.274153709411621
    5. ' run' → logprob: -5.399153709411621
    6. '   ' → logprob: -6.149153709411621
    7. '__' → logprob: -6.274153709411621
    8. 'run' → logprob: -6.274153709411621
    9. '    
' → logprob: -6.774153709411621
    10. '<|end|>' → logprob: -7.024153709411621

Token 603: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.00020425561524461955
    2. ' main' → logprob: -8.500204086303711
    3. '	main' → logprob: -14.625204086303711
    4. '   ' → logprob: -15.250204086303711
    5. ' ' → logprob: -20.25020408630371
    6. '_main' → logprob: -21.00020408630371
    7. '.main' → logprob: -21.00020408630371
    8. '  ' → logprob: -21.37520408630371
    9. '(main' → logprob: -21.75020408630371
    10. 'm' → logprob: -22.12520408630371

Token 604: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 602
Tokens correctement prédits (1ère position, stricte): 292
Tokens correctement prédits (1ère position, avec adaptation): 333
Tokens correctement prédits (top 10): 550
Précision stricte (1ère position): 48.50%
Précision adaptée (1ère position): 55.32%
Précision (top 10): 91.36%
================================================================================
