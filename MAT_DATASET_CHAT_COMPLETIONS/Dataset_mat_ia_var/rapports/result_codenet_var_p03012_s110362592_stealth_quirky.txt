================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
get = lambda: input()
to_ints = lambda x: list(map(int, x.strip().split()))
import sys

class WeirdNamespace:
    pass

weird = WeirdNamespace()
weird.n = int(get())
weird.ws = to_ints(get())
weird.total = 0
for w in weird.ws:
    weird.total += w

weird.ans = float('inf')
for idx in range(weird.n):
    if idx == 0:
        temp = []
    else:
        temp = [weird.ws[j] for j in range(idx)]
    s = 0
    for x in temp:
        s += x
    candidate = abs(weird.total - 2 * s)
    if candidate < weird.ans:
        weird.ans = candidate

[print(weird.ans) for _ in range(1) if True]
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'get' (ID: 522)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' lambda' (ID: 27871)
  → Token d'amorce (pas de prédiction)

Token 3: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.027568411082029343
    2. 'x' → logprob: -5.027568340301514
    3. ' ' → logprob: -5.027568340301514
    4. ' s' → logprob: -5.152568340301514
    5. ' obj' → logprob: -5.402568340301514
    6. ' a' → logprob: -7.027568340301514
    7. ' ,' → logprob: -7.902568340301514
    8. ' value' → logprob: -8.277568817138672
    9. ' lambda' → logprob: -8.652568817138672
    10. ' get' → logprob: -8.777568817138672

Token 4: ' input' (ID: 3422)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.7566161155700684
    2. ' input' → logprob: -0.8816161155700684
    3. 'input' → logprob: -2.7566161155700684
    4. 'None' → logprob: -3.8816161155700684
    5. ' []' → logprob: -4.381616115570068
    6. ' ' → logprob: -4.506616115570068
    7. ' True' → logprob: -6.256616115570068
    8. '[]' → logprob: -7.381616115570068
    9. ' int' → logprob: -7.381616115570068
    10. ' __' → logprob: -7.381616115570068

Token 5: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15165160596370697
    2. '()' → logprob: -2.026651620864868
    3. '.' → logprob: -5.401651382446289
    4. '().' → logprob: -5.651651382446289
    5. '('' → logprob: -8.026651382446289
    6. '(.)' → logprob: -8.901651382446289
    7. ' (' → logprob: -9.151651382446289
    8. ' ()' → logprob: -9.651651382446289
    9. '('.')' → logprob: -9.651651382446289
    10. '(
' → logprob: -10.026651382446289

Token 6: 'to' (ID: 935)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12063050270080566
    2. '()' → logprob: -2.4956305027008057
    3. '.' → logprob: -3.6206305027008057
    4. '().' → logprob: -6.120630264282227
    5. '(
' → logprob: -6.870630264282227
    6. ')' → logprob: -8.745630264282227
    7. '```' → logprob: -8.995630264282227
    8. ' ' → logprob: -8.995630264282227
    9. '\' → logprob: -9.495630264282227
    10. ' (' → logprob: -9.745630264282227

Token 7: '_int' (ID: 12285)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03135787695646286
    2. '()' → logprob: -4.281357765197754
    3. ' (' → logprob: -5.406357765197754
    4. ' =' → logprob: -5.531357765197754
    5. '(
' → logprob: -6.281357765197754
    6. '=' → logprob: -6.531357765197754
    7. '_' → logprob: -6.781357765197754
    8. '('' → logprob: -7.281357765197754
    9. ' ()' → logprob: -7.281357765197754
    10. '(lambda' → logprob: -7.781357765197754

Token 8: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24880608916282654
    2. ' =' → logprob: -1.998806118965149
    3. '=' → logprob: -2.4988059997558594
    4. '_' → logprob: -6.498805999755859
    5. '=lambda' → logprob: -7.623805999755859
    6. 'convert' → logprob: -9.62380599975586
    7. '```' → logprob: -9.87380599975586
    8. '()' → logprob: -10.12380599975586
    9. '=(' → logprob: -10.24880599975586
    10. '(lambda' → logprob: -10.24880599975586

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3419572114944458
    2. '(' → logprob: -1.7169572114944458
    3. '(lambda' → logprob: -2.8419570922851562
    4. '=' → logprob: -3.5919570922851562
    5. '=lambda' → logprob: -4.341957092285156
    6. '('' → logprob: -4.841957092285156
    7. 'lambda' → logprob: -7.341957092285156
    8. ''' → logprob: -7.966957092285156
    9. '`' → logprob: -7.966957092285156
    10. ' (' → logprob: -8.216957092285156

Token 10: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.005261272192001343
    2. 'lambda' → logprob: -5.255261421203613
    3. '(lambda' → logprob: -11.380261421203613
    4. ' list' → logprob: -11.505261421203613
    5. ' lamb' → logprob: -12.380261421203613
    6. '=lambda' → logprob: -14.130261421203613
    7. ' ' → logprob: -14.505261421203613
    8. ' map' → logprob: -15.380261421203613
    9. '   ' → logprob: -16.005260467529297
    10. 'list' → logprob: -16.005260467529297

Token 11: ' x' (ID: 1215)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.4550449550151825
    2. ':' → logprob: -2.080044984817505
    3. ' s' → logprob: -2.205044984817505
    4. 'lambda' → logprob: -2.955044984817505
    5. ' input' → logprob: -3.580044984817505
    6. ' list' → logprob: -3.830044984817505
    7. ' x' → logprob: -4.205044746398926
    8. ' :' → logprob: -5.705044746398926
    9. ' line' → logprob: -5.955044746398926
    10. ' map' → logprob: -6.455044746398926

Token 12: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0054786065593361855
    2. ' :' → logprob: -6.005478382110596
    3. ':list' → logprob: -6.005478382110596
    4. ' x' → logprob: -8.255478858947754
    5. ':x' → logprob: -8.630478858947754
    6. 'x' → logprob: -10.255478858947754
    7. ' list' → logprob: -11.130478858947754
    8. '(x' → logprob: -11.630478858947754
    9. '[:' → logprob: -12.255478858947754
    10. ':int' → logprob: -12.255478858947754

Token 13: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.07903002202510834
    2. 'list' → logprob: -2.5790300369262695
    3. ' [' → logprob: -9.57903003692627
    4. '[list' → logprob: -10.32903003692627
    5. '[' → logprob: -11.57903003692627
    6. ' x' → logprob: -11.57903003692627
    7. ' map' → logprob: -11.70403003692627
    8. '[x' → logprob: -12.07903003692627
    9. 'map' → logprob: -13.07903003692627
    10. '[int' → logprob: -13.45403003692627

Token 14: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0847594141960144
    2. '(' → logprob: -2.584759473800659
    3. '(x' → logprob: -5.45975923538208
    4. '(int' → logprob: -6.45975923538208
    5. '(
' → logprob: -11.084759712219238
    6. '(filter' → logprob: -12.584759712219238
    7. ' map' → logprob: -13.084759712219238
    8. '(

' → logprob: -13.209759712219238
    9. 'map' → logprob: -13.334759712219238
    10. '(iter' → logprob: -14.084759712219238

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005027544684708118
    2. '(' → logprob: -7.750502586364746
    3. 'int' → logprob: -10.000502586364746
    4. '<int' → logprob: -11.250502586364746
    5. ' int' → logprob: -12.500502586364746
    6. '=int' → logprob: -12.500502586364746
    7. '(str' → logprob: -13.125502586364746
    8. ',int' → logprob: -13.500502586364746
    9. '(
' → logprob: -14.000502586364746
    10. '(ord' → logprob: -14.000502586364746

Token 16: ',' (ID: 11)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.38223785161972046
    2. ',' → logprob: -1.2572379112243652
    3. '))' → logprob: -4.757237911224365
    4. '(' → logprob: -4.882237911224365
    5. ')' → logprob: -5.257237911224365
    6. ',x' → logprob: -5.632237911224365
    7. '(input' → logprob: -5.757237911224365
    8. '<|end|>' → logprob: -5.882237911224365
    9. ',input' → logprob: -7.007237911224365
    10. '),' → logprob: -8.007237434387207

Token 17: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02980939857661724
    2. ' x' → logprob: -3.5298094749450684
    3. '(x' → logprob: -9.77980899810791
    4. ')' → logprob: -14.15480899810791
    5. 'input' → logprob: -14.15480899810791
    6. ')x' → logprob: -14.40480899810791
    7. '	x' → logprob: -16.154809951782227
    8. ' ' → logprob: -16.404809951782227
    9. '(' → logprob: -16.529809951782227
    10. ',x' → logprob: -17.404809951782227

Token 18: '.strip' (ID: 40613)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.036713168025016785
    2. '.strip' → logprob: -3.411713123321533
    3. '.' → logprob: -6.786713123321533
    4. 'split' → logprob: -6.911713123321533
    5. ' .' → logprob: -7.411713123321533
    6. ')' → logprob: -8.911713600158691
    7. '))' → logprob: -9.411713600158691
    8. '().' → logprob: -9.786713600158691
    9. 'strip' → logprob: -10.661713600158691
    10. '(split' → logprob: -10.786713600158691

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003387787379324436
    2. '.split' → logprob: -6.128387928009033
    3. ')' → logprob: -7.253387928009033
    4. '))' → logprob: -8.378387451171875
    5. '('' → logprob: -9.378387451171875
    6. '()' → logprob: -9.628387451171875
    7. '())' → logprob: -10.378387451171875
    8. ' .' → logprob: -10.753387451171875
    9. '()))' → logprob: -11.128387451171875
    10. '('').' → logprob: -11.628387451171875

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.125
    3. '(split' → logprob: -18.125
    4. 'spl' → logprob: -18.5
    5. 'rstrip' → logprob: -19.5
    6. 'sp' → logprob: -20.0
    7. 'strip' → logprob: -21.0
    8. 's' → logprob: -21.125
    9. '.split' → logprob: -21.375
    10. 'replace' → logprob: -22.25

Token 21: '()))
' (ID: 24521)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.47139236330986023
    2. '))' → logprob: -2.2213923931121826
    3. '()))' → logprob: -2.3463923931121826
    4. ')' → logprob: -2.5963923931121826
    5. '())' → logprob: -2.8463923931121826
    6. ')))' → logprob: -3.9713923931121826
    7. '(' → logprob: -4.9713921546936035
    8. ''))' → logprob: -5.4713921546936035
    9. '()' → logprob: -5.9713921546936035
    10. '())))' → logprob: -5.9713921546936035

Token 22: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1927996128797531
    2. '
' → logprob: -3.1927995681762695
    3. 'newline' → logprob: -3.6927995681762695
    4. 'n' → logprob: -3.8177995681762695
    5. '\' → logprob: -3.9427995681762695
    6. 'def' → logprob: -3.9427995681762695
    7. '(' → logprob: -4.4427995681762695
    8. '[' → logprob: -5.6927995681762695
    9. '' → logprob: -5.6927995681762695
    10. '()' → logprob: -5.8177995681762695

Token 23: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.00028993739397265017
    2. ' ' → logprob: -8.375289916992188
    3. ' math' → logprob: -10.625289916992188
    4. ' itertools' → logprob: -11.000289916992188
    5. ' functools' → logprob: -12.250289916992188
    6. ' os' → logprob: -12.625289916992188
    7. 'sys' → logprob: -12.750289916992188
    8. ' numpy' → logprob: -13.000289916992188
    9. ' collections' → logprob: -13.625289916992188
    10. '_' → logprob: -13.875289916992188

Token 24: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.039358530193567276
    2. '
' → logprob: -3.414358615875244
    3. '\' → logprob: -6.664358615875244
    4. 'for' → logprob: -6.914358615875244
    5. 'newline' → logprob: -7.289358615875244
    6. 'import' → logprob: -7.414358615875244
    7. '```' → logprob: -7.789358615875244
    8. 'input' → logprob: -8.414358139038086
    9. '

' → logprob: -8.414358139038086
    10. '' → logprob: -8.539358139038086

Token 25: 'class' (ID: 1444)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4548277258872986
    2. '
' → logprob: -1.7048277854919434
    3. '\n' → logprob: -1.8298277854919434
    4. 'data' → logprob: -4.704827785491943
    5. 'def' → logprob: -5.579827785491943
    6. 'n' → logprob: -5.579827785491943
    7. ' for' → logprob: -6.204827785491943
    8. 'newline' → logprob: -6.454827785491943
    9. '\' → logprob: -6.954827785491943
    10. 'input' → logprob: -7.204827785491943

Token 26: ' Weird' (ID: 153616)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.7382555603981018
    2. ' My' → logprob: -1.988255500793457
    3. ' ' → logprob: -2.738255500793457
    4. ' Data' → logprob: -2.988255500793457
    5. ' Input' → logprob: -2.988255500793457
    6. ' Solver' → logprob: -2.988255500793457
    7. ' Parser' → logprob: -2.988255500793457
    8. ' Reader' → logprob: -4.113255500793457
    9. ' Node' → logprob: -4.113255500793457
    10. ' Counter' → logprob: -4.363255500793457

Token 27: 'Namespace' (ID: 29257)
  Prédit: 'Class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Class' → logprob: -0.28465506434440613
    2. 'Number' → logprob: -1.6596550941467285
    3. 'We' → logprob: -4.4096550941467285
    4. ':' → logprob: -5.0346550941467285
    5. 'List' → logprob: -5.1596550941467285
    6. 'Error' → logprob: -5.2846550941467285
    7. 'Function' → logprob: -5.5346550941467285
    8. 'Exception' → logprob: -6.0346550941467285
    9. 'Name' → logprob: -6.1596550941467285
    10. 'Array' → logprob: -6.2846550941467285

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001324764802120626
    2. '():' → logprob: -7.751324653625488
    3. ':
' → logprob: -8.251324653625488
    4. '(' → logprob: -8.376324653625488
    5. '(object' → logprob: -8.376324653625488
    6. ' :' → logprob: -9.001324653625488
    7. '(dict' → logprob: -10.126324653625488
    8. '   ' → logprob: -13.626324653625488
    9. ':

' → logprob: -13.876324653625488
    10. ',' → logprob: -14.126324653625488

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1175682544708252
    2. '    ' → logprob: -2.867568254470825
    3. '    
' → logprob: -3.367568254470825
    4. '<|end|>' → logprob: -4.367568016052246
    5. '<|end|>' → logprob: -6.742568016052246
    6. ' pass' → logprob: -6.867568016052246
    7. ' def' → logprob: -6.867568016052246
    8. ' 
' → logprob: -7.117568016052246
    9. '
' → logprob: -7.242568016052246
    10. '     
' → logprob: -7.992568016052246

Token 30: ' pass' (ID: 1853)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.22184211015701294
    2. 'def' → logprob: -1.7218420505523682
    3. ' pass' → logprob: -4.471842288970947
    4. '   ' → logprob: -5.471842288970947
    5. 'pass' (adapté à ' pass') → logprob: -5.471842288970947
    6. ' __' → logprob: -8.346841812133789
    7. '    ' → logprob: -9.721841812133789
    8. '__' → logprob: -9.971841812133789
    9. '	def' → logprob: -11.096841812133789
    10. ' ' → logprob: -11.596841812133789

Token 31: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5827862620353699
    2. '<|end|>' → logprob: -0.9577862620353699
    3. '

' → logprob: -3.8327863216400146
    4. '<|end|>' → logprob: -4.7077860832214355
    5. 'def' → logprob: -4.8327860832214355
    6. '\n' → logprob: -5.3327860832214355
    7. '\' → logprob: -5.7077860832214355
    8. 'newline' → logprob: -6.2077860832214355
    9. '.' → logprob: -6.4577860832214355
    10. '' → logprob: -6.7077860832214355

Token 32: 'we' (ID: 854)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9420768022537231
    2. '
' → logprob: -2.0670766830444336
    3. '\n' → logprob: -2.0670766830444336
    4. 'w' → logprob: -2.3170766830444336
    5. 'class' → logprob: -3.0670766830444336
    6. '

' → logprob: -3.3170766830444336
    7. 'n' → logprob: -3.6920766830444336
    8. 'namespace' → logprob: -3.9420766830444336
    9. 'ns' → logprob: -4.192076683044434
    10. 'data' → logprob: -4.192076683044434

Token 33: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -2.641841820150148e-05
    2. 'rd' → logprob: -11.12502670288086
    3. 'ir' → logprob: -11.75002670288086
    4. 'ard' → logprob: -13.12502670288086
    5. 'irds' → logprob: -13.87502670288086
    6. 'ierd' → logprob: -14.75002670288086
    7. '#' → logprob: -16.00002670288086
    8. 'ld' → logprob: -16.50002670288086
    9. 'irdi' → logprob: -17.37502670288086
    10. 'ak' → logprob: -17.37502670288086

Token 34: ' =' (ID: 314)
  Prédit: 'Namespace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Namespace' → logprob: -0.08237259835004807
    2. '_namespace' → logprob: -2.5823726654052734
    3. 'namespace' → logprob: -5.832372665405273
    4. ' =' → logprob: -8.957372665405273
    5. '.Namespace' → logprob: -9.082372665405273
    6. ' Namespace' → logprob: -9.457372665405273
    7. 'Name' → logprob: -9.582372665405273
    8. 'Namespaces' → logprob: -9.832372665405273
    9. '_ns' → logprob: -11.082372665405273
    10. '_NAMESPACE' → logprob: -11.082372665405273

Token 35: ' Weird' (ID: 153616)
  Prédit: ' Weird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Weird' → logprob: -0.12801331281661987
    2. 'We' → logprob: -2.1280133724212646
    3. ' We' → logprob: -6.8780131340026855
    4. ' weird' → logprob: -10.878013610839844
    5. ' ' → logprob: -11.003013610839844
    6. '   ' → logprob: -11.503013610839844
    7. '  ' → logprob: -12.378013610839844
    8. 'we' → logprob: -14.003013610839844
    9. '_we' → logprob: -14.128013610839844
    10. '    ' → logprob: -14.378013610839844

Token 36: 'Namespace' (ID: 29257)
  Prédit: 'Namespace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Namespace' → logprob: -1.7432603272027336e-06
    2. 'namespace' → logprob: -13.500001907348633
    3. 'Namespaces' → logprob: -16.000001907348633
    4. 'Name' → logprob: -16.875001907348633
    5. '_namespace' → logprob: -17.000001907348633
    6. 'Names' → logprob: -17.125001907348633
    7. ' Namespace' → logprob: -17.250001907348633
    8. '_NAMESPACE' → logprob: -17.625001907348633
    9. '.Namespace' → logprob: -19.000001907348633
    10. 'amespace' → logprob: -19.250001907348633

Token 37: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009873899631202221
    2. '()
' → logprob: -4.634873867034912
    3. '()

' → logprob: -9.25987434387207
    4. '()\' → logprob: -11.13487434387207
    5. '(' → logprob: -12.25987434387207
    6. '()<' → logprob: -14.25987434387207
    7. ' ()' → logprob: -14.38487434387207
    8. '();' → logprob: -14.50987434387207
    9. '()`' → logprob: -14.88487434387207
    10. '().' → logprob: -15.50987434387207

Token 38: 'we' (ID: 854)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04609242454171181
    2. '\' → logprob: -4.046092510223389
    3. '
' → logprob: -5.171092510223389
    4. '_' → logprob: -5.546092510223389
    5. '.
' → logprob: -5.546092510223389
    6. 'def' → logprob: -5.546092510223389
    7. 'we' → logprob: -6.171092510223389
    8. 'get' → logprob: -6.421092510223389
    9. '\n' → logprob: -6.546092510223389
    10. '<|end|>' → logprob: -7.046092510223389

Token 39: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -1.0445127372804563e-05
    2. 'rd' → logprob: -12.50001049041748
    3. ' ' → logprob: -13.37501049041748
    4. 'ard' → logprob: -13.75001049041748
    5. 'ierd' → logprob: -13.87501049041748
    6. 'ir' → logprob: -14.00001049041748
    7. 'irds' → logprob: -14.12501049041748
    8. 'urd' → logprob: -14.62501049041748
    9. 'ord' → logprob: -15.75001049041748
    10. 'i' → logprob: -15.87501049041748

Token 40: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0019329203059896827
    2. '.__' → logprob: -7.1269330978393555
    3. ' .' → logprob: -7.3769330978393555
    4. '<|end|>' → logprob: -9.251933097839355
    5. '.<' → logprob: -9.376933097839355
    6. '.get' → logprob: -10.376933097839355
    7. '<|end|>' → logprob: -10.501933097839355
    8. '.user' → logprob: -10.501933097839355
    9. '._' → logprob: -10.626933097839355
    10. '.py' → logprob: -10.876933097839355

Token 41: ' =' (ID: 314)
  Prédit: 'ame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ame' → logprob: -0.010804922319948673
    2. 'umber' → logprob: -5.260805130004883
    3. 'um' → logprob: -5.885805130004883
    4. 'ames' → logprob: -6.760805130004883
    5. 'amespace' → logprob: -7.385805130004883
    6. 'umbers' → logprob: -8.135805130004883
    7. 'ext' → logprob: -8.510805130004883
    8. 'ums' → logprob: -8.760805130004883
    9. '=' → logprob: -9.635805130004883
    10. ' =' → logprob: -9.635805130004883

Token 42: ' int' (ID: 677)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4538480341434479
    2. ' ' → logprob: -1.5788480043411255
    3. 'int' → logprob: -2.828848123550415
    4. ' int' → logprob: -3.453848123550415
    5. '3' → logprob: -3.703848123550415
    6. '5' → logprob: -4.328847885131836
    7. '10' → logprob: -4.578847885131836
    8. '1' → logprob: -5.078847885131836
    9. '42' → logprob: -5.203847885131836
    10. 'get' → logprob: -6.328847885131836

Token 43: '(get' (ID: 7119)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6445350050926208
    2. '(get' → logprob: -0.7695350050926208
    3. '()' → logprob: -5.269535064697266
    4. '(input' → logprob: -5.769535064697266
    5. '('' → logprob: -5.894535064697266
    6. '(sys' → logprob: -9.269535064697266
    7. '(
' → logprob: -9.269535064697266
    8. 'get' → logprob: -9.394535064697266
    9. '("("' → logprob: -9.394535064697266
    10. '(open' → logprob: -9.644535064697266

Token 44: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02274242229759693
    2. '()' → logprob: -4.02274227142334
    3. '()))' → logprob: -5.39774227142334
    4. ' ())' → logprob: -10.77274227142334
    5. '())
' → logprob: -11.02274227142334
    6. ')' → logprob: -11.77274227142334
    7. '()
' → logprob: -13.14774227142334
    8. '();)' → logprob: -13.14774227142334
    9. '()`' → logprob: -14.02274227142334
    10. '())

' → logprob: -14.02274227142334

Token 45: 'we' (ID: 854)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06670006364583969
    2. '(' → logprob: -3.191699981689453
    3. '()
' → logprob: -4.191699981689453
    4. '()\' → logprob: -5.816699981689453
    5. 'for' → logprob: -6.441699981689453
    6. '\n' → logprob: -6.691699981689453
    7. '<|end|>' → logprob: -7.816699981689453
    8. '(
' → logprob: -7.941699981689453
    9. '
' → logprob: -8.316699981689453
    10. '\' → logprob: -8.441699981689453

Token 46: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -0.00020497082732617855
    2. '.' → logprob: -8.875205039978027
    3. 'irds' → logprob: -11.125205039978027
    4. 'ard' → logprob: -11.625205039978027
    5. '.n' → logprob: -11.875205039978027
    6. '.w' → logprob: -12.625205039978027
    7. 'ierd' → logprob: -12.625205039978027
    8. 'irdi' → logprob: -12.750205039978027
    9. ' ' → logprob: -13.000205039978027
    10. 'd' → logprob: -13.250205039978027

Token 47: '.ws' (ID: 36966)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0029840022325515747
    2. '<|end|>' → logprob: -6.502984046936035
    3. '.n' → logprob: -6.627984046936035
    4. '.
' → logprob: -9.627984046936035
    5. '<|end|>' → logprob: -9.752984046936035
    6. ' .' → logprob: -11.877984046936035
    7. '.\' → logprob: -12.002984046936035
    8. '.

' → logprob: -12.502984046936035
    9. '.<' → logprob: -12.752984046936035
    10. '.nl' → logprob: -12.877984046936035

Token 48: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.32116878032684326
    2. ' =' → logprob: -2.321168899536133
    3. 's' → logprob: -2.571168899536133
    4. '=' → logprob: -3.696168899536133
    5. '.append' → logprob: -4.321168899536133
    6. '_' → logprob: -4.446168899536133
    7. '[' → logprob: -5.321168899536133
    8. '_list' → logprob: -5.696168899536133
    9. '[]' → logprob: -5.821168899536133
    10. '[:]' → logprob: -5.946168899536133

Token 49: ' to' (ID: 316)
  Prédit: '[get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[get' → logprob: -0.05417483672499657
    2. '[' → logprob: -3.5541749000549316
    3. ' [' → logprob: -4.554174900054932
    4. '[to' → logprob: -4.679174900054932
    5. '[list' → logprob: -6.429174900054932
    6. '[]' → logprob: -6.804174900054932
    7. 'get' → logprob: -7.679174900054932
    8. '[str' → logprob: -7.929174900054932
    9. '[int' → logprob: -8.429174423217773
    10. '[input' → logprob: -8.554174423217773

Token 50: '_int' (ID: 12285)
  Prédit: 'ints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.3189813494682312
    2. '_int' → logprob: -1.318981409072876
    3. 'int' → logprob: -6.193981170654297
    4. 'Ints' → logprob: -6.318981170654297
    5. '(get' → logprob: -7.568981170654297
    6. 'nts' → logprob: -7.693981170654297
    7. 's' → logprob: -7.693981170654297
    8. 'ts' → logprob: -8.818981170654297
    9. 't' → logprob: -9.818981170654297
    10. '_in' → logprob: -9.943981170654297

Token 51: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.512236498361744e-07
    2. '(s' → logprob: -15.125000953674316
    3. 'ints' → logprob: -16.125
    4. 'ss' → logprob: -17.5
    5. ' s' → logprob: -18.125
    6. 'es' → logprob: -18.25
    7. '   ' → logprob: -18.875
    8. '(get' → logprob: -19.125
    9. 'int' → logprob: -19.375
    10. 'get' → logprob: -19.625

Token 52: '(get' (ID: 7119)
  Prédit: '(get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.0003124632057733834
    2. '(input' → logprob: -8.250312805175781
    3. '(' → logprob: -10.125312805175781
    4. ' (' → logprob: -11.625312805175781
    5. '(sys' → logprob: -13.875312805175781
    6. '((' → logprob: -14.625312805175781
    7. 'get' → logprob: -15.750312805175781
    8. '(
' → logprob: -15.875312805175781
    9. '(next' → logprob: -15.875312805175781
    10. '```' → logprob: -16.50031280517578

Token 53: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005325073841959238
    2. '()' → logprob: -5.255324840545654
    3. '()))' → logprob: -10.130325317382812
    4. ')' → logprob: -10.380325317382812
    5. '())
' → logprob: -11.505325317382812
    6. ' ())' → logprob: -12.005325317382812
    7. '();)' → logprob: -13.505325317382812
    8. '())

' → logprob: -14.380325317382812
    9. '());' → logprob: -14.505325317382812
    10. '(' → logprob: -14.880325317382812

Token 54: 'we' (ID: 854)
  Prédit: 'we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.7105045914649963
    2. '()' → logprob: -1.7105045318603516
    3. '\n' → logprob: -2.0855045318603516
    4. '\' → logprob: -2.9605045318603516
    5. '<|end|>' → logprob: -3.4605045318603516
    6. 'for' → logprob: -3.5855045318603516
    7. '()
' → logprob: -4.460504531860352
    8. '
' → logprob: -4.460504531860352
    9. '[' → logprob: -4.585504531860352
    10. 'w' → logprob: -4.710504531860352

Token 55: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -0.00012725738633889705
    2. 'irds' → logprob: -10.000126838684082
    3. 'rd' → logprob: -10.625126838684082
    4. '.' → logprob: -10.750126838684082
    5. 'ard' → logprob: -11.750126838684082
    6. 'urd' → logprob: -12.125126838684082
    7. 'ir' → logprob: -12.375126838684082
    8. 'w' → logprob: -13.000126838684082
    9. 'erd' → logprob: -13.125126838684082
    10. ' ' → logprob: -13.125126838684082

Token 56: '.total' (ID: 23374)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3619970679283142
    2. '.' → logprob: -1.736997127532959
    3. '<|end|>' → logprob: -2.111997127532959
    4. '\' → logprob: -6.736997127532959
    5. '```' → logprob: -6.736997127532959
    6. '()
' → logprob: -6.861997127532959
    7. '<|end|>' → logprob: -7.361997127532959
    8. '().' → logprob: -7.736997127532959
    9. '#' → logprob: -7.736997127532959
    10. ')' → logprob: -7.861997127532959

Token 57: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2759612798690796
    2. '_' → logprob: -1.4009612798690796
    3. '<|end|>' → logprob: -1.9009612798690796
    4. ' =' → logprob: -2.150961399078369
    5. '.' → logprob: -2.400961399078369
    6. '(' → logprob: -2.400961399078369
    7. '()' → logprob: -4.525961399078369
    8. ')' → logprob: -5.400961399078369
    9. ' ' → logprob: -5.400961399078369
    10. '+' → logprob: -6.275961399078369

Token 58: ' ' (ID: 220)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.022225942462682724
    2. 'sum' → logprob: -4.022225856781006
    3. ' weird' → logprob: -6.272225856781006
    4. ' ' → logprob: -6.772225856781006
    5. '0' → logprob: -7.147225856781006
    6. ' we' → logprob: -9.272226333618164
    7. 'we' → logprob: -9.397226333618164
    8. ' max' → logprob: -11.272226333618164
    9. '(sum' → logprob: -11.272226333618164
    10. ' len' → logprob: -11.397226333618164

Token 59: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.016245387494564056
    2. ' sum' → logprob: -4.266245365142822
    3. '0' → logprob: -6.266245365142822
    4. 'we' → logprob: -9.14124584197998
    5. ' ' → logprob: -10.76624584197998
    6. 'len' → logprob: -11.14124584197998
    7. 'max' → logprob: -11.76624584197998
    8. '(sum' → logprob: -11.76624584197998
    9. '   ' → logprob: -12.39124584197998
    10. '  ' → logprob: -12.39124584197998

Token 60: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12376251071691513
    2. '<|end|>' → logprob: -3.123762607574463
    3. '
' → logprob: -3.248762607574463
    4. ' for' → logprob: -3.623762607574463
    5. '\n' → logprob: -5.248762607574463
    6. '<|end|>' → logprob: -7.248762607574463
    7. ' 
' → logprob: -8.498762130737305
    8. '\' → logprob: -8.748762130737305
    9. 'newline' → logprob: -8.998762130737305
    10. '```' → logprob: -9.248762130737305

Token 61: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009408598765730858
    2. '<|end|>' → logprob: -5.509408473968506
    3. ' for' → logprob: -6.259408473968506
    4. '
' → logprob: -6.509408473968506
    5. '\n' → logprob: -6.634408473968506
    6. 'i' → logprob: -9.009408950805664
    7. '\' → logprob: -9.384408950805664
    8. '```' → logprob: -9.634408950805664
    9. 'w' → logprob: -9.759408950805664
    10. ' 
' → logprob: -10.009408950805664

Token 62: ' w' (ID: 286)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09793270379304886
    2. ' weird' → logprob: -3.347932815551758
    3. ' _' → logprob: -3.472932815551758
    4. ' ' → logprob: -4.097932815551758
    5. '_' → logprob: -4.847932815551758
    6. 'i' → logprob: -6.847932815551758
    7. '  ' → logprob: -7.222932815551758
    8. ' w' → logprob: -7.597932815551758
    9. '_i' → logprob: -9.472932815551758
    10. ' ' → logprob: -9.597932815551758

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011805851245298982
    2. 'in' → logprob: -7.501180648803711
    3. ' ' → logprob: -7.876180648803711
    4. 'e' → logprob: -8.751180648803711
    5. '_' → logprob: -9.876180648803711
    6. 'i' → logprob: -11.126180648803711
    7. 'ei' → logprob: -11.876180648803711
    8. '   ' → logprob: -12.751180648803711
    9. 'w' → logprob: -13.126180648803711
    10. '  ' → logprob: -13.126180648803711

Token 64: ' weird' (ID: 28783)
  Prédit: ' weird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weird' → logprob: -0.17998264729976654
    2. 'we' → logprob: -1.8049826622009277
    3. ' ' → logprob: -9.30498218536377
    4. ' we' → logprob: -10.05498218536377
    5. ' range' → logprob: -10.42998218536377
    6. '  ' → logprob: -10.55498218536377
    7. ' strange' → logprob: -11.42998218536377
    8. '   ' → logprob: -12.17998218536377
    9. 'range' → logprob: -12.30498218536377
    10. ' ' → logprob: -12.30498218536377

Token 65: '.ws' (ID: 36966)
  Prédit: '.ws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ws' → logprob: -0.001942918635904789
    2. '.' → logprob: -7.001943111419678
    3. ' .' → logprob: -7.751943111419678
    4. '.s' → logprob: -8.12694263458252
    5. 'ws' → logprob: -9.50194263458252
    6. ' ' → logprob: -10.00194263458252
    7. '	ws' → logprob: -10.25194263458252
    8. '.w' → logprob: -10.62694263458252
    9. '```' → logprob: -11.12694263458252
    10. '.ss' → logprob: -11.62694263458252

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004230475169606507
    2. ' :' → logprob: -8.000423431396484
    3. ':
' → logprob: -9.375423431396484
    4. ':**' → logprob: -14.750423431396484
    5. '.' → logprob: -15.000423431396484
    6. ',' → logprob: -15.000423431396484
    7. ':

' → logprob: -15.375423431396484
    8. '+:' → logprob: -15.375423431396484
    9. ' :
' → logprob: -15.500423431396484
    10. '=' → logprob: -15.500423431396484

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00646086735650897
    2. ' weird' → logprob: -5.631460666656494
    3. '    ' → logprob: -7.006460666656494
    4. ' if' → logprob: -7.381460666656494
    5. 'we' → logprob: -8.131461143493652
    6. '    
' → logprob: -8.256461143493652
    7. ' ' → logprob: -8.631461143493652
    8. '<|end|>' → logprob: -9.131461143493652
    9. ' 
' → logprob: -9.506461143493652
    10. '```' → logprob: -9.631461143493652

Token 68: ' weird' (ID: 28783)
  Prédit: ' weird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weird' → logprob: -0.3160415589809418
    2. 'we' → logprob: -1.8160415887832642
    3. ' if' → logprob: -2.4410414695739746
    4. '   ' → logprob: -4.316041469573975
    5. ' we' → logprob: -5.691041469573975
    6. 'if' → logprob: -6.191041469573975
    7. '    ' → logprob: -6.441041469573975
    8. ' wier' → logprob: -9.191041946411133
    9. '    
' → logprob: -9.316041946411133
    10. ' strange' → logprob: -9.316041946411133

Token 69: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.0068469117395579815
    2. '.' → logprob: -5.006846904754639
    3. 'total' → logprob: -10.006847381591797
    4. '.n' → logprob: -11.756847381591797
    5. ' .' → logprob: -11.881847381591797
    6. '```' → logprob: -11.881847381591797
    7. '..' → logprob: -12.006847381591797
    8. '.period' → logprob: -12.131847381591797
    9. '.token' → logprob: -12.131847381591797
    10. '<|end|>' → logprob: -12.381847381591797

Token 70: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3136333227157593
    2. ' +=' → logprob: -1.3136333227157593
    3. '+' → logprob: -7.938633441925049
    4. ' ' → logprob: -12.81363296508789
    5. '+=(' → logprob: -12.93863296508789
    6. '+='' → logprob: -13.06363296508789
    7. '+="' → logprob: -13.43863296508789
    8. ' +' → logprob: -13.56363296508789
    9. '<|end|>' → logprob: -13.68863296508789
    10. '=' → logprob: -14.06363296508789

Token 71: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.04860293120145798
    2. ' w' → logprob: -3.048602819442749
    3. ' ' → logprob: -11.548603057861328
    4. '   ' → logprob: -12.923603057861328
    5. '1' → logprob: -13.798603057861328
    6. '  ' → logprob: -14.673603057861328
    7. 'int' → logprob: -15.111103057861328
    8. '    ' → logprob: -15.298603057861328
    9. ' ' → logprob: -15.423603057861328
    10. 'we' → logprob: -15.798603057861328

Token 72: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: 'we' (ID: 854)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0851259231567383
    2. '#' → logprob: -1.9601259231567383
    3. '<|end|>' → logprob: -2.2101259231567383
    4. '.' → logprob: -2.5851259231567383
    5. 'if' → logprob: -2.7101259231567383
    6. '+' → logprob: -2.7101259231567383
    7. ' ' → logprob: -3.5851259231567383
    8. 'w' → logprob: -3.5851259231567383
    9. '*' → logprob: -3.5851259231567383
    10. '\n' → logprob: -3.8351259231567383

Token 74: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -0.0003528622619342059
    2. '.' → logprob: -8.37535285949707
    3. 'irds' → logprob: -9.62535285949707
    4. 'rd' → logprob: -10.50035285949707
    5. 'ir' → logprob: -11.87535285949707
    6. '.rd' → logprob: -12.37535285949707
    7. 'ard' → logprob: -13.00035285949707
    8. '.w' → logprob: -13.25035285949707
    9. '.ir' → logprob: -13.25035285949707
    10. 'ierd' → logprob: -13.37535285949707

Token 75: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.35221269726753235
    2. '<|end|>' → logprob: -1.22721266746521
    3. '<|end|>' → logprob: -6.477212905883789
    4. '
' → logprob: -6.477212905883789
    5. '#' → logprob: -8.352212905883789
    6. '```' → logprob: -9.102212905883789
    7. '.
' → logprob: -9.602212905883789
    8. '\n' → logprob: -9.977212905883789
    9. ' ' → logprob: -10.477212905883789
    10. ')' → logprob: -10.852212905883789

Token 76: 'ans' (ID: 616)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.005192370619624853
    2. 'n' → logprob: -5.505192279815674
    3. 'ws' → logprob: -7.130192279815674
    4. 'average' → logprob: -9.380192756652832
    5. 'print' → logprob: -9.630192756652832
    6. 's' → logprob: -10.005192756652832
    7. ' total' → logprob: -11.380192756652832
    8. 'sum' → logprob: -11.380192756652832
    9. 'ns' → logprob: -11.630192756652832
    10. 'result' → logprob: -11.755192756652832

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015930546447634697
    2. '=' → logprob: -4.265930652618408
    3. ' ' → logprob: -6.515930652618408
    4. '<|end|>' → logprob: -9.39093017578125
    5. '.' → logprob: -9.64093017578125
    6. '_' → logprob: -9.89093017578125
    7. '  ' → logprob: -10.26593017578125
    8. ' +=' → logprob: -11.39093017578125
    9. 's' → logprob: -11.64093017578125
    10. ' ==' → logprob: -12.89093017578125

Token 78: ' float' (ID: 4428)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.44872891902923584
    2. ' weird' → logprob: -1.9487289190292358
    3. ' max' → logprob: -2.6987290382385254
    4. '0' → logprob: -2.9487290382385254
    5. 'max' → logprob: -3.8237290382385254
    6. ' we' → logprob: -4.073729038238525
    7. ' ' → logprob: -4.573729038238525
    8. ''' → logprob: -5.198729038238525
    9. 'float' → logprob: -5.448729038238525
    10. ' float' → logprob: -5.573729038238525

Token 79: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.01681898720562458
    2. '('-' → logprob: -4.141819000244141
    3. '("' → logprob: -8.51681900024414
    4. ''' → logprob: -8.76681900024414
    5. '(' → logprob: -8.89181900024414
    6. ''-' → logprob: -9.51681900024414
    7. '('+' → logprob: -9.89181900024414
    8. '("-' → logprob: -10.39181900024414
    9. 'inf' → logprob: -11.01681900024414
    10. ''s' → logprob: -11.01681900024414

Token 80: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.00031580092036165297
    2. '-inf' → logprob: -8.37531566619873
    3. 'Inf' → logprob: -10.50031566619873
    4. 'INF' → logprob: -10.87531566619873
    5. ''' → logprob: -11.37531566619873
    6. '-' → logprob: -11.62531566619873
    7. ' inf' → logprob: -12.37531566619873
    8. '_inf' → logprob: -13.12531566619873
    9. '-i' → logprob: -13.25031566619873
    10. '.inf' → logprob: -13.25031566619873

Token 81: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25280147790908813
    2. '')' → logprob: -1.5028014183044434
    3. ' )' → logprob: -7.127801418304443
    4. ')
' → logprob: -10.752801895141602
    5. ' ')' → logprob: -10.877801895141602
    6. '')
' → logprob: -10.877801895141602
    7. ')'' → logprob: -12.127801895141602
    8. '")' → logprob: -13.627801895141602
    9. ''' → logprob: -13.752801895141602
    10. ' )
' → logprob: -15.502801895141602

Token 82: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3032805621623993
    2. ' for' → logprob: -1.6782805919647217
    3. '
' → logprob: -2.8032805919647217
    4. '<|end|>' → logprob: -4.553280353546143
    5. ' 
' → logprob: -5.928280353546143
    6. '\n' → logprob: -7.678280353546143
    7. '  
' → logprob: -8.8032808303833
    8. '<|end|>' → logprob: -9.0532808303833
    9. ' ' → logprob: -9.4282808303833
    10. '```' → logprob: -9.4282808303833

Token 83: ' idx' (ID: 14016)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.05607748404145241
    2. 'w' → logprob: -2.931077480316162
    3. '_' → logprob: -7.431077480316162
    4. ' i' → logprob: -8.05607795715332
    5. ' ' → logprob: -9.43107795715332
    6. ' _' → logprob: -9.68107795715332
    7. '_w' → logprob: -9.80607795715332
    8. 'i' → logprob: -10.80607795715332
    9. ' weird' → logprob: -10.93107795715332
    10. ' ' → logprob: -12.05607795715332

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.49822041392326355
    2. ',' → logprob: -0.9982204437255859
    3. 'in' → logprob: -3.873220443725586
    4. ' ,' → logprob: -6.373220443725586
    5. ' ' → logprob: -6.623220443725586
    6. '  ' → logprob: -11.748220443725586
    7. ',in' → logprob: -12.498220443725586
    8. ',w' → logprob: -13.123220443725586
    9. '_,' → logprob: -13.248220443725586
    10. '   ' → logprob: -13.373220443725586

Token 85: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.693212628364563
    2. 'range' → logprob: -0.693212628364563
    3. '(range' → logprob: -10.693212509155273
    4. 'we' → logprob: -11.193212509155273
    5. '	range' → logprob: -11.193212509155273
    6. ' ' → logprob: -12.318212509155273
    7. ' xrange' → logprob: -12.818212509155273
    8. '   ' → logprob: -12.943212509155273
    9. ' weird' → logprob: -13.443212509155273
    10. '  ' → logprob: -13.568212509155273

Token 86: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006863374728709459
    2. '(len' → logprob: -5.006863594055176
    3. ' (' → logprob: -8.881863594055176
    4. 'we' → logprob: -13.131863594055176
    5. '((' → logprob: -13.881863594055176
    6. '(n' → logprob: -14.006863594055176
    7. '   ' → logprob: -14.006863594055176
    8. '```' → logprob: -14.756863594055176
    9. '(le' → logprob: -14.881863594055176
    10. '(w' → logprob: -15.006863594055176

Token 87: 'we' (ID: 854)
  Prédit: 'we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.0043421718291938305
    2. '1' → logprob: -6.254342079162598
    3. 'len' → logprob: -6.754342079162598
    4. '(' → logprob: -7.379342079162598
    5. ' weird' → logprob: -8.629342079162598
    6. '   ' → logprob: -8.754342079162598
    7. '2' → logprob: -9.129342079162598
    8. ' ' → logprob: -9.754342079162598
    9. ' we' → logprob: -10.379342079162598
    10. ' len' → logprob: -11.254342079162598

Token 88: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -0.0005166939808987081
    2. 'rd' → logprob: -7.625516891479492
    3. 'ir' → logprob: -11.500516891479492
    4. 'irds' → logprob: -11.750516891479492
    5. 'd' → logprob: -13.250516891479492
    6. 'idx' → logprob: -14.000516891479492
    7. 'nd' → logprob: -14.125516891479492
    8. 'ard' → logprob: -14.125516891479492
    9. '   ' → logprob: -14.375516891479492
    10. '.rd' → logprob: -14.500516891479492

Token 89: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0015024791937321424
    2. ' .' → logprob: -6.876502513885498
    3. '.' → logprob: -8.87650203704834
    4. '.ws' → logprob: -9.25150203704834
    5. ').' → logprob: -9.37650203704834
    6. '.ns' → logprob: -10.50150203704834
    7. ' ' → logprob: -10.75150203704834
    8. '.w' → logprob: -11.00150203704834
    9. '   ' → logprob: -11.12650203704834
    10. '.s' → logprob: -11.37650203704834

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08603322505950928
    2. '+' → logprob: -3.336033344268799
    3. '):
' → logprob: -3.836033344268799
    4. ' +' → logprob: -4.336033344268799
    5. '-' → logprob: -4.961033344268799
    6. ' -' → logprob: -5.461033344268799
    7. '   ' → logprob: -7.961033344268799
    8. ' ):' → logprob: -8.21103286743164
    9. '):
' → logprob: -8.46103286743164
    10. ')' → logprob: -9.83603286743164

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029728300869464874
    2. '<|end|>' → logprob: -6.252972602844238
    3. ' if' → logprob: -7.252972602844238
    4. ',' → logprob: -9.877972602844238
    5. '<|end|>' → logprob: -10.002972602844238
    6. ')' → logprob: -10.252972602844238
    7. '    
' → logprob: -10.252972602844238
    8. '```' → logprob: -10.877972602844238
    9. ' ind' → logprob: -11.252972602844238
    10. '   ' → logprob: -11.440472602844238

Token 92: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4253048300743103
    2. ' current' → logprob: -1.925304889678955
    3. ' left' → logprob: -2.550304889678955
    4. ' weird' → logprob: -2.800304889678955
    5. ' total' → logprob: -4.550304889678955
    6. 'we' → logprob: -4.675304889678955
    7. 'current' → logprob: -4.800304889678955
    8. 'left' → logprob: -4.925304889678955
    9. ' we' → logprob: -5.425304889678955
    10. ' sum' → logprob: -5.550304889678955

Token 93: ' idx' (ID: 14016)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -1.2065746784210205
    2. ' weird' → logprob: -1.3315746784210205
    3. 'abs' → logprob: -1.7065746784210205
    4. '   ' → logprob: -1.8315746784210205
    5. ' abs' → logprob: -2.4565746784210205
    6. 'w' → logprob: -5.456574440002441
    7. ' we' → logprob: -6.081574440002441
    8. ' ' → logprob: -7.081574440002441
    9. '  ' → logprob: -7.831574440002441
    10. ' w' → logprob: -7.956574440002441

Token 94: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5337252020835876
    2. ' <' → logprob: -2.0337252616882324
    3. '==' → logprob: -2.0337252616882324
    4. ' >' → logprob: -2.2837252616882324
    5. '>' → logprob: -4.158725261688232
    6. ' !=' → logprob: -4.533725261688232
    7. '+' → logprob: -5.158725261688232
    8. '<' → logprob: -5.658725261688232
    9. ' ' → logprob: -5.783725261688232
    10. '%' → logprob: -5.783725261688232

Token 95: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12765160202980042
    2. '0' → logprob: -2.1276516914367676
    3. ' weird' → logprob: -7.502651691436768
    4. 'we' → logprob: -9.37765121459961
    5. '    ' → logprob: -10.94015121459961
    6. '  ' → logprob: -11.19015121459961
    7. '   ' → logprob: -11.44015121459961
    8. ' we' → logprob: -12.69015121459961
    9. ' len' → logprob: -12.75265121459961
    10. ' (' → logprob: -12.87765121459961

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016104405745863914
    2. 'we' → logprob: -4.266104221343994
    3. ' ' → logprob: -6.516104221343994
    4. '   ' → logprob: -7.891104221343994
    5. 'len' → logprob: -10.641104698181152
    6. '  ' → logprob: -11.391104698181152
    7. '       ' → logprob: -11.891104698181152
    8. ' we' → logprob: -12.078604698181152
    9. '    ' → logprob: -12.141104698181152
    10. '(' → logprob: -12.328604698181152

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6711931824684143
    2. ':
' → logprob: -0.7961931824684143
    3. ' or' → logprob: -3.2961931228637695
    4. '):
' → logprob: -8.04619312286377
    5. '   ' → logprob: -8.42119312286377
    6. '       ' → logprob: -8.92119312286377
    7. 'or' → logprob: -9.67119312286377
    8. '):' → logprob: -10.17119312286377
    9. ':
' → logprob: -11.29619312286377
    10. ' :
' → logprob: -11.42119312286377

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40905246138572693
    2. ':' → logprob: -1.4090524911880493
    3. ':
' → logprob: -3.2840523719787598
    4. '   ' → logprob: -3.5340523719787598
    5. ' or' → logprob: -4.15905237197876
    6. '<|end|>' → logprob: -5.15905237197876
    7. ' and' → logprob: -7.03405237197876
    8. '):
' → logprob: -7.53405237197876
    9. '<|end|>' → logprob: -7.78405237197876
    10. ',' → logprob: -8.159052848815918

Token 99: ' temp' (ID: 5484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9456046223640442
    2. 'we' → logprob: -1.8206045627593994
    3. '           ' → logprob: -2.3206045627593994
    4. 'continue' → logprob: -2.4456045627593994
    5. 'left' → logprob: -2.6956045627593994
    6. 'current' → logprob: -2.8206045627593994
    7. ' continue' → logprob: -3.6956045627593994
    8. '       ' → logprob: -3.8206045627593994
    9. 'diff' → logprob: -4.0706048011779785
    10. ' left' → logprob: -4.4456048011779785

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07911273837089539
    2. '=' → logprob: -2.5791127681732178
    3. '_sum' → logprob: -9.079113006591797
    4. '=sum' → logprob: -10.204113006591797
    5. 'sum' → logprob: -10.579113006591797
    6. '_val' → logprob: -11.829113006591797
    7. '_total' → logprob: -11.954113006591797
    8. '   ' → logprob: -12.204113006591797
    9. '_diff' → logprob: -12.329113006591797
    10. 'total' → logprob: -12.579113006591797

Token 101: ' []
' (ID: 8911)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.07915734499692917
    2. 'abs' → logprob: -2.9541573524475098
    3. ' weird' → logprob: -3.9541573524475098
    4. '   ' → logprob: -6.20415735244751
    5. 'sum' → logprob: -7.07915735244751
    6. ' abs' → logprob: -7.07915735244751
    7. '0' → logprob: -8.079156875610352
    8. '(' → logprob: -8.954156875610352
    9. '  ' → logprob: -9.204156875610352
    10. ' ' → logprob: -9.204156875610352

Token 102: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2956216633319855
    2. ' for' → logprob: -2.045621633529663
    3. '<|end|>' → logprob: -3.295621633529663
    4. ' +' → logprob: -3.670621633529663
    5. '+' → logprob: -4.420621871948242
    6. '           ' → logprob: -4.545621871948242
    7. 'for' → logprob: -4.545621871948242
    8. '.append' → logprob: -4.670621871948242
    9. 'temp' → logprob: -5.545621871948242
    10. '   ' → logprob: -5.795621871948242

Token 103: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.500496506690979
    2. ' else' → logprob: -1.000496506690979
    3. 'else' (adapté à ' else') → logprob: -4.6254963874816895
    4. '       ' → logprob: -4.7504963874816895
    5. ' temp' → logprob: -5.7504963874816895
    6. 'temp' → logprob: -6.5004963874816895
    7. ' for' → logprob: -7.0004963874816895
    8. '    ' → logprob: -7.2504963874816895
    9. ' elif' → logprob: -7.5004963874816895
    10. ' ' → logprob: -8.750496864318848

Token 104: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29552561044692993
    2. ':' → logprob: -1.7955255508422852
    3. ':
' → logprob: -2.795525550842285
    4. '   ' → logprob: -3.670525550842285
    5. '    ' → logprob: -7.045525550842285
    6. ' temp' → logprob: -7.420525550842285
    7. 'temp' → logprob: -8.545525550842285
    8. ' :
' → logprob: -8.545525550842285
    9. ',' → logprob: -9.045525550842285
    10. '{' → logprob: -9.045525550842285

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025430217385292053
    2. ' temp' → logprob: -3.900430202484131
    3. 'temp' → logprob: -6.025430202484131
    4. '   ' → logprob: -6.150430202484131
    5. '    ' → logprob: -9.275430679321289
    6. ' for' → logprob: -9.650430679321289
    7. '           ' → logprob: -9.775430679321289
    8. '        ' → logprob: -11.025430679321289
    9. '	temp' → logprob: -11.275430679321289
    10. ' ' → logprob: -11.525430679321289

Token 106: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.3790561854839325
    2. ' temp' → logprob: -1.3790562152862549
    3. '       ' → logprob: -2.879056215286255
    4. '   ' → logprob: -5.004055976867676
    5. ' for' → logprob: -8.129055976867676
    6. ' ' → logprob: -8.629055976867676
    7. 'for' → logprob: -9.129055976867676
    8. '	temp' → logprob: -10.254055976867676
    9. '           ' → logprob: -10.504055976867676
    10. '  ' → logprob: -10.504055976867676

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32879674434661865
    2. '=' → logprob: -1.8287967443466187
    3. '.append' → logprob: -2.328796863555908
    4. '.extend' → logprob: -4.328796863555908
    5. ' +=' → logprob: -5.078796863555908
    6. '+=' → logprob: -6.453796863555908
    7. '.' → logprob: -6.953796863555908
    8. '.=' → logprob: -9.32879638671875
    9. ' .' → logprob: -10.20379638671875
    10. '+' → logprob: -10.20379638671875

Token 108: ' [' (ID: 723)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.12111072987318039
    2. ' weird' → logprob: -2.621110677719116
    3. 'temp' → logprob: -4.121110916137695
    4. '[' → logprob: -4.496110916137695
    5. '   ' → logprob: -5.246110916137695
    6. ' temp' → logprob: -5.746110916137695
    7. ' we' → logprob: -6.371110916137695
    8. ' [' → logprob: -7.121110916137695
    9. '       ' → logprob: -7.246110916137695
    10. '[temp' → logprob: -7.621110916137695

Token 109: 'we' (ID: 854)
  Prédit: 'we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.05722891911864281
    2. '*' → logprob: -3.8072288036346436
    3. 'w' → logprob: -4.182229042053223
    4. 'sum' → logprob: -5.307229042053223
    5. '   ' → logprob: -5.432229042053223
    6. 'idx' → logprob: -5.932229042053223
    7. '0' → logprob: -6.432229042053223
    8. 'x' → logprob: -7.182229042053223
    9. 'temp' → logprob: -7.307229042053223
    10. ']' → logprob: -7.932229042053223

Token 110: 'ird' (ID: 2716)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4213414192199707
    2. 'ird' → logprob: -1.2963414192199707
    3. 'w' → logprob: -3.0463414192199707
    4. '   ' → logprob: -5.796341419219971
    5. 'rd' → logprob: -5.921341419219971
    6. 'x' → logprob: -6.171341419219971
    7. '       ' → logprob: -6.546341419219971
    8. ' idx' → logprob: -6.796341419219971
    9. 'an' → logprob: -6.921341419219971
    10. 'ws' → logprob: -7.171341419219971

Token 111: '.ws' (ID: 36966)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2252129763364792
    2. '.total' → logprob: -2.100213050842285
    3. '.ws' → logprob: -2.600213050842285
    4. 'total' → logprob: -6.100213050842285
    5. 'ws' → logprob: -7.225213050842285
    6. '..' → logprob: -7.975213050842285
    7. ' ' → logprob: -8.100213050842285
    8. '.sum' → logprob: -8.100213050842285
    9. '.n' → logprob: -8.350213050842285
    10. '.w' → logprob: -9.350213050842285

Token 112: '[j' (ID: 7895)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.4466668665409088
    2. '[i' → logprob: -1.0716668367385864
    3. 'i' → logprob: -5.071666717529297
    4. 'idx' → logprob: -5.196666717529297
    5. '[j' → logprob: -5.571666717529297
    6. '[:' → logprob: -7.196666717529297
    7. '[' → logprob: -7.321666717529297
    8. 'j' → logprob: -8.321666717529297
    9. '   ' → logprob: -8.571666717529297
    10. ' idx' → logprob: -9.571666717529297

Token 113: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022684868425130844
    2. ' for' → logprob: -4.2726850509643555
    3. 'for' → logprob: -5.0226850509643555
    4. 'j' → logprob: -7.2726850509643555
    5. '-' → logprob: -7.7726850509643555
    6. 'x' → logprob: -8.522685050964355
    7. '   ' → logprob: -8.897685050964355
    8. ':j' → logprob: -9.147685050964355
    9. 'dx' → logprob: -9.272685050964355
    10. ' j' → logprob: -9.772685050964355

Token 114: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2024228274822235
    2. ' for' → logprob: -1.702422857284546
    3. '           ' → logprob: -7.827422618865967
    4. '   ' → logprob: -8.327423095703125
    5. 'j' → logprob: -9.327423095703125
    6. '       ' → logprob: -9.577423095703125
    7. '          ' → logprob: -10.202423095703125
    8. '+' → logprob: -10.702423095703125
    9. '	for' → logprob: -10.827423095703125
    10. ' j' → logprob: -10.827423095703125

Token 115: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16953995823860168
    2. 'range' → logprob: -1.9195399284362793
    3. ' j' → logprob: -4.794539928436279
    4. 'j' → logprob: -6.919539928436279
    5. ' in' → logprob: -12.544540405273438
    6. ' ' → logprob: -13.169540405273438
    7. '   ' → logprob: -13.794540405273438
    8. '  ' → logprob: -14.419540405273438
    9. 'Range' → logprob: -14.669540405273438
    10. ' xrange' → logprob: -14.669540405273438

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008698835968971252
    2. 'in' → logprob: -4.7586989402771
    3. 'range' → logprob: -10.008698463439941
    4. 'j' → logprob: -10.633698463439941
    5. ' ' → logprob: -12.258698463439941
    6. ' j' → logprob: -12.383698463439941
    7. ' range' → logprob: -13.383698463439941
    8. '   ' → logprob: -13.633698463439941
    9. 'import' → logprob: -14.133698463439941
    10. '  ' → logprob: -14.258698463439941

Token 117: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004309076175559312
    2. ' range' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.250431060791016
    4. '(range' → logprob: -17.500431060791016
    5. ' ' → logprob: -17.750431060791016
    6. '	range' → logprob: -18.125431060791016
    7. '  ' → logprob: -18.250431060791016
    8. '    ' → logprob: -20.125431060791016
    9. 'ran' → logprob: -20.375431060791016
    10. '       ' → logprob: -21.000431060791016

Token 118: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.004262296482920647
    2. '(' → logprob: -5.504262447357178
    3. 'idx' → logprob: -8.62926197052002
    4. '0' → logprob: -12.62926197052002
    5. ' idx' → logprob: -14.25426197052002
    6. '(len' → logprob: -15.37926197052002
    7. ' (' → logprob: -15.75426197052002
    8. '((' → logprob: -16.254262924194336
    9. '	idx' → logprob: -16.254262924194336
    10. '[idx' → logprob: -16.504262924194336

Token 119: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0030820483807474375
    2. ')' → logprob: -6.503082275390625
    3. ' )' → logprob: -7.128082275390625
    4. '-' → logprob: -7.503082275390625
    5. ')]
' → logprob: -8.628082275390625
    6. ')])' → logprob: -11.128082275390625
    7. ' -' → logprob: -11.878082275390625
    8. ')]

' → logprob: -12.378082275390625
    9. '   ' → logprob: -12.878082275390625
    10. '+' → logprob: -12.878082275390625

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021621601190418005
    2. '<|end|>' → logprob: -7.127161979675293
    3. '
' → logprob: -7.877161979675293
    4. 'for' → logprob: -8.377161979675293
    5. 'sum' → logprob: -8.752161979675293
    6. 'temp' → logprob: -9.002161979675293
    7. ' for' → logprob: -9.252161979675293
    8. '       ' → logprob: -9.627161979675293
    9. '    
' → logprob: -10.002161979675293
    10. 'if' → logprob: -10.252161979675293

Token 121: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19985876977443695
    2. 'sum' → logprob: -2.5748586654663086
    3. 'rest' → logprob: -3.6998586654663086
    4. 'if' → logprob: -4.074858665466309
    5. 'temp' → logprob: -4.324858665466309
    6. ' if' → logprob: -4.574858665466309
    7. ' sum' → logprob: -5.699858665466309
    8. 'for' → logprob: -5.699858665466309
    9. ' for' → logprob: -5.699858665466309
    10. 'left' → logprob: -5.824858665466309

Token 122: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.059336382895708084
    2. ' =' → logprob: -2.9343364238739014
    3. '_temp' → logprob: -6.184336185455322
    4. 'temp' → logprob: -6.309336185455322
    5. '=' → logprob: -9.68433666229248
    6. 'ub' → logprob: -9.80933666229248
    7. '_um' → logprob: -9.80933666229248
    8. 'sum' → logprob: -10.05933666229248
    9. '_' → logprob: -10.18433666229248
    10. '_sum' → logprob: -10.43433666229248

Token 123: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.06496422737836838
    2. ' sum' → logprob: -2.8149642944335938
    3. 'we' → logprob: -5.939964294433594
    4. 'float' → logprob: -8.939964294433594
    5. '0' → logprob: -9.689964294433594
    6. '(sum' → logprob: -10.064964294433594
    7. ' we' → logprob: -10.939964294433594
    8. ' float' → logprob: -11.064964294433594
    9. ' weird' → logprob: -11.064964294433594
    10. '   ' → logprob: -11.064964294433594

Token 124: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.006244446150958538
    2. 'we' → logprob: -5.131244659423828
    3. 'float' → logprob: -8.756244659423828
    4. '(sum' → logprob: -9.881244659423828
    5. ' sum' → logprob: -10.506244659423828
    6. 'temp' → logprob: -10.756244659423828
    7. 'abs' → logprob: -11.131244659423828
    8. '0' → logprob: -11.506244659423828
    9. 'max' → logprob: -11.756244659423828
    10. '(' → logprob: -12.256244659423828

Token 125: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9259728193283081
    2. 'for' → logprob: -1.300972819328308
    3. '<|end|>' → logprob: -1.800972819328308
    4. '   ' → logprob: -1.925972819328308
    5. ' ' → logprob: -4.425972938537598
    6. ' s' → logprob: -6.300972938537598
    7. 's' → logprob: -6.300972938537598
    8. '    ' → logprob: -7.175972938537598
    9. '<|end|>' → logprob: -7.300972938537598
    10. ' 
' → logprob: -7.300972938537598

Token 127: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007855626754462719
    2. ' for' → logprob: -5.132855415344238
    3. '   ' → logprob: -6.257855415344238
    4. 's' → logprob: -11.882855415344238
    5. '	for' → logprob: -13.757855415344238
    6. ' ' → logprob: -14.757855415344238
    7. '  ' → logprob: -14.882855415344238
    8. '    ' → logprob: -15.007855415344238
    9. ' s' → logprob: -15.632855415344238
    10. '
' → logprob: -15.882855415344238

Token 128: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6671474575996399
    2. 'w' → logprob: -2.042147397994995
    3. 'val' → logprob: -2.667147397994995
    4. 'num' → logprob: -2.667147397994995
    5. 'k' → logprob: -2.792147397994995
    6. 'v' → logprob: -2.792147397994995
    7. 'i' → logprob: -3.042147397994995
    8. 't' → logprob: -4.542147636413574
    9. 'j' → logprob: -4.542147636413574
    10. 'elem' → logprob: -5.292147636413574

Token 129: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25202831625938416
    2. 'in' → logprob: -1.5020283460617065
    3. '   ' → logprob: -10.127028465270996
    4. ' ' → logprob: -10.877028465270996
    5. 'x' → logprob: -11.502028465270996
    6. '_in' → logprob: -11.752028465270996
    7. '  ' → logprob: -12.127028465270996
    8. '	in' → logprob: -12.502028465270996
    9. 's' → logprob: -13.127028465270996
    10. 'n' → logprob: -13.127028465270996

Token 130: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.02063169702887535
    2. ' temp' → logprob: -3.895631790161133
    3. 'range' → logprob: -9.770631790161133
    4. ' range' → logprob: -11.520631790161133
    5. 'we' → logprob: -12.395631790161133
    6. '	temp' → logprob: -12.645631790161133
    7. '[temp' → logprob: -13.020631790161133
    8. 'tmp' → logprob: -13.020631790161133
    9. '(temp' → logprob: -13.145631790161133
    10. '   ' → logprob: -13.270631790161133

Token 131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.235300675034523
    2. ':
' → logprob: -1.6103006601333618
    3. '       ' → logprob: -5.235300540924072
    4. ' +=' → logprob: -6.485300540924072
    5. '+=' → logprob: -6.610300540924072
    6. '   ' → logprob: -7.110300540924072
    7. '+' → logprob: -7.610300540924072
    8. 's' → logprob: -9.61030101776123
    9. '):
' → logprob: -9.73530101776123
    10. '=' → logprob: -10.11030101776123

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021649116650223732
    2. ' s' → logprob: -4.14664888381958
    3. 's' → logprob: -5.52164888381958
    4. '   ' → logprob: -6.52164888381958
    5. '
' → logprob: -9.896649360656738
    6. '        
' → logprob: -11.021649360656738
    7. '<|end|>' → logprob: -11.396649360656738
    8. ',' → logprob: -11.771649360656738
    9. '    ' → logprob: -11.896649360656738
    10. '     ' → logprob: -12.146649360656738

Token 133: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.14809857308864594
    2. 's' (adapté à ' s') → logprob: -2.1480984687805176
    3. '       ' → logprob: -4.148098468780518
    4. '   ' → logprob: -5.273098468780518
    5. '           ' → logprob: -12.023098945617676
    6. '    ' → logprob: -12.398098945617676
    7. ' ' → logprob: -12.648098945617676
    8. 'x' → logprob: -12.648098945617676
    9. '  ' → logprob: -13.273098945617676
    10. '+' → logprob: -13.648098945617676

Token 134: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5760107636451721
    2. ' +=' → logprob: -0.8260107636451721
    3. '+' → logprob: -9.826010704040527
    4. '=' → logprob: -11.951010704040527
    5. ' +' → logprob: -12.951010704040527
    6. ' =' → logprob: -13.326010704040527
    7. '   ' → logprob: -13.451010704040527
    8. '+=(' → logprob: -13.576010704040527
    9. ']+=' → logprob: -13.826010704040527
    10. '    ' → logprob: -13.951010704040527

Token 135: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0013526180991902947
    2. ' x' → logprob: -6.626352787017822
    3. 'abs' → logprob: -11.126352310180664
    4. 'float' → logprob: -13.001352310180664
    5. 's' → logprob: -13.126352310180664
    6. '   ' → logprob: -13.251352310180664
    7. 'int' → logprob: -14.001352310180664
    8. '(x' → logprob: -14.126352310180664
    9. '2' → logprob: -14.126352310180664
    10. '(' → logprob: -14.501352310180664

Token 136: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07370880991220474
    2. '<|end|>' → logprob: -3.4487087726593018
    3. ' if' → logprob: -3.6987087726593018
    4. '
' → logprob: -4.823709011077881
    5. '+' → logprob: -6.198709011077881
    6. '    
' → logprob: -7.073709011077881
    7. '  ' → logprob: -7.323709011077881
    8. '    ' → logprob: -7.448709011077881
    9. ' +' → logprob: -7.573709011077881
    10. 'if' → logprob: -7.698709011077881

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26649776101112366
    2. ' if' → logprob: -1.5164977312088013
    3. '<|end|>' → logprob: -5.141497611999512
    4. 'if' → logprob: -6.266497611999512
    5. '    
' → logprob: -6.516497611999512
    6. '
' → logprob: -7.016497611999512
    7. '+' → logprob: -7.141497611999512
    8. ' rest' → logprob: -7.766497611999512
    9. ' s' → logprob: -7.891497611999512
    10. '  ' → logprob: -8.516497611999512

Token 138: ' candidate' (ID: 17098)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.9155839681625366
    2. 'if' → logprob: -1.6655839681625366
    3. 'diff' → logprob: -1.9155839681625366
    4. 'rem' → logprob: -2.415584087371826
    5. 'rest' → logprob: -2.540584087371826
    6. 'remain' → logprob: -3.415584087371826
    7. '   ' → logprob: -4.040584087371826
    8. 'remaining' → logprob: -4.790584087371826
    9. 're' → logprob: -5.040584087371826
    10. 'left' → logprob: -5.415584087371826

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031790214125066996
    2. '=' → logprob: -5.75317907333374
    3. 's' → logprob: -14.753178596496582
    4. '_' → logprob: -14.878178596496582
    5. ' ' → logprob: -15.503178596496582
    6. ' ' → logprob: -15.628178596496582
    7. ')' → logprob: -17.2531795501709
    8. ' =
' → logprob: -17.3781795501709
    9. ' +=' → logprob: -17.5031795501709
    10. ',' → logprob: -17.6281795501709

Token 140: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.007882003672420979
    2. 'max' → logprob: -5.757882118225098
    3. ' abs' → logprob: -5.882882118225098
    4. 'min' → logprob: -6.632882118225098
    5. '   ' → logprob: -7.882882118225098
    6. 'we' → logprob: -8.632882118225098
    7. ' max' → logprob: -11.007882118225098
    8. ' min' → logprob: -12.132882118225098
    9. '(abs' → logprob: -12.132882118225098
    10. '2' → logprob: -13.007882118225098

Token 141: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06844625622034073
    2. '(s' → logprob: -2.818446159362793
    3. '((' → logprob: -5.318446159362793
    4. 'we' → logprob: -6.818446159362793
    5. 's' → logprob: -7.943446159362793
    6. '(w' → logprob: -9.443446159362793
    7. '   ' → logprob: -11.818446159362793
    8. '(((' → logprob: -13.193446159362793
    9. ' (' → logprob: -13.318446159362793
    10. 'We' → logprob: -13.568446159362793

Token 142: 'we' (ID: 854)
  Prédit: 'we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.03879253938794136
    2. 's' → logprob: -3.663792610168457
    3. '(' → logprob: -4.663792610168457
    4. '(s' → logprob: -6.538792610168457
    5. '2' → logprob: -7.413792610168457
    6. 'candidate' → logprob: -7.538792610168457
    7. '   ' → logprob: -9.413792610168457
    8. 'w' → logprob: -9.663792610168457
    9. '(candidate' → logprob: -9.788792610168457
    10. '(w' → logprob: -10.663792610168457

Token 143: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -6.682846287731081e-05
    2. 'ir' → logprob: -10.500066757202148
    3. 'irds' → logprob: -11.750066757202148
    4. '.' → logprob: -12.000066757202148
    5. 'ierd' → logprob: -12.375066757202148
    6. 'urd' → logprob: -12.500066757202148
    7. 'ard' → logprob: -12.500066757202148
    8. 'rd' → logprob: -12.625066757202148
    9. 'erd' → logprob: -14.000066757202148
    10. 'w' → logprob: -14.125066757202148

Token 144: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -8.232493564719334e-05
    2. '.' → logprob: -9.625082015991211
    3. 'total' → logprob: -11.250082015991211
    4. '.n' → logprob: -14.000082015991211
    5. ').' → logprob: -15.125082015991211
    6. ' total' → logprob: -15.250082015991211
    7. '.s' → logprob: -15.750082015991211
    8. ' ' → logprob: -15.750082015991211
    9. '.sum' → logprob: -15.750082015991211
    10. '	total' → logprob: -15.875082015991211

Token 145: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20177097618579865
    2. '-' → logprob: -1.7017710208892822
    3. ' ' → logprob: -8.451770782470703
    4. '//' → logprob: -9.826770782470703
    5. '/' → logprob: -9.951770782470703
    6. ' //' → logprob: -10.451770782470703
    7. '2' → logprob: -12.076770782470703
    8. ' /' → logprob: -12.826770782470703
    9. ' ' → logprob: -13.451770782470703
    10. ')' → logprob: -14.576770782470703

Token 146: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003095719963312149
    2. ' ' → logprob: -5.878095626831055
    3. 's' → logprob: -8.503095626831055
    4. '(' → logprob: -10.378095626831055
    5. '   ' → logprob: -10.503095626831055
    6. ' s' → logprob: -11.253095626831055
    7. ' (' → logprob: -12.503095626831055
    8. '  ' → logprob: -13.128095626831055
    9. ')' → logprob: -13.503095626831055
    10. '       ' → logprob: -13.878095626831055

Token 147: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00193280098028481
    2. ' ' → logprob: -6.501932621002197
    3. 's' → logprob: -8.001933097839355
    4. '(' → logprob: -10.126933097839355
    5. '   ' → logprob: -10.126933097839355
    6. ' s' → logprob: -12.376933097839355
    7. '  ' → logprob: -13.126933097839355
    8. ' (' → logprob: -13.251933097839355
    9. '(s' → logprob: -13.751933097839355
    10. ')' → logprob: -14.001933097839355

Token 148: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0798284113407135
    2. '*s' → logprob: -2.9548285007476807
    3. '*' → logprob: -3.7048285007476807
    4. ' ' → logprob: -11.204828262329102
    5. '*w' → logprob: -12.329828262329102
    6. '   ' → logprob: -12.704828262329102
    7. 's' → logprob: -12.829828262329102
    8. '*(' → logprob: -13.454828262329102
    9. '*c' → logprob: -13.579828262329102
    10. ' ' → logprob: -13.704828262329102

Token 149: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02215692214667797
    2. '(s' → logprob: -4.647156715393066
    3. ' s' → logprob: -4.772156715393066
    4. ' (' → logprob: -5.772156715393066
    5. '(' → logprob: -7.272156715393066
    6. '   ' → logprob: -11.272156715393066
    7. '(w' → logprob: -11.647156715393066
    8. ' ' → logprob: -11.647156715393066
    9. '_s' → logprob: -13.022156715393066
    10. '(
' → logprob: -13.084656715393066

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013338132994249463
    2. ')
' → logprob: -6.626333713531494
    3. ' )' → logprob: -13.251334190368652
    4. ')`' → logprob: -13.751334190368652
    5. '))' → logprob: -13.876334190368652
    6. ')
' → logprob: -14.126334190368652
    7. ')**' → logprob: -14.376334190368652
    8. '<|end|>' → logprob: -14.751334190368652
    9. ')

' → logprob: -14.876334190368652
    10. '   ' → logprob: -14.876334190368652

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7008470296859741
    2. ' if' → logprob: -1.0758470296859741
    3. 'if' → logprob: -1.8258470296859741
    4. '
' → logprob: -6.825847148895264
    5. '    
' → logprob: -8.200846672058105
    6. '	if' → logprob: -9.450846672058105
    7. 'we' → logprob: -9.825846672058105
    8. ')' → logprob: -10.200846672058105
    9. ' ' → logprob: -10.450846672058105
    10. ' 
' → logprob: -10.450846672058105

Token 152: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.095760777592659
    2. '   ' → logprob: -2.9707608222961426
    3. ' if' → logprob: -3.2207608222961426
    4. '
' → logprob: -9.345760345458984
    5. '    
' → logprob: -11.220760345458984
    6. '	if' → logprob: -11.595760345458984
    7. '       ' → logprob: -12.470760345458984
    8. ')' → logprob: -12.595760345458984
    9. ' ' → logprob: -12.845760345458984
    10. '  ' → logprob: -13.220760345458984

Token 153: ' candidate' (ID: 17098)
  Prédit: ' candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidate' → logprob: -0.1602589637041092
    2. 'candidate' → logprob: -1.9102590084075928
    3. '(candidate' → logprob: -11.035259246826172
    4. 'Candidate' → logprob: -12.035259246826172
    5. ' weird' → logprob: -12.035259246826172
    6. ' candidat' → logprob: -12.660259246826172
    7. ' ' → logprob: -13.535259246826172
    8. '_candidate' → logprob: -14.410259246826172
    9. 'andidate' → logprob: -14.660259246826172
    10. 'we' → logprob: -14.660259246826172

Token 154: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04301038011908531
    2. '<' → logprob: -3.1680104732513428
    3. ' ' → logprob: -12.418010711669922
    4. ' <=' → logprob: -13.043010711669922
    5. '<|end|>' → logprob: -13.918010711669922
    6. '[' → logprob: -14.043010711669922
    7. '   ' → logprob: -14.418010711669922
    8. ')' → logprob: -14.543010711669922
    9. ' >=' → logprob: -15.043010711669922
    10. ':' → logprob: -15.543010711669922

Token 155: ' weird' (ID: 28783)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.02054842747747898
    2. ' weird' → logprob: -3.8955483436584473
    3. ' we' → logprob: -13.395548820495605
    4. '   ' → logprob: -13.395548820495605
    5. 'We' → logprob: -14.520548820495605
    6. 'weed' → logprob: -14.645548820495605
    7. 'w' → logprob: -15.020548820495605
    8. '  ' → logprob: -15.020548820495605
    9. 'wee' → logprob: -15.145548820495605
    10. 'wer' → logprob: -15.520548820495605

Token 156: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.2200749754119897e-06
    2. ' .' → logprob: -13.250001907348633
    3. '​.' → logprob: -16.250001907348633
    4. '‌.' → logprob: -16.500001907348633
    5. '.answer' → logprob: -16.625001907348633
    6. '>.' → logprob: -17.875001907348633
    7. '```' → logprob: -18.000001907348633
    8. '.we' → logprob: -18.250001907348633
    9. '\.' → logprob: -18.375001907348633
    10. '.ant' → logprob: -18.500001907348633

Token 157: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: 0.0
    2. '.' → logprob: -17.75
    3. '   ' → logprob: -18.25
    4. '	ans' → logprob: -19.0
    5. '(ans' → logprob: -19.5
    6. ' ans' → logprob: -19.875
    7. '_ans' → logprob: -20.0
    8. 'an' → logprob: -20.25
    9. 'n' → logprob: -20.5
    10. 'Ans' → logprob: -20.625

Token 158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3874102830886841
    2. ':
' → logprob: -1.137410283088684
    3. '       ' → logprob: -8.387410163879395
    4. '   ' → logprob: -8.512410163879395
    5. '):
' → logprob: -9.387410163879395
    6. '):' → logprob: -11.887410163879395
    7. ':
' → logprob: -12.137410163879395
    8. ':

' → logprob: -12.887410163879395
    9. ',' → logprob: -13.262410163879395
    10. ' :
' → logprob: -13.262410163879395

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009488075040280819
    2. 'we' → logprob: -4.884488105773926
    3. '   ' → logprob: -6.384488105773926
    4. '
' → logprob: -9.259488105773926
    5. ' we' → logprob: -10.384488105773926
    6. '```' → logprob: -11.259488105773926
    7. '           ' → logprob: -11.384488105773926
    8. '        
' → logprob: -11.884488105773926
    9. ',we' → logprob: -11.884488105773926
    10. '    
' → logprob: -12.134488105773926

Token 160: ' weird' (ID: 28783)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.010207190178334713
    2. '       ' → logprob: -4.885207176208496
    3. ' weird' → logprob: -6.510207176208496
    4. ' we' → logprob: -7.635207176208496
    5. '           ' → logprob: -7.885207176208496
    6. '   ' → logprob: -8.635207176208496
    7. '```' → logprob: -10.260207176208496
    8. '        ' → logprob: -11.385207176208496
    9. '    ' → logprob: -12.385207176208496
    10. '_we' → logprob: -13.572707176208496

Token 161: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.5213274309644476e-05
    2. ' .' → logprob: -12.750015258789062
    3. '.answer' → logprob: -12.875015258789062
    4. '‌.' → logprob: -13.750015258789062
    5. '‍.' → logprob: -14.000015258789062
    6. '​.' → logprob: -14.125015258789062
    7. '.pkl' → logprob: -14.250015258789062
    8. '.omg' → logprob: -15.000015258789062
    9. '```' → logprob: -15.000015258789062
    10. '`.' → logprob: -15.125015258789062

Token 162: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.703443770878948e-06
    2. 'n' → logprob: -12.125007629394531
    3. 'total' → logprob: -14.250007629394531
    4. ' ans' → logprob: -14.750007629394531
    5. '   ' → logprob: -14.875007629394531
    6. '(ans' → logprob: -15.375007629394531
    7. '	ans' → logprob: -15.500007629394531
    8. '```' → logprob: -16.37500762939453
    9. '`' → logprob: -17.25000762939453
    10. 'ann' → logprob: -17.37500762939453

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014138251543045
    2. '=' → logprob: -1.701413869857788
    3. ' ' → logprob: -15.701414108276367
    4. ',' → logprob: -15.826414108276367
    5. ' =
' → logprob: -16.326414108276367
    6. '＝' → logprob: -16.701414108276367
    7. '=

' → logprob: -18.076414108276367
    8. ' =)' → logprob: -18.076414108276367
    9. ')' → logprob: -18.326414108276367
    10. '=
' → logprob: -18.451414108276367

Token 164: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.00861456897109747
    2. ' candidate' → logprob: -4.758614540100098
    3. '(candidate' → logprob: -18.258615493774414
    4. ' candidat' → logprob: -19.133615493774414
    5. '_candidate' → logprob: -19.633615493774414
    6. 'c' → logprob: -19.633615493774414
    7. 'Candidate' → logprob: -21.133615493774414
    8. 'cand' → logprob: -21.133615493774414
    9. '   ' → logprob: -21.258615493774414
    10. '候' → logprob: -21.633615493774414

Token 165: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0024820810649544
    2. '   ' → logprob: -7.377481937408447
    3. ' print' → logprob: -7.377481937408447
    4. '\n' → logprob: -8.002482414245605
    5. ')' → logprob: -8.377482414245605
    6. '<|end|>' → logprob: -8.502482414245605
    7. '    
' → logprob: -10.002482414245605
    8. ' ' → logprob: -10.252482414245605
    9. ' 
' → logprob: -10.252482414245605
    10. 'we' → logprob: -10.252482414245605

Token 166: '[' (ID: 58)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5332478142227046e-05
    2. ' print' → logprob: -11.625015258789062
    3. 'we' → logprob: -13.250015258789062
    4. 'return' → logprob: -13.375015258789062
    5. ')' → logprob: -14.000015258789062
    6. '   ' → logprob: -14.125015258789062
    7. '```' → logprob: -14.500015258789062
    8. '#' → logprob: -15.250015258789062
    9. 'w' → logprob: -15.625015258789062
    10. '<|end|>' → logprob: -16.375015258789062

Token 167: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006355931982398033
    2. ' print' → logprob: -8.375635147094727
    3. 'w' → logprob: -9.125635147094727
    4. 'we' → logprob: -9.250635147094727
    5. ']' → logprob: -9.500635147094727
    6. 'idx' → logprob: -10.875635147094727
    7. '0' → logprob: -11.000635147094727
    8. 'pr' → logprob: -11.250635147094727
    9. '   ' → logprob: -11.750635147094727
    10. 'p' → logprob: -11.750635147094727

Token 168: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012216821312904358
    2. '(x' → logprob: -4.512217044830322
    3. 'we' → logprob: -7.512217044830322
    4. '(i' → logprob: -7.887217044830322
    5. '()]' → logprob: -9.512216567993164
    6. '(idx' → logprob: -10.512216567993164
    7. '(w' → logprob: -10.762216567993164
    8. ']' → logprob: -11.012216567993164
    9. '(c' → logprob: -11.262216567993164
    10. '(a' → logprob: -11.387216567993164

Token 169: 'we' (ID: 854)
  Prédit: 'we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.05474618822336197
    2. 'x' → logprob: -3.179746150970459
    3. 'idx' → logprob: -5.679746150970459
    4. 'i' → logprob: -6.304746150970459
    5. 'abs' → logprob: -6.429746150970459
    6. 'w' → logprob: -6.554746150970459
    7. ')' → logprob: -6.804746150970459
    8. '(' → logprob: -8.054746627807617
    9. 's' → logprob: -8.179746627807617
    10. 'ans' → logprob: -8.304746627807617

Token 170: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -1.0325924449716695e-05
    2. 'ir' → logprob: -11.87501049041748
    3. 'irds' → logprob: -14.25001049041748
    4. ')' → logprob: -14.37501049041748
    5. 'rd' → logprob: -14.62501049041748
    6. 'ierd' → logprob: -15.00001049041748
    7. 'urd' → logprob: -15.62501049041748
    8. 'ard' → logprob: -15.75001049041748
    9. '```' → logprob: -15.75001049041748
    10. '.' → logprob: -16.375009536743164

Token 171: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.0722858102526516e-05
    2. ' .' → logprob: -11.000041007995605
    3. ').' → logprob: -11.750041007995605
    4. ')' → logprob: -12.125041007995605
    5. '.answer' → logprob: -12.500041007995605
    6. '`.' → logprob: -13.875041007995605
    7. '".' → logprob: -14.000041007995605
    8. '.n' → logprob: -14.125041007995605
    9. '```' → logprob: -14.625041007995605
    10. ' ' → logprob: -14.875041007995605

Token 172: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.5107177862082608e-05
    2. 'n' → logprob: -11.875024795532227
    3. 'total' → logprob: -12.000024795532227
    4. 'ws' → logprob: -12.125024795532227
    5. 'a' → logprob: -12.750024795532227
    6. ' ans' → logprob: -14.375024795532227
    7. '   ' → logprob: -14.875024795532227
    8. 'ns' → logprob: -15.000024795532227
    9. '(ans' → logprob: -15.250024795532227
    10. 'an' → logprob: -15.375024795532227

Token 173: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015764019917696714
    2. ')]' → logprob: -6.5015764236450195
    3. '])' → logprob: -10.62657642364502
    4. '))' → logprob: -10.87657642364502
    5. ']' → logprob: -11.37657642364502
    6. ')])' → logprob: -11.75157642364502
    7. '[' → logprob: -12.12657642364502
    8. ')
' → logprob: -13.50157642364502
    9. ')`' → logprob: -13.50157642364502
    10. ' )' → logprob: -14.00157642364502

Token 174: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12837204337120056
    2. ')]' → logprob: -2.1283719539642334
    3. '()]' → logprob: -7.2533721923828125
    4. ')' → logprob: -7.3783721923828125
    5. '[' → logprob: -10.003372192382812
    6. '])' → logprob: -10.003372192382812
    7. '[]' → logprob: -12.378372192382812
    8. ',' → logprob: -12.503372192382812
    9. ' ]' → logprob: -12.753372192382812
    10. '(' → logprob: -13.253372192382812

Token 175: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5790918469429016
    2. 'range' → logprob: -0.9540918469429016
    3. ' range' → logprob: -3.079091787338257
    4. '_]' → logprob: -5.079092025756836
    5. '[' → logprob: -6.704092025756836
    6. ' _' → logprob: -8.079092025756836
    7. '[]' → logprob: -8.454092025756836
    8. '_[' → logprob: -8.954092025756836
    9. ']' → logprob: -9.204092025756836
    10. '__' → logprob: -9.579092025756836

Token 176: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14386512339115143
    2. 'in' → logprob: -2.0188651084899902
    3. 'range' → logprob: -7.51886510848999
    4. ' ' → logprob: -8.143865585327148
    5. ' range' → logprob: -8.268865585327148
    6. '_' → logprob: -10.518865585327148
    7. '  ' → logprob: -11.268865585327148
    8. ']' → logprob: -11.393865585327148
    9. '()' → logprob: -11.518865585327148
    10. '(range' → logprob: -11.768865585327148

Token 177: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005662837065756321
    2. ' range' → logprob: -5.25566291809082
    3. '[' → logprob: -7.75566291809082
    4. '(range' → logprob: -14.75566291809082
    5. '(' → logprob: -16.25566291809082
    6. 'iter' → logprob: -16.88066291809082
    7. '	range' → logprob: -17.13066291809082
    8. '   ' → logprob: -17.25566291809082
    9. ' [' → logprob: -17.25566291809082
    10. ' ' → logprob: -18.00566291809082

Token 178: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6998613476753235
    2. 'we' → logprob: -0.6998613476753235
    3. '1' → logprob: -5.074861526489258
    4. '2' → logprob: -8.449861526489258
    5. '0' → logprob: -9.449861526489258
    6. '3' → logprob: -10.574861526489258
    7. ' ' → logprob: -10.699861526489258
    8. '10' → logprob: -11.074861526489258
    9. ' weird' → logprob: -11.449861526489258
    10. '   ' → logprob: -11.574861526489258

Token 179: '1' (ID: 16)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.20254424214363098
    2. '1' → logprob: -1.7025442123413086
    3. ' ' → logprob: -7.702544212341309
    4. ' weird' → logprob: -8.952544212341309
    5. '2' → logprob: -9.077544212341309
    6. ' we' → logprob: -9.327544212341309
    7. '3' → logprob: -9.827544212341309
    8. 'int' → logprob: -9.827544212341309
    9. '   ' → logprob: -9.827544212341309
    10. '0' → logprob: -10.077544212341309

Token 180: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.926117479801178
    2. ')' → logprob: -1.0511174201965332
    3. '(' → logprob: -1.8011174201965332
    4. ' )' → logprob: -3.301117420196533
    5. '):' → logprob: -3.676117420196533
    6. ',' → logprob: -4.426117420196533
    7. 'we' → logprob: -5.301117420196533
    8. '+' → logprob: -6.051117420196533
    9. ' +' → logprob: -6.301117420196533
    10. ' ' → logprob: -6.676117420196533

Token 181: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08012674748897552
    2. ')]' → logprob: -2.5801267623901367
    3. '()]' → logprob: -6.705126762390137
    4. ']
' → logprob: -12.205126762390137
    5. '`]' → logprob: -12.955126762390137
    6. '}]' → logprob: -13.830126762390137
    7. ' ]' → logprob: -13.955126762390137
    8. ')' → logprob: -14.080126762390137
    9. '])' → logprob: -15.080126762390137
    10. ']()' → logprob: -15.330126762390137

Token 182: ' True' (ID: 6432)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.707505464553833
    2. ' False' → logprob: -1.582505464553833
    3. 'True' → logprob: -1.707505464553833
    4. ' True' → logprob: -2.457505464553833
    5. ' weird' → logprob: -3.832505464553833
    6. '_' → logprob: -5.332505226135254
    7. 'we' → logprob: -5.582505226135254
    8. ' ' → logprob: -6.582505226135254
    9. '__' → logprob: -6.707505226135254
    10. '0' → logprob: -7.332505226135254

Token 183: ']' (ID: 60)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.10312948375940323
    2. ']' → logprob: -2.3531293869018555
    3. ')' → logprob: -5.8531293869018555
    4. '])' → logprob: -10.478129386901855
    5. '()]' → logprob: -11.353129386901855
    6. ')])' → logprob: -13.228129386901855
    7. '])]' → logprob: -13.228129386901855
    8. ']
' → logprob: -14.103129386901855
    9. '`]' → logprob: -14.353129386901855
    10. ' ]' → logprob: -14.478129386901855


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 181
Tokens correctement prédits (1ère position, stricte): 81
Tokens correctement prédits (1ère position, avec adaptation): 84
Tokens correctement prédits (top 10): 148
Précision stricte (1ère position): 44.75%
Précision adaptée (1ère position): 46.41%
Précision (top 10): 81.77%
================================================================================
