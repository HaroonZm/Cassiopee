================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import collections as coll   # eh, I like short aliases
import bisect  # didn't use it though
sys.setrecursionlimit(100000)  # hope it doesn't blow up
MOD = 10**9 + 7  # usual modulus
BIG_NUM = sys.maxsize
def l():
    # reads integers as list, why not
    return list(map(int, input().split()))
def m():
    # splitting input, does the job
    return map(int, input().split())
def get_one():
    return int(input())
def s(x): # run-length encoding, sort of
    result = []
    curr = x[0]
    count = 1
    for idx in range(len(x)-1):
        if curr != x[idx+1]:
            result.append([curr, count])
            curr = x[idx+1]
            count = 1
        else:
            count += 1
    result.append([curr, count])
    return result
def join_list(xs):
    return " ".join(str(a) for a in xs)
def max2(arr): # not sure if this is the best name
    return max([max(row) for row in arr])

# main part
n, k = m()
a = l()
aaa = [0]*n  # will hold something, I forget
cnt = [0]*2002  # seems big enough, probably okay

for i in range(n-1, -1, -1):
    aaa[i] = cnt[a[i]]
    for j in range(a[i]+1, 2002):
        cnt[j] += 1

total = 0

for i in range(n-1, -1, -1):
    total += k * aaa[i]
    if total >= MOD:
        total %= MOD
    total += ((k*(k-1))//2) * cnt[a[i]]
    total %= MOD  # hope this is correct order...

print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6992754936218262
    2. '\n' → logprob: -0.8242754936218262
    3. '<|end|>' → logprob: -3.574275493621826
    4. '\' → logprob: -4.199275493621826
    5. 'newline' → logprob: -5.074275493621826
    6. 'import' → logprob: -5.324275493621826
    7. '<|end|>' → logprob: -5.949275493621826
    8. '```' → logprob: -6.574275493621826
    9. '' → logprob: -6.824275493621826
    10. '
' → logprob: -6.949275493621826

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00023321842309087515
    2. 'os' → logprob: -8.37523365020752
    3. ' math' → logprob: -13.87523365020752
    4. ' re' → logprob: -14.37523365020752
    5. '"os' → logprob: -14.87523365020752
    6. ' json' → logprob: -15.12523365020752
    7. '_os' → logprob: -15.87523365020752
    8. '	os' → logprob: -16.375232696533203
    9. ' ' → logprob: -16.750232696533203
    10. ' ' → logprob: -17.000232696533203

Token 5: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.044599298387765884
    2. 'import' → logprob: -4.669599533081055
    3. '\' → logprob: -4.794599533081055
    4. '

' → logprob: -5.044599533081055
    5. '
' → logprob: -5.169599533081055
    6. '\n' → logprob: -5.419599533081055
    7. 'newline' → logprob: -5.669599533081055
    8. ',' → logprob: -6.169599533081055
    9. '```' → logprob: -7.044599533081055
    10. '' → logprob: -7.544599533081055

Token 6: ' coll' (ID: 6110)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.26210355758667
    2. 'col' → logprob: -1.26210355758667
    3. ' col' → logprob: -1.51210355758667
    4. ' cole' → logprob: -2.13710355758667
    5. ' coll' → logprob: -3.88710355758667
    6. 'collections' → logprob: -4.01210355758667
    7. ' co' → logprob: -4.76210355758667
    8. '_col' → logprob: -5.01210355758667
    9. ' cl' → logprob: -5.13710355758667
    10. ' colle' → logprob: -5.38710355758667

Token 7: '  ' (ID: 256)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014809117652475834
    2. '
' → logprob: -5.3898091316223145
    3. '' → logprob: -5.8898091316223145
    4. '\' → logprob: -6.3898091316223145
    5. '
' → logprob: -6.7648091316223145
    6. '\n' → logprob: -6.8898091316223145
    7. '.
' → logprob: -7.2648091316223145
    8. '

' → logprob: -7.6398091316223145
    9. '.

' → logprob: -8.014808654785156
    10. '```' → logprob: -8.139808654785156

Token 8: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.013130581006407738
    2. '\' → logprob: -5.5131306648254395
    3. '
' → logprob: -6.0131306648254395
    4. ',' → logprob: -6.6381306648254395
    5. '\n' → logprob: -6.6381306648254395
    6. '' → logprob: -7.1381306648254395
    7. 'newline' → logprob: -7.5131306648254395
    8. '

' → logprob: -7.8881306648254395
    9. 'import' → logprob: -8.013130187988281
    10. '.
' → logprob: -8.263130187988281

Token 9: ' eh' (ID: 22446)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.37972357869148254
    2. ' ' → logprob: -1.7547235488891602
    3. '\' → logprob: -2.87972354888916
    4. '#' → logprob: -3.50472354888916
    5. 'import' → logprob: -4.37972354888916
    6. '_' → logprob: -4.75472354888916
    7. '<|end|>' → logprob: -5.00472354888916
    8. '' → logprob: -5.50472354888916
    9. '  ' → logprob: -6.00472354888916
    10. '\n' → logprob: -6.00472354888916

Token 10: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6429398655891418
    2. '' → logprob: -1.642939805984497
    3. 'ect' → logprob: -2.142939805984497
    4. '\' → logprob: -2.892939805984497
    5. '_' → logprob: -4.517940044403076
    6. '
' → logprob: -4.642940044403076
    7. '

' → logprob: -4.767940044403076
    8. 'ective' → logprob: -4.767940044403076
    9. 'import' → logprob: -5.017940044403076
    10. ' ' → logprob: -5.142940044403076

Token 11: ' I' (ID: 357)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.054467495530843735
    2. '_' → logprob: -3.5544674396514893
    3. '.' → logprob: -4.679467678070068
    4. ' collections' → logprob: -5.304467678070068
    5. 'collections' → logprob: -5.929467678070068
    6. '  ' → logprob: -6.179467678070068
    7. '<|end|>' → logprob: -6.554467678070068
    8. ' .' → logprob: -7.929467678070068
    9. ' ,' → logprob: -7.929467678070068
    10. 'import' → logprob: -8.05446720123291

Token 12: ' like' (ID: 1299)
  Prédit: ''m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''m' → logprob: -0.23716163635253906
    2. 'm' → logprob: -2.487161636352539
    3. 'gnore' → logprob: -3.112161636352539
    4. ''ll' → logprob: -4.362161636352539
    5. ' like' → logprob: -4.987161636352539
    6. ''' → logprob: -5.112161636352539
    7. ' don't' → logprob: -5.362161636352539
    8. 'n' → logprob: -5.487161636352539
    9. 'mp' → logprob: -5.862161636352539
    10. 'love' → logprob: -6.112161636352539

Token 13: ' short' (ID: 4022)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5119801163673401
    2. ' collections' → logprob: -1.6369800567626953
    3. ' _' → logprob: -3.0119800567626953
    4. ' the' → logprob: -3.3869800567626953
    5. ' ' → logprob: -3.3869800567626953
    6. ' this' → logprob: -3.8869800567626953
    7. 'collections' → logprob: -4.261980056762695
    8. ' sys' → logprob: -4.511980056762695
    9. '  ' → logprob: -4.761980056762695
    10. ' to' → logprob: -4.886980056762695

Token 14: ' aliases' (ID: 89610)
  Prédit: 'names'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'names' → logprob: -0.3183838427066803
    2. 'er' → logprob: -2.4433839321136475
    3. '_' → logprob: -3.0683839321136475
    4. 'cuts' → logprob: -3.0683839321136475
    5. 'forms' → logprob: -3.9433839321136475
    6. 'form' → logprob: -4.193383693695068
    7. '_names' → logprob: -4.318383693695068
    8. 'name' → logprob: -4.568383693695068
    9. 'and' → logprob: -5.193383693695068
    10. '_forms' → logprob: -5.693383693695068

Token 15: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4001344442367554
    2. '\n' → logprob: -1.4001344442367554
    3. '.' → logprob: -2.025134563446045
    4. '

' → logprob: -2.275134563446045
    5. '' → logprob: -2.650134563446045
    6. '\' → logprob: -2.775134563446045
    7. 'import' → logprob: -3.025134563446045
    8. 'newline' → logprob: -3.150134563446045
    9. ',' → logprob: -4.150134563446045
    10. '```' → logprob: -4.650134563446045

Token 16: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8504637479782104
    2. '

' → logprob: -0.8504637479782104
    3. 'import' → logprob: -2.7254638671875
    4. '' → logprob: -3.7254638671875
    5. '\n' → logprob: -3.9754638671875
    6. '
' → logprob: -4.7254638671875
    7. '```' → logprob: -5.2254638671875
    8. ',' → logprob: -5.4754638671875
    9. 'sys' → logprob: -5.4754638671875
    10. 'newline' → logprob: -5.8504638671875

Token 17: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.03368731215596199
    2. 'os' → logprob: -4.033687114715576
    3. ' re' → logprob: -4.658687114715576
    4. ' itertools' → logprob: -5.908687114715576
    5. ' math' → logprob: -6.908687114715576
    6. 're' → logprob: -7.408687114715576
    7. ' pathlib' → logprob: -7.908687114715576
    8. ' numpy' → logprob: -8.158687591552734
    9. ' functools' → logprob: -8.533687591552734
    10. ' json' → logprob: -8.658687591552734

Token 18: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -6.182190554682165e-05
    2. 't' → logprob: -10.875061988830566
    3. 'ec' → logprob: -11.000061988830566
    4. 'e' → logprob: -11.000061988830566
    5. '' → logprob: -12.750061988830566
    6. '```' → logprob: -12.875061988830566
    7. 'ected' → logprob: -14.250061988830566
    8. '
' → logprob: -14.375061988830566
    9. 'ects' → logprob: -15.250061988830566
    10. '``' → logprob: -15.250061988830566

Token 19: ' ' (ID: 220)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8193269371986389
    2. '
' → logprob: -1.6943268775939941
    3. 'import' → logprob: -2.194326877593994
    4. '' → logprob: -2.944326877593994
    5. '<|end|>' → logprob: -3.069326877593994
    6. '

' → logprob: -3.194326877593994
    7. '\n' → logprob: -3.569326877593994
    8. 'newline' → logprob: -3.694326877593994
    9. ' ' → logprob: -4.194326877593994
    10. '```' → logprob: -4.694326877593994

Token 20: ' #' (ID: 1069)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -1.7724438905715942
    2. '
' → logprob: -1.8974438905715942
    3. '\n' → logprob: -1.8974438905715942
    4. '' → logprob: -1.8974438905715942
    5. '.' → logprob: -2.1474437713623047
    6. 'import' → logprob: -2.1474437713623047
    7. ' 

' → logprob: -3.5224437713623047
    8. '```' → logprob: -3.7724437713623047
    9. '#' → logprob: -4.147443771362305
    10. '
' → logprob: -4.522443771362305

Token 21: ' didn't' (ID: 9289)
  Prédit: ' 

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 

' → logprob: -0.8247802257537842
    2. ' ' → logprob: -0.9497802257537842
    3. '<|end|>' → logprob: -2.824780225753784
    4. ' 
' → logprob: -3.074780225753784
    5. 'import' → logprob: -4.074780464172363
    6. '  

' → logprob: -4.574780464172363
    7. '<|end|>' → logprob: -4.824780464172363
    8. '
' → logprob: -5.699780464172363
    9. '```' → logprob: -5.699780464172363
    10. ' 

' → logprob: -6.074780464172363

Token 22: ' use' (ID: 1199)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9424304962158203
    2. ' use' → logprob: -1.4424304962158203
    3. 'import' → logprob: -1.8174304962158203
    4. ' want' → logprob: -2.8174304962158203
    5. ' import' → logprob: -3.3174304962158203
    6. '  ' → logprob: -4.31743049621582
    7. 'use' → logprob: -4.56743049621582
    8. '.' → logprob: -4.56743049621582
    9. ')' → logprob: -4.81743049621582
    10. ' need' → logprob: -5.19243049621582

Token 23: ' it' (ID: 480)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5213994383811951
    2. '
' → logprob: -1.2713994979858398
    3. 'import' → logprob: -3.02139949798584
    4. '' → logprob: -4.27139949798584
    5. '


' → logprob: -4.27139949798584
    6. '<|end|>' → logprob: -4.39639949798584
    7. ' 

' → logprob: -4.64639949798584
    8. '#' → logprob: -5.39639949798584
    9. ' ' → logprob: -5.64639949798584
    10. '\n' → logprob: -5.77139949798584

Token 24: ' though' (ID: 5495)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9443879127502441
    2. '

' → logprob: -1.0693879127502441
    3. '<|end|>' → logprob: -2.069387912750244
    4. 'import' → logprob: -2.944387912750244
    5. '\n' → logprob: -3.569387912750244
    6. '.' → logprob: -4.569387912750244
    7. '


' → logprob: -4.694387912750244
    8. '#' → logprob: -4.819387912750244
    9. '' → logprob: -5.194387912750244
    10. '<|end|>' → logprob: -5.194387912750244

Token 25: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.35426363348960876
    2. '
' → logprob: -1.3542636632919312
    3. 'import' → logprob: -4.104263782501221
    4. '' → logprob: -5.479263782501221
    5. '


' → logprob: -5.479263782501221
    6. ' 

' → logprob: -5.854263782501221
    7. '```' → logprob: -6.104263782501221
    8. '.' → logprob: -6.354263782501221
    9. '<|end|>' → logprob: -6.479263782501221
    10. '#' → logprob: -6.604263782501221

Token 26: 'sys' (ID: 17324)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6556581854820251
    2. '
' → logprob: -1.28065824508667
    3. 'import' → logprob: -2.03065824508667
    4. '<|end|>' → logprob: -4.03065824508667
    5. '```' → logprob: -4.03065824508667
    6. '\n' → logprob: -4.15565824508667
    7. '' → logprob: -5.40565824508667
    8. '


' → logprob: -5.40565824508667
    9. ' 

' → logprob: -6.03065824508667
    10. 'newline' → logprob: -6.65565824508667

Token 27: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002037129830569029
    2. '.exit' → logprob: -6.377037048339844
    3. '.argv' → logprob: -8.877037048339844
    4. '.stdout' → logprob: -9.877037048339844
    5. '.stdin' → logprob: -10.752037048339844
    6. ' .' → logprob: -10.877037048339844
    7. '.stderr' → logprob: -11.377037048339844
    8. '.readline' → logprob: -11.502037048339844
    9. '.path' → logprob: -11.627037048339844
    10. '.version' → logprob: -12.252037048339844

Token 28: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.2926182746887207
    2. '_' → logprob: -2.4176182746887207
    3. '_version' → logprob: -2.9176182746887207
    4. '_limit' → logprob: -3.6676182746887207
    5. '_trace' → logprob: -4.292618274688721
    6. '_rec' → logprob: -5.042618274688721
    7. '_stack' → logprob: -5.292618274688721
    8. 'limit' → logprob: -5.417618274688721
    9. '_int' → logprob: -5.542618274688721
    10. '_sys' → logprob: -5.667618274688721

Token 29: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0003346314188092947
    2. 'urs' → logprob: -8.375334739685059
    3. 'ursive' → logprob: -10.000334739685059
    4. 'ursor' → logprob: -11.000334739685059
    5. 'ur' → logprob: -11.250334739685059
    6. '_' → logprob: -11.625334739685059
    7. 'limit' → logprob: -11.875334739685059
    8. '_limit' → logprob: -13.000334739685059
    9. 'urse' → logprob: -13.125334739685059
    10. 'usion' → logprob: -13.250334739685059

Token 30: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.688212614681106e-05
    2. 'lim' → logprob: -11.375017166137695
    3. ' limit' → logprob: -12.250017166137695
    4. '_limit' → logprob: -14.750017166137695
    5. 'depth' → logprob: -16.125017166137695
    6. 'al' → logprob: -17.000017166137695
    7. 'limits' → logprob: -17.375017166137695
    8. '(limit' → logprob: -18.750017166137695
    9. 'l' → logprob: -18.875017166137695
    10. 'limited' → logprob: -19.250017166137695

Token 31: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.961759259458631e-06
    2. '(
' → logprob: -12.875004768371582
    3. '(

' → logprob: -13.625004768371582
    4. ' (' → logprob: -14.750004768371582
    5. '((' → logprob: -15.125004768371582
    6. '()' → logprob: -15.250004768371582
    7. '(int' → logprob: -16.6250057220459
    8. '(`' → logprob: -17.2500057220459
    9. '(max' → logprob: -17.2500057220459
    10. '('' → logprob: -17.5000057220459

Token 32: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10032323002815247
    2. '100' → logprob: -2.35032320022583
    3. '500' → logprob: -9.975323677062988
    4. ' ' → logprob: -10.975323677062988
    5. '300' → logprob: -11.225323677062988
    6. '200' → logprob: -11.225323677062988
    7. '999' → logprob: -11.600323677062988
    8. '1' → logprob: -12.225323677062988
    9. '900' → logprob: -12.725323677062988
    10. '250' → logprob: -12.975323677062988

Token 33: '000' (ID: 1302)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.3306768834590912
    2. '000' → logprob: -1.5806769132614136
    3. '0' → logprob: -2.580676794052124
    4. '_' → logprob: -13.580677032470703
    5. ')' → logprob: -14.455677032470703
    6. '050' → logprob: -14.455677032470703
    7. '```' → logprob: -14.955677032470703
    8. '001' → logprob: -15.205677032470703
    9. '007' → logprob: -15.455677032470703
    10. ' ' → logprob: -15.955677032470703

Token 34: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07892449200153351
    2. '0' → logprob: -2.5789244174957275
    3. ')
' → logprob: -11.078924179077148
    4. ' )' → logprob: -11.328924179077148
    5. '))' → logprob: -13.578924179077148
    6. '00' → logprob: -13.703924179077148
    7. '1' → logprob: -13.828924179077148
    8. ')

' → logprob: -13.953924179077148
    9. '```' → logprob: -13.953924179077148
    10. '000' → logprob: -14.453924179077148

Token 35: ' ' (ID: 220)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.12827831506729126
    2. '
' → logprob: -2.1282782554626465
    3. '
' → logprob: -7.3782782554626465
    4. '


' → logprob: -8.503278732299805
    5. ' 

' → logprob: -8.878278732299805
    6. '' → logprob: -9.253278732299805
    7. '\n' → logprob: -9.378278732299805
    8. '

' → logprob: -9.878278732299805
    9. '```' → logprob: -10.128278732299805
    10. '
 
' → logprob: -11.003278732299805

Token 36: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6365578770637512
    2. '

' → logprob: -0.7615578770637512
    3. '
' → logprob: -6.6365580558776855
    4. '


' → logprob: -7.0115580558776855
    5. '\n' → logprob: -7.8865580558776855
    6. 'def' → logprob: -8.136557579040527
    7. '' → logprob: -8.136557579040527
    8. '```' → logprob: -9.136557579040527
    9. '
 
' → logprob: -9.386557579040527
    10. '

' → logprob: -9.636557579040527

Token 37: ' hope' (ID: 5498)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8778719902038574
    2. ' ' → logprob: -1.3778719902038574
    3. ' 

' → logprob: -1.6278719902038574
    4. '
' → logprob: -2.7528719902038574
    5. '0' → logprob: -3.7528719902038574
    6. '100' → logprob: -3.7528719902038574
    7. '  
' → logprob: -5.127871990203857
    8. '10' → logprob: -5.752871990203857
    9. '\n' → logprob: -5.752871990203857
    10. ' ' → logprob: -6.252871990203857

Token 38: ' it' (ID: 480)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' doesn't' (ID: 8740)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.20571157336235046
    2. 's' → logprob: -2.580711603164673
    3. ''' → logprob: -2.830711603164673
    4. ''ll' → logprob: -4.080711364746094
    5. ' doesn't' → logprob: -4.330711364746094
    6. ' won't' → logprob: -4.830711364746094
    7. ' ' → logprob: -5.330711364746094
    8. ' works' → logprob: -5.955711364746094
    9. ' s' → logprob: -6.080711364746094
    10. ' is' → logprob: -6.705711364746094

Token 40: ' blow' (ID: 23420)
  Prédit: ' work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' work' → logprob: -0.9055479168891907
    2. '<|end|>' → logprob: -1.405547857284546
    3. ' ' → logprob: -3.155547857284546
    4. ' continue' → logprob: -3.280547857284546
    5. ')' → logprob: -3.530547857284546
    6. 'continue' → logprob: -3.655547857284546
    7. '```' → logprob: -3.655547857284546
    8. '<|end|>' → logprob: -4.030548095703125
    9. '_' → logprob: -4.280548095703125
    10. ' cause' → logprob: -4.280548095703125

Token 41: ' up' (ID: 869)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.5125330686569214
    2. '
' → logprob: -1.6375330686569214
    3. '

' → logprob: -3.012533187866211
    4. '' → logprob: -3.262533187866211
    5. '\n' → logprob: -3.387533187866211
    6. ' 

' → logprob: -3.887533187866211
    7. ' ' → logprob: -4.137533187866211
    8. '<|end|>' → logprob: -4.387533187866211
    9. '#' → logprob: -5.012533187866211
    10. ' 
' → logprob: -5.137533187866211

Token 42: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.11433025449514389
    2. '
' → logprob: -2.239330291748047
    3. '


' → logprob: -7.614330291748047
    4. '' → logprob: -8.114330291748047
    5. ' 

' → logprob: -8.364330291748047
    6. '
' → logprob: -8.489330291748047
    7. '#' → logprob: -9.614330291748047
    8. '



' → logprob: -10.239330291748047
    9. '

' → logprob: -10.614330291748047
    10. '

' → logprob: -10.864330291748047

Token 43: 'MOD' (ID: 52135)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4319683313369751
    2. '
' → logprob: -1.056968331336975
    3. '
' → logprob: -7.0569682121276855
    4. '' → logprob: -7.1819682121276855
    5. '#' → logprob: -8.181968688964844
    6. '


' → logprob: -8.181968688964844
    7. ' 

' → logprob: -8.431968688964844
    8. 'class' → logprob: -8.556968688964844
    9. 'def' → logprob: -9.056968688964844
    10. 'import' → logprob: -9.431968688964844

Token 44: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7530567646026611
    2. ' =' → logprob: -1.0030567646026611
    3. '_' → logprob: -2.003056764602661
    4. ' ' → logprob: -3.628056764602661
    5. ')' → logprob: -8.378056526184082
    6. ' _' → logprob: -8.878056526184082
    7. '.' → logprob: -9.003056526184082
    8. '  ' → logprob: -9.503056526184082
    9. '_=' → logprob: -9.878056526184082
    10. '<|end|>' → logprob: -9.878056526184082

Token 45: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.034435756504535675
    2. '10' → logprob: -3.409435749053955
    3. '100' → logprob: -7.159435749053955
    4. '998' → logprob: -12.284436225891113
    5. '1' → logprob: -12.659436225891113
    6. '109' → logprob: -14.159436225891113
    7. ' (' → logprob: -14.159436225891113
    8. ' ' → logprob: -14.409436225891113
    9. 'int' → logprob: -14.659436225891113
    10. ' int' → logprob: -15.409436225891113

Token 46: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.012650790624320507
    2. '100' → logprob: -4.387650966644287
    3. '998' → logprob: -9.262650489807129
    4. '1' → logprob: -10.387650489807129
    5. ' ' → logprob: -11.387650489807129
    6. 'int' → logprob: -12.762650489807129
    7. '123' → logprob: -14.887650489807129
    8. '999' → logprob: -15.512650489807129
    9. '2' → logprob: -15.637650489807129
    10. '(' → logprob: -16.387651443481445

Token 47: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.026422683149576187
    2. '**' → logprob: -3.6514227390289307
    3. '09' → logprob: -9.151422500610352
    4. '```' → logprob: -11.401422500610352
    5. ' ' → logprob: -13.026422500610352
    6. '*' → logprob: -14.526422500610352
    7. '_' → logprob: -14.651422500610352
    8. '^' → logprob: -14.776422500610352
    9. '7' → logprob: -14.901422500610352
    10. '000' → logprob: -15.026422500610352

Token 48: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.2664456789934775e-06
    2. '09' → logprob: -13.750000953674316
    3. ' ' → logprob: -16.125001907348633
    4. '+' → logprob: -17.500001907348633
    5. '```' → logprob: -17.750001907348633
    6. '10' → logprob: -18.875001907348633
    7. '4' → logprob: -19.750001907348633
    8. '   ' → logprob: -20.000001907348633
    9. '_' → logprob: -20.125001907348633
    10. '8' → logprob: -20.375001907348633

Token 49: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004135112394578755
    2. ' +' → logprob: -8.37541389465332
    3. '7' → logprob: -8.62541389465332
    4. '```' → logprob: -13.12541389465332
    5. '9' → logprob: -14.75041389465332
    6. '+
' → logprob: -15.25041389465332
    7. '＋' → logprob: -15.50041389465332
    8. '+

' → logprob: -16.12541389465332
    9. ' ' → logprob: -16.75041389465332
    10. 'plus' → logprob: -16.87541389465332

Token 50: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.4121114822482923e-06
    2. '+' → logprob: -13.500003814697266
    3. ' ' → logprob: -13.500003814697266
    4. '9' → logprob: -14.625003814697266
    5. '```' → logprob: -17.125003814697266
    6. '07' → logprob: -18.000003814697266
    7. '   ' → logprob: -18.125003814697266
    8. '  ' → logprob: -19.000003814697266
    9. '17' → logprob: -19.500003814697266
    10. '37' → logprob: -19.500003814697266

Token 51: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '+' → logprob: -16.25
    4. '```' → logprob: -17.5
    5. '07' → logprob: -18.625
    6. '9' → logprob: -18.75
    7. '   ' → logprob: -19.25
    8. ' ' → logprob: -20.0
    9. '37' → logprob: -20.0
    10. '' → logprob: -20.0

Token 52: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08345426619052887
    2. '

' → logprob: -2.5834543704986572
    3. '
' → logprob: -5.833454132080078
    4. '' → logprob: -6.708454132080078
    5. '\n' → logprob: -9.083454132080078
    6. '```' → logprob: -9.583454132080078
    7. '


' → logprob: -9.958454132080078
    8. ' 

' → logprob: -10.083454132080078
    9. ' 
' → logprob: -10.208454132080078
    10. '

' → logprob: -10.833454132080078

Token 53: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10956376791000366
    2. '

' → logprob: -2.3595638275146484
    3. '' → logprob: -5.484563827514648
    4. '\n' → logprob: -5.859563827514648
    5. '
' → logprob: -6.734563827514648
    6. 'newline' → logprob: -8.109563827514648
    7. ' 

' → logprob: -8.859563827514648
    8. 'def' → logprob: -8.859563827514648
    9. ' 
' → logprob: -9.234563827514648
    10. '\' → logprob: -9.234563827514648

Token 54: ' usual' (ID: 19261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00023178798437584192
    2. '  ' → logprob: -9.625231742858887
    3. '<|end|>' → logprob: -9.875231742858887
    4. 'def' → logprob: -11.125231742858887
    5. ' ' → logprob: -11.375231742858887
    6. '#' → logprob: -11.500231742858887
    7. ' 

' → logprob: -11.500231742858887
    8. ' ```' → logprob: -12.000231742858887
    9. ' )' → logprob: -12.000231742858887
    10. ' 
' → logprob: -12.000231742858887

Token 55: ' modulus' (ID: 149464)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6994690895080566
    2. '
' → logprob: -1.3244690895080566
    3. ' 

' → logprob: -2.0744690895080566
    4. '<|end|>' → logprob: -2.8244690895080566
    5. '' → logprob: -4.449469089508057
    6. '\n' → logprob: -5.074469089508057
    7. '<|end|>' → logprob: -5.199469089508057
    8. ' ' → logprob: -5.199469089508057
    9. '```' → logprob: -5.449469089508057
    10. ' 
' → logprob: -5.449469089508057

Token 56: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.25462430715560913
    2. '
' → logprob: -1.504624366760254
    3. '
' → logprob: -6.754624366760254
    4. '


' → logprob: -7.254624366760254
    5. '' → logprob: -8.129624366760254
    6. '\n' → logprob: -9.254624366760254
    7. ' 

' → logprob: -9.379624366760254
    8. '<|end|>' → logprob: -9.629624366760254
    9. '

' → logprob: -9.879624366760254
    10. 'def' → logprob: -10.004624366760254

Token 57: 'BIG' (ID: 118898)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5305211544036865
    2. '

' → logprob: -0.9055211544036865
    3. 'def' → logprob: -6.030521392822266
    4. '
' → logprob: -6.530521392822266
    5. '' → logprob: -6.780521392822266
    6. '#' → logprob: -7.405521392822266
    7. '\n' → logprob: -7.780521392822266
    8. ' 

' → logprob: -8.030521392822266
    9. 'class' → logprob: -8.405521392822266
    10. '


' → logprob: -8.780521392822266

Token 58: '_NUM' (ID: 20468)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9759294986724854
    2. 'INT' → logprob: -0.9759294986724854
    3. '=' → logprob: -1.6009294986724854
    4. '=int' → logprob: -4.225929260253906
    5. '_INT' → logprob: -4.225929260253906
    6. '_NUMBER' → logprob: -5.225929260253906
    7. '_INF' → logprob: -6.350929260253906
    8. '_VAL' → logprob: -6.725929260253906
    9. 'INF' → logprob: -6.975929260253906
    10. '```' → logprob: -6.975929260253906

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1428050696849823
    2. '=' → logprob: -2.0178050994873047
    3. 'ER' → logprob: -10.142805099487305
    4. ' ' → logprob: -10.392805099487305
    5. 'BER' → logprob: -11.642805099487305
    6. '  ' → logprob: -11.767805099487305
    7. 'ber' → logprob: -12.142805099487305
    8. ')' → logprob: -12.142805099487305
    9. 'O' → logprob: -12.267805099487305
    10. '   ' → logprob: -12.392805099487305

Token 60: ' sys' (ID: 12228)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18112966418266296
    2. '10' → logprob: -1.8061296939849854
    3. '100' → logprob: -7.806129455566406
    4. ' int' → logprob: -7.931129455566406
    5. 'int' → logprob: -8.181129455566406
    6. ' float' → logprob: -9.056129455566406
    7. '1' → logprob: -9.306129455566406
    8. 'float' → logprob: -10.056129455566406
    9. '999' → logprob: -10.181129455566406
    10. '123' → logprob: -11.431129455566406

Token 61: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.013297639787197113
    2. '.' → logprob: -4.3882975578308105
    3. '.MAX' → logprob: -7.3882975578308105
    4. '.Max' → logprob: -9.138298034667969
    5. '.argv' → logprob: -11.263298034667969
    6. '.i' → logprob: -11.388298034667969
    7. 'max' → logprob: -11.638298034667969
    8. '.version' → logprob: -11.888298034667969
    9. '.maximum' → logprob: -12.638298034667969
    10. '.a' → logprob: -12.763298034667969

Token 62: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.002389206551015377
    2. 'ize' → logprob: -6.252389430999756
    3. 'int' → logprob: -7.877389430999756
    4. 'siz' → logprob: -9.627388954162598
    5. ' size' → logprob: -11.377388954162598
    6. 'esize' → logprob: -13.877388954162598
    7. 'sizei' → logprob: -14.502388954162598
    8. 'si' → logprob: -14.502388954162598
    9. '_size' → logprob: -14.627388954162598
    10. 'SIZE' → logprob: -14.752388954162598

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15328475832939148
    2. '<|end|>' → logprob: -2.653284788131714
    3. '

' → logprob: -2.903284788131714
    4. '<|end|>' → logprob: -4.778284549713135
    5. '
' → logprob: -5.528284549713135
    6. 'newline' → logprob: -6.778284549713135
    7. 'def' → logprob: -7.153284549713135
    8. '\n' → logprob: -7.278284549713135
    9. '' → logprob: -7.403284549713135
    10. '```' → logprob: -8.528285026550293

Token 64: 'def' (ID: 1314)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.28802332282066345
    2. '
' → logprob: -1.4130233526229858
    3. 'def' → logprob: -6.913023471832275
    4. '
' → logprob: -7.163023471832275
    5. '#' → logprob: -7.163023471832275
    6. ' 

' → logprob: -7.288023471832275
    7. 'class' → logprob: -7.288023471832275
    8. '<|end|>' → logprob: -7.413023471832275
    9. '' → logprob: -7.538023471832275
    10. '\n' → logprob: -7.913023471832275

Token 65: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23954914510250092
    2. ' dfs' → logprob: -2.614549160003662
    3. '_' → logprob: -2.739549160003662
    4. ' main' → logprob: -3.489549160003662
    5. ' factorial' → logprob: -4.114549160003662
    6. ' _' → logprob: -4.364549160003662
    7. ' dp' → logprob: -5.739549160003662
    8. ' f' → logprob: -5.864549160003662
    9. ' factor' → logprob: -6.364549160003662
    10. ' solve' → logprob: -6.364549160003662

Token 66: '():
' (ID: 8595)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.07555704563856125
    2. 'eft' → logprob: -3.450556993484497
    3. 'ist' → logprob: -3.700556993484497
    4. 'og' → logprob: -5.325557231903076
    5. 'cm' → logprob: -5.450557231903076
    6. 'e' → logprob: -5.825557231903076
    7. 'is' → logprob: -6.825557231903076
    8. 'oad' → logprob: -7.325557231903076
    9. 'ast' → logprob: -7.575557231903076
    10. 'ru' → logprob: -7.950557231903076

Token 67: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3679896593093872
    2. 'eturn' → logprob: -2.1179895401000977
    3. ' ' → logprob: -2.2429895401000977
    4. 'return' → logprob: -3.3679895401000977
    5. '   ' → logprob: -3.8679895401000977
    6. '    ' → logprob: -4.617989540100098
    7. ' input' → logprob: -4.992989540100098
    8. '  ' → logprob: -6.242989540100098
    9. ' int' → logprob: -6.367989540100098
    10. ' list' → logprob: -6.492989540100098

Token 68: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0797642320394516
    2. ' return' → logprob: -2.5797641277313232
    3. '   ' → logprob: -7.204764366149902
    4. 'input' → logprob: -10.204764366149902
    5. ' ' → logprob: -10.454764366149902
    6. 'ret' → logprob: -10.954764366149902
    7. 'int' → logprob: -10.954764366149902
    8. '	return' → logprob: -12.204764366149902
    9. 'r' → logprob: -12.329764366149902
    10. '    ' → logprob: -12.704764366149902

Token 69: ' reads' (ID: 31523)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.144403874874115
    2. ' return' → logprob: -2.1444039344787598
    3. '   ' → logprob: -4.14440393447876
    4. 'input' → logprob: -7.76940393447876
    5. 'pass' → logprob: -8.269403457641602
    6. '[]' → logprob: -9.144403457641602
    7. 'eturn' → logprob: -9.144403457641602
    8. ' ' → logprob: -9.144403457641602
    9. ' input' → logprob: -9.269403457641602
    10. '()' → logprob: -10.269403457641602

Token 70: ' integers' (ID: 54912)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.30416974425315857
    2. 'int' → logprob: -2.4291696548461914
    3. '   ' → logprob: -3.0541696548461914
    4. 'input' → logprob: -3.4291696548461914
    5. 'return' → logprob: -3.5541696548461914
    6. ' ' → logprob: -4.054169654846191
    7. ' input' → logprob: -4.304169654846191
    8. ' ()' → logprob: -4.429169654846191
    9. ' return' → logprob: -4.554169654846191
    10. '[]' → logprob: -6.304169654846191

Token 71: ' as' (ID: 472)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02829062193632126
    2. '()' → logprob: -3.6532905101776123
    3. '()*' → logprob: -6.903290748596191
    4. '(' → logprob: -8.153290748596191
    5. '*' → logprob: -8.778290748596191
    6. '():
' → logprob: -8.778290748596191
    7. ' ()' → logprob: -9.403290748596191
    8. '[]' → logprob: -9.653290748596191
    9. '()[' → logprob: -9.653290748596191
    10. ' ():' → logprob: -9.653290748596191

Token 72: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.15190500020980835
    2. ' a' → logprob: -2.276905059814453
    3. ' map' → logprob: -3.901905059814453
    4. 'list' → logprob: -4.526905059814453
    5. 'a' → logprob: -6.026905059814453
    6. '[' → logprob: -6.901905059814453
    7. ' input' → logprob: -7.026905059814453
    8. ' [' → logprob: -7.276905059814453
    9. 'map' → logprob: -7.776905059814453
    10. ' integers' → logprob: -7.776905059814453

Token 73: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20408757030963898
    2. '():' → logprob: -2.204087495803833
    3. '(' → logprob: -3.829087495803833
    4. '[]' → logprob: -4.329087734222412
    5. '()\' → logprob: -4.579087734222412
    6. '<|end|>' → logprob: -4.704087734222412
    7. '   ' → logprob: -4.954087734222412
    8. ':' → logprob: -5.829087734222412
    9. ' return' → logprob: -6.579087734222412
    10. '()[' → logprob: -6.704087734222412

Token 74: ' why' (ID: 4436)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.516210675239563
    2. ' ' → logprob: -2.0162105560302734
    3. ' return' → logprob: -2.3912105560302734
    4. '<|end|>' → logprob: -3.5162105560302734
    5. ' ()' → logprob: -3.5162105560302734
    6. 'return' → logprob: -3.6412105560302734
    7. ')' → logprob: -4.016210556030273
    8. '    ' → logprob: -4.141210556030273
    9. '[]' → logprob: -4.391210556030273
    10. '   ' → logprob: -4.391210556030273

Token 75: ' not' (ID: 625)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7278499603271484
    2. '()' → logprob: -1.2278499603271484
    3. '[]' → logprob: -2.7278499603271484
    4. '   ' → logprob: -3.1028499603271484
    5. '<|end|>' → logprob: -3.9778499603271484
    6. '  ' → logprob: -4.352849960327148
    7. ' return' → logprob: -4.602849960327148
    8. '[:]' → logprob: -4.727849960327148
    9. ' ()' → logprob: -4.852849960327148
    10. ' []' → logprob: -4.852849960327148

Token 76: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6949862837791443
    2. '():' → logprob: -1.569986343383789
    3. 'return' → logprob: -2.694986343383789
    4. '<|end|>' → logprob: -2.694986343383789
    5. ' return' → logprob: -2.819986343383789
    6. '   ' → logprob: -3.819986343383789
    7. '()
' → logprob: -4.069986343383789
    8. '
' → logprob: -4.194986343383789
    9. '[]' → logprob: -4.694986343383789
    10. '()[' → logprob: -5.319986343383789

Token 77: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7542852163314819
    2. '   ' → logprob: -1.754285216331482
    3. ' return' → logprob: -1.879285216331482
    4. 'return' → logprob: -2.0042853355407715
    5. '\n' → logprob: -3.2542853355407715
    6. '<|end|>' → logprob: -4.7542853355407715
    7. '```' → logprob: -5.7542853355407715
    8. '	return' → logprob: -5.7542853355407715
    9. '()' → logprob: -5.8792853355407715
    10. '    
' → logprob: -6.1292853355407715

Token 78: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3602716624736786
    2. ' return' → logprob: -1.360271692276001
    3. '   ' → logprob: -3.110271692276001
    4. '    ' → logprob: -7.110271453857422
    5. '	return' → logprob: -8.735271453857422
    6. ' ' → logprob: -9.110271453857422
    7. 'r' → logprob: -9.610271453857422
    8. '    
' → logprob: -9.860271453857422
    9. 'n' → logprob: -10.860271453857422
    10. '  ' → logprob: -10.985271453857422

Token 79: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.016071440652012825
    2. 'list' → logprob: -4.141071319580078
    3. ' map' → logprob: -11.016071319580078
    4. ' ' → logprob: -11.766071319580078
    5. '[' → logprob: -12.016071319580078
    6. ' [' → logprob: -12.641071319580078
    7. '[list' → logprob: -13.266071319580078
    8. 'map' → logprob: -13.891071319580078
    9. '	list' → logprob: -15.266071319580078
    10. '[]' → logprob: -15.766071319580078

Token 80: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0031794982496649027
    2. '(' → logprob: -5.753179550170898
    3. '(int' → logprob: -13.503179550170898
    4. '(
' → logprob: -16.2531795501709
    5. '	map' → logprob: -17.1281795501709
    6. '(m' → logprob: -17.1281795501709
    7. '(

' → logprob: -17.2531795501709
    8. ' map' → logprob: -17.3781795501709
    9. '((' → logprob: -18.1281795501709
    10. 'map' → logprob: -18.2531795501709

Token 81: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0016475648153573275
    2. '(' → logprob: -6.626647472381592
    3. '<|end|>' → logprob: -8.62664794921875
    4. 'int' → logprob: -10.12664794921875
    5. '<int' → logprob: -10.12664794921875
    6. '[int' → logprob: -10.25164794921875
    7. '(lambda' → logprob: -11.12664794921875
    8. ',int' → logprob: -12.87664794921875
    9. '=int' → logprob: -13.12664794921875
    10. '(str' → logprob: -13.25164794921875

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8310004472732544
    2. '(sys' → logprob: -1.3310004472732544
    3. ',input' → logprob: -1.5810004472732544
    4. '(input' → logprob: -2.956000328063965
    5. '(' → logprob: -3.706000328063965
    6. 'input' → logprob: -4.706000328063965
    7. 'sys' → logprob: -4.956000328063965
    8. ' ,' → logprob: -7.831000328063965
    9. ' sys' → logprob: -8.081000328063965
    10. ' input' → logprob: -8.331000328063965

Token 83: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3257536292076111
    2. 'sys' → logprob: -1.8257536888122559
    3. ' input' → logprob: -2.575753688812256
    4. ' sys' → logprob: -3.200753688812256
    5. '(sys' → logprob: -10.575753211975098
    6. '=sys' → logprob: -11.200753211975098
    7. '	sys' → logprob: -11.325753211975098
    8. ' ' → logprob: -11.450753211975098
    9. 'stdin' → logprob: -11.575753211975098
    10. ')' → logprob: -11.950753211975098

Token 84: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.2127087504486553e-05
    2. '()' → logprob: -10.875021934509277
    3. '()))' → logprob: -13.625021934509277
    4. ' ().' → logprob: -14.125021934509277
    5. '(' → logprob: -15.125021934509277
    6. '())' → logprob: -15.250021934509277
    7. '))' → logprob: -15.625021934509277
    8. ')' → logprob: -15.625021934509277
    9. '.' → logprob: -16.875022888183594
    10. '.readline' → logprob: -17.125022888183594

Token 85: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.023271339014172554
    2. 'strip' → logprob: -3.773271322250366
    3. 'rstrip' → logprob: -10.648271560668945
    4. ' split' → logprob: -13.773271560668945
    5. '(split' → logprob: -14.523271560668945
    6. 'read' → logprob: -15.523271560668945
    7. ')' → logprob: -16.148271560668945
    8. ' strip' → logprob: -16.273271560668945
    9. 'spl' → logprob: -16.773271560668945
    10. 's' → logprob: -18.273271560668945

Token 86: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4802330434322357
    2. '))' → logprob: -0.9802330732345581
    3. '())' → logprob: -5.980233192443848
    4. '()' → logprob: -5.980233192443848
    5. ')' → logprob: -7.105233192443848
    6. '(' → logprob: -9.105233192443848
    7. ')))' → logprob: -9.230233192443848
    8. '())))' → logprob: -10.605233192443848
    9. '()))
' → logprob: -11.230233192443848
    10. '()));' → logprob: -12.355233192443848

Token 87: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11638285964727402
    2. '
' → logprob: -2.3663828372955322
    3. '\' → logprob: -4.866383075714111
    4. '\n' → logprob: -5.116383075714111
    5. '' → logprob: -7.491383075714111
    6. 'd' → logprob: -7.866383075714111
    7. 'class' → logprob: -8.241382598876953
    8. '

' → logprob: -8.366382598876953
    9. '  
' → logprob: -8.366382598876953
    10. '    
' → logprob: -8.741382598876953

Token 88: ' m' (ID: 284)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4071804285049438
    2. ' s' → logprob: -1.7821804285049438
    3. ' main' → logprob: -2.2821803092956543
    4. ' ' → logprob: -2.2821803092956543
    5. '_' → logprob: -2.6571803092956543
    6. 'r' → logprob: -2.7821803092956543
    7. '(' → logprob: -2.9071803092956543
    8. ' n' → logprob: -3.4071803092956543
    9. ' ()' → logprob: -3.5321803092956543
    10. ' r' → logprob: -3.6571803092956543

Token 89: '():
' (ID: 8595)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.03224022313952446
    2. 'ain' → logprob: -4.032240390777588
    3. 'a' → logprob: -4.782240390777588
    4. '()' → logprob: -6.782240390777588
    5. 'ult' → logprob: -6.782240390777588
    6. 'ean' → logprob: -6.782240390777588
    7. '():' → logprob: -7.157240390777588
    8. 'ai' → logprob: -8.78223991394043
    9. 'e' → logprob: -9.03223991394043
    10. 'in' → logprob: -9.15723991394043

Token 90: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.2704589366912842
    2. ' ' → logprob: -1.3954589366912842
    3. '   ' → logprob: -2.270458936691284
    4. '()' → logprob: -2.520458936691284
    5. 'int' → logprob: -2.645458936691284
    6. ' return' → logprob: -2.645458936691284
    7. '(' → logprob: -3.270458936691284
    8. '    ' → logprob: -3.520458936691284
    9. '  ' → logprob: -3.770458936691284
    10. '(int' → logprob: -4.270459175109863

Token 91: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.017512911930680275
    2. ' return' → logprob: -4.642512798309326
    3. 'int' → logprob: -5.017512798309326
    4. 'map' → logprob: -7.392512798309326
    5. '#' (adapté à ' #') → logprob: -8.267513275146484
    6. '   ' → logprob: -9.017513275146484
    7. '[int' → logprob: -11.142513275146484
    8. ' int' → logprob: -11.142513275146484
    9. ' map' → logprob: -11.267513275146484
    10. ' ' → logprob: -11.392513275146484

Token 92: ' splitting' (ID: 87130)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.45379289984703064
    2. 'def' → logprob: -2.5787928104400635
    3. ' reads' → logprob: -2.5787928104400635
    4. 'reads' → logprob: -2.5787928104400635
    5. '#' → logprob: -2.9537928104400635
    6. 'return' → logprob: -3.5787928104400635
    7. 'read' → logprob: -4.328793048858643
    8. 'Reads' → logprob: -5.078793048858643
    9. '(' → logprob: -5.203793048858643
    10. 'returns' → logprob: -5.328793048858643

Token 93: ' input' (ID: 3422)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.028407542034983635
    2. 'input' → logprob: -3.778407573699951
    3. ' input' → logprob: -6.028407573699951
    4. ')' → logprob: -7.653407573699951
    5. 'def' → logprob: -7.653407573699951
    6. '(' → logprob: -8.028407096862793
    7. 'lines' → logprob: -8.528407096862793
    8. 'the' → logprob: -8.903407096862793
    9. '();' → logprob: -9.403407096862793
    10. ' =' → logprob: -9.403407096862793

Token 94: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04415378347039223
    2. '().' → logprob: -3.2941536903381348
    3. '(' → logprob: -6.294153690338135
    4. ')' → logprob: -6.294153690338135
    5. '())' → logprob: -7.544153690338135
    6. '()[' → logprob: -7.794153690338135
    7. '.' → logprob: -7.919153690338135
    8. ' ()' → logprob: -8.044154167175293
    9. '('' → logprob: -9.169154167175293
    10. '('.')' → logprob: -9.294154167175293

Token 95: ' does' (ID: 2226)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.6057627201080322
    2. 'return' → logprob: -1.7307627201080322
    3. 'input' → logprob: -1.8557627201080322
    4. ' ' → logprob: -2.2307627201080322
    5. ' input' → logprob: -2.3557627201080322
    6. '()' → logprob: -3.1057627201080322
    7. 'lambda' → logprob: -3.2307627201080322
    8. 'int' → logprob: -3.6057627201080322
    9. ' lambda' → logprob: -3.7307627201080322
    10. 'split' → logprob: -4.355762481689453

Token 96: ' the' (ID: 290)
  Prédit: 'n't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n't' → logprob: -0.43626949191093445
    2. ' not' → logprob: -1.8112695217132568
    3. 'n' → logprob: -2.436269521713257
    4. 'not' → logprob: -2.561269521713257
    5. ' the' → logprob: -4.936269283294678
    6. 'input' → logprob: -5.061269283294678
    7. ' input' → logprob: -5.561269283294678
    8. 'nt' → logprob: -6.436269283294678
    9. 'the' → logprob: -6.561269283294678
    10. 'return' → logprob: -7.061269283294678

Token 97: ' job' (ID: 3349)
  Prédit: ' same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' same' → logprob: -1.0167418718338013
    2. 'return' → logprob: -1.3917418718338013
    3. 'same' → logprob: -1.3917418718338013
    4. 'job' → logprob: -3.0167417526245117
    5. ' job' → logprob: -3.2667417526245117
    6. ' return' → logprob: -3.8917417526245117
    7. 'not' → logprob: -4.891741752624512
    8. 'split' → logprob: -5.141741752624512
    9. ' not' → logprob: -5.891741752624512
    10. 'input' → logprob: -5.891741752624512

Token 98: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009026490151882172
    2. ')' → logprob: -5.634026527404785
    3. '()
' → logprob: -6.009026527404785
    4. ' ()' → logprob: -6.634026527404785
    5. '<|end|>' → logprob: -7.759026527404785
    6. 'return' → logprob: -8.134026527404785
    7. '   ' → logprob: -8.509026527404785
    8. '.' → logprob: -9.509026527404785
    9. '(' → logprob: -9.509026527404785
    10. '():' → logprob: -9.759026527404785

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049678608775138855
    2. 'return' → logprob: -3.7996785640716553
    3. ' return' → logprob: -3.7996785640716553
    4. ' ' → logprob: -6.549678802490234
    5. '()' → logprob: -6.799678802490234
    6. '    ' → logprob: -7.424678802490234
    7. '```' → logprob: -8.799678802490234
    8. ')' → logprob: -9.424678802490234
    9. '<|end|>' → logprob: -9.424678802490234
    10. '    
' → logprob: -9.799678802490234

Token 100: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007078475318849087
    2. ' return' → logprob: -5.007078647613525
    3. 'input' → logprob: -8.257078170776367
    4. '   ' → logprob: -9.382078170776367
    5. '_' → logprob: -12.257078170776367
    6. ' input' → logprob: -12.382078170776367
    7. ' ' → logprob: -12.507078170776367
    8. 's' → logprob: -13.257078170776367
    9. 'str' → logprob: -14.257078170776367
    10. '	return' → logprob: -14.632078170776367

Token 101: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.007663528434932232
    2. ' input' → logprob: -4.882663726806641
    3. 'map' → logprob: -10.50766372680664
    4. 'list' → logprob: -11.75766372680664
    5. 'int' → logprob: -12.00766372680664
    6. '[input' → logprob: -12.00766372680664
    7. 'str' → logprob: -12.38266372680664
    8. 'sys' → logprob: -13.38266372680664
    9. '(input' → logprob: -13.88266372680664
    10. 'tuple' → logprob: -14.38266372680664

Token 102: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0021924946922808886
    2. '(' → logprob: -6.127192497253418
    3. '(input' → logprob: -12.502192497253418
    4. '(str' → logprob: -13.002192497253418
    5. ' (' → logprob: -15.002192497253418
    6. '(lambda' → logprob: -15.002192497253418
    7. 'int' → logprob: -15.252192497253418
    8. '(
' → logprob: -16.0021915435791
    9. '<int' → logprob: -16.1271915435791
    10. '=int' → logprob: -16.3771915435791

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011781004257500172
    2. ',input' → logprob: -4.511781215667725
    3. '(input' → logprob: -7.886781215667725
    4. ' ,' → logprob: -8.386780738830566
    5. '(' → logprob: -9.886780738830566
    6. 'input' → logprob: -10.011780738830566
    7. ' (' → logprob: -10.886780738830566
    8. ')' → logprob: -11.511780738830566
    9. ' input' → logprob: -13.386780738830566
    10. '   ' → logprob: -14.386780738830566

Token 104: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759640336036682
    2. 'input' → logprob: -0.8259640336036682
    3. ')' → logprob: -11.200963973999023
    4. ' ' → logprob: -12.200963973999023
    5. '(input' → logprob: -12.825963973999023
    6. ',input' → logprob: -14.200963973999023
    7. '=input' → logprob: -14.325963973999023
    8. '   ' → logprob: -14.450963973999023
    9. '	input' → logprob: -14.825963973999023
    10. ' )' → logprob: -15.575963973999023

Token 105: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002528575947508216
    2. '()' → logprob: -6.002528667449951
    3. '(' → logprob: -10.377528190612793
    4. ' ().' → logprob: -11.127528190612793
    5. '.' → logprob: -12.752528190612793
    6. ' ' → logprob: -13.502528190612793
    7. ')' → logprob: -13.877528190612793
    8. ' ()' → logprob: -14.252528190612793
    9. '   ' → logprob: -15.002528190612793
    10. '()
' → logprob: -15.627528190612793

Token 106: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.1008713702030946e-06
    2. ' split' → logprob: -13.250001907348633
    3. 'strip' → logprob: -15.625001907348633
    4. ')' → logprob: -16.375001907348633
    5. '(split' → logprob: -16.750001907348633
    6. 'plit' → logprob: -18.000001907348633
    7. 'spl' → logprob: -18.125001907348633
    8. '.split' → logprob: -19.625001907348633
    9. 'rstrip' → logprob: -19.625001907348633
    10. '_split' → logprob: -20.000001907348633

Token 107: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.14204041659832
    2. ')' → logprob: -2.142040491104126
    3. '()' → logprob: -4.642040252685547
    4. '))' → logprob: -5.392040252685547
    5. '()))' → logprob: -7.142040252685547
    6. ' ())' → logprob: -11.642040252685547
    7. '())
' → logprob: -12.392040252685547
    8. '(' → logprob: -13.267040252685547
    9. ' )' → logprob: -14.392040252685547
    10. '()
' → logprob: -15.392040252685547

Token 108: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013298108242452145
    2. '
' → logprob: -4.638298034667969
    3. '\' → logprob: -6.888298034667969
    4. '```' → logprob: -7.138298034667969
    5. '#' → logprob: -7.763298034667969
    6. 'd' → logprob: -8.013298034667969
    7. '\n' → logprob: -8.263298034667969
    8. '    
' → logprob: -8.638298034667969
    9. '  
' → logprob: -9.138298034667969
    10. ' 
' → logprob: -9.388298034667969

Token 109: ' get' (ID: 717)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.258074402809143
    2. ' n' → logprob: -1.633074402809143
    3. 'n' → logprob: -1.758074402809143
    4. 's' → logprob: -2.7580742835998535
    5. ' r' → logprob: -2.7580742835998535
    6. ' s' → logprob: -3.0080742835998535
    7. ' main' → logprob: -3.6330742835998535
    8. ' ' → logprob: -4.1330742835998535
    9. 'i' → logprob: -4.2580742835998535
    10. '_' → logprob: -4.5080742835998535

Token 110: '_one' (ID: 26979)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.9998284578323364
    2. '_max' → logprob: -2.374828338623047
    3. '_list' → logprob: -2.624828338623047
    4. '_array' → logprob: -2.624828338623047
    5. '_' → logprob: -2.999828338623047
    6. '_indices' → logprob: -2.999828338623047
    7. '_int' → logprob: -3.374828338623047
    8. '_next' → logprob: -3.874828338623047
    9. '_num' → logprob: -3.874828338623047
    10. '_count' → logprob: -3.999828338623047

Token 111: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.36660751700401306
    2. '()' → logprob: -1.7416075468063354
    3. '_' → logprob: -3.241607427597046
    4. '_line' → logprob: -3.866607427597046
    5. '_word' → logprob: -3.991607427597046
    6. '_item' → logprob: -4.866607666015625
    7. '_int' → logprob: -5.116607666015625
    8. '_token' → logprob: -5.241607666015625
    9. '_input' → logprob: -5.491607666015625
    10. '_element' → logprob: -5.616607666015625

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01397591084241867
    2. '():' → logprob: -4.513976097106934
    3. ':' → logprob: -6.388976097106934
    4. '():
' → logprob: -7.263976097106934
    5. '()' → logprob: -8.013976097106934
    6. ':
' → logprob: -9.888976097106934
    7. '    
' → logprob: -10.138976097106934
    8. '    ' → logprob: -11.013976097106934
    9. 'input' → logprob: -11.138976097106934
    10. ':return' → logprob: -11.263976097106934

Token 113: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.017957091331482
    2. 'return' (adapté à ' return') → logprob: -1.142957091331482
    3. '   ' → logprob: -1.142957091331482
    4. 'n' → logprob: -8.267956733703613
    5. '	return' → logprob: -8.892956733703613
    6. ' n' → logprob: -9.267956733703613
    7. 'int' → logprob: -9.517956733703613
    8. '    ' → logprob: -9.642956733703613
    9. '    
' → logprob: -9.767956733703613
    10. 'x' → logprob: -9.767956733703613

Token 114: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3157757520675659
    2. 'int' → logprob: -1.315775752067566
    3. ' ' → logprob: -7.1907758712768555
    4. ' l' → logprob: -7.4407758712768555
    5. ' next' → logprob: -8.065775871276855
    6. '1' → logprob: -8.190775871276855
    7. ' m' → logprob: -8.440775871276855
    8. 'l' → logprob: -9.315775871276855
    9. 'm' → logprob: -9.940775871276855
    10. ' input' → logprob: -10.065775871276855

Token 115: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008658897131681442
    2. '(' → logprob: -4.7586588859558105
    3. 'input' → logprob: -10.633659362792969
    4. ' (' → logprob: -11.258659362792969
    5. '()' → logprob: -12.258659362792969
    6. '(
' → logprob: -14.383659362792969
    7. '(sys' → logprob: -14.758659362792969
    8. '(in' → logprob: -14.883659362792969
    9. '(inp' → logprob: -15.133659362792969
    10. '((' → logprob: -15.258659362792969

Token 116: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0010057775070890784
    2. '()' → logprob: -7.00100564956665
    3. ' ())' → logprob: -9.626006126403809
    4. '()))' → logprob: -11.001006126403809
    5. '().' → logprob: -11.626006126403809
    6. ')' → logprob: -14.001006126403809
    7. '(' → logprob: -14.251006126403809
    8. '();)' → logprob: -15.001006126403809
    9. '()]' → logprob: -15.376006126403809
    10. '())
' → logprob: -15.501006126403809

Token 117: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0076220110058784485
    2. '
' → logprob: -5.507622241973877
    3. '\' → logprob: -7.007622241973877
    4. 'n' → logprob: -7.257622241973877
    5. '\n' → logprob: -7.382622241973877
    6. '<|end|>' → logprob: -8.007621765136719
    7. '#' → logprob: -8.257621765136719
    8. '  
' → logprob: -9.132621765136719
    9. 'for' → logprob: -9.132621765136719
    10. 'd' → logprob: -9.507621765136719

Token 118: ' s' (ID: 265)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.412640243768692
    2. ' solve' → logprob: -1.9126402139663696
    3. ' get' → logprob: -2.787640333175659
    4. '_' → logprob: -2.787640333175659
    5. 'solve' → logprob: -4.28764009475708
    6. ' s' → logprob: -4.53764009475708
    7. ' l' → logprob: -4.91264009475708
    8. 'main' → logprob: -5.16264009475708
    9. 's' → logprob: -5.78764009475708
    10. ' ' → logprob: -6.66264009475708

Token 119: '(x' (ID: 4061)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.19729630649089813
    2. 'trip' → logprob: -2.322296380996704
    3. 'tring' → logprob: -3.322296380996704
    4. '()' → logprob: -3.697296380996704
    5. 'plit' → logprob: -4.822296142578125
    6. '():' → logprob: -4.947296142578125
    7. 'canf' → logprob: -6.447296142578125
    8. 'tri' → logprob: -6.947296142578125
    9. 'olve' → logprob: -8.072296142578125
    10. 'afe' → logprob: -8.072296142578125

Token 120: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004612757358700037
    2. ':' → logprob: -6.379612922668457
    3. ')' → logprob: -6.629612922668457
    4. ' ):' → logprob: -7.379612922668457
    5. '):
' → logprob: -7.379612922668457
    6. ')):' → logprob: -8.754612922668457
    7. ':str' → logprob: -9.254612922668457
    8. '[' → logprob: -11.004612922668457
    9. '.split' → logprob: -11.879612922668457
    10. '))' → logprob: -11.879612922668457

Token 121: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5832902193069458
    2. ' return' → logprob: -0.8332902193069458
    3. '   ' → logprob: -5.583290100097656
    4. 'eturn' → logprob: -6.958290100097656
    5. '
' → logprob: -7.458290100097656
    6. ' ' → logprob: -7.458290100097656
    7. '	return' → logprob: -7.708290100097656
    8. ' 
' → logprob: -8.583290100097656
    9. 'x' → logprob: -8.583290100097656
    10. '    ' → logprob: -8.583290100097656

Token 122: ' run' (ID: 2461)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10265637934207916
    2. ' return' → logprob: -2.352656364440918
    3. '   ' → logprob: -6.477656364440918
    4. '
' → logprob: -7.477656364440918
    5. '#' → logprob: -9.102656364440918
    6. '"""' → logprob: -9.477656364440918
    7. 'eturn' → logprob: -10.352656364440918
    8. '	return' → logprob: -10.727656364440918
    9. 'def' → logprob: -10.977656364440918
    10. ' ' → logprob: -11.102656364440918

Token 123: '-length' (ID: 53970)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.8950684070587158
    2. 'ge' → logprob: -1.3950684070587158
    3. 'g' → logprob: -2.895068407058716
    4. 'sum' → logprob: -3.020068407058716
    5. 'len' → logprob: -3.395068407058716
    6. 'def' → logprob: -3.395068407058716
    7. '(' → logprob: -3.895068407058716
    8. '(len' → logprob: -4.020068168640137
    9. 'x' → logprob: -4.270068168640137
    10. 'return' → logprob: -4.520068168640137

Token 124: ' encoding' (ID: 24072)
  Prédit: '_encode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_encode' → logprob: -0.5372382402420044
    2. 'encode' → logprob: -1.5372382402420044
    3. 'encoding' → logprob: -1.7872382402420044
    4. ' encoding' → logprob: -4.287238121032715
    5. '_encoding' → logprob: -4.787238121032715
    6. 'encoded' → logprob: -5.287238121032715
    7. ' encode' → logprob: -5.787238121032715
    8. 's' → logprob: -7.037238121032715
    9. 'decode' → logprob: -7.162238121032715
    10. ' encoded' → logprob: -7.787238121032715

Token 125: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15541887283325195
    2. '(x' → logprob: -2.030418872833252
    3. ':' → logprob: -4.905418872833252
    4. '(s' → logprob: -5.655418872833252
    5. ' (' → logprob: -7.530418872833252
    6. ' :' → logprob: -8.155418395996094
    7. '(
' → logprob: -8.280418395996094
    8. '):' → logprob: -9.155418395996094
    9. ',' → logprob: -9.280418395996094
    10. '(lst' → logprob: -9.780418395996094

Token 126: ' sort' (ID: 4506)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5030628442764282
    2. ' result' → logprob: -2.5030627250671387
    3. 'def' → logprob: -3.1280627250671387
    4. 'result' → logprob: -3.2530627250671387
    5. 'res' → logprob: -3.3780627250671387
    6. ' prev' → logprob: -3.3780627250671387
    7. ' from' → logprob: -3.8780627250671387
    8. '[]' → logprob: -3.8780627250671387
    9. ' []' → logprob: -4.003062725067139
    10. ' ' → logprob: -4.003062725067139

Token 127: ' of' (ID: 328)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.14617490768432617
    2. 's' → logprob: -3.146174907684326
    3. 'def' → logprob: -3.271174907684326
    4. ')' → logprob: -4.521174907684326
    5. '(' → logprob: -5.146174907684326
    6. '(x' → logprob: -5.146174907684326
    7. 'ing' → logprob: -5.646174907684326
    8. ',' → logprob: -6.271174907684326
    9. 'x' → logprob: -6.646174907684326
    10. '
' → logprob: -6.646174907684326

Token 128: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0986054316163063
    2. ':' → logprob: -3.7236053943634033
    3. '(x' → logprob: -3.8486053943634033
    4. '(
' → logprob: -3.9736053943634033
    5. ' (' → logprob: -4.723605632781982
    6. '(s' → logprob: -5.848605632781982
    7. ' :' → logprob: -5.848605632781982
    8. ' ' → logprob: -6.223605632781982
    9. ':
' → logprob: -6.223605632781982
    10. ')' → logprob: -6.723605632781982

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1613045930862427
    2. ' =' → logprob: -2.286304473876953
    3. ' result' → logprob: -2.536304473876953
    4. ' res' → logprob: -2.661304473876953
    5. '[]' → logprob: -2.911304473876953
    6. 'result' → logprob: -3.411304473876953
    7. ' []' → logprob: -3.411304473876953
    8. '    ' → logprob: -3.536304473876953
    9. ' ' → logprob: -3.661304473876953
    10. 'res' → logprob: -3.661304473876953

Token 130: ' result' (ID: 1534)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.6334993839263916
    2. 'res' → logprob: -1.2584993839263916
    3. '[]' → logprob: -3.6334993839263916
    4. '   ' → logprob: -3.7584993839263916
    5. 'result' (adapté à ' result') → logprob: -3.8834993839263916
    6. ' ' → logprob: -4.1334991455078125
    7. 'ret' → logprob: -4.3834991455078125
    8. 'ans' → logprob: -4.5084991455078125
    9. ' result' → logprob: -4.5084991455078125
    10. ' if' → logprob: -4.7584991455078125

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09519115090370178
    2. '=' → logprob: -2.470191240310669
    3. '=[]' → logprob: -5.22019100189209
    4. ',' → logprob: -8.09519100189209
    5. ' ' → logprob: -8.47019100189209
    6. '[' → logprob: -9.84519100189209
    7. '=[]
' → logprob: -9.97019100189209
    8. ' []' → logprob: -9.97019100189209
    9. ' =[' → logprob: -9.97019100189209
    10. '[]' → logprob: -10.59519100189209

Token 132: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5278803706169128
    2. ' []' → logprob: -1.5278804302215576
    3. '[]
' → logprob: -2.2778804302215576
    4. ' []
' → logprob: -2.4028804302215576
    5. ' [(' → logprob: -9.777880668640137
    6. ' []
' → logprob: -10.277880668640137
    7. '[(' → logprob: -10.527880668640137
    8. '[' → logprob: -11.277880668640137
    9. '[]

' → logprob: -11.277880668640137
    10. ' [' → logprob: -11.652880668640137

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4403119385242462
    2. ' if' → logprob: -1.4403119087219238
    3. ' last' → logprob: -3.690311908721924
    4. ' prev' → logprob: -4.190311908721924
    5. ' i' → logprob: -4.440311908721924
    6. 'count' → logprob: -4.690311908721924
    7. 'if' → logprob: -4.690311908721924
    8. ' current' → logprob: -4.815311908721924
    9. ' count' → logprob: -4.940311908721924
    10. ' cur' → logprob: -4.940311908721924

Token 134: ' curr' (ID: 10495)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.733617901802063
    2. ' if' → logprob: -2.1086177825927734
    3. 'prev' → logprob: -2.2336177825927734
    4. 'i' → logprob: -2.6086177825927734
    5. 'count' → logprob: -2.7336177825927734
    6. 'last' → logprob: -3.3586177825927734
    7. 'cur' → logprob: -3.6086177825927734
    8. 'cnt' → logprob: -3.7336177825927734
    9. ' prev' → logprob: -4.108617782592773
    10. ' last' → logprob: -4.858617782592773

Token 135: ' =' (ID: 314)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -1.0963832139968872
    2. '=' → logprob: -1.7213832139968872
    3. ' =' → logprob: -1.7213832139968872
    4. '_count' → logprob: -2.2213830947875977
    5. '_val' → logprob: -2.2213830947875977
    6. '_len' → logprob: -2.9713830947875977
    7. 'count' → logprob: -4.971383094787598
    8. ',' → logprob: -5.346383094787598
    9. '_ch' → logprob: -5.471383094787598
    10. '_length' → logprob: -5.596383094787598

Token 136: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6378411650657654
    2. 'None' → logprob: -0.8878411650657654
    3. ' None' → logprob: -3.88784122467041
    4. '(x' → logprob: -4.51284122467041
    5. '(None' → logprob: -4.63784122467041
    6. ' x' → logprob: -5.26284122467041
    7. '(' → logprob: -5.76284122467041
    8. '1' → logprob: -5.88784122467041
    9. '[' → logprob: -6.26284122467041
    10. ' (' → logprob: -6.38784122467041

Token 137: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.027392927557229996
    2. ' =' → logprob: -4.777392864227295
    3. '   ' → logprob: -5.402392864227295
    4. ' ' → logprob: -5.652392864227295
    5. '
' → logprob: -5.777392864227295
    6. '=' → logprob: -6.027392864227295
    7. '1' → logprob: -6.652392864227295
    8. 'count' → logprob: -7.027392864227295
    9. ',' → logprob: -7.152392864227295
    10. '(' → logprob: -7.527392864227295

Token 138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.707997428951785e-05
    2. ' ' → logprob: -9.500077247619629
    3. ':' → logprob: -14.500077247619629
    4. '[' → logprob: -14.500077247619629
    5. '   ' → logprob: -14.625077247619629
    6. '
' → logprob: -15.125077247619629
    7. '  ' → logprob: -16.937576293945312
    8. ',' → logprob: -17.000076293945312
    9. '-' → logprob: -17.187576293945312
    10. ' :' → logprob: -17.375076293945312

Token 139: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037670666351914406
    2. ' ,' → logprob: -6.128767013549805
    3. '   ' → logprob: -7.003767013549805
    4. '
' → logprob: -8.003767013549805
    5. ',count' → logprob: -8.628767013549805
    6. ' ' → logprob: -9.503767013549805
    7. ',
' → logprob: -10.628767013549805
    8. ',c' → logprob: -11.378767013549805
    9. 'count' → logprob: -11.753767013549805
    10. '  ' → logprob: -12.378767013549805

Token 140: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7145568132400513
    2. ' count' → logprob: -1.5895568132400513
    3. 'count' → logprob: -1.9645568132400513
    4. ' ,' → logprob: -2.5895566940307617
    5. ',count' → logprob: -2.7145566940307617
    6. ',
' → logprob: -4.589556694030762
    7. '<|end|>' → logprob: -4.714556694030762
    8. 'cnt' → logprob: -6.589556694030762
    9. ' ,
' → logprob: -7.089556694030762
    10. ' ' → logprob: -7.339556694030762

Token 141: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.6448116302490234
    2. 'cnt' → logprob: -1.3948116302490234
    3. ' count' → logprob: -2.2698116302490234
    4. '1' → logprob: -2.2698116302490234
    5. ' cnt' → logprob: -4.019811630249023
    6. ' ' → logprob: -6.394811630249023
    7. 'curr' → logprob: -7.269811630249023
    8. ' curr' → logprob: -8.769811630249023
    9. 'c' → logprob: -9.394811630249023
    10. '   ' → logprob: -10.269811630249023

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132786154747009
    2. '=' → logprob: -1.3132786750793457
    3. ' ' → logprob: -11.063278198242188
    4. 's' → logprob: -14.938278198242188
    5. '<|end|>' → logprob: -14.938278198242188
    6. '1' → logprob: -15.813278198242188
    7. ',' → logprob: -16.063278198242188
    8. ' =
' → logprob: -16.188278198242188
    9. '0' → logprob: -16.188278198242188
    10. '=int' → logprob: -17.063278198242188

Token 143: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00542122358456254
    2. ' ' → logprob: -5.380421161651611
    3. '0' → logprob: -7.130421161651611
    4. '<|end|>' → logprob: -15.50542163848877
    5. '```' → logprob: -18.942920684814453
    6. '   ' → logprob: -19.317920684814453
    7. '' → logprob: -19.630420684814453
    8. '  ' → logprob: -19.692920684814453
    9. ' ' → logprob: -20.130420684814453
    10. '<|end|>' → logprob: -20.130420684814453

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016992862219922245
    2. '0' → logprob: -8.75016975402832
    3. ' ' → logprob: -11.37516975402832
    4. '' → logprob: -20.25016975402832
    5. '```' → logprob: -20.43766975402832
    6. '   ' → logprob: -21.00016975402832
    7. '<|end|>' → logprob: -21.06266975402832
    8. '`' → logprob: -21.75016975402832
    9. '  ' → logprob: -21.87516975402832
    10. '=' → logprob: -21.93766975402832

Token 145: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.4954147934913635
    2. '<|end|>' → logprob: -1.8704147338867188
    3. '
' → logprob: -2.6204147338867188
    4. ' ' → logprob: -2.7454147338867188
    5. ' for' → logprob: -2.9954147338867188
    6. '  
' → logprob: -3.6204147338867188
    7. '   ' → logprob: -4.995414733886719
    8. '   
' → logprob: -5.870414733886719
    9. 'for' → logprob: -6.120414733886719
    10. '<|end|>' → logprob: -6.370414733886719

Token 146: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5625085830688477
    2. '
' → logprob: -1.4375085830688477
    3. ' 
' → logprob: -2.0625085830688477
    4. '<|end|>' → logprob: -3.1875085830688477
    5. 'for' → logprob: -4.312508583068848
    6. ' ' → logprob: -5.562508583068848
    7. '  
' → logprob: -6.187508583068848
    8. '   ' → logprob: -6.312508583068848
    9. '\n' → logprob: -6.812508583068848
    10. '<|end|>' → logprob: -7.562508583068848

Token 147: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5763200521469116
    2. ' for' → logprob: -0.8263200521469116
    3. '
' → logprob: -8.076319694519043
    4. ' 
' → logprob: -10.201319694519043
    5. '	for' → logprob: -10.826319694519043
    6. ' ' → logprob: -12.201319694519043
    7. '```' → logprob: -12.201319694519043
    8. 'i' → logprob: -13.826319694519043
    9. 'n' → logprob: -14.451319694519043
    10. '\n' → logprob: -15.451319694519043

Token 148: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.019808439537882805
    2. 'i' → logprob: -4.394808292388916
    3. ' c' → logprob: -5.019808292388916
    4. 'c' → logprob: -8.394808769226074
    5. 'ch' → logprob: -9.144808769226074
    6. ' ch' → logprob: -9.144808769226074
    7. ' v' → logprob: -9.769808769226074
    8. ' ' → logprob: -9.894808769226074
    9. ' char' → logprob: -10.144808769226074
    10. ' e' → logprob: -11.019808769226074

Token 149: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03797641769051552
    2. 'in' → logprob: -3.4129765033721924
    3. ' ' → logprob: -5.912976264953613
    4. ',' → logprob: -6.662976264953613
    5. '	in' → logprob: -8.537976264953613
    6. ' ,' → logprob: -9.412976264953613
    7. '1' → logprob: -11.162976264953613
    8. ',in' → logprob: -11.287976264953613
    9. '  ' → logprob: -11.412976264953613
    10. '+' → logprob: -11.537976264953613

Token 150: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759396553039551
    2. ' range' → logprob: -0.8259396553039551
    3. '	range' → logprob: -15.825939178466797
    4. ' ' → logprob: -16.575939178466797
    5. ' xrange' → logprob: -16.575939178466797
    6. 'x' → logprob: -17.825939178466797
    7. '(range' → logprob: -18.200939178466797
    8. '   ' → logprob: -19.200939178466797
    9. '  ' → logprob: -19.575939178466797
    10. ' x' → logprob: -19.825939178466797

Token 151: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003189478302374482
    2. '1' → logprob: -5.753189563751221
    3. '(len' → logprob: -11.628189086914062
    4. ' (' → logprob: -13.628189086914062
    5. '   ' → logprob: -14.128189086914062
    6. 'len' → logprob: -14.253189086914062
    7. ' ' → logprob: -14.878189086914062
    8. '    ' → logprob: -18.753189086914062
    9. ' len' → logprob: -19.503189086914062
    10. '(
' → logprob: -19.753189086914062

Token 152: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.000320565392030403
    2. '(curr' → logprob: -8.500320434570312
    3. '(' → logprob: -9.375320434570312
    4. 'x' → logprob: -10.375320434570312
    5. 'curr' → logprob: -15.000320434570312
    6. ' x' → logprob: -15.125320434570312
    7. ' (' → logprob: -15.875320434570312
    8. '1' → logprob: -15.875320434570312
    9. ' ' → logprob: -16.125320434570312
    10. '(current' → logprob: -16.750320434570312

Token 153: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7118598222732544
    2. ' -' → logprob: -1.8368598222732544
    3. '-' → logprob: -1.9618598222732544
    4. ')-' → logprob: -2.336859703063965
    5. '(x' → logprob: -3.211859703063965
    6. '1' → logprob: -3.711859703063965
    7. ' ' → logprob: -3.711859703063965
    8. '(' → logprob: -4.461859703063965
    9. '):' → logprob: -5.711859703063965
    10. '   ' → logprob: -6.211859703063965

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '0' → logprob: -18.125431060791016
    4. '   ' → logprob: -18.250431060791016
    5. '۱' → logprob: -18.375431060791016
    6. '<|end|>' → logprob: -18.375431060791016
    7. '```' → logprob: -18.562931060791016
    8. '' → logprob: -18.750431060791016
    9. '１' → logprob: -19.187931060791016
    10. ' one' → logprob: -19.250431060791016

Token 155: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008920041844248772
    2. '):
' → logprob: -5.008920192718506
    3. ' ):' → logprob: -6.133920192718506
    4. '):
' → logprob: -11.008919715881348
    5. ' ):
' → logprob: -11.258919715881348
    6. ':' → logprob: -13.133919715881348
    7. '):

' → logprob: -14.258919715881348
    8. ')' → logprob: -14.383919715881348
    9. '():' → logprob: -14.883919715881348
    10. ' ' → logprob: -15.133919715881348

Token 156: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04878277704119682
    2. '   ' → logprob: -3.1737828254699707
    3. ' ' → logprob: -5.798782825469971
    4. 'if' (adapté à ' if') → logprob: -6.298782825469971
    5. '    ' → logprob: -7.673782825469971
    6. '       ' → logprob: -8.923782348632812
    7. '	if' → logprob: -9.298782348632812
    8. '1' → logprob: -9.673782348632812
    9. '  ' → logprob: -10.548782348632812
    10. ' x' → logprob: -11.423782348632812

Token 158: ' curr' (ID: 10495)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.018154388293623924
    2. 'x' → logprob: -4.018154621124268
    3. ' ' → logprob: -13.26815414428711
    4. '	x' → logprob: -13.39315414428711
    5. ' ' → logprob: -14.76815414428711
    6. ' curr' → logprob: -15.01815414428711
    7. '(x' → logprob: -15.26815414428711
    8. 'curr' → logprob: -15.89315414428711
    9. '    ' → logprob: -16.26815414428711
    10. '   ' → logprob: -16.89315414428711

Token 159: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03385211527347565
    2. '==' → logprob: -3.4088521003723145
    3. ' ' → logprob: -8.658852577209473
    4. ' !=' → logprob: -10.533852577209473
    5. '=' → logprob: -13.408852577209473
    6. '!=' → logprob: -13.658852577209473
    7. ' ' → logprob: -13.783852577209473
    8. ')==' → logprob: -14.783852577209473
    9. ' =' → logprob: -14.908852577209473
    10. '	' → logprob: -15.033852577209473

Token 160: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16022595763206482
    2. ' x' → logprob: -1.9102259874343872
    3. '	x' → logprob: -13.535225868225098
    4. ' ' → logprob: -14.910225868225098
    5. '(x' → logprob: -17.035226821899414
    6. '   ' → logprob: -17.285226821899414
    7. '>x' → logprob: -17.285226821899414
    8. ')x' → logprob: -17.535226821899414
    9. ''x' → logprob: -18.410226821899414
    10. '$x' → logprob: -18.410226821899414

Token 161: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0001322639436693862
    2. '[' → logprob: -9.00013256072998
    3. ' [' → logprob: -12.00013256072998
    4. '   ' → logprob: -13.87513256072998
    5. '[
' → logprob: -14.50013256072998
    6. '[i' → logprob: -15.00013256072998
    7. '```' → logprob: -15.87513256072998
    8. '[id' → logprob: -16.125131607055664
    9. 'idx' → logprob: -16.625131607055664
    10. '(idx' → logprob: -16.750131607055664

Token 162: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009763998910784721
    2. ' +' → logprob: -4.634764194488525
    3. ']' → logprob: -12.759763717651367
    4. ']+' → logprob: -13.009763717651367
    5. '1' → logprob: -13.759763717651367
    6. '   ' → logprob: -14.009763717651367
    7. ' ' → logprob: -14.134763717651367
    8. ' plus' → logprob: -16.259763717651367
    9. '+
' → logprob: -17.509763717651367
    10. '    ' → logprob: -17.509763717651367

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.612634362885728e-05
    2. ' ' → logprob: -10.125076293945312
    3. ']' → logprob: -10.375076293945312
    4. ']:' → logprob: -13.375076293945312
    5. '```' → logprob: -13.875076293945312
    6. ']:
' → logprob: -14.375076293945312
    7. 'idx' → logprob: -14.500076293945312
    8. '   ' → logprob: -15.000076293945312
    9. '  ' → logprob: -15.875076293945312
    10. '0' → logprob: -16.125076293945312

Token 164: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1400720626115799
    2. ':' → logprob: -2.1400721073150635
    3. '):
' → logprob: -4.515071868896484
    4. ' :
' → logprob: -7.140071868896484
    5. '       ' → logprob: -7.515071868896484
    6. '):' → logprob: -7.765071868896484
    7. '           ' → logprob: -9.140071868896484
    8. ')' → logprob: -9.890071868896484
    9. ' and' → logprob: -9.890071868896484
    10. ':

' → logprob: -10.390071868896484

Token 165: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08041609078645706
    2. ':
' → logprob: -3.080416202545166
    3. ':' → logprob: -4.580416202545166
    4. '       ' → logprob: -4.830416202545166
    5. '
' → logprob: -5.330416202545166
    6. ' :
' → logprob: -5.955416202545166
    7. '            
' → logprob: -6.955416202545166
    8. '):
' → logprob: -7.455416202545166
    9. '```' → logprob: -7.455416202545166
    10. 'result' → logprob: -7.830416202545166

Token 166: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.902984619140625
    2. 'result' (adapté à ' result') → logprob: -1.152984619140625
    3. '       ' → logprob: -1.277984619140625
    4. '           ' → logprob: -8.277984619140625
    5. '	result' → logprob: -10.402984619140625
    6. '   ' → logprob: -11.027984619140625
    7. ',result' → logprob: -11.027984619140625
    8. '```' → logprob: -11.527984619140625
    9. '
' → logprob: -12.402984619140625
    10. '               ' → logprob: -12.527984619140625

Token 167: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019297054968774319
    2. '.' → logprob: -6.251929759979248
    3. '.extend' → logprob: -14.12692928314209
    4. '.app' → logprob: -16.001930236816406
    5. '.ap' → logprob: -16.001930236816406
    6. '.Append' → logprob: -17.126930236816406
    7. 'append' → logprob: -17.126930236816406
    8. ',' → logprob: -17.376930236816406
    9. ').' → logprob: -17.751930236816406
    10. '.push' → logprob: -18.751930236816406

Token 168: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004183583427220583
    2. '(' → logprob: -6.004183769226074
    3. '(curr' → logprob: -6.379183769226074
    4. '([' → logprob: -11.754183769226074
    5. '(count' → logprob: -14.504183769226074
    6. ' (' → logprob: -14.754183769226074
    7. '(cur' → logprob: -15.004183769226074
    8. '(cnt' → logprob: -15.254183769226074
    9. '(
' → logprob: -15.879183769226074
    10. '[(' → logprob: -16.004182815551758

Token 169: 'curr' (ID: 28376)
  Prédit: 'curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0022477959282696247
    2. ' curr' → logprob: -6.1272478103637695
    3. '(curr' → logprob: -10.37724781036377
    4. '[curr' → logprob: -11.50224781036377
    5. '   ' → logprob: -11.62724781036377
    6. ' ' → logprob: -11.87724781036377
    7. '	curr' → logprob: -12.62724781036377
    8. 'count' → logprob: -14.37724781036377
    9. '  ' → logprob: -14.62724781036377
    10. 'cur' → logprob: -14.62724781036377

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006735265254974365
    2. ',count' → logprob: -5.006735324859619
    3. ' ,' → logprob: -10.881734848022461
    4. 'count' → logprob: -13.881734848022461
    5. '[count' → logprob: -16.63173484802246
    6. '   ' → logprob: -17.75673484802246
    7. ',c' → logprob: -18.25673484802246
    8. ',
' → logprob: -18.63173484802246
    9. '=count' → logprob: -19.63173484802246
    10. ' ' → logprob: -19.75673484802246

Token 171: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0024769625160843134
    2. ' count' → logprob: -6.002477169036865
    3. '   ' → logprob: -14.127476692199707
    4. '	count' → logprob: -15.252476692199707
    5. ' ' → logprob: -15.752476692199707
    6. '           ' → logprob: -17.252477645874023
    7. '       ' → logprob: -17.377477645874023
    8. '  ' → logprob: -18.502477645874023
    9. '
' → logprob: -19.002477645874023
    10. '    ' → logprob: -19.002477645874023

Token 172: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.42931318283081055
    2. '])' → logprob: -1.0543131828308105
    3. '           ' → logprob: -8.429313659667969
    4. '       ' → logprob: -8.804313659667969
    5. '])
' → logprob: -9.054313659667969
    6. ' ])
' → logprob: -10.429313659667969
    7. ')
' → logprob: -10.679313659667969
    8. '   ' → logprob: -11.054313659667969
    9. ',' → logprob: -11.304313659667969
    10. ' ])' → logprob: -11.304313659667969

Token 173: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1326160579919815
    2. '
' → logprob: -2.3826160430908203
    3. '            
' → logprob: -3.7576160430908203
    4. '       ' → logprob: -5.88261604309082
    5. 'count' → logprob: -6.13261604309082
    6. ' 
' → logprob: -6.50761604309082
    7. '               ' → logprob: -8.00761604309082
    8. '        
' → logprob: -8.13261604309082
    9. '            ' → logprob: -8.50761604309082
    10. ' count' → logprob: -8.75761604309082

Token 174: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -0.021712234243750572
    2. 'count' → logprob: -4.271712303161621
    3. '           ' → logprob: -5.021712303161621
    4. ' curr' → logprob: -7.146712303161621
    5. '   ' → logprob: -9.396712303161621
    6. '       ' → logprob: -10.896712303161621
    7. '	curr' → logprob: -11.271712303161621
    8. '
' → logprob: -11.646712303161621
    9. ' count' → logprob: -11.896712303161621
    10. '               ' → logprob: -12.646712303161621

Token 175: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693022191524506
    2. ' =' → logprob: -2.1269302368164062
    3. '=x' → logprob: -14.501930236816406
    4. ' ' → logprob: -14.626930236816406
    5. ',' → logprob: -14.626930236816406
    6. ')' → logprob: -15.751930236816406
    7. '!=' → logprob: -16.001930236816406
    8. '<|end|>' → logprob: -16.251930236816406
    9. '=

' → logprob: -16.751930236816406
    10. ' !=' → logprob: -17.126930236816406

Token 176: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47407761216163635
    2. ' x' → logprob: -0.974077582359314
    3. '	x' → logprob: -14.724077224731445
    4. ' ' → logprob: -16.474077224731445
    5. '(x' → logprob: -16.724077224731445
    6. '>x' → logprob: -18.224077224731445
    7. ''x' → logprob: -18.599077224731445
    8. '"x' → logprob: -18.724077224731445
    9. ')x' → logprob: -18.724077224731445
    10. ' ' → logprob: -18.849077224731445

Token 177: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.36574100604048e-06
    2. '[' → logprob: -12.375004768371582
    3. 'idx' → logprob: -16.750003814697266
    4. '[
' → logprob: -18.125003814697266
    5. ' [' → logprob: -18.500003814697266
    6. '```' → logprob: -18.625003814697266
    7. '[index' → logprob: -18.750003814697266
    8. ' idx' → logprob: -20.250003814697266
    9. '(idx' → logprob: -20.500003814697266
    10. '[ix' → logprob: -20.750003814697266

Token 178: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.190178904333152e-05
    2. ' +' → logprob: -10.375031471252441
    3. '1' → logprob: -14.500031471252441
    4. '+
' → logprob: -16.625032424926758
    5. ']+' → logprob: -17.000032424926758
    6. '   ' → logprob: -17.375032424926758
    7. ' ' → logprob: -18.250032424926758
    8. ']' → logprob: -19.125032424926758
    9. '＋' → logprob: -19.875032424926758
    10. '	' → logprob: -20.375032424926758

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.000019073486328
    4. '+' → logprob: -16.625019073486328
    5. '2' → logprob: -18.250019073486328
    6. '  ' → logprob: -18.375019073486328
    7. '```' → logprob: -18.500019073486328
    8. '<|end|>' → logprob: -18.750019073486328
    9. '0' → logprob: -19.750019073486328
    10. '    ' → logprob: -19.875019073486328

Token 180: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08293233811855316
    2. '       ' → logprob: -3.082932233810425
    3. ']' → logprob: -3.832932233810425
    4. '<|end|>' → logprob: -4.832932472229004
    5. ']
' → logprob: -6.582932472229004
    6. ',' → logprob: -7.082932472229004
    7. '
' → logprob: -7.457932472229004
    8. '   ' → logprob: -8.082932472229004
    9. 'count' → logprob: -8.457932472229004
    10. '               ' → logprob: -8.832932472229004

Token 181: '           ' (ID: 352)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.31426802277565
    2. '           ' → logprob: -1.3142679929733276
    3. '       ' → logprob: -7.564268112182617
    4. ' count' → logprob: -7.689268112182617
    5. 'else' → logprob: -11.564268112182617
    6. '   ' → logprob: -11.564268112182617
    7. ',count' → logprob: -12.689268112182617
    8. '	count' → logprob: -13.064268112182617
    9. '```' → logprob: -13.939268112182617
    10. '[count' → logprob: -14.314268112182617

Token 182: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0001584850688232109
    2. ' count' → logprob: -8.750158309936523
    3. '           ' → logprob: -17.875158309936523
    4. '       ' → logprob: -20.625158309936523
    5. '
' → logprob: -21.375158309936523
    6. '   ' → logprob: -21.500158309936523
    7. '	count' → logprob: -21.625158309936523
    8. '```' → logprob: -22.000158309936523
    9. ' ' → logprob: -22.875158309936523
    10. '.count' → logprob: -23.125158309936523

Token 183: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5835518836975098
    2. '+=' → logprob: -0.8335518836975098
    3. '=' → logprob: -5.33355188369751
    4. '+' → logprob: -5.95855188369751
    5. ' =' → logprob: -8.958551406860352
    6. ' +' → logprob: -10.708551406860352
    7. ' ' → logprob: -10.958551406860352
    8. '1' → logprob: -12.958551406860352
    9. ']+=' → logprob: -14.208551406860352
    10. '<|end|>' → logprob: -14.583551406860352

Token 184: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002186545403674245
    2. ' ' → logprob: -6.1271867752075195
    3. '0' → logprob: -13.62718677520752
    4. '   ' → logprob: -16.127185821533203
    5. '2' → logprob: -16.627185821533203
    6. '  ' → logprob: -17.502185821533203
    7. '```' → logprob: -17.502185821533203
    8. '۱' → logprob: -18.252185821533203
    9. '' → logprob: -18.314685821533203
    10. ' ' → logprob: -19.002185821533203

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.00000286102295
    3. '0' → logprob: -14.37500286102295
    4. '   ' → logprob: -18.500003814697266
    5. '```' → logprob: -18.500003814697266
    6. '' → logprob: -19.437503814697266
    7. '2' → logprob: -19.625003814697266
    8. '۱' → logprob: -20.187503814697266
    9. '`' → logprob: -20.500003814697266
    10. '１' → logprob: -20.687503814697266

Token 186: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031080229207873344
    2. ' else' → logprob: -4.03108024597168
    3. 'else' → logprob: -4.40608024597168
    4. '           ' → logprob: -7.78108024597168
    5. '<|end|>' → logprob: -9.15608024597168
    6. '	else' → logprob: -10.28108024597168
    7. '   ' → logprob: -10.65608024597168
    8. '	' → logprob: -11.03108024597168
    9. '        ' → logprob: -11.53108024597168
    10. '```' → logprob: -12.15608024597168

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013260699808597565
    2. 'else' → logprob: -4.388260841369629
    3. ' else' → logprob: -7.263260841369629
    4. '<|end|>' → logprob: -11.138260841369629
    5. '   ' → logprob: -11.263260841369629
    6. '	else' → logprob: -11.638260841369629
    7. '	' → logprob: -12.388260841369629
    8. '           ' → logprob: -12.513260841369629
    9. '​' → logprob: -13.638260841369629
    10. '_else' → logprob: -14.263260841369629

Token 188: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6398280262947083
    2. '       ' → logprob: -0.7648280262947083
    3. ' else' → logprob: -5.014828205108643
    4. '   ' → logprob: -8.264827728271484
    5. '	else' → logprob: -8.389827728271484
    6. '	' → logprob: -9.764827728271484
    7. '           ' → logprob: -12.139827728271484
    8. '_else' → logprob: -13.139827728271484
    9. '      ' → logprob: -13.389827728271484
    10. ' ' → logprob: -13.389827728271484

Token 189: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11273092776536942
    2. ':' → logprob: -3.2377309799194336
    3. '        ' → logprob: -3.9877309799194336
    4. ':
' → logprob: -4.112730979919434
    5. '            ' → logprob: -4.487730979919434
    6. '       ' → logprob: -5.112730979919434
    7. ' count' → logprob: -5.487730979919434
    8. '               ' → logprob: -6.237730979919434
    9. ' :
' → logprob: -6.612730979919434
    10. '		' → logprob: -6.862730979919434

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6565201878547668
    2. 'count' → logprob: -0.9065201878547668
    3. ' count' → logprob: -2.656520128250122
    4. '       ' → logprob: -5.656520366668701
    5. '        ' → logprob: -5.781520366668701
    6. '            ' → logprob: -8.156519889831543
    7. '   ' → logprob: -9.406519889831543
    8. '	count' → logprob: -9.406519889831543
    9. '               ' → logprob: -9.781519889831543
    10. '    ' → logprob: -10.031519889831543

Token 191: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.01416350994259119
    2. ' count' → logprob: -4.264163494110107
    3. '	count' → logprob: -17.139163970947266
    4. '_count' → logprob: -19.389163970947266
    5. '[count' → logprob: -20.014163970947266
    6. '    ' → logprob: -20.264163970947266
    7. '           ' → logprob: -20.264163970947266
    8. '=count' → logprob: -20.389163970947266
    9. '$count' → logprob: -20.764163970947266
    10. '.count' → logprob: -20.764163970947266

Token 192: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5759409070014954
    2. ' +=' → logprob: -0.8259409070014954
    3. '=' → logprob: -13.95094108581543
    4. ']+=' → logprob: -15.32594108581543
    5. '+' → logprob: -15.45094108581543
    6. '+='' → logprob: -17.07594108581543
    7. '+="' → logprob: -17.82594108581543
    8. '+=(' → logprob: -18.20094108581543
    9. ' =' → logprob: -18.45094108581543
    10. ' ' → logprob: -18.70094108581543

Token 193: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -22.625024795532227
    4. '```' → logprob: -23.000024795532227
    5. '<|end|>' → logprob: -23.250024795532227
    6. '１' → logprob: -23.625024795532227
    7. '۱' → logprob: -24.000024795532227
    8. '  ' → logprob: -24.500024795532227
    9. ' ' → logprob: -24.625024795532227
    10. '0' → logprob: -25.125024795532227

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -23.000001907348633
    4. '   ' → logprob: -23.250001907348633
    5. '۱' → logprob: -23.375001907348633
    6. '１' → logprob: -23.500001907348633
    7. '0' → logprob: -24.437501907348633
    8. '' → logprob: -24.562501907348633
    9. '  ' → logprob: -24.562501907348633
    10. '१' → logprob: -24.562501907348633

Token 195: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0068957009352743626
    2. ' return' → logprob: -5.381895542144775
    3. 'return' → logprob: -6.256895542144775
    4. '
' → logprob: -8.006896018981934
    5. '	return' → logprob: -11.756896018981934
    6. '    
' → logprob: -12.381896018981934
    7. 'result' → logprob: -12.881896018981934
    8. ' ' → logprob: -13.756896018981934
    9. ')' → logprob: -13.756896018981934
    10. ' 
' → logprob: -13.881896018981934

Token 196: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6039665937423706
    2. '   ' → logprob: -0.8539665937423706
    3. ' return' → logprob: -3.72896671295166
    4. '
' → logprob: -6.35396671295166
    5. 'result' → logprob: -6.35396671295166
    6. '	return' → logprob: -10.47896671295166
    7. '    
' → logprob: -10.47896671295166
    8. ' ' → logprob: -10.85396671295166
    9. ' result' → logprob: -10.85396671295166
    10. '```' → logprob: -11.35396671295166

Token 197: ' result' (ID: 1534)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4501229226589203
    2. 'result' (adapté à ' result') → logprob: -1.4501229524612427
    3. '   ' → logprob: -2.450122833251953
    4. ' return' → logprob: -3.325122833251953
    5. ' result' → logprob: -5.200122833251953
    6. ' ' → logprob: -9.825122833251953
    7. '
' → logprob: -10.450122833251953
    8. '	return' → logprob: -11.075122833251953
    9. '```' → logprob: -11.325122833251953
    10. ')' → logprob: -11.950122833251953

Token 198: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.20466002821922302
    2. '.' → logprob: -1.7046600580215454
    3. '.return' → logprob: -5.954659938812256
    4. 'return' → logprob: -7.579659938812256
    5. ':return' → logprob: -9.579660415649414
    6. '.extend' → logprob: -11.079660415649414
    7. ' return' → logprob: -11.329660415649414
    8. '.reverse' → logprob: -12.079660415649414
    9. '.insert' → logprob: -12.204660415649414
    10. '.setdefault' → logprob: -12.329660415649414

Token 199: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -1.7432603272027336e-06
    2. '((' → logprob: -13.875001907348633
    3. '(' → logprob: -15.000001907348633
    4. ' ([' → logprob: -15.375001907348633
    5. '(([' → logprob: -16.125001907348633
    6. '[' → logprob: -16.625001907348633
    7. '(
' → logprob: -18.750001907348633
    8. '[curr' → logprob: -19.250001907348633
    9. '([
' → logprob: -20.250001907348633
    10. '([[' → logprob: -20.625001907348633

Token 200: 'curr' (ID: 28376)
  Prédit: 'curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -3.6789137084269896e-05
    2. ' curr' → logprob: -10.25003719329834
    3. '(curr' → logprob: -13.62503719329834
    4. '[curr' → logprob: -16.375036239624023
    5. '	curr' → logprob: -16.875036239624023
    6. 'cur' → logprob: -17.625036239624023
    7. '.curr' → logprob: -19.250036239624023
    8. '   ' → logprob: -19.250036239624023
    9. 'x' → logprob: -19.625036239624023
    10. 'current' → logprob: -20.250036239624023

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1888679839321412e-05
    2. ',count' → logprob: -11.125021934509277
    3. ' ,' → logprob: -11.875021934509277
    4. 'count' → logprob: -16.50002098083496
    5. ',
' → logprob: -16.50002098083496
    6. '‌,' → logprob: -18.75002098083496
    7. '[count' → logprob: -18.87502098083496
    8. ',c' → logprob: -19.25002098083496
    9. '',' → logprob: -19.62502098083496
    10. '),' → logprob: -19.75002098083496

Token 202: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.011047814972698689
    2. ' count' → logprob: -4.511047840118408
    3. ' ' → logprob: -17.88604736328125
    4. '   ' → logprob: -19.51104736328125
    5. '	count' → logprob: -19.51104736328125
    6. '(count' → logprob: -21.01104736328125
    7. '[count' → logprob: -21.63604736328125
    8. '  ' → logprob: -22.51104736328125
    9. '$count' → logprob: -22.63604736328125
    10. '<count' → logprob: -22.63604736328125

Token 203: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.16030606627464294
    2. '])
' → logprob: -1.9103060960769653
    3. '])
' → logprob: -10.035305976867676
    4. ')' → logprob: -10.785305976867676
    5. ')
' → logprob: -11.160305976867676
    6. ']' → logprob: -13.785305976867676
    7. '])

' → logprob: -14.285305976867676
    8. ']
' → logprob: -14.535305976867676
    9. ' ])' → logprob: -15.035305976867676
    10. '   ' → logprob: -15.410305976867676

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011661769822239876
    2. 'return' → logprob: -4.511662006378174
    3. ' return' → logprob: -7.511662006378174
    4. '	return' → logprob: -9.636661529541016
    5. 'def' → logprob: -14.136661529541016
    6. ':return' → logprob: -14.886661529541016
    7. '```' → logprob: -15.261661529541016
    8. '
' → logprob: -15.261661529541016
    9. ' ' → logprob: -16.261661529541016
    10. '       ' → logprob: -16.511661529541016

Token 205: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00955904833972454
    2. ' return' → logprob: -4.759559154510498
    3. '   ' → logprob: -7.009559154510498
    4. '	return' → logprob: -10.13455867767334
    5. ' ' → logprob: -14.13455867767334
    6. ':return' → logprob: -15.63455867767334
    7. '
' → logprob: -16.134559631347656
    8. '```' → logprob: -16.759559631347656
    9. ')return' → logprob: -16.884559631347656
    10. '  ' → logprob: -17.134559631347656

Token 206: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0019288709154352546
    2. ' result' → logprob: -6.251928806304932
    3. '[result' → logprob: -15.50192928314209
    4. '(result' → logprob: -17.376928329467773
    5. '	result' → logprob: -21.001928329467773
    6. '=result' → logprob: -22.126928329467773
    7. '$result' → logprob: -22.376928329467773
    8. ',result' → logprob: -23.001928329467773
    9. '[' → logprob: -23.501928329467773
    10. 'res' → logprob: -23.751928329467773

Token 207: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0635853260755539
    2. '<|end|>' → logprob: -2.9385852813720703
    3. '
' → logprob: -5.31358528137207
    4. '[' → logprob: -6.56358528137207
    5. '#' → logprob: -6.56358528137207
    6. ' def' → logprob: -7.93858528137207
    7. '[
' → logprob: -8.81358528137207
    8. ')' → logprob: -9.43858528137207
    9. '<|end|>' → logprob: -9.81358528137207
    10. '(' → logprob: -9.81358528137207

Token 208: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00040183294913731515
    2. '#' → logprob: -8.500401496887207
    3. '<|end|>' → logprob: -9.875401496887207
    4. 'x' → logprob: -10.000401496887207
    5. 'from' → logprob: -10.250401496887207
    6. '[' → logprob: -11.375401496887207
    7. 'a' → logprob: -11.625401496887207
    8. ' def' → logprob: -11.750401496887207
    9. ')' → logprob: -12.125401496887207
    10. '[]' → logprob: -12.125401496887207

Token 209: ' join' (ID: 5863)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7420724034309387
    2. ' solve' → logprob: -1.367072343826294
    3. ' f' → logprob: -3.742072343826294
    4. ' max' → logprob: -3.867072343826294
    5. ' count' → logprob: -3.992072343826294
    6. ' pow' → logprob: -4.117072582244873
    7. ' gcd' → logprob: -4.117072582244873
    8. ' is' → logprob: -4.242072582244873
    9. ' factorial' → logprob: -4.367072582244873
    10. ' dfs' → logprob: -4.492072582244873

Token 210: '_list' (ID: 4162)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7300704717636108
    2. '(lst' → logprob: -2.1050705909729004
    3. '('_' → logprob: -2.4800705909729004
    4. '(str' → logprob: -2.6050705909729004
    5. '(a' → logprob: -3.2300705909729004
    6. '(x' → logprob: -3.2300705909729004
    7. '(separator' → logprob: -3.4800705909729004
    8. '('' → logprob: -3.7300705909729004
    9. '(arr' → logprob: -4.2300705909729
    10. '_' → logprob: -4.7300705909729

Token 211: '(xs' (ID: 132690)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.13152949512004852
    2. '(arr' → logprob: -3.2565295696258545
    3. '(a' → logprob: -3.3815295696258545
    4. '(' → logprob: -4.256529331207275
    5. '(l' → logprob: -4.506529331207275
    6. '(x' → logprob: -4.506529331207275
    7. '(separator' → logprob: -5.006529331207275
    8. '(str' → logprob: -6.256529331207275
    9. '(ls' → logprob: -7.006529331207275
    10. '(list' → logprob: -7.381529331207275

Token 212: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3241754174232483
    2. '):
' → logprob: -1.6991753578186035
    3. ',' → logprob: -2.5741753578186035
    4. '(xs' → logprob: -4.1991753578186035
    5. ')' → logprob: -6.6991753578186035
    6. '(lst' → logprob: -7.6991753578186035
    7. ' ):' → logprob: -7.9491753578186035
    8. '):
' → logprob: -8.949175834655762
    9. ',x' → logprob: -9.199175834655762
    10. '(ls' → logprob: -9.449175834655762

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5409516096115112
    2. 'return' → logprob: -1.0409516096115112
    3. ' return' → logprob: -2.915951728820801
    4. 'def' → logprob: -5.415951728820801
    5. '"' → logprob: -5.915951728820801
    6. ''' → logprob: -6.540951728820801
    7. '('' → logprob: -7.415951728820801
    8. '	return' → logprob: -8.5409517288208
    9. '(' → logprob: -8.6659517288208
    10. '(xs' → logprob: -9.0409517288208

Token 214: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16589421033859253
    2. ' return' → logprob: -1.9158942699432373
    3. ''' → logprob: -5.665894031524658
    4. '"' → logprob: -6.165894031524658
    5. '   ' → logprob: -9.415894508361816
    6. ' '' → logprob: -12.540894508361816
    7. 'print' → logprob: -13.165894508361816
    8. '	return' → logprob: -13.665894508361816
    9. '"""' → logprob: -14.290894508361816
    10. 'str' → logprob: -14.415894508361816

Token 215: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2534750699996948
    2. ''' → logprob: -1.5034750699996948
    3. '''.' → logprob: -6.503475189208984
    4. ' '' → logprob: -11.503475189208984
    5. ' "' → logprob: -11.628475189208984
    6. '','.' → logprob: -12.128475189208984
    7. '",".' → logprob: -12.503475189208984
    8. '''' → logprob: -12.503475189208984
    9. ' "".' → logprob: -12.628475189208984
    10. ' ''.' → logprob: -12.878475189208984

Token 216: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.027355346828699112
    2. ''' → logprob: -3.902355432510376
    3. ' "' → logprob: -5.027355194091797
    4. ' "".' → logprob: -10.027355194091797
    5. ' '' → logprob: -10.152355194091797
    6. '''.' → logprob: -10.152355194091797
    7. '".' → logprob: -10.402355194091797
    8. 'str' → logprob: -10.902355194091797
    9. '",".' → logprob: -10.902355194091797
    10. ' ".' → logprob: -11.152355194091797

Token 217: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -7.896309739408025e-07
    2. ' join' → logprob: -14.250000953674316
    3. 'j' → logprob: -16.25
    4. '.join' → logprob: -16.875
    5. '(join' → logprob: -17.625
    6. 'jo' → logprob: -18.5
    7. '.' → logprob: -19.0
    8. 'split' → logprob: -19.5
    9. '```' → logprob: -20.0
    10. 'return' → logprob: -20.25

Token 218: '(str' (ID: 7946)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.04885464161634445
    2. '(str' → logprob: -3.0488545894622803
    3. 'map' → logprob: -8.92385482788086
    4. '(xs' → logprob: -9.54885482788086
    5. 'str' → logprob: -10.04885482788086
    6. '(' → logprob: -11.67385482788086
    7. '(list' → logprob: -11.92385482788086
    8. '[str' → logprob: -13.04885482788086
    9. '([' → logprob: -13.67385482788086
    10. ' map' → logprob: -14.54885482788086

Token 219: '(a' (ID: 6271)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0012167827226221561
    2. '(i' → logprob: -6.751216888427734
    3. '(e' → logprob: -10.376216888427734
    4. '(a' → logprob: -11.501216888427734
    5. '(xs' → logprob: -13.376216888427734
    6. '(v' → logprob: -13.876216888427734
    7. '(_)' → logprob: -14.001216888427734
    8. 'x' → logprob: -14.501216888427734
    9. '(s' → logprob: -14.876216888427734
    10. '(' → logprob: -15.376216888427734

Token 220: ')' (ID: 8)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.021903635933995247
    2. ')' → logprob: -4.1469035148620605
    3. '(a' → logprob: -5.2719035148620605
    4. '(i' → logprob: -8.146903991699219
    5. 'x' → logprob: -8.396903991699219
    6. 'a' → logprob: -9.271903991699219
    7. 's' → logprob: -10.396903991699219
    8. '(s' → logprob: -11.021903991699219
    9. ')x' → logprob: -11.146903991699219
    10. '(v' → logprob: -11.396903991699219

Token 221: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.20246772468090057
    2. '(a' → logprob: -2.452467679977417
    3. 'x' → logprob: -2.952467679977417
    4. 'a' → logprob: -3.702467679977417
    5. 'for' → logprob: -4.202467918395996
    6. ')' → logprob: -5.577467918395996
    7. '(i' → logprob: -6.952467918395996
    8. '(b' → logprob: -8.952467918395996
    9. 'i' → logprob: -8.952467918395996
    10. 'b' → logprob: -9.202467918395996

Token 222: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06197608634829521
    2. ' a' → logprob: -2.811976194381714
    3. ' ' → logprob: -12.686976432800293
    4. '	a' → logprob: -12.936976432800293
    5. '_a' → logprob: -14.311976432800293
    6. '_' → logprob: -14.436976432800293
    7. '  ' → logprob: -14.436976432800293
    8. ' in' → logprob: -14.561976432800293
    9. 'x' → logprob: -14.936976432800293
    10. '   ' → logprob: -15.436976432800293

Token 223: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1811140477657318
    2. 'in' → logprob: -1.8061140775680542
    3. 's' → logprob: -6.806114196777344
    4. 'xs' → logprob: -9.306114196777344
    5. 'x' → logprob: -9.556114196777344
    6. ' ' → logprob: -9.556114196777344
    7. ' xs' → logprob: -11.681114196777344
    8. '<|end|>' → logprob: -12.306114196777344
    9. '_' → logprob: -12.556114196777344
    10. 'a' → logprob: -12.931114196777344

Token 224: ' xs' (ID: 26642)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.029760558158159256
    2. ' xs' → logprob: -3.5297605991363525
    3. '(xs' → logprob: -11.529760360717773
    4. ' ' → logprob: -15.529760360717773
    5. 'Xs' → logprob: -17.154760360717773
    6. 'x' → logprob: -17.404760360717773
    7. '  ' → logprob: -19.029760360717773
    8. '
' → logprob: -19.154760360717773
    9. '   ' → logprob: -19.154760360717773
    10. 's' → logprob: -20.529760360717773

Token 225: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.250000953674316
    3. '))' → logprob: -15.000000953674316
    4. ')
' → logprob: -16.500001907348633
    5. ')}' → logprob: -16.625001907348633
    6. '())' → logprob: -17.000001907348633
    7. ')`' → logprob: -17.375001907348633
    8. ')x' → logprob: -17.625001907348633
    9. ')return' → logprob: -17.750001907348633
    10. ')a' → logprob: -18.125001907348633

Token 226: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000945172505453229
    2. '<|end|>' → logprob: -7.750945091247559
    3. '#' → logprob: -7.875945091247559
    4. '
' → logprob: -9.250945091247559
    5. '```' → logprob: -12.000945091247559
    6. 'from' → logprob: -12.250945091247559
    7. 'class' → logprob: -12.250945091247559
    8. '\' → logprob: -12.500945091247559
    9. ')' → logprob: -12.875945091247559
    10. '\n' → logprob: -13.000945091247559

Token 227: ' max' (ID: 2999)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.18352264165878296
    2. ' main' → logprob: -1.9335227012634277
    3. 'solve' → logprob: -4.433522701263428
    4. ' solve' → logprob: -5.183522701263428
    5. 'pow' → logprob: -6.683522701263428
    6. 'p' → logprob: -6.933522701263428
    7. 'print' → logprob: -7.433522701263428
    8. 'g' → logprob: -7.933522701263428
    9. 't' → logprob: -8.18352222442627
    10. 'rev' → logprob: -8.68352222442627

Token 228: '2' (ID: 17)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.1998475342988968
    2. '(' → logprob: -1.9498475790023804
    3. '_' → logprob: -4.94984769821167
    4. '(xs' → logprob: -5.19984769821167
    5. '(x' → logprob: -5.57484769821167
    6. '(lst' → logprob: -5.82484769821167
    7. '_depth' → logprob: -5.94984769821167
    8. '_len' → logprob: -6.07484769821167
    9. 'def' → logprob: -6.32484769821167
    10. '_range' → logprob: -6.57484769821167

Token 229: '(arr' (ID: 19646)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.034720197319984436
    2. '(x' → logprob: -3.5347201824188232
    3. '(lst' → logprob: -5.659720420837402
    4. '(xs' → logprob: -7.284720420837402
    5. '(' → logprob: -7.784720420837402
    6. '(*' → logprob: -9.659720420837402
    7. '(arr' → logprob: -9.784720420837402
    8. '(nums' → logprob: -9.909720420837402
    9. '_' → logprob: -10.034720420837402
    10. '_(' → logprob: -10.034720420837402

Token 230: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03811952471733093
    2. '):
' → logprob: -3.2881195545196533
    3. ' ):' → logprob: -9.663119316101074
    4. ')' → logprob: -12.288119316101074
    5. '):
' → logprob: -12.538119316101074
    6. ',' → logprob: -13.038119316101074
    7. ' ):
' → logprob: -13.538119316101074
    8. '   ' → logprob: -14.038119316101074
    9. ':' → logprob: -14.663119316101074
    10. '):

' → logprob: -14.913119316101074

Token 231: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007271760143339634
    2. ':' → logprob: -5.507271766662598
    3. '(arr' → logprob: -7.382271766662598
    4. ':
' → logprob: -7.507271766662598
    5. '():' → logprob: -7.632271766662598
    6. '(a' → logprob: -8.132271766662598
    7. '):' → logprob: -8.132271766662598
    8. '[' → logprob: -8.257271766662598
    9. 'arr' → logprob: -8.882271766662598
    10. '(' → logprob: -9.257271766662598

Token 232: ' not' (ID: 625)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.093923807144165
    2. 'return' → logprob: -1.468923807144165
    3. 'max' → logprob: -1.593923807144165
    4. 'a' → logprob: -3.218923807144165
    5. ' arr' → logprob: -3.593923807144165
    6. ' return' → logprob: -3.843923807144165
    7. 'if' → logprob: -4.093923568725586
    8. 'first' → logprob: -4.218923568725586
    9. 'm' → logprob: -4.343923568725586
    10. ' max' → logprob: -4.468923568725586

Token 233: ' sure' (ID: 3239)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8141250014305115
    2. ' max' → logprob: -1.0641250610351562
    3. 'def' → logprob: -2.3141250610351562
    4. ' just' → logprob: -2.8141250610351562
    5. 'arr' → logprob: -4.439125061035156
    6. ' def' → logprob: -4.689125061035156
    7. ' arr' → logprob: -4.814125061035156
    8. ' return' → logprob: -5.564125061035156
    9. 'return' → logprob: -5.814125061035156
    10. ' sure' → logprob: -5.814125061035156

Token 234: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2799986004829407
    2. ':' → logprob: -2.154998540878296
    3. '(arr' → logprob: -2.904998540878296
    4. 'def' → logprob: -3.029998540878296
    5. ':
' → logprob: -4.404998779296875
    6. '():' → logprob: -5.279998779296875
    7. '(' → logprob: -6.029998779296875
    8. 'arr' → logprob: -7.154998779296875
    9. ' if' → logprob: -7.404998779296875
    10. ' ' → logprob: -7.779998779296875

Token 235: ' this' (ID: 495)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.34614044427871704
    2. 'len' → logprob: -1.3461403846740723
    3. ' len' → logprob: -4.596140384674072
    4. 'you' → logprob: -5.096140384674072
    5. ' arr' → logprob: -5.471140384674072
    6. 'it' → logprob: -5.971140384674072
    7. 'this' → logprob: -6.346140384674072
    8. 'max' → logprob: -6.721140384674072
    9. 'needed' → logprob: -6.721140384674072
    10. 'returns' → logprob: -7.096140384674072

Token 236: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5040163993835449
    2. ':' → logprob: -2.004016399383545
    3. ':
' → logprob: -2.254016399383545
    4. 'def' → logprob: -2.879016399383545
    5. ' :' → logprob: -4.254016399383545
    6. ' or' → logprob: -4.379016399383545
    7. ' :
' → logprob: -4.379016399383545
    8. ' def' → logprob: -4.754016399383545
    9. ' returns' → logprob: -5.004016399383545
    10. ' ' → logprob: -5.004016399383545

Token 237: ' the' (ID: 290)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -1.151525616645813
    2. 'needed' → logprob: -1.526525616645813
    3. ' needed' → logprob: -1.901525616645813
    4. ' correct' → logprob: -2.0265254974365234
    5. ' working' → logprob: -3.9015254974365234
    6. 'necessary' → logprob: -4.151525497436523
    7. 'the' → logprob: -4.401525497436523
    8. 'used' → logprob: -4.651525497436523
    9. 'efficient' → logprob: -4.651525497436523
    10. ' safe' → logprob: -4.651525497436523

Token 238: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.398600310087204
    2. 'fast' → logprob: -1.7736003398895264
    3. 'max' → logprob: -3.0236003398895264
    4. ' best' → logprob: -3.1486003398895264
    5. 'correct' → logprob: -4.523600101470947
    6. ' fastest' → logprob: -4.523600101470947
    7. 'most' → logprob: -4.523600101470947
    8. 'right' → logprob: -5.023600101470947
    9. 'maximum' → logprob: -5.523600101470947
    10. 'same' → logprob: -5.648600101470947

Token 239: ' name' (ID: 1308)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16593137383460999
    2. ' or' → logprob: -2.665931463241577
    3. '(arr' → logprob: -2.790931463241577
    4. 'or' → logprob: -4.915931224822998
    5. ' way' → logprob: -5.915931224822998
    6. ' def' → logprob: -6.790931224822998
    7. ',' → logprob: -6.915931224822998
    8. ' return' → logprob: -6.915931224822998
    9. ' approach' → logprob: -6.915931224822998
    10. '   ' → logprob: -7.040931224822998

Token 240: '
' (ID: 198)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.07657087594270706
    2. 'def' → logprob: -3.201570987701416
    3. '(a' → logprob: -4.076570987701416
    4. '   ' → logprob: -4.826570987701416
    5. '(lst' → logprob: -5.451570987701416
    6. ':
' → logprob: -6.201570987701416
    7. 'arr' → logprob: -7.826570987701416
    8. '(xs' → logprob: -7.826570987701416
    9. ':' → logprob: -8.576570510864258
    10. '(nums' → logprob: -8.951570510864258

Token 241: '   ' (ID: 271)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.13862890005111694
    2. '(a' → logprob: -2.5136289596557617
    3. '   ' → logprob: -3.1386289596557617
    4. 'def' → logprob: -6.138628959655762
    5. ':
' → logprob: -6.888628959655762
    6. '(lst' → logprob: -7.388628959655762
    7. ':' → logprob: -8.388628959655762
    8. 'arr' → logprob: -8.513628959655762
    9. '():' → logprob: -8.763628959655762
    10. '(nums' → logprob: -9.013628959655762

Token 242: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8616093993186951
    2. 'mx' → logprob: -2.11160945892334
    3. '   ' → logprob: -2.23660945892334
    4. 'if' → logprob: -2.61160945892334
    5. 'm' → logprob: -2.73660945892334
    6. ' mx' → logprob: -2.86160945892334
    7. ' return' → logprob: -2.98660945892334
    8. 'max' → logprob: -3.11160945892334
    9. 'a' → logprob: -3.86160945892334
    10. 'arr' → logprob: -4.86160945892334

Token 243: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04958910495042801
    2. ' max' → logprob: -3.049589157104492
    3. 'sorted' → logprob: -7.424589157104492
    4. 'arr' → logprob: -7.924589157104492
    5. ' sorted' → logprob: -10.924589157104492
    6. 'heap' → logprob: -11.549589157104492
    7. '(max' → logprob: -12.174589157104492
    8. 'None' → logprob: -12.424589157104492
    9. ' arr' → logprob: -12.924589157104492
    10. ' None' → logprob: -14.049589157104492

Token 244: '([' (ID: 5194)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.00020568605395965278
    2. 'arr' → logprob: -9.125205993652344
    3. '(' → logprob: -9.250205993652344
    4. ' arr' → logprob: -15.375205993652344
    5. '[arr' → logprob: -15.750205993652344
    6. '(max' → logprob: -15.875205993652344
    7. '(
' → logprob: -16.375205993652344
    8. '2' → logprob: -17.625205993652344
    9. '	arr' → logprob: -17.750205993652344
    10. '(a' → logprob: -17.750205993652344

Token 245: 'max' (ID: 3228)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.1342916488647461
    2. 'a' → logprob: -3.009291648864746
    3. 'x' → logprob: -3.009291648864746
    4. 'max' → logprob: -4.384291648864746
    5. 'int' → logprob: -5.634291648864746
    6. 'len' → logprob: -5.884291648864746
    7. 'abs' → logprob: -6.509291648864746
    8. 'elem' → logprob: -6.634291648864746
    9. 'i' → logprob: -6.759291648864746
    10. 'el' → logprob: -7.009291648864746

Token 246: '(row' (ID: 15945)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.02130001224577427
    2. '(row' → logprob: -4.146299839019775
    3. 'arr' → logprob: -5.521299839019775
    4. '(sub' → logprob: -7.646299839019775
    5. 'row' → logprob: -7.896299839019775
    6. '(x' → logprob: -9.021300315856934
    7. '(a' → logprob: -9.146300315856934
    8. 'sub' → logprob: -9.146300315856934
    9. '(i' → logprob: -10.896300315856934
    10. '(inner' → logprob: -11.646300315856934

Token 247: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022034443099983037
    2. 'for' → logprob: -9.25022029876709
    3. ')])' → logprob: -9.75022029876709
    4. ' for' → logprob: -10.00022029876709
    5. ' )' → logprob: -12.25022029876709
    6. '(arr' → logprob: -12.62522029876709
    7. '])' → logprob: -12.75022029876709
    8. ')]' → logprob: -13.87522029876709
    9. 'def' → logprob: -13.87522029876709
    10. '(max' → logprob: -13.87522029876709

Token 248: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06200958415865898
    2. 'for' → logprob: -2.812009572982788
    3. ')' → logprob: -10.437009811401367
    4. '	for' → logprob: -12.062009811401367
    5. ' ' → logprob: -12.562009811401367
    6. '   ' → logprob: -13.062009811401367
    7. '<|end|>' → logprob: -14.937009811401367
    8. '    ' → logprob: -15.187009811401367
    9. '  ' → logprob: -15.312009811401367
    10. ']' → logprob: -15.937009811401367

Token 249: ' row' (ID: 5225)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.0160395298153162
    2. 'arr' → logprob: -4.1410393714904785
    3. '	arr' → logprob: -13.016039848327637
    4. ' row' → logprob: -13.266039848327637
    5. ' ' → logprob: -14.516039848327637
    6. '(arr' → logprob: -14.766039848327637
    7. 'row' → logprob: -15.266039848327637
    8. '<arr' → logprob: -16.39103889465332
    9. '_arr' → logprob: -17.01603889465332
    10. '[arr' → logprob: -17.14103889465332

Token 250: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0002439467643853277
    2. 'in' → logprob: -8.375244140625
    3. '<|end|>' → logprob: -11.625244140625
    4. ' ' → logprob: -12.500244140625
    5. 'arr' → logprob: -15.500244140625
    6. ']' → logprob: -16.000244140625
    7. '])' → logprob: -16.250244140625
    8. '<|end|>' → logprob: -16.375244140625
    9. 's' → logprob: -17.000244140625
    10. 'import' → logprob: -17.125244140625

Token 251: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.018150178715586662
    2. ' arr' → logprob: -4.018150329589844
    3. '	arr' → logprob: -16.143150329589844
    4. '(arr' → logprob: -16.518150329589844
    5. ' ' → logprob: -17.268150329589844
    6. '   ' → logprob: -17.893150329589844
    7. '_arr' → logprob: -18.268150329589844
    8. 'Arr' → logprob: -18.643150329589844
    9. '[arr' → logprob: -19.268150329589844
    10. '  ' → logprob: -19.518150329589844

Token 252: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00020938136731274426
    2. ' ])' → logprob: -8.50020980834961
    3. ')' → logprob: -12.87520980834961
    4. '])
' → logprob: -14.00020980834961
    5. ' if' → logprob: -14.00020980834961
    6. ']' → logprob: -14.50020980834961
    7. ')])' → logprob: -14.75020980834961
    8. '   ' → logprob: -15.00020980834961
    9. ' ' → logprob: -15.87520980834961
    10. '])]' → logprob: -16.00020980834961

Token 253: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0840165764093399
    2. '<|end|>' → logprob: -2.7090165615081787
    3. '
' → logprob: -4.834016799926758
    4. '#' → logprob: -5.334016799926758
    5. '<|end|>' → logprob: -8.084016799926758
    6. '[' → logprob: -8.459016799926758
    7. '\n' → logprob: -8.459016799926758
    8. '\' → logprob: -9.209016799926758
    9. ')' → logprob: -9.584016799926758
    10. '```' → logprob: -9.959016799926758

Token 254: ' main' (ID: 2758)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015931803500279784
    2. '#' → logprob: -7.251593112945557
    3. 'class' → logprob: -8.126593589782715
    4. 'import' → logprob: -8.126593589782715
    5. 'from' → logprob: -9.001593589782715
    6. ' def' → logprob: -10.501593589782715
    7. 'n' → logprob: -10.626593589782715
    8. 'for' → logprob: -10.751593589782715
    9. '<|end|>' → logprob: -10.751593589782715
    10. ' ' → logprob: -11.376593589782715

Token 255: ' part' (ID: 997)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0267396979033947
    2. '()' → logprob: -4.026739597320557
    3. 'if' → logprob: -5.151739597320557
    4. 'n' → logprob: -6.776739597320557
    5. '()
' → logprob: -7.401739597320557
    6. ' def' → logprob: -8.026740074157715
    7. '(
' → logprob: -8.026740074157715
    8. ' if' → logprob: -9.401740074157715
    9. '
' → logprob: -9.651740074157715
    10. '\' → logprob: -10.151740074157715

Token 256: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33276569843292236
    2. 'n' → logprob: -1.3327656984329224
    3. 'if' → logprob: -3.957765579223633
    4. 't' → logprob: -9.332765579223633
    5. 'N' → logprob: -9.957765579223633
    6. ' n' → logprob: -10.832765579223633
    7. '
' → logprob: -11.082765579223633
    8. '(n' → logprob: -11.707765579223633
    9. 'for' → logprob: -11.957765579223633
    10. 'd' → logprob: -12.207765579223633

Token 257: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06807581335306168
    2. 'def' → logprob: -2.8180758953094482
    3. 'if' → logprob: -5.693075656890869
    4. 'N' → logprob: -5.943075656890869
    5. 't' → logprob: -9.443076133728027
    6. ' n' → logprob: -12.068076133728027
    7. 'for' → logprob: -12.318076133728027
    8. '#' → logprob: -13.568076133728027
    9. 'T' → logprob: -13.818076133728027
    10. '```' → logprob: -13.943076133728027

Token 258: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10690710693597794
    2. '=' → logprob: -2.6069071292877197
    3. ',' → logprob: -3.6069071292877197
    4. ' ' → logprob: -8.10690689086914
    5. ' ,' → logprob: -8.73190689086914
    6. ')' → logprob: -11.73190689086914
    7. '=int' → logprob: -11.73190689086914
    8. ' =
' → logprob: -12.48190689086914
    9. '=input' → logprob: -13.23190689086914
    10. ',n' → logprob: -13.60690689086914

Token 259: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1817185878753662
    2. 'm' → logprob: -1.9317185878753662
    3. ' k' → logprob: -4.056718826293945
    4. ' m' → logprob: -5.806718826293945
    5. 'q' → logprob: -7.556718826293945
    6. 'K' → logprob: -9.181718826293945
    7. 'x' → logprob: -9.306718826293945
    8. 'd' → logprob: -9.681718826293945
    9. 'p' → logprob: -10.556718826293945
    10. 'a' → logprob: -10.931718826293945

Token 260: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011048054322600365
    2. ' =' → logprob: -4.511047840118408
    3. '=k' → logprob: -15.511048316955566
    4. '=m' → logprob: -16.38604736328125
    5. ',' → logprob: -16.76104736328125
    6. ')' → logprob: -17.38604736328125
    7. '=s' → logprob: -18.01104736328125
    8. '=input' → logprob: -18.63604736328125
    9. '=n' → logprob: -18.63604736328125
    10. '=get' → logprob: -18.63604736328125

Token 261: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.026066521182656288
    2. ' m' → logprob: -3.776066541671753
    3. 'map' → logprob: -6.151066303253174
    4. ' map' → logprob: -7.776066303253174
    5. 'l' → logprob: -9.151066780090332
    6. 'get' → logprob: -9.526066780090332
    7. ' get' → logprob: -10.276066780090332
    8. ' l' → logprob: -10.776066780090332
    9. ' ' → logprob: -11.026066780090332
    10. 's' → logprob: -12.151066780090332

Token 262: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.5776860184123507e-06
    2. '()
' → logprob: -13.12500286102295
    3. ' ()' → logprob: -14.87500286102295
    4. '(' → logprob: -17.375001907348633
    5. '()

' → logprob: -17.500001907348633
    6. '()]' → logprob: -18.000001907348633
    7. '()
' → logprob: -18.625001907348633
    8. '();' → logprob: -18.625001907348633
    9. '（）' → logprob: -19.125001907348633
    10. '()`' → logprob: -19.500001907348633

Token 263: 'a' (ID: 64)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5942524075508118
    2. 'a' → logprob: -0.8442524075508118
    3. 'x' → logprob: -5.344252586364746
    4. 'dp' → logprob: -5.844252586364746
    5. 'data' → logprob: -5.969252586364746
    6. 'd' → logprob: -6.469252586364746
    7. 'lst' → logprob: -7.094252586364746
    8. 'A' → logprob: -7.219252586364746
    9. 'xs' → logprob: -7.219252586364746
    10. 's' → logprob: -7.719252586364746

Token 264: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022706031799316
    2. '=' → logprob: -1.9102270603179932
    3. ' ' → logprob: -13.410226821899414
    4. ',' → logprob: -14.535226821899414
    5. 's' → logprob: -15.535226821899414
    6. '[' → logprob: -15.660226821899414
    7. '=[]' → logprob: -16.285226821899414
    8. 'a' → logprob: -16.410226821899414
    9. 'r' → logprob: -17.035226821899414
    10. ')' → logprob: -17.035226821899414

Token 265: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.002189160557463765
    2. ' l' → logprob: -6.1271891593933105
    3. 's' → logprob: -13.377189636230469
    4. '[l' → logprob: -14.252189636230469
    5. '[]' → logprob: -14.377189636230469
    6. '	l' → logprob: -15.002189636230469
    7. 'list' → logprob: -15.252189636230469
    8. ' [' → logprob: -15.877189636230469
    9. 'm' → logprob: -15.877189636230469
    10. '[' → logprob: -16.12718963623047

Token 266: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0325924449716695e-05
    2. '()
' → logprob: -11.75001049041748
    3. ' ()' → logprob: -14.25001049041748
    4. '())' → logprob: -14.25001049041748
    5. '(' → logprob: -15.37501049041748
    6. '()]' → logprob: -15.37501049041748
    7. '().' → logprob: -15.75001049041748
    8. '()[' → logprob: -16.000009536743164
    9. '()
' → logprob: -16.375009536743164
    10. '()

' → logprob: -16.500009536743164

Token 267: 'aaa' (ID: 55894)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04087309166789055
    2. 'dp' → logprob: -4.290873050689697
    3. 'freq' → logprob: -5.040873050689697
    4. 'from' → logprob: -5.165873050689697
    5. 'counts' → logprob: -6.290873050689697
    6. 'count' → logprob: -6.290873050689697
    7. '#' → logprob: -6.665873050689697
    8. 'sorted' → logprob: -6.665873050689697
    9. 'cnt' → logprob: -6.790873050689697
    10. 'b' → logprob: -7.165873050689697

Token 268: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28606459498405457
    2. '=' → logprob: -1.411064624786377
    3. 'a' → logprob: -6.161064624786377
    4. '=a' → logprob: -6.911064624786377
    5. '=[]' → logprob: -7.161064624786377
    6. '=[' → logprob: -7.411064624786377
    7. '=[]
' → logprob: -9.161064147949219
    8. 'sorted' → logprob: -9.786064147949219
    9. 'ns' → logprob: -9.786064147949219
    10. '.sort' → logprob: -9.911064147949219

Token 269: ' [' (ID: 723)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -1.0851099491119385
    2. 's' → logprob: -1.5851099491119385
    3. '[' → logprob: -1.7101099491119385
    4. 'sorted' → logprob: -1.9601099491119385
    5. 'a' → logprob: -2.9601099491119385
    6. '[]' → logprob: -3.3351099491119385
    7. '[a' → logprob: -3.5851099491119385
    8. 'collections' → logprob: -4.835109710693359
    9. '[[' → logprob: -6.085109710693359
    10. '[max' → logprob: -6.085109710693359

Token 270: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0888647586107254
    2. 'a' → logprob: -2.588864803314209
    3. '1' → logprob: -6.213864803314209
    4. '[a' → logprob: -6.588864803314209
    5. 'x' → logprob: -6.963864803314209
    6. '[]' → logprob: -6.963864803314209
    7. '[' → logprob: -7.088864803314209
    8. '(' → logprob: -7.213864803314209
    9. '(a' → logprob: -7.213864803314209
    10. ']' → logprob: -7.213864803314209

Token 271: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019654035568237305
    2. ']*(' → logprob: -4.519654273986816
    3. ']*' → logprob: -4.769654273986816
    4. ']+' → logprob: -9.769654273986816
    5. ' ]' → logprob: -11.644654273986816
    6. '()]' → logprob: -12.019654273986816
    7. ' for' → logprob: -12.644654273986816
    8. 'for' → logprob: -12.894654273986816
    9. ')]' → logprob: -13.144654273986816
    10. '0' → logprob: -13.769654273986816

Token 272: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5029464960098267
    2. 'n' → logprob: -1.6279464960098267
    3. '(k' → logprob: -2.002946376800537
    4. '(' → logprob: -3.252946376800537
    5. 'k' → logprob: -4.127946376800537
    6. '100' → logprob: -5.377946376800537
    7. '101' → logprob: -7.252946376800537
    8. '20' → logprob: -7.377946376800537
    9. '(len' → logprob: -7.627946376800537
    10. '200' → logprob: -7.627946376800537

Token 273: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05974239110946655
    2. '
' → logprob: -3.6847424507141113
    3. 'a' → logprob: -4.059742450714111
    4. ' for' → logprob: -5.309742450714111
    5. 'b' → logprob: -5.934742450714111
    6. 'max' → logprob: -6.934742450714111
    7. 'count' → logprob: -7.184742450714111
    8. 'prefix' → logprob: -7.309742450714111
    9. 'dp' → logprob: -7.559742450714111
    10. 's' → logprob: -7.684742450714111

Token 274: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11030410975217819
    2. 'for' → logprob: -2.485304117202759
    3. '<|end|>' → logprob: -4.23530387878418
    4. 'a' → logprob: -5.86030387878418
    5. ' for' → logprob: -6.11030387878418
    6. '[' → logprob: -8.61030387878418
    7. ' 
' → logprob: -8.73530387878418
    8. 'max' → logprob: -9.23530387878418
    9. 'idx' → logprob: -9.23530387878418
    10. '0' → logprob: -9.36030387878418

Token 275: ' will' (ID: 738)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6319825053215027
    2. 'a' → logprob: -0.8819825053215027
    3. '[' → logprob: -3.7569825649261475
    4. 'for' → logprob: -4.256982326507568
    5. '1' → logprob: -5.631982326507568
    6. 'k' → logprob: -5.756982326507568
    7. '[a' → logprob: -6.131982326507568
    8. 'n' → logprob: -6.131982326507568
    9. 'b' → logprob: -6.756982326507568
    10. 'aaa' → logprob: -7.256982326507568

Token 276: ' hold' (ID: 5060)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 277: ' something' (ID: 3543)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10165359824895859
    2. 'k' → logprob: -2.851653575897217
    3. 'n' → logprob: -4.101653575897217
    4. '0' → logprob: -4.351653575897217
    5. 'the' → logprob: -6.851653575897217
    6. '[a' → logprob: -6.851653575897217
    7. '(k' → logprob: -6.976653575897217
    8. ' a' → logprob: -7.226653575897217
    9. '1' → logprob: -7.476653575897217
    10. '[' → logprob: -7.601653575897217

Token 278: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8474140763282776
    2. '<|end|>' → logprob: -0.8474140763282776
    3. '
' → logprob: -2.597414016723633
    4. 'i' → logprob: -3.847414016723633
    5. ' for' → logprob: -3.972414016723633
    6. 'a' → logprob: -4.472414016723633
    7. 'idx' → logprob: -5.847414016723633
    8. '[' → logprob: -6.222414016723633
    9. '<|end|>' → logprob: -6.597414016723633
    10. ')' → logprob: -6.972414016723633

Token 279: ' I' (ID: 357)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.542954444885254
    2. 'b' → logprob: -2.917954444885254
    3. ' for' → logprob: -2.917954444885254
    4. 'idx' → logprob: -2.917954444885254
    5. ' idx' → logprob: -3.167954444885254
    6. ' a' → logprob: -3.292954444885254
    7. '0' → logprob: -3.417954444885254
    8. 'dp' → logprob: -3.417954444885254
    9. 'prev' → logprob: -3.417954444885254
    10. 'cnt' → logprob: -3.542954444885254

Token 280: ' forget' (ID: 13814)
  Prédit: 'guess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'guess' → logprob: -0.5042583346366882
    2. ' guess' → logprob: -1.504258394241333
    3. 'think' → logprob: -2.004258394241333
    4. ' think' → logprob: -4.379258155822754
    5. 'f' → logprob: -5.129258155822754
    6. ''m' → logprob: -5.379258155822754
    7. 'd' → logprob: -5.379258155822754
    8. 't' → logprob: -6.254258155822754
    9. 'nd' → logprob: -6.379258155822754
    10. 'n' → logprob: -6.379258155822754

Token 281: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2008252739906311
    2. 'dp' → logprob: -3.8258252143859863
    3. 'count' → logprob: -3.9508252143859863
    4. 'a' → logprob: -4.075825214385986
    5. 'counts' → logprob: -4.075825214385986
    6. 's' → logprob: -4.200825214385986
    7. 'b' → logprob: -4.325825214385986
    8. ')' → logprob: -4.700825214385986
    9. 'max' → logprob: -5.200825214385986
    10. ' for' → logprob: -5.200825214385986

Token 282: 'cnt' (ID: 33160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.050696372985839844
    2. 'dp' → logprob: -4.67569637298584
    3. 'count' → logprob: -4.92569637298584
    4. 'freq' → logprob: -5.55069637298584
    5. 'cnt' → logprob: -5.67569637298584
    6. 'pos' → logprob: -6.05069637298584
    7. 'counts' → logprob: -6.05069637298584
    8. 'max' → logprob: -6.05069637298584
    9. 'cur' → logprob: -6.30069637298584
    10. 'curr' → logprob: -6.42569637298584

Token 283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7024401426315308
    2. ' =' → logprob: -0.8274401426315308
    3. 's' → logprob: -2.7024402618408203
    4. 'a' → logprob: -8.20244026184082
    5. ' ' → logprob: -9.95244026184082
    6. '=[]' → logprob: -10.57744026184082
    7. '  ' → logprob: -11.20244026184082
    8. '[' → logprob: -11.32744026184082
    9. '=[' → logprob: -11.70244026184082
    10. 'r' → logprob: -12.32744026184082

Token 284: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16006061434745789
    2. 'coll' → logprob: -2.0350606441497803
    3. '0' → logprob: -4.535060405731201
    4. '{}' → logprob: -6.160060405731201
    5. ' coll' → logprob: -6.410060405731201
    6. 'collections' → logprob: -6.660060405731201
    7. '[k' → logprob: -7.785060405731201
    8. ' [' → logprob: -8.03506088256836
    9. 'k' → logprob: -8.41006088256836
    10. '{' → logprob: -8.91006088256836

Token 285: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.500017166137695
    3. '[' → logprob: -12.500017166137695
    4. ']' → logprob: -13.125017166137695
    5. 'k' → logprob: -15.375017166137695
    6. 'n' → logprob: -15.750017166137695
    7. '(' → logprob: -15.750017166137695
    8. ' [' → logprob: -16.000017166137695
    9. ')' → logprob: -16.250017166137695
    10. '{}' → logprob: -17.375017166137695

Token 286: ']*' (ID: 18579)
  Prédit: ']*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.5777285099029541
    2. ']*' → logprob: -0.8277285099029541
    3. ']' → logprob: -6.327728271484375
    4. ']+' → logprob: -14.702728271484375
    5. ' for' → logprob: -14.952728271484375
    6. '*(' → logprob: -15.077728271484375
    7. ' ]' → logprob: -15.577728271484375
    8. '*k' → logprob: -16.452728271484375
    9. 'for' → logprob: -16.952728271484375
    10. '(k' → logprob: -17.202728271484375

Token 287: '200' (ID: 1179)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9554932713508606
    2. '(k' → logprob: -1.3304932117462158
    3. '(n' → logprob: -1.9554932117462158
    4. '(' → logprob: -2.080493211746216
    5. '100' → logprob: -2.830493211746216
    6. '(max' → logprob: -4.705493450164795
    7. 'n' → logprob: -5.330493450164795
    8. '101' → logprob: -5.705493450164795
    9. 'max' → logprob: -6.080493450164795
    10. '10' → logprob: -6.330493450164795

Token 288: '2' (ID: 17)
  Prédit: '001'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '001' → logprob: -0.23204219341278076
    2. '000' → logprob: -2.2320423126220703
    3. '005' → logprob: -2.8570423126220703
    4. '002' → logprob: -3.6070423126220703
    5. '1' → logprob: -5.48204231262207
    6. '003' → logprob: -5.85704231262207
    7. '010' → logprob: -5.85704231262207
    8. '0' → logprob: -6.73204231262207
    9. '004' → logprob: -6.98204231262207
    10. '006' → logprob: -7.60704231262207

Token 289: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1773473173379898
    2. ' for' → logprob: -2.177347421646118
    3. '<|end|>' → logprob: -4.177347183227539
    4. 'max' → logprob: -4.427347183227539
    5. 'a' → logprob: -6.302347183227539
    6. 'sum' → logprob: -6.427347183227539
    7. 'idx' → logprob: -6.427347183227539
    8. 'total' → logprob: -6.677347183227539
    9. 'freq' → logprob: -6.927347183227539
    10. 'arr' → logprob: -6.927347183227539

Token 290: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22072692215442657
    2. '
' → logprob: -2.84572696685791
    3. 'max' → logprob: -3.22072696685791
    4. '<|end|>' → logprob: -3.34572696685791
    5. ' for' → logprob: -4.22072696685791
    6. 'ans' → logprob: -4.34572696685791
    7. 'answer' → logprob: -5.09572696685791
    8. 'res' → logprob: -5.09572696685791
    9. 'total' → logprob: -5.59572696685791
    10. 'result' → logprob: -5.84572696685791

Token 291: ' seems' (ID: 7890)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05819796770811081
    2. ' for' → logprob: -2.9331979751586914
    3. '<|end|>' → logprob: -6.933197975158691
    4. '#' → logprob: -7.558197975158691
    5. 'answer' → logprob: -8.058197975158691
    6. 'max' → logprob: -8.308197975158691
    7. 'ans' → logprob: -8.683197975158691
    8. 'freq' → logprob: -9.183197975158691
    9. 'total' → logprob: -9.433197975158691
    10. 'frequency' → logprob: -9.683197975158691

Token 292: ' big' (ID: 3464)
  Prédit: 'like'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'like' → logprob: -0.0540989525616169
    2. ' like' → logprob: -3.0540988445281982
    3. '[' → logprob: -6.804099082946777
    4. '<|end|>' → logprob: -6.929099082946777
    5. 'to' → logprob: -7.054099082946777
    6. 'likely' → logprob: -7.429099082946777
    7. ' to' → logprob: -7.554099082946777
    8. 'len' → logprob: -8.554099082946777
    9. 'a' → logprob: -8.554099082946777
    10. ' ' → logprob: -8.679099082946777

Token 293: ' enough' (ID: 4951)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7765625715255737
    2. '<|end|>' → logprob: -0.9015625715255737
    3. 'a' → logprob: -3.5265626907348633
    4. ' for' → logprob: -3.7765626907348633
    5. ')' → logprob: -4.151562690734863
    6. '#' → logprob: -4.151562690734863
    7. 'max' → logprob: -4.401562690734863
    8. '
' → logprob: -5.151562690734863
    9. 'arr' → logprob: -5.401562690734863
    10. ']' → logprob: -6.026562690734863

Token 294: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09711121022701263
    2. ' for' → logprob: -4.222111225128174
    3. '<|end|>' → logprob: -4.222111225128174
    4. 'max' → logprob: -4.472111225128174
    5. 'answer' → logprob: -5.347111225128174
    6. 'total' → logprob: -5.472111225128174
    7. 'res' → logprob: -5.472111225128174
    8. 'ans' → logprob: -5.472111225128174
    9. 'sum' → logprob: -5.597111225128174
    10. 'dp' → logprob: -5.597111225128174

Token 295: ' probably' (ID: 7038)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2775039672851562
    2. 'for' → logprob: -2.1525039672851562
    3. ' res' → logprob: -2.6525039672851562
    4. ' ans' → logprob: -2.7775039672851562
    5. 'pos' → logprob: -3.0275039672851562
    6. ' pos' → logprob: -3.0275039672851562
    7. ' idx' → logprob: -3.2775039672851562
    8. 'res' → logprob: -3.4025039672851562
    9. 'idx' → logprob: -3.4025039672851562
    10. ' but' → logprob: -3.5275039672851562

Token 296: ' okay' (ID: 25435)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09950987994670868
    2. ' for' → logprob: -2.8495099544525146
    3. 'ans' → logprob: -4.7245097160339355
    4. 'answer' → logprob: -4.9745097160339355
    5. '#' → logprob: -5.3495097160339355
    6. 'res' → logprob: -5.3495097160339355
    7. 'a' → logprob: -5.5995097160339355
    8. 'max' → logprob: -5.7245097160339355
    9. 'result' → logprob: -7.3495097160339355
    10. 'aaa' → logprob: -7.9745097160339355

Token 297: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4320565462112427
    2. '<|end|>' → logprob: -2.557056427001953
    3. 'max' → logprob: -2.807056427001953
    4. 'ans' → logprob: -3.557056427001953
    5. 'answer' → logprob: -3.557056427001953
    6. 'res' → logprob: -3.682056427001953
    7. 'a' → logprob: -4.182056427001953
    8. 'dp' → logprob: -4.182056427001953
    9. 'result' → logprob: -4.307056427001953
    10. 'total' → logprob: -4.807056427001953

Token 298: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004664730280637741
    2. 'res' → logprob: -6.504664897918701
    3. 'left' → logprob: -7.379664897918701
    4. ' for' → logprob: -7.504664897918701
    5. 'cur' → logprob: -7.754664897918701
    6. 'ans' → logprob: -8.004664421081543
    7. 'pos' → logprob: -8.254664421081543
    8. 'i' → logprob: -8.629664421081543
    9. 'answer' → logprob: -9.129664421081543
    10. 'max' → logprob: -9.254664421081543

Token 299: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7586548328399658
    2. ' x' → logprob: -1.3836548328399658
    3. 'i' → logprob: -2.008654832839966
    4. 'x' → logprob: -2.133654832839966
    5. ' ai' → logprob: -4.883654594421387
    6. ' num' → logprob: -5.008654594421387
    7. ' val' → logprob: -5.133654594421387
    8. 'ai' → logprob: -5.883654594421387
    9. 'num' → logprob: -5.883654594421387
    10. ' v' → logprob: -6.758654594421387

Token 300: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38692131638526917
    2. 'in' → logprob: -1.1369212865829468
    3. ' ' → logprob: -10.261920928955078
    4. 'range' → logprob: -12.386920928955078
    5. 'n' → logprob: -13.011920928955078
    6. ',' → logprob: -13.261920928955078
    7. '_' → logprob: -14.011920928955078
    8. '   ' → logprob: -14.011920928955078
    9. ')' → logprob: -14.136920928955078
    10. '	in' → logprob: -14.261920928955078

Token 301: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06210952624678612
    2. ' range' → logprob: -2.8121094703674316
    3. 'a' → logprob: -8.93710994720459
    4. ' a' → logprob: -12.43710994720459
    5. ' ' → logprob: -13.06210994720459
    6. '   ' → logprob: -13.43710994720459
    7. '  ' → logprob: -14.06210994720459
    8. ')' → logprob: -14.43710994720459
    9. 'r' → logprob: -15.06210994720459
    10. '	range' → logprob: -15.06210994720459

Token 302: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0027944184839725494
    2. '(' → logprob: -6.37779426574707
    3. '(k' → logprob: -6.87779426574707
    4. 'n' → logprob: -9.87779426574707
    5. ' (' → logprob: -12.75279426574707
    6. ' n' → logprob: -12.87779426574707
    7. '(len' → logprob: -13.12779426574707
    8. 'k' → logprob: -14.00279426574707
    9. '(
' → logprob: -14.62779426574707
    10. ')' → logprob: -15.25279426574707

Token 303: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.055074211210012436
    2. '):
' → logprob: -2.9300742149353027
    3. '+' → logprob: -9.180073738098145
    4. ')' → logprob: -9.930073738098145
    5. ':' → logprob: -11.305073738098145
    6. '-' → logprob: -11.805073738098145
    7. ' ):' → logprob: -12.055073738098145
    8. '   ' → logprob: -12.180073738098145
    9. '):
' → logprob: -12.180073738098145
    10. ']:' → logprob: -13.555073738098145

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016350740334019065
    2. 'k' → logprob: -6.7516350746154785
    3. ' ' → logprob: -7.7516350746154785
    4. ' k' → logprob: -10.37663459777832
    5. '2' → logprob: -12.87663459777832
    6. ')' → logprob: -14.75163459777832
    7. '   ' → logprob: -15.37663459777832
    8. '(k' → logprob: -15.87663459777832
    9. '-' → logprob: -16.50163459777832
    10. '(' → logprob: -16.87663459777832

Token 305: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10354916006326675
    2. '):
' → logprob: -2.3535492420196533
    3. ' ):' → logprob: -6.728549003601074
    4. ',' → logprob: -6.978549003601074
    5. '+' → logprob: -7.103549003601074
    6. '):
' → logprob: -8.353549003601074
    7. ')' → logprob: -9.728549003601074
    8. ' ):
' → logprob: -10.728549003601074
    9. ':' → logprob: -10.853549003601074
    10. '-' → logprob: -10.978549003601074

Token 306: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00015872348740231246
    2. ' -' → logprob: -8.750158309936523
    3. ' ' → logprob: -16.375158309936523
    4. '0' → logprob: -16.375158309936523
    5. '-k' → logprob: -17.625158309936523
    6. '   ' → logprob: -18.625158309936523
    7. '-n' → logprob: -19.125158309936523
    8. '  ' → logprob: -20.250158309936523
    9. '-
' → logprob: -20.750158309936523
    10. '-i' → logprob: -21.000158309936523

Token 307: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '
' → logprob: -17.25
    4. ' -' → logprob: -17.5
    5. '   ' → logprob: -17.5
    6. '-' → logprob: -17.625
    7. '```' → logprob: -17.875
    8. '2' → logprob: -18.25
    9. '

' → logprob: -18.375
    10. '  ' → logprob: -19.6875

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014168102643452585
    2. '-' → logprob: -9.125142097473145
    3. ',-' → logprob: -10.375142097473145
    4. ' ,' → logprob: -13.875142097473145
    5. ' -' → logprob: -15.000142097473145
    6. ',
' → logprob: -16.500141143798828
    7. '```' → logprob: -16.625141143798828
    8. '1' → logprob: -17.125141143798828
    9. ' ,-' → logprob: -17.875141143798828
    10. '-,' → logprob: -18.000141143798828

Token 309: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005530327325686812
    2. ' -' → logprob: -7.500553131103516
    3. ' ' → logprob: -18.375553131103516
    4. '   ' → logprob: -18.625553131103516
    5. ')' → logprob: -19.500553131103516
    6. '```' → logprob: -19.500553131103516
    7. '1' → logprob: -19.750553131103516
    8. '-i' → logprob: -19.875553131103516
    9. '  ' → logprob: -20.750553131103516
    10. '−' → logprob: -21.000553131103516

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -11.750008583068848
    3. '2' → logprob: -15.250008583068848
    4. '   ' → logprob: -16.37500762939453
    5. '```' → logprob: -16.43750762939453
    6. '
' → logprob: -17.31250762939453
    7. ')' → logprob: -18.12500762939453
    8. '  ' → logprob: -18.56250762939453
    9. '１' → logprob: -18.68750762939453
    10. ',' → logprob: -18.93750762939453

Token 311: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.059349291026592255
    2. '-' → logprob: -3.559349298477173
    3. '):
' → logprob: -3.559349298477173
    4. ',' → logprob: -8.434349060058594
    5. ':' → logprob: -8.934349060058594
    6. '):-' → logprob: -9.559349060058594
    7. ' ):' → logprob: -9.559349060058594
    8. ',-' → logprob: -9.934349060058594
    9. ')' → logprob: -10.059349060058594
    10. ' -' → logprob: -10.059349060058594

Token 312: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46087586879730225
    2. '   ' → logprob: -1.0858758687973022
    3. '<|end|>' → logprob: -4.085875988006592
    4. ':
' → logprob: -4.835875988006592
    5. ' if' → logprob: -6.085875988006592
    6. '):
' → logprob: -6.460875988006592
    7. '):' → logprob: -6.710875988006592
    8. '<|end|>' → logprob: -8.210875511169434
    9. 'if' → logprob: -8.585875511169434
    10. ')' → logprob: -8.835875511169434

Token 313: ' aaa' (ID: 170080)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.33091649413108826
    2. '   ' → logprob: -2.080916404724121
    3. ' cnt' → logprob: -2.205916404724121
    4. 'val' → logprob: -3.830916404724121
    5. ' val' → logprob: -5.330916404724121
    6. 'curr' → logprob: -5.580916404724121
    7. 'x' → logprob: -5.705916404724121
    8. 'if' → logprob: -5.955916404724121
    9. 'for' → logprob: -6.330916404724121
    10. 'aaa' (adapté à ' aaa') → logprob: -6.455916404724121

Token 314: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003169272094964981
    2. '[a' → logprob: -6.003169059753418
    3. '[' → logprob: -7.503169059753418
    4. '][' → logprob: -10.128169059753418
    5. ']' → logprob: -10.503169059753418
    6. '[n' → logprob: -11.003169059753418
    7. ' [' → logprob: -11.753169059753418
    8. 'a' → logprob: -11.878169059753418
    9. '[k' → logprob: -12.128169059753418
    10. '
' → logprob: -12.378169059753418

Token 315: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003695920342579484
    2. ']=' → logprob: -5.628695964813232
    3. '=' → logprob: -10.003695487976074
    4. ']+=' → logprob: -10.003695487976074
    5. ' ]' → logprob: -13.503695487976074
    6. ' =' → logprob: -13.878695487976074
    7. ']=(' → logprob: -13.878695487976074
    8. '+' → logprob: -14.378695487976074
    9. '[' → logprob: -15.253695487976074
    10. ')' → logprob: -15.253695487976074

Token 316: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026447869837284088
    2. ' =' → logprob: -3.6514477729797363
    3. '+=' → logprob: -8.901448249816895
    4. ' +=' → logprob: -11.776448249816895
    5. '=k' → logprob: -14.276448249816895
    6. '=len' → logprob: -14.401448249816895
    7. '=int' → logprob: -14.526448249816895
    8. '=max' → logprob: -15.151448249816895
    9. '=b' → logprob: -15.151448249816895
    10. '=a' → logprob: -15.151448249816895

Token 317: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.08299444615840912
    2. 'aaa' → logprob: -2.7079944610595703
    3. 'a' → logprob: -5.70799446105957
    4. 'k' → logprob: -5.70799446105957
    5. 'bis' → logprob: -5.83299446105957
    6. '1' → logprob: -6.83299446105957
    7. ' cnt' → logprob: -7.83299446105957
    8. '(' → logprob: -7.83299446105957
    9. 'max' → logprob: -7.95799446105957
    10. '0' → logprob: -8.70799446105957

Token 318: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00048286578385159373
    2. '[' → logprob: -8.000482559204102
    3. 'a' → logprob: -9.000482559204102
    4. '[k' → logprob: -11.000482559204102
    5. '[i' → logprob: -13.125482559204102
    6. '   ' → logprob: -13.750482559204102
    7. 'k' → logprob: -14.125482559204102
    8. '[arr' → logprob: -14.750482559204102
    9. '][' → logprob: -14.875482559204102
    10. ' [' → logprob: -15.125482559204102

Token 319: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.4121114822482923e-06
    2. 'a' → logprob: -13.375003814697266
    3. '[a' → logprob: -14.000003814697266
    4. '[' → logprob: -14.125003814697266
    5. ' [' → logprob: -16.125003814697266
    6. 'i' → logprob: -17.000003814697266
    7. '```' → logprob: -17.750003814697266
    8. '[
' → logprob: -19.000003814697266
    9. '
' → logprob: -19.125003814697266
    10. '[n' → logprob: -19.375003814697266

Token 320: ']]
' (ID: 29446)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.081584716506768e-05
    2. 'i' → logprob: -11.250020980834961
    3. ']' → logprob: -12.625020980834961
    4. '```' → logprob: -13.500020980834961
    5. 'a' → logprob: -13.875020980834961
    6. '[' → logprob: -14.125020980834961
    7. '(i' → logprob: -15.000020980834961
    8. '-' → logprob: -15.625020980834961
    9. '   ' → logprob: -16.00002098083496
    10. '])' → logprob: -16.25002098083496

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7718682289123535
    2. '[a' → logprob: -1.0218682289123535
    3. 'a' → logprob: -1.7718682289123535
    4. 'cnt' → logprob: -5.0218682289123535
    5. '
' → logprob: -7.8968682289123535
    6. ']' → logprob: -8.021867752075195
    7. '[cnt' → logprob: -8.771867752075195
    8. '[' → logprob: -9.271867752075195
    9. ' a' → logprob: -9.771867752075195
    10. '[i' → logprob: -10.021867752075195

Token 322: ' for' (ID: 395)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.00011915886716451496
    2. '   ' → logprob: -9.62511920928955
    3. '[cnt' → logprob: -10.37511920928955
    4. ' cnt' → logprob: -11.00011920928955
    5. '	cnt' → logprob: -13.37511920928955
    6. 'a' → logprob: -13.37511920928955
    7. '
' → logprob: -13.62511920928955
    8. '    
' → logprob: -15.37511920928955
    9. '(cnt' → logprob: -16.125118255615234
    10. '[' → logprob: -16.375118255615234

Token 323: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16603457927703857
    2. 'x' → logprob: -2.166034698486328
    3. ' j' → logprob: -4.166034698486328
    4. 'v' → logprob: -4.291034698486328
    5. 'val' → logprob: -5.541034698486328
    6. 'a' → logprob: -6.291034698486328
    7. ' x' → logprob: -6.791034698486328
    8. 'num' → logprob: -7.791034698486328
    9. '_j' → logprob: -8.291034698486328
    10. 'c' → logprob: -8.541034698486328

Token 324: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2359417974948883
    2. 'in' → logprob: -1.610941767692566
    3. 'a' → logprob: -5.1109418869018555
    4. 'range' → logprob: -5.6109418869018555
    5. '   ' → logprob: -8.985941886901855
    6. 'ange' → logprob: -9.235941886901855
    7. '1' → logprob: -9.360941886901855
    8. 'd' → logprob: -9.860941886901855
    9. '  ' → logprob: -9.985941886901855
    10. 'i' → logprob: -9.985941886901855

Token 325: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01613512821495533
    2. ' range' → logprob: -4.391135215759277
    3. 'a' → logprob: -5.891135215759277
    4. '[a' → logprob: -7.391135215759277
    5. '[' → logprob: -9.016135215759277
    6. '   ' → logprob: -10.516135215759277
    7. '(range' → logprob: -10.516135215759277
    8. ' ' → logprob: -11.516135215759277
    9. ' a' → logprob: -11.891135215759277
    10. 'cnt' → logprob: -12.016135215759277

Token 326: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.10951922088861465
    2. '(' → logprob: -2.6095192432403564
    3. 'a' → logprob: -3.8595192432403564
    4. '(max' → logprob: -5.359519004821777
    5. '(i' → logprob: -5.984519004821777
    6. '1' → logprob: -7.234519004821777
    7. '(k' → logprob: -7.234519004821777
    8. '(len' → logprob: -9.359519004821777
    9. 'max' → logprob: -9.734519004821777
    10. '(n' → logprob: -9.984519004821777

Token 327: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.703443770878948e-06
    2. 'i' → logprob: -12.250007629394531
    3. '[' → logprob: -13.375007629394531
    4. 'a' → logprob: -14.500007629394531
    5. '[j' → logprob: -15.000007629394531
    6. ' ' → logprob: -16.75000762939453
    7. '   ' → logprob: -17.00000762939453
    8. 'n' → logprob: -17.37500762939453
    9. 'import' → logprob: -17.37500762939453
    10. '[a' → logprob: -17.50000762939453

Token 328: ']+' (ID: 15344)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001468067930545658
    2. ']+' → logprob: -9.500146865844727
    3. 'i' → logprob: -10.250146865844727
    4. '(i' → logprob: -11.000146865844727
    5. ']' → logprob: -12.000146865844727
    6. '],' → logprob: -12.250146865844727
    7. '-' → logprob: -13.125146865844727
    8. ']-' → logprob: -13.125146865844727
    9. '[' → logprob: -13.875146865844727
    10. '   ' → logprob: -14.375146865844727

Token 329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006280870293267071
    2. ' ' → logprob: -7.6256279945373535
    3. '2' → logprob: -10.000628471374512
    4. '200' → logprob: -10.625628471374512
    5. '   ' → logprob: -11.000628471374512
    6. 'n' → logprob: -11.000628471374512
    7. 'k' → logprob: -11.750628471374512
    8. ',' → logprob: -11.750628471374512
    9. 'a' → logprob: -11.750628471374512
    10. '+' → logprob: -12.875628471374512

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032163821742869914
    2. '200' → logprob: -8.250321388244629
    3. ' ,' → logprob: -10.000321388244629
    4. ' ' → logprob: -12.125321388244629
    5. '2' → logprob: -13.000321388244629
    6. ',n' → logprob: -13.000321388244629
    7. '   ' → logprob: -13.250321388244629
    8. '+' → logprob: -13.875321388244629
    9. '1' → logprob: -14.500321388244629
    10. '201' → logprob: -15.125321388244629

Token 331: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.000874539720825851
    2. 'len' → logprob: -8.000874519348145
    3. ' ' → logprob: -8.250874519348145
    4. 'k' → logprob: -8.375874519348145
    5. '100' → logprob: -10.250874519348145
    6. 'max' → logprob: -12.750874519348145
    7. ' len' → logprob: -13.250874519348145
    8. '   ' → logprob: -13.625874519348145
    9. '2' → logprob: -13.750874519348145
    10. 'n' → logprob: -14.125874519348145

Token 332: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.002817954868078232
    2. 'len' → logprob: -6.0028181076049805
    3. 'k' → logprob: -8.12781810760498
    4. '100' → logprob: -10.87781810760498
    5. ' ' → logprob: -10.87781810760498
    6. ' len' → logprob: -13.00281810760498
    7. 'max' → logprob: -13.25281810760498
    8. 'n' → logprob: -13.87781810760498
    9. '2' → logprob: -14.25281810760498
    10. '0' → logprob: -14.62781810760498

Token 333: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008451257599517703
    2. '1' → logprob: -7.250844955444336
    3. '3' → logprob: -9.000844955444336
    4. '0' → logprob: -11.625844955444336
    5. '```' → logprob: -14.063344955444336
    6. '   ' → logprob: -14.625844955444336
    7. ' ' → logprob: -14.688344955444336
    8. '
' → logprob: -15.750844955444336
    9. '):' → logprob: -15.938344955444336
    10. ')' → logprob: -16.563344955444336

Token 334: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3868992328643799
    2. '):
' → logprob: -1.1368992328643799
    3. '):
' → logprob: -11.1368989944458
    4. ':' → logprob: -11.7618989944458
    5. ']:' → logprob: -13.0118989944458
    6. '):

' → logprob: -14.0118989944458
    7. ' ):' → logprob: -14.2618989944458
    8. '   ' → logprob: -14.6368989944458
    9. ':
' → logprob: -14.7618989944458
    10. ' ):
' → logprob: -15.1368989944458

Token 335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001342850853689015
    2. '   ' → logprob: -6.8763427734375
    3. 'cnt' → logprob: -8.2513427734375
    4. ':
' → logprob: -11.0013427734375
    5. '           ' → logprob: -11.6263427734375
    6. '	   ' → logprob: -12.0013427734375
    7. '	cnt' → logprob: -12.2513427734375
    8. ' cnt' → logprob: -12.5013427734375
    9. ':' → logprob: -12.8763427734375
    10. '	' → logprob: -13.1263427734375

Token 336: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0821995660662651
    2. '       ' → logprob: -2.7071995735168457
    3. '           ' → logprob: -4.957199573516846
    4. '   ' → logprob: -5.457199573516846
    5. ' cnt' → logprob: -7.332199573516846
    6. '	cnt' → logprob: -8.707199096679688
    7. '               ' → logprob: -10.957199096679688
    8. 'count' → logprob: -10.957199096679688
    9. '[cnt' → logprob: -11.707199096679688
    10. 'if' → logprob: -11.707199096679688

Token 337: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.512236498361744e-07
    2. 'j' → logprob: -15.250000953674316
    3. '[' → logprob: -15.500000953674316
    4. '   ' → logprob: -17.25
    5. '[i' → logprob: -17.5
    6. '```' → logprob: -18.25
    7. '
' → logprob: -19.125
    8. ' [' → logprob: -19.25
    9. '	j' → logprob: -19.5
    10. '[a' → logprob: -19.875

Token 338: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006718690041452646
    2. ']+=' → logprob: -5.006718635559082
    3. '[j' → logprob: -14.131718635559082
    4. ' ]' → logprob: -14.506718635559082
    5. ']+' → logprob: -14.631718635559082
    6. ')' → logprob: -14.881718635559082
    7. '[' → logprob: -15.006718635559082
    8. 'j' → logprob: -15.506718635559082
    9. ']=' → logprob: -15.631718635559082
    10. ']-' → logprob: -15.881718635559082

Token 339: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005311904475092888
    2. '-=' → logprob: -5.880311965942383
    3. ']+=' → logprob: -6.880311965942383
    4. ' +=' → logprob: -7.130311965942383
    5. '=' → logprob: -7.505311965942383
    6. ']' → logprob: -9.255311965942383
    7. '[' → logprob: -10.880311965942383
    8. '>' → logprob: -12.255311965942383
    9. ')' → logprob: -13.255311965942383
    10. ' -=' → logprob: -13.505311965942383

Token 340: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.039534326642751694
    2. 'aaa' → logprob: -3.414534330368042
    3. 'cnt' → logprob: -5.164534091949463
    4. ' ' → logprob: -9.289534568786621
    5. ' aaa' → logprob: -10.664534568786621
    6. '   ' → logprob: -11.414534568786621
    7. ' cnt' → logprob: -11.414534568786621
    8. 'ccc' → logprob: -12.289534568786621
    9. 'abc' → logprob: -13.414534568786621
    10. 'aaaa' → logprob: -13.664534568786621

Token 341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18279051780700684
    2. 'aaa' → logprob: -1.8077905178070068
    3. 'cnt' → logprob: -5.807790756225586
    4. 'ccc' → logprob: -11.807790756225586
    5. ' ' → logprob: -12.057790756225586
    6. 'aaaa' → logprob: -12.307790756225586
    7. ' aaa' → logprob: -12.432790756225586
    8. '   ' → logprob: -13.057790756225586
    9. 'aa' → logprob: -13.182790756225586
    10. '0' → logprob: -13.182790756225586

Token 342: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: 'total' (ID: 9577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6930675506591797
    2. '<|end|>' → logprob: -1.4430675506591797
    3. 'print' → logprob: -1.6930675506591797
    4. '#' → logprob: -3.8180675506591797
    5. ')' → logprob: -4.31806755065918
    6. 'max' → logprob: -4.81806755065918
    7. 'cnt' → logprob: -5.44306755065918
    8. 'k' → logprob: -5.56806755065918
    9. 'answer' → logprob: -5.69306755065918
    10. 'result' → logprob: -5.69306755065918

Token 344: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27073022723197937
    2. '=' → logprob: -1.6457302570343018
    3. '_' → logprob: -3.6457302570343018
    4. ' +=' → logprob: -4.270730018615723
    5. '+=' → logprob: -6.270730018615723
    6. '_pairs' → logprob: -7.145730018615723
    7. '_count' → logprob: -8.020730018615723
    8. ' ' → logprob: -8.270730018615723
    9. '_tokens' → logprob: -8.895730018615723
    10. '_sum' → logprob: -8.895730018615723

Token 345: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0026941976975649595
    2. ' ' → logprob: -6.377694129943848
    3. 'sum' → logprob: -7.002694129943848
    4. ' sum' → logprob: -11.002694129943848
    5. 'aaa' → logprob: -11.127694129943848
    6. 'k' → logprob: -11.377694129943848
    7. 'n' → logprob: -11.502694129943848
    8. 'max' → logprob: -12.502694129943848
    9. '   ' → logprob: -12.752694129943848
    10. '000' → logprob: -12.815194129943848

Token 346: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014688141644001007
    2. 'sum' → logprob: -4.264688014984131
    3. 'max' → logprob: -8.014688491821289
    4. 'aaa' → logprob: -9.764688491821289
    5. 'k' → logprob: -9.889688491821289
    6. 'n' → logprob: -10.514688491821289
    7. ' ' → logprob: -10.639688491821289
    8. 'cnt' → logprob: -12.014688491821289
    9. '000' → logprob: -12.514688491821289
    10. ' sum' → logprob: -12.639688491821289

Token 347: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005989041528664529
    2. '<|end|>' → logprob: -7.875598907470703
    3. ' for' → logprob: -8.875598907470703
    4. '#' → logprob: -10.875598907470703
    5. 'i' → logprob: -11.125598907470703
    6. 'total' → logprob: -11.750598907470703
    7. 'left' → logprob: -12.000598907470703
    8. ')' → logprob: -12.375598907470703
    9. 'answer' → logprob: -12.750598907470703
    10. '
' → logprob: -12.875598907470703

Token 348: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004721326287835836
    2. 'left' → logprob: -5.754721164703369
    3. 'from' → logprob: -8.254721641540527
    4. 'l' → logprob: -8.629721641540527
    5. 'stack' → logprob: -8.754721641540527
    6. 'j' → logprob: -8.879721641540527
    7. 'i' → logprob: -9.504721641540527
    8. 'pairs' → logprob: -9.504721641540527
    9. 'inv' → logprob: -9.629721641540527
    10. 'bit' → logprob: -9.754721641540527

Token 349: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.054937347769737244
    2. 'x' → logprob: -3.1799373626708984
    3. ' i' → logprob: -4.804937362670898
    4. 'val' → logprob: -6.554937362670898
    5. 'v' → logprob: -7.429937362670898
    6. ' x' → logprob: -7.804937362670898
    7. 'j' → logprob: -8.179937362670898
    8. 'a' → logprob: -8.554937362670898
    9. 'num' → logprob: -8.554937362670898
    10. 'value' → logprob: -8.929937362670898

Token 350: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009028852917253971
    2. 'in' → logprob: -4.759028911590576
    3. ' ' → logprob: -9.134028434753418
    4. 'range' → logprob: -9.259028434753418
    5. ',' → logprob: -9.509028434753418
    6. '(' → logprob: -9.759028434753418
    7. ')' → logprob: -10.634028434753418
    8. ' range' → logprob: -11.384028434753418
    9. 'n' → logprob: -11.884028434753418
    10. '  ' → logprob: -11.884028434753418

Token 351: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00012451570364646614
    2. ' range' → logprob: -9.00012493133545
    3. '(range' → logprob: -15.00012493133545
    4. '   ' → logprob: -15.75012493133545
    5. ' ' → logprob: -16.000123977661133
    6. 'n' → logprob: -16.250123977661133
    7. '
' → logprob: -16.375123977661133
    8. 'a' → logprob: -16.500123977661133
    9. 'r' → logprob: -17.000123977661133
    10. 'ran' → logprob: -17.375123977661133

Token 352: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0012315383646637201
    2. 'n' → logprob: -6.751231670379639
    3. '(' → logprob: -9.87623119354248
    4. '(len' → logprob: -11.87623119354248
    5. ' n' → logprob: -13.87623119354248
    6. ',n' → logprob: -15.00123119354248
    7. 'range' → logprob: -15.12623119354248
    8. '<n' → logprob: -15.12623119354248
    9. '(k' → logprob: -15.50123119354248
    10. ' (' → logprob: -15.50123119354248

Token 353: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11672680824995041
    2. '):
' → logprob: -2.741726875305176
    3. '):' → logprob: -3.116726875305176
    4. ' -' → logprob: -6.741726875305176
    5. '-n' → logprob: -9.616726875305176
    6. '
' → logprob: -10.241726875305176
    7. ')' → logprob: -10.366726875305176
    8. '   ' → logprob: -10.366726875305176
    9. '):

' → logprob: -11.116726875305176
    10. ' ' → logprob: -11.866726875305176

Token 354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005821787286549807
    2. '2' → logprob: -5.505821704864502
    3. 'k' → logprob: -7.505821704864502
    4. 'n' → logprob: -7.755821704864502
    5. 'range' → logprob: -7.880821704864502
    6. '-' → logprob: -8.13082218170166
    7. ' ' → logprob: -10.50582218170166
    8. ')' → logprob: -10.50582218170166
    9. '
' → logprob: -10.88082218170166
    10. '(' → logprob: -12.75582218170166

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2125197798013687
    2. '-' → logprob: -1.8375197649002075
    3. ' -' → logprob: -3.587519884109497
    4. '):
' → logprob: -6.587519645690918
    5. '):' → logprob: -6.962519645690918
    6. ' ,' → logprob: -6.962519645690918
    7. ',-' → logprob: -7.462519645690918
    8. '
' → logprob: -8.837519645690918
    9. '):

' → logprob: -8.837519645690918
    10. '   ' → logprob: -9.337519645690918

Token 356: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1484554260969162
    2. ' -' → logprob: -2.0234553813934326
    3. '0' → logprob: -5.273455619812012
    4. ' ' → logprob: -7.898455619812012
    5. 'k' → logprob: -9.148455619812012
    6. '-k' → logprob: -9.398455619812012
    7. ' k' → logprob: -10.773455619812012
    8. 'i' → logprob: -11.148455619812012
    9. '1' → logprob: -11.398455619812012
    10. ',' → logprob: -11.898455619812012

Token 357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014784404775127769
    2. '-' → logprob: -6.626478672027588
    3. '0' → logprob: -10.00147819519043
    4. ' -' → logprob: -10.00147819519043
    5. ' ' → logprob: -10.50147819519043
    6. '2' → logprob: -11.50147819519043
    7. ',' → logprob: -11.87647819519043
    8. '```' → logprob: -11.87647819519043
    9. '   ' → logprob: -12.93897819519043
    10. '``' → logprob: -13.87647819519043

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12484768033027649
    2. '-' → logprob: -2.249847650527954
    3. ' -' → logprob: -4.499847888946533
    4. ',-' → logprob: -7.749847888946533
    5. '):
' → logprob: -8.499847412109375
    6. ' ,' → logprob: -9.624847412109375
    7. '   ' → logprob: -9.999847412109375
    8. '0' → logprob: -10.499847412109375
    9. '+' → logprob: -10.749847412109375
    10. '):' → logprob: -11.749847412109375

Token 359: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3874523341655731
    2. ' -' → logprob: -1.1374523639678955
    3. '0' → logprob: -7.512452125549316
    4. ' ' → logprob: -10.387452125549316
    5. ',' → logprob: -13.137452125549316
    6. '-i' → logprob: -14.387452125549316
    7. '1' → logprob: -14.637452125549316
    8. ')' → logprob: -15.012452125549316
    9. '   ' → logprob: -15.262452125549316
    10. '-k' → logprob: -16.012453079223633

Token 360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6656825866666622e-05
    2. '-' → logprob: -11.00002670288086
    3. '0' → logprob: -12.12502670288086
    4. ' ' → logprob: -13.12502670288086
    5. '2' → logprob: -13.87502670288086
    6. ')' → logprob: -14.87502670288086
    7. '   ' → logprob: -14.87502670288086
    8. '```' → logprob: -15.37502670288086
    9. '
' → logprob: -15.62502670288086
    10. ' -' → logprob: -16.37502670288086

Token 361: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25511306524276733
    2. '):' → logprob: -1.505113124847412
    3. ':' → logprob: -6.130113124847412
    4. '   ' → logprob: -7.755113124847412
    5. '-' → logprob: -8.505112648010254
    6. ':
' → logprob: -8.630112648010254
    7. '):
' → logprob: -9.880112648010254
    8. '():
' → logprob: -10.005112648010254
    9. '0' → logprob: -10.380112648010254
    10. ',' → logprob: -11.255112648010254

Token 362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.968934758333489e-05
    2. ' if' → logprob: -10.250069618225098
    3. 'total' → logprob: -11.625069618225098
    4. 'if' → logprob: -11.875069618225098
    5. ' for' → logprob: -12.250069618225098
    6. 'for' → logprob: -12.250069618225098
    7. ' total' → logprob: -12.500069618225098
    8. '   ' → logprob: -12.750069618225098
    9. '       ' → logprob: -14.250069618225098
    10. '	total' → logprob: -15.125069618225098

Token 363: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.1464546173810959
    2. 'for' → logprob: -3.0214545726776123
    3. '   ' → logprob: -3.1464545726776123
    4. 'if' → logprob: -3.8964545726776123
    5. 'x' → logprob: -4.021454811096191
    6. 'j' → logprob: -5.896454811096191
    7. 'val' → logprob: -7.146454811096191
    8. 'c' → logprob: -7.271454811096191
    9. 'cnt' → logprob: -7.396454811096191
    10. 'count' → logprob: -7.521454811096191

Token 364: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5759924650192261
    2. ' +=' → logprob: -0.8259924650192261
    3. '=' → logprob: -10.200992584228516
    4. ' =' → logprob: -11.575992584228516
    5. '+=(' → logprob: -13.200992584228516
    6. ']+=' → logprob: -13.450992584228516
    7. '   ' → logprob: -13.950992584228516
    8. '+' → logprob: -13.950992584228516
    9. ' -=' → logprob: -15.075992584228516
    10. ' ' → logprob: -15.450992584228516

Token 365: ' k' (ID: 372)
  Prédit: 'aaa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aaa' → logprob: -2.45848218582978e-06
    2. '   ' → logprob: -14.00000286102295
    3. ' aaa' → logprob: -14.37500286102295
    4. 'a' → logprob: -15.37500286102295
    5. 'aa' → logprob: -15.50000286102295
    6. 'ccc' → logprob: -15.75000286102295
    7. 'aaaa' → logprob: -16.125001907348633
    8. 'cnt' → logprob: -16.625001907348633
    9. 'bbb' → logprob: -16.750001907348633
    10. '(' → logprob: -16.750001907348633

Token 366: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6005500555038452
    2. '-' → logprob: -1.9755500555038452
    3. ' -' → logprob: -2.2255501747131348
    4. ' *' → logprob: -2.3505501747131348
    5. 'aaa' → logprob: -2.4755501747131348
    6. '[' → logprob: -4.725550174713135
    7. '*a' → logprob: -5.600550174713135
    8. ' aaa' → logprob: -5.600550174713135
    9. '[i' → logprob: -6.100550174713135
    10. 'a' → logprob: -6.725550174713135

Token 367: ' aaa' (ID: 170080)
  Prédit: 'aaa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aaa' → logprob: -0.001588654238730669
    2. ' aaa' → logprob: -6.501588821411133
    3. '(' → logprob: -9.626588821411133
    4. 'a' → logprob: -12.501588821411133
    5. '   ' → logprob: -12.876588821411133
    6. 'total' → logprob: -13.126588821411133
    7. 'aaaa' → logprob: -13.251588821411133
    8. ' ' → logprob: -13.376588821411133
    9. '  ' → logprob: -13.376588821411133
    10. 'aa' → logprob: -13.501588821411133

Token 368: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00043496055877767503
    2. 'i' → logprob: -7.750434875488281
    3. '[' → logprob: -12.875434875488281
    4. ' [' → logprob: -14.500434875488281
    5. '```' → logprob: -14.750434875488281
    6. '[
' → logprob: -15.750434875488281
    7. ' i' → logprob: -16.25043487548828
    8. '\[' → logprob: -16.50043487548828
    9. '`' → logprob: -17.00043487548828
    10. '(i' → logprob: -17.12543487548828

Token 369: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1532357633113861
    2. ')' → logprob: -2.653235673904419
    3. '<|end|>' → logprob: -3.153235673904419
    4. ' ]' → logprob: -4.403235912322998
    5. ' ' → logprob: -5.028235912322998
    6. '[' → logprob: -5.403235912322998
    7. '[i' → logprob: -5.903235912322998
    8. ' )' → logprob: -7.153235912322998
    9. '%' → logprob: -8.15323543548584
    10. ' -' → logprob: -8.40323543548584

Token 370: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23626193404197693
    2. '<|end|>' → logprob: -2.1112618446350098
    3. '%' → logprob: -3.1112618446350098
    4. ' ' → logprob: -3.6112618446350098
    5. '   ' → logprob: -4.73626184463501
    6. ' %' → logprob: -5.36126184463501
    7. ' 
' → logprob: -6.23626184463501
    8. '    ' → logprob: -7.48626184463501
    9. '    
' → logprob: -7.98626184463501
    10. '```' → logprob: -8.486262321472168

Token 371: ' if' (ID: 538)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.1527650356292725
    2. 'print' → logprob: -1.2777650356292725
    3. '   ' → logprob: -1.9027650356292725
    4. ' total' → logprob: -2.2777650356292725
    5. 'k' → logprob: -2.4027650356292725
    6. ' k' → logprob: -3.2777650356292725
    7. ' print' → logprob: -4.527765274047852
    8. ' if' → logprob: -5.652765274047852
    9. '    ' → logprob: -5.652765274047852
    10. 'if' (adapté à ' if') → logprob: -5.777765274047852

Token 372: ' total' (ID: 3609)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15835818648338318
    2. ' a' → logprob: -2.408358097076416
    3. 'k' → logprob: -3.533358097076416
    4. 'total' → logprob: -4.283358097076416
    5. ' k' → logprob: -5.158358097076416
    6. ' total' → logprob: -5.658358097076416
    7. 'cnt' → logprob: -6.908358097076416
    8. 'aaa' → logprob: -7.158358097076416
    9. ' aaa' → logprob: -7.533358097076416
    10. '(a' → logprob: -7.783358097076416

Token 373: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2928397059440613
    2. '>=' → logprob: -1.417839765548706
    3. ' >' → logprob: -5.042839527130127
    4. '>' → logprob: -5.292839527130127
    5. '%' → logprob: -9.417840003967285
    6. ' ' → logprob: -10.542840003967285
    7. ' %' → logprob: -11.667840003967285
    8. ')>=' → logprob: -11.917840003967285
    9. ']>=' → logprob: -12.667840003967285
    10. '   ' → logprob: -13.167840003967285

Token 374: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0002613358374219388
    2. ' MOD' → logprob: -8.250261306762695
    3. ' ' → logprob: -18.375261306762695
    4. '_MOD' → logprob: -19.250261306762695
    5. '   ' → logprob: -19.375261306762695
    6. '10' → logprob: -19.375261306762695
    7. '.MOD' → logprob: -20.250261306762695
    8. 'MO' → logprob: -20.500261306762695
    9. '100' → logprob: -20.875261306762695
    10. '  ' → logprob: -22.125261306762695

Token 375: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009824798442423344
    2. ':
' → logprob: -4.634824752807617
    3. '   ' → logprob: -10.134824752807617
    4. 'total' → logprob: -11.509824752807617
    5. '       ' → logprob: -12.384824752807617
    6. '(total' → logprob: -13.009824752807617
    7. '):' → logprob: -13.134824752807617
    8. '_total' → logprob: -13.134824752807617
    9. ' total' → logprob: -13.259824752807617
    10. ':return' → logprob: -13.384824752807617

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.485916405916214
    2. '   ' → logprob: -0.9859163761138916
    3. ' total' → logprob: -4.610916614532471
    4. 'total' → logprob: -6.360916614532471
    5. '	total' → logprob: -9.610916137695312
    6. ',total' → logprob: -11.485916137695312
    7. '(total' → logprob: -11.735916137695312
    8. '```' → logprob: -12.485916137695312
    9. '   ' → logprob: -12.735916137695312
    10. '	   ' → logprob: -13.235916137695312

Token 377: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.13746923208236694
    2. 'total' (adapté à ' total') → logprob: -2.3874692916870117
    3. '       ' → logprob: -3.5124692916870117
    4. '   ' → logprob: -5.012469291687012
    5. '	total' → logprob: -9.262469291687012
    6. '           ' → logprob: -13.887469291687012
    7. ',total' → logprob: -14.137469291687012
    8. ' ' → logprob: -14.262469291687012
    9. '(total' → logprob: -14.387469291687012
    10. '_total' → logprob: -15.262469291687012

Token 378: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.44142666459083557
    2. '-=' → logprob: -1.1914266347885132
    3. ' %=' → logprob: -3.1914267539978027
    4. ' -=' → logprob: -4.441426753997803
    5. '%' → logprob: -8.941426277160645
    6. '-' → logprob: -9.816426277160645
    7. '=' → logprob: -11.691426277160645
    8. ' ' → logprob: -12.191426277160645
    9. '%-' → logprob: -13.816426277160645
    10. '+=' → logprob: -14.191426277160645

Token 379: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.7697225252486533e-06
    2. ' MOD' → logprob: -12.500003814697266
    3. '_MOD' → logprob: -21.500003814697266
    4. '.MOD' → logprob: -21.875003814697266
    5. 'MO' → logprob: -22.125003814697266
    6. 'M' → logprob: -23.375003814697266
    7. 'MODE' → logprob: -24.875003814697266
    8. '(M' → logprob: -25.250003814697266
    9. '   ' → logprob: -25.250003814697266
    10. ' ' → logprob: -25.750003814697266

Token 380: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005604273173958063
    2. '   ' → logprob: -5.880604267120361
    3. '<|end|>' → logprob: -6.880604267120361
    4. ')' → logprob: -7.130604267120361
    5. '#' → logprob: -8.13060474395752
    6. 'for' → logprob: -8.50560474395752
    7. 'return' → logprob: -8.88060474395752
    8. ' print' → logprob: -9.00560474395752
    9. '```' → logprob: -9.38060474395752
    10. ']' → logprob: -11.13060474395752

Token 381: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010070850839838386
    2. '   ' → logprob: -7.376007080078125
    3. 'for' → logprob: -8.001007080078125
    4. ' print' → logprob: -11.126007080078125
    5. 'return' → logprob: -11.626007080078125
    6. '#' → logprob: -12.126007080078125
    7. 'total' → logprob: -12.251007080078125
    8. '<|end|>' → logprob: -12.876007080078125
    9. '```' → logprob: -12.876007080078125
    10. ')' → logprob: -13.126007080078125

Token 382: ' total' (ID: 3609)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009181279456242919
    2. '   ' → logprob: -7.750917911529541
    3. 'total' (adapté à ' total') → logprob: -8.7509183883667
    4. 'k' → logprob: -8.8759183883667
    5. ' print' → logprob: -9.3759183883667
    6. 'for' → logprob: -9.6259183883667
    7. 'a' → logprob: -12.2509183883667
    8. '```' → logprob: -12.5009183883667
    9. 'i' → logprob: -12.6259183883667
    10. '#' → logprob: -12.7509183883667

Token 383: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7446790933609009
    2. '%' → logprob: -1.4946790933609009
    3. '<|end|>' → logprob: -2.3696789741516113
    4. ')' → logprob: -2.4946789741516113
    5. '%=' → logprob: -2.7446789741516113
    6. ' %=' → logprob: -3.6196789741516113
    7. '+=' → logprob: -4.244678974151611
    8. ' +=' → logprob: -5.369678974151611
    9. ' =' → logprob: -5.369678974151611
    10. '```' → logprob: -5.994678974151611

Token 384: ' ((' (ID: 3536)
  Prédit: 'aaa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aaa' → logprob: -0.8223385214805603
    2. 'a' → logprob: -0.9473385214805603
    3. 'cnt' → logprob: -2.072338581085205
    4. 'k' → logprob: -3.447338581085205
    5. '1' → logprob: -5.072338581085205
    6. '(' → logprob: -5.947338581085205
    7. 'i' → logprob: -6.572338581085205
    8. ' aaa' → logprob: -7.447338581085205
    9. 'aaaa' → logprob: -7.572338581085205
    10. ' cnt' → logprob: -7.822338581085205

Token 385: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6824589371681213
    2. 'a' → logprob: -1.3074588775634766
    3. 'aaa' → logprob: -2.0574588775634766
    4. 'n' → logprob: -2.5574588775634766
    5. 'cnt' → logprob: -4.682458877563477
    6. '(k' → logprob: -5.807458877563477
    7. 'i' → logprob: -6.557458877563477
    8. '(a' → logprob: -6.682458877563477
    9. '(' → logprob: -6.807458877563477
    10. '(n' → logprob: -6.932458877563477

Token 386: '*(' (ID: 14793)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6926559209823608
    2. '*' → logprob: -0.9426559209823608
    3. '-' → logprob: -2.9426560401916504
    4. ' -' → logprob: -3.0676560401916504
    5. '*(' → logprob: -4.81765604019165
    6. ')' → logprob: -6.69265604019165
    7. '+' → logprob: -7.19265604019165
    8. ' ' → logprob: -8.442655563354492
    9. '**' → logprob: -8.442655563354492
    10. ' +' → logprob: -9.192655563354492

Token 387: 'k' (ID: 74)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.21033723652362823
    2. 'k' → logprob: -1.9603372812271118
    3. '*(' → logprob: -3.7103371620178223
    4. ')' → logprob: -4.085337162017822
    5. '*' → logprob: -6.085337162017822
    6. '-' → logprob: -6.210337162017822
    7. '*k' → logprob: -6.835337162017822
    8. ' (' → logprob: -6.960337162017822
    9. ')*(' → logprob: -7.835337162017822
    10. ')(' → logprob: -8.21033763885498

Token 388: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002680652542039752
    2. ' -' → logprob: -6.002680778503418
    3. '+' → logprob: -8.502680778503418
    4. ')' → logprob: -13.752680778503418
    5. ' +' → logprob: -15.002680778503418
    6. '1' → logprob: -15.002680778503418
    7. '−' → logprob: -17.0026798248291
    8. '+-' → logprob: -17.1276798248291
    9. ' ' → logprob: -17.2526798248291
    10. '```' → logprob: -17.5026798248291

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.44312788406387e-05
    2. ' ' → logprob: -10.125054359436035
    3. ')' → logprob: -11.750054359436035
    4. '   ' → logprob: -12.625054359436035
    5. '+' → logprob: -13.625054359436035
    6. '
' → logprob: -15.125054359436035
    7. '  ' → logprob: -15.187554359436035
    8. '    ' → logprob: -15.375054359436035
    9. '-' → logprob: -15.437554359436035
    10. '2' → logprob: -15.625054359436035

Token 390: '))' (ID: 915)
  Prédit: ')//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.056841690093278885
    2. ')' → logprob: -2.9318416118621826
    3. '//' → logprob: -6.681841850280762
    4. ' )' → logprob: -7.806841850280762
    5. ' //' → logprob: -8.681841850280762
    6. ')>>' → logprob: -9.431841850280762
    7. ')%' → logprob: -10.431841850280762
    8. '))' → logprob: -11.431841850280762
    9. ' ' → logprob: -13.431841850280762
    10. '   ' → logprob: -13.431841850280762

Token 391: '//' (ID: 393)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.40274131298065186
    2. '//' → logprob: -1.4027413129806519
    3. ' *' → logprob: -3.2777414321899414
    4. ')' → logprob: -3.7777414321899414
    5. ')//' → logprob: -4.152741432189941
    6. '*' → logprob: -5.402741432189941
    7. ' %' → logprob: -6.652741432189941
    8. ' ' → logprob: -6.777741432189941
    9. '%' → logprob: -6.902741432189941
    10. '   ' → logprob: -7.777741432189941

Token 392: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016539888747502118
    2. ' ' → logprob: -8.750164985656738
    3. '1' → logprob: -12.125164985656738
    4. '(' → logprob: -14.625164985656738
    5. '   ' → logprob: -15.750164985656738
    6. '
' → logprob: -16.375165939331055
    7. '4' → logprob: -16.375165939331055
    8. ')' → logprob: -16.375165939331055
    9. '  ' → logprob: -16.562665939331055
    10. '```' → logprob: -16.625165939331055

Token 393: ')' (ID: 8)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1556723415851593
    2. '*' → logprob: -2.155672311782837
    3. ')' → logprob: -3.780672311782837
    4. ')*' → logprob: -5.280672550201416
    5. ' )' → logprob: -8.905672073364258
    6. ' ' → logprob: -9.280672073364258
    7. '   ' → logprob: -9.405672073364258
    8. '%' → logprob: -10.280672073364258
    9. ')*(' → logprob: -10.280672073364258
    10. '*n' → logprob: -11.530672073364258

Token 394: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2520638108253479
    2. '*' → logprob: -1.5020637512207031
    3. '   ' → logprob: -9.627063751220703
    4. '*(' → logprob: -10.502063751220703
    5. '<|end|>' → logprob: -11.502063751220703
    6. '*a' → logprob: -12.002063751220703
    7. '%' → logprob: -12.377063751220703
    8. ')' → logprob: -12.877063751220703
    9. ' ' → logprob: -13.377063751220703
    10. '  ' → logprob: -13.502063751220703

Token 395: ' cnt' (ID: 27340)
  Prédit: 'aaa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aaa' → logprob: -0.1420155018568039
    2. 'a' → logprob: -2.1420154571533203
    3. 'cnt' → logprob: -4.51701545715332
    4. '(' → logprob: -6.14201545715332
    5. ' aaa' → logprob: -7.39201545715332
    6. '(a' → logprob: -8.14201545715332
    7. ' a' → logprob: -8.76701545715332
    8. 'aaaa' → logprob: -8.76701545715332
    9. '1' → logprob: -8.89201545715332
    10. 'aa' → logprob: -9.14201545715332

Token 396: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0003775264194700867
    2. 'a' → logprob: -8.000377655029297
    3. '[' → logprob: -10.375377655029297
    4. '[i' → logprob: -12.250377655029297
    5. '(a' → logprob: -13.250377655029297
    6. '[j' → logprob: -13.250377655029297
    7. '[
' → logprob: -14.750377655029297
    8. '   ' → logprob: -15.375377655029297
    9. ' [' → logprob: -15.500377655029297
    10. '[[' → logprob: -15.500377655029297

Token 397: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0445127372804563e-05
    2. '[a' → logprob: -12.25001049041748
    3. '[' → logprob: -12.62501049041748
    4. 'i' → logprob: -13.62501049041748
    5. ' [' → logprob: -15.12501049041748
    6. '[
' → logprob: -15.37501049041748
    7. ']' → logprob: -15.87501049041748
    8. '[j' → logprob: -16.250009536743164
    9. '   ' → logprob: -16.500009536743164
    10. 'a' → logprob: -16.500009536743164

Token 398: ']]
' (ID: 29446)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3231995403766632
    2. ']' → logprob: -1.5731995105743408
    3. '])' → logprob: -2.698199510574341
    4. ']+' → logprob: -7.69819974899292
    5. 'i' → logprob: -7.82319974899292
    6. '])
' → logprob: -8.198199272155762
    7. ']
' → logprob: -8.573199272155762
    8. ']]' → logprob: -10.948199272155762
    9. ']])' → logprob: -10.948199272155762
    10. '(i' → logprob: -11.073199272155762

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.12258882028982e-05
    2. 'if' → logprob: -10.50006103515625
    3. ' if' → logprob: -11.37506103515625
    4. '    
' → logprob: -11.62506103515625
    5. '<|end|>' → logprob: -13.00006103515625
    6. '
' → logprob: -13.12506103515625
    7. '```' → logprob: -13.12506103515625
    8. '	if' → logprob: -13.62506103515625
    9. ',' → logprob: -13.62506103515625
    10. ' ' → logprob: -13.87506103515625

Token 400: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00727247167378664
    2. 'if' → logprob: -5.007272243499756
    3. 'total' (adapté à ' total') → logprob: -7.632272243499756
    4. ' if' → logprob: -9.632272720336914
    5. ' total' → logprob: -12.007272720336914
    6. '```' → logprob: -15.382272720336914
    7. '
' → logprob: -16.382272720336914
    8. '    
' → logprob: -16.507272720336914
    9. 'while' → logprob: -16.757272720336914
    10. 'for' → logprob: -16.882272720336914

Token 401: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.006907186936587095
    2. ' %=' → logprob: -5.006906986236572
    3. '%' → logprob: -9.13190746307373
    4. '>=' → logprob: -9.50690746307373
    5. '=' → logprob: -11.75690746307373
    6. '+=' → logprob: -14.50690746307373
    7. '≥' → logprob: -14.75690746307373
    8. ')%' → logprob: -15.25690746307373
    9. ')' → logprob: -16.381906509399414
    10. '>' → logprob: -16.756906509399414

Token 402: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0014322625938802958
    2. '(M' → logprob: -6.751432418823242
    3. ' MOD' → logprob: -8.251432418823242
    4. 'M' → logprob: -14.001432418823242
    5. '_MOD' → logprob: -16.251432418823242
    6. '.MOD' → logprob: -16.626432418823242
    7. '(' → logprob: -17.751432418823242
    8. '(Mod' → logprob: -18.501432418823242
    9. 'MO' → logprob: -19.376432418823242
    10. '   ' → logprob: -19.501432418823242

Token 403: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.375
    3. '    
' → logprob: -18.25
    4. 'for' → logprob: -18.75
    5. '
' → logprob: -19.0
    6. 'total' → logprob: -19.125
    7. '#print' → logprob: -20.375
    8. '   ' → logprob: -20.5
    9. '```' → logprob: -20.75
    10. '  
' → logprob: -21.125

Token 404: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. '
' → logprob: -15.500000953674316
    3. ' print' → logprob: -15.875000953674316
    4. '<|end|>' → logprob: -16.0
    5. '#print' → logprob: -17.125
    6. '```' → logprob: -17.125
    7. '#' → logprob: -18.0
    8. 'for' → logprob: -18.0
    9. 'return' → logprob: -18.375
    10. 'total' → logprob: -19.125

Token 405: ' hope' (ID: 5498)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. '#' → logprob: -15.000000953674316
    3. ' print' → logprob: -15.625000953674316
    4. '#print' → logprob: -16.375
    5. 'total' → logprob: -16.75
    6. 'for' → logprob: -16.875
    7. '<|end|>' → logprob: -17.0
    8. '
' → logprob: -17.75
    9. ')' → logprob: -17.875
    10. 'return' → logprob: -18.75

Token 406: ' this' (ID: 495)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1271050125360489
    2. 'return' → logprob: -2.7521049976348877
    3. 'total' → logprob: -3.6271049976348877
    4. '(total' → logprob: -4.502105236053467
    5. '(' → logprob: -4.627105236053467
    6. '```' → logprob: -5.627105236053467
    7. '   ' → logprob: -6.752105236053467
    8. '#' → logprob: -7.877105236053467
    9. 'for' → logprob: -8.002104759216309
    10. 'not' → logprob: -8.002104759216309

Token 407: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 408: ' correct' (ID: 6145)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'correct' → logprob: -0.08124843239784241
    2. 'the' → logprob: -3.7062485218048096
    3. ' correct' → logprob: -4.0812482833862305
    4. 'en' → logprob: -4.0812482833862305
    5. 'fine' → logprob: -5.3312482833862305
    6. 'safe' → logprob: -5.7062482833862305
    7. 'all' → logprob: -5.7062482833862305
    8. 'right' → logprob: -5.8312482833862305
    9. 'complete' → logprob: -6.9562482833862305
    10. 'done' → logprob: -7.0812482833862305

Token 409: ' order' (ID: 2569)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.282920129597187e-05
    2. '
' → logprob: -11.625012397766113
    3. ' print' → logprob: -13.250012397766113
    4. '    
' → logprob: -14.250012397766113
    5. 'for' → logprob: -14.500012397766113
    6. '```' → logprob: -15.625012397766113
    7. '#print' → logprob: -16.00001335144043
    8. '   ' → logprob: -16.12501335144043
    9. ')' → logprob: -16.37501335144043
    10. '<|end|>' → logprob: -16.50001335144043

Token 410: '...

' (ID: 2161)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.1008713702030946e-06
    2. 'for' → logprob: -14.375001907348633
    3. '
' → logprob: -14.500001907348633
    4. ' print' → logprob: -14.875001907348633
    5. '    
' → logprob: -15.250001907348633
    6. 'total' → logprob: -16.125001907348633
    7. '   ' → logprob: -16.750001907348633
    8. '```' → logprob: -17.375001907348633
    9. ')' → logprob: -17.500001907348633
    10. '#' → logprob: -17.625001907348633

Token 411: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000332485738908872
    2. '<|end|>' → logprob: -8.625332832336426
    3. 'for' → logprob: -9.875332832336426
    4. '#' → logprob: -10.250332832336426
    5. 'total' → logprob: -10.750332832336426
    6. ' print' → logprob: -11.125332832336426
    7. ')' → logprob: -11.375332832336426
    8. '...' → logprob: -11.625332832336426
    9. '```' → logprob: -12.750332832336426
    10. 'return' → logprob: -12.875332832336426

Token 412: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -9.639096970204264e-05
    2. '(' → logprob: -9.500096321105957
    3. 'total' → logprob: -10.750096321105957
    4. '(
' → logprob: -17.375097274780273
    5. ' (' → logprob: -17.625097274780273
    6. '(t' → logprob: -18.375097274780273
    7. ' total' → logprob: -18.375097274780273
    8. '((' → logprob: -18.375097274780273
    9. ',total' → logprob: -19.625097274780273
    10. '(to' → logprob: -20.500097274780273

Token 413: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. ' )' → logprob: -12.500005722045898
    3. ')
' → logprob: -14.625005722045898
    4. '))' → logprob: -15.250005722045898
    5. '())' → logprob: -15.500005722045898
    6. '```' → logprob: -15.500005722045898
    7. '*' → logprob: -15.625005722045898
    8. '()' → logprob: -16.0000057220459
    9. '')' → logprob: -16.1250057220459
    10. '(' → logprob: -16.3750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 411
Tokens correctement prédits (1ère position, stricte): 136
Tokens correctement prédits (1ère position, avec adaptation): 149
Tokens correctement prédits (top 10): 292
Précision stricte (1ère position): 33.09%
Précision adaptée (1ère position): 36.25%
Précision (top 10): 71.05%
================================================================================
