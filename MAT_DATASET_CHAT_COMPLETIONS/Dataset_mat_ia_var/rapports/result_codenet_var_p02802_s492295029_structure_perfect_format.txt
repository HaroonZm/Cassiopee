================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    N, M = map(int, input().split())
    ac = [0 for _ in range(N)]
    wa = [0 for _ in range(N)]
    for _ in range(M):
        p, s = input().split()
        p = int(p) - 1
        if s == 'AC':
            ac[p] = 1
        else:
            if ac[p] == 0:
                wa[p] += 1
    for i in range(N):
        if ac[i] == 0:
            wa[i] = 0
    print(str(sum(ac)) + " " + str(sum(wa)))

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8402498960494995
    2. '   ' → logprob: -0.8402498960494995
    3. '\n' → logprob: -2.840250015258789
    4. '```' → logprob: -3.840250015258789
    5. ''' → logprob: -4.340250015258789
    6. '    
' → logprob: -4.465250015258789
    7. ' ' → logprob: -4.965250015258789
    8. '(' → logprob: -5.340250015258789
    9. '    ' → logprob: -5.465250015258789
    10. ' 
' → logprob: -5.715250015258789

Token 4: ' N' (ID: 478)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.591081440448761
    2. '   ' → logprob: -1.8410813808441162
    3. '    ' → logprob: -2.591081380844116
    4. 'return' → logprob: -2.966081380844116
    5. ' ' → logprob: -3.466081380844116
    6. '\' → logprob: -3.841081380844116
    7. 'pass' → logprob: -3.966081380844116
    8. 'a' → logprob: -4.216081619262695
    9. '_' → logprob: -4.716081619262695
    10. '#' → logprob: -4.841081619262695

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.741634726524353
    2. ' =' → logprob: -0.741634726524353
    3. ' ' → logprob: -3.9916348457336426
    4. '_' → logprob: -4.116634845733643
    5. ',' → logprob: -5.741634845733643
    6. '   ' → logprob: -5.991634845733643
    7. '  ' → logprob: -6.241634845733643
    8. '.' → logprob: -6.491634845733643
    9. ')' → logprob: -6.616634845733643
    10. '    ' → logprob: -7.991634845733643

Token 6: ' M' (ID: 391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5967728495597839
    2. ' K' → logprob: -0.8467728495597839
    3. ' M' → logprob: -5.34677267074585
    4. 'K' → logprob: -5.97177267074585
    5. ' k' → logprob: -5.97177267074585
    6. '  ' → logprob: -6.34677267074585
    7. ' N' → logprob: -6.59677267074585
    8. ' =' → logprob: -6.84677267074585
    9. '    ' → logprob: -7.09677267074585
    10. ')' → logprob: -7.09677267074585

Token 7: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43226704001426697
    2. '=' → logprob: -1.0572670698165894
    3. ',' → logprob: -5.682267189025879
    4. ')' → logprob: -9.307267189025879
    5. '<|end|>' → logprob: -11.432267189025879
    6. '   ' → logprob: -11.557267189025879
    7. ' ,' → logprob: -11.682267189025879
    8. ' ' → logprob: -11.807267189025879
    9. '```' → logprob: -12.182267189025879
    10. '  ' → logprob: -12.807267189025879

Token 8: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0048380764201283455
    2. 'map' → logprob: -5.379837989807129
    3. ' input' → logprob: -8.504837989807129
    4. 'input' → logprob: -11.879837989807129
    5. ' ' → logprob: -12.129837989807129
    6. ' list' → logprob: -14.004837989807129
    7. ' int' → logprob: -14.129837989807129
    8. '0' → logprob: -14.754837989807129
    9. ' [' → logprob: -15.504837989807129
    10. '	map' → logprob: -15.629837989807129

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31272804737091064
    2. '(str' → logprob: -2.062727928161621
    3. '(int' → logprob: -2.062727928161621
    4. '(lambda' → logprob: -4.312727928161621
    5. '()' → logprob: -8.437727928161621
    6. '(
' → logprob: -8.562727928161621
    7. '<|end|>' → logprob: -9.187727928161621
    8. '```' → logprob: -9.812727928161621
    9. '(list' → logprob: -10.187727928161621
    10. '(eval' → logprob: -10.687727928161621

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.8235617280006409
    2. ')' → logprob: -0.9485617280006409
    3. ',' → logprob: -2.198561668395996
    4. '(' → logprob: -3.448561668395996
    5. ',input' → logprob: -3.948561668395996
    6. 'input' → logprob: -4.698561668395996
    7. ' ,' → logprob: -7.198561668395996
    8. ' input' → logprob: -7.948561668395996
    9. '```' → logprob: -8.198561668395996
    10. '`' → logprob: -8.448561668395996

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11287128925323486
    2. ' input' → logprob: -2.2378711700439453
    3. ')' → logprob: -9.987871170043945
    4. ' )' → logprob: -13.987871170043945
    5. '(input' → logprob: -14.237871170043945
    6. ',input' → logprob: -14.737871170043945
    7. ' ' → logprob: -15.487871170043945
    8. '	input' → logprob: -15.737871170043945
    9. 'str' → logprob: -15.862871170043945
    10. 'raw' → logprob: -16.237871170043945

Token 12: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.15595857799053192
    2. '().' → logprob: -2.405958652496338
    3. '()' → logprob: -3.030958652496338
    4. ')' → logprob: -5.280958652496338
    5. '()))' → logprob: -7.655958652496338
    6. '('' → logprob: -9.28095817565918
    7. '(' → logprob: -9.40595817565918
    8. '());' → logprob: -9.65595817565918
    9. '()),' → logprob: -10.65595817565918
    10. '()>' → logprob: -10.90595817565918

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00016229959146585315
    2. 'strip' → logprob: -8.750162124633789
    3. 'rstrip' → logprob: -12.750162124633789
    4. ')' → logprob: -14.625162124633789
    5. ' split' → logprob: -15.125162124633789
    6. '(split' → logprob: -16.37516212463379
    7. 'read' → logprob: -16.37516212463379
    8. 'spl' → logprob: -17.50016212463379
    9. '().' → logprob: -18.25016212463379
    10. 'replace' → logprob: -19.62516212463379

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19139283895492554
    2. '))' → logprob: -1.9413928985595703
    3. '())' → logprob: -3.6913928985595703
    4. '()))' → logprob: -5.31639289855957
    5. '()' → logprob: -7.31639289855957
    6. '(' → logprob: -9.44139289855957
    7. '('' → logprob: -10.19139289855957
    8. ')))' → logprob: -11.06639289855957
    9. ''))' → logprob: -11.56639289855957
    10. ')`' → logprob: -12.44139289855957

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5275703072547913
    2. '\n' → logprob: -1.6525702476501465
    3. ')' → logprob: -3.1525702476501465
    4. '
' → logprob: -3.4025702476501465
    5. '```' → logprob: -3.5275702476501465
    6. 'for' → logprob: -3.6525702476501465
    7. '\' → logprob: -4.0275702476501465
    8. '`' → logprob: -4.0275702476501465
    9. '    
' → logprob: -4.1525702476501465
    10. ' ' → logprob: -5.4025702476501465

Token 16: ' ac' (ID: 1375)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.502835988998413
    2. 'a' → logprob: -1.627835988998413
    3. 'd' → logprob: -2.252835988998413
    4. ')' → logprob: -2.627835988998413
    5. 'for' → logprob: -3.127835988998413
    6. 'data' → logprob: -3.127835988998413
    7. 'result' → logprob: -3.377835988998413
    8. 'matrix' → logprob: -3.502835988998413
    9. '#' → logprob: -3.627835988998413
    10. '   ' → logprob: -3.877835988998413

Token 17: ' =' (ID: 314)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.3167232573032379
    2. '_count' → logprob: -1.8167232275009155
    3. 'count' → logprob: -3.816723346710205
    4. 'cept' → logprob: -3.941723346710205
    5. 'counts' → logprob: -3.941723346710205
    6. 't' → logprob: -4.441723346710205
    7. '_' → logprob: -4.816723346710205
    8. 'h' → logprob: -5.066723346710205
    9. 'cepts' → logprob: -5.566723346710205
    10. 'c' → logprob: -5.691723346710205

Token 18: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.647688090801239
    2. '[' → logprob: -0.772688090801239
    3. '0' → logprob: -4.772687911987305
    4. '{}' → logprob: -6.022687911987305
    5. ' ' → logprob: -6.397687911987305
    6. '[]' → logprob: -7.147687911987305
    7. ' []' → logprob: -7.272687911987305
    8. ' {}' → logprob: -7.522687911987305
    9. '[int' → logprob: -9.272687911987305
    10. '{' → logprob: -9.397687911987305

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009036770090460777
    2. 'False' → logprob: -4.759036540985107
    3. '[' → logprob: -8.759037017822266
    4. 'int' → logprob: -9.134037017822266
    5. ']' → logprob: -9.509037017822266
    6. '[]' → logprob: -10.884037017822266
    7. '[int' → logprob: -10.884037017822266
    8. 'float' → logprob: -11.509037017822266
    9. '(' → logprob: -11.634037017822266
    10. 'True' → logprob: -12.134037017822266

Token 20: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01299232803285122
    2. ']*' → logprob: -4.5129923820495605
    3. ' for' → logprob: -7.1379923820495605
    4. ',' → logprob: -7.1379923820495605
    5. ']*(' → logprob: -8.512991905212402
    6. ' ]' → logprob: -9.262991905212402
    7. ')]' → logprob: -10.637991905212402
    8. 'for' → logprob: -11.137991905212402
    9. ')' → logprob: -11.387991905212402
    10. '(' → logprob: -13.012991905212402

Token 21: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.025864534080028534
    2. ' i' → logprob: -4.775864601135254
    3. ' _' → logprob: -5.025864601135254
    4. '_i' → logprob: -5.525864601135254
    5. 'i' → logprob: -6.150864601135254
    6. ' ' → logprob: -6.150864601135254
    7. '_range' → logprob: -7.275864601135254
    8. ' range' → logprob: -7.525864601135254
    9. 'range' → logprob: -8.025864601135254
    10. ' in' → logprob: -8.025864601135254

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31463944911956787
    2. 'in' → logprob: -1.3146394491195679
    3. 'range' → logprob: -6.939639568328857
    4. 'i' → logprob: -8.5646390914917
    5. 'ac' → logprob: -8.9396390914917
    6. 'x' → logprob: -10.8146390914917
    7. ' ' → logprob: -10.9396390914917
    8. ' range' → logprob: -11.4396390914917
    9. ' i' → logprob: -11.6896390914917
    10. '_' → logprob: -11.8146390914917

Token 23: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16023874282836914
    2. ' range' → logprob: -1.9102387428283691
    3. ' ' → logprob: -11.660238265991211
    4. '_' → logprob: -13.035238265991211
    5. '(range' → logprob: -14.410238265991211
    6. '	range' → logprob: -14.410238265991211
    7. ')' → logprob: -14.535238265991211
    8. '  ' → logprob: -14.660238265991211
    9. ']' → logprob: -15.160238265991211
    10. 'ran' → logprob: -15.160238265991211

Token 24: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.48414820432662964
    2. '(N' → logprob: -0.9841482043266296
    3. '(' → logprob: -4.609148025512695
    4. ' (' → logprob: -10.234148025512695
    5. 'N' → logprob: -11.859148025512695
    6. 'M' → logprob: -12.109148025512695
    7. ')' → logprob: -12.609148025512695
    8. ' N' → logprob: -13.484148025512695
    9. ' M' → logprob: -13.734148025512695
    10. '()' → logprob: -13.859148025512695

Token 25: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00014072739577386528
    2. ')])' → logprob: -9.750141143798828
    3. '])]' → logprob: -10.375141143798828
    4. ')' → logprob: -10.625141143798828
    5. ']' → logprob: -11.375141143798828
    6. ')]
' → logprob: -12.000141143798828
    7. '])' → logprob: -12.500141143798828
    8. ' )' → logprob: -13.375141143798828
    9. ')],' → logprob: -13.500141143798828
    10. '')]' → logprob: -14.000141143798828

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15917284786701202
    2. '<|end|>' → logprob: -2.409172773361206
    3. ')' → logprob: -4.284173011779785
    4. ' ' → logprob: -4.784173011779785
    5. ']' → logprob: -5.159173011779785
    6. '[' → logprob: -5.409173011779785
    7. '    
' → logprob: -5.534173011779785
    8. '
' → logprob: -5.659173011779785
    9. '  ' → logprob: -6.034173011779785
    10. '_' → logprob: -6.659173011779785

Token 27: ' wa' (ID: 3123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15368077158927917
    2. 'for' → logprob: -3.1536808013916016
    3. 's' → logprob: -4.778680801391602
    4. '_' → logprob: -4.903680801391602
    5. 'ac' → logprob: -4.903680801391602
    6. ' ' → logprob: -5.153680801391602
    7. 'c' → logprob: -5.278680801391602
    8. 't' → logprob: -5.528680801391602
    9. '```' → logprob: -5.528680801391602
    10. 'correct' → logprob: -5.528680801391602

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0037778629921376705
    2. '=' → logprob: -5.628777980804443
    3. ' ' → logprob: -9.378777503967285
    4. '[' → logprob: -9.878777503967285
    5. 'c' → logprob: -11.128777503967285
    6. ' =[' → logprob: -11.878777503967285
    7. 's' → logprob: -12.003777503967285
    8. '_count' → logprob: -12.378777503967285
    9. '_c' → logprob: -13.003777503967285
    10. '_' → logprob: -13.128777503967285

Token 29: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10020915418863297
    2. ' [' → logprob: -2.3502092361450195
    3. ' ' → logprob: -13.35020923614502
    4. '0' → logprob: -14.72520923614502
    5. '   ' → logprob: -15.60020923614502
    6. ' ' → logprob: -16.475208282470703
    7. '[-' → logprob: -16.725208282470703
    8. '(' → logprob: -16.850208282470703
    9. '  ' → logprob: -16.975208282470703
    10. '([' → logprob: -17.350208282470703

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '(' → logprob: -17.00002098083496
    4. '[' → logprob: -18.75002098083496
    5. ']' → logprob: -19.25002098083496
    6. '０' → logprob: -19.37502098083496
    7. '   ' → logprob: -19.87502098083496
    8. '۰' → logprob: -20.12502098083496
    9. ')' → logprob: -20.50002098083496
    10. '
' → logprob: -20.50002098083496

Token 31: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20508311688899994
    2. 'for' → logprob: -2.205083131790161
    3. '(' → logprob: -2.705083131790161
    4. '(N' → logprob: -5.455082893371582
    5. ' (' → logprob: -5.955082893371582
    6. '(for' → logprob: -6.830082893371582
    7. ']' → logprob: -8.830082893371582
    8. '[' → logprob: -9.580082893371582
    9. '	for' → logprob: -10.455082893371582
    10. ' ' → logprob: -10.830082893371582

Token 32: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2837707996368408
    2. ' _' → logprob: -1.4087707996368408
    3. ' range' → logprob: -6.408770561218262
    4. '_range' → logprob: -7.408770561218262
    5. ' (' → logprob: -8.658770561218262
    6. '(' → logprob: -9.283770561218262
    7. ' ' → logprob: -9.908770561218262
    8. '(range' → logprob: -11.158770561218262
    9. 'range' → logprob: -11.283770561218262
    10. ' ' → logprob: -11.658770561218262

Token 33: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.576439380645752
    2. ' in' → logprob: -0.826439380645752
    3. 'range' → logprob: -7.701439380645752
    4. ' range' → logprob: -10.826438903808594
    5. ' ' → logprob: -11.326438903808594
    6. '(' → logprob: -11.576438903808594
    7. '(range' → logprob: -13.201438903808594
    8. ' _' → logprob: -14.076438903808594
    9. ')' → logprob: -14.576438903808594
    10. '  ' → logprob: -14.951438903808594

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.048612575978040695
    2. 'range' → logprob: -3.048612594604492
    3. '(range' → logprob: -10.673612594604492
    4. '_range' → logprob: -14.423612594604492
    5. '(' → logprob: -14.673612594604492
    6. 'N' → logprob: -15.173612594604492
    7. '(N' → logprob: -15.173612594604492
    8. ' N' → logprob: -15.298612594604492
    9. '	range' → logprob: -15.673612594604492
    10. ' ' → logprob: -17.173612594604492

Token 35: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.009931033477187157
    2. 'N' → logprob: -4.6349310874938965
    3. '(' → logprob: -8.759930610656738
    4. ')' → logprob: -12.259930610656738
    5. '(M' → logprob: -12.259930610656738
    6. ' (' → logprob: -12.384930610656738
    7. ' N' → logprob: -13.259930610656738
    8. '   ' → logprob: -14.509930610656738
    9. 'M' → logprob: -14.634930610656738
    10. '	N' → logprob: -14.759930610656738

Token 36: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00015014449309092015
    2. ']' → logprob: -9.000149726867676
    3. ')' → logprob: -11.500149726867676
    4. '])]' → logprob: -11.750149726867676
    5. '])' → logprob: -12.125149726867676
    6. ')])' → logprob: -13.500149726867676
    7. ')],' → logprob: -14.500149726867676
    8. ')]
' → logprob: -14.625149726867676
    9. '')]' → logprob: -15.000149726867676
    10. '")]' → logprob: -16.125150680541992

Token 37: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8302026391029358
    2. 'for' → logprob: -1.080202579498291
    3. ' for' → logprob: -1.830202579498291
    4. '   ' → logprob: -2.955202579498291
    5. '<|end|>' → logprob: -5.205202579498291
    6. '\n' → logprob: -6.205202579498291
    7. '	for' → logprob: -6.830202579498291
    8. '    
' → logprob: -6.955202579498291
    9. '```' → logprob: -7.080202579498291
    10. '' → logprob: -7.955202579498291

Token 38: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.020214833319187164
    2. ' for' → logprob: -4.020215034484863
    3. '   ' → logprob: -7.270215034484863
    4. '
' → logprob: -7.645215034484863
    5. '```' → logprob: -7.645215034484863
    6. '\n' → logprob: -8.020215034484863
    7. '\' → logprob: -10.520215034484863
    8. '``' → logprob: -11.395215034484863
    9. '    
' → logprob: -11.895215034484863
    10. '<|end|>' → logprob: -11.895215034484863

Token 39: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.031581975519657135
    2. ' i' → logprob: -4.031581878662109
    3. ' ' → logprob: -4.406581878662109
    4. '_' → logprob: -6.781581878662109
    5. ' ' → logprob: -12.78158187866211
    6. ' ‌' → logprob: -13.03158187866211
    7. ' ▁' → logprob: -13.28158187866211
    8. 'i' → logprob: -13.78158187866211
    9. '  ' → logprob: -14.15658187866211
    10. ' range' → logprob: -14.28158187866211

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04379307106137276
    2. 'in' → logprob: -3.168792963027954
    3. ' ' → logprob: -7.418793201446533
    4. ' i' → logprob: -9.918792724609375
    5. '_' → logprob: -10.668792724609375
    6. 'n' → logprob: -10.668792724609375
    7. '  ' → logprob: -10.918792724609375
    8. '	in' → logprob: -11.043792724609375
    9. 's' → logprob: -11.293792724609375
    10. 'i' → logprob: -11.418792724609375

Token 41: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014186978340149
    2. ' range' → logprob: -1.7014186382293701
    3. ' ' → logprob: -13.32641887664795
    4. '(range' → logprob: -13.57641887664795
    5. '```' → logprob: -14.32641887664795
    6. '	range' → logprob: -14.57641887664795
    7. '_' → logprob: -14.95141887664795
    8. ' in' → logprob: -15.32641887664795
    9. 'input' → logprob: -15.70141887664795
    10. '   ' → logprob: -16.076417922973633

Token 42: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.1010485514998436
    2. '(' → logprob: -2.351048469543457
    3. ' (' → logprob: -7.101048469543457
    4. ' M' → logprob: -11.726048469543457
    5. '(m' → logprob: -12.476048469543457
    6. ' ' → logprob: -13.101048469543457
    7. '(range' → logprob: -13.851048469543457
    8. ' range' → logprob: -13.976048469543457
    9. '(int' → logprob: -14.351048469543457
    10. '(
' → logprob: -14.976048469543457

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004780288320034742
    2. ')' → logprob: -5.754780292510986
    3. ' ):' → logprob: -6.629780292510986
    4. ':' → logprob: -9.004779815673828
    5. '):
' → logprob: -9.629779815673828
    6. ',' → logprob: -10.254779815673828
    7. '():' → logprob: -10.879779815673828
    8. '   ' → logprob: -11.129779815673828
    9. ' )' → logprob: -11.254779815673828
    10. ' ' → logprob: -13.504779815673828

Token 44: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07737144082784653
    2. '       ' → logprob: -3.82737135887146
    3. ' ' → logprob: -4.577371597290039
    4. '    ' → logprob: -4.702371597290039
    5. '```' → logprob: -4.827371597290039
    6. '  ' → logprob: -5.327371597290039
    7. 'input' → logprob: -5.452371597290039
    8. '`' → logprob: -6.077371597290039
    9. ':' → logprob: -6.327371597290039
    10. ' input' → logprob: -6.452371597290039

Token 45: ' p' (ID: 275)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5847152471542358
    2. 's' → logprob: -1.8347152471542358
    3. ' a' → logprob: -2.5847153663635254
    4. 'input' → logprob: -3.0847153663635254
    5. 'q' → logprob: -3.3347153663635254
    6. 'A' → logprob: -3.4597153663635254
    7. ' s' → logprob: -3.9597153663635254
    8. '   ' → logprob: -4.084715366363525
    9. ' A' → logprob: -4.209715366363525
    10. ' q' → logprob: -4.459715366363525

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04917065426707268
    2. ' ,' → logprob: -3.299170732498169
    3. 'r' → logprob: -4.54917049407959
    4. ',r' → logprob: -8.79917049407959
    5. ',l' → logprob: -9.29917049407959
    6. ' =' → logprob: -10.42417049407959
    7. ' r' → logprob: -10.67417049407959
    8. ',a' → logprob: -11.29917049407959
    9. ',input' → logprob: -11.29917049407959
    10. 'i' → logprob: -11.29917049407959

Token 47: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13007843494415283
    2. ' s' → logprob: -2.1300783157348633
    3. 'S' → logprob: -6.880078315734863
    4. ' S' → logprob: -7.130078315734863
    5. '_' → logprob: -7.505078315734863
    6. ' ' → logprob: -8.755078315734863
    7. 'result' → logprob: -9.255078315734863
    8. '_s' → logprob: -9.505078315734863
    9. 'ver' → logprob: -10.005078315734863
    10. '   ' → logprob: -10.130078315734863

Token 48: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408369183540344
    2. ' =' → logprob: -0.974083662033081
    3. '=input' → logprob: -12.72408390045166
    4. ' ' → logprob: -13.97408390045166
    5. 'p' → logprob: -14.34908390045166
    6. ',' → logprob: -14.34908390045166
    7. '＝' → logprob: -14.47408390045166
    8. '=line' → logprob: -15.34908390045166
    9. ')' → logprob: -15.59908390045166
    10. '_' → logprob: -15.72408390045166

Token 49: ' input' (ID: 3422)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.17454054951667786
    2. ' input' → logprob: -2.4245405197143555
    3. 'map' → logprob: -2.7995405197143555
    4. 'input' → logprob: -4.5495405197143555
    5. ' ' → logprob: -8.549540519714355
    6. ' list' → logprob: -11.549540519714355
    7. ' [' → logprob: -11.799540519714355
    8. '   ' → logprob: -12.299540519714355
    9. '  ' → logprob: -12.549540519714355
    10. '	map' → logprob: -13.174540519714355

Token 50: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.005288072861731052
    2. '()' → logprob: -5.255288124084473
    3. '(' → logprob: -10.505288124084473
    4. '.' → logprob: -10.630288124084473
    5. ')' → logprob: -14.380288124084473
    6. '.split' → logprob: -14.505288124084473
    7. ' ().' → logprob: -14.505288124084473
    8. '()
' → logprob: -15.630288124084473
    9. ' .' → logprob: -15.755288124084473
    10. '()

' → logprob: -16.130287170410156

Token 51: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00026777281891554594
    2. 'strip' → logprob: -8.25026798248291
    3. 'rstrip' → logprob: -12.00026798248291
    4. ' split' → logprob: -15.62526798248291
    5. 'spl' → logprob: -16.375267028808594
    6. '(split' → logprob: -17.500267028808594
    7. '.split' → logprob: -18.375267028808594
    8. '```' → logprob: -19.625267028808594
    9. 'sp' → logprob: -19.750267028808594
    10. 'rs' → logprob: -20.125267028808594

Token 52: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01007018517702818
    2. '(' → logprob: -4.635070323944092
    3. ')' → logprob: -8.760069847106934
    4. '()
' → logprob: -10.010069847106934
    5. '('' → logprob: -10.010069847106934
    6. '(p' → logprob: -10.760069847106934
    7. '())' → logprob: -11.510069847106934
    8. '(
' → logprob: -11.760069847106934
    9. '()`' → logprob: -12.260069847106934
    10. ' ()' → logprob: -12.385069847106934

Token 53: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.888330340385437
    2. '<|end|>' → logprob: -1.388330340385437
    3. '    
' → logprob: -2.2633304595947266
    4. '\n' → logprob: -2.6383304595947266
    5. '  
' → logprob: -3.3883304595947266
    6. ' 
' → logprob: -3.5133304595947266
    7. ' p' → logprob: -3.7633304595947266
    8. '   ' → logprob: -4.013330459594727
    9. '(p' → logprob: -4.388330459594727
    10. 'p' → logprob: -4.388330459594727

Token 54: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.0846148356795311
    2. 'p' (adapté à ' p') → logprob: -2.8346147537231445
    3. ' 
' → logprob: -4.5846147537231445
    4. ' ' → logprob: -5.7096147537231445
    5. '       ' → logprob: -5.7096147537231445
    6. '<|end|>' → logprob: -6.4596147537231445
    7. '        
' → logprob: -6.9596147537231445
    8. '(p' → logprob: -7.0846147537231445
    9. '   ' → logprob: -7.4596147537231445
    10. '    
' → logprob: -8.709614753723145

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19006332755088806
    2. '-' → logprob: -2.315063238143921
    3. '=' → logprob: -2.940063238143921
    4. ' -=' → logprob: -4.0650634765625
    5. ' -' → logprob: -5.8150634765625
    6. '-=' → logprob: -7.0650634765625
    7. '=int' → logprob: -9.0650634765625
    8. ')' → logprob: -9.3150634765625
    9. ' ' → logprob: -9.5650634765625
    10. '[' → logprob: -9.9400634765625

Token 56: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07888989895582199
    2. ' int' → logprob: -2.578889846801758
    3. ' ' → logprob: -16.453889846801758
    4. '  ' → logprob: -18.078889846801758
    5. '[int' → logprob: -18.078889846801758
    6. '<int' → logprob: -18.328889846801758
    7. '(int' → logprob: -18.453889846801758
    8. '	int' → logprob: -19.203889846801758
    9. '=int' → logprob: -20.078889846801758
    10. '```' → logprob: -20.453889846801758

Token 57: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00976293720304966
    2. '(' → logprob: -4.634762763977051
    3. ' (' → logprob: -12.63476276397705
    4. 'p' → logprob: -13.38476276397705
    5. '(
' → logprob: -14.13476276397705
    6. '(`' → logprob: -15.25976276397705
    7. ' ' → logprob: -15.50976276397705
    8. '()' → logprob: -15.63476276397705
    9. ')' → logprob: -15.75976276397705
    10. '((' → logprob: -15.88476276397705

Token 58: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003806257154792547
    2. ')-' → logprob: -9.000380516052246
    3. '-' → logprob: -9.375380516052246
    4. ' )' → logprob: -10.000380516052246
    5. '[' → logprob: -10.375380516052246
    6. ' -' → logprob: -10.625380516052246
    7. '(p' → logprob: -10.625380516052246
    8. '-)' → logprob: -11.000380516052246
    9. '()' → logprob: -12.000380516052246
    10. '[p' → logprob: -12.500380516052246

Token 59: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05501430481672287
    2. ' -' → logprob: -2.9300143718719482
    3. '(p' → logprob: -10.555014610290527
    4. '()-' → logprob: -11.180014610290527
    5. ' p' → logprob: -11.305014610290527
    6. '       ' → logprob: -11.305014610290527
    7. '<|end|>' → logprob: -11.305014610290527
    8. '-
' → logprob: -11.805014610290527
    9. ' ' → logprob: -12.055014610290527
    10. '   ' → logprob: -12.305014610290527

Token 60: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. '<|end|>' → logprob: -16.875911712646484
    4. '１' → logprob: -17.000911712646484
    5. '```' → logprob: -17.000911712646484
    6. '`' → logprob: -18.125911712646484
    7. '   ' → logprob: -18.500911712646484
    8. '۱' → logprob: -19.000911712646484
    9. '  ' → logprob: -19.625911712646484
    10. ' ' → logprob: -19.813411712646484

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '１' → logprob: -17.25000762939453
    4. '```' → logprob: -17.75000762939453
    5. '۱' → logprob: -18.87500762939453
    6. '`' → logprob: -19.12500762939453
    7. '   ' → logprob: -19.18750762939453
    8. '<|end|>' → logprob: -19.37500762939453
    9. '১' → logprob: -19.56250762939453
    10. '१' → logprob: -19.75000762939453

Token 62: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23967045545578003
    2. '<|end|>' → logprob: -1.6146705150604248
    3. '       ' → logprob: -4.364670276641846
    4. ' if' → logprob: -7.739670276641846
    5. '<|end|>' → logprob: -8.364670753479004
    6. '   ' → logprob: -8.489670753479004
    7. ' 
' → logprob: -8.864670753479004
    8. '```' → logprob: -9.739670753479004
    9. '  
' → logprob: -9.864670753479004
    10. '
' → logprob: -9.989670753479004

Token 63: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40965792536735535
    2. '<|end|>' → logprob: -1.6596579551696777
    3. '       ' → logprob: -2.4096579551696777
    4. ' if' → logprob: -3.4096579551696777
    5. ' 
' → logprob: -4.159657955169678
    6. ' ' → logprob: -5.909657955169678
    7. '   ' → logprob: -6.909657955169678
    8. '  
' → logprob: -7.159657955169678
    9. '<|end|>' → logprob: -7.409657955169678
    10. '        
' → logprob: -7.534657955169678

Token 64: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04882455989718437
    2. ' if' → logprob: -3.0488245487213135
    3. '       ' → logprob: -9.048824310302734
    4. '   ' → logprob: -9.548824310302734
    5. '	if' → logprob: -10.298824310302734
    6. '```' → logprob: -11.548824310302734
    7. ' ' → logprob: -12.923824310302734
    8. '    ' → logprob: -13.798824310302734
    9. '  ' → logprob: -15.048824310302734
    10. '        ' → logprob: -15.423824310302734

Token 65: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.31783515214920044
    2. 's' → logprob: -1.3178350925445557
    3. ' ac' → logprob: -5.567835330963135
    4. 'ac' → logprob: -8.067834854125977
    5. ' not' → logprob: -8.067834854125977
    6. ' ' → logprob: -9.692834854125977
    7. 'not' → logprob: -10.817834854125977
    8. '   ' → logprob: -12.005334854125977
    9. ' wa' → logprob: -12.567834854125977
    10. '	s' → logprob: -12.630334854125977

Token 66: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3236914277076721
    2. ' ==' → logprob: -1.3236913681030273
    3. '=' → logprob: -4.698691368103027
    4. ' ' → logprob: -8.323691368103027
    5. ' =' → logprob: -8.698691368103027
    6. '"' → logprob: -9.073691368103027
    7. ']==' → logprob: -9.073691368103027
    8. '!=' → logprob: -9.448691368103027
    9. '[' → logprob: -9.573691368103027
    10. ':' → logprob: -9.573691368103027

Token 67: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4916534423828125
    2. '"' → logprob: -0.9916534423828125
    3. ''A' → logprob: -4.7416534423828125
    4. '"A' → logprob: -5.2416534423828125
    5. ''ac' → logprob: -7.3666534423828125
    6. ' "' → logprob: -7.7416534423828125
    7. '"I' → logprob: -7.9916534423828125
    8. '"W' → logprob: -7.9916534423828125
    9. 'AC' → logprob: -8.366653442382812
    10. ' '' → logprob: -8.491653442382812

Token 68: 'AC' (ID: 2436)
  Prédit: 'AC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: -0.13723355531692505
    2. 'A' → logprob: -2.2622334957122803
    3. ''' → logprob: -4.512233734130859
    4. '"' → logprob: -5.512233734130859
    5. ''A' → logprob: -5.637233734130859
    6. 'WA' → logprob: -5.762233734130859
    7. 'W' → logprob: -7.137233734130859
    8. 'C' → logprob: -7.637233734130859
    9. '"A' → logprob: -8.76223373413086
    10. '')' → logprob: -9.38723373413086

Token 69: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7878825664520264
    2. '':' → logprob: -0.7878825664520264
    3. '':
' → logprob: -2.4128825664520264
    4. '':
' → logprob: -7.5378828048706055
    5. ':' → logprob: -8.787882804870605
    6. '':

' → logprob: -10.412882804870605
    7. '':'' → logprob: -10.537882804870605
    8. '\n' → logprob: -11.412882804870605
    9. '":' → logprob: -11.537882804870605
    10. 'and' → logprob: -11.787882804870605

Token 70: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32615795731544495
    2. ' and' → logprob: -1.3261579275131226
    3. ':
' → logprob: -4.701158046722412
    4. 'and' → logprob: -6.326158046722412
    5. '       ' → logprob: -7.076158046722412
    6. '<|end|>' → logprob: -7.326158046722412
    7. '           ' → logprob: -8.451157569885254
    8. ' :' → logprob: -9.826157569885254
    9. '<|end|>' → logprob: -10.201157569885254
    10. '   ' → logprob: -10.201157569885254

Token 71: ' ac' (ID: 1375)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8466521501541138
    2. 'ac' (adapté à ' ac') → logprob: -1.0966521501541138
    3. ' if' → logprob: -1.7216521501541138
    4. ' ac' → logprob: -3.346652030944824
    5. '           ' → logprob: -3.846652030944824
    6. '       ' → logprob: -6.971652030944824
    7. '   ' → logprob: -8.346652030944824
    8. '```' → logprob: -8.346652030944824
    9. '               ' → logprob: -8.721652030944824
    10. ' and' → logprob: -10.096652030944824

Token 72: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.0206720617134124e-05
    2. '[' → logprob: -11.62501049041748
    3. 'p' → logprob: -13.87501049041748
    4. ' [' → logprob: -16.125009536743164
    5. '\[' → logprob: -17.250009536743164
    6. '][' → logprob: -17.375009536743164
    7. '[i' → logprob: -17.375009536743164
    8. '```' → logprob: -18.125009536743164
    9. '	p' → logprob: -18.625009536743164
    10. '[ip' → logprob: -18.750009536743164

Token 73: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011732018319889903
    2. ']=' → logprob: -6.87617301940918
    3. ']+=' → logprob: -9.00117301940918
    4. '=' → logprob: -11.75117301940918
    5. ' ]' → logprob: -12.25117301940918
    6. ']==' → logprob: -12.50117301940918
    7. ' =' → logprob: -15.50117301940918
    8. ')' → logprob: -15.62617301940918
    9. '[' → logprob: -16.25117301940918
    10. ']!=' → logprob: -16.87617301940918

Token 74: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02888793684542179
    2. ' =' → logprob: -3.653887987136841
    3. '+=' → logprob: -6.028887748718262
    4. ' +=' → logprob: -8.653887748718262
    5. ' |=' → logprob: -13.903887748718262
    6. '=True' → logprob: -15.778887748718262
    7. '|' → logprob: -15.778887748718262
    8. '+' → logprob: -16.153888702392578
    9. ' ' → logprob: -16.153888702392578
    10. '==' → logprob: -16.403888702392578

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018947436183225363
    2. ' ' → logprob: -8.625189781188965
    3. '   ' → logprob: -11.875189781188965
    4. 'True' → logprob: -13.125189781188965
    5. ' True' → logprob: -14.750189781188965
    6. '  ' → logprob: -16.00018882751465
    7. '           ' → logprob: -16.43768882751465
    8. '       ' → logprob: -16.75018882751465
    9. 'true' → logprob: -16.75018882751465
    10. '    ' → logprob: -17.12518882751465

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5822400857578032e-05
    2. ' ' → logprob: -11.250025749206543
    3. 'True' → logprob: -11.375025749206543
    4. ' True' → logprob: -14.625025749206543
    5. 'true' → logprob: -15.500025749206543
    6. '   ' → logprob: -15.750025749206543
    7. '`' → logprob: -17.00002670288086
    8. 'max' → logprob: -17.12502670288086
    9. '+' → logprob: -17.18752670288086
    10. '-' → logprob: -17.62502670288086

Token 77: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1720568835735321
    2. 'elif' → logprob: -2.7970569133758545
    3. 'else' → logprob: -3.4220569133758545
    4. ' else' → logprob: -3.6720569133758545
    5. ' elif' → logprob: -3.6720569133758545
    6. '
' → logprob: -5.422056674957275
    7. '           ' → logprob: -5.797056674957275
    8. '   ' → logprob: -6.297056674957275
    9. '```' → logprob: -7.172056674957275
    10. '<|end|>' → logprob: -7.297056674957275

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45275625586509705
    2. 'elif' → logprob: -1.5777562856674194
    3. 'else' → logprob: -2.32775616645813
    4. ' else' → logprob: -3.70275616645813
    5. ' elif' → logprob: -3.95275616645813
    6. '<|end|>' → logprob: -4.827756404876709
    7. '   ' → logprob: -5.827756404876709
    8. 'if' → logprob: -6.452756404876709
    9. ' if' → logprob: -6.952756404876709
    10. '           ' → logprob: -7.202756404876709

Token 79: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.7705767154693604
    2. ' else' → logprob: -1.1455767154693604
    3. 'elif' → logprob: -2.2705767154693604
    4. ' elif' → logprob: -2.5205767154693604
    5. '       ' → logprob: -3.3955767154693604
    6. '   ' → logprob: -6.770576477050781
    7. '	elif' → logprob: -7.645576477050781
    8. '	else' → logprob: -8.270576477050781
    9. '    ' → logprob: -9.520576477050781
    10. '<|end|>' → logprob: -11.145576477050781

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36042433977127075
    2. ':
' → logprob: -1.860424280166626
    3. 'wa' → logprob: -2.235424280166626
    4. ' wa' → logprob: -3.985424280166626
    5. '           ' → logprob: -4.235424518585205
    6. '       ' → logprob: -6.360424518585205
    7. ' :
' → logprob: -6.485424518585205
    8. ' :' → logprob: -6.985424518585205
    9. '   ' → logprob: -7.235424518585205
    10. 'if' → logprob: -7.860424518585205

Token 81: '           ' (ID: 352)
  Prédit: 'wa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wa' → logprob: -0.697088360786438
    2. ' wa' → logprob: -0.697088360786438
    3. '           ' → logprob: -6.572088241577148
    4. '   ' → logprob: -7.322088241577148
    5. '               ' → logprob: -7.447088241577148
    6. ' if' → logprob: -7.947088241577148
    7. '```' → logprob: -8.697088241577148
    8. '       ' → logprob: -9.322088241577148
    9. '1' → logprob: -9.322088241577148
    10. ' ' → logprob: -9.447088241577148

Token 82: ' if' (ID: 538)
  Prédit: ' wa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wa' → logprob: -0.3603533208370209
    2. 'wa' → logprob: -1.2353533506393433
    3. ' if' → logprob: -4.610353469848633
    4. 'if' (adapté à ' if') → logprob: -6.860353469848633
    5. ' ' → logprob: -8.735353469848633
    6. '   ' → logprob: -9.110353469848633
    7. '```' → logprob: -9.110353469848633
    8. '            ' → logprob: -9.235353469848633
    9. '    ' → logprob: -9.235353469848633
    10. ' ' → logprob: -9.985353469848633

Token 83: ' ac' (ID: 1375)
  Prédit: ' ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ac' → logprob: -0.10432633757591248
    2. ' not' → logprob: -2.9793262481689453
    3. 'ac' → logprob: -3.1043262481689453
    4. 'not' → logprob: -5.729326248168945
    5. '   ' → logprob: -9.854326248168945
    6. '	ac' → logprob: -10.354326248168945
    7. '(ac' → logprob: -10.854326248168945
    8. ' ' → logprob: -11.479326248168945
    9. ' ' → logprob: -11.604326248168945
    10. '!' → logprob: -13.416826248168945

Token 84: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.2664456789934775e-06
    2. 'p' → logprob: -14.000000953674316
    3. '[' → logprob: -15.000000953674316
    4. '[
' → logprob: -18.250001907348633
    5. '	p' → logprob: -19.250001907348633
    6. ' [' → logprob: -19.500001907348633
    7. '[i' → logprob: -19.500001907348633
    8. '<p' → logprob: -19.625001907348633
    9. '```' → logprob: -19.750001907348633
    10. '[a' → logprob: -20.000001907348633

Token 85: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05274850130081177
    2. ']==' → logprob: -3.052748441696167
    3. '==' → logprob: -6.177748680114746
    4. ' ==' → logprob: -6.802748680114746
    5. '[' → logprob: -7.802748680114746
    6. '[p' → logprob: -7.927748680114746
    7. ' ]' → logprob: -9.302748680114746
    8. '[j' → logprob: -10.177748680114746
    9. ')' → logprob: -10.802748680114746
    10. '[i' → logprob: -11.052748680114746

Token 86: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00017433916218578815
    2. ' ==' → logprob: -8.875174522399902
    3. ']==' → logprob: -11.000174522399902
    4. '0' → logprob: -11.625174522399902
    5. '==
' → logprob: -12.875174522399902
    6. '=' → logprob: -13.250174522399902
    7. '!=' → logprob: -13.500174522399902
    8. '<' → logprob: -13.750174522399902
    9. ')==' → logprob: -14.250174522399902
    10. '()==' → logprob: -14.625174522399902

Token 87: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019291093340143561
    2. ' ' → logprob: -6.25192928314209
    3. '   ' → logprob: -15.12692928314209
    4. '  ' → logprob: -16.751928329467773
    5. '۰' → logprob: -17.001928329467773
    6. '1' → logprob: -17.126928329467773
    7. '    ' → logprob: -17.126928329467773
    8. '```' → logprob: -17.626928329467773
    9. '０' → logprob: -18.126928329467773
    10. ' ' → logprob: -18.876928329467773

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.12504005432129
    4. '1' → logprob: -17.37504005432129
    5. '۰' → logprob: -17.37504005432129
    6. '  ' → logprob: -18.25004005432129
    7. '０' → logprob: -18.62504005432129
    8. '    ' → logprob: -18.75004005432129
    9. '```' → logprob: -18.75004005432129
    10. 'False' → logprob: -19.25004005432129

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001582470489665866
    2. ':
' → logprob: -7.001582622528076
    3. '           ' → logprob: -8.626582145690918
    4. ' and' → logprob: -8.751582145690918
    5. ' :' → logprob: -8.876582145690918
    6. '               ' → logprob: -9.001582145690918
    7. '       ' → logprob: -10.501582145690918
    8. 'and' → logprob: -11.751582145690918
    9. '   ' → logprob: -12.001582145690918
    10. ',' → logprob: -12.001582145690918

Token 90: '               ' (ID: 506)
  Prédit: 'wa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wa' → logprob: -0.019671687856316566
    2. ' wa' → logprob: -4.64467191696167
    3. '               ' → logprob: -4.76967191696167
    4. '           ' → logprob: -7.26967191696167
    5. '   ' → logprob: -8.019671440124512
    6. '       ' → logprob: -9.769671440124512
    7. '                   ' → logprob: -10.019671440124512
    8. '	' → logprob: -10.144671440124512
    9. '			' → logprob: -10.269671440124512
    10. '```' → logprob: -10.394671440124512

Token 91: ' wa' (ID: 3123)
  Prédit: 'wa'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wa' (adapté à ' wa') → logprob: -0.01815415732562542
    2. ' wa' → logprob: -4.018154144287109
    3. '   ' → logprob: -14.01815414428711
    4. '               ' → logprob: -14.39315414428711
    5. ' ' → logprob: -14.76815414428711
    6. '                   ' → logprob: -14.89315414428711
    7. '                                   ' → logprob: -15.14315414428711
    8. '-wa' → logprob: -15.26815414428711
    9. '```' → logprob: -15.51815414428711
    10. 'w' → logprob: -15.51815414428711

Token 92: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.1160349458805285e-05
    2. '[' → logprob: -11.625011444091797
    3. ' [' → logprob: -13.500011444091797
    4. 'p' → logprob: -14.125011444091797
    5. ' p' → logprob: -19.125011444091797
    6. '[P' → logprob: -19.375011444091797
    7. '[s' → logprob: -19.875011444091797
    8. '	p' → logprob: -20.250011444091797
    9. '[q' → logprob: -20.375011444091797
    10. '[u' → logprob: -20.500011444091797

Token 93: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014310291036963463
    2. ']+=' → logprob: -4.264310359954834
    3. ' ]' → logprob: -9.389309883117676
    4. '+=' → logprob: -10.514309883117676
    5. '+]' → logprob: -11.514309883117676
    6. ']+' → logprob: -12.139309883117676
    7. ' +=' → logprob: -12.139309883117676
    8. '+' → logprob: -12.139309883117676
    9. '[' → logprob: -12.514309883117676
    10. '']' → logprob: -13.014309883117676

Token 94: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.21195577085018158
    2. '+=' → logprob: -1.8369557857513428
    3. '+' → logprob: -3.4619557857513428
    4. '=' → logprob: -9.086956024169922
    5. ' +' → logprob: -9.086956024169922
    6. ' ' → logprob: -9.586956024169922
    7. ']+=' → logprob: -11.336956024169922
    8. '<|end|>' → logprob: -11.461956024169922
    9. ' =' → logprob: -12.086956024169922
    10. '+='' → logprob: -12.711956024169922

Token 95: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '<|end|>' → logprob: -19.125059127807617
    4. '１' → logprob: -20.125059127807617
    5. '   ' → logprob: -20.625059127807617
    6. '  ' → logprob: -21.625059127807617
    7. ' ' → logprob: -21.625059127807617
    8. '+' → logprob: -22.000059127807617
    9. '```' → logprob: -22.250059127807617
    10. '100' → logprob: -22.375059127807617

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '<|end|>' → logprob: -18.000001907348633
    4. '１' → logprob: -18.250001907348633
    5. '۱' → logprob: -20.125001907348633
    6. '১' → logprob: -21.250001907348633
    7. '१' → logprob: -21.250001907348633
    8. '.' → logprob: -21.437501907348633
    9. '+' → logprob: -21.562501907348633
    10. '' → logprob: -21.937501907348633

Token 97: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30970823764801025
    2. '\n' → logprob: -2.3097081184387207
    3. '<|end|>' → logprob: -2.5597081184387207
    4. ' ' → logprob: -3.4347081184387207
    5. '   ' → logprob: -4.059708118438721
    6. '```' → logprob: -5.059708118438721
    7. '' → logprob: -5.184708118438721
    8. 'for' → logprob: -5.434708118438721
    9. '  
' → logprob: -5.684708118438721
    10. '    
' → logprob: -5.809708118438721

Token 98: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6313139200210571
    2. '\n' → logprob: -1.6313139200210571
    3. '   ' → logprob: -2.0063138008117676
    4. ' ' → logprob: -3.3813138008117676
    5. 'print' → logprob: -3.3813138008117676
    6. '  
' → logprob: -4.631313800811768
    7. '    
' → logprob: -4.756313800811768
    8. 'for' → logprob: -4.881313800811768
    9. ' 
' → logprob: -5.131313800811768
    10. '' → logprob: -5.256313800811768

Token 99: ' for' (ID: 395)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -1.0214922428131104
    2. '   ' → logprob: -1.8964922428131104
    3. 'a' → logprob: -2.6464922428131104
    4. 'accepted' → logprob: -3.0214922428131104
    5. 'total' → logprob: -3.1464922428131104
    6. 'ac' → logprob: -3.3964922428131104
    7. 'print' → logprob: -3.5214922428131104
    8. 'ans' → logprob: -3.6464922428131104
    9. 's' → logprob: -3.7714922428131104
    10. 'c' → logprob: -4.021492004394531

Token 100: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.026464825496077538
    2. 'i' → logprob: -3.6514649391174316
    3. ' p' → logprob: -9.651464462280273
    4. ' _' → logprob: -9.651464462280273
    5. '_' → logprob: -11.026464462280273
    6. ' ' → logprob: -11.401464462280273
    7. 'p' → logprob: -12.401464462280273
    8. '	i' → logprob: -13.401464462280273
    9. '_i' → logprob: -13.651464462280273
    10. ' ' → logprob: -14.151464462280273

Token 101: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008150805719196796
    2. 'in' → logprob: -4.883150577545166
    3. ' ' → logprob: -7.633150577545166
    4. ' i' → logprob: -10.508151054382324
    5. '  ' → logprob: -11.508151054382324
    6. 'n' → logprob: -11.758151054382324
    7. ',' → logprob: -12.383151054382324
    8. '	in' → logprob: -12.508151054382324
    9. ' ' → logprob: -13.383151054382324
    10. 'i' → logprob: -13.633151054382324

Token 102: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868774473667145
    2. 'range' → logprob: -1.136877417564392
    3. 'ran' → logprob: -13.386877059936523
    4. ' ' → logprob: -13.511877059936523
    5. 'ra' → logprob: -14.136877059936523
    6. 'rang' → logprob: -14.261877059936523
    7. ' ran' → logprob: -14.511877059936523
    8. '	range' → logprob: -14.761877059936523
    9. '(range' → logprob: -15.261877059936523
    10. ' ra' → logprob: -15.261877059936523

Token 103: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.38823258876800537
    2. '(' → logprob: -1.1382325887680054
    3. ' (' → logprob: -6.763232707977295
    4. ' N' → logprob: -9.263232231140137
    5. '(len' → logprob: -10.138232231140137
    6. '(n' → logprob: -10.138232231140137
    7. 'N' → logprob: -11.263232231140137
    8. ' ' → logprob: -11.513232231140137
    9. '(
' → logprob: -11.888232231140137
    10. '()' → logprob: -14.763232231140137

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003884894831571728
    2. ')' → logprob: -8.375388145446777
    3. ' ):' → logprob: -9.500388145446777
    4. '):
' → logprob: -9.625388145446777
    5. ':' → logprob: -11.125388145446777
    6. '   ' → logprob: -13.750388145446777
    7. '():' → logprob: -15.750388145446777
    8. ']:' → logprob: -15.750388145446777
    9. '+' → logprob: -15.750388145446777
    10. ' ' → logprob: -15.875388145446777

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024237334728240967
    2. ' if' → logprob: -3.8992373943328857
    3. '   ' → logprob: -5.774237155914307
    4. 'if' → logprob: -8.149237632751465
    5. '<|end|>' → logprob: -9.149237632751465
    6. ',' → logprob: -10.024237632751465
    7. ' ' → logprob: -10.024237632751465
    8. '    ' → logprob: -10.399237632751465
    9. '	   ' → logprob: -10.649237632751465
    10. '	' → logprob: -11.399237632751465

Token 106: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06271810084581375
    2. ' if' → logprob: -2.812718152999878
    3. '   ' → logprob: -8.062718391418457
    4. '       ' → logprob: -8.312718391418457
    5. 'print' → logprob: -8.687718391418457
    6. 'pass' → logprob: -12.687718391418457
    7. '	if' → logprob: -12.812718391418457
    8. '    ' → logprob: -12.937718391418457
    9. ' print' → logprob: -13.187718391418457
    10. 'for' → logprob: -13.187718391418457

Token 107: ' ac' (ID: 1375)
  Prédit: ' ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ac' → logprob: -0.07004058361053467
    2. 'ac' → logprob: -2.695040702819824
    3. '	ac' → logprob: -9.695040702819824
    4. ' ' → logprob: -11.195040702819824
    5. '(ac' → logprob: -11.195040702819824
    6. ' ' → logprob: -11.820040702819824
    7. '   ' → logprob: -13.195040702819824
    8. ' a' → logprob: -13.570040702819824
    9. ' not' → logprob: -13.945040702819824
    10. 'a' → logprob: -14.070040702819824

Token 108: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00019376569252926856
    2. '[p' → logprob: -8.62519359588623
    3. '[' → logprob: -11.25019359588623
    4. ' [' → logprob: -15.25019359588623
    5. '[I' → logprob: -15.25019359588623
    6. '[
' → logprob: -15.87519359588623
    7. '[a' → logprob: -16.000194549560547
    8. 'i' → logprob: -16.500194549560547
    9. '\[' → logprob: -17.000194549560547
    10. '[e' → logprob: -17.250194549560547

Token 109: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.36346352100372314
    2. ']:' → logprob: -1.9884635210037231
    3. ']==' → logprob: -1.9884635210037231
    4. '==' → logprob: -3.6134634017944336
    5. ':' → logprob: -6.238463401794434
    6. ' ==' → logprob: -7.113463401794434
    7. '):' → logprob: -8.363463401794434
    8. ' ]' → logprob: -8.488463401794434
    9. '}' → logprob: -8.738463401794434
    10. ']:
' → logprob: -9.113463401794434

Token 110: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.19750875234603882
    2. ' ==' → logprob: -1.8225088119506836
    3. ':' → logprob: -4.072508811950684
    4. '<|end|>' → logprob: -8.072508811950684
    5. '=' → logprob: -9.322508811950684
    6. ']==' → logprob: -10.572508811950684
    7. ')==' → logprob: -10.947508811950684
    8. ' :' → logprob: -11.197508811950684
    9. 'and' → logprob: -11.447508811950684
    10. ' =' → logprob: -11.447508811950684

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04969732090830803
    2. ' ' → logprob: -3.5496973991394043
    3. '0' → logprob: -3.9246973991394043
    4. '   ' → logprob: -14.924696922302246
    5. ' ' → logprob: -15.612196922302246
    6. '  ' → logprob: -15.737196922302246
    7. '=' → logprob: -16.799697875976562
    8. '１' → logprob: -16.862197875976562
    9. '' → logprob: -17.612197875976562
    10. '    ' → logprob: -17.737197875976562

Token 112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.349807471036911
    2. '1' → logprob: -1.2248075008392334
    3. ' ' → logprob: -6.599807262420654
    4. '```' → logprob: -15.162307739257812
    5. '   ' → logprob: -15.662307739257812
    6. '<|end|>' → logprob: -16.349807739257812
    7. '[' → logprob: -16.599807739257812
    8. '`' → logprob: -16.724807739257812
    9. '  ' → logprob: -16.849807739257812
    10. '=' → logprob: -17.099807739257812

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001875086221843958
    2. ':
' → logprob: -6.876874923706055
    3. ' continue' → logprob: -7.626874923706055
    4. '       ' → logprob: -9.251874923706055
    5. ' :' → logprob: -9.876874923706055
    6. '	continue' → logprob: -9.876874923706055
    7. '           ' → logprob: -10.126874923706055
    8. ' or' → logprob: -10.376874923706055
    9. 'continue' → logprob: -11.001874923706055
    10. ' and' → logprob: -11.001874923706055

Token 114: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25150468945503235
    2. ' continue' → logprob: -2.00150465965271
    3. 'continue' → logprob: -3.12650465965271
    4. '           ' → logprob: -3.37650465965271
    5. '	continue' → logprob: -5.251504898071289
    6. '   ' → logprob: -5.876504898071289
    7. '	   ' → logprob: -8.001504898071289
    8. ':' → logprob: -9.251504898071289
    9. '_continue' → logprob: -9.251504898071289
    10. '	       ' → logprob: -9.501504898071289

Token 115: ' wa' (ID: 3123)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.16720466315746307
    2. ' continue' → logprob: -2.0422046184539795
    3. '       ' → logprob: -4.292204856872559
    4. '   ' → logprob: -5.667204856872559
    5. '           ' → logprob: -6.167204856872559
    6. ' wa' → logprob: -6.292204856872559
    7. 'wa' (adapté à ' wa') → logprob: -6.792204856872559
    8. 'contin' → logprob: -7.667204856872559
    9. '```' → logprob: -8.167204856872559
    10. '	continue' → logprob: -8.292204856872559

Token 116: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00433505279943347
    2. '[' → logprob: -5.504334926605225
    3. '<|end|>' → logprob: -8.629335403442383
    4. 'i' → logprob: -10.004335403442383
    5. '[p' → logprob: -11.879335403442383
    6. '=' → logprob: -12.004335403442383
    7. ' ' → logprob: -12.254335403442383
    8. '[n' → logprob: -12.504335403442383
    9. '[]' → logprob: -13.379335403442383
    10. '[
' → logprob: -13.879335403442383

Token 117: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7055754065513611
    2. ' =' → logprob: -0.7055754065513611
    3. ' +=' → logprob: -4.955575466156006
    4. '+=' → logprob: -5.330575466156006
    5. ')' → logprob: -8.080574989318848
    6. ']' → logprob: -9.955574989318848
    7. ' ' → logprob: -10.830574989318848
    8. '+' → logprob: -10.955574989318848
    9. '<|end|>' → logprob: -11.205574989318848
    10. ')=' → logprob: -11.455574989318848

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007945395074784756
    2. '+=' → logprob: -4.882945537567139
    3. ' =' → logprob: -8.13294506072998
    4. ' +=' → logprob: -10.13294506072998
    5. '+' → logprob: -12.88294506072998
    6. '*=' → logprob: -14.25794506072998
    7. '==' → logprob: -14.63294506072998
    8. '=

' → logprob: -15.00794506072998
    9. 'continue' → logprob: -15.13294506072998
    10. ')' → logprob: -15.25794506072998

Token 119: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015056940028443933
    2. ' ' → logprob: -6.5015058517456055
    3. '999' → logprob: -13.751505851745605
    4. '-' → logprob: -14.126505851745605
    5. 'wa' → logprob: -14.876505851745605
    6. '000' → logprob: -15.251505851745605
    7. '100' → logprob: -15.876505851745605
    8. '00' → logprob: -16.00150489807129
    9. '<|end|>' → logprob: -16.00150489807129
    10. '  ' → logprob: -16.12650489807129

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00036275613820180297
    2. ' ' → logprob: -8.125362396240234
    3. '999' → logprob: -10.500362396240234
    4. 'wa' → logprob: -11.250362396240234
    5. '-' → logprob: -11.625362396240234
    6. '100' → logprob: -11.875362396240234
    7. 'float' → logprob: -12.625362396240234
    8. '10' → logprob: -13.500362396240234
    9. '000' → logprob: -13.500362396240234
    10. ' wa' → logprob: -14.625362396240234

Token 121: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8323202133178711
    2. '
' → logprob: -1.082320213317871
    3. 'print' → logprob: -2.457320213317871
    4. 'correct' → logprob: -2.457320213317871
    5. '    
' → logprob: -4.582320213317871
    6. ' correct' → logprob: -4.957320213317871
    7. 'ac' → logprob: -5.082320213317871
    8. 'sum' → logprob: -5.207320213317871
    9. ' 
' → logprob: -5.457320213317871
    10. '  
' → logprob: -6.082320213317871

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6600491404533386
    2. '
' → logprob: -1.5350492000579834
    3. 'print' → logprob: -1.9100492000579834
    4. '    
' → logprob: -3.4100492000579834
    5. ' 
' → logprob: -3.7850492000579834
    6. '\n' → logprob: -4.535048961639404
    7. 'return' → logprob: -4.535048961639404
    8. '<|end|>' → logprob: -4.785048961639404
    9. ' ' → logprob: -4.910048961639404
    10. '  
' → logprob: -5.160048961639404

Token 123: ' print' (ID: 2123)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'correct' → logprob: -0.6084848046302795
    2. 'ac' → logprob: -2.1084847450256348
    3. '   ' → logprob: -2.4834847450256348
    4. 'print' (adapté à ' print') → logprob: -2.8584847450256348
    5. '
' → logprob: -3.2334847450256348
    6. 's' → logprob: -3.3584847450256348
    7. 'sum' → logprob: -3.8584847450256348
    8. ' correct' → logprob: -4.358484745025635
    9. '    
' → logprob: -4.733484745025635
    10. 'return' → logprob: -4.733484745025635

Token 124: '(str' (ID: 7946)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.31511807441711426
    2. '(' → logprob: -1.3151180744171143
    3. '(len' → logprob: -6.315117835998535
    4. '((' → logprob: -11.315117835998535
    5. '(ac' → logprob: -11.440117835998535
    6. '(
' → logprob: -11.440117835998535
    7. 'sum' → logprob: -13.065117835998535
    8. '('' → logprob: -13.190117835998535
    9. '()' → logprob: -13.315117835998535
    10. '("' → logprob: -13.440117835998535

Token 125: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.0026789873372763395
    2. '(' → logprob: -6.252678871154785
    3. 'sum' → logprob: -7.877678871154785
    4. '(ac' → logprob: -8.127678871154785
    5. ')' → logprob: -10.127678871154785
    6. '(
' → logprob: -10.877678871154785
    7. '(len' → logprob: -12.002678871154785
    8. 'ac' → logprob: -12.752678871154785
    9. ' sum' → logprob: -13.002678871154785
    10. '(max' → logprob: -13.502678871154785

Token 126: '(ac' (ID: 95204)
  Prédit: '(ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ac' → logprob: -0.001198086072690785
    2. '(' → logprob: -6.7511982917785645
    3. ')' → logprob: -11.376197814941406
    4. ' (' → logprob: -12.001197814941406
    5. '(
' → logprob: -12.876197814941406
    6. 'ac' → logprob: -13.126197814941406
    7. '(a' → logprob: -13.751197814941406
    8. '	ac' → logprob: -13.876197814941406
    9. ')(' → logprob: -14.126197814941406
    10. '(s' → logprob: -14.626197814941406

Token 127: '))' (ID: 915)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3670896887779236
    2. ')' → logprob: -1.2420897483825684
    3. '))' → logprob: -4.367089748382568
    4. '(' → logprob: -6.242089748382568
    5. '()),' → logprob: -6.992089748382568
    6. '),' → logprob: -7.117089748382568
    7. ')+' → logprob: -7.242089748382568
    8. ' )' → logprob: -7.367089748382568
    9. '()))' → logprob: -7.617089748382568
    10. '()' → logprob: -8.86708927154541

Token 128: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16849066317081451
    2. ' ,' → logprob: -1.9184906482696533
    3. ')' → logprob: -5.543490886688232
    4. ' ' → logprob: -6.793490886688232
    5. ' )' → logprob: -6.918490886688232
    6. '+' → logprob: -7.043490886688232
    7. ',"' → logprob: -7.668490886688232
    8. '"' → logprob: -8.793490409851074
    9. ' +' → logprob: -9.168490409851074
    10. ',sum' → logprob: -9.168490409851074

Token 129: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5243491530418396
    2. ''' → logprob: -0.8993491530418396
    3. ' "' → logprob: -7.399349212646484
    4. ' '' → logprob: -7.774349212646484
    5. ' ' → logprob: -9.274349212646484
    6. ')' → logprob: -10.024349212646484
    7. '  ' → logprob: -10.774349212646484
    8. '('' → logprob: -12.024349212646484
    9. '("' → logprob: -12.274349212646484
    10. '   ' → logprob: -12.399349212646484

Token 130: ' "' (ID: 392)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13199709355831146
    2. '"' → logprob: -2.3819971084594727
    3. ' "' → logprob: -3.6319971084594727
    4. ''' → logprob: -5.631997108459473
    5. ' )' → logprob: -7.881997108459473
    6. ')' → logprob: -8.256997108459473
    7. '  ' → logprob: -8.631997108459473
    8. ' '' → logprob: -8.631997108459473
    9. ' ' → logprob: -9.631997108459473
    10. ' 
' → logprob: -10.256997108459473

Token 131: ' +' (ID: 659)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.010631194338202477
    2. '+' → logprob: -4.635631084442139
    3. '(str' → logprob: -7.385631084442139
    4. ' str' → logprob: -8.510631561279297
    5. ' +' → logprob: -10.010631561279297
    6. '[str' → logprob: -12.635631561279297
    7. ',str' → logprob: -13.385631561279297
    8. ' ' → logprob: -13.760631561279297
    9. '=str' → logprob: -14.135631561279297
    10. ')' → logprob: -15.385631561279297

Token 132: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0032446200493723154
    2. ' str' → logprob: -5.753244400024414
    3. 'sum' → logprob: -9.628244400024414
    4. '(str' → logprob: -14.253244400024414
    5. '	str' → logprob: -15.753244400024414
    6. ' ' → logprob: -16.128244400024414
    7. ' sum' → logprob: -16.628244400024414
    8. '   ' → logprob: -17.878244400024414
    9. '[str' → logprob: -18.003244400024414
    10. 'stri' → logprob: -18.253244400024414

Token 133: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -1.2471589798224159e-05
    2. 'sum' → logprob: -11.875012397766113
    3. '(' → logprob: -12.375012397766113
    4. ' (' → logprob: -13.625012397766113
    5. '(max' → logprob: -17.50001335144043
    6. '(
' → logprob: -17.87501335144043
    7. '((' → logprob: -18.00001335144043
    8. '=sum' → logprob: -18.37501335144043
    9. ' sum' → logprob: -18.87501335144043
    10. '
' → logprob: -20.37501335144043

Token 134: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.41866585687967e-06
    2. '([' → logprob: -12.125008583068848
    3. ' (' → logprob: -12.875008583068848
    4. '(sum' → logprob: -16.00000762939453
    5. '((' → logprob: -16.12500762939453
    6. '(
' → logprob: -17.12500762939453
    7. '(w' → logprob: -17.62500762939453
    8. ' ' → logprob: -18.62500762939453
    9. '   ' → logprob: -19.25000762939453
    10. '([(' → logprob: -19.25000762939453

Token 135: 'wa' (ID: 1708)
  Prédit: 'wa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wa' → logprob: -0.001710401731543243
    2. '(' → logprob: -6.376710414886475
    3. ' wa' → logprob: -12.501709938049316
    4. 'w' → logprob: -13.626709938049316
    5. '[' → logprob: -14.001709938049316
    6. '(w' → logprob: -14.001709938049316
    7. '([' → logprob: -14.876709938049316
    8. '
' → logprob: -15.251709938049316
    9. '   ' → logprob: -16.001710891723633
    10. '(
' → logprob: -16.126710891723633

Token 136: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003553385380655527
    2. ')' → logprob: -6.00355339050293
    3. ')))' → logprob: -6.87855339050293
    4. '()))' → logprob: -10.87855339050293
    5. '(' → logprob: -11.50355339050293
    6. '))
' → logprob: -11.75355339050293
    7. ' ))' → logprob: -12.62855339050293
    8. '(p' → logprob: -13.37855339050293
    9. '[' → logprob: -13.62855339050293
    10. '))

' → logprob: -13.87855339050293

Token 137: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0027890654746443033
    2. '__' → logprob: -6.12778902053833
    3. ' ' → logprob: -8.002789497375488
    4. '_' → logprob: -8.627789497375488
    5. ' _' → logprob: -9.502789497375488
    6. ' ' → logprob: -11.377789497375488
    7. ' ' → logprob: -13.127789497375488
    8. ' ‌' → logprob: -14.127789497375488
    9. '  ' → logprob: -15.252789497375488
    10. ' name' → logprob: -15.502789497375488

Token 139: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13252386450767517
    2. ' __' → logprob: -2.132523775100708
    3. ' ==' → logprob: -5.257524013519287
    4. '.__' → logprob: -8.507523536682129
    5. '==' → logprob: -9.007523536682129
    6. '__.__' → logprob: -11.132523536682129
    7. '_name' → logprob: -11.507523536682129
    8. '_' → logprob: -12.632523536682129
    9. ' _' → logprob: -13.382523536682129
    10. '__.' → logprob: -13.382523536682129

Token 140: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.60414821645827e-06
    2. '__.__' → logprob: -12.500004768371582
    3. '__.' → logprob: -14.375004768371582
    4. '____' → logprob: -16.375003814697266
    5. '_' → logprob: -16.625003814697266
    6. '==' → logprob: -16.750003814697266
    7. '__
' → logprob: -17.250003814697266
    8. '__('' → logprob: -17.500003814697266
    9. '___' → logprob: -17.750003814697266
    10. '__

' → logprob: -18.000003814697266

Token 141: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07440919429063797
    2. ' ==' → logprob: -2.699409246444702
    3. '==' → logprob: -5.699409008026123
    4. '.__' → logprob: -7.449409008026123
    5. '__.__' → logprob: -8.074409484863281
    6. '=="' → logprob: -9.699409484863281
    7. '_' → logprob: -9.699409484863281
    8. '.' → logprob: -10.199409484863281
    9. '__.' → logprob: -10.824409484863281
    10. '=='' → logprob: -11.574409484863281

Token 142: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07906031608581543
    2. ''' → logprob: -2.5790603160858154
    3. ' "__' → logprob: -8.954060554504395
    4. '__' → logprob: -10.329060554504395
    5. ' "' → logprob: -12.454060554504395
    6. ' '__' → logprob: -12.454060554504395
    7. '`' → logprob: -15.579060554504395
    8. '"user' → logprob: -15.579060554504395
    9. ' '' → logprob: -16.079059600830078
    10. '"_' → logprob: -16.829059600830078

Token 143: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.31456348299980164
    2. '__' → logprob: -1.314563512802124
    3. 'name' → logprob: -6.814563274383545
    4. '__':
' → logprob: -8.689563751220703
    5. '_main' → logprob: -11.439563751220703
    6. ''' → logprob: -12.689563751220703
    7. '__.' → logprob: -12.939563751220703
    8. '"' → logprob: -13.064563751220703
    9. '__
' → logprob: -13.314563751220703
    10. 'm' → logprob: -13.439563751220703

Token 144: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.387053906917572
    2. '__' → logprob: -1.1370539665222168
    3. '__:' → logprob: -9.387053489685059
    4. '_' → logprob: -9.887053489685059
    5. '__.' → logprob: -10.262053489685059
    6. '__":
' → logprob: -11.387053489685059
    7. '()' → logprob: -14.637053489685059
    8. '__('' → logprob: -14.637053489685059
    9. '':' → logprob: -15.137053489685059
    10. '__.__' → logprob: -15.262053489685059

Token 145: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.128861665725708
    2. 'main' → logprob: -2.128861665725708
    3. '   ' → logprob: -7.003861427307129
    4. '	main' → logprob: -7.003861427307129
    5. ' 
' → logprob: -10.378861427307129
    6. '    
' → logprob: -10.878861427307129
    7. ' ' → logprob: -11.003861427307129
    8. '_main' → logprob: -11.753861427307129
    9. ''' → logprob: -11.878861427307129
    10. ' ' → logprob: -12.003861427307129

Token 146: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.16023042798042297
    2. ' main' → logprob: -1.9102303981781006
    3. '	main' → logprob: -12.03523063659668
    4. ' ' → logprob: -16.41023063659668
    5. '(main' → logprob: -16.53523063659668
    6. ' ' → logprob: -16.66023063659668
    7. '   ' → logprob: -16.78523063659668
    8. '.main' → logprob: -17.53523063659668
    9. '_main' → logprob: -17.78523063659668
    10. 'mainwindow' → logprob: -18.16023063659668

Token 147: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014532095519825816
    2. '(' → logprob: -6.626453399658203
    3. '()
' → logprob: -9.126453399658203
    4. '(
' → logprob: -12.126453399658203
    5. '```' → logprob: -13.126453399658203
    6. '()">' → logprob: -13.251453399658203
    7. '()

' → logprob: -13.626453399658203
    8. '()`' → logprob: -13.626453399658203
    9. ' ()' → logprob: -13.751453399658203
    10. '#' → logprob: -14.001453399658203


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 145
Tokens correctement prédits (1ère position, stricte): 62
Tokens correctement prédits (1ère position, avec adaptation): 68
Tokens correctement prédits (top 10): 133
Précision stricte (1ère position): 42.76%
Précision adaptée (1ère position): 46.90%
Précision (top 10): 91.72%
================================================================================
