================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_n():
    return int(input())

def read_weights():
    return list(map(int, input().split()))

def sum_partial(weights, start, end):
    return sum(weights[start:end])

def compute_difference(weights, n, t):
    s1 = sum_partial(weights, 0, t)
    s2 = sum_partial(weights, t, n)
    return abs(s1 - s2)

def compute_all_differences(weights, n):
    differences = []
    for t in range(n):
        diff = compute_difference(weights, n, t)
        differences.append(diff)
    return differences

def find_minimum(values):
    return min(values)

def print_result(result):
    print(result)

def main():
    n = read_n()
    weights = read_weights()
    differences = compute_all_differences(weights, n)
    min_diff = find_minimum(differences)
    print_result(min_diff)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_n' (ID: 2170)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: 'ext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ext' → logprob: -0.5992681384086609
    2. '_' → logprob: -0.9742681384086609
    3. '(_' → logprob: -3.5992681980133057
    4. '```' → logprob: -4.099267959594727
    5. '_ext' → logprob: -4.724267959594727
    6. 'umber' → logprob: -4.974267959594727
    7. '(' → logprob: -5.724267959594727
    8. 'ame' → logprob: -5.849267959594727
    9. '_chars' → logprob: -6.474267959594727
    10. '(a' → logprob: -6.724267959594727

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2910083532333374
    2. ''' → logprob: -1.7910083532333374
    3. '\' → logprob: -1.7910083532333374
    4. '\n' → logprob: -2.166008472442627
    5. '   ' → logprob: -2.416008472442627
    6. '(' → logprob: -3.166008472442627
    7. '"' → logprob: -4.166008472442627
    8. ' 
' → logprob: -4.166008472442627
    9. ':' → logprob: -4.291008472442627
    10. '    
' → logprob: -4.416008472442627

Token 5: ' return' (ID: 622)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4778819680213928
    2. 'r' → logprob: -1.227881908416748
    3. '   ' → logprob: -3.477881908416748
    4. 'x' → logprob: -4.102881908416748
    5. '```' → logprob: -4.227881908416748
    6. 'return' (adapté à ' return') → logprob: -5.102881908416748
    7. ' ' → logprob: -5.227881908416748
    8. 'a' → logprob: -5.352881908416748
    9. 'i' → logprob: -5.477881908416748
    10. '`' → logprob: -6.477881908416748

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25417131185531616
    2. '  ' → logprob: -2.879171371459961
    3. ' []' → logprob: -2.879171371459961
    4. '"' → logprob: -3.129171371459961
    5. ' int' → logprob: -3.254171371459961
    6. ''' → logprob: -5.004171371459961
    7. ' input' → logprob: -5.629171371459961
    8. 'int' → logprob: -5.754171371459961
    9. ' None' → logprob: -5.754171371459961
    10. 'input' → logprob: -5.754171371459961

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015317666111513972
    2. '('' → logprob: -6.626531600952148
    3. '("("' → logprob: -9.626531600952148
    4. ''' → logprob: -9.876531600952148
    5. '```' → logprob: -10.876531600952148
    6. ' (' → logprob: -11.626531600952148
    7. '`' → logprob: -11.751531600952148
    8. '(`' → logprob: -12.001531600952148
    9. '40' → logprob: -12.501531600952148
    10. '(
' → logprob: -12.501531600952148

Token 8: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6808894276618958
    2. '()' → logprob: -1.430889368057251
    3. '())' → logprob: -1.430889368057251
    4. ')' → logprob: -5.18088960647583
    5. '('' → logprob: -5.55588960647583
    6. '()))' → logprob: -5.68088960647583
    7. '(""))' → logprob: -6.68088960647583
    8. '("("' → logprob: -7.80588960647583
    9. '(()' → logprob: -8.430889129638672
    10. '))' → logprob: -8.555889129638672

Token 9: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5685465931892395
    2. 'n' → logprob: -1.5685465335845947
    3. 'd' → logprob: -2.5685465335845947
    4. '#' → logprob: -3.4435465335845947
    5. '(' → logprob: -3.6935465335845947
    6. '
' → logprob: -4.318546772003174
    7. '\n' → logprob: -4.443546772003174
    8. '```' → logprob: -4.943546772003174
    9. 'x' → logprob: -5.068546772003174
    10. '' → logprob: -5.443546772003174

Token 10: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.1906631737947464
    2. ' write' → logprob: -1.94066321849823
    3. ' calculate' → logprob: -4.0656633377075195
    4. ' space' → logprob: -5.4406633377075195
    5. ' add' → logprob: -6.0656633377075195
    6. ' main' → logprob: -6.1906633377075195
    7. ' ' → logprob: -6.9406633377075195
    8. ' process' → logprob: -7.0656633377075195
    9. ' compute' → logprob: -7.3156633377075195
    10. '_' → logprob: -8.56566333770752

Token 11: '_weights' (ID: 49127)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0008610807126387954
    2. '_n' → logprob: -7.125861167907715
    3. '_a' → logprob: -10.875861167907715
    4. '_line' → logprob: -11.375861167907715
    5. '_)' → logprob: -11.625861167907715
    6. '(' → logprob: -12.500861167907715
    7. ' _' → logprob: -13.250861167907715
    8. '__' → logprob: -13.500861167907715
    9. '_(' → logprob: -13.875861167907715
    10. '_s' → logprob: -13.875861167907715

Token 12: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.026075471192598343
    2. '(' → logprob: -4.40107536315918
    3. '()' → logprob: -4.40107536315918
    4. '_' → logprob: -7.27607536315918
    5. '```' → logprob: -9.02607536315918
    6. ' ():' → logprob: -9.15107536315918
    7. '()>' → logprob: -10.15107536315918
    8. '_list' → logprob: -10.40107536315918
    9. '()">' → logprob: -10.65107536315918
    10. '():
' → logprob: -10.77607536315918

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2497565895318985
    2. '(' → logprob: -1.7497565746307373
    3. '    ' → logprob: -4.499756813049316
    4. ' weights' → logprob: -4.624756813049316
    5. '[' → logprob: -5.124756813049316
    6. 'w' → logprob: -5.374756813049316
    7. '_' → logprob: -5.999756813049316
    8. 'weights' → logprob: -6.124756813049316
    9. ' w' → logprob: -6.374756813049316
    10. ' return' → logprob: -6.624756813049316

Token 14: ' return' (ID: 622)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.4471934139728546
    2. '   ' → logprob: -1.3221933841705322
    3. ' weights' → logprob: -2.6971933841705322
    4. 'return' (adapté à ' return') → logprob: -3.9471933841705322
    5. ' return' → logprob: -5.322193622589111
    6. 'w' → logprob: -6.447193622589111
    7. '[]' → logprob: -8.572193145751953
    8. '[' → logprob: -8.697193145751953
    9. ' ' → logprob: -9.072193145751953
    10. ' w' → logprob: -9.197193145751953

Token 15: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2968740165233612
    2. 'list' → logprob: -1.5468740463256836
    3. '[list' → logprob: -3.9218740463256836
    4. ' [' → logprob: -4.171874046325684
    5. '[' → logprob: -4.796874046325684
    6. ' []' → logprob: -8.796874046325684
    7. ' ' → logprob: -8.921874046325684
    8. '[]' → logprob: -9.546874046325684
    9. '[int' → logprob: -10.046874046325684
    10. '(list' → logprob: -10.796874046325684

Token 16: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024456926621496677
    2. '(range' → logprob: -6.377445697784424
    3. '(int' → logprob: -8.002445220947266
    4. '(input' → logprob: -8.752445220947266
    5. '(eval' → logprob: -10.377445220947266
    6. '(

' → logprob: -10.627445220947266
    7. ' (' → logprob: -10.752445220947266
    8. '(map' → logprob: -11.002445220947266
    9. '(read' → logprob: -11.002445220947266
    10. '("("' → logprob: -11.502445220947266

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0021349138114601374
    2. '(' → logprob: -6.377134799957275
    3. 'int' → logprob: -7.877134799957275
    4. '(lambda' → logprob: -11.127135276794434
    5. '=int' → logprob: -11.752135276794434
    6. '<int' → logprob: -11.877135276794434
    7. ' (' → logprob: -12.377135276794434
    8. ' int' → logprob: -12.502135276794434
    9. '[int' → logprob: -12.502135276794434
    10. ',int' → logprob: -13.002135276794434

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.40421897172927856
    2. ',input' → logprob: -1.1542189121246338
    3. ',' → logprob: -4.279219150543213
    4. 'input' → logprob: -6.029219150543213
    5. '(' → logprob: -7.904219150543213
    6. '))' → logprob: -8.529218673706055
    7. ' input' → logprob: -8.904218673706055
    8. '=input' → logprob: -9.279218673706055
    9. ' ,' → logprob: -10.154218673706055
    10. '<input' → logprob: -10.779218673706055

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25201842188835144
    2. ' input' → logprob: -1.5020184516906738
    3. '(input' → logprob: -9.627017974853516
    4. ',input' → logprob: -11.752017974853516
    5. '=input' → logprob: -11.877017974853516
    6. '	input' → logprob: -12.627017974853516
    7. '<input' → logprob: -13.502017974853516
    8. ')' → logprob: -13.502017974853516
    9. ' ' → logprob: -14.377017974853516
    10. '[input' → logprob: -14.752017974853516

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003190193965565413
    2. '()' → logprob: -8.750319480895996
    3. '()))' → logprob: -9.000319480895996
    4. '))' → logprob: -11.000319480895996
    5. '())' → logprob: -11.625319480895996
    6. ')' → logprob: -12.500319480895996
    7. ' ().' → logprob: -13.375319480895996
    8. '.split' → logprob: -13.500319480895996
    9. '())))' → logprob: -13.750319480895996
    10. '.' → logprob: -14.125319480895996

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004090393427759409
    2. 'strip' → logprob: -5.504090309143066
    3. 'rstrip' → logprob: -11.379090309143066
    4. 'read' → logprob: -15.379090309143066
    5. ' split' → logprob: -15.504090309143066
    6. '(split' → logprob: -17.129091262817383
    7. ')' → logprob: -18.254091262817383
    8. 'spl' → logprob: -18.504091262817383
    9. '.split' → logprob: -18.629091262817383
    10. 's' → logprob: -19.379091262817383

Token 22: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03722957894206047
    2. '()' → logprob: -4.037229537963867
    3. '())' → logprob: -4.787229537963867
    4. '))' → logprob: -5.287229537963867
    5. '())))' → logprob: -5.537229537963867
    6. '(' → logprob: -6.912229537963867
    7. ')))' → logprob: -7.912229537963867
    8. ')' → logprob: -9.037229537963867
    9. '()))
' → logprob: -10.662229537963867
    10. '('' → logprob: -10.662229537963867

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015212877187877893
    2. 'n' → logprob: -6.626521110534668
    3. 'd' → logprob: -9.251521110534668
    4. '```' → logprob: -10.251521110534668
    5. 'for' → logprob: -10.626521110534668
    6. '#' → logprob: -11.626521110534668
    7. '
' → logprob: -11.751521110534668
    8. '\' → logprob: -12.376521110534668
    9. 'de' → logprob: -13.001521110534668
    10. 'class' → logprob: -13.626521110534668

Token 24: ' sum' (ID: 4215)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5700541138648987
    2. ' solve' → logprob: -1.945054054260254
    3. ' read' → logprob: -2.195054054260254
    4. 'read' → logprob: -3.320054054260254
    5. 'main' → logprob: -3.320054054260254
    6. 'solve' → logprob: -3.570054054260254
    7. ' max' → logprob: -4.320054054260254
    8. ' count' → logprob: -4.320054054260254
    9. ' find' → logprob: -4.445054054260254
    10. ' calculate' → logprob: -4.695054054260254

Token 25: '_partial' (ID: 139756)
  Prédit: '_weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_weights' → logprob: -0.058887042105197906
    2. '_' → logprob: -2.933887004852295
    3. '(' → logprob: -6.183887004852295
    4. '_s' → logprob: -8.433887481689453
    5. '_weight' → logprob: -8.433887481689453
    6. '_numbers' → logprob: -8.433887481689453
    7. 'Weights' → logprob: -8.808887481689453
    8. '_values' → logprob: -9.183887481689453
    9. '_w' → logprob: -9.183887481689453
    10. '_scores' → logprob: -9.308887481689453

Token 26: '(weights' (ID: 154124)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15776337683200836
    2. '_s' → logprob: -2.6577634811401367
    3. '_weights' → logprob: -3.4077634811401367
    4. '_sum' → logprob: -3.5327634811401367
    5. '(' → logprob: -5.032763481140137
    6. 's' → logprob: -5.532763481140137
    7. '_weight' → logprob: -7.782763481140137
    8. '_values' → logprob: -7.907763481140137
    9. '_scores' → logprob: -8.157763481140137
    10. ' _' → logprob: -8.407763481140137

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009123480878770351
    2. '[:' → logprob: -5.7591233253479
    3. ' ,' → logprob: -5.8841233253479
    4. '[' → logprob: -6.3841233253479
    5. '_,' → logprob: -7.8841233253479
    6. ',n' → logprob: -8.634123802185059
    7. ',w' → logprob: -8.884123802185059
    8. ')' → logprob: -9.509123802185059
    9. ',i' → logprob: -9.634123802185059
    10. '   ' → logprob: -9.759123802185059

Token 28: ' start' (ID: 1604)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6547028422355652
    2. ' n' → logprob: -1.52970290184021
    3. ' start' → logprob: -2.02970290184021
    4. 'k' → logprob: -2.65470290184021
    5. 'n' → logprob: -4.279702663421631
    6. ' length' → logprob: -4.529702663421631
    7. ' index' → logprob: -4.904702663421631
    8. 'start' → logprob: -5.154702663421631
    9. ' i' → logprob: -5.404702663421631
    10. ' count' → logprob: -5.654702663421631

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010853286366909742
    2. '=' → logprob: -7.50108528137207
    3. ')' → logprob: -8.50108528137207
    4. ' ,' → logprob: -8.75108528137207
    5. '_,' → logprob: -9.62608528137207
    6. '):' → logprob: -9.87608528137207
    7. '_index' → logprob: -11.00108528137207
    8. '_idx' → logprob: -11.75108528137207
    9. ',_' → logprob: -11.87608528137207
    10. ',index' → logprob: -12.75108528137207

Token 30: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.48533007502555847
    2. ' length' → logprob: -1.4853301048278809
    3. ' count' → logprob: -2.485330104827881
    4. 'end' → logprob: -3.360330104827881
    5. 'length' → logprob: -3.735330104827881
    6. 'count' → logprob: -4.610330104827881
    7. ' stop' → logprob: -5.610330104827881
    8. ' k' → logprob: -6.860330104827881
    9. 'stop' → logprob: -7.610330104827881
    10. ' ' → logprob: -8.360329627990723

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006102138431742787
    2. ')' → logprob: -7.7506103515625
    3. '+' → logprob: -9.8756103515625
    4. '):
' → logprob: -10.2506103515625
    5. ',' → logprob: -10.3756103515625
    6. ' ):' → logprob: -10.5006103515625
    7. ')):' → logprob: -11.2506103515625
    8. ':' → logprob: -12.1256103515625
    9. '=' → logprob: -12.5006103515625
    10. '_' → logprob: -12.7506103515625

Token 32: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0912950411438942
    2. '   ' → logprob: -2.966295003890991
    3. '):' → logprob: -3.466295003890991
    4. ' :' → logprob: -5.71629524230957
    5. '():' → logprob: -8.21629524230957
    6. ':**' → logprob: -8.34129524230957
    7. ':return' → logprob: -9.21629524230957
    8. '(' → logprob: -9.34129524230957
    9. ' ' → logprob: -9.59129524230957
    10. '    ' → logprob: -9.71629524230957

Token 33: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.37376731634140015
    2. '   ' → logprob: -1.373767375946045
    3. 'return' (adapté à ' return') → logprob: -3.498767375946045
    4. '    ' → logprob: -4.748767375946045
    5. ' ' → logprob: -4.873767375946045
    6. ' sum' → logprob: -4.873767375946045
    7. 'sum' → logprob: -5.873767375946045
    8. '  ' → logprob: -7.373767375946045
    9. ' s' → logprob: -8.623766899108887
    10. ' total' → logprob: -8.748766899108887

Token 34: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.014671577140688896
    2. 'sum' → logprob: -4.264671802520752
    3. ' weights' → logprob: -7.764671802520752
    4. ' ' → logprob: -9.889671325683594
    5. 'weights' → logprob: -11.389671325683594
    6. '(sum' → logprob: -12.139671325683594
    7. ' ' → logprob: -12.264671325683594
    8. '	sum' → logprob: -12.514671325683594
    9. '  ' → logprob: -13.139671325683594
    10. ' sums' → logprob: -13.639671325683594

Token 35: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.16055302321910858
    2. '(' → logprob: -1.910552978515625
    3. '_weights' → logprob: -8.285552978515625
    4. '(weight' → logprob: -10.160552978515625
    5. 'weights' → logprob: -11.160552978515625
    6. '(

' → logprob: -12.035552978515625
    7. ' weights' → logprob: -12.535552978515625
    8. '(
' → logprob: -12.910552978515625
    9. ' (' → logprob: -13.410552978515625
    10. '((' → logprob: -13.910552978515625

Token 36: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.00018077615823131055
    2. '[' → logprob: -8.625181198120117
    3. 'start' → logprob: -14.125181198120117
    4. ')' → logprob: -15.750181198120117
    5. ' [' → logprob: -15.875181198120117
    6. '   ' → logprob: -16.125181198120117
    7. '[end' → logprob: -17.375181198120117
    8. '```' → logprob: -17.375181198120117
    9. ')[' → logprob: -17.750181198120117
    10. '[s' → logprob: -18.250181198120117

Token 37: ':end' (ID: 63990)
  Prédit: ':end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':end' → logprob: -0.00036667886888608336
    2. ':' → logprob: -8.0003662109375
    3. ' :' → logprob: -10.5003662109375
    4. ',end' → logprob: -13.0003662109375
    5. 'end' → logprob: -14.5003662109375
    6. '	end' → logprob: -15.1253662109375
    7. ' ' → logprob: -15.5003662109375
    8. '@end' → logprob: -16.0003662109375
    9. ',' → logprob: -16.2503662109375
    10. '   ' → logprob: -16.3753662109375

Token 38: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0009810051415115595
    2. ')' → logprob: -7.000980854034424
    3. ']))' → logprob: -10.875981330871582
    4. ')])' → logprob: -11.000981330871582
    5. ']' → logprob: -11.500981330871582
    6. ' ])' → logprob: -11.750981330871582
    7. '+' → logprob: -11.875981330871582
    8. '))' → logprob: -12.625981330871582
    9. '])
' → logprob: -12.875981330871582
    10. '])]' → logprob: -14.125981330871582

Token 39: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43454426527023315
    2. '

' → logprob: -1.559544324874878
    3. '
' → logprob: -2.059544324874878
    4. '\n' → logprob: -4.934544086456299
    5. '<|end|>' → logprob: -5.559544086456299
    6. ' 

' → logprob: -7.309544086456299
    7. ' def' → logprob: -7.309544086456299
    8. '\' → logprob: -7.559544086456299
    9. '```' → logprob: -7.684544086456299
    10. '[' → logprob: -8.309544563293457

Token 40: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5221895575523376
    2. ' max' → logprob: -2.0221896171569824
    3. ' find' → logprob: -2.6471896171569824
    4. ' partial' → logprob: -2.7721896171569824
    5. ' sum' → logprob: -3.5221896171569824
    6. ' solve' → logprob: -3.6471896171569824
    7. ' calculate' → logprob: -4.272189617156982
    8. ' total' → logprob: -4.397189617156982
    9. ' compute' → logprob: -4.647189617156982
    10. ' prefix' → logprob: -5.147189617156982

Token 41: '_difference' (ID: 123771)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.3244633674621582
    2. '_' → logprob: -2.324463367462158
    3. '_sum' → logprob: -2.574463367462158
    4. '_partial' → logprob: -3.074463367462158
    5. '_max' → logprob: -3.574463367462158
    6. '_weights' → logprob: -4.449463367462158
    7. '(' → logprob: -5.699463367462158
    8. '_weight' → logprob: -6.074463367462158
    9. '_s' → logprob: -6.449463367462158
    10. '_sub' → logprob: -7.324463367462158

Token 42: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.03898816183209419
    2. '(' → logprob: -3.2889881134033203
    3. '(weight' → logprob: -8.03898811340332
    4. '(s' → logprob: -9.16398811340332
    5. '(start' → logprob: -9.41398811340332
    6. ' (' → logprob: -9.41398811340332
    7. '(values' → logprob: -9.53898811340332
    8. '_weights' → logprob: -9.66398811340332
    9. '(scores' → logprob: -10.28898811340332
    10. '(a' → logprob: -10.53898811340332

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002886425703763962
    2. '):' → logprob: -5.8778862953186035
    3. ' ,' → logprob: -10.127886772155762
    4. ',start' → logprob: -10.502886772155762
    5. '):
' → logprob: -12.502886772155762
    6. '   ' → logprob: -13.252886772155762
    7. ')' → logprob: -13.377886772155762
    8. ',n' → logprob: -13.627886772155762
    9. ',index' → logprob: -14.127886772155762
    10. '[start' → logprob: -14.127886772155762

Token 44: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.5418567657470703
    2. ' k' → logprob: -1.5418567657470703
    3. ' i' → logprob: -2.5418567657470703
    4. 'i' → logprob: -2.6668567657470703
    5. ' split' → logprob: -2.7918567657470703
    6. 'split' → logprob: -2.7918567657470703
    7. ' index' → logprob: -3.1668567657470703
    8. ' pivot' → logprob: -3.5418567657470703
    9. 'index' → logprob: -3.6668567657470703
    10. ' p' → logprob: -3.9168567657470703

Token 45: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004488392733037472
    2. ',' → logprob: -5.879488468170166
    3. ')' → logprob: -7.254488468170166
    4. '):
' → logprob: -7.504488468170166
    5. ' ):' → logprob: -7.879488468170166
    6. '-' → logprob: -11.629487991333008
    7. '   ' → logprob: -11.754487991333008
    8. '1' → logprob: -12.629487991333008
    9. ' ' → logprob: -12.629487991333008
    10. ':' → logprob: -12.629487991333008

Token 46: ' t' (ID: 260)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.8503313064575195
    2. 'k' → logprob: -1.2253313064575195
    3. ' i' → logprob: -2.7253313064575195
    4. 'i' → logprob: -3.3503313064575195
    5. ' ' → logprob: -4.1003313064575195
    6. ' split' → logprob: -4.1003313064575195
    7. 'split' → logprob: -4.1003313064575195
    8. ' index' → logprob: -4.2253313064575195
    9. ' p' → logprob: -4.2878313064575195
    10. ')' → logprob: -4.6003313064575195

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5563008189201355
    2. 'arget' → logprob: -1.0563008785247803
    3. 'ype' → logprob: -4.056300640106201
    4. ',' → logprob: -4.681300640106201
    5. ' ):' → logprob: -4.806300640106201
    6. 'h' → logprob: -5.056300640106201
    7. '):
' → logprob: -5.056300640106201
    8. '=' → logprob: -5.181300640106201
    9. ')' → logprob: -5.181300640106201
    10. 'otal' → logprob: -5.431300640106201

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23670940101146698
    2. ':' → logprob: -2.2367093563079834
    3. ' ' → logprob: -2.8617093563079834
    4. '    ' → logprob: -3.7367093563079834
    5. ' :' → logprob: -5.2367095947265625
    6. '<|end|>' → logprob: -5.6117095947265625
    7. ' total' → logprob: -6.2367095947265625
    8. '_' → logprob: -6.2367095947265625
    9. '  ' → logprob: -7.1117095947265625
    10. ')' → logprob: -7.2367095947265625

Token 49: ' s' (ID: 265)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -1.1911457777023315
    2. '   ' → logprob: -1.9411457777023315
    3. ' result' → logprob: -2.441145896911621
    4. ' best' → logprob: -2.441145896911621
    5. 'left' → logprob: -2.566145896911621
    6. ' min' → logprob: -2.566145896911621
    7. ' diff' → logprob: -3.441145896911621
    8. 'best' → logprob: -3.566145896911621
    9. 'result' → logprob: -3.691145896911621
    10. 'diff' → logprob: -3.816145896911621

Token 50: '1' (ID: 16)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.25618642568588257
    2. '1' → logprob: -2.1311864852905273
    3. '=' → logprob: -3.0061864852905273
    4. ' =' → logprob: -4.256186485290527
    5. 'plit' → logprob: -4.631186485290527
    6. 'ums' → logprob: -5.006186485290527
    7. 't' → logprob: -5.506186485290527
    8. 'o' → logprob: -5.881186485290527
    9. 'left' → logprob: -6.131186485290527
    10. 'total' → logprob: -6.381186485290527

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15489961206912994
    2. 'um' → logprob: -2.0298995971679688
    3. '=' → logprob: -4.654899597167969
    4. '_sum' → logprob: -6.904899597167969
    5. '_' → logprob: -7.029899597167969
    6. 'ums' → logprob: -8.529899597167969
    7. ' ' → logprob: -9.154899597167969
    8. '1' → logprob: -9.404899597167969
    9. ',' → logprob: -9.529899597167969
    10. '_um' → logprob: -9.654899597167969

Token 52: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.20879119634628296
    2. 'sum' → logprob: -1.7087912559509277
    3. ' weights' → logprob: -5.208791255950928
    4. '0' → logprob: -6.958791255950928
    5. 'weights' → logprob: -7.208791255950928
    6. ' ' → logprob: -9.95879077911377
    7. '(sum' → logprob: -10.45879077911377
    8. 't' → logprob: -10.70879077911377
    9. '=sum' → logprob: -11.33379077911377
    10. ' t' → logprob: -11.45879077911377

Token 53: '_partial' (ID: 139756)
  Prédit: '(weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.16333554685115814
    2. '_partial' → logprob: -1.9133355617523193
    3. '(' → logprob: -6.16333532333374
    4. '_weights' → logprob: -7.28833532333374
    5. '_part' → logprob: -9.538335800170898
    6. 'Partial' → logprob: -9.788335800170898
    7. '_' → logprob: -10.038335800170898
    8. '(weight' → logprob: -10.038335800170898
    9. 'weights' → logprob: -11.163335800170898
    10. '(part' → logprob: -11.288335800170898

Token 54: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -5.466968650580384e-05
    2. '(' → logprob: -9.875054359436035
    3. '(weight' → logprob: -13.500054359436035
    4. ' weights' → logprob: -13.875054359436035
    5. 'weights' → logprob: -14.375054359436035
    6. ' (' → logprob: -17.00005531311035
    7. '(
' → logprob: -17.00005531311035
    8. '```' → logprob: -17.25005531311035
    9. '_weights' → logprob: -17.62505531311035
    10. '(w' → logprob: -17.75005531311035

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012592414394021034
    2. '(' → logprob: -4.512592315673828
    3. ' ,' → logprob: -6.637592315673828
    4. '0' → logprob: -9.012592315673828
    5. ')' → logprob: -9.887592315673828
    6. '),' → logprob: -11.262592315673828
    7. 's' → logprob: -12.012592315673828
    8. ',
' → logprob: -12.012592315673828
    9. ' ' → logprob: -12.137592315673828
    10. ')(' → logprob: -12.387592315673828

Token 56: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006728634238243103
    2. ' ' → logprob: -5.006728649139404
    3. ' ' → logprob: -12.756728172302246
    4. ')' → logprob: -12.881728172302246
    5. 't' → logprob: -13.256728172302246
    6. '1' → logprob: -13.506728172302246
    7. '   ' → logprob: -13.569228172302246
    8. ' t' → logprob: -14.256728172302246
    9. '```' → logprob: -15.256728172302246
    10. '(' → logprob: -15.569228172302246

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017684244085103273
    2. ' ' → logprob: -8.750176429748535
    3. 't' → logprob: -11.250176429748535
    4. '   ' → logprob: -13.500176429748535
    5. '1' → logprob: -13.750176429748535
    6. 'n' → logprob: -14.000176429748535
    7. ' t' → logprob: -14.812676429748535
    8. '2' → logprob: -14.875176429748535
    9. ')' → logprob: -15.312676429748535
    10. 's' → logprob: -15.937676429748535

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026876648887991905
    2. ',t' → logprob: -3.77687668800354
    3. ' ,' → logprob: -5.651876449584961
    4. ',n' → logprob: -9.276876449584961
    5. 't' → logprob: -11.776876449584961
    6. '   ' → logprob: -13.151876449584961
    7. '	t' → logprob: -13.401876449584961
    8. ' t' → logprob: -13.401876449584961
    9. ' ' → logprob: -13.901876449584961
    10. '	' → logprob: -14.151876449584961

Token 59: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.21822679042816162
    2. 't' → logprob: -1.8432267904281616
    3. ' n' → logprob: -3.593226909637451
    4. 'n' → logprob: -4.593226909637451
    5. ' ' → logprob: -9.593226432800293
    6. ')' → logprob: -10.968226432800293
    7. ' ' → logprob: -11.968226432800293
    8. '	t' → logprob: -11.968226432800293
    9. ')t' → logprob: -12.405726432800293
    10. '    ' → logprob: -13.093226432800293

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14509977400302887
    2. ')
' → logprob: -2.0200998783111572
    3. ' )' → logprob: -6.770099639892578
    4. ' )
' → logprob: -7.270099639892578
    5. ')

' → logprob: -8.145099639892578
    6. ')
' → logprob: -8.770099639892578
    7. '+' → logprob: -9.395099639892578
    8. '-' → logprob: -10.770099639892578
    9. ' ' → logprob: -11.395099639892578
    10. '   ' → logprob: -11.770099639892578

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4046023190021515
    2. '
' → logprob: -1.404602289199829
    3. ')' → logprob: -3.529602289199829
    4. '<|end|>' → logprob: -3.529602289199829
    5. '    
' → logprob: -4.904602527618408
    6. ' 
' → logprob: -5.654602527618408
    7. '  
' → logprob: -5.779602527618408
    8. ' ' → logprob: -6.029602527618408
    9. ')
' → logprob: -6.154602527618408
    10. 's' → logprob: -6.154602527618408

Token 62: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.43207016587257385
    2. ' s' → logprob: -1.0570701360702515
    3. '   ' → logprob: -5.932070255279541
    4. ' ' → logprob: -7.557070255279541
    5. '    ' → logprob: -9.682069778442383
    6. '  ' → logprob: -11.057069778442383
    7. '<|end|>' → logprob: -11.182069778442383
    8. '    
' → logprob: -11.682069778442383
    9. ' 
' → logprob: -11.869569778442383
    10. '	s' → logprob: -11.932069778442383

Token 63: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029105760157108307
    2. '1' → logprob: -3.7791056632995605
    3. '_partial' → logprob: -5.2791056632995605
    4. ' -' → logprob: -8.279106140136719
    5. '-' → logprob: -9.279106140136719
    6. 'um' → logprob: -9.529106140136719
    7. 'partial' → logprob: -9.779106140136719
    8. '_weights' → logprob: -10.029106140136719
    9. '_' → logprob: -10.779106140136719
    10. '_total' → logprob: -11.029106140136719

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020543988794088364
    2. '=' → logprob: -3.8955440521240234
    3. ' ' → logprob: -13.645544052124023
    4. ')' → logprob: -14.895544052124023
    5. '  ' → logprob: -15.520544052124023
    6. ' ' → logprob: -16.395544052124023
    7. ' =
' → logprob: -16.645544052124023
    8. ',' → logprob: -16.770544052124023
    9. '=sum' → logprob: -17.270544052124023
    10. '.' → logprob: -17.770544052124023

Token 65: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.3134019374847412
    2. 'sum' → logprob: -1.3134019374847412
    3. 's' → logprob: -9.56340217590332
    4. '(sum' → logprob: -11.06340217590332
    5. '=sum' → logprob: -11.68840217590332
    6. ' weights' → logprob: -11.93840217590332
    7. '_sum' → logprob: -12.31340217590332
    8. 'weights' → logprob: -12.43840217590332
    9. 'n' → logprob: -12.56340217590332
    10. ' ' → logprob: -12.56340217590332

Token 66: '_partial' (ID: 139756)
  Prédit: '_partial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_partial' → logprob: -0.14402182400226593
    2. '(weights' → logprob: -2.01902174949646
    3. '_weights' → logprob: -7.394021987915039
    4. 'partial' → logprob: -8.019021987915039
    5. '(' → logprob: -9.019021987915039
    6. 'Partial' → logprob: -9.019021987915039
    7. '_' → logprob: -9.394021987915039
    8. 'weights' → logprob: -10.394021987915039
    9. '_part' → logprob: -11.894021987915039
    10. '(part' → logprob: -12.519021987915039

Token 67: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -9.849109119386412e-06
    2. '(' → logprob: -11.750009536743164
    3. ' weights' → logprob: -13.375009536743164
    4. 'weights' → logprob: -15.875009536743164
    5. '(weight' → logprob: -16.625009536743164
    6. '_weights' → logprob: -17.500009536743164
    7. '.weights' → logprob: -18.000009536743164
    8. '(tokens' → logprob: -18.250009536743164
    9. '```' → logprob: -18.250009536743164
    10. 'Weights' → logprob: -18.375009536743164

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2828561067581177
    2. '(weights' → logprob: -1.4078561067581177
    3. ' weights' → logprob: -7.282855987548828
    4. 'weights' → logprob: -7.657855987548828
    5. ' ,' → logprob: -8.282855987548828
    6. ')' → logprob: -9.157855987548828
    7. '(' → logprob: -9.907855987548828
    8. '   ' → logprob: -10.032855987548828
    9. '.weights' → logprob: -10.282855987548828
    10. '),' → logprob: -10.657855987548828

Token 69: ' t' (ID: 260)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.9565653204917908
    2. ' weights' → logprob: -1.2065653800964355
    3. 't' → logprob: -1.5815653800964355
    4. ' t' → logprob: -2.2065653800964355
    5. ' n' → logprob: -8.581564903259277
    6. '(weights' → logprob: -8.831564903259277
    7. 'n' → logprob: -9.206564903259277
    8. '   ' → logprob: -9.456564903259277
    9. '0' → logprob: -9.456564903259277
    10. ' ' → logprob: -10.081564903259277

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03188372775912285
    2. ',n' → logprob: -3.531883716583252
    3. ' ,' → logprob: -6.156883716583252
    4. 'n' → logprob: -12.28188419342041
    5. '   ' → logprob: -13.40688419342041
    6. '```' → logprob: -13.40688419342041
    7. ' ' → logprob: -14.15688419342041
    8. ')' → logprob: -14.15688419342041
    9. ' n' → logprob: -14.28188419342041
    10. '	n' → logprob: -15.15688419342041

Token 71: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.043042007833719254
    2. ' n' → logprob: -3.168041944503784
    3. '   ' → logprob: -10.668042182922363
    4. ' ' → logprob: -11.793042182922363
    5. '	n' → logprob: -11.793042182922363
    6. ')' → logprob: -13.418042182922363
    7. ' ' → logprob: -14.418042182922363
    8. '  ' → logprob: -14.543042182922363
    9. ')n' → logprob: -14.543042182922363
    10. '_n' → logprob: -14.793042182922363

Token 72: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021918986458331347
    2. ')
' → logprob: -6.12719202041626
    3. '   ' → logprob: -13.002191543579102
    4. ' )' → logprob: -13.252191543579102
    5. ')

' → logprob: -13.502191543579102
    6. '))' → logprob: -14.877191543579102
    7. ')
' → logprob: -14.877191543579102
    8. ')return' → logprob: -15.127191543579102
    9. ')**' → logprob: -16.3771915435791
    10. ' ' → logprob: -16.6271915435791

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003754999197553843
    2. 'return' → logprob: -9.250375747680664
    3. ' return' → logprob: -9.500375747680664
    4. '
' → logprob: -9.500375747680664
    5. '    
' → logprob: -9.750375747680664
    6. ')' → logprob: -10.500375747680664
    7. '<|end|>' → logprob: -11.000375747680664
    8. '	return' → logprob: -11.125375747680664
    9. ',' → logprob: -13.500375747680664
    10. '```' → logprob: -13.625375747680664

Token 74: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01784037984907627
    2. 'return' (adapté à ' return') → logprob: -4.642840385437012
    3. ' return' → logprob: -4.892840385437012
    4. '
' → logprob: -7.767840385437012
    5. '	return' → logprob: -9.892840385437012
    6. '    
' → logprob: -10.642840385437012
    7. ')' → logprob: -11.017840385437012
    8. ':return' → logprob: -11.517840385437012
    9. ' ' → logprob: -12.392840385437012
    10. '  ' → logprob: -12.642840385437012

Token 75: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.1402772217988968
    2. 'abs' → logprob: -2.140277147293091
    3. ' s' → logprob: -4.64027738571167
    4. 's' → logprob: -5.64027738571167
    5. '(abs' → logprob: -10.640276908874512
    6. ' ' → logprob: -11.515276908874512
    7. ' max' → logprob: -11.515276908874512
    8. '   ' → logprob: -12.140276908874512
    9. 'max' → logprob: -13.515276908874512
    10. ' ' → logprob: -14.015276908874512

Token 76: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.005234594456851482
    2. '(' → logprob: -5.255234718322754
    3. 's' → logprob: -14.255234718322754
    4. '(
' → logprob: -16.505233764648438
    5. ' (' → logprob: -17.005233764648438
    6. '((' → logprob: -18.005233764648438
    7. '(

' → logprob: -19.130233764648438
    8. '(ss' → logprob: -20.380233764648438
    9. ')' → logprob: -20.505233764648438
    10. '(n' → logprob: -20.630233764648438

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001177012687548995
    2. '2' → logprob: -6.751176834106445
    3. '[' → logprob: -13.501176834106445
    4. 't' → logprob: -14.001176834106445
    5. ' -' → logprob: -14.251176834106445
    6. '_' → logprob: -14.501176834106445
    7. '   ' → logprob: -14.751176834106445
    8. '```' → logprob: -14.751176834106445
    9. 's' → logprob: -15.126176834106445
    10. ')' → logprob: -15.251176834106445

Token 78: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20195509493350983
    2. '-' → logprob: -1.7019550800323486
    3. '-s' → logprob: -7.576955318450928
    4. ' ' → logprob: -10.70195484161377
    5. 's' → logprob: -12.32695484161377
    6. '   ' → logprob: -13.32695484161377
    7. ')' → logprob: -14.32695484161377
    8. '  ' → logprob: -16.076955795288086
    9. ' ' → logprob: -16.576955795288086
    10. ',' → logprob: -17.076955795288086

Token 79: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20141607522964478
    2. ' s' → logprob: -1.701416015625
    3. '(s' → logprob: -13.576416015625
    4. '<|end|>' → logprob: -13.701416015625
    5. ' ' → logprob: -15.076416015625
    6. '	s' → logprob: -16.576416015625
    7. '_s' → logprob: -17.326416015625
    8. '   ' → logprob: -18.076416015625
    9. '  ' → logprob: -18.326416015625
    10. '<|end|>' → logprob: -18.451416015625

Token 80: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007844625040888786
    2. '1' → logprob: -4.8828444480896
    3. 't' → logprob: -8.507844924926758
    4. '[' → logprob: -10.757844924926758
    5. ')' → logprob: -12.382844924926758
    6. ']' → logprob: -13.257844924926758
    7. 'n' → logprob: -13.757844924926758
    8. 'z' → logprob: -13.757844924926758
    9. '[t' → logprob: -13.882844924926758
    10. '```' → logprob: -13.882844924926758

Token 81: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. '))' → logprob: -16.125
    3. ')
' → logprob: -16.75
    4. ' )' → logprob: -17.375
    5. ')return' → logprob: -18.625
    6. ')))' → logprob: -18.875
    7. ')t' → logprob: -19.125
    8. ')#' → logprob: -19.5
    9. '}' → logprob: -19.75
    10. ')`' → logprob: -20.0

Token 82: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000204851632588543
    2. '#' → logprob: -9.500205039978027
    3. '<|end|>' → logprob: -9.875205039978027
    4. '\' → logprob: -10.375205039978027
    5. '```' → logprob: -10.875205039978027
    6. 'n' → logprob: -12.000205039978027
    7. '
' → logprob: -12.250205039978027
    8. 'd' → logprob: -12.625205039978027
    9. '\n' → logprob: -12.875205039978027
    10. 'ndef' → logprob: -13.500205039978027

Token 83: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2191707342863083
    2. ' find' → logprob: -1.9691706895828247
    3. ' solve' → logprob: -3.5941708087921143
    4. ' best' → logprob: -4.469170570373535
    5. ' minimize' → logprob: -5.344170570373535
    6. ' minimal' → logprob: -5.469170570373535
    7. ' min' → logprob: -5.594170570373535
    8. ' split' → logprob: -6.969170570373535
    9. ' optimize' → logprob: -6.969170570373535
    10. ' partition' → logprob: -7.219170570373535

Token 84: '_all' (ID: 13305)
  Prédit: '_difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.24525681138038635
    2. '_' → logprob: -1.620256781578064
    3. '_partition' → logprob: -5.4952569007873535
    4. '_max' → logprob: -5.6202569007873535
    5. '_diff' → logprob: -5.9952569007873535
    6. '_total' → logprob: -6.6202569007873535
    7. '_weights' → logprob: -6.6202569007873535
    8. '(' → logprob: -6.8702569007873535
    9. '_partial' → logprob: -7.3702569007873535
    10. '_opt' → logprob: -7.4952569007873535

Token 85: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.4596242904663086
    2. '(' → logprob: -2.4596242904663086
    3. '_' → logprob: -2.4596242904663086
    4. '_difference' → logprob: -2.7096242904663086
    5. '_weights' → logprob: -3.0846242904663086
    6. '_s' → logprob: -4.084624290466309
    7. '(_' → logprob: -4.209624290466309
    8. '_part' → logprob: -4.709624290466309
    9. '_parts' → logprob: -5.084624290466309
    10. '_diff' → logprob: -5.084624290466309

Token 86: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001254693343071267
    2. 'ifference' → logprob: -9.500125885009766
    3. ' if' → logprob: -10.500125885009766
    4. 'iv' → logprob: -11.000125885009766
    5. '_if' → logprob: -13.125125885009766
    6. '(if' → logprob: -13.250125885009766
    7. 'i' → logprob: -14.125125885009766
    8. '_' → logprob: -15.375125885009766
    9. '(i' → logprob: -15.500125885009766
    10. 'iffs' → logprob: -15.625125885009766

Token 87: 'ferences' (ID: 10131)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.03711608424782753
    2. 'ference' → logprob: -3.787116050720215
    3. 'ferences' → logprob: -4.287116050720215
    4. 'fer' → logprob: -11.787116050720215
    5. 'érences' → logprob: -11.787116050720215
    6. '```' → logprob: -11.912116050720215
    7. 'eren' → logprob: -13.037116050720215
    8. 'e' → logprob: -13.662116050720215
    9. '_' → logprob: -13.787116050720215
    10. 'erer' → logprob: -14.037116050720215

Token 88: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.16054317355155945
    2. '(' → logprob: -1.9105432033538818
    3. '(n' → logprob: -9.160543441772461
    4. '_weights' → logprob: -9.285543441772461
    5. '(def' → logprob: -10.285543441772461
    6. '(weight' → logprob: -11.035543441772461
    7. ' (' → logprob: -11.285543441772461
    8. '(w' → logprob: -11.285543441772461
    9. 'weights' → logprob: -12.660543441772461
    10. '(words' → logprob: -12.910543441772461

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018161057960242033
    2. ',n' → logprob: -8.625181198120117
    3. ' ,' → logprob: -13.375181198120117
    4. '‌,' → logprob: -15.625181198120117
    5. ')' → logprob: -15.875181198120117
    6. ',
' → logprob: -16.875181198120117
    7. 'n' → logprob: -17.375181198120117
    8. ',int' → logprob: -17.625181198120117
    9. '<|end|>' → logprob: -17.875181198120117
    10. '):' → logprob: -18.000181198120117

Token 90: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10028096288442612
    2. 'n' → logprob: -2.350281000137329
    3. '   ' → logprob: -10.72528076171875
    4. '	n' → logprob: -11.60028076171875
    5. ')n' → logprob: -11.60028076171875
    6. '    ' → logprob: -11.97528076171875
    7. ' ' → logprob: -11.97528076171875
    8. '_n' → logprob: -12.22528076171875
    9. ')' → logprob: -12.47528076171875
    10. ',n' → logprob: -12.97528076171875

Token 91: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08972830325365067
    2. '):' → logprob: -2.464728355407715
    3. ' ):' → logprob: -8.339728355407715
    4. ' ,' → logprob: -8.589728355407715
    5. ')' → logprob: -8.714728355407715
    6. ',t' → logprob: -8.839728355407715
    7. '):
' → logprob: -10.589728355407715
    8. ',n' → logprob: -11.964728355407715
    9. '   ' → logprob: -12.214728355407715
    10. 't' → logprob: -13.589728355407715

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012632425874471664
    2. ' results' → logprob: -4.637632369995117
    3. '```' → logprob: -7.137632369995117
    4. ' result' → logprob: -7.262632369995117
    5. 'results' → logprob: -7.637632369995117
    6. 'dif' → logprob: -8.137632369995117
    7. 'result' → logprob: -8.887632369995117
    8. ' for' → logprob: -9.512632369995117
    9. ' ' → logprob: -9.637632369995117
    10. ' differences' → logprob: -9.887632369995117

Token 93: ' differences' (ID: 19504)
  Prédit: ' results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.5685479640960693
    2. ' return' → logprob: -1.9435479640960693
    3. '   ' → logprob: -2.0685479640960693
    4. 'results' → logprob: -3.0685479640960693
    5. 'dif' → logprob: -3.1935479640960693
    6. ' result' → logprob: -3.8185479640960693
    7. ' differences' → logprob: -3.9435479640960693
    8. 'return' → logprob: -4.318548202514648
    9. 'result' → logprob: -4.943548202514648
    10. 'diff' → logprob: -4.943548202514648

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11331970989704132
    2. '=' → logprob: -2.2383196353912354
    3. '(' → logprob: -8.238319396972656
    4. '=[]' → logprob: -9.238319396972656
    5. 's' → logprob: -9.863319396972656
    6. '   ' → logprob: -10.613319396972656
    7. ' ' → logprob: -11.238319396972656
    8. ')' → logprob: -11.488319396972656
    9. '[:]' → logprob: -11.613319396972656
    10. ':' → logprob: -11.988319396972656

Token 95: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.25213226675987244
    2. ' []' → logprob: -1.5021322965621948
    3. '[' → logprob: -8.752132415771484
    4. ' [' → logprob: -10.502132415771484
    5. '[]
' → logprob: -11.252132415771484
    6. ' []
' → logprob: -13.002132415771484
    7. '[]

' → logprob: -13.877132415771484
    8. ' ' → logprob: -14.877132415771484
    9. ' []

' → logprob: -15.752132415771484
    10. '   ' → logprob: -15.877132415771484

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42526835203170776
    2. ' for' → logprob: -1.6752684116363525
    3. '
' → logprob: -1.9252684116363525
    4. 'for' → logprob: -4.425268173217773
    5. '    
' → logprob: -7.300268173217773
    6. '	for' → logprob: -8.050268173217773
    7. '```' → logprob: -8.550268173217773
    8. ' ' → logprob: -10.300268173217773
    9. '  
' → logprob: -10.675268173217773
    10. '' → logprob: -11.050268173217773

Token 97: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3188496232032776
    2. ' for' → logprob: -1.3188495635986328
    3. '   ' → logprob: -5.193849563598633
    4. '```' → logprob: -11.568849563598633
    5. '	for' → logprob: -12.193849563598633
    6. ' ' → logprob: -12.443849563598633
    7. '
' → logprob: -12.818849563598633
    8. '``' → logprob: -15.068849563598633
    9. '  ' → logprob: -16.068849563598633
    10. '    
' → logprob: -16.193849563598633

Token 98: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.029856359586119652
    2. 't' → logprob: -3.5298564434051514
    3. ' i' → logprob: -9.27985668182373
    4. 'i' → logprob: -12.40485668182373
    5. '	t' → logprob: -12.77985668182373
    6. ' ' → logprob: -12.77985668182373
    7. '   ' → logprob: -13.90485668182373
    8. ' ' → logprob: -14.15485668182373
    9. '`t' → logprob: -14.52985668182373
    10. '```' → logprob: -14.77985668182373

Token 99: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002210919978097081
    2. ' ' → logprob: -6.752211093902588
    3. 'in' → logprob: -6.877211093902588
    4. '	in' → logprob: -12.75221061706543
    5. '  ' → logprob: -13.37721061706543
    6. 'n' → logprob: -14.12721061706543
    7. 't' → logprob: -14.12721061706543
    8. ' i' → logprob: -14.37721061706543
    9. 'space' → logprob: -14.75221061706543
    10. 'range' → logprob: -15.12721061706543

Token 100: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2519305646419525
    2. 'range' → logprob: -1.501930594444275
    3. '(range' → logprob: -13.751930236816406
    4. '	range' → logprob: -14.876930236816406
    5. ' xrange' → logprob: -18.251930236816406
    6. '_range' → logprob: -18.876930236816406
    7. ' ' → logprob: -19.126930236816406
    8. '.range' → logprob: -20.001930236816406
    9. '   ' → logprob: -20.376930236816406
    10. 'ange' → logprob: -21.001930236816406

Token 101: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -15.250000953674316
    3. '(n' → logprob: -15.625000953674316
    4. ' (' → logprob: -16.375
    5. '(
' → logprob: -19.5
    6. '<|end|>' → logprob: -21.0
    7. '()' → logprob: -22.375
    8. '   ' → logprob: -22.5
    9. ' ' → logprob: -22.625
    10. 'n' → logprob: -22.875

Token 102: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8776794672012329
    2. ' -' → logprob: -1.377679467201233
    3. '1' → logprob: -1.877679467201233
    4. '+' → logprob: -2.7526793479919434
    5. '):' → logprob: -3.0026793479919434
    6. ' ' → logprob: -3.2526793479919434
    7. ' +' → logprob: -4.502679347991943
    8. ')' → logprob: -4.877679347991943
    9. '):
' → logprob: -5.377679347991943
    10. ' ):' → logprob: -5.877679347991943

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1590324342250824
    2. '   ' → logprob: -2.1590323448181152
    3. 'dif' → logprob: -4.409032344818115
    4. '    
' → logprob: -5.034032344818115
    5. ' differences' → logprob: -5.159032344818115
    6. '    ' → logprob: -6.159032344818115
    7. '        
' → logprob: -6.409032344818115
    8. '
' → logprob: -6.909032344818115
    9. ' 
' → logprob: -8.034032821655273
    10. 'd' → logprob: -8.409032821655273

Token 104: ' diff' (ID: 8868)
  Prédit: ' differences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' differences' → logprob: -0.5010895729064941
    2. '       ' → logprob: -1.6260895729064941
    3. 'dif' → logprob: -1.8760895729064941
    4. '   ' → logprob: -3.251089572906494
    5. 'd' → logprob: -6.251089572906494
    6. '           ' → logprob: -6.501089572906494
    7. 'diff' (adapté à ' diff') → logprob: -7.751089572906494
    8. ' d' → logprob: -8.501089096069336
    9. '```' → logprob: -8.501089096069336
    10. ' diff' → logprob: -8.501089096069336

Token 105: ' =' (ID: 314)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.41171979904174805
    2. '=' → logprob: -1.786719799041748
    3. ' =' → logprob: -1.786719799041748
    4. 'érences' → logprob: -6.536719799041748
    5. 's' → logprob: -8.286720275878906
    6. 'ferences' → logprob: -8.911720275878906
    7. 'ences' → logprob: -9.161720275878906
    8. 'es' → logprob: -9.286720275878906
    9. ' ' → logprob: -9.286720275878906
    10. 'e' → logprob: -9.411720275878906

Token 106: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.1002098023891449
    2. 'compute' → logprob: -2.3502097129821777
    3. '   ' → logprob: -12.975210189819336
    4. '.compute' → logprob: -14.475210189819336
    5. ' ' → logprob: -15.850210189819336
    6. '_compute' → logprob: -15.975210189819336
    7. '    ' → logprob: -16.850210189819336
    8. ' ' → logprob: -17.225210189819336
    9. ' computer' → logprob: -17.475210189819336
    10. 'computer' → logprob: -18.100210189819336

Token 107: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -2.2961512513575144e-05
    2. 'difference' → logprob: -11.125022888183594
    3. '_d' → logprob: -11.875022888183594
    4. '_all' → logprob: -14.875022888183594
    5. '```' → logprob: -15.500022888183594
    6. '_' → logprob: -15.625022888183594
    7. 'Difference' → logprob: -16.000022888183594
    8. 'd' → logprob: -16.125022888183594
    9. '_distance' → logprob: -16.375022888183594
    10. ' difference' → logprob: -17.250022888183594

Token 108: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -2.935296834039036e-06
    2. ' weights' → logprob: -13.75000286102295
    3. 'weights' → logprob: -14.37500286102295
    4. '(' → logprob: -14.37500286102295
    5. '(weight' → logprob: -14.37500286102295
    6. '_weights' → logprob: -18.000003814697266
    7. '.weights' → logprob: -18.250003814697266
    8. 'Weights' → logprob: -18.250003814697266
    9. '```' → logprob: -18.375003814697266
    10. '(
' → logprob: -18.875003814697266

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019694350194185972
    2. '(weights' → logprob: -6.376969337463379
    3. ',n' → logprob: -8.501969337463379
    4. '   ' → logprob: -10.501969337463379
    5. 'weights' → logprob: -11.126969337463379
    6. ' ,' → logprob: -11.501969337463379
    7. ' weights' → logprob: -12.501969337463379
    8. ',w' → logprob: -12.876969337463379
    9. '(' → logprob: -13.376969337463379
    10. '(n' → logprob: -14.001969337463379

Token 110: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10021119564771652
    2. 'n' → logprob: -2.3502111434936523
    3. '	n' → logprob: -12.975211143493652
    4. '   ' → logprob: -14.100211143493652
    5. ')n' → logprob: -14.475211143493652
    6. ',n' → logprob: -14.850211143493652
    7. ' н' → logprob: -15.850211143493652
    8. ',' → logprob: -15.850211143493652
    9. '    ' → logprob: -15.975211143493652
    10. ')' → logprob: -16.60021209716797

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.219262624857947e-05
    2. ',t' → logprob: -9.625072479248047
    3. ' ,' → logprob: -12.125072479248047
    4. '   ' → logprob: -15.500072479248047
    5. ')' → logprob: -15.625072479248047
    6. 't' → logprob: -16.125072479248047
    7. ',
' → logprob: -17.500072479248047
    8. ' t' → logprob: -18.000072479248047
    9. '`,' → logprob: -18.000072479248047
    10. '),' → logprob: -18.000072479248047

Token 112: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02975500375032425
    2. ' t' → logprob: -3.529755115509033
    3. '   ' → logprob: -12.779754638671875
    4. ')' → logprob: -14.404754638671875
    5. '	t' → logprob: -14.779754638671875
    6. ' ' → logprob: -14.904754638671875
    7. ')t' → logprob: -15.154754638671875
    8. '`t' → logprob: -16.154754638671875
    9. '    ' → logprob: -16.779754638671875
    10. '  ' → logprob: -17.904754638671875

Token 113: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028559938073158264
    2. ')
' → logprob: -5.8778557777404785
    3. '       ' → logprob: -10.002856254577637
    4. ')
' → logprob: -12.752856254577637
    5. ')d' → logprob: -13.502856254577637
    6. ' )' → logprob: -15.502856254577637
    7. ')add' → logprob: -15.627856254577637
    8. ')data' → logprob: -15.752856254577637
    9. '   ' → logprob: -15.752856254577637
    10. ')

' → logprob: -15.877856254577637

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034648904111236334
    2. ' differences' → logprob: -6.378464698791504
    3. '   ' → logprob: -6.628464698791504
    4. 'dif' → logprob: -7.753464698791504
    5. '```' → logprob: -13.128464698791504
    6. 'd' → logprob: -13.753464698791504
    7. '        
' → logprob: -13.878464698791504
    8. ' ' → logprob: -14.003464698791504
    9. '     ' → logprob: -14.253464698791504
    10. '      ' → logprob: -14.378464698791504

Token 115: ' differences' (ID: 19504)
  Prédit: ' differences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' differences' → logprob: -0.5329506397247314
    2. 'dif' → logprob: -1.1579506397247314
    3. '       ' → logprob: -2.4079506397247314
    4. '   ' → logprob: -4.782950401306152
    5. 'd' → logprob: -7.657950401306152
    6. '	d' → logprob: -10.032950401306152
    7. ' ' → logprob: -10.532950401306152
    8. 'difference' → logprob: -11.157950401306152
    9. 'diff' → logprob: -11.407950401306152
    10. '```' → logprob: -11.532950401306152

Token 116: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0031803252641111612
    2. '.' → logprob: -5.753180503845215
    3. '.extend' → logprob: -14.128180503845215
    4. '.app' → logprob: -14.503180503845215
    5. '.push' → logprob: -14.753180503845215
    6. '.py' → logprob: -15.253180503845215
    7. '.setdefault' → logprob: -15.253180503845215
    8. '.add' → logprob: -16.0031795501709
    9. '.Append' → logprob: -16.2531795501709
    10. 'append' → logprob: -16.2531795501709

Token 117: '(diff' (ID: 84195)
  Prédit: '(diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -2.7848862373502925e-05
    2. '(' → logprob: -10.500027656555176
    3. 'diff' → logprob: -15.375027656555176
    4. '	diff' → logprob: -19.250028610229492
    5. '(d' → logprob: -19.750028610229492
    6. '(
' → logprob: -20.000028610229492
    7. ' (' → logprob: -20.500028610229492
    8. ' diff' → logprob: -20.625028610229492
    9. '((' → logprob: -21.500028610229492
    10. '(dist' → logprob: -21.750028610229492

Token 118: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010681446641683578
    2. ')
' → logprob: -4.635681629180908
    3. '   ' → logprob: -7.010681629180908
    4. '       ' → logprob: -11.76068115234375
    5. ')return' → logprob: -12.01068115234375
    6. ' ' → logprob: -12.76068115234375
    7. ')

' → logprob: -13.63568115234375
    8. ')
' → logprob: -13.88568115234375
    9. '`)' → logprob: -14.01068115234375
    10. ' )' → logprob: -14.63568115234375

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015553286066278815
    2. 'return' → logprob: -6.626555442810059
    3. ' return' → logprob: -8.626555442810059
    4. '
' → logprob: -10.251555442810059
    5. '```' → logprob: -12.001555442810059
    6. '    
' → logprob: -12.251555442810059
    7. '<|end|>' → logprob: -13.751555442810059
    8. '	return' → logprob: -13.751555442810059
    9. ' ' → logprob: -15.251555442810059
    10. '   ' → logprob: -15.501555442810059

Token 120: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006402119528502226
    2. ' return' → logprob: -5.256402015686035
    3. '   ' → logprob: -6.756402015686035
    4. '```' → logprob: -13.256402015686035
    5. ' ' → logprob: -13.381402015686035
    6. '	return' → logprob: -14.756402015686035
    7. 'for' → logprob: -16.00640296936035
    8. '
' → logprob: -16.13140296936035
    9. '  ' → logprob: -16.63140296936035
    10. '    
' → logprob: -17.13140296936035

Token 121: ' differences' (ID: 19504)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.20145133137702942
    2. ' differences' → logprob: -1.701451301574707
    3. 'difference' → logprob: -10.826451301574707
    4. 'd' → logprob: -11.576451301574707
    5. 'diff' → logprob: -11.951451301574707
    6. ' difference' → logprob: -14.326451301574707
    7. ' ' → logprob: -14.326451301574707
    8. 'Dif' → logprob: -15.076451301574707
    9. '   ' → logprob: -15.951451301574707
    10. '	d' → logprob: -16.201452255249023

Token 122: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5556210875511169
    2. '<|end|>' → logprob: -1.0556211471557617
    3. '
' → logprob: -2.6806211471557617
    4. '[' → logprob: -5.430621147155762
    5. '#' → logprob: -6.430621147155762
    6. '```' → logprob: -6.930621147155762
    7. '  
' → logprob: -7.555621147155762
    8. '

' → logprob: -7.680621147155762
    9. '<|end|>' → logprob: -8.055621147155762
    10. '[
' → logprob: -8.305621147155762

Token 123: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009804139845073223
    2. '<|end|>' → logprob: -5.2598042488098145
    3. '
' → logprob: -5.7598042488098145
    4. '```' → logprob: -8.134803771972656
    5. 'for' → logprob: -8.759803771972656
    6. '#' → logprob: -8.759803771972656
    7. 'print' → logprob: -8.759803771972656
    8. 'n' → logprob: -8.884803771972656
    9. 'weights' → logprob: -9.009803771972656
    10. 'if' → logprob: -9.009803771972656

Token 124: ' find' (ID: 1646)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10749085992574692
    2. 'main' → logprob: -2.6074907779693604
    3. ' find' → logprob: -3.7324907779693604
    4. ' compute' → logprob: -6.8574910163879395
    5. 'find' → logprob: -7.2324910163879395
    6. ' max' → logprob: -7.4824910163879395
    7. ' solve' → logprob: -7.9824910163879395
    8. ' min' → logprob: -7.9824910163879395
    9. 'compute' → logprob: -8.357490539550781
    10. 'min' → logprob: -8.607490539550781

Token 125: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.7777366638183594
    2. '_best' → logprob: -1.2777366638183594
    3. '_max' → logprob: -1.9027366638183594
    4. '_' → logprob: -2.9027366638183594
    5. '_opt' → logprob: -3.0277366638183594
    6. '_difference' → logprob: -5.527736663818359
    7. '_split' → logprob: -6.152736663818359
    8. '_threshold' → logprob: -7.277736663818359
    9. '_partition' → logprob: -7.777736663818359
    10. '_small' → logprob: -8.27773666381836

Token 126: 'imum' (ID: 4556)
  Prédit: '_difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.015999644994735718
    2. '_' → logprob: -4.390999794006348
    3. '_diff' → logprob: -6.015999794006348
    4. '_index' → logprob: -8.265999794006348
    5. '_div' → logprob: -8.640999794006348
    6. 'imum' → logprob: -8.765999794006348
    7. '_partition' → logprob: -8.890999794006348
    8. '_value' → logprob: -9.640999794006348
    9. '_distance' → logprob: -10.390999794006348
    10. '_cut' → logprob: -10.390999794006348

Token 127: '(values' (ID: 40883)
  Prédit: '_difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.012048402801156044
    2. '_' → logprob: -4.637048244476318
    3. '_diff' → logprob: -6.637048244476318
    4. '_index' → logprob: -7.762048244476318
    5. '_split' → logprob: -9.137048721313477
    6. '_partition' → logprob: -9.262048721313477
    7. '_value' → logprob: -9.762048721313477
    8. '_div' → logprob: -9.762048721313477
    9. '_cut' → logprob: -10.512048721313477
    10. 'difference' → logprob: -10.762048721313477

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01021438930183649
    2. '):
' → logprob: -5.135214328765869
    3. ')' → logprob: -6.385214328765869
    4. ' ):' → logprob: -6.635214328765869
    5. '   ' → logprob: -7.885214328765869
    6. '[]):' → logprob: -8.010214805603027
    7. '_' → logprob: -8.885214805603027
    8. '():' → logprob: -9.010214805603027
    9. '(values' → logprob: -9.385214805603027
    10. '()' → logprob: -10.260214805603027

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09236937016248703
    2. ' min' → logprob: -2.592369318008423
    3. 'min' → logprob: -4.342369556427002
    4. ' return' → logprob: -8.467369079589844
    5. '	min' → logprob: -9.842369079589844
    6. '    ' → logprob: -10.467369079589844
    7. '_min' → logprob: -10.592369079589844
    8. 'return' → logprob: -10.717369079589844
    9. ' minimum' → logprob: -11.217369079589844
    10. ' values' → logprob: -11.592369079589844

Token 130: ' return' (ID: 622)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.20283907651901245
    2. ' min' → logprob: -1.7028391361236572
    3. 'return' (adapté à ' return') → logprob: -7.077838897705078
    4. '   ' → logprob: -7.702838897705078
    5. ' return' → logprob: -9.327838897705078
    6. 'values' → logprob: -10.327838897705078
    7. ' values' → logprob: -12.952838897705078
    8. 'float' → logprob: -13.577838897705078
    9. '```' → logprob: -13.952838897705078
    10. '[min' → logprob: -14.202838897705078

Token 131: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.12693041563034058
    2. 'min' → logprob: -2.1269304752349854
    3. '	min' → logprob: -13.501930236816406
    4. '(min' → logprob: -14.876930236816406
    5. ' ' → logprob: -15.376930236816406
    6. '   ' → logprob: -15.376930236816406
    7. '[min' → logprob: -17.126930236816406
    8. ' minimum' → logprob: -17.751930236816406
    9. '  ' → logprob: -17.876930236816406
    10. ',min' → logprob: -18.126930236816406

Token 132: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.0011712945997714996
    2. '(' → logprob: -6.751171112060547
    3. 'values' → logprob: -15.501171112060547
    4. '(value' → logprob: -15.501171112060547
    5. '(vals' → logprob: -15.751171112060547
    6. '<|end|>' → logprob: -16.001171112060547
    7. '(
' → logprob: -16.251171112060547
    8. '(

' → logprob: -16.626171112060547
    9. '(results' → logprob: -17.126171112060547
    10. '(`' → logprob: -17.126171112060547

Token 133: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -16.125
    3. '())' → logprob: -16.25
    4. ' )' → logprob: -16.5
    5. '()' → logprob: -17.125
    6. '}' → logprob: -18.875
    7. '))' → logprob: -19.375
    8. ')return' → logprob: -19.375
    9. '   ' → logprob: -19.5
    10. '<|end|>' → logprob: -20.0

Token 134: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005408423021435738
    2. '
' → logprob: -5.88040828704834
    3. 'if' → logprob: -6.38040828704834
    4. 'n' → logprob: -7.75540828704834
    5. '<|end|>' → logprob: -8.25540828704834
    6. '```' → logprob: -9.63040828704834
    7. 'print' → logprob: -10.00540828704834
    8. '

' → logprob: -10.00540828704834
    9. 'weights' → logprob: -10.88040828704834
    10. '#' → logprob: -11.13040828704834

Token 135: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.006784877739846706
    2. 'main' → logprob: -5.006784915924072
    3. ' def' → logprob: -10.381784439086914
    4. ' find' → logprob: -10.756784439086914
    5. 'def' → logprob: -11.506784439086914
    6. ' solve' → logprob: -12.256784439086914
    7. ' compute' → logprob: -14.881784439086914
    8. 'solve' → logprob: -14.881784439086914
    9. 'find' → logprob: -15.131784439086914
    10. '_main' → logprob: -15.131784439086914

Token 136: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016374544939026237
    2. '()' → logprob: -7.7516374588012695
    3. '("("' → logprob: -7.8766374588012695
    4. '("_' → logprob: -8.00163745880127
    5. '("")' → logprob: -9.37663745880127
    6. '('' → logprob: -9.50163745880127
    7. '_' → logprob: -9.87663745880127
    8. '('_' → logprob: -9.87663745880127
    9. '("""' → logprob: -9.87663745880127
    10. '(_)' → logprob: -10.37663745880127

Token 137: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13010752201080322
    2. '(result' → logprob: -2.2551074028015137
    3. '(values' → logprob: -4.755107402801514
    4. '(results' → logprob: -5.255107402801514
    5. '()' → logprob: -7.130107402801514
    6. '("("' → logprob: -7.130107402801514
    7. '(value' → logprob: -7.880107402801514
    8. '('' → logprob: -8.005107879638672
    9. '(output' → logprob: -8.505107879638672
    10. '(":' → logprob: -9.130107879638672

Token 138: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014253887347877026
    2. '):
' → logprob: -4.764254093170166
    3. ')' → logprob: -5.264254093170166
    4. '(result' → logprob: -8.014253616333008
    5. '   ' → logprob: -9.639253616333008
    6. ' ):' → logprob: -10.639253616333008
    7. '(' → logprob: -11.264253616333008
    8. ',result' → logprob: -12.639253616333008
    9. ' ' → logprob: -12.764253616333008
    10. ',' → logprob: -12.889253616333008

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08488525450229645
    2. ' print' → logprob: -3.084885358810425
    3. 'print' → logprob: -3.334885358810425
    4. '    ' → logprob: -11.209885597229004
    5. '(' → logprob: -11.834885597229004
    6. '(print' → logprob: -12.709885597229004
    7. '```' → logprob: -13.084885597229004
    8. 'def' → logprob: -13.959885597229004
    9. '   ' → logprob: -14.459885597229004
    10. '    
' → logprob: -15.709885597229004

Token 140: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005544631858356297
    2. ' print' → logprob: -7.50055456161499
    3. '   ' → logprob: -13.500554084777832
    4. '```' → logprob: -18.87555503845215
    5. 'pr' → logprob: -20.62555503845215
    6. '`' → logprob: -22.12555503845215
    7. 'prin' → logprob: -22.25055503845215
    8. '
' → logprob: -23.12555503845215
    9. '	print' → logprob: -23.25055503845215
    10. '    
' → logprob: -23.62555503845215

Token 141: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.029760675504803658
    2. '(' → logprob: -3.5297605991363525
    3. '()' → logprob: -12.279760360717773
    4. 'result' → logprob: -12.404760360717773
    5. '(f' → logprob: -14.154760360717773
    6. '('' → logprob: -15.779760360717773
    7. ' (' → logprob: -15.779760360717773
    8. '(results' → logprob: -16.154760360717773
    9. '(
' → logprob: -16.404760360717773
    10. '(res' → logprob: -16.529760360717773

Token 142: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.375
    3. ' )' → logprob: -17.125
    4. ')`' → logprob: -18.0
    5. '()' → logprob: -18.25
    6. '())' → logprob: -18.75
    7. '))' → logprob: -19.25
    8. ')}' → logprob: -20.0
    9. '')' → logprob: -20.375
    10. ')

' → logprob: -20.75

Token 143: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015173576539382339
    2. 'if' → logprob: -6.501517295837402
    3. 'n' → logprob: -11.126517295837402
    4. '#' → logprob: -16.25151824951172
    5. 'for' → logprob: -16.75151824951172
    6. 'ndef' → logprob: -17.50151824951172
    7. '```' → logprob: -18.25151824951172
    8. ' def' → logprob: -18.87651824951172
    9. '    
' → logprob: -19.25151824951172
    10. '
' → logprob: -19.25151824951172

Token 144: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2519555985927582
    2. ' main' → logprob: -1.5019556283950806
    3. 'solve' → logprob: -11.25195598602295
    4. 'def' → logprob: -12.37695598602295
    5. ' solve' → logprob: -12.50195598602295
    6. 'process' → logprob: -13.37695598602295
    7. 'min' → logprob: -13.75195598602295
    8. 'run' → logprob: -14.37695598602295
    9. '	main' → logprob: -14.62695598602295
    10. 'minimum' → logprob: -14.87695598602295

Token 145: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.91732100979425e-05
    2. ' ():' → logprob: -11.125039100646973
    3. '():
' → logprob: -11.500039100646973
    4. '()' → logprob: -11.625039100646973
    5. '(' → logprob: -12.250039100646973
    6. '_' → logprob: -14.875039100646973
    7. ':' → logprob: -16.62504005432129
    8. '(:' → logprob: -16.87504005432129
    9. '():
' → logprob: -17.25004005432129
    10. '(":' → logprob: -17.62504005432129

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40988850593566895
    2. 'n' → logprob: -1.159888505935669
    3. ' n' → logprob: -3.784888505935669
    4. '	n' → logprob: -10.78488826751709
    5. '```' → logprob: -11.53488826751709
    6. '_n' → logprob: -12.53488826751709
    7. '    
' → logprob: -13.03488826751709
    8. '    ' → logprob: -13.28488826751709
    9. '
' → logprob: -13.65988826751709
    10. '   ' → logprob: -13.78488826751709

Token 147: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.006141734309494495
    2. ' n' → logprob: -5.256141662597656
    3. '   ' → logprob: -7.006141662597656
    4. '
' → logprob: -14.131141662597656
    5. '	n' → logprob: -15.506141662597656
    6. '```' → logprob: -15.506141662597656
    7. '    
' → logprob: -16.631141662597656
    8. '_n' → logprob: -17.131141662597656
    9. ' ' → logprob: -17.131141662597656
    10. '  ' → logprob: -17.381141662597656

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004629957489669323
    2. '=' → logprob: -5.379630088806152
    3. ',' → logprob: -12.004630088806152
    4. ' ' → logprob: -13.504630088806152
    5. ')' → logprob: -14.004630088806152
    6. ' =)' → logprob: -14.879630088806152
    7. ' =
' → logprob: -15.129630088806152
    8. '=int' → logprob: -15.504630088806152
    9. ' ,' → logprob: -16.254629135131836
    10. '   ' → logprob: -16.254629135131836

Token 149: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.0380416102707386
    2. 'read' → logprob: -3.288041591644287
    3. ' int' → logprob: -16.038042068481445
    4. '	read' → logprob: -17.288042068481445
    5. 'int' → logprob: -18.663042068481445
    6. ' ' → logprob: -19.038042068481445
    7. '(read' → logprob: -19.288042068481445
    8. '_read' → logprob: -20.413042068481445
    9. '.read' → logprob: -21.163042068481445
    10. ' readline' → logprob: -22.163042068481445

Token 150: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0005542247672565281
    2. '_' → logprob: -7.500554084777832
    3. 'n' → logprob: -14.375554084777832
    4. '()' → logprob: -15.250554084777832
    5. ' _' → logprob: -15.375554084777832
    6. '(' → logprob: -16.12555503845215
    7. '_a' → logprob: -17.87555503845215
    8. ')_' → logprob: -18.00055503845215
    9. '```' → logprob: -18.37555503845215
    10. ')' → logprob: -18.37555503845215

Token 151: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.76759916334413e-05
    2. '()
' → logprob: -9.500077247619629
    3. '()

' → logprob: -13.750077247619629
    4. '()\' → logprob: -14.375077247619629
    5. '()`' → logprob: -15.500077247619629
    6. '())' → logprob: -15.500077247619629
    7. ' ()' → logprob: -15.500077247619629
    8. '()<' → logprob: -16.250078201293945
    9. ')' → logprob: -16.500078201293945
    10. '()
' → logprob: -16.500078201293945

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2710341513156891
    2. 'weights' → logprob: -1.5210341215133667
    3. ' weights' → logprob: -4.021034240722656
    4. '_weights' → logprob: -7.771034240722656
    5. '(weights' → logprob: -7.896034240722656
    6. '<|end|>' → logprob: -9.771034240722656
    7. '    
' → logprob: -10.521034240722656
    8. '  ' → logprob: -10.521034240722656
    9. '```' → logprob: -10.771034240722656
    10. 'Weights' → logprob: -11.271034240722656

Token 153: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' (adapté à ' weights') → logprob: -0.0005595852271653712
    2. ' weights' → logprob: -7.5005598068237305
    3. '   ' → logprob: -13.12555980682373
    4. 'weight' → logprob: -13.50055980682373
    5. '_weights' → logprob: -13.75055980682373
    6. '(weights' → logprob: -14.50055980682373
    7. '.weights' → logprob: -14.50055980682373
    8. 'w' → logprob: -14.75055980682373
    9. 'weig' → logprob: -15.00055980682373
    10. 'Weights' → logprob: -16.250558853149414

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01251129899173975
    2. '=' → logprob: -4.387511253356934
    3. ',' → logprob: -14.012511253356934
    4. '_' → logprob: -15.387511253356934
    5. '(' → logprob: -15.512511253356934
    6. ' ' → logprob: -15.762511253356934
    7. '()' → logprob: -16.01251220703125
    8. ')' → logprob: -16.26251220703125
    9. '   ' → logprob: -17.38751220703125
    10. ' ' → logprob: -17.76251220703125

Token 155: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.011048642918467522
    2. 'read' → logprob: -4.511048793792725
    3. '(read' → logprob: -14.261048316955566
    4. '	read' → logprob: -15.261048316955566
    5. '_read' → logprob: -18.011049270629883
    6. '.read' → logprob: -19.386049270629883
    7. ' ' → logprob: -19.511049270629883
    8. ' ' → logprob: -20.011049270629883
    9. ' reads' → logprob: -20.511049270629883
    10. 'Read' → logprob: -21.011049270629883

Token 156: '_weights' (ID: 49127)
  Prédit: '_weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weights' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.375
    3. 'weights' → logprob: -16.5
    4. '_w' → logprob: -17.75
    5. '_weight' → logprob: -17.875
    6. '_we' → logprob: -18.25
    7. '_values' → logprob: -19.875
    8. 'Weights' → logprob: -20.125
    9. '_words' → logprob: -20.125
    10. '_n' → logprob: -20.125

Token 157: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43027326464653015
    2. '
' → logprob: -1.0552732944488525
    3. '    
' → logprob: -7.305273056030273
    4. '<|end|>' → logprob: -7.555273056030273
    5. ' for' → logprob: -9.180273056030273
    6. '  
' → logprob: -9.430273056030273
    7. 'n' → logprob: -10.180273056030273
    8. 'for' → logprob: -10.305273056030273
    9. '```' → logprob: -10.805273056030273
    10. '  ' → logprob: -10.930273056030273

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027316728606820107
    2. ' results' → logprob: -4.777316570281982
    3. ' for' → logprob: -5.027316570281982
    4. ' differences' → logprob: -5.277316570281982
    5. 'dif' → logprob: -5.527316570281982
    6. ' result' → logprob: -6.527316570281982
    7. ' min' → logprob: -8.40231704711914
    8. 'for' → logprob: -8.52731704711914
    9. 'results' → logprob: -8.77731704711914
    10. ' dif' → logprob: -8.77731704711914

Token 159: ' differences' (ID: 19504)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.14842171967029572
    2. ' differences' → logprob: -2.0234217643737793
    3. 'diff' → logprob: -6.148421764373779
    4. '   ' → logprob: -6.648421764373779
    5. 'all' → logprob: -7.523421764373779
    6. ' results' → logprob: -7.898421764373779
    7. ' dif' → logprob: -7.898421764373779
    8. 'd' → logprob: -7.898421764373779
    9. ' all' → logprob: -8.273421287536621
    10. 'results' → logprob: -8.398421287536621

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023938016965985298
    2. '=' → logprob: -3.773937940597534
    3. '.append' → logprob: -7.523938179016113
    4. '.' → logprob: -10.273938179016113
    5. ')' → logprob: -10.398938179016113
    6. '_' → logprob: -10.648938179016113
    7. '<|end|>' → logprob: -11.023938179016113
    8. ' ' → logprob: -11.398938179016113
    9. '(' → logprob: -11.898938179016113
    10. ',' → logprob: -12.023938179016113

Token 161: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.126929372549057
    2. 'compute' → logprob: -2.12692928314209
    3. '_compute' → logprob: -14.12692928314209
    4. '.compute' → logprob: -15.25192928314209
    5. ' ' → logprob: -16.251930236816406
    6. '   ' → logprob: -16.626930236816406
    7. '(com' → logprob: -16.876930236816406
    8. 'comput' → logprob: -17.126930236816406
    9. ' all' → logprob: -17.501930236816406
    10. ' computer' → logprob: -17.876930236816406

Token 162: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -5.512236498361744e-07
    2. 'all' → logprob: -16.25
    3. '_difference' → logprob: -16.5
    4. ''_' → logprob: -16.5
    5. '_d' → logprob: -16.625
    6. '```' → logprob: -17.0
    7. '_a' → logprob: -17.25
    8. '_' → logprob: -17.375
    9. '"_' → logprob: -17.375
    10. 's' → logprob: -18.0

Token 163: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -5.943783253314905e-05
    2. '_difference' → logprob: -10.125059127807617
    3. '_diff' → logprob: -11.250059127807617
    4. '_' → logprob: -12.750059127807617
    5. 'dif' → logprob: -14.000059127807617
    6. '_dist' → logprob: -14.875059127807617
    7. '```' → logprob: -15.000059127807617
    8. 's' → logprob: -15.250059127807617
    9. '(_' → logprob: -15.375059127807617
    10. 'd' → logprob: -15.500059127807617

Token 164: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.7120533811976202e-05
    2. ' if' → logprob: -11.125017166137695
    3. 'dif' → logprob: -13.500017166137695
    4. '(if' → logprob: -14.250017166137695
    5. '(' → logprob: -16.375017166137695
    6. 'is' → logprob: -17.625017166137695
    7. 'iffer' → logprob: -17.875017166137695
    8. 'for' → logprob: -18.000017166137695
    9. '_if' → logprob: -18.250017166137695
    10. '   ' → logprob: -18.375017166137695

Token 165: 'ferences' (ID: 10131)
  Prédit: 'ferences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ferences' → logprob: -0.38692447543144226
    2. 'er' → logprob: -1.1369245052337646
    3. 'érences' → logprob: -10.761924743652344
    4. 'fer' → logprob: -10.886924743652344
    5. 'ences' → logprob: -12.261924743652344
    6. 'ference' → logprob: -13.261924743652344
    7. 'ffer' → logprob: -13.386924743652344
    8. 'dif' → logprob: -13.761924743652344
    9. 'if' → logprob: -14.511924743652344
    10. 'initions' → logprob: -14.511924743652344

Token 166: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -2.1008713702030946e-06
    2. ' (' → logprob: -13.625001907348633
    3. '(weight' → logprob: -14.875001907348633
    4. '(' → logprob: -15.625001907348633
    5. '(values' → logprob: -16.625001907348633
    6. ' weights' → logprob: -16.750001907348633
    7. '(w' → logprob: -18.000001907348633
    8. '(words' → logprob: -18.250001907348633
    9. 'weights' → logprob: -18.250001907348633
    10. '(features' → logprob: -19.000001907348633

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004985823179595172
    2. ',n' → logprob: -7.6254987716674805
    3. ' ,' → logprob: -12.00049877166748
    4. '(n' → logprob: -12.62549877166748
    5. '(' → logprob: -14.50049877166748
    6. 'n' → logprob: -15.25049877166748
    7. ',
' → logprob: -15.62549877166748
    8. ')' → logprob: -16.125497817993164
    9. '   ' → logprob: -16.125497817993164
    10. '(),' → logprob: -18.625497817993164

Token 168: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5759857892990112
    2. ' n' → logprob: -0.8259857892990112
    3. ')n' → logprob: -10.4509859085083
    4. '	n' → logprob: -11.9509859085083
    5. '<|end|>' → logprob: -12.2009859085083
    6. ')' → logprob: -12.9509859085083
    7. '_n' → logprob: -13.5759859085083
    8. '   ' → logprob: -14.0759859085083
    9. ',n' → logprob: -14.3259859085083
    10. ' ' → logprob: -16.075984954833984

Token 169: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.1424973713001236e-05
    2. ')
' → logprob: -10.375031471252441
    3. ' )' → logprob: -15.750031471252441
    4. ')
' → logprob: -17.875030517578125
    5. '   ' → logprob: -18.250030517578125
    6. ')

' → logprob: -18.250030517578125
    7. '),' → logprob: -18.875030517578125
    8. '))' → logprob: -18.875030517578125
    9. ')#' → logprob: -19.375030517578125
    10. ' ' → logprob: -20.000030517578125

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2791067063808441
    2. 'result' → logprob: -2.279106616973877
    3. '
' → logprob: -2.904106616973877
    4. ' result' → logprob: -3.154106616973877
    5. 'min' → logprob: -3.404106616973877
    6. ' min' → logprob: -5.154106616973877
    7. '```' → logprob: -6.154106616973877
    8. ' minimum' → logprob: -6.779106616973877
    9. 'minimum' → logprob: -7.029106616973877
    10. 'print' → logprob: -9.154107093811035

Token 171: ' min' (ID: 1349)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.498019814491272
    2. 'min' (adapté à ' min') → logprob: -0.998019814491272
    3. 'minimum' → logprob: -3.7480196952819824
    4. 'minimal' → logprob: -9.74802017211914
    5. ' result' → logprob: -11.74802017211914
    6. '   ' → logprob: -11.87302017211914
    7. 'print' → logprob: -11.87302017211914
    8. ' minimum' → logprob: -12.62302017211914
    9. '```' → logprob: -12.62302017211914
    10. 'res' → logprob: -12.74802017211914

Token 172: '_diff' (ID: 41047)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.49255090951919556
    2. 'imum' → logprob: -2.367550849914551
    3. '_difference' → logprob: -2.492550849914551
    4. '_result' → logprob: -2.617550849914551
    5. '_diff' → logprob: -2.992550849914551
    6. '_' → logprob: -3.117550849914551
    7. '_val' → logprob: -3.117550849914551
    8. '_d' → logprob: -7.367550849914551
    9. '_values' → logprob: -9.86755084991455
    10. '_distance' → logprob: -9.99255084991455

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7990412712097168
    2. 'er' → logprob: -1.1740412712097168
    3. '=' → logprob: -1.4240412712097168
    4. '­er' → logprob: -9.299041748046875
    5. 'ference' → logprob: -9.924041748046875
    6. '   ' → logprob: -10.299041748046875
    7. '_' → logprob: -10.549041748046875
    8. ' er' → logprob: -10.674041748046875
    9. '_er' → logprob: -10.674041748046875
    10. 'érence' → logprob: -10.924041748046875

Token 174: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.0015028368216007948
    2. 'find' → logprob: -6.501502990722656
    3. '(find' → logprob: -15.376502990722656
    4. '	find' → logprob: -15.876502990722656
    5. '=find' → logprob: -17.001502990722656
    6. ' finds' → logprob: -18.126502990722656
    7. ' ' → logprob: -18.376502990722656
    8. ' found' → logprob: -19.001502990722656
    9. ' min' → logprob: -19.251502990722656
    10. '_find' → logprob: -19.251502990722656

Token 175: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -2.0100624169572257e-05
    2. '_' → logprob: -11.750020027160645
    3. 'min' → logprob: -12.250020027160645
    4. 'imum' → logprob: -12.750020027160645
    5. 'minimum' → logprob: -13.375020027160645
    6. '_max' → logprob: -13.750020027160645
    7. '(min' → logprob: -13.875020027160645
    8. '_(' → logprob: -15.500020027160645
    9. '_m' → logprob: -16.25002098083496
    10. '_MIN' → logprob: -16.50002098083496

Token 176: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.00014358828775584698
    2. 'um' → logprob: -8.875144004821777
    3. 'im' → logprob: -13.750144004821777
    4. 'ium' → logprob: -14.375144004821777
    5. 'inum' → logprob: -14.375144004821777
    6. 'd' → logprob: -14.875144004821777
    7. 'mum' → logprob: -15.125144004821777
    8. '_difference' → logprob: -15.375144004821777
    9. '_' → logprob: -16.00014305114746
    10. '(d' → logprob: -16.12514305114746

Token 177: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.014727018773555756
    2. '(' → logprob: -4.2647271156311035
    3. '(values' → logprob: -7.5147271156311035
    4. ' (' → logprob: -11.139726638793945
    5. '(diff' → logprob: -13.514726638793945
    6. '(
' → logprob: -14.014726638793945
    7. '(numbers' → logprob: -15.389726638793945
    8. '(div' → logprob: -15.514726638793945
    9. '(s' → logprob: -15.764726638793945
    10. '(results' → logprob: -15.764726638793945

Token 178: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.248469718324486e-05
    2. ' if' → logprob: -10.750022888183594
    3. 'iffer' → logprob: -14.500022888183594
    4. 'dif' → logprob: -15.250022888183594
    5. 'ifference' → logprob: -16.500022888183594
    6. ' differences' → logprob: -16.750022888183594
    7. 'ffer' → logprob: -17.875022888183594
    8. '(if' → logprob: -18.000022888183594
    9. 'iff' → logprob: -18.375022888183594
    10. '   ' → logprob: -18.625022888183594

Token 179: 'ferences' (ID: 10131)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6702914834022522
    2. 'ferences' → logprob: -0.9202914834022522
    3. 'dif' → logprob: -2.4202914237976074
    4. 'ences' → logprob: -7.420291423797607
    5. 'érences' → logprob: -9.170291900634766
    6. ' differences' → logprob: -9.545291900634766
    7. 'ference' → logprob: -9.670291900634766
    8. 'fer' → logprob: -9.670291900634766
    9. 'eren' → logprob: -9.795291900634766
    10. '   ' → logprob: -10.045291900634766

Token 180: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10029584169387817
    2. ')' → logprob: -2.3502957820892334
    3. '   ' → logprob: -10.100296020507812
    4. ')
' → logprob: -10.100296020507812
    5. '()
' → logprob: -13.100296020507812
    6. ' )
' → logprob: -13.475296020507812
    7. '()' → logprob: -13.600296020507812
    8. '())
' → logprob: -13.600296020507812
    9. ')

' → logprob: -14.725296020507812
    10. '(' → logprob: -15.225296020507812

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01636817678809166
    2. 'print' → logprob: -4.141368389129639
    3. ' print' → logprob: -8.51636791229248
    4. '```' → logprob: -10.01636791229248
    5. '
' → logprob: -10.26636791229248
    6. '(print' → logprob: -10.76636791229248
    7. '    
' → logprob: -10.89136791229248
    8. '	print' → logprob: -11.64136791229248
    9. ' ' → logprob: -13.76636791229248
    10. '  ' → logprob: -13.89136791229248

Token 182: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0001710014621494338
    2. ' print' → logprob: -9.250170707702637
    3. '   ' → logprob: -9.500170707702637
    4. '	print' → logprob: -17.750171661376953
    5. '(print' → logprob: -20.375171661376953
    6. '  ' → logprob: -20.375171661376953
    7. '.print' → logprob: -20.500171661376953
    8. '_print' → logprob: -20.625171661376953
    9. ' ' → logprob: -20.875171661376953
    10. '
' → logprob: -21.500171661376953

Token 183: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.750000953674316
    3. '_results' → logprob: -16.375
    4. '_res' → logprob: -17.0
    5. '(_' → logprob: -17.25
    6. '(' → logprob: -17.75
    7. 'result' → logprob: -18.625
    8. '_Result' → logprob: -19.375
    9. '_RESULT' → logprob: -19.375
    10. ' _' → logprob: -19.5

Token 184: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0015083164907991886
    2. '(' → logprob: -6.5015082359313965
    3. ' (' → logprob: -12.126508712768555
    4. '(max' → logprob: -15.251508712768555
    5. '(m' → logprob: -16.251508712768555
    6. '(result' → logprob: -16.376508712768555
    7. '(print' → logprob: -17.501508712768555
    8. '(
' → logprob: -17.876508712768555
    9. ' ' → logprob: -18.251508712768555
    10. '(s' → logprob: -18.501508712768555

Token 185: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -1.0280383548888494e-06
    2. 'diff' → logprob: -14.125000953674316
    3. '_' → logprob: -16.125001907348633
    4. '_d' → logprob: -17.250001907348633
    5. '_dist' → logprob: -17.500001907348633
    6. '_def' → logprob: -18.375001907348633
    7. '_DIFF' → logprob: -18.375001907348633
    8. '	diff' → logprob: -18.625001907348633
    9. 'Diff' → logprob: -18.875001907348633
    10. '_di' → logprob: -19.000001907348633

Token 186: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ')
' → logprob: -12.750003814697266
    3. '()' → logprob: -15.250003814697266
    4. ' )' → logprob: -15.750003814697266
    5. '())' → logprob: -16.125003814697266
    6. '))' → logprob: -17.250003814697266
    7. ')`' → logprob: -17.875003814697266
    8. '`)' → logprob: -19.125003814697266
    9. ')

' → logprob: -19.750003814697266
    10. '）' → logprob: -19.875003814697266

Token 187: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.020940402522683144
    2. '
' → logprob: -3.8959403038024902
    3. '\n' → logprob: -8.770940780639648
    4. ' if' → logprob: -9.270940780639648
    5. 'main' → logprob: -9.395940780639648
    6. '<|end|>' → logprob: -10.895940780639648
    7. '```' → logprob: -10.895940780639648
    8. '  
' → logprob: -11.895940780639648
    9. '\' → logprob: -12.020940780639648
    10. '    
' → logprob: -12.145940780639648

Token 188: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08898908644914627
    2. '(' → logprob: -2.463989019393921
    3. '()
' → logprob: -10.4639892578125
    4. '(
' → logprob: -11.3389892578125
    5. '#' → logprob: -13.4639892578125
    6. '()

' → logprob: -13.5889892578125
    7. '();' → logprob: -13.9639892578125
    8. ' ()' → logprob: -14.0889892578125
    9. '(

' → logprob: -14.2139892578125
    10. '()`' → logprob: -14.3389892578125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 186
Tokens correctement prédits (1ère position, stricte): 104
Tokens correctement prédits (1ère position, avec adaptation): 111
Tokens correctement prédits (top 10): 165
Précision stricte (1ère position): 55.91%
Précision adaptée (1ère position): 59.68%
Précision (top 10): 88.71%
================================================================================
