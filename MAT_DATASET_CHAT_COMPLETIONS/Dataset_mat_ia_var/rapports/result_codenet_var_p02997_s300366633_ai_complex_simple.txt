================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import islice, repeat, count, chain

n, k = map(int, __import__('sys').stdin.readline().split())

k_max = reduce(lambda a, b: a * b // 2, (n - i for i in range(1,3)))
if k > k_max:
    print(-1)
    exit()

m = (lambda x, y, z: x + y - z)((n-1), k_max, k)
print(m)

# Star edges using a map & lambda with unpacking
_ = list(map(lambda i: print(1, i), range(2, n+1)))

# Exhaustive non-star edges via iterator games
edges = (
    (i,j) for i in range(2, n)
          for j in range(i+1, n+1)
)
for u, v in islice(edges, k_max - k):
    print(u, v)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019195254892110825
    2. '(lambda' → logprob: -4.394195079803467
    3. '.' → logprob: -5.144195079803467
    4. ',' → logprob: -8.019195556640625
    5. ' (' → logprob: -8.519195556640625
    6. '```' → logprob: -9.519195556640625
    7. '(
' → logprob: -10.144195556640625
    8. '\(' → logprob: -10.269195556640625
    9. '\' → logprob: -10.394195556640625
    10. 'lambda' → logprob: -11.019195556640625

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028644466772675514
    2. '\' → logprob: -4.153644561767578
    3. 'def' → logprob: -5.028644561767578
    4. '(
' → logprob: -6.028644561767578
    5. '(lambda' → logprob: -6.653644561767578
    6. ',' → logprob: -7.653644561767578
    7. '\n' → logprob: -7.778644561767578
    8. '```' → logprob: -7.903644561767578
    9. '\(' → logprob: -8.403644561767578
    10. '`' → logprob: -9.278644561767578

Token 6: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.26421603560447693
    2. ' math' → logprob: -2.0142159461975098
    3. ' itertools' → logprob: -2.7642159461975098
    4. ' collections' → logprob: -3.3892159461975098
    5. 'operator' → logprob: -6.51421594619751
    6. ' os' → logprob: -8.764216423034668
    7. 'math' → logprob: -9.014216423034668
    8. ' ' → logprob: -9.639216423034668
    9. ' typing' → logprob: -9.639216423034668
    10. 'collections' → logprob: -9.764216423034668

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.01667022332549095
    2. 'import' → logprob: -4.141670227050781
    3. '.' → logprob: -7.891670227050781
    4. ' ' → logprob: -9.141670227050781
    5. ' .' → logprob: -9.516670227050781
    6. '.import' → logprob: -9.891670227050781
    7. '	import' → logprob: -11.391670227050781
    8. '_import' → logprob: -12.016670227050781
    9. ' itertools' → logprob: -12.641670227050781
    10. '<|end|>' → logprob: -13.391670227050781

Token 8: ' is' (ID: 382)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.4097050726413727
    2. 'group' → logprob: -2.15970516204834
    3. ' accumulate' → logprob: -2.90970516204834
    4. 'acc' → logprob: -3.40970516204834
    5. 'count' → logprob: -3.40970516204834
    6. ' cycle' → logprob: -3.53470516204834
    7. ' chain' → logprob: -3.53470516204834
    8. 'cycle' → logprob: -4.28470516204834
    9. 'chain' → logprob: -4.40970516204834
    10. ' count' → logprob: -5.03470516204834

Token 9: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.00012535012501757592
    2. 'l' → logprob: -9.25012493133545
    3. 'lic' → logprob: -11.75012493133545
    4. 'land' → logprob: -11.87512493133545
    5. '```' → logprob: -12.37512493133545
    6. 'li' → logprob: -13.50012493133545
    7. 'lices' → logprob: -13.62512493133545
    8. 'liced' → logprob: -13.87512493133545
    9. '>' → logprob: -14.12512493133545
    10. '#' → logprob: -14.12512493133545

Token 10: ',' (ID: 11)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.2010146379470825
    2. '\n' → logprob: -1.2010146379470825
    3. '(' → logprob: -1.7010146379470825
    4. 'def' → logprob: -1.8260146379470825
    5. '(
' → logprob: -4.076014518737793
    6. ',' → logprob: -4.326014518737793
    7. '```' → logprob: -5.201014518737793
    8. 'import' → logprob: -5.576014518737793
    9. '.' → logprob: -5.576014518737793
    10. '[' → logprob: -6.826014518737793

Token 11: ' repeat' (ID: 22962)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4288787841796875
    2. 'chain' → logprob: -1.6788787841796875
    3. 'cycle' → logprob: -3.0538787841796875
    4. 'group' → logprob: -3.4288787841796875
    5. 'take' → logprob: -3.4288787841796875
    6. 'acc' → logprob: -4.1788787841796875
    7. 'tee' → logprob: -4.4288787841796875
    8. 'zip' → logprob: -5.4288787841796875
    9. ' chain' → logprob: -5.4288787841796875
    10. ' count' → logprob: -5.5538787841796875

Token 12: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4423430263996124
    2. 'def' → logprob: -1.56734299659729
    3. ',' → logprob: -2.56734299659729
    4. '(
' → logprob: -3.31734299659729
    5. '\' → logprob: -4.192343235015869
    6. '\n' → logprob: -5.192343235015869
    7. '_' → logprob: -5.817343235015869
    8. '#' → logprob: -6.317343235015869
    9. '```' → logprob: -6.317343235015869
    10. '`' → logprob: -6.442343235015869

Token 13: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8827939629554749
    2. 'chain' → logprob: -1.63279390335083
    3. 'cycle' → logprob: -1.75779390335083
    4. 'take' → logprob: -2.50779390335083
    5. 'acc' → logprob: -3.00779390335083
    6. ' chain' → logprob: -4.00779390335083
    7. 'st' → logprob: -4.25779390335083
    8. 'zip' → logprob: -4.50779390335083
    9. ' cycle' → logprob: -4.88279390335083
    10. ' count' → logprob: -5.00779390335083

Token 14: ',' (ID: 11)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.149887204170227
    2. 'def' → logprob: -1.149887204170227
    3. '(' → logprob: -1.774887204170227
    4. '\n' → logprob: -2.5248870849609375
    5. '(
' → logprob: -2.6498870849609375
    6. 'd' → logprob: -4.6498870849609375
    7. ',' → logprob: -4.7748870849609375
    8. '```' → logprob: -5.5248870849609375
    9. '`' → logprob: -5.7748870849609375
    10. '' → logprob: -5.8998870849609375

Token 15: ' chain' (ID: 13464)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.8666284680366516
    2. 'chain' → logprob: -1.6166284084320068
    3. 'acc' → logprob: -2.366628408432007
    4. ' cycle' → logprob: -2.491628408432007
    5. 'take' → logprob: -2.491628408432007
    6. ' chain' → logprob: -3.116628408432007
    7. 'st' → logprob: -4.491628646850586
    8. 'zip' → logprob: -4.866628646850586
    9. 'filter' → logprob: -4.866628646850586
    10. ' accumulate' → logprob: -4.866628646850586

Token 16: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9010611176490784
    2. '(' → logprob: -1.0260610580444336
    3. '(
' → logprob: -2.4010610580444336
    4. '\' → logprob: -2.9010610580444336
    5. ',' → logprob: -3.5260610580444336
    6. '\n' → logprob: -3.5260610580444336
    7. '```' → logprob: -5.526061058044434
    8. ',
' → logprob: -5.526061058044434
    9. 'd' → logprob: -6.026061058044434
    10. '.' → logprob: -6.026061058044434

Token 17: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4379429817199707
    2. 'def' → logprob: -1.3129429817199707
    3. 'd' → logprob: -3.3129429817199707
    4. '(
' → logprob: -4.062942981719971
    5. '```' → logprob: -4.437942981719971
    6. ',' → logprob: -5.687942981719971
    7. '`' → logprob: -5.687942981719971
    8. '\' → logprob: -6.062942981719971
    9. '#' → logprob: -6.187942981719971
    10. ')' → logprob: -6.312942981719971

Token 18: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7174254059791565
    2. '=' → logprob: -1.7174253463745117
    3. ' =' → logprob: -2.2174253463745117
    4. 'a' → logprob: -2.4674253463745117
    5. 'umber' → logprob: -3.7174253463745117
    6. 'ext' → logprob: -3.8424253463745117
    7. ' ' → logprob: -3.9674253463745117
    8. 'u' → logprob: -4.217425346374512
    9. ',' → logprob: -4.342425346374512
    10. 'o' → logprob: -4.842425346374512

Token 19: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4333440661430359
    2. ' ' → logprob: -2.0583441257476807
    3. ' m' → logprob: -2.3083441257476807
    4. 'm' → logprob: -3.0583441257476807
    5. 'k' → logprob: -3.1833441257476807
    6. 's' → logprob: -4.933343887329102
    7. ' s' → logprob: -5.308343887329102
    8. ''' → logprob: -5.558343887329102
    9. '"' → logprob: -5.808343887329102
    10. ' '' → logprob: -5.808343887329102

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062136631458997726
    2. '=' → logprob: -2.812136650085449
    3. ',' → logprob: -8.93713665008545
    4. ' =
' → logprob: -11.31213665008545
    5. ' ' → logprob: -11.68713665008545
    6. ')' → logprob: -11.68713665008545
    7. '<|end|>' → logprob: -12.31213665008545
    8. '=
' → logprob: -14.06213665008545
    9. ' ,' → logprob: -14.18713665008545
    10. '=

' → logprob: -14.43713665008545

Token 21: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5586576461791992
    2. '0' → logprob: -1.6836576461791992
    3. '10' → logprob: -1.8086576461791992
    4. '5' → logprob: -3.308657646179199
    5. ' map' → logprob: -4.183657646179199
    6. 'map' → logprob: -4.308657646179199
    7. '1' → logprob: -4.808657646179199
    8. '3' → logprob: -6.683657646179199
    9. '20' → logprob: -6.933657646179199
    10. '100' → logprob: -6.933657646179199

Token 22: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016956234350800514
    2. '(lambda' → logprob: -5.016956329345703
    3. '(str' → logprob: -5.391956329345703
    4. '(int' → logprob: -5.516956329345703
    5. '<|end|>' → logprob: -7.016956329345703
    6. '('' → logprob: -8.891956329345703
    7. '(token' → logprob: -9.891956329345703
    8. '((' → logprob: -10.016956329345703
    9. '(user' → logprob: -10.016956329345703
    10. '(tuple' → logprob: -10.391956329345703

Token 23: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2653685510158539
    2. '(' → logprob: -1.6403685808181763
    3. ')' → logprob: -3.6403684616088867
    4. 'input' → logprob: -4.640368461608887
    5. '(int' → logprob: -6.890368461608887
    6. '```' → logprob: -8.140368461608887
    7. '())' → logprob: -8.515368461608887
    8. '()' → logprob: -8.515368461608887
    9. '=input' → logprob: -8.640368461608887
    10. ' input' → logprob: -8.765368461608887

Token 24: ' __' (ID: 2516)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07906153053045273
    2. ' input' → logprob: -2.579061508178711
    3. '(input' → logprob: -9.204061508178711
    4. ')' → logprob: -9.704061508178711
    5. ',input' → logprob: -12.704061508178711
    6. ' ' → logprob: -13.329061508178711
    7. '```' → logprob: -13.454061508178711
    8. 'open' → logprob: -13.954061508178711
    9. '=input' → logprob: -14.454061508178711
    10. ' )' → logprob: -14.579061508178711

Token 25: 'import' (ID: 561)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00043734462815336883
    2. ' input' → logprob: -7.750437259674072
    3. '__' → logprob: -12.87543773651123
    4. '(input' → logprob: -13.37543773651123
    5. 'stdin' → logprob: -13.62543773651123
    6. 'open' → logprob: -14.50043773651123
    7. '_input' → logprob: -16.125436782836914
    8. 'raw' → logprob: -16.375436782836914
    9. ')' → logprob: -16.375436782836914
    10. '```' → logprob: -16.875436782836914

Token 26: '__('' (ID: 54460)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.38717466592788696
    2. '(' → logprob: -2.512174606323242
    3. '('__' → logprob: -2.512174606323242
    4. '__('' → logprob: -2.637174606323242
    5. '("' → logprob: -3.137174606323242
    6. '("__' → logprob: -3.637174606323242
    7. '__("' → logprob: -4.762174606323242
    8. '__' → logprob: -5.887174606323242
    9. '("("' → logprob: -6.012174606323242
    10. '<|end|>' → logprob: -7.262174606323242

Token 27: 'sys' (ID: 17324)
  Prédit: 'built'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'built' → logprob: -0.474458783864975
    2. 'sys' → logprob: -0.9744588136672974
    3. ' built' → logprob: -8.224458694458008
    4. '__' → logprob: -9.349458694458008
    5. ' sys' → logprob: -11.349458694458008
    6. 'b' → logprob: -12.224458694458008
    7. 'math' → logprob: -13.474458694458008
    8. ''s' → logprob: -13.599458694458008
    9. '-built' → logprob: -13.599458694458008
    10. 'code' → logprob: -13.599458694458008

Token 28: '').' (ID: 3426)
  Prédit: '.argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.argv' → logprob: -0.5337425470352173
    2. '.stdin' → logprob: -1.1587425470352173
    3. ').' → logprob: -3.2837424278259277
    4. '').' → logprob: -3.4087424278259277
    5. '<|end|>' → logprob: -4.158742427825928
    6. ')' → logprob: -5.908742427825928
    7. '.' → logprob: -6.033742427825928
    8. '.stdout' → logprob: -6.158742427825928
    9. '<|end|>' → logprob: -6.658742427825928
    10. '')' → logprob: -6.658742427825928

Token 29: 'stdin' (ID: 132953)
  Prédit: 'stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.018159428611397743
    2. 'argv' → logprob: -4.01815938949585
    3. '.stdin' → logprob: -12.143159866333008
    4. '__' → logprob: -14.018159866333008
    5. 'std' → logprob: -14.143159866333008
    6. 'stderr' → logprob: -14.393159866333008
    7. '(stdin' → logprob: -14.393159866333008
    8. 'stdout' → logprob: -15.018159866333008
    9. '.argv' → logprob: -15.018159866333008
    10. 'arg' → logprob: -15.393159866333008

Token 30: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008337968960404396
    2. '.read' → logprob: -5.25833797454834
    3. '.' → logprob: -5.88333797454834
    4. '.readlines' → logprob: -8.63333797454834
    5. ')' → logprob: -9.13333797454834
    6. ').' → logprob: -11.00833797454834
    7. ' .' → logprob: -12.13333797454834
    8. '.write' → logprob: -13.50833797454834
    9. '.buffer' → logprob: -13.75833797454834
    10. '```' → logprob: -14.00833797454834

Token 31: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009316484443843365
    2. '().' → logprob: -5.384316444396973
    3. '()' → logprob: -6.009316444396973
    4. ')' → logprob: -6.509316444396973
    5. '(),' → logprob: -7.384316444396973
    6. '(' → logprob: -9.884316444396973
    7. ' ())' → logprob: -10.634316444396973
    8. '()))' → logprob: -11.259316444396973
    9. '());' → logprob: -11.884316444396973
    10. '())
' → logprob: -12.134316444396973

Token 32: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.006596001796424389
    2. 'rstrip' → logprob: -6.006596088409424
    3. 'read' → logprob: -6.131596088409424
    4. 'split' → logprob: -6.256596088409424
    5. ')' → logprob: -11.256595611572266
    6. ' strip' → logprob: -12.006595611572266
    7. 'decode' → logprob: -14.756595611572266
    8. '())' → logprob: -14.881595611572266
    9. '().' → logprob: -15.131595611572266
    10. '```' → logprob: -15.256595611572266

Token 33: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32970038056373596
    2. '))' → logprob: -1.3297003507614136
    3. '())' → logprob: -4.204700469970703
    4. '()))' → logprob: -6.829700469970703
    5. '()' → logprob: -8.329700469970703
    6. '(' → logprob: -10.829700469970703
    7. ')))' → logprob: -11.579700469970703
    8. '),' → logprob: -11.829700469970703
    9. ''))' → logprob: -12.454700469970703
    10. '')' → logprob: -13.204700469970703

Token 34: 'k' (ID: 74)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.5264830589294434
    2. 'def' → logprob: -1.6514830589294434
    3. 'lst' → logprob: -2.4014830589294434
    4. 'data' → logprob: -2.6514830589294434
    5. 'arr' → logprob: -2.7764830589294434
    6. 'dp' → logprob: -2.7764830589294434
    7. 'result' → logprob: -3.1514830589294434
    8. 's' → logprob: -3.4014830589294434
    9. ')' → logprob: -3.9014830589294434
    10. 'res' → logprob: -4.151483058929443

Token 35: '_max' (ID: 13731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1560705602169037
    2. '<|end|>' → logprob: -2.5310704708099365
    3. '+' → logprob: -3.5310704708099365
    4. '%' → logprob: -4.656070709228516
    5. '```' → logprob: -5.031070709228516
    6. ' ' → logprob: -5.156070709228516
    7. '\n' → logprob: -5.531070709228516
    8. '>' → logprob: -6.031070709228516
    9. '[' → logprob: -6.281070709228516
    10. ' )' → logprob: -7.281070709228516

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.500161349773407
    2. '=' → logprob: -1.1251614093780518
    3. '_' → logprob: -2.7501614093780518
    4. ')' → logprob: -5.875161170959473
    5. ' ' → logprob: -7.625161170959473
    6. ',' → logprob: -7.875161170959473
    7. '+' → logprob: -8.875161170959473
    8. '  ' → logprob: -9.000161170959473
    9. ' _' → logprob: -9.125161170959473
    10. '.' → logprob: -9.250161170959473

Token 37: ' reduce' (ID: 10389)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0700403451919556
    2. 'n' → logprob: -2.070040225982666
    3. ' n' → logprob: -2.320040225982666
    4. ' k' → logprob: -2.320040225982666
    5. ' ' → logprob: -2.695040225982666
    6. 'min' → logprob: -2.820040225982666
    7. ' min' → logprob: -3.070040225982666
    8. '2' → logprob: -3.195040225982666
    9. '10' → logprob: -3.445040225982666
    10. '1' → logprob: -3.945040225982666

Token 38: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2529613673686981
    2. '(lambda' → logprob: -1.5029613971710205
    3. '(max' → logprob: -7.127961158752441
    4. '(operator' → logprob: -9.002961158752441
    5. '(
' → logprob: -10.002961158752441
    6. '(min' → logprob: -10.627961158752441
    7. '(k' → logprob: -11.877961158752441
    8. '(int' → logprob: -12.502961158752441
    9. '(None' → logprob: -12.627961158752441
    10. '((' → logprob: -12.752961158752441

Token 39: ' a' (ID: 261)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.8550189733505249
    2. ' a' → logprob: -1.480018973350525
    3. ' x' → logprob: -1.480018973350525
    4. 'a' → logprob: -2.9800190925598145
    5. 'lambda' → logprob: -2.9800190925598145
    6. 'x' → logprob: -4.4800190925598145
    7. ' max' → logprob: -6.6050190925598145
    8. ' k' → logprob: -6.7300190925598145
    9. ' ' → logprob: -7.3550190925598145
    10. ',' → logprob: -7.3550190925598145

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004052871838212013
    2. ',k' → logprob: -6.379052639007568
    3. ',a' → logprob: -6.504052639007568
    4. ',x' → logprob: -7.629052639007568
    5. ',b' → logprob: -8.504053115844727
    6. ' ,' → logprob: -9.879053115844727
    7. ',i' → logprob: -11.129053115844727
    8. ',n' → logprob: -11.129053115844727
    9. ',max' → logprob: -11.379053115844727
    10. ',y' → logprob: -11.629053115844727

Token 41: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5231581926345825
    2. 'b' → logprob: -0.8981581926345825
    3. ' ' → logprob: -11.648158073425293
    4. ',' → logprob: -12.273158073425293
    5. 'k' → logprob: -12.773158073425293
    6. ',b' → logprob: -12.898158073425293
    7. ' k' → logprob: -12.898158073425293
    8. 'a' → logprob: -13.523158073425293
    9. ' c' → logprob: -13.523158073425293
    10. 'c' → logprob: -13.648158073425293

Token 42: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5355724096298218
    2. ',' → logprob: -0.9105724096298218
    3. ',k' → logprob: -5.535572528839111
    4. ',a' → logprob: -5.660572528839111
    5. ',b' → logprob: -6.035572528839111
    6. ',max' → logprob: -7.535572528839111
    7. 'a' → logprob: -7.660572528839111
    8. ' :' → logprob: -7.785572528839111
    9. ' ,' → logprob: -8.035572052001953
    10. 'max' → logprob: -8.660572052001953

Token 43: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0279239416122437
    2. ' max' → logprob: -1.0279239416122437
    3. ' a' → logprob: -1.4029239416122437
    4. 'max' → logprob: -3.277924060821533
    5. '   ' → logprob: -8.527923583984375
    6. '	a' → logprob: -8.777923583984375
    7. ' ' → logprob: -9.152923583984375
    8. ' lambda' → logprob: -9.402923583984375
    9. '	max' → logprob: -9.652923583984375
    10. ' (' → logprob: -10.027923583984375

Token 44: ' *' (ID: 425)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.45962998270988464
    2. '+' → logprob: -1.584630012512207
    3. '|' → logprob: -2.959630012512207
    4. '*' → logprob: -3.084630012512207
    5. 'if' → logprob: -3.084630012512207
    6. ' +' → logprob: -5.459630012512207
    7. '+b' → logprob: -5.459630012512207
    8. ',' → logprob: -6.209630012512207
    9. ' |' → logprob: -6.209630012512207
    10. ' or' → logprob: -6.459630012512207

Token 45: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3253125846385956
    2. ' b' → logprob: -1.325312614440918
    3. '10' → logprob: -5.700312614440918
    4. '(' → logprob: -6.075312614440918
    5. ' (' → logprob: -6.325312614440918
    6. ' ' → logprob: -6.950312614440918
    7. 'k' → logprob: -7.075312614440918
    8. '2' → logprob: -7.700312614440918
    9. 'a' → logprob: -8.075312614440918
    10. 'max' → logprob: -8.325312614440918

Token 46: ' //' (ID: 602)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005656321067363024
    2. ' ,' → logprob: -5.5056562423706055
    3. ' if' → logprob: -7.3806562423706055
    4. '(range' → logprob: -8.880656242370605
    5. 'if' → logprob: -9.005656242370605
    6. '+' → logprob: -9.255656242370605
    7. ' +' → logprob: -9.255656242370605
    8. ',k' → logprob: -9.755656242370605
    9. 'range' → logprob: -9.755656242370605
    10. ' (' → logprob: -10.130656242370605

Token 47: ' ' (ID: 220)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.8042258024215698
    2. ' math' → logprob: -1.9292258024215698
    3. 'b' → logprob: -2.0542259216308594
    4. '__' → logprob: -2.4292259216308594
    5. 'g' → logprob: -2.5542259216308594
    6. ' gcd' → logprob: -3.1792259216308594
    7. 'min' → logprob: -3.9292259216308594
    8. ' b' → logprob: -4.429225921630859
    9. 'pow' → logprob: -4.679225921630859
    10. 'a' → logprob: -5.179225921630859

Token 48: '2' (ID: 17)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5946882367134094
    2. 'math' → logprob: -1.0946881771087646
    3. 'g' → logprob: -2.7196881771087646
    4. '__' → logprob: -3.2196881771087646
    5. ' math' → logprob: -6.219688415527344
    6. 'a' → logprob: -6.844688415527344
    7. 'reduce' → logprob: -6.969688415527344
    8. 'max' → logprob: -7.094688415527344
    9. 'pow' → logprob: -7.594688415527344
    10. ' ' → logprob: -7.719688415527344

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06132030859589577
    2. ' ,' → logprob: -3.3113203048706055
    3. ',k' → logprob: -5.1863203048706055
    4. '**' → logprob: -5.3113203048706055
    5. ')' → logprob: -5.8113203048706055
    6. 'k' → logprob: -6.6863203048706055
    7. '(k' → logprob: -7.0613203048706055
    8. ' k' → logprob: -7.1863203048706055
    9. '1' → logprob: -7.1863203048706055
    10. '+' → logprob: -7.3113203048706055

Token 50: ' (' (ID: 350)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.4825824201107025
    2. 'range' → logprob: -1.232582449913025
    3. '(range' → logprob: -3.8575823307037354
    4. '[' → logprob: -4.1075825691223145
    5. ' range' → logprob: -4.3575825691223145
    6. 'is' → logprob: -4.4825825691223145
    7. ' repeat' → logprob: -4.9825825691223145
    8. 'chain' → logprob: -5.1075825691223145
    9. '(re' → logprob: -5.7325825691223145
    10. 'map' → logprob: -5.8575825691223145

Token 51: 'n' (ID: 77)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.1938809156417847
    2. 'i' → logprob: -1.3188809156417847
    3. 'k' → logprob: -1.4438809156417847
    4. 'map' → logprob: -3.443881034851074
    5. 'is' → logprob: -3.568881034851074
    6. 'n' → logprob: -3.818881034851074
    7. '2' → logprob: -4.068881034851074
    8. 'count' → logprob: -4.193881034851074
    9. 'chain' → logprob: -4.818881034851074
    10. '[i' → logprob: -4.818881034851074

Token 52: ' -' (ID: 533)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4917878806591034
    2. '+' → logprob: -1.1167879104614258
    3. ' +' → logprob: -3.491787910461426
    4. '**' → logprob: -4.366787910461426
    5. 'for' → logprob: -5.241787910461426
    6. ',' → logprob: -5.366787910461426
    7. '-' → logprob: -5.741787910461426
    8. ' -' → logprob: -7.366787910461426
    9. '[' → logprob: -7.491787910461426
    10. 's' → logprob: -7.491787910461426

Token 53: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4537196159362793
    2. 'i' → logprob: -1.0787196159362793
    3. '1' → logprob: -4.203719615936279
    4. ' ' → logprob: -5.453719615936279
    5. ' k' → logprob: -6.953719615936279
    6. '2' → logprob: -7.078719615936279
    7. '_' → logprob: -7.078719615936279
    8. 'k' → logprob: -7.453719615936279
    9. '_i' → logprob: -7.703719615936279
    10. ' _' → logprob: -7.828719615936279

Token 54: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.025917042046785355
    2. 'for' → logprob: -4.400917053222656
    3. ')' → logprob: -5.400917053222656
    4. ' ' → logprob: -5.650917053222656
    5. '-' → logprob: -5.650917053222656
    6. ' -' → logprob: -6.525917053222656
    7. ' )' → logprob: -8.775917053222656
    8. '	for' → logprob: -9.775917053222656
    9. '  ' → logprob: -11.275917053222656
    10. '1' → logprob: -11.400917053222656

Token 55: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.010128123685717583
    2. 'i' → logprob: -4.885128021240234
    3. ' range' → logprob: -6.135128021240234
    4. 'range' → logprob: -8.135128021240234
    5. ' ' → logprob: -10.135128021240234
    6. '	i' → logprob: -11.885128021240234
    7. ' _' → logprob: -12.385128021240234
    8. '  ' → logprob: -12.885128021240234
    9. ' ' → logprob: -13.135128021240234
    10. ' in' → logprob: -14.385128021240234

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012778148986399174
    2. ' range' → logprob: -4.762778282165527
    3. ' ' → logprob: -6.012778282165527
    4. '<|end|>' → logprob: -7.012778282165527
    5. 'range' → logprob: -7.262778282165527
    6. 'in' → logprob: -9.387778282165527
    7. '<|end|>' → logprob: -12.012778282165527
    8. ')' → logprob: -12.512778282165527
    9. ' xrange' → logprob: -12.637778282165527
    10. '	range' → logprob: -13.012778282165527

Token 57: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018177449703216553
    2. 'range' → logprob: -4.018177509307861
    3. '	range' → logprob: -11.268177032470703
    4. ' xrange' → logprob: -11.643177032470703
    5. ' ' → logprob: -12.643177032470703
    6. '(range' → logprob: -13.518177032470703
    7. ' count' → logprob: -15.018177032470703
    8. '  ' → logprob: -15.268177032470703
    9. 'count' → logprob: -16.143177032470703
    10. '0' → logprob: -16.143177032470703

Token 58: '(' (ID: 7)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0287503469735384
    2. '(' → logprob: -4.153750419616699
    3. 'k' → logprob: -5.028750419616699
    4. ' k' → logprob: -5.653750419616699
    5. ' (' → logprob: -6.403750419616699
    6. '(n' → logprob: -7.778750419616699
    7. '	k' → logprob: -7.778750419616699
    8. ')' → logprob: -10.0287504196167
    9. '1' → logprob: -11.1537504196167
    10. ' )' → logprob: -11.4037504196167

Token 59: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08976034075021744
    2. ' k' → logprob: -2.4647603034973145
    3. '1' → logprob: -7.3397603034973145
    4. '0' → logprob: -9.214760780334473
    5. ' ' → logprob: -10.839760780334473
    6. '	k' → logprob: -10.839760780334473
    7. '2' → logprob: -10.964760780334473
    8. ')' → logprob: -12.714760780334473
    9. 'n' → logprob: -12.964760780334473
    10. ' n' → logprob: -13.464760780334473

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023962346836924553
    2. ',k' → logprob: -4.273962497711182
    3. ' ,' → logprob: -5.023962497711182
    4. ' k' → logprob: -7.148962497711182
    5. 'k' → logprob: -7.148962497711182
    6. ')),' → logprob: -7.273962497711182
    7. ' ' → logprob: -7.773962497711182
    8. ')' → logprob: -9.023962020874023
    9. '))' → logprob: -9.523962020874023
    10. ' if' → logprob: -10.148962020874023

Token 61: '3' (ID: 18)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.22553029656410217
    2. ' k' → logprob: -1.6005302667617798
    3. '1' → logprob: -10.225530624389648
    4. ' ' → logprob: -10.850530624389648
    5. ' n' → logprob: -11.100530624389648
    6. 'n' → logprob: -11.350530624389648
    7. ' min' → logprob: -11.475530624389648
    8. '2' → logprob: -11.975530624389648
    9. 'min' → logprob: -12.600530624389648
    10. '	k' → logprob: -12.725530624389648

Token 62: ')))
' (ID: 12562)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.39182808995246887
    2. '))' → logprob: -1.6418280601501465
    3. '),' → logprob: -3.5168280601501465
    4. ')' → logprob: -3.6418280601501465
    5. ')),' → logprob: -3.7668280601501465
    6. 'k' → logprob: -4.0168280601501465
    7. '1' → logprob: -4.7668280601501465
    8. ')):
' → logprob: -4.8918280601501465
    9. '):' → logprob: -4.8918280601501465
    10. ' ' → logprob: -6.2668280601501465

Token 63: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.061698850244283676
    2. ' )' → logprob: -3.8116989135742188
    3. ',' → logprob: -3.9366989135742188
    4. '+' → logprob: -5.186698913574219
    5. ' ' → logprob: -5.436698913574219
    6. '(n' → logprob: -5.936698913574219
    7. '(' → logprob: -6.686698913574219
    8. ' +' → logprob: -6.936698913574219
    9. ' ,' → logprob: -7.311698913574219
    10. '())' → logprob: -7.311698913574219

Token 64: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.013183290138840675
    2. ' n' → logprob: -4.763183116912842
    3. ' ' → logprob: -5.888183116912842
    4. 'k' → logprob: -6.763183116912842
    5. ' not' → logprob: -7.638183116912842
    6. ' (' → logprob: -9.38818359375
    7. 'n' → logprob: -11.01318359375
    8. ' len' → logprob: -11.01318359375
    9. ' ' → logprob: -11.51318359375
    10. '(' → logprob: -12.26318359375

Token 65: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.08276444673538208
    2. ' <' → logprob: -3.7077643871307373
    3. ' >=' → logprob: -3.7077643871307373
    4. ' <=' → logprob: -4.082764625549316
    5. '>' → logprob: -4.957764625549316
    6. ' ' → logprob: -5.582764625549316
    7. ' ==' → logprob: -6.582764625549316
    8. '<' → logprob: -8.082764625549316
    9. '>=' → logprob: -8.457764625549316
    10. '_' → logprob: -8.707764625549316

Token 66: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.06269761174917221
    2. 'k' → logprob: -2.812697649002075
    3. ' ' → logprob: -7.562697410583496
    4. '0' → logprob: -9.437697410583496
    5. ' n' → logprob: -9.562697410583496
    6. '1' → logprob: -11.312697410583496
    7. ' (' → logprob: -11.687697410583496
    8. '(k' → logprob: -11.687697410583496
    9. '	k' → logprob: -12.062697410583496
    10. 'n' → logprob: -12.187697410583496

Token 67: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -3.2378600735682994e-05
    2. 'max' → logprob: -10.625032424926758
    3. ':' → logprob: -12.750032424926758
    4. '_' → logprob: -12.750032424926758
    5. '_min' → logprob: -14.125032424926758
    6. ' _' → logprob: -14.625032424926758
    7. '_MAX' → logprob: -15.250032424926758
    8. '_:' → logprob: -16.125032424926758
    9. 'Max' → logprob: -16.250032424926758
    10. '```' → logprob: -16.500032424926758

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016588736325502396
    2. ' :' → logprob: -4.1415886878967285
    3. ':
' → logprob: -8.266589164733887
    4. ' or' → logprob: -8.641589164733887
    5. ':return' → logprob: -9.641589164733887
    6. ' :
' → logprob: -10.891589164733887
    7. '):' → logprob: -11.391589164733887
    8. '+:' → logprob: -12.391589164733887
    9. '>:' → logprob: -12.891589164733887
    10. '**' → logprob: -13.016589164733887

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04227028042078018
    2. ' print' → logprob: -3.2922701835632324
    3. 'print' → logprob: -5.667270183563232
    4. '```' → logprob: -8.29227066040039
    5. '	print' → logprob: -9.16727066040039
    6. '    ' → logprob: -9.16727066040039
    7. '\' → logprob: -10.54227066040039
    8. ' ' → logprob: -10.54227066040039
    9. 'n' → logprob: -10.66727066040039
    10. '    
' → logprob: -10.66727066040039

Token 70: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2562411427497864
    2. 'print' (adapté à ' print') → logprob: -2.1312410831451416
    3. '   ' → logprob: -2.2562410831451416
    4. '```' → logprob: -7.131241321563721
    5. ' raise' → logprob: -8.131240844726562
    6. '    ' → logprob: -8.131240844726562
    7. ' k' → logprob: -8.506240844726562
    8. '\n' → logprob: -8.756240844726562
    9. 'exit' → logprob: -9.006240844726562
    10. ' exit' → logprob: -9.131240844726562

Token 71: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.22918890416622162
    2. '(' → logprob: -2.104188919067383
    3. '("' → logprob: -2.729188919067383
    4. '('' → logprob: -4.104188919067383
    5. '("-' → logprob: -7.729188919067383
    6. '-' → logprob: -8.104188919067383
    7. '()' → logprob: -9.104188919067383
    8. '(False' → logprob: -9.729188919067383
    9. '(":' → logprob: -9.979188919067383
    10. '(None' → logprob: -10.729188919067383

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4378848391061183e-05
    2. ' ' → logprob: -11.250014305114746
    3. ')' → logprob: -14.875014305114746
    4. '2' → logprob: -14.937514305114746
    5. '```' → logprob: -16.000015258789062
    6. '5' → logprob: -17.187515258789062
    7. '   ' → logprob: -17.250015258789062
    8. '-' → logprob: -17.375015258789062
    9. 'print' → logprob: -17.687515258789062
    10. '10' → logprob: -17.687515258789062

Token 73: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016109559684991837
    2. ')
' → logprob: -4.141109466552734
    3. ')
' → logprob: -10.016109466552734
    4. ' )' → logprob: -11.141109466552734
    5. ')return' → logprob: -12.391109466552734
    6. '))' → logprob: -13.141109466552734
    7. 'else' → logprob: -13.391109466552734
    8. ')`' → logprob: -13.516109466552734
    9. '')' → logprob: -13.891109466552734
    10. ')

' → logprob: -13.891109466552734

Token 74: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02132452093064785
    2. '   ' → logprob: -4.271324634552002
    3. '
' → logprob: -6.271324634552002
    4. '<|end|>' → logprob: -6.646324634552002
    5. ' else' → logprob: -6.771324634552002
    6. 'elif' → logprob: -6.896324634552002
    7. '    
' → logprob: -7.146324634552002
    8. ')' → logprob: -7.646324634552002
    9. 'exit' → logprob: -8.771324157714844
    10. '```' → logprob: -9.146324157714844

Token 75: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04452803358435631
    2. '
' → logprob: -3.544528007507324
    3. '   ' → logprob: -5.169528007507324
    4. '<|end|>' → logprob: -6.294528007507324
    5. ' else' → logprob: -6.419528007507324
    6. ')' → logprob: -6.544528007507324
    7. 'elif' → logprob: -6.669528007507324
    8. '    
' → logprob: -6.794528007507324
    9. 'exit' (adapté à ' exit') → logprob: -7.044528007507324
    10. '```' → logprob: -9.044528007507324

Token 76: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005164854694157839
    2. '()
' → logprob: -5.630164623260498
    3. '(' → logprob: -6.755164623260498
    4. '0' → logprob: -8.755165100097656
    5. '()\' → logprob: -9.130165100097656
    6. '()

' → logprob: -9.755165100097656
    7. '()`' → logprob: -10.380165100097656
    8. '(
' → logprob: -11.380165100097656
    9. '`()' → logprob: -11.880165100097656
    10. '1' → logprob: -12.255165100097656

Token 77: 'm' (ID: 76)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8661582469940186
    2. ':' → logprob: -1.6161582469940186
    3. '(' → logprob: -1.9911582469940186
    4. '1' → logprob: -2.8661582469940186
    5. 'range' → logprob: -3.1161582469940186
    6. 'for' → logprob: -3.2411582469940186
    7. ',' → logprob: -3.4911582469940186
    8. 'n' → logprob: -4.491158485412598
    9. '2' → logprob: -4.741158485412598
    10. '0' → logprob: -4.866158485412598

Token 78: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6867138743400574
    2. 'ax' → logprob: -1.3117139339447021
    3. ' =' → logprob: -1.6867139339447021
    4. ',' → logprob: -4.686713695526123
    5. 'a' → logprob: -4.686713695526123
    6. '_' → logprob: -5.186713695526123
    7. ' ' → logprob: -5.186713695526123
    8. 'ultip' → logprob: -6.686713695526123
    9. '  ' → logprob: -6.811713695526123
    10. 'o' → logprob: -7.186713695526123

Token 79: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7813655734062195
    2. '0' → logprob: -2.0313656330108643
    3. 'k' → logprob: -2.4063656330108643
    4. '1' → logprob: -2.7813656330108643
    5. '[n' → logprob: -3.0313656330108643
    6. ' n' → logprob: -3.2813656330108643
    7. '(n' → logprob: -3.9063656330108643
    8. '2' → logprob: -4.031365394592285
    9. '100' → logprob: -4.281365394592285
    10. ' ' → logprob: -4.281365394592285

Token 80: 'lambda' (ID: 35280)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38990867137908936
    2. 'k' → logprob: -1.5149086713790894
    3. ' n' → logprob: -2.889908790588379
    4. ' k' → logprob: -4.389908790588379
    5. '0' → logprob: -4.764908790588379
    6. '(n' → logprob: -4.764908790588379
    7. '1' → logprob: -5.389908790588379
    8. ' (' → logprob: -5.764908790588379
    9. '2' → logprob: -5.764908790588379
    10. '(k' → logprob: -6.139908790588379

Token 81: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.862545907497406
    2. ' n' → logprob: -1.7375459671020508
    3. ' i' → logprob: -2.112545967102051
    4. ' k' → logprob: -2.487545967102051
    5. 'x' → logprob: -2.987545967102051
    6. ' a' → logprob: -3.487545967102051
    7. 'n' → logprob: -3.987545967102051
    8. 'i' → logprob: -4.112545967102051
    9. 'k' → logprob: -4.237545967102051
    10. ' l' → logprob: -4.237545967102051

Token 82: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027147818356752396
    2. ',' → logprob: -4.0271477699279785
    3. ' :' → logprob: -5.4021477699279785
    4. '=' → logprob: -6.5271477699279785
    5. ':x' → logprob: -6.5271477699279785
    6. ':i' → logprob: -8.277148246765137
    7. ':n' → logprob: -8.652148246765137
    8. 'x' → logprob: -8.777148246765137
    9. 'n' → logprob: -9.402148246765137
    10. '_:' → logprob: -9.777148246765137

Token 83: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.48796477913856506
    2. 'y' → logprob: -1.1129647493362427
    3. 'k' → logprob: -4.487964630126953
    4. ' k' → logprob: -4.862964630126953
    5. 'i' → logprob: -5.237964630126953
    6. ':' → logprob: -5.362964630126953
    7. ' n' → logprob: -5.612964630126953
    8. ' i' → logprob: -5.612964630126953
    9. 'n' → logprob: -5.862964630126953
    10. 'f' → logprob: -5.987964630126953

Token 84: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006186756305396557
    2. ' :' → logprob: -5.5061869621276855
    3. ',' → logprob: -6.3811869621276855
    4. '=' → logprob: -9.006186485290527
    5. ':(' → logprob: -9.381186485290527
    6. ':x' → logprob: -9.506186485290527
    7. ',:' → logprob: -11.006186485290527
    8. ':
' → logprob: -11.881186485290527
    9. ',x' → logprob: -11.881186485290527
    10. ':max' → logprob: -11.881186485290527

Token 85: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.8088468313217163
    2. ' lambda' → logprob: -1.5588468313217163
    3. ' x' → logprob: -2.433846950531006
    4. 'lambda' → logprob: -3.058846950531006
    5. ':' → logprob: -3.183846950531006
    6. 'z' → logprob: -3.183846950531006
    7. ' k' → logprob: -4.183846950531006
    8. ' (' → logprob: -4.308846950531006
    9. 'x' → logprob: -4.308846950531006
    10. ' max' → logprob: -4.933846950531006

Token 86: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007436366286128759
    2. ' :' → logprob: -5.507436275482178
    3. ',' → logprob: -5.882436275482178
    4. '=' → logprob: -8.507436752319336
    5. ',:' → logprob: -9.382436752319336
    6. ':x' → logprob: -9.632436752319336
    7. ':(' → logprob: -9.757436752319336
    8. ':
' → logprob: -10.757436752319336
    9. ',x' → logprob: -11.569936752319336
    10. 'x' → logprob: -11.882436752319336

Token 87: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.1817175149917603
    2. 'x' → logprob: -1.4317175149917603
    3. ' (' → logprob: -1.9317175149917603
    4. ' y' → logprob: -2.3067173957824707
    5. '(x' → logprob: -2.5567173957824707
    6. 'y' → logprob: -3.6817173957824707
    7. '(' → logprob: -4.556717395782471
    8. '(y' → logprob: -4.806717395782471
    9. ' ' → logprob: -5.181717395782471
    10. ' max' → logprob: -5.431717395782471

Token 88: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5523765683174133
    2. ',' → logprob: -1.1773765087127686
    3. ' *' → logprob: -3.5523765087127686
    4. ' if' → logprob: -3.9273765087127686
    5. '-' → logprob: -4.802376747131348
    6. '**' → logprob: -4.802376747131348
    7. ' +' → logprob: -4.927376747131348
    8. '+' → logprob: -4.927376747131348
    9. '*' → logprob: -5.177376747131348
    10. ' :' → logprob: -5.427376747131348

Token 89: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7685722708702087
    2. ' y' → logprob: -0.7685722708702087
    3. '(y' → logprob: -3.7685723304748535
    4. ' (' → logprob: -4.1435723304748535
    5. 'z' → logprob: -4.8935723304748535
    6. '(' → logprob: -5.3935723304748535
    7. '1' → logprob: -5.7685723304748535
    8. ' ' → logprob: -6.1435723304748535
    9. '[' → logprob: -6.3935723304748535
    10. ' z' → logprob: -6.5185723304748535

Token 90: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6102119088172913
    2. '+' → logprob: -1.7352118492126465
    3. ' *' → logprob: -2.1102118492126465
    4. '*' → logprob: -2.4852118492126465
    5. ' -' → logprob: -3.3602118492126465
    6. '-' → logprob: -4.1102118492126465
    7. ' if' → logprob: -4.6102118492126465
    8. ')' → logprob: -5.2352118492126465
    9. ' ' → logprob: -6.1102118492126465
    10. 'if' → logprob: -6.3602118492126465

Token 91: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.2237187772989273
    2. ' z' → logprob: -1.9737187623977661
    3. '2' → logprob: -3.7237188816070557
    4. '1' → logprob: -3.8487188816070557
    5. ' ' → logprob: -4.973718643188477
    6. ' min' → logprob: -5.973718643188477
    7. ' (' → logprob: -6.098718643188477
    8. 'min' → logprob: -6.723718643188477
    9. '(' → logprob: -7.473718643188477
    10. '(z' → logprob: -7.848718643188477

Token 92: ')((' (ID: 31986)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.4913422465324402
    2. ')' → logprob: -0.9913422465324402
    3. ')(
' → logprob: -5.116342067718506
    4. '(' → logprob: -5.616342067718506
    5. ' )' → logprob: -6.116342067718506
    6. ')((' → logprob: -6.616342067718506
    7. '(n' → logprob: -7.116342067718506
    8. ' )(' → logprob: -7.366342067718506
    9. ' ' → logprob: -7.741342067718506
    10. ')(__' → logprob: -7.866342067718506

Token 93: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5074199438095093
    2. 'k' → logprob: -1.6324199438095093
    3. ' n' → logprob: -2.382420063018799
    4. '1' → logprob: -3.257420063018799
    5. ' k' → logprob: -4.132420063018799
    6. '(n' → logprob: -4.382420063018799
    7. '2' → logprob: -5.007420063018799
    8. '0' → logprob: -5.007420063018799
    9. ' (' → logprob: -5.132420063018799
    10. ' ' → logprob: -5.382420063018799

Token 94: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5291740894317627
    2. ',' → logprob: -2.2791740894317627
    3. '-' → logprob: -2.5291740894317627
    4. ' +' → logprob: -2.6541740894317627
    5. ' *' → logprob: -3.1541740894317627
    6. '+' → logprob: -3.2791740894317627
    7. ')' → logprob: -4.029173851013184
    8. ' ' → logprob: -4.404173851013184
    9. '*' → logprob: -4.654173851013184
    10. ' )' → logprob: -4.904173851013184

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3073078393936157
    2. '2' → logprob: -1.5573078393936157
    3. 'k' → logprob: -3.682307720184326
    4. '3' → logprob: -4.057307720184326
    5. ' ' → logprob: -4.682307720184326
    6. ' k' → logprob: -7.432307720184326
    7. 'i' → logprob: -7.557307720184326
    8. ')' → logprob: -8.682308197021484
    9. '(' → logprob: -8.807308197021484
    10. ' (' → logprob: -9.432308197021484

Token 96: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5847434401512146
    2. ',' → logprob: -1.0847434997558594
    3. '),' → logprob: -2.7097434997558594
    4. ' ,' → logprob: -3.9597434997558594
    5. ' )' → logprob: -4.834743499755859
    6. ' ),' → logprob: -5.959743499755859
    7. ')*' → logprob: -6.334743499755859
    8. ')//' → logprob: -6.459743499755859
    9. ' -' → logprob: -7.084743499755859
    10. '//' → logprob: -7.334743499755859

Token 97: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1728779077529907
    2. '1' → logprob: -1.4228779077529907
    3. '2' → logprob: -2.297877788543701
    4. ' k' → logprob: -2.422877788543701
    5. '(n' → logprob: -2.547877788543701
    6. ' ' → logprob: -2.547877788543701
    7. '(k' → logprob: -3.297877788543701
    8. ' (' → logprob: -3.547877788543701
    9. '0' → logprob: -4.047877788543701
    10. '3' → logprob: -4.922877788543701

Token 98: '_max' (ID: 13731)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003198273479938507
    2. ')' → logprob: -6.253198146820068
    3. ' ,' → logprob: -7.878198146820068
    4. ',)' → logprob: -8.253198623657227
    5. ',n' → logprob: -8.753198623657227
    6. '-' → logprob: -9.378198623657227
    7. ' -' → logprob: -9.503198623657227
    8. ',k' → logprob: -9.503198623657227
    9. '*' → logprob: -10.378198623657227
    10. '+' → logprob: -10.378198623657227

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003958363085985184
    2. ' ,' → logprob: -5.878958225250244
    3. ',k' → logprob: -7.003958225250244
    4. ',n' → logprob: -9.128958702087402
    5. ')' → logprob: -10.753958702087402
    6. ' -' → logprob: -11.003958702087402
    7. ' ' → logprob: -11.128958702087402
    8. '   ' → logprob: -11.378958702087402
    9. '-' → logprob: -11.878958702087402
    10. '+' → logprob: -12.253958702087402

Token 100: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.020601682364940643
    2. ' k' → logprob: -3.895601749420166
    3. ' ' → logprob: -11.020601272583008
    4. ')' → logprob: -12.145601272583008
    5. ' (' → logprob: -12.145601272583008
    6. '2' → logprob: -12.145601272583008
    7. '(' → logprob: -12.395601272583008
    8. '0' → logprob: -12.520601272583008
    9. '   ' → logprob: -12.770601272583008
    10. '1' → logprob: -12.895601272583008

Token 101: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000543261703569442
    2. ' )' → logprob: -8.000543594360352
    3. '))' → logprob: -9.125543594360352
    4. '+' → logprob: -10.750543594360352
    5. '**' → logprob: -11.000543594360352
    6. ')
' → logprob: -11.375543594360352
    7. ')`' → logprob: -11.625543594360352
    8. ')))' → logprob: -12.000543594360352
    9. '*' → logprob: -12.625543594360352
    10. ' ' → logprob: -12.625543594360352

Token 102: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.43160125613212585
    2. '(' → logprob: -1.0566012859344482
    3. '(k' → logprob: -6.306601047515869
    4. '()' → logprob: -7.681601047515869
    5. '('' → logprob: -8.806601524353027
    6. '((' → logprob: -9.056601524353027
    7. '(n' → logprob: -9.181601524353027
    8. '(len' → logprob: -9.806601524353027
    9. 'm' → logprob: -10.056601524353027
    10. '(
' → logprob: -10.681601524353027

Token 104: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004231667553540319
    2. ' )' → logprob: -8.375423431396484
    3. '-' → logprob: -9.500423431396484
    4. '+' → logprob: -10.125423431396484
    5. '))' → logprob: -10.250423431396484
    6. ',' → logprob: -12.250423431396484
    7. '//' → logprob: -12.500423431396484
    8. '*' → logprob: -12.500423431396484
    9. ' -' → logprob: -12.500423431396484
    10. ')`' → logprob: -12.750423431396484

Token 105: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15365059673786163
    2. ' ' → logprob: -3.2786505222320557
    3. ' )' → logprob: -3.9036505222320557
    4. '())' → logprob: -3.9036505222320557
    5. '+' → logprob: -4.653650760650635
    6. '()' → logprob: -4.653650760650635
    7. '**' → logprob: -4.778650760650635
    8. '(' → logprob: -4.903650760650635
    9. '(n' → logprob: -5.153650760650635
    10. '\n' → logprob: -5.153650760650635

Token 106: ' Star' (ID: 11307)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7070100903511047
    2. ')' → logprob: -1.08201003074646
    3. ' )' → logprob: -1.83201003074646
    4. '<|end|>' → logprob: -5.707010269165039
    5. 'n' → logprob: -6.707010269165039
    6. '(' → logprob: -7.707010269165039
    7. '=' → logprob: -8.082010269165039
    8. '_' → logprob: -8.332010269165039
    9. ' n' → logprob: -8.457010269165039
    10. ',' → logprob: -8.457010269165039

Token 107: ' edges' (ID: 22569)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0511322021484375
    2. 's' → logprob: -1.4261322021484375
    3. 't' → logprob: -1.5511322021484375
    4. ' ' → logprob: -2.6761322021484375
    5. '*' → logprob: -3.3011322021484375
    6. '<|end|>' → logprob: -4.0511322021484375
    7. ' t' → logprob: -4.6761322021484375
    8. ' *' → logprob: -4.8011322021484375
    9. 'ts' → logprob: -5.3011322021484375
    10. 'token' → logprob: -5.3011322021484375

Token 108: ' using' (ID: 2360)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: ' a' (ID: 261)
  Prédit: ' chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chain' → logprob: -0.2745111882686615
    2. 'chain' → logprob: -1.5245112180709839
    3. ' count' → logprob: -5.149511337280273
    4. 'count' → logprob: -5.399511337280273
    5. ' is' → logprob: -5.899511337280273
    6. ' range' → logprob: -6.649511337280273
    7. 'com' → logprob: -6.649511337280273
    8. 'range' → logprob: -6.899511337280273
    9. 'is' → logprob: -7.024511337280273
    10. '(chain' → logprob: -7.024511337280273

Token 110: ' map' (ID: 4014)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.9788298606872559
    2. 'count' → logprob: -1.6038298606872559
    3. 'range' → logprob: -1.7288298606872559
    4. 'repeat' → logprob: -1.8538298606872559
    5. ' chain' → logprob: -3.103829860687256
    6. 'n' → logprob: -4.853829860687256
    7. 'com' → logprob: -4.853829860687256
    8. 'for' → logprob: -5.853829860687256
    9. '(chain' → logprob: -6.353829860687256
    10. ' range' → logprob: -6.353829860687256

Token 111: ' &' (ID: 827)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.8682893514633179
    2. '(lambda' → logprob: -1.3682893514633179
    3. 'range' → logprob: -1.9932893514633179
    4. '(map' → logprob: -3.2432894706726074
    5. '(range' → logprob: -3.2432894706726074
    6. '(' → logprob: -3.2432894706726074
    7. 'chain' → logprob: -3.7432894706726074
    8. ')' → logprob: -4.493289470672607
    9. 'lambda' → logprob: -5.118289470672607
    10. 'star' → logprob: -5.368289470672607

Token 112: ' lambda' (ID: 27871)
  Prédit: 'filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filter' → logprob: -0.11365195363759995
    2. ' filter' → logprob: -3.113651990890503
    3. 'chain' → logprob: -3.238651990890503
    4. ' chain' → logprob: -4.113651752471924
    5. 'lambda' → logprob: -5.363651752471924
    6. ' lambda' → logprob: -6.238651752471924
    7. 'range' → logprob: -8.613652229309082
    8. 'repeat' → logprob: -9.113652229309082
    9. '(lambda' → logprob: -9.238652229309082
    10. 'zip' → logprob: -9.613652229309082

Token 113: ' with' (ID: 483)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.7986200451850891
    2. 'range' → logprob: -1.0486199855804443
    3. '(lambda' → logprob: -2.6736199855804443
    4. 'chain' → logprob: -2.7986199855804443
    5. 'lambda' → logprob: -3.7986199855804443
    6. ')' → logprob: -4.673620223999023
    7. 'filter' → logprob: -5.048620223999023
    8. '(' → logprob: -5.173620223999023
    9. ' map' → logprob: -5.298620223999023
    10. '(range' → logprob: -5.423620223999023

Token 114: ' unpack' (ID: 61704)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -1.011027455329895
    2. ' chain' → logprob: -1.261027455329895
    3. 'filter' → logprob: -1.886027455329895
    4. 'lambda' → logprob: -2.8860273361206055
    5. ' filter' → logprob: -3.6360273361206055
    6. 'zip' → logprob: -3.7610273361206055
    7. 'range' → logprob: -3.7610273361206055
    8. ' lambda' → logprob: -4.0110273361206055
    9. 'repeat' → logprob: -4.1360273361206055
    10. 'map' → logprob: -4.3860273361206055

Token 115: 'ing' (ID: 289)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.48813968896865845
    2. ' map' → logprob: -1.6131396293640137
    3. 'range' → logprob: -2.8631396293640137
    4. 'chain' → logprob: -3.4881396293640137
    5. 'zip' → logprob: -3.6131396293640137
    6. ' zip' → logprob: -4.238139629364014
    7. ' chain' → logprob: -4.488139629364014
    8. 'lambda' → logprob: -4.863139629364014
    9. ' range' → logprob: -4.988139629364014
    10. 'list' → logprob: -5.113139629364014

Token 116: '
' (ID: 198)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.507698655128479
    2. 'chain' → logprob: -1.882698655128479
    3. 'edges' → logprob: -2.2576985359191895
    4. 'range' → logprob: -2.5076985359191895
    5. 'print' → logprob: -4.1326985359191895
    6. 'star' → logprob: -4.3826985359191895
    7. 'zip' → logprob: -5.3826985359191895
    8. ' edges' → logprob: -5.7576985359191895
    9. ')' → logprob: -6.2576985359191895
    10. '_' → logprob: -6.2576985359191895

Token 117: '_' (ID: 62)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7715394496917725
    2. 'map' → logprob: -1.3965394496917725
    3. 'list' → logprob: -1.8965394496917725
    4. 'edges' → logprob: -2.7715394496917725
    5. 'star' → logprob: -2.8965394496917725
    6. 'chain' → logprob: -4.521539688110352
    7. 'for' → logprob: -6.021539688110352
    8. ' edges' → logprob: -6.146539688110352
    9. 'stars' → logprob: -6.646539688110352
    10. 'm' → logprob: -7.396539688110352

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08478329330682755
    2. ' =' → logprob: -2.7097833156585693
    3. 'edges' → logprob: -5.58478307723999
    4. 'map' → logprob: -5.58478307723999
    5. ',' → logprob: -6.33478307723999
    6. '_=' → logprob: -6.58478307723999
    7. '_' → logprob: -6.95978307723999
    8. '_edges' → logprob: -7.08478307723999
    9. 'star' → logprob: -7.70978307723999
    10. '(' → logprob: -8.334783554077148

Token 119: ' list' (ID: 1562)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0784682035446167
    2. 'list' → logprob: -2.8284683227539062
    3. ' map' → logprob: -4.328468322753906
    4. ' list' → logprob: -6.703468322753906
    5. 'print' → logprob: -6.953468322753906
    6. 'chain' → logprob: -7.578468322753906
    7. 'lambda' → logprob: -8.703468322753906
    8. 'zip' → logprob: -9.828468322753906
    9. '(map' → logprob: -9.953468322753906
    10. 'range' → logprob: -10.453468322753906

Token 120: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0008581006550230086
    2. '(' → logprob: -7.125858306884766
    3. '(chain' → logprob: -10.375858306884766
    4. '(
' → logprob: -11.875858306884766
    5. '(zip' → logprob: -12.125858306884766
    6. 'map' → logprob: -12.250858306884766
    7. '(m' → logprob: -13.500858306884766
    8. '(st' → logprob: -13.750858306884766
    9. '(filter' → logprob: -14.000858306884766
    10. '((' → logprob: -14.250858306884766

Token 121: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0001415618316968903
    2. '(' → logprob: -9.125141143798828
    3. '((' → logprob: -10.500141143798828
    4. '(l' → logprob: -13.125141143798828
    5. '(
' → logprob: -13.250141143798828
    6. ' (' → logprob: -14.875141143798828
    7. 'lambda' → logprob: -15.500141143798828
    8. '(f' → logprob: -15.750141143798828
    9. '   ' → logprob: -16.125141143798828
    10. '(None' → logprob: -16.500141143798828

Token 122: ' i' (ID: 575)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -1.3597437143325806
    2. 'lambda' → logprob: -1.6097437143325806
    3. ' e' → logprob: -2.484743595123291
    4. 'e' → logprob: -2.734743595123291
    5. ' u' → logprob: -2.734743595123291
    6. '(lambda' → logprob: -3.109743595123291
    7. 'u' → logprob: -3.109743595123291
    8. ' x' → logprob: -3.359743595123291
    9. 'a' → logprob: -3.484743595123291
    10. ' edges' → logprob: -3.484743595123291

Token 123: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0332292802631855
    2. ',' → logprob: -3.783229351043701
    3. ' :' → logprob: -5.033229351043701
    4. '=lambda' → logprob: -7.033229351043701
    5. '=' → logprob: -7.158229351043701
    6. 'lambda' → logprob: -7.283229351043701
    7. ' lambda' → logprob: -8.408228874206543
    8. ' i' → logprob: -8.408228874206543
    9. ',i' → logprob: -8.908228874206543
    10. ' ,' → logprob: -8.908228874206543

Token 124: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20644982159137726
    2. ' print' → logprob: -2.4564497470855713
    3. '(i' → logprob: -3.4564497470855713
    4. '(n' → logprob: -4.08144998550415
    5. '(lambda' → logprob: -4.20644998550415
    6. '(print' → logprob: -4.45644998550415
    7. ' (' → logprob: -4.95644998550415
    8. 'lambda' → logprob: -5.95644998550415
    9. '__' → logprob: -6.33144998550415
    10. ' i' → logprob: -6.33144998550415

Token 125: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.25649401545524597
    2. '((' → logprob: -2.2564940452575684
    3. '(*' → logprob: -2.5064940452575684
    4. '(' → logprob: -3.3814940452575684
    5. '(n' → logprob: -6.256494045257568
    6. '(*(' → logprob: -6.381494045257568
    7. '((*' → logprob: -7.256494045257568
    8. '(f' → logprob: -7.381494045257568
    9. '(((' → logprob: -8.63149356842041
    10. '(
' → logprob: -8.75649356842041

Token 126: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5989933013916016
    2. '(i' → logprob: -1.4739933013916016
    3. '*i' → logprob: -2.3489933013916016
    4. ' i' → logprob: -3.3489933013916016
    5. '*' → logprob: -3.5989933013916016
    6. '0' → logprob: -4.223993301391602
    7. '(' → logprob: -4.473993301391602
    8. '(n' → logprob: -4.973993301391602
    9. '*n' → logprob: -5.348993301391602
    10. ' ' → logprob: -5.473993301391602

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008103154599666595
    2. ',i' → logprob: -5.133103370666504
    3. ' ,' → logprob: -6.258103370666504
    4. ',
' → logprob: -9.383103370666504
    5. '+' → logprob: -9.633103370666504
    6. '+i' → logprob: -10.508103370666504
    7. '   ' → logprob: -10.758103370666504
    8. ' +' → logprob: -11.383103370666504
    9. ',f' → logprob: -12.008103370666504
    10. ',end' → logprob: -12.383103370666504

Token 128: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003279906464740634
    2. ' i' → logprob: -5.878279685974121
    3. ',' → logprob: -8.003279685974121
    4. '2' → logprob: -10.003279685974121
    5. ',i' → logprob: -10.003279685974121
    6. ' ' → logprob: -11.628279685974121
    7. '   ' → logprob: -11.753279685974121
    8. '1' → logprob: -12.003279685974121
    9. '  ' → logprob: -12.128279685974121
    10. ' ,' → logprob: -12.503279685974121

Token 129: '),' (ID: 936)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.031481027603149414
    2. ' +' → logprob: -3.9064810276031494
    3. '),' → logprob: -4.53148078918457
    4. ')' → logprob: -9.78148078918457
    5. ' ),' → logprob: -10.90648078918457
    6. '+i' → logprob: -11.40648078918457
    7. ',' → logprob: -11.65648078918457
    8. '   ' → logprob: -12.03148078918457
    9. ')))' → logprob: -13.03148078918457
    10. ' ' → logprob: -13.15648078918457

Token 130: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10209941864013672
    2. ' range' → logprob: -2.3520994186401367
    3. 'is' → logprob: -6.477099418640137
    4. 'chain' → logprob: -8.727099418640137
    5. ' is' → logprob: -8.852099418640137
    6. '(range' → logprob: -11.102099418640137
    7. '	range' → logprob: -11.477099418640137
    8. ' chain' → logprob: -12.352099418640137
    9. 'count' → logprob: -12.477099418640137
    10. 'repeat' → logprob: -12.852099418640137

Token 131: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00017314712749794126
    2. '2' → logprob: -8.750173568725586
    3. ',' → logprob: -12.000173568725586
    4. '(n' → logprob: -12.500173568725586
    5. ')' → logprob: -13.250173568725586
    6. ' (' → logprob: -13.500173568725586
    7. 'from' → logprob: -14.500173568725586
    8. '(
' → logprob: -15.000173568725586
    9. ' ' → logprob: -15.250173568725586
    10. '```' → logprob: -15.750173568725586

Token 132: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0018758014775812626
    2. ' ' → logprob: -6.376875877380371
    3. ',' → logprob: -9.251875877380371
    4. 'n' → logprob: -10.376875877380371
    5. '(' → logprob: -11.126875877380371
    6. ')' → logprob: -11.751875877380371
    7. '3' → logprob: -11.751875877380371
    8. '```' → logprob: -12.751875877380371
    9. ' ,' → logprob: -13.439375877380371
    10. '_' → logprob: -13.501875877380371

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003883215133100748
    2. ',n' → logprob: -6.003883361816406
    3. ' ,' → logprob: -6.628883361816406
    4. '(n' → logprob: -9.753883361816406
    5. ',m' → logprob: -11.753883361816406
    6. ',k' → logprob: -11.753883361816406
    7. ',
' → logprob: -12.628883361816406
    8. 'n' → logprob: -12.753883361816406
    9. '(),' → logprob: -14.003883361816406
    10. 'm' → logprob: -14.378883361816406

Token 134: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6563100218772888
    2. 'n' → logprob: -0.7813100218772888
    3. '2' → logprob: -4.031310081481934
    4. 'k' → logprob: -6.406310081481934
    5. ' n' → logprob: -6.906310081481934
    6. ' m' → logprob: -7.281310081481934
    7. '3' → logprob: -7.531310081481934
    8. 'min' → logprob: -7.656310081481934
    9. '1' → logprob: -7.781310081481934
    10. '(n' → logprob: -8.406310081481934

Token 135: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804539144039154
    2. ' +' → logprob: -3.2880454063415527
    3. '+
' → logprob: -14.038044929504395
    4. '))' → logprob: -14.288044929504395
    5. '+k' → logprob: -14.413044929504395
    6. ')+' → logprob: -15.288044929504395
    7. '()+' → logprob: -15.663044929504395
    8. ' ' → logprob: -15.663044929504395
    9. '+n' → logprob: -15.663044929504395
    10. '```' → logprob: -15.788044929504395

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5570885807392187e-05
    2. '2' → logprob: -11.500015258789062
    3. ' ' → logprob: -12.125015258789062
    4. '))' → logprob: -18.375015258789062
    5. '   ' → logprob: -18.500015258789062
    6. '```' → logprob: -18.875015258789062
    7. '  ' → logprob: -19.250015258789062
    8. ')))' → logprob: -19.250015258789062
    9. ')' → logprob: -19.812515258789062
    10. ',' → logprob: -19.875015258789062

Token 137: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.006425694562494755
    2. ')' → logprob: -5.256425857543945
    3. '))' → logprob: -6.756425857543945
    4. '+' → logprob: -11.256425857543945
    5. ')));' → logprob: -12.131425857543945
    6. '))))' → logprob: -12.381425857543945
    7. ')))
' → logprob: -13.631425857543945
    8. ' ' → logprob: -13.881425857543945
    9. '),' → logprob: -14.881425857543945
    10. '1' → logprob: -14.881425857543945

Token 138: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11618908494710922
    2. '<|end|>' → logprob: -2.2411890029907227
    3. ' ' → logprob: -6.866189002990723
    4. ' )' → logprob: -7.366189002990723
    5. ',' → logprob: -7.866189002990723
    6. '#' → logprob: -8.116189002990723
    7. '(' → logprob: -8.741189002990723
    8. '<|end|>' → logprob: -8.866189002990723
    9. '```' → logprob: -9.116189002990723
    10. '
' → logprob: -9.241189002990723

Token 139: ' Exhaust' (ID: 161893)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6911920309066772
    2. 'edges' → logprob: -1.9411920309066772
    3. '_' → logprob: -2.441192150115967
    4. 'remaining' → logprob: -2.566192150115967
    5. 'rem' → logprob: -2.691192150115967
    6. 'if' → logprob: -2.816192150115967
    7. 'count' → logprob: -2.816192150115967
    8. 'rest' → logprob: -3.066192150115967
    9. 'def' → logprob: -3.441192150115967
    10. 'from' → logprob: -3.566192150115967

Token 140: 'ive' (ID: 585)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.8123522400856018
    2. '(chain' → logprob: -1.187352180480957
    3. '_' → logprob: -1.937352180480957
    4. '(' → logprob: -3.437352180480957
    5. 'is' → logprob: -3.812352180480957
    6. 'list' → logprob: -4.062352180480957
    7. ' chain' → logprob: -5.312352180480957
    8. 'map' → logprob: -5.437352180480957
    9. '(iter' → logprob: -5.562352180480957
    10. '(is' → logprob: -5.937352180480957

Token 141: ' non' (ID: 2893)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48352622985839844
    2. 'chain' → logprob: -2.1085262298583984
    3. 'list' → logprob: -2.4835262298583984
    4. '_' → logprob: -2.6085262298583984
    5. ' for' → logprob: -2.9835262298583984
    6. 'search' → logprob: -3.7335262298583984
    7. '...' → logprob: -5.108526229858398
    8. ' chain' → logprob: -5.233526229858398
    9. '(' → logprob: -5.608526229858398
    10. '(chain' → logprob: -6.233526229858398

Token 142: '-star' (ID: 32191)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.41474187374115
    2. 'star' → logprob: -1.41474187374115
    3. '_star' → logprob: -1.66474187374115
    4. 'local' → logprob: -1.91474187374115
    5. '_edges' → logprob: -2.4147419929504395
    6. 'com' → logprob: -4.2897419929504395
    7. 'def' → logprob: -4.5397419929504395
    8. '-' → logprob: -4.9147419929504395
    9. 'edges' → logprob: -4.9147419929504395
    10. 'empty' → logprob: -5.2897419929504395

Token 143: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.6737150549888611
    2. '_edges' → logprob: -1.2987151145935059
    3. 'chain' → logprob: -2.798715114593506
    4. '_' → logprob: -3.173715114593506
    5. ' edges' → logprob: -3.173715114593506
    6. 'com' → logprob: -3.548715114593506
    7. 'list' → logprob: -5.048715114593506
    8. 'chains' → logprob: -5.423715114593506
    9. ' chain' → logprob: -5.548715114593506
    10. 'ed' → logprob: -5.673715114593506

Token 144: ' via' (ID: 4493)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16063524782657623
    2. 'for' → logprob: -2.285635232925415
    3. 'list' → logprob: -3.910635232925415
    4. 'chain' → logprob: -5.035635471343994
    5. 'edges' → logprob: -5.535635471343994
    6. '_edges' → logprob: -6.160635471343994
    7. ' for' → logprob: -6.160635471343994
    8. '(' → logprob: -6.285635471343994
    9. '_=' → logprob: -6.285635471343994
    10. '_,' → logprob: -6.660635471343994

Token 145: ' iterator' (ID: 30787)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.09586725383996964
    2. 'for' → logprob: -2.970867156982422
    3. 'list' → logprob: -3.845867156982422
    4. '(chain' → logprob: -5.595867156982422
    5. ' chain' → logprob: -5.845867156982422
    6. '_' → logprob: -5.845867156982422
    7. '(lambda' → logprob: -6.220867156982422
    8. '_chain' → logprob: -6.220867156982422
    9. 'is' → logprob: -6.845867156982422
    10. 'print' → logprob: -6.845867156982422

Token 146: ' games' (ID: 5048)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -1.081155776977539
    2. '_' → logprob: -1.206155776977539
    3. 'edges' → logprob: -2.081155776977539
    4. 'for' → logprob: -3.456155776977539
    5. '_edges' → logprob: -3.706155776977539
    6. 'rest' → logprob: -4.081155776977539
    7. 'com' → logprob: -4.081155776977539
    8. 'it' → logprob: -4.206155776977539
    9. 'i' → logprob: -4.706155776977539
    10. 'non' → logprob: -4.706155776977539

Token 147: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5417059659957886
    2. 'chain' → logprob: -1.9167059659957886
    3. 'for' → logprob: -2.416706085205078
    4. 'edges' → logprob: -2.916706085205078
    5. '_,' → logprob: -4.416706085205078
    6. 'i' → logprob: -4.541706085205078
    7. 'e' → logprob: -4.791706085205078
    8. 'count' → logprob: -4.791706085205078
    9. '(' → logprob: -4.916706085205078
    10. '_edges' → logprob: -5.166706085205078

Token 148: 'edges' (ID: 39127)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.385343462228775
    2. 'edges' → logprob: -2.385343551635742
    3. 'for' → logprob: -3.010343551635742
    4. 'chain' → logprob: -3.885343551635742
    5. 'from' → logprob: -4.260343551635742
    6. 'start' → logprob: -4.385343551635742
    7. 'g' → logprob: -4.385343551635742
    8. 'e' → logprob: -4.510343551635742
    9. '_edges' → logprob: -4.635343551635742
    10. 'i' → logprob: -4.635343551635742

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142006874084473
    2. '=' → logprob: -1.7014200687408447
    3. ',' → logprob: -13.076419830322266
    4. ' =
' → logprob: -13.576419830322266
    5. '_' → logprob: -13.951419830322266
    6. '=
' → logprob: -14.076419830322266
    7. '_=' → logprob: -14.576419830322266
    8. 's' → logprob: -15.326419830322266
    9. ' ' → logprob: -15.451419830322266
    10. ' ' → logprob: -15.951419830322266

Token 150: ' (
' (ID: 4112)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.2172248661518097
    2. 'is' → logprob: -2.0922248363494873
    3. 'list' → logprob: -3.2172248363494873
    4. '(chain' → logprob: -4.217225074768066
    5. '(is' → logprob: -5.592225074768066
    6. ' chain' → logprob: -5.717225074768066
    7. '((' → logprob: -5.967225074768066
    8. 'zip' → logprob: -6.717225074768066
    9. 'filter' → logprob: -6.717225074768066
    10. 'map' → logprob: -6.967225074768066

Token 151: '   ' (ID: 271)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.28018903732299805
    2. '(i' → logprob: -1.780189037322998
    3. '(chain' → logprob: -3.655189037322998
    4. '((' → logprob: -4.280189037322998
    5. 'is' → logprob: -5.030189037322998
    6. 'i' → logprob: -5.155189037322998
    7. '(x' → logprob: -5.655189037322998
    8. 'tuple' → logprob: -5.905189037322998
    9. '   ' → logprob: -6.405189037322998
    10. 'pair' → logprob: -6.530189037322998

Token 152: ' (' (ID: 350)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.6942928433418274
    2. '(i' → logprob: -0.9442928433418274
    3. '(chain' → logprob: -3.0692927837371826
    4. '((' → logprob: -3.6942927837371826
    5. '(x' → logprob: -5.319293022155762
    6. '(e' → logprob: -5.819293022155762
    7. 'pair' → logprob: -5.944293022155762
    8. '(' (adapté à ' (') → logprob: -6.069293022155762
    9. 'is' → logprob: -6.069293022155762
    10. 'zip' → logprob: -6.194293022155762

Token 153: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1522100269794464
    2. 'a' → logprob: -2.402209997177124
    3. 'u' → logprob: -3.277209997177124
    4. 'x' → logprob: -5.027210235595703
    5. 'j' → logprob: -5.652210235595703
    6. '(i' → logprob: -7.152210235595703
    7. 'lambda' → logprob: -7.527210235595703
    8. ')' → logprob: -8.027210235595703
    9. '   ' → logprob: -8.152210235595703
    10. 'b' → logprob: -8.152210235595703

Token 154: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04333964362740517
    2. '+' → logprob: -3.418339729309082
    3. ' +' → logprob: -5.793339729309082
    4. ',j' → logprob: -5.918339729309082
    5. '   ' → logprob: -6.293339729309082
    6. 'j' → logprob: -6.668339729309082
    7. ' ,' → logprob: -7.793339729309082
    8. 'for' → logprob: -9.418339729309082
    9. ' for' → logprob: -9.668339729309082
    10. ' j' → logprob: -10.168339729309082

Token 155: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4883641302585602
    2. ' for' → logprob: -1.2383641004562378
    3. 'for' → logprob: -2.3633642196655273
    4. ')
' → logprob: -6.488364219665527
    5. '   ' → logprob: -7.363364219665527
    6. '
' → logprob: -9.738364219665527
    7. ' )' → logprob: -9.738364219665527
    8. ' ' → logprob: -10.613364219665527
    9. '    ' → logprob: -10.613364219665527
    10. '  ' → logprob: -10.738364219665527

Token 156: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20176784694194794
    2. ' for' → logprob: -1.7017678022384644
    3. '   ' → logprob: -8.076767921447754
    4. ')' → logprob: -10.451767921447754
    5. '
' → logprob: -12.451767921447754
    6. '	for' → logprob: -12.576767921447754
    7. '    ' → logprob: -12.951767921447754
    8. ' ' → logprob: -13.076767921447754
    9. '  ' → logprob: -13.826767921447754
    10. '    
' → logprob: -14.201767921447754

Token 157: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38115453720092773
    2. ' i' → logprob: -1.2561545372009277
    3. 'j' → logprob: -3.8811545372009277
    4. ' j' → logprob: -4.631154537200928
    5. '   ' → logprob: -6.506154537200928
    6. ' ' → logprob: -9.006155014038086
    7. '  ' → logprob: -10.256155014038086
    8. '    ' → logprob: -10.631155014038086
    9. ' range' → logprob: -11.006155014038086
    10. 'n' → logprob: -11.006155014038086

Token 158: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.18008309602737427
    2. ' in' → logprob: -1.8050830364227295
    3. ',' → logprob: -8.305083274841309
    4. ')' → logprob: -10.805083274841309
    5. '   ' → logprob: -11.055083274841309
    6. ' ' → logprob: -11.180083274841309
    7. 'range' → logprob: -11.430083274841309
    8. '```' → logprob: -11.805083274841309
    9. '  ' → logprob: -12.180083274841309
    10. 'i' → logprob: -12.555083274841309

Token 159: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002419298980385065
    2. ' range' → logprob: -6.252419471740723
    3. 'chain' → logprob: -8.127419471740723
    4. 'count' → logprob: -8.627419471740723
    5. 'is' → logprob: -12.002419471740723
    6. 'repeat' → logprob: -13.002419471740723
    7. '   ' → logprob: -13.377419471740723
    8. ' ' → logprob: -13.877419471740723
    9. '	range' → logprob: -14.127419471740723
    10. '  ' → logprob: -14.377419471740723

Token 160: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005393957253545523
    2. '2' → logprob: -5.255393981933594
    3. ' ' → logprob: -9.505393981933594
    4. '   ' → logprob: -10.005393981933594
    5. '1' → logprob: -12.005393981933594
    6. ' (' → logprob: -12.005393981933594
    7. ')' → logprob: -12.005393981933594
    8. 'from' → logprob: -12.255393981933594
    9. ',' → logprob: -12.380393981933594
    10. '(
' → logprob: -12.505393981933594

Token 161: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7954958821064793e-05
    2. '1' → logprob: -11.625018119812012
    3. ' ' → logprob: -11.875018119812012
    4. '(' → logprob: -13.875018119812012
    5. '3' → logprob: -14.875018119812012
    6. ')' → logprob: -15.500018119812012
    7. '
' → logprob: -16.000017166137695
    8. '   ' → logprob: -16.125017166137695
    9. 'n' → logprob: -16.375017166137695
    10. '

' → logprob: -17.125017166137695

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008981835097074509
    2. ',n' → logprob: -4.758981704711914
    3. ' ,' → logprob: -8.008981704711914
    4. '+' → logprob: -11.008981704711914
    5. '   ' → logprob: -11.258981704711914
    6. 'n' → logprob: -12.758981704711914
    7. ' +' → logprob: -14.508981704711914
    8. ' ' → logprob: -14.633981704711914
    9. '  ' → logprob: -14.883981704711914
    10. '    ' → logprob: -15.258981704711914

Token 163: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002969703928101808
    2. ' n' → logprob: -8.125296592712402
    3. 'k' → logprob: -15.250296592712402
    4. '   ' → logprob: -15.500296592712402
    5. ' ' → logprob: -16.00029754638672
    6. '  ' → logprob: -16.12529754638672
    7. '	n' → logprob: -16.25029754638672
    8. '(n' → logprob: -16.50029754638672
    9. '(' → logprob: -17.37529754638672
    10. '    ' → logprob: -17.50029754638672

Token 164: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06260927021503448
    2. '+' → logprob: -2.8126091957092285
    3. '-' → logprob: -8.062609672546387
    4. ' +' → logprob: -8.937609672546387
    5. ' )' → logprob: -9.187609672546387
    6. '   ' → logprob: -10.562609672546387
    7. 'n' → logprob: -11.312609672546387
    8. '):
' → logprob: -11.437609672546387
    9. ')
' → logprob: -11.812609672546387
    10. ' ' → logprob: -11.937609672546387

Token 165: '         ' (ID: 983)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4636647403240204
    2. ' for' → logprob: -1.0886647701263428
    3. ',' → logprob: -4.088664531707764
    4. '   ' → logprob: -4.338664531707764
    5. '+' → logprob: -5.713664531707764
    6. '    ' → logprob: -7.713664531707764
    7. '	for' → logprob: -8.088665008544922
    8. ')' → logprob: -9.213665008544922
    9. '       ' → logprob: -9.213665008544922
    10. '  ' → logprob: -9.588665008544922

Token 166: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.13603398203849792
    2. ' for' → logprob: -2.1360340118408203
    3. '   ' → logprob: -5.13603401184082
    4. '         ' → logprob: -7.13603401184082
    5. '    ' → logprob: -7.76103401184082
    6. '          ' → logprob: -7.76103401184082
    7. ',' → logprob: -8.01103401184082
    8. '      ' → logprob: -8.01103401184082
    9. '     ' → logprob: -8.13603401184082
    10. '       ' → logprob: -8.63603401184082

Token 167: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011067037470638752
    2. ' j' → logprob: -4.511066913604736
    3. '   ' → logprob: -11.261067390441895
    4. '    ' → logprob: -12.511067390441895
    5. '  ' → logprob: -13.761067390441895
    6. ' ' → logprob: -14.886067390441895
    7. '       ' → logprob: -15.011067390441895
    8. '        ' → logprob: -15.261067390441895
    9. 'range' → logprob: -15.511067390441895
    10. '     ' → logprob: -15.886067390441895

Token 168: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06843779236078262
    2. 'in' → logprob: -3.0684378147125244
    3. 'range' → logprob: -3.9434378147125244
    4. ' range' → logprob: -8.693437576293945
    5. '(range' → logprob: -10.568437576293945
    6. '   ' → logprob: -10.818437576293945
    7. ')' → logprob: -11.068437576293945
    8. '=' → logprob: -11.443437576293945
    9. ' ' → logprob: -11.693437576293945
    10. ' i' → logprob: -12.568437576293945

Token 169: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004625937435775995
    2. ' range' → logprob: -5.3796257972717285
    3. '(range' → logprob: -13.004626274108887
    4. 'is' → logprob: -13.379626274108887
    5. 'chain' → logprob: -13.629626274108887
    6. '   ' → logprob: -15.754626274108887
    7. 'count' → logprob: -15.754626274108887
    8. 'i' → logprob: -15.879626274108887
    9. ' ' → logprob: -16.37962532043457
    10. '  ' → logprob: -16.75462532043457

Token 170: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.1398757123970427e-05
    2. '(' → logprob: -11.500011444091797
    3. '((' → logprob: -14.000011444091797
    4. ' (' → logprob: -15.125011444091797
    5. '   ' → logprob: -16.875011444091797
    6. 'i' → logprob: -18.000011444091797
    7. '(
' → logprob: -18.625011444091797
    8. ' ' → logprob: -19.000011444091797
    9. '(I' → logprob: -19.750011444091797
    10. '(ii' → logprob: -19.750011444091797

Token 171: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004576919134706259
    2. ' +' → logprob: -5.504576683044434
    3. '1' → logprob: -7.754576683044434
    4. '+i' → logprob: -11.129576683044434
    5. '   ' → logprob: -11.629576683044434
    6. '2' → logprob: -11.629576683044434
    7. '+n' → logprob: -11.754576683044434
    8. ' ' → logprob: -11.754576683044434
    9. ',' → logprob: -12.004576683044434
    10. '()+' → logprob: -12.379576683044434

Token 172: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4177102744579315
    2. '(n' → logprob: -1.792710304260254
    3. '1' → logprob: -3.292710304260254
    4. ',' → logprob: -3.292710304260254
    5. '3' → logprob: -3.417710304260254
    6. '(i' → logprob: -3.667710304260254
    7. 'n' → logprob: -3.917710304260254
    8. '(' → logprob: -4.667710304260254
    9. '2' → logprob: -5.167710304260254
    10. ',n' → logprob: -5.542710304260254

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00868063885718584
    2. ',n' → logprob: -4.758680820465088
    3. ' ,' → logprob: -9.88368034362793
    4. 'n' → logprob: -12.63368034362793
    5. ',i' → logprob: -12.75868034362793
    6. '   ' → logprob: -13.00868034362793
    7. '1' → logprob: -13.13368034362793
    8. '2' → logprob: -13.25868034362793
    9. '(n' → logprob: -13.38368034362793
    10. '_,' → logprob: -14.00868034362793

Token 174: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0028218738734722137
    2. ' n' → logprob: -5.877821922302246
    3. '   ' → logprob: -11.627821922302246
    4. '(n' → logprob: -12.502821922302246
    5. ' ' → logprob: -13.377821922302246
    6. '	n' → logprob: -14.127821922302246
    7. '  ' → logprob: -14.627821922302246
    8. 'min' → logprob: -14.627821922302246
    9. '    ' → logprob: -15.002821922302246
    10. ',' → logprob: -15.502821922302246

Token 175: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.670925358776003e-05
    2. ' +' → logprob: -9.875066757202148
    3. ')' → logprob: -11.250066757202148
    4. '+i' → logprob: -13.750066757202148
    5. ')+' → logprob: -14.750066757202148
    6. '+)' → logprob: -15.375066757202148
    7. '+j' → logprob: -15.375066757202148
    8. '()+' → logprob: -16.75006675720215
    9. '1' → logprob: -17.12506675720215
    10. '+
' → logprob: -17.25006675720215

Token 176: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3133290708065033
    2. '1' → logprob: -1.3133291006088257
    3. ' +' → logprob: -10.438328742980957
    4. 'i' → logprob: -10.938328742980957
    5. ')+' → logprob: -12.313328742980957
    6. ' ' → logprob: -12.813328742980957
    7. '_plus' → logprob: -12.813328742980957
    8. '+i' → logprob: -13.063328742980957
    9. '()+' → logprob: -13.438328742980957
    10. 'plus' → logprob: -13.563328742980957

Token 177: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005641150055453181
    2. '))' → logprob: -7.500564098358154
    3. ')))' → logprob: -12.125564575195312
    4. ' )' → logprob: -12.875564575195312
    5. '):' → logprob: -14.125564575195312
    6. ')
' → logprob: -14.125564575195312
    7. '<|end|>' → logprob: -14.750564575195312
    8. '   ' → logprob: -15.375564575195312
    9. ')}' → logprob: -15.750564575195312
    10. '())' → logprob: -16.750564575195312

Token 178: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008335703751072288
    2. ' if' → logprob: -7.375833511352539
    3. 'if' → logprob: -8.750833511352539
    4. ' )' → logprob: -10.500833511352539
    5. '   ' → logprob: -11.000833511352539
    6. ')
' → logprob: -13.625833511352539
    7. ' ' → logprob: -14.000833511352539
    8. '       ' → logprob: -14.000833511352539
    9. '))' → logprob: -15.125833511352539
    10. '	if' → logprob: -15.500833511352539

Token 179: 'for' (ID: 1938)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.5990139245986938
    2. 'for' → logprob: -1.7240139245986938
    3. 'next' → logprob: -1.8490139245986938
    4. 'print' → logprob: -2.2240138053894043
    5. '_' → logprob: -2.3490138053894043
    6. 'import' → logprob: -2.7240138053894043
    7. 'result' → logprob: -3.7240138053894043
    8. 'from' → logprob: -3.8490138053894043
    9. 'is' → logprob: -4.349013805389404
    10. ',' → logprob: -4.349013805389404

Token 180: ' u' (ID: 337)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10201072692871094
    2. 'e' → logprob: -2.727010726928711
    3. ' i' → logprob: -4.602010726928711
    4. '_i' → logprob: -5.102010726928711
    5. 'u' → logprob: -5.477010726928711
    6. 'edge' → logprob: -5.727010726928711
    7. '(i' → logprob: -6.227010726928711
    8. '_' → logprob: -6.727010726928711
    9. '_edge' → logprob: -6.852010726928711
    10. ' e' → logprob: -7.352010726928711

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4743257164955139
    2. ',v' → logprob: -0.9743257164955139
    3. ',j' → logprob: -8.849326133728027
    4. ' ,' → logprob: -9.349326133728027
    5. ',_' → logprob: -11.849326133728027
    6. '_,' → logprob: -12.599326133728027
    7. ',u' → logprob: -12.849326133728027
    8. ',w' → logprob: -14.099326133728027
    9. 'v' → logprob: -14.474326133728027
    10. ',d' → logprob: -14.849326133728027

Token 182: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0067156096920371056
    2. ' v' → logprob: -5.006715774536133
    3. '(v' → logprob: -16.631715774536133
    4. 'w' → logprob: -16.631715774536133
    5. 'u' → logprob: -16.881715774536133
    6. '	v' → logprob: -18.131715774536133
    7. 'j' → logprob: -18.131715774536133
    8. ',v' → logprob: -18.381715774536133
    9. '```' → logprob: -18.881715774536133
    10. '_v' → logprob: -19.256715774536133

Token 183: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14268578588962555
    2. 'in' → logprob: -2.017685890197754
    3. '	in' → logprob: -12.392685890197754
    4. '<|end|>' → logprob: -13.642685890197754
    5. '_in' → logprob: -13.767685890197754
    6. ',' → logprob: -13.767685890197754
    7. 'In' → logprob: -13.892685890197754
    8. ' ' → logprob: -14.892685890197754
    9. 'inth' → logprob: -15.267685890197754
    10. '_' → logprob: -15.392685890197754

Token 184: ' is' (ID: 382)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.5759690999984741
    2. 'edges' → logprob: -0.8259690999984741
    3. '(edges' → logprob: -11.200968742370605
    4. '_edges' → logprob: -11.575968742370605
    5. 'chain' → logprob: -13.075968742370605
    6. 'is' → logprob: -13.825968742370605
    7. 'edge' → logprob: -14.075968742370605
    8. '.edges' → logprob: -14.325968742370605
    9. ' is' → logprob: -14.700968742370605
    10. 'Edges' → logprob: -15.325968742370605

Token 185: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.0014335629530251026
    2. '(edges' → logprob: -7.251433372497559
    3. 'lices' → logprob: -8.376433372497559
    4. 'slice' → logprob: -8.626433372497559
    5. 'edges' → logprob: -9.001433372497559
    6. 'ice' → logprob: -9.001433372497559
    7. 'liced' → logprob: -11.376433372497559
    8. '(' → logprob: -11.751433372497559
    9. 'licing' → logprob: -11.751433372497559
    10. 'lace' → logprob: -11.876433372497559

Token 186: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.00016063073417171836
    2. 'edges' → logprob: -8.750160217285156
    3. '(' → logprob: -13.375160217285156
    4. ' edges' → logprob: -14.500160217285156
    5. '(edge' → logprob: -16.500160217285156
    6. '(
' → logprob: -17.875160217285156
    7. '.edges' → logprob: -18.000160217285156
    8. '_edges' → logprob: -18.250160217285156
    9. '(chain' → logprob: -18.375160217285156
    10. '```' → logprob: -18.625160217285156

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007771539967507124
    2. ',k' → logprob: -4.8827714920043945
    3. ' ,' → logprob: -8.882771492004395
    4. '(k' → logprob: -10.757771492004395
    5. ',n' → logprob: -12.882771492004395
    6. ',(' → logprob: -14.007771492004395
    7. '(n' → logprob: -14.507771492004395
    8. ' k' → logprob: -15.007771492004395
    9. '   ' → logprob: -15.257771492004395
    10. 'k' → logprob: -15.382771492004395

Token 188: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6381427049636841
    2. 'm' → logprob: -1.513142704963684
    3. ' k' → logprob: -2.0131425857543945
    4. ' m' → logprob: -2.1381425857543945
    5. ' ' → logprob: -10.638142585754395
    6. '   ' → logprob: -11.013142585754395
    7. '(k' → logprob: -12.013142585754395
    8. '0' → logprob: -12.638142585754395
    9. ' max' → logprob: -12.763142585754395
    10. 'max' → logprob: -12.888142585754395

Token 189: '_max' (ID: 13731)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12466786056756973
    2. '-' → logprob: -2.4996678829193115
    3. ' -' → logprob: -3.3746678829193115
    4. '-m' → logprob: -8.37466812133789
    5. ')' → logprob: -8.62466812133789
    6. '):
' → logprob: -8.74966812133789
    7. '   ' → logprob: -8.87466812133789
    8. '-k' → logprob: -9.99966812133789
    9. ')):' → logprob: -10.37466812133789
    10. ':' → logprob: -10.74966812133789

Token 190: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2881588041782379
    2. '-k' → logprob: -1.9131587743759155
    3. ',' → logprob: -2.913158893585205
    4. '-' → logprob: -3.163158893585205
    5. ',k' → logprob: -5.288158893585205
    6. '   ' → logprob: -7.788158893585205
    7. ' ,' → logprob: -8.163158416748047
    8. ')' → logprob: -8.913158416748047
    9. ' ' → logprob: -10.038158416748047
    10. '-m' → logprob: -10.788158416748047

Token 191: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.034201815724372864
    2. 'm' → logprob: -3.4092018604278564
    3. ' k' → logprob: -7.659201622009277
    4. ' m' → logprob: -9.534201622009277
    5. '(k' → logprob: -11.909201622009277
    6. '(m' → logprob: -13.034201622009277
    7. '(' → logprob: -13.659201622009277
    8. ' (' → logprob: -14.909201622009277
    9. '   ' → logprob: -14.909201622009277
    10. ' ' → logprob: -15.034201622009277

Token 192: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002537847962230444
    2. '):
' → logprob: -6.002537727355957
    3. ':' → logprob: -10.127537727355957
    4. ' ):' → logprob: -11.502537727355957
    5. ')' → logprob: -12.252537727355957
    6. '):
' → logprob: -12.752537727355957
    7. ',' → logprob: -13.002537727355957
    8. '+' → logprob: -14.002537727355957
    9. '   ' → logprob: -14.502537727355957
    10. '}:' → logprob: -16.002538681030273

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17259740829467773
    2. ' print' → logprob: -1.9225974082946777
    3. 'print' → logprob: -4.422597408294678
    4. '       ' → logprob: -8.422597885131836
    5. '	print' → logprob: -10.297597885131836
    6. '```' → logprob: -10.672597885131836
    7. '   ' → logprob: -12.297597885131836
    8. '
' → logprob: -12.797597885131836
    9. '    
' → logprob: -13.172597885131836
    10. '.print' → logprob: -13.297597885131836

Token 194: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002134675160050392
    2. ' print' → logprob: -6.252134799957275
    3. '   ' → logprob: -8.502134323120117
    4. 'pass' → logprob: -13.752134323120117
    5. '	print' → logprob: -14.002134323120117
    6. 'pr' → logprob: -15.377134323120117
    7. '```' → logprob: -15.502134323120117
    8. '    ' → logprob: -15.752134323120117
    9. 'break' → logprob: -16.002134323120117
    10. '  ' → logprob: -16.002134323120117

Token 195: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -3.190178904333152e-05
    2. '(f' → logprob: -10.875031471252441
    3. 'u' → logprob: -11.750031471252441
    4. '(' → logprob: -12.500031471252441
    5. '(v' → logprob: -13.875031471252441
    6. ' u' → logprob: -16.250032424926758
    7. '(i' → logprob: -16.625032424926758
    8. '	u' → logprob: -17.750032424926758
    9. 'f' → logprob: -18.500032424926758
    10. ' (' → logprob: -19.125032424926758

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012670687399804592
    2. ',v' → logprob: -4.387670516967773
    3. ' ,' → logprob: -9.012670516967773
    4. ' v' → logprob: -10.637670516967773
    5. 'v' → logprob: -11.137670516967773
    6. ',
' → logprob: -15.012670516967773
    7. ')' → logprob: -15.637670516967773
    8. ',end' → logprob: -16.512670516967773
    9. ')v' → logprob: -16.887670516967773
    10. ',u' → logprob: -17.637670516967773

Token 197: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0009115827269852161
    2. ' v' → logprob: -7.000911712646484
    3. ')v' → logprob: -17.375911712646484
    4. ')' → logprob: -18.875911712646484
    5. ' ' → logprob: -19.250911712646484
    6. '	v' → logprob: -19.375911712646484
    7. '   ' → logprob: -19.625911712646484
    8. '(v' → logprob: -19.750911712646484
    9. 'u' → logprob: -20.125911712646484
    10. 'vj' → logprob: -20.375911712646484

Token 198: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.5
    3. ' )' → logprob: -15.875
    4. '))' → logprob: -17.375
    5. ')`' → logprob: -18.625
    6. '   ' → logprob: -19.125
    7. '')' → logprob: -19.25
    8. ')#' → logprob: -19.25
    9. '),' → logprob: -19.75
    10. ')v' → logprob: -19.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 196
Tokens correctement prédits (1ère position, stricte): 64
Tokens correctement prédits (1ère position, avec adaptation): 66
Tokens correctement prédits (top 10): 141
Précision stricte (1ère position): 32.65%
Précision adaptée (1ère position): 33.67%
Précision (top 10): 71.94%
================================================================================
