================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# calcul de l'angle interne total (enfin je crois...)
val = input("Entrez un nombre : ")
number = int(val)
# bon ici j'aurais pu faire en une ligne mais bon
resultat = (number - 2) * 180 # on enlève 2, pourquoi ? ça marche comme ça
print(resultat)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' calcul' (ID: 7559)
  → Token d'amorce (pas de prédiction)

Token 2: ' de' (ID: 334)
  → Token d'amorce (pas de prédiction)

Token 3: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3355308771133423
    2. ' ' → logprob: -1.7105308771133423
    3. ' l' → logprob: -2.8355307579040527
    4. 'l' → logprob: -4.210530757904053
    5. 'la' → logprob: -4.210530757904053
    6. 's' → logprob: -5.335530757904053
    7. ' rendement' → logprob: -5.460530757904053
    8. ' ' → logprob: -6.835530757904053
    9. ' résultat' → logprob: -7.835530757904053
    10. '```' → logprob: -7.960530757904053

Token 4: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08390586823225021
    2. ''espace' → logprob: -2.8339059352874756
    3. ''énergie' → logprob: -4.7089056968688965
    4. 'a' → logprob: -5.7089056968688965
    5. ''é' → logprob: -5.7089056968688965
    6. 'u' → logprob: -6.4589056968688965
    7. 'e' → logprob: -6.5839056968688965
    8. '_' → logprob: -7.8339056968688965
    9. ''éc' → logprob: -8.333906173706055
    10. ''intérêt' → logprob: -8.333906173706055

Token 5: 'angle' (ID: 7140)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10156863182783127
    2. ''énergie' → logprob: -3.4765686988830566
    3. ''espace' → logprob: -3.6015686988830566
    4. 'a' → logprob: -3.9765686988830566
    5. 'é' → logprob: -4.976568698883057
    6. '_' → logprob: -5.851568698883057
    7. ''é' → logprob: -6.226568698883057
    8. 'u' → logprob: -6.476568698883057
    9. 'e' → logprob: -6.726568698883057
    10. 'i' → logprob: -7.226568698883057

Token 6: ' interne' (ID: 59673)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07083228975534439
    2. '(' → logprob: -4.445832252502441
    3. ' ' → logprob: -4.445832252502441
    4. '=' → logprob: -4.445832252502441
    5. 's' → logprob: -4.570832252502441
    6. ''' → logprob: -4.820832252502441
    7. '#' → logprob: -5.195832252502441
    8. ' =' → logprob: -6.070832252502441
    9. '\' → logprob: -6.570832252502441
    10. ':' → logprob: -6.945832252502441

Token 7: ' total' (ID: 3609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.218612939119339
    2. '#' → logprob: -2.3436129093170166
    3. 's' → logprob: -2.8436129093170166
    4. '\' → logprob: -4.968613147735596
    5. ':' → logprob: -4.968613147735596
    6. '(' → logprob: -5.218613147735596
    7. ''' → logprob: -5.468613147735596
    8. ' ' → logprob: -5.718613147735596
    9. '=' → logprob: -5.968613147735596
    10. 'i' → logprob: -6.218613147735596

Token 8: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37150076031684875
    2. 's' → logprob: -2.2465007305145264
    3. ':' → logprob: -2.4965007305145264
    4. '\' → logprob: -2.8715007305145264
    5. ' ' → logprob: -4.3715009689331055
    6. '#' → logprob: -4.9965009689331055
    7. ' :' → logprob: -5.1215009689331055
    8. ' =' → logprob: -5.2465009689331055
    9. '```' → logprob: -5.3715009689331055
    10. '=' → logprob: -5.4965009689331055

Token 9: 'en' (ID: 262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45665833353996277
    2. ' )' → logprob: -1.0816583633422852
    3. ' de' → logprob: -5.331658363342285
    4. 's' → logprob: -5.581658363342285
    5. ' d' → logprob: -6.081658363342285
    6. 'n' → logprob: -6.581658363342285
    7. 'de' → logprob: -6.831658363342285
    8. ' ' → logprob: -6.831658363342285
    9. 't' → logprob: -7.081658363342285
    10. ' n' → logprob: -7.081658363342285

Token 10: 'fin' (ID: 6994)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.259786605834961
    2. 'de' → logprob: -1.384786605834961
    3. '°' → logprob: -1.634786605834961
    4. ')' → logprob: -2.509786605834961
    5. ' degré' → logprob: -2.884786605834961
    6. ' degrés' → logprob: -3.009786605834961
    7. 'deg' → logprob: -3.634786605834961
    8. 'degrees' → logprob: -4.634786605834961
    9. '_de' → logprob: -4.884786605834961
    10. ' radians' → logprob: -4.884786605834961

Token 11: ' je' (ID: 1264)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.040277499705553055
    2. ' )' → logprob: -3.5402774810791016
    3. 'e' → logprob: -5.790277481079102
    4. ' ' → logprob: -5.915277481079102
    5. 's' → logprob: -6.290277481079102
    6. ' de' → logprob: -7.040277481079102
    7. ' ' → logprob: -7.790277481079102
    8. ',' → logprob: -7.915277481079102
    9. '_' → logprob: -7.915277481079102
    10. '')' → logprob: -9.290277481079102

Token 12: ' crois' (ID: 65485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7780261635780334
    2. 's' → logprob: -1.6530261039733887
    3. ' ' → logprob: -1.7780261039733887
    4. ''' → logprob: -3.4030261039733887
    5. ' pense' → logprob: -3.6530261039733887
    6. ' )' → logprob: -4.153026103973389
    7. ' peux' → logprob: -4.278026103973389
    8. ' veux' → logprob: -4.403026103973389
    9. ' continue' → logprob: -4.653026103973389
    10. ' ' → logprob: -4.903026103973389

Token 13: '...)
' (ID: 66563)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009849820286035538
    2. ' )' → logprob: -5.509850025177002
    3. 'e' → logprob: -5.634850025177002
    4. '#' → logprob: -6.634850025177002
    5. 's' → logprob: -8.134849548339844
    6. '')' → logprob: -8.759849548339844
    7. ',' → logprob: -9.134849548339844
    8. ' ' → logprob: -9.509849548339844
    9. '_' → logprob: -10.009849548339844
    10. ''' → logprob: -10.634849548339844

Token 14: 'val' (ID: 1105)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8238133788108826
    2. ' ' → logprob: -1.5738134384155273
    3. '#' → logprob: -2.5738134384155273
    4. ':' → logprob: -3.0738134384155273
    5. '\n' → logprob: -3.0738134384155273
    6. 's' → logprob: -3.3238134384155273
    7. '```' → logprob: -3.4488134384155273
    8. ' \' → logprob: -3.6988134384155273
    9. '_' → logprob: -4.198813438415527
    10. ',' → logprob: -4.198813438415527

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6310539245605469
    2. '=' → logprob: -1.0060539245605469
    3. 'eur' → logprob: -3.381053924560547
    4. 'ue' → logprob: -3.506053924560547
    5. 'e' → logprob: -3.756053924560547
    6. '_' → logprob: -5.256053924560547
    7. 'eurs' → logprob: -6.131053924560547
    8. '(' → logprob: -6.631053924560547
    9. ' ' → logprob: -7.006053924560547
    10. 'uer' → logprob: -7.006053924560547

Token 16: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23143555223941803
    2. ' val' → logprob: -2.606435537338257
    3. '0' → logprob: -3.231435537338257
    4. ' math' → logprob: -3.606435537338257
    5. '1' → logprob: -4.606435775756836
    6. ' (' → logprob: -4.606435775756836
    7. ' angle' → logprob: -4.731435775756836
    8. ' sum' → logprob: -4.856435775756836
    9. 'angle' → logprob: -5.606435775756836
    10. ' "' → logprob: -6.106435775756836

Token 17: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007419440895318985
    2. '('' → logprob: -5.132419586181641
    3. '("("' → logprob: -6.632419586181641
    4. '("' → logprob: -9.00741958618164
    5. '()' → logprob: -11.63241958618164
    6. ' ' → logprob: -11.63241958618164
    7. '(
' → logprob: -11.75741958618164
    8. '(">' → logprob: -12.00741958618164
    9. '("")' → logprob: -12.50741958618164
    10. '("""' → logprob: -12.50741958618164

Token 18: 'Ent' (ID: 3263)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.7393413186073303
    2. ')' → logprob: -1.1143412590026855
    3. 'Angle' → logprob: -2.9893412590026855
    4. 'l' → logprob: -3.4893412590026855
    5. 'la' → logprob: -3.4893412590026855
    6. '")' → logprob: -3.8643412590026855
    7. '"' → logprob: -5.1143412590026855
    8. 'Quelle' → logprob: -5.1143412590026855
    9. '')' → logprob: -5.4893412590026855
    10. 'val' → logprob: -5.7393412590026855

Token 19: 'rez' (ID: 13676)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.08878392726182938
    2. 'ier' → logprob: -3.3387839794158936
    3. 're' → logprob: -3.9637839794158936
    4. 'rée' → logprob: -3.9637839794158936
    5. 'rez' → logprob: -4.8387837409973145
    6. 'ré' → logprob: -6.5887837409973145
    7. 'r' → logprob: -7.3387837409973145
    8. 'rer' → logprob: -7.5887837409973145
    9. 'ree' → logprob: -7.8387837409973145
    10. 'ée' → logprob: -8.588784217834473

Token 20: ' un' (ID: 537)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8873677849769592
    2. ' l' → logprob: -1.1373677253723145
    3. ' ' → logprob: -2.6373677253723145
    4. ' la' → logprob: -2.6373677253723145
    5. ' un' → logprob: -3.1373677253723145
    6. ' une' → logprob: -3.7623677253723145
    7. ' )' → logprob: -4.2623677253723145
    8. ' angle' → logprob: -4.6373677253723145
    9. '(angle' → logprob: -5.2623677253723145
    10. 'l' → logprob: -5.2623677253723145

Token 21: ' nombre' (ID: 9733)
  Prédit: ' angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' angle' → logprob: -0.03462762013077736
    2. 'angle' → logprob: -3.909627676010132
    3. ' espace' → logprob: -4.534627437591553
    4. ' ' → logprob: -5.909627437591553
    5. ' nombre' → logprob: -9.159627914428711
    6. '_angle' → logprob: -9.409627914428711
    7. ' á' → logprob: -10.284627914428711
    8. ' )' → logprob: -10.534627914428711
    9. ' triangle' → logprob: -10.659627914428711
    10. '  ' → logprob: -10.784627914428711

Token 22: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.03967675194144249
    2. ':' → logprob: -3.7896766662597656
    3. ')' → logprob: -4.414676666259766
    4. '")' → logprob: -6.164676666259766
    5. ' )' → logprob: -6.664676666259766
    6. ' ")' → logprob: -7.414676666259766
    7. ' ' → logprob: -10.039676666259766
    8. '>' → logprob: -10.164676666259766
    9. ' ' → logprob: -10.539676666259766
    10. '):' → logprob: -10.789676666259766

Token 23: ' ")
' (ID: 31232)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.07979263365268707
    2. ')' → logprob: -2.5797927379608154
    3. ')")' → logprob: -7.329792499542236
    4. '"' → logprob: -8.829792976379395
    5. ' ")' → logprob: -9.954792976379395
    6. ' )' → logprob: -10.329792976379395
    7. '')' → logprob: -11.954792976379395
    8. ')"' → logprob: -11.954792976379395
    9. '")
' → logprob: -13.704792976379395
    10. '`)' → logprob: -14.079792976379395

Token 24: 'number' (ID: 8096)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.3391587734222412
    2. ')' → logprob: -1.5891587734222412
    3. '+' → logprob: -2.214158773422241
    4. 'int' → logprob: -2.714158773422241
    5. ' ' → logprob: -2.714158773422241
    6. 'angle' → logprob: -2.714158773422241
    7. 'v' → logprob: -3.589158773422241
    8. '```' → logprob: -3.714158773422241
    9. '**' → logprob: -4.08915901184082
    10. '\n' → logprob: -4.08915901184082

Token 25: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7928487062454224
    2. '.' → logprob: -1.5428487062454224
    3. ')' → logprob: -1.6678487062454224
    4. '_' → logprob: -2.292848587036133
    5. '[' → logprob: -4.292848587036133
    6. ' =' → logprob: -4.542848587036133
    7. '_s' → logprob: -5.542848587036133
    8. '+' → logprob: -5.917848587036133
    9. '=' → logprob: -6.292848587036133
    10. ' ' → logprob: -6.667848587036133

Token 26: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4068000316619873
    2. ' float' → logprob: -1.1568000316619873
    3. 'int' → logprob: -4.031800270080566
    4. 'float' → logprob: -6.531800270080566
    5. ' val' → logprob: -8.156800270080566
    6. ' ' → logprob: -8.406800270080566
    7. ' ' → logprob: -11.281800270080566
    8. 'val' → logprob: -11.906800270080566
    9. '  ' → logprob: -14.031800270080566
    10. ' len' → logprob: -14.531800270080566

Token 27: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.4744202196598053
    2. '(' → logprob: -0.9744201898574829
    3. '(number' → logprob: -8.974420547485352
    4. ' (' → logprob: -9.849420547485352
    5. '(user' → logprob: -9.849420547485352
    6. '(value' → logprob: -10.099420547485352
    7. '(input' → logprob: -10.974420547485352
    8. 'val' → logprob: -11.349420547485352
    9. '(valor' → logprob: -11.974420547485352
    10. '(
' → logprob: -12.099420547485352

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8444881536415778e-05
    2. ' )' → logprob: -11.000028610229492
    3. '))' → logprob: -11.625028610229492
    4. '+' → logprob: -13.375028610229492
    5. ')))' → logprob: -15.000028610229492
    6. '+)' → logprob: -15.625028610229492
    7. '[' → logprob: -15.625028610229492
    8. ')
' → logprob: -16.000028610229492
    9. '')' → logprob: -16.000028610229492
    10. '*' → logprob: -16.750028610229492

Token 29: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0803152322769165
    2. 'angle' → logprob: -1.8303152322769165
    3. 'if' → logprob: -2.080315113067627
    4. '
' → logprob: -2.205315113067627
    5. '+' → logprob: -2.580315113067627
    6. '#' → logprob: -3.205315113067627
    7. ')' → logprob: -3.830315113067627
    8. 'n' → logprob: -3.955315113067627
    9. 'import' → logprob: -4.330315113067627
    10. '*' → logprob: -4.580315113067627

Token 30: ' bon' (ID: 4846)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.4543652832508087
    2. ' ' → logprob: -1.7043652534484863
    3. ' angle' → logprob: -2.3293652534484863
    4. 's' → logprob: -3.2043652534484863
    5. ' if' → logprob: -4.704365253448486
    6. 'n' → logprob: -4.829365253448486
    7. '#' → logprob: -5.954365253448486
    8. 'if' → logprob: -5.954365253448486
    9. ' ```' → logprob: -6.079365253448486
    10. 'sum' → logprob: -6.204365253448486

Token 31: ' ici' (ID: 27994)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5724518299102783
    2. ' ' → logprob: -2.0724518299102783
    3. ')' → logprob: -2.1974518299102783
    4. 'angle' → logprob: -2.9474518299102783
    5. '+' → logprob: -3.3224518299102783
    6. '_' → logprob: -4.072451591491699
    7. '#' → logprob: -4.697451591491699
    8. 'n' → logprob: -4.822451591491699
    9. '
' → logprob: -4.947451591491699
    10. ',' → logprob: -5.322451591491699

Token 32: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0839022621512413
    2. 's' → logprob: -4.333902359008789
    3. ',' → logprob: -4.458902359008789
    4. ' if' → logprob: -4.583902359008789
    5. 'angle' → logprob: -4.583902359008789
    6. ')' → logprob: -5.083902359008789
    7. '<|end|>' → logprob: -5.083902359008789
    8. 'if' → logprob: -5.708902359008789
    9. ' angle' → logprob: -5.708902359008789
    10. ' )' → logprob: -5.708902359008789

Token 33: ''aurais' (ID: 149917)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.17405155301094055
    2. ''ai' → logprob: -2.174051523208618
    3. ''' → logprob: -3.924051523208618
    4. 'a' → logprob: -5.174051761627197
    5. 's' → logprob: -5.924051761627197
    6. ''aj' → logprob: -6.174051761627197
    7. ' '' → logprob: -6.549051761627197
    8. ' continue' → logprob: -6.674051761627197
    9. '')' → logprob: -6.799051761627197
    10. 'ai' → logprob: -6.799051761627197

Token 34: ' pu' (ID: 2923)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.8367745876312256
    2. ' voulu' → logprob: -1.7117745876312256
    3. ' aimé' → logprob: -1.8367745876312256
    4. 'f' → logprob: -3.7117745876312256
    5. ' pu' → logprob: -3.8367745876312256
    6. ' préféré' → logprob: -4.086774826049805
    7. 'du' → logprob: -4.211774826049805
    8. ' besoin' → logprob: -4.461774826049805
    9. 'pe' → logprob: -4.586774826049805
    10. 'd' → logprob: -4.586774826049805

Token 35: ' faire' (ID: 8119)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -1.0478655099868774
    2. 'faire' → logprob: -1.5478655099868774
    3. ' faire' → logprob: -2.297865390777588
    4. ' continuer' → logprob: -2.422865390777588
    5. 'mettre' → logprob: -2.797865390777588
    6. 'util' → logprob: -2.797865390777588
    7. 'contin' → logprob: -3.172865390777588
    8. ' mettre' → logprob: -4.172865390777588
    9. 'just' → logprob: -4.297865390777588
    10. ' juste' → logprob: -4.547865390777588

Token 36: ' en' (ID: 469)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.0880115032196045
    2. ' number' → logprob: -1.4630115032196045
    3. ' something' → logprob: -2.0880115032196045
    4. ' val' → logprob: -2.8380115032196045
    5. ' ' → logprob: -3.2130115032196045
    6. 'number' → logprob: -3.3380115032196045
    7. ' print' → logprob: -3.8380115032196045
    8. ' une' → logprob: -3.9630115032196045
    9. '```' → logprob: -4.088011741638184
    10. ' quelque' → logprob: -4.213011741638184

Token 37: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.5388427972793579
    2. '1' → logprob: -2.4138426780700684
    3. 'one' → logprob: -2.4138426780700684
    4. '```' → logprob: -2.4138426780700684
    5. 'range' → logprob: -2.7888426780700684
    6. ' une' → logprob: -3.5388426780700684
    7. 'moins' → logprob: -5.163842678070068
    8. 'plus' → logprob: -5.163842678070068
    9. 'python' → logprob: -5.288842678070068
    10. ' one' → logprob: -5.413842678070068

Token 38: ' ligne' (ID: 19583)
  Prédit: ' seule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seule' → logprob: -1.0016651153564453
    2. 'se' → logprob: -1.1266651153564453
    3. 'ligne' → logprob: -1.3766651153564453
    4. ' ligne' → logprob: -3.0016651153564453
    5. 'line' → logprob: -6.126665115356445
    6. ' seul' → logprob: -6.626665115356445
    7. 'fois' → logprob: -7.126665115356445
    8. ' ' → logprob: -7.251665115356445
    9. 'l' → logprob: -8.126665115356445
    10. 'unique' → logprob: -8.626665115356445

Token 39: ' mais' (ID: 2899)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.597302258014679
    2. 'total' → logprob: -1.9723021984100342
    3. 'print' → logprob: -2.472302198410034
    4. ' total' → logprob: -2.847302198410034
    5. 'result' → logprob: -2.972302198410034
    6. ' angle' → logprob: -3.222302198410034
    7. 'sum' → logprob: -4.222302436828613
    8. 's' → logprob: -4.472302436828613
    9. ' print' → logprob: -4.597302436828613
    10. ',' → logprob: -4.722302436828613

Token 40: ' bon' (ID: 4846)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.7119314670562744
    2. ' je' → logprob: -1.7119314670562744
    3. ' #' → logprob: -2.0869314670562744
    4. '#' → logprob: -2.7119314670562744
    5. ' n' → logprob: -2.9619314670562744
    6. ',' → logprob: -2.9619314670562744
    7. ' for' → logprob: -3.2119314670562744
    8. 'n' → logprob: -3.5869314670562744
    9. ' on' → logprob: -3.7119314670562744
    10. '```' → logprob: -3.7119314670562744

Token 41: '
' (ID: 198)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.4394114911556244
    2. ' angle' → logprob: -1.1894115209579468
    3. ' total' → logprob: -3.9394114017486572
    4. 's' → logprob: -4.564411640167236
    5. 'total' → logprob: -5.064411640167236
    6. ',' → logprob: -5.439411640167236
    7. ' ' → logprob: -6.189411640167236
    8. ' =' → logprob: -7.064411640167236
    9. ' n' → logprob: -7.189411640167236
    10. ' s' → logprob: -7.564411640167236

Token 42: 'result' (ID: 2521)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.155159130692482
    2. ' angle' → logprob: -2.5301592350006104
    3. 'total' → logprob: -3.4051592350006104
    4. 'result' → logprob: -4.280158996582031
    5. ' total' → logprob: -4.780158996582031
    6. 'sum' → logprob: -5.905158996582031
    7. 's' → logprob: -6.280158996582031
    8. ' result' → logprob: -6.530158996582031
    9. 'theta' → logprob: -7.655158996582031
    10. ' somme' → logprob: -7.905158996582031

Token 43: 'at' (ID: 266)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018546124920248985
    2. '=' → logprob: -4.768546104431152
    3. '_' → logprob: -5.018546104431152
    4. 's' → logprob: -5.893546104431152
    5. ' ' → logprob: -7.768546104431152
    6. ')' → logprob: -10.768546104431152
    7. ',' → logprob: -11.643546104431152
    8. ' _' → logprob: -11.893546104431152
    9. ' +=' → logprob: -12.018546104431152
    10. ' s' → logprob: -12.018546104431152

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012787568382918835
    2. '=' → logprob: -4.512787342071533
    3. '_' → logprob: -6.762787342071533
    4. '_angle' → logprob: -7.762787342071533
    5. ' ' → logprob: -9.762787818908691
    6. '_total' → logprob: -9.887787818908691
    7. ' +=' → logprob: -11.012787818908691
    8. 's' → logprob: -12.262787818908691
    9. 'angle' → logprob: -12.512787818908691
    10. '_angles' → logprob: -12.512787818908691

Token 45: ' (' (ID: 350)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.5686792731285095
    2. ' number' → logprob: -1.0686793327331543
    3. 'sum' → logprob: -3.3186793327331543
    4. ' sum' → logprob: -3.6936793327331543
    5. '(number' → logprob: -4.818679332733154
    6. ' (' → logprob: -5.193679332733154
    7. '0' → logprob: -5.443679332733154
    8. '(' → logprob: -5.568679332733154
    9. 'angle' → logprob: -6.318679332733154
    10. ' ' → logprob: -6.568679332733154

Token 46: 'number' (ID: 8096)
  Prédit: 'number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.06469965726137161
    2. '2' → logprob: -4.189699649810791
    3. '180' → logprob: -4.189699649810791
    4. '1' → logprob: -4.439699649810791
    5. ' number' → logprob: -5.189699649810791
    6. '(' → logprob: -5.564699649810791
    7. '360' → logprob: -5.814699649810791
    8. '(number' → logprob: -5.814699649810791
    9. 'sum' → logprob: -6.689699649810791
    10. 'angle' → logprob: -6.814699649810791

Token 47: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1020515114068985
    2. ' +' → logprob: -2.6020514965057373
    3. '*' → logprob: -5.227051734924316
    4. ' **' → logprob: -5.227051734924316
    5. ' %' → logprob: -5.852051734924316
    6. ' )' → logprob: -5.977051734924316
    7. '+' → logprob: -6.227051734924316
    8. ' ' → logprob: -6.352051734924316
    9. ' -' → logprob: -6.602051734924316
    10. ' /' → logprob: -7.602051734924316

Token 48: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28314337134361267
    2. '1' → logprob: -1.408143401145935
    3. '2' → logprob: -6.283143520355225
    4. ' (' → logprob: -10.595643043518066
    5. '3' → logprob: -10.720643043518066
    6. '  ' → logprob: -11.095643043518066
    7. '4' → logprob: -11.470643043518066
    8. '(' → logprob: -11.658143043518066
    9. ' ' → logprob: -12.345643043518066
    10. ' )' → logprob: -12.595643043518066

Token 49: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.0868278524139896e-05
    2. '

' → logprob: -11.00006103515625
    3. ')' → logprob: -11.75006103515625
    4. '1' → logprob: -11.87506103515625
    5. '   ' → logprob: -12.12506103515625
    6. '3' → logprob: -12.50006103515625
    7. ' ' → logprob: -12.62506103515625
    8. '	' → logprob: -12.75006103515625
    9. '  ' → logprob: -12.87506103515625
    10. '```' → logprob: -13.37506103515625

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008840166963636875
    2. ' )' → logprob: -4.758840084075928
    3. ')*' → logprob: -8.633840560913086
    4. '*' → logprob: -10.133840560913086
    5. ' *' → logprob: -12.133840560913086
    6. '*)' → logprob: -13.508840560913086
    7. ' ' → logprob: -15.383840560913086
    8. ' ' → logprob: -15.508840560913086
    9. '）' → logprob: -15.633840560913086
    10. '')' → logprob: -16.008840560913086

Token 51: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.28187066316604614
    2. '*' → logprob: -1.4068706035614014
    3. ')' → logprob: -7.2818708419799805
    4. ' ' → logprob: -11.40687084197998
    5. ' )' → logprob: -12.03187084197998
    6. '"' → logprob: -12.78187084197998
    7. ''' → logprob: -13.40687084197998
    8. ' ' → logprob: -13.40687084197998
    9. ')*' → logprob: -13.53187084197998
    10. '```' → logprob: -13.78187084197998

Token 52: ' ' (ID: 220)
  Prédit: '180'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -0.003243666607886553
    2. ' ' → logprob: -5.753243446350098
    3. '1' → logprob: -9.753243446350098
    4. '90' → logprob: -12.378243446350098
    5. '18' → logprob: -12.753243446350098
    6. '  ' → logprob: -15.003243446350098
    7. '179' → logprob: -15.878243446350098
    8. ')' → logprob: -17.003244400024414
    9. '   ' → logprob: -17.503244400024414
    10. 'l' → logprob: -17.628244400024414

Token 53: '180' (ID: 7521)
  Prédit: '180'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -0.0015374773647636175
    2. '1' → logprob: -6.501537322998047
    3. '18' → logprob: -10.376537322998047
    4. ' ' → logprob: -12.751537322998047
    5. '90' → logprob: -13.751537322998047
    6. '１８' → logprob: -18.126537322998047
    7. '179' → logprob: -18.501537322998047
    8. '10' → logprob: -18.626537322998047
    9. '  ' → logprob: -18.626537322998047
    10. '۱۸' → logprob: -18.751537322998047

Token 54: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' enl' (ID: 116494)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.40838754177093506
    2. ' #' → logprob: -2.1583876609802246
    3. ' ' → logprob: -2.5333876609802246
    4. 'angle' → logprob: -2.9083876609802246
    5. '<|end|>' → logprob: -2.9083876609802246
    6. ' angle' → logprob: -5.033387660980225
    7. '<|end|>' → logprob: -5.408387660980225
    8. ')' → logprob: -5.533387660980225
    9. '.' → logprob: -6.158387660980225
    10. '_angle' → logprob: -6.283387660980225

Token 57: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.00977096613496542
    2. 'eve' → logprob: -4.75977087020874
    3. 'e' → logprob: -6.88477087020874
    4. 'è' → logprob: -10.384771347045898
    5. '`' → logprob: -11.009771347045898
    6. 'ege' → logprob: -11.259771347045898
    7. 'èves' → logprob: -11.384771347045898
    8. 'ège' → logprob: -11.384771347045898
    9. ' eve' → logprob: -11.884771347045898
    10. '�' → logprob: -11.884771347045898

Token 58: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: '2' (ID: 17)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -1.788181185722351
    2. ')' → logprob: -1.913181185722351
    3. '<|end|>' → logprob: -2.0381813049316406
    4. '360' → logprob: -2.5381813049316406
    5. 'degrees' → logprob: -2.5381813049316406
    6. 'degree' → logprob: -2.6631813049316406
    7. '90' → logprob: -2.6631813049316406
    8. 'le' → logprob: -2.7881813049316406
    9. '180' → logprob: -2.7881813049316406
    10. ' ' → logprob: -3.5381813049316406

Token 60: ',' (ID: 11)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12018905580043793
    2. '<|end|>' → logprob: -2.2451889514923096
    3. '*' → logprob: -5.745189189910889
    4. ')' → logprob: -6.245189189910889
    5. ' ' → logprob: -6.870189189910889
    6. ' )' → logprob: -7.745189189910889
    7. '<|end|>' → logprob: -7.995189189910889
    8. ' #' → logprob: -8.87018871307373
    9. '  ' → logprob: -9.49518871307373
    10. '#' → logprob: -10.74518871307373

Token 61: ' pourquoi' (ID: 39224)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.6421788930892944
    2. '#' → logprob: -1.6421788930892944
    3. ' puis' → logprob: -2.267179012298584
    4. ' ' → logprob: -2.767179012298584
    5. ' *' → logprob: -3.517179012298584
    6. '<|end|>' → logprob: -4.017179012298584
    7. ')' → logprob: -4.392179012298584
    8. 'number' → logprob: -4.892179012298584
    9. 'angle' → logprob: -5.017179012298584
    10. '0' → logprob: -5.017179012298584

Token 62: ' ?' (ID: 1423)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.8209453821182251
    2. ')' → logprob: -1.070945382118225
    3. ' *' → logprob: -1.570945382118225
    4. '*' → logprob: -5.4459452629089355
    5. ' ' → logprob: -5.9459452629089355
    6. '<|end|>' → logprob: -6.8209452629089355
    7. '  ' → logprob: -8.695945739746094
    8. 'result' → logprob: -8.945945739746094
    9. ' ),' → logprob: -9.195945739746094
    10. ' ```' → logprob: -9.445945739746094

Token 63: ' ça' (ID: 13590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.52260822057724
    2. ')' → logprob: -1.3976082801818848
    3. ' )' → logprob: -2.2726082801818848
    4. '<|end|>' → logprob: -3.1476082801818848
    5. '*' → logprob: -5.397608280181885
    6. ' *' → logprob: -5.772608280181885
    7. '  ' → logprob: -6.897608280181885
    8. '#' → logprob: -7.022608280181885
    9. ' tokens' → logprob: -7.022608280181885
    10. '<|end|>' → logprob: -7.272608280181885

Token 64: ' marche' (ID: 58191)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' comme' (ID: 7971)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' ça' (ID: 13590)
  Prédit: 'ça'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ça' → logprob: -0.02791706658899784
    2. 'cela' → logprob: -4.02791690826416
    3. ' ça' → logprob: -5.02791690826416
    4. 'ç' → logprob: -6.65291690826416
    5. '```' → logprob: -6.65291690826416
    6. 'une' → logprob: -8.77791690826416
    7. 'pour' → logprob: -9.90291690826416
    8. '``' → logprob: -10.15291690826416
    9. 'ca' → logprob: -10.27791690826416
    10. ' ' → logprob: -10.40291690826416

Token 67: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06683376431465149
    2. '*' → logprob: -3.566833734512329
    3. '<|end|>' → logprob: -4.066833972930908
    4. ')' → logprob: -4.941833972930908
    5. '#' → logprob: -5.941833972930908
    6. '+' → logprob: -6.316833972930908
    7. ' print' → logprob: -6.691833972930908
    8. '
' → logprob: -6.816833972930908
    9. 'angle' → logprob: -7.066833972930908
    10. 'result' → logprob: -7.316833972930908

Token 68: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05145033076405525
    2. ')' → logprob: -3.676450252532959
    3. '*' → logprob: -4.301450252532959
    4. '<|end|>' → logprob: -5.051450252532959
    5. ' print' → logprob: -5.801450252532959
    6. '#' → logprob: -7.801450252532959
    7. '```' → logprob: -8.301450729370117
    8. 'result' → logprob: -8.301450729370117
    9. ' ' → logprob: -8.551450729370117
    10. '.' → logprob: -8.926450729370117

Token 69: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006342819542624056
    2. '("("' → logprob: -7.50063419342041
    3. '(result' → logprob: -10.00063419342041
    4. '('' → logprob: -10.87563419342041
    5. '()' → logprob: -12.50063419342041
    6. '("' → logprob: -12.62563419342041
    7. '(f' → logprob: -12.75063419342041
    8. ' (' → logprob: -13.25063419342041
    9. '("""' → logprob: -13.87563419342041
    10. '("")' → logprob: -13.87563419342041

Token 70: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -3.881560041918419e-05
    2. ')' → logprob: -11.375039100646973
    3. ' at' → logprob: -11.375039100646973
    4. '(at' → logprob: -12.375039100646973
    5. ''at' → logprob: -12.750039100646973
    6. '	at' → logprob: -12.875039100646973
    7. 't' → logprob: -13.250039100646973
    8. 'a' → logprob: -13.625039100646973
    9. '_at' → logprob: -13.750039100646973
    10. 'ат' → logprob: -14.375039100646973

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.073596548754722e-05
    2. ' )' → logprob: -10.00005054473877
    3. '*' → logprob: -13.50005054473877
    4. '))' → logprob: -13.75005054473877
    5. ')`' → logprob: -13.87505054473877
    6. '#' → logprob: -15.12505054473877
    7. ')#' → logprob: -15.12505054473877
    8. '+' → logprob: -15.25005054473877
    9. '}' → logprob: -15.50005054473877
    10. ')**' → logprob: -16.125051498413086


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 69
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 35
Précision stricte (1ère position): 23.19%
Précision adaptée (1ère position): 23.19%
Précision (top 10): 50.72%
================================================================================
