================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n_k = input().split()
n = int(n_k[0])
k = int(n_k[1])
h_str = input().split()
h = []
for j in range(n):
    h.append(int(h_str[j]))
ans = 0
for i in range(n):
    if h[i] >= k:
        ans += 1
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '_k' (ID: 11637)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21551845967769623
    2. '10' → logprob: -2.2155184745788574
    3. '32' → logprob: -3.3405184745788574
    4. '0' → logprob: -3.8405184745788574
    5. '5' → logprob: -4.090518474578857
    6. '1' → logprob: -5.465518474578857
    7. '20' → logprob: -5.840518474578857
    8. '4' → logprob: -6.965518474578857
    9. '"' → logprob: -7.465518474578857
    10. '100' → logprob: -7.840518474578857

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01665673777461052
    2. ''' → logprob: -4.516656875610352
    3. '"' → logprob: -5.766656875610352
    4. '[' → logprob: -7.016656875610352
    5. '('' → logprob: -7.391656875610352
    6. '_' → logprob: -8.016656875610352
    7. '(
' → logprob: -8.766656875610352
    8. '.' → logprob: -9.016656875610352
    9. '("("' → logprob: -9.141656875610352
    10. ')' → logprob: -10.141656875610352

Token 5: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5826351046562195
    2. '+' → logprob: -1.0826351642608643
    3. '.strip' → logprob: -3.2076351642608643
    4. '_' → logprob: -4.332634925842285
    5. ' ' → logprob: -4.457634925842285
    6. '*' → logprob: -4.707634925842285
    7. '.split' → logprob: -5.332634925842285
    8. ')' → logprob: -5.457634925842285
    9. '**' → logprob: -5.457634925842285
    10. '=' → logprob: -5.957634925842285

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003222342347726226
    2. '()' → logprob: -8.500322341918945
    3. '(
' → logprob: -10.250322341918945
    4. '"' → logprob: -10.875322341918945
    5. '('' → logprob: -10.875322341918945
    6. '`' → logprob: -11.500322341918945
    7. '(

' → logprob: -11.750322341918945
    8. '("("' → logprob: -11.875322341918945
    9. ' (' → logprob: -12.250322341918945
    10. ''' → logprob: -12.375322341918945

Token 7: 'n' (ID: 77)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35873377323150635
    2. '=' → logprob: -1.4837337732315063
    3. ' =' → logprob: -3.358733654022217
    4. 'n' → logprob: -3.858733654022217
    5. '_' → logprob: -5.108733654022217
    6. '[n' → logprob: -5.608733654022217
    7. '#' → logprob: -5.983733654022217
    8. '[:]' → logprob: -7.108733654022217
    9. '_n' → logprob: -7.233733654022217
    10. ',' → logprob: -7.233733654022217

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.032961368560791016
    2. '_k' → logprob: -3.532961368560791
    3. '[' → logprob: -5.907961368560791
    4. '_n' → logprob: -8.032960891723633
    5. '[_' → logprob: -10.407960891723633
    6. '_[' → logprob: -10.657960891723633
    7. '_)' → logprob: -10.907960891723633
    8. ' _' → logprob: -11.157960891723633
    9. '_
' → logprob: -11.782960891723633
    10. '_s' → logprob: -12.157960891723633

Token 9: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12965506315231323
    2. ' int' → logprob: -2.129655122756958
    3. '[int' → logprob: -6.879654884338379
    4. 'len' → logprob: -7.004654884338379
    5. 'list' → logprob: -8.504654884338379
    6. ' n' → logprob: -8.504654884338379
    7. 'n' → logprob: -8.754654884338379
    8. 'map' → logprob: -9.629654884338379
    9. ' len' → logprob: -10.004654884338379
    10. ' list' → logprob: -10.504654884338379

Token 10: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018314406275749207
    2. '(n' → logprob: -4.018314361572266
    3. '('' → logprob: -9.268314361572266
    4. '("("' → logprob: -10.143314361572266
    5. 'n' → logprob: -11.518314361572266
    6. '(
' → logprob: -12.518314361572266
    7. ''' → logprob: -12.893314361572266
    8. '()' → logprob: -12.893314361572266
    9. '```' → logprob: -13.643314361572266
    10. '_' → logprob: -13.643314361572266

Token 11: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.00017565040616318583
    2. '_' → logprob: -9.125175476074219
    3. '[' → logprob: -10.125175476074219
    4. ')' → logprob: -11.500175476074219
    5. '_n' → logprob: -12.000175476074219
    6. '_)' → logprob: -12.125175476074219
    7. ')_' → logprob: -13.500175476074219
    8. ' _' → logprob: -13.750175476074219
    9. '_[' → logprob: -14.750175476074219
    10. '[_' → logprob: -15.000175476074219

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '[n' → logprob: -14.375000953674316
    3. ')' → logprob: -14.500000953674316
    4. ' [' → logprob: -16.500001907348633
    5. '[
' → logprob: -16.500001907348633
    6. '\[' → logprob: -16.625001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '```' → logprob: -18.500001907348633
    9. ')[' → logprob: -19.000001907348633
    10. '[k' → logprob: -19.375001907348633

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.774276774493046e-05
    2. '1' → logprob: -10.250038146972656
    3. ' ' → logprob: -13.000038146972656
    4. ')' → logprob: -16.375038146972656
    5. '])' → logprob: -17.125038146972656
    6. ']' → logprob: -18.125038146972656
    7. '```' → logprob: -19.250038146972656
    8. '-' → logprob: -19.500038146972656
    9. '`' → logprob: -19.500038146972656
    10. ''' → logprob: -19.687538146972656

Token 14: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5384283065795898
    2. ')' → logprob: -0.9134283065795898
    3. ']' → logprob: -4.28842830657959
    4. ')]' → logprob: -6.78842830657959
    5. ')])' → logprob: -8.66342830657959
    6. ''])' → logprob: -9.66342830657959
    7. '[' → logprob: -10.66342830657959
    8. ' ])' → logprob: -11.53842830657959
    9. ')
' → logprob: -11.66342830657959
    10. '])]' → logprob: -11.78842830657959

Token 15: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16409562528133392
    2. ')' → logprob: -2.664095640182495
    3. '<|end|>' → logprob: -3.039095640182495
    4. 'n' → logprob: -4.914095401763916
    5. ' ' → logprob: -5.039095401763916
    6. '_k' → logprob: -5.039095401763916
    7. ' k' → logprob: -5.289095401763916
    8. '```' → logprob: -5.914095401763916
    9. '#' → logprob: -6.664095401763916
    10. '`' → logprob: -7.164095401763916

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7057604789733887
    2. ' =' → logprob: -0.9557604789733887
    3. '_' → logprob: -2.7057604789733887
    4. ')' → logprob: -3.5807604789733887
    5. ' ' → logprob: -4.080760478973389
    6. ''' → logprob: -5.830760478973389
    7. '<|end|>' → logprob: -6.080760478973389
    8. '[' → logprob: -6.205760478973389
    9. '_space' → logprob: -7.955760478973389
    10. '  ' → logprob: -8.080760955810547

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16022443771362305
    2. ' int' → logprob: -1.910224437713623
    3. '=int' → logprob: -16.53522491455078
    4. ' n' → logprob: -16.78522491455078
    5. '(int' → logprob: -16.91022491455078
    6. ' ' → logprob: -17.03522491455078
    7. '[int' → logprob: -18.41022491455078
    8. '<int' → logprob: -18.53522491455078
    9. 'n' → logprob: -18.66022491455078
    10. '	int' → logprob: -19.16022491455078

Token 18: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6450917720794678
    2. '(' → logprob: -0.7700917720794678
    3. '(k' → logprob: -4.395092010498047
    4. ' (' → logprob: -11.270092010498047
    5. '((' → logprob: -11.270092010498047
    6. '("("' → logprob: -11.520092010498047
    7. '```' → logprob: -11.895092010498047
    8. '()' → logprob: -12.145092010498047
    9. '(input' → logprob: -13.270092010498047
    10. ')(' → logprob: -13.270092010498047

Token 19: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -3.2617008400848135e-05
    2. '_' → logprob: -11.500032424926758
    3. '[' → logprob: -11.625032424926758
    4. ')' → logprob: -12.750032424926758
    5. '[_' → logprob: -12.750032424926758
    6. '[k' → logprob: -13.125032424926758
    7. '_)' → logprob: -13.250032424926758
    8. ')_' → logprob: -13.625032424926758
    9. '])' → logprob: -14.125032424926758
    10. '_j' → logprob: -14.250032424926758

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. ' [' → logprob: -14.625000953674316
    3. ')[' → logprob: -15.750000953674316
    4. ')' → logprob: -16.0
    5. '```' → logprob: -16.0
    6. '[
' → logprob: -17.25
    7. '1' → logprob: -17.5
    8. '   ' → logprob: -17.75
    9. '][' → logprob: -18.5
    10. '\[' → logprob: -18.75

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.570319702499546e-05
    2. '])' → logprob: -10.625025749206543
    3. '0' → logprob: -13.750025749206543
    4. '```' → logprob: -16.750024795532227
    5. ']' → logprob: -17.000024795532227
    6. ')' → logprob: -17.625024795532227
    7. ' ' → logprob: -17.750024795532227
    8. '2' → logprob: -18.375024795532227
    9. '])
' → logprob: -18.625024795532227
    10. '   ' → logprob: -19.375024795532227

Token 22: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '')' → logprob: -15.250000953674316
    3. '`)' → logprob: -15.875000953674316
    4. ']' → logprob: -16.75
    5. '))' → logprob: -16.875
    6. ' )' → logprob: -17.0
    7. '）' → logprob: -17.25
    8. ')
' → logprob: -17.875
    9. '")' → logprob: -18.875
    10. '),' → logprob: -19.125

Token 23: 'h' (ID: 71)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8381062150001526
    2. 'a' → logprob: -2.588106155395508
    3. 'n' → logprob: -2.713106155395508
    4. '=' → logprob: -2.713106155395508
    5. '#' → logprob: -2.838106155395508
    6. 'for' → logprob: -2.838106155395508
    7. 's' → logprob: -3.338106155395508
    8. 'if' → logprob: -3.588106155395508
    9. 'r' → logprob: -3.838106155395508
    10. 'f' → logprob: -3.963106155395508

Token 24: '_str' (ID: 6182)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33948373794555664
    2. '=' → logprob: -1.9644837379455566
    3. '[' → logprob: -2.4644837379455566
    4. ' =' → logprob: -3.3394837379455566
    5. 't' → logprob: -4.839483737945557
    6. ' ' → logprob: -5.714483737945557
    7. ')' → logprob: -5.714483737945557
    8. '[i' → logprob: -6.214483737945557
    9. 'a' → logprob: -6.339483737945557
    10. 'i' → logprob: -6.339483737945557

Token 25: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8352470397949219
    2. '=' → logprob: -0.9602470397949219
    3. ' =' → logprob: -2.085247039794922
    4. 't' → logprob: -3.460247039794922
    5. 's' → logprob: -4.960247039794922
    6. '_e' → logprob: -5.585247039794922
    7. 'eight' → logprob: -5.585247039794922
    8. '[]' → logprob: -5.835247039794922
    9. '_' → logprob: -5.835247039794922
    10. '[' → logprob: -6.210247039794922

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519378066062927
    2. ' input' → logprob: -1.5019378662109375
    3. ' ' → logprob: -13.126937866210938
    4. '[]' → logprob: -13.626937866210938
    5. '(input' → logprob: -13.751937866210938
    6. '=input' → logprob: -14.126937866210938
    7. '	input' → logprob: -14.751937866210938
    8. ' []' → logprob: -14.876937866210938
    9. '""' → logprob: -15.001937866210938
    10. 'in' → logprob: -15.001937866210938

Token 27: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16168996691703796
    2. '()' → logprob: -1.9116899967193604
    3. '(
' → logprob: -7.786689758300781
    4. '().' → logprob: -8.286689758300781
    5. '('' → logprob: -8.411689758300781
    6. '(

' → logprob: -8.911689758300781
    7. '("("' → logprob: -9.411689758300781
    8. ')' → logprob: -9.536689758300781
    9. '.' → logprob: -9.786689758300781
    10. '"' → logprob: -9.911689758300781

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004098466131836176
    2. 'strip' → logprob: -5.504098415374756
    3. 'rstrip' → logprob: -11.004098892211914
    4. ' split' → logprob: -12.879098892211914
    5. 'replace' → logprob: -14.254098892211914
    6. 'spl' → logprob: -15.754098892211914
    7. '(split' → logprob: -16.379098892211914
    8. 'read' → logprob: -17.254098892211914
    9. 'startswith' → logprob: -17.504098892211914
    10. ' strip' → logprob: -18.629098892211914

Token 29: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04310561344027519
    2. '(' → logprob: -3.1681056022644043
    3. '('' → logprob: -9.793106079101562
    4. '()`' → logprob: -11.668106079101562
    5. '("("' → logprob: -11.918106079101562
    6. '().' → logprob: -12.418106079101562
    7. '()[' → logprob: -12.543106079101562
    8. ')' → logprob: -12.918106079101562
    9. ''' → logprob: -12.918106079101562
    10. ' ()' → logprob: -13.043106079101562

Token 30: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -4.7994282795116305e-05
    2. '[' → logprob: -11.00004768371582
    3. 'n' → logprob: -11.87504768371582
    4. 'a' → logprob: -12.37504768371582
    5. '```' → logprob: -12.62504768371582
    6. '[h' → logprob: -12.75004768371582
    7. ']' → logprob: -13.25004768371582
    8. 'i' → logprob: -13.50004768371582
    9. 'hs' → logprob: -13.62504768371582
    10. 'l' → logprob: -14.00004768371582

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0144586563110352
    2. '_' → logprob: -1.2644586563110352
    3. '[' → logprob: -1.7644586563110352
    4. '=' → logprob: -1.7644586563110352
    5. '[:]' → logprob: -5.264458656311035
    6. '[]' → logprob: -6.639458656311035
    7. '=[' → logprob: -7.139458656311035
    8. '_=' → logprob: -7.139458656311035
    9. '=[]' → logprob: -7.514458656311035
    10. 's' → logprob: -7.764458656311035

Token 32: ' []
' (ID: 8911)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.9500558376312256
    2. 'list' → logprob: -1.4500558376312256
    3. ' list' → logprob: -1.9500558376312256
    4. '[' → logprob: -2.2000558376312256
    5. ' [' → logprob: -2.4500558376312256
    6. '[int' → logprob: -3.9500558376312256
    7. '[h' → logprob: -3.9500558376312256
    8. '[]' → logprob: -8.325056076049805
    9. '[len' → logprob: -8.575056076049805
    10. '[i' → logprob: -8.950056076049805

Token 33: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.196732960641384e-05
    2. ' for' → logprob: -9.500082015991211
    3. 'f' → logprob: -12.375082015991211
    4. 'i' → logprob: -13.625082015991211
    5. '[' → logprob: -14.125082015991211
    6. 'h' → logprob: -14.875082015991211
    7. 'n' → logprob: -15.000082015991211
    8. '=' → logprob: -15.875082015991211
    9. '```' → logprob: -16.87508201599121
    10. '	for' → logprob: -17.00008201599121

Token 34: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03580988571047783
    2. ' _' → logprob: -3.7858099937438965
    3. ' ' → logprob: -4.5358099937438965
    4. '_' → logprob: -6.6608099937438965
    5. 'i' → logprob: -7.7858099937438965
    6. ' ' → logprob: -10.410809516906738
    7. ' x' → logprob: -10.910809516906738
    8. ' ‌' → logprob: -11.660809516906738
    9. ' v' → logprob: -12.785809516906738
    10. ' h' → logprob: -13.285809516906738

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05153389647603035
    2. 'in' → logprob: -3.0515339374542236
    3. ' ' → logprob: -6.3015336990356445
    4. '_' → logprob: -7.0515336990356445
    5. '  ' → logprob: -9.676533699035645
    6. ' i' → logprob: -9.801533699035645
    7. ' _' → logprob: -10.551533699035645
    8. '0' → logprob: -11.051533699035645
    9. ' j' → logprob: -11.051533699035645
    10. '_in' → logprob: -11.426533699035645

Token 36: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08537637442350388
    2. 'range' → logprob: -2.585376262664795
    3. ' h' → logprob: -5.085376262664795
    4. 'h' → logprob: -8.210376739501953
    5. ' ' → logprob: -13.210376739501953
    6. '	range' → logprob: -13.460376739501953
    7. ' xrange' → logprob: -13.710376739501953
    8. '_range' → logprob: -14.460376739501953
    9. '(range' → logprob: -14.460376739501953
    10. '  ' → logprob: -15.335376739501953

Token 37: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11221000552177429
    2. '(n' → logprob: -2.3622100353240967
    3. '(len' → logprob: -4.862209796905518
    4. '(k' → logprob: -5.487209796905518
    5. '(i' → logprob: -11.112210273742676
    6. '(j' → logprob: -11.612210273742676
    7. '(
' → logprob: -11.987210273742676
    8. '(length' → logprob: -11.987210273742676
    9. '(int' → logprob: -12.362210273742676
    10. ' (' → logprob: -12.487210273742676

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01175414863973856
    2. ')' → logprob: -4.511754035949707
    3. ' ):' → logprob: -7.386754035949707
    4. ':' → logprob: -10.136754035949707
    5. '):
' → logprob: -10.511754035949707
    6. ' )' → logprob: -11.511754035949707
    7. '+' → logprob: -12.261754035949707
    8. ' ' → logprob: -14.761754035949707
    9. ',' → logprob: -14.761754035949707
    10. ']:' → logprob: -15.011754035949707

Token 39: '   ' (ID: 271)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.038364943116903305
    2. 'h' → logprob: -3.288364887237549
    3. ' ' → logprob: -9.038365364074707
    4. '	h' → logprob: -9.038365364074707
    5. '   ' → logprob: -10.413365364074707
    6. ' ' → logprob: -11.413365364074707
    7. 'int' → logprob: -11.788365364074707
    8. ' int' → logprob: -11.788365364074707
    9. '<|end|>' → logprob: -11.788365364074707
    10. ' `' → logprob: -12.163365364074707

Token 40: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.57596755027771
    2. ' h' → logprob: -0.82596755027771
    3. '	h' → logprob: -10.825967788696289
    4. '   ' → logprob: -12.950967788696289
    5. ' ' → logprob: -13.450967788696289
    6. ' ' → logprob: -14.200967788696289
    7. ' `' → logprob: -14.450967788696289
    8. '    ' → logprob: -14.950967788696289
    9. '[h' → logprob: -14.950967788696289
    10. '_h' → logprob: -15.075967788696289

Token 41: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.048598047345876694
    2. '.' → logprob: -3.048598051071167
    3. '.ap' → logprob: -12.798598289489746
    4. '.app' → logprob: -12.923598289489746
    5. '.extend' → logprob: -13.298598289489746
    6. 'append' → logprob: -13.673598289489746
    7. '.Append' → logprob: -14.173598289489746
    8. '.push' → logprob: -14.548598289489746
    9. ' .' → logprob: -14.798598289489746
    10. '.add' → logprob: -14.923598289489746

Token 42: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0019711002241820097
    2. '(' → logprob: -6.251971244812012
    3. ' (' → logprob: -10.251971244812012
    4. '(float' → logprob: -12.251971244812012
    5. '(i' → logprob: -13.751971244812012
    6. '(in' → logprob: -14.501971244812012
    7. 'int' → logprob: -15.251971244812012
    8. '(
' → logprob: -15.376971244812012
    9. '((' → logprob: -16.251970291137695
    10. '(h' → logprob: -16.626970291137695

Token 43: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.023248042911291122
    2. '(' → logprob: -3.7732479572296143
    3. ')' → logprob: -13.773247718811035
    4. '(s' → logprob: -14.773247718811035
    5. '(
' → logprob: -15.148247718811035
    6. ')(' → logprob: -15.398247718811035
    7. '(j' → logprob: -15.523247718811035
    8. ' (' → logprob: -16.02324867248535
    9. '(n' → logprob: -16.52324867248535
    10. '(ht' → logprob: -16.64824867248535

Token 44: '_str' (ID: 6182)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.923874702304602e-05
    2. '_str' → logprob: -10.250089645385742
    3. '[' → logprob: -10.500089645385742
    4. '[str' → logprob: -11.125089645385742
    5. ' [' → logprob: -12.125089645385742
    6. ')' → logprob: -13.250089645385742
    7. '[h' → logprob: -14.000089645385742
    8. ')[' → logprob: -14.250089645385742
    9. '[i' → logprob: -14.250089645385742
    10. '[k' → logprob: -14.375089645385742

Token 45: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0011722482740879059
    2. '[' → logprob: -6.751172065734863
    3. ')' → logprob: -13.626172065734863
    4. ' [' → logprob: -14.376172065734863
    5. '[
' → logprob: -16.50117301940918
    6. ')[' → logprob: -16.75117301940918
    7. '[i' → logprob: -17.87617301940918
    8. 'j' → logprob: -18.00117301940918
    9. '[js' → logprob: -18.50117301940918
    10. '[n' → logprob: -18.75117301940918

Token 46: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3271775543689728
    2. ']))' → logprob: -1.5771775245666504
    3. ')' → logprob: -2.9521775245666504
    4. ')))' → logprob: -4.07717752456665
    5. '])' → logprob: -5.95217752456665
    6. ')])' → logprob: -7.70217752456665
    7. ']' → logprob: -8.952178001403809
    8. '']))' → logprob: -10.202178001403809
    9. ')]' → logprob: -10.577178001403809
    10. ' ))' → logprob: -10.827178001403809

Token 47: 'ans' (ID: 616)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.45040273666381836
    2. 'if' → logprob: -2.3254027366638184
    3. 'i' → logprob: -2.8254027366638184
    4. 'for' → logprob: -3.5754027366638184
    5. 'c' → logprob: -3.7004027366638184
    6. 'd' → logprob: -3.7004027366638184
    7. 'a' → logprob: -3.9504027366638184
    8. 'm' → logprob: -3.9504027366638184
    9. '#' → logprob: -4.200402736663818
    10. 's' → logprob: -4.700402736663818

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2466575652360916
    2. '=' → logprob: -1.6216576099395752
    3. '_' → logprob: -3.996657609939575
    4. '[' → logprob: -6.621657371520996
    5. 's' → logprob: -8.371657371520996
    6. '[:]' → logprob: -8.371657371520996
    7. '=[]' → logprob: -8.621657371520996
    8. ' ' → logprob: -8.746657371520996
    9. '_space' → logprob: -9.371657371520996
    10. '[]' → logprob: -9.371657371520996

Token 49: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1972285658121109
    2. ' ' → logprob: -2.6972286701202393
    3. ' max' → logprob: -3.8222286701202393
    4. 'max' → logprob: -3.8222286701202393
    5. ' h' → logprob: -3.8222286701202393
    6. 'h' → logprob: -4.07222843170166
    7. '100' → logprob: -4.57222843170166
    8. '1' → logprob: -5.32222843170166
    9. 'k' → logprob: -5.57222843170166
    10. ' k' → logprob: -5.57222843170166

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.37003758549690247
    2. 'max' → logprob: -1.49503755569458
    3. 'h' → logprob: -3.37003755569458
    4. 'k' → logprob: -4.49503755569458
    5. '1' → logprob: -4.49503755569458
    6. '10' → logprob: -4.87003755569458
    7. '100' → logprob: -4.87003755569458
    8. 'sum' → logprob: -5.49503755569458
    9. 'min' → logprob: -5.99503755569458
    10. '-' → logprob: -6.12003755569458

Token 51: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37458932399749756
    2. 'for' → logprob: -1.4995893239974976
    3. '\n' → logprob: -2.874589443206787
    4. ' for' → logprob: -4.249589443206787
    5. '<|end|>' → logprob: -4.624589443206787
    6. ' 
' → logprob: -5.374589443206787
    7. ' ' → logprob: -6.624589443206787
    8. '' → logprob: -6.874589443206787
    9. '
' → logprob: -7.624589443206787
    10. '\' → logprob: -8.249588966369629

Token 52: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08634402602910995
    2. ' for' → logprob: -2.961344003677368
    3. '\n' → logprob: -4.086344242095947
    4. '
' → logprob: -4.836344242095947
    5. ' 
' → logprob: -5.836344242095947
    6. ' ' → logprob: -6.461344242095947
    7. '<|end|>' → logprob: -7.711344242095947
    8. '\' → logprob: -7.836344242095947
    9. '' → logprob: -8.711343765258789
    10. 'if' → logprob: -9.461343765258789

Token 53: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0048466152511537075
    2. ' ' → logprob: -6.379846572875977
    3. 'i' → logprob: -6.879846572875977
    4. ' _' → logprob: -7.129846572875977
    5. ' j' → logprob: -7.379846572875977
    6. '_' → logprob: -7.879846572875977
    7. ' h' → logprob: -8.629846572875977
    8. ' range' → logprob: -9.629846572875977
    9. '_i' → logprob: -10.629846572875977
    10. ' ' → logprob: -11.254846572875977

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008986089378595352
    2. 'in' → logprob: -4.883985996246338
    3. ' ' → logprob: -6.633985996246338
    4. 'range' → logprob: -10.383986473083496
    5. ' range' → logprob: -11.383986473083496
    6. '  ' → logprob: -11.633986473083496
    7. '	in' → logprob: -13.008986473083496
    8. ',' → logprob: -13.508986473083496
    9. 'n' → logprob: -13.883986473083496
    10. ' i' → logprob: -14.133986473083496

Token 55: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6328470706939697
    2. ' range' → logprob: -0.7578470706939697
    3. ' h' → logprob: -8.50784683227539
    4. 'h' → logprob: -10.38284683227539
    5. ' ' → logprob: -12.00784683227539
    6. '(range' → logprob: -13.00784683227539
    7. '	range' → logprob: -13.38284683227539
    8. '   ' → logprob: -13.50784683227539
    9. '  ' → logprob: -13.88284683227539
    10. ' xrange' → logprob: -14.00784683227539

Token 56: '(n' (ID: 2406)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.8304182887077332
    2. '(n' → logprob: -1.205418348312378
    3. '(' → logprob: -1.330418348312378
    4. ' (' → logprob: -8.830418586730957
    5. '(len' → logprob: -10.580418586730957
    6. '(s' → logprob: -11.705418586730957
    7. '(i' → logprob: -12.205418586730957
    8. ' k' → logprob: -12.830418586730957
    9. '()' → logprob: -13.080418586730957
    10. '((' → logprob: -13.330418586730957

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07003535330295563
    2. '-' → logprob: -2.945035457611084
    3. '-k' → logprob: -4.695035457611084
    4. ')' → logprob: -6.070035457611084
    5. ' ):' → logprob: -6.570035457611084
    6. ' -' → logprob: -6.695035457611084
    7. '):
' → logprob: -7.570035457611084
    8. ':' → logprob: -8.570034980773926
    9. '+' → logprob: -9.070034980773926
    10. ' ' → logprob: -10.445034980773926

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3134227395057678
    2. ' ' → logprob: -1.813422679901123
    3. ':' → logprob: -2.563422679901123
    4. ' h' → logprob: -5.063422679901123
    5. '    ' → logprob: -5.063422679901123
    6. ' if' → logprob: -5.438422679901123
    7. ' :' → logprob: -5.688422679901123
    8. ' for' → logprob: -5.813422679901123
    9. '<|end|>' → logprob: -6.438422679901123
    10. '  ' → logprob: -6.813422679901123

Token 59: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.101898193359375
    2. ' for' → logprob: -1.226898193359375
    3. 'for' → logprob: -1.726898193359375
    4. 'if' (adapté à ' if') → logprob: -1.976898193359375
    5. '   ' → logprob: -3.476898193359375
    6. ' ans' → logprob: -3.726898193359375
    7. 'ans' → logprob: -6.226898193359375
    8. ' ' → logprob: -7.351898193359375
    9. ' h' → logprob: -8.851898193359375
    10. '    ' → logprob: -9.226898193359375

Token 60: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.4311896860599518
    2. 'h' → logprob: -1.0561896562576294
    3. '   ' → logprob: -6.18118953704834
    4. ' i' → logprob: -9.18118953704834
    5. ' k' → logprob: -9.43118953704834
    6. 'k' → logprob: -9.68118953704834
    7. ' ' → logprob: -9.80618953704834
    8. 'i' → logprob: -9.93118953704834
    9. ')' → logprob: -10.80618953704834
    10. '    ' → logprob: -11.30618953704834

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00013846253568772227
    2. '[' → logprob: -9.000138282775879
    3. '[j' → logprob: -11.375138282775879
    4. '[h' → logprob: -13.625138282775879
    5. ' [' → logprob: -14.375138282775879
    6. 'i' → logprob: -15.000138282775879
    7. '[k' → logprob: -15.250138282775879
    8. '```' → logprob: -16.125139236450195
    9. '[
' → logprob: -16.250139236450195
    10. '[I' → logprob: -16.375139236450195

Token 62: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6861270666122437
    2. '>' → logprob: -0.9361270666122437
    3. ' >=' → logprob: -2.936127185821533
    4. ' ' → logprob: -3.686127185821533
    5. '>=' → logprob: -4.686127185821533
    6. '[i' → logprob: -5.561127185821533
    7. ']' → logprob: -5.811127185821533
    8. ' <=' → logprob: -6.061127185821533
    9. '[' → logprob: -6.186127185821533
    10. ' <' → logprob: -6.436127185821533

Token 63: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.0669231414794922
    2. '>=' → logprob: -1.3169231414794922
    3. ' >' → logprob: -1.6919231414794922
    4. ' >=' → logprob: -1.6919231414794922
    5. '<' → logprob: -5.316923141479492
    6. ' <' → logprob: -5.441923141479492
    7. ' ' → logprob: -5.691923141479492
    8. ' <=' → logprob: -6.191923141479492
    9. '<=' → logprob: -6.191923141479492
    10. '%' → logprob: -6.316923141479492

Token 64: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6935750246047974
    2. ' k' → logprob: -0.6935750246047974
    3. ' ' → logprob: -8.568574905395508
    4. '1' → logprob: -9.693574905395508
    5. '100' → logprob: -10.193574905395508
    6. 'h' → logprob: -10.693574905395508
    7. ' h' → logprob: -10.818574905395508
    8. ' ans' → logprob: -11.318574905395508
    9. '10' → logprob: -11.443574905395508
    10. '2' → logprob: -11.568574905395508

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00866420567035675
    2. ':
' → logprob: -4.758664131164551
    3. ' :' → logprob: -10.88366413116455
    4. '   ' → logprob: -11.63366413116455
    5. '-' → logprob: -11.88366413116455
    6. '+' → logprob: -12.88366413116455
    7. '.' → logprob: -13.13366413116455
    8. ':
' → logprob: -13.13366413116455
    9. ' :
' → logprob: -13.63366413116455
    10. 'and' → logprob: -13.63366413116455

Token 66: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.46652546525001526
    2. '   ' → logprob: -1.0915254354476929
    3. ' ans' → logprob: -4.216525554656982
    4. '       ' → logprob: -4.341525554656982
    5. '	ans' → logprob: -5.341525554656982
    6. ':' → logprob: -6.841525554656982
    7. ' ' → logprob: -6.841525554656982
    8. ':
' → logprob: -7.341525554656982
    9. '
' → logprob: -7.466525554656982
    10. '  ' → logprob: -8.091525077819824

Token 67: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.06862659007310867
    2. ' ans' → logprob: -2.818626642227173
    3. '   ' → logprob: -5.193626403808594
    4. '	ans' → logprob: -7.568626403808594
    5. ' ' → logprob: -8.193626403808594
    6. '(ans' → logprob: -9.443626403808594
    7. '
' → logprob: -10.193626403808594
    8. 'print' → logprob: -10.443626403808594
    9. '  ' → logprob: -10.568626403808594
    10. '_ans' → logprob: -11.068626403808594

Token 68: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03393613174557686
    2. ' +=' → logprob: -3.408936023712158
    3. '=' → logprob: -8.283936500549316
    4. '+' → logprob: -10.658936500549316
    5. ' =' → logprob: -11.533936500549316
    6. '+=(' → logprob: -13.283936500549316
    7. ']+=' → logprob: -13.658936500549316
    8. '+='' → logprob: -14.658936500549316
    9. '+="' → logprob: -14.908936500549316
    10. '   ' → logprob: -15.408936500549316

Token 69: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022013843059539795
    2. ' ' → logprob: -4.2720136642456055
    3. 'h' → logprob: -4.8970136642456055
    4. ' h' → logprob: -8.897013664245605
    5. 'k' → logprob: -9.647013664245605
    6. '(h' → logprob: -9.897013664245605
    7. '2' → logprob: -10.647013664245605
    8. '100' → logprob: -11.272013664245605
    9. '   ' → logprob: -11.397013664245605
    10. '(' → logprob: -11.522013664245605

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008779428899288177
    2. 'h' → logprob: -5.133779525756836
    3. 'k' → logprob: -6.133779525756836
    4. ' ' → logprob: -7.508779525756836
    5. '(k' → logprob: -10.008779525756836
    6. '(' → logprob: -10.633779525756836
    7. '(h' → logprob: -10.758779525756836
    8. '100' → logprob: -11.758779525756836
    9. '500' → logprob: -12.508779525756836
    10. '   ' → logprob: -12.633779525756836

Token 71: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029883893206715584
    2. '
' → logprob: -3.529883861541748
    3. '
' → logprob: -10.029884338378906
    4. ' print' → logprob: -10.279884338378906
    5. '\n' → logprob: -10.404884338378906
    6. '  
' → logprob: -11.529884338378906
    7. ' 
' → logprob: -11.904884338378906
    8. '    
' → logprob: -13.279884338378906
    9. '<|end|>' → logprob: -13.279884338378906
    10. '```' → logprob: -13.654884338378906

Token 72: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002491945633664727
    2. '
' → logprob: -6.0024919509887695
    3. ' print' → logprob: -11.37749195098877
    4. '
' → logprob: -13.12749195098877
    5. '\n' → logprob: -13.12749195098877
    6. ' 
' → logprob: -15.50249195098877
    7. '  
' → logprob: -15.62749195098877
    8. '```' → logprob: -15.87749195098877
    9. '    
' → logprob: -16.252490997314453
    10. '0' → logprob: -16.877490997314453

Token 73: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008689153008162975
    2. '(ans' → logprob: -4.758688926696777
    3. '('' → logprob: -10.008688926696777
    4. '("("' → logprob: -10.883688926696777
    5. '()' → logprob: -12.133688926696777
    6. '("' → logprob: -13.383688926696777
    7. '(`' → logprob: -13.758688926696777
    8. ' (' → logprob: -14.258688926696777
    9. '((' → logprob: -14.258688926696777
    10. '(len' → logprob: -15.383688926696777

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -13.750000953674316
    3. ')`' → logprob: -17.500001907348633
    4. ')
' → logprob: -17.750001907348633
    5. '))' → logprob: -17.875001907348633
    6. '')' → logprob: -19.375001907348633
    7. '）' → logprob: -19.625001907348633
    8. '`)' → logprob: -19.750001907348633
    9. '()' → logprob: -20.500001907348633
    10. '(' → logprob: -21.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 72
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 33
Tokens correctement prédits (top 10): 58
Précision stricte (1ère position): 43.06%
Précision adaptée (1ère position): 45.83%
Précision (top 10): 80.56%
================================================================================
