================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
h,w=[int(x)for x in input().split()]
a=[];exec('a.append([1 if c=="#"else 0 for c in input()]);'*h)
class Holder:
    pass
x=[[[ -2 for _ in range(h+2)]for k in range(w+2)]for l in range(h+2)]
def build_y():
    return [[[-2]*(w+2)for b in range(w+2)] for d in range(h+2)]
y=build_y()

def init_mat():
    for i in range(h):
        for j in range(w):
            x[i][j][i] = j
            y[i][j][j] = i
init_mat()

for v in range(h):
    for t in range(w-2,-1,-1):
        a1=a[v][t];a2=a[v][t+1]
        if a1==a2: x[v][t][v]=x[v][t+1][v]
for t in range(h-2,-1,-1):
    for v in range(w):
        if a[t][v]==a[t+1][v]:
            y[t][v][v]=y[t+1][v][v]

i=0
while i<h:
    for j in range(w):
        b = i + 1
        while b<h and a[b][j]==a[i][j]:
            x[i][j][b]=min(x[i][j][b-1],x[b][j][b])
            b+=1
    i+=1

for k in range(h):
    for l in range(w):
        m=l+1
        while m<w and a[k][m]==a[k][l]:
            y[k][l][m]=min(y[k][l][m-1],y[k][m][m])
            m+=1

k=0
flag = False
while not flag:
    if x[0][0][h-1]==w-1:
        print(k)
        flag=True
        continue
    elif k==15:
        print(16)
        break
    for idx1 in range(h):
        RowX = x[idx1]
        RowY = y[idx1]
        for idx2 in range(w):
            RXJ = RowX[idx2]
            RYJ = RowY[idx2]
            rr=idx1
            while rr<h:
                if RXJ[rr]>=0 and x[idx1][RXJ[rr]+1][rr]>=0:
                    RXJ[rr]=x[idx1][RXJ[rr]+1][rr]
                rr+=1
            cc=idx2
            while cc<w:
                if RYJ[cc]>=0 and y[RYJ[cc]+1][idx2][cc]>=0:
                    RYJ[cc]=y[RYJ[cc]+1][idx2][cc]
                cc+=1

            jj=w-1
            rr=idx1
            while rr<h:
                while jj>=idx2 and RYJ[jj]<rr:
                    jj-=1
                if jj>=idx2:
                    RXJ[rr]=max(RXJ[rr],jj)
                rr+=1
            ii=h-1
            cc=idx2
            while cc<w:
                while ii>=idx1 and RXJ[ii]<cc:
                    ii-=1
                if ii>=idx1:
                    RYJ[cc]=max(RYJ[cc],ii)
                cc+=1
    k+=1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'h' (ID: 71)
  → Token d'amorce (pas de prédiction)

Token 1: ',w' (ID: 49598)
  → Token d'amorce (pas de prédiction)

Token 2: '=[' (ID: 13370)
  → Token d'amorce (pas de prédiction)

Token 3: 'int' (ID: 491)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.9683100581169128
    2. '0' → logprob: -1.0933101177215576
    3. '100' → logprob: -2.2183101177215576
    4. '28' → logprob: -3.0933101177215576
    5. '224' → logprob: -3.0933101177215576
    6. '240' → logprob: -3.5933101177215576
    7. '24' → logprob: -3.9683101177215576
    8. 'int' → logprob: -4.8433098793029785
    9. '256' → logprob: -5.0933098793029785
    10. '720' → logprob: -5.2183098793029785

Token 4: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6141614317893982
    2. '(x' → logprob: -0.8641614317893982
    3. '(i' → logprob: -3.364161491394043
    4. '(s' → logprob: -6.364161491394043
    5. ']' → logprob: -8.239161491394043
    6. '(c' → logprob: -8.364161491394043
    7. '(input' → logprob: -8.864161491394043
    8. '(a' → logprob: -8.864161491394043
    9. '(item' → logprob: -9.614161491394043
    10. '(
' → logprob: -9.614161491394043

Token 5: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.546478935983032e-05
    2. 'for' → logprob: -11.375025749206543
    3. '(x' → logprob: -12.500025749206543
    4. ' )' → logprob: -12.875025749206543
    5. ' for' → logprob: -12.875025749206543
    6. '(' → logprob: -14.375025749206543
    7. ')c' → logprob: -14.375025749206543
    8. ' ' → logprob: -14.500025749206543
    9. '),' → logprob: -14.625025749206543
    10. '(i' → logprob: -14.875025749206543

Token 6: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0059168338775635
    2. '(' → logprob: -1.1309168338775635
    3. ' for' → logprob: -1.8809168338775635
    4. ')' → logprob: -3.0059168338775635
    5. '(x' → logprob: -3.0059168338775635
    6. '(input' → logprob: -3.6309168338775635
    7. ']' → logprob: -4.380916595458984
    8. '(i' → logprob: -5.880916595458984
    9. '(code' → logprob: -5.880916595458984
    10. '(s' → logprob: -6.005916595458984

Token 7: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.06248709186911583
    2. ' input' → logprob: -3.1874871253967285
    3. 'x' → logprob: -4.1874871253967285
    4. 'input' → logprob: -5.8124871253967285
    5. ' in' → logprob: -7.4374871253967285
    6. '_' → logprob: -8.06248664855957
    7. ' ' → logprob: -9.31248664855957
    8. ' range' → logprob: -10.81248664855957
    9. 'in' → logprob: -10.93748664855957
    10. ' user' → logprob: -11.06248664855957

Token 8: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.706375241279602
    2. 'input' → logprob: -0.831375241279602
    3. ' in' → logprob: -2.9563751220703125
    4. '=input' → logprob: -4.9563751220703125
    5. 'in' → logprob: -5.0813751220703125
    6. '(input' → logprob: -5.2063751220703125
    7. '_input' → logprob: -9.206375122070312
    8. ',input' → logprob: -9.456375122070312
    9. ' ' → logprob: -9.956375122070312
    10. '(' → logprob: -10.206375122070312

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0232466422021389
    2. ' input' → logprob: -3.7732465267181396
    3. '(input' → logprob: -14.148246765136719
    4. '<input' → logprob: -15.648246765136719
    5. '=input' → logprob: -16.02324676513672
    6. '```' → logprob: -17.02324676513672
    7. '[input' → logprob: -17.64824676513672
    8. '.input' → logprob: -17.77324676513672
    9. ',input' → logprob: -17.77324676513672
    10. '0' → logprob: -18.02324676513672

Token 10: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.026256877928972244
    2. '()' → logprob: -3.901256799697876
    3. '().' → logprob: -5.276257038116455
    4. '()].' → logprob: -8.276256561279297
    5. '()][' → logprob: -8.401256561279297
    6. '())' → logprob: -10.651256561279297
    7. '()],' → logprob: -10.776256561279297
    8. '(' → logprob: -10.901256561279297
    9. ']()' → logprob: -11.276256561279297
    10. ']' → logprob: -12.276256561279297

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00018661346985027194
    2. 'strip' → logprob: -8.750186920166016
    3. 'rstrip' → logprob: -10.500186920166016
    4. ' split' → logprob: -15.125186920166016
    5. 'read' → logprob: -15.375186920166016
    6. 'spl' → logprob: -16.250186920166016
    7. '(split' → logprob: -17.125186920166016
    8. 'replace' → logprob: -18.625186920166016
    9. 'sp' → logprob: -19.875186920166016
    10. 's' → logprob: -19.875186920166016

Token 12: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.008136029355227947
    2. '(' → logprob: -4.883135795593262
    3. '()' → logprob: -8.133135795593262
    4. '('' → logprob: -9.008135795593262
    5. ']' → logprob: -9.508135795593262
    6. '())' → logprob: -10.883135795593262
    7. ')]' → logprob: -12.258135795593262
    8. '()],' → logprob: -12.633135795593262
    9. ']()' → logprob: -12.758135795593262
    10. '("' → logprob: -13.508135795593262

Token 13: 'a' (ID: 64)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.714387059211731
    2. '#' → logprob: -1.839387059211731
    3. '
' → logprob: -2.9643869400024414
    4. '\n' → logprob: -2.9643869400024414
    5. ';' → logprob: -3.2143869400024414
    6. ':' → logprob: -3.4643869400024414
    7. '*' → logprob: -3.4643869400024414
    8. ',
' → logprob: -3.5893869400024414
    9. 'print' → logprob: -4.339386940002441
    10. '-' → logprob: -4.589386940002441

Token 14: '=[]' (ID: 65563)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6825099587440491
    2. '[' → logprob: -0.9325099587440491
    3. ' =' → logprob: -2.9325098991394043
    4. '=[]' → logprob: -4.432509899139404
    5. '[h' → logprob: -4.807509899139404
    6. '=[' → logprob: -4.807509899139404
    7. '[i' → logprob: -5.182509899139404
    8. '[a' → logprob: -5.182509899139404
    9. 'a' → logprob: -6.682509899139404
    10. '[:]' → logprob: -7.057509899139404

Token 15: ';' (ID: 26)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0044777123257517815
    2. ' for' → logprob: -5.504477500915527
    3. '<|end|>' → logprob: -8.254477500915527
    4. '
' → logprob: -10.004477500915527
    5. '\n' → logprob: -10.754477500915527
    6. '```' → logprob: -10.879477500915527
    7. ' ' → logprob: -11.254477500915527
    8. '[' → logprob: -11.379477500915527
    9. '\' → logprob: -11.879477500915527
    10. ' 
' → logprob: -12.629477500915527

Token 16: 'exec' (ID: 31592)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0038139724638313055
    2. ' for' → logprob: -5.628813743591309
    3. '[' → logprob: -8.753813743591309
    4. '_' → logprob: -10.628813743591309
    5. ' ' → logprob: -12.003813743591309
    6. '<|end|>' → logprob: -12.753813743591309
    7. ' 
' → logprob: -12.878813743591309
    8. 'range' → logprob: -13.003813743591309
    9. '```' → logprob: -13.128813743591309
    10. '[int' → logprob: -13.503813743591309

Token 17: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3056291937828064
    2. '("' → logprob: -2.180629253387451
    3. '(' → logprob: -2.555629253387451
    4. '("""' → logprob: -2.680629253387451
    5. '(input' → logprob: -6.305629253387451
    6. '(eval' → logprob: -7.680629253387451
    7. '(('' → logprob: -7.680629253387451
    8. '('\' → logprob: -8.680628776550293
    9. '(open' → logprob: -8.805628776550293
    10. '((' → logprob: -9.055628776550293

Token 18: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.021577607840299606
    2. 'for' → logprob: -3.8965775966644287
    3. ' a' → logprob: -7.646577835083008
    4. 'i' → logprob: -9.021577835083008
    5. ' for' → logprob: -9.021577835083008
    6. 'n' → logprob: -9.896577835083008
    7. 'l' → logprob: -9.896577835083008
    8. 's' → logprob: -10.396577835083008
    9. 'x' → logprob: -10.771577835083008
    10. 'r' → logprob: -10.771577835083008

Token 19: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0018383220303803682
    2. '.' → logprob: -6.626838207244873
    3. '+' → logprob: -8.501838684082031
    4. '+.' → logprob: -8.876838684082031
    5. '+=' → logprob: -9.251838684082031
    6. '.extend' → logprob: -10.126838684082031
    7. '.app' → logprob: -10.751838684082031
    8. '.ap' → logprob: -12.376838684082031
    9. '.+' → logprob: -13.001838684082031
    10. 'append' → logprob: -13.751838684082031

Token 20: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.35376712679862976
    2. '(list' → logprob: -1.2287671566009521
    3. '(tuple' → logprob: -5.978766918182373
    4. '(' → logprob: -6.478766918182373
    5. '(input' → logprob: -7.228766918182373
    6. '(int' → logprob: -8.103767395019531
    7. '([]' → logprob: -9.728767395019531
    8. '([[' → logprob: -10.228767395019531
    9. '(eval' → logprob: -10.228767395019531
    10. '('' → logprob: -10.978767395019531

Token 21: '1' (ID: 16)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.016055013984441757
    2. '0' → logprob: -4.266055107116699
    3. '*' → logprob: -6.516055107116699
    4. '1' → logprob: -8.8910551071167
    5. '(int' → logprob: -9.3910551071167
    6. '[int' → logprob: -9.3910551071167
    7. 'input' → logprob: -10.7660551071167
    8. 'i' → logprob: -11.0160551071167
    9. 'ord' → logprob: -11.2660551071167
    10. ' int' → logprob: -11.3910551071167

Token 22: ' if' (ID: 538)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.22194981575012207
    2. ']+' → logprob: -2.721949815750122
    3. ']*(' → logprob: -3.096949815750122
    4. 'for' → logprob: -3.221949815750122
    5. ' for' → logprob: -4.096949577331543
    6. ' ]' → logprob: -4.346949577331543
    7. ']' → logprob: -4.971949577331543
    8. ' ' → logprob: -5.846949577331543
    9. 'if' → logprob: -5.846949577331543
    10. ',' → logprob: -5.971949577331543

Token 23: ' c' (ID: 274)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.0137344598770142
    2. 'input' → logprob: -1.1387344598770142
    3. 'x' → logprob: -1.8887344598770142
    4. ' x' → logprob: -2.6387343406677246
    5. 'int' → logprob: -3.3887343406677246
    6. 'i' → logprob: -3.8887343406677246
    7. ' i' → logprob: -4.388734340667725
    8. 'c' → logprob: -5.013734340667725
    9. ' int' → logprob: -5.388734340667725
    10. '_' → logprob: -5.388734340667725

Token 24: '=="' (ID: 24027)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.7700137495994568
    2. '==' → logprob: -0.8950137495994568
    3. ' in' → logprob: -2.5200138092041016
    4. ' ==' → logprob: -3.5200138092041016
    5. ' =='' → logprob: -5.145013809204102
    6. 'in' → logprob: -5.270013809204102
    7. '=input' → logprob: -5.770013809204102
    8. 'input' → logprob: -6.895013809204102
    9. '=="' → logprob: -7.020013809204102
    10. ' for' → logprob: -7.020013809204102

Token 25: '#"' (ID: 140113)
  Prédit: '#"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#"' → logprob: -0.8159806728363037
    2. '#' → logprob: -0.9409806728363037
    3. '."' → logprob: -2.6909806728363037
    4. '"' → logprob: -3.8159806728363037
    5. '*"' → logprob: -3.8159806728363037
    6. '*' → logprob: -4.190980911254883
    7. '@"' → logprob: -4.690980911254883
    8. '.' → logprob: -4.815980911254883
    9. '"#' → logprob: -5.190980911254883
    10. 'W' → logprob: -5.565980911254883

Token 26: 'else' (ID: 2807)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0891081690788269
    2. 'else' → logprob: -2.4641082286834717
    3. ' or' → logprob: -9.58910846710205
    4. '<|end|>' → logprob: -9.96410846710205
    5. ' ' → logprob: -10.58910846710205
    6. 'or' → logprob: -12.08910846710205
    7. ')' → logprob: -12.21410846710205
    8. ' for' → logprob: -12.83910846710205
    9. '```' → logprob: -12.83910846710205
    10. ' in' → logprob: -13.08910846710205

Token 27: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3138450086116791
    2. ' ' → logprob: -1.3138450384140015
    3. ''' → logprob: -8.688844680786133
    4. 'int' → logprob: -9.438844680786133
    5. ' int' → logprob: -9.876344680786133
    6. '1' → logprob: -9.938844680786133
    7. 'c' → logprob: -10.376344680786133
    8. '.' → logprob: -10.688844680786133
    9. ' 
' → logprob: -11.063844680786133
    10. '-' → logprob: -11.188844680786133

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007719255518168211
    2. ' ' → logprob: -5.132719039916992
    3. ''.' → logprob: -7.007719039916992
    4. 'c' → logprob: -8.507719039916992
    5. ''' → logprob: -9.007719039916992
    6. '"."' → logprob: -9.132719039916992
    7. '1' → logprob: -9.382719039916992
    8. 'int' → logprob: -9.382719039916992
    9. '"' → logprob: -9.757719039916992
    10. '.' → logprob: -9.882719039916992

Token 29: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.020691128447651863
    2. 'for' → logprob: -3.895691156387329
    3. ' ' → logprob: -9.39569091796875
    4. ' in' → logprob: -10.14569091796875
    5. ')' → logprob: -11.39569091796875
    6. ' if' → logprob: -12.77069091796875
    7. ' )' → logprob: -12.89569091796875
    8. ' f' → logprob: -14.02069091796875
    9. ' c' → logprob: -14.02069091796875
    10. 'or' → logprob: -14.14569091796875

Token 30: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.9223331212997437
    2. '_' → logprob: -1.5473331212997437
    3. ' input' → logprob: -1.5473331212997437
    4. ' _' → logprob: -2.047333240509033
    5. 'c' → logprob: -3.797333240509033
    6. 'input' → logprob: -4.422333240509033
    7. ' ' → logprob: -5.297333240509033
    8. ' range' → logprob: -6.047333240509033
    9. ' s' → logprob: -6.422333240509033
    10. ' x' → logprob: -6.672333240509033

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004471777938306332
    2. ' input' → logprob: -6.254471778869629
    3. 'in' → logprob: -6.254471778869629
    4. 'input' → logprob: -7.504471778869629
    5. ' ' → logprob: -10.129471778869629
    6. '<|end|>' → logprob: -11.379471778869629
    7. 's' → logprob: -13.004471778869629
    8. '<|end|>' → logprob: -13.129471778869629
    9. '=input' → logprob: -13.504471778869629
    10. ',input' → logprob: -13.504471778869629

Token 32: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0890347808599472
    2. ' input' → logprob: -2.4640347957611084
    3. 'list' → logprob: -10.464035034179688
    4. '[input' → logprob: -11.214035034179688
    5. 'in' → logprob: -11.339035034179688
    6. '(input' → logprob: -11.589035034179688
    7. '_' → logprob: -11.964035034179688
    8. ' ' → logprob: -12.339035034179688
    9. '_input' → logprob: -12.589035034179688
    10. 'range' → logprob: -12.714035034179688

Token 33: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0317743718624115
    2. '().' → logprob: -3.7817742824554443
    3. '()]' → logprob: -5.531774520874023
    4. '())' → logprob: -5.656774520874023
    5. ')])' → logprob: -7.906774520874023
    6. '()])
' → logprob: -8.406774520874023
    7. '])' → logprob: -8.906774520874023
    8. '()>' → logprob: -10.031774520874023
    9. '()],' → logprob: -10.031774520874023
    10. '()][' → logprob: -10.406774520874023

Token 34: ']);' (ID: 34389)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3320994973182678
    2. '()' → logprob: -1.332099437713623
    3. ']);' → logprob: -4.707099437713623
    4. '().' → logprob: -5.957099437713623
    5. '()]' → logprob: -6.332099437713623
    6. '.strip' → logprob: -6.832099437713623
    7. ''])' → logprob: -7.082099437713623
    8. ']))' → logprob: -7.207099437713623
    9. ' ])' → logprob: -7.332099437713623
    10. '()])
' → logprob: -7.332099437713623

Token 35: ''*' (ID: 96093)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.6770152449607849
    2. ''' → logprob: -1.3020153045654297
    3. ' ')' → logprob: -2.0520153045654297
    4. ')' → logprob: -3.0520153045654297
    5. ' )' → logprob: -4.30201530456543
    6. ' '' → logprob: -5.05201530456543
    7. ' ')'' → logprob: -5.30201530456543
    8. '');' → logprob: -5.42701530456543
    9. '\n' → logprob: -5.55201530456543
    10. '"' → logprob: -6.30201530456543

Token 36: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3138781785964966
    2. 'w' → logprob: -1.3138781785964966
    3. ' h' → logprob: -8.063878059387207
    4. ' w' → logprob: -8.188878059387207
    5. '(w' → logprob: -10.813878059387207
    6. '(h' → logprob: -13.063878059387207
    7. ' ' → logprob: -14.438878059387207
    8. ' (' → logprob: -14.688878059387207
    9. 'str' → logprob: -15.313878059387207
    10. '(' → logprob: -15.813878059387207

Token 37: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.1557283111615106e-05
    2. ')
' → logprob: -10.750041961669922
    3. ' )' → logprob: -12.000041961669922
    4. '')' → logprob: -12.250041961669922
    5. ')a' → logprob: -13.125041961669922
    6. ');' → logprob: -13.375041961669922
    7. ')

' → logprob: -13.750041961669922
    8. '),' → logprob: -14.000041961669922
    9. '))' → logprob: -14.000041961669922
    10. ')`' → logprob: -14.500041961669922

Token 38: 'class' (ID: 1444)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7079912424087524
    2. 'dp' → logprob: -1.0829912424087524
    3. 'r' → logprob: -3.332991123199463
    4. 'f' → logprob: -3.582991123199463
    5. ' for' → logprob: -4.207991123199463
    6. 'd' → logprob: -4.207991123199463
    7. 'n' → logprob: -4.332991123199463
    8. 'ans' → logprob: -4.832991123199463
    9. 'x' → logprob: -4.957991123199463
    10. 's' → logprob: -4.957991123199463

Token 39: ' Holder' (ID: 76417)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.4819006323814392
    2. ' Matrix' → logprob: -2.106900691986084
    3. ' Board' → logprob: -3.481900691986084
    4. ' Grid' → logprob: -3.731900691986084
    5. ' Solver' → logprob: -3.731900691986084
    6. ' Union' → logprob: -3.856900691986084
    7. ' Maze' → logprob: -3.981900691986084
    8. ' Node' → logprob: -4.106900691986084
    9. ' ' → logprob: -4.231900691986084
    10. ' Point' → logprob: -4.356900691986084

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00047511752927675843
    2. ' :' → logprob: -7.87547492980957
    3. ':
' → logprob: -9.75047492980957
    4. '(' → logprob: -11.50047492980957
    5. '():' → logprob: -11.62547492980957
    6. '(object' → logprob: -11.87547492980957
    7. '<|end|>' → logprob: -12.12547492980957
    8. ':

' → logprob: -14.25047492980957
    9. ':def' → logprob: -14.25047492980957
    10. ':**' → logprob: -14.37547492980957

Token 41: '   ' (ID: 271)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.29847097396850586
    2. '<|end|>' → logprob: -2.173470973968506
    3. '   ' → logprob: -2.673470973968506
    4. '
' → logprob: -3.673470973968506
    5. ' 
' → logprob: -4.048470973968506
    6. ' def' → logprob: -4.548470973968506
    7. 'pass' → logprob: -5.048470973968506
    8. ' ' → logprob: -5.423470973968506
    9. '    ' → logprob: -5.798470973968506
    10. '    
' → logprob: -6.048470973968506

Token 42: ' pass' (ID: 1853)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.12577107548713684
    2. ' pass' → logprob: -2.2507710456848145
    3. 'def' → logprob: -4.3757710456848145
    4. 'pass' (adapté à ' pass') → logprob: -8.250771522521973
    5. '   ' → logprob: -10.875771522521973
    6. ' ' → logprob: -13.250771522521973
    7. '	pass' → logprob: -13.500771522521973
    8. '    ' → logprob: -13.750771522521973
    9. '	def' → logprob: -14.125771522521973
    10. ' __' → logprob: -15.000771522521973

Token 43: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08752579987049103
    2. '<|end|>' → logprob: -2.8375258445739746
    3. '

' → logprob: -4.462525844573975
    4. '' → logprob: -5.587525844573975
    5. 'h' → logprob: -5.962525844573975
    6. '
' → logprob: -6.462525844573975
    7. 'n' → logprob: -7.087525844573975
    8. '<|end|>' → logprob: -7.462525844573975
    9. '.' → logprob: -7.587525844573975
    10. ' ' → logprob: -7.712525844573975

Token 44: 'x' (ID: 87)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16085804998874664
    2. '<|end|>' → logprob: -2.910858154296875
    3. 'h' → logprob: -3.660858154296875
    4. 'a' → logprob: -4.160858154296875
    5. 'n' → logprob: -4.410858154296875
    6. 's' → logprob: -5.035858154296875
    7. ' 
' → logprob: -5.160858154296875
    8. '' → logprob: -5.535858154296875
    9. '

' → logprob: -5.660858154296875
    10. 'x' → logprob: -5.910858154296875

Token 45: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01511586643755436
    2. ' =' → logprob: -4.390115737915039
    3. '.' → logprob: -6.140115737915039
    4. '.=' → logprob: -9.140115737915039
    5. '=x' → logprob: -9.640115737915039
    6. '=[]' → logprob: -9.765115737915039
    7. ',' → logprob: -9.890115737915039
    8. '=a' → logprob: -10.390115737915039
    9. ' ' → logprob: -10.765115737915039
    10. ',y' → logprob: -11.265115737915039

Token 46: '[[' (ID: 26245)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11420861631631851
    2. 'i' → logprob: -3.364208698272705
    3. 'Holder' → logprob: -3.614208698272705
    4. '[]' → logprob: -4.614208698272705
    5. 'a' → logprob: -4.739208698272705
    6. '(' → logprob: -4.864208698272705
    7. 'False' → logprob: -5.489208698272705
    8. '1' → logprob: -5.739208698272705
    9. 'None' → logprob: -6.239208698272705
    10. '[' → logprob: -6.239208698272705

Token 47: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.049750637263059616
    2. '-' → logprob: -3.424750566482544
    3. 'False' → logprob: -4.799750804901123
    4. 'None' → logprob: -5.674750804901123
    5. 'float' → logprob: -7.174750804901123
    6. 'Holder' → logprob: -7.299750804901123
    7. '[' → logprob: -7.424750804901123
    8. '1' → logprob: -7.549750804901123
    9. '[]' → logprob: -7.674750804901123
    10. '(' → logprob: -9.049750328063965

Token 48: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01955549046397209
    2. 'float' → logprob: -5.269555568695068
    3. '-' → logprob: -5.394555568695068
    4. '10' → logprob: -6.144555568695068
    5. '100' → logprob: -6.644555568695068
    6. 'w' → logprob: -6.769555568695068
    7. '2' → logprob: -6.894555568695068
    8. 'h' → logprob: -6.894555568695068
    9. '999' → logprob: -7.769555568695068
    10. '(-' → logprob: -8.26955509185791

Token 49: ' for' (ID: 395)
  Prédit: '147'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '147' → logprob: -0.1483120620250702
    2. '**' → logprob: -2.1483120918273926
    3. '000' → logprob: -5.273312091827393
    4. '00' → logprob: -5.648312091827393
    5. '048' → logprob: -6.148312091827393
    6. '1' → logprob: -6.398312091827393
    7. '047' → logprob: -6.398312091827393
    8. '0' → logprob: -6.648312091827393
    9. '_' → logprob: -6.898312091827393
    10. ']' → logprob: -7.398312091827393

Token 50: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.2902062237262726
    2. '_' → logprob: -1.5402061939239502
    3. ' k' → logprob: -3.91520619392395
    4. ' i' → logprob: -5.165206432342529
    5. 'k' → logprob: -5.665206432342529
    6. ' j' → logprob: -6.165206432342529
    7. '_k' → logprob: -6.290206432342529
    8. ' z' → logprob: -6.915206432342529
    9. ' l' → logprob: -7.040206432342529
    10. ' range' → logprob: -7.290206432342529

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003198750549927354
    2. 'in' → logprob: -6.253198623657227
    3. ' range' → logprob: -7.253198623657227
    4. 'range' → logprob: -7.628198623657227
    5. ' ' → logprob: -9.753198623657227
    6. '  ' → logprob: -12.628198623657227
    7. ' _' → logprob: -13.253198623657227
    8. 's' → logprob: -13.503198623657227
    9. 'In' → logprob: -13.628198623657227
    10. '_' → logprob: -13.753198623657227

Token 52: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02976900152862072
    2. 'range' → logprob: -3.529768943786621
    3. '	range' → logprob: -12.654768943786621
    4. ' xrange' → logprob: -12.779768943786621
    5. '_range' → logprob: -12.904768943786621
    6. '_' → logprob: -13.029768943786621
    7. '(range' → logprob: -13.279768943786621
    8. ' ' → logprob: -13.654768943786621
    9. 'r' → logprob: -14.279768943786621
    10. '0' → logprob: -14.654768943786621

Token 53: '(h' (ID: 8120)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.4576183259487152
    2. '(' → logprob: -1.0826183557510376
    3. '(h' → logprob: -3.582618236541748
    4. ' (' → logprob: -8.082618713378906
    5. '(a' → logprob: -8.707618713378906
    6. 'w' → logprob: -9.582618713378906
    7. '3' → logprob: -10.707618713378906
    8. '(k' → logprob: -10.832618713378906
    9. '(x' → logprob: -11.207618713378906
    10. ' w' → logprob: -11.582618713378906

Token 54: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006606113165616989
    2. ')' → logprob: -7.750660419464111
    3. ']' → logprob: -9.50066089630127
    4. ' )' → logprob: -9.62566089630127
    5. ')][' → logprob: -10.37566089630127
    6. ' ]' → logprob: -10.87566089630127
    7. '*' → logprob: -11.25066089630127
    8. ')]
' → logprob: -12.25066089630127
    9. '+' → logprob: -12.37566089630127
    10. '*w' → logprob: -12.50066089630127

Token 55: '2' (ID: 17)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.04168250784277916
    2. '1' → logprob: -3.791682481765747
    3. ' w' → logprob: -4.291682720184326
    4. '2' → logprob: -6.166682720184326
    5. ' ' → logprob: -6.666682720184326
    6. ')' → logprob: -8.166682243347168
    7. '+w' → logprob: -8.666682243347168
    8. ')]' → logprob: -8.791682243347168
    9. '*w' → logprob: -9.166682243347168
    10. '-w' → logprob: -9.291682243347168

Token 56: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.04763214290142059
    2. ')' → logprob: -3.5476322174072266
    3. ')][' → logprob: -4.047632217407227
    4. '+' → logprob: -9.422632217407227
    5. ' )' → logprob: -9.672632217407227
    6. ')])' → logprob: -10.297632217407227
    7. ']' → logprob: -10.922632217407227
    8. ' ' → logprob: -11.422632217407227
    9. '*' → logprob: -11.547632217407227
    10. '][' → logprob: -11.672632217407227

Token 57: 'for' (ID: 1938)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04309716448187828
    2. ' ]' → logprob: -3.9180972576141357
    3. ' for' → logprob: -4.293097019195557
    4. 'for' → logprob: -4.918097019195557
    5. ']]' → logprob: -8.043097496032715
    6. ']*(' → logprob: -8.168097496032715
    7. '][' → logprob: -8.418097496032715
    8. '],[' → logprob: -9.043097496032715
    9. '](' → logprob: -9.293097496032715
    10. ']][' → logprob: -9.918097496032715

Token 58: ' k' (ID: 372)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11286383122205734
    2. ' _' → logprob: -2.237863779067993
    3. ' ' → logprob: -10.487863540649414
    4. '_range' → logprob: -12.362863540649414
    5. '<|end|>' → logprob: -12.612863540649414
    6. ' in' → logprob: -12.737863540649414
    7. '_in' → logprob: -14.237863540649414
    8. '_j' → logprob: -14.487863540649414
    9. '_

' → logprob: -14.612863540649414
    10. ' range' → logprob: -15.362863540649414

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004323302768170834
    2. 'in' → logprob: -5.504323482513428
    3. 'range' → logprob: -8.75432300567627
    4. ' ' → logprob: -10.12932300567627
    5. ' range' → logprob: -10.37932300567627
    6. '(range' → logprob: -11.50432300567627
    7. '(' → logprob: -13.50432300567627
    8. '_' → logprob: -13.87932300567627
    9. 's' → logprob: -14.62932300567627
    10. '  ' → logprob: -14.87932300567627

Token 60: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06197183206677437
    2. 'range' → logprob: -2.81197190284729
    3. '(range' → logprob: -12.811971664428711
    4. '	range' → logprob: -14.436971664428711
    5. 'rang' → logprob: -15.561971664428711
    6. ' xrange' → logprob: -15.686971664428711
    7. ' rang' → logprob: -15.936971664428711
    8. ' ' → logprob: -15.936971664428711
    9. '_range' → logprob: -15.936971664428711
    10. 'r' → logprob: -16.93697166442871

Token 61: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.001098418957553804
    2. '(h' → logprob: -6.8760986328125
    3. '(' → logprob: -10.3760986328125
    4. 'w' → logprob: -10.7510986328125
    5. ' (' → logprob: -11.8760986328125
    6. '	w' → logprob: -13.2510986328125
    7. '((' → logprob: -13.3760986328125
    8. '   ' → logprob: -14.3760986328125
    9. '<w' → logprob: -15.1260986328125
    10. ' w' → logprob: -15.1260986328125

Token 62: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.8087270038668066e-05
    2. ' +' → logprob: -10.500027656555176
    3. '+
' → logprob: -15.875027656555176
    4. '+

' → logprob: -16.375028610229492
    5. '＋' → logprob: -16.625028610229492
    6. '+)' → logprob: -16.625028610229492
    7. ')]' → logprob: -17.250028610229492
    8. '2' → logprob: -18.250028610229492
    9. ')' → logprob: -18.625028610229492
    10. '   ' → logprob: -18.750028610229492

Token 63: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011915886716451496
    2. '+' → logprob: -9.25011920928955
    3. ' ' → logprob: -10.75011920928955
    4. ')' → logprob: -15.12511920928955
    5. '[' → logprob: -15.43761920928955
    6. '   ' → logprob: -15.56261920928955
    7. '```' → logprob: -16.125118255615234
    8. '۲' → logprob: -16.437618255615234
    9. '  ' → logprob: -16.562618255615234
    10. '1' → logprob: -16.625118255615234

Token 64: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00018113377154804766
    2. ')' → logprob: -8.875181198120117
    3. ')])' → logprob: -11.250181198120117
    4. '])]' → logprob: -11.375181198120117
    5. ' )' → logprob: -12.000181198120117
    6. ']' → logprob: -12.000181198120117
    7. '])' → logprob: -13.125181198120117
    8. '   ' → logprob: -14.625181198120117
    9. '))' → logprob: -14.875181198120117
    10. '')]' → logprob: -15.375181198120117

Token 65: 'for' (ID: 1938)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004017137107439339
    2. ' ]' → logprob: -7.875401496887207
    3. ')]' → logprob: -11.000401496887207
    4. '()]' → logprob: -13.250401496887207
    5. '}]' → logprob: -15.000401496887207
    6. '`]' → logprob: -15.000401496887207
    7. '>]' → logprob: -15.250401496887207
    8. '   ' → logprob: -15.250401496887207
    9. ']]' → logprob: -15.375401496887207
    10. ' ' → logprob: -15.375401496887207

Token 66: ' l' (ID: 305)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008815824054181576
    2. 'range' → logprob: -5.008815765380859
    3. ' h' → logprob: -7.258815765380859
    4. ' x' → logprob: -7.883815765380859
    5. '[' → logprob: -8.63381576538086
    6. '_' → logprob: -8.63381576538086
    7. '(range' → logprob: -9.00881576538086
    8. ' xrange' → logprob: -9.25881576538086
    9. ' k' → logprob: -9.63381576538086
    10. '	range' → logprob: -9.63381576538086

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1318647265434265
    2. '(range' → logprob: -2.6318647861480713
    3. ' range' → logprob: -3.8818647861480713
    4. 'in' → logprob: -4.256864547729492
    5. 'range' → logprob: -4.506864547729492
    6. '(' → logprob: -5.256864547729492
    7. ' (' → logprob: -9.006864547729492
    8. '[' → logprob: -9.131864547729492
    9. ' ' → logprob: -9.631864547729492
    10. '(w' → logprob: -9.756864547729492

Token 68: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38821592926979065
    2. 'range' → logprob: -1.1382158994674683
    3. '[' → logprob: -6.763216018676758
    4. '(range' → logprob: -9.138216018676758
    5. 'x' → logprob: -10.638216018676758
    6. ' xrange' → logprob: -10.763216018676758
    7. '	range' → logprob: -11.138216018676758
    8. 'Range' → logprob: -12.638216018676758
    9. ' [' → logprob: -12.888216018676758
    10. '[-' → logprob: -13.013216018676758

Token 69: '(h' (ID: 8120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011521248379722238
    2. '(h' → logprob: -7.001152038574219
    3. '(w' → logprob: -9.001152038574219
    4. ' (' → logprob: -10.251152038574219
    5. '2' → logprob: -10.501152038574219
    6. '((' → logprob: -10.876152038574219
    7. '3' → logprob: -12.001152038574219
    8. '(a' → logprob: -12.251152038574219
    9. '(x' → logprob: -12.876152038574219
    10. ']' → logprob: -12.876152038574219

Token 70: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006427380722016096
    2. ')]' → logprob: -7.375642776489258
    3. ')' → logprob: -12.625642776489258
    4. '2' → logprob: -12.875642776489258
    5. ')][' → logprob: -12.875642776489258
    6. ' +' → logprob: -12.875642776489258
    7. '[' → logprob: -14.000642776489258
    8. '-' → logprob: -14.250642776489258
    9. '   ' → logprob: -14.875642776489258
    10. ')])' → logprob: -14.938142776489258

Token 71: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.73052782076411e-05
    2. '1' → logprob: -10.250067710876465
    3. ' ' → logprob: -10.375067710876465
    4. '+' → logprob: -15.625067710876465
    5. ')' → logprob: -16.31256675720215
    6. '   ' → logprob: -16.75006675720215
    7. '۲' → logprob: -16.93756675720215
    8. '  ' → logprob: -17.06256675720215
    9. '```' → logprob: -17.81256675720215
    10. 'w' → logprob: -17.81256675720215

Token 72: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.0921942703134846e-05
    2. ')' → logprob: -11.75001049041748
    3. ')])' → logprob: -14.12501049041748
    4. ']' → logprob: -14.50001049041748
    5. ')],' → logprob: -15.00001049041748
    6. ')]
' → logprob: -15.00001049041748
    7. ' )' → logprob: -15.12501049041748
    8. '])]' → logprob: -15.62501049041748
    9. ')]

' → logprob: -16.000011444091797
    10. ')][' → logprob: -16.250011444091797

Token 73: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' build' (ID: 3024)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.27658525109291077
    2. ' dfs' → logprob: -1.5265852212905884
    3. ' dp' → logprob: -4.276585102081299
    4. ' solve' → logprob: -5.151585102081299
    5. ' check' → logprob: -6.401585102081299
    6. ' f' → logprob: -6.526585102081299
    7. ' dist' → logprob: -8.026585578918457
    8. ' ' → logprob: -8.276585578918457
    9. ' main' → logprob: -9.151585578918457
    10. 'dfs' → logprob: -9.276585578918457

Token 75: '_y' (ID: 9410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8727355003356934
    2. '(x' → logprob: -1.2477355003356934
    3. '():' → logprob: -2.4977355003356934
    4. '(i' → logprob: -2.8727355003356934
    5. '()' → logprob: -3.6227355003356934
    6. '(node' → logprob: -3.9977355003356934
    7. '(a' → logprob: -4.122735500335693
    8. '(l' → logprob: -4.247735500335693
    9. '(layer' → logprob: -4.247735500335693
    10. '_map' → logprob: -5.372735500335693

Token 76: '():
' (ID: 8595)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.9706002473831177
    2. '():' → logprob: -1.3456002473831177
    3. '(x' → logprob: -1.8456002473831177
    4. '(' → logprob: -2.595600128173828
    5. '(i' → logprob: -3.220600128173828
    6. '(a' → logprob: -3.845600128173828
    7. '(l' → logprob: -3.845600128173828
    8. '(h' → logprob: -4.220600128173828
    9. '(k' → logprob: -5.220600128173828
    10. '(p' → logprob: -5.470600128173828

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8224691152572632
    2. ' ' → logprob: -1.3224691152572632
    3. '    ' → logprob: -2.1974692344665527
    4. ' y' → logprob: -2.5724692344665527
    5. '<|end|>' → logprob: -2.8224692344665527
    6. '(' → logprob: -4.572469234466553
    7. '    
' → logprob: -5.447469234466553
    8. ' 
' → logprob: -5.697469234466553
    9. '
' → logprob: -5.697469234466553
    10. 'n' → logprob: -5.822469234466553

Token 78: ' return' (ID: 622)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.7257532477378845
    2. ' for' → logprob: -1.3507533073425293
    3. ' ' → logprob: -1.7257533073425293
    4. ' pass' → logprob: -3.3507533073425293
    5. '    ' → logprob: -4.100753307342529
    6. 'for' → logprob: -4.975753307342529
    7. ' x' → logprob: -5.100753307342529
    8. 'y' → logprob: -5.225753307342529
    9. 'x' → logprob: -6.850753307342529
    10. ' return' → logprob: -7.350753307342529

Token 79: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.8763995170593262
    2. ' [[' → logprob: -1.8763995170593262
    3. '[' → logprob: -2.001399517059326
    4. ' Holder' → logprob: -2.001399517059326
    5. ' [[[' → logprob: -3.001399517059326
    6. ' [' → logprob: -3.251399517059326
    7. 'Holder' → logprob: -3.376399517059326
    8. ' ' → logprob: -4.376399517059326
    9. '[-' → logprob: -4.876399517059326
    10. ' [[]' → logprob: -5.376399517059326

Token 80: '[-' (ID: 17503)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4594506323337555
    2. '0' → logprob: -1.084450602531433
    3. ' -' → logprob: -4.334450721740723
    4. ' ' → logprob: -4.959450721740723
    5. 'False' → logprob: -5.959450721740723
    6. '1' → logprob: -6.084450721740723
    7. '[' → logprob: -6.459450721740723
    8. 'float' → logprob: -6.959450721740723
    9. '[-' → logprob: -7.209450721740723
    10. '(' → logprob: -7.959450721740723

Token 81: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4784178137779236
    2. '2' → logprob: -0.9784178137779236
    3. '-' → logprob: -6.228417873382568
    4. '3' → logprob: -8.16591739654541
    5. '10' → logprob: -8.47841739654541
    6. '100' → logprob: -8.54091739654541
    7. ' ' → logprob: -8.66591739654541
    8. '0' → logprob: -8.91591739654541
    9. ' -' → logprob: -9.29091739654541
    10. '5' → logprob: -9.29091739654541

Token 82: ']*(' (ID: 92627)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03388842195272446
    2. 'for' → logprob: -3.408888339996338
    3. '	for' → logprob: -8.783888816833496
    4. ' ' → logprob: -9.783888816833496
    5. '<|end|>' → logprob: -10.533888816833496
    6. '   ' → logprob: -13.158888816833496
    7. '<|end|>' → logprob: -14.158888816833496
    8. ']*' → logprob: -14.158888816833496
    9. '    ' → logprob: -14.408888816833496
    10. ']' → logprob: -14.658888816833496

Token 83: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.03480654954910278
    2. 'h' → logprob: -3.409806489944458
    3. '(w' → logprob: -7.534806728363037
    4. ' w' → logprob: -8.034806251525879
    5. '   ' → logprob: -9.034806251525879
    6. '(h' → logprob: -10.159806251525879
    7. '	w' → logprob: -10.909806251525879
    8. ' ' → logprob: -11.034806251525879
    9. '    ' → logprob: -11.159806251525879
    10. ' h' → logprob: -11.284806251525879

Token 84: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.77627644513268e-06
    2. ' +' → logprob: -11.750008583068848
    3. '+
' → logprob: -14.375008583068848
    4. '+

' → logprob: -16.000009536743164
    5. '+)' → logprob: -16.500009536743164
    6. ')+' → logprob: -17.500009536743164
    7. ')' → logprob: -18.250009536743164
    8. '＋' → logprob: -18.250009536743164
    9. '+w' → logprob: -19.500009536743164
    10. '<|end|>' → logprob: -20.125009536743164

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.674858301877975e-05
    2. '+' → logprob: -10.250096321105957
    3. ' ' → logprob: -10.250096321105957
    4. '   ' → logprob: -10.750096321105957
    5. '1' → logprob: -13.375096321105957
    6. '[' → logprob: -14.000096321105957
    7. '  ' → logprob: -14.125096321105957
    8. '    ' → logprob: -15.375096321105957
    9. '```' → logprob: -15.375096321105957
    10. '     ' → logprob: -15.875096321105957

Token 86: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055287089198827744
    2. ')]' → logprob: -2.9302871227264404
    3. ' )' → logprob: -7.930286884307861
    4. ')])' → logprob: -10.80528736114502
    5. '   ' → logprob: -11.43028736114502
    6. '       ' → logprob: -12.80528736114502
    7. '))' → logprob: -13.05528736114502
    8. ' ' → logprob: -13.18028736114502
    9. ')
' → logprob: -13.80528736114502
    10. ']' → logprob: -13.80528736114502

Token 87: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3499339818954468
    2. ' for' → logprob: -1.2249339818954468
    3. ')' → logprob: -6.974934101104736
    4. '   ' → logprob: -8.349933624267578
    5. '	for' → logprob: -9.099933624267578
    6. ']' → logprob: -9.224933624267578
    7. '<|end|>' → logprob: -10.599933624267578
    8. ' ' → logprob: -10.974933624267578
    9. ')]' → logprob: -11.349933624267578
    10. '       ' → logprob: -11.474933624267578

Token 88: ' b' (ID: 287)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7001088857650757
    2. ' _' → logprob: -0.7001088857650757
    3. '_j' → logprob: -5.700109004974365
    4. '_k' → logprob: -6.200109004974365
    5. ' k' → logprob: -6.950109004974365
    6. '_i' → logprob: -8.450108528137207
    7. ' j' → logprob: -8.700108528137207
    8. '_l' → logprob: -9.200108528137207
    9. 'k' → logprob: -10.075108528137207
    10. '_h' → logprob: -10.325108528137207

Token 89: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011115494184195995
    2. 'in' → logprob: -4.511115550994873
    3. ' ' → logprob: -10.511115074157715
    4. '_' → logprob: -10.761115074157715
    5. '_in' → logprob: -12.261115074157715
    6. '	in' → logprob: -12.886115074157715
    7. '<|end|>' → logprob: -13.136115074157715
    8. ' _' → logprob: -13.136115074157715
    9. 'range' → logprob: -13.261115074157715
    10. ')' → logprob: -13.511115074157715

Token 90: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519325315952301
    2. ' range' → logprob: -1.5019325017929077
    3. '(range' → logprob: -13.376932144165039
    4. '	range' → logprob: -14.876932144165039
    5. ' ' → logprob: -15.001932144165039
    6. 'rang' → logprob: -15.251932144165039
    7. 'ran' → logprob: -15.376932144165039
    8. '[' → logprob: -15.376932144165039
    9. 'r' → logprob: -15.876932144165039
    10. ' xrange' → logprob: -16.00193214416504

Token 91: '(w' (ID: 7420)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.03090895339846611
    2. ' (' → logprob: -3.5309090614318848
    3. '(' → logprob: -6.780909061431885
    4. '(w' → logprob: -11.405908584594727
    5. '((' → logprob: -12.405908584594727
    6. '   ' → logprob: -13.280908584594727
    7. ' ' → logprob: -13.280908584594727
    8. ' h' → logprob: -13.905908584594727
    9. 'h' → logprob: -14.780908584594727
    10. '(s' → logprob: -15.155908584594727

Token 92: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0921942703134846e-05
    2. ')]' → logprob: -11.62501049041748
    3. ' +' → logprob: -13.50001049041748
    4. '+h' → logprob: -15.75001049041748
    5. ')' → logprob: -16.375011444091797
    6. 'h' → logprob: -17.125011444091797
    7. '+w' → logprob: -17.375011444091797
    8. ')])' → logprob: -17.500011444091797
    9. '+
' → logprob: -17.500011444091797
    10. ')][' → logprob: -18.125011444091797

Token 93: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3505077064037323
    2. '+' → logprob: -1.2255077362060547
    3. ' ' → logprob: -6.350507736206055
    4. '[' → logprob: -9.100507736206055
    5. '(' → logprob: -9.600507736206055
    6. '   ' → logprob: -9.975507736206055
    7. ' +' → logprob: -10.725507736206055
    8. ')' → logprob: -11.225507736206055
    9. '  ' → logprob: -11.725507736206055
    10. '1' → logprob: -11.725507736206055

Token 94: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.8087270038668066e-05
    2. ')' → logprob: -10.750027656555176
    3. ' )' → logprob: -13.000027656555176
    4. ']' → logprob: -13.375027656555176
    5. ')]

' → logprob: -13.625027656555176
    6. ')]
' → logprob: -14.500027656555176
    7. ')])' → logprob: -15.125027656555176
    8. ')][' → logprob: -15.750027656555176
    9. '+' → logprob: -16.000028610229492
    10. ' ' → logprob: -16.250028610229492

Token 95: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0432157889008522
    2. ' for' → logprob: -3.668215751647949
    3. 'for' → logprob: -4.543215751647949
    4. '<|end|>' → logprob: -6.418215751647949
    5. ' ]' → logprob: -6.668215751647949
    6. ')' → logprob: -6.918215751647949
    7. '   ' → logprob: -7.418215751647949
    8. ')]' → logprob: -7.668215751647949
    9. 'def' → logprob: -8.41821575164795
    10. '()]' → logprob: -8.41821575164795

Token 96: ' d' (ID: 272)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7483164668083191
    2. '(h' → logprob: -0.7483164668083191
    3. '(w' → logprob: -3.248316526412964
    4. ' range' → logprob: -4.998316287994385
    5. ' h' → logprob: -5.123316287994385
    6. 'range' → logprob: -6.998316287994385
    7. '(' → logprob: -7.748316287994385
    8. '(range' → logprob: -8.123316764831543
    9. '[h' → logprob: -8.873316764831543
    10. 'h' → logprob: -8.998316764831543

Token 97: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.17377936840057373
    2. '(range' → logprob: -2.1737794876098633
    3. ' (' → logprob: -3.5487794876098633
    4. 'range' → logprob: -4.548779487609863
    5. ' in' → logprob: -5.298779487609863
    6. '(' → logprob: -6.673779487609863
    7. '(h' → logprob: -9.673779487609863
    8. ' ' → logprob: -10.798779487609863
    9. '_range' → logprob: -10.923779487609863
    10. '   ' → logprob: -11.048779487609863

Token 98: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018546242266893387
    2. 'range' → logprob: -4.018546104431152
    3. '(h' → logprob: -8.643546104431152
    4. '(range' → logprob: -9.143546104431152
    5. ' h' → logprob: -9.893546104431152
    6. '[h' → logprob: -10.268546104431152
    7. '(w' → logprob: -10.893546104431152
    8. ' (' → logprob: -13.143546104431152
    9. ' w' → logprob: -13.393546104431152
    10. ' ' → logprob: -13.518546104431152

Token 99: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.002654728479683399
    2. '(w' → logprob: -6.002654552459717
    3. '(' → logprob: -9.002655029296875
    4. ' (' → logprob: -10.752655029296875
    5. '((' → logprob: -10.877655029296875
    6. '(range' → logprob: -11.627655029296875
    7. '(d' → logprob: -13.127655029296875
    8. '(s' → logprob: -14.002655029296875
    9. '   ' → logprob: -14.502655029296875
    10. '(a' → logprob: -14.627655029296875

Token 100: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.282920129597187e-05
    2. ')]' → logprob: -11.375012397766113
    3. ' +' → logprob: -14.000012397766113
    4. ')' → logprob: -15.875012397766113
    5. '+
' → logprob: -16.50001335144043
    6. '2' → logprob: -16.87501335144043
    7. '-' → logprob: -17.25001335144043
    8. '   ' → logprob: -17.37501335144043
    9. ')+' → logprob: -17.37501335144043
    10. ')])' → logprob: -17.37501335144043

Token 101: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.466968650580384e-05
    2. '+' → logprob: -10.625054359436035
    3. ' ' → logprob: -10.625054359436035
    4. '1' → logprob: -12.375054359436035
    5. ')' → logprob: -13.750054359436035
    6. 'h' → logprob: -15.125054359436035
    7. '   ' → logprob: -15.500054359436035
    8. '  ' → logprob: -16.50005531311035
    9. '[' → logprob: -16.75005531311035
    10. '-' → logprob: -17.25005531311035

Token 102: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3936713933944702
    2. ')' → logprob: -1.1436713933944702
    3. ']' → logprob: -5.01867151260376
    4. ')])' → logprob: -9.393671035766602
    5. '])' → logprob: -9.768671035766602
    6. '))' → logprob: -12.268671035766602
    7. ' )' → logprob: -12.268671035766602
    8. '   ' → logprob: -12.518671035766602
    9. '])]' → logprob: -12.768671035766602
    10. ')
' → logprob: -12.893671035766602

Token 103: 'y' (ID: 88)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0033118657302111387
    2. '=[]' → logprob: -6.128311634063721
    3. ' =' → logprob: -7.628311634063721
    4. '[' → logprob: -8.378312110900879
    5. '=[' → logprob: -9.628312110900879
    6. '.' → logprob: -9.628312110900879
    7. '[:]' → logprob: -9.753312110900879
    8. '+=' → logprob: -10.128312110900879
    9. '.append' → logprob: -10.253312110900879
    10. '_' → logprob: -10.628312110900879

Token 105: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.16315045952796936
    2. '[[' → logprob: -2.2881505489349365
    3. '[' → logprob: -3.1631505489349365
    4. ' build' → logprob: -5.288150310516357
    5. ' [[' → logprob: -7.288150310516357
    6. ' [' → logprob: -7.788150310516357
    7. ' [[[' → logprob: -8.288150787353516
    8. '(build' → logprob: -9.038150787353516
    9. '[-' → logprob: -10.038150787353516
    10. '[b' → logprob: -10.163150787353516

Token 106: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.875000953674316
    3. '_x' → logprob: -15.750000953674316
    4. 'y' → logprob: -15.875000953674316
    5. ' _' → logprob: -17.875
    6. '_a' → logprob: -18.5
    7. '_you' → logprob: -18.875
    8. '_py' → logprob: -19.75
    9. '```' → logprob: -20.125
    10. '_yes' → logprob: -20.25

Token 107: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0206720617134124e-05
    2. '()
' → logprob: -12.25001049041748
    3. '()

' → logprob: -13.75001049041748
    4. '(' → logprob: -14.12501049041748
    5. ' ()' → logprob: -14.12501049041748
    6. '()]' → logprob: -14.37501049041748
    7. '();' → logprob: -14.62501049041748
    8. '()</' → logprob: -15.12501049041748
    9. '()>' → logprob: -15.25001049041748
    10. '().' → logprob: -15.62501049041748

Token 108: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.061777520924806595
    2. 'z' → logprob: -4.061777591705322
    3. 'def' → logprob: -4.311777591705322
    4. 'i' → logprob: -4.811777591705322
    5. ')' → logprob: -5.311777591705322
    6. ' for' → logprob: -6.061777591705322
    7. 'd' → logprob: -6.061777591705322
    8. 'f' → logprob: -6.186777591705322
    9. 'x' → logprob: -6.561777591705322
    10. 'n' → logprob: -7.311777591705322

Token 109: ' init' (ID: 6327)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.3892535865306854
    2. ' bfs' → logprob: -1.7642536163330078
    3. ' solve' → logprob: -2.639253616333008
    4. ' dp' → logprob: -3.139253616333008
    5. 'dfs' → logprob: -5.014253616333008
    6. ' main' → logprob: -5.139253616333008
    7. ' check' → logprob: -5.389253616333008
    8. 'solve' → logprob: -5.889253616333008
    9. ' calc' → logprob: -6.014253616333008
    10. ' f' → logprob: -6.139253616333008

Token 110: '_mat' (ID: 40456)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.26138266921043396
    2. '()' → logprob: -2.011382579803467
    3. '_' → logprob: -2.386382579803467
    4. '_x' → logprob: -5.886382579803467
    5. '(x' → logprob: -8.386383056640625
    6. '():
' → logprob: -8.636383056640625
    7. ' ()' → logprob: -9.011383056640625
    8. '()(' → logprob: -9.136383056640625
    9. ' ():' → logprob: -9.136383056640625
    10. '_y' → logprob: -9.261383056640625

Token 111: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00026872646412812173
    2. '():
' → logprob: -9.125268936157227
    3. ' ():' → logprob: -9.875268936157227
    4. '()' → logprob: -10.125268936157227
    5. '(h' → logprob: -10.375268936157227
    6. '(' → logprob: -11.000268936157227
    7. '(x' → logprob: -11.500268936157227
    8. '(l' → logprob: -12.625268936157227
    9. '(a' → logprob: -13.375268936157227
    10. '(m' → logprob: -13.875268936157227

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5795892477035522
    2. ' for' → logprob: -0.8295892477035522
    3. '	for' → logprob: -7.079589366912842
    4. '
' → logprob: -7.329589366912842
    5. ' global' → logprob: -7.454589366912842
    6. '    ' → logprob: -8.204588890075684
    7. ' ' → logprob: -8.454588890075684
    8. '    
' → logprob: -8.829588890075684
    9. '<|end|>' → logprob: -8.829588890075684
    10. ' i' → logprob: -8.954588890075684

Token 113: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20383509993553162
    2. '   ' → logprob: -2.0788350105285645
    3. 'for' (adapté à ' for') → logprob: -2.8288350105285645
    4. ' global' → logprob: -8.578835487365723
    5. '	for' → logprob: -10.578835487365723
    6. ' ' → logprob: -11.203835487365723
    7. 'global' → logprob: -11.828835487365723
    8. '    ' → logprob: -12.828835487365723
    9. '  ' → logprob: -13.328835487365723
    10. '
' → logprob: -13.328835487365723

Token 114: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.014183246530592442
    2. 'i' → logprob: -5.014183044433594
    3. ' l' → logprob: -5.764183044433594
    4. ' k' → logprob: -6.514183044433594
    5. ' r' → logprob: -6.764183044433594
    6. ' b' → logprob: -7.764183044433594
    7. ' _' → logprob: -7.889183044433594
    8. ' j' → logprob: -8.889183044433594
    9. ' d' → logprob: -9.139183044433594
    10. 'l' → logprob: -9.514183044433594

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06206314265727997
    2. 'in' → logprob: -2.812063217163086
    3. ' ' → logprob: -9.687063217163086
    4. '  ' → logprob: -11.312063217163086
    5. '   ' → logprob: -11.687063217163086
    6. 'range' → logprob: -12.562063217163086
    7. '```' → logprob: -12.937063217163086
    8. ',' → logprob: -13.187063217163086
    9. '	in' → logprob: -14.062063217163086
    10. 'n' → logprob: -14.187063217163086

Token 116: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740813374519348
    2. ' range' → logprob: -0.9740813374519348
    3. ' ' → logprob: -13.099081039428711
    4. '  ' → logprob: -14.224081039428711
    5. '   ' → logprob: -14.349081039428711
    6. '(range' → logprob: -14.474081039428711
    7. '	range' → logprob: -15.599081039428711
    8. 'r' → logprob: -16.59908103942871
    9. '(' → logprob: -16.72408103942871
    10. '    ' → logprob: -17.34908103942871

Token 117: '(h' (ID: 8120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02630993351340294
    2. '(h' → logprob: -3.6513099670410156
    3. '(len' → logprob: -12.276309967041016
    4. ' (' → logprob: -12.651309967041016
    5. 'h' → logprob: -14.776309967041016
    6. '((' → logprob: -15.276309967041016
    7. '1' → logprob: -15.276309967041016
    8. ' ' → logprob: -15.276309967041016
    9. '   ' → logprob: -15.526309967041016
    10. '(
' → logprob: -15.901309967041016

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21642647683620453
    2. '+' → logprob: -1.7164264917373657
    3. '):
' → logprob: -4.216426372528076
    4. ' ):' → logprob: -9.466426849365234
    5. ' +' → logprob: -10.716426849365234
    6. '   ' → logprob: -11.216426849365234
    7. ')' → logprob: -11.341426849365234
    8. '-' → logprob: -11.841426849365234
    9. ' ' → logprob: -11.841426849365234
    10. ':' → logprob: -12.716426849365234

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03917822986841202
    2. '<|end|>' → logprob: -3.2891781330108643
    3. ' ' → logprob: -7.914178371429443
    4. '   ' → logprob: -8.539177894592285
    5. ' for' → logprob: -8.539177894592285
    6. '<|end|>' → logprob: -8.664177894592285
    7. ',' → logprob: -9.289177894592285
    8. '    ' → logprob: -10.789177894592285
    9. ':' → logprob: -11.039177894592285
    10. '	   ' → logprob: -11.039177894592285

Token 120: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.22595541179180145
    2. ' for' → logprob: -1.7259553670883179
    3. '   ' → logprob: -3.7259554862976074
    4. ' ' → logprob: -8.97595500946045
    5. '	for' → logprob: -10.85095500946045
    6. '  ' → logprob: -12.47595500946045
    7. '       ' → logprob: -12.85095500946045
    8. '    ' → logprob: -14.10095500946045
    9. 'j' → logprob: -16.225955963134766
    10. '           ' → logprob: -16.725955963134766

Token 121: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.03562917560338974
    2. 'j' → logprob: -3.5356292724609375
    3. ' range' → logprob: -5.2856292724609375
    4. 'range' → logprob: -7.4106292724609375
    5. ' in' → logprob: -9.535629272460938
    6. ' ' → logprob: -10.035629272460938
    7. ' w' → logprob: -11.410629272460938
    8. '  ' → logprob: -11.535629272460938
    9. '   ' → logprob: -11.660629272460938
    10. 'w' → logprob: -12.160629272460938

Token 122: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020559990778565407
    2. 'in' → logprob: -3.8955600261688232
    3. '   ' → logprob: -11.645560264587402
    4. ' ' → logprob: -12.520560264587402
    5. '(' → logprob: -13.270560264587402
    6. '	in' → logprob: -14.270560264587402
    7. '+' → logprob: -14.645560264587402
    8. '  ' → logprob: -14.770560264587402
    9. '    ' → logprob: -15.020560264587402
    10. '0' → logprob: -15.270560264587402

Token 123: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.032578129321336746
    2. ' range' → logprob: -3.532578229904175
    3. '(h' → logprob: -6.032577991485596
    4. '(w' → logprob: -9.157578468322754
    5. '(range' → logprob: -9.157578468322754
    6. 'h' → logprob: -9.532578468322754
    7. ' (' → logprob: -9.532578468322754
    8. '(' → logprob: -10.157578468322754
    9. 'w' → logprob: -10.782578468322754
    10. '0' → logprob: -12.657578468322754

Token 124: '(w' (ID: 7420)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.1419644057750702
    2. '(w' → logprob: -2.2669644355773926
    3. ' (' → logprob: -3.8919644355773926
    4. '(' → logprob: -4.891964435577393
    5. '   ' → logprob: -7.641964435577393
    6. ' range' → logprob: -9.391963958740234
    7. 'range' → logprob: -9.766963958740234
    8. ')' → logprob: -10.016963958740234
    9. '(range' → logprob: -10.016963958740234
    10. '+' → logprob: -10.641963958740234

Token 125: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.24957123398780823
    2. '):' → logprob: -1.6245712041854858
    3. '+' → logprob: -3.7495713233947754
    4. '   ' → logprob: -8.999570846557617
    5. '):
' → logprob: -9.624570846557617
    6. '       ' → logprob: -9.874570846557617
    7. '           ' → logprob: -10.749570846557617
    8. ' ):
' → logprob: -11.249570846557617
    9. ' +' → logprob: -11.374570846557617
    10. ')' → logprob: -11.374570846557617

Token 126: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002453653607517481
    2. ':' → logprob: -6.502453804016113
    3. ',' → logprob: -7.627453804016113
    4. '               ' → logprob: -9.252453804016113
    5. ' x' → logprob: -9.252453804016113
    6. '<|end|>' → logprob: -9.252453804016113
    7. ' if' → logprob: -10.752453804016113
    8. '       ' → logprob: -10.752453804016113
    9. ' :' → logprob: -11.127453804016113
    10. '          ' → logprob: -11.127453804016113

Token 127: ' x' (ID: 1215)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6407600045204163
    2. ' if' → logprob: -1.1407599449157715
    3. ' x' → logprob: -2.0157599449157715
    4. 'x' (adapté à ' x') → logprob: -4.3907599449157715
    5. 'if' → logprob: -5.2657599449157715
    6. '           ' → logprob: -6.0157599449157715
    7. '            ' → logprob: -9.01576042175293
    8. '                ' → logprob: -10.26576042175293
    9. '              ' → logprob: -10.64076042175293
    10. ' for' → logprob: -10.76576042175293

Token 128: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00013595925702247769
    2. '][' → logprob: -9.125136375427246
    3. ' [' → logprob: -11.375136375427246
    4. '[' → logprob: -12.000136375427246
    5. '```' → logprob: -13.125136375427246
    6. '[j' → logprob: -13.375136375427246
    7. '[I' → logprob: -13.375136375427246
    8. 'i' → logprob: -13.875136375427246
    9. ')[' → logprob: -14.375136375427246
    10. '   ' → logprob: -14.875136375427246

Token 129: '][' (ID: 2696)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6331998109817505
    2. '][' → logprob: -0.7581998109817505
    3. ' +' → logprob: -7.883199691772461
    4. ' ][' → logprob: -8.758199691772461
    5. '+j' → logprob: -10.633199691772461
    6. ']' → logprob: -11.008199691772461
    7. '   ' → logprob: -11.258199691772461
    8. '[' → logprob: -12.758199691772461
    9. ' ' → logprob: -13.133199691772461
    10. '[j' → logprob: -13.383199691772461

Token 130: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.975612187583465e-05
    2. ' j' → logprob: -10.500029563903809
    3. '   ' → logprob: -13.250029563903809
    4. '    ' → logprob: -15.375029563903809
    5. ' ' → logprob: -16.500030517578125
    6. '  ' → logprob: -17.250030517578125
    7. '
' → logprob: -17.500030517578125
    8. '```' → logprob: -17.500030517578125
    9. ',j' → logprob: -17.750030517578125
    10. '+' → logprob: -17.875030517578125

Token 131: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.8020409345626831
    2. ']=' → logprob: -1.177040934562683
    3. ']' → logprob: -1.427040934562683
    4. '+' → logprob: -6.177041053771973
    5. ']+=' → logprob: -7.177041053771973
    6. ']==' → logprob: -8.552041053771973
    7. '=' → logprob: -9.052041053771973
    8. ' ]' → logprob: -10.427041053771973
    9. ']=(' → logprob: -10.427041053771973
    10. ' ][' → logprob: -10.427041053771973

Token 132: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6365936994552612
    2. '0' → logprob: -0.8865936994552612
    3. 'j' → logprob: -2.886593818664551
    4. 'k' → logprob: -7.261593818664551
    5. ' i' → logprob: -7.261593818664551
    6. ' ' → logprob: -7.386593818664551
    7. 'h' → logprob: -7.511593818664551
    8. '1' → logprob: -8.13659381866455
    9. ']' → logprob: -9.26159381866455
    10. ' j' → logprob: -10.01159381866455

Token 133: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02748200111091137
    2. ']=' → logprob: -4.277482032775879
    3. ' ]' → logprob: -4.777482032775879
    4. '+' → logprob: -5.527482032775879
    5. 'j' → logprob: -8.402482032775879
    6. '+j' → logprob: -8.527482032775879
    7. ']+=' → logprob: -9.027482032775879
    8. ' +' → logprob: -9.402482032775879
    9. '-' → logprob: -9.902482032775879
    10. ']==' → logprob: -10.652482032775879

Token 134: ' =' (ID: 314)
  Prédit: ']='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.041917674243450165
    2. ']' → logprob: -3.916917562484741
    3. '=' → logprob: -4.04191780090332
    4. ']=-' → logprob: -6.41691780090332
    5. ' ]' → logprob: -7.29191780090332
    6. '][' → logprob: -8.16691780090332
    7. '[' → logprob: -8.29191780090332
    8. ' =' → logprob: -8.41691780090332
    9. ']+=' → logprob: -9.04191780090332
    10. ']=(' → logprob: -9.29191780090332

Token 135: ' j' (ID: 441)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48954781889915466
    2. 'a' → logprob: -1.614547848701477
    3. '1' → logprob: -1.739547848701477
    4. ' ' → logprob: -5.1145477294921875
    5. '-' → logprob: -5.3645477294921875
    6. ' a' → logprob: -7.1145477294921875
    7. '(' → logprob: -7.9895477294921875
    8. 'int' → logprob: -8.489547729492188
    9. ' -' → logprob: -8.864547729492188
    10. ' (' → logprob: -9.614547729492188

Token 136: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: ' y' (ID: 342)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2086952179670334
    2. '<|end|>' → logprob: -2.20869517326355
    3. 'x' → logprob: -3.20869517326355
    4. ' y' → logprob: -4.083695411682129
    5. ' x' → logprob: -4.583695411682129
    6. ' ' → logprob: -5.708695411682129
    7. 'y' (adapté à ' y') → logprob: -5.833695411682129
    8. '            ' → logprob: -6.208695411682129
    9. '          ' → logprob: -7.583695411682129
    10. '       ' → logprob: -7.958695411682129

Token 139: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.2020991056924686e-05
    2. '[' → logprob: -10.500032424926758
    3. '[I' → logprob: -13.375032424926758
    4. '[j' → logprob: -13.500032424926758
    5. ' [' → logprob: -14.125032424926758
    6. '[int' → logprob: -15.625032424926758
    7. '```' → logprob: -15.750032424926758
    8. '][' → logprob: -15.750032424926758
    9. 'def' → logprob: -16.375032424926758
    10. '   ' → logprob: -17.250032424926758

Token 140: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002892132615670562
    2. '[i' → logprob: -5.877892017364502
    3. ']' → logprob: -10.37789249420166
    4. ' ][' → logprob: -10.50289249420166
    5. ')[' → logprob: -11.12789249420166
    6. '[' → logprob: -12.50289249420166
    7. '           ' → logprob: -13.62789249420166
    8. ''][' → logprob: -14.00289249420166
    9. '[j' → logprob: -14.00289249420166
    10. '"][' → logprob: -14.12789249420166

Token 141: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007922396762296557
    2. 'i' → logprob: -7.250792026519775
    3. '][' → logprob: -10.500792503356934
    4. ' j' → logprob: -10.625792503356934
    5. '[j' → logprob: -11.500792503356934
    6. 'h' → logprob: -11.875792503356934
    7. '0' → logprob: -13.250792503356934
    8. '   ' → logprob: -13.375792503356934
    9. ']' → logprob: -13.500792503356934
    10. '[' → logprob: -13.500792503356934

Token 142: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011411475017666817
    2. '[i' → logprob: -4.511411666870117
    3. ')[' → logprob: -9.136411666870117
    4. ' ][' → logprob: -9.261411666870117
    5. ']' → logprob: -9.386411666870117
    6. '[' → logprob: -11.011411666870117
    7. '[j' → logprob: -11.136411666870117
    8. '           ' → logprob: -11.761411666870117
    9. ''][' → logprob: -12.011411666870117
    10. '"][' → logprob: -12.511411666870117

Token 143: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2815532684326172
    2. 'i' → logprob: -1.4065532684326172
    3. 'h' → logprob: -8.906553268432617
    4. ' j' → logprob: -9.406553268432617
    5. ' i' → logprob: -9.656553268432617
    6. 'k' → logprob: -10.156553268432617
    7. '0' → logprob: -10.781553268432617
    8. ']' → logprob: -11.031553268432617
    9. ' ' → logprob: -12.156553268432617
    10. '   ' → logprob: -12.156553268432617

Token 144: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010257219895720482
    2. ']=' → logprob: -4.635257244110107
    3. '=' → logprob: -8.51025676727295
    4. ' ]' → logprob: -8.88525676727295
    5. '[i' → logprob: -9.38525676727295
    6. ')' → logprob: -10.13525676727295
    7. 'i' → logprob: -11.88525676727295
    8. '])' → logprob: -12.01025676727295
    9. ' =' → logprob: -12.38525676727295
    10. ']+=' → logprob: -12.38525676727295

Token 145: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005799580831080675
    2. ' =' → logprob: -7.500579833984375
    3. '=i' → logprob: -11.000579833984375
    4. ']=' → logprob: -12.625579833984375
    5. '[' → logprob: -13.000579833984375
    6. '=-' → logprob: -13.125579833984375
    7. '[i' → logprob: -13.750579833984375
    8. ']' → logprob: -14.250579833984375
    9. ')=' → logprob: -15.250579833984375
    10. ' ' → logprob: -15.875579833984375

Token 146: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0020201168954372406
    2. ' i' → logprob: -6.377019882202148
    3. 'j' → logprob: -8.252019882202148
    4. '0' → logprob: -10.002019882202148
    5. ' ' → logprob: -12.377019882202148
    6. 'h' → logprob: -13.752019882202148
    7. ' j' → logprob: -13.877019882202148
    8. '-' → logprob: -14.002019882202148
    9. 'x' → logprob: -14.127019882202148
    10. '	i' → logprob: -14.127019882202148

Token 147: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: 'init' (ID: 3287)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: '_mat' (ID: 40456)
  Prédit: '_mat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mat' → logprob: -0.0025395131669938564
    2. '_' → logprob: -6.00253963470459
    3. '_m' → logprob: -10.37753963470459
    4. '_matrix' → logprob: -11.87753963470459
    5. '_ma' → logprob: -12.25253963470459
    6. ' _' → logprob: -12.37753963470459
    7. '_val' → logprob: -13.37753963470459
    8. '(_' → logprob: -13.62753963470459
    9. '```' → logprob: -13.62753963470459
    10. '_M' → logprob: -14.00253963470459

Token 150: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.9054008084349334e-05
    2. '(' → logprob: -10.250039100646973
    3. '();' → logprob: -13.750039100646973
    4. '()`' → logprob: -14.625039100646973
    5. '().' → logprob: -14.750039100646973
    6. '()
' → logprob: -14.750039100646973
    7. '()(' → logprob: -15.000039100646973
    8. ' ()' → logprob: -15.250039100646973
    9. '()]' → logprob: -15.500039100646973
    10. '()

' → logprob: -16.125038146972656

Token 151: 'for' (ID: 1938)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4053739905357361
    2. '(' → logprob: -3.030374050140381
    3. ')' → logprob: -3.155374050140381
    4. '[' → logprob: -3.280374050140381
    5. ' ' → logprob: -3.280374050140381
    6. 'def' → logprob: -3.405374050140381
    7. 'd' → logprob: -3.780374050140381
    8. '#' → logprob: -4.030374050140381
    9. 'i' → logprob: -4.280374050140381
    10. 'for' → logprob: -4.530374050140381

Token 152: ' v' (ID: 323)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14575409889221191
    2. 'i' → logprob: -2.020754098892212
    3. ' k' → logprob: -6.645753860473633
    4. 'k' → logprob: -7.895753860473633
    5. '_i' → logprob: -8.145753860473633
    6. ' l' → logprob: -8.395753860473633
    7. '_' → logprob: -8.770753860473633
    8. ' d' → logprob: -8.770753860473633
    9. ' _' → logprob: -9.145753860473633
    10. ' ' → logprob: -9.895753860473633

Token 153: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12790653109550476
    2. 'in' → logprob: -2.127906560897827
    3. ' ' → logprob: -7.877906322479248
    4. '_' → logprob: -8.752906799316406
    5. 'n' → logprob: -9.127906799316406
    6. 'i' → logprob: -9.377906799316406
    7. 's' → logprob: -9.502906799316406
    8. ' i' → logprob: -9.877906799316406
    9. '1' → logprob: -11.252906799316406
    10. 'v' → logprob: -11.502906799316406

Token 154: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6939138770103455
    2. 'range' → logprob: -0.6939138770103455
    3. 'x' → logprob: -7.69391393661499
    4. ' x' → logprob: -9.068913459777832
    5. '[' → logprob: -9.443913459777832
    6. '(range' → logprob: -10.193913459777832
    7. 'a' → logprob: -10.818913459777832
    8. '(' → logprob: -11.443913459777832
    9. '[(' → logprob: -11.818913459777832
    10. '[[' → logprob: -12.318913459777832

Token 155: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.017373627051711082
    2. '(' → logprob: -4.267373561859131
    3. ' (' → logprob: -6.392373561859131
    4. '(w' → logprob: -6.642373561859131
    5. '(x' → logprob: -9.892374038696289
    6. '(v' → logprob: -10.142374038696289
    7. '(max' → logprob: -10.642374038696289
    8. 'h' → logprob: -10.767374038696289
    9. ' h' → logprob: -10.892374038696289
    10. '((' → logprob: -11.392374038696289

Token 156: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020967138931155205
    2. '):
' → logprob: -3.8959672451019287
    3. '+' → logprob: -8.395967483520508
    4. ' ):' → logprob: -8.770967483520508
    5. ')' → logprob: -11.395967483520508
    6. '-' → logprob: -11.520967483520508
    7. ':' → logprob: -12.270967483520508
    8. '):
' → logprob: -12.270967483520508
    9. 'for' → logprob: -12.895967483520508
    10. '   ' → logprob: -13.395967483520508

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31709349155426025
    2. ' for' → logprob: -1.3170934915542603
    3. '	for' → logprob: -5.817093372344971
    4. '<|end|>' → logprob: -7.692093372344971
    5. ' ' → logprob: -8.817093849182129
    6. 'for' → logprob: -9.317093849182129
    7. '   ' → logprob: -10.317093849182129
    8. ':' → logprob: -10.567093849182129
    9. ',' → logprob: -10.942093849182129
    10. '
' → logprob: -11.067093849182129

Token 158: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11773113906383514
    2. 'for' (adapté à ' for') → logprob: -2.2427310943603516
    3. '   ' → logprob: -5.367731094360352
    4. ' ' → logprob: -8.742731094360352
    5. '    ' → logprob: -10.367731094360352
    6. ' j' → logprob: -11.742731094360352
    7. '	for' → logprob: -11.742731094360352
    8. '  ' → logprob: -11.742731094360352
    9. ' pass' → logprob: -12.867731094360352
    10. ' w' → logprob: -13.367731094360352

Token 159: ' t' (ID: 260)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.1215404272079468
    2. ' u' → logprob: -1.4965404272079468
    3. 'w' → logprob: -1.4965404272079468
    4. ' w' → logprob: -1.8715404272079468
    5. 'j' → logprob: -3.3715405464172363
    6. ' j' → logprob: -4.246540546417236
    7. 'k' → logprob: -4.871540546417236
    8. 'i' → logprob: -5.246540546417236
    9. ' k' → logprob: -5.496540546417236
    10. ' i' → logprob: -6.246540546417236

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11287778615951538
    2. 'in' → logprob: -2.23787784576416
    3. '   ' → logprob: -11.23787784576416
    4. ' ' → logprob: -11.73787784576416
    5. 'range' → logprob: -12.36287784576416
    6. '```' → logprob: -12.48787784576416
    7. 'w' → logprob: -12.73787784576416
    8. '+' → logprob: -12.98787784576416
    9. '  ' → logprob: -12.98787784576416
    10. 't' → logprob: -12.98787784576416

Token 161: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.024013785645365715
    2. ' range' → logprob: -3.7740137577056885
    3. '(w' → logprob: -7.524013996124268
    4. '(range' → logprob: -8.64901351928711
    5. '(h' → logprob: -10.39901351928711
    6. 'w' → logprob: -11.14901351928711
    7. '[w' → logprob: -13.27401351928711
    8. '(' → logprob: -13.89901351928711
    9. 'h' → logprob: -14.27401351928711
    10. '(y' → logprob: -14.52401351928711

Token 162: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.002814624458551407
    2. '(h' → logprob: -6.002814769744873
    3. '(' → logprob: -8.377814292907715
    4. 'w' → logprob: -9.502814292907715
    5. '(v' → logprob: -11.127814292907715
    6. 'h' → logprob: -12.752814292907715
    7. ' (' → logprob: -12.752814292907715
    8. '(x' → logprob: -12.877814292907715
    9. '((' → logprob: -13.377814292907715
    10. '(t' → logprob: -13.627814292907715

Token 163: '-' (ID: 12)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.37064194679260254
    2. '):' → logprob: -1.2456419467926025
    3. '+' → logprob: -3.8706419467926025
    4. '   ' → logprob: -7.370641708374023
    5. '-' → logprob: -8.745641708374023
    6. ' +' → logprob: -9.745641708374023
    7. ')' → logprob: -9.870641708374023
    8. '):
' → logprob: -9.870641708374023
    9. '       ' → logprob: -9.870641708374023
    10. ':' → logprob: -10.620641708374023

Token 164: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009090794483199716
    2. ' ' → logprob: -7.125908851623535
    3. '   ' → logprob: -9.875908851623535
    4. '2' → logprob: -11.375908851623535
    5. 't' → logprob: -11.375908851623535
    6. '0' → logprob: -12.000908851623535
    7. 'v' → logprob: -12.125908851623535
    8. ')' → logprob: -12.313408851623535
    9. '-' → logprob: -13.063408851623535
    10. '    ' → logprob: -13.500908851623535

Token 165: ',-' (ID: 8202)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020389707759022713
    2. '):
' → logprob: -4.020389556884766
    3. ' ):' → logprob: -6.645389556884766
    4. ',' → logprob: -7.395389556884766
    5. '+' → logprob: -8.895389556884766
    6. '   ' → logprob: -10.020389556884766
    7. ')' → logprob: -10.270389556884766
    8. ' ,' → logprob: -10.770389556884766
    9. ':' → logprob: -11.145389556884766
    10. ' ):
' → logprob: -11.270389556884766

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -16.875001907348633
    4. '
' → logprob: -17.000001907348633
    5. ' -' → logprob: -17.000001907348633
    6. '-' → logprob: -17.000001907348633
    7. '2' → logprob: -17.500001907348633
    8. '  ' → logprob: -17.875001907348633
    9. '

' → logprob: -18.000001907348633
    10. '```' → logprob: -18.625001907348633

Token 167: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.0011280750622972846
    2. ',' → logprob: -7.376128196716309
    3. '-' → logprob: -7.751128196716309
    4. ' ,-' → logprob: -9.876128196716309
    5. '   ' → logprob: -11.376128196716309
    6. '1' → logprob: -12.626128196716309
    7. '```' → logprob: -13.001128196716309
    8. ' -' → logprob: -14.126128196716309
    9. '0' → logprob: -14.251128196716309
    10. ',-
' → logprob: -14.876128196716309

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.87500286102295
    3. '2' → logprob: -15.50000286102295
    4. '   ' → logprob: -15.87500286102295
    5. '-' → logprob: -16.625003814697266
    6. '
' → logprob: -17.062503814697266
    7. '```' → logprob: -17.187503814697266
    8. ',' → logprob: -17.500003814697266
    9. ')' → logprob: -18.062503814697266
    10. '

' → logprob: -18.562503814697266

Token 169: '):
' (ID: 1883)
  Prédit: ',-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.5004289150238037
    2. '):' → logprob: -1.7504289150238037
    3. '):
' → logprob: -2.0004289150238037
    4. ',' → logprob: -2.7504289150238037
    5. '-' → logprob: -4.250429153442383
    6. '   ' → logprob: -5.375429153442383
    7. '):-' → logprob: -6.750429153442383
    8. ' ,-' → logprob: -9.000429153442383
    9. ' ,' → logprob: -9.125429153442383
    10. ')' → logprob: -9.125429153442383

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01856953278183937
    2. '<|end|>' → logprob: -4.393569469451904
    3. ' if' → logprob: -6.393569469451904
    4. ' ' → logprob: -6.393569469451904
    5. '   ' → logprob: -8.018569946289062
    6. '    ' → logprob: -8.018569946289062
    7. '	' → logprob: -8.143569946289062
    8. '        ' → logprob: -8.518569946289062
    9. ')' → logprob: -8.518569946289062
    10. '[' → logprob: -8.768569946289062

Token 171: ' a' (ID: 261)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.008130351081490517
    2. 'if' → logprob: -5.2581305503845215
    3. ' for' → logprob: -6.6331305503845215
    4. ' x' → logprob: -6.8831305503845215
    5. '   ' → logprob: -9.133130073547363
    6. ' y' → logprob: -9.133130073547363
    7. ' ' → logprob: -9.633130073547363
    8. ' val' → logprob: -9.883130073547363
    9. 'x' → logprob: -10.133130073547363
    10. 'for' → logprob: -10.883130073547363

Token 172: '1' (ID: 16)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0004959598300047219
    2. '[t' → logprob: -7.750495910644531
    3. '[i' → logprob: -10.625495910644531
    4. ' [' → logprob: -11.500495910644531
    5. '[' → logprob: -11.750495910644531
    6. 'v' → logprob: -11.750495910644531
    7. '[y' → logprob: -12.500495910644531
    8. '[x' → logprob: -13.250495910644531
    9. '[a' → logprob: -13.625495910644531
    10. '[u' → logprob: -14.000495910644531

Token 173: '=a' (ID: 53088)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4324302673339844
    2. ' =' → logprob: -2.0574302673339844
    3. '=a' → logprob: -2.0574302673339844
    4. '=v' → logprob: -3.0574302673339844
    5. '=i' → logprob: -4.807430267333984
    6. '[i' → logprob: -5.057430267333984
    7. '_val' → logprob: -5.182430267333984
    8. '[v' → logprob: -5.432430267333984
    9. '=[' → logprob: -5.807430267333984
    10. 'a' → logprob: -5.807430267333984

Token 174: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -9.674858301877975e-05
    2. '[t' → logprob: -10.125096321105957
    3. '[' → logprob: -11.250096321105957
    4. '][' → logprob: -11.375096321105957
    5. ' [' → logprob: -11.500096321105957
    6. 'v' → logprob: -11.750096321105957
    7. '[a' → logprob: -13.250096321105957
    8. '[i' → logprob: -13.875096321105957
    9. '[x' → logprob: -14.000096321105957
    10. '
' → logprob: -14.000096321105957

Token 175: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00020616286201402545
    2. '[t' → logprob: -9.500205993652344
    3. ' ][' → logprob: -9.625205993652344
    4. '[' → logprob: -10.875205993652344
    5. ']' → logprob: -11.000205993652344
    6. 't' → logprob: -11.625205993652344
    7. ''][' → logprob: -11.875205993652344
    8. '[v' → logprob: -13.000205993652344
    9. '   ' → logprob: -13.000205993652344
    10. '"][' → logprob: -13.125205993652344

Token 176: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -6.170270353322849e-05
    2. ' t' → logprob: -9.875061988830566
    3. '   ' → logprob: -12.000061988830566
    4. '	t' → logprob: -13.500061988830566
    5. '[t' → logprob: -13.750061988830566
    6. ' ' → logprob: -14.500061988830566
    7. '(t' → logprob: -15.000061988830566
    8. '`t' → logprob: -15.625061988830566
    9. '
' → logprob: -15.750061988830566
    10. '       ' → logprob: -16.25006103515625

Token 177: '];' (ID: 11464)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6882625818252563
    2. '+' → logprob: -1.1882625818252563
    3. ']+' → logprob: -1.6882625818252563
    4. ']==' → logprob: -5.813262462615967
    5. ']
' → logprob: -5.938262462615967
    6. ' ]' → logprob: -7.188262462615967
    7. ' +' → logprob: -8.313262939453125
    8. ']-' → logprob: -8.813262939453125
    9. ']<<' → logprob: -8.813262939453125
    10. ']>' → logprob: -9.063262939453125

Token 178: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5587035417556763
    2. 'if' → logprob: -1.3087035417556763
    3. ' if' → logprob: -2.1837034225463867
    4. ' a' → logprob: -3.4337034225463867
    5. '           ' → logprob: -5.183703422546387
    6. 'x' → logprob: -6.183703422546387
    7. 'for' → logprob: -6.183703422546387
    8. ' for' → logprob: -6.433703422546387
    9. '   ' → logprob: -7.558703422546387
    10. '       ' → logprob: -7.933703422546387

Token 179: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4394626319408417
    2. '1' → logprob: -1.689462661743164
    3. '[v' → logprob: -1.939462661743164
    4. '0' → logprob: -4.314462661743164
    5. 'v' → logprob: -5.189462661743164
    6. 'a' → logprob: -6.439462661743164
    7. '```' → logprob: -6.814462661743164
    8. '[' → logprob: -6.814462661743164
    9. '[t' → logprob: -7.564462661743164
    10. '=v' → logprob: -7.689462661743164

Token 180: '=a' (ID: 53088)
  Prédit: '=a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=a' → logprob: -0.35446569323539734
    2. '=' → logprob: -1.2294657230377197
    3. ' =' → logprob: -5.229465484619141
    4. '=x' → logprob: -7.854465484619141
    5. '=y' → logprob: -8.97946548461914
    6. ',a' → logprob: -9.72946548461914
    7. 'a' → logprob: -10.35446548461914
    8. ' a' → logprob: -11.22946548461914
    9. ',' → logprob: -12.10446548461914
    10. '=_' → logprob: -13.10446548461914

Token 181: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.320199877838604e-07
    2. 'v' → logprob: -15.375
    3. '[' → logprob: -16.875
    4. ' [' → logprob: -17.375
    5. '```' → logprob: -17.625
    6. '<v' → logprob: -17.875
    7. '[u' → logprob: -18.625
    8. '?v' → logprob: -18.625
    9. '][' → logprob: -19.0
    10. '[a' → logprob: -19.125

Token 182: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006025957991369069
    2. '[v' → logprob: -7.500602722167969
    3. ' ][' → logprob: -10.625602722167969
    4. '[' → logprob: -11.625602722167969
    5. ']' → logprob: -12.125602722167969
    6. '}[' → logprob: -12.500602722167969
    7. '[t' → logprob: -13.125602722167969
    8. '"][' → logprob: -13.875602722167969
    9. '   ' → logprob: -13.875602722167969
    10. ' [' → logprob: -14.000602722167969

Token 183: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -4.1318875446449965e-05
    2. ' t' → logprob: -10.250041007995605
    3. '   ' → logprob: -13.125041007995605
    4. '(t' → logprob: -13.375041007995605
    5. '`t' → logprob: -14.250041007995605
    6. '	t' → logprob: -14.750041007995605
    7. '+' → logprob: -14.750041007995605
    8. '+t' → logprob: -14.875041007995605
    9. '       ' → logprob: -15.375041007995605
    10. '           ' → logprob: -16.000041961669922

Token 184: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007176732178777456
    2. ' +' → logprob: -7.375717639923096
    3. '+t' → logprob: -10.000718116760254
    4. ']+' → logprob: -11.125718116760254
    5. '1' → logprob: -11.375718116760254
    6. ']' → logprob: -11.875718116760254
    7. '+]' → logprob: -12.625718116760254
    8. ' ' → logprob: -13.125718116760254
    9. '   ' → logprob: -13.625718116760254
    10. '+
' → logprob: -13.875718116760254

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.522638169466518e-05
    2. ' ' → logprob: -10.750024795532227
    3. '2' → logprob: -13.000024795532227
    4. ']' → logprob: -14.125024795532227
    5. '   ' → logprob: -15.750024795532227
    6. '```' → logprob: -16.000024795532227
    7. '+' → logprob: -16.562524795532227
    8. '
' → logprob: -16.750024795532227
    9. '])' → logprob: -16.937524795532227
    10. '0' → logprob: -17.062524795532227

Token 186: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8640397191047668
    2. '];' → logprob: -0.8640397191047668
    3. ']
' → logprob: -1.864039659500122
    4. '];
' → logprob: -6.989039897918701
    5. ']+' → logprob: -7.239039897918701
    6. 'if' → logprob: -9.114039421081543
    7. ']

' → logprob: -9.614039421081543
    8. ']
' → logprob: -9.864039421081543
    9. ']==' → logprob: -10.114039421081543
    10. ']+=' → logprob: -10.864039421081543

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007716174703091383
    2. ' if' → logprob: -5.132716178894043
    3. '<|end|>' → logprob: -6.882716178894043
    4. 'if' → logprob: -8.507716178894043
    5. ',' → logprob: -9.007716178894043
    6. ';' → logprob: -9.132716178894043
    7. ';if' → logprob: -9.257716178894043
    8. ' ' → logprob: -9.632716178894043
    9. '        
' → logprob: -9.757716178894043
    10. '           ' → logprob: -10.257716178894043

Token 188: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23992997407913208
    2. ' if' → logprob: -2.2399299144744873
    3. 'if' (adapté à ' if') → logprob: -2.2399299144744873
    4. 'x' → logprob: -8.989930152893066
    5. ' y' → logprob: -9.989930152893066
    6. ';if' → logprob: -10.114930152893066
    7. '	if' → logprob: -10.489930152893066
    8. 'y' → logprob: -10.489930152893066
    9. '```' → logprob: -10.989930152893066
    10. '   ' → logprob: -11.114930152893066

Token 189: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.03559374809265137
    2. 'a' → logprob: -3.5355937480926514
    3. '(a' → logprob: -5.9105939865112305
    4. ' x' → logprob: -6.4105939865112305
    5. ' (' → logprob: -7.0355939865112305
    6. ' ' → logprob: -8.28559398651123
    7. 'x' → logprob: -8.91059398651123
    8. ' not' → logprob: -9.78559398651123
    9. '(' → logprob: -10.03559398651123
    10. '   ' → logprob: -10.66059398651123

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003788376343436539
    2. '[v' → logprob: -8.500378608703613
    3. '2' → logprob: -9.125378608703613
    4. '[t' → logprob: -10.000378608703613
    5. '_' → logprob: -12.437878608703613
    6. '[a' → logprob: -13.312878608703613
    7. '==' → logprob: -13.312878608703613
    8. '[' → logprob: -13.312878608703613
    9. ' ' → logprob: -13.625378608703613
    10. '```' → logprob: -13.687878608703613

Token 191: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.017252366989850998
    2. 'and' → logprob: -4.767252445220947
    3. '!=' → logprob: -5.892252445220947
    4. ' and' → logprob: -6.392252445220947
    5. ' ==' → logprob: -6.642252445220947
    6. '>=' → logprob: -6.892252445220947
    7. '>' → logprob: -7.392252445220947
    8. '<=' → logprob: -7.392252445220947
    9. 'else' → logprob: -9.017251968383789
    10. '>a' → logprob: -9.642251968383789

Token 192: 'a' (ID: 64)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21864444017410278
    2. '0' → logprob: -2.343644380569458
    3. 'a' → logprob: -2.343644380569458
    4. ' ' → logprob: -5.593644618988037
    5. ' a' → logprob: -7.468644618988037
    6. '-' → logprob: -9.218644142150879
    7. '   ' → logprob: -11.593644142150879
    8. ' -' → logprob: -12.031144142150879
    9. '2' → logprob: -12.093644142150879
    10. '

' → logprob: -12.656144142150879

Token 193: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0036080284044146538
    2. '0' → logprob: -6.503608226776123
    3. '[v' → logprob: -7.003608226776123
    4. '1' → logprob: -7.378608226776123
    5. ' ' → logprob: -7.753608226776123
    6. '[' → logprob: -10.378607749938965
    7. '[a' → logprob: -10.378607749938965
    8. 'a' → logprob: -10.378607749938965
    9. ' and' → logprob: -11.628607749938965
    10. '[t' → logprob: -12.253607749938965

Token 194: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07877631485462189
    2. 'and' → logprob: -2.9537763595581055
    3. ' and' → logprob: -4.8287763595581055
    4. ':x' → logprob: -5.0787763595581055
    5. '==' → logprob: -5.3287763595581055
    6. ':
' → logprob: -5.7037763595581055
    7. ':y' → logprob: -7.9537763595581055
    8. ' :' → logprob: -8.828776359558105
    9. '           ' → logprob: -8.953776359558105
    10. ':return' → logprob: -9.328776359558105

Token 195: ' x' (ID: 1215)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014028461650013924
    2. ' x' → logprob: -4.639028549194336
    3. '               ' → logprob: -6.139028549194336
    4. 'x' → logprob: -6.639028549194336
    5. ' if' → logprob: -7.514028549194336
    6. ' y' → logprob: -9.014028549194336
    7. ' and' → logprob: -10.514028549194336
    8. ' ' → logprob: -11.014028549194336
    9. '                   ' → logprob: -11.639028549194336
    10. ',' → logprob: -11.764028549194336

Token 196: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.082895273109898e-05
    2. '[t' → logprob: -10.625030517578125
    3. '[' → logprob: -13.125030517578125
    4. '][' → logprob: -13.500030517578125
    5. ' [' → logprob: -13.875030517578125
    6. 'v' → logprob: -14.375030517578125
    7. '[i' → logprob: -14.875030517578125
    8. '[x' → logprob: -14.875030517578125
    9. '   ' → logprob: -15.625030517578125
    10. '[a' → logprob: -16.125030517578125

Token 197: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0029162613209336996
    2. '[v' → logprob: -6.00291633605957
    3. ' ][' → logprob: -8.37791633605957
    4. '[t' → logprob: -9.25291633605957
    5. ']' → logprob: -9.75291633605957
    6. '[' → logprob: -10.37791633605957
    7. ' [' → logprob: -12.25291633605957
    8. '"][' → logprob: -12.37791633605957
    9. ' ' → logprob: -12.50291633605957
    10. '   ' → logprob: -13.12791633605957

Token 198: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0023725584615021944
    2. 'v' → logprob: -6.752372741699219
    3. '][' → logprob: -7.002372741699219
    4. ' t' → logprob: -8.627372741699219
    5. '[t' → logprob: -9.752372741699219
    6. '   ' → logprob: -10.752372741699219
    7. ' ' → logprob: -11.877372741699219
    8. ' ][' → logprob: -12.127372741699219
    9. 'a' → logprob: -12.877372741699219
    10. ']' → logprob: -13.252372741699219

Token 199: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0016356664709746838
    2. '+' → logprob: -7.001635551452637
    3. ' ][' → logprob: -7.376635551452637
    4. ']' → logprob: -10.501635551452637
    5. '   ' → logprob: -10.876635551452637
    6. ' ' → logprob: -11.751635551452637
    7. '1' → logprob: -12.001635551452637
    8. '[v' → logprob: -12.126635551452637
    9. '       ' → logprob: -12.251635551452637
    10. '[' → logprob: -12.376635551452637

Token 200: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.01467098481953144
    2. 't' → logprob: -4.7646708488464355
    3. 'i' → logprob: -5.1396708488464355
    4. ']' → logprob: -9.889671325683594
    5. '[v' → logprob: -10.139671325683594
    6. '   ' → logprob: -10.889671325683594
    7. ' v' → logprob: -11.389671325683594
    8. ':v' → logprob: -11.514671325683594
    9. '(v' → logprob: -11.764671325683594
    10. ':' → logprob: -11.889671325683594

Token 201: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6946483254432678
    2. ']=' → logprob: -0.6946483254432678
    3. ' ]' → logprob: -7.194648265838623
    4. '+' → logprob: -7.444648265838623
    5. ']=(' → logprob: -9.444648742675781
    6. ']+=' → logprob: -9.694648742675781
    7. '   ' → logprob: -11.694648742675781
    8. ' ' → logprob: -11.944648742675781
    9. ']=-' → logprob: -12.319648742675781
    10. ']={' → logprob: -14.569648742675781

Token 202: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0017915592761710286
    2. 't' → logprob: -6.376791477203369
    3. ' x' → logprob: -9.501791954040527
    4. '   ' → logprob: -12.001791954040527
    5. ' ' → logprob: -12.626791954040527
    6. '	x' → logprob: -13.001791954040527
    7. 'max' → logprob: -13.626791954040527
    8. ' t' → logprob: -14.251791954040527
    9. '  ' → logprob: -14.626791954040527
    10. '0' → logprob: -15.751791954040527

Token 203: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.981667537620524e-06
    2. 'v' → logprob: -13.250001907348633
    3. '```' → logprob: -17.125001907348633
    4. ' v' → logprob: -17.875001907348633
    5. ' [' → logprob: -18.750001907348633
    6. '[' → logprob: -19.125001907348633
    7. '	v' → logprob: -19.250001907348633
    8. '<v' → logprob: -20.625001907348633
    9. '][' → logprob: -21.000001907348633
    10. '[x' → logprob: -21.000001907348633

Token 204: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0031901898328214884
    2. '[v' → logprob: -5.753190040588379
    3. ' ][' → logprob: -12.003190040588379
    4. '[t' → logprob: -13.253190040588379
    5. '}[' → logprob: -13.878190040588379
    6. '[' → logprob: -14.128190040588379
    7. 'v' → logprob: -14.378190040588379
    8. ' [' → logprob: -14.628190040588379
    9. ']' → logprob: -14.753190040588379
    10. '"][' → logprob: -14.878190040588379

Token 205: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00039730319986119866
    2. ' t' → logprob: -7.875397205352783
    3. '[t' → logprob: -11.875397682189941
    4. '   ' → logprob: -12.000397682189941
    5. '	t' → logprob: -13.375397682189941
    6. ' ' → logprob: -13.625397682189941
    7. '][' → logprob: -15.000397682189941
    8. '  ' → logprob: -15.500397682189941
    9. '       ' → logprob: -15.625397682189941
    10. '`t' → logprob: -15.750397682189941

Token 206: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18017318844795227
    2. '][' → logprob: -1.8051731586456299
    3. ' +' → logprob: -7.930173397064209
    4. '   ' → logprob: -10.93017292022705
    5. ' ' → logprob: -11.43017292022705
    6. ' ][' → logprob: -11.43017292022705
    7. '1' → logprob: -11.80517292022705
    8. '[' → logprob: -11.93017292022705
    9. ''][' → logprob: -12.80517292022705
    10. ']' → logprob: -12.80517292022705

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.750014305114746
    3. '2' → logprob: -12.500014305114746
    4. '   ' → logprob: -13.500014305114746
    5. '+' → logprob: -14.750014305114746
    6. '[' → logprob: -16.50001335144043
    7. '       ' → logprob: -16.62501335144043
    8. '```' → logprob: -16.87501335144043
    9. '           ' → logprob: -17.12501335144043
    10. '  ' → logprob: -17.25001335144043

Token 208: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00022439735766965896
    2. ']' → logprob: -9.375224113464355
    3. ' ][' → logprob: -9.750224113464355
    4. '[v' → logprob: -10.250224113464355
    5. '[' → logprob: -11.125224113464355
    6. '"][' → logprob: -11.250224113464355
    7. ' ' → logprob: -12.125224113464355
    8. ''][' → logprob: -12.875224113464355
    9. '<|end|>' → logprob: -13.500224113464355
    10. '   ' → logprob: -13.500224113464355

Token 209: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.873571692267433e-05
    2. '[v' → logprob: -9.875068664550781
    3. 't' → logprob: -11.625068664550781
    4. '][' → logprob: -12.750068664550781
    5. ' v' → logprob: -13.250068664550781
    6. ']' → logprob: -13.500068664550781
    7. '[' → logprob: -14.250068664550781
    8. '	v' → logprob: -14.750068664550781
    9. '(v' → logprob: -15.000068664550781
    10. 'w' → logprob: -15.500068664550781

Token 210: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014210401102900505
    2. ']
' → logprob: -4.639210224151611
    3. '<|end|>' → logprob: -5.764210224151611
    4. ' ]' → logprob: -7.639210224151611
    5. '
' → logprob: -8.13921070098877
    6. 'else' → logprob: -8.38921070098877
    7. '       ' → logprob: -9.01421070098877
    8. '<|end|>' → logprob: -10.26421070098877
    9. '];' → logprob: -10.63921070098877
    10. ']+' → logprob: -11.01421070098877

Token 211: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: ' t' (ID: 260)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.016727430745959282
    2. 'v' → logprob: -4.266727447509766
    3. ' t' → logprob: -7.016727447509766
    4. ' i' → logprob: -7.391727447509766
    5. ' w' → logprob: -7.641727447509766
    6. ' j' → logprob: -9.391727447509766
    7. ' _' → logprob: -9.516727447509766
    8. '_' → logprob: -9.641727447509766
    9. '_v' → logprob: -10.016727447509766
    10. ' x' → logprob: -10.141727447509766

Token 213: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14296182990074158
    2. 'in' → logprob: -2.0179617404937744
    3. ' ' → logprob: -8.517961502075195
    4. '1' → logprob: -11.517961502075195
    5. 'w' → logprob: -11.517961502075195
    6. '```' → logprob: -11.767961502075195
    7. 'range' → logprob: -11.767961502075195
    8. 'n' → logprob: -12.267961502075195
    9. '   ' → logprob: -12.267961502075195
    10. ')' → logprob: -12.517961502075195

Token 214: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4293193221092224
    2. ' range' → logprob: -1.0543193817138672
    3. 'w' → logprob: -7.804319381713867
    4. '(range' → logprob: -9.304319381713867
    5. '(w' → logprob: -9.554319381713867
    6. ' w' → logprob: -11.179319381713867
    7. ' in' → logprob: -11.429319381713867
    8. 'in' → logprob: -12.304319381713867
    9. '(h' → logprob: -12.804319381713867
    10. ' ' → logprob: -12.929319381713867

Token 215: '(h' (ID: 8120)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.003998142667114735
    2. '(h' → logprob: -5.878998279571533
    3. 'w' → logprob: -7.253998279571533
    4. '(' → logprob: -8.128997802734375
    5. ' (' → logprob: -9.003997802734375
    6. ' w' → logprob: -10.753997802734375
    7. 'h' → logprob: -10.753997802734375
    8. '1' → logprob: -12.253997802734375
    9. '(v' → logprob: -12.253997802734375
    10. ',w' → logprob: -13.128997802734375

Token 216: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005458841915242374
    2. ',-' → logprob: -8.125545501708984
    3. '):
' → logprob: -8.750545501708984
    4. ' -' → logprob: -9.875545501708984
    5. '):' → logprob: -10.500545501708984
    6. ',' → logprob: -12.250545501708984
    7. '
' → logprob: -12.875545501708984
    8. ')-' → logprob: -13.875545501708984
    9. ')' → logprob: -14.000545501708984
    10. '   ' → logprob: -14.125545501708984

Token 217: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01614193618297577
    2. '1' → logprob: -4.141141891479492
    3. '-' → logprob: -9.891141891479492
    4. '3' → logprob: -10.266141891479492
    5. ' ' → logprob: -11.016141891479492
    6. '
' → logprob: -13.016141891479492
    7. '

' → logprob: -13.828641891479492
    8. ',' → logprob: -14.141141891479492
    9. '   ' → logprob: -14.516141891479492
    10. ' -' → logprob: -15.203641891479492

Token 218: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.00283281528390944
    2. ',' → logprob: -5.877832889556885
    3. ' ,-' → logprob: -10.877832412719727
    4. '-' → logprob: -12.127832412719727
    5. ',t' → logprob: -13.502832412719727
    6. '1' → logprob: -14.377832412719727
    7. ' ,' → logprob: -14.752832412719727
    8. ',v' → logprob: -14.877832412719727
    9. '",-' → logprob: -15.002832412719727
    10. '   ' → logprob: -15.752832412719727

Token 219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8908587662735954e-05
    2. '-' → logprob: -11.125019073486328
    3. '0' → logprob: -13.500019073486328
    4. ' -' → logprob: -13.500019073486328
    5. ' ' → logprob: -13.750019073486328
    6. '   ' → logprob: -16.500019073486328
    7. '```' → logprob: -17.000019073486328
    8. '
' → logprob: -17.875019073486328
    9. '2' → logprob: -18.187519073486328
    10. ',' → logprob: -18.187519073486328

Token 220: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.00017827287956606597
    2. ',' → logprob: -8.750178337097168
    3. '-' → logprob: -11.000178337097168
    4. '1' → logprob: -13.375178337097168
    5. ' ,-' → logprob: -13.750178337097168
    6. '   ' → logprob: -15.500178337097168
    7. '```' → logprob: -15.875178337097168
    8. '",-' → logprob: -15.875178337097168
    9. ',:' → logprob: -16.62517738342285
    10. ',t' → logprob: -17.87517738342285

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.875000953674316
    3. '0' → logprob: -16.125
    4. '   ' → logprob: -17.0
    5. '-' → logprob: -17.125
    6. '```' → logprob: -17.125
    7. '
' → logprob: -17.25
    8. ')' → logprob: -18.5
    9. '       ' → logprob: -19.0
    10. ',' → logprob: -19.125

Token 222: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.23727324604988098
    2. '):' → logprob: -1.7372732162475586
    3. ',' → logprob: -3.7372732162475586
    4. ':' → logprob: -5.237273216247559
    5. '   ' → logprob: -5.737273216247559
    6. ',-' → logprob: -6.737273216247559
    7. ',v' → logprob: -7.112273216247559
    8. ':
' → logprob: -8.112273216247559
    9. '-' → logprob: -8.737273216247559
    10. ')' → logprob: -9.237273216247559

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07902979850769043
    2. ' for' → logprob: -2.5790297985076904
    3. 'for' → logprob: -8.95403003692627
    4. '	for' → logprob: -11.82903003692627
    5. ' ' → logprob: -13.32903003692627
    6. '```' → logprob: -14.20403003692627
    7. '       ' → logprob: -14.95403003692627
    8. '   ' → logprob: -15.32903003692627
    9. '    ' → logprob: -15.57903003692627
    10. ':
' → logprob: -16.204029083251953

Token 224: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6805360317230225
    2. 'for' (adapté à ' for') → logprob: -1.1805360317230225
    3. ' for' → logprob: -1.6805360317230225
    4. '	for' → logprob: -9.055536270141602
    5. ' ' → logprob: -9.930536270141602
    6. '       ' → logprob: -10.430536270141602
    7. 'y' → logprob: -11.305536270141602
    8. '```' → logprob: -11.555536270141602
    9. 'v' → logprob: -12.055536270141602
    10. 'a' → logprob: -12.180536270141602

Token 225: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.24923774600028992
    2. 'i' → logprob: -2.6242377758026123
    3. 's' → logprob: -2.8742377758026123
    4. 'j' → logprob: -3.2492377758026123
    5. 'u' → logprob: -3.4992377758026123
    6. 'w' → logprob: -4.499237537384033
    7. 'k' → logprob: -5.374237537384033
    8. 'l' → logprob: -6.374237537384033
    9. 'r' → logprob: -6.874237537384033
    10. 'x' → logprob: -7.249237537384033

Token 226: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0141900684684515
    2. 'in' → logprob: -4.264190196990967
    3. 'range' → logprob: -10.889189720153809
    4. '   ' → logprob: -12.139189720153809
    5. ' range' → logprob: -14.139189720153809
    6. ' ' → logprob: -14.514189720153809
    7. 'v' → logprob: -15.264189720153809
    8. 'n' → logprob: -15.514189720153809
    9. 'for' → logprob: -15.889189720153809
    10. 't' → logprob: -16.139190673828125

Token 227: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12693451344966888
    2. ' range' → logprob: -2.12693452835083
    3. '(range' → logprob: -12.126934051513672
    4. '   ' → logprob: -14.126934051513672
    5. 'w' → logprob: -16.251934051513672
    6. '	range' → logprob: -17.626934051513672
    7. '[w' → logprob: -17.626934051513672
    8. ' ' → logprob: -18.001934051513672
    9. '    ' → logprob: -18.251934051513672
    10. '  ' → logprob: -18.751934051513672

Token 228: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0037099348846822977
    2. '(h' → logprob: -5.62870979309082
    3. 'w' → logprob: -9.25370979309082
    4. 'range' → logprob: -12.25370979309082
    5. 'h' → logprob: -12.50370979309082
    6. '(' → logprob: -12.87870979309082
    7. ' (' → logprob: -14.00370979309082
    8. '   ' → logprob: -14.25370979309082
    9. '(range' → logprob: -14.50370979309082
    10. ' w' → logprob: -14.75370979309082

Token 229: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0035381787456572056
    2. ',-' → logprob: -6.628538131713867
    3. '):' → logprob: -6.628538131713867
    4. '):
' → logprob: -7.378538131713867
    5. ' -' → logprob: -8.753538131713867
    6. ',' → logprob: -9.753538131713867
    7. '-,' → logprob: -10.503538131713867
    8. '   ' → logprob: -11.878538131713867
    9. '+' → logprob: -13.503538131713867
    10. ' ,-' → logprob: -13.628538131713867

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011988218873739243
    2. 'a' → logprob: -5.136988162994385
    3. '   ' → logprob: -5.886988162994385
    4. ' a' → logprob: -6.386988162994385
    5. ' if' → logprob: -7.386988162994385
    6. 'if' → logprob: -8.386988639831543
    7. ' for' → logprob: -8.511988639831543
    8. '           ' → logprob: -8.761988639831543
    9. ' y' → logprob: -9.011988639831543
    10. 'y' → logprob: -9.511988639831543

Token 231: ' if' (ID: 538)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.050279393792152405
    2. 'y' → logprob: -4.17527961730957
    3. ' a' → logprob: -4.67527961730957
    4. 'if' (adapté à ' if') → logprob: -4.67527961730957
    5. 'for' → logprob: -5.30027961730957
    6. '   ' → logprob: -5.55027961730957
    7. 'x' → logprob: -5.80027961730957
    8. ' y' → logprob: -6.80027961730957
    9. 'b' → logprob: -7.17527961730957
    10. ' if' → logprob: -7.67527961730957

Token 232: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2373989373445511
    2. 'y' → logprob: -2.112398862838745
    3. 'x' → logprob: -2.487398862838745
    4. ' a' → logprob: -5.737399101257324
    5. ' y' → logprob: -5.737399101257324
    6. ' x' → logprob: -7.237399101257324
    7. '(a' → logprob: -10.362399101257324
    8. '   ' → logprob: -10.862399101257324
    9. ' ' → logprob: -11.862399101257324
    10. '(x' → logprob: -12.112399101257324

Token 233: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.0003790760529227555
    2. 't' → logprob: -8.125378608703613
    3. '[v' → logprob: -9.500378608703613
    4. '	t' → logprob: -13.125378608703613
    5. ' t' → logprob: -13.500378608703613
    6. '[a' → logprob: -13.875378608703613
    7. ' [' → logprob: -14.000378608703613
    8. '   ' → logprob: -14.500378608703613
    9. '[' → logprob: -14.625378608703613
    10. 'v' → logprob: -14.750378608703613

Token 234: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006387310568243265
    2. '+' → logprob: -5.131387233734131
    3. '[t' → logprob: -8.006387710571289
    4. '[v' → logprob: -10.131387710571289
    5. '[' → logprob: -10.881387710571289
    6. ' ][' → logprob: -10.881387710571289
    7. '   ' → logprob: -11.006387710571289
    8. ']' → logprob: -11.256387710571289
    9. ' +' → logprob: -12.631387710571289
    10. ''][' → logprob: -13.256387710571289

Token 235: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.5048530030981055e-06
    2. ' v' → logprob: -13.500001907348633
    3. '[v' → logprob: -16.875001907348633
    4. '   ' → logprob: -16.875001907348633
    5. '	v' → logprob: -18.250001907348633
    6. 't' → logprob: -19.375001907348633
    7. '
' → logprob: -19.500001907348633
    8. ' ' → logprob: -20.000001907348633
    9. '(v' → logprob: -20.000001907348633
    10. '```' → logprob: -20.375001907348633

Token 236: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.009828103706240654
    2. ']' → logprob: -4.634828090667725
    3. ']!=' → logprob: -10.384828567504883
    4. ' ]' → logprob: -11.134828567504883
    5. '][' → logprob: -11.884828567504883
    6. ']:' → logprob: -12.259828567504883
    7. ']>=' → logprob: -12.509828567504883
    8. '==' → logprob: -13.134828567504883
    9. ']:
' → logprob: -13.259828567504883
    10. ']<=' → logprob: -13.384828567504883

Token 237: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00019507692195475101
    2. ' a' → logprob: -8.625195503234863
    3. '1' → logprob: -12.000195503234863
    4. '   ' → logprob: -12.125195503234863
    5. '0' → logprob: -13.750195503234863
    6. ' ' → logprob: -14.000195503234863
    7. '     ' → logprob: -14.500195503234863
    8. '  ' → logprob: -15.000195503234863
    9. '       ' → logprob: -15.000195503234863
    10. '           ' → logprob: -15.750195503234863

Token 238: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.0009459959110245109
    2. 't' → logprob: -7.000946044921875
    3. '   ' → logprob: -10.625946044921875
    4. '[' → logprob: -12.625946044921875
    5. '
' → logprob: -12.750946044921875
    6. ' [' → logprob: -13.250946044921875
    7. '       ' → logprob: -14.625946044921875
    8. '```' → logprob: -15.250946044921875
    9. ' ' → logprob: -15.500946044921875
    10. '	t' → logprob: -15.625946044921875

Token 239: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002821928064804524
    2. '][' → logprob: -8.375282287597656
    3. ' +' → logprob: -10.125282287597656
    4. '[' → logprob: -12.375282287597656
    5. '1' → logprob: -12.500282287597656
    6. '+
' → logprob: -13.500282287597656
    7. '```' → logprob: -14.250282287597656
    8. '   ' → logprob: -14.375282287597656
    9. '[t' → logprob: -15.500282287597656
    10. ' ' → logprob: -15.625282287597656

Token 240: '1' (ID: 16)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0006410692585632205
    2. '1' → logprob: -7.375640869140625
    3. '[v' → logprob: -11.250640869140625
    4. ' v' → logprob: -13.750640869140625
    5. '+' → logprob: -15.500640869140625
    6. '```' → logprob: -16.500640869140625
    7. '	v' → logprob: -16.625640869140625
    8. '(v' → logprob: -16.750640869140625
    9. 't' → logprob: -17.000640869140625
    10. '?v' → logprob: -17.625640869140625

Token 241: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003297489834949374
    2. '[v' → logprob: -5.753297328948975
    3. ' ][' → logprob: -9.628297805786133
    4. ']' → logprob: -10.628297805786133
    5. 'v' → logprob: -11.378297805786133
    6. '"][' → logprob: -12.253297805786133
    7. '[' → logprob: -12.378297805786133
    8. ''][' → logprob: -12.503297805786133
    9. '[t' → logprob: -13.003297805786133
    10. '   ' → logprob: -14.253297805786133

Token 242: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0921942703134846e-05
    2. '[v' → logprob: -11.75001049041748
    3. ' v' → logprob: -12.75001049041748
    4. '[' → logprob: -17.125011444091797
    5. '   ' → logprob: -18.000011444091797
    6. '	v' → logprob: -18.250011444091797
    7. 't' → logprob: -18.375011444091797
    8. ']' → logprob: -18.625011444091797
    9. 'w' → logprob: -18.750011444091797
    10. ')v' → logprob: -19.500011444091797

Token 243: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.021225454285740852
    2. ']' → logprob: -4.521225452423096
    3. ']:
' → logprob: -4.771225452423096
    4. ':' → logprob: -6.646225452423096
    5. ' ]' → logprob: -8.646225929260254
    6. ']:
' → logprob: -10.271225929260254
    7. '   ' → logprob: -10.521225929260254
    8. ']==' → logprob: -10.646225929260254
    9. ']=' → logprob: -11.021225929260254
    10. '[' → logprob: -11.021225929260254

Token 244: '           ' (ID: 352)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.003470113268122077
    2. 'y' → logprob: -6.253469944000244
    3. ' x' → logprob: -6.753469944000244
    4. '           ' → logprob: -8.503470420837402
    5. '       ' → logprob: -9.503470420837402
    6. '   ' → logprob: -9.628470420837402
    7. 'x' → logprob: -10.878470420837402
    8. '	y' → logprob: -12.503470420837402
    9. ' ' → logprob: -13.753470420837402
    10. ' z' → logprob: -13.878470420837402

Token 245: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.07940776646137238
    2. 'y' (adapté à ' y') → logprob: -2.5794076919555664
    3. '   ' → logprob: -8.204407691955566
    4. ' x' → logprob: -9.329407691955566
    5. '           ' → logprob: -9.454407691955566
    6. 'x' → logprob: -9.954407691955566
    7. '               ' → logprob: -11.579407691955566
    8. ' ' → logprob: -12.204407691955566
    9. '	y' → logprob: -12.454407691955566
    10. '       ' → logprob: -12.579407691955566

Token 246: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -1.1517960956552997e-05
    2. 't' → logprob: -11.500011444091797
    3. ' [' → logprob: -14.125011444091797
    4. '[' → logprob: -15.000011444091797
    5. '[v' → logprob: -15.875011444091797
    6. '[y' → logprob: -16.000011444091797
    7. ' t' → logprob: -17.125011444091797
    8. '(t' → logprob: -17.500011444091797
    9. '=t' → logprob: -17.625011444091797
    10. '   ' → logprob: -18.625011444091797

Token 247: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004927450208924711
    2. '[v' → logprob: -7.750492572784424
    3. '[t' → logprob: -10.250493049621582
    4. ' ][' → logprob: -11.125493049621582
    5. ']' → logprob: -12.125493049621582
    6. '   ' → logprob: -13.500493049621582
    7. '[' → logprob: -13.750493049621582
    8. 'v' → logprob: -13.750493049621582
    9. '+' → logprob: -13.750493049621582
    10. ' [' → logprob: -15.125493049621582

Token 248: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.033648233860731125
    2. 't' → logprob: -3.4086482524871826
    3. ' v' → logprob: -13.783648490905762
    4. ' t' → logprob: -14.658648490905762
    5. '[v' → logprob: -14.908648490905762
    6. 'w' → logprob: -15.783648490905762
    7. '   ' → logprob: -16.033647537231445
    8. ']' → logprob: -16.283647537231445
    9. '[t' → logprob: -16.658647537231445
    10. '	v' → logprob: -16.908647537231445

Token 249: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0012357031228020787
    2. '[t' → logprob: -6.876235485076904
    3. '[v' → logprob: -9.251235961914062
    4. ' ][' → logprob: -10.126235961914062
    5. '[' → logprob: -11.251235961914062
    6. '[y' → logprob: -11.501235961914062
    7. ']' → logprob: -11.501235961914062
    8. '"][' → logprob: -12.251235961914062
    9. ''][' → logprob: -12.376235961914062
    10. 't' → logprob: -12.626235961914062

Token 250: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0021914218086749315
    2. 't' → logprob: -6.127191543579102
    3. 'y' → logprob: -13.252191543579102
    4. ' v' → logprob: -13.377191543579102
    5. '   ' → logprob: -13.377191543579102
    6. '
' → logprob: -14.627191543579102
    7. '[v' → logprob: -15.627191543579102
    8. '[t' → logprob: -15.752191543579102
    9. 'a' → logprob: -15.877191543579102
    10. '	v' → logprob: -16.0021915435791

Token 251: ']=' (ID: 9539)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1864217221736908
    2. ']=' → logprob: -1.9364217519760132
    3. ']' → logprob: -3.6864216327667236
    4. '[t' → logprob: -7.811421871185303
    5. ']+=' → logprob: -9.436421394348145
    6. '][' → logprob: -9.436421394348145
    7. '+t' → logprob: -9.561421394348145
    8. ' +' → logprob: -9.936421394348145
    9. '1' → logprob: -10.061421394348145
    10. ' ]' → logprob: -10.936421394348145

Token 252: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.580929347255733e-05
    2. ' y' → logprob: -11.125016212463379
    3. '   ' → logprob: -13.875016212463379
    4. '	y' → logprob: -16.625015258789062
    5. 't' → logprob: -17.125015258789062
    6. ' ' → logprob: -17.625015258789062
    7. 'v' → logprob: -17.750015258789062
    8. 'x' → logprob: -18.250015258789062
    9. '       ' → logprob: -18.375015258789062
    10. '  ' → logprob: -18.625015258789062

Token 253: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.3870008885860443
    2. 't' → logprob: -1.1370009183883667
    3. ' t' → logprob: -9.637001037597656
    4. '   ' → logprob: -10.012001037597656
    5. '	t' → logprob: -11.762001037597656
    6. '(t' → logprob: -12.137001037597656
    7. '[
' → logprob: -13.387001037597656
    8. '[' → logprob: -13.512001037597656
    9. '{' → logprob: -14.012001037597656
    10. '`t' → logprob: -14.387001037597656

Token 254: '+' (ID: 10)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.05739450827240944
    2. 't' → logprob: -3.182394504547119
    3. '+' → logprob: -4.307394504547119
    4. '[' → logprob: -7.557394504547119
    5. '1' → logprob: -9.307394981384277
    6. '+t' → logprob: -9.807394981384277
    7. 's' → logprob: -10.182394981384277
    8. '][' → logprob: -10.307394981384277
    9. '   ' → logprob: -10.432394981384277
    10. ' t' → logprob: -11.182394981384277

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -13.000004768371582
    3. 'v' → logprob: -14.125004768371582
    4. 't' → logprob: -14.375004768371582
    5. '+' → logprob: -14.375004768371582
    6. '   ' → logprob: -15.250004768371582
    7. '```' → logprob: -15.500004768371582
    8. '2' → logprob: -15.750004768371582
    9. '
' → logprob: -16.9375057220459
    10. '0' → logprob: -17.3125057220459

Token 256: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008252615109086037
    2. '[v' → logprob: -4.8832526206970215
    3. '[t' → logprob: -7.5082526206970215
    4. ' ][' → logprob: -10.258252143859863
    5. '[' → logprob: -10.383252143859863
    6. ' [' → logprob: -11.758252143859863
    7. ']' → logprob: -12.133252143859863
    8. '+' → logprob: -12.383252143859863
    9. 't' → logprob: -12.508252143859863
    10. 'v' → logprob: -12.508252143859863

Token 257: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.7697225252486533e-06
    2. ' v' → logprob: -12.625003814697266
    3. '[v' → logprob: -15.500003814697266
    4. 't' → logprob: -16.625003814697266
    5. ' ' → logprob: -17.125003814697266
    6. 'y' → logprob: -17.625003814697266
    7. '	v' → logprob: -17.750003814697266
    8. ',v' → logprob: -18.125003814697266
    9. '[' → logprob: -18.250003814697266
    10. 'w' → logprob: -18.750003814697266

Token 258: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006513170665130019
    2. '[v' → logprob: -7.3756513595581055
    3. ']' → logprob: -11.875651359558105
    4. ' ][' → logprob: -12.125651359558105
    5. '"][' → logprob: -12.625651359558105
    6. 'v' → logprob: -12.750651359558105
    7. ''][' → logprob: -13.000651359558105
    8. '[' → logprob: -13.125651359558105
    9. '}[' → logprob: -14.750651359558105
    10. '[t' → logprob: -14.875651359558105

Token 259: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.4121114822482923e-06
    2. ' v' → logprob: -12.875003814697266
    3. '][' → logprob: -14.750003814697266
    4. '[v' → logprob: -14.875003814697266
    5. '	v' → logprob: -17.500003814697266
    6. '
' → logprob: -18.125003814697266
    7. 't' → logprob: -18.125003814697266
    8. '[' → logprob: -18.250003814697266
    9. '   ' → logprob: -18.625003814697266
    10. ' ' → logprob: -18.750003814697266

Token 260: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013410773826763034
    2. '<|end|>' → logprob: -7.126340866088867
    3. ']+' → logprob: -8.376340866088867
    4. ' ]' → logprob: -8.876340866088867
    5. ']
' → logprob: -9.251340866088867
    6. '[' → logprob: -11.626340866088867
    7. '[v' → logprob: -11.751340866088867
    8. '[t' → logprob: -11.876340866088867
    9. '])' → logprob: -12.126340866088867
    10. '+' → logprob: -12.376340866088867

Token 261: 'i' (ID: 72)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: '=' (ID: 28)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5986194014549255
    2. 'nd' → logprob: -1.5986194610595703
    3. 'n' → logprob: -1.8486194610595703
    4. '=' → logprob: -2.7236194610595703
    5. ' =' → logprob: -4.97361946105957
    6. '+' → logprob: -6.09861946105957
    7. 'nt' → logprob: -6.47361946105957
    8. '[' → logprob: -6.47361946105957
    9. '+=' → logprob: -6.47361946105957
    10. 'd' → logprob: -6.59861946105957

Token 263: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00370851531624794
    2. 'h' → logprob: -6.253708362579346
    3. ' ' → logprob: -6.628708362579346
    4. '1' → logprob: -8.003708839416504
    5. '2' → logprob: -10.128708839416504
    6. 'w' → logprob: -10.253708839416504
    7. 'j' → logprob: -11.253708839416504
    8. ' h' → logprob: -11.753708839416504
    9. 'x' → logprob: -12.503708839416504
    10. '-' → logprob: -12.628708839416504

Token 264: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6485958099365234
    2. '<|end|>' → logprob: -0.7735958099365234
    3. 'while' → logprob: -4.648595809936523
    4. '<|end|>' → logprob: -6.773595809936523
    5. ',' → logprob: -7.273595809936523
    6. ';' → logprob: -7.648595809936523
    7. '#' → logprob: -7.648595809936523
    8. ' while' → logprob: -7.773595809936523
    9. 'for' → logprob: -7.773595809936523
    10. 'i' → logprob: -7.898595809936523

Token 265: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 266: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.009509802795946598
    2. 'i' → logprob: -4.759510040283203
    3. ' True' → logprob: -7.509510040283203
    4. '(i' → logprob: -9.259510040283203
    5. 'True' → logprob: -9.384510040283203
    6. ' ' → logprob: -9.509510040283203
    7. ' (' → logprob: -10.509510040283203
    8. ' h' → logprob: -10.634510040283203
    9. '(' → logprob: -12.134510040283203
    10. 'h' → logprob: -12.322010040283203

Token 267: '<h' (ID: 23843)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20886889100074768
    2. '<' → logprob: -1.7088688611984253
    3. ' <=' → logprob: -5.333868980407715
    4. '<=' → logprob: -6.333868980407715
    5. '<len' → logprob: -8.458868980407715
    6. ' ' → logprob: -8.583868980407715
    7. '+' → logprob: -8.833868980407715
    8. ' <
' → logprob: -9.083868980407715
    9. '<n' → logprob: -10.083868980407715
    10. '[' → logprob: -10.208868980407715

Token 268: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014282134361565113
    2. ':
' → logprob: -7.001428127288818
    3. '+' → logprob: -8.376428604125977
    4. ' and' → logprob: -9.126428604125977
    5. '+:' → logprob: -9.626428604125977
    6. ' :' → logprob: -9.876428604125977
    7. 'and' → logprob: -10.126428604125977
    8. ':i' → logprob: -11.501428604125977
    9. '=' → logprob: -13.251428604125977
    10. ',' → logprob: -13.501428604125977

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24576441943645477
    2. ' i' → logprob: -2.1207644939422607
    3. ' j' → logprob: -2.9957644939422607
    4. 'i' → logprob: -3.8707644939422607
    5. ' if' → logprob: -4.245764255523682
    6. 'j' → logprob: -4.620764255523682
    7. 'if' → logprob: -6.995764255523682
    8. ' for' → logprob: -7.745764255523682
    9. '    ' → logprob: -7.870764255523682
    10. ' ' → logprob: -7.995764255523682

Token 270: ' for' (ID: 395)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.14592121541500092
    2. 'i' → logprob: -2.895921230316162
    3. 'if' → logprob: -3.395921230316162
    4. ' j' → logprob: -3.645921230316162
    5. '   ' → logprob: -4.395921230316162
    6. ' if' → logprob: -5.645921230316162
    7. 'for' (adapté à ' for') → logprob: -6.270921230316162
    8. ' i' → logprob: -6.895921230316162
    9. ' for' → logprob: -7.145921230316162
    10. 't' → logprob: -9.020920753479004

Token 271: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.16437621414661407
    2. 'j' → logprob: -1.9143762588500977
    3. ' v' → logprob: -5.789376258850098
    4. 'v' → logprob: -7.539376258850098
    5. ' t' → logprob: -8.414376258850098
    6. 't' → logprob: -10.039376258850098
    7. ' k' → logprob: -10.164376258850098
    8. ' w' → logprob: -10.164376258850098
    9. ' x' → logprob: -10.414376258850098
    10. '_j' → logprob: -10.789376258850098

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04310618340969086
    2. 'in' → logprob: -3.1681060791015625
    3. ' ' → logprob: -9.293106079101562
    4. '0' → logprob: -12.918106079101562
    5. '```' → logprob: -13.043106079101562
    6. '   ' → logprob: -13.168106079101562
    7. ')' → logprob: -13.293106079101562
    8. ' i' → logprob: -13.543106079101562
    9. 'i' → logprob: -13.793106079101562
    10. '  ' → logprob: -14.043106079101562

Token 273: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31330257654190063
    2. ' range' → logprob: -1.3133025169372559
    3. '(range' → logprob: -11.438302993774414
    4. '0' → logprob: -11.563302993774414
    5. 'w' → logprob: -11.688302993774414
    6. ' ' → logprob: -12.438302993774414
    7. 'i' → logprob: -12.938302993774414
    8. '   ' → logprob: -13.313302993774414
    9. ' i' → logprob: -14.563302993774414
    10. 'in' → logprob: -14.563302993774414

Token 274: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.03485766798257828
    2. '(i' → logprob: -3.659857749938965
    3. '(' → logprob: -4.909857749938965
    4. '(h' → logprob: -7.159857749938965
    5. 'w' → logprob: -8.659857749938965
    6. '   ' → logprob: -10.534857749938965
    7. ')' → logprob: -10.534857749938965
    8. '(j' → logprob: -10.659857749938965
    9. 'i' → logprob: -10.784857749938965
    10. '=' → logprob: -10.909857749938965

Token 275: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.48239439725875854
    2. '):
' → logprob: -1.1073944568634033
    3. '+' → logprob: -2.9823944568634033
    4. '   ' → logprob: -7.357394218444824
    5. ' ):' → logprob: -8.732394218444824
    6. '+=' → logprob: -8.982394218444824
    7. '+i' → logprob: -9.107394218444824
    8. ')' → logprob: -9.232394218444824
    9. ')+' → logprob: -9.357394218444824
    10. '-' → logprob: -9.482394218444824

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045655105262994766
    2. ' if' → logprob: -3.4206550121307373
    3. '    ' → logprob: -4.920655250549316
    4. '   ' → logprob: -6.170655250549316
    5. '        ' → logprob: -7.295655250549316
    6. 'if' → logprob: -7.420655250549316
    7. ' ' → logprob: -8.295655250549316
    8. ' i' → logprob: -8.295655250549316
    9. '<|end|>' → logprob: -8.295655250549316
    10. '     ' → logprob: -9.545655250549316

Token 277: ' b' (ID: 287)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5154553651809692
    2. '           ' → logprob: -1.2654553651809692
    3. 'if' → logprob: -2.2654552459716797
    4. '       ' → logprob: -5.14045524597168
    5. ' x' → logprob: -5.39045524597168
    6. 'x' → logprob: -6.14045524597168
    7. '        ' → logprob: -7.01545524597168
    8. '   ' → logprob: -7.64045524597168
    9. ' y' → logprob: -7.64045524597168
    10. ' for' → logprob: -7.76545524597168

Token 278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3144378662109375
    2. ' =' → logprob: -2.4394378662109375
    3. '=[' → logprob: -2.9394378662109375
    4. '=i' → logprob: -3.1894378662109375
    5. '=[]' → logprob: -3.1894378662109375
    6. '[i' → logprob: -4.3144378662109375
    7. '=b' → logprob: -4.4394378662109375
    8. '=[[' → logprob: -4.6894378662109375
    9. '=a' → logprob: -6.0644378662109375
    10. '   ' → logprob: -6.1894378662109375

Token 279: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5193266272544861
    2. 'x' → logprob: -2.019326686859131
    3. 'y' → logprob: -2.269326686859131
    4. ' y' → logprob: -2.769326686859131
    5. ' a' → logprob: -2.894326686859131
    6. ' x' → logprob: -4.144326686859131
    7. '0' → logprob: -4.394326686859131
    8. 'i' → logprob: -5.144326686859131
    9. ' ' → logprob: -5.394326686859131
    10. '[' → logprob: -6.644326686859131

Token 280: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19340910017490387
    2. '<|end|>' → logprob: -2.4434092044830322
    3. '[' → logprob: -3.8184092044830322
    4. 'if' → logprob: -3.9434092044830322
    5. '=' → logprob: -4.693408966064453
    6. ' +' → logprob: -5.068408966064453
    7. ' if' → logprob: -5.193408966064453
    8. '+=' → logprob: -5.318408966064453
    9. '==' → logprob: -6.193408966064453
    10. '[j' → logprob: -6.193408966064453

Token 281: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011609814129769802
    2. '2' → logprob: -5.38661003112793
    3. 'y' → logprob: -6.13661003112793
    4. 'x' → logprob: -6.38661003112793
    5. '0' → logprob: -6.63661003112793
    6. ' ' → logprob: -6.76161003112793
    7. ' y' → logprob: -8.63661003112793
    8. 'j' → logprob: -8.63661003112793
    9. '3' → logprob: -9.51161003112793
    10. 'h' → logprob: -10.13661003112793

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.050201959908008575
    2. 'y' → logprob: -3.300201892852783
    3. 'x' → logprob: -5.425201892852783
    4. '0' → logprob: -5.800201892852783
    5. '(y' → logprob: -6.050201892852783
    6. '(' → logprob: -7.175201892852783
    7. '2' → logprob: -8.050202369689941
    8. '(x' → logprob: -8.300202369689941
    9. 'abs' → logprob: -8.300202369689941
    10. 'max' → logprob: -8.800202369689941

Token 283: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7670641541481018
    2. 'if' → logprob: -1.267064094543457
    3. ' if' → logprob: -1.767064094543457
    4. '<|end|>' → logprob: -3.267064094543457
    5. ';if' → logprob: -4.142064094543457
    6. ';' → logprob: -5.142064094543457
    7. '       ' → logprob: -5.392064094543457
    8. '           ' → logprob: -5.517064094543457
    9. '<=' → logprob: -5.642064094543457
    10. '+' → logprob: -5.642064094543457

Token 284: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7567050457000732
    2. '       ' → logprob: -1.5067050457000732
    3. ' if' → logprob: -2.1317050457000732
    4. '<|end|>' → logprob: -2.1317050457000732
    5. 'if' → logprob: -3.6317050457000732
    6. ' ' → logprob: -4.631705284118652
    7. '        ' → logprob: -4.881705284118652
    8. ' 
' → logprob: -4.881705284118652
    9. '           ' → logprob: -5.506705284118652
    10. ';if' → logprob: -5.631705284118652

Token 285: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8501673340797424
    2. 'while' (adapté à ' while') → logprob: -0.9751673340797424
    3. ' if' → logprob: -2.4751672744750977
    4. '
' → logprob: -3.2251672744750977
    5. '       ' → logprob: -3.3501672744750977
    6. ' while' → logprob: -3.9751672744750977
    7. '           ' → logprob: -5.600167274475098
    8. '<|end|>' → logprob: -6.225167274475098
    9. '        ' → logprob: -6.350167274475098
    10. ';if' → logprob: -6.475167274475098

Token 286: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07894673943519592
    2. ' b' → logprob: -2.578946828842163
    3. 'a' → logprob: -11.453947067260742
    4. 'x' → logprob: -11.578947067260742
    5. '   ' → logprob: -11.828947067260742
    6. 'j' → logprob: -11.953947067260742
    7. ' ' → logprob: -12.078947067260742
    8. 'y' → logprob: -12.203947067260742
    9. ' y' → logprob: -12.828947067260742
    10. '(b' → logprob: -12.828947067260742

Token 287: '<h' (ID: 23843)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.137894406914711
    2. '<h' → logprob: -2.51289439201355
    3. ' <' → logprob: -3.26289439201355
    4. '<w' → logprob: -4.887894630432129
    5. '<=' → logprob: -7.012894630432129
    6. '<b' → logprob: -7.762894630432129
    7. '<len' → logprob: -8.387894630432129
    8. '<n' → logprob: -8.637894630432129
    9. '<i' → logprob: -9.637894630432129
    10. '<th' → logprob: -10.387894630432129

Token 288: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.31392723321914673
    2. ' and' → logprob: -1.313927173614502
    3. '[' → logprob: -8.31392765045166
    4. '<' → logprob: -8.56392765045166
    5. ' <' → logprob: -9.06392765045166
    6. '<=' → logprob: -10.31392765045166
    7. '           ' → logprob: -10.68892765045166
    8. '        ' → logprob: -11.56392765045166
    9. ' ' → logprob: -12.06392765045166
    10. '       ' → logprob: -12.18892765045166

Token 289: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07802924513816833
    2. 'x' → logprob: -3.203029155731201
    3. ' a' → logprob: -3.828029155731201
    4. 'y' → logprob: -4.703029155731201
    5. ' x' → logprob: -6.328029155731201
    6. ' y' → logprob: -6.453029155731201
    7. 'all' → logprob: -9.70302963256836
    8. ' all' → logprob: -9.82802963256836
    9. '   ' → logprob: -9.95302963256836
    10. '(a' → logprob: -10.32802963256836

Token 290: '[b' (ID: 40800)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.020734570920467377
    2. '[b' → logprob: -3.8957345485687256
    3. 'b' → logprob: -9.395734786987305
    4. 'i' → logprob: -9.395734786987305
    5. '[j' → logprob: -10.895734786987305
    6. '[' → logprob: -13.020734786987305
    7. '```' → logprob: -14.020734786987305
    8. ' [' → logprob: -14.145734786987305
    9. '][' → logprob: -14.395734786987305
    10. '[a' → logprob: -14.395734786987305

Token 291: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0027618412859737873
    2. '[j' → logprob: -6.7527618408203125
    3. ']==' → logprob: -7.1277618408203125
    4. ']' → logprob: -7.5027618408203125
    5. '[b' → logprob: -9.627761840820312
    6. '[i' → logprob: -9.877761840820312
    7. ' ][' → logprob: -9.877761840820312
    8. '[' → logprob: -10.627761840820312
    9. '==' → logprob: -10.752761840820312
    10. 'b' → logprob: -12.752761840820312

Token 292: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.225939872208983e-05
    2. '][' → logprob: -11.250032424926758
    3. ' j' → logprob: -11.875032424926758
    4. 'i' → logprob: -11.875032424926758
    5. '[j' → logprob: -12.625032424926758
    6. ']' → logprob: -13.625032424926758
    7. '   ' → logprob: -15.500032424926758
    8. '```' → logprob: -15.500032424926758
    9. 'v' → logprob: -16.000032424926758
    10. '	j' → logprob: -16.250032424926758

Token 293: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.0024963486939668655
    2. ']' → logprob: -6.002496242523193
    3. '][' → logprob: -11.377496719360352
    4. ' ]' → logprob: -11.752496719360352
    5. '']==' → logprob: -14.752496719360352
    6. ']!=' → logprob: -15.502496719360352
    7. '==' → logprob: -15.627496719360352
    8. '[' → logprob: -15.752496719360352
    9. ']>=' → logprob: -16.25249671936035
    10. ']=="' → logprob: -16.50249671936035

Token 294: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004897649050690234
    2. ' a' → logprob: -7.625489711761475
    3. '0' → logprob: -14.000490188598633
    4. '	a' → logprob: -15.375490188598633
    5. '1' → logprob: -15.500490188598633
    6. ' ' → logprob: -15.750490188598633
    7. '   ' → logprob: -15.875490188598633
    8. ''a' → logprob: -16.625490188598633
    9. '#a' → logprob: -17.750490188598633
    10. '
' → logprob: -18.250490188598633

Token 295: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.42041337490081787
    2. 'b' → logprob: -1.6704133749008179
    3. '[i' → logprob: -2.0454134941101074
    4. '[b' → logprob: -3.6704134941101074
    5. 'j' → logprob: -9.54541301727295
    6. '[j' → logprob: -9.79541301727295
    7. '   ' → logprob: -10.42041301727295
    8. ' i' → logprob: -10.42041301727295
    9. 'a' → logprob: -10.92041301727295
    10. '{i' → logprob: -11.42041301727295

Token 296: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0037005580961704254
    2. '[j' → logprob: -5.6287007331848145
    3. ' ][' → logprob: -10.003700256347656
    4. ']' → logprob: -10.128700256347656
    5. 'j' → logprob: -12.503700256347656
    6. '[' → logprob: -12.628700256347656
    7. '[i' → logprob: -13.003700256347656
    8. '   ' → logprob: -13.753700256347656
    9. '```' → logprob: -14.003700256347656
    10. ''][' → logprob: -14.503700256347656

Token 297: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.491498531133402e-06
    2. ' j' → logprob: -11.625009536743164
    3. '```' → logprob: -15.500009536743164
    4. '   ' → logprob: -16.250009536743164
    5. ' ' → logprob: -16.250009536743164
    6. '[j' → logprob: -16.500009536743164
    7. 'i' → logprob: -16.750009536743164
    8. '	j' → logprob: -17.500009536743164
    9. '_j' → logprob: -18.125009536743164
    10. ']' → logprob: -18.375009536743164

Token 298: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5138895511627197
    2. ']:' → logprob: -1.0138895511627197
    3. ']' → logprob: -3.2638895511627197
    4. ' ]' → logprob: -8.38888931274414
    5. ']==' → logprob: -8.76388931274414
    6. ']:

' → logprob: -8.88888931274414
    7. ']:
' → logprob: -8.88888931274414
    8. '       ' → logprob: -10.38888931274414
    9. '   ' → logprob: -10.51388931274414
    10. ']+' → logprob: -11.38888931274414

Token 299: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037744905799627304
    2. ' and' → logprob: -3.4127449989318848
    3. ' b' → logprob: -6.537744998931885
    4. '   ' → logprob: -7.287744998931885
    5. 'b' → logprob: -7.912744998931885
    6. '               ' → logprob: -7.912744998931885
    7. '       ' → logprob: -8.287744522094727
    8. '        ' → logprob: -8.287744522094727
    9. ' ' → logprob: -8.912744522094727
    10. ':' → logprob: -8.912744522094727

Token 300: ' x' (ID: 1215)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.31345054507255554
    2. 'b' → logprob: -1.313450574874878
    3. '               ' → logprob: -9.188450813293457
    4. '           ' → logprob: -9.438450813293457
    5. '            ' → logprob: -12.438450813293457
    6. '	b' → logprob: -13.938450813293457
    7. ' ' → logprob: -14.813450813293457
    8. '   ' → logprob: -15.063450813293457
    9. '                   ' → logprob: -15.063450813293457
    10. '
' → logprob: -15.188450813293457

Token 301: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.018518980592489243
    2. '[b' → logprob: -4.018518924713135
    3. '[x' → logprob: -8.768519401550293
    4. '[v' → logprob: -9.768519401550293
    5. '[' → logprob: -10.018519401550293
    6. '[j' → logprob: -10.018519401550293
    7. 'b' → logprob: -10.518519401550293
    8. '[a' → logprob: -11.143519401550293
    9. 'i' → logprob: -11.643519401550293
    10. ' [' → logprob: -12.518519401550293

Token 302: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002908910100813955
    2. '[j' → logprob: -9.000290870666504
    3. '[i' → logprob: -9.250290870666504
    4. ']' → logprob: -10.625290870666504
    5. ' ][' → logprob: -10.625290870666504
    6. '           ' → logprob: -12.125290870666504
    7. '[' → logprob: -12.250290870666504
    8. '       ' → logprob: -12.375290870666504
    9. '   ' → logprob: -13.375290870666504
    10. '[b' → logprob: -13.875290870666504

Token 303: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.009048349224030972
    2. 'b' → logprob: -4.7590484619140625
    3. ' j' → logprob: -8.009048461914062
    4. 'i' → logprob: -10.259048461914062
    5. '][' → logprob: -10.509048461914062
    6. ' ' → logprob: -11.884048461914062
    7. 'x' → logprob: -12.134048461914062
    8. '   ' → logprob: -12.134048461914062
    9. ' b' → logprob: -12.509048461914062
    10. '    ' → logprob: -12.634048461914062

Token 304: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00029637437546625733
    2. ']' → logprob: -8.875296592712402
    3. '[' → logprob: -9.750296592712402
    4. ' ][' → logprob: -10.375296592712402
    5. '           ' → logprob: -11.250296592712402
    6. '[b' → logprob: -11.375296592712402
    7. '       ' → logprob: -11.625296592712402
    8. '[i' → logprob: -12.125296592712402
    9. '   ' → logprob: -12.500296592712402
    10. ']][' → logprob: -12.625296592712402

Token 305: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0014336821623146534
    2. 'i' → logprob: -6.751433849334717
    3. ' b' → logprob: -8.501433372497559
    4. 'x' → logprob: -10.501433372497559
    5. 'a' → logprob: -11.501433372497559
    6. 'j' → logprob: -11.626433372497559
    7. '   ' → logprob: -12.251433372497559
    8. ' ' → logprob: -12.751433372497559
    9. ' i' → logprob: -13.376433372497559
    10. '  ' → logprob: -13.876433372497559

Token 306: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1668570637702942
    2. ']=' → logprob: -1.9168570041656494
    3. ']==' → logprob: -5.7918572425842285
    4. ' ]' → logprob: -5.9168572425842285
    5. ']+=' → logprob: -7.4168572425842285
    6. ']!=' → logprob: -9.79185676574707
    7. '=' → logprob: -10.16685676574707
    8. '][' → logprob: -10.29185676574707
    9. '[' → logprob: -10.54185676574707
    10. ']]' → logprob: -10.66685676574707

Token 307: 'min' (ID: 1493)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.034145478159189224
    2. 'j' → logprob: -3.4091455936431885
    3. 'b' → logprob: -8.03414535522461
    4. ' x' → logprob: -9.28414535522461
    5. 'i' → logprob: -10.40914535522461
    6. '	x' → logprob: -11.03414535522461
    7. '   ' → logprob: -11.65914535522461
    8. ' j' → logprob: -12.28414535522461
    9. 'a' → logprob: -12.40914535522461
    10. ' ' → logprob: -12.72164535522461

Token 308: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0018077453132718801
    2. '(' → logprob: -7.126807689666748
    3. 'x' → logprob: -7.126807689666748
    4. '(b' → logprob: -9.001808166503906
    5. '(
' → logprob: -10.376808166503906
    6. '(i' → logprob: -11.126808166503906
    7. '(y' → logprob: -11.376808166503906
    8. '(j' → logprob: -11.501808166503906
    9. 'b' → logprob: -12.376808166503906
    10. ' x' → logprob: -13.751808166503906

Token 309: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.632542913896032e-05
    2. ' [' → logprob: -11.375046730041504
    3. ')[' → logprob: -11.500046730041504
    4. '[b' → logprob: -12.250046730041504
    5. '[j' → logprob: -12.500046730041504
    6. '][' → logprob: -12.500046730041504
    7. 'i' → logprob: -13.000046730041504
    8. '```' → logprob: -13.375046730041504
    9. '[x' → logprob: -13.500046730041504
    10. '[I' → logprob: -13.625046730041504

Token 310: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.009968327358365059
    2. '[i' → logprob: -4.634968280792236
    3. ' ][' → logprob: -9.384968757629395
    4. ']' → logprob: -9.634968757629395
    5. 'i' → logprob: -11.009968757629395
    6. '[' → logprob: -11.384968757629395
    7. '   ' → logprob: -11.884968757629395
    8. ')[' → logprob: -12.384968757629395
    9. ']][' → logprob: -13.009968757629395
    10. '           ' → logprob: -13.009968757629395

Token 311: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00032497590291313827
    2. ' j' → logprob: -8.250325202941895
    3. 'b' → logprob: -10.875325202941895
    4. 'x' → logprob: -11.625325202941895
    5. 'i' → logprob: -11.750325202941895
    6. '   ' → logprob: -12.125325202941895
    7. '[j' → logprob: -12.125325202941895
    8. ' ' → logprob: -12.500325202941895
    9. '```' → logprob: -12.750325202941895
    10. '           ' → logprob: -13.625325202941895

Token 312: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007647183374501765
    2. '[j' → logprob: -8.375764846801758
    3. '[b' → logprob: -8.375764846801758
    4. ']' → logprob: -9.125764846801758
    5. '[i' → logprob: -9.625764846801758
    6. '[' → logprob: -9.875764846801758
    7. ' ][' → logprob: -11.125764846801758
    8. 'b' → logprob: -11.250764846801758
    9. '   ' → logprob: -11.375764846801758
    10. '       ' → logprob: -11.750764846801758

Token 313: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5883373618125916
    2. 'j' → logprob: -0.8383373618125916
    3. 'i' → logprob: -4.588337421417236
    4. ' b' → logprob: -7.588337421417236
    5. ' j' → logprob: -7.713337421417236
    6. '   ' → logprob: -7.713337421417236
    7. ' ' → logprob: -8.213336944580078
    8. '  ' → logprob: -9.338336944580078
    9. '[j' → logprob: -9.463336944580078
    10. 'a' → logprob: -9.588336944580078

Token 314: '-' (ID: 12)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.22569461166858673
    2. '[j' → logprob: -2.9756946563720703
    3. '],' → logprob: -3.2256946563720703
    4. '[x' → logprob: -3.4756946563720703
    5. ',x' → logprob: -3.6006946563720703
    6. ',j' → logprob: -4.10069465637207
    7. ',' → logprob: -4.35069465637207
    8. '],[' → logprob: -4.47569465637207
    9. ' ,' → logprob: -5.72569465637207
    10. ' ][' → logprob: -5.85069465637207

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6550729419104755e-05
    2. '+' → logprob: -10.500036239624023
    3. ' ' → logprob: -12.125036239624023
    4. ']+' → logprob: -13.750036239624023
    5. ']' → logprob: -13.875036239624023
    6. '   ' → logprob: -14.000036239624023
    7. '```' → logprob: -15.250036239624023
    8. '])' → logprob: -16.125036239624023
    9. '
' → logprob: -16.250036239624023
    10. '-' → logprob: -16.750036239624023

Token 316: '],' (ID: 2155)
  Prédit: ',j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.7314752340316772
    2. '][' → logprob: -0.8564752340316772
    3. '[j' → logprob: -2.856475353240967
    4. ',' → logprob: -4.231475353240967
    5. ',b' → logprob: -4.356475353240967
    6. '],' → logprob: -5.606475353240967
    7. '[b' → logprob: -6.606475353240967
    8. '])' → logprob: -6.856475353240967
    9. ' ,' → logprob: -7.356475353240967
    10. ')[' → logprob: -7.606475353240967

Token 317: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003140401327982545
    2. 'y' → logprob: -6.128140449523926
    3. 'j' → logprob: -7.128140449523926
    4. ' x' → logprob: -9.003140449523926
    5. 'b' → logprob: -11.378140449523926
    6. '   ' → logprob: -11.753140449523926
    7. ' y' → logprob: -12.878140449523926
    8. ' ' → logprob: -13.253140449523926
    9. '  ' → logprob: -13.253140449523926
    10. '    ' → logprob: -14.253140449523926

Token 318: '[b' (ID: 40800)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005281301564536989
    2. 'i' → logprob: -7.625528335571289
    3. '][' → logprob: -11.750528335571289
    4. '[j' → logprob: -11.875528335571289
    5. '```' → logprob: -11.875528335571289
    6. '[' → logprob: -12.000528335571289
    7. ' [' → logprob: -12.125528335571289
    8. '[b' → logprob: -12.750528335571289
    9. ' i' → logprob: -13.375528335571289
    10. 'b' → logprob: -14.625528335571289

Token 319: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006323783891275525
    2. '[i' → logprob: -8.000632286071777
    3. '[j' → logprob: -8.250632286071777
    4. ' ][' → logprob: -10.625632286071777
    5. ']' → logprob: -11.750632286071777
    6. 'j' → logprob: -13.625632286071777
    7. '[' → logprob: -14.875632286071777
    8. '```' → logprob: -15.000632286071777
    9. ' [' → logprob: -15.125632286071777
    10. '   ' → logprob: -15.125632286071777

Token 320: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00013095269969198853
    2. ' j' → logprob: -9.625130653381348
    3. '[j' → logprob: -10.000130653381348
    4. 'i' → logprob: -11.250130653381348
    5. '][' → logprob: -12.250130653381348
    6. '[' → logprob: -14.500130653381348
    7. '```' → logprob: -15.000130653381348
    8. '	j' → logprob: -15.500130653381348
    9. '   ' → logprob: -16.125131607055664
    10. ' ' → logprob: -16.250131607055664

Token 321: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.396757089532912e-05
    2. ']' → logprob: -10.2500638961792
    3. '[j' → logprob: -10.7500638961792
    4. ' ][' → logprob: -12.7500638961792
    5. '[' → logprob: -13.8750638961792
    6. '   ' → logprob: -14.0000638961792
    7. '[b' → logprob: -14.6250638961792
    8. '])' → logprob: -15.0000638961792
    9. ')[' → logprob: -15.1250638961792
    10. 'j' → logprob: -15.2500638961792

Token 322: 'b' (ID: 65)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5205717086791992
    2. 'i' → logprob: -1.1455717086791992
    3. 'b' → logprob: -2.770571708679199
    4. '[i' → logprob: -4.520571708679199
    5. '[j' → logprob: -5.020571708679199
    6. '[b' → logprob: -5.395571708679199
    7. '][' → logprob: -6.145571708679199
    8. '[' → logprob: -8.5205717086792
    9. ']' → logprob: -8.6455717086792
    10. '```' → logprob: -8.8955717086792

Token 323: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.008841583505272865
    2. ']' → logprob: -5.383841514587402
    3. '][' → logprob: -5.758841514587402
    4. '[b' → logprob: -7.633841514587402
    5. '])
' → logprob: -8.633841514587402
    6. 'b' → logprob: -9.008841514587402
    7. '[j' → logprob: -9.383841514587402
    8. ']+' → logprob: -10.008841514587402
    9. ']])' → logprob: -11.133841514587402
    10. '   ' → logprob: -11.383841514587402

Token 324: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002146226615877822
    2. ' b' → logprob: -9.500214576721191
    3. 'b' → logprob: -9.625214576721191
    4. '               ' → logprob: -9.875214576721191
    5. '       ' → logprob: -12.125214576721191
    6. '          ' → logprob: -12.500214576721191
    7. '   ' → logprob: -12.625214576721191
    8. '	       ' → logprob: -13.000214576721191
    9. '                   ' → logprob: -13.125214576721191
    10. '            ' → logprob: -13.500214576721191

Token 325: ' b' (ID: 287)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10315120965242386
    2. 'b' (adapté à ' b') → logprob: -2.353151321411133
    3. ' b' → logprob: -5.853151321411133
    4. '   ' → logprob: -10.353151321411133
    5. '               ' → logprob: -11.228151321411133
    6. '          ' → logprob: -11.978151321411133
    7. '       ' → logprob: -12.228151321411133
    8. '                   ' → logprob: -12.853151321411133
    9. '	b' → logprob: -12.978151321411133
    10. '```' → logprob: -13.478151321411133

Token 326: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0007231564959511161
    2. ' +=' → logprob: -7.250723361968994
    3. '+' → logprob: -11.500722885131836
    4. '=' → logprob: -13.000722885131836
    5. ']+=' → logprob: -14.750722885131836
    6. '+='' → logprob: -15.750722885131836
    7. '+=(' → logprob: -16.125722885131836
    8. '+="' → logprob: -16.250722885131836
    9. '++' → logprob: -17.250722885131836
    10. '```' → logprob: -17.750722885131836

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.625009536743164
    4. '```' → logprob: -18.000009536743164
    5. '  ' → logprob: -19.062509536743164
    6. '
' → logprob: -19.500009536743164
    7. '2' → logprob: -19.562509536743164
    8. '+' → logprob: -19.625009536743164
    9. '           ' → logprob: -19.812509536743164
    10. '``' → logprob: -20.500009536743164

Token 328: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007477664388716221
    2. 'i' → logprob: -5.882477760314941
    3. '<|end|>' → logprob: -6.507477760314941
    4. '	i' → logprob: -6.632477760314941
    5. ' i' → logprob: -7.257477760314941
    6. '       ' → logprob: -7.382477760314941
    7. '[i' → logprob: -8.257477760314941
    8. '```' → logprob: -9.882477760314941
    9. ',i' → logprob: -10.632477760314941
    10. '#' → logprob: -10.632477760314941

Token 330: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010109134018421173
    2. 'i' (adapté à ' i') → logprob: -4.885108947753906
    3. ' i' → logprob: -6.010108947753906
    4. ',i' → logprob: -10.635108947753906
    5. '	i' → logprob: -11.510108947753906
    6. '[i' → logprob: -11.760108947753906
    7. '_i' → logprob: -14.510108947753906
    8. '       ' → logprob: -14.510108947753906
    9. ' ' → logprob: -14.760108947753906
    10. 'b' → logprob: -14.885108947753906

Token 331: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0007344625773839653
    2. ' +=' → logprob: -7.625734329223633
    3. '+' → logprob: -8.500734329223633
    4. '=' → logprob: -10.125734329223633
    5. ']+=' → logprob: -13.500734329223633
    6. '+='' → logprob: -14.125734329223633
    7. '+="' → logprob: -14.500734329223633
    8. '+=(' → logprob: -15.500734329223633
    9. '++' → logprob: -16.375734329223633
    10. ')' → logprob: -16.750734329223633

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.612634362885728e-05
    2. ' ' → logprob: -9.500076293945312
    3. '   ' → logprob: -14.562576293945312
    4. '0' → logprob: -15.125076293945312
    5. '  ' → logprob: -16.125076293945312
    6. '```' → logprob: -16.312576293945312
    7. '2' → logprob: -16.625076293945312
    8. '
' → logprob: -17.000076293945312
    9. '-' → logprob: -17.687576293945312
    10. 'b' → logprob: -18.250076293945312

Token 333: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.27155569195747375
    2. ' v' → logprob: -1.7715556621551514
    3. 'i' → logprob: -3.3965556621551514
    4. 'v' → logprob: -5.0215559005737305
    5. ' j' → logprob: -5.0215559005737305
    6. ' t' → logprob: -5.2715559005737305
    7. ' l' → logprob: -5.5215559005737305
    8. ' k' → logprob: -5.6465559005737305
    9. ' b' → logprob: -5.6465559005737305
    10. ' _' → logprob: -7.0215559005737305

Token 336: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038183439522981644
    2. 'in' → logprob: -3.2881834506988525
    3. ' ' → logprob: -9.038183212280273
    4. '  ' → logprob: -12.538183212280273
    5. '   ' → logprob: -12.663183212280273
    6. '[' → logprob: -12.913183212280273
    7. 'range' → logprob: -13.413183212280273
    8. '	in' → logprob: -13.413183212280273
    9. ',' → logprob: -13.663183212280273
    10. '1' → logprob: -14.163183212280273

Token 337: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011078352108597755
    2. ' range' → logprob: -4.511078357696533
    3. 'x' → logprob: -10.886077880859375
    4. '(range' → logprob: -12.011077880859375
    5. 'w' → logprob: -13.761077880859375
    6. '[' → logprob: -14.136077880859375
    7. ' ' → logprob: -14.386077880859375
    8. 'r' → logprob: -14.511077880859375
    9. 'h' → logprob: -14.636077880859375
    10. ' x' → logprob: -14.761077880859375

Token 338: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.3647615313529968
    2. '(w' → logprob: -1.6147615909576416
    3. '(' → logprob: -2.2397615909576416
    4. ' (' → logprob: -9.864761352539062
    5. '((' → logprob: -10.489761352539062
    6. '(len' → logprob: -10.614761352539062
    7. ' ' → logprob: -10.864761352539062
    8. 'h' → logprob: -10.864761352539062
    9. '1' → logprob: -11.364761352539062
    10. '(i' → logprob: -11.489761352539062

Token 339: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4087209105491638
    2. '):
' → logprob: -1.6587209701538086
    3. '-' → logprob: -2.1587209701538086
    4. '+' → logprob: -3.5337209701538086
    5. '   ' → logprob: -9.033720970153809
    6. ')' → logprob: -9.658720970153809
    7. ' -' → logprob: -9.783720970153809
    8. ',' → logprob: -10.033720970153809
    9. ' ):' → logprob: -10.658720970153809
    10. '//' → logprob: -10.783720970153809

Token 340: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1722465604543686
    2. '   ' → logprob: -2.4222464561462402
    3. 'for' → logprob: -2.6722464561462402
    4. ' range' → logprob: -8.172246932983398
    5. ' ' → logprob: -9.422246932983398
    6. '	for' → logprob: -11.047246932983398
    7. 'range' → logprob: -11.672246932983398
    8. '```' → logprob: -11.922246932983398
    9. '  ' → logprob: -12.047246932983398
    10. '       ' → logprob: -13.172246932983398

Token 341: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39600038528442383
    2. 'for' (adapté à ' for') → logprob: -1.1460003852844238
    3. '   ' → logprob: -4.771000385284424
    4. ' j' → logprob: -8.145999908447266
    5. ' range' → logprob: -9.020999908447266
    6. 'j' → logprob: -9.145999908447266
    7. ' ' → logprob: -9.895999908447266
    8. 'range' → logprob: -11.645999908447266
    9. '	for' → logprob: -12.270999908447266
    10. 'v' → logprob: -12.270999908447266

Token 342: ' l' (ID: 305)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.10747683793306351
    2. ' w' → logprob: -2.3574769496917725
    3. 'j' → logprob: -5.857476711273193
    4. 'k' → logprob: -6.357476711273193
    5. 'l' → logprob: -7.732476711273193
    6. ' j' → logprob: -7.732476711273193
    7. 'h' → logprob: -8.107477188110352
    8. 'v' → logprob: -8.107477188110352
    9. '(w' → logprob: -8.482477188110352
    10. ' k' → logprob: -8.607477188110352

Token 343: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005622061900794506
    2. 'in' → logprob: -5.255621910095215
    3. '   ' → logprob: -9.380621910095215
    4. ' ' → logprob: -9.505621910095215
    5. 'range' → logprob: -9.505621910095215
    6. ' (' → logprob: -10.255621910095215
    7. '(k' → logprob: -10.505621910095215
    8. '(' → logprob: -10.755621910095215
    9. ' range' → logprob: -11.005621910095215
    10. '+' → logprob: -11.630621910095215

Token 344: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08452818542718887
    2. ' range' → logprob: -3.2095282077789307
    3. 'w' → logprob: -3.4595282077789307
    4. '(w' → logprob: -4.959527969360352
    5. 'k' → logprob: -6.834527969360352
    6. 'h' → logprob: -8.209527969360352
    7. '(k' → logprob: -8.334527969360352
    8. ' w' → logprob: -8.834527969360352
    9. '   ' → logprob: -8.834527969360352
    10. '(range' → logprob: -8.959527969360352

Token 345: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.004484712146222591
    2. '(k' → logprob: -5.6294846534729
    3. '(h' → logprob: -7.3794846534729
    4. '(' → logprob: -9.254485130310059
    5. '(l' → logprob: -9.504485130310059
    6. 'w' → logprob: -9.754485130310059
    7. 'range' → logprob: -11.379485130310059
    8. 'k' → logprob: -12.629485130310059
    9. '1' → logprob: -12.629485130310059
    10. '   ' → logprob: -13.004485130310059

Token 346: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10680115222930908
    2. '):' → logprob: -2.4818010330200195
    3. '+' → logprob: -4.2318010330200195
    4. '-' → logprob: -6.1068010330200195
    5. ',k' → logprob: -7.8568010330200195
    6. '   ' → logprob: -8.23180103302002
    7. ':' → logprob: -9.98180103302002
    8. ',' → logprob: -9.98180103302002
    9. '):
' → logprob: -10.10680103302002
    10. '       ' → logprob: -10.10680103302002

Token 347: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053284596651792526
    2. ' for' → logprob: -3.8032846450805664
    3. '       ' → logprob: -4.303284645080566
    4. ' if' → logprob: -4.928284645080566
    5. ' m' → logprob: -5.053284645080566
    6. 'm' → logprob: -7.803284645080566
    7. ' s' → logprob: -7.928284645080566
    8. ' pass' → logprob: -7.928284645080566
    9. ' print' → logprob: -8.303284645080566
    10. ' r' → logprob: -8.803284645080566

Token 348: ' m' (ID: 284)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.879237174987793
    2. 'if' → logprob: -1.254237174987793
    3. '   ' → logprob: -2.129237174987793
    4. 'm' (adapté à ' m') → logprob: -2.129237174987793
    5. ' for' → logprob: -3.629237174987793
    6. ' if' → logprob: -4.129237174987793
    7. 'r' → logprob: -5.379237174987793
    8. 'pass' → logprob: -6.254237174987793
    9. '       ' → logprob: -6.379237174987793
    10. ' pass' → logprob: -6.379237174987793

Token 349: '=l' (ID: 103670)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026212280616164207
    2. ' =' → logprob: -5.026212215423584
    3. '=j' → logprob: -5.151212215423584
    4. '=k' → logprob: -5.651212215423584
    5. '=w' → logprob: -5.776212215423584
    6. '=h' → logprob: -6.026212215423584
    7. '=l' → logprob: -6.526212215423584
    8. '=i' → logprob: -6.776212215423584
    9. '=max' → logprob: -7.401212215423584
    10. '=m' → logprob: -8.276212692260742

Token 350: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10868152230978012
    2. '+=' → logprob: -2.6086814403533936
    3. 'for' → logprob: -5.108681678771973
    4. '=' → logprob: -5.358681678771973
    5. '=w' → logprob: -5.358681678771973
    6. '+w' → logprob: -5.483681678771973
    7. 'while' → logprob: -5.983681678771973
    8. '<w' → logprob: -6.233681678771973
    9. '+h' → logprob: -6.358681678771973
    10. '=h' → logprob: -7.608681678771973

Token 351: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.300083648762666e-05
    2. '2' → logprob: -10.125053405761719
    3. 'x' → logprob: -12.500053405761719
    4. ' ' → logprob: -12.750053405761719
    5. 'h' → logprob: -13.125053405761719
    6. 'w' → logprob: -13.625053405761719
    7. 'min' → logprob: -14.375053405761719
    8. '0' → logprob: -14.500053405761719
    9. 'k' → logprob: -15.250053405761719
    10. '3' → logprob: -15.250053405761719

Token 352: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8391257524490356
    2. '<w' → logprob: -1.4641257524490356
    3. '       ' → logprob: -2.214125633239746
    4. '
' → logprob: -2.214125633239746
    5. '<=' → logprob: -3.339125633239746
    6. '<' → logprob: -3.714125633239746
    7. '<h' → logprob: -3.839125633239746
    8. '<m' → logprob: -4.089125633239746
    9. '<n' → logprob: -5.339125633239746
    10. ' while' → logprob: -5.714125633239746

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5888532996177673
    2. 'while' → logprob: -1.588853359222412
    3. '<w' → logprob: -2.088853359222412
    4. '<=' → logprob: -3.088853359222412
    5. '<h' → logprob: -4.463853359222412
    6. '   ' → logprob: -4.713853359222412
    7. '<m' → logprob: -4.713853359222412
    8. ' while' → logprob: -4.713853359222412
    9. '
' → logprob: -4.963853359222412
    10. '<|end|>' → logprob: -5.463853359222412

Token 354: ' while' (ID: 2049)
  Prédit: '<w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<w' → logprob: -1.0401924848556519
    2. 'while' (adapté à ' while') → logprob: -1.1651924848556519
    3. '<m' → logprob: -1.5401924848556519
    4. '<' → logprob: -2.5401926040649414
    5. '<=' → logprob: -3.7901926040649414
    6. '<h' → logprob: -5.040192604064941
    7. 'm' → logprob: -5.165192604064941
    8. ' while' → logprob: -6.040192604064941
    9. '
' → logprob: -7.040192604064941
    10. 'w' → logprob: -7.415192604064941

Token 355: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.084206375409849e-05
    2. ' m' → logprob: -10.125041007995605
    3. '   ' → logprob: -15.125041007995605
    4. 'x' → logprob: -15.750041007995605
    5. 'w' → logprob: -16.25004005432129
    6. 'k' → logprob: -17.12504005432129
    7. 'l' → logprob: -17.37504005432129
    8. 'y' → logprob: -17.50004005432129
    9. '	m' → logprob: -17.75004005432129
    10. '    ' → logprob: -17.87504005432129

Token 356: '<w' (ID: 45719)
  Prédit: '<w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<w' → logprob: -0.0004967942950315773
    2. '<=' → logprob: -7.875496864318848
    3. '<' → logprob: -9.250496864318848
    4. ' <' → logprob: -11.375496864318848
    5. '<h' → logprob: -12.375496864318848
    6. '<(' → logprob: -12.750496864318848
    7. '<len' → logprob: -13.750496864318848
    8. 'w' → logprob: -15.625496864318848
    9. '<n' → logprob: -16.00049591064453
    10. '<size' → logprob: -16.37549591064453

Token 357: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.014163863845169544
    2. ' and' → logprob: -4.264163970947266
    3. '           ' → logprob: -15.514163970947266
    4. '   ' → logprob: -16.264163970947266
    5. '       ' → logprob: -17.014163970947266
    6. '        ' → logprob: -17.139163970947266
    7. '```' → logprob: -17.264163970947266
    8. ':
' → logprob: -17.389163970947266
    9. ' ' → logprob: -18.264163970947266
    10. '          ' → logprob: -18.389163970947266

Token 358: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004558646120131016
    2. ' a' → logprob: -6.004558563232422
    3. 'x' → logprob: -6.254558563232422
    4. 'y' → logprob: -9.379558563232422
    5. '   ' → logprob: -10.004558563232422
    6. ' x' → logprob: -11.504558563232422
    7. '(a' → logprob: -12.129558563232422
    8. ' y' → logprob: -12.629558563232422
    9. 'all' → logprob: -13.004558563232422
    10. ' ' → logprob: -13.004558563232422

Token 359: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0001549089647596702
    2. 'k' → logprob: -9.125154495239258
    3. '[l' → logprob: -11.375154495239258
    4. '[i' → logprob: -11.375154495239258
    5. '[m' → logprob: -12.375154495239258
    6. '][' → logprob: -12.500154495239258
    7. ' [' → logprob: -12.875154495239258
    8. '   ' → logprob: -13.250154495239258
    9. '
' → logprob: -13.875154495239258
    10. '```' → logprob: -13.875154495239258

Token 360: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0061020320281386375
    2. '[k' → logprob: -5.131102085113525
    3. '[m' → logprob: -9.381101608276367
    4. 'k' → logprob: -10.381101608276367
    5. ' ][' → logprob: -11.006101608276367
    6. '[' → logprob: -11.381101608276367
    7. '[l' → logprob: -12.006101608276367
    8. ']' → logprob: -12.131101608276367
    9. 'm' → logprob: -12.506101608276367
    10. '   ' → logprob: -13.006101608276367

Token 361: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004370778799057007
    2. 'l' → logprob: -5.50437068939209
    3. 'k' → logprob: -8.37937068939209
    4. '[m' → logprob: -10.37937068939209
    5. '   ' → logprob: -11.62937068939209
    6. ' m' → logprob: -11.75437068939209
    7. '][' → logprob: -12.37937068939209
    8. '[l' → logprob: -13.00437068939209
    9. '       ' → logprob: -13.37937068939209
    10. '           ' → logprob: -13.62937068939209

Token 362: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.0008918096427805722
    2. ']' → logprob: -7.75089168548584
    3. '][' → logprob: -7.75089168548584
    4. ' ]' → logprob: -11.62589168548584
    5. '[k' → logprob: -12.62589168548584
    6. '==' → logprob: -12.62589168548584
    7. '[' → logprob: -13.00089168548584
    8. '']==' → logprob: -13.00089168548584
    9. ']!=' → logprob: -13.00089168548584
    10. '#' → logprob: -13.62589168548584

Token 363: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00014191943046171218
    2. ' a' → logprob: -8.875142097473145
    3. '   ' → logprob: -13.625142097473145
    4. '	a' → logprob: -15.500142097473145
    5. '#a' → logprob: -15.750142097473145
    6. ' ' → logprob: -16.125141143798828
    7. '       ' → logprob: -16.625141143798828
    8. '
' → logprob: -16.750141143798828
    9. '```' → logprob: -17.000141143798828
    10. '           ' → logprob: -17.250141143798828

Token 364: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.01108625903725624
    2. 'k' → logprob: -4.511086463928223
    3. '[' → logprob: -10.761086463928223
    4. '   ' → logprob: -12.636086463928223
    5. '```' → logprob: -12.761086463928223
    6. '][' → logprob: -13.386086463928223
    7. '
' → logprob: -13.511086463928223
    8. '[l' → logprob: -13.761086463928223
    9. '           ' → logprob: -14.011086463928223
    10. '[
' → logprob: -14.011086463928223

Token 365: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.32926318049430847
    2. 'l' → logprob: -1.7042632102966309
    3. '[l' → logprob: -2.829263210296631
    4. 'k' → logprob: -3.454263210296631
    5. 'm' → logprob: -5.579263210296631
    6. '[k' → logprob: -6.079263210296631
    7. ']' → logprob: -7.454263210296631
    8. '[m' → logprob: -7.704263210296631
    9. '[' → logprob: -8.579262733459473
    10. ' l' → logprob: -8.954262733459473

Token 366: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00011343709047650918
    2. 'm' → logprob: -9.875113487243652
    3. 'k' → logprob: -10.125113487243652
    4. 'j' → logprob: -12.125113487243652
    5. '   ' → logprob: -12.625113487243652
    6. '```' → logprob: -13.250113487243652
    7. ' l' → logprob: -13.375113487243652
    8. '
' → logprob: -13.500113487243652
    9. '     ' → logprob: -13.875113487243652
    10. ' ' → logprob: -13.875113487243652

Token 367: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.05408754199743271
    2. ']:' → logprob: -3.1790876388549805
    3. ']' → logprob: -4.5540876388549805
    4. '][' → logprob: -8.80408763885498
    5. ']:

' → logprob: -9.17908763885498
    6. ']:
' → logprob: -9.42908763885498
    7. '[m' → logprob: -10.42908763885498
    8. ' ]' → logprob: -10.67908763885498
    9. 'm' → logprob: -10.80408763885498
    10. ']]:
' → logprob: -11.17908763885498

Token 368: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.148479163646698
    2. ':
' → logprob: -2.7734792232513428
    3. ' and' → logprob: -3.0234792232513428
    4. ':' → logprob: -4.148478984832764
    5. '       ' → logprob: -5.773478984832764
    6. 'x' → logprob: -6.273478984832764
    7. 'and' → logprob: -6.648478984832764
    8. '```' → logprob: -6.648478984832764
    9. 'y' → logprob: -7.273478984832764
    10. '   ' → logprob: -7.898478984832764

Token 369: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.0009286141721531749
    2. 'x' → logprob: -7.6259284019470215
    3. ' y' → logprob: -8.25092887878418
    4. '               ' → logprob: -9.12592887878418
    5. '           ' → logprob: -10.25092887878418
    6. '   ' → logprob: -10.75092887878418
    7. 'for' → logprob: -11.75092887878418
    8. 'm' → logprob: -13.25092887878418
    9. '       ' → logprob: -13.37592887878418
    10. '	y' → logprob: -15.00092887878418

Token 370: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0001415618316968903
    2. 'k' → logprob: -8.875141143798828
    3. '[' → logprob: -14.625141143798828
    4. ' [' → logprob: -15.125141143798828
    5. '```' → logprob: -15.250141143798828
    6. '   ' → logprob: -15.625141143798828
    7. '[m' → logprob: -16.000141143798828
    8. '{k' → logprob: -16.500141143798828
    9. '[l' → logprob: -16.625141143798828
    10. '       ' → logprob: -17.000141143798828

Token 371: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00793345458805561
    2. '[k' → logprob: -4.882933616638184
    3. '[l' → logprob: -8.132933616638184
    4. '[' → logprob: -11.507933616638184
    5. '[m' → logprob: -12.257933616638184
    6. ' ][' → logprob: -12.257933616638184
    7. ']' → logprob: -12.507933616638184
    8. 'k' → logprob: -12.632933616638184
    9. '}[' → logprob: -13.132933616638184
    10. '   ' → logprob: -14.507933616638184

Token 372: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0015988911036401987
    2. '[l' → logprob: -7.126598834991455
    3. 'm' → logprob: -8.001599311828613
    4. 'k' → logprob: -8.001599311828613
    5. '][' → logprob: -10.376599311828613
    6. '           ' → logprob: -11.001599311828613
    7. '   ' → logprob: -11.126599311828613
    8. ' l' → logprob: -11.376599311828613
    9. 'y' → logprob: -11.376599311828613
    10. '       ' → logprob: -12.126599311828613

Token 373: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011316720396280289
    2. '[k' → logprob: -4.636316776275635
    3. '[m' → logprob: -6.636316776275635
    4. '[' → logprob: -9.011316299438477
    5. '[l' → logprob: -10.136316299438477
    6. ']' → logprob: -11.011316299438477
    7. 'm' → logprob: -11.011316299438477
    8. 'k' → logprob: -11.136316299438477
    9. ' ][' → logprob: -11.636316299438477
    10. '   ' → logprob: -12.136316299438477

Token 374: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0023211759980767965
    2. 'k' → logprob: -6.252321243286133
    3. 'y' → logprob: -8.752321243286133
    4. ']' → logprob: -9.627321243286133
    5. '
' → logprob: -10.377321243286133
    6. '][' → logprob: -10.627321243286133
    7. '   ' → logprob: -10.627321243286133
    8. '           ' → logprob: -10.877321243286133
    9. '[m' → logprob: -11.127321243286133
    10. '       ' → logprob: -12.002321243286133

Token 375: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.008548852987587452
    2. ']' → logprob: -4.883548736572266
    3. ']+=' → logprob: -7.633548736572266
    4. '][' → logprob: -8.258548736572266
    5. ' ]' → logprob: -9.133548736572266
    6. '=' → logprob: -10.633548736572266
    7. '=k' → logprob: -11.258548736572266
    8. '[k' → logprob: -11.633548736572266
    9. '   ' → logprob: -11.758548736572266
    10. ']==' → logprob: -12.258548736572266

Token 376: 'min' (ID: 1493)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6276683807373047
    2. 'min' → logprob: -1.0026683807373047
    3. 'max' → logprob: -2.6276683807373047
    4. 'k' → logprob: -3.6276683807373047
    5. 'm' → logprob: -8.127668380737305
    6. ' y' → logprob: -10.502668380737305
    7. 'n' → logprob: -11.002668380737305
    8. '   ' → logprob: -11.252668380737305
    9. ' min' → logprob: -11.252668380737305
    10. 'l' → logprob: -11.377668380737305

Token 377: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -9.877503907773644e-05
    2. '(' → logprob: -9.375099182128906
    3. 'y' → logprob: -11.625099182128906
    4. '(
' → logprob: -12.750099182128906
    5. ' (' → logprob: -13.750099182128906
    6. '   ' → logprob: -15.000099182128906
    7. '(x' → logprob: -15.875099182128906
    8. '((' → logprob: -16.000099182128906
    9. '	y' → logprob: -16.125099182128906
    10. ' y' → logprob: -16.250099182128906

Token 378: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.0564331205387134e-05
    2. 'k' → logprob: -11.50001049041748
    3. ' [' → logprob: -16.125011444091797
    4. '   ' → logprob: -16.750011444091797
    5. '```' → logprob: -16.750011444091797
    6. '][' → logprob: -16.875011444091797
    7. '[' → logprob: -17.250011444091797
    8. ')[' → logprob: -17.750011444091797
    9. '(k' → logprob: -17.875011444091797
    10. '
' → logprob: -18.125011444091797

Token 379: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.63475102186203
    2. '][' → logprob: -0.75975102186203
    3. 'k' → logprob: -6.259750843048096
    4. ')[' → logprob: -9.634751319885254
    5. '[' → logprob: -10.884751319885254
    6. '```' → logprob: -11.134751319885254
    7. ' ][' → logprob: -11.259751319885254
    8. ''][' → logprob: -11.259751319885254
    9. ' [' → logprob: -11.384751319885254
    10. ',k' → logprob: -11.384751319885254

Token 380: 'l' (ID: 75)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04447468742728233
    2. '[k' → logprob: -3.4194746017456055
    3. 'l' → logprob: -4.6694746017456055
    4. '[l' → logprob: -7.4194746017456055
    5. 'm' → logprob: -8.044474601745605
    6. 'y' → logprob: -8.669474601745605
    7. '```' → logprob: -9.794474601745605
    8. '][' → logprob: -10.669474601745605
    9. '   ' → logprob: -10.794474601745605
    10. ' k' → logprob: -10.794474601745605

Token 381: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00232712528668344
    2. '[k' → logprob: -6.252326965332031
    3. '[m' → logprob: -8.502326965332031
    4. '   ' → logprob: -10.127326965332031
    5. ']' → logprob: -10.252326965332031
    6. ' ][' → logprob: -10.502326965332031
    7. '[' → logprob: -10.627326965332031
    8. '[l' → logprob: -11.127326965332031
    9. 'k' → logprob: -11.252326965332031
    10. '       ' → logprob: -11.627326965332031

Token 382: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.007810558192431927
    2. '[m' → logprob: -4.882810592651367
    3. '   ' → logprob: -10.132810592651367
    4. 'k' → logprob: -10.257810592651367
    5. ' m' → logprob: -10.382810592651367
    6. '           ' → logprob: -10.632810592651367
    7. 'y' → logprob: -11.007810592651367
    8. '[' → logprob: -11.382810592651367
    9. '][' → logprob: -11.382810592651367
    10. '       ' → logprob: -12.132810592651367

Token 383: '-' (ID: 12)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4940774440765381
    2. '],' → logprob: -1.119077444076538
    3. '-' → logprob: -2.869077444076538
    4. '[k' → logprob: -5.869077682495117
    5. '])' → logprob: -7.244077682495117
    6. '],[' → logprob: -7.619077682495117
    7. ' ],' → logprob: -7.744077682495117
    8. ']' → logprob: -7.744077682495117
    9. ' ][' → logprob: -7.994077682495117
    10. '   ' → logprob: -8.744077682495117

Token 384: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015028368216007948
    2. '-' → logprob: -6.876502990722656
    3. 'm' → logprob: -8.126502990722656
    4. '+' → logprob: -9.501502990722656
    5. ' ' → logprob: -9.876502990722656
    6. '   ' → logprob: -11.001502990722656
    7. ' m' → logprob: -12.376502990722656
    8. '           ' → logprob: -12.501502990722656
    9. 'l' → logprob: -12.626502990722656
    10. ' -' → logprob: -12.751502990722656

Token 385: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0047425683587789536
    2. ',y' → logprob: -6.379742622375488
    3. '][' → logprob: -6.754742622375488
    4. ',' → logprob: -7.504742622375488
    5. ']' → logprob: -7.754742622375488
    6. ' ],' → logprob: -8.379742622375488
    7. '],[' → logprob: -8.629742622375488
    8. '])' → logprob: -8.629742622375488
    9. 'y' → logprob: -9.254742622375488
    10. '],
' → logprob: -9.629742622375488

Token 386: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00034392563975416124
    2. ' y' → logprob: -8.250344276428223
    3. 'x' → logprob: -9.625344276428223
    4. '   ' → logprob: -11.750344276428223
    5. '
' → logprob: -12.750344276428223
    6. '       ' → logprob: -13.750344276428223
    7. '           ' → logprob: -14.125344276428223
    8. '	y' → logprob: -14.250344276428223
    9. '[y' → logprob: -14.625344276428223
    10. '    ' → logprob: -14.625344276428223

Token 387: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -7.362307223957032e-05
    2. 'k' → logprob: -10.375073432922363
    3. '][' → logprob: -10.500073432922363
    4. '[' → logprob: -11.875073432922363
    5. '```' → logprob: -12.625073432922363
    6. '
' → logprob: -13.125073432922363
    7. '[
' → logprob: -14.875073432922363
    8. '[m' → logprob: -14.875073432922363
    9. '   ' → logprob: -15.375073432922363
    10. '(k' → logprob: -15.500073432922363

Token 388: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.2021549493074417
    2. '][' → logprob: -1.7021549940109253
    3. 'k' → logprob: -7.577155113220215
    4. '[m' → logprob: -9.702155113220215
    5. '[l' → logprob: -9.827155113220215
    6. '[' → logprob: -10.077155113220215
    7. '```' → logprob: -10.702155113220215
    8. ' ][' → logprob: -11.702155113220215
    9. ')[' → logprob: -12.327155113220215
    10. ']' → logprob: -12.452155113220215

Token 389: 'm' (ID: 76)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3897930085659027
    2. 'l' → logprob: -1.139793038368225
    3. 'm' → logprob: -6.1397929191589355
    4. '[k' → logprob: -8.014793395996094
    5. '[l' → logprob: -8.014793395996094
    6. '[m' → logprob: -10.514793395996094
    7. '][' → logprob: -10.764793395996094
    8. '```' → logprob: -11.014793395996094
    9. '[' → logprob: -12.014793395996094
    10. '   ' → logprob: -12.139793395996094

Token 390: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00017505438881926239
    2. '[m' → logprob: -9.250175476074219
    3. ' ][' → logprob: -10.500175476074219
    4. '[l' → logprob: -10.875175476074219
    5. '   ' → logprob: -11.875175476074219
    6. ']' → logprob: -12.125175476074219
    7. 'm' → logprob: -12.375175476074219
    8. '-' → logprob: -12.875175476074219
    9. '       ' → logprob: -12.875175476074219
    10. '           ' → logprob: -13.375175476074219

Token 391: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00037859921576455235
    2. 'l' → logprob: -8.125378608703613
    3. 'k' → logprob: -9.750378608703613
    4. ' m' → logprob: -11.000378608703613
    5. '   ' → logprob: -13.125378608703613
    6. ' ' → logprob: -13.375378608703613
    7. '[m' → logprob: -13.625378608703613
    8. '```' → logprob: -14.375378608703613
    9. '[' → logprob: -14.625378608703613
    10. '           ' → logprob: -14.875378608703613

Token 392: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.004347159992903471
    2. '])
' → logprob: -5.504347324371338
    3. 'm' → logprob: -9.12934684753418
    4. '-' → logprob: -9.50434684753418
    5. ' ])' → logprob: -10.50434684753418
    6. '])

' → logprob: -11.12934684753418
    7. ')' → logprob: -11.50434684753418
    8. '+' → logprob: -11.62934684753418
    9. ']' → logprob: -11.75434684753418
    10. ' ' → logprob: -11.87934684753418

Token 393: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010616567305987701
    2. '       ' → logprob: -9.500105857849121
    3. '   ' → logprob: -11.250105857849121
    4. 'm' → logprob: -11.875105857849121
    5. '```' → logprob: -12.250105857849121
    6. '	       ' → logprob: -12.500105857849121
    7. '               ' → logprob: -13.625105857849121
    8. '          ' → logprob: -14.750105857849121
    9. ',m' → logprob: -15.000105857849121
    10. '		' → logprob: -16.000106811523438

Token 394: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.0010792528046295047
    2. '           ' → logprob: -6.876079082489014
    3. '   ' → logprob: -11.126079559326172
    4. '       ' → logprob: -11.251079559326172
    5. ' m' → logprob: -11.376079559326172
    6. '	m' → logprob: -13.626079559326172
    7. ',m' → logprob: -13.876079559326172
    8. '               ' → logprob: -13.876079559326172
    9. '```' → logprob: -14.001079559326172
    10. '+m' → logprob: -14.626079559326172

Token 395: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -3.531315314830863e-06
    2. ' +=' → logprob: -12.875003814697266
    3. ']+=' → logprob: -14.750003814697266
    4. '+' → logprob: -14.875003814697266
    5. '```' → logprob: -16.500003814697266
    6. '=' → logprob: -17.500003814697266
    7. '+='' → logprob: -17.625003814697266
    8. '   ' → logprob: -18.000003814697266
    9. '+="' → logprob: -18.375003814697266
    10. '+=(' → logprob: -19.000003814697266

Token 396: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -18.125
    4. '+' → logprob: -19.0
    5. '   ' → logprob: -20.1875
    6. 'm' → logprob: -20.75
    7. 'l' → logprob: -20.9375
    8. '
' → logprob: -21.0
    9. '۱' → logprob: -21.125
    10. '2' → logprob: -21.1875

Token 397: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 398: 'k' (ID: 74)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0421479940414429
    2. '<|end|>' → logprob: -1.0421479940414429
    3. '#' → logprob: -2.1671481132507324
    4. '[' → logprob: -3.0421481132507324
    5. 'i' → logprob: -3.5421481132507324
    6. 'x' → logprob: -3.7921481132507324
    7. '...' → logprob: -4.167148113250732
    8. ']' → logprob: -4.417148113250732
    9. 'for' → logprob: -4.917148113250732
    10. 'b' → logprob: -5.667148113250732

Token 399: '=' (ID: 28)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6518035531044006
    2. '+' → logprob: -0.9018035531044006
    3. ' +=' → logprob: -3.526803493499756
    4. ',' → logprob: -3.901803493499756
    5. '=' → logprob: -4.401803493499756
    6. ' ' → logprob: -5.901803493499756
    7. ' in' → logprob: -6.401803493499756
    8. '[' → logprob: -6.526803493499756
    9. ' +' → logprob: -6.776803493499756
    10. ',k' → logprob: -6.901803493499756

Token 400: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004481885116547346
    2. ' ' → logprob: -8.250448226928711
    3. '1' → logprob: -9.250448226928711
    4. '2' → logprob: -10.000448226928711
    5. 'h' → logprob: -10.250448226928711
    6. 'w' → logprob: -12.125448226928711
    7. '-' → logprob: -14.250448226928711
    8. '   ' → logprob: -14.250448226928711
    9. ' h' → logprob: -14.375448226928711
    10. 'k' → logprob: -14.375448226928711

Token 401: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.022289833053946495
    2. ' while' → logprob: -5.022289752960205
    3. '<|end|>' → logprob: -5.022289752960205
    4. '+' → logprob: -5.647289752960205
    5. '+=' → logprob: -6.397289752960205
    6. 'k' → logprob: -7.022289752960205
    7. '=' → logprob: -7.147289752960205
    8. 'w' → logprob: -8.147290229797363
    9. '<w' → logprob: -8.397290229797363
    10. '[' → logprob: -8.522290229797363

Token 402: 'flag' (ID: 17665)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10223019123077393
    2. 'k' → logprob: -2.8522300720214844
    3. '<|end|>' → logprob: -4.227230072021484
    4. '=' → logprob: -4.727230072021484
    5. '
' → logprob: -5.727230072021484
    6. ' while' → logprob: -5.852230072021484
    7. 'for' → logprob: -5.852230072021484
    8. 'w' → logprob: -6.477230072021484
    9. '=[]' → logprob: -6.977230072021484
    10. '0' → logprob: -7.102230072021484

Token 403: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0069992817007005215
    2. ' =' → logprob: -5.006999492645264
    3. '=True' → logprob: -9.381999015808105
    4. '=False' → logprob: -9.506999015808105
    5. '=k' → logprob: -9.881999015808105
    6. ',' → logprob: -10.881999015808105
    7. '_=' → logprob: -11.131999015808105
    8. '_' → logprob: -11.381999015808105
    9. ' ' → logprob: -11.381999015808105
    10. '=[]' → logprob: -12.631999015808105

Token 404: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.22734686732292175
    2. 'True' → logprob: -1.7273468971252441
    3. '0' → logprob: -4.477346897125244
    4. ' False' → logprob: -4.727346897125244
    5. ' True' → logprob: -5.477346897125244
    6. '1' → logprob: -6.852346897125244
    7. ' ' → logprob: -9.477346420288086
    8. '[' → logprob: -9.977346420288086
    9. '[]' → logprob: -11.102346420288086
    10. '-' → logprob: -12.852346420288086

Token 405: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5592881441116333
    2. '<|end|>' → logprob: -1.3092881441116333
    3. ' while' → logprob: -2.8092880249023438
    4. 'for' → logprob: -2.9342880249023438
    5. '
' → logprob: -4.059288024902344
    6. ':' → logprob: -4.184288024902344
    7. ' for' → logprob: -5.684288024902344
    8. ';' → logprob: -6.309288024902344
    9. ',' → logprob: -6.309288024902344
    10. 'k' → logprob: -6.559288024902344

Token 406: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.040975846350193024
    2. ' while' → logprob: -3.41597580909729
    3. 'for' → logprob: -5.165976047515869
    4. '<|end|>' → logprob: -7.290976047515869
    5. '
' → logprob: -8.665975570678711
    6. 'k' → logprob: -8.915975570678711
    7. ' for' → logprob: -8.915975570678711
    8. ' 
' → logprob: -9.415975570678711
    9. ' ' → logprob: -9.665975570678711
    10. ':' → logprob: -10.040975570678711

Token 407: ' not' (ID: 625)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3046618402004242
    2. ' not' → logprob: -1.8046618700027466
    3. ' k' → logprob: -2.679661750793457
    4. 'not' → logprob: -3.554661750793457
    5. 'flag' → logprob: -7.429661750793457
    6. 'True' → logprob: -9.179661750793457
    7. ' True' → logprob: -9.304661750793457
    8. ' flag' → logprob: -9.304661750793457
    9. '(not' → logprob: -11.054661750793457
    10. '(k' → logprob: -11.429661750793457

Token 408: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.011049470864236355
    2. ' flag' → logprob: -4.511049270629883
    3. '(flag' → logprob: -13.636049270629883
    4. '	flag' → logprob: -15.886049270629883
    5. 'k' → logprob: -16.261049270629883
    6. ' ' → logprob: -16.761049270629883
    7. 'fl' → logprob: -16.886049270629883
    8. 'Flag' → logprob: -17.261049270629883
    9. '   ' → logprob: -17.386049270629883
    10. '  ' → logprob: -18.386049270629883

Token 409: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16166795790195465
    2. ':
' → logprob: -2.286668062210083
    3. ':' → logprob: -3.536668062210083
    4. 'and' → logprob: -4.036667823791504
    5. ' :
' → logprob: -7.661667823791504
    6. ' :' → logprob: -9.036667823791504
    7. '   ' → logprob: -9.286667823791504
    8. 'k' → logprob: -9.411667823791504
    9. '=' → logprob: -9.786667823791504
    10. ' ' → logprob: -10.286667823791504

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35566532611846924
    2. ' flag' → logprob: -1.7306653261184692
    3. ' k' → logprob: -2.6056652069091797
    4. 'flag' → logprob: -3.6056652069091797
    5. 'k' → logprob: -4.48066520690918
    6. ' for' → logprob: -4.73066520690918
    7. 'for' → logprob: -8.10566520690918
    8. ' if' → logprob: -8.73066520690918
    9. '	flag' → logprob: -8.98066520690918
    10. ' j' → logprob: -10.48066520690918

Token 411: ' if' (ID: 538)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.05506620183587074
    2. 'k' → logprob: -3.3050661087036133
    3. ' flag' → logprob: -4.555066108703613
    4. 'for' → logprob: -6.055066108703613
    5. 'if' (adapté à ' if') → logprob: -6.430066108703613
    6. '   ' → logprob: -6.805066108703613
    7. ' k' → logprob: -8.180066108703613
    8. 'i' → logprob: -8.680066108703613
    9. 'found' → logprob: -9.430066108703613
    10. 'count' → logprob: -9.680066108703613

Token 412: ' x' (ID: 1215)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3505795896053314
    2. ' k' → logprob: -1.2255796194076538
    3. 'x' → logprob: -6.975579738616943
    4. 'flag' → logprob: -7.975579738616943
    5. ' x' → logprob: -8.600579261779785
    6. 'a' → logprob: -8.975579261779785
    7. ' flag' → logprob: -9.100579261779785
    8. 'h' → logprob: -9.350579261779785
    9. ' h' → logprob: -9.975579261779785
    10. ' a' → logprob: -9.975579261779785

Token 413: '[' (ID: 58)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.002876676619052887
    2. '[' → logprob: -6.2528767585754395
    3. '[i' → logprob: -7.6278767585754395
    4. '[x' → logprob: -8.877876281738281
    5. 'k' → logprob: -9.252876281738281
    6. '==' → logprob: -9.502876281738281
    7. '[h' → logprob: -10.127876281738281
    8. ' ==' → logprob: -10.377876281738281
    9. ' [' → logprob: -11.127876281738281
    10. '[s' → logprob: -12.002876281738281

Token 414: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.010901381261646748
    2. '0' → logprob: -4.63590145111084
    3. 'h' → logprob: -7.51090145111084
    4. 'i' → logprob: -8.38590145111084
    5. ' k' → logprob: -8.51090145111084
    6. 'x' → logprob: -9.13590145111084
    7. ' ' → logprob: -10.38590145111084
    8. '[k' → logprob: -12.01090145111084
    9. '   ' → logprob: -12.26090145111084
    10. '1' → logprob: -12.76090145111084

Token 415: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0019382734317332506
    2. ']' → logprob: -6.501938343048096
    3. '[' → logprob: -8.251937866210938
    4. ' ][' → logprob: -9.501937866210938
    5. ']==' → logprob: -10.501937866210938
    6. '[k' → logprob: -10.751937866210938
    7. 'k' → logprob: -11.501937866210938
    8. '0' → logprob: -11.876937866210938
    9. '   ' → logprob: -12.251937866210938
    10. ']][' → logprob: -12.376937866210938

Token 416: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12986019253730774
    2. 'k' → logprob: -2.1298601627349854
    3. 'w' → logprob: -6.0048604011535645
    4. '1' → logprob: -8.504859924316406
    5. 'h' → logprob: -9.504859924316406
    6. ' ' → logprob: -9.504859924316406
    7. 'x' → logprob: -10.629859924316406
    8. ' k' → logprob: -10.879859924316406
    9. '
' → logprob: -11.004859924316406
    10. 'flag' → logprob: -11.442359924316406

Token 417: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0019882326014339924
    2. ']' → logprob: -6.876988410949707
    3. '[' → logprob: -7.251988410949707
    4. ']==' → logprob: -9.126988410949707
    5. '][-' → logprob: -10.001988410949707
    6. '].' → logprob: -10.876988410949707
    7. ' ][' → logprob: -11.126988410949707
    8. ']!=' → logprob: -11.376988410949707
    9. '0' → logprob: -11.626988410949707
    10. '])' → logprob: -12.126988410949707

Token 418: 'h' (ID: 71)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05963975936174393
    2. 'k' → logprob: -2.9346396923065186
    3. 'h' → logprob: -5.934639930725098
    4. '1' → logprob: -6.934639930725098
    5. 'w' → logprob: -6.934639930725098
    6. 'x' → logprob: -9.184639930725098
    7. '
' → logprob: -10.934639930725098
    8. '   ' → logprob: -12.059639930725098
    9. ' ' → logprob: -12.372139930725098
    10. 'flag' → logprob: -12.372139930725098

Token 419: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018608855083584785
    2. ']' → logprob: -4.518609046936035
    3. ']==' → logprob: -5.893609046936035
    4. '[' → logprob: -6.643609046936035
    5. ']>' → logprob: -6.768609046936035
    6. ']-' → logprob: -6.768609046936035
    7. ' -' → logprob: -7.893609046936035
    8. ']!=' → logprob: -8.268609046936035
    9. '0' → logprob: -9.143609046936035
    10. '2' → logprob: -9.268609046936035

Token 420: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011146977543830872
    2. '2' → logprob: -4.5111470222473145
    3. ' ' → logprob: -10.136146545410156
    4. '   ' → logprob: -10.948646545410156
    5. '
' → logprob: -11.948646545410156
    6. ']' → logprob: -12.073646545410156
    7. 'k' → logprob: -12.198646545410156
    8. '```' → logprob: -12.886146545410156
    9. '...' → logprob: -13.136146545410156
    10. '+' → logprob: -13.136146545410156

Token 421: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.45310723781585693
    2. ']' → logprob: -1.328107237815857
    3. ']!=' → logprob: -2.4531073570251465
    4. ']>=' → logprob: -5.2031073570251465
    5. ']<' → logprob: -5.5781073570251465
    6. '][' → logprob: -6.0781073570251465
    7. ' ]' → logprob: -7.3281073570251465
    8. ']>' → logprob: -7.8281073570251465
    9. '[' → logprob: -8.203106880187988
    10. ']<=' → logprob: -8.453106880187988

Token 422: 'w' (ID: 86)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7275808453559875
    2. 'w' → logprob: -0.9775808453559875
    3. '0' → logprob: -1.9775807857513428
    4. '-w' → logprob: -6.977581024169922
    5. ' ' → logprob: -7.727581024169922
    6. ' -' → logprob: -7.727581024169922
    7. 'y' → logprob: -8.852581024169922
    8. '1' → logprob: -9.352581024169922
    9. ' w' → logprob: -9.477581024169922
    10. 'l' → logprob: -10.227581024169922

Token 423: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012941379100084305
    2. ':' → logprob: -4.887941360473633
    3. ' -' → logprob: -5.387941360473633
    4. ' and' → logprob: -7.637941360473633
    5. 'and' → logprob: -8.637941360473633
    6. ' or' → logprob: -10.387941360473633
    7. ' :' → logprob: -11.012941360473633
    8. ' ' → logprob: -11.387941360473633
    9. '1' → logprob: -11.887941360473633
    10. '   ' → logprob: -12.387941360473633

Token 424: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013758298009634018
    2. '2' → logprob: -6.626375675201416
    3. ' ' → logprob: -10.001376152038574
    4. '   ' → logprob: -13.251376152038574
    5. '-' → logprob: -14.126376152038574
    6. '
' → logprob: -14.438876152038574
    7. '```' → logprob: -15.313876152038574
    8. '0' → logprob: -15.501376152038574
    9. '  ' → logprob: -15.938876152038574
    10. '3' → logprob: -16.001375198364258

Token 425: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3494330644607544
    2. ' and' → logprob: -1.3494330644607544
    3. ':
' → logprob: -3.974432945251465
    4. ' or' → logprob: -4.849432945251465
    5. 'and' → logprob: -5.724432945251465
    6. '   ' → logprob: -5.974432945251465
    7. ' :' → logprob: -6.224432945251465
    8. ':return' → logprob: -7.599432945251465
    9. ' :
' → logprob: -8.474432945251465
    10. ' ' → logprob: -8.474432945251465

Token 426: '       ' (ID: 309)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.09313460439443588
    2. '   ' → logprob: -2.593134641647339
    3. '       ' → logprob: -4.96813440322876
    4. 'flag' → logprob: -5.46813440322876
    5. ' break' → logprob: -6.59313440322876
    6. '    ' → logprob: -6.96813440322876
    7. '	flag' → logprob: -8.093134880065918
    8. ' print' → logprob: -8.968134880065918
    9. '(flag' → logprob: -9.843134880065918
    10. '.flag' → logprob: -10.718134880065918

Token 427: ' print' (ID: 2123)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.11981435865163803
    2. 'break' → logprob: -2.744814395904541
    3. 'print' (adapté à ' print') → logprob: -3.619814395904541
    4. ' flag' → logprob: -4.119814395904541
    5. ' break' → logprob: -5.244814395904541
    6. ' print' → logprob: -8.494813919067383
    7. '   ' → logprob: -8.994813919067383
    8. 'k' → logprob: -12.619813919067383
    9. 'exit' → logprob: -13.119813919067383
    10. '	flag' → logprob: -13.244813919067383

Token 428: '(k' (ID: 12125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7508442997932434
    2. '("' → logprob: -0.8758442997932434
    3. '(h' → logprob: -2.7508442401885986
    4. '(k' → logprob: -3.5008442401885986
    5. '('' → logprob: -5.250844478607178
    6. '(x' → logprob: -5.250844478607178
    7. '((' → logprob: -6.625844478607178
    8. '(-' → logprob: -7.000844478607178
    9. '(w' → logprob: -7.000844478607178
    10. '0' → logprob: -7.250844478607178

Token 429: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04175670072436333
    2. ')' → logprob: -3.2917566299438477
    3. ');' → logprob: -5.916756629943848
    4. '+' → logprob: -7.041756629943848
    5. ')
' → logprob: -9.666756629943848
    6. ' )
' → logprob: -9.791756629943848
    7. ');
' → logprob: -12.541756629943848
    8. ')`
' → logprob: -12.541756629943848
    9. ')

' → logprob: -12.791756629943848
    10. ' )' → logprob: -12.916756629943848

Token 430: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.931863051955588e-05
    2. '   ' → logprob: -10.000059127807617
    3. '        
' → logprob: -12.750059127807617
    4. ' break' → logprob: -13.125059127807617
    5. '
' → logprob: -13.250059127807617
    6. ',' → logprob: -13.375059127807617
    7. ' flag' → logprob: -13.625059127807617
    8. 'flag' → logprob: -13.750059127807617
    9. '      ' → logprob: -14.625059127807617
    10. 'break' → logprob: -15.250059127807617

Token 431: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.5760094523429871
    2. 'break' → logprob: -0.8260094523429871
    3. ' break' → logprob: -9.826009750366211
    4. 'exit' → logprob: -11.576009750366211
    5. ' flag' → logprob: -12.326009750366211
    6. '   ' → logprob: -13.701009750366211
    7. '
' → logprob: -14.951009750366211
    8. '       ' → logprob: -15.201009750366211
    9. '	break' → logprob: -16.07600975036621
    10. 'Flag' → logprob: -16.70100975036621

Token 432: '=True' (ID: 7827)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33426713943481445
    2. ' =' → logprob: -1.8342671394348145
    3. '=True' → logprob: -2.0842671394348145
    4. '=False' → logprob: -12.584266662597656
    5. '=true' → logprob: -12.709266662597656
    6. '=
' → logprob: -13.209266662597656
    7. ' =
' → logprob: -16.209266662597656
    8. '=k' → logprob: -16.334266662597656
    9. ' ' → logprob: -16.584266662597656
    10. ' True' → logprob: -16.834266662597656

Token 433: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006769014988094568
    2. '       ' → logprob: -5.006769180297852
    3. 'k' → logprob: -10.881769180297852
    4. '<|end|>' → logprob: -11.006769180297852
    5. 'else' → logprob: -11.131769180297852
    6. 'import' → logprob: -14.131769180297852
    7. ' ' → logprob: -14.506769180297852
    8. ',k' → logprob: -15.131769180297852
    9. '```' → logprob: -15.256769180297852
    10. ' k' → logprob: -15.381769180297852

Token 434: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022122275549918413
    2. '       ' → logprob: -6.127212047576904
    3. 'k' → logprob: -10.877212524414062
    4. 'else' → logprob: -12.002212524414062
    5. '<|end|>' → logprob: -13.752212524414062
    6. 'import' → logprob: -14.627212524414062
    7. ' ' → logprob: -15.877212524414062
    8. ' k' → logprob: -16.002212524414062
    9. '  ' → logprob: -16.252212524414062
    10. '```' → logprob: -16.752212524414062

Token 435: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38760343194007874
    2. '       ' → logprob: -1.1376034021377563
    3. 'break' → logprob: -7.887603282928467
    4. ' break' → logprob: -8.387603759765625
    5. 'else' → logprob: -9.137603759765625
    6. '	break' → logprob: -11.637603759765625
    7. 'continue' (adapté à ' continue') → logprob: -12.262603759765625
    8. 'k' → logprob: -13.137603759765625
    9. ' else' → logprob: -13.512603759765625
    10. '```' → logprob: -14.262603759765625

Token 436: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012556266039609909
    2. 'k' → logprob: -4.387556076049805
    3. ' k' → logprob: -10.512556076049805
    4. '    
' → logprob: -12.012556076049805
    5. '<|end|>' → logprob: -12.637556076049805
    6. '
' → logprob: -12.762556076049805
    7. '  ' → logprob: -13.137556076049805
    8. '	k' → logprob: -13.887556076049805
    9. 'import' → logprob: -14.012556076049805
    10. '#' → logprob: -14.387556076049805

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005258183926343918
    2. 'k' → logprob: -5.255258083343506
    3. ' k' → logprob: -11.880258560180664
    4. 'import' → logprob: -12.005258560180664
    5. '  ' → logprob: -13.255258560180664
    6. '	k' → logprob: -13.880258560180664
    7. '    
' → logprob: -14.005258560180664
    8. '#' → logprob: -14.255258560180664
    9. '       ' → logprob: -14.255258560180664
    10. '
' → logprob: -14.380258560180664

Token 438: ' elif' (ID: 9497)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00668529886752367
    2. 'for' → logprob: -6.631685256958008
    3. 'found' → logprob: -6.631685256958008
    4. 'new' → logprob: -6.881685256958008
    5. 'flag' → logprob: -7.131685256958008
    6. 'if' → logprob: -8.006685256958008
    7. '   ' → logprob: -8.256685256958008
    8. 'min' → logprob: -8.256685256958008
    9. 'max' → logprob: -8.381685256958008
    10. 'temp' → logprob: -8.506685256958008

Token 439: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1827056109905243
    2. 'x' → logprob: -1.8077056407928467
    3. 'y' → logprob: -7.057705402374268
    4. 'h' → logprob: -7.307705402374268
    5. 'flag' → logprob: -7.682705402374268
    6. ' k' → logprob: -8.432705879211426
    7. 'not' → logprob: -9.057705879211426
    8. 'w' → logprob: -9.057705879211426
    9. ' x' → logprob: -9.057705879211426
    10. 'all' → logprob: -9.057705879211426

Token 440: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6148435473442078
    2. '>' → logprob: -1.4898436069488525
    3. '+=' → logprob: -2.2398436069488525
    4. ' ==' → logprob: -3.1148436069488525
    5. '>=' → logprob: -3.3648436069488525
    6. '+' → logprob: -3.6148436069488525
    7. ' >' → logprob: -4.364843368530273
    8. ' +=' → logprob: -5.364843368530273
    9. ' >=' → logprob: -6.239843368530273
    10. '<' → logprob: -6.989843368530273

Token 441: '15' (ID: 1055)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6133993864059448
    2. 'w' → logprob: -1.1133993864059448
    3. '100' → logprob: -2.4883995056152344
    4. '10' → logprob: -3.7383995056152344
    5. '999' → logprob: -5.613399505615234
    6. '9' → logprob: -6.238399505615234
    7. '500' → logprob: -6.238399505615234
    8. '50' → logprob: -6.363399505615234
    9. 'max' → logprob: -6.488399505615234
    10. '99' → logprob: -6.488399505615234

Token 442: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12770900130271912
    2. ':
' → logprob: -2.127708911895752
    3. ' :' → logprob: -8.12770938873291
    4. ' :
' → logprob: -8.50270938873291
    5. '   ' → logprob: -9.12770938873291
    6. ':return' → logprob: -9.75270938873291
    7. '+' → logprob: -9.87770938873291
    8. ' or' → logprob: -10.75270938873291
    9. ' and' → logprob: -11.12770938873291
    10. '=' → logprob: -12.25270938873291

Token 443: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5406433939933777
    2. 'print' → logprob: -1.4156434535980225
    3. '       ' → logprob: -1.7906434535980225
    4. ' print' → logprob: -5.540643215179443
    5. 'break' → logprob: -5.790643215179443
    6. ' break' → logprob: -6.915643215179443
    7. '```' → logprob: -11.540643692016602
    8. 'import' → logprob: -12.290643692016602
    9. '	break' → logprob: -12.415643692016602
    10. '	print' → logprob: -12.665643692016602

Token 444: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07565275579690933
    2. 'break' → logprob: -3.325652837753296
    3. ' print' → logprob: -4.325652599334717
    4. '       ' → logprob: -4.450652599334717
    5. ' break' → logprob: -4.950652599334717
    6. '   ' → logprob: -5.325652599334717
    7. 'flag' → logprob: -10.575653076171875
    8. 'raise' → logprob: -11.700653076171875
    9. ' ' → logprob: -12.325653076171875
    10. '           ' → logprob: -12.450653076171875

Token 445: '(' (ID: 7)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002039629500359297
    2. '(-' → logprob: -7.002039432525635
    3. '15' → logprob: -8.002039909362793
    4. '"' → logprob: -8.252039909362793
    5. 'k' → logprob: -9.252039909362793
    6. '"-' → logprob: -9.377039909362793
    7. '(' → logprob: -9.627039909362793
    8. '0' → logprob: -9.752039909362793
    9. '16' → logprob: -9.752039909362793
    10. '("' → logprob: -10.502039909362793

Token 446: '16' (ID: 1125)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01105159055441618
    2. '"' → logprob: -5.261051654815674
    3. '15' → logprob: -6.636051654815674
    4. 'k' → logprob: -6.886051654815674
    5. '"-' → logprob: -7.511051654815674
    6. '16' → logprob: -7.761051654815674
    7. '0' → logprob: -8.136051177978516
    8. '-x' → logprob: -8.261051177978516
    9. ''' → logprob: -8.636051177978516
    10. '-k' → logprob: -8.636051177978516

Token 447: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03374113515019417
    2. ')' → logprob: -3.4087412357330322
    3. '   ' → logprob: -9.658740997314453
    4. ')
' → logprob: -11.533740997314453
    5. ' )
' → logprob: -11.658740997314453
    6. '       ' → logprob: -12.158740997314453
    7. ');' → logprob: -12.783740997314453
    8. ')return' → logprob: -13.033740997314453
    9. ' )' → logprob: -15.033740997314453
    10. ')`
' → logprob: -15.283740997314453

Token 448: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0297680776566267
    2. '   ' → logprob: -3.5297679901123047
    3. 'break' → logprob: -12.279767990112305
    4. 'k' → logprob: -12.404767990112305
    5. 'import' → logprob: -12.779767990112305
    6. 'else' → logprob: -12.904767990112305
    7. ' break' → logprob: -13.529767990112305
    8. 'b' → logprob: -14.904767990112305
    9. '	break' → logprob: -14.904767990112305
    10. ' ' → logprob: -15.279767990112305

Token 449: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.21942020952701569
    2. '       ' → logprob: -1.7194201946258545
    3. 'flag' → logprob: -4.594420433044434
    4. ' break' → logprob: -5.219420433044434
    5. '   ' → logprob: -6.094420433044434
    6. 'k' → logprob: -9.969420433044434
    7. '	break' → logprob: -11.594420433044434
    8. ' flag' → logprob: -11.969420433044434
    9. 'exit' → logprob: -12.469420433044434
    10. '
' → logprob: -13.344420433044434

Token 450: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00029947367147542536
    2. 'k' → logprob: -8.125299453735352
    3. 'import' → logprob: -13.250299453735352
    4. '    
' → logprob: -14.125299453735352
    5. ' k' → logprob: -15.125299453735352
    6. '
' → logprob: -16.25029945373535
    7. '	k' → logprob: -16.50029945373535
    8. '#' → logprob: -17.12529945373535
    9. '<|end|>' → logprob: -17.25029945373535
    10. 'b' → logprob: -17.25029945373535

Token 451: '   ' (ID: 271)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2014283388853073
    2. '   ' → logprob: -1.7014282941818237
    3. 'import' → logprob: -12.201428413391113
    4. 'for' → logprob: -12.951428413391113
    5. '	k' → logprob: -13.326428413391113
    6. '    
' → logprob: -13.451428413391113
    7. 'else' → logprob: -13.701428413391113
    8. '
' → logprob: -13.826428413391113
    9. ' k' → logprob: -14.326428413391113
    10. 'x' → logprob: -14.701428413391113

Token 452: ' for' (ID: 395)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0004997743526473641
    2. '   ' → logprob: -7.750499725341797
    3. 'new' → logprob: -10.750499725341797
    4. 'flag' → logprob: -11.500499725341797
    5. 'temp' → logprob: -11.625499725341797
    6. 'x' → logprob: -12.000499725341797
    7. 'for' (adapté à ' for') → logprob: -12.125499725341797
    8. 'tmp' → logprob: -12.750499725341797
    9. 'i' → logprob: -13.375499725341797
    10. 'import' → logprob: -13.500499725341797

Token 453: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6700436472892761
    2. ' v' → logprob: -1.295043706893921
    3. 'i' → logprob: -2.170043706893921
    4. 'v' → logprob: -2.670043706893921
    5. ' _' → logprob: -5.295043468475342
    6. ' u' → logprob: -5.420043468475342
    7. ' r' → logprob: -6.045043468475342
    8. '_' → logprob: -6.170043468475342
    9. ' n' → logprob: -6.420043468475342
    10. ' l' → logprob: -6.545043468475342

Token 454: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009449699893593788
    2. 'in' → logprob: -4.759449481964111
    3. ',' → logprob: -7.634449481964111
    4. 's' → logprob: -9.38444995880127
    5. ' ' → logprob: -10.25944995880127
    6. '1' → logprob: -10.38444995880127
    7. '0' → logprob: -10.50944995880127
    8. ' ,' → logprob: -11.00944995880127
    9. 'x' → logprob: -11.00944995880127
    10. 'n' → logprob: -11.38444995880127

Token 455: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014492539688944817
    2. 'in' → logprob: -4.264492511749268
    3. ',' → logprob: -8.389492988586426
    4. '0' → logprob: -11.014492988586426
    5. '1' → logprob: -11.389492988586426
    6. ' ' → logprob: -11.389492988586426
    7. ',in' → logprob: -11.764492988586426
    8. 'range' → logprob: -12.264492988586426
    9. ' i' → logprob: -12.639492988586426
    10. 'x' → logprob: -12.764492988586426

Token 456: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.006788312457501888
    2. 'range' → logprob: -5.00678825378418
    3. '[' → logprob: -10.13178825378418
    4. ' x' → logprob: -11.63178825378418
    5. '(range' → logprob: -12.38178825378418
    6. 'x' → logprob: -12.50678825378418
    7. '[[' → logprob: -12.63178825378418
    8. '[x' → logprob: -13.13178825378418
    9. '[]' → logprob: -13.38178825378418
    10. ' ' → logprob: -13.63178825378418

Token 457: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.24519217014312744
    2. 'h' → logprob: -2.120192050933838
    3. '(w' → logprob: -2.870192050933838
    4. '(' → logprob: -4.120192050933838
    5. 'w' → logprob: -4.745192050933838
    6. '(k' → logprob: -5.370192050933838
    7. '16' → logprob: -6.370192050933838
    8. '1' → logprob: -6.370192050933838
    9. ' h' → logprob: -6.495192050933838
    10. 'k' → logprob: -6.995192050933838

Token 458: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0809769332408905
    2. '):' → logprob: -2.580976963043213
    3. '+' → logprob: -6.830976963043213
    4. '-' → logprob: -6.955976963043213
    5. '   ' → logprob: -11.080976486206055
    6. '):
' → logprob: -11.455976486206055
    7. '**' → logprob: -12.330976486206055
    8. '*' → logprob: -12.330976486206055
    9. '):

' → logprob: -12.705976486206055
    10. '//' → logprob: -12.830976486206055

Token 459: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26323288679122925
    2. ' for' → logprob: -1.513232946395874
    3. '       ' → logprob: -4.513232707977295
    4. 'for' → logprob: -9.263233184814453
    5. ' ' → logprob: -9.388233184814453
    6. '	for' → logprob: -9.513233184814453
    7. '    ' → logprob: -11.763233184814453
    8. '<|end|>' → logprob: -12.763233184814453
    9. ' and' → logprob: -12.888233184814453
    10. ',' → logprob: -13.138233184814453

Token 460: ' Row' (ID: 18215)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11648354679346085
    2. ' for' → logprob: -2.241483449935913
    3. '   ' → logprob: -5.616483688354492
    4. '       ' → logprob: -11.991483688354492
    5. '	for' → logprob: -12.741483688354492
    6. 'idx' → logprob: -12.991483688354492
    7. '           ' → logprob: -13.366483688354492
    8. '    ' → logprob: -13.491483688354492
    9. ' ' → logprob: -13.741483688354492
    10. ' idx' → logprob: -14.991483688354492

Token 461: 'X' (ID: 55)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49810805916786194
    2. '=' → logprob: -1.6231080293655396
    3. '   ' → logprob: -2.248108148574829
    4. ' for' → logprob: -3.373108148574829
    5. 'for' → logprob: -3.623108148574829
    6. '=row' → logprob: -4.99810791015625
    7. '=[' → logprob: -5.12310791015625
    8. '=[]' → logprob: -5.99810791015625
    9. ' ' → logprob: -6.24810791015625
    10. 's' → logprob: -6.62310791015625

Token 462: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7459139227867126
    2. ' =' → logprob: -1.7459139823913574
    3. 'for' → logprob: -2.1209139823913574
    4. '[idx' → logprob: -2.3709139823913574
    5. '=[' → logprob: -3.1209139823913574
    6. '[' → logprob: -3.2459139823913574
    7. '=[]' → logprob: -4.370913982391357
    8. ' for' → logprob: -4.495913982391357
    9. '   ' → logprob: -5.120913982391357
    10. '=row' → logprob: -5.745913982391357

Token 463: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05539536476135254
    2. '0' → logprob: -3.8053953647613525
    3. '[x' → logprob: -4.805395126342773
    4. '[' → logprob: -4.930395126342773
    5. 'idx' → logprob: -5.055395126342773
    6. 'h' → logprob: -5.930395126342773
    7. 'w' → logprob: -6.055395126342773
    8. '[h' → logprob: -6.555395126342773
    9. '[idx' → logprob: -7.055395126342773
    10. ' x' → logprob: -7.680395126342773

Token 464: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.06518428027629852
    2. '[' → logprob: -3.1901843547821045
    3. '[k' → logprob: -3.9401843547821045
    4. '[h' → logprob: -6.940184116363525
    5. '=' → logprob: -7.190184116363525
    6. '[x' → logprob: -8.940184593200684
    7. ' =' → logprob: -9.065184593200684
    8. 'idx' → logprob: -9.190184593200684
    9. 'k' → logprob: -9.815184593200684
    10. '0' → logprob: -10.315184593200684

Token 465: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001993705052882433
    2. '][' → logprob: -6.876993656158447
    3. 'idx' → logprob: -7.626993656158447
    4. '[idx' → logprob: -8.501994132995605
    5. '[' → logprob: -8.876994132995605
    6. 'k' → logprob: -10.001994132995605
    7. ']' → logprob: -10.501994132995605
    8. '0' → logprob: -11.376994132995605
    9. '...' → logprob: -12.626994132995605
    10. 's' → logprob: -12.626994132995605

Token 466: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.35175061225891113
    2. '][' → logprob: -1.2267506122589111
    3. '])' → logprob: -6.476750373840332
    4. ']
' → logprob: -7.476750373840332
    5. '[' → logprob: -8.226750373840332
    6. '][:' → logprob: -9.351750373840332
    7. ' ' → logprob: -9.351750373840332
    8. ')' → logprob: -9.476750373840332
    9. '[idx' → logprob: -9.601750373840332
    10. ' ]' → logprob: -9.601750373840332

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005689868703484535
    2. ' for' → logprob: -5.630690097808838
    3. '[' → logprob: -6.880690097808838
    4. 'for' → logprob: -8.13068962097168
    5. '
' → logprob: -8.25568962097168
    6. '<|end|>' → logprob: -9.00568962097168
    7. '   ' → logprob: -9.13068962097168
    8. ' =' → logprob: -10.00568962097168
    9. '        
' → logprob: -10.38068962097168
    10. '=' → logprob: -10.88068962097168

Token 468: ' Row' (ID: 18215)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00040874676778912544
    2. '   ' → logprob: -8.625409126281738
    3. ' for' → logprob: -8.750409126281738
    4. 'flag' → logprob: -10.125409126281738
    5. '       ' → logprob: -11.125409126281738
    6. 'new' → logprob: -12.625409126281738
    7. 'idx' → logprob: -12.625409126281738
    8. 'row' → logprob: -12.750409126281738
    9. 'Row' (adapté à ' Row') → logprob: -13.625409126281738
    10. 'if' → logprob: -14.375409126281738

Token 469: 'Y' (ID: 56)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3594299256801605
    2. '=' → logprob: -1.609429955482483
    3. '[idx' → logprob: -2.9844298362731934
    4. '_idx' → logprob: -4.484429836273193
    5. '[' → logprob: -4.859429836273193
    6. ' =' → logprob: -5.234429836273193
    7. '0' → logprob: -5.484429836273193
    8. 'x' → logprob: -5.609429836273193
    9. 'for' → logprob: -5.609429836273193
    10. '2' → logprob: -5.734429836273193

Token 470: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38790661096572876
    2. '=' → logprob: -1.137906551361084
    3. '=y' → logprob: -7.512906551361084
    4. '   ' → logprob: -8.012907028198242
    5. '=row' → logprob: -9.887907028198242
    6. '=x' → logprob: -10.387907028198242
    7. '       ' → logprob: -10.512907028198242
    8. ' ' → logprob: -11.387907028198242
    9. '    ' → logprob: -11.762907028198242
    10. '=[' → logprob: -12.137907028198242

Token 471: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01817510649561882
    2. ' y' → logprob: -4.01817512512207
    3. 'x' → logprob: -11.01817512512207
    4. '   ' → logprob: -12.39317512512207
    5. ' ' → logprob: -14.26817512512207
    6. '[]
' → logprob: -14.26817512512207
    7. '[y' → logprob: -14.39317512512207
    8. '  ' → logprob: -14.39317512512207
    9. '	y' → logprob: -14.64317512512207
    10. '    ' → logprob: -14.89317512512207

Token 472: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.04979259893298149
    2. 'idx' → logprob: -3.799792528152466
    3. ' =' → logprob: -4.299792766571045
    4. '=' → logprob: -4.799792766571045
    5. ' idx' → logprob: -6.924792766571045
    6. 'x' → logprob: -7.049792766571045
    7. 'for' → logprob: -7.674792766571045
    8. '_idx' → logprob: -7.674792766571045
    9. '(idx' → logprob: -7.924792766571045
    10. '   ' → logprob: -8.424792289733887

Token 473: '1' (ID: 16)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.26351457834243774
    2. '1' → logprob: -1.513514518737793
    3. 'x' → logprob: -5.888514518737793
    4. '[idx' → logprob: -6.263514518737793
    5. ' idx' → logprob: -6.388514518737793
    6. 'k' → logprob: -6.763514518737793
    7. '0' → logprob: -7.013514518737793
    8. '][' → logprob: -7.638514518737793
    9. '_idx' → logprob: -8.013514518737793
    10. 'dx' → logprob: -8.013514518737793

Token 474: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3267464339733124
    2. '[idx' → logprob: -1.9517464637756348
    3. ']
' → logprob: -2.2017464637756348
    4. '][' → logprob: -3.8267464637756348
    5. '       ' → logprob: -6.076746463775635
    6. '[' → logprob: -7.826746463775635
    7. '   ' → logprob: -8.451745986938477
    8. ']=' → logprob: -8.576745986938477
    9. 'idx' → logprob: -8.576745986938477
    10. '<|end|>' → logprob: -8.576745986938477

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005643534241244197
    2. '   ' → logprob: -8.250564575195312
    3. ' for' → logprob: -9.125564575195312
    4. '<|end|>' → logprob: -9.625564575195312
    5. 'for' → logprob: -9.875564575195312
    6. '           ' → logprob: -11.000564575195312
    7. '        
' → logprob: -11.250564575195312
    8. '
' → logprob: -11.500564575195312
    9. ' ' → logprob: -11.750564575195312
    10. '      ' → logprob: -11.875564575195312

Token 476: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0097361383959651
    2. ' for' → logprob: -5.009736061096191
    3. '       ' → logprob: -6.009736061096191
    4. '   ' → logprob: -7.759736061096191
    5. 'flag' → logprob: -10.009736061096191
    6. 'idx' → logprob: -11.009736061096191
    7. 'k' → logprob: -11.384736061096191
    8. '           ' → logprob: -11.634736061096191
    9. 'row' → logprob: -11.759736061096191
    10. '	for' → logprob: -12.259736061096191

Token 477: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.014773419126868248
    2. 'col' → logprob: -5.264773368835449
    3. ' idx' → logprob: -5.514773368835449
    4. 'j' → logprob: -5.639773368835449
    5. 'k' → logprob: -7.389773368835449
    6. 'c' → logprob: -8.01477336883545
    7. 'id' → logprob: -8.63977336883545
    8. 'i' → logprob: -8.88977336883545
    9. 'w' → logprob: -9.26477336883545
    10. 'l' → logprob: -9.63977336883545

Token 478: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8038930296897888
    2. '2' → logprob: -0.9288930296897888
    3. '0' → logprob: -1.9288930892944336
    4. 'in' → logprob: -5.553893089294434
    5. ' in' → logprob: -5.803893089294434
    6. 'idx' → logprob: -6.553893089294434
    7. '=' → logprob: -6.553893089294434
    8. 'k' → logprob: -7.428893089294434
    9. '[idx' → logprob: -8.303893089294434
    10. ',' → logprob: -8.553893089294434

Token 479: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2812505066394806
    2. 'in' → logprob: -1.4062504768371582
    3. '[idx' → logprob: -10.781250953674316
    4. '[' → logprob: -11.156250953674316
    5. '   ' → logprob: -11.281250953674316
    6. ',' → logprob: -11.531250953674316
    7. ' ' → logprob: -11.781250953674316
    8. '       ' → logprob: -11.906250953674316
    9. '```' → logprob: -12.781250953674316
    10. '[in' → logprob: -12.906250953674316

Token 480: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003212768817320466
    2. ' range' → logprob: -5.753212928771973
    3. '(range' → logprob: -11.378212928771973
    4. 'h' → logprob: -12.253212928771973
    5. '   ' → logprob: -12.253212928771973
    6. 'x' → logprob: -12.378212928771973
    7. 'w' → logprob: -12.753212928771973
    8. 'row' → logprob: -13.503212928771973
    9. ' ' → logprob: -14.128212928771973
    10. '       ' → logprob: -14.378212928771973

Token 481: '(w' (ID: 7420)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.8025438189506531
    2. '(h' → logprob: -1.1775438785552979
    3. '(w' → logprob: -2.177543878555298
    4. 'w' → logprob: -2.302543878555298
    5. '(idx' → logprob: -4.677543640136719
    6. 'range' → logprob: -5.052543640136719
    7. '(' → logprob: -5.302543640136719
    8. 'idx' → logprob: -5.427543640136719
    9. '16' → logprob: -7.052543640136719
    10. '(k' → logprob: -7.052543640136719

Token 482: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6507138609886169
    2. '+' → logprob: -0.9007138609886169
    3. '):' → logprob: -2.9007139205932617
    4. '[' → logprob: -6.025713920593262
    5. ']:
' → logprob: -6.400713920593262
    6. ')' → logprob: -6.525713920593262
    7. '       ' → logprob: -6.650713920593262
    8. '][' → logprob: -6.650713920593262
    9. '   ' → logprob: -6.775713920593262
    10. '-' → logprob: -6.775713920593262

Token 483: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005575236864387989
    2. ' if' → logprob: -5.380575180053711
    3. ' for' → logprob: -7.255575180053711
    4. '               ' → logprob: -9.755575180053711
    5. ' x' → logprob: -9.880575180053711
    6. '```' → logprob: -10.630575180053711
    7. ' k' → logprob: -10.755575180053711
    8. 'if' → logprob: -11.380575180053711
    9. '         ' → logprob: -11.880575180053711
    10. ' ' → logprob: -11.880575180053711

Token 484: ' RX' (ID: 55163)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17813032865524292
    2. ' for' → logprob: -2.8031303882598877
    3. 'if' → logprob: -3.0531303882598877
    4. '           ' → logprob: -3.0531303882598877
    5. ' if' → logprob: -5.928130149841309
    6. '               ' → logprob: -6.053130149841309
    7. '   ' → logprob: -6.553130149841309
    8. 'Row' → logprob: -7.178130149841309
    9. 'k' → logprob: -8.303130149841309
    10. 'x' → logprob: -8.803130149841309

Token 485: 'J' (ID: 41)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.002961653983220458
    2. '=' → logprob: -6.1279616355896
    3. '[' → logprob: -8.127962112426758
    4. '][' → logprob: -8.752962112426758
    5. 'idx' → logprob: -9.002962112426758
    6. ' =' → logprob: -9.127962112426758
    7. ']' → logprob: -11.377962112426758
    8. '[x' → logprob: -11.752962112426758
    9. '=[' → logprob: -11.752962112426758
    10. '   ' → logprob: -11.877962112426758

Token 486: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14690715074539185
    2. '[idx' → logprob: -2.896907091140747
    3. ' =' → logprob: -3.271907091140747
    4. '][' → logprob: -4.021907329559326
    5. '=[' → logprob: -4.271907329559326
    6. '[' → logprob: -5.771907329559326
    7. ']=' → logprob: -6.146907329559326
    8. ']' → logprob: -6.396907329559326
    9. '=[[' → logprob: -6.396907329559326
    10. '=[]' → logprob: -6.521907329559326

Token 487: ' Row' (ID: 18215)
  Prédit: 'Row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Row' → logprob: -0.00017040544480551034
    2. ' Row' → logprob: -8.750170707702637
    3. 'x' → logprob: -11.500170707702637
    4. 'k' → logprob: -14.500170707702637
    5. ' ' → logprob: -15.000170707702637
    6. 'row' → logprob: -15.125170707702637
    7. '   ' → logprob: -15.250170707702637
    8. '  ' → logprob: -15.500170707702637
    9. '_row' → logprob: -16.37516975402832
    10. '<Row' → logprob: -17.37516975402832

Token 488: 'X' (ID: 55)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.09568744152784348
    2. 'X' → logprob: -2.8456873893737793
    3. '[idx' → logprob: -3.4706873893737793
    4. 'x' → logprob: -7.220687389373779
    5. 'k' → logprob: -7.470687389373779
    6. ' idx' → logprob: -7.970687389373779
    7. '(idx' → logprob: -8.720687866210938
    8. 'Y' → logprob: -9.220687866210938
    9. '[' → logprob: -10.345687866210938
    10. 'j' → logprob: -10.845687866210938

Token 489: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.003939125686883926
    2. '=' → logprob: -6.003939151763916
    3. 'idx' → logprob: -7.253939151763916
    4. ' =' → logprob: -7.378939151763916
    5. '[' → logprob: -10.628938674926758
    6. '           ' → logprob: -10.878938674926758
    7. '][' → logprob: -11.253938674926758
    8. '=[' → logprob: -11.378938674926758
    9. '   ' → logprob: -11.503938674926758
    10. ' idx' → logprob: -11.628938674926758

Token 490: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. 'idx' → logprob: -14.750000953674316
    3. '][' → logprob: -14.750000953674316
    4. 'x' → logprob: -16.125001907348633
    5. '[' → logprob: -17.250001907348633
    6. '1' → logprob: -17.625001907348633
    7. ']' → logprob: -18.000001907348633
    8. ' ' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.250001907348633
    10. '[idx' → logprob: -18.500001907348633

Token 491: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6405999064445496
    2. '][' → logprob: -0.7655999064445496
    3. ']
' → logprob: -5.015599727630615
    4. '           ' → logprob: -7.140599727630615
    5. '[' → logprob: -9.140600204467773
    6. '       ' → logprob: -9.515600204467773
    7. ']

' → logprob: -10.140600204467773
    8. ' ][' → logprob: -10.640600204467773
    9. ' ]' → logprob: -10.765600204467773
    10. '               ' → logprob: -10.890600204467773

Token 492: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3042433559894562
    2. '           ' → logprob: -1.4292433261871338
    3. ' for' → logprob: -3.804243326187134
    4. '[' → logprob: -8.429243087768555
    5. '       ' → logprob: -8.929243087768555
    6. '   ' → logprob: -8.929243087768555
    7. '	for' → logprob: -10.429243087768555
    8. '<|end|>' → logprob: -11.929243087768555
    9. '               ' → logprob: -12.179243087768555
    10. '	       ' → logprob: -12.554243087768555

Token 493: ' R' (ID: 460)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003357251174747944
    2. ' for' → logprob: -6.128357410430908
    3. '           ' → logprob: -6.753357410430908
    4. 'if' → logprob: -13.75335693359375
    5. '   ' → logprob: -14.00335693359375
    6. '[' → logprob: -14.00335693359375
    7. '       ' → logprob: -15.37835693359375
    8. '               ' → logprob: -15.75335693359375
    9. '	for' → logprob: -15.75335693359375
    10. 'new' → logprob: -15.75335693359375

Token 494: 'Y' (ID: 56)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.08487813919782639
    2. 'idx' → logprob: -3.9598782062530518
    3. 'K' → logprob: -4.334877967834473
    4. '=' → logprob: -4.459877967834473
    5. '[idx' → logprob: -4.584877967834473
    6. '[' → logprob: -4.709877967834473
    7. ']' → logprob: -5.459877967834473
    8. '[J' → logprob: -5.959877967834473
    9. ' =' → logprob: -6.459877967834473
    10. 'X' → logprob: -6.584877967834473

Token 495: 'J' (ID: 41)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06168282404541969
    2. ' =' → logprob: -3.186682939529419
    3. '[idx' → logprob: -4.06168270111084
    4. 'idx' → logprob: -6.93668270111084
    5. '           ' → logprob: -9.06168270111084
    6. '   ' → logprob: -9.93668270111084
    7. '[' → logprob: -9.93668270111084
    8. '       ' → logprob: -10.31168270111084
    9. '=[' → logprob: -10.93668270111084
    10. '               ' → logprob: -11.93668270111084

Token 496: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1172989085316658
    2. ' =' → logprob: -2.2422988414764404
    3. '[idx' → logprob: -5.8672990798950195
    4. '=[' → logprob: -6.7422990798950195
    5. '=y' → logprob: -9.24229907989502
    6. '[' → logprob: -9.86729907989502
    7. 'for' → logprob: -10.24229907989502
    8. '=[]' → logprob: -10.24229907989502
    9. '=k' → logprob: -10.49229907989502
    10. '=row' → logprob: -10.61729907989502

Token 497: ' Row' (ID: 18215)
  Prédit: 'Row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Row' → logprob: -0.00041482248343527317
    2. ' Row' → logprob: -8.000414848327637
    3. 'y' → logprob: -10.125414848327637
    4. 'x' → logprob: -11.125414848327637
    5. '[' → logprob: -11.750414848327637
    6. 'idx' → logprob: -11.875414848327637
    7. '[y' → logprob: -12.750414848327637
    8. ' y' → logprob: -13.000414848327637
    9. '(Row' → logprob: -13.750414848327637
    10. '[idx' → logprob: -14.125414848327637

Token 498: 'Y' (ID: 56)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.008539751172065735
    2. '[idx' → logprob: -4.88353967666626
    3. ' idx' → logprob: -7.75853967666626
    4. '2' → logprob: -8.508540153503418
    5. '(idx' → logprob: -8.633540153503418
    6. 'x' → logprob: -10.383540153503418
    7. '[' → logprob: -10.883540153503418
    8. '_idx' → logprob: -11.008540153503418
    9. 'k' → logprob: -11.633540153503418
    10. 'X' → logprob: -11.883540153503418

Token 499: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00010342398309148848
    2. 'idx' → logprob: -9.250102996826172
    3. ' idx' → logprob: -13.250102996826172
    4. '[' → logprob: -13.875102996826172
    5. '   ' → logprob: -14.000102996826172
    6. '	idx' → logprob: -14.500102996826172
    7. '(idx' → logprob: -14.500102996826172
    8. '=' → logprob: -14.625102996826172
    9. '```' → logprob: -15.125102996826172
    10. '           ' → logprob: -15.500102996826172

Token 500: '2' (ID: 17)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.008645651862025261
    2. '[idx' → logprob: -4.883645534515381
    3. ' idx' → logprob: -7.258645534515381
    4. '][' → logprob: -8.633646011352539
    5. '_idx' → logprob: -9.883646011352539
    6. '	idx' → logprob: -10.133646011352539
    7. 'x' → logprob: -10.758646011352539
    8. 'Idx' → logprob: -11.258646011352539
    9. '[' → logprob: -11.758646011352539
    10. '2' → logprob: -11.883646011352539

Token 501: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013300585560500622
    2. '][' → logprob: -4.63830041885376
    3. '           ' → logprob: -6.38830041885376
    4. ']
' → logprob: -6.88830041885376
    5. ' ]' → logprob: -8.888300895690918
    6. '       ' → logprob: -8.888300895690918
    7. '               ' → logprob: -9.388300895690918
    8. '<|end|>' → logprob: -9.388300895690918
    9. '[idx' → logprob: -9.763300895690918
    10. '[' → logprob: -9.888300895690918

Token 502: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002782292664051056
    2. ' for' → logprob: -6.752782344818115
    3. '<|end|>' → logprob: -7.252782344818115
    4. 'for' → logprob: -7.377782344818115
    5. '       ' → logprob: -8.877781867980957
    6. '               ' → logprob: -9.752781867980957
    7. '   ' → logprob: -10.627781867980957
    8. '```' → logprob: -11.377781867980957
    9. ',' → logprob: -11.877781867980957
    10. '	       ' → logprob: -12.002781867980957

Token 503: ' rr' (ID: 54129)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0027026389725506306
    2. '           ' → logprob: -6.002702713012695
    3. ' for' → logprob: -9.127702713012695
    4. 'if' → logprob: -9.252702713012695
    5. '   ' → logprob: -11.252702713012695
    6. 'k' → logprob: -12.877702713012695
    7. '       ' → logprob: -13.502702713012695
    8. 'l' → logprob: -13.627702713012695
    9. 'new' → logprob: -14.127702713012695
    10. 'flag' → logprob: -14.627702713012695

Token 504: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2986637055873871
    2. '=[' → logprob: -2.42366361618042
    3. ' =' → logprob: -2.67366361618042
    4. '=[]' → logprob: -2.92366361618042
    5. 'for' → logprob: -3.67366361618042
    6. '=[]
' → logprob: -4.79866361618042
    7. 'ange' → logprob: -5.67366361618042
    8. '=[[' → logprob: -6.29866361618042
    9. '=r' → logprob: -6.79866361618042
    10. '=k' → logprob: -6.92366361618042

Token 505: 'idx' (ID: 13196)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.262758731842041
    2. '-' → logprob: -3.262758731842041
    3. '[' → logprob: -3.262758731842041
    4. 'w' → logprob: -3.512758731842041
    5. 'max' → logprob: -3.512758731842041
    6. 'False' → logprob: -3.512758731842041
    7. 'min' → logprob: -4.012758731842041
    8. 'x' → logprob: -4.637758731842041
    9. 'h' → logprob: -5.387758731842041
    10. 'k' → logprob: -5.387758731842041

Token 506: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.035897064954042435
    2. '+' → logprob: -4.410897254943848
    3. '=' → logprob: -5.285897254943848
    4. '2' → logprob: -5.410897254943848
    5. '[' → logprob: -5.910897254943848
    6. '[idx' → logprob: -5.910897254943848
    7. 'idx' → logprob: -6.535897254943848
    8. '_' → logprob: -6.910897254943848
    9. '0' → logprob: -7.785897254943848
    10. ']' → logprob: -7.785897254943848

Token 507: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018112605437636375
    2. ' +' → logprob: -4.643112659454346
    3. '][' → logprob: -6.143112659454346
    4. '<|end|>' → logprob: -6.268112659454346
    5. ']' → logprob: -6.643112659454346
    6. '[' → logprob: -6.893112659454346
    7. ']+' → logprob: -7.143112659454346
    8. '+=' → logprob: -7.893112659454346
    9. ']+=' → logprob: -8.768112182617188
    10. ' +=' → logprob: -9.393112182617188

Token 508: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6961405277252197
    2. '<|end|>' → logprob: -0.8211405277252197
    3. '+' → logprob: -4.071140289306641
    4. ' for' → logprob: -4.946140289306641
    5. 'for' → logprob: -5.196140289306641
    6. '       ' → logprob: -5.321140289306641
    7. '               ' → logprob: -5.571140289306641
    8. '
' → logprob: -5.821140289306641
    9. '=' → logprob: -6.196140289306641
    10. '<|end|>' → logprob: -6.321140289306641

Token 509: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9129788875579834
    2. ' for' → logprob: -1.6629788875579834
    3. 'r' → logprob: -2.4129788875579834
    4. 'while' (adapté à ' while') → logprob: -2.4129788875579834
    5. ' while' → logprob: -3.0379788875579834
    6. '<|end|>' → logprob: -3.2879788875579834
    7. '           ' → logprob: -3.7879788875579834
    8. ')' → logprob: -4.1629791259765625
    9. 'rx' → logprob: -4.1629791259765625
    10. 'range' → logprob: -4.7879791259765625

Token 510: ' rr' (ID: 54129)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.014057498425245285
    2. ' rr' → logprob: -4.389057636260986
    3. 'RR' → logprob: -7.139057636260986
    4. 'rx' → logprob: -8.139057159423828
    5. 'RX' → logprob: -8.889057159423828
    6. '(rr' → logprob: -9.139057159423828
    7. 'r' → logprob: -9.389057159423828
    8. 'ry' → logprob: -10.639057159423828
    9. ' RX' → logprob: -10.889057159423828
    10. '_rr' → logprob: -11.389057159423828

Token 511: '<h' (ID: 23843)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2924050986766815
    2. '<' → logprob: -1.542405128479004
    3. ' <=' → logprob: -3.792405128479004
    4. '+' → logprob: -5.167405128479004
    5. ' <' → logprob: -5.667405128479004
    6. '<R' → logprob: -6.042405128479004
    7. '+=' → logprob: -6.417405128479004
    8. '[' → logprob: -6.917405128479004
    9. '<len' → logprob: -7.292405128479004
    10. '<x' → logprob: -7.667405128479004

Token 512: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38759806752204895
    2. 'and' → logprob: -1.1375980377197266
    3. ':
' → logprob: -8.137598037719727
    4. '[' → logprob: -8.762598037719727
    5. '+=' → logprob: -10.012598037719727
    6. ':' → logprob: -10.137598037719727
    7. '=' → logprob: -10.387598037719727
    8. '<|end|>' → logprob: -10.512598037719727
    9. '               ' → logprob: -10.762598037719727
    10. '>' → logprob: -11.512598037719727

Token 513: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014814131427556276
    2. ' if' → logprob: -7.376481533050537
    3. 'if' → logprob: -8.376481056213379
    4. '                ' → logprob: -9.001481056213379
    5. '              ' → logprob: -9.001481056213379
    6. '                
' → logprob: -9.126481056213379
    7. '           ' → logprob: -9.876481056213379
    8. ' ' → logprob: -10.001481056213379
    9. '<|end|>' → logprob: -10.251481056213379
    10. '   ' → logprob: -10.751481056213379

Token 514: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3426942825317383
    2. '               ' → logprob: -1.4676942825317383
    3. 'if' (adapté à ' if') → logprob: -3.5926942825317383
    4. '           ' → logprob: -3.8426942825317383
    5. '   ' → logprob: -5.842694282531738
    6. '                   ' → logprob: -6.342694282531738
    7. ' for' → logprob: -6.717694282531738
    8. '                ' → logprob: -7.092694282531738
    9. ' ' → logprob: -7.217694282531738
    10. '            ' → logprob: -7.342694282531738

Token 515: ' RX' (ID: 55163)
  Prédit: 'RX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RX' → logprob: -0.07037685066461563
    2. 'RR' → logprob: -3.3203768730163574
    3. 'x' → logprob: -3.6953768730163574
    4. 'RY' → logprob: -5.695376873016357
    5. ' RX' → logprob: -6.570376873016357
    6. 'X' → logprob: -6.945376873016357
    7. 'rx' → logprob: -7.695376873016357
    8. 'Rx' → logprob: -8.4453763961792
    9. 'rr' → logprob: -8.8203763961792
    10. 'Row' → logprob: -9.1953763961792

Token 516: 'J' (ID: 41)
  Prédit: 'J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.0019239946268498898
    2. '[idx' → logprob: -6.37692403793335
    3. '[' → logprob: -8.751923561096191
    4. 'idx' → logprob: -10.376923561096191
    5. '[J' → logprob: -11.501923561096191
    6. '```' → logprob: -12.626923561096191
    7. 'j' → logprob: -12.751923561096191
    8. 'IDX' → logprob: -13.251923561096191
    9. 'JJ' → logprob: -13.501923561096191
    10. 'RJ' → logprob: -13.626923561096191

Token 517: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003049570368602872
    2. '[R' → logprob: -9.25030517578125
    3. '[r' → logprob: -10.00030517578125
    4. 'rr' → logprob: -10.25030517578125
    5. ' [' → logprob: -10.37530517578125
    6. '[idx' → logprob: -11.25030517578125
    7. '[h' → logprob: -11.62530517578125
    8. '   ' → logprob: -11.75030517578125
    9. '][' → logprob: -12.00030517578125
    10. '```' → logprob: -12.12530517578125

Token 518: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -8.65707261255011e-06
    2. ' rr' → logprob: -12.250008583068848
    3. 'idx' → logprob: -13.125008583068848
    4. 'rx' → logprob: -14.375008583068848
    5. 'h' → logprob: -14.750008583068848
    6. '(rr' → logprob: -15.375008583068848
    7. 'r' → logprob: -15.750008583068848
    8. '
' → logprob: -15.875008583068848
    9. 'ry' → logprob: -16.500009536743164
    10. 'k' → logprob: -16.875009536743164

Token 519: ']>=' (ID: 185954)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.08517759293317795
    2. ']' → logprob: -3.5851776599884033
    3. ']<=' → logprob: -4.210177421569824
    4. ']>=' → logprob: -4.585177421569824
    5. ']>' → logprob: -4.710177421569824
    6. ']<' → logprob: -4.960177421569824
    7. ']!=' → logprob: -5.210177421569824
    8. '==-' → logprob: -5.335177421569824
    9. '==' → logprob: -6.710177421569824
    10. '<=' → logprob: -7.835177421569824

Token 520: '0' (ID: 15)
  Prédit: 'RY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RY' → logprob: -0.024138890206813812
    2. 'k' → logprob: -4.399138927459717
    3. 'idx' → logprob: -4.649138927459717
    4. 'ry' → logprob: -7.524138927459717
    5. '0' → logprob: -7.899138927459717
    6. 'w' → logprob: -8.274138450622559
    7. 'R' → logprob: -8.399138450622559
    8. 'RR' → logprob: -8.524138450622559
    9. 'l' → logprob: -9.399138450622559
    10. 'r' → logprob: -9.774138450622559

Token 521: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02552015520632267
    2. 'and' → logprob: -3.775520086288452
    3. '                   ' → logprob: -6.650520324707031
    4. ':
' → logprob: -7.650520324707031
    5. '               ' → logprob: -7.900520324707031
    6. '                ' → logprob: -10.150520324707031
    7. ' ' → logprob: -10.775520324707031
    8. ':' → logprob: -10.775520324707031
    9. '                       ' → logprob: -11.150520324707031
    10. '                    ' → logprob: -11.775520324707031

Token 522: ' x' (ID: 1215)
  Prédit: 'RY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'RY' → logprob: -0.1313171088695526
    2. 'RR' → logprob: -2.631317138671875
    3. 'rr' → logprob: -3.506317138671875
    4. 'RX' → logprob: -5.006317138671875
    5. '0' → logprob: -5.256317138671875
    6. 'ry' → logprob: -5.756317138671875
    7. 'x' → logprob: -6.131317138671875
    8. 'Y' → logprob: -7.131317138671875
    9. 'YR' → logprob: -7.631317138671875
    10. 'y' → logprob: -8.006317138671875

Token 523: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.12720181047916412
    2. '[' → logprob: -2.127201795578003
    3. '           ' → logprob: -9.377202033996582
    4. '][' → logprob: -10.502202033996582
    5. '[row' → logprob: -10.627202033996582
    6. '               ' → logprob: -10.877202033996582
    7. '       ' → logprob: -11.127202033996582
    8. '=' → logprob: -11.377202033996582
    9. ' [' → logprob: -11.502202033996582
    10. 'idx' → logprob: -11.627202033996582

Token 524: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14601115882396698
    2. '[idx' → logprob: -2.6460111141204834
    3. 'idx' → logprob: -3.0210111141204834
    4. '[' → logprob: -4.6460113525390625
    5. 'rr' → logprob: -5.3960113525390625
    6. '```' → logprob: -7.0210113525390625
    7. '][' → logprob: -7.8960113525390625
    8. ']' → logprob: -9.146011352539062
    9. '[row' → logprob: -9.146011352539062
    10. ' idx' → logprob: -9.271011352539062

Token 525: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01639503426849842
    2. '[' → logprob: -4.766395092010498
    3. '[idx' → logprob: -4.891395092010498
    4. '           ' → logprob: -9.64139461517334
    5. ' ][' → logprob: -9.89139461517334
    6. ']' → logprob: -10.64139461517334
    7. '               ' → logprob: -10.76639461517334
    8. '       ' → logprob: -10.89139461517334
    9. 'idx' → logprob: -11.14139461517334
    10. '   ' → logprob: -11.64139461517334

Token 526: 'RX' (ID: 68715)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.002250768942758441
    2. 'rr' → logprob: -6.127250671386719
    3. ' idx' → logprob: -10.627250671386719
    4. '   ' → logprob: -11.252250671386719
    5. 'rx' → logprob: -11.502250671386719
    6. '
' → logprob: -12.002250671386719
    7. '           ' → logprob: -12.627250671386719
    8. '       ' → logprob: -13.252250671386719
    9. '[idx' → logprob: -13.252250671386719
    10. '               ' → logprob: -14.002250671386719

Token 527: 'J' (ID: 41)
  Prédit: 'J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -6.492120155598968e-05
    2. 'j' → logprob: -10.000064849853516
    3. '[' → logprob: -11.625064849853516
    4. '[idx' → logprob: -12.500064849853516
    5. 'idx' → logprob: -13.375064849853516
    6. '```' → logprob: -13.500064849853516
    7. ']' → logprob: -14.625064849853516
    8. ' J' → logprob: -14.750064849853516
    9. '_j' → logprob: -15.000064849853516
    10. '[J' → logprob: -15.375064849853516

Token 528: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4431232810020447
    2. '[idx' → logprob: -1.0681233406066895
    3. 'idx' → logprob: -4.4431233406066895
    4. '][' → logprob: -6.0681233406066895
    5. 'rr' → logprob: -9.193122863769531
    6. ' idx' → logprob: -10.693122863769531
    7. '           ' → logprob: -11.068122863769531
    8. '   ' → logprob: -11.068122863769531
    9. '       ' → logprob: -11.193122863769531
    10. ']' → logprob: -11.818122863769531

Token 529: 'rr' (ID: 1006)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.01194322295486927
    2. 'rr' → logprob: -4.511943340301514
    3. '[' → logprob: -8.136942863464355
    4. '[idx' → logprob: -8.261942863464355
    5. 'J' → logprob: -8.761942863464355
    6. ' idx' → logprob: -9.136942863464355
    7. 'ry' → logprob: -10.761942863464355
    8. 'j' → logprob: -11.011942863464355
    9. 'rx' → logprob: -11.761942863464355
    10. 'IDX' → logprob: -11.886942863464355

Token 530: ']+' (ID: 15344)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.049324292689561844
    2. '[' → logprob: -3.0493242740631104
    3. ']' → logprob: -8.299324035644531
    4. '[idx' → logprob: -8.424324035644531
    5. ' ][' → logprob: -9.174324035644531
    6. '   ' → logprob: -9.924324035644531
    7. '       ' → logprob: -11.049324035644531
    8. 'rr' → logprob: -11.174324035644531
    9. 'idx' → logprob: -11.424324035644531
    10. '           ' → logprob: -11.549324035644531

Token 531: '1' (ID: 16)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.010572096332907677
    2. 'idx' → logprob: -5.3855719566345215
    3. '[' → logprob: -5.6355719566345215
    4. '1' → logprob: -7.1355719566345215
    5. '][' → logprob: -7.1355719566345215
    6. '0' → logprob: -7.5105719566345215
    7. '(rr' → logprob: -9.88557243347168
    8. ' rr' → logprob: -10.01057243347168
    9. '
' → logprob: -10.76057243347168
    10. 'rx' → logprob: -11.38557243347168

Token 532: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6328136324882507
    2. '[' → logprob: -0.7578136324882507
    3. ']' → logprob: -8.882813453674316
    4. '   ' → logprob: -11.257813453674316
    5. ''][' → logprob: -11.632813453674316
    6. ' ][' → logprob: -11.757813453674316
    7. '
' → logprob: -11.882813453674316
    8. ' [' → logprob: -12.257813453674316
    9. '```' → logprob: -12.257813453674316
    10. '"][' → logprob: -12.882813453674316

Token 533: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -6.635164754698053e-05
    2. 'idx' → logprob: -10.375066757202148
    3. 'h' → logprob: -10.875066757202148
    4. ' rr' → logprob: -11.500066757202148
    5. '(rr' → logprob: -13.125066757202148
    6. '
' → logprob: -13.875066757202148
    7. '   ' → logprob: -13.875066757202148
    8. 'r' → logprob: -14.875066757202148
    9. 'rx' → logprob: -15.000066757202148
    10. 'rc' → logprob: -15.125066757202148

Token 534: ']>=' (ID: 185954)
  Prédit: ']>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>=' → logprob: -0.07382973283529282
    2. ']<=' → logprob: -3.4488296508789062
    3. ']' → logprob: -4.073829650878906
    4. ']<' → logprob: -4.823829650878906
    5. ']==' → logprob: -4.823829650878906
    6. ']!=' → logprob: -5.573829650878906
    7. ']>' → logprob: -6.073829650878906
    8. '][' → logprob: -9.448829650878906
    9. ' ]' → logprob: -10.073829650878906
    10. ']+' → logprob: -10.698829650878906

Token 535: '0' (ID: 15)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.2676142752170563
    2. '0' → logprob: -1.6426142454147339
    3. 'idx' → logprob: -4.517614364624023
    4. 'ry' → logprob: -4.767614364624023
    5. 'RY' → logprob: -4.767614364624023
    6. 'RR' → logprob: -5.267614364624023
    7. 'rx' → logprob: -6.017614364624023
    8. 'h' → logprob: -6.142614364624023
    9. 'RX' → logprob: -6.392614364624023
    10. 'w' → logprob: -7.392614364624023

Token 536: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7847141623497009
    2. ':
' → logprob: -1.1597142219543457
    3. ' and' → logprob: -2.0347142219543457
    4. '               ' → logprob: -3.0347142219543457
    5. '                   ' → logprob: -3.5347142219543457
    6. '                               ' → logprob: -4.534714221954346
    7. '                       ' → logprob: -5.284714221954346
    8. '                           ' → logprob: -5.909714221954346
    9. ' :' → logprob: -7.159714221954346
    10. ' :
' → logprob: -7.534714221954346

Token 537: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.081041119992733
    2. '                ' → logprob: -3.456041097640991
    3. '               ' → logprob: -3.706041097640991
    4. '                               ' → logprob: -4.83104133605957
    5. '                    ' → logprob: -4.95604133605957
    6. '                       ' → logprob: -6.20604133605957
    7. ' rr' → logprob: -6.83104133605957
    8. '                 ' → logprob: -7.20604133605957
    9. '                           ' → logprob: -7.33104133605957
    10. ' ' → logprob: -7.58104133605957

Token 538: ' RX' (ID: 55163)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.38629958033561707
    2. ' rr' → logprob: -1.8862996101379395
    3. 'x' → logprob: -2.5112996101379395
    4. ' x' → logprob: -3.8862996101379395
    5. '                       ' → logprob: -4.0112996101379395
    6. 'RR' → logprob: -4.7612996101379395
    7. '                               ' → logprob: -5.0112996101379395
    8. ' rx' → logprob: -5.0112996101379395
    9. 'k' → logprob: -5.1362996101379395
    10. '                           ' → logprob: -5.2612996101379395

Token 539: 'J' (ID: 41)
  Prédit: 'J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.002481008181348443
    2. '[' → logprob: -6.002480983734131
    3. 'j' → logprob: -13.502481460571289
    4. 'X' → logprob: -13.627481460571289
    5. '```' → logprob: -14.002481460571289
    6. ' J' → logprob: -15.002481460571289
    7. '[idx' → logprob: -15.002481460571289
    8. '...' → logprob: -15.252481460571289
    9. '[J' → logprob: -15.502481460571289
    10. ']' → logprob: -16.00248146057129

Token 540: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0031332748476415873
    2. '=' → logprob: -5.878133296966553
    3. '=[' → logprob: -8.128132820129395
    4. ' =' → logprob: -10.753132820129395
    5. '[:]' → logprob: -13.878132820129395
    6. '[idx' → logprob: -14.128132820129395
    7. '[r' → logprob: -14.128132820129395
    8. '...' → logprob: -14.128132820129395
    9. ' [' → logprob: -14.128132820129395
    10. ',' → logprob: -14.503132820129395

Token 541: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -1.1041145626222715e-05
    2. ' rr' → logprob: -11.875011444091797
    3. 'r' → logprob: -12.625011444091797
    4. '(rr' → logprob: -15.625011444091797
    5. 'idx' → logprob: -16.125011444091797
    6. '[' → logprob: -16.375011444091797
    7. 'rrrr' → logprob: -16.500011444091797
    8. '
' → logprob: -16.750011444091797
    9. '_rr' → logprob: -16.875011444091797
    10. 'rc' → logprob: -17.000011444091797

Token 542: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.013064110651612282
    2. ']' → logprob: -4.763063907623291
    3. '=' → logprob: -5.513063907623291
    4. '=max' → logprob: -8.51306438446045
    5. ']+=' → logprob: -9.26306438446045
    6. ' =' → logprob: -10.26306438446045
    7. '=min' → logprob: -10.38806438446045
    8. ')=' → logprob: -11.01306438446045
    9. ']=(' → logprob: -11.76306438446045
    10. '   ' → logprob: -12.51306438446045

Token 543: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5485060811042786
    2. 'max' → logprob: -1.0485060214996338
    3. 'min' → logprob: -2.798506021499634
    4. ' max' → logprob: -5.673506259918213
    5. 'RX' → logprob: -5.673506259918213
    6. ' x' → logprob: -6.298506259918213
    7. ' min' → logprob: -7.173506259918213
    8. 'RR' → logprob: -7.298506259918213
    9. 'rx' → logprob: -8.048505783081055
    10. ' RX' → logprob: -9.548505783081055

Token 544: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.011077998206019402
    2. 'idx' → logprob: -4.511077880859375
    3. '[' → logprob: -11.011077880859375
    4. ' idx' → logprob: -11.511077880859375
    5. 'x' → logprob: -13.511077880859375
    6. '	idx' → logprob: -14.136077880859375
    7. 'IDX' → logprob: -15.386077880859375
    8. '][' → logprob: -15.511077880859375
    9. '(idx' → logprob: -15.511077880859375
    10. '[x' → logprob: -15.636077880859375

Token 545: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004044444765895605
    2. 'idx' → logprob: -5.629044532775879
    3. '[idx' → logprob: -7.754044532775879
    4. '[' → logprob: -11.879044532775879
    5. 'k' → logprob: -13.629044532775879
    6. ' idx' → logprob: -13.629044532775879
    7. 'x' → logprob: -13.629044532775879
    8. '_idx' → logprob: -13.754044532775879
    9. 'Idx' → logprob: -14.379044532775879
    10. '```' → logprob: -14.629044532775879

Token 546: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.22817742824554443
    2. '[' → logprob: -1.6031774282455444
    3. '[idx' → logprob: -6.103177547454834
    4. '           ' → logprob: -8.728177070617676
    5. '       ' → logprob: -9.478177070617676
    6. '[R' → logprob: -9.978177070617676
    7. ' ][' → logprob: -10.103177070617676
    8. ']' → logprob: -10.228177070617676
    9. 'RX' → logprob: -10.478177070617676
    10. 'idx' → logprob: -10.728177070617676

Token 547: 'RX' (ID: 68715)
  Prédit: 'RX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RX' → logprob: -1.0206720617134124e-05
    2. ' RX' → logprob: -12.25001049041748
    3. 'idx' → logprob: -12.75001049041748
    4. '[' → logprob: -14.12501049041748
    5. 'Rx' → logprob: -15.00001049041748
    6. 'TX' → logprob: -15.12501049041748
    7. 'RR' → logprob: -15.25001049041748
    8. 'rx' → logprob: -16.000009536743164
    9. '           ' → logprob: -16.000009536743164
    10. '   ' → logprob: -16.375009536743164

Token 548: 'J' (ID: 41)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006954180542379618
    2. 'J' → logprob: -5.256954193115234
    3. '][' → logprob: -6.631954193115234
    4. '[idx' → logprob: -8.881954193115234
    5. 'rr' → logprob: -9.756954193115234
    6. ']' → logprob: -9.881954193115234
    7. 'RR' → logprob: -10.631954193115234
    8. 'idx' → logprob: -10.881954193115234
    9. '       ' → logprob: -11.006954193115234
    10. '           ' → logprob: -11.006954193115234

Token 549: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017231308156624436
    2. '[idx' → logprob: -6.626723289489746
    3. '][' → logprob: -7.876723289489746
    4. '           ' → logprob: -12.251723289489746
    5. 'idx' → logprob: -12.501723289489746
    6. '       ' → logprob: -13.001723289489746
    7. '               ' → logprob: -13.376723289489746
    8. '   ' → logprob: -14.126723289489746
    9. '                   ' → logprob: -14.626723289489746
    10. '[r' → logprob: -14.751723289489746

Token 550: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.023456504568457603
    2. '[' → logprob: -3.773456573486328
    3. 'J' → logprob: -9.898456573486328
    4. 'rx' → logprob: -10.148456573486328
    5. 'RR' → logprob: -10.898456573486328
    6. 'r' → logprob: -11.273456573486328
    7. '   ' → logprob: -11.398456573486328
    8. 'rc' → logprob: -11.398456573486328
    9. ' rr' → logprob: -11.773456573486328
    10. '(rr' → logprob: -11.898456573486328

Token 551: ']+' (ID: 15344)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004636723082512617
    2. '][' → logprob: -5.379636764526367
    3. ']' → logprob: -12.379636764526367
    4. '   ' → logprob: -12.629636764526367
    5. '```' → logprob: -13.379636764526367
    6. '       ' → logprob: -13.629636764526367
    7. 'rr' → logprob: -13.754636764526367
    8. '           ' → logprob: -13.879636764526367
    9. ' [' → logprob: -14.254636764526367
    10. '[
' → logprob: -14.879636764526367

Token 552: '1' (ID: 16)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.0025160887744277716
    2. '[' → logprob: -6.127516269683838
    3. '1' → logprob: -8.25251579284668
    4. 'r' → logprob: -10.75251579284668
    5. ' rr' → logprob: -11.25251579284668
    6. '
' → logprob: -11.37751579284668
    7. '(rr' → logprob: -12.12751579284668
    8. 'rx' → logprob: -12.50251579284668
    9. 'rc' → logprob: -12.87751579284668
    10. '   ' → logprob: -13.12751579284668

Token 553: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1270531564950943
    2. '[' → logprob: -2.1270532608032227
    3. ']' → logprob: -9.127053260803223
    4. ''][' → logprob: -12.377053260803223
    5. ' ][' → logprob: -12.627053260803223
    6. '"][' → logprob: -12.752053260803223
    7. '       ' → logprob: -13.877053260803223
    8. '   ' → logprob: -13.877053260803223
    9. ' [' → logprob: -14.377053260803223
    10. '           ' → logprob: -14.627053260803223

Token 554: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -2.47495681833243e-05
    2. '[' → logprob: -11.750024795532227
    3. ' rr' → logprob: -12.250024795532227
    4. '
' → logprob: -12.750024795532227
    5. '][' → logprob: -12.875024795532227
    6. 'r' → logprob: -13.000024795532227
    7. '   ' → logprob: -13.375024795532227
    8. '_rr' → logprob: -14.375024795532227
    9. '(rr' → logprob: -14.625024795532227
    10. 'ry' → logprob: -15.000024795532227

Token 555: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3884050250053406
    2. ']
' → logprob: -1.2634050846099854
    3. '               ' → logprob: -4.138404846191406
    4. '[' → logprob: -4.263404846191406
    5. '                   ' → logprob: -5.513404846191406
    6. '][' → logprob: -6.263404846191406
    7. ']+' → logprob: -6.388404846191406
    8. '           ' → logprob: -7.638404846191406
    9. '       ' → logprob: -8.388404846191406
    10. '                           ' → logprob: -8.763404846191406

Token 556: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4750146269798279
    2. '               ' → logprob: -0.9750146269798279
    3. '                       ' → logprob: -8.100014686584473
    4. '                ' → logprob: -8.600014686584473
    5. '                           ' → logprob: -9.225014686584473
    6. '           ' → logprob: -9.350014686584473
    7. '                    ' → logprob: -9.600014686584473
    8. '                  ' → logprob: -10.350014686584473
    9. '                 ' → logprob: -10.975014686584473
    10. '				' → logprob: -11.100014686584473

Token 557: ' rr' (ID: 54129)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002747576916590333
    2. 'else' → logprob: -6.252747535705566
    3. '                   ' → logprob: -7.877747535705566
    4. 'rr' (adapté à ' rr') → logprob: -8.752747535705566
    5. ' else' → logprob: -8.752747535705566
    6. '           ' → logprob: -9.877747535705566
    7. '                ' → logprob: -10.502747535705566
    8. '              ' → logprob: -11.252747535705566
    9. ' rr' → logprob: -11.752747535705566
    10. '                       ' → logprob: -12.377747535705566

Token 558: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -3.9888433093437925e-05
    2. ' +=' → logprob: -10.375040054321289
    3. ']+=' → logprob: -11.875040054321289
    4. '+' → logprob: -14.000040054321289
    5. '=' → logprob: -14.125040054321289
    6. '+='' → logprob: -17.75004005432129
    7. '```' → logprob: -17.87504005432129
    8. '+=(' → logprob: -18.00004005432129
    9. '   ' → logprob: -18.50004005432129
    10. '-=' → logprob: -18.87504005432129

Token 559: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -17.625
    4. '+' → logprob: -18.125
    5. '   ' → logprob: -18.5
    6. '0' → logprob: -19.625
    7. '2' → logprob: -19.75
    8. '<|end|>' → logprob: -20.0625
    9. '-' → logprob: -20.375
    10. '
' → logprob: -20.375

Token 560: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 561: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16088078916072845
    2. '<|end|>' → logprob: -2.4108808040618896
    3. ')' → logprob: -3.1608808040618896
    4. ' k' → logprob: -5.1608805656433105
    5. '           ' → logprob: -6.0358805656433105
    6. 'k' → logprob: -6.0358805656433105
    7. '+' → logprob: -6.9108805656433105
    8. '    ' → logprob: -6.9108805656433105
    9. ',k' → logprob: -7.2858805656433105
    10. '       ' → logprob: -7.5358805656433105

Token 562: ' cc' (ID: 22988)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12256573885679245
    2. ' k' → logprob: -2.997565746307373
    3. '<|end|>' → logprob: -3.247565746307373
    4. '   ' → logprob: -3.997565746307373
    5. ')' → logprob: -5.747565746307373
    6. 'x' → logprob: -6.997565746307373
    7. '#' → logprob: -7.497565746307373
    8. '[' → logprob: -7.622565746307373
    9. ',k' → logprob: -7.747565746307373
    10. '	k' → logprob: -7.872565746307373

Token 563: '=' (ID: 28)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03406460955739021
    2. '=' → logprob: -3.409064531326294
    3. ' +=' → logprob: -8.534064292907715
    4. ']+=' → logprob: -9.409064292907715
    5. '[' → logprob: -9.909064292907715
    6. '   ' → logprob: -11.034064292907715
    7. '           ' → logprob: -11.034064292907715
    8. '[idx' → logprob: -11.159064292907715
    9. '+' → logprob: -11.784064292907715
    10. ' =' → logprob: -12.159064292907715

Token 564: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0005618501454591751
    2. '0' → logprob: -7.500561714172363
    3. ' idx' → logprob: -12.125561714172363
    4. 'l' → logprob: -14.500561714172363
    5. 'j' → logprob: -14.625561714172363
    6. 'k' → logprob: -14.875561714172363
    7. 'w' → logprob: -15.125561714172363
    8. '           ' → logprob: -15.250561714172363
    9. '   ' → logprob: -15.375561714172363
    10. '	idx' → logprob: -15.375561714172363

Token 565: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0250154547393322
    2. '1' → logprob: -4.400015354156494
    3. 'idx' → logprob: -4.400015354156494
    4. '+' → logprob: -9.900015830993652
    5. '0' → logprob: -10.525015830993652
    6. '(idx' → logprob: -10.775015830993652
    7. '3' → logprob: -11.025015830993652
    8. ' idx' → logprob: -11.775015830993652
    9. '[idx' → logprob: -12.275015830993652
    10. '```' → logprob: -12.650015830993652

Token 566: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16680338978767395
    2. '=' → logprob: -3.0418033599853516
    3. '+' → logprob: -3.2918033599853516
    4. 'cc' → logprob: -3.4168033599853516
    5. '+=' → logprob: -4.291803359985352
    6. 'while' → logprob: -4.666803359985352
    7. '       ' → logprob: -5.541803359985352
    8. '   ' → logprob: -5.666803359985352
    9. '               ' → logprob: -5.916803359985352
    10. '                   ' → logprob: -7.416803359985352

Token 567: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016493646427989006
    2. 'while' → logprob: -5.516493797302246
    3. 'cc' → logprob: -5.516493797302246
    4. '       ' → logprob: -5.641493797302246
    5. ' while' → logprob: -5.641493797302246
    6. '               ' → logprob: -7.766493797302246
    7. '   ' → logprob: -7.891493797302246
    8. ' cc' → logprob: -8.016493797302246
    9. '          ' → logprob: -10.891493797302246
    10. '                   ' → logprob: -11.391493797302246

Token 568: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0026905096601694822
    2. ' while' → logprob: -6.252690315246582
    3. '           ' → logprob: -7.252690315246582
    4. 'cc' → logprob: -9.877690315246582
    5. '       ' → logprob: -13.877690315246582
    6. '               ' → logprob: -14.627690315246582
    7. 'While' → logprob: -15.627690315246582
    8. '   ' → logprob: -16.1276912689209
    9. ' cc' → logprob: -16.3776912689209
    10. '```' → logprob: -16.6276912689209

Token 569: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.22554706037044525
    2. ' cc' → logprob: -1.6005470752716064
    3. '(cc' → logprob: -9.100546836853027
    4. 'c' → logprob: -11.850546836853027
    5. '	cc' → logprob: -12.100546836853027
    6. '   ' → logprob: -13.100546836853027
    7. 'True' → logprob: -13.350546836853027
    8. 'CC' → logprob: -13.350546836853027
    9. '_cc' → logprob: -13.475546836853027
    10. 'Cc' → logprob: -13.975546836853027

Token 570: '<w' (ID: 45719)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2682415843009949
    2. '+=' → logprob: -1.7682416439056396
    3. '[' → logprob: -3.2682416439056396
    4. '<=' → logprob: -4.7682414054870605
    5. '=' → logprob: -5.7682414054870605
    6. '[idx' → logprob: -5.7682414054870605
    7. '+' → logprob: -5.7682414054870605
    8. ' +=' → logprob: -6.0182414054870605
    9. '>=' → logprob: -6.6432414054870605
    10. ' <' → logprob: -6.7682414054870605

Token 571: ':
' (ID: 734)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.24848943948745728
    2. '+' → logprob: -1.8734893798828125
    3. ':
' → logprob: -3.7484893798828125
    4. '=' → logprob: -3.9984893798828125
    5. '               ' → logprob: -4.8734893798828125
    6. ' +=' → logprob: -5.3734893798828125
    7. ':' → logprob: -5.6234893798828125
    8. '           ' → logprob: -6.2484893798828125
    9. 'cc' → logprob: -6.3734893798828125
    10. '+
' → logprob: -6.7484893798828125

Token 572: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03983462229371071
    2. 'cc' → logprob: -3.28983473777771
    3. '           ' → logprob: -6.664834499359131
    4. ' cc' → logprob: -9.039834976196289
    5. '              ' → logprob: -9.289834976196289
    6. '       ' → logprob: -9.914834976196289
    7. '   ' → logprob: -10.039834976196289
    8. '                   ' → logprob: -10.164834976196289
    9. '                ' → logprob: -10.289834976196289
    10. 'if' → logprob: -10.414834976196289

Token 573: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04986666515469551
    2. '           ' → logprob: -3.0498666763305664
    3. ' if' → logprob: -7.049866676330566
    4. '               ' → logprob: -8.049866676330566
    5. 'RY' → logprob: -10.049866676330566
    6. 'cc' → logprob: -10.299866676330566
    7. 'CC' → logprob: -12.299866676330566
    8. '   ' → logprob: -13.174866676330566
    9. '                   ' → logprob: -13.174866676330566
    10. '```' → logprob: -13.424866676330566

Token 574: ' R' (ID: 460)
  Prédit: 'RY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'RY' → logprob: -0.0007955700275488198
    2. '   ' → logprob: -7.875795364379883
    3. 'RR' → logprob: -8.750795364379883
    4. 'ry' → logprob: -9.500795364379883
    5. 'RX' → logprob: -9.875795364379883
    6. 'x' → logprob: -10.250795364379883
    7. 'cc' → logprob: -11.125795364379883
    8. '       ' → logprob: -11.500795364379883
    9. '    ' → logprob: -11.750795364379883
    10. '  ' → logprob: -11.750795364379883

Token 575: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.1511712670326233
    2. 'cc' → logprob: -2.5261712074279785
    3. 'J' → logprob: -3.1511712074279785
    4. 'X' → logprob: -4.4011712074279785
    5. 'c' → logprob: -6.4011712074279785
    6. 'RY' → logprob: -6.7761712074279785
    7. ' cc' → logprob: -7.4011712074279785
    8. 'YK' → logprob: -8.276171684265137
    9. 'C' → logprob: -8.651171684265137
    10. 'RJ' → logprob: -8.776171684265137

Token 576: 'J' (ID: 41)
  Prédit: 'J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.0006503634504042566
    2. 'cc' → logprob: -7.875650405883789
    3. '[' → logprob: -8.375650405883789
    4. 'j' → logprob: -11.250650405883789
    5. '```' → logprob: -12.250650405883789
    6. '[J' → logprob: -12.500650405883789
    7. ' J' → logprob: -12.625650405883789
    8. '   ' → logprob: -13.000650405883789
    9. 'JJ' → logprob: -13.625650405883789
    10. ' cc' → logprob: -13.750650405883789

Token 577: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.816093228830141e-06
    2. 'cc' → logprob: -13.00000286102295
    3. ' [' → logprob: -15.87500286102295
    4. '   ' → logprob: -16.375001907348633
    5. '(cc' → logprob: -16.500001907348633
    6. '```' → logprob: -17.125001907348633
    7. '           ' → logprob: -17.250001907348633
    8. '       ' → logprob: -17.250001907348633
    9. ' ' → logprob: -18.125001907348633
    10. 'Cc' → logprob: -18.250001907348633

Token 578: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.004651437979191542
    2. '[' → logprob: -5.3796515464782715
    3. ' cc' → logprob: -10.629651069641113
    4. '(cc' → logprob: -12.254651069641113
    5. 'rr' → logprob: -13.879651069641113
    6. '	cc' → logprob: -14.629651069641113
    7. '[c' → logprob: -15.504651069641113
    8. '
' → logprob: -16.12965202331543
    9. 'rc' → logprob: -16.25465202331543
    10. '_cc' → logprob: -16.25465202331543

Token 579: ']>=' (ID: 185954)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008894870989024639
    2. '][' → logprob: -4.758894920349121
    3. ']<' → logprob: -9.508894920349121
    4. ']' → logprob: -9.508894920349121
    5. ']=' → logprob: -9.883894920349121
    6. '<' → logprob: -10.133894920349121
    7. 'cc' → logprob: -12.008894920349121
    8. ']>=' → logprob: -12.133894920349121
    9. ']==' → logprob: -12.383894920349121
    10. '[
' → logprob: -12.508894920349121

Token 580: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02333177998661995
    2. 'cc' → logprob: -3.773331880569458
    3. ' ' → logprob: -10.273331642150879
    4. ' cc' → logprob: -11.023331642150879
    5. '   ' → logprob: -11.773331642150879
    6. 'idx' → logprob: -12.148331642150879
    7. '(cc' → logprob: -12.148331642150879
    8. '
' → logprob: -12.398331642150879
    9. '[' → logprob: -12.523331642150879
    10. 'rr' → logprob: -13.148331642150879

Token 581: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6091856360435486
    2. '[' → logprob: -0.8591856360435486
    3. 'and' → logprob: -4.109185695648193
    4. '<' → logprob: -4.734185695648193
    5. '<=' → logprob: -6.609185695648193
    6. 'cc' → logprob: -6.734185695648193
    7. ' =' → logprob: -7.359185695648193
    8. ' and' → logprob: -7.609185695648193
    9. '>=' → logprob: -7.609185695648193
    10. '==' → logprob: -7.734185695648193

Token 582: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014548459090292454
    2. ' y' → logprob: -4.264548301696777
    3. 'x' → logprob: -8.389548301696777
    4. '   ' → logprob: -10.139548301696777
    5. 'RY' → logprob: -10.514548301696777
    6. 'ry' → logprob: -10.639548301696777
    7. ' x' → logprob: -11.764548301696777
    8. 'yj' → logprob: -12.139548301696777
    9. 'Y' → logprob: -12.264548301696777
    10. '           ' → logprob: -12.389548301696777

Token 583: '[' (ID: 58)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.014325924217700958
    2. '[' → logprob: -4.264326095581055
    3. 'RY' → logprob: -9.639326095581055
    4. '[R' → logprob: -9.889326095581055
    5. 'Ry' → logprob: -11.264326095581055
    6. 'idx' → logprob: -11.764326095581055
    7. '[k' → logprob: -12.139326095581055
    8. '           ' → logprob: -12.264326095581055
    9. '       ' → logprob: -13.014326095581055
    10. 'R' → logprob: -13.139326095581055

Token 584: 'RY' (ID: 26085)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0038125456776469946
    2. 'cc' → logprob: -6.253812313079834
    3. '[idx' → logprob: -6.378812313079834
    4. ' idx' → logprob: -9.378812789916992
    5. 'k' → logprob: -10.378812789916992
    6. '[' → logprob: -11.128812789916992
    7. 'RY' → logprob: -11.253812789916992
    8. 'rr' → logprob: -12.003812789916992
    9. '(idx' → logprob: -12.253812789916992
    10. '```' → logprob: -12.253812789916992

Token 585: 'J' (ID: 41)
  Prédit: 'J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.018871966749429703
    2. '[idx' → logprob: -4.268871784210205
    3. 'k' → logprob: -6.018871784210205
    4. 'idx' → logprob: -6.518871784210205
    5. '[' → logprob: -8.143872261047363
    6. 'j' → logprob: -8.518872261047363
    7. '```' → logprob: -9.268872261047363
    8. ' idx' → logprob: -9.643872261047363
    9. '...' → logprob: -10.518872261047363
    10. '[k' → logprob: -10.893872261047363

Token 586: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.40759655833244324
    2. 'cc' → logprob: -1.1575965881347656
    3. 'J' → logprob: -4.407596588134766
    4. '[idx' → logprob: -5.157596588134766
    5. 'j' → logprob: -6.907596588134766
    6. 'idx' → logprob: -7.407596588134766
    7. 'k' → logprob: -8.532596588134766
    8. 'jj' → logprob: -8.532596588134766
    9. '```' → logprob: -8.657596588134766
    10. ' cc' → logprob: -9.157596588134766

Token 587: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.023224975913763046
    2. 'idx' → logprob: -4.273224830627441
    3. 'J' → logprob: -5.273224830627441
    4. 'k' → logprob: -5.898224830627441
    5. 'j' → logprob: -7.023224830627441
    6. '[' → logprob: -9.773224830627441
    7. 'jj' → logprob: -9.773224830627441
    8. '[idx' → logprob: -10.023224830627441
    9. ' cc' → logprob: -10.773224830627441
    10. 'ck' → logprob: -11.398224830627441

Token 588: ']+' (ID: 15344)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02085004188120365
    2. 'cc' → logprob: -3.8958499431610107
    3. '[idx' → logprob: -8.64585018157959
    4. '][' → logprob: -9.52085018157959
    5. 'idx' → logprob: -10.64585018157959
    6. '```' → logprob: -10.89585018157959
    7. '(cc' → logprob: -12.64585018157959
    8. ' cc' → logprob: -12.64585018157959
    9. '[k' → logprob: -13.77085018157959
    10. '[c' → logprob: -13.89585018157959

Token 589: '1' (ID: 16)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.03940735012292862
    2. 'idx' → logprob: -3.539407253265381
    3. '[' → logprob: -4.789407253265381
    4. '[idx' → logprob: -7.039407253265381
    5. 'rc' → logprob: -8.414407730102539
    6. ' cc' → logprob: -9.914407730102539
    7. 'rr' → logprob: -10.289407730102539
    8. ' idx' → logprob: -10.789407730102539
    9. 'c' → logprob: -10.914407730102539
    10. '][' → logprob: -11.414407730102539

Token 590: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026331765577197075
    2. '][' → logprob: -3.651331663131714
    3. '```' → logprob: -11.401331901550293
    4. ' [' → logprob: -12.026331901550293
    5. ']' → logprob: -12.276331901550293
    6. 'cc' → logprob: -12.901331901550293
    7. ''][' → logprob: -13.651331901550293
    8. '>[' → logprob: -13.651331901550293
    9. '}[' → logprob: -13.651331901550293
    10. '"][' → logprob: -14.401331901550293

Token 591: 'idx' (ID: 13196)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.071426160633564
    2. 'idx' → logprob: -2.6964261531829834
    3. 'rc' → logprob: -7.3214263916015625
    4. 'RY' → logprob: -7.8214263916015625
    5. 'rr' → logprob: -8.446426391601562
    6. 'ry' → logprob: -9.946426391601562
    7. 'rx' → logprob: -11.071426391601562
    8. '[' → logprob: -11.196426391601562
    9. '   ' → logprob: -11.321426391601562
    10. '[idx' → logprob: -11.321426391601562

Token 592: '2' (ID: 17)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.32310038805007935
    2. '2' → logprob: -1.3231003284454346
    3. '1' → logprob: -5.073100566864014
    4. 'idx' → logprob: -5.948100566864014
    5. 'rc' → logprob: -8.448100090026855
    6. '[' → logprob: -8.823100090026855
    7. '```' → logprob: -9.073100090026855
    8. 'rr' → logprob: -9.323100090026855
    9. '(cc' → logprob: -9.573100090026855
    10. ' cc' → logprob: -10.073100090026855

Token 593: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07901878654956818
    2. '[' → logprob: -2.5790188312530518
    3. ']' → logprob: -9.204018592834473
    4. ' ][' → logprob: -11.579018592834473
    5. '   ' → logprob: -12.829018592834473
    6. ''][' → logprob: -13.329018592834473
    7. '```' → logprob: -13.329018592834473
    8. ']>=' → logprob: -13.329018592834473
    9. ' [' → logprob: -13.579018592834473
    10. 'cc' → logprob: -13.704018592834473

Token 594: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -7.226628895296017e-06
    2. ' cc' → logprob: -12.375007629394531
    3. '[' → logprob: -13.000007629394531
    4. '   ' → logprob: -15.250007629394531
    5. 'c' → logprob: -15.375007629394531
    6. '	cc' → logprob: -16.37500762939453
    7. ']' → logprob: -17.37500762939453
    8. '
' → logprob: -17.37500762939453
    9. ' ' → logprob: -17.87500762939453
    10. 'rr' → logprob: -18.00000762939453

Token 595: ']>=' (ID: 185954)
  Prédit: ']>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>=' → logprob: -0.0006008113850839436
    2. ']' → logprob: -7.625600814819336
    3. ']>' → logprob: -9.250600814819336
    4. '>=' → logprob: -11.875600814819336
    5. ']==' → logprob: -12.375600814819336
    6. ']<' → logprob: -13.125600814819336
    7. ' ]' → logprob: -14.125600814819336
    8. '[' → logprob: -14.125600814819336
    9. ')>=' → logprob: -14.375600814819336
    10. ']!=' → logprob: -14.750600814819336

Token 596: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003155495971441269
    2. 'cc' → logprob: -6.253155708312988
    3. 'rr' → logprob: -7.003155708312988
    4. 'idx' → logprob: -9.253155708312988
    5. '>=' → logprob: -10.128155708312988
    6. 'rc' → logprob: -10.128155708312988
    7. '
' → logprob: -10.503155708312988
    8. ']>=' → logprob: -10.753155708312988
    9. ' ' → logprob: -10.878155708312988
    10. '   ' → logprob: -11.003155708312988

Token 597: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9205726385116577
    2. '                   ' → logprob: -1.5455726385116577
    3. ':
' → logprob: -2.1705727577209473
    4. ']=' → logprob: -2.2955727577209473
    5. ']:
' → logprob: -3.1705727577209473
    6. '           ' → logprob: -3.2955727577209473
    7. '                       ' → logprob: -3.2955727577209473
    8. ']==' → logprob: -4.045572757720947
    9. ':' → logprob: -4.170572757720947
    10. '==' → logprob: -5.795572757720947

Token 598: '                   ' (ID: 699)
  Prédit: 'RY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RY' → logprob: -0.8112599849700928
    2. '               ' → logprob: -0.9362599849700928
    3. '                   ' → logprob: -2.0612599849700928
    4. '                       ' → logprob: -3.9362599849700928
    5. '           ' → logprob: -4.311260223388672
    6. 'cc' → logprob: -6.936260223388672
    7. '                           ' → logprob: -7.186260223388672
    8. '   ' → logprob: -7.936260223388672
    9. '```' → logprob: -8.186260223388672
    10. '       ' → logprob: -8.811260223388672

Token 599: ' R' (ID: 460)
  Prédit: 'RY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RY' → logprob: -0.001032691914588213
    2. '           ' → logprob: -7.501032829284668
    3. '               ' → logprob: -8.751032829284668
    4. '                       ' → logprob: -8.876032829284668
    5. '                   ' → logprob: -9.376032829284668
    6. '       ' → logprob: -9.876032829284668
    7. '   ' → logprob: -11.001032829284668
    8. ' R' → logprob: -11.001032829284668
    9. 'R' (adapté à ' R') → logprob: -11.626032829284668
    10. '                           ' → logprob: -14.751032829284668

Token 600: 'Y' (ID: 56)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.16060905158519745
    2. 'Y' → logprob: -1.9106090068817139
    3. '=' → logprob: -9.598109245300293
    4. '+' → logprob: -10.285609245300293
    5. '[' → logprob: -10.285609245300293
    6. 'OJ' → logprob: -10.348109245300293
    7. 'cc' → logprob: -10.785609245300293
    8. ')' → logprob: -11.535609245300293
    9. 'MJ' → logprob: -11.660609245300293
    10. 'RJ' → logprob: -11.723109245300293

Token 601: 'J' (ID: 41)
  Prédit: 'J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -1.981667537620524e-06
    2. 'JJ' → logprob: -14.500001907348633
    3. 'j' → logprob: -14.625001907348633
    4. 'cc' → logprob: -15.625001907348633
    5. '           ' → logprob: -15.750001907348633
    6. ' J' → logprob: -16.125001907348633
    7. '[' → logprob: -16.375001907348633
    8. '```' → logprob: -16.500001907348633
    9. '   ' → logprob: -16.625001907348633
    10. 'RJ' → logprob: -17.625001907348633

Token 602: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.392202976712724e-06
    2. '=' → logprob: -13.000006675720215
    3. '           ' → logprob: -13.500006675720215
    4. 'cc' → logprob: -13.500006675720215
    5. '```' → logprob: -14.875006675720215
    6. '       ' → logprob: -15.250006675720215
    7. '   ' → logprob: -15.500006675720215
    8. '               ' → logprob: -15.625006675720215
    9. '          ' → logprob: -16.5000057220459
    10. '][' → logprob: -17.0000057220459

Token 603: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -9.17420256882906e-05
    2. 'idx' → logprob: -9.375091552734375
    3. ' cc' → logprob: -12.375091552734375
    4. 'rr' → logprob: -14.000091552734375
    5. '   ' → logprob: -14.375091552734375
    6. 'rc' → logprob: -14.875091552734375
    7. 'c' → logprob: -15.125091552734375
    8. '[' → logprob: -15.250091552734375
    9. 'ry' → logprob: -16.125091552734375
    10. 'ct' → logprob: -17.375091552734375

Token 604: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47450557351112366
    2. ']=' → logprob: -0.9745055437088013
    3. ')=' → logprob: -7.974505424499512
    4. ']' → logprob: -10.349505424499512
    5. '}=' → logprob: -11.474505424499512
    6. '=y' → logprob: -11.599505424499512
    7. ' =' → logprob: -11.724505424499512
    8. ']+=' → logprob: -11.974505424499512
    9. 'cc' → logprob: -12.099505424499512
    10. 'RY' → logprob: -12.599505424499512

Token 605: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00014323067443910986
    2. ' y' → logprob: -8.875143051147461
    3. '   ' → logprob: -13.375143051147461
    4. '	y' → logprob: -14.500143051147461
    5. 'x' → logprob: -14.875143051147461
    6. '    ' → logprob: -15.750143051147461
    7. ' ' → logprob: -16.00014305114746
    8. '  ' → logprob: -16.00014305114746
    9. '[y' → logprob: -16.50014305114746
    10. 'y's' → logprob: -16.50014305114746

Token 606: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.843177233240567e-05
    2. '[idx' → logprob: -11.000018119812012
    3. '[R' → logprob: -14.000018119812012
    4. '[i' → logprob: -14.750018119812012
    5. 'RY' → logprob: -15.375018119812012
    6. '   ' → logprob: -17.000019073486328
    7. '```' → logprob: -17.125019073486328
    8. '[[' → logprob: -17.500019073486328
    9. 'idx' → logprob: -17.750019073486328
    10. '       ' → logprob: -18.125019073486328

Token 607: 'RY' (ID: 26085)
  Prédit: 'RY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RY' → logprob: -0.07890598475933075
    2. '[' → logprob: -2.5789060592651367
    3. '[R' → logprob: -11.703906059265137
    4. '[idx' → logprob: -12.453906059265137
    5. 'ry' → logprob: -13.953906059265137
    6. 'R' → logprob: -14.203906059265137
    7. 'k' → logprob: -14.328906059265137
    8. 'idx' → logprob: -14.953906059265137
    9. '   ' → logprob: -14.953906059265137
    10. 'YR' → logprob: -15.453906059265137

Token 608: 'J' (ID: 41)
  Prédit: 'J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.0029033010359853506
    2. '[' → logprob: -5.877903461456299
    3. '   ' → logprob: -10.87790298461914
    4. '           ' → logprob: -11.37790298461914
    5. '[idx' → logprob: -11.37790298461914
    6. 'idx' → logprob: -11.87790298461914
    7. 'RY' → logprob: -12.00290298461914
    8. '       ' → logprob: -12.12790298461914
    9. 'cc' → logprob: -12.12790298461914
    10. 'Y' → logprob: -12.50290298461914

Token 609: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013181759044528008
    2. 'J' → logprob: -4.388181686401367
    3. 'RY' → logprob: -8.263181686401367
    4. '[idx' → logprob: -8.638181686401367
    5. '   ' → logprob: -9.638181686401367
    6. 'idx' → logprob: -10.513181686401367
    7. '       ' → logprob: -10.513181686401367
    8. 'k' → logprob: -10.638181686401367
    9. '           ' → logprob: -11.013181686401367
    10. 'cc' → logprob: -11.388181686401367

Token 610: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.11494944244623184
    2. 'idx' → logprob: -2.2399494647979736
    3. 'RY' → logprob: -6.8649492263793945
    4. '[' → logprob: -7.6149492263793945
    5. '   ' → logprob: -8.489949226379395
    6. '[idx' → logprob: -9.364949226379395
    7. ' ' → logprob: -9.614949226379395
    8. ' idx' → logprob: -10.614949226379395
    9. '     ' → logprob: -10.864949226379395
    10. 'J' → logprob: -10.989949226379395

Token 611: ']+' (ID: 15344)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10766171663999557
    2. '][' → logprob: -2.732661724090576
    3. '+' → logprob: -3.857661724090576
    4. ']+' → logprob: -4.232661724090576
    5. ']' → logprob: -6.857661724090576
    6. '[idx' → logprob: -8.607661247253418
    7. 'idx' → logprob: -9.857661247253418
    8. '2' → logprob: -10.982661247253418
    9. '   ' → logprob: -10.982661247253418
    10. 'cc' → logprob: -11.482661247253418

Token 612: '1' (ID: 16)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.19291627407073975
    2. '2' → logprob: -2.8179163932800293
    3. 'cc' → logprob: -2.8179163932800293
    4. '1' → logprob: -3.4429163932800293
    5. '[idx' → logprob: -4.442916393280029
    6. '[' → logprob: -4.817916393280029
    7. '0' → logprob: -6.567916393280029
    8. ' idx' → logprob: -7.442916393280029
    9. '   ' → logprob: -7.567916393280029
    10. 'rc' → logprob: -8.442915916442871

Token 613: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07912485301494598
    2. '[' → logprob: -2.579124927520752
    3. '[idx' → logprob: -9.204124450683594
    4. 'cc' → logprob: -9.329124450683594
    5. ']' → logprob: -11.079124450683594
    6. 'idx' → logprob: -11.579124450683594
    7. ''][' → logprob: -12.079124450683594
    8. '"][' → logprob: -12.704124450683594
    9. '   ' → logprob: -12.829124450683594
    10. '```' → logprob: -12.954124450683594

Token 614: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0028515905141830444
    2. 'cc' → logprob: -5.877851486206055
    3. ' idx' → logprob: -10.252851486206055
    4. '[idx' → logprob: -12.252851486206055
    5. '2' → logprob: -12.752851486206055
    6. 'index' → logprob: -14.127851486206055
    7. '   ' → logprob: -14.627851486206055
    8. 'ii' → logprob: -14.627851486206055
    9. '_idx' → logprob: -15.002851486206055
    10. '[' → logprob: -15.127851486206055

Token 615: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2359936684370041
    2. 'cc' → logprob: -2.3609936237335205
    3. 'idx' → logprob: -2.3609936237335205
    4. '[' → logprob: -4.3609938621521
    5. '[idx' → logprob: -4.9859938621521
    6. 'rc' → logprob: -7.1109938621521
    7. 'rr' → logprob: -7.2359938621521
    8. '_idx' → logprob: -9.235993385314941
    9. '][' → logprob: -10.110993385314941
    10. '   ' → logprob: -10.235993385314941

Token 616: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0012182132340967655
    2. '[' → logprob: -6.751218318939209
    3. ']' → logprob: -10.25121784210205
    4. ' ][' → logprob: -12.50121784210205
    5. ''][' → logprob: -12.75121784210205
    6. '"][' → logprob: -13.50121784210205
    7. '       ' → logprob: -13.62621784210205
    8. '           ' → logprob: -14.12621784210205
    9. '   ' → logprob: -14.50121784210205
    10. '`' → logprob: -14.62621784210205

Token 617: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -4.60414821645827e-06
    2. ' cc' → logprob: -12.750004768371582
    3. '[' → logprob: -14.625004768371582
    4. 'RY' → logprob: -15.500004768371582
    5. 'idx' → logprob: -15.625004768371582
    6. '   ' → logprob: -15.875004768371582
    7. 'c' → logprob: -16.000003814697266
    8. '	cc' → logprob: -16.250003814697266
    9. 'rr' → logprob: -16.375003814697266
    10. ' ' → logprob: -16.500003814697266

Token 618: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003764689899981022
    2. ']+' → logprob: -6.003764629364014
    3. ']
' → logprob: -6.753764629364014
    4. 'cc' → logprob: -10.003765106201172
    5. ' ]' → logprob: -11.253765106201172
    6. ']==' → logprob: -11.378765106201172
    7. '])' → logprob: -11.878765106201172
    8. '               ' → logprob: -11.878765106201172
    9. ']+=' → logprob: -11.878765106201172
    10. ']>' → logprob: -12.128765106201172

Token 619: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00041875618626363575
    2. '                   ' → logprob: -8.000418663024902
    3. '           ' → logprob: -9.625418663024902
    4. '              ' → logprob: -12.625418663024902
    5. '	           ' → logprob: -13.250418663024902
    6. 'cc' → logprob: -13.250418663024902
    7. '       ' → logprob: -13.375418663024902
    8. '<|end|>' → logprob: -13.375418663024902
    9. '                       ' → logprob: -13.750418663024902
    10. '                ' → logprob: -14.000418663024902

Token 620: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' (adapté à ' cc') → logprob: -0.20344990491867065
    2. '               ' → logprob: -1.7034499645233154
    3. '           ' → logprob: -7.453449726104736
    4. ' cc' → logprob: -7.578449726104736
    5. '                   ' → logprob: -7.578449726104736
    6. '	cc' → logprob: -8.328450202941895
    7. '_cc' → logprob: -9.578450202941895
    8. '       ' → logprob: -10.078450202941895
    9. '   ' → logprob: -10.203450202941895
    10. '(cc' → logprob: -10.703450202941895

Token 621: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -1.1875571544806007e-05
    2. ' +=' → logprob: -12.500011444091797
    3. '+' → logprob: -13.000011444091797
    4. ']+=' → logprob: -13.000011444091797
    5. '=' → logprob: -13.250011444091797
    6. '   ' → logprob: -13.500011444091797
    7. '```' → logprob: -15.250011444091797
    8. '+
' → logprob: -15.750011444091797
    9. '++' → logprob: -18.250011444091797
    10. '       ' → logprob: -18.625011444091797

Token 622: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.37500286102295
    3. '+' → logprob: -14.00000286102295
    4. '   ' → logprob: -16.000001907348633
    5. '```' → logprob: -16.500001907348633
    6. '
' → logprob: -17.562501907348633
    7. '=' → logprob: -17.875001907348633
    8. '           ' → logprob: -18.062501907348633
    9. '       ' → logprob: -18.250001907348633
    10. '2' → logprob: -18.312501907348633

Token 623: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005965884309262037
    2. 'k' → logprob: -5.255965709686279
    3. '```' → logprob: -8.630966186523438
    4. '
' → logprob: -9.005966186523438
    5. '<|end|>' → logprob: -9.130966186523438
    6. '       ' → logprob: -9.255966186523438
    7. ' k' → logprob: -9.630966186523438
    8. '    
' → logprob: -10.755966186523438
    9. '#' → logprob: -10.880966186523438
    10. '  ' → logprob: -11.130966186523438

Token 624: '           ' (ID: 352)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00038264848990365863
    2. ' k' → logprob: -8.625382423400879
    3. '   ' → logprob: -9.125382423400879
    4. '_k' → logprob: -10.500382423400879
    5. '```' → logprob: -11.250382423400879
    6. 'flag' → logprob: -11.500382423400879
    7. '++' → logprob: -11.875382423400879
    8. ')' → logprob: -11.875382423400879
    9. ',k' → logprob: -12.000382423400879
    10. '	k' → logprob: -12.000382423400879

Token 625: ' jj' (ID: 79791)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10261992365121841
    2. ')' → logprob: -2.4776198863983154
    3. ' k' → logprob: -4.4776201248168945
    4. ',k' → logprob: -7.2276201248168945
    5. ')
' → logprob: -7.7276201248168945
    6. '   ' → logprob: -8.102620124816895
    7. '\n' → logprob: -8.727620124816895
    8. '           ' → logprob: -9.352620124816895
    9. '_k' → logprob: -9.852620124816895
    10. ']' → logprob: -9.977620124816895

Token 626: '=w' (ID: 147163)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08976949006319046
    2. '+=' → logprob: -2.4647696018218994
    3. '=j' → logprob: -8.33976936340332
    4. ' +=' → logprob: -8.46476936340332
    5. ' =' → logprob: -8.46476936340332
    6. '+' → logprob: -9.71476936340332
    7. '=[' → logprob: -10.21476936340332
    8. '++' → logprob: -11.71476936340332
    9. '[' → logprob: -11.71476936340332
    10. ',j' → logprob: -11.96476936340332

Token 627: '-' (ID: 12)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4756304621696472
    2. '[j' → logprob: -2.225630521774292
    3. '+' → logprob: -2.475630521774292
    4. '[idx' → logprob: -3.225630521774292
    5. '<|end|>' → logprob: -3.475630521774292
    6. '[k' → logprob: -3.975630521774292
    7. '=' → logprob: -4.100630283355713
    8. '           ' → logprob: -4.600630283355713
    9. '-' → logprob: -4.725630283355713
    10. '[next' → logprob: -4.975630283355713

Token 628: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003096023283433169
    2. '2' → logprob: -8.250309944152832
    3. ' ' → logprob: -10.250309944152832
    4. '           ' → logprob: -12.625309944152832
    5. '   ' → logprob: -13.000309944152832
    6. '+' → logprob: -13.625309944152832
    7. '                   ' → logprob: -14.250309944152832
    8. '```' → logprob: -14.500309944152832
    9. '...' → logprob: -14.625309944152832
    10. '               ' → logprob: -14.625309944152832

Token 629: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 630: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009324637241661549
    2. 'while' → logprob: -5.759324550628662
    3. ' while' → logprob: -5.759324550628662
    4. '<|end|>' → logprob: -6.009324550628662
    5. '            ' → logprob: -8.50932502746582
    6. '            
' → logprob: -9.38432502746582
    7. '          ' → logprob: -10.13432502746582
    8. '<|end|>' → logprob: -10.50932502746582
    9. '               ' → logprob: -10.88432502746582
    10. ' ' → logprob: -11.25932502746582

Token 631: ' rr' (ID: 54129)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.27616259455680847
    2. '           ' → logprob: -2.151162624359131
    3. ' while' → logprob: -2.151162624359131
    4. '<|end|>' → logprob: -4.901162624359131
    5. '            ' → logprob: -7.901162624359131
    6. '               ' → logprob: -9.401162147521973
    7. '                           ' → logprob: -9.526162147521973
    8. '       ' → logprob: -9.651162147521973
    9. 'for' → logprob: -9.651162147521973
    10. '```' → logprob: -9.901162147521973

Token 632: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007988447323441505
    2. '=j' → logprob: -5.632988452911377
    3. '=w' → logprob: -5.882988452911377
    4. ' =' → logprob: -6.757988452911377
    5. '=k' → logprob: -8.257987976074219
    6. '=row' → logprob: -9.757987976074219
    7. '=x' → logprob: -11.132987976074219
    8. '=r' → logprob: -11.382987976074219
    9. '=v' → logprob: -11.632987976074219
    10. '=i' → logprob: -11.882987976074219

Token 633: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.07227399200201035
    2. 'h' → logprob: -2.6972739696502686
    3. '0' → logprob: -7.197274208068848
    4. 'w' → logprob: -7.447274208068848
    5. 'rr' → logprob: -8.322274208068848
    6. 'k' → logprob: -8.322274208068848
    7. 'jj' → logprob: -8.697274208068848
    8. ' idx' → logprob: -9.322274208068848
    9. 'hh' → logprob: -9.572274208068848
    10. 'hj' → logprob: -10.197274208068848

Token 634: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.36680537462234497
    2. '1' → logprob: -1.2418053150177002
    3. '+' → logprob: -4.241805553436279
    4. '           ' → logprob: -6.741805553436279
    5. '[idx' → logprob: -6.991805553436279
    6. 'idx' → logprob: -7.616805553436279
    7. '[' → logprob: -7.866805553436279
    8. '=' → logprob: -7.866805553436279
    9. '   ' → logprob: -9.491805076599121
    10. '_idx' → logprob: -9.741805076599121

Token 635: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6038063764572144
    2. 'while' → logprob: -0.8538063764572144
    3. ' while' → logprob: -3.978806495666504
    4. '<|end|>' → logprob: -5.978806495666504
    5. '
' → logprob: -6.103806495666504
    6. ',' → logprob: -7.353806495666504
    7. '            ' → logprob: -7.478806495666504
    8. '	while' → logprob: -7.603806495666504
    9. '       ' → logprob: -7.853806495666504
    10. '=' → logprob: -8.103806495666504

Token 636: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03670213744044304
    2. '<|end|>' → logprob: -3.7867021560668945
    3. ' while' → logprob: -5.2867021560668945
    4. 'while' → logprob: -5.6617021560668945
    5. '               ' → logprob: -7.4117021560668945
    6. ',' → logprob: -7.4117021560668945
    7. '            ' → logprob: -7.5367021560668945
    8. '```' → logprob: -7.9117021560668945
    9. '<|end|>' → logprob: -7.9117021560668945
    10. '       ' → logprob: -8.036702156066895

Token 637: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5340223908424377
    2. 'while' (adapté à ' while') → logprob: -1.409022331237793
    3. '           ' → logprob: -1.784022331237793
    4. '            ' → logprob: -8.034022331237793
    5. '```' → logprob: -8.159022331237793
    6. '               ' → logprob: -8.409022331237793
    7. '	while' → logprob: -8.534022331237793
    8. '<|end|>' → logprob: -8.909022331237793
    9. '       ' → logprob: -9.659022331237793
    10. ' if' → logprob: -10.284022331237793

Token 638: ' rr' (ID: 54129)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.32260802388191223
    2. ' rr' → logprob: -1.3226079940795898
    3. 'jj' → logprob: -5.19760799407959
    4. ' jj' → logprob: -5.69760799407959
    5. '(rr' → logprob: -8.07260799407959
    6. 'rx' → logprob: -10.07260799407959
    7. 'jr' → logprob: -10.94760799407959
    8. 'RR' → logprob: -11.44760799407959
    9. ' rx' → logprob: -11.69760799407959
    10. ' ' → logprob: -12.19760799407959

Token 639: '<h' (ID: 23843)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.005013513378798962
    2. '<h' → logprob: -5.505013465881348
    3. '<' → logprob: -7.505013465881348
    4. ' <=' → logprob: -8.255013465881348
    5. '>=' → logprob: -9.505013465881348
    6. '<w' → logprob: -10.755013465881348
    7. '[h' → logprob: -11.880013465881348
    8. '<len' → logprob: -13.005013465881348
    9. '<ll' → logprob: -13.255013465881348
    10. '<n' → logprob: -13.255013465881348

Token 640: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08729008585214615
    2. 'and' → logprob: -2.587290048599243
    3. '               ' → logprob: -5.587290287017822
    4. ':
' → logprob: -6.212290287017822
    5. '           ' → logprob: -6.587290287017822
    6. '   ' → logprob: -7.712290287017822
    7. '<=' → logprob: -8.712289810180664
    8. '=' → logprob: -9.462289810180664
    9. '                   ' → logprob: -9.462289810180664
    10. '       ' → logprob: -9.712289810180664

Token 641: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00036502102739177644
    2. '           ' → logprob: -9.000365257263184
    3. '```' → logprob: -9.875365257263184
    4. '                ' → logprob: -10.000365257263184
    5. ' if' → logprob: -10.375365257263184
    6. '              ' → logprob: -10.500365257263184
    7. '                   ' → logprob: -10.625365257263184
    8. '   ' → logprob: -10.875365257263184
    9. '       ' → logprob: -11.375365257263184
    10. '            ' → logprob: -11.375365257263184

Token 642: ' while' (ID: 2049)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04327411949634552
    2. ' if' → logprob: -3.293274164199829
    3. 'if' → logprob: -6.04327392578125
    4. '                ' → logprob: -7.04327392578125
    5. '   ' → logprob: -7.29327392578125
    6. '                   ' → logprob: -7.41827392578125
    7. ' while' → logprob: -8.79327392578125
    8. '           ' → logprob: -8.79327392578125
    9. '            ' → logprob: -9.54327392578125
    10. ' ' → logprob: -9.66827392578125

Token 643: ' jj' (ID: 79791)
  Prédit: 'jj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jj' → logprob: -0.39018478989601135
    2. ' jj' → logprob: -1.140184760093689
    3. 'RX' → logprob: -6.8901848793029785
    4. 'RY' → logprob: -7.2651848793029785
    5. ' RX' → logprob: -7.3901848793029785
    6. '   ' → logprob: -8.76518440246582
    7. ' rx' → logprob: -9.39018440246582
    8. ' ' → logprob: -9.51518440246582
    9. 'j' → logprob: -9.51518440246582
    10. 'rx' → logprob: -9.76518440246582

Token 644: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.39226704835891724
    2. '>' → logprob: -1.1422669887542725
    3. '>w' → logprob: -5.267267227172852
    4. '>x' → logprob: -9.017267227172852
    5. '>-' → logprob: -9.892267227172852
    6. ' >=' → logprob: -11.017267227172852
    7. ' >' → logprob: -11.392267227172852
    8. '>
' → logprob: -12.142267227172852
    9. '<w' → logprob: -12.517267227172852
    10. '≥' → logprob: -13.142267227172852

Token 645: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.38693222403526306
    2. '0' → logprob: -1.2619322538375854
    3. 'rr' → logprob: -3.386932134628296
    4. 'ry' → logprob: -7.011932373046875
    5. 'w' → logprob: -7.386932373046875
    6. 'rx' → logprob: -7.511932373046875
    7. '(idx' → logprob: -7.636932373046875
    8. 'l' → logprob: -8.011932373046875
    9. ' idx' → logprob: -8.511932373046875
    10. 'cc' → logprob: -8.511932373046875

Token 646: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004634392389561981
    2. '1' → logprob: -7.750463485717773
    3. '0' → logprob: -10.375463485717773
    4. '```' → logprob: -15.250463485717773
    5. 'idx' → logprob: -15.625463485717773
    6. '   ' → logprob: -15.875463485717773
    7. '
' → logprob: -16.437963485717773
    8. 'x' → logprob: -16.625463485717773
    9. '           ' → logprob: -16.625463485717773
    10. '=' → logprob: -16.687963485717773

Token 647: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3134322166442871
    2. 'and' → logprob: -1.313432216644287
    3. '                   ' → logprob: -9.938432693481445
    4. ':
' → logprob: -10.063432693481445
    5. '               ' → logprob: -10.438432693481445
    6. '<|end|>' → logprob: -11.063432693481445
    7. ':' → logprob: -11.438432693481445
    8. '                       ' → logprob: -11.563432693481445
    9. '```' → logprob: -13.063432693481445
    10. '           ' → logprob: -13.438432693481445

Token 648: ' R' (ID: 460)
  Prédit: 'RX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'RX' → logprob: -0.45494163036346436
    2. 'x' → logprob: -1.4549416303634644
    3. 'RR' → logprob: -2.704941749572754
    4. 'rr' → logprob: -3.329941749572754
    5. 'jj' → logprob: -4.704941749572754
    6. 'RY' → logprob: -4.954941749572754
    7. '(rr' → logprob: -5.704941749572754
    8. ' RX' → logprob: -6.204941749572754
    9. 'rx' → logprob: -6.454941749572754
    10. 'y' → logprob: -6.704941749572754

Token 649: 'Y' (ID: 56)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001563065918162465
    2. 'R' → logprob: -6.50156307220459
    3. 'j' → logprob: -10.25156307220459
    4. 'rr' → logprob: -11.62656307220459
    5. '```' → logprob: -12.62656307220459
    6. '>' → logprob: -13.50156307220459
    7. 'RX' → logprob: -13.62656307220459
    8. 'x' → logprob: -13.62656307220459
    9. '
' → logprob: -14.12656307220459
    10. 'jj' → logprob: -14.12656307220459

Token 650: 'J' (ID: 41)
  Prédit: 'J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -6.2729995988775045e-06
    2. 'j' → logprob: -12.875006675720215
    3. '[' → logprob: -13.375006675720215
    4. 'JJ' → logprob: -13.500006675720215
    5. ' J' → logprob: -15.250006675720215
    6. 'jj' → logprob: -16.1250057220459
    7. '
' → logprob: -16.3750057220459
    8. '[J' → logprob: -17.0000057220459
    9. '(' → logprob: -17.5000057220459
    10. '```' → logprob: -17.6250057220459

Token 651: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.07889904081821442
    2. '[' → logprob: -2.5788991451263428
    3. 'jj' → logprob: -12.203899383544922
    4. '
' → logprob: -12.953899383544922
    5. '[
' → logprob: -14.203899383544922
    6. '```' → logprob: -15.203899383544922
    7. ' [' → logprob: -15.453899383544922
    8. ' jj' → logprob: -15.828899383544922
    9. '[r' → logprob: -15.828899383544922
    10. '   ' → logprob: -15.953899383544922

Token 652: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.704065213445574e-05
    2. '[' → logprob: -10.750046730041504
    3. 'jj' → logprob: -11.375046730041504
    4. '[j' → logprob: -11.625046730041504
    5. '[
' → logprob: -12.875046730041504
    6. ']' → logprob: -13.125046730041504
    7. '```' → logprob: -16.00004768371582
    8. '
' → logprob: -16.12504768371582
    9. '][' → logprob: -16.37504768371582
    10. 'J' → logprob: -17.00004768371582

Token 653: ']<' (ID: 80424)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.7777418494224548
    2. ']>=' → logprob: -1.2777419090270996
    3. '[' → logprob: -1.6527419090270996
    4. '<' → logprob: -2.9027419090270996
    5. ']<' → logprob: -4.4027419090271
    6. ']' → logprob: -6.9027419090271
    7. '>' → logprob: -7.9027419090271
    8. '[j' → logprob: -8.152741432189941
    9. '[r' → logprob: -8.652741432189941
    10. '```' → logprob: -8.777741432189941

Token 654: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.058789245784282684
    2. 'idx' → logprob: -2.9337892532348633
    3. 'rx' → logprob: -6.308789253234863
    4. 'RR' → logprob: -7.308789253234863
    5. 'ry' → logprob: -8.058789253234863
    6. 'x' → logprob: -8.183789253234863
    7. 'h' → logprob: -8.308789253234863
    8. 'r' → logprob: -8.808789253234863
    9. '0' → logprob: -9.558789253234863
    10. 'RX' → logprob: -9.683789253234863

Token 655: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7107141613960266
    2. ':' → logprob: -1.2107141017913818
    3. ' and' → logprob: -1.7107141017913818
    4. '               ' → logprob: -4.710714340209961
    5. '                   ' → logprob: -5.210714340209961
    6. '):
' → logprob: -5.335714340209961
    7. '```' → logprob: -5.960714340209961
    8. 'and' → logprob: -6.335714340209961
    9. '-' → logprob: -7.085714340209961
    10. '           ' → logprob: -7.085714340209961

Token 656: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.044322673231363297
    2. '               ' → logprob: -3.2943227291107178
    3. ' rr' → logprob: -5.794322490692139
    4. 'rr' → logprob: -6.919322490692139
    5. '```' → logprob: -6.919322490692139
    6. '                ' → logprob: -8.044322967529297
    7. '   ' → logprob: -8.169322967529297
    8. '                       ' → logprob: -8.419322967529297
    9. '                  ' → logprob: -9.169322967529297
    10. '                    ' → logprob: -10.044322967529297

Token 657: ' jj' (ID: 79791)
  Prédit: 'jj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jj' (adapté à ' jj') → logprob: -5.037835580878891e-05
    2. ' jj' → logprob: -10.12505054473877
    3. 'j' → logprob: -12.00005054473877
    4. '                   ' → logprob: -12.87505054473877
    5. '```' → logprob: -14.50005054473877
    6. '           ' → logprob: -14.87505054473877
    7. '               ' → logprob: -15.00005054473877
    8. '   ' → logprob: -15.50005054473877
    9. 'jr' → logprob: -17.125049591064453
    10. '                                   ' → logprob: -17.250049591064453

Token 658: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0009554093703627586
    2. '-' → logprob: -7.000955581665039
    3. ' -=' → logprob: -10.125955581665039
    4. '+=' → logprob: -13.500955581665039
    5. '=' → logprob: -13.750955581665039
    6. '```' → logprob: -14.625955581665039
    7. '           ' → logprob: -15.000955581665039
    8. '   ' → logprob: -15.500955581665039
    9. '-
' → logprob: -16.00095558166504
    10. '               ' → logprob: -16.87595558166504

Token 659: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -16.375001907348633
    4. '```' → logprob: -16.875001907348633
    5. '
' → logprob: -18.812501907348633
    6. '１' → logprob: -19.500001907348633
    7. '                   ' → logprob: -19.875001907348633
    8. '       ' → logprob: -19.875001907348633
    9. '           ' → logprob: -19.875001907348633
    10. '۱' → logprob: -19.937501907348633

Token 660: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07393402606248856
    2. '<|end|>' → logprob: -2.6989340782165527
    3. '                   ' → logprob: -6.823934078216553
    4. '```' → logprob: -7.323934078216553
    5. '           ' → logprob: -7.823934078216553
    6. '<|end|>' → logprob: -7.948934078216553
    7. ')' → logprob: -8.073933601379395
    8. '                ' → logprob: -8.323933601379395
    9. '       ' → logprob: -8.698933601379395
    10. '              ' → logprob: -9.073933601379395

Token 661: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011921310797333717
    2. '```' → logprob: -5.136921405792236
    3. '                   ' → logprob: -5.636921405792236
    4. '<|end|>' → logprob: -6.761921405792236
    5. '                ' → logprob: -8.136920928955078
    6. '           ' → logprob: -9.011920928955078
    7. '                               ' → logprob: -9.261920928955078
    8. '              ' → logprob: -9.511920928955078
    9. '                       ' → logprob: -9.636920928955078
    10. '                
' → logprob: -9.761920928955078

Token 662: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5556580424308777
    2. '               ' → logprob: -0.9306580424308777
    3. 'rr' → logprob: -3.5556581020355225
    4. ' if' → logprob: -5.930657863616943
    5. '```' → logprob: -7.680657863616943
    6. '                   ' → logprob: -9.555658340454102
    7. '           ' → logprob: -9.805658340454102
    8. '                ' → logprob: -10.180658340454102
    9. ' rr' → logprob: -10.180658340454102
    10. '(rr' → logprob: -10.930658340454102

Token 663: ' jj' (ID: 79791)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.6618090867996216
    2. 'jj' → logprob: -0.7868090867996216
    3. 'RR' → logprob: -4.661808967590332
    4. 'RY' → logprob: -5.411808967590332
    5. ' jj' → logprob: -5.786808967590332
    6. 'RX' → logprob: -5.911808967590332
    7. 'x' → logprob: -6.161808967590332
    8. ' rr' → logprob: -6.411808967590332
    9. '(rr' → logprob: -6.411808967590332
    10. 'ry' → logprob: -6.786808967590332

Token 664: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.47492802143096924
    2. '<' → logprob: -0.9749280214309692
    3. '>' → logprob: -8.97492790222168
    4. ' >=' → logprob: -9.09992790222168
    5. '<=' → logprob: -9.09992790222168
    6. '[' → logprob: -9.22492790222168
    7. '<n' → logprob: -9.47492790222168
    8. ' <' → logprob: -9.84992790222168
    9. '<len' → logprob: -10.09992790222168
    10. '<m' → logprob: -10.59992790222168

Token 665: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0004305500478949398
    2. 'l' → logprob: -8.2504301071167
    3. '0' → logprob: -9.0004301071167
    4. ' idx' → logprob: -10.1254301071167
    5. '   ' → logprob: -13.8754301071167
    6. 'rr' → logprob: -13.8754301071167
    7. 'w' → logprob: -14.5004301071167
    8. '(idx' → logprob: -14.5004301071167
    9. 'cc' → logprob: -14.7504301071167
    10. '	idx' → logprob: -15.0004301071167

Token 666: '2' (ID: 17)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0038904573302716017
    2. '2' → logprob: -5.628890514373779
    3. ' idx' → logprob: -8.503890037536621
    4. 'rr' → logprob: -9.753890037536621
    5. '   ' → logprob: -11.253890037536621
    6. 'jj' → logprob: -12.503890037536621
    7. '           ' → logprob: -12.878890037536621
    8. '[idx' → logprob: -13.253890037536621
    9. '       ' → logprob: -13.378890037536621
    10. 'ii' → logprob: -13.628890037536621

Token 667: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05141058936715126
    2. 'and' → logprob: -3.301410675048828
    3. ':
' → logprob: -4.551410675048828
    4. ':' → logprob: -6.551410675048828
    5. '                   ' → logprob: -7.051410675048828
    6. '                       ' → logprob: -8.801410675048828
    7. '                           ' → logprob: -9.176410675048828
    8. '               ' → logprob: -9.551410675048828
    9. '==' → logprob: -10.176410675048828
    10. '```' → logprob: -11.551410675048828

Token 668: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02012837678194046
    2. ' if' → logprob: -4.14512825012207
    3. '               ' → logprob: -6.77012825012207
    4. 'if' → logprob: -7.02012825012207
    5. '   ' → logprob: -7.52012825012207
    6. '                       ' → logprob: -7.89512825012207
    7. ' break' → logprob: -8.02012825012207
    8. ' x' → logprob: -8.64512825012207
    9. ' rr' → logprob: -8.77012825012207
    10. ' return' → logprob: -9.52012825012207

Token 669: ' RX' (ID: 55163)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8801588416099548
    2. ' if' → logprob: -0.8801588416099548
    3. 'flag' → logprob: -3.0051589012145996
    4. '                   ' → logprob: -3.5051589012145996
    5. ' flag' → logprob: -4.0051589012146
    6. 'k' → logprob: -4.0051589012146
    7. 'x' → logprob: -4.3801589012146
    8. ' x' → logprob: -4.8801589012146
    9. ' k' → logprob: -5.1301589012146
    10. ' break' → logprob: -5.6301589012146

Token 670: 'J' (ID: 41)
  Prédit: 'J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.004622018430382013
    2. '[' → logprob: -5.379621982574463
    3. '```' → logprob: -14.004622459411621
    4. 'j' → logprob: -15.004622459411621
    5. '[J' → logprob: -15.629622459411621
    6. '[j' → logprob: -15.879622459411621
    7. 'JJ' → logprob: -16.004621505737305
    8. ' J' → logprob: -16.754621505737305
    9. '_j' → logprob: -17.879621505737305
    10. '`' → logprob: -18.004621505737305

Token 671: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015824666479602456
    2. '[j' → logprob: -8.875158309936523
    3. '=' → logprob: -11.250158309936523
    4. 'rr' → logprob: -13.000158309936523
    5. '_rr' → logprob: -13.750158309936523
    6. '=[' → logprob: -14.750158309936523
    7. 'jj' → logprob: -15.250158309936523
    8. ' =' → logprob: -15.625158309936523
    9. '[ii' → logprob: -15.625158309936523
    10. '(rr' → logprob: -16.000158309936523

Token 672: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.000309840717818588
    2. 'jj' → logprob: -8.250309944152832
    3. ' rr' → logprob: -10.375309944152832
    4. 'jr' → logprob: -11.750309944152832
    5. '(rr' → logprob: -12.125309944152832
    6. 'r' → logprob: -13.750309944152832
    7. '[' → logprob: -14.375309944152832
    8. '_rr' → logprob: -14.750309944152832
    9. 'j' → logprob: -15.000309944152832
    10. 'rc' → logprob: -15.625309944152832

Token 673: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13717754185199738
    2. '=max' → logprob: -2.1371774673461914
    3. '=min' → logprob: -5.262177467346191
    4. ']=' → logprob: -5.512177467346191
    5. '=j' → logprob: -7.137177467346191
    6. ' =' → logprob: -9.262177467346191
    7. '>=' → logprob: -9.637177467346191
    8. ')=' → logprob: -12.137177467346191
    9. '=m' → logprob: -12.637177467346191
    10. '=
' → logprob: -12.762177467346191

Token 674: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3136518895626068
    2. 'min' → logprob: -1.3136519193649292
    3. 'jj' → logprob: -8.438652038574219
    4. ' max' → logprob: -9.063652038574219
    5. ' min' → logprob: -9.938652038574219
    6. 'rr' → logprob: -13.188652038574219
    7. 'RR' → logprob: -13.313652038574219
    8. 'j' → logprob: -13.563652038574219
    9. '   ' → logprob: -13.688652038574219
    10. 'w' → logprob: -13.938652038574219

Token 675: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.001052934443578124
    2. '(' → logprob: -6.8760528564453125
    3. '(
' → logprob: -11.376052856445312
    4. 'RX' → logprob: -12.501052856445312
    5. '(rx' → logprob: -13.126052856445312
    6. '(X' → logprob: -13.251052856445312
    7. '(RE' → logprob: -15.126052856445312
    8. ' (' → logprob: -15.251052856445312
    9. '(r' → logprob: -15.751052856445312
    10. ' RX' → logprob: -16.251052856445312

Token 676: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.07993505895137787
    2. 'J' → logprob: -2.579935073852539
    3. '[' → logprob: -7.204935073852539
    4. 'j' → logprob: -8.954935073852539
    5. '[j' → logprob: -10.454935073852539
    6. 'RX' → logprob: -11.079935073852539
    7. ']' → logprob: -11.204935073852539
    8. '(' → logprob: -11.204935073852539
    9. '
' → logprob: -11.329935073852539
    10. 'jj' → logprob: -11.454935073852539

Token 677: 'J' (ID: 41)
  Prédit: 'J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.0005426656571216881
    2. '[' → logprob: -7.625542640686035
    3. 'X' → logprob: -10.875542640686035
    4. 'JJ' → logprob: -11.625542640686035
    5. 'j' → logprob: -12.125542640686035
    6. '[J' → logprob: -12.250542640686035
    7. ' J' → logprob: -12.750542640686035
    8. '```' → logprob: -12.750542640686035
    9. '[j' → logprob: -13.125542640686035
    10. '_j' → logprob: -13.125542640686035

Token 678: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.226628895296017e-06
    2. '[j' → logprob: -12.125007629394531
    3. '```' → logprob: -14.750007629394531
    4. ')' → logprob: -15.125007629394531
    5. 'rr' → logprob: -15.375007629394531
    6. '[
' → logprob: -15.500007629394531
    7. ' [' → logprob: -15.750007629394531
    8. '(rr' → logprob: -15.875007629394531
    9. ')[' → logprob: -16.50000762939453
    10. '_rr' → logprob: -16.50000762939453

Token 679: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.0024814847856760025
    2. '[' → logprob: -6.002481460571289
    3. ' rr' → logprob: -12.877481460571289
    4. '_rr' → logprob: -13.377481460571289
    5. '(rr' → logprob: -13.627481460571289
    6. 'r' → logprob: -14.877481460571289
    7. 'rrrr' → logprob: -16.87748146057129
    8. '```' → logprob: -17.12748146057129
    9. '   ' → logprob: -17.12748146057129
    10. '
' → logprob: -18.00248146057129

Token 680: '],' (ID: 2155)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.33393263816833496
    2. '][' → logprob: -1.958932638168335
    3. '[' → logprob: -2.708932638168335
    4. ',j' → logprob: -3.333932638168335
    5. ',' → logprob: -3.583932638168335
    6. '],' → logprob: -5.458932876586914
    7. ' ,' → logprob: -5.833932876586914
    8. '   ' → logprob: -6.458932876586914
    9. ']' → logprob: -6.708932876586914
    10. '],[' → logprob: -7.583932876586914

Token 681: 'jj' (ID: 41699)
  Prédit: 'jj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jj' → logprob: -4.167648876318708e-05
    2. ' jj' → logprob: -10.500041961669922
    3. 'RY' → logprob: -12.000041961669922
    4. '   ' → logprob: -12.375041961669922
    5. 'jy' → logprob: -13.625041961669922
    6. '    ' → logprob: -14.125041961669922
    7. 'j' → logprob: -14.875041961669922
    8. '  ' → logprob: -15.500041961669922
    9. '           ' → logprob: -15.500041961669922
    10. ' ' → logprob: -15.625041961669922

Token 682: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05531032010912895
    2. ')
' → logprob: -2.9303102493286133
    3. '               ' → logprob: -8.305310249328613
    4. ' )' → logprob: -9.180310249328613
    5. '                   ' → logprob: -10.305310249328613
    6. ' )
' → logprob: -11.055310249328613
    7. '           ' → logprob: -11.555310249328613
    8. ')
' → logprob: -12.555310249328613
    9. ')return' → logprob: -13.055310249328613
    10. ')+' → logprob: -13.180310249328613

Token 683: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.523948907968588e-05
    2. 'rr' → logprob: -10.875035285949707
    3. '                   ' → logprob: -11.250035285949707
    4. '           ' → logprob: -13.750035285949707
    5. '              ' → logprob: -14.375035285949707
    6. '			' → logprob: -15.500035285949707
    7. '       ' → logprob: -15.500035285949707
    8. '                ' → logprob: -15.750035285949707
    9. '                
' → logprob: -15.750035285949707
    10. '```' → logprob: -15.750035285949707

Token 684: ' rr' (ID: 54129)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.729906196298543e-06
    2. '                   ' → logprob: -12.375009536743164
    3. '              ' → logprob: -12.750009536743164
    4. '           ' → logprob: -14.000009536743164
    5. '```' → logprob: -14.375009536743164
    6. '                ' → logprob: -14.500009536743164
    7. '             ' → logprob: -15.500009536743164
    8. '       ' → logprob: -16.000009536743164
    9. '   ' → logprob: -16.125009536743164
    10. '			' → logprob: -16.750009536743164

Token 685: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -2.2961512513575144e-05
    2. ' +=' → logprob: -10.875022888183594
    3. ']+=' → logprob: -12.750022888183594
    4. '+' → logprob: -14.250022888183594
    5. '```' → logprob: -15.500022888183594
    6. '   ' → logprob: -15.875022888183594
    7. '=' → logprob: -17.125022888183594
    8. '+=(' → logprob: -18.375022888183594
    9. '+='' → logprob: -18.875022888183594
    10. '       ' → logprob: -19.000022888183594

Token 686: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -15.37500286102295
    4. '```' → logprob: -15.50000286102295
    5. '+' → logprob: -16.375003814697266
    6. '
' → logprob: -17.625003814697266
    7. '2' → logprob: -17.875003814697266
    8. '0' → logprob: -18.062503814697266
    9. '           ' → logprob: -18.187503814697266
    10. '       ' → logprob: -18.562503814697266

Token 687: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7004032731056213
    2. '<|end|>' → logprob: -0.7004032731056213
    3. '           ' → logprob: -6.200403213500977
    4. ')' → logprob: -6.950403213500977
    5. '
' → logprob: -7.200403213500977
    6. '<|end|>' → logprob: -7.325403213500977
    7. 'k' → logprob: -7.575403213500977
    8. '       ' → logprob: -7.700403213500977
    9. '    
' → logprob: -7.950403213500977
    10. '    ' → logprob: -8.075403213500977

Token 688: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5423185229301453
    2. 'k' → logprob: -0.9173185229301453
    3. ' k' → logprob: -5.167318344116211
    4. '<|end|>' → logprob: -5.292318344116211
    5. '
' → logprob: -5.667318344116211
    6. ')' → logprob: -6.167318344116211
    7. ',k' → logprob: -6.542318344116211
    8. '	k' → logprob: -8.042318344116211
    9. '```' → logprob: -8.667318344116211
    10. '  ' → logprob: -9.042318344116211

Token 689: ' ii' (ID: 28354)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3877897262573242
    2. 'k' → logprob: -1.1377897262573242
    3. '           ' → logprob: -7.887789726257324
    4. '       ' → logprob: -8.512789726257324
    5. ' k' → logprob: -9.137789726257324
    6. '```' → logprob: -9.512789726257324
    7. 'for' → logprob: -10.012789726257324
    8. '	k' → logprob: -10.887789726257324
    9. 'flag' → logprob: -11.262789726257324
    10. '  ' → logprob: -11.387789726257324

Token 690: '=h' (ID: 126422)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6355284452438354
    2. '=' → logprob: -0.7605284452438354
    3. ' +=' → logprob: -6.510528564453125
    4. ',' → logprob: -7.260528564453125
    5. ' =' → logprob: -7.760528564453125
    6. '=i' → logprob: -8.760528564453125
    7. '+' → logprob: -10.135528564453125
    8. '=k' → logprob: -10.135528564453125
    9. '=index' → logprob: -11.010528564453125
    10. '=int' → logprob: -11.760528564453125

Token 691: '-' (ID: 12)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008096295408904552
    2. '=' → logprob: -5.008096218109131
    3. '+' → logprob: -6.758096218109131
    4. ' +=' → logprob: -9.133096694946289
    5. '[' → logprob: -10.633096694946289
    6. '<|end|>' → logprob: -10.633096694946289
    7. '=i' → logprob: -10.883096694946289
    8. '[i' → logprob: -11.383096694946289
    9. ']+=' → logprob: -11.633096694946289
    10. '-=' → logprob: -12.008096694946289

Token 692: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011757015017792583
    2. '2' → logprob: -6.751175880432129
    3. ' ' → logprob: -12.501175880432129
    4. '-' → logprob: -14.126175880432129
    5. '3' → logprob: -14.501175880432129
    6. '```' → logprob: -16.188674926757812
    7. '   ' → logprob: -16.376174926757812
    8. '
' → logprob: -16.438674926757812
    9. '       ' → logprob: -17.501174926757812
    10. ' -' → logprob: -17.563674926757812

Token 693: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 694: '           ' (ID: 352)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.005290323402732611
    2. '           ' → logprob: -5.380290508270264
    3. ' while' → logprob: -7.505290508270264
    4. '   ' → logprob: -10.255290031433105
    5. '=' → logprob: -10.880290031433105
    6. '       ' → logprob: -11.505290031433105
    7. '            
' → logprob: -11.880290031433105
    8. '
' → logprob: -12.005290031433105
    9. '	while' → logprob: -12.005290031433105
    10. 'for' → logprob: -12.130290031433105

Token 695: ' cc' (ID: 22988)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.024608904495835304
    2. 'ii' → logprob: -4.024609088897705
    3. ' while' → logprob: -5.274609088897705
    4. 'idx' → logprob: -7.524609088897705
    5. 'i' → logprob: -8.399608612060547
    6. '
' → logprob: -8.649608612060547
    7. '           ' → logprob: -9.149608612060547
    8. '>=' → logprob: -9.274608612060547
    9. ' ii' → logprob: -9.399608612060547
    10. '=' → logprob: -10.774608612060547

Token 696: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007741317385807633
    2. '=
' → logprob: -7.750773906707764
    3. '=w' → logprob: -9.000774383544922
    4. '=i' → logprob: -9.625774383544922
    5. ',' → logprob: -9.875774383544922
    6. ' =' → logprob: -10.750774383544922
    7. '=h' → logprob: -11.125774383544922
    8. '=index' → logprob: -11.375774383544922
    9. '>=' → logprob: -11.500774383544922
    10. '           ' → logprob: -12.250774383544922

Token 697: 'idx' (ID: 13196)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.06353329867124557
    2. 'idx' → logprob: -2.813533306121826
    3. '0' → logprob: -6.563533306121826
    4. 'h' → logprob: -9.188532829284668
    5. 'k' → logprob: -10.688532829284668
    6. ' w' → logprob: -11.813532829284668
    7. ' idx' → logprob: -12.063532829284668
    8. 'ww' → logprob: -13.063532829284668
    9. '-w' → logprob: -13.188532829284668
    10. '(w' → logprob: -13.313532829284668

Token 698: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4741135239601135
    2. '2' → logprob: -0.9741135239601135
    3. '-' → logprob: -11.474113464355469
    4. 'cc' → logprob: -11.724113464355469
    5. '0' → logprob: -12.349113464355469
    6. 'w' → logprob: -12.849113464355469
    7. '(cc' → logprob: -12.849113464355469
    8. '   ' → logprob: -12.974113464355469
    9. '```' → logprob: -13.349113464355469
    10. ' ' → logprob: -13.349113464355469

Token 699: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.638482391834259
    2. 'while' → logprob: -1.7634823322296143
    3. '
' → logprob: -1.8884823322296143
    4. '=' → logprob: -2.1384823322296143
    5. '>=' → logprob: -4.013482570648193
    6. '               ' → logprob: -5.638482570648193
    7. '=
' → logprob: -6.138482570648193
    8. '            
' → logprob: -6.263482570648193
    9. '            ' → logprob: -6.763482570648193
    10. '       ' → logprob: -6.888482570648193

Token 700: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3095051348209381
    2. 'while' → logprob: -1.6845051050186157
    3. ' while' → logprob: -2.6845052242279053
    4. '=' → logprob: -5.809504985809326
    5. '            
' → logprob: -5.809504985809326
    6. '            ' → logprob: -6.184504985809326
    7. '
' → logprob: -6.434504985809326
    8. ' 
' → logprob: -7.559504985809326
    9. '       ' → logprob: -7.809504985809326
    10. '               ' → logprob: -7.934504985809326

Token 701: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0068957009352743626
    2. '           ' → logprob: -5.506895542144775
    3. ' while' → logprob: -6.006895542144775
    4. 'cc' → logprob: -8.006896018981934
    5. 'ii' → logprob: -11.506896018981934
    6. '               ' → logprob: -12.881896018981934
    7. 'While' → logprob: -13.506896018981934
    8. '0' → logprob: -13.881896018981934
    9. ' cc' → logprob: -14.006896018981934
    10. '>=' → logprob: -14.256896018981934

Token 702: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.2029038965702057
    2. ' cc' → logprob: -1.7029038667678833
    3. 'ii' → logprob: -6.827903747558594
    4. ' ii' → logprob: -7.827903747558594
    5. '(cc' → logprob: -12.577903747558594
    6. '	cc' → logprob: -12.827903747558594
    7. '(ii' → logprob: -14.202903747558594
    8. '_cc' → logprob: -14.952903747558594
    9. '   ' → logprob: -15.702903747558594
    10. '0' → logprob: -15.952903747558594

Token 703: '<w' (ID: 45719)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.00041458409396000206
    2. '<h' → logprob: -8.250414848327637
    3. 'cc' → logprob: -9.875414848327637
    4. '<=' → logprob: -10.125414848327637
    5. '>' → logprob: -10.875414848327637
    6. '=' → logprob: -11.375414848327637
    7. '<w' → logprob: -11.625414848327637
    8. '=h' → logprob: -11.875414848327637
    9. '<' → logprob: -12.375414848327637
    10. '≥' → logprob: -13.000414848327637

Token 704: ':
' (ID: 734)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0007843759376555681
    2. ' >=' → logprob: -8.000783920288086
    3. '<=' → logprob: -8.625783920288086
    4. '>' → logprob: -8.750783920288086
    5. '=' → logprob: -9.500783920288086
    6. '           ' → logprob: -12.000783920288086
    7. ':
' → logprob: -12.125783920288086
    8. '   ' → logprob: -12.250783920288086
    9. '≥' → logprob: -12.500783920288086
    10. '+=' → logprob: -12.625783920288086

Token 705: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00048596507986076176
    2. '   ' → logprob: -8.875486373901367
    3. '           ' → logprob: -8.875486373901367
    4. ' while' → logprob: -10.125486373901367
    5. '```' → logprob: -10.375486373901367
    6. 'cc' → logprob: -10.625486373901367
    7. '                   ' → logprob: -10.750486373901367
    8. 'while' → logprob: -10.750486373901367
    9. ' cc' → logprob: -11.125486373901367
    10. ' if' → logprob: -11.125486373901367

Token 706: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.22483164072036743
    2. 'ii' → logprob: -2.3498315811157227
    3. ' while' → logprob: -2.3498315811157227
    4. ' ii' → logprob: -5.224831581115723
    5. '   ' → logprob: -6.224831581115723
    6. '           ' → logprob: -6.849831581115723
    7. '               ' → logprob: -7.099831581115723
    8. 'if' → logprob: -7.599831581115723
    9. '                   ' → logprob: -8.474831581115723
    10. 'cc' → logprob: -8.599831581115723

Token 707: ' ii' (ID: 28354)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ii' → logprob: -5.8126592193730175e-05
    2. ' ii' → logprob: -9.8750581741333
    3. 'cc' → logprob: -12.2500581741333
    4. '   ' → logprob: -13.8750581741333
    5. '(ii' → logprob: -14.1250581741333
    6. '[ii' → logprob: -16.125057220458984
    7. '       ' → logprob: -18.000057220458984
    8. '    ' → logprob: -18.000057220458984
    9. 'jj' → logprob: -18.125057220458984
    10. '           ' → logprob: -18.500057220458984

Token 708: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -2.696889623621246e-06
    2. '>' → logprob: -14.00000286102295
    3. ']>=' → logprob: -14.25000286102295
    4. ' >=' → logprob: -14.37500286102295
    5. '<h' → logprob: -15.50000286102295
    6. '[h' → logprob: -16.000001907348633
    7. '≥' → logprob: -16.125001907348633
    8. ')>=' → logprob: -17.125001907348633
    9. '```' → logprob: -17.250001907348633
    10. '(h' → logprob: -17.375001907348633

Token 709: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00035155098885297775
    2. 'k' → logprob: -8.500351905822754
    3. '0' → logprob: -9.125351905822754
    4. ' idx' → logprob: -10.625351905822754
    5. 'cc' → logprob: -11.750351905822754
    6. '(idx' → logprob: -13.250351905822754
    7. 'kk' → logprob: -13.625351905822754
    8. 'index' → logprob: -14.250351905822754
    9. 'ii' → logprob: -14.500351905822754
    10. '[idx' → logprob: -14.875351905822754

Token 710: '1' (ID: 16)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.14370685815811157
    2. '2' → logprob: -2.018706798553467
    3. '0' → logprob: -8.393707275390625
    4. '[idx' → logprob: -8.393707275390625
    5. ' idx' → logprob: -8.518707275390625
    6. '(idx' → logprob: -8.893707275390625
    7. 'cc' → logprob: -9.518707275390625
    8. 'k' → logprob: -9.768707275390625
    9. '   ' → logprob: -10.393707275390625
    10. '1' → logprob: -10.893707275390625

Token 711: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3868836760520935
    2. ' and' → logprob: -1.1368837356567383
    3. '               ' → logprob: -12.511883735656738
    4. '                   ' → logprob: -13.136883735656738
    5. '(cc' → logprob: -13.511883735656738
    6. 'cc' → logprob: -13.636883735656738
    7. '>=' → logprob: -13.761883735656738
    8. '           ' → logprob: -14.261883735656738
    9. '```' → logprob: -14.511883735656738
    10. '                ' → logprob: -15.136883735656738

Token 712: ' RX' (ID: 55163)
  Prédit: 'RX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RX' → logprob: -0.0573325976729393
    2. 'RY' → logprob: -2.9323325157165527
    3. ' RX' → logprob: -6.557332515716553
    4. 'RR' → logprob: -7.557332515716553
    5. 'ii' → logprob: -8.432332992553711
    6. 'jj' → logprob: -8.807332992553711
    7. 'cc' → logprob: -9.932332992553711
    8. 'R' → logprob: -10.307332992553711
    9. 'Rx' → logprob: -10.932332992553711
    10. 'i' → logprob: -12.432332992553711

Token 713: 'J' (ID: 41)
  Prédit: 'J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.5950853824615479
    2. 'ii' → logprob: -1.4700853824615479
    3. '[' → logprob: -1.9700853824615479
    4. '[ii' → logprob: -2.595085382461548
    5. 'II' → logprob: -6.345085144042969
    6. 'JJ' → logprob: -6.970085144042969
    7. 'jj' → logprob: -7.095085144042969
    8. 'i' → logprob: -8.595085144042969
    9. '[i' → logprob: -8.720085144042969
    10. 'X' → logprob: -9.345085144042969

Token 714: '[ii' (ID: 75075)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2519594728946686
    2. '[ii' → logprob: -1.5019594430923462
    3. 'cc' → logprob: -10.626959800720215
    4. 'ii' → logprob: -12.501959800720215
    5. '	cc' → logprob: -14.626959800720215
    6. '[i' → logprob: -14.751959800720215
    7. '[c' → logprob: -14.876959800720215
    8. '(cc' → logprob: -15.376959800720215
    9. '_cc' → logprob: -16.2519588470459
    10. ' [' → logprob: -16.2519588470459

Token 715: ']<' (ID: 80424)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9027791495318525e-05
    2. '<' → logprob: -11.000019073486328
    3. ' [' → logprob: -14.375019073486328
    4. 'cc' → logprob: -14.625019073486328
    5. ' <' → logprob: -15.000019073486328
    6. '>=' → logprob: -15.500019073486328
    7. '(cc' → logprob: -15.750019073486328
    8. '```' → logprob: -16.125019073486328
    9. '][' → logprob: -16.250019073486328
    10. '>' → logprob: -16.375019073486328

Token 716: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -1.1041145626222715e-05
    2. 'idx' → logprob: -11.625011444091797
    3. ' cc' → logprob: -13.375011444091797
    4. '   ' → logprob: -15.000011444091797
    5. 'rc' → logprob: -16.000011444091797
    6. 'rr' → logprob: -16.375011444091797
    7. '	cc' → logprob: -16.750011444091797
    8. 'c' → logprob: -18.375011444091797
    9. 'ccc' → logprob: -18.500011444091797
    10. '(cc' → logprob: -18.875011444091797

Token 717: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34264427423477173
    2. '                   ' → logprob: -1.592644214630127
    3. '               ' → logprob: -2.842644214630127
    4. ':' → logprob: -3.717644214630127
    5. '                  ' → logprob: -7.217644214630127
    6. '           ' → logprob: -7.217644214630127
    7. '                       ' → logprob: -7.217644214630127
    8. 'and' → logprob: -7.342644214630127
    9. '=' → logprob: -8.217644691467285
    10. '):
' → logprob: -8.967644691467285

Token 718: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15762001276016235
    2. '-=' → logprob: -2.5326199531555176
    3. '               ' → logprob: -3.1576199531555176
    4. '=' → logprob: -4.782619953155518
    5. '                  ' → logprob: -5.407619953155518
    6. '           ' → logprob: -5.532619953155518
    7. 'ii' → logprob: -6.657619953155518
    8. '                       ' → logprob: -6.782619953155518
    9. '-' → logprob: -7.407619953155518
    10. '       ' → logprob: -7.657619953155518

Token 719: ' ii' (ID: 28354)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ii' (adapté à ' ii') → logprob: -9.253090865968261e-06
    2. '                   ' → logprob: -12.125009536743164
    3. ' ii' → logprob: -13.000009536743164
    4. '(ii' → logprob: -14.000009536743164
    5. '[ii' → logprob: -14.500009536743164
    6. '               ' → logprob: -16.125009536743164
    7. '           ' → logprob: -17.500009536743164
    8. '```' → logprob: -17.625009536743164
    9. '   ' → logprob: -17.875009536743164
    10. '                  ' → logprob: -19.250009536743164

Token 720: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -4.1557283111615106e-05
    2. '-' → logprob: -10.250041961669922
    3. ' -=' → logprob: -12.500041961669922
    4. '=' → logprob: -14.000041961669922
    5. '```' → logprob: -14.375041961669922
    6. '   ' → logprob: -14.750041961669922
    7. '+=' → logprob: -15.000041961669922
    8. '>=' → logprob: -15.750041961669922
    9. '       ' → logprob: -16.375041961669922
    10. '           ' → logprob: -17.375041961669922

Token 721: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2961512513575144e-05
    2. 'ii' → logprob: -10.875022888183594
    3. 'idx' → logprob: -12.500022888183594
    4. ' ' → logprob: -15.625022888183594
    5. 'cc' → logprob: -17.250022888183594
    6. 'iii' → logprob: -17.500022888183594
    7. '   ' → logprob: -18.125022888183594
    8. ' ii' → logprob: -19.000022888183594
    9. '                   ' → logprob: -19.375022888183594
    10. '0' → logprob: -19.625022888183594

Token 722: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0022561182267963886
    2. 'cc' → logprob: -7.002255916595459
    3. '                   ' → logprob: -7.502255916595459
    4. ' cc' → logprob: -8.377256393432617
    5. '(cc' → logprob: -8.627256393432617
    6. '           ' → logprob: -9.252256393432617
    7. '                ' → logprob: -10.002256393432617
    8. '              ' → logprob: -10.002256393432617
    9. '<|end|>' → logprob: -10.377256393432617
    10. '```' → logprob: -10.502256393432617

Token 723: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2540068030357361
    2. 'cc' → logprob: -1.5040068626403809
    3. ' cc' → logprob: -6.879006862640381
    4. '                   ' → logprob: -7.379006862640381
    5. '	cc' → logprob: -9.004006385803223
    6. '(cc' → logprob: -9.129006385803223
    7. '           ' → logprob: -9.879006385803223
    8. '++' → logprob: -10.254006385803223
    9. '                       ' → logprob: -10.879006385803223
    10. '_cc' → logprob: -11.004006385803223

Token 724: ' if' (ID: 538)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -5.157039049663581e-05
    2. '               ' → logprob: -10.500051498413086
    3. ' cc' → logprob: -10.750051498413086
    4. '	cc' → logprob: -13.625051498413086
    5. '_cc' → logprob: -14.250051498413086
    6. '(cc' → logprob: -15.250051498413086
    7. '++' → logprob: -15.500051498413086
    8. 'ii' → logprob: -16.000051498413086
    9. 'while' → logprob: -17.500051498413086
    10. 'Cc' → logprob: -17.875051498413086

Token 725: ' ii' (ID: 28354)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.020557772368192673
    2. ' ii' → logprob: -3.8955578804016113
    3. '(ii' → logprob: -11.145557403564453
    4. '[ii' → logprob: -14.145557403564453
    5. '   ' → logprob: -15.520557403564453
    6. 'cc' → logprob: -15.645557403564453
    7. 'jj' → logprob: -16.145557403564453
    8. '
' → logprob: -16.395557403564453
    9. ' ' → logprob: -16.895557403564453
    10. 'True' → logprob: -17.270557403564453

Token 726: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -4.36574100604048e-06
    2. ' >=' → logprob: -13.250004768371582
    3. '>' → logprob: -13.625004768371582
    4. ']>=' → logprob: -13.750004768371582
    5. '≥' → logprob: -16.375003814697266
    6. '==' → logprob: -16.875003814697266
    7. ')>=' → logprob: -16.875003814697266
    8. '[' → logprob: -17.000003814697266
    9. '
' → logprob: -17.500003814697266
    10. '```' → logprob: -17.625003814697266

Token 727: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.8312570318812504e-05
    2. ' idx' → logprob: -11.125018119812012
    3. 'cc' → logprob: -13.000018119812012
    4. '   ' → logprob: -14.625018119812012
    5. 'index' → logprob: -15.000018119812012
    6. '0' → logprob: -15.625018119812012
    7. '	idx' → logprob: -16.250019073486328
    8. '
' → logprob: -16.750019073486328
    9. '(idx' → logprob: -17.125019073486328
    10. '           ' → logprob: -17.375019073486328

Token 728: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03335600346326828
    2. 'idx' → logprob: -3.533355951309204
    3. 'cc' → logprob: -5.658356189727783
    4. '2' → logprob: -10.033355712890625
    5. 'index' → logprob: -10.283355712890625
    6. '   ' → logprob: -11.658355712890625
    7. ' cc' → logprob: -12.408355712890625
    8. '0' → logprob: -12.533355712890625
    9. '
' → logprob: -12.658355712890625
    10. '(cc' → logprob: -12.783355712890625

Token 729: ':
' (ID: 734)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.021904457360506058
    2. '                   ' → logprob: -4.271904468536377
    3. ' >=' → logprob: -5.021904468536377
    4. '               ' → logprob: -6.896904468536377
    5. '                       ' → logprob: -10.646903991699219
    6. '>' → logprob: -11.396903991699219
    7. '                ' → logprob: -11.396903991699219
    8. ':
' → logprob: -11.521903991699219
    9. '[' → logprob: -11.646903991699219
    10. '           ' → logprob: -12.021903991699219

Token 730: '                   ' (ID: 699)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.9625868797302246
    2. '               ' → logprob: -1.3375868797302246
    3. '                   ' → logprob: -1.4625868797302246
    4. 'RY' → logprob: -2.8375868797302246
    5. 'RX' → logprob: -3.4625868797302246
    6. ' cc' → logprob: -4.087586879730225
    7. ' RX' → logprob: -4.837586879730225
    8. '   ' → logprob: -5.587586879730225
    9. 'CC' → logprob: -6.212586879730225
    10. '                ' → logprob: -7.212586879730225

Token 731: ' R' (ID: 460)
  Prédit: 'RY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RY' → logprob: -0.0014067788142710924
    2. 'cc' → logprob: -7.126406669616699
    3. ' R' → logprob: -7.751406669616699
    4. '   ' → logprob: -9.5014066696167
    5. 'RX' → logprob: -10.2514066696167
    6. '           ' → logprob: -11.6264066696167
    7. 'R' (adapté à ' R') → logprob: -11.7514066696167
    8. '       ' → logprob: -11.8764066696167
    9. '    ' → logprob: -11.8764066696167
    10. 'CC' → logprob: -12.1264066696167

Token 732: 'Y' (ID: 56)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.06449202448129654
    2. 'cc' → logprob: -3.5644919872283936
    3. 'Y' → logprob: -3.6894919872283936
    4. 'J' → logprob: -5.064492225646973
    5. 'RX' → logprob: -7.064492225646973
    6. 'I' → logprob: -7.689492225646973
    7. 'R' → logprob: -7.814492225646973
    8. 'c' → logprob: -8.314492225646973
    9. 'j' → logprob: -8.564492225646973
    10. 'i' → logprob: -8.689492225646973

Token 733: 'J' (ID: 41)
  Prédit: 'J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -7.465036105713807e-06
    2. '[' → logprob: -12.250007629394531
    3. ' J' → logprob: -13.500007629394531
    4. 'j' → logprob: -14.500007629394531
    5. '```' → logprob: -15.250007629394531
    6. '           ' → logprob: -15.875007629394531
    7. '[J' → logprob: -16.50000762939453
    8. '
' → logprob: -16.62500762939453
    9. '`' → logprob: -16.87500762939453
    10. '``' → logprob: -17.00000762939453

Token 734: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. 'cc' → logprob: -19.25
    3. '
' → logprob: -19.625
    4. '[ii' → logprob: -20.375
    5. '[j' → logprob: -20.625
    6. ' [' → logprob: -20.75
    7. '```' → logprob: -20.75
    8. '=' → logprob: -21.125
    9. '[
' → logprob: -21.5
    10. '(cc' → logprob: -21.75

Token 735: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -2.7729658540920354e-05
    2. '[' → logprob: -10.500027656555176
    3. ' cc' → logprob: -16.000028610229492
    4. '(cc' → logprob: -18.375028610229492
    5. '	cc' → logprob: -19.125028610229492
    6. '
' → logprob: -19.750028610229492
    7. 'c' → logprob: -21.125028610229492
    8. 'max' → logprob: -21.375028610229492
    9. '_cc' → logprob: -21.375028610229492
    10. '   ' → logprob: -21.750028610229492

Token 736: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6413361430168152
    2. '=max' → logprob: -1.14133620262146
    3. ']=' → logprob: -1.89133620262146
    4. '>=' → logprob: -6.391335964202881
    5. '+=' → logprob: -7.516335964202881
    6. ']+=' → logprob: -8.016336441040039
    7. '=j' → logprob: -8.141336441040039
    8. ')=' → logprob: -8.641336441040039
    9. ']' → logprob: -9.641336441040039
    10. '≥' → logprob: -11.141336441040039

Token 737: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.45848218582978e-06
    2. 'ii' → logprob: -13.50000286102295
    3. 'min' → logprob: -14.50000286102295
    4. ' max' → logprob: -14.62500286102295
    5. '	max' → logprob: -17.375001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '=max' → logprob: -18.625001907348633
    8. 'mm' → logprob: -18.875001907348633
    9. 'jj' → logprob: -18.875001907348633
    10. '.max' → logprob: -20.625001907348633

Token 738: '(R' (ID: 4092)
  Prédit: 'RY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RY' → logprob: -0.029763801023364067
    2. '(R' → logprob: -3.529763698577881
    3. '   ' → logprob: -11.904764175415039
    4. '[' → logprob: -12.779764175415039
    5. '[R' → logprob: -13.154764175415039
    6. '       ' → logprob: -14.529764175415039
    7. '           ' → logprob: -14.904764175415039
    8. '                   ' → logprob: -15.529764175415039
    9. '               ' → logprob: -16.02976417541504
    10. '```' → logprob: -16.15476417541504

Token 739: 'Y' (ID: 56)
  Prédit: 'RY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RY' → logprob: -0.33943524956703186
    2. 'Y' → logprob: -1.4644352197647095
    3. 'R' → logprob: -2.964435338973999
    4. 'cc' → logprob: -6.46443510055542
    5. 'J' → logprob: -6.83943510055542
    6. 'YR' → logprob: -7.21443510055542
    7. '[' → logprob: -8.214435577392578
    8. 'RJ' → logprob: -8.339435577392578
    9. 'OY' → logprob: -8.464435577392578
    10. '```' → logprob: -9.339435577392578

Token 740: 'J' (ID: 41)
  Prédit: 'J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.11128827929496765
    2. 'cc' → logprob: -2.36128830909729
    3. '[' → logprob: -5.611288070678711
    4. '(cc' → logprob: -5.736288070678711
    5. ' cc' → logprob: -6.736288070678711
    6. '[idx' → logprob: -6.736288070678711
    7. 'idx' → logprob: -7.361288070678711
    8. '```' → logprob: -7.736288070678711
    9. '(idx' → logprob: -9.736288070678711
    10. '   ' → logprob: -9.861288070678711

Token 741: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. 'cc' → logprob: -14.250000953674316
    3. '```' → logprob: -15.500000953674316
    4. '[
' → logprob: -17.125001907348633
    5. '(cc' → logprob: -17.375001907348633
    6. '   ' → logprob: -17.875001907348633
    7. '
' → logprob: -18.625001907348633
    8. '``' → logprob: -19.375001907348633
    9. '       ' → logprob: -19.375001907348633
    10. ' [' → logprob: -19.500001907348633

Token 742: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -6.704273118884885e-07
    2. ' cc' → logprob: -15.375000953674316
    3. '[' → logprob: -15.750000953674316
    4. 'c' → logprob: -16.25
    5. '```' → logprob: -16.5
    6. '
' → logprob: -18.0
    7. '	cc' → logprob: -18.0
    8. '(cc' → logprob: -18.125
    9. '   ' → logprob: -18.5
    10. 'ii' → logprob: -19.375

Token 743: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009300658479332924
    2. '[' → logprob: -4.759300708770752
    3. '[ii' → logprob: -7.884300708770752
    4. ' ,' → logprob: -9.009300231933594
    5. ',[' → logprob: -9.759300231933594
    6. ',c' → logprob: -10.259300231933594
    7. ',
' → logprob: -10.759300231933594
    8. ',i' → logprob: -10.759300231933594
    9. ',j' → logprob: -11.634300231933594
    10. '],' → logprob: -11.759300231933594

Token 744: 'ii' (ID: 3573)
  Prédit: 'ii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ii' → logprob: -2.2200749754119897e-06
    2. ' ii' → logprob: -13.875001907348633
    3. 'idx' → logprob: -14.375001907348633
    4. '   ' → logprob: -14.750001907348633
    5. 'i' → logprob: -16.375001907348633
    6. '
' → logprob: -16.875001907348633
    7. '(ii' → logprob: -16.875001907348633
    8. '[ii' → logprob: -17.125001907348633
    9. 'iii' → logprob: -18.250001907348633
    10. '  ' → logprob: -19.500001907348633

Token 745: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016655568033456802
    2. ')' → logprob: -4.141655445098877
    3. '(cc' → logprob: -8.391655921936035
    4. 'cc' → logprob: -8.766655921936035
    5. ')
' → logprob: -9.516655921936035
    6. '           ' → logprob: -10.141655921936035
    7. '                   ' → logprob: -10.266655921936035
    8. ' cc' → logprob: -10.266655921936035
    9. '+' → logprob: -11.516655921936035
    10. ']' → logprob: -11.516655921936035

Token 746: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005873805843293667
    2. '           ' → logprob: -5.880873680114746
    3. 'cc' → logprob: -6.005873680114746
    4. '       ' → logprob: -7.880873680114746
    5. '                   ' → logprob: -9.505873680114746
    6. '	cc' → logprob: -10.255873680114746
    7. '<|end|>' → logprob: -10.505873680114746
    8. '(cc' → logprob: -11.130873680114746
    9. '   ' → logprob: -11.380873680114746
    10. ' cc' → logprob: -11.505873680114746

Token 747: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' (adapté à ' cc') → logprob: -0.1607942134141922
    2. '               ' → logprob: -1.9107942581176758
    3. '           ' → logprob: -8.660794258117676
    4. ' cc' → logprob: -8.660794258117676
    5. '	cc' → logprob: -9.410794258117676
    6. '                   ' → logprob: -10.160794258117676
    7. '       ' → logprob: -10.285794258117676
    8. '(cc' → logprob: -10.410794258117676
    9. '_cc' → logprob: -11.160794258117676
    10. '   ' → logprob: -11.660794258117676

Token 748: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -9.13388703338569e-06
    2. ' +=' → logprob: -12.125009536743164
    3. '+' → logprob: -12.625009536743164
    4. ']+=' → logprob: -15.625009536743164
    5. '=' → logprob: -16.750009536743164
    6. '+
' → logprob: -16.875009536743164
    7. '   ' → logprob: -17.000009536743164
    8. '++' → logprob: -18.000009536743164
    9. '```' → logprob: -18.750009536743164
    10. '+=(' → logprob: -19.250009536743164

Token 749: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '   ' → logprob: -14.375001907348633
    3. 'cc' → logprob: -15.000001907348633
    4. ' ' → logprob: -15.000001907348633
    5. '```' → logprob: -15.625001907348633
    6. '+' → logprob: -16.000001907348633
    7. '
' → logprob: -16.125001907348633
    8. '       ' → logprob: -16.500001907348633
    9. '(' → logprob: -17.687501907348633
    10. '           ' → logprob: -17.750001907348633

Token 750: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00450832350179553
    2. '<|end|>' → logprob: -5.8795084953308105
    3. 'k' → logprob: -7.0045084953308105
    4. '           ' → logprob: -7.8795084953308105
    5. '       ' → logprob: -8.129508018493652
    6. '```' → logprob: -10.879508018493652
    7. '...' → logprob: -11.379508018493652
    8. '  ' → logprob: -11.504508018493652
    9. ' k' → logprob: -11.504508018493652
    10. '    ' → logprob: -11.629508018493652

Token 751: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5772200226783752
    2. 'k' → logprob: -0.8272200226783752
    3. '```' → logprob: -7.2022199630737305
    4. ' k' → logprob: -8.07721996307373
    5. '
' → logprob: -9.57721996307373
    6. '       ' → logprob: -9.70221996307373
    7. '	k' → logprob: -9.95221996307373
    8. ',k' → logprob: -11.07721996307373
    9. '           ' → logprob: -11.57721996307373
    10. '    
' → logprob: -12.45221996307373

Token 752: ' k' (ID: 372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.576653778553009
    2. 'k' (adapté à ' k') → logprob: -0.826653778553009
    3. 'i' → logprob: -7.451653957366943
    4. '    
' → logprob: -9.826653480529785
    5. '#' → logprob: -10.701653480529785
    6. ' k' → logprob: -11.201653480529785
    7. '
' → logprob: -11.576653480529785
    8. '  ' → logprob: -12.076653480529785
    9. '	k' → logprob: -12.076653480529785
    10. '```' → logprob: -12.451653480529785

Token 753: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -6.511406809295295e-06
    2. '=' → logprob: -12.125006675720215
    3. ' +=' → logprob: -13.875006675720215
    4. '+' → logprob: -17.1250057220459
    5. '=k' → logprob: -17.1250057220459
    6. '+='' → logprob: -17.7500057220459
    7. ']+=' → logprob: -18.1250057220459
    8. '-=' → logprob: -18.5000057220459
    9. '*=' → logprob: -18.6250057220459
    10. '+="' → logprob: -18.6250057220459

Token 754: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '```' → logprob: -20.875139236450195
    4. '   ' → logprob: -21.125139236450195
    5. '+' → logprob: -21.625139236450195
    6. '2' → logprob: -22.125139236450195
    7. '0' → logprob: -22.312639236450195
    8. '(' → logprob: -22.437639236450195
    9. '  ' → logprob: -22.625139236450195
    10. '4' → logprob: -22.687639236450195


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 752
Tokens correctement prédits (1ère position, stricte): 388
Tokens correctement prédits (1ère position, avec adaptation): 404
Tokens correctement prédits (top 10): 645
Précision stricte (1ère position): 51.60%
Précision adaptée (1ère position): 53.72%
Précision (top 10): 85.77%
================================================================================
