================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N_K = input().split()
N = int(N_K[0])
K = int(N_K[1])
MOD = 10 ** 9 + 7
low = 0
high = 0
ans = 0
i = 1
while i < N + 2:
    low += i - 1
    high += N - i + 1
    if i >= K:
        ans += (high - low + 1)
        ans %= MOD
    i += 1
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '_K' (ID: 20555)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6397079825401306
    2. '32' → logprob: -1.0147080421447754
    3. '10' → logprob: -2.5147080421447754
    4. '16' → logprob: -4.264708042144775
    5. '4' → logprob: -5.389708042144775
    6. '64' → logprob: -5.389708042144775
    7. '100' → logprob: -6.764708042144775
    8. '256' → logprob: -6.764708042144775
    9. '8' → logprob: -7.389708042144775
    10. '1' → logprob: -7.389708042144775

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05953586846590042
    2. '.' → logprob: -4.059535980224609
    3. '[' → logprob: -4.184535980224609
    4. ''' → logprob: -4.309535980224609
    5. '"' → logprob: -5.184535980224609
    6. '_' → logprob: -5.559535980224609
    7. ')' → logprob: -7.684535980224609
    8. '```' → logprob: -8.30953598022461
    9. '('' → logprob: -8.55953598022461
    10. ''s' → logprob: -8.55953598022461

Token 5: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5818840265274048
    2. '+' → logprob: -1.0818840265274048
    3. '.strip' → logprob: -3.2068839073181152
    4. ')' → logprob: -4.081883907318115
    5. '*' → logprob: -4.456883907318115
    6. ' ' → logprob: -4.706883907318115
    7. '_' → logprob: -5.081883907318115
    8. '=' → logprob: -5.581883907318115
    9. '#' → logprob: -5.956883907318115
    10. '**' → logprob: -6.706883907318115

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006980936974287033
    2. '()' → logprob: -5.006980895996094
    3. '('' → logprob: -8.756980895996094
    4. '(
' → logprob: -10.381980895996094
    5. '("("' → logprob: -11.131980895996094
    6. ''' → logprob: -11.506980895996094
    7. '(

' → logprob: -11.756980895996094
    8. '"' → logprob: -11.881980895996094
    9. '(`' → logprob: -11.881980895996094
    10. '(**' → logprob: -12.006980895996094

Token 7: 'N' (ID: 45)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14092756807804108
    2. 'N' → logprob: -2.76592755317688
    3. 'n' → logprob: -3.39092755317688
    4. '```' → logprob: -5.390927791595459
    5. 'print' → logprob: -5.515927791595459
    6. 'num' → logprob: -5.515927791595459
    7. '#' → logprob: -5.640927791595459
    8. '=' → logprob: -5.765927791595459
    9. 'for' → logprob: -6.265927791595459
    10. '_' → logprob: -6.265927791595459

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.036567557603120804
    2. '[' → logprob: -3.786567449569702
    3. '_K' → logprob: -4.411567687988281
    4. '[_' → logprob: -7.161567687988281
    5. '_[' → logprob: -8.911567687988281
    6. '_N' → logprob: -10.536567687988281
    7. '_k' → logprob: -10.911567687988281
    8. ')' → logprob: -11.036567687988281
    9. '_)' → logprob: -11.036567687988281
    10. '[K' → logprob: -11.036567687988281

Token 9: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3133202791213989
    2. ' int' → logprob: -1.313320279121399
    3. ' N' → logprob: -10.18832015991211
    4. 'N' → logprob: -11.18832015991211
    5. ' ' → logprob: -12.81332015991211
    6. '[int' → logprob: -13.68832015991211
    7. 'input' → logprob: -13.81332015991211
    8. 'len' → logprob: -14.06332015991211
    9. '(int' → logprob: -14.68832015991211
    10. ' input' → logprob: -15.18832015991211

Token 10: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18020206689834595
    2. '(N' → logprob: -1.8052020072937012
    3. '('' → logprob: -7.930202007293701
    4. '(K' → logprob: -10.68020248413086
    5. 'N' → logprob: -11.05520248413086
    6. '("("' → logprob: -11.55520248413086
    7. '("' → logprob: -11.68020248413086
    8. '(
' → logprob: -11.68020248413086
    9. '(

' → logprob: -12.18020248413086
    10. '(_' → logprob: -12.30520248413086

Token 11: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -0.6336233019828796
    2. '[' → logprob: -0.7586233019828796
    3. ')' → logprob: -7.383623123168945
    4. '```' → logprob: -9.633623123168945
    5. '[_' → logprob: -9.758623123168945
    6. 'K' → logprob: -10.133623123168945
    7. ')_' → logprob: -10.133623123168945
    8. ')[' → logprob: -10.508623123168945
    9. '_k' → logprob: -10.758623123168945
    10. ' ' → logprob: -10.883623123168945

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. ')' → logprob: -14.125001907348633
    3. ' [' → logprob: -14.125001907348633
    4. '[N' → logprob: -15.625001907348633
    5. '\[' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.375001907348633
    7. '```' → logprob: -16.500001907348633
    8. '[
' → logprob: -16.500001907348633
    9. '(' → logprob: -17.500001907348633
    10. ' ' → logprob: -17.750001907348633

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.796184723294573e-06
    2. '1' → logprob: -12.250005722045898
    3. ' ' → logprob: -14.000005722045898
    4. ')' → logprob: -16.6250057220459
    5. '```' → logprob: -18.8750057220459
    6. '])' → logprob: -19.3750057220459
    7. ']' → logprob: -19.3750057220459
    8. '`' → logprob: -19.6250057220459
    9. '   ' → logprob: -19.8750057220459
    10. '۰' → logprob: -20.0000057220459

Token 14: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.018923789262771606
    2. ')' → logprob: -4.018923759460449
    3. ']' → logprob: -7.268923759460449
    4. ' ])' → logprob: -10.51892375946045
    5. ''])' → logprob: -10.76892375946045
    6. ')]' → logprob: -11.39392375946045
    7. ')])' → logprob: -12.14392375946045
    8. '])
' → logprob: -12.76892375946045
    9. '[' → logprob: -12.89392375946045
    10. '）' → logprob: -13.89392375946045

Token 15: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.006790325045585632
    2. 'M' → logprob: -5.0067901611328125
    3. 'k' → logprob: -10.131790161132812
    4. 'N' → logprob: -11.256790161132812
    5. ' K' → logprob: -11.506790161132812
    6. '```' → logprob: -12.256790161132812
    7. 'n' → logprob: -14.006790161132812
    8. '`' → logprob: -14.631790161132812
    9. 'm' → logprob: -14.756790161132812
    10. 's' → logprob: -14.881790161132812

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5991958975791931
    2. ' =' → logprob: -0.8491958975791931
    3. ')' → logprob: -4.474195957183838
    4. '_' → logprob: -4.724195957183838
    5. '<|end|>' → logprob: -6.974195957183838
    6. '_space' → logprob: -7.974195957183838
    7. ' ' → logprob: -8.09919548034668
    8. '[' → logprob: -8.22419548034668
    9. 'space' → logprob: -8.84919548034668
    10. '  ' → logprob: -9.34919548034668

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1002068892121315
    2. ' int' → logprob: -2.3502068519592285
    3. '=int' → logprob: -16.60020637512207
    4. '(int' → logprob: -16.85020637512207
    5. ' ' → logprob: -16.85020637512207
    6. '0' → logprob: -17.35020637512207
    7. '[int' → logprob: -17.85020637512207
    8. '<int' → logprob: -17.85020637512207
    9. '	int' → logprob: -18.47520637512207
    10. ':int' → logprob: -18.85020637512207

Token 18: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.35544586181640625
    2. '(' → logprob: -1.2304458618164062
    3. '(K' → logprob: -4.980445861816406
    4. ' (' → logprob: -10.730445861816406
    5. '("("' → logprob: -10.855445861816406
    6. '('' → logprob: -11.230445861816406
    7. '()' → logprob: -11.480445861816406
    8. '((' → logprob: -11.605445861816406
    9. '(`' → logprob: -12.230445861816406
    10. '(n' → logprob: -12.355445861816406

Token 19: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -0.00042149791261181235
    2. '[' → logprob: -8.500421524047852
    3. ')' → logprob: -9.625421524047852
    4. '-' → logprob: -9.750421524047852
    5. '[K' → logprob: -10.625421524047852
    6. '[_' → logprob: -10.750421524047852
    7. '])' → logprob: -11.500421524047852
    8. '```' → logprob: -11.875421524047852
    9. '_' → logprob: -12.000421524047852
    10. ')_' → logprob: -12.250421524047852

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. '```' → logprob: -14.250001907348633
    3. ' [' → logprob: -14.375001907348633
    4. ')' → logprob: -14.750001907348633
    5. '[
' → logprob: -15.250001907348633
    6. '1' → logprob: -15.500001907348633
    7. ')[' → logprob: -16.500001907348633
    8. '   ' → logprob: -16.500001907348633
    9. '\[' → logprob: -17.125001907348633
    10. ']' → logprob: -17.375001907348633

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3795937522663735e-05
    2. '0' → logprob: -11.37502384185791
    3. '])' → logprob: -11.37502384185791
    4. ' ' → logprob: -14.50002384185791
    5. '```' → logprob: -16.500022888183594
    6. ']' → logprob: -17.000022888183594
    7. '   ' → logprob: -18.000022888183594
    8. ']),' → logprob: -18.250022888183594
    9. '])]' → logprob: -18.250022888183594
    10. '-' → logprob: -18.500022888183594

Token 22: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. '))' → logprob: -14.12500286102295
    3. '])' → logprob: -14.12500286102295
    4. '）' → logprob: -14.87500286102295
    5. '')' → logprob: -15.37500286102295
    6. '`)' → logprob: -15.37500286102295
    7. ']' → logprob: -15.62500286102295
    8. ')]' → logprob: -16.875001907348633
    9. '()' → logprob: -17.000001907348633
    10. ')])' → logprob: -17.125001907348633

Token 23: 'MOD' (ID: 52135)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.089130163192749
    2. 's' → logprob: -2.089130163192749
    3. 'for' → logprob: -2.214130163192749
    4. 'result' → logprob: -2.339130163192749
    5. 'count' → logprob: -3.339130163192749
    6. 'd' → logprob: -3.339130163192749
    7. 'S' → logprob: -3.589130163192749
    8. 'i' → logprob: -3.839130163192749
    9. 'if' → logprob: -3.839130163192749
    10. 'n' → logprob: -3.964130163192749

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0812184289097786
    2. ' =' → logprob: -2.5812184810638428
    3. ')' → logprob: -6.331218242645264
    4. '_' → logprob: -7.831218242645264
    5. ' ' → logprob: -9.706218719482422
    6. '<|end|>' → logprob: -10.456218719482422
    7. ',' → logprob: -10.956218719482422
    8. ' )' → logprob: -11.956218719482422
    9. '_=' → logprob: -12.331218719482422
    10. '=

' → logprob: -12.456218719482422

Token 25: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2751951813697815
    2. '100' → logprob: -1.5251951217651367
    3. ' ' → logprob: -3.7751951217651367
    4. '1' → logprob: -10.025195121765137
    5. '998' → logprob: -11.150195121765137
    6. '(' → logprob: -12.775195121765137
    7. ' (' → logprob: -13.775195121765137
    8. 'int' → logprob: -13.775195121765137
    9. ' ' → logprob: -15.275195121765137
    10. '109' → logprob: -15.525195121765137

Token 26: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3134879171848297
    2. '100' → logprob: -1.3134878873825073
    3. '1' → logprob: -9.063488006591797
    4. '998' → logprob: -9.563488006591797
    5. ' ' → logprob: -10.563488006591797
    6. '(' → logprob: -11.313488006591797
    7. 'int' → logprob: -14.063488006591797
    8. '2' → logprob: -15.188488006591797
    9. 'pow' → logprob: -15.188488006591797
    10. '```' → logprob: -15.688488006591797

Token 27: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26731348037719727
    2. '**' → logprob: -1.5173134803771973
    3. '9' → logprob: -4.767313480377197
    4. '4' → logprob: -5.767313480377197
    5. '1' → logprob: -7.017313480377197
    6. '5' → logprob: -7.142313480377197
    7. '2' → logprob: -7.392313480377197
    8. '7' → logprob: -8.017313003540039
    9. ' **' → logprob: -8.517313003540039
    10. '^' → logprob: -8.767313003540039

Token 28: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.5
    3. ' ' → logprob: -18.625
    4. '```' → logprob: -19.375
    5. '10' → logprob: -20.0
    6. '8' → logprob: -21.5
    7. '+' → logprob: -21.75
    8. '18' → logprob: -22.0
    9. '0' → logprob: -22.125
    10. '6' → logprob: -22.25

Token 29: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -16.125
    3. '+' → logprob: -18.0
    4. '```' → logprob: -19.375
    5. ' ' → logprob: -19.75
    6. '18' → logprob: -20.25
    7. '10' → logprob: -20.25
    8. '8' → logprob: -20.625
    9. '９' → logprob: -21.5
    10. '   ' → logprob: -21.625

Token 30: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002444125711917877
    2. ' +' → logprob: -8.500244140625
    3. '7' → logprob: -10.625244140625
    4. '+
' → logprob: -11.750244140625
    5. '+

' → logprob: -12.125244140625
    6. '＋' → logprob: -14.000244140625
    7. '9' → logprob: -14.000244140625
    8. '6' → logprob: -15.125244140625
    9. '+</' → logprob: -15.500244140625
    10. '```' → logprob: -15.625244140625

Token 31: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '+' → logprob: -15.750000953674316
    4. '```' → logprob: -17.625
    5. '   ' → logprob: -18.625
    6. '9' → logprob: -19.0
    7. '07' → logprob: -19.25
    8. '``' → logprob: -19.625
    9. '  ' → logprob: -20.3125
    10. '７' → logprob: -20.375

Token 32: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -18.5
    3. '```' → logprob: -19.25
    4. ' ' → logprob: -19.625
    5. '７' → logprob: -20.875
    6. '   ' → logprob: -20.875
    7. '07' → logprob: -21.125
    8. '

' → logprob: -21.125
    9. '۷' → logprob: -21.9375
    10. '७' → logprob: -22.25

Token 33: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.843628466129303
    2. 'n' → logprob: -1.3436284065246582
    3. 'a' → logprob: -2.468628406524658
    4. 'dp' → logprob: -2.718628406524658
    5. '\' → logprob: -3.343628406524658
    6. '\n' → logprob: -3.593628406524658
    7. 'result' → logprob: -4.093628406524658
    8. 'def' → logprob: -4.218628406524658
    9. '' → logprob: -4.218628406524658
    10. ' 
' → logprob: -4.343628406524658

Token 34: 'low' (ID: 14739)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0314868688583374
    2. 'n' → logprob: -1.6564868688583374
    3. 'a' → logprob: -2.156486988067627
    4. 'fact' → logprob: -2.281486988067627
    5. 'result' → logprob: -3.156486988067627
    6. 'f' → logprob: -3.281486988067627
    7. 'd' → logprob: -3.656486988067627
    8. '#' → logprob: -3.781486988067627
    9. 'c' → logprob: -3.781486988067627
    10. 'factor' → logprob: -3.906486988067627

Token 35: ' =' (ID: 314)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.014004243537783623
    2. '_' → logprob: -5.014004230499268
    3. ' =' → logprob: -5.639004230499268
    4. 'est' → logprob: -6.389004230499268
    5. 'e' → logprob: -7.514004230499268
    6. '=' → logprob: -7.639004230499268
    7. 'ER' → logprob: -8.764004707336426
    8. 'erv' → logprob: -9.264004707336426
    9. 'erm' → logprob: -9.514004707336426
    10. 'pow' → logprob: -9.764004707336426

Token 36: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8129386901855469
    2. '1' → logprob: -1.3129386901855469
    3. ' ' → logprob: -1.3129386901855469
    4. ' K' → logprob: -4.937938690185547
    5. 'K' → logprob: -5.687938690185547
    6. 'N' → logprob: -6.437938690185547
    7. 'max' → logprob: -6.437938690185547
    8. ' max' → logprob: -6.812938690185547
    9. ' N' → logprob: -6.937938690185547
    10. 'min' → logprob: -7.562938690185547

Token 37: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4231277108192444
    2. '0' → logprob: -1.1731276512145996
    3. 'K' → logprob: -4.0481276512146
    4. 'max' → logprob: -5.1731276512146
    5. 'N' → logprob: -5.2981276512146
    6. '2' → logprob: -6.0481276512146
    7. ' ' → logprob: -7.0481276512146
    8. '[' → logprob: -7.1731276512146
    9. 'min' → logprob: -7.1731276512146
    10. '-' → logprob: -7.9231276512146

Token 38: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: 'high' (ID: 21116)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0595706701278687
    2. 'high' → logprob: -1.3095706701278687
    3. '
' → logprob: -2.684570789337158
    4. ' high' → logprob: -3.059570789337158
    5. 'while' → logprob: -3.059570789337158
    6. ' 
' → logprob: -3.309570789337158
    7. 'max' → logprob: -3.559570789337158
    8. ' while' → logprob: -3.809570789337158
    9. 'x' → logprob: -4.309570789337158
    10. ')' → logprob: -4.309570789337158

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003192804753780365
    2. '=' → logprob: -5.753192901611328
    3. ' ' → logprob: -11.753192901611328
    4. ' +=' → logprob: -13.003192901611328
    5. ' =
' → logprob: -13.378192901611328
    6. ' =)' → logprob: -14.378192901611328
    7. '<|end|>' → logprob: -14.628192901611328
    8. ')' → logprob: -14.628192901611328
    9. ' +' → logprob: -14.753192901611328
    10. '+' → logprob: -15.128192901611328

Token 41: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.11180329322814941
    2. '10' → logprob: -2.8618032932281494
    3. ' N' → logprob: -4.11180305480957
    4. 'K' → logprob: -4.23680305480957
    5. ' ' → logprob: -4.61180305480957
    6. '100' → logprob: -5.11180305480957
    7. ' K' → logprob: -7.23680305480957
    8. '1' → logprob: -7.86180305480957
    9. 'int' → logprob: -8.98680305480957
    10. '0' → logprob: -9.11180305480957

Token 42: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.09999408572912216
    2. 'K' → logprob: -3.09999418258667
    3. '10' → logprob: -3.09999418258667
    4. '100' → logprob: -5.97499418258667
    5. 'min' → logprob: -7.09999418258667
    6. '1' → logprob: -7.34999418258667
    7. ' N' → logprob: -8.474993705749512
    8. ' ' → logprob: -8.724993705749512
    9. 'max' → logprob: -8.849993705749512
    10. '2' → logprob: -9.099993705749512

Token 43: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16145244240760803
    2. '<|end|>' → logprob: -2.036452531814575
    3. '\n' → logprob: -4.911452293395996
    4. ' 
' → logprob: -5.036452293395996
    5. 'for' → logprob: -6.911452293395996
    6. ' ' → logprob: -7.036452293395996
    7. ' for' → logprob: -7.536452293395996
    8. '
' → logprob: -8.036452293395996
    9. '<|end|>' → logprob: -8.161452293395996
    10. '  
' → logprob: -8.411452293395996

Token 44: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5700304508209229
    2. '
' → logprob: -1.8200304508209229
    3. 'result' → logprob: -2.195030450820923
    4. 'max' → logprob: -2.570030450820923
    5. '<|end|>' → logprob: -4.570030212402344
    6. ' for' → logprob: -4.820030212402344
    7. 'high' → logprob: -4.820030212402344
    8. 'ans' → logprob: -5.320030212402344
    9. 'count' → logprob: -5.445030212402344
    10. '0' → logprob: -5.695030212402344

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04303744062781334
    2. '=' → logprob: -3.1680374145507812
    3. ' +=' → logprob: -11.043037414550781
    4. '<|end|>' → logprob: -11.418037414550781
    5. ' ' → logprob: -13.293037414550781
    6. ' =
' → logprob: -13.418037414550781
    7. ' =)' → logprob: -13.543037414550781
    8. ')' → logprob: -13.793037414550781
    9. ',' → logprob: -13.918037414550781
    10. '_' → logprob: -14.293037414550781

Token 46: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31719058752059937
    2. '0' → logprob: -1.3171906471252441
    3. '1' → logprob: -5.692190647125244
    4. '"' → logprob: -8.942190170288086
    5. ' N' → logprob: -9.442190170288086
    6. ' K' → logprob: -9.817190170288086
    7. ' "' → logprob: -10.192190170288086
    8. ' []' → logprob: -10.192190170288086
    9. '10' → logprob: -10.504690170288086
    10. ' [' → logprob: -10.629690170288086

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11557938903570175
    2. '1' → logprob: -2.24057936668396
    3. 'N' → logprob: -7.365579605102539
    4. '-' → logprob: -7.490579605102539
    5. ' ' → logprob: -7.615579605102539
    6. '(' → logprob: -7.990579605102539
    7. 'K' → logprob: -8.490579605102539
    8. 'pow' → logprob: -8.865579605102539
    9. 'int' → logprob: -8.990579605102539
    10. 'max' → logprob: -9.990579605102539

Token 48: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008077966049313545
    2. ' for' → logprob: -5.008078098297119
    3. 'while' → logprob: -7.258078098297119
    4. '
' → logprob: -8.383077621459961
    5. 'i' → logprob: -8.883077621459961
    6. '```' → logprob: -9.258077621459961
    7. '' → logprob: -10.008077621459961
    8. '\n' → logprob: -10.133077621459961
    9. ' while' → logprob: -11.008077621459961
    10. ' 
' → logprob: -11.008077621459961

Token 50: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6605454683303833
    2. '=' → logprob: -1.4105454683303833
    3. ' =' → logprob: -2.0355453491210938
    4. 'nd' → logprob: -2.7855453491210938
    5. 'nt' → logprob: -3.6605453491210938
    6. 'f' → logprob: -4.535545349121094
    7. ' ' → logprob: -5.285545349121094
    8. ' n' → logprob: -6.285545349121094
    9. 's' → logprob: -6.785545349121094
    10. '+' → logprob: -7.410545349121094

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03456474095582962
    2. '1' → logprob: -3.534564733505249
    3. ' ' → logprob: -5.409564971923828
    4. 'N' → logprob: -8.659564971923828
    5. 'K' → logprob: -9.159564971923828
    6. '2' → logprob: -10.659564971923828
    7. ' K' → logprob: -11.909564971923828
    8. ' N' → logprob: -11.909564971923828
    9. 'low' → logprob: -13.284564971923828
    10. '-' → logprob: -13.534564971923828

Token 52: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.035496294498443604
    2. '1' → logprob: -3.410496234893799
    3. 'N' → logprob: -6.910496234893799
    4. ' ' → logprob: -8.160496711730957
    5. 'K' → logprob: -8.285496711730957
    6. 'low' → logprob: -8.910496711730957
    7. '2' → logprob: -9.035496711730957
    8. '-' → logprob: -11.785496711730957
    9. '100' → logprob: -11.910496711730957
    10. 'high' → logprob: -11.910496711730957

Token 53: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.1341897249221802
    2. ' while' → logprob: -1.5091897249221802
    3. '<|end|>' → logprob: -1.6341897249221802
    4. '
' → logprob: -2.0091896057128906
    5. ',' → logprob: -3.0091896057128906
    6. ' ' → logprob: -3.1341896057128906
    7. '+' → logprob: -4.884189605712891
    8. ' 
' → logprob: -5.884189605712891
    9. ',
' → logprob: -6.009189605712891
    10. '#' → logprob: -6.134189605712891

Token 55: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.025634268298745155
    2. 'i' → logprob: -4.275634288787842
    3. ' ' → logprob: -4.525634288787842
    4. ' N' → logprob: -8.275633811950684
    5. ' K' → logprob: -8.900633811950684
    6. ' low' → logprob: -9.150633811950684
    7. ' (' → logprob: -11.275633811950684
    8. 'N' → logprob: -11.650633811950684
    9. '  ' → logprob: -11.650633811950684
    10. '(i' → logprob: -11.650633811950684

Token 56: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1131257563829422
    2. '<=' → logprob: -2.238125801086426
    3. ' <' → logprob: -8.863125801086426
    4. '<' → logprob: -9.238125801086426
    5. '*' → logprob: -10.863125801086426
    6. ' *' → logprob: -11.238125801086426
    7. ' ' → logprob: -11.863125801086426
    8. ' <<=' → logprob: -11.988125801086426
    9. '<|end|>' → logprob: -12.738125801086426
    10. '**' → logprob: -12.988125801086426

Token 57: ' N' (ID: 478)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002535948297008872
    2. '=N' → logprob: -6.877535820007324
    3. ' =' → logprob: -7.252535820007324
    4. ' N' → logprob: -8.252535820007324
    5. 'N' → logprob: -8.252535820007324
    6. 'K' → logprob: -9.377535820007324
    7. ' K' → logprob: -9.377535820007324
    8. '=len' → logprob: -10.127535820007324
    9. '=int' → logprob: -10.877535820007324
    10. '=min' → logprob: -11.627535820007324

Token 58: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01842067390680313
    2. '+' → logprob: -4.393420696258545
    3. '+:' → logprob: -5.268420696258545
    4. ' :' → logprob: -7.893420696258545
    5. ' +' → logprob: -9.518420219421387
    6. ':**' → logprob: -9.643420219421387
    7. ' and' → logprob: -10.018420219421387
    8. ':
' → logprob: -10.018420219421387
    9. '**' → logprob: -10.268420219421387
    10. '):' → logprob: -10.768420219421387

Token 59: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025523616932332516
    2. ' ' → logprob: -6.002552509307861
    3. ' K' → logprob: -10.127552032470703
    4. 'K' → logprob: -10.752552032470703
    5. '2' → logprob: -11.252552032470703
    6. '  ' → logprob: -14.252552032470703
    7. '   ' → logprob: -14.877552032470703
    8. '(' → logprob: -15.252552032470703
    9. '-' → logprob: -16.002552032470703
    10. '+' → logprob: -16.377552032470703

Token 60: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004015945305582136
    2. '2' → logprob: -8.625401496887207
    3. 'K' → logprob: -8.875401496887207
    4. ' ' → logprob: -9.750401496887207
    5. 'i' → logprob: -11.000401496887207
    6. '(' → logprob: -13.750401496887207
    7. '-' → logprob: -14.000401496887207
    8. ' K' → logprob: -14.125401496887207
    9. '=' → logprob: -14.437901496887207
    10. '  ' → logprob: -14.562901496887207

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0430377833545208
    2. ' :' → logprob: -3.1680378913879395
    3. ':
' → logprob: -11.168037414550781
    4. ' :
' → logprob: -12.168037414550781
    5. '):' → logprob: -12.418037414550781
    6. ':**' → logprob: -12.418037414550781
    7. ' and' → logprob: -12.543037414550781
    8. '+:' → logprob: -13.418037414550781
    9. '():' → logprob: -13.543037414550781
    10. ' ' → logprob: -14.043037414550781

Token 62: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6195018291473389
    2. ' :' → logprob: -1.1195018291473389
    3. ' ' → logprob: -2.369501829147339
    4. '   ' → logprob: -4.244502067565918
    5. '<|end|>' → logprob: -4.369502067565918
    6. '    ' → logprob: -4.994502067565918
    7. ' :
' → logprob: -5.994502067565918
    8. '  ' → logprob: -6.994502067565918
    9. ',' → logprob: -7.369502067565918
    10. ':
' → logprob: -7.494502067565918

Token 63: ' low' (ID: 4465)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0007988214492798
    2. ' if' → logprob: -1.3757988214492798
    3. ' ' → logprob: -2.1257987022399902
    4. '   ' → logprob: -2.8757987022399902
    5. ' high' → logprob: -3.1257987022399902
    6. '    ' → logprob: -3.6257987022399902
    7. 'high' → logprob: -3.6257987022399902
    8. 'if' → logprob: -4.00079870223999
    9. ' low' → logprob: -4.00079870223999
    10. 'i' → logprob: -4.25079870223999

Token 64: ' +=' (ID: 2757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6678387522697449
    2. ' +=' → logprob: -1.0428388118743896
    3. ',' → logprob: -2.9178388118743896
    4. '=' → logprob: -3.1678388118743896
    5. '+=' → logprob: -3.2928388118743896
    6. ' ,' → logprob: -7.4178385734558105
    7. '+' → logprob: -7.5428385734558105
    8. ' ' → logprob: -9.292839050292969
    9. ' +' → logprob: -9.792839050292969
    10. '=i' → logprob: -10.792839050292969

Token 65: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.45863962173461914
    2. '1' → logprob: -1.2086396217346191
    3. 'K' → logprob: -3.333639621734619
    4. '(i' → logprob: -4.333639621734619
    5. ' i' → logprob: -5.458639621734619
    6. '2' → logprob: -5.583639621734619
    7. '(' → logprob: -5.833639621734619
    8. ' ' → logprob: -6.583639621734619
    9. ' (' → logprob: -6.958639621734619
    10. '6' → logprob: -6.958639621734619

Token 66: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002683968050405383
    2. 'K' → logprob: -6.752684116363525
    3. ' ' → logprob: -6.877684116363525
    4. '2' → logprob: -7.877684116363525
    5. ' K' → logprob: -10.690183639526367
    6. '(' → logprob: -11.252683639526367
    7. '0' → logprob: -11.440183639526367
    8. 'i' → logprob: -11.815183639526367
    9. '(K' → logprob: -12.002683639526367
    10. ' (' → logprob: -12.190183639526367

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011810619616881013
    2. 'K' → logprob: -6.876181125640869
    3. '2' → logprob: -9.751180648803711
    4. '0' → logprob: -9.876180648803711
    5. 'i' → logprob: -11.376180648803711
    6. ' ' → logprob: -11.626180648803711
    7. 'low' → logprob: -12.251180648803711
    8. 'k' → logprob: -12.501180648803711
    9. 'max' → logprob: -13.063680648803711
    10. '(' → logprob: -13.126180648803711

Token 69: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' (adapté à ' high') → logprob: -0.26968565583229065
    2. '   ' → logprob: -1.5196856260299683
    3. ' high' → logprob: -5.019685745239258
    4. 'i' → logprob: -5.269685745239258
    5. 'if' → logprob: -6.894685745239258
    6. 'K' → logprob: -6.894685745239258
    7. ' i' → logprob: -7.144685745239258
    8. '*' → logprob: -7.644685745239258
    9. '+' → logprob: -7.644685745239258
    10. '*i' → logprob: -8.644685745239258

Token 72: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.023495163768529892
    2. '+=' → logprob: -4.023495197296143
    3. ' =' → logprob: -5.398495197296143
    4. '=' → logprob: -7.523495197296143
    5. ' +' → logprob: -8.648494720458984
    6. '+' → logprob: -10.023494720458984
    7. ' ' → logprob: -10.273494720458984
    8. ')' → logprob: -13.148494720458984
    9. ']+=' → logprob: -13.273494720458984
    10. '   ' → logprob: -13.773494720458984

Token 73: ' N' (ID: 478)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3060174286365509
    2. 'K' → logprob: -1.4310173988342285
    3. 'N' → logprob: -3.9310173988342285
    4. ' i' → logprob: -5.8060173988342285
    5. ' K' → logprob: -6.9310173988342285
    6. 'min' → logprob: -8.181017875671387
    7. ' ' → logprob: -8.931017875671387
    8. '(' → logprob: -8.931017875671387
    9. '(i' → logprob: -9.556017875671387
    10. '   ' → logprob: -9.556017875671387

Token 74: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0013685694430023432
    2. ' i' → logprob: -7.251368522644043
    3. '1' → logprob: -8.001368522644043
    4. '(i' → logprob: -8.251368522644043
    5. 'K' → logprob: -10.501368522644043
    6. '(' → logprob: -11.751368522644043
    7. ' ' → logprob: -11.876368522644043
    8. ' (' → logprob: -12.376368522644043
    9. 'N' → logprob: -12.876368522644043
    10. '   ' → logprob: -13.001368522644043

Token 76: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23582974076271057
    2. '<|end|>' → logprob: -2.4858298301696777
    3. ' ' → logprob: -3.1108298301696777
    4. ' +' → logprob: -3.4858298301696777
    5. '<|end|>' → logprob: -4.610829830169678
    6. '   ' → logprob: -4.860829830169678
    7. ' i' → logprob: -4.860829830169678
    8. ')' → logprob: -4.985829830169678
    9. 'i' → logprob: -5.110829830169678
    10. '+
' → logprob: -6.235829830169678

Token 77: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.77022064034827e-05
    2. '2' → logprob: -9.375097274780273
    3. ' ' → logprob: -12.000097274780273
    4. 'N' → logprob: -12.375097274780273
    5. 'i' → logprob: -14.125097274780273
    6. '0' → logprob: -14.625097274780273
    7. '<|end|>' → logprob: -15.375097274780273
    8. '  ' → logprob: -15.437597274780273
    9. '```' → logprob: -15.875097274780273
    10. 'K' → logprob: -15.937597274780273

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014215784904081374
    2. '2' → logprob: -9.000142097473145
    3. ' ' → logprob: -11.000142097473145
    4. '<|end|>' → logprob: -14.750142097473145
    5. '0' → logprob: -15.187642097473145
    6. '۱' → logprob: -15.687642097473145
    7. '  ' → logprob: -15.750142097473145
    8. '11' → logprob: -16.06264305114746
    9. 'N' → logprob: -16.18764305114746
    10. '<|end|>' → logprob: -16.37514305114746

Token 79: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020758159458637238
    2. '<|end|>' → logprob: -4.145758152008057
    3. '
' → logprob: -6.645758152008057
    4. ' if' → logprob: -7.145758152008057
    5. '<|end|>' → logprob: -7.520758152008057
    6. ' i' → logprob: -7.520758152008057
    7. 'i' → logprob: -7.645758152008057
    8. '    
' → logprob: -8.020758628845215
    9. 'if' → logprob: -8.020758628845215
    10. '```' → logprob: -9.020758628845215

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08301879465579987
    2. '<|end|>' → logprob: -3.4580187797546387
    3. 'i' → logprob: -4.333018779754639
    4. 'if' → logprob: -4.458018779754639
    5. '
' → logprob: -4.958018779754639
    6. ' i' → logprob: -5.083018779754639
    7. ' if' → logprob: -5.583018779754639
    8. ' ' → logprob: -6.708018779754639
    9. '    
' → logprob: -6.708018779754639
    10. '<|end|>' → logprob: -6.833018779754639

Token 81: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7497286200523376
    2. 'i' → logprob: -1.3747286796569824
    3. ' if' → logprob: -1.8747286796569824
    4. '   ' → logprob: -2.6247286796569824
    5. ' i' → logprob: -3.1247286796569824
    6. ' ' → logprob: -6.374728679656982
    7. '<|end|>' → logprob: -7.249728679656982
    8. '  ' → logprob: -7.874728679656982
    9. '    
' → logprob: -8.124728202819824
    10. '  
' → logprob: -8.624728202819824

Token 82: ' i' (ID: 575)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.36114588379859924
    2. ' low' → logprob: -2.1111459732055664
    3. ' high' → logprob: -2.3611459732055664
    4. 'K' → logprob: -2.9861459732055664
    5. ' ' → logprob: -4.111145973205566
    6. 'high' → logprob: -4.861145973205566
    7. ' (' → logprob: -5.361145973205566
    8. 'low' → logprob: -5.611145973205566
    9. ' i' → logprob: -6.861145973205566
    10. '(low' → logprob: -7.361145973205566

Token 83: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.3108330965042114
    2. ' <=' → logprob: -1.4358330965042114
    3. ' ==' → logprob: -1.8108330965042114
    4. ' >' → logprob: -2.560832977294922
    5. '>=' → logprob: -2.810832977294922
    6. '==' → logprob: -3.060832977294922
    7. '<=' → logprob: -3.185832977294922
    8. '*' → logprob: -3.685832977294922
    9. ' *' → logprob: -3.935832977294922
    10. ' ' → logprob: -3.935832977294922

Token 84: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.06252472847700119
    2. ' K' → logprob: -2.8125247955322266
    3. ' ' → logprob: -8.062524795532227
    4. '1' → logprob: -8.687524795532227
    5. 'N' → logprob: -10.312524795532227
    6. '2' → logprob: -11.062524795532227
    7. '<|end|>' → logprob: -12.187524795532227
    8. '  ' → logprob: -12.812524795532227
    9. 'k' → logprob: -13.125024795532227
    10. '	K' → logprob: -13.250024795532227

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011972436681389809
    2. ' and' → logprob: -4.761972427368164
    3. ':
' → logprob: -5.886972427368164
    4. 'and' → logprob: -7.886972427368164
    5. '   ' → logprob: -9.761972427368164
    6. ' :' → logprob: -9.761972427368164
    7. '-' → logprob: -9.886972427368164
    8. '):' → logprob: -11.761972427368164
    9. '<|end|>' → logprob: -12.261972427368164
    10. ':

' → logprob: -12.386972427368164

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02131296508014202
    2. '   ' → logprob: -4.146313190460205
    3. ':' → logprob: -5.896313190460205
    4. 'ans' → logprob: -7.021313190460205
    5. ' ans' → logprob: -7.396313190460205
    6. '    ' → logprob: -8.646312713623047
    7. '	ans' → logprob: -8.646312713623047
    8. '<|end|>' → logprob: -8.896312713623047
    9. '     ' → logprob: -9.521312713623047
    10. ' ' → logprob: -9.646312713623047

Token 87: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.578341007232666
    2. '       ' → logprob: -1.453341007232666
    3. ' ' → logprob: -2.578341007232666
    4. '<|end|>' → logprob: -2.578341007232666
    5. 'ans' (adapté à ' ans') → logprob: -3.453341007232666
    6. '	ans' → logprob: -5.328341007232666
    7. '   ' → logprob: -5.578341007232666
    8. '           ' → logprob: -5.578341007232666
    9. '        ' → logprob: -5.828341007232666
    10. '<|end|>' → logprob: -6.828341007232666

Token 88: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0033532092347741127
    2. '+=' → logprob: -5.753353118896484
    3. ' =' → logprob: -8.878353118896484
    4. ' ' → logprob: -11.503353118896484
    5. '+' → logprob: -12.003353118896484
    6. ' +' → logprob: -12.128353118896484
    7. ' %=' → logprob: -12.378353118896484
    8. '=' → logprob: -13.128353118896484
    9. ' |=' → logprob: -13.378353118896484
    10. ' -=' → logprob: -13.753353118896484

Token 89: ' (' (ID: 350)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.7257325649261475
    2. ' high' → logprob: -0.9757325649261475
    3. '(high' → logprob: -3.3507325649261475
    4. ' (' → logprob: -3.4757325649261475
    5. '(' → logprob: -4.225732803344727
    6. ' low' → logprob: -4.350732803344727
    7. ' min' → logprob: -4.725732803344727
    8. 'low' → logprob: -4.725732803344727
    9. ' max' → logprob: -4.850732803344727
    10. 'max' → logprob: -5.475732803344727

Token 90: 'high' (ID: 21116)
  Prédit: 'high'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.05253836140036583
    2. '(high' → logprob: -3.6775383949279785
    3. 'low' → logprob: -4.5525383949279785
    4. ' high' → logprob: -5.0525383949279785
    5. '(' → logprob: -6.0525383949279785
    6. 'min' → logprob: -6.6775383949279785
    7. ' (' → logprob: -6.9275383949279785
    8. '(low' → logprob: -7.4275383949279785
    9. '(i' → logprob: -7.5525383949279785
    10. 'N' → logprob: -7.6775383949279785

Token 91: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01669379137456417
    2. '-' → logprob: -4.141693592071533
    3. ' ' → logprob: -8.141694068908691
    4. ')' → logprob: -8.141694068908691
    5. '   ' → logprob: -10.766694068908691
    6. ' )' → logprob: -10.891694068908691
    7. '    ' → logprob: -12.016694068908691
    8. '<|end|>' → logprob: -12.016694068908691
    9. ' +' → logprob: -12.141694068908691
    10. '+' → logprob: -12.266694068908691

Token 92: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.009858437813818455
    2. ' low' → logprob: -4.63485860824585
    3. ')' → logprob: -9.759858131408691
    4. '(low' → logprob: -10.759858131408691
    5. '   ' → logprob: -11.009858131408691
    6. ' ' → logprob: -13.259858131408691
    7. '    ' → logprob: -14.009858131408691
    8. '  ' → logprob: -14.259858131408691
    9. '-low' → logprob: -14.384858131408691
    10. '	' → logprob: -14.884858131408691

Token 93: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5805122256278992
    2. ')' → logprob: -0.9555122256278992
    3. '+' → logprob: -3.205512285232544
    4. ' )' → logprob: -4.205512046813965
    5. ' ' → logprob: -9.455512046813965
    6. '   ' → logprob: -9.455512046813965
    7. ')*' → logprob: -9.955512046813965
    8. ' *' → logprob: -10.955512046813965
    9. '*' → logprob: -10.955512046813965
    10. '    ' → logprob: -11.455512046813965

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001360474620014429
    2. ' ' → logprob: -6.6263604164123535
    3. ')' → logprob: -10.501360893249512
    4. '0' → logprob: -13.251360893249512
    5. '2' → logprob: -13.251360893249512
    6. '   ' → logprob: -14.376360893249512
    7. '<|end|>' → logprob: -14.813860893249512
    8. ' )' → logprob: -14.876360893249512
    9. 'MOD' → logprob: -15.001360893249512
    10. ' MOD' → logprob: -15.313860893249512

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.895480277715251e-06
    2. ' ' → logprob: -11.750008583068848
    3. ')' → logprob: -14.625008583068848
    4. '2' → logprob: -15.625008583068848
    5. '   ' → logprob: -16.000009536743164
    6. '0' → logprob: -16.500009536743164
    7. 'MOD' → logprob: -17.375009536743164
    8. 'ans' → logprob: -17.625009536743164
    9. '  ' → logprob: -17.750009536743164
    10. '<|end|>' → logprob: -18.000009536743164

Token 96: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021426472812891006
    2. ' )' → logprob: -6.252142429351807
    3. '   ' → logprob: -8.877142906188965
    4. ')%' → logprob: -10.002142906188965
    5. '       ' → logprob: -11.377142906188965
    6. ' ' → logprob: -12.002142906188965
    7. ')
' → logprob: -12.252142906188965
    8. ')*' → logprob: -13.252142906188965
    9. '  ' → logprob: -14.002142906188965
    10. '    ' → logprob: -14.002142906188965

Token 97: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004025564994663
    2. '
' → logprob: -6.504025459289551
    3. '       ' → logprob: -6.879025459289551
    4. '    
' → logprob: -7.629025459289551
    5. ' i' → logprob: -8.37902545928955
    6. ' 
' → logprob: -8.62902545928955
    7. '```' → logprob: -9.00402545928955
    8. '  ' → logprob: -9.25402545928955
    9. ' ' → logprob: -9.50402545928955
    10. '    ' → logprob: -10.00402545928955

Token 98: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.11317973583936691
    2. '   ' → logprob: -2.7381796836853027
    3. 'i' → logprob: -3.9881796836853027
    4. ' ans' → logprob: -4.113179683685303
    5. ' i' → logprob: -5.113179683685303
    6. '	ans' → logprob: -6.988179683685303
    7. '       ' → logprob: -8.238180160522461
    8. '(ans' → logprob: -9.863180160522461
    9. ' ' → logprob: -10.238180160522461
    10. '    
' → logprob: -10.363180160522461

Token 99: ' %=' (ID: 117035)
  Prédit: ' %='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.019373103976249695
    2. '%=' → logprob: -4.894372940063477
    3. '%' → logprob: -5.144372940063477
    4. ' %' → logprob: -5.269372940063477
    5. ' ' → logprob: -7.519372940063477
    6. ')' → logprob: -9.519372940063477
    7. ' ' → logprob: -10.394372940063477
    8. ')%' → logprob: -10.769372940063477
    9. '```' → logprob: -11.144372940063477
    10. '	' → logprob: -11.519372940063477

Token 100: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.03804149478673935
    2. ' MOD' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.288042068481445
    4. '_MOD' → logprob: -17.913042068481445
    5. '(M' → logprob: -19.038042068481445
    6. '.MOD' → logprob: -19.163042068481445
    7. '10' → logprob: -19.663042068481445
    8. 'MO' → logprob: -20.413042068481445
    9. '100' → logprob: -20.413042068481445
    10. '```' → logprob: -20.413042068481445

Token 101: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012970196548849344
    2. '    
' → logprob: -7.5012969970703125
    3. ' i' → logprob: -7.7512969970703125
    4. 'i' → logprob: -8.376296997070312
    5. '
' → logprob: -10.001296997070312
    6. '	i' → logprob: -11.251296997070312
    7. '<|end|>' → logprob: -11.751296997070312
    8. '```' → logprob: -12.376296997070312
    9. ' 
' → logprob: -12.626296997070312
    10. '  
' → logprob: -13.501296997070312

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003520722035318613
    2. 'i' → logprob: -6.128520488739014
    3. ' i' → logprob: -6.628520488739014
    4. '	i' → logprob: -11.503520965576172
    5. '    
' → logprob: -14.503520965576172
    6. '```' → logprob: -14.503520965576172
    7. '  ' → logprob: -14.628520965576172
    8. ' ' → logprob: -15.128520965576172
    9. ',i' → logprob: -15.378520965576172
    10. '++' → logprob: -15.503520965576172

Token 103: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16757585108280182
    2. 'i' (adapté à ' i') → logprob: -1.9175758361816406
    3. ' i' → logprob: -4.917575836181641
    4. '	i' → logprob: -12.04257583618164
    5. '```' → logprob: -13.91757583618164
    6. ' ' → logprob: -14.41757583618164
    7. '    
' → logprob: -15.66757583618164
    8. '  ' → logprob: -15.79257583618164
    9. ',i' → logprob: -17.54257583618164
    10. '       ' → logprob: -17.54257583618164

Token 104: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3197311758995056
    2. '+=' → logprob: -1.3197312355041504
    3. ' +=' → logprob: -5.06973123550415
    4. '++' → logprob: -8.819730758666992
    5. '+++' → logprob: -12.194730758666992
    6. '+="' → logprob: -12.819730758666992
    7. '<|end|>' → logprob: -12.944730758666992
    8. '+='' → logprob: -13.194730758666992
    9. ' ' → logprob: -13.694730758666992
    10. ' +' → logprob: -13.694730758666992

Token 105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -17.375001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '<|end|>' → logprob: -20.000001907348633
    6. '  ' → logprob: -20.125001907348633
    7. '2' → logprob: -21.062501907348633
    8. '１' → logprob: -21.250001907348633
    9. '۱' → logprob: -21.375001907348633
    10. '`' → logprob: -21.937501907348633

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -17.875
    4. '１' → logprob: -20.125
    5. '   ' → logprob: -20.375
    6. '2' → logprob: -21.3125
    7. '۱' → logprob: -21.375
    8. '`' → logprob: -21.875
    9. '  ' → logprob: -22.1875
    10. '१' → logprob: -22.4375

Token 107: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00020795092859771103
    2. '
' → logprob: -8.875207901000977
    3. '<|end|>' → logprob: -10.125207901000977
    4. ' print' → logprob: -11.500207901000977
    5. '```' → logprob: -11.625207901000977
    6. '#' → logprob: -13.000207901000977
    7. 'return' → logprob: -13.375207901000977
    8. ')' → logprob: -13.500207901000977
    9. '#print' → logprob: -13.625207901000977
    10. '\n' → logprob: -14.250207901000977

Token 108: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00012976066500414163
    2. ')' → logprob: -9.625129699707031
    3. '<|end|>' → logprob: -10.125129699707031
    4. ' print' → logprob: -11.500129699707031
    5. '#' → logprob: -12.250129699707031
    6. '```' → logprob: -12.875129699707031
    7. '
' → logprob: -13.125129699707031
    8. '#print' → logprob: -13.250129699707031
    9. '(print' → logprob: -14.125129699707031
    10. 'return' → logprob: -14.625129699707031

Token 109: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.023248974233865738
    2. '(' → logprob: -3.7732489109039307
    3. '(answer' → logprob: -13.898248672485352
    4. '()' → logprob: -14.148248672485352
    5. 'ans' → logprob: -14.273248672485352
    6. ' (' → logprob: -15.023248672485352
    7. '(
' → logprob: -15.148248672485352
    8. '("("' → logprob: -15.773248672485352
    9. '(`' → logprob: -15.898248672485352
    10. '('' → logprob: -16.02324867248535

Token 110: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -15.125000953674316
    3. '))' → logprob: -15.500000953674316
    4. ')`' → logprob: -15.500000953674316
    5. '`)' → logprob: -16.625
    6. ')
' → logprob: -16.625
    7. ')}' → logprob: -18.0
    8. '')' → logprob: -18.0
    9. ')**' → logprob: -18.125
    10. '）' → logprob: -18.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 108
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 91
Précision stricte (1ère position): 34.26%
Précision adaptée (1ère position): 37.04%
Précision (top 10): 84.26%
================================================================================
