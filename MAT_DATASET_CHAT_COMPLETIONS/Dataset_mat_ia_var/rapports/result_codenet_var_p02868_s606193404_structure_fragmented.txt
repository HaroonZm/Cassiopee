================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
from bisect import bisect_right as br
from bisect import bisect_left as bl
sys.setrecursionlimit(2147483647)
from heapq import heappush, heappop, heappushpop
from collections import defaultdict
from itertools import accumulate
from collections import Counter
from collections import deque
from operator import itemgetter
from itertools import permutations
mod = 10**9 + 7
inf = float('inf')

def I():
    return int(sys.stdin.readline())

def LI():
    return list(map(int, sys.stdin.readline().split()))

def get_input_values():
    n, m = LI()
    return n, m

def make_empty_graph(n):
    return [[] for _ in range(n)]

def append_previous_edges(edges, n):
    def append_for_index(i):
        edges[i].append((i-1, 0))
    for i in range(1, n):
        append_for_index(i)

def read_edge():
    return LI()

def add_input_edges(edges, m):
    def process_one_edge():
        l, r, c = read_edge()
        edges[l-1].append((r-1, c))
    for _ in range(m):
        process_one_edge()

def init_dist(n, s):
    d = [inf]*n
    d[s] = 0
    return d

def init_heap(s):
    return [(0, s)]

def update_distance(d, t, new_dist):
    d[t] = new_dist

def should_continue(d, v, c):
    return d[v] < c

def process_neighbor(d, v, t, cost, h):
    if d[v] + cost < d[t]:
        update_distance(d, t, d[v] + cost)
        heappush(h, (d[t], t))

def process_vertex(h, d, graph):
    c, v = heappop(h)
    if should_continue(d, v, c):
        return
    for t, cost in graph[v]:
        process_neighbor(d, v, t, cost, h)

def run_heap(h, d, graph):
    while h:
        process_vertex(h, d, graph)

def dijkstra(s, graph, n):
    d = init_dist(n, s)
    h = init_heap(s)
    run_heap(h, d, graph)
    return d

def output_result(d):
    if d[-1] == inf:
        print(-1)
    else:
        print(d[-1])

def main():
    n, m = get_input_values()
    edges = make_empty_graph(n)
    append_previous_edges(edges, n)
    add_input_edges(edges, m)
    d = dijkstra(0, edges, n)
    output_result(d)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1524793654680252
    2. 'import' → logprob: -3.152479410171509
    3. '\' → logprob: -3.402479410171509
    4. '\n' → logprob: -3.777479410171509
    5. '
' → logprob: -4.02747917175293
    6. '

' → logprob: -5.02747917175293
    7. '```' → logprob: -5.27747917175293
    8. '<|end|>' → logprob: -5.40247917175293
    9. ',' → logprob: -5.90247917175293
    10. '<|end|>' → logprob: -6.90247917175293

Token 6: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.458339810371399
    2. '\n' → logprob: -1.458339810371399
    3. '.' → logprob: -1.583339810371399
    4. 'import' → logprob: -2.2083396911621094
    5. '

' → logprob: -2.3333396911621094
    6. '\' → logprob: -2.9583396911621094
    7. '```' → logprob: -3.2083396911621094
    8. '<|end|>' → logprob: -5.083339691162109
    9. ',' → logprob: -5.458339691162109
    10. '' → logprob: -5.583339691162109

Token 7: ' bis' (ID: 7204)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5595126152038574
    2. ' os' → logprob: -1.0595126152038574
    3. 'collections' → logprob: -2.8095126152038574
    4. 'os' → logprob: -4.684512615203857
    5. ' datetime' → logprob: -5.309512615203857
    6. ' itertools' → logprob: -6.059512615203857
    7. ' typing' → logprob: -6.184512615203857
    8. 'datetime' → logprob: -7.934512615203857
    9. ' numpy' → logprob: -8.059513092041016
    10. ' pathlib' → logprob: -8.059513092041016

Token 8: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00010247035970678553
    2. 't' → logprob: -9.500102043151855
    3. 'e' → logprob: -11.000102043151855
    4. 'ectl' → logprob: -12.750102043151855
    5. 'ected' → logprob: -13.500102043151855
    6. 'ector' → logprob: -13.750102043151855
    7. '>' → logprob: -13.750102043151855
    8. 'ections' → logprob: -14.250102043151855
    9. 'ec' → logprob: -14.375102043151855
    10. 'import' → logprob: -14.375102043151855

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03380268067121506
    2. 'import' → logprob: -3.4088027477264404
    3. ' ' → logprob: -9.03380298614502
    4. '	import' → logprob: -10.65880298614502
    5. '_import' → logprob: -11.53380298614502
    6. ' ' → logprob: -13.40880298614502
    7. '_' → logprob: -14.15880298614502
    8. '.' → logprob: -15.03380298614502
    9. ' importar' → logprob: -15.28380298614502
    10. 'ort' → logprob: -15.97130298614502

Token 10: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.1395014226436615
    2. ' bis' → logprob: -2.1395013332366943
    3. 'ins' → logprob: -4.389501571655273
    4. ' ins' → logprob: -9.389501571655273
    5. 'b' → logprob: -13.514501571655273
    6. '```' → logprob: -14.389501571655273
    7. 'in' → logprob: -14.889501571655273
    8. 'he' → logprob: -14.889501571655273
    9. 'is' → logprob: -14.889501571655273
    10. 'bl' → logprob: -15.514501571655273

Token 11: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -9.305326966568828e-05
    2. 'e' → logprob: -9.375093460083008
    3. 'ec' → logprob: -12.000093460083008
    4. 'ectl' → logprob: -14.125093460083008
    5. 'ected' → logprob: -15.000093460083008
    6. 'sect' → logprob: -15.875093460083008
    7. 'ecta' → logprob: -15.875093460083008
    8. '```' → logprob: -15.875093460083008
    9. 'ection' → logprob: -16.625093460083008
    10. '##' → logprob: -17.000093460083008

Token 12: '_right' (ID: 24402)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07452194392681122
    2. '(' → logprob: -3.449522018432617
    3. '.' → logprob: -3.449522018432617
    4. '_left' → logprob: -5.574522018432617
    5. '._' → logprob: -6.824522018432617
    6. 'import' → logprob: -7.699522018432617
    7. ' (' → logprob: -7.824522018432617
    8. '_right' → logprob: -7.824522018432617
    9. '```' → logprob: -8.199522018432617
    10. ' ' → logprob: -8.949522018432617

Token 13: ' as' (ID: 472)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8719160556793213
    2. '```' → logprob: -1.8719160556793213
    3. '

' → logprob: -2.2469160556793213
    4. '
' → logprob: -2.3719160556793213
    5. '(' → logprob: -2.6219160556793213
    6. '\' → logprob: -2.8719160556793213
    7. 'import' → logprob: -3.2469160556793213
    8. '(
' → logprob: -4.496915817260742
    9. 'def' → logprob: -4.496915817260742
    10. ',' → logprob: -4.871915817260742

Token 14: ' br' (ID: 1294)
  Prédit: ' br'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' br' → logprob: -0.4250194728374481
    2. 'br' → logprob: -1.1750195026397705
    3. ' bis' → logprob: -3.9250195026397705
    4. 'b' → logprob: -4.550019264221191
    5. ' b' → logprob: -5.675019264221191
    6. 'bis' → logprob: -6.425019264221191
    7. '	br' → logprob: -7.300019264221191
    8. ' bri' → logprob: -7.675019264221191
    9. '`' → logprob: -8.175019264221191
    10. '_br' → logprob: -8.425019264221191

Token 15: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30938729643821716
    2. '\' → logprob: -2.43438720703125
    3. '\n' → logprob: -2.68438720703125
    4. '
' → logprob: -2.80938720703125
    5. '(
' → logprob: -4.68438720703125
    6. ',' → logprob: -4.80938720703125
    7. '' → logprob: -5.05938720703125
    8. '

' → logprob: -5.05938720703125
    9. 'newline' → logprob: -5.93438720703125
    10. '.' → logprob: -6.18438720703125

Token 16: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.748952329158783
    2. '
' → logprob: -1.7489523887634277
    3. 'import' → logprob: -2.1239523887634277
    4. '\n' → logprob: -2.6239523887634277
    5. 'def' → logprob: -2.9989523887634277
    6. '\' → logprob: -3.6239523887634277
    7. '```' → logprob: -3.7489523887634277
    8. ',' → logprob: -3.9989523887634277
    9. '' → logprob: -5.123952388763428
    10. '
' → logprob: -5.498952388763428

Token 17: ' bis' (ID: 7204)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.6808079481124878
    2. ' itertools' → logprob: -1.1808079481124878
    3. ' collections' → logprob: -2.1808080673217773
    4. 'heap' → logprob: -2.9308080673217773
    5. ' heap' → logprob: -4.055808067321777
    6. 'typing' → logprob: -7.430808067321777
    7. ' typing' → logprob: -7.555808067321777
    8. ' functools' → logprob: -7.930808067321777
    9. 'math' → logprob: -8.055808067321777
    10. 'it' → logprob: -8.180808067321777

Token 18: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00046677692444063723
    2. 'ec' → logprob: -8.750466346740723
    3. 'ort' → logprob: -9.000466346740723
    4. 'e' → logprob: -9.000466346740723
    5. 'import' → logprob: -10.500466346740723
    6. 'sect' → logprob: -11.625466346740723
    7. 'cept' → logprob: -12.000466346740723
    8. 'pect' → logprob: -12.500466346740723
    9. 'ectl' → logprob: -12.625466346740723
    10. 'ct' → logprob: -13.000466346740723

Token 19: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2298053503036499
    2. '_' → logprob: -2.4798054695129395
    3. ' import' → logprob: -2.6048054695129395
    4. '_import' → logprob: -3.2298054695129395
    5. '_left' → logprob: -5.1048054695129395
    6. '<|end|>' → logprob: -6.4798054695129395
    7. '_im' → logprob: -8.729804992675781
    8. '_right' → logprob: -9.479804992675781
    9. ' _' → logprob: -9.604804992675781
    10. '	import' → logprob: -10.229804992675781

Token 20: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.3152090609073639
    2. ' bis' → logprob: -1.3152090311050415
    3. 'ins' → logprob: -6.315208911895752
    4. ' ins' → logprob: -9.31520938873291
    5. '_left' → logprob: -10.31520938873291
    6. '_ins' → logprob: -12.56520938873291
    7. 'import' → logprob: -12.56520938873291
    8. 'br' → logprob: -13.31520938873291
    9. '```' → logprob: -13.81520938873291
    10. 'left' → logprob: -14.19020938873291

Token 21: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00011439072113716975
    2. 'e' → logprob: -9.125114440917969
    3. 'ec' → logprob: -13.250114440917969
    4. '_left' → logprob: -13.250114440917969
    5. 'ext' → logprob: -14.125114440917969
    6. '_' → logprob: -15.375114440917969
    7. 'ectl' → logprob: -15.375114440917969
    8. '_e' → logprob: -15.625114440917969
    9. 'eft' → logprob: -16.25011444091797
    10. 'ected' → logprob: -16.62511444091797

Token 22: '_left' (ID: 22189)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.019238635897636414
    2. '_

' → logprob: -4.269238471984863
    3. '_
' → logprob: -5.769238471984863
    4. '_left' → logprob: -7.519238471984863
    5. '_right' → logprob: -8.144238471984863
    6. '_new' → logprob: -8.394238471984863
    7. 'newline' → logprob: -8.894238471984863
    8. '_n' → logprob: -9.144238471984863
    9. '<|end|>' → logprob: -9.269238471984863
    10. ' _' → logprob: -9.769238471984863

Token 23: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.4754962623119354
    2. 'as' → logprob: -0.9754962921142578
    3. '_' → logprob: -7.225496292114258
    4. '<|end|>' → logprob: -8.100496292114258
    5. ' ' → logprob: -9.100496292114258
    6. ')' → logprob: -9.975496292114258
    7. '```' → logprob: -10.100496292114258
    8. ' (' → logprob: -10.225496292114258
    9. '<|end|>' → logprob: -10.600496292114258
    10. '_as' → logprob: -10.725496292114258

Token 24: ' bl' (ID: 1162)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.048666052520275116
    2. ' bl' → logprob: -3.048666000366211
    3. 'br' → logprob: -9.798666000366211
    4. 'ble' → logprob: -12.173666000366211
    5. 'b' → logprob: -12.298666000366211
    6. ' ' → logprob: -12.798666000366211
    7. '   ' → logprob: -12.923666000366211
    8. ' br' → logprob: -12.923666000366211
    9. 'bli' → logprob: -13.673666000366211
    10. '_bl' → logprob: -13.673666000366211

Token 25: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6406644582748413
    2. '

' → logprob: -1.2656644582748413
    3. 'import' → logprob: -2.390664577484131
    4. '<|end|>' → logprob: -3.140664577484131
    5. '\n' → logprob: -3.640664577484131
    6. '```' → logprob: -4.265664577484131
    7. '' → logprob: -6.015664577484131
    8. '\' → logprob: -6.140664577484131
    9. 'n' → logprob: -6.140664577484131
    10. ' 

' → logprob: -6.890664577484131

Token 26: 'sys' (ID: 17324)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6679331660270691
    2. '

' → logprob: -1.5429332256317139
    3. 'import' → logprob: -2.292933225631714
    4. '\n' → logprob: -2.792933225631714
    5. '#' → logprob: -3.167933225631714
    6. '```' → logprob: -3.542933225631714
    7. '' → logprob: -4.542932987213135
    8. '<|end|>' → logprob: -5.042932987213135
    9. '`' → logprob: -5.292932987213135
    10. '\' → logprob: -5.792932987213135

Token 27: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001478796184528619
    2. ' .' → logprob: -9.375147819519043
    3. '.exit' → logprob: -11.125147819519043
    4. '.stdout' → logprob: -11.375147819519043
    5. '.stdin' → logprob: -12.500147819519043
    6. '.readline' → logprob: -12.625147819519043
    7. '.import' → logprob: -12.625147819519043
    8. '.argv' → logprob: -12.625147819519043
    9. '.setdefault' → logprob: -12.875147819519043
    10. '.​' → logprob: -13.000147819519043

Token 28: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.11690925061702728
    2. '_limit' → logprob: -2.9919092655181885
    3. '_rec' → logprob: -3.2419092655181885
    4. '_' → logprob: -4.866909027099609
    5. '_version' → logprob: -5.866909027099609
    6. '_stack' → logprob: -6.116909027099609
    7. '_trace' → logprob: -6.116909027099609
    8. '_max' → logprob: -6.741909027099609
    9. '_sys' → logprob: -7.616909027099609
    10. '_depth' → logprob: -7.866909027099609

Token 29: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0006856293766759336
    2. 'ursive' → logprob: -8.250685691833496
    3. 'ur' → logprob: -8.625685691833496
    4. 'urs' → logprob: -8.875685691833496
    5. 'ursor' → logprob: -10.000685691833496
    6. 'limit' → logprob: -10.875685691833496
    7. '_limit' → logprob: -11.375685691833496
    8. '_' → logprob: -11.625685691833496
    9. 'ursively' → logprob: -12.625685691833496
    10. '_set' → logprob: -12.750685691833496

Token 30: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0017055326607078314
    2. '_limit' → logprob: -6.376705646514893
    3. 'depth' → logprob: -13.751705169677734
    4. 'lim' → logprob: -14.376705169677734
    5. '-limit' → logprob: -14.626705169677734
    6. ' limit' → logprob: -15.001705169677734
    7. '_depth' → logprob: -15.251705169677734
    8. '-' → logprob: -15.626705169677734
    9. '_LIMIT' → logprob: -15.751705169677734
    10. 'ault' → logprob: -16.876705169677734

Token 31: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.941850526549388e-06
    2. '(

' → logprob: -13.000007629394531
    3. '(
' → logprob: -13.500007629394531
    4. '("("' → logprob: -13.500007629394531
    5. '((' → logprob: -13.875007629394531
    6. ' (' → logprob: -14.375007629394531
    7. '```' → logprob: -14.875007629394531
    8. '()' → logprob: -15.125007629394531
    9. '(`' → logprob: -15.750007629394531
    10. '(int' → logprob: -16.37500762939453

Token 32: '214' (ID: 21401)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.023341795429587364
    2. '100' → logprob: -3.7733418941497803
    3. ' ' → logprob: -9.27334213256836
    4. '500' → logprob: -14.02334213256836
    5. '300' → logprob: -14.39834213256836
    6. '1' → logprob: -14.52334213256836
    7. '200' → logprob: -15.64834213256836
    8. '999' → logprob: -15.64834213256836
    9. '400' → logprob: -16.52334213256836
    10. '250' → logprob: -16.77334213256836

Token 33: '748' (ID: 39478)
  Prédit: '748'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '748' → logprob: -0.0004926258116029203
    2. '7' → logprob: -8.500493049621582
    3. '747' → logprob: -8.750493049621582
    4. '743' → logprob: -9.625493049621582
    5. '74' → logprob: -10.000493049621582
    6. '700' → logprob: -11.750493049621582
    7. '738' → logprob: -12.625493049621582
    8. '737' → logprob: -12.875493049621582
    9. '728' → logprob: -13.000493049621582
    10. '783' → logprob: -14.250493049621582

Token 34: '364' (ID: 30673)
  Prédit: '364'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '364' → logprob: -2.045823566731997e-05
    2. '363' → logprob: -11.375020027160645
    3. '362' → logprob: -12.375020027160645
    4. '36' → logprob: -12.625020027160645
    5. '3' → logprob: -14.125020027160645
    6. '    
' → logprob: -15.125020027160645
    7. '366' → logprob: -16.37502098083496
    8. '367' → logprob: -16.75002098083496
    9. '360' → logprob: -16.87502098083496
    10. '000' → logprob: -17.12502098083496

Token 35: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -5.512236498361744e-07
    2. '6' → logprob: -14.750000953674316
    3. ')' → logprob: -16.0
    4. '8' → logprob: -17.0
    5. '5' → logprob: -19.875
    6. '0' → logprob: -20.125
    7. '2' → logprob: -21.125
    8. '```' → logprob: -21.75
    9. '))' → logprob: -22.125
    10. ' ' → logprob: -22.25

Token 36: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.125000953674316
    3. ')
' → logprob: -14.500000953674316
    4. '))' → logprob: -17.500001907348633
    5. ')

' → logprob: -18.125001907348633
    6. '),' → logprob: -18.875001907348633
    7. '}' → logprob: -19.250001907348633
    8. ')#' → logprob: -19.750001907348633
    9. '`)' → logprob: -20.000001907348633
    10. ')
' → logprob: -20.250001907348633

Token 37: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.48976296186447144
    2. '
' → logprob: -0.9897629618644714
    3. 'def' → logprob: -4.989762783050537
    4. '
' → logprob: -5.739762783050537
    5. '' → logprob: -6.989762783050537
    6. 'class' → logprob: -7.239762783050537
    7. '```' → logprob: -7.239762783050537
    8. '\n' → logprob: -7.364762783050537
    9. '#' → logprob: -7.364762783050537
    10. '\' → logprob: -7.739762783050537

Token 38: ' heap' (ID: 37237)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.33189594745635986
    2. 'collections' → logprob: -1.3318959474563599
    3. ' itertools' → logprob: -4.83189582824707
    4. ' functools' → logprob: -5.08189582824707
    5. ' math' → logprob: -6.33189582824707
    6. ' heap' → logprob: -7.08189582824707
    7. ' typing' → logprob: -7.45689582824707
    8. ' threading' → logprob: -7.58189582824707
    9. 'heap' → logprob: -8.45689582824707
    10. ' queue' → logprob: -8.95689582824707

Token 39: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. 'import' → logprob: -16.125
    3. 'queue' → logprob: -17.25
    4. ' queue' → logprob: -19.75
    5. ' import' → logprob: -20.25
    6. 'i' → logprob: -20.25
    7. 'n' → logprob: -20.875
    8. 'f' → logprob: -21.125
    9. 'que' → logprob: -21.875
    10. 'o' → logprob: -22.125

Token 40: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.016088567674160004
    2. 'import' → logprob: -4.141088485717773
    3. ' ' → logprob: -10.266088485717773
    4. '	import' → logprob: -11.266088485717773
    5. '<|end|>' → logprob: -12.766088485717773
    6. '_import' → logprob: -13.016088485717773
    7. ' importar' → logprob: -14.891088485717773
    8. ' Import' → logprob: -15.641088485717773
    9. ' im' → logprob: -15.891088485717773
    10. ' ‌' → logprob: -16.016088485717773

Token 41: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.011541583575308323
    2. 'he' → logprob: -4.511541366577148
    3. ' heap' → logprob: -7.886541366577148
    4. 'heap' → logprob: -9.261541366577148
    5. ' ' → logprob: -11.261541366577148
    6. ' n' → logprob: -12.761541366577148
    7. ' merge' → logprob: -13.261541366577148
    8. '.he' → logprob: -13.511541366577148
    9. 'merge' → logprob: -14.386541366577148
    10. ' hea' → logprob: -14.511541366577148

Token 42: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.023258639499545097
    2. 'ap' → logprob: -3.773258686065674
    3. 'a' → logprob: -11.273258209228516
    4. 'ап' → logprob: -16.023258209228516
    5. 'aq' → logprob: -16.273258209228516
    6. '```' → logprob: -16.398258209228516
    7. 'q' → logprob: -17.898258209228516
    8. 'appen' → logprob: -18.023258209228516
    9. 'push' → logprob: -18.273258209228516
    10. 'apput' → logprob: -18.398258209228516

Token 43: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0007102862582542002
    2. 'op' → logprob: -7.250710487365723
    3. 'us' → logprob: -15.875710487365723
    4. '```' → logprob: -16.250709533691406
    5. 'push' → logprob: -17.500709533691406
    6. 'ut' → logprob: -18.250709533691406
    7. 'u' → logprob: -18.500709533691406
    8. '   ' → logprob: -18.625709533691406
    9. '[' → logprob: -19.000709533691406
    10. 'o' → logprob: -19.250709533691406

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20277047157287598
    2. ' he' → logprob: -2.327770471572876
    3. ' ' → logprob: -3.077770471572876
    4. '<|end|>' → logprob: -3.952770471572876
    5. ' ,' → logprob: -4.577770233154297
    6. 'he' → logprob: -4.702770233154297
    7. ' as' → logprob: -7.077770233154297
    8. ' and' → logprob: -8.702770233154297
    9. ' ' → logprob: -9.202770233154297
    10. '<|end|>' → logprob: -9.452770233154297

Token 45: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.018188927322626114
    2. 'he' → logprob: -4.018188953399658
    3. 'heap' → logprob: -10.7681884765625
    4. ' heap' → logprob: -11.2681884765625
    5. ' ' → logprob: -12.8931884765625
    6. '.he' → logprob: -14.0181884765625
    7. '_he' → logprob: -14.3931884765625
    8. '```' → logprob: -15.1431884765625
    9. ' ' → logprob: -16.0181884765625
    10. ' hea' → logprob: -16.1431884765625

Token 46: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0002613358374219388
    2. 'ap' → logprob: -8.250261306762695
    3. 'appen' → logprob: -18.000261306762695
    4. ' app' → logprob: -18.625261306762695
    5. 'a' → logprob: -19.250261306762695
    6. '_app' → logprob: -19.375261306762695
    7. 'pop' → logprob: -19.375261306762695
    8. 'ап' → logprob: -19.500261306762695
    9. 'App' → logprob: -19.625261306762695
    10. 'pp' → logprob: -19.875261306762695

Token 47: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -8.518582762917504e-05
    2. 'ush' → logprob: -9.37508487701416
    3. 'o' → logprob: -15.75008487701416
    4. '   ' → logprob: -16.500085830688477
    5. '```' → logprob: -17.375085830688477
    6. 'оп' → logprob: -17.875085830688477
    7. '

' → logprob: -18.125085830688477
    8. ' op' → logprob: -18.125085830688477
    9. 'opleft' → logprob: -18.125085830688477
    10. 'opf' → logprob: -18.250085830688477

Token 48: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1502406746149063
    2. '

' → logprob: -3.400240659713745
    3. 'import' → logprob: -3.525240659713745
    4. '' → logprob: -3.650240659713745
    5. 'def' → logprob: -3.650240659713745
    6. '<|end|>' → logprob: -4.900240898132324
    7. '```' → logprob: -5.275240898132324
    8. ' 
' → logprob: -6.025240898132324
    9. '
' → logprob: -6.025240898132324
    10. '#' → logprob: -6.400240898132324

Token 49: ' he' (ID: 501)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.1787922978401184
    2. ' heap' → logprob: -2.1787922382354736
    3. 'he' → logprob: -3.6787922382354736
    4. ' he' → logprob: -3.6787922382354736
    5. '.heap' → logprob: -10.553791999816895
    6. ' heaps' → logprob: -12.428791999816895
    7. '(heap' → logprob: -12.928791999816895
    8. '_heap' → logprob: -13.303791999816895
    9. '```' → logprob: -15.178791999816895
    10. '.he' → logprob: -15.553791999816895

Token 50: 'app' (ID: 903)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.008753546513617039
    2. 'app' → logprob: -4.758753776550293
    3. 'a' → logprob: -9.383753776550293
    4. 'ап' → logprob: -10.383753776550293
    5. 'aps' → logprob: -11.258753776550293
    6. '```' → logprob: -13.008753776550293
    7. 'aq' → logprob: -13.258753776550293
    8. '	ap' → logprob: -13.508753776550293
    9. 'sp' → logprob: -14.258753776550293
    10. '[' → logprob: -14.383753776550293

Token 51: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0004473540757317096
    2. 'op' → logprob: -7.7504472732543945
    3. 'sh' → logprob: -12.250447273254395
    4. 'push' → logprob: -12.500447273254395
    5. 'replace' → logprob: -13.375447273254395
    6. 'lush' → logprob: -14.000447273254395
    7. 'l' → logprob: -14.375447273254395
    8. 'o' → logprob: -14.500447273254395
    9. 'u' → logprob: -14.875447273254395
    10. '   ' → logprob: -15.000447273254395

Token 52: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.3422817587852478
    2. 'replace' → logprob: -1.9672818183898926
    3. '_unique' → logprob: -3.3422818183898926
    4. ' ' → logprob: -3.7172818183898926
    5. '_replace' → logprob: -3.9672818183898926
    6. '_pop' → logprob: -4.217281818389893
    7. 's' → logprob: -4.342281818389893
    8. '<|end|>' → logprob: -5.092281818389893
    9. 'remove' → logprob: -5.717281818389893
    10. ',' → logprob: -5.967281818389893

Token 53: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19106632471084595
    2. '' → logprob: -3.316066265106201
    3. ' 
' → logprob: -3.316066265106201
    4. '

' → logprob: -3.441066265106201
    5. 'def' → logprob: -3.816066265106201
    6. '<|end|>' → logprob: -4.316066265106201
    7. ' ' → logprob: -4.941066265106201
    8. ' 

' → logprob: -5.191066265106201
    9. '#' → logprob: -5.316066265106201
    10. '\n' → logprob: -5.691066265106201

Token 54: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18478816747665405
    2. '

' → logprob: -1.9347882270812988
    3. 'def' → logprob: -4.684788227081299
    4. 'import' → logprob: -5.309788227081299
    5. '
' → logprob: -5.684788227081299
    6. '' → logprob: -6.059788227081299
    7. '\n' → logprob: -6.559788227081299
    8. '```' → logprob: -7.309788227081299
    9. '\' → logprob: -7.559788227081299
    10. '#' → logprob: -7.684788227081299

Token 55: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.08087654411792755
    2. ' collections' → logprob: -2.580876588821411
    3. ' itertools' → logprob: -6.330876350402832
    4. 'queue' → logprob: -9.205876350402832
    5. 'it' → logprob: -9.955876350402832
    6. ' functools' → logprob: -11.455876350402832
    7. '_queue' → logprob: -11.705876350402832
    8. ' queue' → logprob: -11.705876350402832
    9. 'math' → logprob: -11.705876350402832
    10. ' math' → logprob: -12.830876350402832

Token 56: ' import' (ID: 1588)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.2972217798233032
    2. 'import' → logprob: -1.4222217798233032
    3. 'ort' → logprob: -4.547221660614014
    4. 'odule' → logprob: -6.172221660614014
    5. ' import' → logprob: -7.172221660614014
    6. 'abc' → logprob: -7.297221660614014
    7. 'orts' → logprob: -7.672221660614014
    8. 'ut' → logprob: -8.172222137451172
    9. 'aport' → logprob: -8.172222137451172
    10. 'ports' → logprob: -8.672222137451172

Token 57: ' defaultdict' (ID: 107098)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.48297491669654846
    2. ' defaultdict' → logprob: -0.9829748868942261
    3. 'deque' → logprob: -4.732975006103516
    4. 'default' → logprob: -9.857975006103516
    5. 'de' → logprob: -12.357975006103516
    6. ' de' → logprob: -14.232975006103516
    7. ' default' → logprob: -14.482975006103516
    8. ' Counter' → logprob: -14.982975006103516
    9. '.de' → logprob: -17.482975006103516
    10. '_de' → logprob: -17.732975006103516

Token 58: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6980406045913696
    2. '
' → logprob: -1.4480406045913696
    3. '<|end|>' → logprob: -2.32304048538208
    4. 'def' → logprob: -2.94804048538208
    5. '

' → logprob: -3.19804048538208
    6. ',' → logprob: -3.82304048538208
    7. '' → logprob: -4.07304048538208
    8. '\n' → logprob: -4.94804048538208
    9. 'class' → logprob: -5.69804048538208
    10. '\' → logprob: -5.69804048538208

Token 59: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2019511461257935
    2. 'import' → logprob: -1.2019511461257935
    3. '<|end|>' → logprob: -1.3269511461257935
    4. '

' → logprob: -2.951951026916504
    5. ',' → logprob: -3.326951026916504
    6. '<|end|>' → logprob: -4.451951026916504
    7. 'from' → logprob: -4.951951026916504
    8. 'def' → logprob: -5.201951026916504
    9. '```' → logprob: -5.451951026916504
    10. 'class' → logprob: -5.951951026916504

Token 60: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.03533797338604927
    2. ' typing' → logprob: -3.9103379249572754
    3. ' functools' → logprob: -4.910337924957275
    4. ' math' → logprob: -5.285337924957275
    5. ' queue' → logprob: -6.785337924957275
    6. ' collections' → logprob: -7.160337924957275
    7. ' heap' → logprob: -9.160338401794434
    8. ' ' → logprob: -9.285338401794434
    9. ' operator' → logprob: -9.785338401794434
    10. ' sys' → logprob: -10.535338401794434

Token 61: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.003375672735273838
    2. 'import' → logprob: -5.87837553024292
    3. ' ' → logprob: -7.62837553024292
    4. '<|end|>' → logprob: -10.378376007080078
    5. '	import' → logprob: -10.628376007080078
    6. '.' → logprob: -11.628376007080078
    7. ' itertools' → logprob: -12.253376007080078
    8. ' im' → logprob: -12.753376007080078
    9. '<|end|>' → logprob: -13.128376007080078
    10. '_import' → logprob: -13.253376007080078

Token 62: ' accumulate' (ID: 74226)
  Prédit: ' accumulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accumulate' → logprob: -0.4246853291988373
    2. ' permutations' → logprob: -1.6746853590011597
    3. ' combinations' → logprob: -2.29968523979187
    4. 'com' → logprob: -3.54968523979187
    5. 'acc' → logprob: -4.424685478210449
    6. ' product' → logprob: -4.924685478210449
    7. 'product' → logprob: -5.549685478210449
    8. ' chain' → logprob: -6.174685478210449
    9. ' group' → logprob: -6.799685478210449
    10. ' ' → logprob: -7.049685478210449

Token 63: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' collections' (ID: 22690)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.4377020299434662
    2. ' math' → logprob: -1.8127020597457886
    3. 'operator' → logprob: -2.062701940536499
    4. 'math' → logprob: -3.312701940536499
    5. ' functools' → logprob: -3.937701940536499
    6. ' bis' → logprob: -5.562702178955078
    7. 'bis' → logprob: -6.437702178955078
    8. ' typing' → logprob: -6.812702178955078
    9. ' fractions' → logprob: -8.187702178955078
    10. ' ' → logprob: -8.187702178955078

Token 66: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.25728535652160645
    2. ' import' → logprob: -1.5072853565216064
    3. '<|end|>' → logprob: -5.507285118103027
    4. '	import' → logprob: -7.007285118103027
    5. '.' → logprob: -8.882285118103027
    6. '_import' → logprob: -9.507285118103027
    7. '<|end|>' → logprob: -10.757285118103027
    8. '.import' → logprob: -10.882285118103027
    9. 'port' → logprob: -11.132285118103027
    10. ' ' → logprob: -11.382285118103027

Token 67: ' Counter' (ID: 32251)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.19519805908203125
    2. 'deque' → logprob: -1.9451980590820312
    3. ' defaultdict' → logprob: -3.6951980590820312
    4. ' Counter' → logprob: -4.695198059082031
    5. 'Counter' → logprob: -8.570198059082031
    6. 'de' → logprob: -9.945198059082031
    7. ' de' → logprob: -10.195198059082031
    8. ' named' → logprob: -10.195198059082031
    9. ' Ordered' → logprob: -10.820198059082031
    10. 'default' → logprob: -10.945198059082031

Token 68: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7054786682128906
    2. '<|end|>' → logprob: -0.8304786682128906
    3. 'import' → logprob: -3.3304786682128906
    4. '

' → logprob: -3.7054786682128906
    5. 'def' → logprob: -5.705478668212891
    6. '<|end|>' → logprob: -6.205478668212891
    7. '```' → logprob: -6.705478668212891
    8. '\n' → logprob: -7.205478668212891
    9. '#' → logprob: -7.455478668212891
    10. '
' → logprob: -7.830478668212891

Token 70: ' collections' (ID: 22690)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.5117614269256592
    2. ' operator' → logprob: -2.011761426925659
    3. ' functools' → logprob: -2.011761426925659
    4. ' math' → logprob: -2.136761426925659
    5. ' itertools' → logprob: -5.136761665344238
    6. ' random' → logprob: -6.636761665344238
    7. ' heap' → logprob: -6.761761665344238
    8. ' collections' → logprob: -6.886761665344238
    9. ' fractions' → logprob: -6.886761665344238
    10. ' queue' → logprob: -6.886761665344238

Token 71: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.25361475348472595
    2. ' import' → logprob: -1.5036147832870483
    3. '<|end|>' → logprob: -7.378614902496338
    4. 'collections' → logprob: -8.12861442565918
    5. 'abc' → logprob: -8.62861442565918
    6. '	import' → logprob: -8.87861442565918
    7. ' ' → logprob: -9.12861442565918
    8. 'port' → logprob: -9.87861442565918
    9. ' imports' → logprob: -10.50361442565918
    10. '_import' → logprob: -10.75361442565918

Token 72: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.04690762236714363
    2. 'deque' → logprob: -3.421907663345337
    3. ' defaultdict' → logprob: -4.546907424926758
    4. ' Ordered' → logprob: -6.046907424926758
    5. ' named' → logprob: -9.171907424926758
    6. 'Ordered' → logprob: -9.796907424926758
    7. ' de' → logprob: -10.796907424926758
    8. ' ' → logprob: -11.296907424926758
    9. 'named' → logprob: -12.046907424926758
    10. 'de' → logprob: -12.421907424926758

Token 73: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.244705468416214
    2. '

' → logprob: -2.3697054386138916
    3. 'def' → logprob: -2.9947054386138916
    4. 'import' → logprob: -3.1197054386138916
    5. '<|end|>' → logprob: -3.8697054386138916
    6. '#' → logprob: -6.994705677032471
    7. '<|end|>' → logprob: -6.994705677032471
    8. '```' → logprob: -6.994705677032471
    9. '\n' → logprob: -7.119705677032471
    10. '
' → logprob: -7.119705677032471

Token 75: ' operator' (ID: 11019)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.7872974872589111
    2. ' functools' → logprob: -1.4122974872589111
    3. ' heap' → logprob: -2.412297487258911
    4. ' math' → logprob: -2.662297487258911
    5. ' operator' → logprob: -2.912297487258911
    6. ' queue' → logprob: -3.662297487258911
    7. ' itertools' → logprob: -4.412297248840332
    8. ' random' → logprob: -4.662297248840332
    9. ' threading' → logprob: -4.787297248840332
    10. 'typing' → logprob: -5.162297248840332

Token 76: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.031347595155239105
    2. '<|end|>' → logprob: -4.281347751617432
    3. 'import' → logprob: -4.406347751617432
    4. ' ' → logprob: -5.406347751617432
    5. '.' → logprob: -8.406347274780273
    6. '<|end|>' → logprob: -10.156347274780273
    7. ' as' → logprob: -10.281347274780273
    8. '	import' → logprob: -10.781347274780273
    9. ' ' → logprob: -11.406347274780273
    10. ' impor' → logprob: -12.906347274780273

Token 77: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.32165536284446716
    2. 'item' → logprob: -1.3216553926467896
    3. ' attr' → logprob: -5.5716552734375
    4. 'attr' → logprob: -6.9466552734375
    5. ' ' → logprob: -7.0716552734375
    6. '	item' → logprob: -7.5716552734375
    7. '.item' → logprob: -7.8216552734375
    8. ' mul' → logprob: -7.8216552734375
    9. 'getitem' → logprob: -7.8216552734375
    10. 'mul' → logprob: -8.4466552734375

Token 78: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -5.32392441527918e-05
    2. 'get' → logprob: -9.875053405761719
    3. 'getitem' → logprob: -13.750053405761719
    4. 'gett' → logprob: -14.625053405761719
    5. 'Getter' → logprob: -17.00005340576172
    6. '
' → logprob: -17.37505340576172
    7. 'item' → logprob: -18.50005340576172
    8. 'attr' → logprob: -18.50005340576172
    9. 'setter' → logprob: -18.87505340576172
    10. 'g' → logprob: -19.12505340576172

Token 79: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09835146367549896
    2. '

' → logprob: -3.22335147857666
    3. '\n' → logprob: -3.47335147857666
    4. 'import' → logprob: -4.84835147857666
    5. 'def' → logprob: -5.97335147857666
    6. '
' → logprob: -6.09835147857666
    7. '' → logprob: -6.09835147857666
    8. ',' → logprob: -6.22335147857666
    9. ' 
' → logprob: -6.47335147857666
    10. '\' → logprob: -6.84835147857666

Token 80: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.438719242811203
    2. 'import' → logprob: -2.0637192726135254
    3. 'def' → logprob: -2.4387192726135254
    4. '<|end|>' → logprob: -2.5637192726135254
    5. '

' → logprob: -3.4387192726135254
    6. '\n' → logprob: -4.313719272613525
    7. '\' → logprob: -5.688719272613525
    8. 'from' → logprob: -6.188719272613525
    9. '<|end|>' → logprob: -6.188719272613525
    10. '#' → logprob: -6.688719272613525

Token 81: ' itertools' (ID: 103178)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.0876196026802063
    2. 'math' → logprob: -3.2126195430755615
    3. 'fun' → logprob: -3.4626195430755615
    4. ' math' → logprob: -5.712619781494141
    5. 'operator' → logprob: -5.837619781494141
    6. 'heap' → logprob: -6.212619781494141
    7. ' itertools' → logprob: -6.462619781494141
    8. ' heap' → logprob: -7.462619781494141
    9. ' operator' → logprob: -8.21261978149414
    10. 'typing' → logprob: -8.21261978149414

Token 82: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.017339413985610008
    2. 'import' → logprob: -4.26733922958374
    3. '<|end|>' → logprob: -5.89233922958374
    4. ' ' → logprob: -8.017339706420898
    5. '<|end|>' → logprob: -10.392339706420898
    6. '	import' → logprob: -10.517339706420898
    7. '.' → logprob: -11.267339706420898
    8. ' ' → logprob: -12.892339706420898
    9. ' .' → logprob: -13.517339706420898
    10. ' itertools' → logprob: -13.767339706420898

Token 83: ' permutations' (ID: 174595)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.7533315420150757
    2. 'product' → logprob: -1.5033315420150757
    3. 'com' → logprob: -2.0033316612243652
    4. ' permutations' → logprob: -2.7533316612243652
    5. 'per' → logprob: -3.1283316612243652
    6. ' group' → logprob: -3.5033316612243652
    7. 'count' → logprob: -4.503331661224365
    8. 'acc' → logprob: -5.003331661224365
    9. ' product' → logprob: -5.378331661224365
    10. ' accumulate' → logprob: -5.628331661224365

Token 84: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0978621244430542
    2. ',' → logprob: -1.4728621244430542
    3. '\n' → logprob: -1.8478621244430542
    4. 'from' → logprob: -2.2228622436523438
    5. 'import' → logprob: -2.5978622436523438
    6. 'def' → logprob: -3.2228622436523438
    7. ',
' → logprob: -3.7228622436523438
    8. '<|end|>' → logprob: -4.722862243652344
    9. 'for' → logprob: -5.472862243652344
    10. ' as' → logprob: -5.597862243652344

Token 85: 'mod' (ID: 4847)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2294822484254837
    2. '=' → logprob: -1.7294822931289673
    3. ' ' → logprob: -3.6044821739196777
    4. '<|end|>' → logprob: -8.104482650756836
    5. ',' → logprob: -10.229482650756836
    6. '_' → logprob: -10.604482650756836
    7. ' =)' → logprob: -10.604482650756836
    8. '.' → logprob: -10.854482650756836
    9. '  ' → logprob: -10.979482650756836
    10. ' =
' → logprob: -11.229482650756836

Token 87: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4819410443305969
    2. ' ' → logprob: -0.9819410443305969
    3. '100' → logprob: -4.856941223144531
    4. '998' → logprob: -9.856941223144531
    5. '1' → logprob: -12.481941223144531
    6. 'int' → logprob: -13.731941223144531
    7. ' (' → logprob: -14.231941223144531
    8. 'pow' → logprob: -15.231941223144531
    9. '(' → logprob: -15.356941223144531
    10. ' int' → logprob: -16.23194122314453

Token 88: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.006123006343841553
    2. '100' → logprob: -5.256123065948486
    3. '998' → logprob: -7.131123065948486
    4. ' ' → logprob: -9.381122589111328
    5. '1' → logprob: -12.381122589111328
    6. 'int' → logprob: -15.131122589111328
    7. '(' → logprob: -17.006122589111328
    8. '999' → logprob: -17.006122589111328
    9. 'pow' → logprob: -17.381122589111328
    10. '0' → logprob: -17.381122589111328

Token 89: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.022094998508691788
    2. '09' → logprob: -4.022095203399658
    3. '**' → logprob: -5.897095203399658
    4. '07' → logprob: -7.897095203399658
    5. '000' → logprob: -7.897095203399658
    6. '00' → logprob: -8.3970947265625
    7. '0' → logprob: -8.8970947265625
    8. '7' → logprob: -10.2720947265625
    9. '^' → logprob: -11.2720947265625
    10. '007' → logprob: -11.5220947265625

Token 90: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.531315314830863e-06
    2. '09' → logprob: -12.625003814697266
    3. '+' → logprob: -16.625003814697266
    4. ' ' → logprob: -17.125003814697266
    5. '```' → logprob: -18.875003814697266
    6. '009' → logprob: -20.750003814697266
    7. '10' → logprob: -20.875003814697266
    8. '_' → logprob: -21.000003814697266
    9. '19' → logprob: -21.250003814697266
    10. '９' → logprob: -21.625003814697266

Token 91: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007287554908543825
    2. '7' → logprob: -7.750728607177734
    3. ' +' → logprob: -8.125728607177734
    4. '+
' → logprob: -14.625728607177734
    5. '9' → logprob: -15.125728607177734
    6. ' plus' → logprob: -15.250728607177734
    7. '＋' → logprob: -15.250728607177734
    8. ' ' → logprob: -15.500728607177734
    9. '```' → logprob: -15.625728607177734
    10. '+

' → logprob: -15.625728607177734

Token 92: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '+' → logprob: -17.375
    4. '9' → logprob: -18.0
    5. '07' → logprob: -20.0
    6. '```' → logprob: -20.0
    7. '   ' → logprob: -20.375
    8. '  ' → logprob: -20.5
    9. '

' → logprob: -20.75
    10. ' ' → logprob: -21.8125

Token 93: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. '07' → logprob: -19.625
    4. '+' → logprob: -19.875
    5. '```' → logprob: -19.875
    6. '   ' → logprob: -20.625
    7. '9' → logprob: -20.75
    8. '

' → logprob: -21.25
    9. '79' → logprob: -21.625
    10. '７' → logprob: -21.875

Token 94: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02485639415681362
    2. 'def' → logprob: -4.7748565673828125
    3. '

' → logprob: -4.8998565673828125
    4. '<|end|>' → logprob: -5.5248565673828125
    5. '' → logprob: -6.1498565673828125
    6. '
' → logprob: -6.5248565673828125
    7. '\n' → logprob: -8.024856567382812
    8. '#' → logprob: -8.649856567382812
    9. ' 
' → logprob: -8.649856567382812
    10. '<|end|>' → logprob: -9.399856567382812

Token 95: 'inf' (ID: 22226)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05113346502184868
    2. 'def' → logprob: -3.301133394241333
    3. '

' → logprob: -4.801133632659912
    4. '
' → logprob: -6.801133632659912
    5. '\n' → logprob: -6.801133632659912
    6. '' → logprob: -7.301133632659912
    7. '<|end|>' → logprob: -7.301133632659912
    8. '#' → logprob: -7.801133632659912
    9. 'n' → logprob: -8.051133155822754
    10. '```' → logprob: -9.051133155822754

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02979203499853611
    2. '=' → logprob: -3.529792070388794
    3. ',' → logprob: -10.654791831970215
    4. ')' → logprob: -13.029791831970215
    5. ' ' → logprob: -13.404791831970215
    6. '‌' → logprob: -13.529791831970215
    7. 'a' → logprob: -13.654791831970215
    8. ' ' → logprob: -13.779791831970215
    9. ' =
' → logprob: -14.279791831970215
    10. '<|end|>' → logprob: -14.279791831970215

Token 97: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08716203272342682
    2. '10' → logprob: -3.0871620178222656
    3. ' float' → logprob: -3.9621620178222656
    4. 'float' → logprob: -4.087162017822266
    5. '214' → logprob: -6.337162017822266
    6. '1' → logprob: -8.837162017822266
    7. '100' → logprob: -10.462162017822266
    8. '2' → logprob: -11.212162017822266
    9. '922' → logprob: -11.212162017822266
    10. 'int' → logprob: -11.462162017822266

Token 98: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.001194990472868085
    2. ''' → logprob: -7.626194953918457
    3. ''in' → logprob: -7.626194953918457
    4. '(' → logprob: -8.626194953918457
    5. '32' → logprob: -12.251194953918457
    6. '("' → logprob: -12.626194953918457
    7. ''a' → logprob: -12.876194953918457
    8. ''t' → logprob: -12.876194953918457
    9. ''s' → logprob: -13.501194953918457
    10. '"' → logprob: -13.626194953918457

Token 99: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.46517303586006165
    2. 'inf' → logprob: -1.0901730060577393
    3. ''' → logprob: -3.7151730060577393
    4. ''ins' → logprob: -6.215173244476318
    5. '64' → logprob: -6.590173244476318
    6. ''ex' → logprob: -6.840173244476318
    7. '32' → logprob: -6.965173244476318
    8. '"' → logprob: -7.215173244476318
    9. ''i' → logprob: -7.715173244476318
    10. ''inc' → logprob: -7.965173244476318

Token 100: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004080301150679588
    2. '')' → logprob: -5.504080295562744
    3. ')'' → logprob: -14.129080772399902
    4. ')
' → logprob: -14.504080772399902
    5. '")' → logprob: -15.004080772399902
    6. ' )' → logprob: -15.254080772399902
    7. '()' → logprob: -16.379079818725586
    8. '))' → logprob: -17.129079818725586
    9. ')

' → logprob: -17.504079818725586
    10. '')
' → logprob: -18.129079818725586

Token 101: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18850548565387726
    2. '
' → logprob: -1.8135055303573608
    3. '\n' → logprob: -5.93850564956665
    4. 'n' → logprob: -6.18850564956665
    5. 'class' → logprob: -6.31350564956665
    6. '

' → logprob: -6.93850564956665
    7. '\' → logprob: -7.56350564956665
    8. '#' → logprob: -8.813505172729492
    9. ' 
' → logprob: -9.063505172729492
    10. '<|end|>' → logprob: -9.313505172729492

Token 102: ' I' (ID: 357)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10008124262094498
    2. ' ' → logprob: -2.975081205368042
    3. ' dfs' → logprob: -3.725081205368042
    4. ' solve' → logprob: -4.225081443786621
    5. ' factorial' → logprob: -6.725081443786621
    6. ' factor' → logprob: -6.850081443786621
    7. ' _' → logprob: -7.350081443786621
    8. '_' → logprob: -7.600081443786621
    9. ' add' → logprob: -7.975081443786621
    10. ' calculate' → logprob: -8.725081443786621

Token 103: '():
' (ID: 8595)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006369420792907476
    2. 'nt' → logprob: -5.881369590759277
    3. 'nit' → logprob: -6.381369590759277
    4. 'N' → logprob: -7.006369590759277
    5. 'np' → logprob: -7.881369590759277
    6. '():' → logprob: -8.256369590759277
    7. '(n' → logprob: -8.881369590759277
    8. '()' → logprob: -9.756369590759277
    9. '_n' → logprob: -9.881369590759277
    10. '():
' → logprob: -10.631369590759277

Token 104: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.03463510796427727
    2. 'return' → logprob: -3.659635066986084
    3. '   ' → logprob: -5.409635066986084
    4. ' ' → logprob: -6.034635066986084
    5. '    ' → logprob: -6.784635066986084
    6. ' input' → logprob: -9.784635543823242
    7. '	return' → logprob: -9.784635543823242
    8. ' n' → logprob: -10.034635543823242
    9. 'n' → logprob: -10.409635543823242
    10. ':return' → logprob: -10.784635543823242

Token 105: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1449703872203827
    2. 'int' → logprob: -2.394970417022705
    3. ' return' → logprob: -3.144970417022705
    4. ' int' → logprob: -7.269970417022705
    5. '   ' → logprob: -12.519969940185547
    6. ' ' → logprob: -12.644969940185547
    7. 'input' → logprob: -13.269969940185547
    8. '	return' → logprob: -13.644969940185547
    9. 'map' → logprob: -14.019969940185547
    10. 'import' → logprob: -14.894969940185547

Token 106: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.038223594427108765
    2. ' int' → logprob: -3.2882235050201416
    3. 'map' → logprob: -8.913223266601562
    4. ' map' → logprob: -10.413223266601562
    5. 'input' → logprob: -12.163223266601562
    6. 'list' → logprob: -12.288223266601562
    7. ' list' → logprob: -13.413223266601562
    8. '(int' → logprob: -13.538223266601562
    9. 'sys' → logprob: -13.788223266601562
    10. '[int' → logprob: -13.788223266601562

Token 107: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01354357972741127
    2. '(' → logprob: -4.888543605804443
    3. '(sys' → logprob: -5.138543605804443
    4. 'input' → logprob: -10.013543128967285
    5. '()' → logprob: -12.888543128967285
    6. '(stdin' → logprob: -13.638543128967285
    7. '(int' → logprob: -14.013543128967285
    8. '(
' → logprob: -14.013543128967285
    9. ' (' → logprob: -14.513543128967285
    10. '(inp' → logprob: -14.763543128967285

Token 108: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.061054359131958e-06
    2. '.readline' → logprob: -12.375007629394531
    3. '.argv' → logprob: -12.750007629394531
    4. '.' → logprob: -14.250007629394531
    5. '.stdout' → logprob: -15.250007629394531
    6. '.std' → logprob: -16.75000762939453
    7. '(stdin' → logprob: -16.75000762939453
    8. 'stdin' → logprob: -17.00000762939453
    9. '.input' → logprob: -17.87500762939453
    10. ' stdin' → logprob: -19.25000762939453

Token 109: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.704273118884885e-07
    2. '.read' → logprob: -14.750000953674316
    3. '.' → logprob: -15.500000953674316
    4. ' readline' → logprob: -17.875
    5. '.buffer' → logprob: -18.625
    6. '.stdin' → logprob: -19.75
    7. 'read' → logprob: -20.25
    8. '.readlines' → logprob: -21.0
    9. ' .' → logprob: -21.375
    10. 'buffer' → logprob: -21.625

Token 110: '())

' (ID: 27654)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4744707942008972
    2. '())' → logprob: -0.9744707942008972
    3. '()' → logprob: -7.849470615386963
    4. ' ())' → logprob: -13.474471092224121
    5. '(' → logprob: -13.599471092224121
    6. '();)' → logprob: -15.099471092224121
    7. ')' → logprob: -15.224471092224121
    8. '()]' → logprob: -16.224470138549805
    9. '()))' → logprob: -16.474470138549805
    10. '()\' → logprob: -16.974470138549805

Token 111: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008259357884526253
    2. '()' → logprob: -5.258259296417236
    3. '<|end|>' → logprob: -5.883259296417236
    4. ' def' → logprob: -9.633259773254395
    5. '(' → logprob: -10.008259773254395
    6. ')' → logprob: -10.383259773254395
    7. '\' → logprob: -10.883259773254395
    8. '()\' → logprob: -11.383259773254395
    9. '<|end|>' → logprob: -11.508259773254395
    10. '()
' → logprob: -11.633259773254395

Token 112: ' LI' (ID: 14875)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6138570308685303
    2. 'L' → logprob: -1.4888570308685303
    3. ' S' → logprob: -2.4888570308685303
    4. ' L' → logprob: -3.3638570308685303
    5. 'input' → logprob: -4.238857269287109
    6. 'int' → logprob: -4.488857269287109
    7. 'F' → logprob: -4.488857269287109
    8. 'J' → logprob: -4.488857269287109
    9. 'M' → logprob: -4.738857269287109
    10. '()' → logprob: -4.863857269287109

Token 113: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006437891628593206
    2. '()' → logprob: -5.1314377784729
    3. '():
' → logprob: -8.381438255310059
    4. 'st' → logprob: -8.506438255310059
    5. 'ne' → logprob: -10.006438255310059
    6. 'n' → logprob: -11.631438255310059
    7. '[]' → logprob: -12.256438255310059
    8. '().' → logprob: -12.881438255310059
    9. ' ():' → logprob: -12.881438255310059
    10. ' ()' → logprob: -13.131438255310059

Token 114: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.16574311256408691
    2. '():
' → logprob: -2.290743112564087
    3. '()' → logprob: -3.165743112564087
    4. 'return' → logprob: -5.665742874145508
    5. ':' → logprob: -5.790742874145508
    6. '   ' → logprob: -7.290742874145508
    7. '().' → logprob: -7.665742874145508
    8. '()[' → logprob: -7.790742874145508
    9. ' return' → logprob: -8.415742874145508
    10. ':return' → logprob: -8.415742874145508

Token 115: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.051897503435611725
    2. ' list' → logprob: -3.0518975257873535
    3. 'return' (adapté à ' return') → logprob: -5.8018975257873535
    4. 'map' → logprob: -8.301897048950195
    5. ' return' → logprob: -10.801897048950195
    6. 'sys' → logprob: -11.676897048950195
    7. ' map' → logprob: -12.176897048950195
    8. '   ' → logprob: -14.926897048950195
    9. ' sys' → logprob: -15.801897048950195
    10. ' ' → logprob: -16.676897048950195

Token 116: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.008615399710834026
    2. ' list' → logprob: -4.758615493774414
    3. '[list' → logprob: -14.258615493774414
    4. 'map' → logprob: -16.258615493774414
    5. '	list' → logprob: -17.133615493774414
    6. '[' → logprob: -17.508615493774414
    7. '(list' → logprob: -18.008615493774414
    8. '=list' → logprob: -19.508615493774414
    9. ':list' → logprob: -20.383615493774414
    10. 'List' → logprob: -20.883615493774414

Token 117: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.0126840758603066e-05
    2. '(' → logprob: -10.125040054321289
    3. 'map' → logprob: -16.87504005432129
    4. '(sys' → logprob: -17.87504005432129
    5. '()' → logprob: -19.00004005432129
    6. '(
' → logprob: -19.12504005432129
    7. '	map' → logprob: -19.37504005432129
    8. '(int' → logprob: -19.62504005432129
    9. '(m' → logprob: -19.75004005432129
    10. ' map' → logprob: -19.87504005432129

Token 118: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015655691968277097
    2. 'int' → logprob: -6.501565456390381
    3. '(' → logprob: -10.376565933227539
    4. '<int' → logprob: -10.876565933227539
    5. '[int' → logprob: -12.876565933227539
    6. ' int' → logprob: -13.001565933227539
    7. '=int' → logprob: -13.126565933227539
    8. ',int' → logprob: -13.501565933227539
    9. ']int' → logprob: -13.501565933227539
    10. '```' → logprob: -13.626565933227539

Token 119: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.20470403134822845
    2. ',' → logprob: -1.7047040462493896
    3. 'sys' → logprob: -6.0797038078308105
    4. '=sys' → logprob: -7.8297038078308105
    5. '	sys' → logprob: -8.204704284667969
    6. ' sys' → logprob: -8.954704284667969
    7. ' ,' → logprob: -9.079704284667969
    8. '(' → logprob: -9.829704284667969
    9. ',input' → logprob: -11.454704284667969
    10. ' (' → logprob: -11.829704284667969

Token 120: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0003364158037584275
    2. ' sys' → logprob: -8.000336647033691
    3. 'input' → logprob: -14.750336647033691
    4. '(sys' → logprob: -15.375336647033691
    5. 'str' → logprob: -15.500336647033691
    6. '	sys' → logprob: -16.000335693359375
    7. '=sys' → logprob: -16.500335693359375
    8. 'lambda' → logprob: -18.250335693359375
    9. 'system' → logprob: -19.250335693359375
    10. 'split' → logprob: -19.250335693359375

Token 121: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.704065213445574e-05
    2. '.' → logprob: -10.500046730041504
    3. 'stdin' → logprob: -10.875046730041504
    4. '.std' → logprob: -15.750046730041504
    5. '.stdout' → logprob: -15.750046730041504
    6. '(stdin' → logprob: -15.875046730041504
    7. '.readline' → logprob: -16.50004768371582
    8. ' .' → logprob: -17.00004768371582
    9. '.argv' → logprob: -17.25004768371582
    10. ' stdin' → logprob: -17.62504768371582

Token 122: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.000509187753777951
    2. '().' → logprob: -8.000509262084961
    3. '=sys' → logprob: -9.625509262084961
    4. 'sys' → logprob: -9.875509262084961
    5. '(sys' → logprob: -10.375509262084961
    6. '.read' → logprob: -11.500509262084961
    7. '.stdin' → logprob: -11.875509262084961
    8. '.' → logprob: -12.125509262084961
    9. 'read' → logprob: -13.875509262084961
    10. '.sys' → logprob: -14.875509262084961

Token 123: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00022547018306795508
    2. '.readline' → logprob: -8.500225067138672
    3. '()' → logprob: -10.750225067138672
    4. ' ().' → logprob: -15.625225067138672
    5. '()))' → logprob: -16.500225067138672
    6. ')' → logprob: -17.125225067138672
    7. 'line' → logprob: -17.250225067138672
    8. '.' → logprob: -17.375225067138672
    9. ' readline' → logprob: -17.375225067138672
    10. '().__' → logprob: -17.875225067138672

Token 124: 'split' (ID: 13627)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.005000582430511713
    2. 'strip' → logprob: -5.505000591278076
    3. 'rstrip' → logprob: -7.005000591278076
    4. ' readline' → logprob: -12.005000114440918
    5. '.readline' → logprob: -12.255000114440918
    6. 'split' → logprob: -12.630000114440918
    7. ')' → logprob: -16.380001068115234
    8. 'decode' → logprob: -16.505001068115234
    9. 'readonly' → logprob: -17.755001068115234
    10. ' strip' → logprob: -18.130001068115234

Token 125: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3188782334327698
    2. '))' → logprob: -1.318878173828125
    3. '()' → logprob: -5.193878173828125
    4. '())' → logprob: -11.193878173828125
    5. '()))
' → logprob: -11.318878173828125
    6. '(' → logprob: -11.568878173828125
    7. '()));' → logprob: -12.443878173828125
    8. ')' → logprob: -12.818878173828125
    9. '()))

' → logprob: -12.818878173828125
    10. ')))' → logprob: -13.193878173828125

Token 126: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.539801688631997e-05
    2. 'class' → logprob: -10.000065803527832
    3. '
' → logprob: -11.125065803527832
    4. '\' → logprob: -13.375065803527832
    5. '```' → logprob: -14.125065803527832
    6. 'd' → logprob: -14.250065803527832
    7. '    
' → logprob: -14.500065803527832
    8. '#' → logprob: -15.000065803527832
    9. ' 
' → logprob: -15.625065803527832
    10. '  
' → logprob: -15.625065803527832

Token 127: ' get' (ID: 717)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.10458555817604065
    2. 'S' → logprob: -3.229585647583008
    3. ' LS' → logprob: -3.604585647583008
    4. 'L' → logprob: -3.854585647583008
    5. ' L' → logprob: -5.604585647583008
    6. ' input' → logprob: -5.979585647583008
    7. 'input' → logprob: -6.354585647583008
    8. 'print' → logprob: -6.729585647583008
    9. ' S' → logprob: -7.104585647583008
    10. 'I' → logprob: -8.104585647583008

Token 128: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.231754183769226
    2. '_max' → logprob: -1.856754183769226
    3. '_input' → logprob: -2.3567543029785156
    4. '_per' → logprob: -2.3567543029785156
    5. '_prime' → logprob: -3.6067543029785156
    6. '_list' → logprob: -3.8567543029785156
    7. '_query' → logprob: -3.8567543029785156
    8. '_unique' → logprob: -3.9817543029785156
    9. '_div' → logprob: -4.106754302978516
    10. '_prefix' → logprob: -4.231754302978516

Token 129: '_values' (ID: 20393)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005344755481928587
    2. '()' → logprob: -5.380344867706299
    3. '():
' → logprob: -7.630344867706299
    4. '_line' → logprob: -8.75534439086914
    5. '_lines' → logprob: -11.13034439086914
    6. '_' → logprob: -11.13034439086914
    7. 's' → logprob: -11.25534439086914
    8. 'line' → logprob: -12.00534439086914
    9. ' ():' → logprob: -12.13034439086914
    10. '_list' → logprob: -12.75534439086914

Token 130: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002481078845448792
    2. '():
' → logprob: -8.500247955322266
    3. ' ():' → logprob: -10.250247955322266
    4. '()' → logprob: -12.000247955322266
    5. '(' → logprob: -12.875247955322266
    6. '_' → logprob: -15.625247955322266
    7. '():

' → logprob: -16.500247955322266
    8. '().' → logprob: -16.500247955322266
    9. '(n' → logprob: -17.125247955322266
    10. '(prompt' → logprob: -17.125247955322266

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051589485257864
    2. '():' → logprob: -3.1765894889831543
    3. '():
' → logprob: -5.551589488983154
    4. '()' → logprob: -5.551589488983154
    5. ':' → logprob: -7.926589488983154
    6. '()
' → logprob: -9.301589012145996
    7. '    
' → logprob: -9.426589012145996
    8. '[]' → logprob: -9.676589012145996
    9. 'return' → logprob: -10.426589012145996
    10. '()[' → logprob: -10.676589012145996

Token 132: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5333105325698853
    2. ' return' → logprob: -1.0333105325698853
    3. 'return' → logprob: -3.0333104133605957
    4. ' n' → logprob: -5.033310413360596
    5. 'n' (adapté à ' n') → logprob: -6.283310413360596
    6. '    ' → logprob: -9.033310890197754
    7. ' ' → logprob: -9.158310890197754
    8. ' lines' → logprob: -9.283310890197754
    9. ' values' → logprob: -9.408310890197754
    10. ' line' → logprob: -9.533310890197754

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2204260379076004
    2. '=' → logprob: -2.095426082611084
    3. ' =' → logprob: -2.595426082611084
    4. ' ,' → logprob: -8.720425605773926
    5. '   ' → logprob: -12.345425605773926
    6. ')' → logprob: -12.595425605773926
    7. '()' → logprob: -12.720425605773926
    8. ' ' → logprob: -12.720425605773926
    9. ',n' → logprob: -12.845425605773926
    10. '=int' → logprob: -12.845425605773926

Token 134: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.35823705792427063
    2. 'k' → logprob: -1.9832370281219482
    3. ' m' → logprob: -1.9832370281219482
    4. ' k' → logprob: -3.7332370281219482
    5. ' =' → logprob: -7.483237266540527
    6. 'q' → logprob: -8.233237266540527
    7. 'a' → logprob: -8.608237266540527
    8. '=' → logprob: -8.608237266540527
    9. 'K' → logprob: -8.983237266540527
    10. ' ' → logprob: -9.608237266540527

Token 135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142912864685059
    2. ' =' → logprob: -1.7014291286468506
    3. ',' → logprob: -11.07642936706543
    4. ')' → logprob: -15.82642936706543
    5. '＝' → logprob: -16.57642936706543
    6. ' ' → logprob: -16.95142936706543
    7. '=line' → logprob: -17.20142936706543
    8. '=input' → logprob: -17.45142936706543
    9. '=

' → logprob: -17.45142936706543
    10. ')=' → logprob: -17.45142936706543

Token 136: ' LI' (ID: 14875)
  Prédit: ' LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' LI' → logprob: -0.26193901896476746
    2. ' map' → logprob: -1.7619390487670898
    3. 'LI' → logprob: -3.01193904876709
    4. ' I' → logprob: -5.26193904876709
    5. 'map' → logprob: -5.63693904876709
    6. 'I' → logprob: -7.76193904876709
    7. ' ' → logprob: -8.63693904876709
    8. ' L' → logprob: -9.76193904876709
    9. ' list' → logprob: -9.88693904876709
    10. ' sys' → logprob: -10.13693904876709

Token 137: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012596374144777656
    2. ')' → logprob: -6.876259803771973
    3. 'return' → logprob: -9.751259803771973
    4. '(' → logprob: -10.376259803771973
    5. '()
' → logprob: -10.376259803771973
    6. '#' → logprob: -10.501259803771973
    7. '<|end|>' → logprob: -10.501259803771973
    8. ',' → logprob: -11.126259803771973
    9. ' ()' → logprob: -11.626259803771973
    10. ']' → logprob: -12.126259803771973

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05139903351664543
    2. 'return' → logprob: -3.426398992538452
    3. ' return' → logprob: -4.801399230957031
    4. '
' → logprob: -5.051399230957031
    5. '	return' → logprob: -6.301399230957031
    6. '<|end|>' → logprob: -7.426399230957031
    7. '    
' → logprob: -8.301399230957031
    8. ' ' → logprob: -9.676399230957031
    9. ',' → logprob: -10.051399230957031
    10. '  ' → logprob: -10.176399230957031

Token 139: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9200775027275085
    2. ' return' → logprob: -1.1700775623321533
    3. 'a' → logprob: -2.4200775623321533
    4. 'arr' → logprob: -2.5450775623321533
    5. ' a' → logprob: -3.5450775623321533
    6. 'k' → logprob: -3.5450775623321533
    7. ' arr' → logprob: -4.295077323913574
    8. 's' → logprob: -4.545077323913574
    9. ' k' → logprob: -4.920077323913574
    10. '   ' → logprob: -5.170077323913574

Token 140: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931490898132324
    2. ' n' → logprob: -0.6931490898132324
    3. '(n' → logprob: -13.94314956665039
    4. '	n' → logprob: -14.31814956665039
    5. ' (' → logprob: -15.94314956665039
    6. ' ' → logprob: -16.69314956665039
    7. '[n' → logprob: -16.94314956665039
    8. ' ' → logprob: -17.19314956665039
    9. '   ' → logprob: -17.44314956665039
    10. '(' → logprob: -18.69314956665039

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004906039219349623
    2. ',m' → logprob: -5.379906177520752
    3. ' ,' → logprob: -8.379905700683594
    4. ',n' → logprob: -9.879905700683594
    5. 'm' → logprob: -12.379905700683594
    6. ',
' → logprob: -14.754905700683594
    7. '‌,' → logprob: -16.254905700683594
    8. ' ' → logprob: -16.504905700683594
    9. ',b' → logprob: -16.504905700683594
    10. ' m' → logprob: -16.879905700683594

Token 142: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4740781784057617
    2. ' m' → logprob: -0.9740781784057617
    3. ' ' → logprob: -13.724078178405762
    4. ' ' → logprob: -16.724079132080078
    5. '	m' → logprob: -17.849079132080078
    6. ',' → logprob: -18.599079132080078
    7. '<|end|>' → logprob: -19.099079132080078
    8. 'space' → logprob: -19.224079132080078
    9. '
' → logprob: -19.536579132080078
    10. 's' → logprob: -19.724079132080078

Token 143: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01100054383277893
    2. '
' → logprob: -5.386000633239746
    3. '<|end|>' → logprob: -5.386000633239746
    4. '#' → logprob: -7.011000633239746
    5. ',' → logprob: -7.761000633239746
    6. '\n' → logprob: -9.261000633239746
    7. '\' → logprob: -9.511000633239746
    8. '<|end|>' → logprob: -9.886000633239746
    9. ':' → logprob: -10.261000633239746
    10. '.' → logprob: -10.511000633239746

Token 144: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003598952607717365
    2. '\' → logprob: -8.875359535217285
    3. '#' → logprob: -9.375359535217285
    4. '\n' → logprob: -10.250359535217285
    5. '
' → logprob: -10.375359535217285
    6. '<|end|>' → logprob: -10.500359535217285
    7. 'class' → logprob: -11.375359535217285
    8. '.' → logprob: -12.000359535217285
    9. 'ndef' → logprob: -12.625359535217285
    10. 'n' → logprob: -12.750359535217285

Token 145: ' make' (ID: 1520)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.35929134488105774
    2. ' solve' → logprob: -1.2342913150787354
    3. 'solve' → logprob: -5.3592915534973145
    4. 'main' → logprob: -5.6092915534973145
    5. ' dfs' → logprob: -6.3592915534973145
    6. ' factorial' → logprob: -8.609291076660156
    7. ' solution' → logprob: -9.234291076660156
    8. ' process' → logprob: -9.734291076660156
    9. 'dfs' → logprob: -9.859291076660156
    10. ' get' → logprob: -9.984291076660156

Token 146: '_empty' (ID: 35051)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.42675361037254333
    2. '_arr' → logprob: -2.176753520965576
    3. '_' → logprob: -2.551753520965576
    4. '_list' → logprob: -2.676753520965576
    5. '_stack' → logprob: -4.301753520965576
    6. '_prefix' → logprob: -4.551753520965576
    7. '_pair' → logprob: -4.676753520965576
    8. '_matrix' → logprob: -4.801753520965576
    9. '_set' → logprob: -5.051753520965576
    10. '_tuple' → logprob: -5.301753520965576

Token 147: '_graph' (ID: 33441)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.5560123324394226
    2. '_' → logprob: -1.8060123920440674
    3. '_array' → logprob: -1.8060123920440674
    4. '_dict' → logprob: -3.1810123920440674
    5. '_map' → logprob: -3.6810123920440674
    6. '_set' → logprob: -4.056012153625488
    7. '_stack' → logprob: -5.431012153625488
    8. '_matrix' → logprob: -6.306012153625488
    9. '_table' → logprob: -6.306012153625488
    10. '_queue' → logprob: -6.556012153625488

Token 148: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.021886954084038734
    2. '(' → logprob: -3.8968870639801025
    3. '():' → logprob: -6.771886825561523
    4. '(size' → logprob: -9.521886825561523
    5. ' (' → logprob: -9.771886825561523
    6. '(num' → logprob: -10.021886825561523
    7. '(N' → logprob: -12.771886825561523
    8. '(_' → logprob: -12.771886825561523
    9. '(node' → logprob: -13.146886825561523
    10. '():
' → logprob: -13.271886825561523

Token 149: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04870352894067764
    2. '):
' → logprob: -3.04870343208313
    3. ')' → logprob: -9.67370319366455
    4. ',' → logprob: -10.42370319366455
    5. '):
' → logprob: -11.42370319366455
    6. ' ):' → logprob: -11.79870319366455
    7. ':' → logprob: -13.04870319366455
    8. '):

' → logprob: -13.17370319366455
    9. ',n' → logprob: -15.04870319366455
    10. ' ):
' → logprob: -15.67370319366455

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005679192021489143
    2. '
' → logprob: -6.130679130554199
    3. ' return' → logprob: -6.255679130554199
    4. ' graph' → logprob: -7.130679130554199
    5. '    
' → logprob: -8.2556791305542
    6. '	graph' → logprob: -8.2556791305542
    7. '	return' → logprob: -9.1306791305542
    8. 'graph' → logprob: -9.7556791305542
    9. 'return' → logprob: -10.1306791305542
    10. '    ' → logprob: -11.3806791305542

Token 151: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.08643718808889389
    2. 'return' (adapté à ' return') → logprob: -2.586437225341797
    3. ' graph' → logprob: -5.836437225341797
    4. 'graph' → logprob: -5.961437225341797
    5. '   ' → logprob: -6.211437225341797
    6. '	return' → logprob: -11.711437225341797
    7. '	graph' → logprob: -12.586437225341797
    8. ' ' → logprob: -13.586437225341797
    9. ' g' → logprob: -14.211437225341797
    10. 'g' → logprob: -14.336437225341797

Token 152: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002883095294237137
    2. 'default' → logprob: -6.002882957458496
    3. '{' → logprob: -8.502882957458496
    4. ' [[]' → logprob: -8.502882957458496
    5. ' defaultdict' → logprob: -14.502882957458496
    6. '[]' → logprob: -15.002882957458496
    7. '[[' → logprob: -15.377882957458496
    8. ' [' → logprob: -15.502882957458496
    9. '   ' → logprob: -16.002883911132812
    10. '[n' → logprob: -16.127883911132812

Token 153: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4741617739200592
    2. ' for' → logprob: -0.9741617441177368
    3. ')' → logprob: -9.599162101745605
    4. ']' → logprob: -11.474162101745605
    5. '	for' → logprob: -12.474162101745605
    6. ' ' → logprob: -14.224162101745605
    7. '()' → logprob: -14.474162101745605
    8. 'f' → logprob: -14.599162101745605
    9. '   ' → logprob: -15.224162101745605
    10. 'n' → logprob: -15.599162101745605

Token 154: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5452284812927246
    2. ' range' → logprob: -0.9202284812927246
    3. '_' → logprob: -4.670228481292725
    4. ' in' → logprob: -5.170228481292725
    5. '(range' → logprob: -5.420228481292725
    6. 'in' → logprob: -6.295228481292725
    7. ' _' → logprob: -8.170228958129883
    8. ' ' → logprob: -8.795228958129883
    9. '_range' → logprob: -10.170228958129883
    10. 'i' → logprob: -10.670228958129883

Token 155: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4563485085964203
    2. 'in' → logprob: -1.7063485383987427
    3. ' in' → logprob: -1.7063485383987427
    4. ' range' → logprob: -5.706348419189453
    5. '(range' → logprob: -10.956348419189453
    6. 'n' → logprob: -12.331348419189453
    7. ' ' → logprob: -12.956348419189453
    8. 'i' → logprob: -14.206348419189453
    9. 'x' → logprob: -14.581348419189453
    10. '  ' → logprob: -14.956348419189453

Token 156: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067176250740885735
    2. ' range' → logprob: -5.006717681884766
    3. '(range' → logprob: -13.006717681884766
    4. '	range' → logprob: -17.381717681884766
    5. ')' → logprob: -20.131717681884766
    6. 'n' → logprob: -20.256717681884766
    7. '   ' → logprob: -20.506717681884766
    8. 'in' → logprob: -20.631717681884766
    9. ' ' → logprob: -21.256717681884766
    10. ']' → logprob: -21.381717681884766

Token 157: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.771655115589965e-05
    2. '(' → logprob: -11.000018119812012
    3. ' (' → logprob: -14.250018119812012
    4. 'n' → logprob: -15.375018119812012
    5. ' n' → logprob: -17.250017166137695
    6. '	n' → logprob: -20.875017166137695
    7. ')n' → logprob: -21.000017166137695
    8. '(
' → logprob: -21.250017166137695
    9. '((' → logprob: -21.875017166137695
    10. ')' → logprob: -22.250017166137695

Token 158: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.173704271830502e-06
    2. ']' → logprob: -13.62500286102295
    3. ')' → logprob: -14.25000286102295
    4. ' )' → logprob: -14.37500286102295
    5. ')]
' → logprob: -14.50000286102295
    6. '+' → logprob: -17.250003814697266
    7. ' ]' → logprob: -18.000003814697266
    8. ')]

' → logprob: -18.000003814697266
    9. ')],' → logprob: -18.125003814697266
    10. '])' → logprob: -18.125003814697266

Token 159: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014721386134624481
    2. '<|end|>' → logprob: -4.264721393585205
    3. '<|end|>' → logprob: -8.264720916748047
    4. '
' → logprob: -8.889720916748047
    5. ')' → logprob: -9.764720916748047
    6. '#' → logprob: -10.139720916748047
    7. '```' → logprob: -10.639720916748047
    8. ' def' → logprob: -11.389720916748047
    9. 'class' → logprob: -12.639720916748047
    10. '  
' → logprob: -12.889720916748047

Token 160: ' append' (ID: 17147)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.0762016698718071
    2. 'add' → logprob: -3.2012016773223877
    3. ' read' → logprob: -4.326201438903809
    4. ' bfs' → logprob: -5.201201438903809
    5. ' build' → logprob: -6.076201438903809
    6. ' make' → logprob: -6.201201438903809
    7. ' main' → logprob: -6.451201438903809
    8. ' input' → logprob: -6.701201438903809
    9. ' addedge' → logprob: -6.826201438903809
    10. 'read' → logprob: -6.826201438903809

Token 161: '_previous' (ID: 126212)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.08985798060894012
    2. '_node' → logprob: -3.089858055114746
    3. '(graph' → logprob: -4.589858055114746
    4. '_' → logprob: -4.714858055114746
    5. '(' → logprob: -5.214858055114746
    6. '_graph' → logprob: -5.214858055114746
    7. '_edges' → logprob: -5.839858055114746
    8. '(node' → logprob: -5.839858055114746
    9. '_vertex' → logprob: -6.339858055114746
    10. '(_' → logprob: -7.214858055114746

Token 162: '_edges' (ID: 68870)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.5424975752830505
    2. '_node' → logprob: -1.6674976348876953
    3. '_layer' → logprob: -2.7924976348876953
    4. '(' → logprob: -3.2924976348876953
    5. '_graph' → logprob: -3.7924976348876953
    6. '(graph' → logprob: -4.167497634887695
    7. '(_' → logprob: -4.292497634887695
    8. '_line' → logprob: -4.417497634887695
    9. '_vertex' → logprob: -4.542497634887695
    10. '_edges' → logprob: -4.542497634887695

Token 163: '(edges' (ID: 185298)
  Prédit: '(graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.03386629372835159
    2. '(g' → logprob: -4.1588664054870605
    3. '(' → logprob: -4.5338664054870605
    4. '(G' → logprob: -5.6588664054870605
    5. '(n' → logprob: -6.0338664054870605
    6. '(Graph' → logprob: -7.4088664054870605
    7. '(node' → logprob: -8.158865928649902
    8. '(edges' → logprob: -10.158865928649902
    9. '(nodes' → logprob: -10.658865928649902
    10. '(u' → logprob: -11.283865928649902

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000488110730657354
    2. '):' → logprob: -8.00048828125
    3. '(edges' → logprob: -9.50048828125
    4. ' ,' → logprob: -10.12548828125
    5. ',n' → logprob: -10.87548828125
    6. ',e' → logprob: -12.00048828125
    7. '(' → logprob: -13.00048828125
    8. ')' → logprob: -13.12548828125
    9. ',(' → logprob: -13.37548828125
    10. 'edges' → logprob: -13.50048828125

Token 165: ' n' (ID: 297)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.39036858081817627
    2. 'new' → logprob: -2.5153684616088867
    3. ' edge' → logprob: -2.5153684616088867
    4. ' edges' → logprob: -3.2653684616088867
    5. 'edge' → logprob: -3.6403684616088867
    6. ' graph' → logprob: -3.7653684616088867
    7. 'edges' → logprob: -4.015368461608887
    8. ' u' → logprob: -4.140368461608887
    9. 'u' → logprob: -4.515368461608887
    10. 'prev' → logprob: -4.765368461608887

Token 166: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2258586883544922
    2. '):' → logprob: -1.6008586883544922
    3. '):
' → logprob: -8.225858688354492
    4. ')' → logprob: -9.100858688354492
    5. ' ,' → logprob: -10.350858688354492
    6. ',n' → logprob: -11.100858688354492
    7. ' ):' → logprob: -11.850858688354492
    8. ',
' → logprob: -13.725858688354492
    9. ':' → logprob: -14.225858688354492
    10. '-' → logprob: -14.225858688354492

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004329341172706336
    2. ' for' → logprob: -8.750432968139648
    3. ',' → logprob: -9.625432968139648
    4. ':' → logprob: -9.750432968139648
    5. ' edges' → logprob: -10.250432968139648
    6. '(edges' → logprob: -10.250432968139648
    7. '):
' → logprob: -11.000432968139648
    8. ':
' → logprob: -11.000432968139648
    9. 'edges' → logprob: -11.500432968139648
    10. 'for' → logprob: -11.625432968139648

Token 168: ' def' (ID: 1056)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22210094332695007
    2. 'for' → logprob: -1.7221009731292725
    3. '   ' → logprob: -4.097100734710693
    4. ' edges' → logprob: -6.097100734710693
    5. 'edges' → logprob: -6.472100734710693
    6. '
' → logprob: -10.722101211547852
    7. 'def' (adapté à ' def') → logprob: -11.097101211547852
    8. ' def' → logprob: -12.347101211547852
    9. ' pass' → logprob: -12.472101211547852
    10. ' if' → logprob: -12.597101211547852

Token 169: ' append' (ID: 17147)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.8437045812606812
    2. ' append' → logprob: -1.3437045812606812
    3. ' prev' → logprob: -3.0937047004699707
    4. 'append' → logprob: -3.2187047004699707
    5. ' previous' → logprob: -3.4687047004699707
    6. ' new' → logprob: -3.4687047004699707
    7. '(prev' → logprob: -3.4687047004699707
    8. '(edges' → logprob: -3.4687047004699707
    9. ' edges' → logprob: -3.5937047004699707
    10. ' _' → logprob: -4.843704700469971

Token 170: '_for' (ID: 11903)
  Prédit: '(edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.7470016479492188
    2. '_previous' → logprob: -1.3720016479492188
    3. '_edges' → logprob: -1.9970016479492188
    4. '(' → logprob: -2.1220016479492188
    5. '(previous' → logprob: -5.122001647949219
    6. '_' → logprob: -5.497001647949219
    7. 'edges' → logprob: -6.372001647949219
    8. '(_' → logprob: -7.247001647949219
    9. 'previous' → logprob: -7.247001647949219
    10. '_(' → logprob: -7.372001647949219

Token 171: '_index' (ID: 7748)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14592769742012024
    2. '_edges' → logprob: -3.520927667617798
    3. '(i' → logprob: -3.645927667617798
    4. 'edges' → logprob: -3.770927667617798
    5. '_' → logprob: -3.895927667617798
    6. ' i' → logprob: -4.645927906036377
    7. 'edge' → logprob: -5.270927906036377
    8. '(edges' → logprob: -5.520927906036377
    9. 'node' → logprob: -5.895927906036377
    10. '_edge' → logprob: -6.395927906036377

Token 172: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.013949460349977016
    2. '(idx' → logprob: -5.388949394226074
    3. '(index' → logprob: -5.513949394226074
    4. '(' → logprob: -5.888949394226074
    5. '(edges' → logprob: -6.388949394226074
    6. '(prev' → logprob: -7.388949394226074
    7. '(edge' → logprob: -9.888949394226074
    8. '(n' → logprob: -10.638949394226074
    9. ' (' → logprob: -10.638949394226074
    10. '(k' → logprob: -10.763949394226074

Token 173: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017484845593571663
    2. ',' → logprob: -6.751748561859131
    3. '):
' → logprob: -7.626748561859131
    4. ')' → logprob: -10.001748085021973
    5. '   ' → logprob: -10.626748085021973
    6. ' ):' → logprob: -11.626748085021973
    7. ':' → logprob: -12.126748085021973
    8. '(i' → logprob: -13.126748085021973
    9. ',i' → logprob: -13.376748085021973
    10. '):
' → logprob: -13.876748085021973

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005796547047793865
    2. ':' → logprob: -6.005796432495117
    3. '   ' → logprob: -6.880796432495117
    4. ',' → logprob: -7.505796432495117
    5. '<|end|>' → logprob: -7.505796432495117
    6. '(edges' → logprob: -7.755796432495117
    7. '):' → logprob: -8.130796432495117
    8. ' edges' → logprob: -9.630796432495117
    9. '():' → logprob: -9.880796432495117
    10. '(' → logprob: -10.130796432495117

Token 175: ' edges' (ID: 22569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9635637402534485
    2. ' if' → logprob: -1.8385636806488037
    3. 'if' → logprob: -1.9635636806488037
    4. ' edges' → logprob: -2.0885636806488037
    5. 'edges' (adapté à ' edges') → logprob: -2.3385636806488037
    6. '   ' → logprob: -2.7135636806488037
    7. ' for' → logprob: -4.088563919067383
    8. 'for' → logprob: -4.338563919067383
    9. '           ' → logprob: -7.213563919067383
    10. 'def' → logprob: -7.338563919067383

Token 176: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003839597338810563
    2. '.append' → logprob: -7.8753838539123535
    3. '[' → logprob: -12.875384330749512
    4. '[I' → logprob: -15.375384330749512
    5. ',i' → logprob: -15.625384330749512
    6. '.extend' → logprob: -15.625384330749512
    7. ' [' → logprob: -16.125383377075195
    8. '[:' → logprob: -16.125383377075195
    9. 'append' → logprob: -16.375383377075195
    10. '   ' → logprob: -16.750383377075195

Token 177: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0144894914701581
    2. ']' → logprob: -4.264489650726318
    3. ' ].' → logprob: -8.76448917388916
    4. '-' → logprob: -10.01448917388916
    5. ']).' → logprob: -10.01448917388916
    6. '])' → logprob: -10.76448917388916
    7. ']+=' → logprob: -10.88948917388916
    8. ']+' → logprob: -12.01448917388916
    9. ').' → logprob: -12.26448917388916
    10. ' -' → logprob: -12.51448917388916

Token 178: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.0015028368216007948
    2. 'extend' → logprob: -6.501502990722656
    3. ' append' → logprob: -15.376502990722656
    4. '.append' → logprob: -16.001502990722656
    5. 'clear' → logprob: -16.251502990722656
    6. 'app' → logprob: -17.126502990722656
    7. 'appen' → logprob: -17.376502990722656
    8. '.extend' → logprob: -17.876502990722656
    9. '	append' → logprob: -17.876502990722656
    10. 'pop' → logprob: -18.001502990722656

Token 179: '((' (ID: 2054)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.006749358493834734
    2. '((' → logprob: -5.131749153137207
    3. 'i' → logprob: -7.506749153137207
    4. '(' → logprob: -8.756749153137207
    5. '(edges' → logprob: -10.131749153137207
    6. '(n' → logprob: -10.256749153137207
    7. 'edges' → logprob: -11.131749153137207
    8. ')' → logprob: -12.506749153137207
    9. '(len' → logprob: -12.756749153137207
    10. ' i' → logprob: -13.131749153137207

Token 180: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.052017245441675186
    2. '(i' → logprob: -3.0520172119140625
    3. 'edges' → logprob: -6.9270172119140625
    4. ' i' → logprob: -7.5520172119140625
    5. 'n' → logprob: -7.8020172119140625
    6. ' (' → logprob: -7.9270172119140625
    7. '(n' → logprob: -8.302017211914062
    8. '0' → logprob: -8.552017211914062
    9. ')' → logprob: -9.052017211914062
    10. '(edges' → logprob: -9.177017211914062

Token 181: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12903225421905518
    2. ' -' → logprob: -2.1290321350097656
    3. ',' → logprob: -6.504032135009766
    4. ' ' → logprob: -8.379032135009766
    5. ' ,' → logprob: -8.379032135009766
    6. '+' → logprob: -9.504032135009766
    7. '   ' → logprob: -10.879032135009766
    8. '1' → logprob: -11.379032135009766
    9. '-,' → logprob: -11.879032135009766
    10. ' -,' → logprob: -11.941532135009766

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001054603373631835
    2. ' ' → logprob: -6.876054763793945
    3. ',' → logprob: -10.876054763793945
    4. '   ' → logprob: -14.001054763793945
    5. ' ,' → logprob: -14.376054763793945
    6. '
' → logprob: -14.938554763793945
    7. '```' → logprob: -15.438554763793945
    8. '2' → logprob: -15.688554763793945
    9. ')' → logprob: -16.063554763793945
    10. '    ' → logprob: -16.313554763793945

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006322591798380017
    2. ' ,' → logprob: -8.125632286071777
    3. ')' → logprob: -8.625632286071777
    4. '))' → logprob: -9.500632286071777
    5. '<|end|>' → logprob: -10.125632286071777
    6. '),' → logprob: -11.875632286071777
    7. ',)' → logprob: -12.000632286071777
    8. ')))' → logprob: -12.000632286071777
    9. ',
' → logprob: -12.625632286071777
    10. ',None' → logprob: -13.125632286071777

Token 184: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15816646814346313
    2. ' ' → logprob: -2.0331664085388184
    3. '0' → logprob: -4.533166408538818
    4. 'inf' → logprob: -5.908166408538818
    5. ' inf' → logprob: -8.158166885375977
    6. 'cost' → logprob: -8.783166885375977
    7. 'mod' → logprob: -8.908166885375977
    8. '))' → logprob: -9.033166885375977
    9. 'i' → logprob: -9.033166885375977
    10. ' i' → logprob: -9.158166885375977

Token 185: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04741627350449562
    2. '0' → logprob: -3.2974162101745605
    3. 'mod' → logprob: -6.2974162101745605
    4. ' ' → logprob: -6.4224162101745605
    5. 'i' → logprob: -6.4224162101745605
    6. 'cost' → logprob: -7.1724162101745605
    7. '2' → logprob: -7.2974162101745605
    8. 'inf' → logprob: -7.6724162101745605
    9. 'w' → logprob: -7.7974162101745605
    10. '-' → logprob: -8.047416687011719

Token 186: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0014134504599496722
    2. '))
' → logprob: -7.001413345336914
    3. ')' → logprob: -7.751413345336914
    4. ' ))' → logprob: -10.126413345336914
    5. ',' → logprob: -10.751413345336914
    6. ')))' → logprob: -12.876413345336914
    7. '))

' → logprob: -13.376413345336914
    8. ' ' → logprob: -13.751413345336914
    9. ')
' → logprob: -14.126413345336914
    10. '),' → logprob: -14.501413345336914

Token 187: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 188: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5746257305145264
    2. '
' → logprob: -0.9496257305145264
    3. ' for' → logprob: -3.6996257305145264
    4. '<|end|>' → logprob: -3.8246257305145264
    5. 'for' (adapté à ' for') → logprob: -6.4496259689331055
    6. '  
' → logprob: -7.6996259689331055
    7. '    
' → logprob: -7.9496259689331055
    8. '<|end|>' → logprob: -8.324625968933105
    9. '	for' → logprob: -8.824625968933105
    10. ' ' → logprob: -8.949625968933105

Token 189: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004622968845069408
    2. 'i' → logprob: -5.379622936248779
    3. ' ' → logprob: -14.004623413085938
    4. '	i' → logprob: -14.129623413085938
    5. '_i' → logprob: -14.754623413085938
    6. '(i' → logprob: -15.129623413085938
    7. ' _' → logprob: -15.254623413085938
    8. '_' → logprob: -16.129623413085938
    9. ' ' → logprob: -16.129623413085938
    10. '`' → logprob: -16.879623413085938

Token 190: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012518716044723988
    2. 'in' → logprob: -4.387518882751465
    3. ' ' → logprob: -12.262518882751465
    4. '	in' → logprob: -14.262518882751465
    5. 'n' → logprob: -14.512518882751465
    6. 'import' → logprob: -14.637518882751465
    7. ',' → logprob: -14.637518882751465
    8. 'In' → logprob: -14.637518882751465
    9. '1' → logprob: -14.637518882751465
    10. '   ' → logprob: -15.387518882751465

Token 191: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1602344810962677
    2. 'range' → logprob: -1.9102344512939453
    3. '(range' → logprob: -11.535234451293945
    4. '	range' → logprob: -14.785234451293945
    5. ' ' → logprob: -16.535234451293945
    6. '(' → logprob: -16.660234451293945
    7. 'Range' → logprob: -18.035234451293945
    8. '.range' → logprob: -18.660234451293945
    9. ' xrange' → logprob: -18.660234451293945
    10. '   ' → logprob: -18.785234451293945

Token 192: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.339278580620885e-06
    2. '(n' → logprob: -13.125001907348633
    3. '1' → logprob: -15.375001907348633
    4. ' (' → logprob: -18.625001907348633
    5. 'n' → logprob: -20.750001907348633
    6. '(
' → logprob: -21.000001907348633
    7. '(len' → logprob: -21.625001907348633
    8. '(m' → logprob: -22.875001907348633
    9. '(i' → logprob: -23.375001907348633
    10. '[' → logprob: -23.375001907348633

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001438266917830333
    2. 'n' → logprob: -9.500144004821777
    3. '(' → logprob: -9.625144004821777
    4. '(n' → logprob: -13.000144004821777
    5. ' ' → logprob: -14.375144004821777
    6. ' n' → logprob: -18.00014305114746
    7. '2' → logprob: -18.12514305114746
    8. '
' → logprob: -18.50014305114746
    9. '   ' → logprob: -18.50014305114746
    10. '

' → logprob: -19.25014305114746

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014749871334061027
    2. ',n' → logprob: -6.876474857330322
    3. ' ,' → logprob: -7.751474857330322
    4. 'n' → logprob: -11.37647533416748
    5. ' n' → logprob: -15.50147533416748
    6. ',
' → logprob: -16.501474380493164
    7. ',len' → logprob: -16.626474380493164
    8. '(n' → logprob: -16.876474380493164
    9. '1' → logprob: -17.251474380493164
    10. '‌,' → logprob: -18.001474380493164

Token 195: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004078401252627373
    2. ' n' → logprob: -5.504078388214111
    3. '	n' → logprob: -18.754077911376953
    4. 'len' → logprob: -19.004077911376953
    5. ')n' → logprob: -19.254077911376953
    6. ' len' → logprob: -20.629077911376953
    7. '   ' → logprob: -21.379077911376953
    8. ',n' → logprob: -21.754077911376953
    9. '_n' → logprob: -21.879077911376953
    10. '```' → logprob: -22.254077911376953

Token 196: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009354014764539897
    2. '):
' → logprob: -7.0009355545043945
    3. ' ):' → logprob: -10.750935554504395
    4. ':' → logprob: -13.375935554504395
    5. '():' → logprob: -14.750935554504395
    6. ')' → logprob: -15.375935554504395
    7. ')):' → logprob: -16.250934600830078
    8. ']:' → logprob: -16.875934600830078
    9. '):

' → logprob: -17.000934600830078
    10. '):
' → logprob: -17.000934600830078

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00935156550258398
    2. ' edges' → logprob: -5.13435173034668
    3. '<|end|>' → logprob: -6.00935173034668
    4. 'edges' → logprob: -7.88435173034668
    5. '        
' → logprob: -9.38435173034668
    6. ',' → logprob: -9.50935173034668
    7. '(edges' → logprob: -9.63435173034668
    8. 'append' → logprob: -10.00935173034668
    9. '<|end|>' → logprob: -10.25935173034668
    10. '):
' → logprob: -10.38435173034668

Token 198: ' append' (ID: 17147)
  Prédit: ' append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' append' → logprob: -0.7402139902114868
    2. 'append' (adapté à ' append') → logprob: -1.1152139902114868
    3. '       ' → logprob: -1.7402139902114868
    4. ' edges' → logprob: -4.115213871002197
    5. 'edges' → logprob: -6.365213871002197
    6. '   ' → logprob: -6.865213871002197
    7. '.append' → logprob: -8.615214347839355
    8. '    ' → logprob: -8.990214347839355
    9. '	append' → logprob: -8.990214347839355
    10. '_append' → logprob: -10.490214347839355

Token 199: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.0003037650021724403
    2. '_previous' → logprob: -8.125304222106934
    3. 'for' → logprob: -12.500304222106934
    4. '_' → logprob: -13.500304222106934
    5. 'For' → logprob: -13.625304222106934
    6. 'previous' → logprob: -14.125304222106934
    7. ' for' → logprob: -16.375303268432617
    8. '(' → logprob: -16.625303268432617
    9. ')_' → logprob: -16.625303268432617
    10. '\' → logprob: -16.750303268432617

Token 200: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0019381542224436998
    2. 'index' → logprob: -6.251938343048096
    3. 'i' → logprob: -12.626937866210938
    4. 'Index' → logprob: -13.626937866210938
    5. 'ex' → logprob: -14.126937866210938
    6. 'dex' → logprob: -14.126937866210938
    7. 'n' → logprob: -14.376937866210938
    8. '(i' → logprob: -14.376937866210938
    9. ' index' → logprob: -14.501937866210938
    10. 'x' → logprob: -14.751937866210938

Token 201: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.64708495605737e-05
    2. '(' → logprob: -9.625066757202148
    3. ' (' → logprob: -15.000066757202148
    4. '((' → logprob: -17.75006675720215
    5. ')' → logprob: -18.87506675720215
    6. '(
' → logprob: -19.00006675720215
    7. '(ii' → logprob: -19.37506675720215
    8. 'i' → logprob: -19.50006675720215
    9. '(end' → logprob: -20.00006675720215
    10. ')(' → logprob: -20.12506675720215

Token 202: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4974866644479334e-05
    2. ')
' → logprob: -11.250015258789062
    3. ' )' → logprob: -13.375015258789062
    4. '))' → logprob: -15.875015258789062
    5. ')i' → logprob: -16.500015258789062
    6. ')#' → logprob: -16.875015258789062
    7. ')return' → logprob: -16.875015258789062
    8. ')

' → logprob: -17.000015258789062
    9. '<|end|>' → logprob: -17.375015258789062
    10. ')`' → logprob: -17.625015258789062

Token 203: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' read' (ID: 1729)
  Prédit: ' append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' append' → logprob: -0.16195715963840485
    2. 'append' → logprob: -2.286957263946533
    3. ' add' → logprob: -3.536957263946533
    4. ' build' → logprob: -5.286957263946533
    5. ' bfs' → logprob: -6.661957263946533
    6. ' reverse' → logprob: -6.786957263946533
    7. ' solve' → logprob: -6.786957263946533
    8. ' make' → logprob: -6.786957263946533
    9. ' main' → logprob: -6.786957263946533
    10. ' d' → logprob: -7.286957263946533

Token 205: '_edge' (ID: 43226)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.1533488780260086
    2. '_graph' → logprob: -2.153348922729492
    3. '_input' → logprob: -4.528348922729492
    4. '_' → logprob: -4.778348922729492
    5. '()' → logprob: -6.403348922729492
    6. '_edge' → logprob: -6.653348922729492
    7. '_lines' → logprob: -6.903348922729492
    8. '_line' → logprob: -7.778348922729492
    9. '(n' → logprob: -7.778348922729492
    10. '_values' → logprob: -7.778348922729492

Token 206: '():
' (ID: 8595)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001785112835932523
    2. '()' → logprob: -9.500178337097168
    3. '(n' → logprob: -9.625178337097168
    4. '(s' → logprob: -10.500178337097168
    5. '_s' → logprob: -12.500178337097168
    6. '(' → logprob: -13.125178337097168
    7. '_list' → logprob: -13.375178337097168
    8. 'def' → logprob: -13.875178337097168
    9. '():
' → logprob: -15.125178337097168
    10. '(line' → logprob: -15.250178337097168

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00048763392260298133
    2. '()' → logprob: -7.875487804412842
    3. 'def' → logprob: -9.500487327575684
    4. 'return' → logprob: -11.500487327575684
    5. ' ' → logprob: -12.250487327575684
    6. '()
' → logprob: -12.875487327575684
    7. '():' → logprob: -13.000487327575684
    8. ' return' → logprob: -13.125487327575684
    9. '    
' → logprob: -13.250487327575684
    10. '(' → logprob: -13.500487327575684

Token 208: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6321709752082825
    2. 'return' (adapté à ' return') → logprob: -1.0071709156036377
    3. ' return' → logprob: -2.5071709156036377
    4. 'def' → logprob: -4.132171154022217
    5. 'u' → logprob: -5.882171154022217
    6. 'a' → logprob: -6.382171154022217
    7. ' u' → logprob: -7.882171154022217
    8. 'line' → logprob: -8.257170677185059
    9. 'n' → logprob: -9.257170677185059
    10. ' def' → logprob: -9.257170677185059

Token 209: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.47782641649246216
    2. 'tuple' → logprob: -0.9778264164924622
    3. 'list' → logprob: -6.4778265953063965
    4. 'map' → logprob: -6.9778265953063965
    5. ' tuple' → logprob: -6.9778265953063965
    6. ' LI' → logprob: -8.477826118469238
    7. 'int' → logprob: -9.602826118469238
    8. 'li' → logprob: -9.977826118469238
    9. 'I' → logprob: -11.977826118469238
    10. 'Li' → logprob: -13.102826118469238

Token 210: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 211: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02080882340669632
    2. '<|end|>' → logprob: -3.8958089351654053
    3. '<|end|>' → logprob: -8.770809173583984
    4. '
' → logprob: -10.020809173583984
    5. '```' → logprob: -10.895809173583984
    6. ')' → logprob: -11.270809173583984
    7. '#' → logprob: -11.520809173583984
    8. '  
' → logprob: -11.895809173583984
    9. '[' → logprob: -13.020809173583984
    10. ' 
' → logprob: -13.020809173583984

Token 212: ' add' (ID: 1147)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9418660402297974
    2. ' add' → logprob: -1.4418660402297974
    3. ' read' → logprob: -1.8168660402297974
    4. ' process' → logprob: -2.566865921020508
    5. ' build' → logprob: -2.816865921020508
    6. ' solve' → logprob: -3.566865921020508
    7. 'read' → logprob: -5.191865921020508
    8. ' append' → logprob: -5.316865921020508
    9. 'main' → logprob: -5.441865921020508
    10. 'add' → logprob: -5.566865921020508

Token 213: '_input' (ID: 12507)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.01346183568239212
    2. '_' → logprob: -4.763462066650391
    3. '_edges' → logprob: -5.388462066650391
    4. '_node' → logprob: -8.76346206665039
    5. '_previous' → logprob: -10.51346206665039
    6. '_to' → logprob: -10.88846206665039
    7. '(' → logprob: -11.38846206665039
    8. '(_' → logprob: -11.63846206665039
    9. '_vertex' → logprob: -12.13846206665039
    10. '_parent' → logprob: -12.88846206665039

Token 214: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.39273837208747864
    2. '_edge' → logprob: -1.1427383422851562
    3. '_' → logprob: -5.267738342285156
    4. '()' → logprob: -8.392738342285156
    5. '_graph' → logprob: -9.267738342285156
    6. '_nodes' → logprob: -9.767738342285156
    7. '_ed' → logprob: -10.017738342285156
    8. '_values' → logprob: -10.142738342285156
    9. 'ed' → logprob: -10.267738342285156
    10. '():' → logprob: -10.517738342285156

Token 215: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.0001561009994475171
    2. '(' → logprob: -9.37515640258789
    3. '(ed' → logprob: -11.00015640258789
    4. ' (' → logprob: -11.00015640258789
    5. '(edge' → logprob: -11.12515640258789
    6. '():' → logprob: -11.37515640258789
    7. '(n' → logprob: -12.25015640258789
    8. '(lines' → logprob: -13.00015640258789
    9. '(graph' → logprob: -13.62515640258789
    10. '(nodes' → logprob: -13.62515640258789

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036084887688048184
    2. ',n' → logprob: -8.250360488891602
    3. ' ,' → logprob: -9.250360488891602
    4. '(edges' → logprob: -13.500360488891602
    5. ',e' → logprob: -14.000360488891602
    6. 'edges' → logprob: -15.250360488891602
    7. '):' → logprob: -15.250360488891602
    8. '   ' → logprob: -15.375360488891602
    9. ',
' → logprob: -15.500360488891602
    10. ',m' → logprob: -16.1253604888916

Token 217: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.6734700798988342
    2. 'm' → logprob: -1.0484700202941895
    3. ' n' → logprob: -2.6734700202941895
    4. ' edges' → logprob: -3.2984700202941895
    5. 'n' → logprob: -3.7984700202941895
    6. 'edges' → logprob: -4.7984700202941895
    7. '   ' → logprob: -6.7984700202941895
    8. ' edge' → logprob: -7.0484700202941895
    9. 'edge' → logprob: -7.6734700202941895
    10. '):
' → logprob: -9.298470497131348

Token 218: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014776239171624184
    2. '):' → logprob: -4.264776229858398
    3. '):
' → logprob: -7.764776229858398
    4. ' ,' → logprob: -9.014776229858398
    5. '   ' → logprob: -10.514776229858398
    6. ',n' → logprob: -11.014776229858398
    7. ')' → logprob: -11.764776229858398
    8. ' ):' → logprob: -11.889776229858398
    9. ',e' → logprob: -13.014776229858398
    10. '):
' → logprob: -13.764776229858398

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009016924886964262
    2. 'def' → logprob: -7.625901699066162
    3. 'for' → logprob: -8.375901222229004
    4. ' for' → logprob: -8.625901222229004
    5. ' def' → logprob: -13.375901222229004
    6. '
' → logprob: -14.125901222229004
    7. '	for' → logprob: -14.625901222229004
    8. '    
' → logprob: -15.250901222229004
    9. '   ' → logprob: -15.875901222229004
    10. '```' → logprob: -15.875901222229004

Token 220: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35990434885025024
    2. 'for' → logprob: -1.6099042892456055
    3. ' for' → logprob: -2.3599042892456055
    4. 'def' (adapté à ' def') → logprob: -4.8599042892456055
    5. ' def' → logprob: -8.734904289245605
    6. '
' → logprob: -12.484904289245605
    7. ' ' → logprob: -13.234904289245605
    8. 'edges' → logprob: -14.109904289245605
    9. '  ' → logprob: -14.484904289245605
    10. '    
' → logprob: -14.484904289245605

Token 221: ' process' (ID: 2273)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.42202767729759216
    2. ' read' → logprob: -1.2970277070999146
    3. ' inner' → logprob: -3.672027587890625
    4. 'add' → logprob: -4.797027587890625
    5. ' process' → logprob: -5.047027587890625
    6. ' _' → logprob: -5.047027587890625
    7. ' helper' → logprob: -5.047027587890625
    8. ' append' → logprob: -5.297027587890625
    9. 'read' → logprob: -5.797027587890625
    10. ' input' → logprob: -6.047027587890625

Token 222: '_one' (ID: 26979)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3950561285018921
    2. '():
' → logprob: -1.270056128501892
    3. '_edge' → logprob: -3.7700562477111816
    4. '(i' → logprob: -4.645056247711182
    5. 'edge' → logprob: -5.270056247711182
    6. '_line' → logprob: -5.395056247711182
    7. '_edges' → logprob: -7.020056247711182
    8. '_input' → logprob: -7.770056247711182
    9. '_' → logprob: -8.020055770874023
    10. '   ' → logprob: -8.395055770874023

Token 223: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.03790146857500076
    2. '(i' → logprob: -3.6629014015197754
    3. '():' → logprob: -4.912901401519775
    4. '_line' → logprob: -6.037901401519775
    5. '():
' → logprob: -7.412901401519775
    6. 'edge' → logprob: -7.787901401519775
    7. '_edges' → logprob: -8.787901878356934
    8. '_input' → logprob: -8.912901878356934
    9. '(m' → logprob: -9.412901878356934
    10. '(edge' → logprob: -9.537901878356934

Token 224: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5721356868743896
    2. '(i' → logprob: -1.0721356868743896
    3. '(m' → logprob: -2.9471356868743896
    4. '():
' → logprob: -3.5721356868743896
    5. '(edge' → logprob: -4.572135925292969
    6. '(idx' → logprob: -7.072135925292969
    7. '(index' → logprob: -7.822135925292969
    8. '(line' → logprob: -7.822135925292969
    9. '(' → logprob: -8.697135925292969
    10. '(e' → logprob: -8.822135925292969

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04390830546617508
    2. '   ' → logprob: -3.1689083576202393
    3. 'e' → logprob: -7.91890811920166
    4. 'edge' → logprob: -8.91890811920166
    5. 'edges' → logprob: -9.29390811920166
    6. 'a' → logprob: -9.29390811920166
    7. 'x' → logprob: -10.04390811920166
    8. '	' → logprob: -10.16890811920166
    9. ' edges' → logprob: -10.79390811920166
    10. ' ' → logprob: -11.16890811920166

Token 226: ' l' (ID: 305)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.2511974573135376
    2. '       ' → logprob: -2.126197338104248
    3. 'a' → logprob: -2.376197338104248
    4. 'x' → logprob: -5.376197338104248
    5. '   ' → logprob: -5.501197338104248
    6. 'l' (adapté à ' l') → logprob: -7.751197338104248
    7. ' u' → logprob: -7.876197338104248
    8. 'e' → logprob: -9.126197814941406
    9. 'edge' → logprob: -9.501197814941406
    10. ' a' → logprob: -10.376197814941406

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5472811460494995
    2. '=' → logprob: -1.6722811460494995
    3. ' =' → logprob: -1.6722811460494995
    4. 'ine' → logprob: -3.422281265258789
    5. 'ist' → logprob: -5.297281265258789
    6. ',r' → logprob: -5.547281265258789
    7. ' ,' → logprob: -6.297281265258789
    8. 'ines' → logprob: -6.922281265258789
    9. 'st' → logprob: -7.547281265258789
    10. '   ' → logprob: -8.297281265258789

Token 228: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03383806347846985
    2. ' r' → logprob: -3.4088380336761475
    3. 'u' → logprob: -8.783838272094727
    4. 'a' → logprob: -11.033838272094727
    5. ' u' → logprob: -11.783838272094727
    6. 'w' → logprob: -13.408838272094727
    7. ' ' → logprob: -13.658838272094727
    8. 'rr' → logprob: -13.658838272094727
    9. '   ' → logprob: -13.658838272094727
    10. 's' → logprob: -13.783838272094727

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005802943836897612
    2. '=' → logprob: -5.630803108215332
    3. ' =' → logprob: -6.130803108215332
    4. ' ,' → logprob: -10.880803108215332
    5. '   ' → logprob: -13.880803108215332
    6. 'w' → logprob: -13.880803108215332
    7. ',_' → logprob: -14.380803108215332
    8. ',k' → logprob: -14.880803108215332
    9. ',v' → logprob: -15.005803108215332
    10. '_,' → logprob: -15.130803108215332

Token 230: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.36330875754356384
    2. 'd' → logprob: -1.7383087873458862
    3. 'w' → logprob: -2.2383086681365967
    4. 'cost' → logprob: -4.363308906555176
    5. ' c' → logprob: -5.488308906555176
    6. 'x' → logprob: -6.363308906555176
    7. ' w' → logprob: -6.863308906555176
    8. ' d' → logprob: -6.988308906555176
    9. 't' → logprob: -7.988308906555176
    10. '   ' → logprob: -8.863308906555176

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759426355361938
    2. '=' → logprob: -0.8259426355361938
    3. ',' → logprob: -12.950942993164062
    4. ')' → logprob: -15.325942993164062
    5. '   ' → logprob: -15.325942993164062
    6. ' ' → logprob: -15.450942993164062
    7. '    ' → logprob: -16.825942993164062
    8. '=line' → logprob: -17.200942993164062
    9. ')=' → logprob: -17.825942993164062
    10. '  ' → logprob: -17.825942993164062

Token 232: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.11697286367416382
    2. ' read' → logprob: -2.2419729232788086
    3. 'LI' → logprob: -5.616972923278809
    4. ' LI' → logprob: -7.616972923278809
    5. '	read' → logprob: -12.616972923278809
    6. ' ' → logprob: -12.866972923278809
    7. '  ' → logprob: -13.241972923278809
    8. '   ' → logprob: -13.491972923278809
    9. 'li' → logprob: -13.616972923278809
    10. 'I' → logprob: -13.991972923278809

Token 233: '_edge' (ID: 43226)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03529827669262886
    2. '_edge' → logprob: -3.5352983474731445
    3. '()
' → logprob: -5.2852983474731445
    4. 'edge' → logprob: -7.9102983474731445
    5. ' edge' → logprob: -11.160298347473145
    6. '()

' → logprob: -11.285298347473145
    7. '-edge' → logprob: -11.535298347473145
    8. ' ()' → logprob: -11.535298347473145
    9. '_' → logprob: -11.660298347473145
    10. '_edges' → logprob: -11.660298347473145

Token 234: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005134373437613249
    2. '()
' → logprob: -5.505134582519531
    3. ')' → logprob: -7.255134582519531
    4. '       ' → logprob: -9.005134582519531
    5. '<|end|>' → logprob: -9.255134582519531
    6. '())' → logprob: -10.755134582519531
    7. '<|end|>' → logprob: -10.755134582519531
    8. '():
' → logprob: -11.130134582519531
    9. '   ' → logprob: -11.255134582519531
    10. ' ()' → logprob: -11.505134582519531

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003892830340191722
    2. '<|end|>' → logprob: -6.00389289855957
    3. '   ' → logprob: -7.87889289855957
    4. ' edges' → logprob: -8.00389289855957
    5. 'edges' → logprob: -8.00389289855957
    6. '<|end|>' → logprob: -8.87889289855957
    7. '
' → logprob: -9.25389289855957
    8. '        
' → logprob: -10.50389289855957
    9. '           ' → logprob: -10.87889289855957
    10. ',' → logprob: -11.25389289855957

Token 236: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.8056211471557617
    2. ' edges' → logprob: -1.0556211471557617
    3. '       ' → logprob: -1.6806211471557617
    4. '   ' → logprob: -4.555621147155762
    5. 'for' → logprob: -5.430621147155762
    6. ' for' → logprob: -5.805621147155762
    7. 'def' → logprob: -7.805621147155762
    8. 'if' → logprob: -8.805621147155762
    9. ' if' → logprob: -9.430621147155762
    10. 'return' → logprob: -9.430621147155762

Token 237: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.003477478167042136
    2. '[r' → logprob: -5.753477573394775
    3. '[' → logprob: -8.628477096557617
    4. '[c' → logprob: -9.253477096557617
    5. '[m' → logprob: -11.753477096557617
    6. 'l' → logprob: -12.128477096557617
    7. ',l' → logprob: -13.878477096557617
    8. ' [' → logprob: -14.003477096557617
    9. '[
' → logprob: -14.003477096557617
    10. '[s' → logprob: -14.378477096557617

Token 238: '-' (ID: 12)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.5116422176361084
    2. '-' → logprob: -1.2616422176361084
    3. '][' → logprob: -2.7616422176361084
    4. '[r' → logprob: -3.8866422176361084
    5. ' -' → logprob: -4.3866424560546875
    6. '[l' → logprob: -4.7616424560546875
    7. ']' → logprob: -5.3866424560546875
    8. '[' → logprob: -6.3866424560546875
    9. ',' → logprob: -6.3866424560546875
    10. '.append' → logprob: -6.8866424560546875

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. ',' → logprob: -15.875006675720215
    4. '   ' → logprob: -16.8750057220459
    5. ')' → logprob: -18.1875057220459
    6. '<|end|>' → logprob: -18.5625057220459
    7. '```' → logprob: -18.6250057220459
    8. ']' → logprob: -18.6250057220459
    9. '...' → logprob: -18.9375057220459
    10. '2' → logprob: -18.9375057220459

Token 240: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0017465773271396756
    2. '.append' → logprob: -6.751746654510498
    3. ').' → logprob: -8.25174617767334
    4. ']' → logprob: -8.87674617767334
    5. '       ' → logprob: -9.12674617767334
    6. ' ].' → logprob: -11.00174617767334
    7. ',' → logprob: -11.25174617767334
    8. '   ' → logprob: -11.50174617767334
    9. '           ' → logprob: -11.62674617767334
    10. '],' → logprob: -11.75174617767334

Token 241: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.1472419600977446e-06
    2. ' append' → logprob: -14.375000953674316
    3. '.append' → logprob: -14.625000953674316
    4. 'appen' → logprob: -17.500001907348633
    5. '	append' → logprob: -18.875001907348633
    6. '```' → logprob: -20.000001907348633
    7. 'app' → logprob: -20.375001907348633
    8. 'Append' → logprob: -21.750001907348633
    9. '_append' → logprob: -21.750001907348633
    10. '   ' → logprob: -21.875001907348633

Token 242: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00013762809976469725
    2. '(r' → logprob: -9.125137329101562
    3. '(' → logprob: -10.500137329101562
    4. ' ((' → logprob: -14.500137329101562
    5. ' (' → logprob: -14.875137329101562
    6. '(
' → logprob: -15.625137329101562
    7. '   ' → logprob: -17.000137329101562
    8. '<|end|>' → logprob: -18.250137329101562
    9. '[(' → logprob: -18.500137329101562
    10. ')' → logprob: -18.500137329101562

Token 243: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0005035852082073689
    2. ' r' → logprob: -7.6255035400390625
    3. '(r' → logprob: -12.125503540039062
    4. '   ' → logprob: -12.250503540039062
    5. '	r' → logprob: -12.500503540039062
    6. '
' → logprob: -13.750503540039062
    7. ' ' → logprob: -15.125503540039062
    8. '[r' → logprob: -16.750503540039062
    9. ',r' → logprob: -17.500503540039062
    10. '    ' → logprob: -17.625503540039062

Token 244: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00038134094211272895
    2. ' -' → logprob: -7.8753814697265625
    3. '<|end|>' → logprob: -13.875381469726562
    4. '()-' → logprob: -16.625381469726562
    5. ')-' → logprob: -17.375381469726562
    6. ' ' → logprob: -17.500381469726562
    7. '<|end|>' → logprob: -17.500381469726562
    8. '1' → logprob: -17.750381469726562
    9. ')' → logprob: -18.500381469726562
    10. '–' → logprob: -18.625381469726562

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.500012397766113
    3. '2' → logprob: -13.500012397766113
    4. '   ' → logprob: -15.500012397766113
    5. '
' → logprob: -17.125011444091797
    6. '-' → logprob: -17.375011444091797
    7. 'l' → logprob: -17.750011444091797
    8. '  ' → logprob: -17.812511444091797
    9. '```' → logprob: -18.437511444091797
    10. ',' → logprob: -18.562511444091797

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000632139970548451
    2. ',c' → logprob: -7.500632286071777
    3. ' ,' → logprob: -9.500632286071777
    4. 'c' → logprob: -13.125632286071777
    5. ',
' → logprob: -13.250632286071777
    6. '‌,' → logprob: -16.00063133239746
    7. ' c' → logprob: -16.25063133239746
    8. '
' → logprob: -16.75063133239746
    9. '-' → logprob: -16.87563133239746
    10. '),' → logprob: -17.12563133239746

Token 247: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06200723350048065
    2. ' c' → logprob: -2.812007188796997
    3. ' ' → logprob: -11.562006950378418
    4. ')c' → logprob: -11.937006950378418
    5. '   ' → logprob: -12.062006950378418
    6. '
' → logprob: -12.562006950378418
    7. '	c' → logprob: -13.124506950378418
    8. '    ' → logprob: -13.499506950378418
    9. ' ' → logprob: -13.499506950378418
    10. ')' → logprob: -13.499506950378418

Token 248: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008465526043437421
    2. '))
' → logprob: -7.2508463859558105
    3. ')' → logprob: -9.000846862792969
    4. ' ))' → logprob: -11.875846862792969
    5. '))

' → logprob: -13.500846862792969
    6. '));' → logprob: -13.750846862792969
    7. '   ' → logprob: -13.750846862792969
    8. ')
' → logprob: -14.125846862792969
    9. ')))' → logprob: -14.750846862792969
    10. ' ' → logprob: -15.250846862792969

Token 249: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5374342799186707
    2. ' for' → logprob: -1.2874343395233154
    3. '   ' → logprob: -2.1624343395233154
    4. 'def' → logprob: -3.7874343395233154
    5. '
' → logprob: -6.287434101104736
    6. ' ' → logprob: -9.162434577941895
    7. '    
' → logprob: -10.662434577941895
    8. ' def' → logprob: -11.162434577941895
    9. ')' → logprob: -11.287434577941895
    10. '```' → logprob: -11.412434577941895

Token 251: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5759409070014954
    2. ' _' → logprob: -0.8259409070014954
    3. '_i' → logprob: -14.45094108581543
    4. '__' → logprob: -14.82594108581543
    5. ' ' → logprob: -15.45094108581543
    6. '_=' → logprob: -16.57594108581543
    7. 'i' → logprob: -17.07594108581543
    8. '_range' → logprob: -17.20094108581543
    9. '_]' → logprob: -17.20094108581543
    10. ' ' → logprob: -17.32594108581543

Token 252: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023374641314148903
    2. 'in' → logprob: -3.773374557495117
    3. 'range' → logprob: -9.273374557495117
    4. ' ' → logprob: -10.523374557495117
    5. ' range' → logprob: -12.398374557495117
    6. 'import' → logprob: -12.773374557495117
    7. '0' → logprob: -15.773374557495117
    8. '  ' → logprob: -15.898374557495117
    9. '```' → logprob: -15.898374557495117
    10. '1' → logprob: -16.273374557495117

Token 253: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. '	range' → logprob: -18.75007438659668
    4. '[' → logprob: -19.25007438659668
    5. '(range' → logprob: -19.75007438659668
    6. ' ' → logprob: -20.62507438659668
    7. '0' → logprob: -20.62507438659668
    8. '  ' → logprob: -20.75007438659668
    9. 'm' → logprob: -21.00007438659668
    10. '
' → logprob: -21.00007438659668

Token 254: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -13.00000286102295
    3. ' (' → logprob: -14.12500286102295
    4. 'm' → logprob: -17.250003814697266
    5. ' m' → logprob: -18.125003814697266
    6. '(
' → logprob: -20.375003814697266
    7. ',m' → logprob: -20.750003814697266
    8. ',' → logprob: -20.875003814697266
    9. '(M' → logprob: -21.000003814697266
    10. '	m' → logprob: -21.250003814697266

Token 255: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016717582941055298
    2. '):
' → logprob: -4.141717433929443
    3. ')' → logprob: -7.891717433929443
    4. ' ):' → logprob: -8.141717910766602
    5. ':' → logprob: -12.141717910766602
    6. ' ):
' → logprob: -12.516717910766602
    7. '):
' → logprob: -12.891717910766602
    8. '   ' → logprob: -13.016717910766602
    9. ' )' → logprob: -13.141717910766602
    10. '():' → logprob: -14.141717910766602

Token 256: '       ' (ID: 309)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.6797834038734436
    2. '       ' → logprob: -0.8047834038734436
    3. 'process' → logprob: -3.554783344268799
    4. '   ' → logprob: -4.054783344268799
    5. '    ' → logprob: -9.554783821105957
    6. '	process' → logprob: -10.054783821105957
    7. '     ' → logprob: -10.554783821105957
    8. ' add' → logprob: -11.804783821105957
    9. '      ' → logprob: -12.304783821105957
    10. '           ' → logprob: -13.304783821105957

Token 257: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.3868925869464874
    2. 'process' (adapté à ' process') → logprob: -1.136892557144165
    3. '       ' → logprob: -11.261892318725586
    4. '   ' → logprob: -12.011892318725586
    5. '	process' → logprob: -12.886892318725586
    6. ' proces' → logprob: -17.636892318725586
    7. '.process' → logprob: -18.136892318725586
    8. 'proces' → logprob: -18.261892318725586
    9. '(process' → logprob: -18.386892318725586
    10. '    ' → logprob: -19.136892318725586

Token 258: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -4.60414821645827e-06
    2. 'One' → logprob: -12.875004768371582
    3. 'one' → logprob: -13.375004768371582
    4. '_ONE' → logprob: -15.750004768371582
    5. '_for' → logprob: -16.125003814697266
    6. '
' → logprob: -17.625003814697266
    7. ' one' → logprob: -17.625003814697266
    8. '```' → logprob: -17.750003814697266
    9. '_' → logprob: -18.000003814697266
    10. 'def' → logprob: -18.125003814697266

Token 259: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.06997589766979218
    2. 'edge' → logprob: -2.6949758529663086
    3. ' edge' → logprob: -10.944975852966309
    4. '_edges' → logprob: -11.819975852966309
    5. '_' → logprob: -13.069975852966309
    6. '_EDGE' → logprob: -13.069975852966309
    7. '(edge' → logprob: -13.194975852966309
    8. 'edges' → logprob: -13.444975852966309
    9. 'Edge' → logprob: -13.444975852966309
    10. 'egde' → logprob: -14.194975852966309

Token 260: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.607391408877447e-05
    2. '()
' → logprob: -10.750036239624023
    3. '())' → logprob: -11.375036239624023
    4. '()]' → logprob: -14.250036239624023
    5. '()

' → logprob: -14.375036239624023
    6. '()">' → logprob: -15.125036239624023
    7. '()>' → logprob: -15.250036239624023
    8. '();' → logprob: -15.500036239624023
    9. '()`' → logprob: -15.625036239624023
    10. '()}' → logprob: -15.750036239624023

Token 261: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0012066614581272006
    2. '<|end|>' → logprob: -7.126206874847412
    3. '```' → logprob: -9.001206398010254
    4. '#' → logprob: -9.126206398010254
    5. '<|end|>' → logprob: -9.126206398010254
    6. ')' → logprob: -10.251206398010254
    7. '...' → logprob: -12.501206398010254
    8. 'Explain' → logprob: -13.126206398010254
    9. 'class' → logprob: -13.251206398010254
    10. 'edges' → logprob: -13.376206398010254

Token 262: ' init' (ID: 6327)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.32668763399124146
    2. 'main' → logprob: -1.5766875743865967
    3. ' solve' → logprob: -3.3266875743865967
    4. 'd' → logprob: -4.451687812805176
    5. 'solve' → logprob: -4.451687812805176
    6. ' d' → logprob: -4.951687812805176
    7. ' shortest' → logprob: -6.076687812805176
    8. ' build' → logprob: -7.076687812805176
    9. 'short' → logprob: -8.076687812805176
    10. ' process' → logprob: -8.076687812805176

Token 263: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.8264707326889038
    2. '_edges' → logprob: -1.2014707326889038
    3. '_' → logprob: -2.0764708518981934
    4. '_graph' → logprob: -3.0764708518981934
    5. '_d' → logprob: -4.076470851898193
    6. '_distance' → logprob: -4.326470851898193
    7. '_empty' → logprob: -4.701470851898193
    8. '_nodes' → logprob: -4.826470851898193
    9. '(n' → logprob: -5.076470851898193
    10. '_(' → logprob: -5.576470851898193

Token 264: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.040236737579107285
    2. '():' → logprob: -3.290236711502075
    3. '(' → logprob: -7.165236949920654
    4. '()' → logprob: -7.665236949920654
    5. 'ance' → logprob: -7.915236949920654
    6. '():
' → logprob: -8.290236473083496
    7. 'ances' → logprob: -9.040236473083496
    8. '(size' → logprob: -9.165236473083496
    9. '(N' → logprob: -10.665236473083496
    10. '()(' → logprob: -11.290236473083496

Token 265: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28142300248146057
    2. '):
' → logprob: -1.4064229726791382
    3. ',' → logprob: -8.65642261505127
    4. '):
' → logprob: -9.90642261505127
    5. ')' → logprob: -10.78142261505127
    6. ' ):' → logprob: -10.78142261505127
    7. '):

' → logprob: -12.65642261505127
    8. ' ):
' → logprob: -13.65642261505127
    9. '():
' → logprob: -14.28142261505127
    10. ':' → logprob: -14.90642261505127

Token 266: ' s' (ID: 265)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.05864166095852852
    2. ' inf' → logprob: -3.3086416721343994
    3. '):
' → logprob: -4.80864143371582
    4. '):' → logprob: -5.05864143371582
    5. ')' → logprob: -5.55864143371582
    6. ' ):
' → logprob: -7.43364143371582
    7. ' )' → logprob: -7.93364143371582
    8. ' ):' → logprob: -8.18364143371582
    9. 'INF' → logprob: -9.55864143371582
    10. 'start' → logprob: -9.55864143371582

Token 267: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1743486076593399
    2. '):' → logprob: -1.9243485927581787
    3. ',' → logprob: -4.299348831176758
    4. '):
' → logprob: -8.049348831176758
    5. '=' → logprob: -9.424348831176758
    6. ')' → logprob: -10.674348831176758
    7. '):

' → logprob: -11.299348831176758
    8. ' ):' → logprob: -13.174348831176758
    9. 't' → logprob: -13.424348831176758
    10. ' ):
' → logprob: -13.424348831176758

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5690089639974758e-05
    2. 'return' → logprob: -12.125015258789062
    3. ' return' → logprob: -12.500015258789062
    4. '[' → logprob: -12.875015258789062
    5. '	return' → logprob: -13.375015258789062
    6. 'dist' → logprob: -13.625015258789062
    7. '[n' → logprob: -15.000015258789062
    8. 'n' → logprob: -15.500015258789062
    9. 'def' → logprob: -15.875015258789062
    10. '(n' → logprob: -16.000015258789062

Token 269: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7128987908363342
    2. 'return' → logprob: -0.9628987908363342
    3. 'dist' → logprob: -2.0878987312316895
    4. ' return' → logprob: -5.5878987312316895
    5. ' dist' → logprob: -8.587899208068848
    6. '[' → logprob: -9.587899208068848
    7. '	return' → logprob: -11.337899208068848
    8. ' ' → logprob: -11.962899208068848
    9. '  ' → logprob: -11.962899208068848
    10. 'import' → logprob: -12.462899208068848

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06110905483365059
    2. '=' → logprob: -3.1861090660095215
    3. 'ist' → logprob: -4.0611090660095215
    4. '   ' → logprob: -8.686108589172363
    5. 'ists' → logprob: -8.686108589172363
    6. 'istance' → logprob: -9.186108589172363
    7. 'ef' → logprob: -9.186108589172363
    8. '=[' → logprob: -9.311108589172363
    9. 'is' → logprob: -10.561108589172363
    10. 'ista' → logprob: -11.186108589172363

Token 271: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002904135501012206
    2. ' [' → logprob: -6.002903938293457
    3. '[in' → logprob: -8.877903938293457
    4. '[int' → logprob: -9.752903938293457
    5. '[n' → logprob: -10.002903938293457
    6. '[ind' → logprob: -10.252903938293457
    7. '{' → logprob: -10.627903938293457
    8. '[arr' → logprob: -11.002903938293457
    9. '[node' → logprob: -11.127903938293457
    10. '   ' → logprob: -11.377903938293457

Token 272: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -2.7252845029579476e-05
    2. 'float' → logprob: -10.875027656555176
    3. ' inf' → logprob: -11.875027656555176
    4. '0' → logprob: -14.500027656555176
    5. 'math' → logprob: -14.750027656555176
    6. '-inf' → logprob: -16.50002670288086
    7. 'int' → logprob: -17.00002670288086
    8. '   ' → logprob: -17.25002670288086
    9. '[' → logprob: -17.75002670288086
    10. 'INF' → logprob: -17.75002670288086

Token 273: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0719892755150795
    2. ']*' → logprob: -2.6969892978668213
    3. ']*(' → logprob: -6.696989059448242
    4. ' for' → logprob: -7.696989059448242
    5. ' ]' → logprob: -8.446989059448242
    6. 'for' → logprob: -9.571989059448242
    7. ' if' → logprob: -10.321989059448242
    8. ']+' → logprob: -10.446989059448242
    9. 'if' → logprob: -11.446989059448242
    10. '   ' → logprob: -13.946989059448242

Token 274: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.180258191714529e-06
    2. ' n' → logprob: -12.250008583068848
    3. '(n' → logprob: -12.625008583068848
    4. '	n' → logprob: -18.50000762939453
    5. '(' → logprob: -19.50000762939453
    6. '_n' → logprob: -19.75000762939453
    7. ')n' → logprob: -19.75000762939453
    8. ',n' → logprob: -21.50000762939453
    9. ' (' → logprob: -21.50000762939453
    10. '   ' → logprob: -22.00000762939453

Token 275: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00917026400566101
    2. 'd' → logprob: -4.759170055389404
    3. '
' → logprob: -7.634170055389404
    4. '   ' → logprob: -10.634170532226562
    5. '    
' → logprob: -10.884170532226562
    6. '  
' → logprob: -11.384170532226562
    7. '<|end|>' → logprob: -12.009170532226562
    8. ' d' → logprob: -13.384170532226562
    9. '	d' → logprob: -13.509170532226562
    10. ' 
' → logprob: -13.759170532226562

Token 276: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10376658290624619
    2. '   ' → logprob: -2.478766679763794
    3. '
' → logprob: -4.353766441345215
    4. ' d' → logprob: -6.353766441345215
    5. '<|end|>' → logprob: -10.103766441345215
    6. '	d' → logprob: -10.478766441345215
    7. '    
' → logprob: -11.228766441345215
    8. ' ' → logprob: -11.978766441345215
    9. '<|end|>' → logprob: -12.353766441345215
    10. '  ' → logprob: -12.603766441345215

Token 277: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.00046045915223658085
    2. '   ' → logprob: -8.000460624694824
    3. ' d' → logprob: -9.000460624694824
    4. '	d' → logprob: -13.875460624694824
    5. ' ' → logprob: -15.000460624694824
    6. '  ' → logprob: -15.625460624694824
    7. '```' → logprob: -16.125459671020508
    8. '
' → logprob: -17.125459671020508
    9. 'def' → logprob: -18.875459671020508
    10. '_d' → logprob: -18.875459671020508

Token 278: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -1.4259644558478612e-05
    2. '[' → logprob: -11.250014305114746
    3. 's' → logprob: -14.250014305114746
    4. ' [' → logprob: -15.625014305114746
    5. '<s' → logprob: -16.37501335144043
    6. '(s' → logprob: -16.75001335144043
    7. ' s' → logprob: -16.87501335144043
    8. '[S' → logprob: -17.37501335144043
    9. '```' → logprob: -17.75001335144043
    10. '[start' → logprob: -18.00001335144043

Token 279: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00022153646568767726
    2. ' ]' → logprob: -9.000221252441406
    3. ']=' → logprob: -9.250221252441406
    4. '[' → logprob: -14.125221252441406
    5. ')' → logprob: -14.250221252441406
    6. '=' → logprob: -15.500221252441406
    7. ']
' → logprob: -16.375221252441406
    8. ' =' → logprob: -16.750221252441406
    9. '()]' → logprob: -16.750221252441406
    10. ']+=' → logprob: -16.875221252441406

Token 280: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889717072248459
    2. ' =' → logprob: -2.57889723777771
    3. '[' → logprob: -12.078897476196289
    4. ',' → logprob: -15.203897476196289
    5. ']' → logprob: -15.578897476196289
    6. ' ' → logprob: -15.703897476196289
    7. '=end' → logprob: -15.953897476196289
    8. '=int' → logprob: -16.20389747619629
    9. '<|end|>' → logprob: -16.20389747619629
    10. '.=' → logprob: -16.20389747619629

Token 281: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '۰' → logprob: -19.000001907348633
    4. '   ' → logprob: -21.000001907348633
    5. '０' → logprob: -21.500001907348633
    6. '  ' → logprob: -21.750001907348633
    7. '00' → logprob: -22.187501907348633
    8. '০' → logprob: -22.437501907348633
    9. '<|end|>' → logprob: -22.500001907348633
    10. '000' → logprob: -22.625001907348633

Token 282: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '۰' → logprob: -18.25
    4. 's' → logprob: -19.875
    5. '０' → logprob: -20.75
    6. '   ' → logprob: -20.9375
    7. '00' → logprob: -21.125
    8. '(' → logprob: -21.1875
    9. 'zero' → logprob: -21.1875
    10. '০' → logprob: -21.25

Token 283: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.305326966568828e-05
    2. 'return' → logprob: -9.875093460083008
    3. '	return' → logprob: -11.125093460083008
    4. '<|end|>' → logprob: -11.375093460083008
    5. '
' → logprob: -11.625093460083008
    6. ' return' → logprob: -12.250093460083008
    7. 'def' → logprob: -15.125093460083008
    8. ' ' → logprob: -15.375093460083008
    9. ';' → logprob: -15.375093460083008
    10. '    
' → logprob: -15.625093460083008

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.0033853515051305e-05
    2. 'return' → logprob: -9.750060081481934
    3. ' return' → logprob: -13.625060081481934
    4. '	return' → logprob: -15.250060081481934
    5. 'def' → logprob: -15.250060081481934
    6. '<|end|>' → logprob: -17.875059127807617
    7. '       ' → logprob: -18.750059127807617
    8. '  ' → logprob: -19.000059127807617
    9. '   ' → logprob: -19.250059127807617
    10. '
' → logprob: -19.375059127807617

Token 285: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3133709728717804
    2. 'return' (adapté à ' return') → logprob: -1.313370943069458
    3. ' return' → logprob: -9.188370704650879
    4. 'def' → logprob: -12.438370704650879
    5. '	return' → logprob: -12.813370704650879
    6. '{return' → logprob: -16.438371658325195
    7. ' ' → logprob: -16.688371658325195
    8. 'eturn' → logprob: -17.188371658325195
    9. '  ' → logprob: -17.313371658325195
    10. ':return' → logprob: -17.438371658325195

Token 286: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3868713080883026
    2. ' d' → logprob: -1.136871337890625
    3. '	d' → logprob: -15.761871337890625
    4. ' ' → logprob: -16.386871337890625
    5. '   ' → logprob: -17.386871337890625
    6. ' ' → logprob: -18.011871337890625
    7. '[d' → logprob: -18.261871337890625
    8. '(d' → logprob: -18.511871337890625
    9. '_d' → logprob: -18.761871337890625
    10. '  ' → logprob: -19.136871337890625

Token 287: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02057131566107273
    2. '<|end|>' → logprob: -3.895571231842041
    3. '<|end|>' → logprob: -11.6455717086792
    4. '```' → logprob: -11.8955717086792
    5. '
' → logprob: -12.0205717086792
    6. 'from' → logprob: -13.0205717086792
    7. 'import' → logprob: -13.0205717086792
    8. ')' → logprob: -13.8955717086792
    9. ' def' → logprob: -13.8955717086792
    10. '#' → logprob: -14.7705717086792

Token 288: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00048298496403731406
    2. 'import' → logprob: -7.75048303604126
    3. 'from' → logprob: -9.875482559204102
    4. '<|end|>' → logprob: -14.375482559204102
    5. ' def' → logprob: -16.0004825592041
    6. '
' → logprob: -16.6254825592041
    7. '<|end|>' → logprob: -16.8754825592041
    8. '#' → logprob: -17.7504825592041
    9. '    
' → logprob: -18.1254825592041
    10. 'class' → logprob: -18.1254825592041

Token 289: ' init' (ID: 6327)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.048870306462049484
    2. 'd' → logprob: -3.048870325088501
    3. ' shortest' → logprob: -10.173870086669922
    4. ' solve' → logprob: -10.423870086669922
    5. ' dik' → logprob: -10.423870086669922
    6. ' dij' → logprob: -10.673870086669922
    7. ' dj' → logprob: -10.673870086669922
    8. ' ' → logprob: -10.798870086669922
    9. '_d' → logprob: -10.923870086669922
    10. 'solve' → logprob: -11.048870086669922

Token 290: '_heap' (ID: 88741)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.5200602412223816
    2. '_heap' → logprob: -2.2700603008270264
    3. '_p' → logprob: -2.6450603008270264
    4. 'def' → logprob: -3.2700603008270264
    5. '_' → logprob: -3.2700603008270264
    6. 'heap' → logprob: -3.3950603008270264
    7. 'queue' → logprob: -3.6450603008270264
    8. '_prev' → logprob: -3.8950603008270264
    9. '_priority' → logprob: -4.145060062408447
    10. '_dist' → logprob: -4.770060062408447

Token 291: '(s' (ID: 1858)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.4770320653915405
    2. '():' → logprob: -0.9770320653915405
    3. '(s' → logprob: -5.97703218460083
    4. '()' → logprob: -8.852031707763672
    5. '(n' → logprob: -8.977031707763672
    6. '():
' → logprob: -9.227031707763672
    7. ' ():' → logprob: -10.977031707763672
    8. '():

' → logprob: -11.227031707763672
    9. '(' → logprob: -12.227031707763672
    10. '(size' → logprob: -13.227031707763672

Token 292: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004668761044740677
    2. '):' → logprob: -5.379668712615967
    3. '):
' → logprob: -10.129669189453125
    4. '   ' → logprob: -12.379669189453125
    5. '):

' → logprob: -13.629669189453125
    6. ',' → logprob: -14.004669189453125
    7. ' ):
' → logprob: -14.129669189453125
    8. ')' → logprob: -14.254669189453125
    9. '():
' → logprob: -14.254669189453125
    10. ')
' → logprob: -15.879669189453125

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0325830914080143
    2. 'return' → logprob: -4.282583236694336
    3. '[(' → logprob: -4.657583236694336
    4. '[]' → logprob: -5.157583236694336
    5. '[' → logprob: -6.282583236694336
    6. '[]
' → logprob: -7.282583236694336
    7. ' return' → logprob: -8.782583236694336
    8. 'heap' → logprob: -8.782583236694336
    9. '[
' → logprob: -10.032583236694336
    10. '[h' → logprob: -10.407583236694336

Token 294: ' return' (ID: 622)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.34142476320266724
    2. 'return' (adapté à ' return') → logprob: -1.5914247035980225
    3. '[]' → logprob: -2.9664247035980225
    4. 'h' → logprob: -3.8414247035980225
    5. 'heap' → logprob: -4.841424942016602
    6. '   ' → logprob: -6.216424942016602
    7. '[' → logprob: -6.841424942016602
    8. '[h' → logprob: -6.966424942016602
    9. '[]
' → logprob: -8.591424942016602
    10. 'hq' → logprob: -8.716424942016602

Token 295: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0003564383659977466
    2. ' [(' → logprob: -8.000356674194336
    3. '[]' → logprob: -11.250356674194336
    4. '[' → logprob: -11.750356674194336
    5. ' [' → logprob: -16.625356674194336
    6. '([(' → logprob: -16.750356674194336
    7. '[((' → logprob: -17.000356674194336
    8. ' []' → logprob: -17.625356674194336
    9. ' ' → logprob: -18.375356674194336
    10. '[[' → logprob: -19.125356674194336

Token 296: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.097437315271236e-05
    2. '(' → logprob: -10.00005054473877
    3. ' ' → logprob: -12.25005054473877
    4. 's' → logprob: -16.000051498413086
    5. ' (' → logprob: -16.125051498413086
    6. ')' → logprob: -16.500051498413086
    7. ',' → logprob: -16.625051498413086
    8. '۰' → logprob: -16.625051498413086
    9. '(s' → logprob: -16.750051498413086
    10. '   ' → logprob: -16.750051498413086

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001867326645879075
    2. ',s' → logprob: -8.625186920166016
    3. ' ,' → logprob: -12.375186920166016
    4. 's' → logprob: -13.000186920166016
    5. ',
' → logprob: -15.000186920166016
    6. ',(' → logprob: -16.375186920166016
    7. '(' → logprob: -16.625186920166016
    8. '(s' → logprob: -17.125186920166016
    9. ' s' → logprob: -17.500186920166016
    10. ' (' → logprob: -18.000186920166016

Token 298: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.013164117932319641
    2. ' s' → logprob: -4.388164043426514
    3. '0' → logprob: -7.388164043426514
    4. '<|end|>' → logprob: -10.638164520263672
    5. ' ' → logprob: -11.513164520263672
    6. ')' → logprob: -13.888164520263672
    7. '_s' → logprob: -15.138164520263672
    8. '  ' → logprob: -16.263164520263672
    9. '   ' → logprob: -16.388164520263672
    10. ')s' → logprob: -16.763164520263672

Token 299: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.165027217415627e-05
    2. ' )' → logprob: -11.500021934509277
    3. ')' → logprob: -12.000021934509277
    4. ')]
' → logprob: -12.375021934509277
    5. ')])' → logprob: -15.375021934509277
    6. ')],' → logprob: -15.625021934509277
    7. '))' → logprob: -15.875021934509277
    8. ')]

' → logprob: -16.12502098083496
    9. '),' → logprob: -16.12502098083496
    10. ']' → logprob: -16.37502098083496

Token 300: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3306015716807451e-05
    2. '
' → logprob: -11.87501335144043
    3. 'import' → logprob: -12.50001335144043
    4. '<|end|>' → logprob: -13.12501335144043
    5. '```' → logprob: -15.25001335144043
    6. '

' → logprob: -16.62501335144043
    7. 'from' → logprob: -17.00001335144043
    8. ' def' → logprob: -17.00001335144043
    9. '  
' → logprob: -17.00001335144043
    10. '<|end|>' → logprob: -17.50001335144043

Token 301: ' update' (ID: 4027)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09849677979946136
    2. ' d' → logprob: -2.473496675491333
    3. 'pop' → logprob: -4.973496913909912
    4. 'main' → logprob: -7.723496913909912
    5. 'process' → logprob: -7.723496913909912
    6. 'run' → logprob: -7.848496913909912
    7. 'def' → logprob: -8.098496437072754
    8. 'solve' → logprob: -8.098496437072754
    9. ' pop' → logprob: -8.598496437072754
    10. 'dj' → logprob: -9.598496437072754

Token 302: '_distance' (ID: 45537)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.27009785175323486
    2. '_distance' → logprob: -1.5200978517532349
    3. '_' → logprob: -5.145097732543945
    4. '_heap' → logprob: -5.270097732543945
    5. 'dist' → logprob: -5.645097732543945
    6. '(' → logprob: -6.770097732543945
    7. '_d' → logprob: -7.020097732543945
    8. '(dist' → logprob: -7.520097732543945
    9. '_(' → logprob: -8.270097732543945
    10. '(heap' → logprob: -8.895097732543945

Token 303: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0187342818826437
    2. '(' → logprob: -4.143734455108643
    3. ' (' → logprob: -6.643734455108643
    4. '(dist' → logprob: -6.643734455108643
    5. '(distance' → logprob: -9.518733978271484
    6. '(i' → logprob: -13.143733978271484
    7. '(dp' → logprob: -13.518733978271484
    8. '(n' → logprob: -13.643733978271484
    9. '(D' → logprob: -13.643733978271484
    10. '(u' → logprob: -13.643733978271484

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001342903997283429
    2. ' ,' → logprob: -9.375134468078613
    3. ',u' → logprob: -10.500134468078613
    4. ',v' → logprob: -11.250134468078613
    5. ',node' → logprob: -12.875134468078613
    6. ',index' → logprob: -13.500134468078613
    7. ')' → logprob: -14.500134468078613
    8. ',pos' → logprob: -14.875134468078613
    9. ',x' → logprob: -15.125134468078613
    10. ',p' → logprob: -15.125134468078613

Token 305: ' t' (ID: 260)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5602560043334961
    2. ' u' → logprob: -1.685256004333496
    3. 'v' → logprob: -2.810256004333496
    4. ' v' → logprob: -3.435256004333496
    5. 'heap' → logprob: -3.435256004333496
    6. ' heap' → logprob: -3.560256004333496
    7. 'i' → logprob: -3.810256004333496
    8. 'idx' → logprob: -4.060256004333496
    9. ' idx' → logprob: -4.435256004333496
    10. ' i' → logprob: -4.685256004333496

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.244413766078651e-05
    2. 'o' → logprob: -10.375082015991211
    3. 'arget' → logprob: -11.125082015991211
    4. ' ,' → logprob: -12.250082015991211
    5. '[],' → logprob: -12.375082015991211
    6. 'a' → logprob: -12.875082015991211
    7. 'uple' → logprob: -13.000082015991211
    8. 'ype' → logprob: -13.125082015991211
    9. '):' → logprob: -13.125082015991211
    10. 'p' → logprob: -13.125082015991211

Token 307: ' new' (ID: 620)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0563422441482544
    2. 'new' → logprob: -1.0563422441482544
    3. ' new' → logprob: -2.306342124938965
    4. ' nd' → logprob: -2.931342124938965
    5. 'nd' → logprob: -3.306342124938965
    6. 'dist' → logprob: -3.431342124938965
    7. 'c' → logprob: -3.556342124938965
    8. ' w' → logprob: -3.931342124938965
    9. 'cost' → logprob: -4.806342124938965
    10. 'v' → logprob: -4.931342124938965

Token 308: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.06497093290090561
    2. '_distance' → logprob: -3.9399709701538086
    3. '_d' → logprob: -4.314970970153809
    4. 'dist' → logprob: -4.314970970153809
    5. 'd' → logprob: -4.939970970153809
    6. '_val' → logprob: -5.689970970153809
    7. '_cost' → logprob: -5.939970970153809
    8. ')' → logprob: -5.939970970153809
    9. 't' → logprob: -8.189970970153809
    10. '_value' → logprob: -8.189970970153809

Token 309: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07093412429094315
    2. '):
' → logprob: -2.6959340572357178
    3. ')' → logprob: -6.945934295654297
    4. '):

' → logprob: -10.570934295654297
    5. ' ):' → logprob: -12.570934295654297
    6. '):
' → logprob: -13.195934295654297
    7. ':' → logprob: -13.820934295654297
    8. 't' → logprob: -14.820934295654297
    9. 'd' → logprob: -15.320934295654297
    10. ',' → logprob: -15.320934295654297

Token 310: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6440135836601257
    2. '   ' → logprob: -0.8940135836601257
    3. ':
' → logprob: -3.7690136432647705
    4. '=' → logprob: -4.519013404846191
    5. '<|end|>' → logprob: -4.769013404846191
    6. '):' → logprob: -4.894013404846191
    7. ',' → logprob: -5.644013404846191
    8. '):
' → logprob: -5.894013404846191
    9. '[' → logprob: -6.019013404846191
    10. ' =' → logprob: -6.144013404846191

Token 311: ' d' (ID: 272)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.34032025933265686
    2. 'd' (adapté à ' d') → logprob: -1.8403202295303345
    3. ' if' → logprob: -2.090320348739624
    4. '   ' → logprob: -5.590320110321045
    5. ' d' → logprob: -6.090320110321045
    6. '
' → logprob: -11.465320587158203
    7. '	if' → logprob: -11.965320587158203
    8. '```' → logprob: -12.215320587158203
    9. ' =' → logprob: -12.340320587158203
    10. '    ' → logprob: -12.590320587158203

Token 312: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -7.266944157890975e-05
    2. '[' → logprob: -9.625072479248047
    3. 't' → logprob: -12.875072479248047
    4. '=' → logprob: -13.375072479248047
    5. ',' → logprob: -14.375072479248047
    6. ' [' → logprob: -14.500072479248047
    7. ' =' → logprob: -15.000072479248047
    8. '```' → logprob: -15.625072479248047
    9. '=t' → logprob: -15.625072479248047
    10. ',t' → logprob: -16.125072479248047

Token 313: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006568063981831074
    2. ']>' → logprob: -5.38156795501709
    3. '[t' → logprob: -7.25656795501709
    4. '>' → logprob: -7.25656795501709
    5. ']=' → logprob: -8.25656795501709
    6. ' ]' → logprob: -8.88156795501709
    7. ' >' → logprob: -9.63156795501709
    8. '[' → logprob: -10.75656795501709
    9. ']<=' → logprob: -11.50656795501709
    10. ']>=' → logprob: -11.50656795501709

Token 314: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00045914790825918317
    2. ' =' → logprob: -7.75045919418335
    3. '>' → logprob: -10.500458717346191
    4. '<=' → logprob: -14.875458717346191
    5. ' >' → logprob: -15.750458717346191
    6. '=min' → logprob: -16.125459671020508
    7. '[' → logprob: -16.375459671020508
    8. ',' → logprob: -16.750459671020508
    9. ']' → logprob: -16.875459671020508
    10. '>=' → logprob: -17.000459671020508

Token 315: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.029752222821116447
    2. ' new' → logprob: -3.529752254486084
    3. 'min' → logprob: -13.404751777648926
    4. ' min' → logprob: -15.654751777648926
    5. '	new' → logprob: -16.529752731323242
    6. '   ' → logprob: -17.404752731323242
    7. ' ' → logprob: -18.404752731323242
    8. ' ' → logprob: -18.404752731323242
    9. '```' → logprob: -18.779752731323242
    10. '
' → logprob: -18.779752731323242

Token 316: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -2.935296834039036e-06
    2. '_' → logprob: -13.50000286102295
    3. 'dist' → logprob: -14.12500286102295
    4. '_d' → logprob: -15.62500286102295
    5. 'Dist' → logprob: -16.125003814697266
    6. ' _' → logprob: -16.125003814697266
    7. '_distance' → logprob: -16.500003814697266
    8. 't' → logprob: -16.875003814697266
    9. '_DIST' → logprob: -17.125003814697266
    10. '_diff' → logprob: -17.250003814697266

Token 317: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6477119326591492
    2. '<|end|>' → logprob: -0.7727119326591492
    3. '   ' → logprob: -4.272711753845215
    4. 'def' → logprob: -7.272711753845215
    5. '
' → logprob: -9.272711753845215
    6. '    
' → logprob: -9.897711753845215
    7. '<|end|>' → logprob: -10.272711753845215
    8. '  
' → logprob: -10.397711753845215
    9. '

' → logprob: -10.522711753845215
    10. '  ' → logprob: -11.022711753845215

Token 318: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 319: ' should' (ID: 1757)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.563496470451355
    2. 'd' → logprob: -1.063496470451355
    3. ' d' → logprob: -3.6884965896606445
    4. 'process' → logprob: -4.1884965896606445
    5. 'run' → logprob: -4.3134965896606445
    6. 'push' → logprob: -4.6884965896606445
    7. 'def' → logprob: -4.9384965896606445
    8. 'extract' → logprob: -4.9384965896606445
    9. ' pop' → logprob: -5.3134965896606445
    10. 'he' → logprob: -7.4384965896606445

Token 320: '_continue' (ID: 188911)
  Prédit: '_continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_continue' → logprob: -0.6863811612129211
    2. '_update' → logprob: -0.8113811612129211
    3. '_pop' → logprob: -3.1863811016082764
    4. '_process' → logprob: -6.3113813400268555
    5. '_pro' → logprob: -6.4363813400268555
    6. '_use' → logprob: -6.5613813400268555
    7. '_visit' → logprob: -6.6863813400268555
    8. '_' → logprob: -6.8113813400268555
    9. '_push' → logprob: -7.1863813400268555
    10. '_get' → logprob: -7.4363813400268555

Token 321: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.16404592990875244
    2. '(' → logprob: -1.9140459299087524
    3. ' (' → logprob: -6.039045810699463
    4. '(distance' → logprob: -7.039045810699463
    5. 'd' → logprob: -8.914046287536621
    6. ':' → logprob: -9.539046287536621
    7. '(dist' → logprob: -9.539046287536621
    8. '(t' → logprob: -9.664046287536621
    9. '():' → logprob: -9.789046287536621
    10. '(current' → logprob: -10.789046287536621

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02094811201095581
    2. '[t' → logprob: -3.8959481716156006
    3. ',t' → logprob: -8.02094841003418
    4. '[' → logprob: -10.14594841003418
    5. 't' → logprob: -11.52094841003418
    6. ' ,' → logprob: -12.52094841003418
    7. '[d' → logprob: -12.64594841003418
    8. '[],' → logprob: -12.77094841003418
    9. ',
' → logprob: -12.89594841003418
    10. '[i' → logprob: -13.14594841003418

Token 323: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6137664914131165
    2. ' u' → logprob: -1.4887664318084717
    3. 't' → logprob: -2.4887664318084717
    4. ' t' → logprob: -2.9887664318084717
    5. 'v' → logprob: -3.2387664318084717
    6. 'i' → logprob: -3.9887664318084717
    7. ' v' → logprob: -3.9887664318084717
    8. ' i' → logprob: -5.488766670227051
    9. 's' → logprob: -5.863766670227051
    10. ' idx' → logprob: -5.863766670227051

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005546073894947767
    2. '[v' → logprob: -5.2555460929870605
    3. ',v' → logprob: -8.130545616149902
    4. ' ,' → logprob: -11.880545616149902
    5. '):' → logprob: -12.380545616149902
    6. 'v' → logprob: -13.130545616149902
    7. '   ' → logprob: -13.505545616149902
    8. '[],' → logprob: -13.880545616149902
    9. '[' → logprob: -14.005545616149902
    10. ',
' → logprob: -14.380545616149902

Token 325: ' c' (ID: 274)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.827072024345398
    2. 'new' → logprob: -1.077072024345398
    3. 'dist' → logprob: -2.4520721435546875
    4. ' dist' → logprob: -3.2020721435546875
    5. ' nd' → logprob: -3.5770721435546875
    6. 'nd' → logprob: -3.7020721435546875
    7. 'curr' → logprob: -4.9520721435546875
    8. 'w' → logprob: -5.0770721435546875
    9. ' current' → logprob: -5.0770721435546875
    10. 'current' → logprob: -5.2020721435546875

Token 326: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1442524939775467
    2. '):
' → logprob: -2.3942525386810303
    3. ',' → logprob: -3.2692525386810303
    4. '):

' → logprob: -6.644252300262451
    5. 'urrent' → logprob: -6.644252300262451
    6. ')' → logprob: -7.519252300262451
    7. ' ):' → logprob: -7.644252300262451
    8. 'ost' → logprob: -7.894252300262451
    9. 't' → logprob: -8.39425277709961
    10. '   ' → logprob: -8.64425277709961

Token 327: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05450565367937088
    2. ' return' → logprob: -3.4295055866241455
    3. ':' → logprob: -5.554505825042725
    4. 'return' → logprob: -5.554505825042725
    5. ' d' → logprob: -5.679505825042725
    6. 'd' → logprob: -5.804505825042725
    7. '    ' → logprob: -6.304505825042725
    8. ' if' → logprob: -7.554505825042725
    9. '):' → logprob: -7.554505825042725
    10. ' v' → logprob: -7.679505825042725

Token 328: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8203631043434143
    2. ' return' → logprob: -1.0703630447387695
    3. '   ' → logprob: -1.5703630447387695
    4. 'd' → logprob: -5.1953630447387695
    5. ' d' → logprob: -6.3203630447387695
    6. 'c' → logprob: -6.8203630447387695
    7. ' c' → logprob: -8.44536304473877
    8. '	return' → logprob: -9.94536304473877
    9. 'if' → logprob: -10.32036304473877
    10. ' if' → logprob: -10.32036304473877

Token 329: ' d' (ID: 272)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2829105854034424
    2. ' c' → logprob: -1.2829105854034424
    3. ' d' → logprob: -1.2829105854034424
    4. 'd' → logprob: -1.7829105854034424
    5. '   ' → logprob: -9.657910346984863
    6. ' ' → logprob: -10.657910346984863
    7. '	c' → logprob: -10.907910346984863
    8. ' (' → logprob: -11.282910346984863
    9. '(c' → logprob: -11.657910346984863
    10. ' ' → logprob: -11.907910346984863

Token 330: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.696889623621246e-06
    2. 'v' → logprob: -13.12500286102295
    3. '[' → logprob: -14.87500286102295
    4. ' v' → logprob: -16.250001907348633
    5. '<v' → logprob: -16.500001907348633
    6. '[c' → logprob: -17.250001907348633
    7. ' [' → logprob: -18.000001907348633
    8. '[t' → logprob: -18.250001907348633
    9. '	v' → logprob: -18.250001907348633
    10. '```' → logprob: -18.750001907348633

Token 331: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.29719439148902893
    2. '[v' → logprob: -1.9221943616867065
    3. ']' → logprob: -2.547194480895996
    4. ' >' → logprob: -3.797194480895996
    5. ']>' → logprob: -5.047194480895996
    6. '[c' → logprob: -6.172194480895996
    7. '[' → logprob: -7.297194480895996
    8. ' ]' → logprob: -8.297194480895996
    9. '][' → logprob: -9.422194480895996
    10. '>[' → logprob: -9.672194480895996

Token 332: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.007156249135732651
    2. ' >' → logprob: -5.5071563720703125
    3. '<=' → logprob: -6.0071563720703125
    4. '[c' → logprob: -7.8821563720703125
    5. '[' → logprob: -9.882156372070312
    6. 'c' → logprob: -10.132156372070312
    7. '>=' → logprob: -10.257156372070312
    8. '<' → logprob: -10.507156372070312
    9. '```' → logprob: -10.882156372070312
    10. ' <=' → logprob: -11.007156372070312

Token 333: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002477081725373864
    2. ' c' → logprob: -6.002477169036865
    3. '=' → logprob: -13.627476692199707
    4. 'inf' → logprob: -17.002477645874023
    5. ' ' → logprob: -17.752477645874023
    6. '	c' → logprob: -17.877477645874023
    7. '=c' → logprob: -18.252477645874023
    8. '<|end|>' → logprob: -18.627477645874023
    9. ' inf' → logprob: -19.127477645874023
    10. ' ' → logprob: -19.252477645874023

Token 334: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009274221956729889
    2. '
' → logprob: -7.125927448272705
    3. '<|end|>' → logprob: -9.250926971435547
    4. 'import' → logprob: -11.000926971435547
    5. '```' → logprob: -13.000926971435547
    6. '    
' → logprob: -13.250926971435547
    7. '  
' → logprob: -13.375926971435547
    8. 'from' → logprob: -13.750926971435547
    9. ' def' → logprob: -14.625926971435547
    10. '
' → logprob: -14.625926971435547

Token 335: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00019471932318992913
    2. '<|end|>' → logprob: -8.625194549560547
    3. 'import' → logprob: -12.250194549560547
    4. '```' → logprob: -12.375194549560547
    5. '<|end|>' → logprob: -13.125194549560547
    6. 'from' → logprob: -13.625194549560547
    7. ')' → logprob: -14.000194549560547
    8. '
' → logprob: -14.500194549560547
    9. '#' → logprob: -14.500194549560547
    10. ' def' → logprob: -15.625194549560547

Token 336: ' process' (ID: 2273)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013605660758912563
    2. 'd' → logprob: -5.38860559463501
    3. ' def' → logprob: -5.38860559463501
    4. 'pop' → logprob: -6.88860559463501
    5. 'run' → logprob: -6.88860559463501
    6. 'process' → logprob: -7.01360559463501
    7. 'get' → logprob: -8.013606071472168
    8. 'find' → logprob: -8.388606071472168
    9. ' d' → logprob: -8.888606071472168
    10. ' process' → logprob: -9.138606071472168

Token 337: '_neighbor' (ID: 177120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6429881453514099
    2. 'def' → logprob: -1.8929882049560547
    3. '_' → logprob: -2.3929882049560547
    4. '_one' → logprob: -2.3929882049560547
    5. '(v' → logprob: -3.3929882049560547
    6. '_edges' → logprob: -3.8929882049560547
    7. '(s' → logprob: -4.392988204956055
    8. '_vertices' → logprob: -4.767988204956055
    9. '(d' → logprob: -4.892988204956055
    10. '_queue' → logprob: -5.017988204956055

Token 338: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4983314573764801
    2. '(v' → logprob: -1.1233314275741577
    3. '(d' → logprob: -3.1233315467834473
    4. '(edges' → logprob: -4.748331546783447
    5. 's' → logprob: -5.498331546783447
    6. '(ne' → logprob: -5.998331546783447
    7. '(s' → logprob: -6.248331546783447
    8. '(u' → logprob: -6.998331546783447
    9. '(n' → logprob: -7.498331546783447
    10. 'def' → logprob: -7.498331546783447

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016897499153856188
    2. ',v' → logprob: -8.750168800354004
    3. ' ,' → logprob: -12.125168800354004
    4. 'v' → logprob: -13.625168800354004
    5. ',d' → logprob: -13.625168800354004
    6. ',
' → logprob: -14.875168800354004
    7. ',t' → logprob: -15.000168800354004
    8. ',n' → logprob: -15.125168800354004
    9. '<|end|>' → logprob: -15.500168800354004
    10. '‌,' → logprob: -15.625168800354004

Token 340: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9397650361061096
    2. ' v' → logprob: -1.1897649765014648
    3. 't' → logprob: -2.439764976501465
    4. 'u' → logprob: -2.564764976501465
    5. ' t' → logprob: -2.814764976501465
    6. ' u' → logprob: -3.064764976501465
    7. ' edges' → logprob: -5.064764976501465
    8. 'd' → logprob: -6.064764976501465
    9. 'n' → logprob: -6.189764976501465
    10. 'e' → logprob: -6.189764976501465

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7252845029579476e-05
    2. ' ,' → logprob: -11.250027656555176
    3. ',n' → logprob: -12.750027656555176
    4. '   ' → logprob: -13.250027656555176
    5. ',t' → logprob: -13.250027656555176
    6. ',v' → logprob: -13.500027656555176
    7. ',
' → logprob: -13.500027656555176
    8. ',u' → logprob: -13.625027656555176
    9. ',k' → logprob: -15.187527656555176
    10. 'u' → logprob: -15.250027656555176

Token 342: ' t' (ID: 260)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13970939815044403
    2. 'w' → logprob: -2.63970947265625
    3. ' c' → logprob: -3.13970947265625
    4. 'u' → logprob: -5.13970947265625
    5. ' w' → logprob: -5.51470947265625
    6. 'cost' → logprob: -6.13970947265625
    7. 't' → logprob: -7.01470947265625
    8. ' cost' → logprob: -7.26470947265625
    9. ')' → logprob: -8.13970947265625
    10. ' u' → logprob: -8.26470947265625

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.588793960167095e-05
    2. ' ,' → logprob: -9.750076293945312
    3. ',c' → logprob: -11.750076293945312
    4. ',v' → logprob: -12.875076293945312
    5. ',
' → logprob: -13.125076293945312
    6. '):' → logprob: -14.125076293945312
    7. '   ' → logprob: -14.625076293945312
    8. '_,' → logprob: -14.625076293945312
    9. 'c' → logprob: -14.625076293945312
    10. ',d' → logprob: -14.875076293945312

Token 344: ' cost' (ID: 3097)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03802541643381119
    2. ' c' → logprob: -3.663025379180908
    3. 'w' → logprob: -5.288025379180908
    4. 'cost' → logprob: -5.288025379180908
    5. ' cost' → logprob: -7.663025379180908
    6. '   ' → logprob: -8.288025856018066
    7. ' w' → logprob: -8.413025856018066
    8. 'cc' → logprob: -8.788025856018066
    9. 'wt' → logprob: -9.663025856018066
    10. 'nc' → logprob: -10.038025856018066

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014339550398290157
    2. '):' → logprob: -4.264339447021484
    3. ')' → logprob: -9.139339447021484
    4. '):
' → logprob: -10.139339447021484
    5. ',
' → logprob: -10.764339447021484
    6. '   ' → logprob: -12.389339447021484
    7. '):

' → logprob: -14.014339447021484
    8. ' ,' → logprob: -14.264339447021484
    9. 's' → logprob: -15.014339447021484
    10. ' ):' → logprob: -15.014339447021484

Token 346: ' h' (ID: 312)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.14003092050552368
    2. 'h' → logprob: -3.265030860900879
    3. 'q' → logprob: -3.390030860900879
    4. 'he' → logprob: -4.140030860900879
    5. 'edges' → logprob: -4.140030860900879
    6. ' heap' → logprob: -4.765030860900879
    7. 'pq' → logprob: -5.390030860900879
    8. ')' → logprob: -5.765030860900879
    9. 'hq' → logprob: -6.140030860900879
    10. 'new' → logprob: -6.265030860900879

Token 347: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03165554627776146
    2. '):
' → logprob: -3.9066555500030518
    3. ',' → logprob: -4.531655311584473
    4. ')' → logprob: -8.656655311584473
    5. 'e' → logprob: -9.531655311584473
    6. 'p' → logprob: -10.906655311584473
    7. '):

' → logprob: -11.906655311584473
    8. '   ' → logprob: -12.156655311584473
    9. '):
' → logprob: -12.531655311584473
    10. ' ):' → logprob: -13.031655311584473

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025580688379704952
    2. ' if' → logprob: -6.62755823135376
    3. 'if' → logprob: -6.75255823135376
    4. ',' → logprob: -10.002557754516602
    5. '	if' → logprob: -12.252557754516602
    6. '       ' → logprob: -12.502557754516602
    7. ')' → logprob: -13.377557754516602
    8. '  ' → logprob: -13.502557754516602
    9. 'he' → logprob: -13.752557754516602
    10. '    ' → logprob: -14.127557754516602

Token 349: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6704679131507874
    2. '   ' → logprob: -1.0454678535461426
    3. 'new' → logprob: -2.0454678535461426
    4. 'he' → logprob: -6.045467853546143
    5. ' if' → logprob: -6.295467853546143
    6. 'c' → logprob: -7.045467853546143
    7. 'nd' → logprob: -7.295467853546143
    8. ' new' → logprob: -7.795467853546143
    9. 'd' → logprob: -8.4204683303833
    10. 'import' → logprob: -8.5454683303833

Token 350: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7163443565368652
    2. ' d' → logprob: -0.7163443565368652
    3. 'cost' → logprob: -4.466344356536865
    4. ' cost' → logprob: -4.716344356536865
    5. ' not' → logprob: -6.591344356536865
    6. '   ' → logprob: -7.466344356536865
    7. 'not' → logprob: -8.091344833374023
    8. '	d' → logprob: -9.591344833374023
    9. ' ' → logprob: -10.091344833374023
    10. ' new' → logprob: -10.841344833374023

Token 351: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.34865742921829224
    2. '[t' → logprob: -1.2236573696136475
    3. 't' → logprob: -8.848657608032227
    4. 'v' → logprob: -10.098657608032227
    5. '[' → logprob: -11.473657608032227
    6. ' [' → logprob: -12.348657608032227
    7. '```' → logprob: -13.598657608032227
    8. '	t' → logprob: -13.723657608032227
    9. ')' → logprob: -13.723657608032227
    10. '   ' → logprob: -13.723657608032227

Token 352: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03982717543840408
    2. '>' → logprob: -3.7898271083831787
    3. ']>' → logprob: -4.789827346801758
    4. '+' → logprob: -5.789827346801758
    5. ']+' → logprob: -5.789827346801758
    6. '[' → logprob: -7.039827346801758
    7. '[v' → logprob: -7.539827346801758
    8. '[t' → logprob: -8.414827346801758
    9. 't' → logprob: -9.164827346801758
    10. '][' → logprob: -9.164827346801758

Token 353: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.32993409037590027
    2. '>' → logprob: -1.3299341201782227
    3. ' +' → logprob: -4.579934120178223
    4. ' >' → logprob: -5.079934120178223
    5. '==' → logprob: -10.579934120178223
    6. '[' → logprob: -11.829934120178223
    7. '!=' → logprob: -12.204934120178223
    8. ' ' → logprob: -12.454934120178223
    9. '+c' → logprob: -12.579934120178223
    10. '   ' → logprob: -13.079934120178223

Token 354: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.005234002135694027
    2. ' cost' → logprob: -5.2552337646484375
    3. '(cost' → logprob: -15.630233764648438
    4. '.cost' → logprob: -18.380233764648438
    5. '_cost' → logprob: -19.380233764648438
    6. 'Cost' → logprob: -19.505233764648438
    7. ' ' → logprob: -19.630233764648438
    8. 'c' → logprob: -19.880233764648438
    9. '   ' → logprob: -20.005233764648438
    10. ' kost' → logprob: -21.005233764648438

Token 355: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.14270687103271484
    2. ' <' → logprob: -2.017706871032715
    3. '<v' → logprob: -11.392706871032715
    4. '<t' → logprob: -11.892706871032715
    5. ' ' → logprob: -12.767706871032715
    6. '<=' → logprob: -13.392706871032715
    7. '[' → logprob: -13.517706871032715
    8. '<n' → logprob: -13.642706871032715
    9. '<th' → logprob: -13.642706871032715
    10. '<ll' → logprob: -14.517706871032715

Token 356: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.018150296062231064
    2. ' d' → logprob: -4.018150329589844
    3. '=' → logprob: -15.893150329589844
    4. '   ' → logprob: -16.143150329589844
    5. ' ' → logprob: -16.768150329589844
    6. '	d' → logprob: -17.268150329589844
    7. '  ' → logprob: -17.268150329589844
    8. '[' → logprob: -17.643150329589844
    9. '
' → logprob: -18.143150329589844
    10. '```' → logprob: -18.268150329589844

Token 357: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.00015860427811276168
    2. 't' → logprob: -8.750158309936523
    3. '[' → logprob: -16.875158309936523
    4. '(t' → logprob: -17.500158309936523
    5. '	t' → logprob: -17.875158309936523
    6. ' t' → logprob: -17.875158309936523
    7. '[v' → logprob: -18.250158309936523
    8. '`t' → logprob: -18.500158309936523
    9. '```' → logprob: -19.000158309936523
    10. '
' → logprob: -19.125158309936523

Token 358: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01300257071852684
    2. '):
' → logprob: -4.513002395629883
    3. ']:' → logprob: -6.888002395629883
    4. '[t' → logprob: -7.888002395629883
    5. ')' → logprob: -8.513002395629883
    6. ':' → logprob: -8.763002395629883
    7. ' and' → logprob: -9.888002395629883
    8. ']):' → logprob: -10.013002395629883
    9. ' ):' → logprob: -11.013002395629883
    10. '   ' → logprob: -11.013002395629883

Token 359: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005986154545098543
    2. ':' → logprob: -5.255986213684082
    3. '   ' → logprob: -8.380986213684082
    4. '):' → logprob: -8.880986213684082
    5. '<|end|>' → logprob: -9.380986213684082
    6. ',' → logprob: -9.630986213684082
    7. '	' → logprob: -10.755986213684082
    8. ')' → logprob: -10.755986213684082
    9. ' return' → logprob: -10.755986213684082
    10. 'he' → logprob: -11.005986213684082

Token 360: ' update' (ID: 4027)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2811221778392792
    2. 'update' (adapté à ' update') → logprob: -1.6561222076416016
    3. ' update' → logprob: -3.5311222076416016
    4. '           ' → logprob: -4.531122207641602
    5. 'd' → logprob: -5.031122207641602
    6. 'he' → logprob: -5.531122207641602
    7. '   ' → logprob: -6.781122207641602
    8. ' he' → logprob: -6.781122207641602
    9. ' d' → logprob: -7.031122207641602
    10. 'new' → logprob: -9.406122207641602

Token 361: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.002486715093255043
    2. 'distance' → logprob: -6.002486705780029
    3. 'd' → logprob: -12.627487182617188
    4. 'Distance' → logprob: -12.627487182617188
    5. '(d' → logprob: -12.877487182617188
    6. '(distance' → logprob: -14.002487182617188
    7. ' distance' → logprob: -14.752487182617188
    8. 'dist' → logprob: -14.752487182617188
    9. '_DISTANCE' → logprob: -15.627487182617188
    10. '_dist' → logprob: -17.002487182617188

Token 362: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.875001907348633
    3. 'd' → logprob: -14.625001907348633
    4. '(
' → logprob: -17.375001907348633
    5. ' (' → logprob: -19.000001907348633
    6. ',d' → logprob: -19.125001907348633
    7. '```' → logprob: -19.250001907348633
    8. '   ' → logprob: -20.375001907348633
    9. '	d' → logprob: -21.125001907348633
    10. ')d' → logprob: -21.500001907348633

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.049755782238208e-05
    2. ',t' → logprob: -10.00005054473877
    3. ' ,' → logprob: -12.75005054473877
    4. '(t' → logprob: -13.37505054473877
    5. 't' → logprob: -15.12505054473877
    6. ',
' → logprob: -15.50005054473877
    7. ' t' → logprob: -16.375049591064453
    8. '   ' → logprob: -17.250049591064453
    9. '```' → logprob: -18.125049591064453
    10. '[t' → logprob: -18.250049591064453

Token 364: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0002613358374219388
    2. ' t' → logprob: -8.250261306762695
    3. '	t' → logprob: -19.750261306762695
    4. '`t' → logprob: -19.750261306762695
    5. ')t' → logprob: -20.375261306762695
    6. 'T' → logprob: -20.500261306762695
    7. '_t' → logprob: -21.750261306762695
    8. ',' → logprob: -22.250261306762695
    9. ')' → logprob: -22.500261306762695
    10. 'v' → logprob: -22.750261306762695

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1008713702030946e-06
    2. ' ,' → logprob: -13.625001907348633
    3. ',
' → logprob: -15.625001907348633
    4. ',new' → logprob: -16.250001907348633
    5. ',

' → logprob: -16.375001907348633
    6. ',c' → logprob: -16.625001907348633
    7. ')' → logprob: -16.750001907348633
    8. ',t' → logprob: -17.250001907348633
    9. '   ' → logprob: -17.250001907348633
    10. '),' → logprob: -17.500001907348633

Token 366: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00862143188714981
    2. ' d' → logprob: -4.7586212158203125
    3. '   ' → logprob: -12.258621215820312
    4. ')' → logprob: -15.133621215820312
    5. 'v' → logprob: -15.133621215820312
    6. ' ' → logprob: -15.383621215820312
    7. '```' → logprob: -15.383621215820312
    8. 'process' → logprob: -15.508621215820312
    9. '  ' → logprob: -15.633621215820312
    10. '    ' → logprob: -15.758621215820312

Token 367: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.05496544763445854
    2. 'v' → logprob: -2.9299654960632324
    3. ')v' → logprob: -10.554965019226074
    4. '	v' → logprob: -10.929965019226074
    5. '(v' → logprob: -11.554965019226074
    6. '<v' → logprob: -11.804965019226074
    7. '[t' → logprob: -12.054965019226074
    8. '[' → logprob: -12.304965019226074
    9. ' v' → logprob: -12.554965019226074
    10. '```' → logprob: -13.179965019226074

Token 368: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08854863047599792
    2. '[v' → logprob: -2.5885486602783203
    3. 'v' → logprob: -4.83854866027832
    4. ']+' → logprob: -6.58854866027832
    5. '[t' → logprob: -8.21354866027832
    6. 't' → logprob: -10.21354866027832
    7. '[' → logprob: -12.83854866027832
    8. '][' → logprob: -12.96354866027832
    9. ' ]' → logprob: -13.33854866027832
    10. '   ' → logprob: -14.08854866027832

Token 369: ' +' (ID: 659)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0021653673611581326
    2. '[' → logprob: -6.7521653175354
    3. '[t' → logprob: -8.252165794372559
    4. '[c' → logprob: -8.377165794372559
    5. '+' → logprob: -8.502165794372559
    6. 'v' → logprob: -8.877165794372559
    7. ' +' → logprob: -9.252165794372559
    8. ']' → logprob: -10.877165794372559
    9. '[val' → logprob: -11.627165794372559
    10. '[value' → logprob: -11.752165794372559

Token 370: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.004078997299075127
    2. ' cost' → logprob: -5.5040788650512695
    3. '(cost' → logprob: -14.37907886505127
    4. '_cost' → logprob: -16.879079818725586
    5. 'Cost' → logprob: -18.254079818725586
    6. 'c' → logprob: -19.504079818725586
    7. '.cost' → logprob: -19.504079818725586
    8. 'cos' → logprob: -19.629079818725586
    9. ' kost' → logprob: -20.129079818725586
    10. 'kost' → logprob: -21.004079818725586

Token 371: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10565170645713806
    2. ')' → logprob: -2.730651617050171
    3. ')
' → logprob: -3.355651617050171
    4. '           ' → logprob: -9.10565185546875
    5. ',' → logprob: -10.48065185546875
    6. '               ' → logprob: -11.35565185546875
    7. '),' → logprob: -11.60565185546875
    8. ' he' → logprob: -11.60565185546875
    9. ')
' → logprob: -11.73065185546875
    10. 'he' → logprob: -12.35565185546875

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019221604452468455
    2. 'he' → logprob: -8.625192642211914
    3. ' he' → logprob: -11.875192642211914
    4. '   ' → logprob: -13.375192642211914
    5. '	' → logprob: -13.500192642211914
    6. ',' → logprob: -13.625192642211914
    7. '               ' → logprob: -14.875192642211914
    8. '    ' → logprob: -15.000192642211914
    9. '      ' → logprob: -15.125192642211914
    10. '```' → logprob: -15.625192642211914

Token 373: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -7.481510692741722e-05
    2. '       ' → logprob: -9.75007438659668
    3. ' he' → logprob: -11.50007438659668
    4. '   ' → logprob: -12.12507438659668
    5. '```' → logprob: -14.75007438659668
    6. '	' → logprob: -15.37507438659668
    7. 'heap' → logprob: -16.12507438659668
    8. '           ' → logprob: -16.12507438659668
    9. '               ' → logprob: -16.25007438659668
    10. '
' → logprob: -17.75007438659668

Token 374: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.650518920039758e-06
    2. 'ap' → logprob: -12.625003814697266
    3. 'a' → logprob: -16.000003814697266
    4. ' app' → logprob: -17.000003814697266
    5. 'pp' → logprob: -17.375003814697266
    6. '```' → logprob: -18.250003814697266
    7. '   ' → logprob: -18.875003814697266
    8. 'appt' → logprob: -20.375003814697266
    9. '`' → logprob: -20.500003814697266
    10. '	app' → logprob: -20.875003814697266

Token 375: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0004307884373702109
    2. 'push' → logprob: -7.750430583953857
    3. 'op' → logprob: -17.250431060791016
    4. 'p' → logprob: -17.750431060791016
    5. 'pp' → logprob: -18.000431060791016
    6. 'app' → logprob: -18.000431060791016
    7. 'sh' → logprob: -18.375431060791016
    8. 'u' → logprob: -18.750431060791016
    9. 'ushing' → logprob: -18.875431060791016
    10. 'us' → logprob: -19.375431060791016

Token 376: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -4.008129963040119e-06
    2. '(' → logprob: -12.500003814697266
    3. ' (' → logprob: -16.625003814697266
    4. 'h' → logprob: -17.750003814697266
    5. ',h' → logprob: -18.500003814697266
    6. '<|end|>' → logprob: -19.000003814697266
    7. '```' → logprob: -19.500003814697266
    8. ',' → logprob: -19.625003814697266
    9. '(
' → logprob: -19.875003814697266
    10. '(heap' → logprob: -20.250003814697266

Token 377: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.25195205211639404
    2. ',' → logprob: -2.2519521713256836
    3. '((' → logprob: -2.6269521713256836
    4. '(' → logprob: -3.3769521713256836
    5. ' (' → logprob: -5.001952171325684
    6. ',(' → logprob: -5.876952171325684
    7. ')' → logprob: -6.876952171325684
    8. '(t' → logprob: -8.751952171325684
    9. ',h' → logprob: -9.126952171325684
    10. ' ,' → logprob: -9.501952171325684

Token 378: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0758565366268158
    2. '(d' → logprob: -2.8258564472198486
    3. ' (' → logprob: -4.450856685638428
    4. '(v' → logprob: -6.950856685638428
    5. '(t' → logprob: -7.200856685638428
    6. '((' → logprob: -8.20085620880127
    7. '(c' → logprob: -9.32585620880127
    8. '   ' → logprob: -11.70085620880127
    9. '(new' → logprob: -11.70085620880127
    10. ')' → logprob: -12.07585620880127

Token 379: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00018506382184568793
    2. ' d' → logprob: -8.625185012817383
    3. '
' → logprob: -12.875185012817383
    4. '   ' → logprob: -13.750185012817383
    5. '(d' → logprob: -13.875185012817383
    6. '```' → logprob: -15.625185012817383
    7. ')' → logprob: -16.000185012817383
    8. '       ' → logprob: -16.500185012817383
    9. ' ' → logprob: -16.625185012817383
    10. '

' → logprob: -17.000185012817383

Token 380: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.0002096197713399306
    2. 't' → logprob: -8.50020980834961
    3. '[v' → logprob: -12.87520980834961
    4. ',t' → logprob: -13.25020980834961
    5. '[' → logprob: -13.62520980834961
    6. '(t' → logprob: -15.25020980834961
    7. '	t' → logprob: -15.87520980834961
    8. ',' → logprob: -16.50020980834961
    9. ' t' → logprob: -16.62520980834961
    10. ')t' → logprob: -17.00020980834961

Token 381: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007784062530845404
    2. '],' → logprob: -4.882783889770508
    3. '[t' → logprob: -8.882783889770508
    4. ',t' → logprob: -11.007783889770508
    5. ' ,' → logprob: -11.132783889770508
    6. ']' → logprob: -12.257783889770508
    7. '),' → logprob: -13.257783889770508
    8. 't' → logprob: -14.757783889770508
    9. '[' → logprob: -15.257783889770508
    10. '```' → logprob: -16.007783889770508

Token 382: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.005929154809564352
    2. ' t' → logprob: -5.130928993225098
    3. '`t' → logprob: -15.630928993225098
    4. '   ' → logprob: -15.755928993225098
    5. '	t' → logprob: -16.005929946899414
    6. ' ' → logprob: -17.130929946899414
    7. ')t' → logprob: -17.630929946899414
    8. '  ' → logprob: -18.380929946899414
    9. ' ' → logprob: -18.380929946899414
    10. ')' → logprob: -18.380929946899414

Token 383: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008850685320794582
    2. ')' → logprob: -4.758850574493408
    3. '))
' → logprob: -8.383851051330566
    4. ')
' → logprob: -12.008851051330566
    5. ')))' → logprob: -14.258851051330566
    6. '))

' → logprob: -14.633851051330566
    7. ' ))' → logprob: -15.508851051330566
    8. '));' → logprob: -17.13385009765625
    9. '),' → logprob: -17.25885009765625
    10. ')}' → logprob: -17.88385009765625

Token 384: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008982427418231964
    2. '<|end|>' → logprob: -4.7589826583862305
    3. '
' → logprob: -8.50898265838623
    4. ')' → logprob: -9.38398265838623
    5. '```' → logprob: -10.50898265838623
    6. '<|end|>' → logprob: -10.50898265838623
    7. '#' → logprob: -11.63398265838623
    8. '

' → logprob: -12.50898265838623
    9. '\' → logprob: -12.63398265838623
    10. '  
' → logprob: -13.00898265838623

Token 385: ' process' (ID: 2273)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16632653772830963
    2. 'd' → logprob: -1.9163265228271484
    3. ' d' → logprob: -6.166326522827148
    4. ' def' → logprob: -6.541326522827148
    5. 'main' → logprob: -6.541326522827148
    6. 'solve' → logprob: -7.541326522827148
    7. 'short' → logprob: -8.791326522827148
    8. 'run' → logprob: -9.041326522827148
    9. 'process' → logprob: -9.166326522827148
    10. ' main' → logprob: -9.916326522827148

Token 386: '_vertex' (ID: 65291)
  Prédit: '_neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.3776487112045288
    2. '_neighbors' → logprob: -1.3776487112045288
    3. '_' → logprob: -3.1276488304138184
    4. '_vertex' → logprob: -5.502648830413818
    5. '_edge' → logprob: -6.002648830413818
    6. '_queue' → logprob: -6.252648830413818
    7. '_node' → logprob: -6.377648830413818
    8. '(' → logprob: -6.627648830413818
    9. '_v' → logprob: -6.752648830413818
    10. '_edges' → logprob: -7.377648830413818

Token 387: '(h' (ID: 8120)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.013319524936378002
    2. '(' → logprob: -4.388319492340088
    3. '(v' → logprob: -7.263319492340088
    4. ' (' → logprob: -9.638319969177246
    5. '(def' → logprob: -11.638319969177246
    6. '(
' → logprob: -11.763319969177246
    7. '(h' → logprob: -12.138319969177246
    8. '(s' → logprob: -12.388319969177246
    9. 'def' → logprob: -12.638319969177246
    10. '():' → logprob: -13.138319969177246

Token 388: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.057894252240657806
    2. ',' → logprob: -3.057894229888916
    3. '):
' → logprob: -4.807894229888916
    4. ',d' → logprob: -7.557894229888916
    5. ')' → logprob: -7.682894229888916
    6. ' ):' → logprob: -9.557894706726074
    7. '   ' → logprob: -11.182894706726074
    8. '):
' → logprob: -11.307894706726074
    9. '):

' → logprob: -12.432894706726074
    10. ' ' → logprob: -12.932894706726074

Token 389: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0061563048511743546
    2. ' d' → logprob: -5.3811564445495605
    3. ')' → logprob: -6.8811564445495605
    4. '):' → logprob: -8.256155967712402
    5. '):
' → logprob: -9.256155967712402
    6. ')d' → logprob: -9.381155967712402
    7. ' )' → logprob: -11.631155967712402
    8. ')>' → logprob: -11.756155967712402
    9. '):

' → logprob: -11.881155967712402
    10. '   ' → logprob: -12.131155967712402

Token 390: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024166801013052464
    2. '):
' → logprob: -6.127416610717773
    3. ')' → logprob: -8.627416610717773
    4. ',' → logprob: -10.377416610717773
    5. ' ):' → logprob: -11.127416610717773
    6. '):
' → logprob: -12.877416610717773
    7. '):

' → logprob: -13.002416610717773
    8. ')):' → logprob: -14.502416610717773
    9. '[]):' → logprob: -14.877416610717773
    10. '   ' → logprob: -15.627416610717773

Token 391: ' graph' (ID: 7465)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.42343008518218994
    2. 'v' → logprob: -1.79843008518219
    3. ' n' → logprob: -2.9234299659729004
    4. ')' → logprob: -3.6734299659729004
    5. 'visited' → logprob: -3.6734299659729004
    6. 's' → logprob: -4.0484299659729
    7. 'edges' → logprob: -4.2984299659729
    8. ' v' → logprob: -4.4234299659729
    9. '):' → logprob: -5.0484299659729
    10. ' edges' → logprob: -5.4234299659729

Token 392: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03164999932050705
    2. ',' → logprob: -3.6566500663757324
    3. '):
' → logprob: -5.281650066375732
    4. ')' → logprob: -8.656649589538574
    5. ' ):' → logprob: -10.406649589538574
    6. '):
' → logprob: -11.281649589538574
    7. ')):' → logprob: -11.906649589538574
    8. ',v' → logprob: -12.031649589538574
    9. '):

' → logprob: -12.156649589538574
    10. '   ' → logprob: -13.031649589538574

Token 393: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016594013199210167
    2. ' while' → logprob: -4.766593933105469
    3. ' if' → logprob: -4.891593933105469
    4. 'while' → logprob: -8.141593933105469
    5. '	while' → logprob: -9.641593933105469
    6. 'if' → logprob: -10.391593933105469
    7. '	if' → logprob: -10.891593933105469
    8. ',' → logprob: -11.391593933105469
    9. '    ' → logprob: -11.641593933105469
    10. '    
' → logprob: -12.891593933105469

Token 394: ' c' (ID: 274)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10154063254594803
    2. 'if' → logprob: -2.4765405654907227
    3. 'c' (adapté à ' c') → logprob: -4.726540565490723
    4. ' while' → logprob: -6.101540565490723
    5. '   ' → logprob: -7.226540565490723
    6. ' if' → logprob: -7.851540565490723
    7. 'cost' → logprob: -8.226540565490723
    8. 'dist' → logprob: -11.601540565490723
    9. 'v' → logprob: -11.726540565490723
    10. ' c' → logprob: -12.476540565490723

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010466162115335464
    2. ',v' → logprob: -4.6354660987854
    3. 'urrent' → logprob: -7.7604660987854
    4. 'v' → logprob: -9.010466575622559
    5. ' ,' → logprob: -9.635466575622559
    6. 'ost' → logprob: -10.385466575622559
    7. 'ur' → logprob: -11.010466575622559
    8. 't' → logprob: -11.635466575622559
    9. ',c' → logprob: -11.635466575622559
    10. ',current' → logprob: -12.510466575622559

Token 396: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.016097133979201317
    2. ' v' → logprob: -4.141097068786621
    3. 'u' → logprob: -9.766097068786621
    4. ' u' → logprob: -13.016097068786621
    5. '```' → logprob: -13.391097068786621
    6. ' ' → logprob: -14.391097068786621
    7. '   ' → logprob: -14.516097068786621
    8. '	v' → logprob: -15.141097068786621
    9. 's' → logprob: -15.891097068786621
    10. '  ' → logprob: -16.266098022460938

Token 397: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750604182481766
    2. ' =' → logprob: -3.5297505855560303
    3. '   ' → logprob: -16.77975082397461
    4. '=
' → logprob: -17.15475082397461
    5. '=h' → logprob: -17.90475082397461
    6. ',' → logprob: -18.15475082397461
    7. ')' → logprob: -18.27975082397461
    8. ' ' → logprob: -18.27975082397461
    9. 'he' → logprob: -18.90475082397461
    10. '＝' → logprob: -19.65475082397461

Token 398: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.023245595395565033
    2. ' he' → logprob: -3.7732455730438232
    3. 'heap' → logprob: -16.398244857788086
    4. 'h' → logprob: -18.523244857788086
    5. '   ' → logprob: -19.773244857788086
    6. ' heap' → logprob: -20.523244857788086
    7. '_he' → logprob: -21.023244857788086
    8. '.he' → logprob: -21.273244857788086
    9. 'heme' → logprob: -21.273244857788086
    10. ' ' → logprob: -22.023244857788086

Token 399: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.463036435074173e-05
    2. 'ap' → logprob: -10.625024795532227
    3. 'a' → logprob: -16.125024795532227
    4. ' app' → logprob: -16.250024795532227
    5. '```' → logprob: -17.375024795532227
    6. 'ап' → logprob: -17.500024795532227
    7. '	app' → logprob: -18.000024795532227
    8. 'pp' → logprob: -18.250024795532227
    9. '
' → logprob: -18.500024795532227
    10. '[' → logprob: -18.625024795532227

Token 400: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -2.7491250875755213e-05
    2. 'pop' → logprob: -10.875027656555176
    3. 'p' → logprob: -11.875027656555176
    4. 'ush' → logprob: -14.000027656555176
    5. 'app' → logprob: -15.500027656555176
    6. 'o' → logprob: -15.875027656555176
    7. 'ap' → logprob: -16.12502670288086
    8. 'pp' → logprob: -16.62502670288086
    9. 'q' → logprob: -17.00002670288086
    10. ' op' → logprob: -17.37502670288086

Token 401: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.25
    3. ',h' → logprob: -17.375
    4. 'h' → logprob: -18.5
    5. ' (' → logprob: -20.125
    6. '(
' → logprob: -21.25
    7. '	h' → logprob: -21.25
    8. '```' → logprob: -21.625
    9. ',' → logprob: -22.125
    10. '[h' → logprob: -22.625

Token 402: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015029559144750237
    2. ')
' → logprob: -6.501502990722656
    3. ')
' → logprob: -14.501502990722656
    4. ' )' → logprob: -16.001502990722656
    5. '   ' → logprob: -16.876502990722656
    6. ')

' → logprob: -17.251502990722656
    7. ')v' → logprob: -19.376502990722656
    8. ')`' → logprob: -19.501502990722656
    9. '),' → logprob: -19.626502990722656
    10. ')#' → logprob: -20.001502990722656

Token 403: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01916649006307125
    2. 'if' → logprob: -4.019166469573975
    3. ' if' → logprob: -6.894166469573975
    4. 'while' → logprob: -13.644166946411133
    5. '	if' → logprob: -14.394166946411133
    6. ' ' → logprob: -15.769166946411133
    7. '    
' → logprob: -15.894166946411133
    8. '  ' → logprob: -15.894166946411133
    9. '       ' → logprob: -16.394166946411133
    10. '
' → logprob: -16.644166946411133

Token 404: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0006040262524038553
    2. '   ' → logprob: -7.750604152679443
    3. ' if' → logprob: -8.875603675842285
    4. 'return' → logprob: -10.375603675842285
    5. 'while' → logprob: -13.125603675842285
    6. '
' → logprob: -16.0006046295166
    7. 'for' → logprob: -16.3756046295166
    8. '```' → logprob: -16.6256046295166
    9. '	if' → logprob: -17.0006046295166
    10. ' ' → logprob: -17.5006046295166

Token 405: ' should' (ID: 1757)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'should' → logprob: -0.0008382192463614047
    2. ' should' → logprob: -7.500838279724121
    3. 'not' → logprob: -8.250838279724121
    4. ' not' → logprob: -11.875838279724121
    5. 'd' → logprob: -12.000838279724121
    6. '   ' → logprob: -12.000838279724121
    7. 'c' → logprob: -12.500838279724121
    8. ' d' → logprob: -15.375838279724121
    9. ' c' → logprob: -15.375838279724121
    10. '_should' → logprob: -15.500838279724121

Token 406: '_continue' (ID: 188911)
  Prédit: '_continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_continue' → logprob: -2.1008713702030946e-06
    2. 'continue' → logprob: -13.250001907348633
    3. '_cont' → logprob: -16.125001907348633
    4. 'Continue' → logprob: -16.250001907348633
    5. ' continue' → logprob: -18.125001907348633
    6. 'not' → logprob: -18.250001907348633
    7. ' Continue' → logprob: -18.500001907348633
    8. '_not' → logprob: -19.875001907348633
    9. '_' → logprob: -19.875001907348633
    10. '_return' → logprob: -20.375001907348633

Token 407: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -6.392202976712724e-06
    2. '(' → logprob: -12.000006675720215
    3. ' (' → logprob: -15.875006675720215
    4. ')' → logprob: -18.8750057220459
    5. '   ' → logprob: -19.6250057220459
    6. '(
' → logprob: -19.6250057220459
    7. ',' → logprob: -20.3750057220459
    8. 'd' → logprob: -20.6250057220459
    9. '```' → logprob: -20.7500057220459
    10. ' ' → logprob: -20.8750057220459

Token 408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030388421146199107
    2. ',v' → logprob: -8.125304222106934
    3. ' ,' → logprob: -12.125304222106934
    4. 'v' → logprob: -13.500304222106934
    5. ',
' → logprob: -14.250304222106934
    6. '[v' → logprob: -15.500304222106934
    7. ')' → logprob: -16.750303268432617
    8. '(v' → logprob: -17.500303268432617
    9. ' v' → logprob: -17.500303268432617
    10. '[' → logprob: -17.500303268432617

Token 409: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00020449401927180588
    2. ' v' → logprob: -8.500204086303711
    3. '	v' → logprob: -14.125204086303711
    4. '   ' → logprob: -15.625204086303711
    5. ')v' → logprob: -17.37520408630371
    6. 'c' → logprob: -17.75020408630371
    7. '
' → logprob: -17.87520408630371
    8. '[v' → logprob: -18.25020408630371
    9. '    ' → logprob: -18.37520408630371
    10. '  ' → logprob: -19.50020408630371

Token 410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011677479778882116
    2. ',c' → logprob: -9.375116348266602
    3. ' ,' → logprob: -10.375116348266602
    4. ',
' → logprob: -14.500116348266602
    5. 'c' → logprob: -15.750116348266602
    6. ',

' → logprob: -19.1251163482666
    7. ',v' → logprob: -19.8751163482666
    8. ' ,
' → logprob: -20.6251163482666
    9. ' c' → logprob: -20.6251163482666
    10. ')' → logprob: -20.7501163482666

Token 411: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002476135268807411
    2. ' c' → logprob: -6.002476215362549
    3. '	c' → logprob: -15.37747573852539
    4. '   ' → logprob: -15.50247573852539
    5. ' ' → logprob: -17.25247573852539
    6. '
' → logprob: -19.25247573852539
    7. ')c' → logprob: -19.37747573852539
    8. '    ' → logprob: -19.62747573852539
    9. '  ' → logprob: -19.62747573852539
    10. ' ' → logprob: -20.50247573852539

Token 412: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07925305515527725
    2. '):
' → logprob: -2.5792529582977295
    3. ')' → logprob: -8.079253196716309
    4. ' ):' → logprob: -10.454253196716309
    5. ')==' → logprob: -11.954253196716309
    6. '   ' → logprob: -11.954253196716309
    7. ':' → logprob: -12.579253196716309
    8. '):
' → logprob: -12.579253196716309
    9. ' ):
' → logprob: -13.329253196716309
    10. ' ' → logprob: -13.579253196716309

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019305046589579433
    2. '   ' → logprob: -8.875192642211914
    3. ' return' → logprob: -10.500192642211914
    4. 'return' → logprob: -10.750192642211914
    5. '           ' → logprob: -13.000192642211914
    6. '	' → logprob: -14.375192642211914
    7. '	return' → logprob: -14.500192642211914
    8. '```' → logprob: -14.750192642211914
    9. '     ' → logprob: -16.000192642211914
    10. '	   ' → logprob: -16.125192642211914

Token 414: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5985905528068542
    2. '       ' → logprob: -0.8485905528068542
    3. '   ' → logprob: -3.848590612411499
    4. ' return' → logprob: -6.84859037399292
    5. '           ' → logprob: -10.973590850830078
    6. '	return' → logprob: -11.848590850830078
    7. ' ' → logprob: -14.348590850830078
    8. '     ' → logprob: -15.598590850830078
    9. '
' → logprob: -15.973590850830078
    10. '	' → logprob: -16.223590850830078

Token 415: '
' (ID: 198)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.6098983287811279
    2. '
' → logprob: -1.234898328781128
    3. 'False' → logprob: -1.859898328781128
    4. 'True' → logprob: -4.859898567199707
    5. ' None' → logprob: -6.484898567199707
    6. ' False' → logprob: -8.109898567199707
    7. '   ' → logprob: -8.234898567199707
    8. '    
' → logprob: -9.859898567199707
    9. ' True' → logprob: -10.109898567199707
    10. '

' → logprob: -10.109898567199707

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015669701679144055
    2. 'for' → logprob: -9.37515640258789
    3. 'return' → logprob: -11.25015640258789
    4. 'None' → logprob: -11.37515640258789
    5. ' for' → logprob: -11.62515640258789
    6. 'd' → logprob: -11.87515640258789
    7. '
' → logprob: -12.00015640258789
    8. '    
' → logprob: -12.12515640258789
    9. 'False' → logprob: -12.12515640258789
    10. ' None' → logprob: -12.62515640258789

Token 417: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01122276671230793
    2. '   ' → logprob: -4.636222839355469
    3. ' for' → logprob: -6.761222839355469
    4. 'return' → logprob: -8.136222839355469
    5. 'result' → logprob: -12.761222839355469
    6. 'neighbors' → logprob: -13.136222839355469
    7. 'results' → logprob: -13.511222839355469
    8. 'res' → logprob: -13.511222839355469
    9. '    
' → logprob: -13.886222839355469
    10. '```' → logprob: -14.011222839355469

Token 418: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.002417157171294093
    2. 'to' → logprob: -7.002417087554932
    3. ' t' → logprob: -7.377417087554932
    4. '(t' → logprob: -7.752417087554932
    5. 'u' → logprob: -8.00241756439209
    6. '(u' → logprob: -9.62741756439209
    7. 'w' → logprob: -11.25241756439209
    8. '(' → logprob: -11.87741756439209
    9. '   ' → logprob: -12.12741756439209
    10. '(to' → logprob: -12.50241756439209

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8550976164988242e-05
    2. ' in' → logprob: -11.875018119812012
    3. ' ,' → logprob: -12.125018119812012
    4. ',w' → logprob: -13.000018119812012
    5. ',v' → logprob: -13.750018119812012
    6. ',c' → logprob: -13.750018119812012
    7. 't' → logprob: -14.250018119812012
    8. ',t' → logprob: -14.500018119812012
    9. ',d' → logprob: -16.375019073486328
    10. '```' → logprob: -16.875019073486328

Token 420: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.02958710305392742
    2. 'w' → logprob: -3.9045870304107666
    3. ' cost' → logprob: -4.779587268829346
    4. 'weight' → logprob: -8.279586791992188
    5. ' w' → logprob: -8.404586791992188
    6. 'c' → logprob: -10.029586791992188
    7. 'wt' → logprob: -10.279586791992188
    8. '_cost' → logprob: -10.904586791992188
    9. '```' → logprob: -11.779586791992188
    10. 'graph' → logprob: -11.904586791992188

Token 421: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014183600433170795
    2. 'in' → logprob: -4.264183521270752
    3. ',' → logprob: -11.26418399810791
    4. '	in' → logprob: -12.51418399810791
    5. '    ' → logprob: -13.63918399810791
    6. '   ' → logprob: -13.88918399810791
    7. ' ,' → logprob: -14.51418399810791
    8. ' ' → logprob: -14.76418399810791
    9. ',in' → logprob: -16.139183044433594
    10. '  ' → logprob: -16.389183044433594

Token 422: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.000912774819880724
    2. ' graph' → logprob: -7.000912666320801
    3. '	graph' → logprob: -13.7509126663208
    4. '(graph' → logprob: -15.1259126663208
    5. '   ' → logprob: -19.250913619995117
    6. 'item' → logprob: -20.000913619995117
    7. ' ' → logprob: -20.375913619995117
    8. 'graphs' → logprob: -20.500913619995117
    9. '_graph' → logprob: -20.625913619995117
    10. '.graph' → logprob: -21.250913619995117

Token 423: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.935296834039036e-06
    2. '[c' → logprob: -13.12500286102295
    3. 'v' → logprob: -14.00000286102295
    4. '[' → logprob: -17.625003814697266
    5. '[V' → logprob: -19.125003814697266
    6. '[u' → logprob: -20.125003814697266
    7. ':v' → logprob: -20.375003814697266
    8. '[d' → logprob: -20.625003814697266
    9. '   ' → logprob: -20.625003814697266
    10. '(v' → logprob: -20.625003814697266

Token 424: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4312939941883087
    2. ']:' → logprob: -1.0562939643859863
    3. ':' → logprob: -6.056293964385986
    4. '):
' → logprob: -9.556294441223145
    5. '}:' → logprob: -10.181294441223145
    6. '   ' → logprob: -10.556294441223145
    7. ']):' → logprob: -10.806294441223145
    8. ' ):' → logprob: -11.056294441223145
    9. ']:
' → logprob: -11.056294441223145
    10. '():' → logprob: -11.056294441223145

Token 425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018499856814742088
    2. 'process' → logprob: -6.501850128173828
    3. ' process' → logprob: -8.001850128173828
    4. '	process' → logprob: -11.751850128173828
    5. '   ' → logprob: -13.876850128173828
    6. '(process' → logprob: -14.126850128173828
    7. '
' → logprob: -14.501850128173828
    8. '           ' → logprob: -14.626850128173828
    9. '	' → logprob: -14.626850128173828
    10. '    ' → logprob: -15.126850128173828

Token 426: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.055070944130420685
    2. ' process' → logprob: -3.0550708770751953
    3. '       ' → logprob: -5.055070877075195
    4. '   ' → logprob: -9.430070877075195
    5. '           ' → logprob: -12.680070877075195
    6. '	process' → logprob: -13.305070877075195
    7. '
' → logprob: -15.430070877075195
    8. 'proces' → logprob: -15.805070877075195
    9. ' proces' → logprob: -16.430070877075195
    10. '.process' → logprob: -17.305070877075195

Token 427: '_neighbor' (ID: 177120)
  Prédit: '_neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.01105442550033331
    2. 'neighbor' → logprob: -4.511054515838623
    3. '_vertex' → logprob: -13.261054039001465
    4. '
' → logprob: -13.386054039001465
    5. '```' → logprob: -13.386054039001465
    6. '_neighbors' → logprob: -14.511054039001465
    7. ' neighbor' → logprob: -14.761054039001465
    8. 'Neighbor' → logprob: -14.886054039001465
    9. '_' → logprob: -15.386054039001465
    10. '_ne' → logprob: -16.51105499267578

Token 428: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.700132997939363e-05
    2. '(' → logprob: -11.000017166137695
    3. '(
' → logprob: -15.750017166137695
    4. 'd' → logprob: -16.625017166137695
    5. ' (' → logprob: -17.250017166137695
    6. '```' → logprob: -19.500017166137695
    7. '	d' → logprob: -21.125017166137695
    8. '(de' → logprob: -21.125017166137695
    9. '
' → logprob: -21.375017166137695
    10. ' d' → logprob: -21.500017166137695

Token 429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003673352301120758
    2. ',v' → logprob: -5.878673553466797
    3. ' ,' → logprob: -7.128673553466797
    4. ',d' → logprob: -10.628673553466797
    5. '[v' → logprob: -10.878673553466797
    6. '(v' → logprob: -12.003673553466797
    7. ',h' → logprob: -12.003673553466797
    8. '   ' → logprob: -12.378673553466797
    9. ',
' → logprob: -13.253673553466797
    10. ',t' → logprob: -13.628673553466797

Token 430: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0009132515988312662
    2. ' v' → logprob: -7.000913143157959
    3. 't' → logprob: -13.375913619995117
    4. '	v' → logprob: -16.500913619995117
    5. '   ' → logprob: -17.125913619995117
    6. ')v' → logprob: -17.250913619995117
    7. ' t' → logprob: -17.500913619995117
    8. ' ' → logprob: -17.500913619995117
    9. '
' → logprob: -18.125913619995117
    10. '[v' → logprob: -18.375913619995117

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012284684635233134
    2. ',t' → logprob: -9.375123023986816
    3. ' ,' → logprob: -10.375123023986816
    4. 't' → logprob: -12.000123023986816
    5. ',
' → logprob: -14.875123023986816
    6. '```' → logprob: -15.875123023986816
    7. '   ' → logprob: -16.6251220703125
    8. ' t' → logprob: -17.1251220703125
    9. '[' → logprob: -17.3751220703125
    10. '[t' → logprob: -18.1251220703125

Token 432: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.001170225441455841
    2. ' t' → logprob: -6.7511701583862305
    3. '`t' → logprob: -18.876171112060547
    4. '	t' → logprob: -19.626171112060547
    5. '   ' → logprob: -20.251171112060547
    6. '
' → logprob: -22.751171112060547
    7. ')t' → logprob: -23.251171112060547
    8. ' ' → logprob: -23.376171112060547
    9. '[t' → logprob: -23.626171112060547
    10. ' т' → logprob: -23.751171112060547

Token 433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0445127372804563e-05
    2. ' ,' → logprob: -11.50001049041748
    3. 'cost' → logprob: -15.75001049041748
    4. ',c' → logprob: -15.87501049041748
    5. ' cost' → logprob: -17.625009536743164
    6. '```' → logprob: -18.500009536743164
    7. ',
' → logprob: -18.625009536743164
    8. '   ' → logprob: -19.500009536743164
    9. '       ' → logprob: -19.625009536743164
    10. ')' → logprob: -20.000009536743164

Token 434: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.07888978719711304
    2. ' cost' → logprob: -2.578889846801758
    3. '(cost' → logprob: -17.953889846801758
    4. '   ' → logprob: -19.828889846801758
    5. 'Cost' → logprob: -20.703889846801758
    6. '_cost' → logprob: -20.828889846801758
    7. ' ' → logprob: -20.953889846801758
    8. 'c' → logprob: -20.953889846801758
    9. ' kost' → logprob: -20.953889846801758
    10. '    ' → logprob: -21.203889846801758

Token 435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.3213025744771585e-05
    2. ',h' → logprob: -10.625033378601074
    3. ' ,' → logprob: -11.750033378601074
    4. ')' → logprob: -14.375033378601074
    5. '   ' → logprob: -15.000033378601074
    6. '       ' → logprob: -18.125032424926758
    7. '```' → logprob: -18.750032424926758
    8. ' h' → logprob: -19.000032424926758
    9. 'h' → logprob: -19.375032424926758
    10. '  ' → logprob: -20.250032424926758

Token 436: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0004307884373702109
    2. ' h' → logprob: -7.750430583953857
    3. '	h' → logprob: -16.250431060791016
    4. ')' → logprob: -19.250431060791016
    5. '_h' → logprob: -19.750431060791016
    6. '
' → logprob: -20.500431060791016
    7. ',h' → logprob: -20.625431060791016
    8. '[h' → logprob: -20.625431060791016
    9. '<h' → logprob: -20.875431060791016
    10. '   ' → logprob: -21.250431060791016

Token 437: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.702754474943504e-05
    2. ')
' → logprob: -10.25003719329834
    3. '   ' → logprob: -14.75003719329834
    4. ' )' → logprob: -14.75003719329834
    5. ')return' → logprob: -14.87503719329834
    6. ')

' → logprob: -15.50003719329834
    7. ')#' → logprob: -17.125036239624023
    8. '<|end|>' → logprob: -17.875036239624023
    9. '       ' → logprob: -18.125036239624023
    10. '())' → logprob: -18.250036239624023

Token 438: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001017551330733113
    2. '<|end|>' → logprob: -9.375102043151855
    3. '```' → logprob: -11.750102043151855
    4. '#' → logprob: -12.250102043151855
    5. 'return' → logprob: -13.625102043151855
    6. ')' → logprob: -13.750102043151855
    7. '...' → logprob: -15.000102043151855
    8. '<|end|>' → logprob: -15.125102043151855
    9. '
' → logprob: -15.250102043151855
    10. '[' → logprob: -15.375102043151855

Token 439: ' run' (ID: 2461)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6871399283409119
    2. 'main' → logprob: -1.3121399879455566
    3. 'def' → logprob: -1.5621399879455566
    4. 'solve' → logprob: -4.187139987945557
    5. 'short' → logprob: -6.687139987945557
    6. ' d' → logprob: -7.187139987945557
    7. ' main' → logprob: -7.687139987945557
    8. 'run' → logprob: -9.437139511108398
    9. ' def' → logprob: -9.937139511108398
    10. ' solve' → logprob: -10.187139511108398

Token 440: '_heap' (ID: 88741)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.009304909966886044
    2. '(' → logprob: -5.134305000305176
    3. '_' → logprob: -6.759305000305176
    4. '_short' → logprob: -7.384305000305176
    5. '()' → logprob: -8.134305000305176
    6. 'd' → logprob: -8.134305000305176
    7. '_algorithm' → logprob: -8.384305000305176
    8. 'D' → logprob: -8.634305000305176
    9. '_(' → logprob: -9.384305000305176
    10. '_D' → logprob: -9.884305000305176

Token 441: '(h' (ID: 8120)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2437470257282257
    2. 'q' → logprob: -2.6187469959259033
    3. '()' → logprob: -2.8687469959259033
    4. '():
' → logprob: -2.9937469959259033
    5. '(graph' → logprob: -4.493747234344482
    6. '(n' → logprob: -4.868747234344482
    7. '(d' → logprob: -5.243747234344482
    8. '(q' → logprob: -5.368747234344482
    9. '(s' → logprob: -6.243747234344482
    10. '(heap' → logprob: -6.868747234344482

Token 442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.580929347255733e-05
    2. ',d' → logprob: -11.250016212463379
    3. '):' → logprob: -13.250016212463379
    4. ' ,' → logprob: -14.750016212463379
    5. ')' → logprob: -14.750016212463379
    6. ',h' → logprob: -16.000015258789062
    7. 'd' → logprob: -16.875015258789062
    8. '),' → logprob: -17.250015258789062
    9. ',
' → logprob: -17.625015258789062
    10. '):
' → logprob: -17.875015258789062

Token 443: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.023261668160557747
    2. ' d' → logprob: -3.773261785507202
    3. 'graph' → logprob: -11.398262023925781
    4. ' graph' → logprob: -13.148262023925781
    5. ')' → logprob: -13.273262023925781
    6. '```' → logprob: -15.148262023925781
    7. '	d' → logprob: -15.273262023925781
    8. '
' → logprob: -16.02326202392578
    9. ' ' → logprob: -16.02326202392578
    10. 'h' → logprob: -16.08576202392578

Token 444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ' ,' → logprob: -13.625001907348633
    3. ',
' → logprob: -14.625001907348633
    4. '):
' → logprob: -15.375001907348633
    5. 'graph' → logprob: -16.375001907348633
    6. '(graph' → logprob: -16.500001907348633
    7. ',g' → logprob: -17.000001907348633
    8. '):' → logprob: -17.250001907348633
    9. '),' → logprob: -17.625001907348633
    10. ' graph' → logprob: -17.750001907348633

Token 445: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.018151817843317986
    2. ' graph' → logprob: -4.018151760101318
    3. '	graph' → logprob: -13.518152236938477
    4. 'g' → logprob: -14.643152236938477
    5. '(graph' → logprob: -17.393152236938477
    6. ' ' → logprob: -18.018152236938477
    7. '   ' → logprob: -18.143152236938477
    8. 'n' → logprob: -18.643152236938477
    9. '
' → logprob: -18.768152236938477
    10. '```' → logprob: -19.393152236938477

Token 446: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20146410167217255
    2. '):
' → logprob: -1.701464056968689
    3. ',' → logprob: -10.57646369934082
    4. '):
' → logprob: -11.07646369934082
    5. ')' → logprob: -11.95146369934082
    6. '   ' → logprob: -13.07646369934082
    7. ' ):' → logprob: -14.32646369934082
    8. '):

' → logprob: -14.95146369934082
    9. ':' → logprob: -15.45146369934082
    10. ' ):
' → logprob: -15.82646369934082

Token 447: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10157295316457748
    2. '   ' → logprob: -2.3515729904174805
    3. ' while' → logprob: -6.6015729904174805
    4. '	while' → logprob: -11.85157299041748
    5. '```' → logprob: -16.601572036743164
    6. 'While' → logprob: -18.476572036743164
    7. '   ' → logprob: -19.226572036743164
    8. '    
' → logprob: -19.476572036743164
    9. '  ' → logprob: -20.101572036743164
    10. ' ' → logprob: -20.101572036743164

Token 448: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00022022522171027958
    2. '   ' → logprob: -8.50022029876709
    3. ' while' → logprob: -11.00022029876709
    4. '	while' → logprob: -17.000219345092773
    5. '```' → logprob: -20.250219345092773
    6. '
' → logprob: -20.375219345092773
    7. 'While' → logprob: -20.625219345092773
    8. '  ' → logprob: -20.875219345092773
    9. '    
' → logprob: -21.500219345092773
    10. 'wh' → logprob: -23.500219345092773

Token 449: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0002656271681189537
    2. ' h' → logprob: -8.250266075134277
    3. 'len' → logprob: -12.375266075134277
    4. ' len' → logprob: -16.12526512145996
    5. '	h' → logprob: -16.75026512145996
    6. '(h' → logprob: -17.75026512145996
    7. '   ' → logprob: -19.25026512145996
    8. '[h' → logprob: -19.50026512145996
    9. '(len' → logprob: -21.12526512145996
    10. ' ' → logprob: -21.12526512145996

Token 450: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010312681086361408
    2. ':
' → logprob: -4.635312557220459
    3. ' and' → logprob: -7.885312557220459
    4. 'and' → logprob: -9.010313034057617
    5. '):' → logprob: -10.635313034057617
    6. '):
' → logprob: -11.135313034057617
    7. '[' → logprob: -12.260313034057617
    8. '>:' → logprob: -12.510313034057617
    9. '>' → logprob: -12.760313034057617
    10. ')' → logprob: -13.135313034057617

Token 451: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013700325973331928
    2. ':
' → logprob: -4.513700485229492
    3. '   ' → logprob: -7.013700485229492
    4. ':' → logprob: -7.013700485229492
    5. ' process' → logprob: -7.388700485229492
    6. 'process' → logprob: -9.263700485229492
    7. ',' → logprob: -9.763700485229492
    8. ' and' → logprob: -10.513700485229492
    9. '):
' → logprob: -11.388700485229492
    10. ' :
' → logprob: -11.763700485229492

Token 452: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.014176673255860806
    2. ' process' → logprob: -4.264176845550537
    3. '   ' → logprob: -11.639176368713379
    4. 'c' → logprob: -12.389176368713379
    5. ' c' → logprob: -16.139177322387695
    6. '	process' → logprob: -17.139177322387695
    7. 'proces' → logprob: -17.264177322387695
    8. '_process' → logprob: -18.014177322387695
    9. '       ' → logprob: -18.389177322387695
    10. '(process' → logprob: -18.514177322387695

Token 453: '_vertex' (ID: 65291)
  Prédit: '_vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertex' → logprob: -3.128163257315464e-07
    2. 'vertex' → logprob: -15.75
    3. '_vertices' → logprob: -17.625
    4. '_VERTEX' → logprob: -18.0
    5. '_heap' → logprob: -18.25
    6. '
' → logprob: -18.375
    7. '_' → logprob: -18.5
    8. 'Vertex' → logprob: -18.875
    9. '<Vertex' → logprob: -19.125
    10. '```' → logprob: -19.5

Token 454: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.125005722045898
    3. ' (' → logprob: -17.0000057220459
    4. '(
' → logprob: -20.3750057220459
    5. 'h' → logprob: -21.5000057220459
    6. '   ' → logprob: -22.2500057220459
    7. '```' → logprob: -22.2500057220459
    8. '	h' → logprob: -22.8750057220459
    9. '(heap' → logprob: -23.3750057220459
    10. ',h' → logprob: -23.5000057220459

Token 455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0206720617134124e-05
    2. ',h' → logprob: -12.37501049041748
    3. ' ,' → logprob: -12.50001049041748
    4. ',d' → logprob: -13.12501049041748
    5. ')' → logprob: -15.62501049041748
    6. ',
' → logprob: -17.750009536743164
    7. '   ' → logprob: -18.250009536743164
    8. 'h' → logprob: -18.750009536743164
    9. '(' → logprob: -19.375009536743164
    10. ' ' → logprob: -19.500009536743164

Token 456: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00023071514442563057
    2. ' d' → logprob: -8.37523078918457
    3. '
' → logprob: -17.62523078918457
    4. '	d' → logprob: -17.62523078918457
    5. ')d' → logprob: -17.87523078918457
    6. '   ' → logprob: -18.25023078918457
    7. ')' → logprob: -19.50023078918457
    8. '```' → logprob: -19.75023078918457
    9. '_d' → logprob: -20.25023078918457
    10. '
' → logprob: -20.37523078918457

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.319370302458992e-06
    2. ' ,' → logprob: -12.250005722045898
    3. ')' → logprob: -15.375005722045898
    4. 'graph' → logprob: -16.1250057220459
    5. ',
' → logprob: -16.5000057220459
    6. '(graph' → logprob: -17.0000057220459
    7. ' graph' → logprob: -17.6250057220459
    8. '),' → logprob: -18.0000057220459
    9. '[' → logprob: -18.3750057220459
    10. ',g' → logprob: -19.6250057220459

Token 458: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.00015872348740231246
    2. ' graph' → logprob: -8.750158309936523
    3. '	graph' → logprob: -15.875158309936523
    4. 'd' → logprob: -16.000158309936523
    5. '(graph' → logprob: -18.250158309936523
    6. ' d' → logprob: -21.000158309936523
    7. ' ' → logprob: -21.625158309936523
    8. 'graphs' → logprob: -21.750158309936523
    9. 'g' → logprob: -21.875158309936523
    10. '```' → logprob: -22.000158309936523

Token 459: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ')
' → logprob: -12.750003814697266
    3. ')

' → logprob: -15.625003814697266
    4. '<|end|>' → logprob: -15.625003814697266
    5. '())' → logprob: -16.000003814697266
    6. ')return' → logprob: -16.125003814697266
    7. ' )' → logprob: -17.250003814697266
    8. '   ' → logprob: -17.500003814697266
    9. '))' → logprob: -18.125003814697266
    10. ',' → logprob: -18.375003814697266

Token 460: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014606256037950516
    2. 'if' → logprob: -4.514606475830078
    3. 'n' → logprob: -6.889606475830078
    4. '<|end|>' → logprob: -6.889606475830078
    5. '```' → logprob: -6.889606475830078
    6. '#' → logprob: -7.889606475830078
    7. 'return' → logprob: -10.139606475830078
    8. 's' → logprob: -10.514606475830078
    9. 'v' → logprob: -11.139606475830078
    10. ' if' → logprob: -12.264606475830078

Token 461: ' d' (ID: 272)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3557264804840088
    2. ' main' → logprob: -1.2307264804840088
    3. 'def' → logprob: -5.35572624206543
    4. 'solve' → logprob: -6.35572624206543
    5. ' solve' → logprob: -7.73072624206543
    6. ' def' → logprob: -8.60572624206543
    7. 'get' → logprob: -9.73072624206543
    8. ' get' → logprob: -10.73072624206543
    9. 'd' → logprob: -11.10572624206543
    10. 'process' → logprob: -11.23072624206543

Token 462: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0023218912538141012
    2. 'ijk' → logprob: -6.127321720123291
    3. 'ij' → logprob: -9.25232219696045
    4. 'jik' → logprob: -10.25232219696045
    5. 'ijs' → logprob: -13.25232219696045
    6. 'i' → logprob: -13.62732219696045
    7. 'jk' → logprob: -14.50232219696045
    8. 'ijks' → logprob: -14.50232219696045
    9. 'ijkl' → logprob: -14.62732219696045
    10. 'j' → logprob: -15.25232219696045

Token 463: '(s' (ID: 1858)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3436413109302521
    2. '(graph' → logprob: -1.5936412811279297
    3. '(' → logprob: -3.0936412811279297
    4. '(s' → logprob: -3.2186412811279297
    5. '():' → logprob: -6.46864128112793
    6. '(Graph' → logprob: -8.84364128112793
    7. '(g' → logprob: -9.21864128112793
    8. '(nodes' → logprob: -9.46864128112793
    9. '(:' → logprob: -9.71864128112793
    10. '(node' → logprob: -9.71864128112793

Token 464: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003049570368602872
    2. ',n' → logprob: -8.12530517578125
    3. '):' → logprob: -12.00030517578125
    4. ' ,' → logprob: -13.62530517578125
    5. ',s' → logprob: -14.50030517578125
    6. 'n' → logprob: -15.00030517578125
    7. '(n' → logprob: -15.12530517578125
    8. ',
' → logprob: -16.00030517578125
    9. ',d' → logprob: -17.25030517578125
    10. '_,' → logprob: -17.37530517578125

Token 465: ' graph' (ID: 7465)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26494938135147095
    2. ' n' → logprob: -1.6399493217468262
    3. 'graph' → logprob: -3.639949321746826
    4. ' graph' → logprob: -4.389949321746826
    5. '   ' → logprob: -9.764949798583984
    6. '```' → logprob: -11.389949798583984
    7. 'g' → logprob: -11.889949798583984
    8. ')' → logprob: -12.139949798583984
    9. '	n' → logprob: -12.139949798583984
    10. '	graph' → logprob: -12.139949798583984

Token 466: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00048191213863901794
    2. ',' → logprob: -8.375481605529785
    3. '):
' → logprob: -8.500481605529785
    4. ')' → logprob: -10.250481605529785
    5. ' ):' → logprob: -11.375481605529785
    6. '):
' → logprob: -14.750481605529785
    7. ',n' → logprob: -15.125481605529785
    8. '):

' → logprob: -15.750481605529785
    9. '   ' → logprob: -16.5004825592041
    10. ':' → logprob: -16.5004825592041

Token 467: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012575460597872734
    2. ' n' → logprob: -4.387575626373291
    3. 'd' → logprob: -9.887575149536133
    4. '   ' → logprob: -12.262575149536133
    5. ')' → logprob: -12.887575149536133
    6. '):
' → logprob: -13.262575149536133
    7. 'dist' → logprob: -13.512575149536133
    8. ' d' → logprob: -13.762575149536133
    9. '	n' → logprob: -13.887575149536133
    10. '```' → logprob: -14.387575149536133

Token 468: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019915630109608173
    2. '):
' → logprob: -6.3769917488098145
    3. ',' → logprob: -8.251991271972656
    4. ')' → logprob: -11.126991271972656
    5. ' ):' → logprob: -11.876991271972656
    6. '):
' → logprob: -12.126991271972656
    7. '   ' → logprob: -14.251991271972656
    8. ':' → logprob: -15.251991271972656
    9. '):

' → logprob: -15.376991271972656
    10. 's' → logprob: -15.876991271972656

Token 469: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005575236864387989
    2. 'd' → logprob: -5.255575180053711
    3. ' d' → logprob: -8.005575180053711
    4. '	d' → logprob: -11.880575180053711
    5. '```' → logprob: -15.255575180053711
    6. '   ' → logprob: -15.505575180053711
    7. '    
' → logprob: -16.25557518005371
    8. 'h' → logprob: -16.25557518005371
    9. '  ' → logprob: -16.50557518005371
    10. 'def' → logprob: -16.63057518005371

Token 470: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -7.672236824873835e-05
    2. '   ' → logprob: -9.500076293945312
    3. ' d' → logprob: -13.250076293945312
    4. '	d' → logprob: -17.000076293945312
    5. 'h' → logprob: -17.875076293945312
    6. '```' → logprob: -18.875076293945312
    7. ' ' → logprob: -19.750076293945312
    8. 'dist' → logprob: -20.250076293945312
    9. '  ' → logprob: -20.250076293945312
    10. '
' → logprob: -20.875076293945312

Token 471: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132937550544739
    2. '=' → logprob: -1.313293695449829
    3. ',' → logprob: -10.56329345703125
    4. '   ' → logprob: -12.43829345703125
    5. ' ' → logprob: -13.43829345703125
    6. ' ' → logprob: -15.18829345703125
    7. '=s' → logprob: -15.56329345703125
    8. 'ef' → logprob: -15.56329345703125
    9. '  ' → logprob: -16.68829345703125
    10. 'ist' → logprob: -17.43829345703125

Token 472: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.12701766192913055
    2. ' init' → logprob: -2.1270177364349365
    3. '[' → logprob: -9.502017974853516
    4. ' [' → logprob: -11.752017974853516
    5. '   ' → logprob: -12.627017974853516
    6. '(init' → logprob: -13.377017974853516
    7. '_init' → logprob: -13.877017974853516
    8. '	init' → logprob: -14.877017974853516
    9. 'inite' → logprob: -15.502017974853516
    10. 'ini' → logprob: -15.877017974853516

Token 473: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0001234428636962548
    2. 'dist' → logprob: -9.000123023986816
    3. 'Dist' → logprob: -17.000123977661133
    4. '(dist' → logprob: -17.750123977661133
    5. '_distance' → logprob: -18.125123977661133
    6. ' dist' → logprob: -18.375123977661133
    7. '	dist' → logprob: -18.875123977661133
    8. '_DIST' → logprob: -19.875123977661133
    9. '.dist' → logprob: -20.125123977661133
    10. '```' → logprob: -20.250123977661133

Token 474: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.392824874026701e-05
    2. 'n' → logprob: -10.37503433227539
    3. '(' → logprob: -13.12503433227539
    4. ' n' → logprob: -15.12503433227539
    5. ',n' → logprob: -16.37503433227539
    6. ',' → logprob: -16.37503433227539
    7. '(
' → logprob: -16.75003433227539
    8. ' (' → logprob: -16.75003433227539
    9. '```' → logprob: -17.12503433227539
    10. '[n' → logprob: -17.62503433227539

Token 475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001475220051361248
    2. ',s' → logprob: -8.875147819519043
    3. ' ,' → logprob: -12.500147819519043
    4. 's' → logprob: -12.625147819519043
    5. ' s' → logprob: -15.125147819519043
    6. ',
' → logprob: -15.625147819519043
    7. '   ' → logprob: -17.250146865844727
    8. ')' → logprob: -17.500146865844727
    9. '(s' → logprob: -17.500146865844727
    10. '```' → logprob: -18.500146865844727

Token 476: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00033546582562848926
    2. ' s' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.750335693359375
    4. '	s' → logprob: -19.000335693359375
    5. ')' → logprob: -19.250335693359375
    6. ')s' → logprob: -20.250335693359375
    7. '<|end|>' → logprob: -20.250335693359375
    8. '_s' → logprob: -20.500335693359375
    9. '```' → logprob: -20.500335693359375
    10. '
' → logprob: -21.000335693359375

Token 477: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ')
' → logprob: -12.250004768371582
    3. ' )' → logprob: -15.875004768371582
    4. '   ' → logprob: -16.8750057220459
    5. ')s' → logprob: -17.6250057220459
    6. '),' → logprob: -18.6250057220459
    7. ',' → logprob: -18.7500057220459
    8. ',)' → logprob: -19.0000057220459
    9. ')

' → logprob: -19.2500057220459
    10. ')
' → logprob: -19.7500057220459

Token 478: '   ' (ID: 271)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3134722113609314
    2. '   ' → logprob: -1.3134722709655762
    3. ' h' → logprob: -8.688471794128418
    4. '	h' → logprob: -10.188471794128418
    5. '```' → logprob: -13.188471794128418
    6. '
' → logprob: -13.688471794128418
    7. '   ' → logprob: -14.938471794128418
    8. '    
' → logprob: -15.188471794128418
    9. '  ' → logprob: -15.313471794128418
    10. '       ' → logprob: -16.063472747802734

Token 479: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.625
    3. '    
' → logprob: -18.5
    4. ' h' → logprob: -18.625
    5. 'heap' → logprob: -19.75
    6. '	h' → logprob: -20.125
    7. '```' → logprob: -20.125
    8. '
' → logprob: -20.75
    9. 'hq' → logprob: -23.0
    10. '`' → logprob: -23.25

Token 480: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575939953327179
    2. '=' → logprob: -0.825939953327179
    3. ',' → logprob: -15.950940132141113
    4. '=create' → logprob: -16.325939178466797
    5. 's' → logprob: -16.575939178466797
    6. '=h' → logprob: -16.700939178466797
    7. ' ' → logprob: -17.075939178466797
    8. '=[]' → logprob: -17.325939178466797
    9. '   ' → logprob: -17.450939178466797
    10. 'h' → logprob: -17.950939178466797

Token 481: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0025718524120748043
    2. ' init' → logprob: -6.002572059631348
    3. '[(' → logprob: -9.252572059631348
    4. ' [(' → logprob: -15.752572059631348
    5. '_init' → logprob: -17.00257110595703
    6. '	init' → logprob: -17.37757110595703
    7. '   ' → logprob: -18.12757110595703
    8. '(init' → logprob: -18.75257110595703
    9. '[' → logprob: -19.00257110595703
    10. '[]' → logprob: -19.12757110595703

Token 482: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.00038086410495452583
    2. 'heap' → logprob: -7.875380992889404
    3. '```' → logprob: -15.750380516052246
    4. 'Heap' → logprob: -15.875380516052246
    5. '_heat' → logprob: -16.125381469726562
    6. '(heap' → logprob: -16.125381469726562
    7. 's' → logprob: -16.750381469726562
    8. '_' → logprob: -16.750381469726562
    9. ' heap' → logprob: -17.000381469726562
    10. '_he' → logprob: -17.625381469726562

Token 483: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -7.064297824399546e-05
    2. '(' → logprob: -9.625070571899414
    3. ',' → logprob: -12.875070571899414
    4. 's' → logprob: -13.375070571899414
    5. '(
' → logprob: -15.625070571899414
    6. ' (' → logprob: -15.875070571899414
    7. ')' → logprob: -16.250070571899414
    8. ',s' → logprob: -17.250070571899414
    9. '```' → logprob: -18.000070571899414
    10. '   ' → logprob: -19.125070571899414

Token 484: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.860340752406046e-05
    2. ')
' → logprob: -9.7500581741333
    3. ' )' → logprob: -16.250059127807617
    4. '   ' → logprob: -16.875059127807617
    5. ')

' → logprob: -17.875059127807617
    6. ')
' → logprob: -18.375059127807617
    7. '),' → logprob: -18.625059127807617
    8. ').' → logprob: -19.750059127807617
    9. ')return' → logprob: -19.750059127807617
    10. '))' → logprob: -19.875059127807617

Token 485: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008805541321635246
    2. 'run' → logprob: -4.758805751800537
    3. ' run' → logprob: -8.758805274963379
    4. '	run' → logprob: -11.383805274963379
    5. '
' → logprob: -11.508805274963379
    6. '```' → logprob: -12.508805274963379
    7. '(run' → logprob: -12.633805274963379
    8. '    
' → logprob: -13.133805274963379
    9. '.run' → logprob: -14.133805274963379
    10. '   ' → logprob: -14.258805274963379

Token 486: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' (adapté à ' run') → logprob: -0.002103625563904643
    2. ' run' → logprob: -6.752103805541992
    3. '   ' → logprob: -7.002103805541992
    4. 'while' → logprob: -11.002103805541992
    5. '
' → logprob: -12.502103805541992
    6. '  ' → logprob: -13.877103805541992
    7. '	run' → logprob: -14.377103805541992
    8. '    
' → logprob: -15.002103805541992
    9. ' while' → logprob: -15.377103805541992
    10. '(run' → logprob: -15.627103805541992

Token 487: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.00012570773833431304
    2. 'heap' → logprob: -9.000125885009766
    3. '(heap' → logprob: -14.125125885009766
    4. '_heat' → logprob: -14.625125885009766
    5. '```' → logprob: -15.000125885009766
    6. '_' → logprob: -15.250125885009766
    7. '_stack' → logprob: -16.125125885009766
    8. 'Heap' → logprob: -16.375125885009766
    9. '(h' → logprob: -17.000125885009766
    10. 'h' → logprob: -17.250125885009766

Token 488: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -17.75
    4. '(
' → logprob: -19.625
    5. 'h' → logprob: -19.75
    6. ',h' → logprob: -20.625
    7. '```' → logprob: -20.875
    8. ',' → logprob: -21.25
    9. '[h' → logprob: -21.875
    10. '
' → logprob: -22.375

Token 489: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007292322698049247
    2. ',d' → logprob: -7.250729084014893
    3. ' ,' → logprob: -10.87572956085205
    4. 'd' → logprob: -15.37572956085205
    5. ')' → logprob: -16.125728607177734
    6. ',
' → logprob: -17.750728607177734
    7. ' d' → logprob: -18.500728607177734
    8. '   ' → logprob: -18.875728607177734
    9. ',h' → logprob: -18.875728607177734
    10. '),' → logprob: -19.125728607177734

Token 490: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01814994215965271
    2. ' d' → logprob: -4.0181498527526855
    3. ')d' → logprob: -17.518150329589844
    4. '	d' → logprob: -17.643150329589844
    5. '
' → logprob: -17.768150329589844
    6. '```' → logprob: -19.518150329589844
    7. ')' → logprob: -19.768150329589844
    8. '   ' → logprob: -20.018150329589844
    9. ',d' → logprob: -20.143150329589844
    10. '(d' → logprob: -20.268150329589844

Token 491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.981667537620524e-06
    2. ' ,' → logprob: -13.875001907348633
    3. 'graph' → logprob: -14.125001907348633
    4. '(graph' → logprob: -16.125001907348633
    5. ',
' → logprob: -17.250001907348633
    6. ')' → logprob: -17.500001907348633
    7. ' graph' → logprob: -17.625001907348633
    8. '	graph' → logprob: -18.750001907348633
    9. 'raph' → logprob: -18.875001907348633
    10. '),' → logprob: -19.750001907348633

Token 492: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0019288709154352546
    2. ' graph' → logprob: -6.251928806304932
    3. '	graph' → logprob: -15.37692928314209
    4. '(graph' → logprob: -18.126928329467773
    5. '
' → logprob: -19.251928329467773
    6. 'graphql' → logprob: -20.251928329467773
    7. '   ' → logprob: -20.751928329467773
    8. '_graph' → logprob: -21.126928329467773
    9. 'g' → logprob: -21.251928329467773
    10. 'raph' → logprob: -21.626928329467773

Token 493: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20144237577915192
    2. ')' → logprob: -1.7014423608779907
    3. ',' → logprob: -11.07644271850586
    4. ')
' → logprob: -11.70144271850586
    5. ')

' → logprob: -12.57644271850586
    6. '   ' → logprob: -13.82644271850586
    7. ')n' → logprob: -14.82644271850586
    8. ')return' → logprob: -15.57644271850586
    9. ' )
' → logprob: -15.57644271850586
    10. ',)
' → logprob: -16.82644271850586

Token 494: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.848420551046729e-05
    2. 'return' → logprob: -9.7500581741333
    3. ' return' → logprob: -16.000059127807617
    4. 'def' → logprob: -18.000059127807617
    5. '```' → logprob: -19.125059127807617
    6. '	return' → logprob: -19.500059127807617
    7. '       ' → logprob: -19.500059127807617
    8. '    
' → logprob: -20.250059127807617
    9. '
' → logprob: -20.500059127807617
    10. '  ' → logprob: -21.375059127807617

Token 495: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.676292231422849e-05
    2. '   ' → logprob: -11.250017166137695
    3. ' return' → logprob: -12.500017166137695
    4. '	return' → logprob: -20.000017166137695
    5. ' ' → logprob: -22.125017166137695
    6. '
' → logprob: -22.250017166137695
    7. '{return' → logprob: -22.375017166137695
    8. '```' → logprob: -23.000017166137695
    9. '  ' → logprob: -23.250017166137695
    10. ':return' → logprob: -23.750017166137695

Token 496: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0007099286303855479
    2. ' d' → logprob: -7.2507100105285645
    3. ' ' → logprob: -20.500709533691406
    4. '[d' → logprob: -20.750709533691406
    5. '	d' → logprob: -21.000709533691406
    6. '   ' → logprob: -21.500709533691406
    7. '(d' → logprob: -21.500709533691406
    8. ' ' → logprob: -22.500709533691406
    9. '```' → logprob: -22.625709533691406
    10. '[' → logprob: -22.625709533691406

Token 497: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007158377207815647
    2. 'n' → logprob: -5.132158279418945
    3. '<|end|>' → logprob: -6.882158279418945
    4. 's' → logprob: -9.507158279418945
    5. 'if' → logprob: -9.757158279418945
    6. '#' → logprob: -10.132158279418945
    7. '```' → logprob: -11.007158279418945
    8. 'from' → logprob: -13.007158279418945
    9. '
' → logprob: -13.132158279418945
    10. 'ndef' → logprob: -13.132158279418945

Token 498: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007318547577597201
    2. 'if' → logprob: -7.250731945037842
    3. 'n' → logprob: -11.375731468200684
    4. '#' → logprob: -11.875731468200684
    5. '```' → logprob: -13.125731468200684
    6. '<|end|>' → logprob: -14.500731468200684
    7. 'print' → logprob: -14.625731468200684
    8. ' def' → logprob: -16.250732421875
    9. 'ndef' → logprob: -16.375732421875
    10. 's' → logprob: -16.875732421875

Token 499: ' output' (ID: 4733)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.016385534778237343
    2. ' main' → logprob: -4.516385555267334
    3. 'solve' → logprob: -5.391385555267334
    4. 'short' → logprob: -7.516385555267334
    5. ' solve' → logprob: -9.141385078430176
    6. 'build' → logprob: -10.391385078430176
    7. 'get' → logprob: -10.641385078430176
    8. 'find' → logprob: -11.641385078430176
    9. ' shortest' → logprob: -11.766385078430176
    10. 'dfs' → logprob: -12.266385078430176

Token 500: '_result' (ID: 11623)
  Prédit: '(_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(_' → logprob: -1.2959346771240234
    2. '_dist' → logprob: -1.5459346771240234
    3. '_' → logprob: -1.6709346771240234
    4. '()' → logprob: -2.2959346771240234
    5. '(' → logprob: -3.0459346771240234
    6. 'def' → logprob: -3.0459346771240234
    7. '(dist' → logprob: -3.4209346771240234
    8. '_(' → logprob: -3.4209346771240234
    9. '_values' → logprob: -4.045934677124023
    10. '_distance' → logprob: -4.420934677124023

Token 501: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.17160995304584503
    2. '():' → logprob: -2.171609878540039
    3. '():
' → logprob: -3.171609878540039
    4. '(' → logprob: -7.046609878540039
    5. '(n' → logprob: -7.296609878540039
    6. '()' → logprob: -10.046609878540039
    7. '(result' → logprob: -10.296609878540039
    8. '(lst' → logprob: -10.921609878540039
    9. '(s' → logprob: -11.046609878540039
    10. '(def' → logprob: -11.171609878540039

Token 502: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12725166976451874
    2. '):
' → logprob: -2.127251625061035
    3. '):
' → logprob: -8.752251625061035
    4. ')' → logprob: -8.877251625061035
    5. ',' → logprob: -11.252251625061035
    6. ' ):' → logprob: -12.377251625061035
    7. '):

' → logprob: -13.002251625061035
    8. '[' → logprob: -13.377251625061035
    9. '   ' → logprob: -13.377251625061035
    10. 's' → logprob: -14.877251625061035

Token 503: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10190415382385254
    2. '   ' → logprob: -2.6019041538238525
    3. 'for' → logprob: -3.8519041538238525
    4. 'if' → logprob: -7.101903915405273
    5. ' print' → logprob: -7.851903915405273
    6. 'def' → logprob: -8.226903915405273
    7. ' for' → logprob: -10.851903915405273
    8. '```' → logprob: -11.601903915405273
    9. ' if' → logprob: -13.226903915405273
    10. 'sys' → logprob: -14.226903915405273

Token 504: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10157488286495209
    2. 'for' → logprob: -2.3515748977661133
    3. 'if' (adapté à ' if') → logprob: -6.726574897766113
    4. '   ' → logprob: -9.351574897766113
    5. 'def' → logprob: -9.851574897766113
    6. 'res' → logprob: -11.226574897766113
    7. ' print' → logprob: -12.351574897766113
    8. 'min' → logprob: -12.601574897766113
    9. 'return' → logprob: -12.726574897766113
    10. 'ans' → logprob: -13.226574897766113

Token 505: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16442668437957764
    2. 'all' → logprob: -2.164426803588867
    3. 'inf' → logprob: -3.539426803588867
    4. 'any' → logprob: -5.914426803588867
    5. ' d' → logprob: -6.039426803588867
    6. ' all' → logprob: -6.164426803588867
    7. 'min' → logprob: -8.789426803588867
    8. ' any' → logprob: -8.789426803588867
    9. 'len' → logprob: -9.289426803588867
    10. 'max' → logprob: -9.539426803588867

Token 506: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.23514454066753387
    2. '[' → logprob: -1.6101444959640503
    3. '==' → logprob: -5.61014461517334
    4. '[len' → logprob: -5.73514461517334
    5. '[n' → logprob: -6.61014461517334
    6. '.count' → logprob: -7.73514461517334
    7. '[in' → logprob: -7.73514461517334
    8. ' ==' → logprob: -7.86014461517334
    9. 'inf' → logprob: -9.98514461517334
    10. '[d' → logprob: -10.61014461517334

Token 507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. 'inf' → logprob: -13.250001907348633
    3. '-' → logprob: -18.250001907348633
    4. ' ' → logprob: -19.750001907348633
    5. '9' → logprob: -21.500001907348633
    6. '19' → logprob: -22.250001907348633
    7. '2' → logprob: -22.375001907348633
    8. ']==' → logprob: -22.625001907348633
    9. '999' → logprob: -22.875001907348633
    10. '   ' → logprob: -22.875001907348633

Token 508: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.021618200466036797
    2. ' ==' → logprob: -4.021618366241455
    3. ']==' → logprob: -5.896618366241455
    4. ']' → logprob: -7.646618366241455
    5. 'is' → logprob: -9.771617889404297
    6. '```' → logprob: -10.146617889404297
    7. '[' → logprob: -10.396617889404297
    8. ')==' → logprob: -10.396617889404297
    9. ')' → logprob: -10.396617889404297
    10. '<' → logprob: -10.771617889404297

Token 509: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.026346050202846527
    2. ' ==' → logprob: -3.65134596824646
    3. '<' → logprob: -10.526346206665039
    4. 'is' → logprob: -12.151346206665039
    5. '>=' → logprob: -12.276346206665039
    6. '!=' → logprob: -12.401346206665039
    7. ' is' → logprob: -13.526346206665039
    8. '```' → logprob: -14.026346206665039
    9. ' <' → logprob: -14.276346206665039
    10. '==
' → logprob: -14.651346206665039

Token 510: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -2.463036435074173e-05
    2. 'float' → logprob: -10.875024795532227
    3. ' inf' → logprob: -12.125024795532227
    4. '0' → logprob: -16.500024795532227
    5. '   ' → logprob: -16.625024795532227
    6. '-' → logprob: -18.250024795532227
    7. ' ' → logprob: -18.250024795532227
    8. 'in' → logprob: -18.625024795532227
    9. '
' → logprob: -18.875024795532227
    10. '```' → logprob: -18.875024795532227

Token 511: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38705989718437195
    2. ':
' → logprob: -1.1370599269866943
    3. '   ' → logprob: -9.762060165405273
    4. ' or' → logprob: -10.137060165405273
    5. '):
' → logprob: -10.262060165405273
    6. 'print' → logprob: -11.012060165405273
    7. '():
' → logprob: -11.262060165405273
    8. '):' → logprob: -11.762060165405273
    9. ':return' → logprob: -12.387060165405273
    10. '=' → logprob: -12.762060165405273

Token 512: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.840882420539856
    2. 'print' → logprob: -1.090882420539856
    3. '       ' → logprob: -1.465882420539856
    4. ' print' → logprob: -6.340882301330566
    5. '	print' → logprob: -10.340882301330566
    6. '```' → logprob: -10.590882301330566
    7. ':
' → logprob: -11.215882301330566
    8. '    
' → logprob: -11.590882301330566
    9. ':' → logprob: -12.090882301330566
    10. '
' → logprob: -12.340882301330566

Token 513: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.690834273584187e-05
    2. '   ' → logprob: -10.25003719329834
    3. ' print' → logprob: -13.62503719329834
    4. '	print' → logprob: -15.62503719329834
    5. 'return' → logprob: -16.875036239624023
    6. '-print' → logprob: -17.000036239624023
    7. '```' → logprob: -17.375036239624023
    8. '       ' → logprob: -17.750036239624023
    9. '-' → logprob: -17.875036239624023
    10. '
' → logprob: -19.625036239624023

Token 514: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.1008713702030946e-06
    2. ' -' → logprob: -13.750001907348633
    3. '(-' → logprob: -14.625001907348633
    4. '-im' → logprob: -15.250001907348633
    5. '-print' → logprob: -16.000001907348633
    6. '-inf' → logprob: -16.750001907348633
    7. '-end' → logprob: -18.250001907348633
    8. '"-' → logprob: -18.375001907348633
    9. '\-' → logprob: -18.500001907348633
    10. '```' → logprob: -18.750001907348633

Token 515: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '2' → logprob: -20.25
    4. '１' → logprob: -20.375
    5. '```' → logprob: -20.375
    6. '۱' → logprob: -21.125
    7. '   ' → logprob: -21.25
    8. ' ' → logprob: -22.3125
    9. '11' → logprob: -22.375
    10. '১' → logprob: -22.375

Token 516: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0380503311753273
    2. ')
' → logprob: -3.288050413131714
    3. '   ' → logprob: -12.038050651550293
    4. ')
' → logprob: -13.913050651550293
    5. ' )' → logprob: -13.913050651550293
    6. ')return' → logprob: -14.913050651550293
    7. '')' → logprob: -15.663050651550293
    8. ')`
' → logprob: -16.163049697875977
    9. '))' → logprob: -16.538049697875977
    10. '())' → logprob: -16.663049697875977

Token 517: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007800741121172905
    2. 'else' → logprob: -4.882800579071045
    3. '       ' → logprob: -9.132801055908203
    4. ' else' → logprob: -9.382801055908203
    5. '<|end|>' → logprob: -14.382801055908203
    6. ',' → logprob: -14.757801055908203
    7. 'def' → logprob: -15.132801055908203
    8. '	else' → logprob: -15.132801055908203
    9. '```' → logprob: -15.507801055908203
    10. 'return' → logprob: -16.007801055908203

Token 518: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.017693404108285904
    2. ' else' → logprob: -4.517693519592285
    3. '   ' → logprob: -5.017693519592285
    4. '	else' → logprob: -13.142693519592285
    5. 'elif' → logprob: -13.767693519592285
    6. '  ' → logprob: -14.892693519592285
    7. '       ' → logprob: -15.517693519592285
    8. ' ' → logprob: -15.892693519592285
    9. ',' → logprob: -16.64269256591797
    10. '_else' → logprob: -17.01769256591797

Token 519: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33277595043182373
    2. ':' → logprob: -1.4577759504318237
    3. ':
' → logprob: -3.0827760696411133
    4. 'print' → logprob: -5.582776069641113
    5. ' print' → logprob: -7.582776069641113
    6. '   ' → logprob: -8.957776069641113
    7. '      ' → logprob: -11.207776069641113
    8. ',' → logprob: -11.332776069641113
    9. '    ' → logprob: -11.582776069641113
    10. ':

' → logprob: -11.832776069641113

Token 520: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39497965574264526
    2. '       ' → logprob: -1.14497971534729
    3. '   ' → logprob: -5.394979476928711
    4. ' print' → logprob: -5.644979476928711
    5. '```' → logprob: -14.269979476928711
    6. '	print' → logprob: -14.894979476928711
    7. '    ' → logprob: -16.01997947692871
    8. '      ' → logprob: -17.14497947692871
    9. '     ' → logprob: -17.14497947692871
    10. ' ' → logprob: -17.14497947692871

Token 521: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -14.500000953674316
    3. '   ' → logprob: -17.125
    4. '       ' → logprob: -18.375
    5. 'pr' → logprob: -20.75
    6. '	print' → logprob: -20.875
    7. '
' → logprob: -21.0
    8. '```' → logprob: -22.375
    9. '  ' → logprob: -23.125
    10. 'printf' → logprob: -23.375

Token 522: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -5.512236498361744e-07
    2. 'd' → logprob: -15.000000953674316
    3. '(' → logprob: -15.375000953674316
    4. '(int' → logprob: -18.375
    5. ' d' → logprob: -18.875
    6. '((' → logprob: -19.875
    7. '(
' → logprob: -20.5
    8. '	d' → logprob: -21.0
    9. ' (' → logprob: -21.75
    10. ',d' → logprob: -21.75

Token 523: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. '[' → logprob: -17.375
    3. ' [-' → logprob: -17.875
    4. '-' → logprob: -18.5
    5. ')' → logprob: -18.625
    6. '][-' → logprob: -18.625
    7. '
' → logprob: -18.875
    8. '   ' → logprob: -19.375
    9. '```' → logprob: -19.375
    10. ' ' → logprob: -20.375

Token 524: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.625
    3. '0' → logprob: -21.0
    4. '```' → logprob: -22.5
    5. '])' → logprob: -23.375
    6. '   ' → logprob: -23.375
    7. '
' → logprob: -23.5
    8. '``' → logprob: -24.125
    9. '2' → logprob: -24.25
    10. ']' → logprob: -24.375

Token 525: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. '})' → logprob: -14.625000953674316
    3. '))' → logprob: -14.875000953674316
    4. '())' → logprob: -15.625000953674316
    5. ' )' → logprob: -15.875000953674316
    6. ')
' → logprob: -17.000001907348633
    7. '}' → logprob: -17.000001907348633
    8. '`)' → logprob: -17.375001907348633
    9. ')}' → logprob: -17.375001907348633
    10. ')d' → logprob: -17.500001907348633

Token 526: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004306692280806601
    2. 'if' → logprob: -7.750430583953857
    3. 'n' → logprob: -16.750431060791016
    4. ' def' → logprob: -20.125431060791016
    5. '#' → logprob: -21.375431060791016
    6. '```' → logprob: -22.125431060791016
    7. 'ndef' → logprob: -23.625431060791016
    8. ' if' → logprob: -24.250431060791016
    9. '
' → logprob: -25.000431060791016
    10. 'for' → logprob: -25.250431060791016

Token 527: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00029959288076497614
    2. 'def' → logprob: -8.250299453735352
    3. ' main' → logprob: -10.250299453735352
    4. 'solve' → logprob: -12.750299453735352
    5. '_main' → logprob: -18.00029945373535
    6. 'Main' → logprob: -18.75029945373535
    7. 'process' → logprob: -19.12529945373535
    8. 'resolve' → logprob: -19.25029945373535
    9. ' def' → logprob: -19.25029945373535
    10. '	main' → logprob: -19.37529945373535

Token 528: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.723352049040841e-06
    2. '():
' → logprob: -12.500004768371582
    3. ' ():' → logprob: -14.000004768371582
    4. '()' → logprob: -16.375003814697266
    5. '():
' → logprob: -16.875003814697266
    6. '_' → logprob: -19.625003814697266
    7. '():

' → logprob: -20.000003814697266
    8. '()>' → logprob: -20.125003814697266
    9. 'def' → logprob: -20.375003814697266
    10. '(":' → logprob: -20.375003814697266

Token 529: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12863130867481232
    2. 'n' → logprob: -2.128631353378296
    3. ' n' → logprob: -6.378631114959717
    4. '	n' → logprob: -12.878631591796875
    5. '```' → logprob: -13.628631591796875
    6. '
' → logprob: -15.503631591796875
    7. ' ' → logprob: -16.003631591796875
    8. '   ' → logprob: -16.128631591796875
    9. '(n' → logprob: -16.503631591796875
    10. ',n' → logprob: -16.628631591796875

Token 530: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0043446677736938
    2. ' n' → logprob: -5.754344463348389
    3. '   ' → logprob: -6.754344463348389
    4. '	n' → logprob: -14.754344940185547
    5. '  ' → logprob: -18.129344940185547
    6. ' ' → logprob: -18.254344940185547
    7. '
' → logprob: -19.004344940185547
    8. '```' → logprob: -19.754344940185547
    9. '    
' → logprob: -20.629344940185547
    10. ' ' → logprob: -21.004344940185547

Token 531: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008098635007627308
    2. ',m' → logprob: -7.125809669494629
    3. ' ,' → logprob: -12.625809669494629
    4. 'm' → logprob: -13.375809669494629
    5. ',n' → logprob: -15.625809669494629
    6. ',
' → logprob: -16.375810623168945
    7. ',M' → logprob: -17.000810623168945
    8. '_,' → logprob: -17.625810623168945
    9. '‌,' → logprob: -17.875810623168945
    10. '،' → logprob: -17.938310623168945

Token 532: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0019286326132714748
    2. ' m' → logprob: -6.251928806304932
    3. ' ' → logprob: -17.501928329467773
    4. '   ' → logprob: -19.126928329467773
    5. 'M' → logprob: -19.251928329467773
    6. '	m' → logprob: -19.251928329467773
    7. '    ' → logprob: -19.376928329467773
    8. '  ' → logprob: -19.626928329467773
    9. '=' → logprob: -19.876928329467773
    10. '_m' → logprob: -20.251928329467773

Token 533: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759403109550476
    2. '=' → logprob: -0.8259403109550476
    3. ',' → logprob: -14.575940132141113
    4. '=n' → logprob: -15.325940132141113
    5. '＝' → logprob: -17.07594108581543
    6. '   ' → logprob: -17.07594108581543
    7. '=get' → logprob: -17.82594108581543
    8. '=input' → logprob: -18.95094108581543
    9. ')' → logprob: -19.07594108581543
    10. ' =)' → logprob: -19.20094108581543

Token 534: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.4826592803001404
    2. ' get' → logprob: -1.2326593399047852
    3. 'LI' → logprob: -2.482659339904785
    4. ' LI' → logprob: -4.857659339904785
    5. 'I' → logprob: -9.982659339904785
    6. ' ' → logprob: -12.482659339904785
    7. ' I' → logprob: -13.232659339904785
    8. 'map' → logprob: -14.357659339904785
    9. '  ' → logprob: -15.357659339904785
    10. ' map' → logprob: -15.482659339904785

Token 535: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.002235662890598178
    2. 'input' → logprob: -6.3772358894348145
    3. '(n' → logprob: -7.6272358894348145
    4. 'n' → logprob: -11.002235412597656
    5. '()' → logprob: -12.377235412597656
    6. '_' → logprob: -12.377235412597656
    7. 'Input' → logprob: -12.502235412597656
    8. '(' → logprob: -12.627235412597656
    9. '_values' → logprob: -12.877235412597656
    10. '_inputs' → logprob: -13.127235412597656

Token 536: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0003054301778320223
    2. 'values' → logprob: -8.12530517578125
    3. '()' → logprob: -11.75030517578125
    4. 's' → logprob: -14.37530517578125
    5. 'Values' → logprob: -14.87530517578125
    6. '_vals' → logprob: -15.50030517578125
    7. '_VALUES' → logprob: -15.50030517578125
    8. ' values' → logprob: -17.12530517578125
    9. '_' → logprob: -17.62530517578125
    10. 'vals' → logprob: -17.87530517578125

Token 537: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2215547412633896
    2. '()' → logprob: -2.346554756164551
    3. '()
' → logprob: -2.346554756164551
    4. '
' → logprob: -5.096554756164551
    5. 'graph' → logprob: -6.846554756164551
    6. 'n' → logprob: -10.72155475616455
    7. '    
' → logprob: -10.84655475616455
    8. '	graph' → logprob: -11.09655475616455
    9. 'def' → logprob: -11.22155475616455
    10. ' graph' → logprob: -11.22155475616455

Token 538: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16024179756641388
    2. 'graph' → logprob: -2.2852418422698975
    3. ' graph' → logprob: -3.1602418422698975
    4. 'edges' → logprob: -6.035241603851318
    5. ' edges' → logprob: -6.660241603851318
    6. '	graph' → logprob: -8.910242080688477
    7. '```' → logprob: -9.410242080688477
    8. '_graph' → logprob: -13.660242080688477
    9. '   ' → logprob: -13.660242080688477
    10. '
' → logprob: -14.035242080688477

Token 539: ' edges' (ID: 22569)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.06231384351849556
    2. 'edges' (adapté à ' edges') → logprob: -2.8123137950897217
    3. ' graph' → logprob: -8.4373140335083
    4. ' edges' → logprob: -9.4373140335083
    5. '   ' → logprob: -9.9373140335083
    6. '	graph' → logprob: -13.8123140335083
    7. 'edge' → logprob: -15.3123140335083
    8. 'graphs' → logprob: -15.8123140335083
    9. '```' → logprob: -16.687313079833984
    10. '    
' → logprob: -17.187313079833984

Token 540: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048587486147880554
    2. '=' → logprob: -3.0485875606536865
    3. ',' → logprob: -17.548587799072266
    4. '(' → logprob: -17.548587799072266
    5. '=create' → logprob: -17.548587799072266
    6. '   ' → logprob: -17.673587799072266
    7. '＝' → logprob: -17.923587799072266
    8. ')' → logprob: -18.048587799072266
    9. '=n' → logprob: -18.298587799072266
    10. 's' → logprob: -18.673587799072266

Token 541: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.0009114635176956654
    2. ' make' → logprob: -7.000911235809326
    3. '	make' → logprob: -19.125911712646484
    4. '(make' → logprob: -19.500911712646484
    5. '.make' → logprob: -22.750911712646484
    6. '   ' → logprob: -23.375911712646484
    7. '_make' → logprob: -23.625911712646484
    8. 'mak' → logprob: -24.125911712646484
    9. 'maken' → logprob: -25.375911712646484
    10. ' ' → logprob: -25.625911712646484

Token 542: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -0.00012082771718269214
    2. 'empty' → logprob: -9.250121116638184
    3. '(n' → logprob: -10.750121116638184
    4. 'graph' → logprob: -13.625121116638184
    5. 'n' → logprob: -14.375121116638184
    6. '_edges' → logprob: -14.375121116638184
    7. 'Empty' → logprob: -15.250121116638184
    8. '_graph' → logprob: -15.375121116638184
    9. '_edge' → logprob: -16.250120162963867
    10. '[n' → logprob: -16.250120162963867

Token 543: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.00014239625306800008
    2. 'graph' → logprob: -8.875142097473145
    3. '(graph' → logprob: -13.875142097473145
    4. '_edges' → logprob: -14.750142097473145
    5. 'Graph' → logprob: -14.875142097473145
    6. '(n' → logprob: -14.875142097473145
    7. ' graph' → logprob: -15.500142097473145
    8. '(edges' → logprob: -16.62514305114746
    9. '_GRAPH' → logprob: -16.62514305114746
    10. '_list' → logprob: -16.87514305114746

Token 544: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.77627644513268e-06
    2. 'n' → logprob: -11.875008583068848
    3. ' (' → logprob: -13.750008583068848
    4. '(' → logprob: -15.000008583068848
    5. ',n' → logprob: -16.625009536743164
    6. ' n' → logprob: -16.750009536743164
    7. ')n' → logprob: -17.125009536743164
    8. '<n' → logprob: -17.625009536743164
    9. '(
' → logprob: -17.875009536743164
    10. '	n' → logprob: -18.000009536743164

Token 545: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00036382899270392954
    2. ')
' → logprob: -8.000364303588867
    3. '   ' → logprob: -10.500364303588867
    4. '())' → logprob: -14.750364303588867
    5. '()' → logprob: -15.250364303588867
    6. ' )' → logprob: -15.750364303588867
    7. ')n' → logprob: -17.000364303588867
    8. ')
' → logprob: -17.250364303588867
    9. ' ' → logprob: -18.125364303588867
    10. ')

' → logprob: -18.375364303588867

Token 546: '   ' (ID: 271)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.033721890300512314
    2. '   ' → logprob: -3.533721923828125
    3. ' append' → logprob: -5.533721923828125
    4. '	append' → logprob: -12.033721923828125
    5. '.append' → logprob: -12.408721923828125
    6. '_append' → logprob: -14.033721923828125
    7. '```' → logprob: -14.658721923828125
    8. 'app' → logprob: -14.783721923828125
    9. 'add' → logprob: -15.408721923828125
    10. 'Append' → logprob: -15.533721923828125

Token 547: ' append' (ID: 17147)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' (adapté à ' append') → logprob: -5.061676347395405e-05
    2. ' append' → logprob: -10.37505054473877
    3. '   ' → logprob: -11.00005054473877
    4. 'add' → logprob: -12.87505054473877
    5. '	append' → logprob: -16.250051498413086
    6. '.append' → logprob: -17.875051498413086
    7. '_append' → logprob: -18.750051498413086
    8. 'app' → logprob: -18.750051498413086
    9. 'Append' → logprob: -18.875051498413086
    10. '```' → logprob: -19.125051498413086

Token 548: '_previous' (ID: 126212)
  Prédit: '_previous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_previous' → logprob: -6.749814019713085e-06
    2. '_edges' → logprob: -12.375006675720215
    3. 'previous' → logprob: -13.250006675720215
    4. '_' → logprob: -14.750006675720215
    5. '(edges' → logprob: -15.250006675720215
    6. '_prev' → logprob: -16.75000762939453
    7. '```' → logprob: -17.12500762939453
    8. '_existing' → logprob: -17.50000762939453
    9. '(previous' → logprob: -17.62500762939453
    10. 'edges' → logprob: -17.75000762939453

Token 549: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -1.9361264946837764e-07
    2. 'edges' → logprob: -16.25
    3. '_edge' → logprob: -18.375
    4. '_' → logprob: -18.375
    5. '```' → logprob: -18.375
    6. '(edges' → logprob: -18.375
    7. '_vertices' → logprob: -19.125
    8. '_indices' → logprob: -19.375
    9. '_ed' → logprob: -19.5
    10. '_nodes' → logprob: -19.625

Token 550: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -5.512236498361744e-07
    2. 'edges' → logprob: -15.250000953674316
    3. ' (' → logprob: -16.5
    4. '(' → logprob: -16.875
    5. '(events' → logprob: -17.5
    6. '(edge' → logprob: -18.0
    7. '(lines' → logprob: -18.125
    8. '(nodes' → logprob: -18.5
    9. ' edges' → logprob: -18.875
    10. '(n' → logprob: -18.875

Token 551: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016074994346126914
    2. ',n' → logprob: -9.250161170959473
    3. ' ,' → logprob: -10.125161170959473
    4. ')' → logprob: -11.375161170959473
    5. '(n' → logprob: -11.875161170959473
    6. '(edges' → logprob: -12.375161170959473
    7. '(' → logprob: -14.000161170959473
    8. ',
' → logprob: -14.250161170959473
    9. 'edges' → logprob: -16.250160217285156
    10. ',(' → logprob: -16.750160217285156

Token 552: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006715370807796717
    2. ' n' → logprob: -5.006715297698975
    3. ')n' → logprob: -16.881715774536133
    4. '	n' → logprob: -17.381715774536133
    5. '   ' → logprob: -19.631715774536133
    6. ')' → logprob: -20.006715774536133
    7. ',n' → logprob: -22.006715774536133
    8. '_n' → logprob: -22.256715774536133
    9. '(n' → logprob: -22.256715774536133
    10. '
' → logprob: -22.881715774536133

Token 553: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000206401280593127
    2. ')
' → logprob: -8.500205993652344
    3. '   ' → logprob: -12.875205993652344
    4. ' )' → logprob: -16.500205993652344
    5. ')

' → logprob: -16.625205993652344
    6. '))' → logprob: -17.250205993652344
    7. '),' → logprob: -17.375205993652344
    8. ')n' → logprob: -17.500205993652344
    9. ')
' → logprob: -18.000205993652344
    10. ')`' → logprob: -18.750205993652344

Token 554: '   ' (ID: 271)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.39001497626304626
    2. '   ' → logprob: -1.1400150060653687
    3. ' add' → logprob: -5.765015125274658
    4. '	add' → logprob: -13.6400146484375
    5. '```' → logprob: -14.0150146484375
    6. '
' → logprob: -14.2650146484375
    7. ')add' → logprob: -15.2650146484375
    8. '(add' → logprob: -15.2650146484375
    9. '  ' → logprob: -16.2650146484375
    10. '_add' → logprob: -16.2650146484375

Token 555: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' (adapté à ' add') → logprob: -8.959636033978313e-05
    2. '   ' → logprob: -9.750089645385742
    3. ' add' → logprob: -10.375089645385742
    4. '	add' → logprob: -17.875089645385742
    5. '
' → logprob: -19.000089645385742
    6. ' ' → logprob: -19.500089645385742
    7. '  ' → logprob: -19.875089645385742
    8. '_add' → logprob: -20.000089645385742
    9. '```' → logprob: -20.000089645385742
    10. '(add' → logprob: -20.125089645385742

Token 556: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -7.896309739408025e-07
    2. 'input' → logprob: -14.125000953674316
    3. '_inputs' → logprob: -18.625
    4. '_output' → logprob: -19.25
    5. '_' → logprob: -19.5
    6. '```' → logprob: -20.0
    7. '_previous' → logprob: -20.125
    8. ' input' → logprob: -20.125
    9. 'Input' → logprob: -20.25
    10. '_INPUT' → logprob: -20.5

Token 557: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.00020580526324920356
    2. 'edges' → logprob: -8.500205993652344
    3. '```' → logprob: -13.750205993652344
    4. '_edge' → logprob: -14.875205993652344
    5. '(edges' → logprob: -15.125205993652344
    6. ' edges' → logprob: -15.500205993652344
    7. 'Edges' → logprob: -15.875205993652344
    8. 's' → logprob: -16.000205993652344
    9. '_lines' → logprob: -16.875205993652344
    10. 'def' → logprob: -17.125205993652344

Token 558: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -6.392202976712724e-06
    2. 'edges' → logprob: -12.000006675720215
    3. ' edges' → logprob: -16.1250057220459
    4. '(edge' → logprob: -16.8750057220459
    5. '```' → logprob: -18.8750057220459
    6. '(events' → logprob: -19.0000057220459
    7. '(lines' → logprob: -19.6250057220459
    8. '(errors' → logprob: -19.7500057220459
    9. '.edges' → logprob: -19.8750057220459
    10. '(
' → logprob: -20.1250057220459

Token 559: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20200233161449432
    2. '(edges' → logprob: -1.7020022869110107
    3. 'edges' → logprob: -7.82700252532959
    4. ' edges' → logprob: -8.95200252532959
    5. ' ,' → logprob: -10.82700252532959
    6. '   ' → logprob: -10.82700252532959
    7. ')' → logprob: -11.45200252532959
    8. ',
' → logprob: -12.57700252532959
    9. '```' → logprob: -13.32700252532959
    10. '
' → logprob: -13.70200252532959

Token 560: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.001170225441455841
    2. ' m' → logprob: -6.7511701583862305
    3. ')m' → logprob: -17.876171112060547
    4. ')' → logprob: -20.251171112060547
    5. '   ' → logprob: -20.876171112060547
    6. '	m' → logprob: -21.001171112060547
    7. ' м' → logprob: -23.501171112060547
    8. '
' → logprob: -23.876171112060547
    9. ',m' → logprob: -24.251171112060547
    10. 'mod' → logprob: -24.376171112060547

Token 561: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022147243842482567
    2. ')
' → logprob: -4.397147178649902
    3. '   ' → logprob: -4.647147178649902
    4. ')

' → logprob: -14.397147178649902
    5. ' )' → logprob: -14.897147178649902
    6. ')
' → logprob: -15.022147178649902
    7. 'def' → logprob: -15.397147178649902
    8. '<|end|>' → logprob: -15.897147178649902
    9. '),' → logprob: -16.02214813232422
    10. '
' → logprob: -16.27214813232422

Token 562: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018342381343245506
    2. 'd' → logprob: -4.0183424949646
    3. 'def' → logprob: -9.518342018127441
    4. ' d' → logprob: -9.893342018127441
    5. '
' → logprob: -10.393342018127441
    6. '```' → logprob: -11.143342018127441
    7. '    
' → logprob: -11.643342018127441
    8. 'dist' → logprob: -11.768342018127441
    9. '	d' → logprob: -13.393342018127441
    10. '   ' → logprob: -14.018342018127441

Token 563: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.00896446593105793
    2. 'dist' → logprob: -4.758964538574219
    3. '   ' → logprob: -8.008964538574219
    4. ' d' → logprob: -11.383964538574219
    5. 'distance' → logprob: -12.633964538574219
    6. 'result' → logprob: -13.258964538574219
    7. ' dist' → logprob: -14.883964538574219
    8. 'res' → logprob: -15.633964538574219
    9. 'return' → logprob: -15.633964538574219
    10. 's' → logprob: -15.883964538574219

Token 564: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031830633524805307
    2. '=' → logprob: -5.753182888031006
    3. 'ist' → logprob: -13.753183364868164
    4. ',' → logprob: -13.878183364868164
    5. 'ef' → logprob: -14.003183364868164
    6. '   ' → logprob: -14.128183364868164
    7. 'istance' → logprob: -14.378183364868164
    8. ' ' → logprob: -14.753183364868164
    9. '	' → logprob: -15.878183364868164
    10. 'efs' → logprob: -16.128183364868164

Token 565: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.201527938246727
    2. ' d' → logprob: -1.7015279531478882
    3. 'ijkstra' → logprob: -9.20152759552002
    4. '   ' → logprob: -11.45152759552002
    5. '	d' → logprob: -13.70152759552002
    6. '(d' → logprob: -13.82652759552002
    7. '  ' → logprob: -15.32652759552002
    8. ' ' → logprob: -15.95152759552002
    9. '=d' → logprob: -16.201528549194336
    10. 'ijk' → logprob: -16.451528549194336

Token 566: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0010828252416104078
    2. '=' → logprob: -8.001082420349121
    3. ' =' → logprob: -8.001082420349121
    4. 'ijk' → logprob: -8.001082420349121
    5. 'ij' → logprob: -10.501082420349121
    6. '```' → logprob: -11.376082420349121
    7. '   ' → logprob: -11.626082420349121
    8. 'ijks' → logprob: -12.126082420349121
    9. 's' → logprob: -12.251082420349121
    10. 'jik' → logprob: -12.876082420349121

Token 567: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. '(s' → logprob: -16.125
    3. '0' → logprob: -16.375
    4. ' (' → logprob: -16.5
    5. '(n' → logprob: -16.5
    6. '(
' → logprob: -17.125
    7. '((' → logprob: -19.625
    8. '   ' → logprob: -20.5
    9. '```' → logprob: -20.75
    10. 's' → logprob: -20.875

Token 568: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.750000953674316
    3. '   ' → logprob: -15.125000953674316
    4. '(' → logprob: -17.625
    5. 'n' → logprob: -18.125
    6. ')' → logprob: -18.375
    7. '```' → logprob: -19.625
    8. '
' → logprob: -19.875
    9. 's' → logprob: -19.875
    10. '       ' → logprob: -20.25

Token 569: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1041145626222715e-05
    2. ' ,' → logprob: -12.000011444091797
    3. ',
' → logprob: -13.125011444091797
    4. 'edges' → logprob: -13.625011444091797
    5. '(edges' → logprob: -14.250011444091797
    6. ')' → logprob: -15.250011444091797
    7. ' edges' → logprob: -15.750011444091797
    8. '```' → logprob: -15.875011444091797
    9. '   ' → logprob: -16.000011444091797
    10. '‌,' → logprob: -17.000011444091797

Token 570: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.20148536562919617
    2. ' edges' → logprob: -1.7014853954315186
    3. '   ' → logprob: -9.701485633850098
    4. '(edges' → logprob: -11.951485633850098
    5. '.edges' → logprob: -12.576485633850098
    6. '_edges' → logprob: -14.826485633850098
    7. '```' → logprob: -15.576485633850098
    8. ')' → logprob: -16.07648468017578
    9. ' ' → logprob: -16.45148468017578
    10. 'Edges' → logprob: -16.95148468017578

Token 571: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012535012501757592
    2. ',n' → logprob: -9.00012493133545
    3. ' ,' → logprob: -13.25012493133545
    4. '   ' → logprob: -16.375125885009766
    5. 'n' → logprob: -17.250125885009766
    6. ',
' → logprob: -17.750125885009766
    7. ')' → logprob: -18.250125885009766
    8. '，' → logprob: -20.125125885009766
    9. '```' → logprob: -20.125125885009766
    10. '	' → logprob: -20.750125885009766

Token 572: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011048289015889168
    2. ' n' → logprob: -4.511048316955566
    3. '   ' → logprob: -14.511048316955566
    4. '	n' → logprob: -18.01104736328125
    5. ')n' → logprob: -19.63604736328125
    6. '    ' → logprob: -22.38604736328125
    7. ')' → logprob: -22.51104736328125
    8. ' ' → logprob: -22.88604736328125
    9. '  ' → logprob: -22.88604736328125
    10. 'len' → logprob: -23.13604736328125

Token 573: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0052384985610842705
    2. ')
' → logprob: -5.2552385330200195
    3. '   ' → logprob: -12.38023853302002
    4. ')
' → logprob: -14.88023853302002
    5. ' )' → logprob: -15.75523853302002
    6. ')

' → logprob: -17.755237579345703
    7. '),' → logprob: -18.005237579345703
    8. ' )
' → logprob: -19.130237579345703
    9. ').' → logprob: -19.380237579345703
    10. ' ' → logprob: -19.630237579345703

Token 574: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07912067323923111
    2. 'output' → logprob: -2.579120635986328
    3. ' output' → logprob: -8.454120635986328
    4. '	output' → logprob: -11.704120635986328
    5. '
' → logprob: -12.329120635986328
    6. '```' → logprob: -12.579120635986328
    7. '(output' → logprob: -14.079120635986328
    8. '_output' → logprob: -14.704120635986328
    9. '    
' → logprob: -15.329120635986328
    10. '$output' → logprob: -15.829120635986328

Token 575: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.000158842682139948
    2. '   ' → logprob: -9.00015926361084
    3. ' output' → logprob: -10.25015926361084
    4. '
' → logprob: -18.125158309936523
    5. '  ' → logprob: -18.500158309936523
    6. '	output' → logprob: -18.500158309936523
    7. '```' → logprob: -19.250158309936523
    8. ' ' → logprob: -19.750158309936523
    9. '(output' → logprob: -20.500158309936523
    10. '_output' → logprob: -21.500158309936523

Token 576: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: 0.0
    2. 'result' → logprob: -17.625
    3. '_results' → logprob: -18.0
    4. 'Result' → logprob: -18.0
    5. '_RESULT' → logprob: -18.25
    6. '_Result' → logprob: -19.25
    7. '_' → logprob: -19.875
    8. 's' → logprob: -20.125
    9. 'd' → logprob: -20.375
    10. '   ' → logprob: -21.5

Token 577: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.875
    3. ' (' → logprob: -17.75
    4. '```' → logprob: -21.25
    5. '(de' → logprob: -21.625
    6. '   ' → logprob: -21.75
    7. 'd' → logprob: -21.875
    8. '(
' → logprob: -22.0
    9. '(dist' → logprob: -22.125
    10. ',d' → logprob: -23.0

Token 578: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.137130498653278e-05
    2. '())' → logprob: -9.500081062316895
    3. ')
' → logprob: -12.250081062316895
    4. '()' → logprob: -14.000081062316895
    5. ')

' → logprob: -14.875081062316895
    6. ' )' → logprob: -14.875081062316895
    7. ')`' → logprob: -17.50008201599121
    8. '))' → logprob: -17.62508201599121
    9. '[])' → logprob: -17.75008201599121
    10. ')#' → logprob: -18.75008201599121

Token 579: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.9160102712921798e-05
    2. '```' → logprob: -11.000029563903809
    3. ' if' → logprob: -12.250029563903809
    4. '<|end|>' → logprob: -12.500029563903809
    5. '
' → logprob: -13.250029563903809
    6. 'main' → logprob: -13.500029563903809
    7. '#' → logprob: -15.250029563903809
    8. '\' → logprob: -16.000028610229492
    9. '  
' → logprob: -16.250028610229492
    10. 'If' → logprob: -16.500028610229492

Token 580: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2015521079301834
    2. ' __' → logprob: -1.701552152633667
    3. '_' → logprob: -9.076552391052246
    4. 'name' → logprob: -11.576552391052246
    5. '_name' → logprob: -12.201552391052246
    6. '___' → logprob: -12.201552391052246
    7. ' ' → logprob: -13.701552391052246
    8. 'Name' → logprob: -14.201552391052246
    9. ''' → logprob: -14.451552391052246
    10. 'if' → logprob: -14.701552391052246

Token 581: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.015374512411653996
    2. ' ==' → logprob: -4.515374660491943
    3. ' __' → logprob: -5.890374660491943
    4. '==' → logprob: -6.765374660491943
    5. '.__' → logprob: -8.140374183654785
    6. '__.' → logprob: -10.140374183654785
    7. '__.__' → logprob: -10.265374183654785
    8. '=="' → logprob: -12.015374183654785
    9. 'name' → logprob: -12.390374183654785
    10. 'main' → logprob: -13.140374183654785

Token 582: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.3557529857498594e-05
    2. '==' → logprob: -10.75002384185791
    3. '__.__' → logprob: -13.37502384185791
    4. ' ==' → logprob: -15.25002384185791
    5. '___' → logprob: -16.875022888183594
    6. '__('' → logprob: -17.125022888183594
    7. '____' → logprob: -17.125022888183594
    8. '__.' → logprob: -17.375022888183594
    9. 'name' → logprob: -18.000022888183594
    10. '=='' → logprob: -18.125022888183594

Token 583: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5678215026855469
    2. '==' → logprob: -1.0678215026855469
    3. ' ==' → logprob: -2.442821502685547
    4. '=="' → logprob: -6.067821502685547
    5. '=='' → logprob: -8.442821502685547
    6. '_' → logprob: -11.442821502685547
    7. '==
' → logprob: -11.692821502685547
    8. '=' → logprob: -12.192821502685547
    9. '__.__' → logprob: -12.692821502685547
    10. '___' → logprob: -12.692821502685547

Token 584: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5759590864181519
    2. ''' → logprob: -0.8259590864181519
    3. '__' → logprob: -11.325959205627441
    4. ' "__' → logprob: -12.200959205627441
    5. ' '__' → logprob: -13.075959205627441
    6. ''"' → logprob: -16.075958251953125
    7. '('__' → logprob: -16.200958251953125
    8. '"'' → logprob: -16.825958251953125
    9. 'main' → logprob: -16.825958251953125
    10. '   ' → logprob: -17.200958251953125

Token 585: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0008276138687506318
    2. '__' → logprob: -7.125827789306641
    3. 'name' → logprob: -10.87582778930664
    4. '_main' → logprob: -13.25082778930664
    5. '"' → logprob: -13.87582778930664
    6. '__":
' → logprob: -14.62582778930664
    7. 'm' → logprob: -15.37582778930664
    8. ' main' → logprob: -15.62582778930664
    9. 'built' → logprob: -16.50082778930664
    10. 'if' → logprob: -16.62582778930664

Token 586: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.006975602358579636
    2. '__' → logprob: -5.0069756507873535
    3. '__':
' → logprob: -8.256975173950195
    4. '__:' → logprob: -14.631975173950195
    5. '__
' → logprob: -15.506975173950195
    6. '__["' → logprob: -16.756975173950195
    7. '__.' → logprob: -17.006975173950195
    8. '_' → logprob: -17.256975173950195
    9. '__",' → logprob: -17.631975173950195
    10. '__
' → logprob: -17.756975173950195

Token 587: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0008049834286794066
    2. ' main' → logprob: -7.625804901123047
    3. '	main' → logprob: -8.250804901123047
    4. '   ' → logprob: -9.875804901123047
    5. '_main' → logprob: -13.000804901123047
    6. '__' → logprob: -13.250804901123047
    7. '    
' → logprob: -15.625804901123047
    8. '(main' → logprob: -16.500804901123047
    9. ' ' → logprob: -16.875804901123047
    10. '.main' → logprob: -17.625804901123047

Token 588: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -15.0
    3. '	main' → logprob: -19.25
    4. '   ' → logprob: -22.25
    5. '_main' → logprob: -23.0
    6. '.main' → logprob: -24.125
    7. '(main' → logprob: -24.625
    8. 'import' → logprob: -25.25
    9. 'Main' → logprob: -26.375
    10. 'mainwindow' → logprob: -28.25

Token 589: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 587
Tokens correctement prédits (1ère position, stricte): 259
Tokens correctement prédits (1ère position, avec adaptation): 286
Tokens correctement prédits (top 10): 518
Précision stricte (1ère position): 44.12%
Précision adaptée (1ère position): 48.72%
Précision (top 10): 88.25%
================================================================================
