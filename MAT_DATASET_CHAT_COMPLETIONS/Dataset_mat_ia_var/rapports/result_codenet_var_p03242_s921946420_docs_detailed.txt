================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def replace_1_and_9(s):
    """
    Remplace tous les caractères '1' par '9' et tous les caractères '9' par '1' dans la chaîne d'entrée.
    Les autres caractères ne sont pas modifiés.

    Ce remplacement s’effectue en trois étapes pour éviter les conflits lors du remplacement direct :
      1. On remplace temporairement chaque '9' par un caractère de secours ('q'),
         afin de ne pas mélanger les remplacements de '1' et de '9'.
      2. On remplace alors tous les '1' par '9'.
      3. Enfin, on remplace tous les caractères de secours 'q' par '1'.
    
    Args:
        s (str): La chaîne de caractères d'entrée.

    Returns:
        str: La chaîne résultante avec les remplacements effectués.
    """
    # Remplacement temporaire de tous les '9' par le caractère de secours 'q'
    temp = s.replace('9', 'q')
    # Remplacement de tous les '1' par '9'
    temp = temp.replace('1', '9')
    # Remplacement final de tous les 'q' par '1'
    result = temp.replace('q', '1')
    return result

# Lecture de l'entrée utilisateur
s = input()

# Application de la fonction de remplacement et affichage du résultat
ans = replace_1_and_9(s)
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' replace' (ID: 13284)
  → Token d'amorce (pas de prédiction)

Token 2: '_' (ID: 62)
  → Token d'amorce (pas de prédiction)

Token 3: '1' (ID: 16)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.4858531355857849
    2. 'word' → logprob: -2.1108531951904297
    3. '_' → logprob: -2.3608531951904297
    4. '(' → logprob: -2.4858531951904297
    5. 'substring' → logprob: -4.36085319519043
    6. 'all' → logprob: -4.48585319519043
    7. 'string' → logprob: -4.73585319519043
    8. 'name' → logprob: -4.73585319519043
    9. 'substr' → logprob: -4.98585319519043
    10. '```' → logprob: -5.11085319519043

Token 4: '_and' (ID: 18645)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02418159320950508
    2. '_' → logprob: -3.899181604385376
    3. '```' → logprob: -6.399181365966797
    4. 's' → logprob: -7.274181365966797
    5. '(:' → logprob: -8.899181365966797
    6. '(a' → logprob: -9.024181365966797
    7. '(_' → logprob: -9.024181365966797
    8. ')' → logprob: -9.149181365966797
    9. ''s' → logprob: -9.274181365966797
    10. ':' → logprob: -9.399181365966797

Token 5: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2914677858352661
    2. '0' → logprob: -1.5414677858352661
    3. '2' → logprob: -3.4164676666259766
    4. '```' → logprob: -5.666467666625977
    5. '(' → logprob: -7.166467666625977
    6. '_(' → logprob: -7.791467666625977
    7. 'def' → logprob: -8.166467666625977
    8. '1' → logprob: -9.041467666625977
    9. 'space' → logprob: -9.041467666625977
    10. '_space' → logprob: -9.166467666625977

Token 6: '9' (ID: 24)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2831419110298157
    2. '2' → logprob: -2.158141851425171
    3. 'l' → logprob: -2.283141851425171
    4. '_' → logprob: -4.15814208984375
    5. 'o' → logprob: -5.53314208984375
    6. 'O' → logprob: -6.03314208984375
    7. '1' → logprob: -6.03314208984375
    8. 'one' → logprob: -6.53314208984375
    9. 'i' → logprob: -6.78314208984375
    10. 'I' → logprob: -7.03314208984375

Token 7: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022426698356866837
    2. '():' → logprob: -3.8974266052246094
    3. '(:' → logprob: -6.522426605224609
    4. '(_:' → logprob: -9.02242660522461
    5. '(_' → logprob: -9.52242660522461
    6. '(a' → logprob: -10.02242660522461
    7. '_' → logprob: -10.02242660522461
    8. '(":' → logprob: -10.14742660522461
    9. '(x' → logprob: -10.52242660522461
    10. ':' → logprob: -11.27242660522461

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014208049513399601
    2. ')' → logprob: -4.26420783996582
    3. ':' → logprob: -10.13920783996582
    4. '):
' → logprob: -12.76420783996582
    5. ' ):' → logprob: -15.13920783996582
    6. ''):' → logprob: -15.13920783996582
    7. '[' → logprob: -15.63920783996582
    8. ')：' → logprob: -15.63920783996582
    9. ']:' → logprob: -16.01420783996582
    10. '):

' → logprob: -16.01420783996582

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16443346440792084
    2. ':' → logprob: -2.039433479309082
    3. '```' → logprob: -4.289433479309082
    4. '(' → logprob: -5.539433479309082
    5. '():' → logprob: -6.539433479309082
    6. ''' → logprob: -7.789433479309082
    7. ' ' → logprob: -8.164433479309082
    8. '_' → logprob: -8.414433479309082
    9. ' return' → logprob: -8.664433479309082
    10. ':return' → logprob: -8.789433479309082

Token 10: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.36760401725769043
    2. 'result' → logprob: -2.3676040172576904
    3. 'r' → logprob: -2.6176040172576904
    4. '   ' → logprob: -2.7426040172576904
    5. 's' → logprob: -3.4926040172576904
    6. ' return' → logprob: -4.2426042556762695
    7. ''''' → logprob: -4.9926042556762695
    8. '```' → logprob: -5.1176042556762695
    9. 'if' → logprob: -5.2426042556762695
    10. 'n' → logprob: -5.6176042556762695

Token 11: '   ' (ID: 271)
  Prédit: 'Re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: -0.4519941508769989
    2. 'Replace' → logprob: -1.0769941806793213
    3. '"""' → logprob: -4.451993942260742
    4. '   ' → logprob: -5.576993942260742
    5. '"""
' → logprob: -5.701993942260742
    6. 'Returns' → logprob: -6.576993942260742
    7. 'Return' → logprob: -7.701993942260742
    8. 'Remove' → logprob: -7.951993942260742
    9. ''''' → logprob: -8.326993942260742
    10. ' Re' → logprob: -8.326993942260742

Token 12: ' Rem' (ID: 6890)
  Prédit: 'Replace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Replace' → logprob: -0.4995317757129669
    2. 'Re' → logprob: -0.9995317459106445
    3. '   ' → logprob: -4.6245317459106445
    4. '"""
' → logprob: -4.9995317459106445
    5. '"""' → logprob: -5.6245317459106445
    6. 'if' → logprob: -6.3745317459106445
    7. 'Return' → logprob: -6.4995317459106445
    8. 'Returns' → logprob: -6.9995317459106445
    9. 'Remove' → logprob: -8.874531745910645
    10. ''''
' → logprob: -8.874531745910645

Token 13: 'place' (ID: 3243)
  Prédit: 'oves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oves' → logprob: -0.10032258182764053
    2. 'ove' → logprob: -2.3503224849700928
    3. '   ' → logprob: -9.350322723388672
    4. 'ov' → logprob: -11.475322723388672
    5. '```' → logprob: -12.225322723388672
    6. 'place' → logprob: -12.475322723388672
    7. 'oving' → logprob: -12.725322723388672
    8. 'o' → logprob: -13.350322723388672
    9. 'e' → logprob: -13.475322723388672
    10. 'ains' → logprob: -13.975322723388672

Token 14: ' tous' (ID: 10688)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9761971235275269
    2. ' les' → logprob: -1.2261971235275269
    3. 's' → logprob: -1.7261971235275269
    4. 'r' → logprob: -2.7261972427368164
    5. ' le' → logprob: -2.8511972427368164
    6. '```' → logprob: -4.726197242736816
    7. 'e' → logprob: -5.226197242736816
    8. '   ' → logprob: -5.976197242736816
    9. 'd' → logprob: -6.101197242736816
    10. ' '' → logprob: -6.351197242736816

Token 15: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.028198258951306343
    2. ' ' → logprob: -4.2781982421875
    3. 'les' → logprob: -4.9031982421875
    4. 's' → logprob: -5.5281982421875
    5. 'e' → logprob: -7.0281982421875
    6. 'es' → logprob: -7.9031982421875
    7. 'r' → logprob: -8.1531982421875
    8. '```' → logprob: -8.2781982421875
    9. ' le' → logprob: -8.4031982421875
    10. '  ' → logprob: -8.7781982421875

Token 16: ' caractères' (ID: 183106)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.140058696269989
    2. ' ' → logprob: -2.390058755874634
    3. ''' → logprob: -4.140058517456055
    4. '9' → logprob: -4.640058517456055
    5. ' '' → logprob: -4.765058517456055
    6. '"' → logprob: -6.640058517456055
    7. ''s' → logprob: -7.140058517456055
    8. '`' → logprob: -7.765058517456055
    9. '0' → logprob: -8.015058517456055
    10. ' espaces' → logprob: -8.390058517456055

Token 17: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.0859251022338867
    2. ''' → logprob: -1.2109251022338867
    3. '   ' → logprob: -1.9609251022338867
    4. ' ' → logprob: -2.3359251022338867
    5. ' par' → logprob: -2.4609251022338867
    6. 'par' → logprob: -4.710925102233887
    7. 's' → logprob: -4.835925102233887
    8. '```' → logprob: -5.085925102233887
    9. 'r' → logprob: -5.710925102233887
    10. 'e' → logprob: -5.960925102233887

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002649119414854795
    2. '9' → logprob: -9.250265121459961
    3. ''' → logprob: -9.375265121459961
    4. ' ' → logprob: -9.625265121459961
    5. ''s' → logprob: -12.500265121459961
    6. '```' → logprob: -12.500265121459961
    7. ' '' → logprob: -12.625265121459961
    8. 's' → logprob: -13.375265121459961
    9. '`' → logprob: -14.125265121459961
    10. '0' → logprob: -14.125265121459961

Token 19: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0005201471503823996
    2. 'et' → logprob: -8.375519752502441
    3. ' '' → logprob: -8.875519752502441
    4. 'par' → logprob: -9.750519752502441
    5. ''et' → logprob: -10.500519752502441
    6. ''s' → logprob: -10.750519752502441
    7. ' et' → logprob: -11.375519752502441
    8. 's' → logprob: -12.250519752502441
    9. '9' → logprob: -12.375519752502441
    10. ' par' → logprob: -12.500519752502441

Token 20: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.05381240323185921
    2. ' et' → logprob: -3.5538125038146973
    3. 'par' → logprob: -4.053812503814697
    4. ' by' → logprob: -6.053812503814697
    5. ' en' → logprob: -6.428812503814697
    6. ' ' → logprob: -7.303812503814697
    7. '   ' → logprob: -7.553812503814697
    8. 'et' → logprob: -7.803812503814697
    9. 'def' → logprob: -8.303812026977539
    10. ',' → logprob: -8.428812026977539

Token 21: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7284989953041077
    2. ' '' → logprob: -0.8534989953041077
    3. ' ' → logprob: -2.603498935699463
    4. '0' → logprob: -4.853498935699463
    5. '2' → logprob: -5.478498935699463
    6. '9' → logprob: -5.728498935699463
    7. ''s' → logprob: -7.353498935699463
    8. ''t' → logprob: -8.353499412536621
    9. ''un' → logprob: -8.478499412536621
    10. ''a' → logprob: -8.853499412536621

Token 22: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.322424054145813
    2. '0' → logprob: -1.322424054145813
    3. '7' → logprob: -5.947423934936523
    4. '2' → logprob: -5.947423934936523
    5. 'a' → logprob: -6.697423934936523
    6. ' ' → logprob: -7.072423934936523
    7. ''' → logprob: -7.322423934936523
    8. 'l' → logprob: -8.822423934936523
    9. 'x' → logprob: -8.947423934936523
    10. '_' → logprob: -9.072423934936523

Token 23: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0022344745229929686
    2. '"' → logprob: -6.25223445892334
    3. ''''' → logprob: -9.62723445892334
    4. '')' → logprob: -9.75223445892334
    5. ' '' → logprob: -10.12723445892334
    6. '"'' → logprob: -10.25223445892334
    7. ''"' → logprob: -10.50223445892334
    8. '"""' → logprob: -11.00223445892334
    9. '   ' → logprob: -11.00223445892334
    10. 'e' → logprob: -11.37723445892334

Token 24: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003051862120628357
    2. 'def' → logprob: -6.6280517578125
    3. ',' → logprob: -8.1280517578125
    4. '  ' → logprob: -8.1280517578125
    5. ' et' → logprob: -8.2530517578125
    6. '
' → logprob: -9.0030517578125
    7. '"""' → logprob: -9.1280517578125
    8. '```' → logprob: -9.2530517578125
    9. 's' → logprob: -9.3780517578125
    10. 'e' → logprob: -9.5030517578125

Token 25: ' tous' (ID: 10688)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2677927613258362
    2. ' rem' → logprob: -2.6427927017211914
    3. ' '' → logprob: -2.8927927017211914
    4. '    ' → logprob: -3.6427927017211914
    5. ' les' → logprob: -4.267792701721191
    6. ''' → logprob: -4.517792701721191
    7. 'rem' → logprob: -4.517792701721191
    8. ' ' → logprob: -4.767792701721191
    9. '9' → logprob: -4.767792701721191
    10. ''s' → logprob: -5.267792701721191

Token 26: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.022421108558773994
    2. 'les' → logprob: -3.89742112159729
    3. 's' → logprob: -7.147420883178711
    4. 'es' → logprob: -7.397420883178711
    5. ' ' → logprob: -9.272420883178711
    6. '   ' → logprob: -9.397420883178711
    7. '```' → logprob: -9.522420883178711
    8. 'Les' → logprob: -10.147420883178711
    9. '('' → logprob: -10.397420883178711
    10. '  ' → logprob: -10.522420883178711

Token 27: ' caractères' (ID: 183106)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5199639201164246
    2. 'car' → logprob: -1.1449639797210693
    3. ' '' → logprob: -2.8949639797210693
    4. '   ' → logprob: -4.51996374130249
    5. ' caractères' → logprob: -4.64496374130249
    6. ' ' → logprob: -6.14496374130249
    7. '9' → logprob: -6.14496374130249
    8. ' car' → logprob: -6.26996374130249
    9. ''autres' → logprob: -7.14496374130249
    10. 's' → logprob: -7.26996374130249

Token 28: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5766388773918152
    2. ''' → logprob: -0.8266388773918152
    3. 'def' → logprob: -8.451639175415039
    4. ' ' → logprob: -8.451639175415039
    5. '   ' → logprob: -9.326639175415039
    6. '9' → logprob: -10.451639175415039
    7. ' ' → logprob: -10.576639175415039
    8. '"' → logprob: -10.826639175415039
    9. 's' → logprob: -11.076639175415039
    10. '`' → logprob: -11.201639175415039

Token 29: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.10007250308990479
    2. ''' → logprob: -2.9750723838806152
    3. '1' → logprob: -3.9750723838806152
    4. ' ' → logprob: -3.9750723838806152
    5. '7' → logprob: -5.850072383880615
    6. '0' → logprob: -6.600072383880615
    7. ' '' → logprob: -7.475072383880615
    8. ''s' → logprob: -7.600072383880615
    9. '''' → logprob: -8.350072860717773
    10. '')' → logprob: -8.475072860717773

Token 30: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.003883796278387308
    2. ' par' → logprob: -6.2538838386535645
    3. ' '' → logprob: -6.7538838386535645
    4. 'par' → logprob: -7.2538838386535645
    5. 's' → logprob: -11.128883361816406
    6. '   ' → logprob: -11.628883361816406
    7. '"' → logprob: -12.003883361816406
    8. '''' → logprob: -12.253883361816406
    9. ' ' → logprob: -12.503883361816406
    10. '1' → logprob: -12.628883361816406

Token 31: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.01701776497066021
    2. 'par' → logprob: -4.142017841339111
    3. ''' → logprob: -7.517017841339111
    4. ' ' → logprob: -8.767017364501953
    5. '   ' → logprob: -9.017017364501953
    6. 's' → logprob: -9.267017364501953
    7. ' by' → logprob: -11.392017364501953
    8. ')' → logprob: -11.642017364501953
    9. 'def' → logprob: -12.267017364501953
    10. '	par' → logprob: -12.267017364501953

Token 32: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.012119904160499573
    2. ' '' → logprob: -4.512119770050049
    3. '1' → logprob: -7.012119770050049
    4. ' ' → logprob: -9.637120246887207
    5. '"' → logprob: -10.137120246887207
    6. 's' → logprob: -10.262120246887207
    7. ''un' → logprob: -11.762120246887207
    8. '`' → logprob: -11.887120246887207
    9. 'def' → logprob: -12.387120246887207
    10. ''s' → logprob: -12.887120246887207

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00593235157430172
    2. ''' → logprob: -5.130932331085205
    3. '"' → logprob: -12.755932807922363
    4. '```' → logprob: -15.755932807922363
    5. ' '' → logprob: -15.880932807922363
    6. ''s' → logprob: -16.130931854248047
    7. '`' → logprob: -16.380931854248047
    8. ' ' → logprob: -16.505931854248047
    9. 's' → logprob: -16.630931854248047
    10. ''''' → logprob: -17.505931854248047

Token 34: ''' (ID: 6)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09743709117174149
    2. '"""' → logprob: -3.0974371433258057
    3. '"""
' → logprob: -3.5974371433258057
    4. ''' → logprob: -3.9724371433258057
    5. '"
' → logprob: -7.972436904907227
    6. ''''
' → logprob: -8.097436904907227
    7. ''''' → logprob: -8.472436904907227
    8. ''
' → logprob: -8.847436904907227
    9. '   ' → logprob: -8.972436904907227
    10. '"'' → logprob: -9.972436904907227

Token 35: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16098421812057495
    2. '"""' → logprob: -2.4109842777252197
    3. '
' → logprob: -3.9109842777252197
    4. '"""
' → logprob: -4.160984039306641
    5. '\n' → logprob: -4.285984039306641
    6. '"' → logprob: -5.285984039306641
    7. '```' → logprob: -6.160984039306641
    8. '""' → logprob: -6.910984039306641
    9. '  ' → logprob: -8.53598403930664
    10. '"\' → logprob: -9.03598403930664

Token 36: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2099679857492447
    2. ' la' → logprob: -1.8349679708480835
    3. 's' → logprob: -3.709968090057373
    4. ' le' → logprob: -5.459968090057373
    5. '   ' → logprob: -7.209968090057373
    6. ' string' → logprob: -10.209967613220215
    7. ' ' → logprob: -10.334967613220215
    8. 'la' → logprob: -10.334967613220215
    9. 'le' → logprob: -10.459967613220215
    10. 'l' → logprob: -10.834967613220215

Token 37: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.3500114381313324
    2. '   ' → logprob: -1.6000114679336548
    3. 's' → logprob: -3.3500113487243652
    4. ' s' → logprob: -4.100011348724365
    5. ' chaine' → logprob: -4.100011348724365
    6. 'chaine' → logprob: -4.100011348724365
    7. ' ' → logprob: -5.350011348724365
    8. ' string' → logprob: -6.225011348724365
    9. ' phrase' → logprob: -6.725011348724365
    10. 'string' → logprob: -8.350011825561523

Token 38: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.11889055371284485
    2. '   ' → logprob: -3.4938905239105225
    3. '.' → logprob: -3.6188905239105225
    4. ' d' → logprob: -4.243890762329102
    5. ' s' → logprob: -4.493890762329102
    6. 'de' → logprob: -4.618890762329102
    7. 's' → logprob: -5.868890762329102
    8. 'def' → logprob: -5.993890762329102
    9. '"""' → logprob: -6.743890762329102
    10. 'e' → logprob: -6.868890762329102

Token 39: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.5832803845405579
    2. 'e' → logprob: -1.208280324935913
    3. 'es' → logprob: -2.458280324935913
    4. 'entrée' → logprob: -3.083280324935913
    5. 'é' → logprob: -6.083280563354492
    6. 's' → logprob: -6.458280563354492
    7. ' caractères' → logprob: -6.583280563354492
    8. 'u' → logprob: -6.958280563354492
    9. ''une' → logprob: -7.333280563354492
    10. 'ex' → logprob: -7.458280563354492

Token 40: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09233947843313217
    2. '.' → logprob: -3.467339515686035
    3. '"""' → logprob: -3.717339515686035
    4. '"""
' → logprob: -4.467339515686035
    5. '```' → logprob: -4.842339515686035
    6. 's' → logprob: -5.592339515686035
    7. '"' → logprob: -6.592339515686035
    8. '.
' → logprob: -6.842339515686035
    9. 'e' → logprob: -6.967339515686035
    10. '\n' → logprob: -7.092339515686035

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5511327385902405
    2. '"""' → logprob: -0.9261327385902405
    3. '"""
' → logprob: -4.051132678985596
    4. '```' → logprob: -5.676132678985596
    5. '"' → logprob: -5.926132678985596
    6. '""' → logprob: -6.926132678985596
    7. ' """' → logprob: -7.051132678985596
    8. '
' → logprob: -7.176132678985596
    9. ' """
' → logprob: -7.301132678985596
    10. '\n' → logprob: -7.926132678985596

Token 42: ' Les' (ID: 7029)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.47792133688926697
    2. '   ' → logprob: -1.1029213666915894
    3. '"""
' → logprob: -3.4779212474823
    4. '```' → logprob: -4.727921485900879
    5. '\n' → logprob: -5.852921485900879
    6. ' """' → logprob: -6.727921485900879
    7. '"' → logprob: -6.727921485900879
    8. '""' → logprob: -6.977921485900879
    9. '
' → logprob: -7.477921485900879
    10. ' """
' → logprob: -7.977921485900879

Token 43: ' autres' (ID: 18701)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45406001806259155
    2. '   ' → logprob: -1.2040600776672363
    3. 's' → logprob: -3.7040600776672363
    4. '  ' → logprob: -4.579060077667236
    5. ' s' → logprob: -5.329060077667236
    6. ' =' → logprob: -5.704060077667236
    7. 'def' → logprob: -6.204060077667236
    8. ' """' → logprob: -6.204060077667236
    9. 'a' → logprob: -6.329060077667236
    10. '_' → logprob: -6.454060077667236

Token 44: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.4629904627799988
    2. ' caractères' → logprob: -1.0879905223846436
    3. ' caract' → logprob: -4.7129902839660645
    4. ' car' → logprob: -4.7129902839660645
    5. 's' → logprob: -4.8379902839660645
    6. '_car' → logprob: -5.9629902839660645
    7. ' caracteres' → logprob: -6.0879902839660645
    8. 'c' → logprob: -6.7129902839660645
    9. 'Car' → logprob: -8.212990760803223
    10. ' c' → logprob: -8.337990760803223

Token 45: ' ne' (ID: 453)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.40076351165771484
    2. ' sont' → logprob: -1.6507635116577148
    3. '   ' → logprob: -2.775763511657715
    4. ' restent' → logprob: -3.150763511657715
    5. ' ' → logprob: -4.650763511657715
    6. ' s' → logprob: -4.775763511657715
    7. ' rest' → logprob: -5.525763511657715
    8. ' seront' → logprob: -6.025763511657715
    9. ' doivent' → logprob: -6.650763511657715
    10. ',' → logprob: -6.650763511657715

Token 46: ' sont' (ID: 5242)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28074485063552856
    2. 's' → logprob: -1.5307447910308838
    3. 'e' → logprob: -4.530745029449463
    4. ' sont' → logprob: -5.030745029449463
    5. 'ont' → logprob: -5.405745029449463
    6. ' doivent' → logprob: -6.405745029449463
    7. '```' → logprob: -6.780745029449463
    8. 'a' → logprob: -7.280745029449463
    9. 'u' → logprob: -7.655745029449463
    10. 'ch' → logprob: -7.780745029449463

Token 47: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.003936513792723417
    2. ' pas' → logprob: -5.628936290740967
    3. '   ' → logprob: -8.878936767578125
    4. 's' → logprob: -9.128936767578125
    5. '```' → logprob: -10.753936767578125
    6. '_pas' → logprob: -11.253936767578125
    7. '

' → logprob: -11.628936767578125
    8. '           ' → logprob: -11.753936767578125
    9. 'p' → logprob: -12.128936767578125
    10. ' ' → logprob: -12.378936767578125

Token 48: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.028895460069179535
    2. 'pas' → logprob: -4.028895378112793
    3. '   ' → logprob: -5.278895378112793
    4. ' mod' → logprob: -5.903895378112793
    5. 'chang' → logprob: -6.903895378112793
    6. 'touch' → logprob: -7.778895378112793
    7. 'rem' → logprob: -8.278895378112793
    8. '           ' → logprob: -8.528895378112793
    9. ' pas' → logprob: -8.903895378112793
    10. '       ' → logprob: -9.028895378112793

Token 49: 'ifiés' (ID: 95753)
  Prédit: 'ifiés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifiés' → logprob: -0.28413522243499756
    2. 'ifi' → logprob: -2.034135341644287
    3. 'ifié' → logprob: -2.409135341644287
    4. 'ifiée' → logprob: -4.409135341644287
    5. 'ifiées' → logprob: -4.409135341644287
    6. 'if' → logprob: -6.659135341644287
    7. 'i' → logprob: -7.159135341644287
    8. '```' → logprob: -9.159134864807129
    9. '   ' → logprob: -11.409134864807129
    10. 'IFI' → logprob: -11.409134864807129

Token 50: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9296691417694092
    2. '\n' → logprob: -0.9296691417694092
    3. '"""' → logprob: -2.054669141769409
    4. '.' → logprob: -3.429669141769409
    5. '```' → logprob: -4.304669380187988
    6. '"""
' → logprob: -4.929669380187988
    7. '\' → logprob: -5.179669380187988
    8. '
' → logprob: -5.429669380187988
    9. '"' → logprob: -5.554669380187988
    10. '""' → logprob: -5.929669380187988

Token 51: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.09301327168941498
    2. '   ' → logprob: -2.843013286590576
    3. '"""
' → logprob: -3.593013286590576
    4. '""' → logprob: -6.593013286590576
    5. '```' → logprob: -6.843013286590576
    6. '"' → logprob: -7.593013286590576
    7. ''''' → logprob: -10.343012809753418
    8. ' """' → logprob: -11.218012809753418
    9. ')' → logprob: -11.468012809753418
    10. ''''
' → logprob: -11.593012809753418

Token 52: ' Ce' (ID: 14228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3058443069458008
    2. '"""' → logprob: -1.4308443069458008
    3. '"""
' → logprob: -4.055844306945801
    4. '```' → logprob: -5.305844306945801
    5. '""' → logprob: -7.555844306945801
    6. 'for' → logprob: -7.680844306945801
    7. 's' → logprob: -8.4308443069458
    8. 'return' → logprob: -8.5558443069458
    9. ':param' → logprob: -8.8058443069458
    10. 'def' → logprob: -9.0558443069458

Token 53: ' remplacement' (ID: 113511)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33315491676330566
    2. ' ' → logprob: -2.5831549167633057
    3. 's' → logprob: -2.8331549167633057
    4. ' """' → logprob: -3.4581549167633057
    5. 'def' → logprob: -3.4581549167633057
    6. ' code' → logprob: -4.208154678344727
    7. ' ```' → logprob: -4.208154678344727
    8. ' def' → logprob: -4.708154678344727
    9. '```' → logprob: -5.083154678344727
    10. '  ' → logprob: -5.083154678344727

Token 54: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7419764995574951
    2. '   ' → logprob: -1.7419764995574951
    3. ' est' → logprob: -2.366976499557495
    4. '_' → logprob: -2.491976499557495
    5. ' des' → logprob: -2.491976499557495
    6. 's' → logprob: -3.241976499557495
    7. ' s' → logprob: -4.241976737976074
    8. ' de' → logprob: -4.616976737976074
    9. ' se' → logprob: -5.491976737976074
    10. '  ' → logprob: -5.991976737976074

Token 55: '’effect' (ID: 158954)
  Prédit: ''effect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''effect' → logprob: -0.011043352074921131
    2. 'e' → logprob: -4.886043548583984
    3. '’effect' → logprob: -6.511043548583984
    4. 'u' → logprob: -7.511043548583984
    5. 'effect' → logprob: -8.261043548583984
    6. ''' → logprob: -8.511043548583984
    7. ''ap' → logprob: -9.011043548583984
    8. ''é' → logprob: -9.261043548583984
    9. 'ur' → logprob: -9.386043548583984
    10. 't' → logprob: -9.511043548583984

Token 56: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0019048431422561407
    2. 'ué' → logprob: -6.3769049644470215
    3. 'u' → logprob: -9.001904487609863
    4. 'uera' → logprob: -11.001904487609863
    5. 'úe' → logprob: -11.001904487609863
    6. 'e' → logprob: -11.876904487609863
    7. 'uée' → logprob: -11.876904487609863
    8. 'ua' → logprob: -12.001904487609863
    9. 'uent' → logprob: -12.251904487609863
    10. 'uie' → logprob: -12.251904487609863

Token 57: ' en' (ID: 469)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -1.3442864418029785
    2. ' en' → logprob: -1.4692864418029785
    3. ' ' → logprob: -1.8442864418029785
    4. ' dans' → logprob: -2.9692864418029785
    5. 'dans' → logprob: -2.9692864418029785
    6. '.' → logprob: -3.0942864418029785
    7. 'e' → logprob: -3.4692864418029785
    8. ' uniquement' → logprob: -3.7192864418029785
    9. 'en' → logprob: -3.9692864418029785
    10. 'r' → logprob: -4.2192864418029785

Token 58: ' trois' (ID: 25564)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.546729564666748
    2. ' deux' → logprob: -1.296729564666748
    3. 'de' → logprob: -3.171729564666748
    4. ' respect' → logprob: -3.921729564666748
    5. 'util' → logprob: -4.421729564666748
    6. '```' → logprob: -4.796729564666748
    7. '   ' → logprob: -4.921729564666748
    8. 'cré' → logprob: -5.046729564666748
    9. ' ' → logprob: -5.296729564666748
    10. ' cré' → logprob: -5.421729564666748

Token 59: ' étapes' (ID: 96583)
  Prédit: ' étapes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étapes' → logprob: -0.399605929851532
    2. 'ét' → logprob: -1.2746059894561768
    3. 'e' → logprob: -3.6496059894561768
    4. 'et' → logprob: -5.524605751037598
    5. '_' → logprob: -5.774605751037598
    6. 's' → logprob: -5.774605751037598
    7. 'é' → logprob: -6.024605751037598
    8. '-' → logprob: -6.274605751037598
    9. 't' → logprob: -6.399605751037598
    10. ' temps' → logprob: -6.774605751037598

Token 60: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10081729292869568
    2. ':' → logprob: -2.8508172035217285
    3. ' :' → logprob: -4.2258172035217285
    4. '\n' → logprob: -4.4758172035217285
    5. '):' → logprob: -6.1008172035217285
    6. ':
' → logprob: -6.4758172035217285
    7. ')' → logprob: -6.4758172035217285
    8. '
' → logprob: -6.6008172035217285
    9. '```' → logprob: -6.7258172035217285
    10. '.' → logprob: -6.8508172035217285

Token 61: ' éviter' (ID: 64013)
  Prédit: ' éviter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -0.04389461502432823
    2. ' assurer' → logprob: -4.1688947677612305
    3. ' garantir' → logprob: -4.6688947677612305
    4. ' év' → logprob: -5.2938947677612305
    5. 'év' → logprob: -5.7938947677612305
    6. ' ev' → logprob: -5.9188947677612305
    7. '   ' → logprob: -6.5438947677612305
    8. ' préserver' → logprob: -7.5438947677612305
    9. '```' → logprob: -7.6688947677612305
    10. ' prévenir' → logprob: -7.7938947677612305

Token 62: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4518144428730011
    2. ' un' → logprob: -2.0768144130706787
    3. ' le' → logprob: -2.4518144130706787
    4. '   ' → logprob: -2.9518144130706787
    5. ' l' → logprob: -2.9518144130706787
    6. ' la' → logprob: -3.8268144130706787
    7. ' ' → logprob: -4.826814651489258
    8. ' des' → logprob: -5.076814651489258
    9. ' une' → logprob: -5.201814651489258
    10. ' d' → logprob: -6.826814651489258

Token 63: ' conflits' (ID: 196422)
  Prédit: ' conflits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conflits' → logprob: -0.02933603711426258
    2. ' collisions' → logprob: -4.529335975646973
    3. 'con' → logprob: -4.779335975646973
    4. ' conflit' → logprob: -5.404335975646973
    5. 'conf' → logprob: -6.154335975646973
    6. ' conf' → logprob: -6.779335975646973
    7. ' problèmes' → logprob: -7.654335975646973
    8. 'ambigu' → logprob: -8.154335975646973
    9. ' ambigu' → logprob: -8.404335975646973
    10. ' confl' → logprob: -8.654335975646973

Token 64: ' lors' (ID: 15456)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13157925009727478
    2. ' :' → logprob: -2.7565791606903076
    3. ':' → logprob: -4.256579399108887
    4. '.' → logprob: -4.381579399108887
    5. '```' → logprob: -4.881579399108887
    6. '"""' → logprob: -5.131579399108887
    7. ',' → logprob: -6.006579399108887
    8. '    
' → logprob: -6.256579399108887
    9. '  ' → logprob: -6.381579399108887
    10. 'def' → logprob: -6.506579399108887

Token 65: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.26476460695266724
    2. 'du' → logprob: -1.6397645473480225
    3. ' de' → logprob: -4.264764785766602
    4. '   ' → logprob: -4.264764785766602
    5. 'de' → logprob: -5.264764785766602
    6. 'd' → logprob: -6.014764785766602
    7. ' d' → logprob: -6.139764785766602
    8. ' des' → logprob: -8.389764785766602
    9. '```' → logprob: -9.014764785766602
    10. '    ' → logprob: -9.514764785766602

Token 66: ' remplacement' (ID: 113511)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.034093406051397324
    2. ' remplacement' → logprob: -3.5340933799743652
    3. ' rem' → logprob: -6.159093379974365
    4. 'é' → logprob: -7.409093379974365
    5. ' échange' → logprob: -7.784093379974365
    6. 'prem' → logprob: -8.034093856811523
    7. 's' → logprob: -8.284093856811523
    8. 'swap' → logprob: -9.284093856811523
    9. '```' → logprob: -9.534093856811523
    10. 'replace' → logprob: -9.784093856811523

Token 67: ' direct' (ID: 2823)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3227611780166626
    2. ' :' → logprob: -2.697761058807373
    3. '.' → logprob: -2.947761058807373
    4. ' :
' → logprob: -3.822761058807373
    5. ':' → logprob: -4.197761058807373
    6. '```' → logprob: -4.197761058807373
    7. ' de' → logprob: -4.322761058807373
    8. ':
' → logprob: -4.447761058807373
    9. ' tempora' → logprob: -4.572761058807373
    10. ' ' → logprob: -4.697761058807373

Token 68: ' ' (ID: 5310)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03146704286336899
    2. '.' → logprob: -4.281466960906982
    3. ' :' → logprob: -5.031466960906982
    4. ':' → logprob: -5.656466960906982
    5. '```' → logprob: -7.406466960906982
    6. ' ' → logprob: -7.531466960906982
    7. ' :
' → logprob: -7.531466960906982
    8. '"""' → logprob: -7.531466960906982
    9. '  ' → logprob: -7.781466960906982
    10. ',' → logprob: -7.781466960906982

Token 69: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017682626843452454
    2. '.' → logprob: -4.7676825523376465
    3. ':' → logprob: -5.6426825523376465
    4. ' :' → logprob: -6.2676825523376465
    5. ' ' → logprob: -7.3926825523376465
    6. ',' → logprob: -8.017683029174805
    7. '"""' → logprob: -8.017683029174805
    8. '```' → logprob: -8.017683029174805
    9. '    
' → logprob: -8.392683029174805
    10. '  ' → logprob: -8.392683029174805

Token 70: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01657666638493538
    2. '    ' → logprob: -4.766576766967773
    3. '"""' → logprob: -5.891576766967773
    4. '```' → logprob: -6.891576766967773
    5. ' """' → logprob: -7.266576766967773
    6. ' ' → logprob: -7.516576766967773
    7. '  ' → logprob: -8.016576766967773
    8. '"' → logprob: -8.016576766967773
    9. ' """
' → logprob: -8.266576766967773
    10. '    
' → logprob: -8.391576766967773

Token 71: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008505129255354404
    2. '"""' → logprob: -6.258505344390869
    3. '    ' → logprob: -6.758505344390869
    4. '"' → logprob: -6.883505344390869
    5. '"""
' → logprob: -6.883505344390869
    6. '    
' → logprob: -7.508505344390869
    7. '```' → logprob: -7.633505344390869
    8. ' ' → logprob: -7.758505344390869
    9. '1' → logprob: -8.008504867553711
    10. '
' → logprob: -8.258504867553711

Token 72: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009977530688047409
    2. '"' → logprob: -6.009977340698242
    3. '"""' → logprob: -6.259977340698242
    4. '
' → logprob: -6.384977340698242
    5. '    
' → logprob: -7.384977340698242
    6. '"""
' → logprob: -7.509977340698242
    7. '    ' → logprob: -7.759977340698242
    8. '```' → logprob: -8.009977340698242
    9. '#' → logprob: -8.259977340698242
    10. ' ' → logprob: -8.634977340698242

Token 73: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3820466101169586
    2. '   ' → logprob: -1.2570465803146362
    3. '    ' → logprob: -4.132046699523926
    4. ':' → logprob: -5.757046699523926
    5. ' ' → logprob: -5.757046699523926
    6. '-' → logprob: -6.132046699523926
    7. '  ' → logprob: -6.382046699523926
    8. ')' → logprob: -6.382046699523926
    9. ' ' → logprob: -7.382046699523926
    10. ' :' → logprob: -7.632046699523926

Token 74: ' On' (ID: 2160)
  Prédit: ' Util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Util' → logprob: -0.7631301283836365
    2. ' Rem' → logprob: -0.8881301283836365
    3. 'Util' → logprob: -3.1381301879882812
    4. 'Rem' → logprob: -3.7631301879882812
    5. 's' → logprob: -3.8881301879882812
    6. '   ' → logprob: -4.263130187988281
    7. ' s' → logprob: -5.638130187988281
    8. ' remplacer' → logprob: -5.888130187988281
    9. ' On' → logprob: -6.138130187988281
    10. 'util' → logprob: -6.763130187988281

Token 75: ' rem' (ID: 1662)
  Prédit: ' rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rem' → logprob: -0.2528817355632782
    2. 'rem' → logprob: -2.3778817653656006
    3. ' utilise' → logprob: -2.6278817653656006
    4. 'util' → logprob: -3.2528817653656006
    5. ' transforme' → logprob: -4.6278815269470215
    6. 'transform' → logprob: -6.5028815269470215
    7. 'convert' → logprob: -6.6278815269470215
    8. 's' → logprob: -6.8778815269470215
    9. ' convert' → logprob: -7.1278815269470215
    10. 'replace' → logprob: -7.5028815269470215

Token 76: 'place' (ID: 3243)
  Prédit: 'place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.035583849996328354
    2. 'p' → logprob: -3.660583734512329
    3. 'pla' → logprob: -5.410583972930908
    4. 'placement' → logprob: -6.285583972930908
    5. 'plac' → logprob: -7.160583972930908
    6. 'pl' → logprob: -7.535583972930908
    7. 'placer' → logprob: -7.910583972930908
    8. 'ap' → logprob: -8.03558349609375
    9. 'pace' → logprob: -8.78558349609375
    10. 'placements' → logprob: -8.78558349609375

Token 77: ' tempora' (ID: 117509)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.4173166751861572
    2. ' ' → logprob: -1.9173166751861572
    3. ' les' → logprob: -2.0423166751861572
    4. ''' → logprob: -3.2923166751861572
    5. 's' → logprob: -4.417316436767578
    6. ' tous' → logprob: -5.042316436767578
    7. 'les' → logprob: -6.167316436767578
    8. '   ' → logprob: -6.792316436767578
    9. ''s' → logprob: -7.042316436767578
    10. 't' → logprob: -7.292316436767578

Token 78: 'irement' (ID: 19343)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33877691626548767
    2. 'ora' → logprob: -3.0887768268585205
    3. ''' → logprob: -3.3387768268585205
    4. 'aire' → logprob: -3.4637768268585205
    5. 'p' → logprob: -3.5887768268585205
    6. 'iaire' → logprob: -4.2137770652771
    7. 'porary' → logprob: -4.2137770652771
    8. 'pora' → logprob: -4.4637770652771
    9. '_' → logprob: -4.5887770652771
    10. 'a' → logprob: -4.7137770652771

Token 79: ' chaque' (ID: 21194)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.393174946308136
    2. ''' → logprob: -1.5181748867034912
    3. ' les' → logprob: -2.643174886703491
    4. 'les' → logprob: -4.39317512512207
    5. ' tous' → logprob: -5.01817512512207
    6. 's' → logprob: -5.14317512512207
    7. ' ' → logprob: -5.89317512512207
    8. ''t' → logprob: -6.64317512512207
    9. 't' → logprob: -6.64317512512207
    10. '1' → logprob: -6.89317512512207

Token 80: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.3533669412136078
    2. ''' → logprob: -1.6033669710159302
    3. ' ' → logprob: -2.4783668518066406
    4. 's' → logprob: -4.978366851806641
    5. '1' → logprob: -5.978366851806641
    6. '9' → logprob: -6.853366851806641
    7. ''s' → logprob: -8.10336685180664
    8. ' ' → logprob: -8.10336685180664
    9. 'a' → logprob: -8.47836685180664
    10. '`' → logprob: -8.97836685180664

Token 81: '9' (ID: 24)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01980411447584629
    2. ''' → logprob: -4.644804000854492
    3. '9' → logprob: -4.644804000854492
    4. ' ' → logprob: -8.394804000854492
    5. ' '' → logprob: -10.019804000854492
    6. '<|end|>' → logprob: -10.519804000854492
    7. '_' → logprob: -11.269804000854492
    8. '"' → logprob: -11.519804000854492
    9. '')' → logprob: -11.769804000854492
    10. '`' → logprob: -11.769804000854492

Token 82: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03578101471066475
    2. ' par' → logprob: -3.410780906677246
    3. 'par' → logprob: -6.410780906677246
    4. ' '' → logprob: -9.160780906677246
    5. ''''' → logprob: -9.160780906677246
    6. '```' → logprob: -9.535780906677246
    7. ''s' → logprob: -9.660780906677246
    8. ' ' → logprob: -10.535780906677246
    9. '"' → logprob: -10.660780906677246
    10. 's' → logprob: -10.785780906677246

Token 83: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.011275818571448326
    2. 'par' → logprob: -4.511275768280029
    3. ' ' → logprob: -8.761276245117188
    4. ' by' → logprob: -9.886276245117188
    5. 's' → logprob: -13.011276245117188
    6. ' Par' → logprob: -13.136276245117188
    7. '	par' → logprob: -13.261276245117188
    8. ' dans' → logprob: -13.386276245117188
    9. ' '' → logprob: -13.636276245117188
    10. '  ' → logprob: -13.761276245117188

Token 84: ' un' (ID: 537)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.40227407217025757
    2. ' un' → logprob: -1.5272741317749023
    3. ' '#'' → logprob: -4.152274131774902
    4. ' '' → logprob: -4.277274131774902
    5. ''' → logprob: -4.402274131774902
    6. '_' → logprob: -4.527274131774902
    7. ' '_'' → logprob: -4.652274131774902
    8. ''a' → logprob: -4.652274131774902
    9. ' a' → logprob: -4.902274131774902
    10. 'un' → logprob: -5.027274131774902

Token 85: ' caractère' (ID: 80509)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.053329348564148
    2. 'car' → logprob: -1.803329348564148
    3. '\x' → logprob: -1.803329348564148
    4. '#' → logprob: -2.8033294677734375
    5. ''\' → logprob: -3.3033294677734375
    6. ''#' → logprob: -3.4283294677734375
    7. '\u' → logprob: -3.5533294677734375
    8. ''' → logprob: -3.5533294677734375
    9. '\t' → logprob: -4.1783294677734375
    10. '_car' → logprob: -4.5533294677734375

Token 86: ' de' (ID: 334)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -1.5032494068145752
    2. ' tempora' → logprob: -1.7532494068145752
    3. ' spécial' → logprob: -2.003249406814575
    4. '_' → logprob: -2.003249406814575
    5. 'sp' → logprob: -2.128249406814575
    6. 'inter' → logprob: -3.378249406814575
    7. '\x' → logprob: -4.128249168395996
    8. 'tmp' → logprob: -4.253249168395996
    9. '\' → logprob: -4.253249168395996
    10. ' unique' → logprob: -4.503249168395996

Token 87: ' secours' (ID: 169145)
  Prédit: ' remplacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remplacement' → logprob: -0.3965322971343994
    2. '_' → logprob: -3.1465322971343994
    3. 's' → logprob: -3.2715322971343994
    4. ' placeholder' → logprob: -4.02153205871582
    5. '```' → logprob: -4.14653205871582
    6. 'r' → logprob: -4.14653205871582
    7. 'temp' → logprob: -4.27153205871582
    8. 'car' → logprob: -4.52153205871582
    9. ' contrôle' → logprob: -4.52153205871582
    10. 'contr' → logprob: -4.52153205871582

Token 88: ' ('' (ID: 9906)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9000529050827026
    2. '`' → logprob: -2.275053024291992
    3. ' tempora' → logprob: -2.650053024291992
    4. ''\' → logprob: -2.775053024291992
    5. '   ' → logprob: -3.150053024291992
    6. ' ' → logprob: -3.150053024291992
    7. ' '\' → logprob: -3.275053024291992
    8. ''' → logprob: -3.525053024291992
    9. ' '_'' → logprob: -3.900053024291992
    10. ',' → logprob: -4.025053024291992

Token 89: 'q' (ID: 80)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20231446623802185
    2. '\x' → logprob: -2.2023143768310547
    3. '\t' → logprob: -3.9523143768310547
    4. '\u' → logprob: -4.702314376831055
    5. '§' → logprob: -4.702314376831055
    6. '_' → logprob: -5.327314376831055
    7. '*' → logprob: -5.452314376831055
    8. '' → logprob: -5.827314376831055
    9. '@' → logprob: -5.827314376831055
    10. '\xc2' → logprob: -5.952314376831055

Token 90: ''),
' (ID: 7239)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.28825458884239197
    2. 'ue' → logprob: -2.288254499435425
    3. 'u' → logprob: -2.663254499435425
    4. ''' → logprob: -3.538254499435425
    5. 'tmp' → logprob: -4.663254737854004
    6. '1' → logprob: -4.913254737854004
    7. '_' → logprob: -5.663254737854004
    8. 'temp' → logprob: -5.788254737854004
    9. '9' → logprob: -5.913254737854004
    10. ''),' → logprob: -6.538254737854004

Token 91: '        ' (ID: 269)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044156286865472794
    2. ' ' → logprob: -3.669156312942505
    3. '    ' → logprob: -5.044156074523926
    4. '     ' → logprob: -6.044156074523926
    5. '  ' → logprob: -6.294156074523926
    6. '2' → logprob: -6.544156074523926
    7. '`' → logprob: -7.294156074523926
    8. '    
' → logprob: -7.294156074523926
    9. ' ' → logprob: -7.544156074523926
    10. '
' → logprob: -7.794156074523926

Token 92: ' afin' (ID: 22217)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01415199227631092
    2. '    ' → logprob: -5.5141520500183105
    3. ' ' → logprob: -6.1391520500183105
    4. ' puis' → logprob: -6.3891520500183105
    5. 's' → logprob: -7.1391520500183105
    6. ' s' → logprob: -7.3891520500183105
    7. '  ' → logprob: -7.3891520500183105
    8. ')' → logprob: -7.7641520500183105
    9. ' afin' → logprob: -8.014151573181152
    10. '2' → logprob: -8.139151573181152

Token 93: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.21305765211582184
    2. 'de' → logprob: -2.96305775642395
    3. ' d' → logprob: -3.21305775642395
    4. '    ' → logprob: -3.33805775642395
    5. 'd' → logprob: -3.96305775642395
    6. '<|end|>' → logprob: -3.96305775642395
    7. ' que' → logprob: -4.338057518005371
    8. '   ' → logprob: -5.213057518005371
    9. ' ' → logprob: -5.463057518005371
    10. 'que' → logprob: -6.463057518005371

Token 94: ' ne' (ID: 453)
  Prédit: ' ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.8238081932067871
    2. 'ne' → logprob: -1.073808193206787
    3. ' éviter' → logprob: -2.198808193206787
    4. 'év' → logprob: -2.323808193206787
    5. 'pré' → logprob: -6.448808193206787
    6. 'pro' → logprob: -6.823808193206787
    7. ' pouvoir' → logprob: -6.948808193206787
    8. ' préserver' → logprob: -7.198808193206787
    9. 's' → logprob: -7.323808193206787
    10. '’éviter' → logprob: -7.448808193206787

Token 95: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.03377029672265053
    2. 'pas' → logprob: -3.4087703227996826
    3. ' ' → logprob: -10.033770561218262
    4. ' plus' → logprob: -10.533770561218262
    5. '   ' → logprob: -10.783770561218262
    6. ' perdre' → logprob: -11.783770561218262
    7. 'p' → logprob: -12.033770561218262
    8. '_pas' → logprob: -12.283770561218262
    9. '```' → logprob: -12.533770561218262
    10. 's' → logprob: -13.033770561218262

Token 96: ' mél' (ID: 50838)
  Prédit: 'conf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conf' → logprob: -0.6894730925559998
    2. 'per' → logprob: -1.5644731521606445
    3. ' perdre' → logprob: -1.9394731521606445
    4. 'con' → logprob: -3.4394731521606445
    5. 'pas' → logprob: -4.0644731521606445
    6. ' remplacer' → logprob: -4.0644731521606445
    7. ' conf' → logprob: -4.1894731521606445
    8. 'rem' → logprob: -4.3144731521606445
    9. 'modifier' → logprob: -4.9394731521606445
    10. 'changer' → logprob: -5.1894731521606445

Token 97: 'anger' (ID: 5249)
  Prédit: 'anger'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anger' → logprob: -0.008586321026086807
    2. '   ' → logprob: -5.758586406707764
    3. 'er' → logprob: -6.508586406707764
    4. '```' → logprob: -7.258586406707764
    5. '
' → logprob: -8.133585929870605
    6. 'ier' → logprob: -8.696085929870605
    7. '

' → logprob: -9.008585929870605
    8. 'ang' → logprob: -9.008585929870605
    9. '#' → logprob: -9.008585929870605
    10. '       ' → logprob: -9.196085929870605

Token 98: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.20019255578517914
    2. 's' → logprob: -2.325192451477051
    3. ' ' → logprob: -3.700192451477051
    4. ' '' → logprob: -4.075192451477051
    5. 'les' → logprob: -4.200192451477051
    6. ' s' → logprob: -4.450192451477051
    7. ' la' → logprob: -5.825192451477051
    8. ' le' → logprob: -5.950192451477051
    9. ' the' → logprob: -6.075192451477051
    10. ' tempora' → logprob: -6.825192451477051

Token 99: ' rem' (ID: 1662)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.45875978469848633
    2. '1' → logprob: -1.9587597846984863
    3. ' ' → logprob: -2.0837597846984863
    4. ''' → logprob: -3.8337597846984863
    5. '9' → logprob: -3.8337597846984863
    6. 's' → logprob: -3.9587597846984863
    7. ' caractères' → logprob: -4.333759784698486
    8. ' car' → logprob: -4.708759784698486
    9. 'car' → logprob: -5.083759784698486
    10. ''s' → logprob: -6.083759784698486

Token 100: 'placements' (ID: 72793)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4164080321788788
    2. 'pla' → logprob: -1.6664080619812012
    3. 'pl' → logprob: -3.041408061981201
    4. 'a' → logprob: -3.291408061981201
    5. 'plac' → logprob: -3.416408061981201
    6. 'placements' → logprob: -3.916408061981201
    7. 'placer' → logprob: -5.541408061981201
    8. 'placement' → logprob: -5.916408061981201
    9. '   ' → logprob: -6.791408061981201
    10. 'place' → logprob: -7.041408061981201

Token 101: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003629408311098814
    2. ' ' → logprob: -6.503629207611084
    3. '    ' → logprob: -7.253629207611084
    4. '     ' → logprob: -7.628629207611084
    5. ' avec' → logprob: -8.253629684448242
    6. '.' → logprob: -8.878629684448242
    7. '    
' → logprob: -8.878629684448242
    8. '  ' → logprob: -9.253629684448242
    9. '       ' → logprob: -9.878629684448242
    10. '        ' → logprob: -10.503629684448242

Token 102: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.924741268157959
    2. ''' → logprob: -1.424741268157959
    3. '1' → logprob: -1.924741268157959
    4. '9' → logprob: -2.299741268157959
    5. ' ' → logprob: -2.299741268157959
    6. 's' → logprob: -5.424741268157959
    7. ''s' → logprob: -5.674741268157959
    8. ''un' → logprob: -6.674741268157959
    9. '   ' → logprob: -7.049741268157959
    10. '`' → logprob: -7.299741268157959

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06298878788948059
    2. ''' → logprob: -3.562988758087158
    3. ' ' → logprob: -3.937988758087158
    4. '9' → logprob: -4.562988758087158
    5. ' '' → logprob: -6.062988758087158
    6. 's' → logprob: -8.562989234924316
    7. ''s' → logprob: -9.187989234924316
    8. '')' → logprob: -10.437989234924316
    9. '   ' → logprob: -10.687989234924316
    10. '"' → logprob: -11.375489234924316

Token 104: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.010909165255725384
    2. 's' → logprob: -6.010909080505371
    3. ' '' → logprob: -6.135909080505371
    4. ''s' → logprob: -6.260909080505371
    5. '')' → logprob: -6.385909080505371
    6. '')
' → logprob: -7.135909080505371
    7. '9' → logprob: -7.510909080505371
    8. 'et' → logprob: -7.510909080505371
    9. ' et' → logprob: -8.385909080505371
    10. 'e' → logprob: -9.010909080505371

Token 105: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1539269983768463
    2. ' et' → logprob: -3.0289270877838135
    3. ''' → logprob: -3.2789270877838135
    4. ' ' → logprob: -4.528926849365234
    5. ' '' → logprob: -4.778926849365234
    6. '     ' → logprob: -5.028926849365234
    7. 's' → logprob: -5.028926849365234
    8. 'et' → logprob: -5.153926849365234
    9. '    ' → logprob: -5.528926849365234
    10. '',' → logprob: -5.653926849365234

Token 106: ' de' (ID: 334)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.8442426323890686
    2. '        ' → logprob: -1.3442425727844238
    3. ''' → logprob: -1.8442425727844238
    4. ' de' → logprob: -2.719242572784424
    5. '   ' → logprob: -3.969242572784424
    6. '    ' → logprob: -4.094242572784424
    7. '9' → logprob: -4.344242572784424
    8. ' les' → logprob: -4.719242572784424
    9. ' ' → logprob: -5.094242572784424
    10. '       ' → logprob: -5.219242572784424

Token 107: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9169236421585083
    2. '9' → logprob: -1.0419236421585083
    3. ' '' → logprob: -1.9169236421585083
    4. ' ' → logprob: -2.4169235229492188
    5. 's' → logprob: -5.541923522949219
    6. ''s' → logprob: -5.916923522949219
    7. ''q' → logprob: -7.166923522949219
    8. '`' → logprob: -7.541923522949219
    9. '```' → logprob: -7.541923522949219
    10. ''l' → logprob: -7.916923522949219

Token 108: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.016864461824297905
    2. '1' → logprob: -4.89186429977417
    3. ''' → logprob: -5.51686429977417
    4. ' ' → logprob: -6.01686429977417
    5. 's' → logprob: -6.39186429977417
    6. 'q' → logprob: -8.016864776611328
    7. ' '' → logprob: -8.141864776611328
    8. '')' → logprob: -8.891864776611328
    9. '7' → logprob: -9.891864776611328
    10. 'a' → logprob: -10.141864776611328

Token 109: ''.
' (ID: 49980)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5738865733146667
    2. '')
' → logprob: -1.4488866329193115
    3. '')' → logprob: -2.1988866329193115
    4. ''' → logprob: -3.1988866329193115
    5. '').' → logprob: -4.073886394500732
    6. '').
' → logprob: -4.448886394500732
    7. ''):
' → logprob: -6.323886394500732
    8. ''
' → logprob: -6.448886394500732
    9. ')' → logprob: -6.448886394500732
    10. ''),' → logprob: -6.573886394500732

Token 110: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017658589640632272
    2. '
' → logprob: -7.376765727996826
    3. '    
' → logprob: -8.251766204833984
    4. '    ' → logprob: -8.251766204833984
    5. '\n' → logprob: -8.876766204833984
    6. '```' → logprob: -9.751766204833984
    7. 'def' → logprob: -10.001766204833984
    8. '\' → logprob: -10.126766204833984
    9. 's' → logprob: -10.126766204833984
    10. '       ' → logprob: -10.376766204833984

Token 111: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06783312559127808
    2. '     ' → logprob: -2.942833185195923
    3. '    ' → logprob: -4.442832946777344
    4. ' ' → logprob: -7.192832946777344
    5. '       ' → logprob: -9.317832946777344
    6. '2' → logprob: -9.817832946777344
    7. '        ' → logprob: -10.067832946777344
    8. '  ' → logprob: -10.317832946777344
    9. '      ' → logprob: -10.567832946777344
    10. '
' → logprob: -10.692832946777344

Token 112: '2' (ID: 17)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00572565570473671
    2. '    ' → logprob: -6.255725860595703
    3. ' ' → logprob: -6.505725860595703
    4. '     ' → logprob: -6.630725860595703
    5. '2' → logprob: -7.505725860595703
    6. '  ' → logprob: -8.755725860595703
    7. '       ' → logprob: -9.130725860595703
    8. '
' → logprob: -9.755725860595703
    9. '      ' → logprob: -10.380725860595703
    10. '1' → logprob: -11.255725860595703

Token 113: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028140286449342966
    2. '    ' → logprob: -6.627813816070557
    3. '.' → logprob: -6.877813816070557
    4. '     ' → logprob: -8.377814292907715
    5. ' ' → logprob: -9.002814292907715
    6. '  ' → logprob: -9.627814292907715
    7. '
' → logprob: -10.877814292907715
    8. '       ' → logprob: -12.127814292907715
    9. '    
' → logprob: -12.877814292907715
    10. '        ' → logprob: -13.002814292907715

Token 114: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40259459614753723
    2. 'On' → logprob: -1.6525945663452148
    3. ' On' → logprob: -2.277594566345215
    4. '    ' → logprob: -3.527594566345215
    5. ' on' → logprob: -5.152594566345215
    6. ' ' → logprob: -7.152594566345215
    7. 'on' → logprob: -7.652594566345215
    8. ' Ensuite' → logprob: -8.652594566345215
    9. ' ' → logprob: -8.777594566345215
    10. '  ' → logprob: -8.777594566345215

Token 115: ' rem' (ID: 1662)
  Prédit: ' rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rem' → logprob: -0.011779118329286575
    2. 'rem' → logprob: -4.636779308319092
    3. ' replace' → logprob: -6.511779308319092
    4. 'replace' → logprob: -7.886779308319092
    5. 's' → logprob: -10.136778831481934
    6. '   ' → logprob: -10.886778831481934
    7. ' replaces' → logprob: -10.886778831481934
    8. ' continue' → logprob: -11.261778831481934
    9. ' transforme' → logprob: -11.261778831481934
    10. ' ' → logprob: -11.386778831481934

Token 116: 'place' (ID: 3243)
  Prédit: 'place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.00031162876985035837
    2. 'p' → logprob: -8.625311851501465
    3. 'pl' → logprob: -10.375311851501465
    4. '_place' → logprob: -10.625311851501465
    5. 'pla' → logprob: -10.750311851501465
    6. 'placement' → logprob: -10.875311851501465
    7. 'placer' → logprob: -11.375311851501465
    8. 'plac' → logprob: -11.875311851501465
    9. 'plit' → logprob: -12.875311851501465
    10. 'ple' → logprob: -13.125311851501465

Token 117: ' alors' (ID: 17971)
  Prédit: ' tous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tous' → logprob: -0.45687735080718994
    2. ' chaque' → logprob: -1.33187735080719
    3. ' les' → logprob: -2.7068772315979004
    4. ' ' → logprob: -4.2068772315979
    5. '   ' → logprob: -4.8318772315979
    6. ' '' → logprob: -5.9568772315979
    7. '    ' → logprob: -6.2068772315979
    8. ' toutes' → logprob: -6.4568772315979
    9. 'les' → logprob: -6.5818772315979
    10. 's' → logprob: -6.8318772315979

Token 118: ' tous' (ID: 10688)
  Prédit: ' tous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tous' → logprob: -0.29604867100715637
    2. ' chaque' → logprob: -1.546048641204834
    3. ' les' → logprob: -3.421048641204834
    4. ' toutes' → logprob: -5.296048641204834
    5. ' ' → logprob: -6.296048641204834
    6. 'les' → logprob: -6.921048641204834
    7. 't' → logprob: -7.421048641204834
    8. 's' → logprob: -7.546048641204834
    9. '   ' → logprob: -8.046049118041992
    10. ' every' → logprob: -8.171049118041992

Token 119: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.05142440274357796
    2. 'les' → logprob: -3.051424503326416
    3. 's' → logprob: -6.426424503326416
    4. '('' → logprob: -7.551424503326416
    5. '   ' → logprob: -8.301424026489258
    6. ' ' → logprob: -8.426424026489258
    7. 'Les' → logprob: -9.926424026489258
    8. '  ' → logprob: -10.051424026489258
    9. '    ' → logprob: -10.551424026489258
    10. '(' → logprob: -10.926424026489258

Token 120: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.4617004096508026
    2. ''' → logprob: -1.211700439453125
    3. '1' → logprob: -2.836700439453125
    4. ' ' → logprob: -4.336700439453125
    5. 's' → logprob: -8.711700439453125
    6. ''s' → logprob: -9.711700439453125
    7. '  ' → logprob: -10.586700439453125
    8. '9' → logprob: -10.711700439453125
    9. '   ' → logprob: -10.711700439453125
    10. 'car' → logprob: -11.086700439453125

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.057743949990254e-05
    2. ' ' → logprob: -11.375020980834961
    3. ''' → logprob: -12.250020980834961
    4. '9' → logprob: -13.500020980834961
    5. 's' → logprob: -13.500020980834961
    6. ''s' → logprob: -14.125020980834961
    7. ' '' → logprob: -14.875020980834961
    8. '`' → logprob: -16.81252098083496
    9. '"' → logprob: -17.31252098083496
    10. '' → logprob: -17.43752098083496

Token 122: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0007417303277179599
    2. ' par' → logprob: -8.250741958618164
    3. 'par' → logprob: -8.875741958618164
    4. 's' → logprob: -9.000741958618164
    5. ' '' → logprob: -9.000741958618164
    6. ''s' → logprob: -9.500741958618164
    7. '   ' → logprob: -12.250741958618164
    8. ' ' → logprob: -12.625741958618164
    9. ''''' → logprob: -13.250741958618164
    10. '  ' → logprob: -13.500741958618164

Token 123: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.0023660168517380953
    2. 'par' → logprob: -6.127366065979004
    3. ' ' → logprob: -9.252366065979004
    4. 's' → logprob: -10.377366065979004
    5. ' s' → logprob: -10.377366065979004
    6. '   ' → logprob: -11.252366065979004
    7. '  ' → logprob: -13.252366065979004
    8. ' '' → logprob: -13.502366065979004
    9. ''' → logprob: -13.627366065979004
    10. ' by' → logprob: -13.627366065979004

Token 124: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09386471658945084
    2. ' '' → logprob: -2.468864679336548
    3. ' ' → logprob: -5.968864917755127
    4. 'des' → logprob: -6.718864917755127
    5. '9' → logprob: -7.593864917755127
    6. '"' → logprob: -8.218864440917969
    7. ' des' → logprob: -8.343864440917969
    8. 's' → logprob: -10.218864440917969
    9. ''s' → logprob: -11.218864440917969
    10. '`' → logprob: -11.718864440917969

Token 125: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.125000953674316
    3. ''' → logprob: -14.250000953674316
    4. '"' → logprob: -18.000001907348633
    5. ' '' → logprob: -19.125001907348633
    6. '')' → logprob: -19.125001907348633
    7. '   ' → logprob: -20.125001907348633
    8. '

' → logprob: -20.250001907348633
    9. ''s' → logprob: -20.375001907348633
    10. '９' → logprob: -20.625001907348633

Token 126: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1123218834400177
    2. ''.' → logprob: -2.8623218536376953
    3. ''
' → logprob: -3.7373218536376953
    4. ''.
' → logprob: -4.112321853637695
    5. ''s' → logprob: -5.987321853637695
    6. 'q' → logprob: -6.237321853637695
    7. 's' → logprob: -6.487321853637695
    8. '')
' → logprob: -7.237321853637695
    9. '
' → logprob: -7.487321853637695
    10. '',
' → logprob: -7.987321853637695

Token 127: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005805541295558214
    2. '
' → logprob: -8.000580787658691
    3. '    ' → logprob: -9.125580787658691
    4. '    
' → logprob: -9.875580787658691
    5. '     ' → logprob: -10.000580787658691
    6. ' ' → logprob: -11.125580787658691
    7. '  
' → logprob: -11.875580787658691
    8. '3' → logprob: -12.500580787658691
    9. '  ' → logprob: -13.000580787658691
    10. '```' → logprob: -13.000580787658691

Token 128: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017770467326045036
    2. '3' → logprob: -4.642770290374756
    3. ' ' → logprob: -5.767770290374756
    4. '    ' → logprob: -6.017770290374756
    5. '     ' → logprob: -6.517770290374756
    6. '
' → logprob: -7.392770290374756
    7. '  ' → logprob: -9.142770767211914
    8. '    
' → logprob: -9.142770767211914
    9. '     
' → logprob: -10.517770767211914
    10. '  
' → logprob: -11.142770767211914

Token 129: '3' (ID: 18)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003989720717072487
    2. '
' → logprob: -8.875398635864258
    3. ' ' → logprob: -9.250398635864258
    4. '    
' → logprob: -9.375398635864258
    5. '    ' → logprob: -10.625398635864258
    6. '     ' → logprob: -11.125398635864258
    7. '  ' → logprob: -11.375398635864258
    8. '  
' → logprob: -12.000398635864258
    9. 's' → logprob: -12.125398635864258
    10. '   
' → logprob: -12.500398635864258

Token 130: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004622968845069408
    2. '   ' → logprob: -5.379622936248779
    3. ' ' → logprob: -13.754623413085938
    4. '  ' → logprob: -14.379623413085938
    5. '    ' → logprob: -14.504623413085938
    6. ' .' → logprob: -15.379623413085938
    7. '     ' → logprob: -16.754623413085938
    8. ':' → logprob: -17.129623413085938
    9. '.
' → logprob: -17.379623413085938
    10. ',' → logprob: -17.379623413085938

Token 131: ' Enfin' (ID: 85274)
  Prédit: ' On'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' On' → logprob: -0.19168341159820557
    2. 'On' → logprob: -2.066683292388916
    3. '   ' → logprob: -3.441683292388916
    4. ' Ensuite' → logprob: -4.941683292388916
    5. '    ' → logprob: -5.566683292388916
    6. ' ' → logprob: -6.941683292388916
    7. 'Ens' → logprob: -6.941683292388916
    8. ' Enfin' → logprob: -7.066683292388916
    9. 'Enfin' → logprob: -7.691683292388916
    10. ' on' → logprob: -7.816683292388916

Token 132: ',' (ID: 11)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.08256294578313828
    2. '   ' → logprob: -2.9575629234313965
    3. 'on' → logprob: -4.4575629234313965
    4. ',' → logprob: -4.4575629234313965
    5. '    ' → logprob: -6.3325629234313965
    6. ' ' → logprob: -6.5825629234313965
    7. 'On' → logprob: -7.9575629234313965
    8. '  ' → logprob: -8.332563400268555
    9. ''on' → logprob: -9.082563400268555
    10. '	on' → logprob: -9.957563400268555

Token 133: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.35789740085601807
    2. '   ' → logprob: -2.1078972816467285
    3. 's' → logprob: -2.6078972816467285
    4. ' s' → logprob: -2.7328972816467285
    5. 'on' → logprob: -3.2328972816467285
    6. ' ' → logprob: -7.9828972816467285
    7. 'On' → logprob: -8.232897758483887
    8. '    ' → logprob: -8.482897758483887
    9. ' ' → logprob: -9.232897758483887
    10. 'def' → logprob: -9.357897758483887

Token 134: ' rem' (ID: 1662)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.1430305391550064
    2. ' rem' → logprob: -2.1430306434631348
    3. 'replace' → logprob: -4.143030643463135
    4. ' replace' → logprob: -9.768030166625977
    5. ' ' → logprob: -11.143030166625977
    6. '   ' → logprob: -11.518030166625977
    7. 're' → logprob: -11.518030166625977
    8. '  ' → logprob: -14.018030166625977
    9. '    ' → logprob: -14.268030166625977
    10. ' remplac' → logprob: -14.268030166625977

Token 135: 'place' (ID: 3243)
  Prédit: 'place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.0012618985492736101
    2. 'p' → logprob: -6.8762617111206055
    3. 'placement' → logprob: -10.126261711120605
    4. 'pla' → logprob: -10.126261711120605
    5. 'plit' → logprob: -10.251261711120605
    6. 'placer' → logprob: -10.376261711120605
    7. 'plac' → logprob: -11.126261711120605
    8. 'plate' → logprob: -11.376261711120605
    9. '_place' → logprob: -11.376261711120605
    10. 'pl' → logprob: -11.501261711120605

Token 136: ' tous' (ID: 10688)
  Prédit: ' tous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tous' → logprob: -0.4004404842853546
    2. ' le' → logprob: -1.9004404544830322
    3. ' les' → logprob: -1.9004404544830322
    4. ' toutes' → logprob: -3.9004404544830322
    5. ' ' → logprob: -5.275440692901611
    6. ' '' → logprob: -6.150440692901611
    7. 'le' → logprob: -7.275440692901611
    8. 'les' → logprob: -7.775440692901611
    9. ' chaque' → logprob: -7.900440692901611
    10. '   ' → logprob: -7.900440692901611

Token 137: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.0010756803676486015
    2. 'les' → logprob: -7.501075744628906
    3. '('' → logprob: -7.751075744628906
    4. ' ' → logprob: -10.751075744628906
    5. ' '' → logprob: -10.751075744628906
    6. ' le' → logprob: -10.876075744628906
    7. '   ' → logprob: -11.126075744628906
    8. 's' → logprob: -12.001075744628906
    9. 'Les' → logprob: -12.501075744628906
    10. '  ' → logprob: -14.001075744628906

Token 138: ' caractères' (ID: 183106)
  Prédit: ''q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''q' → logprob: -0.0018029843922704458
    2. 'q' → logprob: -6.751802921295166
    3. ' q' → logprob: -7.626802921295166
    4. ' '' → logprob: -9.376803398132324
    5. ''' → logprob: -10.001803398132324
    6. ''z' → logprob: -13.251803398132324
    7. ''s' → logprob: -13.376803398132324
    8. ' ' → logprob: -13.501803398132324
    9. 'car' → logprob: -13.626803398132324
    10. ''u' → logprob: -14.001803398132324

Token 139: ' de' (ID: 334)
  Prédit: ''q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''q' → logprob: -0.9747752547264099
    2. ' q' → logprob: -1.5997753143310547
    3. ' '' → logprob: -1.9747753143310547
    4. ' de' → logprob: -2.3497753143310547
    5. 'q' → logprob: -2.3497753143310547
    6. 'de' → logprob: -3.0997753143310547
    7. ''' → logprob: -3.2247753143310547
    8. 'temp' → logprob: -5.974775314331055
    9. ' ' → logprob: -7.349775314331055
    10. ''s' → logprob: -7.474775314331055

Token 140: ' secours' (ID: 169145)
  Prédit: 'sec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sec' → logprob: -0.5285056829452515
    2. ' secours' → logprob: -1.0285056829452515
    3. 'rem' → logprob: -3.403505802154541
    4. 'se' → logprob: -4.778505802154541
    5. ' remplacement' → logprob: -5.278505802154541
    6. 's' → logprob: -5.528505802154541
    7. 're' → logprob: -7.528505802154541
    8. ' sec' → logprob: -8.153505325317383
    9. 'replacement' → logprob: -8.153505325317383
    10. 'sé' → logprob: -8.403505325317383

Token 141: ' '' (ID: 461)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.0488497018814087
    2. ' par' → logprob: -1.1738497018814087
    3. ' '' → logprob: -2.048849582672119
    4. ' ('' → logprob: -2.173849582672119
    5. ''' → logprob: -3.048849582672119
    6. 'par' → logprob: -3.548849582672119
    7. '   ' → logprob: -5.673849582672119
    8. ' q' → logprob: -5.673849582672119
    9. ''q' → logprob: -5.798849582672119
    10. ' (' → logprob: -6.048849582672119

Token 142: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.008775527589023113
    2. ''q' → logprob: -4.75877571105957
    3. ' q' → logprob: -8.75877571105957
    4. ''' → logprob: -12.88377571105957
    5. '_q' → logprob: -14.38377571105957
    6. '	q' → logprob: -15.25877571105957
    7. ' '' → logprob: -16.13377571105957
    8. '$q' → logprob: -16.13377571105957
    9. '?q' → logprob: -16.88377571105957
    10. 'qu' → logprob: -17.00877571105957

Token 143: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00020914296328555793
    2. 'par' → logprob: -9.125208854675293
    3. ')'' → logprob: -10.000208854675293
    4. ' '' → logprob: -10.500208854675293
    5. ''''' → logprob: -12.250208854675293
    6. '')' → logprob: -12.625208854675293
    7. '’' → logprob: -12.875208854675293
    8. '('' → logprob: -12.875208854675293
    9. '"'' → logprob: -12.875208854675293
    10. ' par' → logprob: -13.250208854675293

Token 144: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.14318984746932983
    2. 'par' → logprob: -2.0181899070739746
    3. ' by' → logprob: -8.143189430236816
    4. ')' → logprob: -9.143189430236816
    5. ' ' → logprob: -9.518189430236816
    6. '   ' → logprob: -11.018189430236816
    7. 's' → logprob: -11.768189430236816
    8. 'def' → logprob: -12.393189430236816
    9. '```' → logprob: -12.893189430236816
    10. ',' → logprob: -13.518189430236816

Token 145: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009311757050454617
    2. ' '' → logprob: -4.884311676025391
    3. '1' → logprob: -6.634311676025391
    4. '   ' → logprob: -9.00931167602539
    5. '"' → logprob: -9.25931167602539
    6. 'def' → logprob: -9.88431167602539
    7. 'des' → logprob: -10.38431167602539
    8. ' ' → logprob: -10.63431167602539
    9. ''s' → logprob: -11.13431167602539
    10. 's' → logprob: -11.38431167602539

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014025058771949261
    2. ''' → logprob: -8.875140190124512
    3. '"' → logprob: -15.625140190124512
    4. ' ' → logprob: -15.750140190124512
    5. ''s' → logprob: -17.125141143798828
    6. 's' → logprob: -17.875141143798828
    7. '')' → logprob: -18.250141143798828
    8. ' '' → logprob: -18.250141143798828
    9. ''''' → logprob: -18.375141143798828
    10. '```' → logprob: -18.375141143798828

Token 147: ''.
' (ID: 49980)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.43966737389564514
    2. '".' → logprob: -2.0646674633026123
    3. '".
' → logprob: -2.6896674633026123
    4. '"""
' → logprob: -2.9396674633026123
    5. ''' → logprob: -3.0646674633026123
    6. '"
' → logprob: -4.064667224884033
    7. ''.
' → logprob: -4.564667224884033
    8. '   ' → logprob: -4.814667224884033
    9. '"""' → logprob: -4.939667224884033
    10. ''
' → logprob: -5.064667224884033

Token 148: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12712696194648743
    2. '"""' → logprob: -2.252126932144165
    3. '"""
' → logprob: -4.877127170562744
    4. '"' → logprob: -5.627127170562744
    5. '
' → logprob: -6.752127170562744
    6. ' """' → logprob: -7.877127170562744
    7. '""' → logprob: -8.002126693725586
    8. ')' → logprob: -8.252126693725586
    9. '```' → logprob: -8.252126693725586
    10. '\n' → logprob: -8.627126693725586

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009845215827226639
    2. '"""' → logprob: -4.63484525680542
    3. '"""
' → logprob: -10.009844779968262
    4. ' """' → logprob: -10.509844779968262
    5. 'def' → logprob: -12.134844779968262
    6. '```' → logprob: -12.384844779968262
    7. ' """
' → logprob: -12.884844779968262
    8. '""' → logprob: -13.009844779968262
    9. '    ' → logprob: -13.259844779968262
    10. '"' → logprob: -14.759844779968262

Token 150: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09195680171251297
    2. '"""' → logprob: -2.466956853866577
    3. '"""
' → logprob: -6.716956615447998
    4. 'def' → logprob: -6.966956615447998
    5. ' """' → logprob: -7.966956615447998
    6. '""' → logprob: -8.466957092285156
    7. '"' → logprob: -8.591957092285156
    8. ' """
' → logprob: -9.841957092285156
    9. '    ' → logprob: -10.716957092285156
    10. '```' → logprob: -11.216957092285156

Token 151: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4957343637943268
    2. '(s' → logprob: -1.2457343339920044
    3. ',' → logprob: -2.745734453201294
    4. '   ' → logprob: -3.745734453201294
    5. '):' → logprob: -5.120734214782715
    6. 's' → logprob: -5.620734214782715
    7. ' :' → logprob: -5.995734214782715
    8. '[s' → logprob: -7.495734214782715
    9. '(' → logprob: -7.620734214782715
    10. ')' → logprob: -7.870734214782715

Token 152: '       ' (ID: 309)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.033461835235357285
    2. '   ' → logprob: -3.533461809158325
    3. 's' → logprob: -6.033462047576904
    4. '    ' → logprob: -6.908462047576904
    5. ' string' → logprob: -8.408461570739746
    6. ' str' → logprob: -10.033461570739746
    7. ' self' → logprob: -11.158461570739746
    8. 'string' → logprob: -11.908461570739746
    9. '	s' → logprob: -12.408461570739746
    10. ' def' → logprob: -12.908461570739746

Token 153: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.055457282811403275
    2. ' s' → logprob: -3.180457353591919
    3. '   ' → logprob: -4.43045711517334
    4. 'self' → logprob: -7.80545711517334
    5. ' self' → logprob: -10.55545711517334
    6. 'str' → logprob: -11.18045711517334
    7. '       ' → logprob: -11.93045711517334
    8. '`s' → logprob: -12.43045711517334
    9. ' ' → logprob: -13.05545711517334
    10. ' str' → logprob: -13.18045711517334

Token 154: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010476546362042427
    2. '):' → logprob: -4.760476589202881
    3. ':str' → logprob: -6.760476589202881
    4. ' :' → logprob: -7.760476589202881
    5. ')' → logprob: -9.010476112365723
    6. '):
' → logprob: -9.135476112365723
    7. ' (' → logprob: -11.010476112365723
    8. '(str' → logprob: -11.010476112365723
    9. '   ' → logprob: -12.635476112365723
    10. '[str' → logprob: -13.135476112365723

Token 155: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -9.253090865968261e-06
    2. ' str' → logprob: -11.875009536743164
    3. 'string' → logprob: -13.500009536743164
    4. '[str' → logprob: -14.875009536743164
    5. ')' → logprob: -15.500009536743164
    6. '(str' → logprob: -16.500009536743164
    7. '```' → logprob: -17.125009536743164
    8. ':str' → logprob: -17.500009536743164
    9. '   ' → logprob: -17.750009536743164
    10. 'stri' → logprob: -18.500009536743164

Token 156: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.694690465927124
    2. '):' → logprob: -0.694690465927124
    3. '   ' → logprob: -6.694690704345703
    4. '):
' → logprob: -8.194690704345703
    5. ' ):' → logprob: -12.069690704345703
    6. '```' → logprob: -12.319690704345703
    7. ' )' → logprob: -12.569690704345703
    8. ' ' → logprob: -12.694690704345703
    9. ':' → logprob: -12.944690704345703
    10. '[str' → logprob: -13.319690704345703

Token 157: ' La' (ID: 3038)
  Prédit: ' La'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.3260035216808319
    2. 'La' → logprob: -1.8260035514831543
    3. '   ' → logprob: -2.4510035514831543
    4. ' str' → logprob: -4.076003551483154
    5. ' la' → logprob: -5.076003551483154
    6. '       ' → logprob: -5.576003551483154
    7. 'str' → logprob: -6.576003551483154
    8. ' chaîne' → logprob: -7.076003551483154
    9. '    ' → logprob: -7.826003551483154
    10. ' The' → logprob: -8.451003074645996

Token 158: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.06394591182470322
    2. 'cha' → logprob: -3.063946008682251
    3. 'chaine' → logprob: -4.813945770263672
    4. '   ' → logprob: -5.313945770263672
    5. ' chaine' → logprob: -6.563945770263672
    6. ' cha' → logprob: -7.438945770263672
    7. ' ' → logprob: -9.438945770263672
    8. '    ' → logprob: -10.688945770263672
    9. '  ' → logprob: -10.813945770263672
    10. 'str' → logprob: -11.063945770263672

Token 159: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.21044541895389557
    2. ' à' → logprob: -2.4604454040527344
    3. '   ' → logprob: -3.0854454040527344
    4. ' de' → logprob: -3.4604454040527344
    5. 'd' → logprob: -4.710445404052734
    6. ':' → logprob: -5.585445404052734
    7. ')' → logprob: -5.710445404052734
    8. ' str' → logprob: -5.710445404052734
    9. 'de' → logprob: -6.460445404052734
    10. 'str' → logprob: -6.585445404052734

Token 160: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.09277655929327011
    2. ' caractères' → logprob: -2.4677765369415283
    3. 'entrée' → logprob: -6.092776775360107
    4. 'texte' → logprob: -6.717776775360107
    5. ' caractère' → logprob: -9.96777629852295
    6. ' car' → logprob: -9.96777629852295
    7. ' caracteres' → logprob: -10.21777629852295
    8. 'chars' → logprob: -10.34277629852295
    9. 'char' → logprob: -10.59277629852295
    10. '   ' → logprob: -10.59277629852295

Token 161: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08342476189136505
    2. '   ' → logprob: -3.2084248065948486
    3. ' )' → logprob: -3.9584248065948486
    4. '):' → logprob: -4.4584245681762695
    5. ' d' → logprob: -5.8334245681762695
    6. ' à' → logprob: -5.8334245681762695
    7. '
' → logprob: -6.5834245681762695
    8. '):
' → logprob: -6.8334245681762695
    9. '       ' → logprob: -9.20842456817627
    10. 'd' → logprob: -9.58342456817627

Token 162: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.01565362885594368
    2. 'entrée' → logprob: -4.265653610229492
    3. '’entrée' → logprob: -7.140653610229492
    4. ' entrée' → logprob: -7.765653610229492
    5. ''origine' → logprob: -10.015653610229492
    6. 'onnée' → logprob: -10.140653610229492
    7. 'é' → logprob: -10.265653610229492
    8. 'e' → logprob: -10.515653610229492
    9. 'urée' → logprob: -11.140653610229492
    10. ')' → logprob: -11.515653610229492

Token 163: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6686316132545471
    2. ')' → logprob: -0.7936316132545471
    3. '):
' → logprob: -3.5436315536499023
    4. '):' → logprob: -5.668631553649902
    5. '
' → logprob: -6.043631553649902
    6. ')
' → logprob: -7.668631553649902
    7. '    
' → logprob: -9.793631553649902
    8. '):
' → logprob: -11.043631553649902
    9. '")' → logprob: -11.043631553649902
    10. ')->' → logprob: -11.043631553649902

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010061336681246758
    2. 'Returns' → logprob: -4.760061264038086
    3. '
' → logprob: -7.010061264038086
    4. '"""
' → logprob: -8.010061264038086
    5. ' Returns' → logprob: -9.635061264038086
    6. '    
' → logprob: -9.885061264038086
    7. '"""' → logprob: -10.010061264038086
    8. ')' → logprob: -10.635061264038086
    9. ' """
' → logprob: -11.760061264038086
    10. ')
' → logprob: -12.385061264038086

Token 165: ' Returns' (ID: 9609)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Returns' (adapté à ' Returns') → logprob: -0.0015911540249362588
    2. '   ' → logprob: -6.876591205596924
    3. ' Returns' → logprob: -7.876591205596924
    4. 'Retour' → logprob: -9.126590728759766
    5. 'returns' → logprob: -9.876590728759766
    6. 'Return' → logprob: -11.376590728759766
    7. '"""
' → logprob: -12.876590728759766
    8. 'return' → logprob: -13.626590728759766
    9. '"""' → logprob: -13.751590728759766
    10. ' returns' → logprob: -14.001590728759766

Token 166: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.308410108089447
    2. ':' → logprob: -1.6834101676940918
    3. ' (' → logprob: -3.558410167694092
    4. ':
' → logprob: -4.183410167694092
    5. ' str' → logprob: -4.308410167694092
    6. ' :' → logprob: -4.808410167694092
    7. '[str' → logprob: -5.808410167694092
    8. 's' → logprob: -5.933410167694092
    9. ':str' → logprob: -6.308410167694092
    10. '```' → logprob: -6.558410167694092

Token 167: '       ' (ID: 309)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.0036816708743572235
    2. '   ' → logprob: -5.878681659698486
    3. 'str' → logprob: -7.128681659698486
    4. '    ' → logprob: -9.628682136535645
    5. '       ' → logprob: -12.003682136535645
    6. '(str' → logprob: -14.128682136535645
    7. ' ' → logprob: -14.378682136535645
    8. '        ' → logprob: -15.003682136535645
    9. ' ' → logprob: -15.378682136535645
    10. ' (' → logprob: -15.378682136535645

Token 168: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -0.5759459733963013
    2. ' str' → logprob: -0.8259459733963013
    3. '   ' → logprob: -11.950945854187012
    4. '       ' → logprob: -17.325946807861328
    5. 'Str' → logprob: -17.325946807861328
    6. '(str' → logprob: -17.700946807861328
    7. '	str' → logprob: -17.950946807861328
    8. '[str' → logprob: -18.075946807861328
    9. '    ' → logprob: -18.700946807861328
    10. ' ' → logprob: -18.950946807861328

Token 169: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001468067930545658
    2. ' :' → logprob: -9.125146865844727
    3. '   ' → logprob: -11.125146865844727
    4. ':return' → logprob: -12.000146865844727
    5. ' ' → logprob: -12.250146865844727
    6. '):' → logprob: -12.375146865844727
    7. 'La' → logprob: -13.625146865844727
    8. '```' → logprob: -13.875146865844727
    9. '"""' → logprob: -14.125146865844727
    10. '[' → logprob: -14.375146865844727

Token 170: ' La' (ID: 3038)
  Prédit: ' La'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.4053184390068054
    2. 'La' → logprob: -1.1553184986114502
    3. '   ' → logprob: -4.155318260192871
    4. 'Une' → logprob: -7.030318260192871
    5. ' la' → logprob: -7.530318260192871
    6. ' Une' → logprob: -7.655318260192871
    7. '       ' → logprob: -8.280318260192871
    8. '    ' → logprob: -8.905318260192871
    9. ' Le' → logprob: -9.155318260192871
    10. 'Le' → logprob: -9.780318260192871

Token 171: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.025914251804351807
    2. 'cha' → logprob: -4.400914192199707
    3. ' nouvelle' → logprob: -5.525914192199707
    4. 'chaine' → logprob: -5.650914192199707
    5. '   ' → logprob: -5.775914192199707
    6. ' chaine' → logprob: -6.275914192199707
    7. ' ' → logprob: -8.275914192199707
    8. 's' → logprob: -8.900914192199707
    9. ' cha' → logprob: -9.150914192199707
    10. ' même' → logprob: -9.400914192199707

Token 172: ' résult' (ID: 31657)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.016193082556128502
    2. ' de' → logprob: -5.01619291305542
    3. '   ' → logprob: -5.64119291305542
    4. ' remplac' → logprob: -5.89119291305542
    5. ' où' → logprob: -6.89119291305542
    6. ' résult' → logprob: -7.14119291305542
    7. ' transform' → logprob: -7.76619291305542
    8. 'mod' → logprob: -7.76619291305542
    9. ' rem' → logprob: -9.141193389892578
    10. ' transformed' → logprob: -9.391193389892578

Token 173: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.003287751693278551
    2. '   ' → logprob: -6.6282877922058105
    3. 'ant' → logprob: -6.7532877922058105
    4. 'ée' → logprob: -7.5032877922058105
    5. 'at' → logprob: -8.628287315368652
    6. 'é' → logprob: -10.128287315368652
    7. 'e' → logprob: -11.753287315368652
    8. '       ' → logprob: -12.628287315368652
    9. 'nante' → logprob: -13.253287315368652
    10. '"""
' → logprob: -13.753287315368652

Token 174: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003436015686020255
    2. '    
' → logprob: -6.878436088562012
    3. '
' → logprob: -7.128436088562012
    4. ' s' → logprob: -8.003436088562012
    5. '       ' → logprob: -8.503436088562012
    6. ',' → logprob: -8.753436088562012
    7. ')' → logprob: -9.003436088562012
    8. '```' → logprob: -9.128436088562012
    9. ' mod' → logprob: -9.253436088562012
    10. ')
' → logprob: -9.628436088562012

Token 175: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.19378149509429932
    2. 'les' → logprob: -1.9437814950942993
    3. ' tous' → logprob: -3.6937813758850098
    4. ''' → logprob: -5.69378137588501
    5. 't' → logprob: -6.56878137588501
    6. ' '' → logprob: -6.69378137588501
    7. '1' → logprob: -7.56878137588501
    8. ' toutes' → logprob: -7.69378137588501
    9. 's' → logprob: -8.443781852722168
    10. ' ' → logprob: -8.943781852722168

Token 176: ' rem' (ID: 1662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.012969970703125
    2. '1' → logprob: -1.637969970703125
    3. ' caractères' → logprob: -1.887969970703125
    4. 'car' → logprob: -2.137969970703125
    5. ' '' → logprob: -2.387969970703125
    6. ' rem' → logprob: -3.887969970703125
    7. ' ' → logprob: -4.137969970703125
    8. '9' → logprob: -4.887969970703125
    9. ' car' → logprob: -4.887969970703125
    10. 'rem' → logprob: -5.012969970703125

Token 177: 'placements' (ID: 72793)
  Prédit: 'plac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plac' → logprob: -0.06777731329202652
    2. 'placements' → logprob: -3.192777395248413
    3. 'p' → logprob: -4.692777156829834
    4. 'pl' → logprob: -4.942777156829834
    5. 'placed' → logprob: -5.317777156829834
    6. 'placement' → logprob: -6.942777156829834
    7. 'pla' → logprob: -7.067777156829834
    8. 'place' → logprob: -7.692777156829834
    9. 'placer' → logprob: -8.192777633666992
    10. 'places' → logprob: -8.442777633666992

Token 178: ' effectu' (ID: 100880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7310463190078735
    2. ' effectu' → logprob: -0.7310463190078735
    3. ' souhait' → logprob: -3.856046199798584
    4. '.' → logprob: -4.856046199798584
    5. '```' → logprob: -6.231046199798584
    6. '"""' → logprob: -6.731046199798584
    7. '       ' → logprob: -6.981046199798584
    8. ' effectué' → logprob: -6.981046199798584
    9. '    ' → logprob: -7.481046199798584
    10. ' désir' → logprob: -7.606046199798584

Token 179: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0002314303710591048
    2. 'é' → logprob: -8.625231742858887
    3. 'ées' → logprob: -10.625231742858887
    4. 'es' → logprob: -11.125231742858887
    5. 'u' → logprob: -12.125231742858887
    6. 's' → logprob: -12.375231742858887
    7. '   ' → logprob: -13.500231742858887
    8. 'ÉS' → logprob: -14.125231742858887
    9. 'ès' → logprob: -14.875231742858887
    10. '```' → logprob: -15.250231742858887

Token 180: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07364092767238617
    2. '):
' → logprob: -2.823640823364258
    3. '.
' → logprob: -5.698640823364258
    4. ')' → logprob: -6.448640823364258
    5. '
' → logprob: -6.448640823364258
    6. '"""
' → logprob: -6.573640823364258
    7. '):' → logprob: -6.823640823364258
    8. ':
' → logprob: -6.948640823364258
    9. '.' → logprob: -7.323640823364258
    10. ')
' → logprob: -8.448640823364258

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006365985609591007
    2. '"""' → logprob: -5.506365776062012
    3. '
' → logprob: -6.256365776062012
    4. '"""
' → logprob: -8.506365776062012
    5. '```' → logprob: -9.881365776062012
    6. '    
' → logprob: -10.006365776062012
    7. '""' → logprob: -11.131365776062012
    8. 'def' → logprob: -11.256365776062012
    9. ' """' → logprob: -11.506365776062012
    10. '\n' → logprob: -11.631365776062012

Token 182: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09346535801887512
    2. '"""' → logprob: -2.5934653282165527
    3. '"""
' (adapté à ' """
') → logprob: -4.343465328216553
    4. '""' → logprob: -7.093465328216553
    5. ' """' → logprob: -8.343465805053711
    6. ' """
' → logprob: -8.593465805053711
    7. '
' → logprob: -9.593465805053711
    8. '"' → logprob: -10.093465805053711
    9. 'def' → logprob: -10.718465805053711
    10. ')' → logprob: -10.718465805053711

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3902033970225602e-05
    2. '
' → logprob: -12.000014305114746
    3. '    
' → logprob: -12.125014305114746
    4. 'return' → logprob: -13.625014305114746
    5. 'def' → logprob: -14.625014305114746
    6. ' return' → logprob: -14.875014305114746
    7. 's' → logprob: -16.50001335144043
    8. '```' → logprob: -16.75001335144043
    9. '   ' → logprob: -16.87501335144043
    10. '    ' → logprob: -17.62501335144043

Token 184: ' #' (ID: 1069)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.31274932622909546
    2. ' temp' → logprob: -1.9377493858337402
    3. '   ' → logprob: -3.3127493858337402
    4. 'tmp' → logprob: -3.4377493858337402
    5. 's' → logprob: -3.9377493858337402
    6. 'return' → logprob: -4.06274938583374
    7. 'result' → logprob: -4.68774938583374
    8. ' return' → logprob: -5.43774938583374
    9. ' s' → logprob: -6.31274938583374
    10. ' tmp' → logprob: -6.43774938583374

Token 185: ' Rem' (ID: 6890)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.3626956045627594
    2. ' temp' → logprob: -2.2376956939697266
    3. 's' → logprob: -2.6126956939697266
    4. 'tmp' → logprob: -2.8626956939697266
    5. 'result' → logprob: -3.8626956939697266
    6. '   ' → logprob: -3.8626956939697266
    7. ' s' → logprob: -4.737695693969727
    8. 'temporary' → logprob: -5.487695693969727
    9. ' tmp' → logprob: -5.737695693969727
    10. ' temporary' → logprob: -5.987695693969727

Token 186: 'placement' (ID: 17947)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.4453016519546509
    2. 'placer' → logprob: -1.0703016519546509
    3. '   ' → logprob: -4.320301532745361
    4. 'p' → logprob: -6.945301532745361
    5. 'pl' → logprob: -7.195301532745361
    6. 'placement' → logprob: -7.570301532745361
    7. 'plac' → logprob: -8.69530200958252
    8. 'pla' → logprob: -8.69530200958252
    9. ' place' → logprob: -8.82030200958252
    10. '_place' → logprob: -9.07030200958252

Token 187: ' tempora' (ID: 117509)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0791083350777626
    2. '   ' → logprob: -3.579108238220215
    3. 's' → logprob: -3.704108238220215
    4. '_temp' → logprob: -4.454108238220215
    5. '_s' → logprob: -5.579108238220215
    6. 'temp' → logprob: -5.954108238220215
    7. '=' → logprob: -6.329108238220215
    8. '_tmp' → logprob: -6.704108238220215
    9. '_' → logprob: -7.079108238220215
    10. '=s' → logprob: -7.704108238220215

Token 188: 'ire' (ID: 594)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2739361822605133
    2. 'aire' → logprob: -2.5239362716674805
    3. ' =' → logprob: -3.3989362716674805
    4. ' '' → logprob: -3.3989362716674805
    5. 'tmp' → logprob: -4.3989362716674805
    6. '       ' → logprob: -4.3989362716674805
    7. ' tempora' → logprob: -4.6489362716674805
    8. ''' → logprob: -4.7739362716674805
    9. 'naire' → logprob: -4.7739362716674805
    10. 'er' → logprob: -5.1489362716674805

Token 189: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38041698932647705
    2. 's' → logprob: -1.380416989326477
    3. '   ' → logprob: -3.2554168701171875
    4. '_s' → logprob: -4.0054168701171875
    5. ' s' → logprob: -6.6304168701171875
    6. 'temp' → logprob: -6.6304168701171875
    7. '=' → logprob: -6.6304168701171875
    8. '=s' → logprob: -6.7554168701171875
    9. '_temp' → logprob: -6.8804168701171875
    10. 'tmp' → logprob: -7.2554168701171875

Token 190: ' tous' (ID: 10688)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3121017813682556
    2. 's' → logprob: -2.0621018409729004
    3. ' '' → logprob: -2.5621018409729004
    4. ''s' → logprob: -3.6871018409729004
    5. ' s' → logprob: -4.4371018409729
    6. '9' → logprob: -4.5621018409729
    7. ' ' → logprob: -4.9371018409729
    8. 'les' → logprob: -5.6871018409729
    9. ' les' → logprob: -5.6871018409729
    10. '   ' → logprob: -6.3121018409729

Token 191: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.503806471824646
    2. ' '' → logprob: -1.378806471824646
    3. ' des' → logprob: -2.7538065910339355
    4. ''' → logprob: -3.5038065910339355
    5. '   ' → logprob: -3.8788065910339355
    6. '('' → logprob: -4.2538065910339355
    7. 'les' → logprob: -5.3788065910339355
    8. 's' → logprob: -6.0038065910339355
    9. ' tous' → logprob: -6.0038065910339355
    10. 'des' → logprob: -6.3788065910339355

Token 192: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.43312424421310425
    2. '9' → logprob: -1.058124303817749
    3. ' ' → logprob: -5.93312406539917
    4. ' '' → logprob: -6.55812406539917
    5. 's' → logprob: -9.308124542236328
    6. '"' → logprob: -9.683124542236328
    7. '`' → logprob: -9.808124542236328
    8. 'car' → logprob: -10.433124542236328
    9. '‘' → logprob: -11.183124542236328
    10. ' caractères' → logprob: -11.683124542236328

Token 193: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.000145137935760431
    2. ' ' → logprob: -9.000144958496094
    3. ''' → logprob: -10.750144958496094
    4. '   ' → logprob: -16.875144958496094
    5. ' '' → logprob: -17.000144958496094
    6. 's' → logprob: -17.375144958496094
    7. '۹' → logprob: -17.500144958496094
    8. ' neuf' → logprob: -17.500144958496094
    9. '```' → logprob: -17.625144958496094
    10. '`' → logprob: -18.000144958496094

Token 194: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0013844015775248408
    2. 's' → logprob: -6.876384258270264
    3. ''s' → logprob: -8.501384735107422
    4. ' '' → logprob: -9.626384735107422
    5. '   ' → logprob: -10.501384735107422
    6. ' par' → logprob: -10.501384735107422
    7. 'par' → logprob: -12.251384735107422
    8. ' s' → logprob: -12.626384735107422
    9. '"' → logprob: -12.751384735107422
    10. 'q' → logprob: -13.001384735107422

Token 195: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01543706376105547
    2. 's' → logprob: -4.765437126159668
    3. '=' → logprob: -5.515437126159668
    4. '=s' → logprob: -7.140437126159668
    5. '_par' → logprob: -7.890437126159668
    6. '_s' → logprob: -7.890437126159668
    7. ' par' → logprob: -8.015437126159668
    8. '   ' → logprob: -8.015437126159668
    9. ' s' → logprob: -8.640437126159668
    10. 'par' → logprob: -9.015437126159668

Token 196: ' le' (ID: 505)
  Prédit: ''q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''q' → logprob: -0.09262009710073471
    2. ' '' → logprob: -2.9676201343536377
    3. ''' → logprob: -3.9676201343536377
    4. ' q' → logprob: -4.217619895935059
    5. 'q' → logprob: -5.967619895935059
    6. ''un' → logprob: -7.717619895935059
    7. '"' → logprob: -8.467619895935059
    8. ''t' → logprob: -9.967619895935059
    9. '   ' → logprob: -10.092619895935059
    10. ' ' → logprob: -11.217619895935059

Token 197: ' caractère' (ID: 80509)
  Prédit: ''q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''q' → logprob: -0.09357164055109024
    2. 'q' → logprob: -3.218571662902832
    3. ' q' → logprob: -3.343571662902832
    4. ' '' → logprob: -4.843571662902832
    5. ''' → logprob: -5.593571662902832
    6. 'car' → logprob: -6.718571662902832
    7. ' caractère' → logprob: -7.593571662902832
    8. ' caract' → logprob: -8.343571662902832
    9. '"' → logprob: -9.593571662902832
    10. ''z' → logprob: -9.968571662902832

Token 198: ' de' (ID: 334)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.33384883403778076
    2. ' de' → logprob: -2.0838489532470703
    3. ''' → logprob: -2.8338489532470703
    4. ' '' → logprob: -3.3338489532470703
    5. 'q' → logprob: -3.4588489532470703
    6. ''q' → logprob: -3.5838489532470703
    7. 'de' → logprob: -5.83384895324707
    8. '_q' → logprob: -7.45884895324707
    9. ' tempora' → logprob: -7.58384895324707
    10. 's' → logprob: -7.83384895324707

Token 199: ' secours' (ID: 169145)
  Prédit: ' secours'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' secours' → logprob: -0.43793684244155884
    2. 'sec' → logprob: -1.062936782836914
    3. 's' → logprob: -5.312936782836914
    4. ' remplacement' → logprob: -6.187936782836914
    5. ' sec' → logprob: -7.187936782836914
    6. 'q' → logprob: -8.062936782836914
    7. 'sé' → logprob: -8.562936782836914
    8. 'se' → logprob: -8.687936782836914
    9. '```' → logprob: -8.937936782836914
    10. 'service' → logprob: -9.312936782836914

Token 200: ' '' (ID: 461)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.049257807433605194
    2. '   ' → logprob: -3.799257755279541
    3. 's' → logprob: -3.924257755279541
    4. ' =' → logprob: -5.299257755279541
    5. ' '' → logprob: -7.799257755279541
    6. ' q' → logprob: -8.7992582321167
    7. '    
' → logprob: -9.4242582321167
    8. '=s' → logprob: -9.6742582321167
    9. 'q' → logprob: -9.7992582321167
    10. '(s' → logprob: -10.5492582321167

Token 201: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00013274075172375888
    2. ' q' → logprob: -9.62513256072998
    3. ''q' → logprob: -9.62513256072998
    4. ''' → logprob: -14.50013256072998
    5. '	q' → logprob: -17.125133514404297
    6. '_q' → logprob: -17.750133514404297
    7. '`' → logprob: -17.875133514404297
    8. '"' → logprob: -18.500133514404297
    9. '?q' → logprob: -19.000133514404297
    10. '*q' → logprob: -19.375133514404297

Token 202: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02806161157786846
    2. ')
' → logprob: -4.153061389923096
    3. ')' → logprob: -4.903061389923096
    4. 's' → logprob: -5.778061389923096
    5. '')' → logprob: -7.778061389923096
    6. '')
' → logprob: -8.028061866760254
    7. ' ' → logprob: -8.778061866760254
    8. ' s' → logprob: -8.778061866760254
    9. ''
' → logprob: -9.278061866760254
    10. ''' → logprob: -9.653061866760254

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004580007400363684
    2. 's' → logprob: -5.754580020904541
    3. '
' → logprob: -7.379580020904541
    4. ' s' → logprob: -7.629580020904541
    5. '    
' → logprob: -8.254579544067383
    6. 'temp' → logprob: -11.379579544067383
    7. '    ' → logprob: -12.879579544067383
    8. 'tmp' → logprob: -12.879579544067383
    9. 'result' → logprob: -13.129579544067383
    10. '\n' → logprob: -13.254579544067383

Token 204: ' temp' (ID: 5484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23578453063964844
    2. ' s' → logprob: -2.2357845306396484
    3. 's' → logprob: -2.3607845306396484
    4. 'temp' (adapté à ' temp') → logprob: -5.485784530639648
    5. ' temp' → logprob: -5.985784530639648
    6. 'result' → logprob: -7.360784530639648
    7. ' return' → logprob: -7.860784530639648
    8. 'return' → logprob: -7.985784530639648
    9. 'tmp' → logprob: -8.110784530639648
    10. ' result' → logprob: -8.360784530639648

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010662222281098366
    2. '=' → logprob: -4.635662078857422
    3. 's' → logprob: -7.510662078857422
    4. '_s' → logprob: -8.510662078857422
    5. '=s' → logprob: -9.135662078857422
    6. '   ' → logprob: -10.760662078857422
    7. ' s' → logprob: -11.135662078857422
    8. '_' → logprob: -11.885662078857422
    9. ' ' → logprob: -12.885662078857422
    10. ' ' → logprob: -14.635662078857422

Token 206: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3133193850517273
    2. 's' → logprob: -1.313319444656372
    3. '   ' → logprob: -9.813319206237793
    4. ' ' → logprob: -13.938319206237793
    5. '(s' → logprob: -14.063319206237793
    6. '	s' → logprob: -14.438319206237793
    7. '_s' → logprob: -15.438319206237793
    8. '    ' → logprob: -16.31332015991211
    9. ''s' → logprob: -16.37582015991211
    10. '"s' → logprob: -16.56332015991211

Token 207: '.replace' (ID: 12804)
  Prédit: '.replace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.replace' → logprob: -3.011373155459296e-05
    2. '.' → logprob: -10.500030517578125
    3. 'replace' → logprob: -13.500030517578125
    4. '   ' → logprob: -13.875030517578125
    5. ' .' → logprob: -15.375030517578125
    6. '.Replace' → logprob: -17.125030517578125
    7. 'temp' → logprob: -19.750030517578125
    8. '_replace' → logprob: -20.250030517578125
    9. ' replace' → logprob: -20.875030517578125
    10. ').' → logprob: -21.000030517578125

Token 208: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -7.553032628493384e-05
    2. '(' → logprob: -10.125075340270996
    3. '("' → logprob: -10.250075340270996
    4. ''' → logprob: -18.000076293945312
    5. '("'' → logprob: -18.750076293945312
    6. '(('' → logprob: -19.000076293945312
    7. ' ('' → logprob: -19.375076293945312
    8. '()' → logprob: -19.750076293945312
    9. '(
' → logprob: -20.375076293945312
    10. '(\'' → logprob: -20.500076293945312

Token 209: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. ''' → logprob: -18.375
    4. '۹' → logprob: -21.875
    5. '９' → logprob: -22.75
    6. '९' → logprob: -23.0
    7. '৯' → logprob: -23.625
    8. '   ' → logprob: -23.75
    9. '99' → logprob: -24.0
    10. '٩' → logprob: -24.0

Token 210: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.000616889214143157
    2. '','' → logprob: -7.500617027282715
    3. ''' → logprob: -9.750617027282715
    4. ',' → logprob: -12.125617027282715
    5. '',"' → logprob: -16.0006160736084
    6. 'q' → logprob: -16.7506160736084
    7. ' ',' → logprob: -16.8756160736084
    8. '",' → logprob: -17.3756160736084
    9. '',
' → logprob: -17.7506160736084
    10. ','' → logprob: -17.8756160736084

Token 211: ' '' (ID: 461)
  Prédit: ''q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''q' → logprob: -0.0005480298423208296
    2. ' '' → logprob: -7.625547885894775
    3. ''' → logprob: -9.875548362731934
    4. 'q' → logprob: -12.125548362731934
    5. '"' → logprob: -13.250548362731934
    6. ' q' → logprob: -14.000548362731934
    7. '   ' → logprob: -16.000547409057617
    8. '?q' → logprob: -16.625547409057617
    9. ''s' → logprob: -16.625547409057617
    10. ' ' → logprob: -16.625547409057617

Token 212: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.692145012086257e-05
    2. ' q' → logprob: -10.000046730041504
    3. ''q' → logprob: -13.500046730041504
    4. '	q' → logprob: -17.62504768371582
    5. '_q' → logprob: -20.25004768371582
    6. '?q' → logprob: -20.75004768371582
    7. ''' → logprob: -21.12504768371582
    8. '*q' → logprob: -21.25004768371582
    9. '$q' → logprob: -21.50004768371582
    10. '.q' → logprob: -22.50004768371582

Token 213: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0017368246335536242
    2. ')' → logprob: -6.376736640930176
    3. '')
' → logprob: -10.501736640930176
    4. '   ' → logprob: -12.751736640930176
    5. ''' → logprob: -13.501736640930176
    6. '")' → logprob: -13.626736640930176
    7. '').' → logprob: -14.501736640930176
    8. '')"' → logprob: -15.001736640930176
    9. '')

' → logprob: -15.501736640930176
    10. ' ')' → logprob: -15.626736640930176

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25911104679107666
    2. '
' → logprob: -1.5091110467910767
    3. 'temp' → logprob: -5.009110927581787
    4. '    
' → logprob: -8.009111404418945
    5. ' temp' → logprob: -9.259111404418945
    6. '
' → logprob: -10.384111404418945
    7. '\n' → logprob: -12.134111404418945
    8. '  
' → logprob: -12.884111404418945
    9. 'tmp' → logprob: -13.009111404418945
    10. 'return' → logprob: -13.134111404418945

Token 215: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7813646197319031
    2. 'temp' → logprob: -0.7813646197319031
    3. ' temp' → logprob: -2.531364679336548
    4. '
' → logprob: -5.656364440917969
    5. 'result' → logprob: -6.906364440917969
    6. '    
' → logprob: -8.656364440917969
    7. ' result' → logprob: -9.031364440917969
    8. 'tmp' → logprob: -10.531364440917969
    9. 'new' → logprob: -10.656364440917969
    10. 's' → logprob: -11.406364440917969

Token 216: ' Rem' (ID: 6890)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.06628256291151047
    2. ' temp' → logprob: -2.8162825107574463
    3. 'result' → logprob: -5.941282749176025
    4. '   ' → logprob: -7.316282749176025
    5. '#' → logprob: -8.316282272338867
    6. ' result' → logprob: -8.816282272338867
    7. 'final' → logprob: -9.191282272338867
    8. 'replace' → logprob: -9.816282272338867
    9. 'new' → logprob: -9.941282272338867
    10. ' replaced' → logprob: -10.066282272338867

Token 217: 'placement' (ID: 17947)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.1431962549686432
    2. 'temp' → logprob: -2.2681963443756104
    3. 'placement' → logprob: -4.018196105957031
    4. 'placer' → logprob: -5.518196105957031
    5. 'plac' → logprob: -6.018196105957031
    6. 'pl' → logprob: -6.143196105957031
    7. '   ' → logprob: -6.518196105957031
    8. 'replace' → logprob: -7.393196105957031
    9. 'p' → logprob: -7.643196105957031
    10. 'pla' → logprob: -9.018196105957031

Token 218: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0753960609436035
    2. '_' → logprob: -1.4503960609436035
    3. 'des' → logprob: -1.7003960609436035
    4. '   ' → logprob: -2.2003960609436035
    5. ' de' → logprob: -2.8253960609436035
    6. 'temp' → logprob: -4.0753960609436035
    7. 'de' → logprob: -4.0753960609436035
    8. ' =' → logprob: -4.3253960609436035
    9. '    ' → logprob: -4.5753960609436035
    10. '_temp' → logprob: -5.4503960609436035

Token 219: ' tous' (ID: 10688)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.020269982516765594
    2. ' temp' → logprob: -4.145269870758057
    3. 't' → logprob: -5.770269870758057
    4. '1' → logprob: -8.145270347595215
    5. 'all' → logprob: -8.270270347595215
    6. ' all' → logprob: -9.020270347595215
    7. ' ' → logprob: -9.395270347595215
    8. ' tous' → logprob: -9.520270347595215
    9. 'tmp' → logprob: -9.770270347595215
    10. ''t' → logprob: -9.895270347595215

Token 220: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4598327577114105
    2. '('' → logprob: -1.209832787513733
    3. ' des' → logprob: -3.7098326683044434
    4. '   ' → logprob: -4.209832668304443
    5. 'les' → logprob: -4.709832668304443
    6. ' '' → logprob: -4.834832668304443
    7. 'des' → logprob: -5.084832668304443
    8. ''' → logprob: -6.084832668304443
    9. '  ' → logprob: -6.334832668304443
    10. ' ('' → logprob: -6.584832668304443

Token 221: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16382788121700287
    2. '1' → logprob: -1.913827896118164
    3. ' '' → logprob: -5.913827896118164
    4. ' ' → logprob: -7.038827896118164
    5. '   ' → logprob: -12.413827896118164
    6. '"' → logprob: -12.663827896118164
    7. '`' → logprob: -12.788827896118164
    8. ''s' → logprob: -12.788827896118164
    9. '('' → logprob: -13.288827896118164
    10. '  ' → logprob: -14.163827896118164

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015955790877342224
    2. ''' → logprob: -8.87515926361084
    3. ' ' → logprob: -10.87515926361084
    4. ''s' → logprob: -15.62515926361084
    5. '   ' → logprob: -15.75015926361084
    6. ' '' → logprob: -16.000160217285156
    7. 's' → logprob: -16.375160217285156
    8. '  ' → logprob: -17.000160217285156
    9. '`' → logprob: -17.125160217285156
    10. '')' → logprob: -17.125160217285156

Token 223: ''' (ID: 6)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0007948547718115151
    2. ''' → logprob: -7.250794887542725
    3. 's' → logprob: -10.000794410705566
    4. ''s' → logprob: -10.500794410705566
    5. '','' → logprob: -12.000794410705566
    6. '')' → logprob: -13.875794410705566
    7. ' ',' → logprob: -13.875794410705566
    8. '   ' → logprob: -14.000794410705566
    9. '1' → logprob: -14.375794410705566
    10. '",' → logprob: -14.500794410705566

Token 224: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.033096086233854294
    2. '   ' → logprob: -4.5330963134765625
    3. ',' → logprob: -4.9080963134765625
    4. ' by' → logprob: -5.2830963134765625
    5. 'par' → logprob: -5.7830963134765625
    6. 'temp' → logprob: -5.7830963134765625
    7. ' temp' → logprob: -6.0330963134765625
    8. ' ,' → logprob: -8.283096313476562
    9. '',' → logprob: -9.158096313476562
    10. 'by' → logprob: -9.533096313476562

Token 225: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5763339996337891
    2. ''' → logprob: -0.8263339996337891
    3. '9' → logprob: -8.076333999633789
    4. ' ' → logprob: -9.451333999633789
    5. '   ' → logprob: -12.826333999633789
    6. '('' → logprob: -13.201333999633789
    7. '`' → logprob: -16.07633399963379
    8. '"' → logprob: -16.32633399963379
    9. '  ' → logprob: -16.82633399963379
    10. '    ' → logprob: -16.95133399963379

Token 226: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.001185703556984663
    2. ''' → logprob: -6.751185894012451
    3. ' ' → logprob: -11.126185417175293
    4. '   ' → logprob: -15.126185417175293
    5. ' '' → logprob: -15.501185417175293
    6. '')' → logprob: -16.25118637084961
    7. '99' → logprob: -17.12618637084961
    8. '"' → logprob: -17.37618637084961
    9. '999' → logprob: -17.62618637084961
    10. '```' → logprob: -18.50118637084961

Token 227: ''
' (ID: 2207)
  Prédit: '')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.25334933400154114
    2. '')' → logprob: -1.5033493041992188
    3. '   ' → logprob: -7.003349304199219
    4. 'temp' → logprob: -8.253349304199219
    5. '')
' → logprob: -9.128349304199219
    6. ')' → logprob: -9.878349304199219
    7. ')
' → logprob: -10.503349304199219
    8. ''' → logprob: -10.753349304199219
    9. ' ')
' → logprob: -11.003349304199219
    10. '')

' → logprob: -12.003349304199219

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.622437059879303
    2. 'temp' → logprob: -0.872437059879303
    3. ' temp' → logprob: -3.122437000274658
    4. '
' → logprob: -6.622437000274658
    5. '    
' → logprob: -10.622437477111816
    6. 'result' → logprob: -11.497437477111816
    7. 'tmp' → logprob: -11.872437477111816
    8. '	temp' → logprob: -12.497437477111816
    9. ' result' → logprob: -13.872437477111816
    10. '(temp' → logprob: -14.622437477111816

Token 229: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.03972155228257179
    2. ' temp' → logprob: -3.2897214889526367
    3. 'result' → logprob: -6.789721488952637
    4. '   ' → logprob: -7.914721488952637
    5. 'new' → logprob: -9.914721488952637
    6. ' result' → logprob: -10.289721488952637
    7. 're' → logprob: -10.664721488952637
    8. 'tmp' → logprob: -10.664721488952637
    9. ' replaced' → logprob: -11.289721488952637
    10. 's' → logprob: -11.664721488952637

Token 230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975199744105339
    2. '=' → logprob: -3.529752016067505
    3. '.replace' → logprob: -13.529751777648926
    4. '=temp' → logprob: -15.654751777648926
    5. ' ' → logprob: -17.029752731323242
    6. '   ' → logprob: -17.154752731323242
    7. '.' → logprob: -17.279752731323242
    8. '.=' → logprob: -18.154752731323242
    9. '=re' → logprob: -18.279752731323242
    10. 'replace' → logprob: -19.529752731323242

Token 231: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.02975071594119072
    2. ' temp' → logprob: -3.5297508239746094
    3. 'tmp' → logprob: -15.77975082397461
    4. '	temp' → logprob: -17.40475082397461
    5. '   ' → logprob: -17.65475082397461
    6. '_temp' → logprob: -18.77975082397461
    7. '(temp' → logprob: -18.90475082397461
    8. 't' → logprob: -19.27975082397461
    9. 'tem' → logprob: -19.52975082397461
    10. '$temp' → logprob: -19.52975082397461

Token 232: '.replace' (ID: 12804)
  Prédit: '.replace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.replace' → logprob: -0.00010080150241265073
    2. '.' → logprob: -9.250101089477539
    3. ' .' → logprob: -12.500101089477539
    4. 'replace' → logprob: -13.875101089477539
    5. '.Replace' → logprob: -17.50010108947754
    6. '   ' → logprob: -17.62510108947754
    7. ' replace' → logprob: -19.25010108947754
    8. '_replace' → logprob: -20.00010108947754
    9. '.re' → logprob: -20.25010108947754
    10. ' ' → logprob: -21.12510108947754

Token 233: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -2.7848862373502925e-05
    2. '(' → logprob: -10.500027656555176
    3. '("' → logprob: -15.375027656555176
    4. ''' → logprob: -17.125028610229492
    5. '(
' → logprob: -18.875028610229492
    6. ' ('' → logprob: -19.000028610229492
    7. '(('' → logprob: -20.125028610229492
    8. ''s' → logprob: -20.375028610229492
    9. '('_' → logprob: -20.500028610229492
    10. '("'' → logprob: -20.625028610229492

Token 234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012570773833431304
    2. ''' → logprob: -9.000125885009766
    3. ' ' → logprob: -13.125125885009766
    4. '9' → logprob: -15.750125885009766
    5. '\'' → logprob: -16.250125885009766
    6. ' '' → logprob: -17.875125885009766
    7. '')' → logprob: -18.375125885009766
    8. '"' → logprob: -19.250125885009766
    9. '   ' → logprob: -19.250125885009766
    10. ''s' → logprob: -20.000125885009766

Token 235: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.000194361709873192
    2. ',' → logprob: -9.125194549560547
    3. ''' → logprob: -9.750194549560547
    4. '9' → logprob: -10.750194549560547
    5. '','' → logprob: -12.750194549560547
    6. ' ',' → logprob: -12.875194549560547
    7. '",' → logprob: -15.625194549560547
    8. '   ' → logprob: -17.375194549560547
    9. ''',' → logprob: -18.125194549560547
    10. ' ,' → logprob: -18.250194549560547

Token 236: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03378862142562866
    2. ' '' → logprob: -3.4087886810302734
    3. '9' → logprob: -8.908788681030273
    4. ' ' → logprob: -12.158788681030273
    5. '('' → logprob: -14.283788681030273
    6. '"' → logprob: -14.283788681030273
    7. ')' → logprob: -14.783788681030273
    8. '   ' → logprob: -14.908788681030273
    9. '')' → logprob: -15.283788681030273
    10. '`' → logprob: -16.033788681030273

Token 237: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.50001335144043
    3. ''' → logprob: -12.75001335144043
    4. '')' → logprob: -17.37501335144043
    5. ' '' → logprob: -19.50001335144043
    6. '   ' → logprob: -20.12501335144043
    7. '99' → logprob: -21.25001335144043
    8. '۹' → logprob: -21.25001335144043
    9. '"' → logprob: -21.50001335144043
    10. ' ')' → logprob: -21.62501335144043

Token 238: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.4949592649936676
    2. '')
' → logprob: -0.9949592351913452
    3. ')' → logprob: -3.9949593544006348
    4. ')
' → logprob: -6.619959354400635
    5. '   ' → logprob: -7.119959354400635
    6. ')')
' → logprob: -9.494958877563477
    7. '')
' → logprob: -10.494958877563477
    8. ' ')
' → logprob: -12.369958877563477
    9. ')'
' → logprob: -13.244958877563477
    10. '")' → logprob: -13.494958877563477

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06572815775871277
    2. 'temp' → logprob: -2.815728187561035
    3. '
' → logprob: -6.065728187561035
    4. ' temp' → logprob: -6.565728187561035
    5. '    
' → logprob: -11.690728187561035
    6. '	temp' → logprob: -12.190728187561035
    7. 'return' → logprob: -12.190728187561035
    8. ' ' → logprob: -13.690728187561035
    9. '  ' → logprob: -13.815728187561035
    10. '    ' → logprob: -14.065728187561035

Token 240: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5885738134384155
    2. 'temp' → logprob: -0.8385738134384155
    3. ' temp' → logprob: -4.588573932647705
    4. '
' → logprob: -6.088573932647705
    5. 'return' → logprob: -9.338573455810547
    6. ' return' → logprob: -11.713573455810547
    7. '    
' → logprob: -11.963573455810547
    8. '	temp' → logprob: -12.463573455810547
    9. '```' → logprob: -12.463573455810547
    10. ' ' → logprob: -13.213573455810547

Token 241: ' Rem' (ID: 6890)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.00884406827390194
    2. ' temp' → logprob: -5.133843898773193
    3. 'return' → logprob: -6.008843898773193
    4. '   ' → logprob: -7.883843898773193
    5. ' return' → logprob: -10.258844375610352
    6. 'result' → logprob: -10.508844375610352
    7. '#' → logprob: -12.633844375610352
    8. 'temps' → logprob: -12.633844375610352
    9. '
' → logprob: -13.008844375610352
    10. 'tmp' → logprob: -13.258844375610352

Token 242: 'placement' (ID: 17947)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.38115543127059937
    2. 'temp' → logprob: -1.3811554908752441
    3. 'placement' → logprob: -3.506155490875244
    4. 'placer' → logprob: -3.631155490875244
    5. 'p' → logprob: -5.256155490875244
    6. 'pl' → logprob: -6.006155490875244
    7. 'plac' → logprob: -7.131155490875244
    8. 'pal' → logprob: -9.131155014038086
    9. 'replace' → logprob: -9.256155014038086
    10. 'plement' → logprob: -9.631155014038086

Token 243: ' final' (ID: 1721)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25051993131637573
    2. 'temp' → logprob: -1.7505199909210205
    3. ' temp' → logprob: -3.2505199909210205
    4. ' de' → logprob: -5.500519752502441
    5. '(temp' → logprob: -6.000519752502441
    6. ' =' → logprob: -7.250519752502441
    7. '(' → logprob: -7.375519752502441
    8. '=' → logprob: -7.750519752502441
    9. 'de' → logprob: -8.375519752502441
    10. ' des' → logprob: -8.625519752502441

Token 244: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3925897479057312
    2. ' de' → logprob: -1.142589807510376
    3. 'de' → logprob: -6.017589569091797
    4. 'temp' → logprob: -6.267589569091797
    5. ' temp' → logprob: -6.767589569091797
    6. ' =' → logprob: -9.642589569091797
    7. ' des' → logprob: -9.767589569091797
    8. '(temp' → logprob: -10.642589569091797
    9. ' of' → logprob: -10.767589569091797
    10. '  ' → logprob: -11.142589569091797

Token 245: ' tous' (ID: 10688)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.021736837923526764
    2. ''t' → logprob: -4.7717366218566895
    3. ' temp' → logprob: -5.0217366218566895
    4. 't' → logprob: -5.6467366218566895
    5. ''q' → logprob: -6.3967366218566895
    6. 'q' → logprob: -7.1467366218566895
    7. ''' → logprob: -8.771737098693848
    8. 'temps' → logprob: -9.646737098693848
    9. ' q' → logprob: -9.646737098693848
    10. 'tout' → logprob: -9.896737098693848

Token 246: ' les' (ID: 1341)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.008406300097703934
    2. ' les' → logprob: -4.883406162261963
    3. 'les' → logprob: -8.258406639099121
    4. '(' → logprob: -9.008406639099121
    5. '(temp' → logprob: -9.258406639099121
    6. 'temp' → logprob: -9.508406639099121
    7. 's' → logprob: -9.633406639099121
    8. '   ' → logprob: -9.758406639099121
    9. '['' → logprob: -9.883406639099121
    10. ' ('' → logprob: -10.633406639099121

Token 247: ' '' (ID: 461)
  Prédit: ''q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''q' → logprob: -0.002190829487517476
    2. ''' → logprob: -6.627191066741943
    3. 'q' → logprob: -7.877191066741943
    4. ' '' → logprob: -8.377190589904785
    5. ' q' → logprob: -9.002190589904785
    6. 'temp' → logprob: -9.252190589904785
    7. ''t' → logprob: -10.377190589904785
    8. ' temp' → logprob: -12.877190589904785
    9. ' ' → logprob: -14.502190589904785
    10. ''s' → logprob: -14.877190589904785

Token 248: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2664456789934775e-06
    2. ''q' → logprob: -14.000000953674316
    3. ' q' → logprob: -14.875000953674316
    4. ''' → logprob: -18.625001907348633
    5. '	q' → logprob: -19.250001907348633
    6. '?q' → logprob: -19.500001907348633
    7. '9' → logprob: -19.875001907348633
    8. '   ' → logprob: -20.000001907348633
    9. ' ' → logprob: -20.375001907348633
    10. ''s' → logprob: -21.250001907348633

Token 249: ''' (ID: 6)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0007112398743629456
    2. ''' → logprob: -7.250711441040039
    3. '','' → logprob: -15.000711441040039
    4. '",' → logprob: -15.500711441040039
    5. '',
' → logprob: -15.625711441040039
    6. ' ',' → logprob: -16.12571144104004
    7. ',' → logprob: -16.37571144104004
    8. 's' → logprob: -16.62571144104004
    9. '')' → logprob: -16.62571144104004
    10. ''s' → logprob: -16.62571144104004

Token 250: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.13772760331630707
    2. 'temp' → logprob: -2.8877274990081787
    3. 'par' → logprob: -3.8877274990081787
    4. ' temp' → logprob: -4.137727737426758
    5. ' by' → logprob: -4.262727737426758
    6. ',' → logprob: -4.387727737426758
    7. ' =' → logprob: -5.012727737426758
    8. '   ' → logprob: -6.137727737426758
    9. '(temp' → logprob: -8.512727737426758
    10. '=temp' → logprob: -8.512727737426758

Token 251: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0004261468129698187
    2. ' '' → logprob: -7.875426292419434
    3. '('' → logprob: -10.125426292419434
    4. '1' → logprob: -12.750426292419434
    5. '   ' → logprob: -12.750426292419434
    6. ''s' → logprob: -16.875425338745117
    7. '`' → logprob: -17.000425338745117
    8. ' ' → logprob: -17.125425338745117
    9. '='' → logprob: -17.250425338745117
    10. '['' → logprob: -17.500425338745117

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001170225441455841
    2. ''' → logprob: -6.7511701583862305
    3. ' ' → logprob: -17.376171112060547
    4. ' '' → logprob: -17.626171112060547
    5. ''s' → logprob: -17.751171112060547
    6. '')' → logprob: -18.876171112060547
    7. '('' → logprob: -19.876171112060547
    8. '`' → logprob: -20.001171112060547
    9. 's' → logprob: -20.001171112060547
    10. '```' → logprob: -20.001171112060547

Token 253: ''
' (ID: 2207)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.16469547152519226
    2. '')
' → logprob: -1.9146955013275146
    3. ')' → logprob: -6.1646952629089355
    4. 'temp' → logprob: -6.7896952629089355
    5. '   ' → logprob: -6.9146952629089355
    6. ')
' → logprob: -8.789695739746094
    7. '")' → logprob: -10.039695739746094
    8. ''' → logprob: -10.914695739746094
    9. '")
' → logprob: -12.414695739746094
    10. 'return' → logprob: -12.539695739746094

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016672099009156227
    2. 'temp' → logprob: -4.266672134399414
    3. 'return' → logprob: -6.266672134399414
    4. ' temp' → logprob: -7.641672134399414
    5. ' return' → logprob: -9.141672134399414
    6. '
' → logprob: -10.891672134399414
    7. 'result' → logprob: -13.891672134399414
    8. '    
' → logprob: -16.141672134399414
    9. '```' → logprob: -16.266672134399414
    10. '_temp' → logprob: -17.516672134399414

Token 255: ' result' (ID: 1534)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.053299516439437866
    2. 'return' → logprob: -3.0532994270324707
    3. ' temp' → logprob: -5.803299427032471
    4. '   ' → logprob: -6.553299427032471
    5. ' return' → logprob: -8.553299903869629
    6. 'result' (adapté à ' result') → logprob: -9.678299903869629
    7. 'temps' → logprob: -14.303299903869629
    8. 'final' → logprob: -14.428299903869629
    9. 'tmp' → logprob: -14.678299903869629
    10. 'output' → logprob: -16.053298950195312

Token 256: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931474208831787
    2. ' =' → logprob: -0.6931474208831787
    3. 's' → logprob: -15.943147659301758
    4. ')' → logprob: -16.443147659301758
    5. '   ' → logprob: -18.318147659301758
    6. '.' → logprob: -18.443147659301758
    7. ' ' → logprob: -18.443147659301758
    8. '.=' → logprob: -19.068147659301758
    9. ',' → logprob: -19.193147659301758
    10. '=temp' → logprob: -19.318147659301758

Token 257: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.5759416818618774
    2. ' temp' → logprob: -0.8259416818618774
    3. '   ' → logprob: -13.575942039489746
    4. '	temp' → logprob: -15.200942039489746
    5. 'tmp' → logprob: -15.575942039489746
    6. '(temp' → logprob: -16.07594108581543
    7. '_temp' → logprob: -16.82594108581543
    8. '$temp' → logprob: -16.82594108581543
    9. ' ' → logprob: -16.95094108581543
    10. 'tem' → logprob: -17.07594108581543

Token 258: '.replace' (ID: 12804)
  Prédit: '.replace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.replace' → logprob: -0.0003377270477358252
    2. '.' → logprob: -8.000337600708008
    3. 'replace' → logprob: -13.375337600708008
    4. ' .' → logprob: -14.250337600708008
    5. '.Replace' → logprob: -17.500337600708008
    6. '   ' → logprob: -18.250337600708008
    7. '_replace' → logprob: -20.375337600708008
    8. ' replacing' → logprob: -20.500337600708008
    9. ' replace' → logprob: -20.750337600708008
    10. ' ' → logprob: -21.750337600708008

Token 259: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -6.988221684878226e-06
    2. '(' → logprob: -11.875006675720215
    3. ''' → logprob: -19.00000762939453
    4. '("' → logprob: -20.00000762939453
    5. '()' → logprob: -20.25000762939453
    6. '(('' → logprob: -20.25000762939453
    7. ''s' → logprob: -21.12500762939453
    8. '(
' → logprob: -21.50000762939453
    9. ' ('' → logprob: -21.50000762939453
    10. '(\'' → logprob: -21.87500762939453

Token 260: 'q' (ID: 80)
  Prédit: ''q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''q' → logprob: -0.38705044984817505
    2. 'q' → logprob: -1.1370503902435303
    3. ''' → logprob: -8.63705062866211
    4. ' q' → logprob: -13.88705062866211
    5. '1' → logprob: -14.01205062866211
    6. '	q' → logprob: -16.51205062866211
    7. '')' → logprob: -16.88705062866211
    8. '('' → logprob: -18.01205062866211
    9. ' '' → logprob: -18.13705062866211
    10. '$q' → logprob: -18.38705062866211

Token 261: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -4.23917081207037e-05
    2. ''' → logprob: -10.250041961669922
    3. ',' → logprob: -12.000041961669922
    4. '','' → logprob: -14.250041961669922
    5. '",' → logprob: -16.875041961669922
    6. ''',' → logprob: -17.250041961669922
    7. '',
' → logprob: -17.375041961669922
    8. ' ',' → logprob: -17.500041961669922
    9. ')',' → logprob: -18.750041961669922
    10. '')' → logprob: -18.875041961669922

Token 262: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0024763736873865128
    2. ' '' → logprob: -6.002476215362549
    3. '1' → logprob: -15.002476692199707
    4. '"' → logprob: -15.127476692199707
    5. '('' → logprob: -16.62747573852539
    6. ' ' → logprob: -17.12747573852539
    7. '   ' → logprob: -18.25247573852539
    8. ')' → logprob: -18.62747573852539
    9. '')' → logprob: -18.62747573852539
    10. '`' → logprob: -18.75247573852539

Token 263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ''' → logprob: -10.250035285949707
    3. '9' → logprob: -16.500036239624023
    4. ' ' → logprob: -18.000036239624023
    5. '')' → logprob: -18.875036239624023
    6. '"' → logprob: -22.000036239624023
    7. '```' → logprob: -22.125036239624023
    8. '`' → logprob: -22.250036239624023
    9. ''s' → logprob: -22.250036239624023
    10. ' '' → logprob: -22.500036239624023

Token 264: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.31644731760025024
    2. ')' → logprob: -1.3164472579956055
    3. '')
' → logprob: -6.0664472579956055
    4. ')
' → logprob: -7.0664472579956055
    5. '")' → logprob: -12.566447257995605
    6. ''' → logprob: -13.066447257995605
    7. ')'' → logprob: -14.191447257995605
    8. ')'
' → logprob: -14.691447257995605
    9. '   ' → logprob: -14.941447257995605
    10. ' )' → logprob: -15.441447257995605

Token 265: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00028851060778833926
    2. 'return' → logprob: -8.625288963317871
    3. '
' → logprob: -9.750288963317871
    4. ' return' → logprob: -10.000288963317871
    5. '    
' → logprob: -12.500288963317871
    6. '	return' → logprob: -13.625288963317871
    7. '```' → logprob: -17.000288009643555
    8. '\n' → logprob: -17.250288009643555
    9. '       ' → logprob: -17.375288009643555
    10. '  ' → logprob: -17.750288009643555

Token 266: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005294357892125845
    2. 'return' (adapté à ' return') → logprob: -5.255294322967529
    3. ' return' → logprob: -9.755294799804688
    4. '
' → logprob: -13.505294799804688
    5. '	return' → logprob: -14.130294799804688
    6. '    
' → logprob: -14.630294799804688
    7. '```' → logprob: -17.255294799804688
    8. ':return' → logprob: -17.255294799804688
    9. '{return' → logprob: -17.505294799804688
    10. '       ' → logprob: -18.005294799804688

Token 267: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.03804149478673935
    2. ' result' → logprob: -3.288041591644287
    3. '(result' → logprob: -18.038042068481445
    4. '	result' → logprob: -20.663042068481445
    5. '_result' → logprob: -21.288042068481445
    6. '[result' → logprob: -21.913042068481445
    7. 'Result' → logprob: -22.163042068481445
    8. '=result' → logprob: -22.663042068481445
    9. 'results' → logprob: -23.038042068481445
    10. ' ' → logprob: -23.038042068481445

Token 268: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 270: ' Lecture' (ID: 106534)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5591059327125549
    2. '#' → logprob: -1.5591058731079102
    3. 'def' → logprob: -2.55910587310791
    4. 'r' → logprob: -2.80910587310791
    5. '```' → logprob: -3.55910587310791
    6. '[' → logprob: -4.55910587310791
    7. 'e' → logprob: -4.55910587310791
    8. 'a' → logprob: -4.55910587310791
    9. '(' → logprob: -5.80910587310791
    10. ')' → logprob: -5.93410587310791

Token 271: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5150501728057861
    2. 's' → logprob: -1.2650501728057861
    3. '()' → logprob: -2.640050172805786
    4. '_' → logprob: -3.515050172805786
    5. 'input' → logprob: -4.390049934387207
    6. '(
' → logprob: -6.015049934387207
    7. ' =' → logprob: -7.015049934387207
    8. '(s' → logprob: -7.140049934387207
    9. 'n' → logprob: -7.765049934387207
    10. '(input' → logprob: -8.140049934387207

Token 272: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.025202739983797073
    2. ' ' → logprob: -4.025202751159668
    3. 'input' → logprob: -5.650202751159668
    4. ' la' → logprob: -6.650202751159668
    5. ' l' → logprob: -7.025202751159668
    6. 's' → logprob: -7.775202751159668
    7. '_' → logprob: -7.775202751159668
    8. ' s' → logprob: -9.400202751159668
    9. ' une' → logprob: -9.525202751159668
    10. ' user' → logprob: -10.150202751159668

Token 273: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.42149731516838074
    2. ''entrée' → logprob: -1.5464973449707031
    3. 'input' → logprob: -2.796497344970703
    4. 'e' → logprob: -3.296497344970703
    5. 'entrée' → logprob: -3.546497344970703
    6. 'import' → logprob: -6.421497344970703
    7. ' input' → logprob: -7.546497344970703
    8. ''' → logprob: -7.796497344970703
    9. 's' → logprob: -8.046497344970703
    10. 'ent' → logprob: -8.421497344970703

Token 274: ' utilisateur' (ID: 115595)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.751226007938385
    2. 'input' → logprob: -0.751226007938385
    3. '()
' → logprob: -4.00122594833374
    4. 'user' → logprob: -4.50122594833374
    5. '
' → logprob: -4.62622594833374
    6. 'string' → logprob: -5.50122594833374
    7. '()' → logprob: -5.75122594833374
    8. 'n' → logprob: -6.12622594833374
    9. '(input' → logprob: -6.50122594833374
    10. '(s' → logprob: -6.75122594833374

Token 275: '
' (ID: 198)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.5521219968795776
    2. 'input' → logprob: -1.1771219968795776
    3. 's' → logprob: -2.427122116088867
    4. '
' → logprob: -3.677122116088867
    5. 'n' → logprob: -7.552122116088867
    6. '    
' → logprob: -7.552122116088867
    7. '\n' → logprob: -8.177122116088867
    8. '  
' → logprob: -8.427122116088867
    9. ' 
' → logprob: -8.927122116088867
    10. 'line' → logprob: -9.302122116088867

Token 276: 's' (ID: 82)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.08119062334299088
    2. 'input' → logprob: -2.581190586090088
    3. 's' → logprob: -6.081190586090088
    4. 'text' → logprob: -12.206191062927246
    5. 'inp' → logprob: -13.456191062927246
    6. 'u' → logprob: -13.831191062927246
    7. ' user' → logprob: -13.956191062927246
    8. 'entry' → logprob: -13.956191062927246
    9. 'chaine' → logprob: -14.206191062927246
    10. 'string' → logprob: -14.206191062927246

Token 277: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002187430858612
    2. '=' → logprob: -2.3502187728881836
    3. '=input' → logprob: -11.350218772888184
    4. 'input' → logprob: -15.725218772888184
    5. 's' → logprob: -16.100217819213867
    6. '.' → logprob: -17.600217819213867
    7. '_' → logprob: -17.600217819213867
    8. ' ' → logprob: -17.725217819213867
    9. ' ' → logprob: -17.975217819213867
    10. '_input' → logprob: -18.225217819213867

Token 278: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002613358374219388
    2. ' input' → logprob: -8.250261306762695
    3. '=input' → logprob: -18.875261306762695
    4. '(input' → logprob: -19.375261306762695
    5. '	input' → logprob: -19.875261306762695
    6. '<input' → logprob: -20.125261306762695
    7. '```' → logprob: -22.625261306762695
    8. ',input' → logprob: -22.875261306762695
    9. ' ' → logprob: -23.000261306762695
    10. ' ' → logprob: -23.250261306762695

Token 279: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013029519468545914
    2. '(' → logprob: -4.3880295753479
    3. '('' → logprob: -8.138029098510742
    4. '("")' → logprob: -9.388029098510742
    5. '()>' → logprob: -10.013029098510742
    6. '("' → logprob: -10.013029098510742
    7. '("("' → logprob: -10.513029098510742
    8. '("""' → logprob: -12.013029098510742
    9. '(">' → logprob: -12.013029098510742
    10. '().' → logprob: -12.263029098510742

Token 280: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. 'result' → logprob: -14.125000953674316
    3. ' print' → logprob: -16.875
    4. 'output' → logprob: -18.125
    5. 'replacement' → logprob: -20.25
    6. '```' → logprob: -20.875
    7. 's' → logprob: -21.0
    8. 'r' → logprob: -21.125
    9. 'replace' → logprob: -21.75
    10. '#print' → logprob: -22.375

Token 281: ' Application' (ID: 12493)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.8206473871250637e-05
    2. 'result' → logprob: -10.500028610229492
    3. 'output' → logprob: -14.375028610229492
    4. 'pr' → logprob: -16.875028610229492
    5. 'prin' → logprob: -17.250028610229492
    6. 'r' → logprob: -17.750028610229492
    7. ' print' → logprob: -17.750028610229492
    8. 'p' → logprob: -20.000028610229492
    9. 'processed' → logprob: -20.250028610229492
    10. 'res' → logprob: -20.250028610229492

Token 282: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7582584023475647
    2. '(' → logprob: -1.63325834274292
    3. 's' → logprob: -2.50825834274292
    4. '_' → logprob: -2.75825834274292
    5. '(s' → logprob: -3.00825834274292
    6. ' =' → logprob: -3.13325834274292
    7. '(result' → logprob: -3.38325834274292
    8. '_result' → logprob: -4.25825834274292
    9. '=' → logprob: -4.63325834274292
    10. 'def' → logprob: -4.88325834274292

Token 283: ' la' (ID: 557)
  Prédit: 'replace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'replace' → logprob: -0.16022849082946777
    2. 'print' → logprob: -1.9102284908294678
    3. ' replace' → logprob: -12.410228729248047
    4. ' print' → logprob: -16.160228729248047
    5. '_replace' → logprob: -16.160228729248047
    6. 'replacement' → logprob: -16.910228729248047
    7. '.replace' → logprob: -17.285228729248047
    8. 'result' → logprob: -17.660228729248047
    9. '(print' → logprob: -18.160228729248047
    10. 'rep' → logprob: -18.535228729248047

Token 284: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00013560164370574057
    2. 'result' → logprob: -9.50013542175293
    3. 'replace' → logprob: -9.75013542175293
    4. ' print' → logprob: -14.12513542175293
    5. 'replacement' → logprob: -14.12513542175293
    6. 'prin' → logprob: -15.37513542175293
    7. 'output' → logprob: -15.75013542175293
    8. 'processed' → logprob: -16.00013542175293
    9. '```' → logprob: -16.00013542175293
    10. 's' → logprob: -16.25013542175293

Token 285: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07926538586616516
    2. 'result' → logprob: -2.5792653560638428
    3. 'output' → logprob: -8.454265594482422
    4. 's' → logprob: -8.954265594482422
    5. 'res' → logprob: -10.954265594482422
    6. ' print' → logprob: -12.079265594482422
    7. 'r' → logprob: -12.329265594482422
    8. 'replace' → logprob: -12.829265594482422
    9. ' result' → logprob: -13.829265594482422
    10. 'replacement' → logprob: -13.954265594482422

Token 286: ' remplacement' (ID: 113511)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.4796299934387207
    2. 'replace' → logprob: -1.2296299934387207
    3. ' remplacement' → logprob: -2.4796299934387207
    4. 'replacement' → logprob: -5.979629993438721
    5. 'print' → logprob: -6.354629993438721
    6. ' rem' → logprob: -8.729629516601562
    7. 'ré' → logprob: -9.604629516601562
    8. 're' → logprob: -9.604629516601562
    9. 'transform' → logprob: -9.729629516601562
    10. 'r' → logprob: -9.979629516601562

Token 287: ' et' (ID: 859)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1008002758026123
    2. 'result' → logprob: -2.3508002758026123
    3. 's' → logprob: -7.600800514221191
    4. 'output' → logprob: -9.600800514221191
    5. 'res' → logprob: -11.350800514221191
    6. 'r' → logprob: -11.475800514221191
    7. ' print' → logprob: -13.475800514221191
    8. 'new' → logprob: -14.850800514221191
    9. 'replacement' → logprob: -14.850800514221191
    10. ' result' → logprob: -15.225800514221191

Token 288: ' affich' (ID: 90179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003311034757643938
    2. ' print' → logprob: -5.7533111572265625
    3. '#' → logprob: -9.003311157226562
    4. 'aff' → logprob: -12.378311157226562
    5. ' affich' → logprob: -12.628311157226562
    6. 'im' → logprob: -14.003311157226562
    7. '#print' → logprob: -14.628311157226562
    8. 'prin' → logprob: -14.878311157226562
    9. ' impression' → logprob: -15.003311157226562
    10. '_print' → logprob: -15.378311157226562

Token 289: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.00026050140149891376
    2. 'e' → logprob: -8.625260353088379
    3. 'print' → logprob: -9.625260353088379
    4. 'ge' → logprob: -11.500260353088379
    5. '(age' → logprob: -12.750260353088379
    6. '   ' → logprob: -14.875260353088379
    7. '(e' → logprob: -15.000260353088379
    8. '(' → logprob: -15.250260353088379
    9. '(print' → logprob: -15.500260353088379
    10. 'er' → logprob: -15.625260353088379

Token 290: ' du' (ID: 1462)
  Prédit: '(print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(print' → logprob: -0.5872651934623718
    2. 'print' → logprob: -0.8372651934623718
    3. '(re' → logprob: -5.0872650146484375
    4. '(' → logprob: -5.3372650146484375
    5. '(result' → logprob: -9.087265014648438
    6. '()' → logprob: -9.587265014648438
    7. '(
' → logprob: -10.212265014648438
    8. '()
' → logprob: -11.337265014648438
    9. '(r' → logprob: -11.337265014648438
    10. '(pr' → logprob: -11.712265014648438

Token 291: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.47515055537223816
    2. 'replace' → logprob: -0.9751505851745605
    3. 'rés' → logprob: -7.1001505851745605
    4. ' résultat' → logprob: -9.350150108337402
    5. '(result' → logprob: -10.475150108337402
    6. 'print' → logprob: -10.600150108337402
    7. ' replace' → logprob: -10.725150108337402
    8. ' result' → logprob: -10.850150108337402
    9. ' resultat' → logprob: -11.350150108337402
    10. 're' → logprob: -11.475150108337402

Token 292: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.057743949990254e-05
    2. '
' → logprob: -10.875020980834961
    3. 'result' → logprob: -14.125020980834961
    4. ' print' → logprob: -14.875020980834961
    5. '```' → logprob: -15.250020980834961
    6. '(print' → logprob: -15.750020980834961
    7. '  
' → logprob: -17.50002098083496
    8. 'pr' → logprob: -18.62502098083496
    9. '()
' → logprob: -19.25002098083496
    10. 'prin' → logprob: -19.25002098083496

Token 293: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. 'result' → logprob: -20.75
    3. ' print' → logprob: -21.25
    4. 'prin' → logprob: -23.75
    5. 'pr' → logprob: -24.25
    6. '```' → logprob: -25.625
    7. 'output' → logprob: -27.0
    8. '
' → logprob: -28.375
    9. 'prints' → logprob: -28.375
    10. 'println' → logprob: -28.375

Token 294: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08003608137369156
    2. ' =' → logprob: -2.580036163330078
    3. 'wer' → logprob: -6.830036163330078
    4. 'er' → logprob: -11.330036163330078
    5. 'u' → logprob: -11.830036163330078
    6. '=s' → logprob: -11.955036163330078
    7. 'w' → logprob: -12.080036163330078
    8. '=

' → logprob: -12.205036163330078
    9. '=
' → logprob: -12.580036163330078
    10. 'print' → logprob: -13.205036163330078

Token 295: ' replace' (ID: 13284)
  Prédit: 'replace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replace' → logprob: -0.001170225441455841
    2. ' replace' → logprob: -6.7511701583862305
    3. '.replace' → logprob: -19.001171112060547
    4. '_replace' → logprob: -20.001171112060547
    5. 'Replace' → logprob: -21.626171112060547
    6. 'rep' → logprob: -22.376171112060547
    7. 'replacement' → logprob: -22.751171112060547
    8. 'print' → logprob: -23.126171112060547
    9. '```' → logprob: -23.626171112060547
    10. 'reverse' → logprob: -23.626171112060547

Token 296: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.875
    3. '_replace' → logprob: -17.25
    4. 's' → logprob: -17.875
    5. '```' → logprob: -18.25
    6. 'replace' → logprob: -18.625
    7. '_
' → logprob: -18.75
    8. 'def' → logprob: -19.125
    9. ' _' → logprob: -19.25
    10. '__' → logprob: -19.375

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00045033416245132685
    2. '_' → logprob: -7.750450134277344
    3. 's' → logprob: -10.875450134277344
    4. '```' → logprob: -15.625450134277344
    5. '9' → logprob: -16.000450134277344
    6. ' ' → logprob: -16.437950134277344
    7. 'user' → logprob: -16.875450134277344
    8. '１' → logprob: -17.187950134277344
    9. '۱' → logprob: -18.187950134277344
    10. '_s' → logprob: -18.312950134277344

Token 298: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.00020401719666551799
    2. '_' → logprob: -8.500204086303711
    3. '_a' → logprob: -16.37520408630371
    4. 'and' → logprob: -16.37520408630371
    5. '_an' → logprob: -17.12520408630371
    6. '_AND' → logprob: -17.12520408630371
    7. '```' → logprob: -17.12520408630371
    8. '_or' → logprob: -17.25020408630371
    9. ' _' → logprob: -17.50020408630371
    10. '_et' → logprob: -17.62520408630371

Token 299: '_' (ID: 62)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00029613598599098623
    2. '_' → logprob: -8.125296592712402
    3. '99' → logprob: -17.250295639038086
    4. ' ' → logprob: -18.000295639038086
    5. '９' → logprob: -18.000295639038086
    6. '۹' → logprob: -18.250295639038086
    7. 's' → logprob: -18.375295639038086
    8. '```' → logprob: -18.500295639038086
    9. '٩' → logprob: -18.875295639038086
    10. '९' → logprob: -19.750295639038086

Token 300: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. 's' → logprob: -18.75
    3. 'nine' → logprob: -20.0
    4. '99' → logprob: -20.125
    5. '９' → logprob: -20.25
    6. '```' → logprob: -20.375
    7. '1' → logprob: -20.5
    8. '۹' → logprob: -20.625
    9. '19' → logprob: -20.75
    10. '९' → logprob: -20.875

Token 301: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -3.6312321753939614e-05
    2. '(' → logprob: -10.875036239624023
    3. '(ans' → logprob: -11.000036239624023
    4. 's' → logprob: -14.500036239624023
    5. ' (' → logprob: -16.750036239624023
    6. '(
' → logprob: -20.125036239624023
    7. 'ans' → logprob: -20.250036239624023
    8. '(str' → logprob: -20.500036239624023
    9. '(a' → logprob: -21.250036239624023
    10. '((' → logprob: -21.375036239624023

Token 302: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029751762747764587
    2. ')
' → logprob: -3.529751777648926
    3. ')
' → logprob: -13.904751777648926
    4. ')

' → logprob: -14.779751777648926
    5. ' )' → logprob: -18.52975082397461
    6. ')`
' → logprob: -18.65475082397461
    7. '))' → logprob: -18.77975082397461
    8. '),' → logprob: -18.90475082397461
    9. ')`' → logprob: -18.90475082397461
    10. '()' → logprob: -19.27975082397461

Token 303: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -22.25
    3. '```' → logprob: -23.625
    4. 'pr' → logprob: -25.625
    5. 'prin' → logprob: -26.125
    6. '#print' → logprob: -27.875
    7. '	print' → logprob: -27.875
    8. '
' → logprob: -27.875
    9. 'printf' → logprob: -28.125
    10. 'println' → logprob: -28.375

Token 304: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0004307884373702109
    2. '(' → logprob: -7.750430583953857
    3. '(answer' → logprob: -17.375431060791016
    4. '(
' → logprob: -17.375431060791016
    5. ' (' → logprob: -17.750431060791016
    6. '()' → logprob: -18.125431060791016
    7. '(an' → logprob: -18.625431060791016
    8. 'ans' → logprob: -19.500431060791016
    9. '('' → logprob: -19.875431060791016
    10. '(a' → logprob: -20.000431060791016

Token 305: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. '()' → logprob: -16.875
    3. '))' → logprob: -17.5
    4. ')`' → logprob: -17.5
    5. '())' → logprob: -17.625
    6. ' )' → logprob: -18.5
    7. '(' → logprob: -18.625
    8. '')' → logprob: -19.0
    9. '`)' → logprob: -19.625
    10. ')
' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 303
Tokens correctement prédits (1ère position, stricte): 118
Tokens correctement prédits (1ère position, avec adaptation): 122
Tokens correctement prédits (top 10): 225
Précision stricte (1ère position): 38.94%
Précision adaptée (1ère position): 40.26%
Précision (top 10): 74.26%
================================================================================
