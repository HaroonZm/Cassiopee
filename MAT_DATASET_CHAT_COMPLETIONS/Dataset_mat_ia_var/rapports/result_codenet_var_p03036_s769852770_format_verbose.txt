================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
interest_rate, subtraction_value, current_value = map(int, input().split())

for iteration_index in range(10):

    next_value = (interest_rate * current_value) - subtraction_value

    print(next_value)

    current_value = next_value
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'interest' (ID: 21931)
  → Token d'amorce (pas de prédiction)

Token 1: '_rate' (ID: 20477)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' subtraction' (ID: 131994)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33504384756088257
    2. '_' → logprob: -1.9600439071655273
    3. ' =' → logprob: -2.9600439071655273
    4. ' ' → logprob: -3.0850439071655273
    5. '*' → logprob: -4.460043907165527
    6. ',' → logprob: -4.710043907165527
    7. ' *' → logprob: -5.585043907165527
    8. '_amount' → logprob: -5.710043907165527
    9. '_percentage' → logprob: -5.835043907165527
    10. ' ,' → logprob: -6.085043907165527

Token 4: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47085797786712646
    2. '=' → logprob: -1.2208579778671265
    3. ' =' → logprob: -2.595858097076416
    4. '*' → logprob: -5.845858097076416
    5. ')' → logprob: -7.345858097076416
    6. ',' → logprob: -7.845858097076416
    7. '-' → logprob: -7.970858097076416
    8. '(' → logprob: -7.970858097076416
    9. ' _' → logprob: -8.220857620239258
    10. '_rate' → logprob: -8.595857620239258

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11667812615633011
    2. ' =' → logprob: -2.616678237915039
    3. '_' → logprob: -3.366678237915039
    4. '*' → logprob: -7.116678237915039
    5. ',' → logprob: -7.241678237915039
    6. ')' → logprob: -7.866678237915039
    7. '```' → logprob: -8.866678237915039
    8. '-' → logprob: -8.991678237915039
    9. '+' → logprob: -8.991678237915039
    10. ' ' → logprob: -9.491678237915039

Token 6: ' current' (ID: 2208)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014050206169486046
    2. ' =' → logprob: -5.014050006866455
    3. ',' → logprob: -5.389050006866455
    4. '_' → logprob: -6.139050006866455
    5. '*' → logprob: -8.014050483703613
    6. ')' → logprob: -8.639050483703613
    7. '+' → logprob: -11.514050483703613
    8. ':' → logprob: -11.639050483703613
    9. '```' → logprob: -11.764050483703613
    10. ' ' → logprob: -11.889050483703613

Token 7: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2896591126918793
    2. '=' → logprob: -1.5396591424942017
    3. ' =' → logprob: -3.539659023284912
    4. ' ' → logprob: -5.539659023284912
    5. '+' → logprob: -6.539659023284912
    6. '_space' → logprob: -7.289659023284912
    7. '-' → logprob: -7.414659023284912
    8. ')' → logprob: -7.539659023284912
    9. '*' → logprob: -8.28965950012207
    10. '.' → logprob: -8.91465950012207

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09795064479112625
    2. ' =' → logprob: -3.2229506969451904
    3. '_' → logprob: -3.4729506969451904
    4. '-' → logprob: -3.8479506969451904
    5. '*' → logprob: -7.722950458526611
    6. '+' → logprob: -7.847950458526611
    7. ' ' → logprob: -8.97295093536377
    8. ')' → logprob: -10.09795093536377
    9. ',' → logprob: -10.34795093536377
    10. '```' → logprob: -10.59795093536377

Token 9: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.591095507144928
    2. ' ' → logprob: -0.841095507144928
    3. '1' → logprob: -5.716095447540283
    4. ' interest' → logprob: -6.091095447540283
    5. ' [' → logprob: -6.466095447540283
    6. 'interest' → logprob: -6.466095447540283
    7. ' map' → logprob: -6.591095447540283
    8. ' input' → logprob: -6.841095447540283
    9. 'input' → logprob: -6.966095447540283
    10. '10' → logprob: -7.091095447540283

Token 10: '(int' (ID: 2742)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -1.2190499305725098
    2. '<|end|>' → logprob: -1.2190499305725098
    3. '(' → logprob: -1.4690499305725098
    4. '(int' → logprob: -1.9690499305725098
    5. '```' → logprob: -4.46904993057251
    6. '(str' → logprob: -4.84404993057251
    7. '<|end|>' → logprob: -5.09404993057251
    8. '[int' → logprob: -5.59404993057251
    9. 'int' → logprob: -6.46904993057251
    10. '(token' → logprob: -6.84404993057251

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3488793969154358
    2. '(input' → logprob: -2.473879337310791
    3. '(user' → logprob: -2.723879337310791
    4. '<|end|>' → logprob: -2.723879337310791
    5. ')' → logprob: -2.973879337310791
    6. '<|end|>' → logprob: -5.723879337310791
    7. '('' → logprob: -6.098879337310791
    8. '(data' → logprob: -6.348879337310791
    9. '(value' → logprob: -6.348879337310791
    10. '(request' → logprob: -6.973879337310791

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03804619982838631
    2. ' input' → logprob: -3.28804612159729
    3. '(input' → logprob: -12.413045883178711
    4. 'user' → logprob: -14.788045883178711
    5. ')' → logprob: -15.413045883178711
    6. '=input' → logprob: -17.03804588317871
    7. 'raw' → logprob: -17.41304588317871
    8. 'range' → logprob: -17.78804588317871
    9. '[input' → logprob: -17.91304588317871
    10. '_input' → logprob: -17.91304588317871

Token 13: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8898433446884155
    2. '()' → logprob: -1.5148433446884155
    3. '(' → logprob: -1.7648433446884155
    4. '())' → logprob: -2.139843463897705
    5. '().' → logprob: -3.889843463897705
    6. '(()' → logprob: -4.639843463897705
    7. '<|end|>' → logprob: -4.764843463897705
    8. '('' → logprob: -5.139843463897705
    9. '(token' → logprob: -5.389843463897705
    10. '```' → logprob: -5.514843463897705

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011880126112373546
    2. 'strip' → logprob: -9.12511920928955
    3. 'rstrip' → logprob: -11.75011920928955
    4. ' split' → logprob: -13.87511920928955
    5. '(split' → logprob: -15.12511920928955
    6. 'spl' → logprob: -15.12511920928955
    7. ')' → logprob: -15.50011920928955
    8. '```' → logprob: -16.375118255615234
    9. 'startswith' → logprob: -16.500118255615234
    10. 'replace' → logprob: -16.500118255615234

Token 15: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6432976722717285
    2. '())' → logprob: -0.7682976722717285
    3. '()' → logprob: -4.8932976722717285
    4. '))' → logprob: -6.2682976722717285
    5. '(' → logprob: -7.5182976722717285
    6. '`)' → logprob: -8.26829719543457
    7. '()))' → logprob: -8.64329719543457
    8. '('' → logprob: -9.76829719543457
    9. ' )' → logprob: -10.14329719543457
    10. ' ())' → logprob: -10.89329719543457

Token 16: 'for' (ID: 1938)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2540801465511322
    2. '*' → logprob: -2.379080057144165
    3. 'if' → logprob: -3.254080057144165
    4. '-' → logprob: -3.879080057144165
    5. '#' → logprob: -4.004080295562744
    6. '+
' → logprob: -4.379080295562744
    7. '```' → logprob: -5.004080295562744
    8. '.' → logprob: -5.004080295562744
    9. ')' → logprob: -5.379080295562744
    10. ',' → logprob: -5.504080295562744

Token 17: ' iteration' (ID: 43155)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6677420735359192
    2. '_' → logprob: -0.7927420735359192
    3. ' _' → logprob: -4.4177422523498535
    4. ' ' → logprob: -4.4177422523498535
    5. 'i' → logprob: -4.6677422523498535
    6. ' current' → logprob: -7.5427422523498535
    7. '_i' → logprob: -8.792741775512695
    8. ' value' → logprob: -8.792741775512695
    9. ' range' → logprob: -10.417741775512695
    10. '  ' → logprob: -10.417741775512695

Token 18: '_index' (ID: 7748)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.33794137835502625
    2. ' in' → logprob: -1.4629414081573486
    3. '_' → logprob: -2.9629414081573486
    4. ' ' → logprob: -6.2129411697387695
    5. '_in' → logprob: -6.8379411697387695
    6. 's' → logprob: -9.21294116973877
    7. 'space' → logprob: -9.58794116973877
    8. 'i' → logprob: -10.08794116973877
    9. ':' → logprob: -10.46294116973877
    10. '  ' → logprob: -10.58794116973877

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14945849776268005
    2. 'in' → logprob: -2.024458408355713
    3. ' ' → logprob: -5.774458408355713
    4. '<|end|>' → logprob: -6.399458408355713
    5. '  ' → logprob: -8.149458885192871
    6. '+' → logprob: -8.399458885192871
    7. ' +=' → logprob: -8.649458885192871
    8. ',' → logprob: -8.774458885192871
    9. ':' → logprob: -8.774458885192871
    10. '```' → logprob: -8.774458885192871

Token 20: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740830957889557
    2. 'range' → logprob: -0.9740830659866333
    3. '	range' → logprob: -12.849082946777344
    4. '(range' → logprob: -13.099082946777344
    5. ' ' → logprob: -14.474082946777344
    6. '_range' → logprob: -15.599082946777344
    7. ' xrange' → logprob: -15.849082946777344
    8. '.range' → logprob: -16.099082946777344
    9. '```' → logprob: -16.224082946777344
    10. 'rang' → logprob: -16.849082946777344

Token 21: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00022773505770601332
    2. '(len' → logprob: -8.875227928161621
    3. ' (' → logprob: -9.500227928161621
    4. '(n' → logprob: -12.375227928161621
    5. '(int' → logprob: -13.500227928161621
    6. '(length' → logprob: -13.625227928161621
    7. '(
' → logprob: -13.750227928161621
    8. '('' → logprob: -13.875227928161621
    9. '(range' → logprob: -13.875227928161621
    10. '(s' → logprob: -14.750227928161621

Token 22: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7713623642921448
    2. '1' → logprob: -1.0213623046875
    3. '100' → logprob: -2.5213623046875
    4. ' ' → logprob: -3.5213623046875
    5. '5' → logprob: -4.0213623046875
    6. 'interest' → logprob: -4.2713623046875
    7. 'sub' → logprob: -4.6463623046875
    8. 'current' → logprob: -4.8963623046875
    9. '0' → logprob: -5.6463623046875
    10. 'int' → logprob: -6.1463623046875

Token 23: '):

' (ID: 15626)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021155239082872868
    2. ')' → logprob: -6.377115726470947
    3. ' ):' → logprob: -8.377115249633789
    4. ':' → logprob: -9.377115249633789
    5. '+' → logprob: -10.252115249633789
    6. '):
' → logprob: -10.502115249633789
    7. '**' → logprob: -10.752115249633789
    8. '-' → logprob: -12.752115249633789
    9. ',' → logprob: -12.877115249633789
    10. ' )' → logprob: -13.127115249633789

Token 24: '   ' (ID: 271)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.2219371348619461
    2. '   ' → logprob: -2.0969371795654297
    3. 'current' → logprob: -2.8469371795654297
    4. ':' → logprob: -4.22193717956543
    5. '```' → logprob: -6.97193717956543
    6. ' ' → logprob: -7.72193717956543
    7. '_current' → logprob: -7.72193717956543
    8. '	current' → logprob: -8.47193717956543
    9. '<|end|>' → logprob: -8.59693717956543
    10. ' subtraction' → logprob: -8.59693717956543

Token 25: ' next' (ID: 2613)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.07266625016927719
    2. 'current' → logprob: -3.0726661682128906
    3. '   ' → logprob: -3.8226661682128906
    4. '    
' → logprob: -7.322666168212891
    5. ' ' → logprob: -7.822666168212891
    6. ' subtraction' → logprob: -8.44766616821289
    7. '    ' → logprob: -9.07266616821289
    8. ' 
' → logprob: -9.69766616821289
    9. '     
' → logprob: -9.94766616821289
    10. ' interest' → logprob: -10.07266616821289

Token 26: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.021642355248332024
    2. '_' → logprob: -3.8966424465179443
    3. '_val' → logprob: -7.771642208099365
    4. '_interest' → logprob: -8.146642684936523
    5. '_current' → logprob: -8.396642684936523
    6. '_amount' → logprob: -9.896642684936523
    7. '_balance' → logprob: -11.396642684936523
    8. '_values' → logprob: -11.646642684936523
    9. 'value' → logprob: -11.771642684936523
    10. '_rate' → logprob: -11.771642684936523

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02328857034444809
    2. '=' → logprob: -3.7732884883880615
    3. '_' → logprob: -10.64828872680664
    4. ' ' → logprob: -12.14828872680664
    5. ' +=' → logprob: -12.52328872680664
    6. '   ' → logprob: -13.27328872680664
    7. ' *=' → logprob: -13.27328872680664
    8. ' -=' → logprob: -13.39828872680664
    9. '    ' → logprob: -14.14828872680664
    10. ')' → logprob: -14.27328872680664

Token 28: ' (' (ID: 350)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.05980426445603371
    2. 'current' → logprob: -2.9348042011260986
    3. ' int' → logprob: -6.184804439544678
    4. ' (' → logprob: -6.809804439544678
    5. 'int' → logprob: -6.809804439544678
    6. '(current' → logprob: -7.559804439544678
    7. '(int' → logprob: -10.18480396270752
    8. '   ' → logprob: -10.68480396270752
    9. '(' → logprob: -10.68480396270752
    10. ' round' → logprob: -11.68480396270752

Token 29: 'interest' (ID: 21931)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.10111977159976959
    2. ' current' → logprob: -2.3511197566986084
    3. '   ' → logprob: -7.2261199951171875
    4. '(current' → logprob: -9.351119995117188
    5. 'next' → logprob: -10.601119995117188
    6. 'interest' → logprob: -10.976119995117188
    7. 'previous' → logprob: -11.601119995117188
    8. ')' → logprob: -11.726119995117188
    9. ' (' → logprob: -12.101119995117188
    10. ' ' → logprob: -12.226119995117188

Token 30: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.00027730545843951404
    2. '_' → logprob: -8.625277519226074
    3. '_value' → logprob: -9.750277519226074
    4. ' _' → logprob: -11.000277519226074
    5. '_r' → logprob: -11.500277519226074
    6. '_ratio' → logprob: -12.250277519226074
    7. '_amount' → logprob: -13.250277519226074
    8. '_index' → logprob: -13.875277519226074
    9. '_factor' → logprob: -14.500277519226074
    10. '_rates' → logprob: -14.500277519226074

Token 31: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1478283703327179
    2. '*' → logprob: -2.0228283405303955
    3. ' /' → logprob: -6.647828578948975
    4. '/' → logprob: -6.647828578948975
    5. ' ' → logprob: -7.022828578948975
    6. ' -' → logprob: -7.022828578948975
    7. ' +' → logprob: -7.897828578948975
    8. '+' → logprob: -8.647828102111816
    9. '-' → logprob: -9.522828102111816
    10. ')' → logprob: -9.647828102111816

Token 32: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.38693249225616455
    2. ' current' → logprob: -1.1369324922561646
    3. '(current' → logprob: -10.136932373046875
    4. ' (' → logprob: -11.511932373046875
    5. 'previous' → logprob: -13.011932373046875
    6. '=current' → logprob: -13.636932373046875
    7. ' ' → logprob: -13.761932373046875
    8. 'urrent' → logprob: -13.886932373046875
    9. ' previous' → logprob: -14.011932373046875
    10. '(' → logprob: -14.011932373046875

Token 33: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.1279553291387856e-05
    2. '_' → logprob: -11.500011444091797
    3. ' _' → logprob: -14.250011444091797
    4. '_val' → logprob: -15.625011444091797
    5. '_values' → logprob: -16.750011444091797
    6. ')' → logprob: -16.875011444091797
    7. ')_' → logprob: -16.875011444091797
    8. 'value' → logprob: -17.125011444091797
    9. '_rate' → logprob: -17.250011444091797
    10. '_Value' → logprob: -17.375011444091797

Token 34: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21126241981983185
    2. ' -' → logprob: -2.2112624645233154
    3. ' //' → logprob: -2.9612624645233154
    4. '//' → logprob: -4.461262226104736
    5. '-' → logprob: -5.086262226104736
    6. ' )' → logprob: -5.711262226104736
    7. ' +' → logprob: -5.836262226104736
    8. '+' → logprob: -6.336262226104736
    9. ')//' → logprob: -6.336262226104736
    10. ' ' → logprob: -7.586262226104736

Token 35: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6319148540496826
    2. ' //' → logprob: -0.8819148540496826
    3. '//' → logprob: -3.8819148540496826
    4. '<|end|>' → logprob: -4.631915092468262
    5. ' +' → logprob: -4.756915092468262
    6. ' ' → logprob: -5.131915092468262
    7. '-' → logprob: -5.506915092468262
    8. ' /' → logprob: -6.006915092468262
    9. '+' → logprob: -6.881915092468262
    10. ')' → logprob: -7.256915092468262

Token 36: ' subtraction' (ID: 131994)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.09237915277481079
    2. ' subtraction' → logprob: -2.467379093170166
    3. ' sub' → logprob: -5.842379093170166
    4. ' ' → logprob: -8.592379570007324
    5. '(sub' → logprob: -8.592379570007324
    6. ' (' → logprob: -9.842379570007324
    7. 'subtract' → logprob: -10.592379570007324
    8. '	sub' → logprob: -10.967379570007324
    9. '(' → logprob: -11.467379570007324
    10. '_sub' → logprob: -11.467379570007324

Token 37: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0038614741060882807
    2. '_' → logprob: -5.628861427307129
    3. ' _' → logprob: -8.753861427307129
    4. '_val' → logprob: -9.378861427307129
    5. '_v' → logprob: -12.253861427307129
    6. ')_' → logprob: -12.503861427307129
    7. '_Value' → logprob: -13.253861427307129
    8. '```' → logprob: -13.503861427307129
    9. '__' → logprob: -13.628861427307129
    10. ' ' → logprob: -13.878861427307129

Token 38: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2614608705043793
    2. '<|end|>' → logprob: -1.7614609003067017
    3. '\n' → logprob: -3.011460781097412
    4. '' → logprob: -6.386460781097412
    5. ')' → logprob: -6.761460781097412
    6. '```' → logprob: -6.886460781097412
    7. '
' → logprob: -7.136460781097412
    8. '<|end|>' → logprob: -7.386460781097412
    9. ' ' → logprob: -7.511460781097412
    10. 'newline' → logprob: -7.761460781097412

Token 39: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5220845341682434
    2. '<|end|>' → logprob: -1.1470844745635986
    3. '\n' → logprob: -2.5220844745635986
    4. '<|end|>' → logprob: -6.522084712982178
    5. '\r' → logprob: -6.772084712982178
    6. ')' → logprob: -7.022084712982178
    7. ' ' → logprob: -7.147084712982178
    8. ' 
' → logprob: -7.272084712982178
    9. '\' → logprob: -7.272084712982178
    10. '*' → logprob: -7.647084712982178

Token 40: ' print' (ID: 2123)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.106692910194397
    2. 'current' → logprob: -1.231692910194397
    3. ' current' → logprob: -1.731692910194397
    4. '
' → logprob: -1.856692910194397
    5. ' ' → logprob: -4.106692790985107
    6. '<|end|>' → logprob: -4.856692790985107
    7. ' 
' → logprob: -4.981692790985107
    8. '  
' → logprob: -5.606692790985107
    9. '\' → logprob: -6.106692790985107
    10. '' → logprob: -6.731692790985107

Token 41: '(next' (ID: 28757)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08440986275672913
    2. '(next' → logprob: -2.5844099521636963
    3. '(current' → logprob: -5.209409713745117
    4. ' (' → logprob: -11.209409713745117
    5. '()' → logprob: -11.709409713745117
    6. '('' → logprob: -12.459409713745117
    7. '((' → logprob: -12.584409713745117
    8. '("("' → logprob: -12.584409713745117
    9. '(f' → logprob: -12.959409713745117
    10. '(`' → logprob: -13.584409713745117

Token 42: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0003001888981088996
    2. '_' → logprob: -8.750300407409668
    3. '_val' → logprob: -9.000300407409668
    4. ')_' → logprob: -11.250300407409668
    5. '_v' → logprob: -13.375300407409668
    6. ')' → logprob: -13.375300407409668
    7. '_token' → logprob: -14.375300407409668
    8. '_)' → logprob: -14.500300407409668
    9. '_Value' → logprob: -14.625300407409668
    10. '_va' → logprob: -15.125300407409668

Token 43: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.771655115589965e-05
    2. ' )' → logprob: -11.000018119812012
    3. '))' → logprob: -15.500018119812012
    4. '   ' → logprob: -15.750018119812012
    5. '')' → logprob: -15.750018119812012
    6. '`)' → logprob: -15.875018119812012
    7. ')
' → logprob: -16.375017166137695
    8. '*' → logprob: -17.000017166137695
    9. ' ' → logprob: -17.125017166137695
    10. '#' → logprob: -17.250017166137695

Token 44: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.3221370279788971
    2. ' current' → logprob: -1.5721369981765747
    3. '
' → logprob: -3.4471371173858643
    4. ' 
' → logprob: -4.197136878967285
    5. '\n' → logprob: -4.822136878967285
    6. '    
' → logprob: -5.697136878967285
    7. '  
' → logprob: -5.822136878967285
    8. '   ' → logprob: -6.322136878967285
    9. ' ' → logprob: -6.447136878967285
    10. '<|end|>' → logprob: -6.447136878967285

Token 46: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.000742803153116256
    2. '_' → logprob: -7.2507429122924805
    3. '_val' → logprob: -10.37574291229248
    4. ' _' → logprob: -14.37574291229248
    5. '_values' → logprob: -14.62574291229248
    6. '_Value' → logprob: -15.50074291229248
    7. '=_' → logprob: -16.000741958618164
    8. '_VALUE' → logprob: -16.125741958618164
    9. '=' → logprob: -16.875741958618164
    10. 'value' → logprob: -17.625741958618164

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3496653735637665
    2. '=' → logprob: -1.2246654033660889
    3. ' +=' → logprob: -6.97466516494751
    4. ' *=' → logprob: -8.349665641784668
    5. ' ' → logprob: -11.349665641784668
    6. '<|end|>' → logprob: -11.599665641784668
    7. '+=' → logprob: -11.974665641784668
    8. ' <<=' → logprob: -12.099665641784668
    9. '    ' → logprob: -12.724665641784668
    10. ' -=' → logprob: -13.224665641784668

Token 48: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.014166445471346378
    2. 'next' → logprob: -4.264166355133057
    3. ' current' → logprob: -13.389166831970215
    4. '(next' → logprob: -14.264166831970215
    5. '	next' → logprob: -14.514166831970215
    6. '.next' → logprob: -15.764166831970215
    7. '_next' → logprob: -16.8891658782959
    8. 'current' → logprob: -17.5141658782959
    9. ',next' → logprob: -17.6391658782959
    10. '[next' → logprob: -17.8891658782959

Token 49: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.02362825535237789
    2. '_' → logprob: -3.7736282348632812
    3. '_token' → logprob: -8.898628234863281
    4. '_val' → logprob: -9.148628234863281
    5. ' _' → logprob: -9.648628234863281
    6. '_Value' → logprob: -10.648628234863281
    7. '__' → logprob: -11.148628234863281
    8. ')_' → logprob: -11.898628234863281
    9. '_v' → logprob: -12.148628234863281
    10. '```' → logprob: -12.273628234863281


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 47
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 31
Précision stricte (1ère position): 38.30%
Précision adaptée (1ère position): 40.43%
Précision (top 10): 65.96%
================================================================================
