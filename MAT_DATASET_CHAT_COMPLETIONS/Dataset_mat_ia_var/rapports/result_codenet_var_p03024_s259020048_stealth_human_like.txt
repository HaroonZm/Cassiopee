================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# On prend l'entrée utilisateur, c'est du texte en fait
s = input()
n = len(s)  # Bon ça sert pas mais je laisse, on sait jamais

# Je vérifie combien de 'x' il y a, je pense que 7 c'est la limite
compteur_x = s.count("x")
if compteur_x > 7:
    print("NO")
else:
    print("YES")
# Franchement je sais pas si ça gère tout, mais ça devrait passer
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' On' (ID: 2160)
  → Token d'amorce (pas de prédiction)

Token 2: ' prend' (ID: 37463)
  → Token d'amorce (pas de prédiction)

Token 3: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.058493707329034805
    2. ' un' → logprob: -3.1834936141967773
    3. 'un' → logprob: -5.808493614196777
    4. ' le' → logprob: -5.933493614196777
    5. ' ' → logprob: -6.058493614196777
    6. ' #' → logprob: -6.308493614196777
    7. ' soin' → logprob: -6.683493614196777
    8. ' la' → logprob: -6.808493614196777
    9. ' une' → logprob: -7.183493614196777
    10. '  ' → logprob: -7.433493614196777

Token 4: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.778144121170044
    2. ''espace' → logprob: -1.278144121170044
    3. '_' → logprob: -1.903144121170044
    4. 'e' → logprob: -3.028144121170044
    5. 'u' → logprob: -4.028143882751465
    6. 'a' → logprob: -4.528143882751465
    7. ''utilisateur' → logprob: -4.528143882751465
    8. 'es' → logprob: -4.653143882751465
    9. ''entrée' → logprob: -5.778143882751465
    10. '’espace' → logprob: -6.028143882751465

Token 5: ' utilisateur' (ID: 115595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16638115048408508
    2. 's' → logprob: -3.1663811206817627
    3. 'user' → logprob: -3.5413811206817627
    4. ' ' → logprob: -4.041381359100342
    5. ' =' → logprob: -4.416381359100342
    6. ':' → logprob: -4.541381359100342
    7. '=' → logprob: -5.041381359100342
    8. ',' → logprob: -5.166381359100342
    9. 'e' → logprob: -5.416381359100342
    10. '```' → logprob: -5.666381359100342

Token 6: ',' (ID: 11)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.04579881951212883
    2. '_' → logprob: -3.7957987785339355
    3. 'u' → logprob: -5.5457987785339355
    4. ' user' → logprob: -5.9207987785339355
    5. 'username' → logprob: -6.0457987785339355
    6. '```' → logprob: -6.0457987785339355
    7. '`' → logprob: -6.2957987785339355
    8. '#' → logprob: -6.2957987785339355
    9. 's' → logprob: -6.5457987785339355
    10. ' =' → logprob: -6.5457987785339355

Token 7: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5014031529426575
    2. '_' → logprob: -2.0014030933380127
    3. 'user' → logprob: -3.2514030933380127
    4. ''' → logprob: -3.6264030933380127
    5. ' user' → logprob: -3.6264030933380127
    6. 's' → logprob: -3.7514030933380127
    7. ' =' → logprob: -4.126403331756592
    8. 'input' → logprob: -4.251403331756592
    9. '`' → logprob: -4.501403331756592
    10. ' input' → logprob: -4.501403331756592

Token 8: ''est' (ID: 6616)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.3347439765930176
    2. 'on' → logprob: -1.5847439765930176
    3. 'har' → logprob: -2.5847439765930176
    4. 'ode' → logprob: -2.5847439765930176
    5. 'omp' → logprob: -2.7097439765930176
    6. 'omme' → logprob: -2.7097439765930176
    7. '#' → logprob: -3.0847439765930176
    8. 'h' → logprob: -3.2097439765930176
    9. 'e' → logprob: -3.4597439765930176
    10. 'r' → logprob: -4.209743976593018

Token 9: ' du' (ID: 1462)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.831111490726471
    2. ' une' → logprob: -1.8311114311218262
    3. 'l' → logprob: -2.081111431121826
    4. 'une' → logprob: -2.206111431121826
    5. ' ' → logprob: -3.331111431121826
    6. 's' → logprob: -3.706111431121826
    7. '_' → logprob: -3.956111431121826
    8. ''une' → logprob: -4.081111431121826
    9. ''un' → logprob: -4.331111431121826
    10. ' =' → logprob: -4.331111431121826

Token 10: ' texte' (ID: 53492)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.008736654184758663
    2. ' texte' → logprob: -4.883736610412598
    3. 'text' → logprob: -7.258736610412598
    4. 'string' → logprob: -8.383736610412598
    5. 'code' → logprob: -9.758736610412598
    6. 'txt' → logprob: -10.258736610412598
    7. ' code' → logprob: -10.883736610412598
    8. 'str' → logprob: -11.008736610412598
    9. 's' → logprob: -11.133736610412598
    10. '```' → logprob: -11.383736610412598

Token 11: ' en' (ID: 469)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.04846642166376114
    2. '_' → logprob: -3.798466444015503
    3. 'u' → logprob: -5.423466205596924
    4. 'input' → logprob: -5.548466205596924
    5. 's' → logprob: -5.673466205596924
    6. 'i' → logprob: -6.173466205596924
    7. '#' → logprob: -6.673466205596924
    8. '`' → logprob: -6.798466205596924
    9. 'x' → logprob: -6.798466205596924
    10. '```' → logprob: -6.798466205596924

Token 12: ' fait' (ID: 7473)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.285534143447876
    2. 'string' → logprob: -1.660534143447876
    3. 'python' → logprob: -2.035534143447876
    4. 'code' → logprob: -2.535534143447876
    5. 'input' → logprob: -2.910534143447876
    6. 's' → logprob: -3.035534143447876
    7. 'format' → logprob: -3.410534143447876
    8. 'chaine' → logprob: -3.660534143447876
    9. 'fr' → logprob: -4.035533905029297
    10. 'str' → logprob: -4.035533905029297

Token 13: '
' (ID: 198)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.024262117221951485
    2. '_' → logprob: -5.024261951446533
    3. 'input' → logprob: -5.649261951446533
    4. '`' → logprob: -6.274261951446533
    5. 'u' → logprob: -6.399261951446533
    6. '```' → logprob: -6.524261951446533
    7. 's' → logprob: -6.774261951446533
    8. '#' → logprob: -6.774261951446533
    9. 'entrée' → logprob: -7.149261951446533
    10. 'i' → logprob: -7.149261951446533

Token 14: 's' (ID: 82)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.9048460721969604
    2. '_' → logprob: -1.9048460721969604
    3. '\n' → logprob: -2.15484619140625
    4. 'input' → logprob: -2.27984619140625
    5. '```' → logprob: -2.65484619140625
    6. '\' → logprob: -3.27984619140625
    7. '#' → logprob: -3.77984619140625
    8. 's' → logprob: -3.90484619140625
    9. '`' → logprob: -3.90484619140625
    10. 'i' → logprob: -4.65484619140625

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.542636513710022
    2. 'tr' → logprob: -1.792636513710022
    3. 'a' → logprob: -2.6676363945007324
    4. 'tring' → logprob: -2.7926363945007324
    5. '=' → logprob: -3.2926363945007324
    6. 'e' → logprob: -3.7926363945007324
    7. 's' → logprob: -4.042636394500732
    8. '=input' → logprob: -4.417636394500732
    9. 'aisi' → logprob: -4.542636394500732
    10. 'aisie' → logprob: -4.917636394500732

Token 16: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10023978352546692
    2. 'input' → logprob: -2.3502397537231445
    3. ' ' → logprob: -11.350239753723145
    4. ' raw' → logprob: -11.975239753723145
    5. ' ' → logprob: -12.975239753723145
    6. '=input' → logprob: -13.100239753723145
    7. 'raw' → logprob: -13.225239753723145
    8. '(input' → logprob: -13.350239753723145
    9. '"' → logprob: -13.850239753723145
    10. ' str' → logprob: -13.975239753723145

Token 17: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -9.996708104154095e-05
    2. '()' → logprob: -10.125100135803223
    3. '('' → logprob: -10.625100135803223
    4. '("("' → logprob: -10.750100135803223
    5. '(
' → logprob: -12.000100135803223
    6. '(`' → logprob: -13.375100135803223
    7. ' (' → logprob: -14.000100135803223
    8. '(

' → logprob: -14.125100135803223
    9. '```' → logprob: -14.125100135803223
    10. '("")' → logprob: -14.375100135803223

Token 18: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07366817444562912
    2. '.strip' → logprob: -2.9486682415008545
    3. '.split' → logprob: -4.698668003082275
    4. '.lower' → logprob: -5.698668003082275
    5. ' ' → logprob: -6.823668003082275
    6. ')' → logprob: -7.198668003082275
    7. '+' → logprob: -7.323668003082275
    8. '.upper' → logprob: -7.573668003082275
    9. '.s' → logprob: -7.948668003082275
    10. 's' → logprob: -8.073668479919434

Token 19: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3283694386482239
    2. ' =' → logprob: -1.953369379043579
    3. ' ' → logprob: -2.453369379043579
    4. '=' → logprob: -4.328369617462158
    5. '_' → logprob: -4.328369617462158
    6. 'e' → logprob: -4.828369617462158
    7. 'um' → logprob: -5.828369617462158
    8. 'o' → logprob: -5.953369617462158
    9. 'ext' → logprob: -6.328369617462158
    10. 'umber' → logprob: -6.578369617462158

Token 20: ' len' (ID: 4631)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3776673376560211
    2. 'int' → logprob: -1.6276673078536987
    3. ' len' → logprob: -2.5026674270629883
    4. 'len' → logprob: -3.5026674270629883
    5. ' ' → logprob: -6.252667427062988
    6. ' s' → logprob: -6.502667427062988
    7. '0' → logprob: -6.627667427062988
    8. 's' → logprob: -7.002667427062988
    9. '10' → logprob: -8.252667427062988
    10. '1' → logprob: -9.752667427062988

Token 21: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0019443416967988014
    2. '(' → logprob: -6.251944541931152
    3. 's' → logprob: -11.126944541931152
    4. '(n' → logprob: -14.376944541931152
    5. ' (' → logprob: -15.126944541931152
    6. '(
' → logprob: -16.001943588256836
    7. '()' → logprob: -17.876943588256836
    8. '(

' → logprob: -18.251943588256836
    9. '(x' → logprob: -18.501943588256836
    10. ')' → logprob: -18.501943588256836

Token 22: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.158350151963532e-05
    2. '))' → logprob: -10.125061988830566
    3. ' )' → logprob: -11.000061988830566
    4. '()' → logprob: -13.500061988830566
    5. ')s' → logprob: -14.375061988830566
    6. 's' → logprob: -14.750061988830566
    7. '())' → logprob: -15.000061988830566
    8. ')
' → logprob: -15.000061988830566
    9. '[' → logprob: -15.250061988830566
    10. ')n' → logprob: -15.250061988830566

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7109514474868774
    2. ')' → logprob: -1.7109514474868774
    3. '*' → logprob: -2.460951328277588
    4. '+' → logprob: -2.835951328277588
    5. '#' → logprob: -2.960951328277588
    6. '%' → logprob: -3.335951328277588
    7. '<|end|>' → logprob: -4.210951328277588
    8. '-' → logprob: -4.460951328277588
    9. ' 
' → logprob: -4.460951328277588
    10. 'if' → logprob: -4.960951328277588

Token 24: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2691996097564697
    2. '%' → logprob: -1.5191996097564697
    3. '+' → logprob: -2.1441996097564697
    4. ')' → logprob: -2.5191996097564697
    5. '*' → logprob: -2.5191996097564697
    6. '#' → logprob: -2.5191996097564697
    7. 'if' → logprob: -3.1441996097564697
    8. '-' → logprob: -3.5191996097564697
    9. '=' → logprob: -4.269199371337891
    10. 'for' → logprob: -4.269199371337891

Token 25: ' Bon' (ID: 12658)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07063192129135132
    2. ' s' → logprob: -3.195631980895996
    3. 's' → logprob: -4.320631980895996
    4. ')' → logprob: -5.195631980895996
    5. ''' → logprob: -6.445631980895996
    6. '  ' → logprob: -6.820631980895996
    7. ' )' → logprob: -6.820631980895996
    8. '<|end|>' → logprob: -7.195631980895996
    9. '(s' → logprob: -7.445631980895996
    10. '"' → logprob: -7.820631980895996

Token 26: ' ça' (ID: 13590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2176953554153442
    2. 's' → logprob: -1.5926953554153442
    3. ')' → logprob: -1.8426953554153442
    4. '<|end|>' → logprob: -2.5926952362060547
    5. ' if' → logprob: -3.0926952362060547
    6. 'if' → logprob: -3.3426952362060547
    7. ' s' → logprob: -3.5926952362060547
    8. '+' → logprob: -4.217695236206055
    9. '```' → logprob: -4.217695236206055
    10. 'for' → logprob: -4.592695236206055

Token 27: ' sert' (ID: 52405)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9639574885368347
    2. '=' → logprob: -2.2139575481414795
    3. ' s' → logprob: -2.4639575481414795
    4. '+' → logprob: -2.7139575481414795
    5. ' =' → logprob: -2.7139575481414795
    6. ' n' → logprob: -2.7139575481414795
    7. 's' → logprob: -3.2139575481414795
    8. ',' → logprob: -3.4639575481414795
    9. 'n' → logprob: -4.3389573097229
    10. '>' → logprob: -4.3389573097229

Token 28: ' pas' (ID: 2173)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.668748676776886
    2. ' à' → logprob: -1.7937486171722412
    3. '  ' → logprob: -3.043748617172241
    4. ')' → logprob: -3.418748617172241
    5. '=' → logprob: -3.793748617172241
    6. '#' → logprob: -3.793748617172241
    7. 's' → logprob: -3.793748617172241
    8. ',' → logprob: -4.04374885559082
    9. '.' → logprob: -4.04374885559082
    10. ' )' → logprob: -4.04374885559082

Token 29: ' mais' (ID: 2899)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1297717094421387
    2. '
' → logprob: -1.5047717094421387
    3. ' 
' → logprob: -2.2547717094421387
    4. ')' → logprob: -2.7547717094421387
    5. '#' → logprob: -3.1297717094421387
    6. '<|end|>' → logprob: -3.1297717094421387
    7. ',' → logprob: -3.6297717094421387
    8. 's' → logprob: -3.6297717094421387
    9. '.' → logprob: -3.6297717094421387
    10. '  
' → logprob: -4.004771709442139

Token 30: ' je' (ID: 1264)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10496535152196884
    2. ' on' → logprob: -3.7299654483795166
    3. ''' → logprob: -4.3549652099609375
    4. ' s' → logprob: -4.7299652099609375
    5. ' print' → logprob: -5.3549652099609375
    6. ' for' → logprob: -5.3549652099609375
    7. 's' → logprob: -5.4799652099609375
    8. ',' → logprob: -5.6049652099609375
    9. ' #' → logprob: -5.6049652099609375
    10. '#' → logprob: -5.8549652099609375

Token 31: ' laisse' (ID: 66691)
  Prédit: ' voulais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' voulais' → logprob: -1.3387809991836548
    2. 'vais' → logprob: -1.7137809991836548
    3. ' vais' → logprob: -1.9637809991836548
    4. 's' → logprob: -2.0887808799743652
    5. 'f' → logprob: -2.8387808799743652
    6. ' veux' → logprob: -3.5887808799743652
    7. ' peux' → logprob: -3.5887808799743652
    8. ' trouve' → logprob: -4.088780879974365
    9. '#' → logprob: -4.213780879974365
    10. ' continue' → logprob: -4.213780879974365

Token 32: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4847656190395355
    2. ' 
' → logprob: -2.1097655296325684
    3. '
' → logprob: -2.7347655296325684
    4. '<|end|>' → logprob: -3.3597655296325684
    5. '  
' → logprob: -3.4847655296325684
    6. 'n' → logprob: -3.4847655296325684
    7. 's' → logprob: -3.8597655296325684
    8. '#' → logprob: -3.8597655296325684
    9. '\n' → logprob: -4.109765529632568
    10. '' → logprob: -4.484765529632568

Token 33: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0035792875569313765
    2. ''' → logprob: -7.378579139709473
    3. ' s' → logprob: -7.378579139709473
    4. ')' → logprob: -8.003579139709473
    5. 'n' → logprob: -8.253579139709473
    6. ' \' → logprob: -8.378579139709473
    7. ' 
' → logprob: -8.503579139709473
    8. ' n' → logprob: -8.503579139709473
    9. '\' → logprob: -8.628579139709473
    10. 's' → logprob: -8.753579139709473

Token 34: ' sait' (ID: 52101)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3901634216308594
    2. ' va' → logprob: -1.5151634216308594
    3. ' peut' → logprob: -2.1401634216308594
    4. 'f' → logprob: -2.5151634216308594
    5. '_' → logprob: -2.6401634216308594
    6. ' a' → logprob: -2.6401634216308594
    7. 'pe' → logprob: -4.140163421630859
    8. ' pourra' → logprob: -4.265163421630859
    9. ' continue' → logprob: -4.515163421630859
    10. 'n' → logprob: -4.640163421630859

Token 35: ' jamais' (ID: 23077)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12089768797159195
    2. ' pas' → logprob: -2.4958977699279785
    3. 'pas' → logprob: -4.8708977699279785
    4. ' que' → logprob: -5.6208977699279785
    5. '<|end|>' → logprob: -5.6208977699279785
    6. ' rien' → logprob: -5.7458977699279785
    7. ' juste' → logprob: -5.8708977699279785
    8. ' toujours' → logprob: -6.4958977699279785
    9. 'bien' → logprob: -6.8708977699279785
    10. ' bien' → logprob: -7.3708977699279785

Token 36: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30441832542419434
    2. ' 
' → logprob: -2.6794183254241943
    3. ' ' → logprob: -3.0544183254241943
    4. '#' → logprob: -3.1794183254241943
    5. 's' → logprob: -3.8044183254241943
    6. 'i' → logprob: -4.054418563842773
    7. 'if' → logprob: -4.179418563842773
    8. 'n' → logprob: -4.429418563842773
    9. ')' → logprob: -4.429418563842773
    10. '' → logprob: -5.179418563842773

Token 37: '#' (ID: 2)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6872290968894958
    2. 'if' → logprob: -1.5622291564941406
    3. ' ' → logprob: -2.8122291564941406
    4. '#' → logprob: -2.9372291564941406
    5. '
' → logprob: -3.1872291564941406
    6. 'for' → logprob: -3.5622291564941406
    7. ' 
' → logprob: -3.8122291564941406
    8. '.' → logprob: -4.312229156494141
    9. ',' → logprob: -4.437229156494141
    10. ' if' → logprob: -4.812229156494141

Token 38: ' Je' (ID: 4678)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9138516783714294
    2. ' for' → logprob: -1.7888517379760742
    3. 'if' → logprob: -1.9138517379760742
    4. 'i' → logprob: -2.288851737976074
    5. ' if' → logprob: -2.413851737976074
    6. ' i' → logprob: -3.538851737976074
    7. '#' → logprob: -3.913851737976074
    8. 's' → logprob: -4.788851737976074
    9. 'result' → logprob: -4.788851737976074
    10. ' ' → logprob: -4.913851737976074

Token 39: ' vér' (ID: 42524)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -1.3778167963027954
    2. ' veux' → logprob: -1.5028167963027954
    3. ' vais' → logprob: -1.7528167963027954
    4. 's' → logprob: -2.002816677093506
    5. ' ' → logprob: -3.002816677093506
    6. ' peux' → logprob: -3.627816677093506
    7. '#' → logprob: -3.752816677093506
    8. 'v' → logprob: -4.377816677093506
    9. 'vais' → logprob: -4.627816677093506
    10. ' pense' → logprob: -4.877816677093506

Token 40: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0004842962371185422
    2. 'if' → logprob: -7.750484466552734
    3. 'ifier' → logprob: -10.875484466552734
    4. 'ife' → logprob: -11.250484466552734
    5. 'i' → logprob: -12.375484466552734
    6. '```' → logprob: -12.375484466552734
    7. 'ifié' → logprob: -13.000484466552734
    8. 'ifi' → logprob: -13.125484466552734
    9. '\' → logprob: -13.375484466552734
    10. 'ifiez' → logprob: -13.625484466552734

Token 41: ' combien' (ID: 106648)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5492179989814758
    2. 'if' → logprob: -1.299217939376831
    3. 's' → logprob: -2.549217939376831
    4. ' ' → logprob: -3.549217939376831
    5. ' s' → logprob: -4.04921817779541
    6. 'si' → logprob: -4.67421817779541
    7. ' si' → logprob: -5.17421817779541
    8. 'i' → logprob: -5.79921817779541
    9. '_' → logprob: -6.42421817779541
    10. '```' → logprob: -6.92421817779541

Token 42: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.0663213729858398
    2. 's' → logprob: -1.1913213729858398
    3. ' de' → logprob: -2.06632137298584
    4. ' ' → logprob: -2.19132137298584
    5. 'e' → logprob: -3.81632137298584
    6. 'a' → logprob: -4.06632137298584
    7. 'd' → logprob: -4.06632137298584
    8. '#' → logprob: -4.44132137298584
    9. '_' → logprob: -4.69132137298584
    10. 'i' → logprob: -5.06632137298584

Token 43: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3155080080032349
    2. ' ' → logprob: -1.3155080080032349
    3. 'v' → logprob: -2.0655078887939453
    4. ' a' → logprob: -2.6905078887939453
    5. 'm' → logprob: -2.8155078887939453
    6. ' mots' → logprob: -3.4405078887939453
    7. ' espaces' → logprob: -3.4405078887939453
    8. ''' → logprob: -3.8155078887939453
    9. 'spaces' → logprob: -4.440507888793945
    10. 'e' → logprob: -4.440507888793945

Token 44: 'x' (ID: 87)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6077592372894287
    2. 'a' → logprob: -1.1077592372894287
    3. ' ' → logprob: -3.2327592372894287
    4. 'e' → logprob: -3.8577592372894287
    5. ' '' → logprob: -4.107759475708008
    6. 'r' → logprob: -4.482759475708008
    7. 'o' → logprob: -4.982759475708008
    8. ''a' → logprob: -5.357759475708008
    9. 'l' → logprob: -5.857759475708008
    10. ' a' → logprob: -5.857759475708008

Token 45: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01588948257267475
    2. 'x' → logprob: -5.015889644622803
    3. ''s' → logprob: -5.265889644622803
    4. 's' → logprob: -6.765889644622803
    5. 'e' → logprob: -6.890889644622803
    6. 'u' → logprob: -7.765889644622803
    7. ''x' → logprob: -8.140889167785645
    8. ' '' → logprob: -8.265889167785645
    9. ''''' → logprob: -9.015889167785645
    10. 'a' → logprob: -9.140889167785645

Token 46: ' il' (ID: 1793)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.24811029434204102
    2. ' ' → logprob: -1.998110294342041
    3. 's' → logprob: -2.623110294342041
    4. ' x' → logprob: -5.123110294342041
    5. '_' → logprob: -5.873110294342041
    6. ' =' → logprob: -7.873110294342041
    7. ',' → logprob: -7.873110294342041
    8. ''' → logprob: -7.873110294342041
    9. ' '' → logprob: -8.123109817504883
    10. '.' → logprob: -8.123109817504883

Token 47: ' y' (ID: 342)
  Prédit: ''y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''y' → logprob: -0.4967857599258423
    2. ' y' → logprob: -1.6217857599258423
    3. ''' → logprob: -2.6217856407165527
    4. ''a' → logprob: -3.1217856407165527
    5. 'a' → logprob: -3.4967856407165527
    6. 'y' → logprob: -3.6217856407165527
    7. ''s' → logprob: -4.996785640716553
    8. ' a' → logprob: -4.996785640716553
    9. ' '' → logprob: -6.246785640716553
    10. ''''' → logprob: -6.371785640716553

Token 48: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7065236568450928
    2. ' a' → logprob: -0.7065236568450928
    3. ''a' → logprob: -4.456523895263672
    4. 's' → logprob: -7.081523895263672
    5. '_a' → logprob: -7.956523895263672
    6. ' ' → logprob: -9.206523895263672
    7. 'x' → logprob: -9.706523895263672
    8. '	a' → logprob: -10.206523895263672
    9. 'ont' → logprob: -10.331523895263672
    10. '#' → logprob: -10.456523895263672

Token 49: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05597108602523804
    2. 's' → logprob: -3.305971145629883
    3. 'count' → logprob: -4.430971145629883
    4. ' x' → logprob: -6.430971145629883
    5. 'n' → logprob: -6.555971145629883
    6. ' ' → logprob: -7.305971145629883
    7. 'c' → logprob: -7.930971145629883
    8. ',' → logprob: -8.305971145629883
    9. 'cnt' → logprob: -8.805971145629883
    10. ' count' → logprob: -8.930971145629883

Token 50: ' je' (ID: 1264)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.769042432308197
    2. ' x' → logprob: -1.6440424919128418
    3. ' ' → logprob: -1.7690424919128418
    4. 's' → logprob: -2.144042491912842
    5. ' s' → logprob: -3.144042491912842
    6. ' c' → logprob: -5.769042491912842
    7. ' '' → logprob: -6.894042491912842
    8. ''' → logprob: -6.894042491912842
    9. 'n' → logprob: -7.019042491912842
    10. 'c' → logprob: -7.019042491912842

Token 51: ' pense' (ID: 29077)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0151299238204956
    2. '_' → logprob: -1.6401299238204956
    3. 'count' → logprob: -1.8901299238204956
    4. '_count' → logprob: -2.390130043029785
    5. ' count' → logprob: -2.765130043029785
    6. '_x' → logprob: -3.015130043029785
    7. ' compte' → logprob: -3.765130043029785
    8. ' =' → logprob: -3.890130043029785
    9. 's' → logprob: -4.515130043029785
    10. ' ' → logprob: -5.015130043029785

Token 52: ' que' (ID: 661)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6511138677597046
    2. ' ' → logprob: -1.5261138677597046
    3. 's' → logprob: -1.6511138677597046
    4. ',' → logprob: -3.151113986968994
    5. '.' → logprob: -4.401113986968994
    6. ' x' → logprob: -5.401113986968994
    7. ' =' → logprob: -5.651113986968994
    8. ' s' → logprob: -6.901113986968994
    9. ''' → logprob: -7.151113986968994
    10. '=' → logprob: -7.276113986968994

Token 53: ' ' (ID: 220)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6042785048484802
    2. 's' → logprob: -1.104278564453125
    3. ' c' → logprob: -3.104278564453125
    4. 'c' → logprob: -3.854278564453125
    5. 'x' → logprob: -3.979278564453125
    6. ' x' → logprob: -4.354278564453125
    7. ''s' → logprob: -5.354278564453125
    8. ' ça' → logprob: -5.354278564453125
    9. ' '' → logprob: -5.604278564453125
    10. ''' → logprob: -6.729278564453125

Token 54: '7' (ID: 22)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13459552824497223
    2. 'x' → logprob: -2.6345956325531006
    3. ''' → logprob: -3.5095956325531006
    4. ''s' → logprob: -4.1345953941345215
    5. ' s' → logprob: -5.6345953941345215
    6. ''x' → logprob: -6.0095953941345215
    7. 'c' → logprob: -7.7595953941345215
    8. 'len' → logprob: -7.8845953941345215
    9. 'l' → logprob: -8.75959587097168
    10. ' x' → logprob: -9.00959587097168

Token 55: ' c' (ID: 274)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1723724901676178
    2. 'x' → logprob: -2.547372579574585
    3. ' ' → logprob: -3.547372579574585
    4. ''' → logprob: -4.172372341156006
    5. ''s' → logprob: -4.672372341156006
    6. ' s' → logprob: -4.797372341156006
    7. '_' → logprob: -5.047372341156006
    8. ' =' → logprob: -5.672372341156006
    9. '.' → logprob: -6.047372341156006
    10. '=' → logprob: -6.047372341156006

Token 56: ''est' (ID: 6616)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.46966278553009033
    2. ''est' → logprob: -1.0946627855300903
    3. ''a' → logprob: -4.594662666320801
    4. 'est' → logprob: -4.844662666320801
    5. 'e' → logprob: -4.969662666320801
    6. ' '' → logprob: -5.219662666320801
    7. 'a' → logprob: -5.719662666320801
    8. ''''' → logprob: -6.469662666320801
    9. ''e' → logprob: -7.219662666320801
    10. ''s' → logprob: -7.344662666320801

Token 57: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2432528734207153
    2. ' le' → logprob: -1.3682528734207153
    3. ' l' → logprob: -2.118252754211426
    4. ' bien' → logprob: -2.118252754211426
    5. ' la' → logprob: -2.868252754211426
    6. ' ce' → logprob: -3.243252754211426
    7. ' suff' → logprob: -3.743252754211426
    8. 'l' → logprob: -4.368252754211426
    9. 'le' → logprob: -4.493252754211426
    10. ' mieux' → logprob: -4.618252754211426

Token 58: ' limite' (ID: 48939)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2095157504081726
    2. ' ' → logprob: -2.0845158100128174
    3. 's' → logprob: -3.4595158100128174
    4. ' x' → logprob: -3.9595158100128174
    5. ''' → logprob: -4.834515571594238
    6. ' '' → logprob: -6.459515571594238
    7. ',' → logprob: -7.084515571594238
    8. '.' → logprob: -7.334515571594238
    9. ' s' → logprob: -8.084515571594238
    10. ' =' → logprob: -8.209515571594238

Token 59: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003562892321497202
    2. ' x' → logprob: -6.503562927246094
    3. 'n' → logprob: -6.753562927246094
    4. 's' → logprob: -7.753562927246094
    5. ' ' → logprob: -8.378562927246094
    6. 'count' → logprob: -9.378562927246094
    7. ',' → logprob: -10.253562927246094
    8. 'a' → logprob: -10.878562927246094
    9. '_' → logprob: -11.503562927246094
    10. 'c' → logprob: -11.628562927246094

Token 60: 'comp' (ID: 3697)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00024512779782526195
    2. ' x' → logprob: -9.125245094299316
    3. 'count' → logprob: -10.000245094299316
    4. 'n' → logprob: -10.375245094299316
    5. 's' → logprob: -11.000245094299316
    6. ''x' → logprob: -11.625245094299316
    7. '.' → logprob: -12.125245094299316
    8. 'c' → logprob: -12.125245094299316
    9. ' ' → logprob: -12.625245094299316
    10. ',' → logprob: -12.625245094299316

Token 61: 'teur' (ID: 45262)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00642817560583353
    2. 'te' → logprob: -6.256428241729736
    3. '_' → logprob: -6.506428241729736
    4. 'x' → logprob: -7.006428241729736
    5. ' =' → logprob: -7.881428241729736
    6. '_x' → logprob: -7.881428241729736
    7. '=' → logprob: -7.881428241729736
    8. 'e' → logprob: -8.381427764892578
    9. 'ter' → logprob: -8.506427764892578
    10. 'teur' → logprob: -8.506427764892578

Token 62: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.7933753132820129
    2. '_' → logprob: -1.1683752536773682
    3. ' =' → logprob: -1.6683752536773682
    4. '=' → logprob: -3.168375253677368
    5. 'x' → logprob: -5.543375492095947
    6. 's' → logprob: -6.543375492095947
    7. ' ' → logprob: -7.418375492095947
    8. '_s' → logprob: -9.418375015258789
    9. ')' → logprob: -10.293375015258789
    10. '_=' → logprob: -10.543375015258789

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009611827321350574
    2. '=' → logprob: -4.7596116065979
    3. '_' → logprob: -7.8846116065979
    4. 's' → logprob: -7.8846116065979
    5. ' ' → logprob: -8.509612083435059
    6. ' ==' → logprob: -10.759612083435059
    7. '=s' → logprob: -12.259612083435059
    8. ')' → logprob: -12.759612083435059
    9. ' +=' → logprob: -12.759612083435059
    10. '   ' → logprob: -12.884612083435059

Token 64: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2001645416021347
    2. ' s' → logprob: -1.825164556503296
    3. '0' → logprob: -3.950164556503296
    4. ' ' → logprob: -6.950164318084717
    5. '`s' → logprob: -13.575164794921875
    6. '(s' → logprob: -14.575164794921875
    7. '	s' → logprob: -15.200164794921875
    8. ' ' → logprob: -15.325164794921875
    9. '```' → logprob: -15.575164794921875
    10. '_s' → logprob: -16.325164794921875

Token 65: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.0032002893276512623
    2. '.' → logprob: -5.753200054168701
    3. '.c' → logprob: -10.75320053100586
    4. '.Count' → logprob: -14.75320053100586
    5. 'count' → logprob: -15.25320053100586
    6. '.co' → logprob: -15.75320053100586
    7. ' .' → logprob: -16.25320053100586
    8. '.lower' → logprob: -16.50320053100586
    9. '.replace' → logprob: -17.87820053100586
    10. '.split' → logprob: -18.37820053100586

Token 66: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.10023362934589386
    2. '(' → logprob: -2.350233554840088
    3. '("' → logprob: -10.725234031677246
    4. ''' → logprob: -12.725234031677246
    5. '(x' → logprob: -14.600234031677246
    6. '("("' → logprob: -15.100234031677246
    7. '(
' → logprob: -15.225234031677246
    8. ''s' → logprob: -15.725234031677246
    9. ' (' → logprob: -15.850234031677246
    10. '()' → logprob: -15.850234031677246

Token 67: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.180258191714529e-06
    2. '"x' → logprob: -11.875008583068848
    3. ''x' → logprob: -13.750008583068848
    4. ' x' → logprob: -16.25000762939453
    5. '"' → logprob: -17.50000762939453
    6. ''' → logprob: -18.75000762939453
    7. '")' → logprob: -18.87500762939453
    8. '7' → logprob: -19.62500762939453
    9. '_x' → logprob: -20.50000762939453
    10. ')x' → logprob: -20.75000762939453

Token 68: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0002004410926019773
    2. '"' → logprob: -8.625200271606445
    3. ')' → logprob: -11.250200271606445
    4. '")
' → logprob: -12.625200271606445
    5. ')")' → logprob: -12.750200271606445
    6. ' ")' → logprob: -14.500200271606445
    7. 'x' → logprob: -15.000200271606445
    8. '"))' → logprob: -15.125200271606445
    9. '')' → logprob: -15.750200271606445
    10. '")

' → logprob: -16.000200271606445

Token 69: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.403326153755188
    2. '
' → logprob: -1.403326153755188
    3. ' if' → logprob: -3.4033260345458984
    4. '<|end|>' → logprob: -4.528326034545898
    5. ' ' → logprob: -4.653326034545898
    6. '>' → logprob: -5.278326034545898
    7. ')' → logprob: -5.403326034545898
    8. '#' → logprob: -5.403326034545898
    9. '7' → logprob: -5.653326034545898
    10. 'x' → logprob: -6.278326034545898

Token 70: ' compteur' (ID: 163344)
  Prédit: ' compteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compteur' → logprob: -0.001019948162138462
    2. ' ' → logprob: -7.5010199546813965
    3. ' ' → logprob: -8.501019477844238
    4. ' comp' → logprob: -9.126019477844238
    5. 'comp' → logprob: -9.376019477844238
    6. ' compte' → logprob: -10.251019477844238
    7. ' compter' → logprob: -10.626019477844238
    8. '  ' → logprob: -13.126019477844238
    9. ' espace' → logprob: -13.126019477844238
    10. ' compt' → logprob: -13.376019477844238

Token 71: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.005938159301877022
    2. '_' → logprob: -5.1309380531311035
    3. ' _' → logprob: -12.255938529968262
    4. '_=' → logprob: -14.255938529968262
    5. '_

' → logprob: -14.380938529968262
    6. '__' → logprob: -14.755938529968262
    7. '"_' → logprob: -14.880938529968262
    8. '_<' → logprob: -15.130938529968262
    9. '>' → logprob: -15.255938529968262
    10. '_a' → logprob: -15.255938529968262

Token 72: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04686587303876877
    2. '>' → logprob: -3.421865940093994
    3. ' <' → logprob: -5.296865940093994
    4. ' >=' → logprob: -5.546865940093994
    5. ' <=' → logprob: -5.671865940093994
    6. ' ' → logprob: -7.546865940093994
    7. '<' → logprob: -8.796865463256836
    8. '>=' → logprob: -9.796865463256836
    9. '<=' → logprob: -10.296865463256836
    10. ' ==' → logprob: -12.296865463256836

Token 73: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6332235336303711
    2. '7' → logprob: -0.7582235336303711
    3. '6' → logprob: -7.383223533630371
    4. ' ' → logprob: -13.133223533630371
    5. '  ' → logprob: -15.508223533630371
    6. '```' → logprob: -16.133224487304688
    7. '=' → logprob: -16.633224487304688
    8. ' seven' → logprob: -16.758224487304688
    9. '"' → logprob: -17.070724487304688
    10. '   ' → logprob: -17.133224487304688

Token 74: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0004618896055035293
    2. ' ' → logprob: -7.750462055206299
    3. '6' → logprob: -10.37546157836914
    4. '```' → logprob: -17.87546157836914
    5. ' ' → logprob: -18.25046157836914
    6. '  ' → logprob: -18.62546157836914
    7. '' → logprob: -19.00046157836914
    8. '７' → logprob: -19.12546157836914
    9. '"' → logprob: -19.25046157836914
    10. '   ' → logprob: -19.25046157836914

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009146820520982146
    2. ' :' → logprob: -7.000914573669434
    3. ':
' → logprob: -12.750914573669434
    4. ':**' → logprob: -15.875914573669434
    5. '):' → logprob: -16.62591552734375
    6. ' :
' → logprob: -17.75091552734375
    7. '.' → logprob: -18.75091552734375
    8. '：' → logprob: -18.87591552734375
    9. ':return' → logprob: -19.25091552734375
    10. ' and' → logprob: -19.25091552734375

Token 76: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3171105980873108
    2. '   ' → logprob: -2.067110538482666
    3. ' print' → logprob: -3.192110538482666
    4. '    ' → logprob: -3.317110538482666
    5. ' ' → logprob: -3.442110538482666
    6. ' :' → logprob: -3.942110538482666
    7. 'print' → logprob: -5.317110538482666
    8. ':
' → logprob: -5.567110538482666
    9. '  ' → logprob: -6.817110538482666
    10. ' :
' → logprob: -6.817110538482666

Token 77: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.04010962322354317
    2. 'print' (adapté à ' print') → logprob: -3.415109634399414
    3. ' pass' → logprob: -5.790109634399414
    4. ' raise' → logprob: -6.540109634399414
    5. '   ' → logprob: -6.665109634399414
    6. '    ' → logprob: -8.040109634399414
    7. ' exit' → logprob: -9.040109634399414
    8. 'raise' → logprob: -9.540109634399414
    9. ' ' → logprob: -10.040109634399414
    10. 'pass' → logprob: -10.165109634399414

Token 78: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3133533000946045
    2. '(' → logprob: -1.3133533000946045
    3. '()' → logprob: -10.188353538513184
    4. '('' → logprob: -10.938353538513184
    5. '("")' → logprob: -10.938353538513184
    6. '("("' → logprob: -11.188353538513184
    7. '(">' → logprob: -13.688353538513184
    8. '("""' → logprob: -14.563353538513184
    9. '(""' → logprob: -14.688353538513184
    10. '(
' → logprob: -14.813353538513184

Token 79: 'NO' (ID: 14695)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.15812474489212036
    2. 'Erreur' → logprob: -2.9081246852874756
    3. 'Too' → logprob: -3.0331246852874756
    4. 't' → logprob: -4.533124923706055
    5. ' Trop' → logprob: -4.658124923706055
    6. 'Lim' → logprob: -5.283124923706055
    7. ' trop' → logprob: -5.408124923706055
    8. 'Nombre' → logprob: -6.158124923706055
    9. 'er' → logprob: -6.283124923706055
    10. '"T' → logprob: -6.533124923706055

Token 80: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00019829542725346982
    2. '"' → logprob: -9.625198364257812
    3. '!")' → logprob: -10.000198364257812
    4. '")
' → logprob: -10.125198364257812
    5. ' ")' → logprob: -11.125198364257812
    6. ')' → logprob: -11.250198364257812
    7. '")
' → logprob: -12.125198364257812
    8. 'x' → logprob: -12.625198364257812
    9. ')")' → logprob: -12.625198364257812
    10. 'e' → logprob: -13.625198364257812

Token 81: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.010470178909599781
    2. ' else' → logprob: -4.760470390319824
    3. 'elif' → logprob: -7.010470390319824
    4. '   ' → logprob: -7.885470390319824
    5. '<|end|>' → logprob: -8.385470390319824
    6. '
' → logprob: -8.635470390319824
    7. ')' → logprob: -9.510470390319824
    8. '```' → logprob: -10.385470390319824
    9. 'e' → logprob: -11.760470390319824
    10. '<|end|>' → logprob: -11.760470390319824

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011689399980241433
    2. ':
' → logprob: -9.250117301940918
    3. ' :' → logprob: -10.875117301940918
    4. '   ' → logprob: -13.375117301940918
    5. ' :
' → logprob: -16.2501163482666
    6. ':
' → logprob: -17.0001163482666
    7. '):' → logprob: -17.3751163482666
    8. ':

' → logprob: -18.1251163482666
    9. ':def' → logprob: -18.1251163482666
    10. ',' → logprob: -18.6251163482666

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001358400477329269
    2. 'print' → logprob: -9.12513542175293
    3. ' print' → logprob: -10.75013542175293
    4. '       ' → logprob: -12.87513542175293
    5. '    ' → logprob: -13.87513542175293
    6. '    
' → logprob: -14.00013542175293
    7. '"' → logprob: -14.87513542175293
    8. '   ' → logprob: -15.37513542175293
    9. '(' → logprob: -15.62513542175293
    10. '	print' → logprob: -15.87513542175293

Token 84: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.43632104992866516
    2. ' print' → logprob: -1.0613210201263428
    3. '   ' → logprob: -4.936321258544922
    4. ' ' → logprob: -8.186321258544922
    5. '    ' → logprob: -10.561321258544922
    6. '  ' → logprob: -10.561321258544922
    7. '    
' → logprob: -10.811321258544922
    8. '	print' → logprob: -11.561321258544922
    9. ' prin' → logprob: -11.936321258544922
    10. 'pr' → logprob: -11.936321258544922

Token 85: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11667917668819427
    2. '("' → logprob: -2.3666791915893555
    3. '("("' → logprob: -4.1166791915893555
    4. '("(' → logprob: -10.741679191589355
    5. '("")' → logprob: -11.741679191589355
    6. '('' → logprob: -12.366679191589355
    7. '("""' → logprob: -13.616679191589355
    8. '()' → logprob: -13.616679191589355
    9. '(
' → logprob: -14.116679191589355
    10. '(""' → logprob: -14.241679191589355

Token 86: 'YES' (ID: 31958)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5825735330581665
    2. 'YES' → logprob: -0.8325735330581665
    3. 'OK' → logprob: -5.832573413848877
    4. 'O' → logprob: -5.957573413848877
    5. '"O' → logprob: -6.957573413848877
    6. 'YO' → logprob: -9.832573890686035
    7. '("' → logprob: -10.457573890686035
    8. 'Y' → logprob: -11.457573890686035
    9. 'YE' → logprob: -11.707573890686035
    10. 'Yes' → logprob: -11.832573890686035

Token 87: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -8.304016228066757e-05
    2. ')' → logprob: -9.500082969665527
    3. ')")' → logprob: -11.750082969665527
    4. '"' → logprob: -15.875082969665527
    5. '")
' → logprob: -16.000083923339844
    6. '')' → logprob: -18.500083923339844
    7. ' ")' → logprob: -18.750083923339844
    8. ')"' → logprob: -19.125083923339844
    9. '!")' → logprob: -19.250083923339844
    10. '}")' → logprob: -19.875083923339844

Token 88: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' Fr' (ID: 2312)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: 'anchement' (ID: 141995)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.39320406317710876
    2. 'a' → logprob: -2.1432039737701416
    3. 'ançais' → logprob: -2.7682039737701416
    4. '```' → logprob: -3.5182039737701416
    5. 'ait' → logprob: -3.7682039737701416
    6. ')' → logprob: -4.518204212188721
    7. 'é' → logprob: -4.893204212188721
    8. 'aient' → logprob: -5.018204212188721
    9. '<|end|>' → logprob: -5.018204212188721
    10. 'ont' → logprob: -5.018204212188721

Token 91: ' je' (ID: 1264)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' sais' (ID: 30010)
  Prédit: ' pense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pense' → logprob: -0.663834810256958
    2. 's' → logprob: -1.663834810256958
    3. ' trouve' → logprob: -2.163834810256958
    4. 'print' → logprob: -2.788834810256958
    5. 'a' → logprob: -3.288834810256958
    6. ' suis' → logprob: -3.788834810256958
    7. 'p' → logprob: -3.788834810256958
    8. 'vais' → logprob: -5.288834571838379
    9. '#' → logprob: -5.788834571838379
    10. ' print' → logprob: -5.913834571838379

Token 93: ' pas' (ID: 2173)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27932706475257874
    2. '<|end|>' → logprob: -2.029327154159546
    3. ' rien' → logprob: -2.779327154159546
    4. '#' → logprob: -4.279326915740967
    5. '```' → logprob: -4.404326915740967
    6. 'r' → logprob: -5.529326915740967
    7. 'f' → logprob: -5.779326915740967
    8. ')' → logprob: -5.904326915740967
    9. '  ' → logprob: -6.029326915740967
    10. 'b' → logprob: -6.279326915740967

Token 94: ' si' (ID: 1784)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' ça' (ID: 13590)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.2941080331802368
    2. 'c' → logprob: -1.7941080331802368
    3. ' ce' → logprob: -2.2941079139709473
    4. 'cela' → logprob: -2.4191079139709473
    5. 'il' → logprob: -2.5441079139709473
    6. ' il' → logprob: -2.7941079139709473
    7. ' #' → logprob: -2.7941079139709473
    8. ' ça' → logprob: -3.4191079139709473
    9. '#' → logprob: -3.7941079139709473
    10. ' ' → logprob: -4.169107913970947

Token 96: ' g' (ID: 329)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -1.7342066764831543
    2. 's' → logprob: -2.1092066764831543
    3. ' va' → logprob: -2.1092066764831543
    4. ' marche' → logprob: -2.3592066764831543
    5. 'sert' → logprob: -2.6092066764831543
    6. 'f' → logprob: -2.9842066764831543
    7. 'fait' → logprob: -3.1092066764831543
    8. 'mar' → logprob: -3.3592066764831543
    9. 'a' → logprob: -3.4842066764831543
    10. 'march' → logprob: -3.8592066764831543

Token 97: 'ère' (ID: 4346)
  Prédit: 'ard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ard' → logprob: -0.7174059152603149
    2. 'ère' → logprob: -1.092405915260315
    3. 'arde' → logprob: -2.3424057960510254
    4. 'er' → logprob: -4.217405796051025
    5. 'ere' → logprob: -4.592405796051025
    6. 'ène' → logprob: -4.717405796051025
    7. 'ar' → logprob: -5.092405796051025
    8. 'arder' → logprob: -5.217405796051025
    9. 'èr' → logprob: -5.717405796051025
    10. 'u' → logprob: -5.717405796051025

Token 98: ' tout' (ID: 5501)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' mais' (ID: 2899)
  Prédit: ' mais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mais' → logprob: -0.4837605059146881
    2. ' but' → logprob: -0.9837604761123657
    3. 'mais' → logprob: -5.483760356903076
    4. 'but' → logprob: -5.733760356903076
    5. '<|end|>' → logprob: -6.733760356903076
    6. '```' → logprob: -8.608760833740234
    7. ' je' → logprob: -8.733760833740234
    8. ' rien' → logprob: -8.983760833740234
    9. '...' → logprob: -9.233760833740234
    10. ' c' → logprob: -9.358760833740234

Token 101: ' ça' (ID: 13590)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2500359117984772
    2. 'c' → logprob: -1.8750358819961548
    3. 'ça' → logprob: -3.1250360012054443
    4. ' ça' → logprob: -4.250035762786865
    5. ' voilà' → logprob: -5.250035762786865
    6. ' on' → logprob: -6.875035762786865
    7. ' ' → logprob: -7.625035762786865
    8. '#' → logprob: -7.875035762786865
    9. ' bon' → logprob: -8.125036239624023
    10. 'je' → logprob: -8.250036239624023

Token 102: ' devrait' (ID: 52773)
  Prédit: ' marche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marche' → logprob: -0.8363305926322937
    2. ' semble' → logprob: -1.8363306522369385
    3. ' ira' → logprob: -1.9613306522369385
    4. ' fonctionne' → logprob: -2.7113306522369385
    5. ' va' → logprob: -2.9613306522369385
    6. ' ' → logprob: -3.7113306522369385
    7. '<|end|>' → logprob: -3.9613306522369385
    8. '```' → logprob: -4.461330413818359
    9. ' devrait' → logprob: -4.586330413818359
    10. ' fera' → logprob: -4.586330413818359

Token 103: ' passer' (ID: 27727)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 101
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 50
Précision stricte (1ère position): 21.78%
Précision adaptée (1ère position): 22.77%
Précision (top 10): 49.50%
================================================================================
