================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
if N % 2 == 0:
    print(N)
else:
    print(N * 2)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001967457792488858
    2. '```' → logprob: -9.50019645690918
    3. '(N' → logprob: -10.37519645690918
    4. '`' → logprob: -10.87519645690918
    5. '(
' → logprob: -11.00019645690918
    6. ')' → logprob: -11.62519645690918
    7. '("("' → logprob: -11.62519645690918
    8. ''' → logprob: -11.62519645690918
    9. '()' → logprob: -11.87519645690918
    10. '('' → logprob: -12.25019645690918

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5316423177719116
    2. ')' → logprob: -0.9066423177719116
    3. '()' → logprob: -5.156642436981201
    4. '())' → logprob: -6.656642436981201
    5. '(
' → logprob: -7.656642436981201
    6. '```' → logprob: -8.781641960144043
    7. '))' → logprob: -8.906641960144043
    8. '")' → logprob: -9.406641960144043
    9. '')' → logprob: -9.531641960144043
    10. '(

' → logprob: -9.906641960144043

Token 5: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8320107460021973
    2. 'for' → logprob: -1.8320107460021973
    3. 'a' → logprob: -2.0820107460021973
    4. 's' → logprob: -2.2070107460021973
    5. '*' → logprob: -2.5820107460021973
    6. ''' → logprob: -2.8320107460021973
    7. '#' → logprob: -3.2070107460021973
    8. ')' → logprob: -3.2070107460021973
    9. 'i' → logprob: -3.3320107460021973
    10. 'x' → logprob: -3.3320107460021973

Token 6: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10060916095972061
    2. ' N' → logprob: -2.350609064102173
    3. '  ' → logprob: -8.350608825683594
    4. 'N' → logprob: -9.725608825683594
    5. ''' → logprob: -10.100608825683594
    6. ' "' → logprob: -11.600608825683594
    7. '"' → logprob: -11.725608825683594
    8. ' not' → logprob: -11.725608825683594
    9. ' a' → logprob: -11.725608825683594
    10. ' ' → logprob: -11.975608825683594

Token 7: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.25238746404647827
    2. ' ' → logprob: -1.752387523651123
    3. ' <' → logprob: -4.127387523651123
    4. ' >=' → logprob: -4.627387523651123
    5. ' %' → logprob: -4.877387523651123
    6. ' ==' → logprob: -5.002387523651123
    7. '>' → logprob: -5.252387523651123
    8. ' <=' → logprob: -5.877387523651123
    9. '%' → logprob: -7.627387523651123
    10. '<' → logprob: -9.002387046813965

Token 8: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14274026453495026
    2. '2' → logprob: -2.017740249633789
    3. '3' → logprob: -10.642740249633789
    4. '4' → logprob: -11.642740249633789
    5. '```' → logprob: -11.642740249633789
    6. '1' → logprob: -12.142740249633789
    7. '32' → logprob: -12.267740249633789
    8. ')' → logprob: -12.892740249633789
    9. ' ```' → logprob: -13.017740249633789
    10. '  ' → logprob: -13.142740249633789

Token 9: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0016011487459763885
    2. '3' → logprob: -6.501601219177246
    3. '4' → logprob: -10.251601219177246
    4. ' ' → logprob: -10.876601219177246
    5. '5' → logprob: -11.001601219177246
    6. '10' → logprob: -11.251601219177246
    7. '1' → logprob: -11.876601219177246
    8. '7' → logprob: -12.126601219177246
    9. '6' → logprob: -14.126601219177246
    10. '8' → logprob: -14.751601219177246

Token 10: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23472465574741364
    2. ' !=' → logprob: -2.484724760055542
    3. '==' → logprob: -2.609724760055542
    4. '=' → logprob: -3.234724760055542
    5. '!=' → logprob: -5.484724521636963
    6. ' =' → logprob: -5.609724521636963
    7. ' ' → logprob: -5.734724521636963
    8. '!' → logprob: -6.734724521636963
    9. ')' → logprob: -7.984724521636963
    10. ':' → logprob: -9.609724998474121

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01815134845674038
    2. '0' → logprob: -4.01815128326416
    3. '1' → logprob: -13.89315128326416
    4. '2' → logprob: -15.14315128326416
    5. ' ' → logprob: -15.26815128326416
    6. ')' → logprob: -17.768152236938477
    7. '3' → logprob: -18.393152236938477
    8. ' ,' → logprob: -18.893152236938477
    9. ''' → logprob: -18.893152236938477
    10. '```' → logprob: -19.018152236938477

Token 12: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006739646662026644
    2. ' ' → logprob: -5.006739616394043
    3. '1' → logprob: -10.631739616394043
    4. '2' → logprob: -16.63174057006836
    5. '```' → logprob: -17.38174057006836
    6. '=' → logprob: -17.63174057006836
    7. ')' → logprob: -17.75674057006836
    8. ''' → logprob: -18.31924057006836
    9. '  ' → logprob: -19.06924057006836
    10. '==' → logprob: -19.13174057006836

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.511406809295295e-06
    2. ':**' → logprob: -13.000006675720215
    3. ' :' → logprob: -13.500006675720215
    4. '':'' → logprob: -13.875006675720215
    5. '':' → logprob: -14.375006675720215
    6. ':
' → logprob: -14.625006675720215
    7. '):' → logprob: -15.000006675720215
    8. '":"' → logprob: -16.1250057220459
    9. '>:' → logprob: -16.3750057220459
    10. '":' → logprob: -17.0000057220459

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049160201102495193
    2. ' print' → logprob: -3.5491602420806885
    3. 'print' → logprob: -4.674160003662109
    4. '\n' → logprob: -5.299160003662109
    5. '\' → logprob: -6.549160003662109
    6. ' ' → logprob: -6.924160003662109
    7. '    ' → logprob: -7.174160003662109
    8. ''' → logprob: -7.299160003662109
    9. '    
' → logprob: -7.424160003662109
    10. '"' → logprob: -9.29916000366211

Token 15: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.036314573138952255
    2. 'print' (adapté à ' print') → logprob: -3.5363144874572754
    3. '   ' → logprob: -5.036314487457275
    4. ' ' → logprob: -11.161314964294434
    5. '    ' → logprob: -11.536314964294434
    6. ' \' → logprob: -11.786314964294434
    7. '```' → logprob: -13.411314964294434
    8. '\' → logprob: -13.536314964294434
    9. ' `' → logprob: -13.536314964294434
    10. ''' → logprob: -13.536314964294434

Token 16: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01372443325817585
    2. '("' → logprob: -4.763724327087402
    3. '('' → logprob: -5.638724327087402
    4. '("("' → logprob: -6.513724327087402
    5. '("")' → logprob: -10.513724327087402
    6. '()' → logprob: -11.513724327087402
    7. '(N' → logprob: -12.138724327087402
    8. '"' → logprob: -12.388724327087402
    9. '(""' → logprob: -13.013724327087402
    10. '("""' → logprob: -13.138724327087402

Token 17: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ' )' → logprob: -13.500005722045898
    3. '*' → logprob: -13.750005722045898
    4. '+' → logprob: -13.875005722045898
    5. '')' → logprob: -14.125005722045898
    6. '))' → logprob: -14.875005722045898
    7. ')
' → logprob: -15.125005722045898
    8. ' ' → logprob: -16.2500057220459
    9. '")' → logprob: -16.2500057220459
    10. '`)' → logprob: -16.7500057220459

Token 18: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.029087580740451813
    2. ' else' → logprob: -3.654087543487549
    3. '```' → logprob: -6.904087543487549
    4. ')' → logprob: -7.029087543487549
    5. 'e' → logprob: -8.279088020324707
    6. ':' → logprob: -8.404088020324707
    7. 'elif' → logprob: -8.779088020324707
    8. ' ' → logprob: -10.029088020324707
    9. '<|end|>' → logprob: -10.029088020324707
    10. '   ' → logprob: -10.154088020324707

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0325924449716695e-05
    2. ':
' → logprob: -12.37501049041748
    3. '):' → logprob: -13.25001049041748
    4. ' :' → logprob: -13.25001049041748
    5. '   ' → logprob: -13.37501049041748
    6. '():' → logprob: -14.62501049041748
    7. ':**' → logprob: -15.50001049041748
    8. '':' → logprob: -16.625009536743164
    9. ',' → logprob: -16.750009536743164
    10. '    ' → logprob: -17.000009536743164

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004685137886554003
    2. '    
' → logprob: -6.129684925079346
    3. '    ' → logprob: -6.629684925079346
    4. '```' → logprob: -8.379685401916504
    5. '(' → logprob: -8.879685401916504
    6. 'print' → logprob: -9.004685401916504
    7. ''' → logprob: -9.129685401916504
    8. '     
' → logprob: -9.254685401916504
    9. ' 
' → logprob: -9.504685401916504
    10. '\n' → logprob: -9.504685401916504

Token 21: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -1.0172572135925293
    2. ' N' → logprob: -1.1422572135925293
    3. 'print' (adapté à ' print') → logprob: -1.2672572135925293
    4. '   ' → logprob: -4.517257213592529
    5. '    ' → logprob: -4.767257213592529
    6. 'N' → logprob: -4.892257213592529
    7. ' ' → logprob: -5.142257213592529
    8. '(N' → logprob: -6.142257213592529
    9. '1' → logprob: -7.267257213592529
    10. '0' → logprob: -7.267257213592529

Token 22: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04922273010015488
    2. '(N' → logprob: -3.049222707748413
    3. '()' → logprob: -7.549222946166992
    4. '('' → logprob: -9.799222946166992
    5. '((' → logprob: -10.424222946166992
    6. '("' → logprob: -11.424222946166992
    7. '(-' → logprob: -13.424222946166992
    8. '(None' → logprob: -13.424222946166992
    9. '("("' → logprob: -13.549222946166992
    10. '(`' → logprob: -13.549222946166992

Token 23: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12821047008037567
    2. ')' → logprob: -2.5032105445861816
    3. ' +' → logprob: -3.7532105445861816
    4. '-' → logprob: -4.253210544586182
    5. ' -' → logprob: -8.003210067749023
    6. ' )' → logprob: -8.628210067749023
    7. '+)' → logprob: -8.878210067749023
    8. '))' → logprob: -9.878210067749023
    9. ' ' → logprob: -9.878210067749023
    10. '*' → logprob: -10.378210067749023

Token 24: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6209955811500549
    2. '2' → logprob: -0.8709955811500549
    3. ' ' → logprob: -3.24599552154541
    4. 'N' → logprob: -5.49599552154541
    5. ' N' → logprob: -6.99599552154541
    6. '5' → logprob: -10.49599552154541
    7. ')' → logprob: -10.87099552154541
    8. '1' → logprob: -11.24599552154541
    9. '9' → logprob: -11.49599552154541
    10. '   ' → logprob: -11.87099552154541

Token 25: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10518460720777512
    2. '2' → logprob: -2.355184555053711
    3. 'N' → logprob: -5.355184555053711
    4. ' ' → logprob: -8.855184555053711
    5. '5' → logprob: -10.730184555053711
    6. '9' → logprob: -10.730184555053711
    7. '-' → logprob: -11.230184555053711
    8. '4' → logprob: -11.730184555053711
    9. '1' → logprob: -11.730184555053711
    10. ' N' → logprob: -12.105184555053711

Token 26: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.75
    3. ' )' → logprob: -16.375
    4. '))' → logprob: -17.625
    5. '')' → logprob: -17.625
    6. '`)' → logprob: -17.75
    7. ')`' → logprob: -18.875
    8. '*' → logprob: -19.0
    9. '```' → logprob: -19.0
    10. '）' → logprob: -19.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 24
Tokens correctement prédits (1ère position, stricte): 12
Tokens correctement prédits (1ère position, avec adaptation): 12
Tokens correctement prédits (top 10): 21
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 87.50%
================================================================================
