================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demander à l'utilisateur de saisir des valeurs séparées par des espaces
entered_values = input().split()

# Trier les valeurs par ordre décroissant (du plus grand au plus petit)
entered_values.sort(reverse=True)

# Prendre les deux premiers éléments et les mettre bout à bout
combined = str(entered_values[0]) + str(entered_values[1])

# Convertir le résultat en nombre entier
number1 = int(combined)

# Prendre le troisième élément et le convertir en entier
number2 = int(entered_values[2])

# Additionner les deux nombres et afficher le résultat
print(number1 + number2)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ander' (ID: 9330)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10969100892543793
    2. ' ' → logprob: -2.8596909046173096
    3. ':' → logprob: -4.234691143035889
    4. '```' → logprob: -4.984691143035889
    5. ' à' → logprob: -5.484691143035889
    6. ''' → logprob: -5.484691143035889
    7. ' d' → logprob: -6.109691143035889
    8. ' de' → logprob: -6.359691143035889
    9. ' a' → logprob: -6.609691143035889
    10. 's' → logprob: -6.609691143035889

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.18355052173137665
    2. 'util' → logprob: -1.933550477027893
    3. 'user' → logprob: -4.1835503578186035
    4. ' l' → logprob: -5.5585503578186035
    5. 'u' → logprob: -5.8085503578186035
    6. 'us' → logprob: -7.4335503578186035
    7. 'un' → logprob: -9.433550834655762
    8. ' user' → logprob: -9.558550834655762
    9. 'input' → logprob: -10.933550834655762
    10. 'client' → logprob: -11.058550834655762

Token 5: ''utilisateur' (ID: 140803)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.8029055595397949
    2. ''utilisateur' → logprob: -0.9279055595397949
    3. ' utilisateur' → logprob: -2.552905559539795
    4. 'u' → logprob: -3.052905559539795
    5. '’utilisateur' → logprob: -3.802905559539795
    6. 'a' → logprob: -5.302905559539795
    7. '_util' → logprob: -6.552905559539795
    8. ''' → logprob: -7.552905559539795
    9. 'user' → logprob: -7.552905559539795
    10. ' user' → logprob: -8.427906036376953

Token 6: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2616257965564728
    2. ' ' → logprob: -1.8866257667541504
    3. '_' → logprob: -3.1366257667541504
    4. ' d' → logprob: -5.01162576675415
    5. 'u' → logprob: -5.51162576675415
    6. ' s' → logprob: -6.01162576675415
    7. ' input' → logprob: -6.51162576675415
    8. ' a' → logprob: -6.51162576675415
    9. 'input' → logprob: -6.51162576675415
    10. ' u' → logprob: -6.51162576675415

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05577504262328148
    2. ' saisir' → logprob: -3.6807749271392822
    3. 'entr' → logprob: -3.9307749271392822
    4. 'r' → logprob: -5.055775165557861
    5. ' entrer' → logprob: -7.055775165557861
    6. '```' → logprob: -7.305775165557861
    7. 'entrée' → logprob: -8.180774688720703
    8. 'contin' → logprob: -8.680774688720703
    9. '#' → logprob: -9.055774688720703
    10. 'ent' → logprob: -9.180774688720703

Token 8: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026280203834176064
    2. '_' → logprob: -3.901280164718628
    3. ''' → logprob: -6.526280403137207
    4. ' :' → logprob: -6.776280403137207
    5. 's' → logprob: -7.401280403137207
    6. ':' → logprob: -7.776280403137207
    7. ' un' → logprob: -7.901280403137207
    8. ' ' → logprob: -8.026280403137207
    9. ' =' → logprob: -8.776280403137207
    10. 'u' → logprob: -8.901280403137207

Token 9: ' valeurs' (ID: 73668)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6101474761962891
    2. ' données' → logprob: -0.9851474761962891
    3. 'u' → logprob: -3.485147476196289
    4. ' caractères' → logprob: -4.110147476196289
    5. ' espaces' → logprob: -4.735147476196289
    6. ''informations' → logprob: -5.485147476196289
    7. ' ' → logprob: -5.610147476196289
    8. 'd' → logprob: -5.735147476196289
    9. 'n' → logprob: -6.610147476196289
    10. ''espace' → logprob: -6.610147476196289

Token 10: ' sépar' (ID: 97160)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7529377937316895
    2. '_' → logprob: -1.6279377937316895
    3. 's' → logprob: -2.7529377937316895
    4. '\n' → logprob: -3.1279377937316895
    5. 'input' → logprob: -3.2529377937316895
    6. '\' → logprob: -3.2529377937316895
    7. 'n' → logprob: -3.3779377937316895
    8. ' ' → logprob: -3.8779377937316895
    9. 'user' → logprob: -4.0029377937316895
    10. 'i' → logprob: -4.3779377937316895

Token 11: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.004518888890743256
    2. 'és' → logprob: -6.004518985748291
    3. 'es' → logprob: -6.629518985748291
    4. 'é' → logprob: -7.504518985748291
    5. 'par' → logprob: -9.879518508911133
    6. 'er' → logprob: -10.254518508911133
    7. 'ée' → logprob: -10.379518508911133
    8. '```' → logprob: -10.754518508911133
    9. ' par' → logprob: -11.629518508911133
    10. 'e' → logprob: -12.254518508911133

Token 12: ' par' (ID: 686)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.45783114433288574
    2. 'par' → logprob: -1.5828311443328857
    3. ' ' → logprob: -3.0828311443328857
    4. 'e' → logprob: -3.7078311443328857
    5. 's' → logprob: -3.7078311443328857
    6. ' par' → logprob: -3.7078311443328857
    7. '_' → logprob: -4.207831382751465
    8. '```' → logprob: -4.707831382751465
    9. ',' → logprob: -5.207831382751465
    10. 'space' → logprob: -5.957831382751465

Token 13: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.766473650932312
    2. 'un' → logprob: -1.141473650932312
    3. ' des' → logprob: -2.1414737701416016
    4. 'une' → logprob: -3.2664737701416016
    5. 'es' → logprob: -3.6414737701416016
    6. ''un' → logprob: -4.766473770141602
    7. 'esp' → logprob: -5.141473770141602
    8. ''' → logprob: -5.641473770141602
    9. '```' → logprob: -5.766473770141602
    10. ' un' → logprob: -5.891473770141602

Token 14: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.7917682528495789
    2. 'es' → logprob: -1.1667683124542236
    3. 'spaces' → logprob: -3.0417683124542236
    4. ''espace' → logprob: -3.4167683124542236
    5. ' espaces' → logprob: -3.4167683124542236
    6. ''esp' → logprob: -3.7917683124542236
    7. 'vir' → logprob: -3.7917683124542236
    8. ',' → logprob: -3.9167683124542236
    9. '```' → logprob: -4.0417680740356445
    10. '_' → logprob: -4.2917680740356445

Token 15: '
' (ID: 198)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6107604503631592
    2. 'user' → logprob: -1.6107604503631592
    3. 'val' → logprob: -2.610760450363159
    4. 'input' → logprob: -2.610760450363159
    5. 'values' → logprob: -3.235760450363159
    6. 's' → logprob: -3.860760450363159
    7. 'u' → logprob: -4.235760688781738
    8. 'i' → logprob: -5.110760688781738
    9. 'value' → logprob: -5.235760688781738
    10. 'n' → logprob: -5.235760688781738

Token 16: 'entered' (ID: 148198)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.2950904369354248
    2. 'val' → logprob: -2.420090436935425
    3. 'values' → logprob: -2.920090436935425
    4. 'input' → logprob: -2.920090436935425
    5. 's' → logprob: -3.170090436935425
    6. '```' → logprob: -5.795090675354004
    7. 'n' → logprob: -6.045090675354004
    8. 'value' → logprob: -6.170090675354004
    9. 'inputs' → logprob: -6.420090675354004
    10. 'entrée' → logprob: -6.920090675354004

Token 17: '_values' (ID: 20393)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06262852996587753
    2. ' =' → logprob: -3.1876285076141357
    3. ' ' → logprob: -5.312628746032715
    4. '_space' → logprob: -5.812628746032715
    5. 'es' → logprob: -6.062628746032715
    6. '_values' → logprob: -6.187628746032715
    7. 'space' → logprob: -6.312628746032715
    8. 's' → logprob: -6.812628746032715
    9. ' _' → logprob: -6.937628746032715
    10. '_val' → logprob: -7.062628746032715

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0111692501232028
    2. '=' → logprob: -4.51116943359375
    3. '_' → logprob: -10.38616943359375
    4. 's' → logprob: -10.38616943359375
    5. '.' → logprob: -11.13616943359375
    6. '[:]' → logprob: -11.63616943359375
    7. 'space' → logprob: -11.76116943359375
    8. ',' → logprob: -11.88616943359375
    9. '=input' → logprob: -12.63616943359375
    10. ' ' → logprob: -12.63616943359375

Token 19: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10021336376667023
    2. 'input' → logprob: -2.3502132892608643
    3. '=input' → logprob: -12.725213050842285
    4. ' ' → logprob: -13.725213050842285
    5. '	input' → logprob: -14.475213050842285
    6. '<input' → logprob: -14.600213050842285
    7. '(input' → logprob: -14.600213050842285
    8. ' ' → logprob: -14.600213050842285
    9. '[input' → logprob: -16.2252140045166
    10. ' list' → logprob: -16.7252140045166

Token 20: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0230910312384367
    2. '("("' → logprob: -4.398090839385986
    3. '('' → logprob: -4.648090839385986
    4. '("' → logprob: -7.023090839385986
    5. '("(' → logprob: -10.898091316223145
    6. '("""' → logprob: -11.148091316223145
    7. '(`' → logprob: -12.398091316223145
    8. ' (' → logprob: -12.648091316223145
    9. '()' → logprob: -12.648091316223145
    10. '("")' → logprob: -12.898091316223145

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008631822653114796
    2. 'strip' → logprob: -4.758631706237793
    3. ' split' → logprob: -11.258631706237793
    4. 's' → logprob: -13.133631706237793
    5. 'spl' → logprob: -14.008631706237793
    6. 'rstrip' → logprob: -14.008631706237793
    7. 'replace' → logprob: -15.383631706237793
    8. 'sp' → logprob: -15.883631706237793
    9. ' strip' → logprob: -16.13363265991211
    10. '(split' → logprob: -16.38363265991211

Token 22: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04119780287146568
    2. '('' → logprob: -3.6661977767944336
    3. '()' → logprob: -4.416197776794434
    4. '("("' → logprob: -6.041197776794434
    5. '(`' → logprob: -9.291197776794434
    6. '```' → logprob: -9.666197776794434
    7. '((' → logprob: -10.041197776794434
    8. '(()' → logprob: -10.791197776794434
    9. '(

' → logprob: -11.041197776794434
    10. ' (' → logprob: -11.041197776794434

Token 23: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16673032939434052
    2. 'for' → logprob: -2.2917304039001465
    3. '[' → logprob: -4.1667304039001465
    4. 'values' → logprob: -4.6667304039001465
    5. 'result' → logprob: -4.9167304039001465
    6. 'print' → logprob: -5.1667304039001465
    7. 'sum' → logprob: -6.0417304039001465
    8. 'value' → logprob: -6.2917304039001465
    9. 'if' → logprob: -6.4167304039001465
    10. 'total' → logprob: -6.6667304039001465

Token 24: ' Trier' (ID: 191551)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6935709118843079
    2. 'values' → logprob: -1.443570852279663
    3. 'total' → logprob: -2.693570852279663
    4. 'for' → logprob: -2.818570852279663
    5. 'val' → logprob: -3.068570852279663
    6. 'result' → logprob: -3.193570852279663
    7. 's' → logprob: -4.318571090698242
    8. 'print' → logprob: -4.818571090698242
    9. 'sum' → logprob: -5.068571090698242
    10. 'converted' → logprob: -5.443571090698242

Token 25: ' les' (ID: 1341)
  Prédit: 'entered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entered' → logprob: -0.055819008499383926
    2. '()' → logprob: -3.305819034576416
    3. ' entered' → logprob: -4.805819034576416
    4. 'sorted' → logprob: -5.805819034576416
    5. '(' → logprob: -5.930819034576416
    6. 'les' → logprob: -6.555819034576416
    7. ' les' → logprob: -7.305819034576416
    8. 'ent' → logprob: -7.805819034576416
    9. 'la' → logprob: -8.555818557739258
    10. '```' → logprob: -9.055818557739258

Token 26: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3460453152656555
    2. ' valeurs' → logprob: -1.5960452556610107
    3. 'entered' → logprob: -2.9710452556610107
    4. 'values' → logprob: -4.59604549407959
    5. 'ent' → logprob: -4.72104549407959
    6. 'entr' → logprob: -4.84604549407959
    7. ' entered' → logprob: -5.59604549407959
    8. ' nombres' → logprob: -6.34604549407959
    9. ' val' → logprob: -6.72104549407959
    10. ' values' → logprob: -7.22104549407959

Token 27: ' par' (ID: 686)
  Prédit: 'entered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entered' → logprob: -0.03164376690983772
    2. 'sorted' → logprob: -3.656643867492676
    3. ',' → logprob: -5.781643867492676
    4. ' entered' → logprob: -7.781643867492676
    5. '(' → logprob: -7.906643867492676
    6. '(sorted' → logprob: -8.156643867492676
    7. 'values' → logprob: -8.281643867492676
    8. '```' → logprob: -8.406643867492676
    9. 'enter' → logprob: -8.656643867492676
    10. 'ent' → logprob: -8.781643867492676

Token 28: ' ordre' (ID: 103061)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.8785301446914673
    2. ' ordre' → logprob: -0.8785301446914673
    3. ' défaut' → logprob: -2.6285300254821777
    4. ' taille' → logprob: -3.7535300254821777
    5. ' type' → logprob: -4.503530025482178
    6. ' longueur' → logprob: -4.503530025482178
    7. ' valeur' → logprob: -4.753530025482178
    8. 'tail' → logprob: -4.878530025482178
    9. 'type' → logprob: -5.128530025482178
    10. 'leur' → logprob: -5.378530025482178

Token 29: ' décro' (ID: 176854)
  Prédit: ' alph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' alph' → logprob: -0.03452939912676811
    2. ' alphabet' → logprob: -4.034529209136963
    3. 'alph' → logprob: -4.534529209136963
    4. 'alphabet' → logprob: -5.909529209136963
    5. 'cro' → logprob: -7.034529209136963
    6. ' cro' → logprob: -7.159529209136963
    7. ' naturel' → logprob: -7.784529209136963
    8. ' alphabetical' → logprob: -8.284529685974121
    9. ' al' → logprob: -9.159529685974121
    10. ' alfabet' → logprob: -9.534529685974121

Token 30: 'issant' (ID: 31359)
  Prédit: 'dent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dent' → logprob: -0.6538568735122681
    2. 'issant' → logprob: -1.278856873512268
    3. 'sent' → logprob: -2.1538567543029785
    4. 'd' → logprob: -2.9038567543029785
    5. 's' → logprob: -4.2788567543029785
    6. 'ss' → logprob: -4.4038567543029785
    7. 'de' → logprob: -6.9038567543029785
    8. '#' → logprob: -7.0288567543029785
    9. 'isant' → logprob: -7.1538567543029785
    10. 'nd' → logprob: -8.653857231140137

Token 31: ' (' (ID: 350)
  Prédit: 'entered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entered' → logprob: -0.24261607229709625
    2. 'sorted' → logprob: -1.617616057395935
    3. 'values' → logprob: -4.117616176605225
    4. ' entered' → logprob: -8.242615699768066
    5. 'entries' → logprob: -8.742615699768066
    6. ',' → logprob: -9.242615699768066
    7. 'tri' → logprob: -9.742615699768066
    8. ' sorted' → logprob: -9.867615699768066
    9. 'ent' → logprob: -10.492615699768066
    10. ' values' → logprob: -10.867615699768066

Token 32: 'du' (ID: 698)
  Prédit: ' reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -0.6225398182868958
    2. 'reverse' → logprob: -1.747539758682251
    3. ')' → logprob: -2.247539758682251
    4. ',' → logprob: -2.747539758682251
    5. 'sorted' → logprob: -3.372539758682251
    6. ' sorted' → logprob: -3.372539758682251
    7. ' key' → logprob: -3.997539758682251
    8. 'int' → logprob: -4.12253999710083
    9. ' )' → logprob: -5.99753999710083
    10. 'lambda' → logprob: -6.12253999710083

Token 33: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.1585952341556549
    2. 'plus' → logprob: -2.283595323562622
    3. ')' → logprob: -4.783595085144043
    4. 'val' → logprob: -5.033595085144043
    5. ' -' → logprob: -5.533595085144043
    6. '-' → logprob: -5.658595085144043
    7. ' ' → logprob: -5.783595085144043
    8. '```' → logprob: -5.908595085144043
    9. ',' → logprob: -6.283595085144043
    10. 's' → logprob: -6.658595085144043

Token 34: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.08929036557674408
    2. ' grand' → logprob: -2.4642903804779053
    3. 'é' → logprob: -8.589290618896484
    4. 'gr' → logprob: -10.089290618896484
    5. 'Grand' → logprob: -10.214290618896484
    6. '```' → logprob: -11.089290618896484
    7. ' élevé' → logprob: -11.089290618896484
    8. 'pet' → logprob: -11.339290618896484
    9. ' Grand' → logprob: -11.464290618896484
    10. 'gran' → logprob: -11.964290618896484

Token 35: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.04908926784992218
    2. 'au' → logprob: -3.299089193344116
    3. ')' → logprob: -4.549089431762695
    4. ' ' → logprob: -8.674089431762695
    5. ' )' → logprob: -9.299089431762695
    6. ''au' → logprob: -9.674089431762695
    7. ' à' → logprob: -10.174089431762695
    8. '  ' → logprob: -12.174089431762695
    9. 'à' → logprob: -12.424089431762695
    10. '   ' → logprob: -12.424089431762695

Token 36: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.837393045425415
    2. ' ' → logprob: -0.962393045425415
    3. ' petit' → logprob: -1.962393045425415
    4. 'pet' → logprob: -3.837393045425415
    5. 'plus' → logprob: -4.462392807006836
    6. '```' → logprob: -5.087392807006836
    7. '  ' → logprob: -6.587392807006836
    8. '   ' → logprob: -6.837392807006836
    9. ' ' → logprob: -6.962392807006836
    10. ' au' → logprob: -7.712392807006836

Token 37: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.04538186267018318
    2. 'grand' → logprob: -3.795381784439087
    3. ' petit' → logprob: -4.295382022857666
    4. '```' → logprob: -5.545382022857666
    5. ' ' → logprob: -5.920382022857666
    6. 'pe' → logprob: -8.045381546020508
    7. ' grand' → logprob: -8.420381546020508
    8. '  ' → logprob: -8.545381546020508
    9. ')' → logprob: -8.795381546020508
    10. '   ' → logprob: -8.795381546020508

Token 38: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000111768240458332
    2. '#' → logprob: -9.50011157989502
    3. ' )' → logprob: -11.12511157989502
    4. '')' → logprob: -12.50011157989502
    5. '`)' → logprob: -12.50011157989502
    6. ')
' → logprob: -12.75011157989502
    7. ')#' → logprob: -12.75011157989502
    8. '")' → logprob: -13.50011157989502
    9. 'e' → logprob: -13.75011157989502
    10. 's' → logprob: -13.75011157989502

Token 39: 'entered' (ID: 148198)
  Prédit: 'entered'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entered' → logprob: -0.5780268311500549
    2. 'sorted' → logprob: -0.8280268311500549
    3. 'values' → logprob: -6.57802677154541
    4. 'ent' → logprob: -8.45302677154541
    5. ' sorted' → logprob: -9.20302677154541
    6. ' entered' → logprob: -9.32802677154541
    7. '```' → logprob: -9.32802677154541
    8. 'tri' → logprob: -9.57802677154541
    9. 'entries' → logprob: -10.20302677154541
    10. 'entr' → logprob: -10.82802677154541

Token 40: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.47554072737693787
    2. '_' → logprob: -0.9755407571792603
    3. '_val' → logprob: -6.975540637969971
    4. '_value' → logprob: -7.725540637969971
    5. '_vals' → logprob: -10.600541114807129
    6. ' _' → logprob: -11.100541114807129
    7. '_
' → logprob: -11.350541114807129
    8. '_s' → logprob: -12.350541114807129
    9. '_

' → logprob: -12.600541114807129
    10. '_v' → logprob: -12.850541114807129

Token 41: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.22768691182136536
    2. '.' → logprob: -1.602686882019043
    3. '_sorted' → logprob: -6.727686882019043
    4. '.sorted' → logprob: -7.727686882019043
    5. '=' → logprob: -8.102686882019043
    6. '.s' → logprob: -8.977686882019043
    7. 'sorted' → logprob: -9.477686882019043
    8. ' =' → logprob: -9.602686882019043
    9. '[:]' → logprob: -10.477686882019043
    10. 'sort' → logprob: -11.602686882019043

Token 42: '(reverse' (ID: 110806)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08352532237768173
    2. '(reverse' → logprob: -2.5835254192352295
    3. '(key' → logprob: -5.45852518081665
    4. '()' → logprob: -8.958525657653809
    5. '(
' → logprob: -9.833525657653809
    6. '(()' → logprob: -10.333525657653809
    7. '((' → logprob: -10.958525657653809
    8. '(

' → logprob: -11.083525657653809
    9. ' (' → logprob: -11.208525657653809
    10. '(lambda' → logprob: -11.208525657653809

Token 43: '=True' (ID: 7827)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931595802307129
    2. '=True' → logprob: -0.6931595802307129
    3. ')=' → logprob: -12.443159103393555
    4. '=

' → logprob: -12.568159103393555
    5. ')' → logprob: -12.818159103393555
    6. '=T' → logprob: -14.318159103393555
    7. '=
' → logprob: -14.568159103393555
    8. '=}' → logprob: -15.193159103393555
    9. '==' → logprob: -15.318159103393555
    10. '=False' → logprob: -15.318159103393555

Token 44: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. '))' → logprob: -14.500000953674316
    3. ' )' → logprob: -14.875000953674316
    4. ')
' → logprob: -15.875000953674316
    5. ']' → logprob: -17.875001907348633
    6. '[' → logprob: -18.125001907348633
    7. '()' → logprob: -18.125001907348633
    8. '),' → logprob: -18.250001907348633
    9. '`)' → logprob: -18.375001907348633
    10. ')`' → logprob: -18.375001907348633

Token 45: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' Pr' (ID: 2284)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1969175338745117
    2. ' for' → logprob: -1.3219175338745117
    3. ' print' → logprob: -1.5719175338745117
    4. 'for' → logprob: -1.9469175338745117
    5. '#' → logprob: -2.5719175338745117
    6. ' #' → logprob: -6.071917533874512
    7. ' sorted' → logprob: -8.071917533874512
    8. ' Aff' → logprob: -8.196917533874512
    9. 'Print' → logprob: -8.696917533874512
    10. 'Afficher' → logprob: -8.696917533874512

Token 47: 'endre' (ID: 9574)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04910912737250328
    2. '#' → logprob: -3.1741092205047607
    3. 'i' → logprob: -5.299108982086182
    4. 'in' → logprob: -7.924108982086182
    5. '#print' → logprob: -8.04910945892334
    6. 'inted' → logprob: -9.04910945892334
    7. '```' → logprob: -9.79910945892334
    8. 'ints' → logprob: -10.54910945892334
    9. 'print' → logprob: -10.67410945892334
    10. ' #' → logprob: -10.79910945892334

Token 48: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' deux' (ID: 10301)
  Prédit: ' trois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trois' → logprob: -1.3835519552230835
    2. 'prem' → logprob: -1.3835519552230835
    3. ' ' → logprob: -1.7585519552230835
    4. '3' → logprob: -2.133552074432373
    5. ' premières' → logprob: -2.383552074432373
    6. '5' → logprob: -3.758552074432373
    7. ' cinq' → logprob: -3.883552074432373
    8. ' premiers' → logprob: -4.133552074432373
    9. ' premier' → logprob: -4.508552074432373
    10. '10' → logprob: -4.883552074432373

Token 50: ' premiers' (ID: 59140)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' éléments' (ID: 57375)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' et' (ID: 859)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16356535255908966
    2. '[:' → logprob: -3.1635653972625732
    3. 'entered' → logprob: -3.7885653972625732
    4. 'result' → logprob: -4.163565158843994
    5. '[]' → logprob: -4.288565158843994
    6. 'selected' → logprob: -4.663565158843994
    7. '[:]' → logprob: -4.663565158843994
    8. '#' → logprob: -4.788565158843994
    9. ',' → logprob: -5.163565158843994
    10. '```' → logprob: -5.663565158843994

Token 53: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.03313886746764183
    2. ' afficher' → logprob: -3.6581387519836426
    3. ' convertir' → logprob: -6.408138751983643
    4. 'aff' → logprob: -6.908138751983643
    5. 'les' → logprob: -7.033138751983643
    6. '#' → logprob: -7.158138751983643
    7. ' print' → logprob: -7.283138751983643
    8. 'print' → logprob: -7.658138751983643
    9. ' stock' → logprob: -8.7831392288208
    10. ' affich' → logprob: -9.0331392288208

Token 54: ' mettre' (ID: 25339)
  Prédit: ' afficher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' afficher' → logprob: -0.33304232358932495
    2. ' addition' → logprob: -1.8330423831939697
    3. ' convertir' → logprob: -2.5830423831939697
    4. 'aff' → logprob: -3.4580423831939697
    5. 'addition' → logprob: -5.583042144775391
    6. ' multiplier' → logprob: -5.833042144775391
    7. ' stock' → logprob: -5.958042144775391
    8. ' ajouter' → logprob: -6.833042144775391
    9. ''aff' → logprob: -7.458042144775391
    10. ' affich' → logprob: -7.833042144775391

Token 55: ' bout' (ID: 19714)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.9190053939819336
    2. 'dans' → logprob: -1.1690053939819336
    3. 'ensemble' → logprob: -2.1690053939819336
    4. ' à' → logprob: -3.0440053939819336
    5. ' en' → logprob: -3.5440053939819336
    6. '[' → logprob: -4.044005393981934
    7. 'au' → logprob: -4.669005393981934
    8. '[:]' → logprob: -4.794005393981934
    9. ' ensemble' → logprob: -4.919005393981934
    10. '[]' → logprob: -4.919005393981934

Token 56: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.10491963475942612
    2. '-à' → logprob: -2.729919672012329
    3. 'à' → logprob: -3.479919672012329
    4. ''à' → logprob: -6.22991943359375
    5. '```' → logprob: -6.97991943359375
    6. ' ' → logprob: -8.47991943359375
    7. '   ' → logprob: -9.47991943359375
    8. '-en' → logprob: -9.47991943359375
    9. ' en' → logprob: -9.85491943359375
    10. '  ' → logprob: -9.85491943359375

Token 57: ' bout' (ID: 19714)
  Prédit: 'bout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bout' → logprob: -0.0002993544621858746
    2. 'b' → logprob: -8.250299453735352
    3. '```' → logprob: -11.500299453735352
    4. ' bout' → logprob: -11.625299453735352
    5. '#' → logprob: -12.875299453735352
    6. 'bord' → logprob: -13.000299453735352
    7. 'à' → logprob: -13.375299453735352
    8. '``' → logprob: -13.625299453735352
    9. 'bit' → logprob: -13.625299453735352
    10. 'bou' → logprob: -13.875299453735352

Token 58: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3668464422225952
    2. 'conc' → logprob: -2.2418465614318848
    3. ' concaten' → logprob: -2.9918465614318848
    4. '+' → logprob: -3.7418465614318848
    5. 'concat' → logprob: -3.8668465614318848
    6. '[' → logprob: -4.116846561431885
    7. 'combined' → logprob: -4.366846561431885
    8. 'first' → logprob: -4.366846561431885
    9. 's' → logprob: -4.741846561431885
    10. ' result' → logprob: -4.741846561431885

Token 59: 'combined' (ID: 140567)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11071591824293137
    2. 'conc' → logprob: -3.110715866088867
    3. 'combined' → logprob: -3.235715866088867
    4. 'concat' → logprob: -5.110715866088867
    5. 'joined' → logprob: -5.485715866088867
    6. 'first' → logprob: -5.485715866088867
    7. 'print' → logprob: -5.610715866088867
    8. ' concaten' → logprob: -6.860715866088867
    9. 'merged' → logprob: -7.360715866088867
    10. '```' → logprob: -8.360715866088867

Token 60: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14644339680671692
    2. ' =' → logprob: -2.8964433670043945
    3. '=' → logprob: -3.1464433670043945
    4. '_values' → logprob: -3.6464433670043945
    5. '_string' → logprob: -4.7714433670043945
    6. '_value' → logprob: -6.8964433670043945
    7. '_str' → logprob: -7.1464433670043945
    8. '_val' → logprob: -8.146443367004395
    9. '_strings' → logprob: -8.146443367004395
    10. 's' → logprob: -8.646443367004395

Token 61: ' str' (ID: 989)
  Prédit: 'entered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entered' → logprob: -0.20145301520824432
    2. ' entered' → logprob: -1.7014529705047607
    3. 'str' → logprob: -11.32645320892334
    4. '""' → logprob: -11.57645320892334
    5. 'ent' → logprob: -12.57645320892334
    6. '"' → logprob: -12.82645320892334
    7. ' ' → logprob: -13.07645320892334
    8. ' str' → logprob: -13.32645320892334
    9. 'enter' → logprob: -13.32645320892334
    10. '''' → logprob: -13.45145320892334

Token 62: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00025549851125106215
    2. '(int' → logprob: -9.000255584716797
    3. 'entered' → logprob: -9.000255584716797
    4. '(
' → logprob: -12.875255584716797
    5. '(ent' → logprob: -13.000255584716797
    6. '(len' → logprob: -14.000255584716797
    7. 'ent' → logprob: -14.250255584716797
    8. 'ed' → logprob: -15.125255584716797
    9. '(com' → logprob: -15.125255584716797
    10. '(float' → logprob: -15.500255584716797

Token 63: 'entered' (ID: 148198)
  Prédit: 'entered'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entered' → logprob: -1.3856492842023727e-06
    2. ' entered' → logprob: -14.500000953674316
    3. 'int' → logprob: -15.125000953674316
    4. 'ent' → logprob: -15.250000953674316
    5. 'ente' → logprob: -16.625001907348633
    6. 'enter' → logprob: -17.125001907348633
    7. 'entr' → logprob: -17.750001907348633
    8. 'ented' → logprob: -17.750001907348633
    9. 'ed' → logprob: -18.125001907348633
    10. ')' → logprob: -18.125001907348633

Token 64: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.00015991552209015936
    2. 'ed' → logprob: -10.125160217285156
    3. '_val' → logprob: -10.250160217285156
    4. '_' → logprob: -10.625160217285156
    5. '_value' → logprob: -10.625160217285156
    6. 'values' → logprob: -11.625160217285156
    7. '_vals' → logprob: -11.625160217285156
    8. 'es' → logprob: -11.750160217285156
    9. 'e' → logprob: -13.250160217285156
    10. 's' → logprob: -13.500160217285156

Token 65: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. ' [' → logprob: -14.250001907348633
    3. '0' → logprob: -14.500001907348633
    4. ')' → logprob: -15.250001907348633
    5. '[:' → logprob: -15.625001907348633
    6. '[
' → logprob: -16.250001907348633
    7. ')[' → logprob: -17.000001907348633
    8. ' ' → logprob: -18.625001907348633
    9. '1' → logprob: -18.625001907348633
    10. 's' → logprob: -19.125001907348633

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. ')' → logprob: -16.750001907348633
    4. '1' → logprob: -16.875001907348633
    5. '2' → logprob: -18.875001907348633
    6. '[' → logprob: -19.250001907348633
    7. '۰' → logprob: -19.750001907348633
    8. '<|end|>' → logprob: -20.000001907348633
    9. ']' → logprob: -20.125001907348633
    10. '00' → logprob: -20.250001907348633

Token 67: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2429608404636383
    2. ']' → logprob: -1.617960810661316
    3. '+' → logprob: -4.4929609298706055
    4. '])' → logprob: -5.8679609298706055
    5. ']+' → logprob: -6.1179609298706055
    6. ')+' → logprob: -6.9929609298706055
    7. ' +' → logprob: -9.117960929870605
    8. ' )' → logprob: -9.992960929870605
    9. '])+' → logprob: -10.617960929870605
    10. '+)' → logprob: -10.867960929870605

Token 68: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000805341056548059
    2. ' +' → logprob: -7.125805377960205
    3. '[' → logprob: -16.500804901123047
    4. '+++' → logprob: -16.500804901123047
    5. '+
' → logprob: -16.500804901123047
    6. '<|end|>' → logprob: -16.500804901123047
    7. '"+"' → logprob: -16.750804901123047
    8. ')' → logprob: -16.750804901123047
    9. '+=' → logprob: -16.875804901123047
    10. '+"' → logprob: -17.000804901123047

Token 69: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.09545698761940002
    2. 'entered' → logprob: -2.845457077026367
    3. ' str' → logprob: -3.470457077026367
    4. ' entered' → logprob: -6.345457077026367
    5. ' ' → logprob: -10.470457077026367
    6. '	str' → logprob: -11.095457077026367
    7. 'ent' → logprob: -12.095457077026367
    8. '"' → logprob: -12.220457077026367
    9. '   ' → logprob: -12.470457077026367
    10. '  ' → logprob: -12.470457077026367

Token 70: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.512236498361744e-07
    2. '(
' → logprob: -15.250000953674316
    3. ' (' → logprob: -16.125
    4. 'entered' → logprob: -16.125
    5. '([' → logprob: -16.75
    6. '(ent' → logprob: -18.125
    7. '('' → logprob: -18.25
    8. '(

' → logprob: -18.375
    9. '<|end|>' → logprob: -18.375
    10. '[' → logprob: -18.75

Token 71: 'entered' (ID: 148198)
  Prédit: 'entered'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entered' → logprob: -0.0006271334132179618
    2. ' entered' → logprob: -7.375627040863037
    3. 'enter' → logprob: -15.125627517700195
    4. 'ent' → logprob: -16.000627517700195
    5. 'entr' → logprob: -16.750627517700195
    6. 'Entered' → logprob: -17.000627517700195
    7. '_enter' → logprob: -17.125627517700195
    8. '   ' → logprob: -17.500627517700195
    9. ' ' → logprob: -18.000627517700195
    10. '-enter' → logprob: -19.875627517700195

Token 72: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.004136222414672375
    2. 'ed' → logprob: -5.504136085510254
    3. '_' → logprob: -11.129136085510254
    4. 'ted' → logprob: -11.629136085510254
    5. '_value' → logprob: -11.629136085510254
    6. '_val' → logprob: -11.879136085510254
    7. '_VALUES' → logprob: -12.129136085510254
    8. 'values' → logprob: -13.379136085510254
    9. '_vals' → logprob: -13.379136085510254
    10. 'eded' → logprob: -13.504136085510254

Token 73: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.842555426876061e-06
    2. '1' → logprob: -12.625004768371582
    3. ' [' → logprob: -14.375004768371582
    4. '][' → logprob: -15.250004768371582
    5. ')[' → logprob: -15.500004768371582
    6. '[
' → logprob: -15.625004768371582
    7. '```' → logprob: -16.6250057220459
    8. '>[' → logprob: -16.8750057220459
    9. ')' → logprob: -17.0000057220459
    10. '\[' → logprob: -17.2500057220459

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '2' → logprob: -19.25
    4. ')' → logprob: -20.125
    5. ']' → logprob: -20.125
    6. '-' → logprob: -20.25
    7. '0' → logprob: -20.25
    8. '[' → logprob: -20.625
    9. '```' → logprob: -20.625
    10. '+' → logprob: -21.25

Token 75: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.02912161871790886
    2. ')' → logprob: -4.029121398925781
    3. ']' → logprob: -4.529121398925781
    4. ''])' → logprob: -10.279121398925781
    5. ')])' → logprob: -10.904121398925781
    6. '[' → logprob: -11.154121398925781
    7. ')]' → logprob: -11.154121398925781
    8. '"])' → logprob: -11.779121398925781
    9. ']))' → logprob: -11.779121398925781
    10. ' ])' → logprob: -11.904121398925781

Token 76: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011779118329286575
    2. '#' → logprob: -5.136779308319092
    3. ')' → logprob: -5.761779308319092
    4. 'p' → logprob: -6.386779308319092
    5. 'prin' → logprob: -7.886779308319092
    6. 'pr' → logprob: -8.136778831481934
    7. '
' → logprob: -9.011778831481934
    8. '#print' → logprob: -10.136778831481934
    9. '.' → logprob: -10.636778831481934
    10. '```' → logprob: -10.886778831481934

Token 77: ' Convert' (ID: 15629)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.7146746763028204e-05
    2. 'prin' → logprob: -11.50003719329834
    3. 'pr' → logprob: -11.62503719329834
    4. '#print' → logprob: -12.00003719329834
    5. ' print' → logprob: -12.37503719329834
    6. '#' → logprob: -12.62503719329834
    7. 'pri' → logprob: -13.50003719329834
    8. 'p' → logprob: -13.75003719329834
    9. '```' → logprob: -14.37503719329834
    10. 'prit' → logprob: -14.62503719329834

Token 78: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.6360121369361877
    2. 'er' → logprob: -0.8860121369361877
    3. 'combined' → logprob: -3.761012077331543
    4. 'to' → logprob: -3.886012077331543
    5. 'int' → logprob: -5.886012077331543
    6. 'ier' → logprob: -6.761012077331543
    7. ')' → logprob: -6.886012077331543
    8. 't' → logprob: -7.261012077331543
    9. 'iert' → logprob: -7.386012077331543
    10. 'ed' → logprob: -7.386012077331543

Token 79: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6185863614082336
    2. '(com' → logprob: -0.9935863614082336
    3. 'combined' → logprob: -2.993586301803589
    4. 'en' → logprob: -4.243586540222168
    5. '_' → logprob: -4.743586540222168
    6. ' combined' → logprob: -5.493586540222168
    7. '_comb' → logprob: -5.868586540222168
    8. ' en' → logprob: -6.118586540222168
    9. ')' → logprob: -6.243586540222168
    10. '(int' → logprob: -6.868586540222168

Token 80: ' résultat' (ID: 62556)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'combined' → logprob: -0.28148913383483887
    2. ' combined' → logprob: -1.4064891338348389
    3. '_comb' → logprob: -10.156489372253418
    4. 'to' → logprob: -10.156489372253418
    5. 'comb' → logprob: -10.156489372253418
    6. ' code' → logprob: -10.406489372253418
    7. '```' → logprob: -10.656489372253418
    8. ' to' → logprob: -10.781489372253418
    9. ' en' → logprob: -11.156489372253418
    10. 'com' → logprob: -11.281489372253418

Token 81: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28338339924812317
    2. '(int' → logprob: -1.6583833694458008
    3. 'int' → logprob: -3.783383369445801
    4. '_' → logprob: -3.783383369445801
    5. ')' → logprob: -5.908383369445801
    6. '()' → logprob: -6.158383369445801
    7. '(
' → logprob: -7.158383369445801
    8. '[int' → logprob: -7.283383369445801
    9. '_comb' → logprob: -7.283383369445801
    10. '```' → logprob: -7.658383369445801

Token 82: ' nombre' (ID: 9733)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.18584021925926208
    2. 'int' → logprob: -1.8108402490615845
    3. ' entier' → logprob: -5.310840129852295
    4. ' ' → logprob: -7.935840129852295
    5. 'ent' → logprob: -8.435840606689453
    6. ' ent' → logprob: -8.935840606689453
    7. ' integer' → logprob: -9.310840606689453
    8. ' un' → logprob: -9.560840606689453
    9. ' an' → logprob: -9.685840606689453
    10. '<int' → logprob: -10.185840606689453

Token 83: ' entier' (ID: 80473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0980042219161987
    2. 'int' → logprob: -1.2230042219161987
    3. 'combined' → logprob: -2.0980043411254883
    4. 'n' → logprob: -2.9730043411254883
    5. '=' → logprob: -3.2230043411254883
    6. ',' → logprob: -3.3480043411254883
    7. 'num' → logprob: -3.5980043411254883
    8. '_' → logprob: -4.348004341125488
    9. 'x' → logprob: -4.473004341125488
    10. '#' → logprob: -4.848004341125488

Token 84: '
' (ID: 198)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'combined' → logprob: -0.16790032386779785
    2. 'result' → logprob: -2.417900323867798
    3. 'int' → logprob: -3.417900323867798
    4. ')' → logprob: -4.542900085449219
    5. ' combined' → logprob: -4.792900085449219
    6. 'n' → logprob: -6.042900085449219
    7. ',' → logprob: -6.042900085449219
    8. '=' → logprob: -6.042900085449219
    9. 'num' → logprob: -6.542900085449219
    10. 'x' → logprob: -7.417900085449219

Token 85: 'number' (ID: 8096)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7221365571022034
    2. 'combined' → logprob: -0.7221365571022034
    3. 'int' → logprob: -4.097136497497559
    4. 'number' → logprob: -4.972136497497559
    5. ' combined' → logprob: -5.972136497497559
    6. 'final' → logprob: -6.722136497497559
    7. 'num' → logprob: -7.097136497497559
    8. ' result' → logprob: -8.972136497497559
    9. 'integer' → logprob: -9.597136497497559
    10. 'n' → logprob: -9.972136497497559

Token 86: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13479192554950714
    2. ' =' → logprob: -3.009791851043701
    3. '=' → logprob: -3.259791851043701
    4. 's' → logprob: -3.384791851043701
    5. '_comb' → logprob: -5.634791851043701
    6. '_value' → logprob: -8.63479232788086
    7. ')' → logprob: -8.63479232788086
    8. '1' → logprob: -9.38479232788086
    9. '=int' → logprob: -9.50979232788086
    10. '()' → logprob: -9.88479232788086

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11398642510175705
    2. '=' → logprob: -2.2389864921569824
    3. '_' → logprob: -6.988986492156982
    4. 's' → logprob: -9.488986015319824
    5. ')' → logprob: -9.863986015319824
    6. '=int' → logprob: -9.863986015319824
    7. '1' → logprob: -10.613986015319824
    8. '2' → logprob: -12.113986015319824
    9. '[' → logprob: -12.238986015319824
    10. ' ' → logprob: -12.363986015319824

Token 88: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.160235196352005
    2. 'int' → logprob: -1.9102351665496826
    3. '[int' → logprob: -12.285235404968262
    4. ' ' → logprob: -13.285235404968262
    5. '<int' → logprob: -13.410235404968262
    6. '=int' → logprob: -13.660235404968262
    7. '	int' → logprob: -14.160235404968262
    8. ']int' → logprob: -14.410235404968262
    9. '(int' → logprob: -14.660235404968262
    10. ',int' → logprob: -16.910234451293945

Token 89: '(com' (ID: 27868)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931837201118469
    2. '(com' → logprob: -0.6931837201118469
    3. '()' → logprob: -11.193183898925781
    4. '('' → logprob: -12.193183898925781
    5. '(convert' → logprob: -12.318183898925781
    6. ' (' → logprob: -12.318183898925781
    7. '(con' → logprob: -13.318183898925781
    8. 'combined' → logprob: -13.818183898925781
    9. '(
' → logprob: -14.193183898925781
    10. '("("' → logprob: -14.318183898925781

Token 90: 'bined' (ID: 172357)
  Prédit: 'bined'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bined' → logprob: -0.0036701520439237356
    2. 'b' → logprob: -5.6286702156066895
    3. 'ined' → logprob: -10.628669738769531
    4. 'bine' → logprob: -11.253669738769531
    5. '```' → logprob: -11.878669738769531
    6. ')' → logprob: -11.878669738769531
    7. 'bi' → logprob: -12.628669738769531
    8. 'ib' → logprob: -13.378669738769531
    9. '	b' → logprob: -13.503669738769531
    10. '_b' → logprob: -13.628669738769531

Token 91: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ' )' → logprob: -13.50000286102295
    3. '))' → logprob: -14.25000286102295
    4. ')
' → logprob: -14.37500286102295
    5. '[' → logprob: -15.50000286102295
    6. ')#' → logprob: -16.500003814697266
    7. ')`' → logprob: -17.000003814697266
    8. '()' → logprob: -17.375003814697266
    9. '),' → logprob: -17.625003814697266
    10. '1' → logprob: -17.750003814697266

Token 92: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.963493824005127
    2. '+' → logprob: -0.963493824005127
    3. 'number' → logprob: -2.213493824005127
    4. '
' → logprob: -2.713493824005127
    5. 'print' → logprob: -3.213493824005127
    6. '+
' → logprob: -5.088493824005127
    7. '<|end|>' → logprob: -5.713493824005127
    8. '```' → logprob: -5.963493824005127
    9. '\n' → logprob: -6.088493824005127
    10. 'n' → logprob: -6.963493824005127

Token 93: ' Pr' (ID: 2284)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.329792320728302
    2. 'number' → logprob: -1.7047922611236572
    3. 'print' → logprob: -2.9547922611236572
    4. ' number' → logprob: -3.5797922611236572
    5. ' #' → logprob: -5.204792499542236
    6. ' print' → logprob: -5.954792499542236
    7. 'entered' → logprob: -6.204792499542236
    8. 'result' → logprob: -6.829792499542236
    9. ' entered' → logprob: -7.579792499542236
    10. 'Pr' → logprob: -7.579792499542236

Token 94: 'endre' (ID: 9574)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01572568342089653
    2. '#' → logprob: -4.640725612640381
    3. 'nt' → logprob: -5.890725612640381
    4. 'inter' → logprob: -7.265725612640381
    5. 'endre' → logprob: -7.390725612640381
    6. 'number' → logprob: -7.390725612640381
    7. 'om' → logprob: -9.015726089477539
    8. 'n' → logprob: -9.015726089477539
    9. 'ints' → logprob: -9.140726089477539
    10. 'enter' → logprob: -9.265726089477539

Token 95: ' le' (ID: 505)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.7394129037857056
    2. 'les' → logprob: -1.7394129037857056
    3. 'le' → logprob: -2.239412784576416
    4. 'entered' → logprob: -2.239412784576416
    5. ' les' → logprob: -2.989412784576416
    6. ' le' → logprob: -3.489412784576416
    7. ' str' → logprob: -4.239412784576416
    8. 'la' → logprob: -4.364412784576416
    9. ' la' → logprob: -4.739412784576416
    10. '(str' → logprob: -5.489412784576416

Token 96: ' troisième' (ID: 75373)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.1873403936624527
    2. 'tro' → logprob: -2.312340497970581
    3. 's' → logprob: -3.437340497970581
    4. ' troisième' → logprob: -4.062340259552002
    5. 'str' → logprob: -5.687340259552002
    6. 'third' → logprob: -5.937340259552002
    7. '#' → logprob: -5.937340259552002
    8. '3' → logprob: -6.687340259552002
    9. 'dern' → logprob: -6.812340259552002
    10. '```' → logprob: -7.062340259552002

Token 97: ' élément' (ID: 99627)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: ' et' (ID: 859)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.7740040421485901
    2. ' =' → logprob: -1.7740039825439453
    3. '+' → logprob: -2.5240039825439453
    4. ',' → logprob: -3.0240039825439453
    5. ' number' → logprob: -3.0240039825439453
    6. 'combined' → logprob: -3.0240039825439453
    7. '<|end|>' → logprob: -3.2740039825439453
    8. ' +' → logprob: -3.3990039825439453
    9. ')' → logprob: -4.274003982543945
    10. '=' → logprob: -4.774003982543945

Token 99: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.5714422464370728
    2. 'le' → logprob: -1.8214422464370728
    3. ' convertir' → logprob: -2.321442127227783
    4. 'int' → logprob: -2.696442127227783
    5. 'str' → logprob: -2.821442127227783
    6. ' str' → logprob: -4.321442127227783
    7. 'convert' → logprob: -4.446442127227783
    8. ' l' → logprob: -4.821442127227783
    9. ' int' → logprob: -5.446442127227783
    10. 'l' → logprob: -5.821442127227783

Token 100: ' convertir' (ID: 79223)
  Prédit: ' convertir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.025910532101988792
    2. 'str' → logprob: -4.650910377502441
    3. ' mettre' → logprob: -5.025910377502441
    4. ' str' → logprob: -5.275910377502441
    5. 'convert' → logprob: -6.150910377502441
    6. ' convert' → logprob: -6.775910377502441
    7. 'mettre' → logprob: -7.525910377502441
    8. 's' → logprob: -9.525910377502441
    9. ' plus' → logprob: -9.525910377502441
    10. ' ' → logprob: -9.775910377502441

Token 101: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.5698714256286621
    2. ' en' → logprob: -1.694871425628662
    3. 'number' → logprob: -1.694871425628662
    4. ' =' → logprob: -3.819871425628662
    5. ' number' → logprob: -4.569871425628662
    6. '=' → logprob: -4.569871425628662
    7. 'int' → logprob: -4.944871425628662
    8. '(number' → logprob: -5.694871425628662
    9. 'in' → logprob: -6.194871425628662
    10. '(int' → logprob: -6.319871425628662

Token 102: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5588317513465881
    2. ' int' → logprob: -0.9338317513465881
    3. ' nombre' → logprob: -3.5588316917419434
    4. ' entier' → logprob: -5.933831691741943
    5. 'nombre' → logprob: -6.058831691741943
    6. ' number' → logprob: -7.183831691741943
    7. 'ent' → logprob: -7.683831691741943
    8. ' integer' → logprob: -9.058832168579102
    9. '<int' → logprob: -9.683832168579102
    10. 'number' → logprob: -9.683832168579102

Token 103: '
' (ID: 198)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.14596416056156158
    2. ' number' → logprob: -2.0209641456604004
    3. ' =' → logprob: -6.5209641456604
    4. 'int' → logprob: -7.6459641456604
    5. '<|end|>' → logprob: -7.8959641456604
    6. ',' → logprob: -8.145964622497559
    7. '=' → logprob: -8.395964622497559
    8. ')' → logprob: -9.145964622497559
    9. '(number' → logprob: -9.770964622497559
    10. '[number' → logprob: -10.395964622497559

Token 104: 'number' (ID: 8096)
  Prédit: 'number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -1.6286106983898208e-05
    2. ' number' → logprob: -11.250016212463379
    3. 'int' → logprob: -12.750016212463379
    4. '```' → logprob: -15.750016212463379
    5. 'num' → logprob: -16.250017166137695
    6. 'n' → logprob: -16.375017166137695
    7. 'nombre' → logprob: -16.750017166137695
    8. '
' → logprob: -17.125017166137695
    9. 'numero' → logprob: -17.625017166137695
    10. '`' → logprob: -18.250017166137695

Token 105: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0564331205387134e-05
    2. '3' → logprob: -11.62501049041748
    3. '_' → logprob: -14.25001049041748
    4. '=' → logprob: -14.62501049041748
    5. ' =' → logprob: -15.25001049041748
    6. '```' → logprob: -16.625011444091797
    7. '₂' → logprob: -17.000011444091797
    8. ' ' → logprob: -17.000011444091797
    9. '２' → logprob: -17.875011444091797
    10. '[' → logprob: -18.750011444091797

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20165656507015228
    2. '=' → logprob: -1.7016565799713135
    3. '=int' → logprob: -8.326656341552734
    4. 'int' → logprob: -13.826656341552734
    5. ' ' → logprob: -15.951656341552734
    6. '[int' → logprob: -16.701656341552734
    7. ')' → logprob: -17.326656341552734
    8. '<int' → logprob: -17.451656341552734
    9. ' ' → logprob: -17.451656341552734
    10. '=

' → logprob: -18.201656341552734

Token 107: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25193002820014954
    2. ' int' → logprob: -1.5019299983978271
    3. '<int' → logprob: -14.626930236816406
    4. '=int' → logprob: -15.376930236816406
    5. '(int' → logprob: -15.751930236816406
    6. '[int' → logprob: -17.126930236816406
    7. ' ' → logprob: -17.126930236816406
    8. '	int' → logprob: -17.501930236816406
    9. '```' → logprob: -18.001930236816406
    10. ':int' → logprob: -18.501930236816406

Token 108: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. '(
' → logprob: -15.75
    3. ' (' → logprob: -16.875
    4. '(ent' → logprob: -17.0
    5. 'entered' → logprob: -18.625
    6. '(convert' → logprob: -18.75
    7. '('' → logprob: -18.75
    8. '(`' → logprob: -18.75
    9. '(

' → logprob: -19.125
    10. '(entries' → logprob: -19.625

Token 109: 'entered' (ID: 148198)
  Prédit: 'entered'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entered' → logprob: -5.204720582696609e-05
    2. ' entered' → logprob: -9.875052452087402
    3. ')' → logprob: -15.375052452087402
    4. 'entr' → logprob: -16.125051498413086
    5. 'enter' → logprob: -16.250051498413086
    6. 'ent' → logprob: -17.500051498413086
    7. '   ' → logprob: -18.250051498413086
    8. ' ' → logprob: -18.375051498413086
    9. '(' → logprob: -19.625051498413086
    10. 'Entered' → logprob: -20.000051498413086

Token 110: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -2.451116051815916e-05
    2. 'values' → logprob: -10.750024795532227
    3. '_' → logprob: -13.375024795532227
    4. 'ed' → logprob: -14.250024795532227
    5. '_value' → logprob: -15.000024795532227
    6. 'entered' → logprob: -16.000024795532227
    7. 'valu' → logprob: -16.125024795532227
    8. '_val' → logprob: -16.250024795532227
    9. '_VALUES' → logprob: -16.625024795532227
    10. 'Values' → logprob: -17.500024795532227

Token 111: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. '2' → logprob: -13.750001907348633
    3. '3' → logprob: -13.750001907348633
    4. '[
' → logprob: -17.250001907348633
    5. ')' → logprob: -18.250001907348633
    6. ' [' → logprob: -18.625001907348633
    7. '\[' → logprob: -19.250001907348633
    8. ')[' → logprob: -19.250001907348633
    9. '1' → logprob: -19.625001907348633
    10. '```' → logprob: -19.625001907348633

Token 112: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '  ' → logprob: -19.375
    4. '   ' → logprob: -19.625
    5. '```' → logprob: -19.625
    6. '1' → logprob: -20.0
    7. '3' → logprob: -20.125
    8. '２' → logprob: -20.25
    9. '
' → logprob: -20.5
    10. ']' → logprob: -20.625

Token 113: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.011105598881840706
    2. ')' → logprob: -4.511105537414551
    3. ']' → logprob: -10.13610553741455
    4. '))' → logprob: -11.76110553741455
    5. ')])' → logprob: -12.38610553741455
    6. ')]' → logprob: -13.26110553741455
    7. '])
' → logprob: -13.38610553741455
    8. ' ])' → logprob: -13.76110553741455
    9. ''])' → logprob: -14.26110553741455
    10. ']))' → logprob: -14.76110553741455

Token 114: '#' (ID: 2)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6231948137283325
    2. '#' → logprob: -1.6231948137283325
    3. 'if' → logprob: -1.7481948137283325
    4. 'result' → logprob: -2.748194694519043
    5. '+
' → logprob: -4.123194694519043
    6. 'print' → logprob: -5.373194694519043
    7. '<|end|>' → logprob: -6.123194694519043
    8. '
' → logprob: -6.748194694519043
    9. ')' → logprob: -6.998194694519043
    10. 'number' → logprob: -7.498194694519043

Token 115: ' Addition' (ID: 129345)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8633006811141968
    2. '#' → logprob: -1.2383006811141968
    3. 'print' → logprob: -1.3633006811141968
    4. 'Calcul' → logprob: -5.238300800323486
    5. 'if' → logprob: -5.488300800323486
    6. ' result' → logprob: -5.613300800323486
    7. ' print' → logprob: -5.863300800323486
    8. 'Rés' → logprob: -6.113300800323486
    9. 'number' → logprob: -6.613300800323486
    10. 'rés' → logprob: -6.863300800323486

Token 116: 'ner' (ID: 1247)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5508490800857544
    2. '=' → logprob: -1.0508490800857544
    3. 'number' → logprob: -2.925848960876465
    4. '()' → logprob: -5.050848960876465
    5. '_' → logprob: -5.675848960876465
    6. 'result' → logprob: -5.925848960876465
    7. 'n' → logprob: -6.300848960876465
    8. '(' → logprob: -6.925848960876465
    9. '(number' → logprob: -7.050848960876465
    10. ')' → logprob: -7.175848960876465

Token 117: ' les' (ID: 1341)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.16721747815608978
    2. ' number' → logprob: -1.917217493057251
    3. ' =' → logprob: -5.042217254638672
    4. 'result' → logprob: -8.167217254638672
    5. '=' → logprob: -8.917217254638672
    6. '(number' → logprob: -10.667217254638672
    7. '_number' → logprob: -10.917217254638672
    8. ' result' → logprob: -11.417217254638672
    9. ' ' → logprob: -11.667217254638672
    10. ')' → logprob: -11.667217254638672

Token 118: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.9276275634765625
    2. ' deux' → logprob: -0.9276275634765625
    3. ' two' → logprob: -2.0526275634765625
    4. 'number' → logprob: -3.3026275634765625
    5. 'two' → logprob: -4.1776275634765625
    6. 'numbers' → logprob: -4.4276275634765625
    7. '2' → logprob: -5.0526275634765625
    8. ' numbers' → logprob: -5.6776275634765625
    9. ' nombres' → logprob: -5.6776275634765625
    10. ' number' → logprob: -6.5526275634765625

Token 119: ' nombres' (ID: 76205)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -1.3058576583862305
    2. '+' → logprob: -1.5558576583862305
    3. ' +' → logprob: -2.0558576583862305
    4. ' numbers' → logprob: -2.4308576583862305
    5. 'numbers' → logprob: -2.4308576583862305
    6. ' =' → logprob: -2.5558576583862305
    7. '=' → logprob: -2.8058576583862305
    8. ' nombres' → logprob: -3.8058576583862305
    9. ' number' → logprob: -3.9308576583862305
    10. 's' → logprob: -4.0558576583862305

Token 120: ' et' (ID: 859)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5227421522140503
    2. 'number' → logprob: -1.1477421522140503
    3. '+' → logprob: -3.52274227142334
    4. '=' → logprob: -3.77274227142334
    5. ' =' → logprob: -3.77274227142334
    6. ' number' → logprob: -4.89774227142334
    7. ' result' → logprob: -6.02274227142334
    8. ' +' → logprob: -6.77274227142334
    9. '#' → logprob: -7.27274227142334
    10. 'print' → logprob: -7.77274227142334

Token 121: ' afficher' (ID: 146524)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.10058221220970154
    2. 'print' → logprob: -2.3505821228027344
    3. ' afficher' → logprob: -7.975582122802734
    4. '#' → logprob: -10.850582122802734
    5. '_print' → logprob: -12.600582122802734
    6. '#print' → logprob: -13.100582122802734
    7. ' #' → logprob: -13.600582122802734
    8. '.print' → logprob: -14.225582122802734
    9. 'prin' → logprob: -14.350582122802734
    10. ' prin' → logprob: -14.350582122802734

Token 122: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10941215604543686
    2. 'result' → logprob: -2.48441219329834
    3. 'number' → logprob: -4.35941219329834
    4. ' print' → logprob: -5.10941219329834
    5. ' result' → logprob: -6.98441219329834
    6. ' number' → logprob: -8.10941219329834
    7. 'sum' → logprob: -9.73441219329834
    8. '(result' → logprob: -10.23441219329834
    9. ')' → logprob: -10.48441219329834
    10. '(number' → logprob: -10.60941219329834

Token 123: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.03632767125964165
    2. 'rés' → logprob: -3.536327600479126
    3. 'result' → logprob: -5.286327838897705
    4. ' result' → logprob: -6.911327838897705
    5. ' resultat' → logprob: -8.036327362060547
    6. 'r' → logprob: -9.286327362060547
    7. ' résult' → logprob: -10.036327362060547
    8. ' résultats' → logprob: -11.536327362060547
    9. ' rés' → logprob: -11.661327362060547
    10. 'Rés' → logprob: -12.161327362060547

Token 124: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25866955518722534
    2. '
' → logprob: -1.5086696147918701
    3. 'result' → logprob: -5.383669376373291
    4. ' 
' → logprob: -7.008669376373291
    5. ' print' → logprob: -7.008669376373291
    6. '  
' → logprob: -9.50866985321045
    7. '\n' → logprob: -10.00866985321045
    8. 'number' → logprob: -10.25866985321045
    9. '```' → logprob: -10.38366985321045
    10. '+
' → logprob: -10.50866985321045

Token 125: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011722482740879059
    2. 'result' → logprob: -6.751172065734863
    3. ' print' → logprob: -13.876172065734863
    4. '
' → logprob: -14.376172065734863
    5. 'total' → logprob: -15.626172065734863
    6. 'sum' → logprob: -16.12617301940918
    7. 'prin' → logprob: -16.62617301940918
    8. '```' → logprob: -16.75117301940918
    9. 'pr' → logprob: -17.75117301940918
    10. '

' → logprob: -18.37617301940918

Token 126: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.002500271424651146
    2. '(' → logprob: -6.002500057220459
    3. 'number' → logprob: -10.752500534057617
    4. '(
' → logprob: -13.377500534057617
    5. '()' → logprob: -14.377500534057617
    6. '((' → logprob: -15.377500534057617
    7. ' (' → logprob: -15.502500534057617
    8. '(num' → logprob: -15.877500534057617
    9. '(n' → logprob: -16.002500534057617
    10. ' number' → logprob: -16.627500534057617

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.052377623040229e-05
    2. ')' → logprob: -10.250070571899414
    3. '+' → logprob: -10.375070571899414
    4. '2' → logprob: -13.375070571899414
    5. '_' → logprob: -14.750070571899414
    6. ' ' → logprob: -14.750070571899414
    7. '))' → logprob: -15.125070571899414
    8. '+)' → logprob: -15.125070571899414
    9. ')+' → logprob: -15.375070571899414
    10. ' +' → logprob: -15.375070571899414

Token 128: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6935684084892273
    2. ' +' → logprob: -0.6935684084892273
    3. ')' → logprob: -7.818568229675293
    4. ' )' → logprob: -11.318568229675293
    5. '+)' → logprob: -12.568568229675293
    6. ')+' → logprob: -13.568568229675293
    7. ' ' → logprob: -13.693568229675293
    8. ' ' → logprob: -14.943568229675293
    9. ',' → logprob: -15.818568229675293
    10. ' ,' → logprob: -16.06856918334961

Token 129: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.25192928314208984
    2. 'number' → logprob: -1.5019292831420898
    3. ' ' → logprob: -15.87692928314209
    4. '	number' → logprob: -17.251930236816406
    5. ')' → logprob: -18.376930236816406
    6. ' ' → logprob: -18.501930236816406
    7. '(number' → logprob: -19.001930236816406
    8. '_number' → logprob: -20.626930236816406
    9. '  ' → logprob: -20.876930236816406
    10. '[number' → logprob: -21.001930236816406

Token 130: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -15.375000953674316
    3. '۲' → logprob: -15.875000953674316
    4. ')' → logprob: -16.625
    5. '[' → logprob: -16.9375
    6. '٢' → logprob: -17.75
    7. '_' → logprob: -17.875
    8. '২' → logprob: -18.0
    9. '२' → logprob: -18.0625
    10. '])' → logprob: -18.0625

Token 131: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '))' → logprob: -14.625000953674316
    3. ' )' → logprob: -15.875000953674316
    4. ')`' → logprob: -16.125
    5. ')
' → logprob: -18.125
    6. ')}' → logprob: -19.25
    7. '`)' → logprob: -19.375
    8. ')#' → logprob: -19.625
    9. '()' → logprob: -19.75
    10. '())' → logprob: -20.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 129
Tokens correctement prédits (1ère position, stricte): 45
Tokens correctement prédits (1ère position, avec adaptation): 45
Tokens correctement prédits (top 10): 85
Précision stricte (1ère position): 34.88%
Précision adaptée (1ère position): 34.88%
Précision (top 10): 65.89%
================================================================================
