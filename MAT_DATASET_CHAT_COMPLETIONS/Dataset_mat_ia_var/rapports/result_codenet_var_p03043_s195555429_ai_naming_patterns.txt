================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import log2 as math_log2, ceil as math_ceil

input_value_total, input_value_threshold = map(int, input().split())

if input_value_total <= input_value_threshold:
    probability_list = [0] * input_value_total
    iteration_count = input_value_total + 1
    cumulative_score = 0
else:
    probability_list = [0] * (input_value_threshold - 1)
    iteration_count = input_value_threshold
    cumulative_score = (input_value_total - input_value_threshold + 1) / input_value_total

for loop_index in range(1, iteration_count):
    current_probability = (1 / input_value_total) * pow(
        0.5, math_ceil(math_log2(input_value_threshold / loop_index))
    )
    probability_list[loop_index - 1] = current_probability

final_result = sum(probability_list) + cumulative_score
print(final_result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' log' (ID: 2142)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.33761364221572876
    2. 'sqrt' → logprob: -1.337613582611084
    3. ' pi' → logprob: -4.087613582611084
    4. 'pow' → logprob: -6.212613582611084
    5. 'pi' → logprob: -6.462613582611084
    6. ' sin' → logprob: -6.962613582611084
    7. 'sin' → logprob: -6.962613582611084
    8. ' ceil' → logprob: -7.337613582611084
    9. ' pow' → logprob: -8.212614059448242
    10. ' factorial' → logprob: -8.462614059448242

Token 4: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00016659092216286808
    2. ',' → logprob: -9.750166893005371
    3. '\(' → logprob: -10.250166893005371
    4. '```' → logprob: -10.750166893005371
    5. ' (' → logprob: -11.125166893005371
    6. '10' → logprob: -12.125166893005371
    7. '(
' → logprob: -12.250166893005371
    8. '"' → logprob: -12.375166893005371
    9. '_' → logprob: -12.500166893005371
    10. '1' → logprob: -12.500166893005371

Token 5: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007592422189190984
    2. '(
' → logprob: -7.875759124755859
    3. '\(' → logprob: -8.50075912475586
    4. '\n' → logprob: -9.87575912475586
    5. ',' → logprob: -9.87575912475586
    6. '```' → logprob: -11.25075912475586
    7. ' (' → logprob: -11.37575912475586
    8. '\' → logprob: -11.87575912475586
    9. '
' → logprob: -12.25075912475586
    10. '#' → logprob: -12.50075912475586

Token 6: ' math' (ID: 13324)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.4213605225086212
    2. ' log' → logprob: -1.6713604927062988
    3. 'lg' → logprob: -2.671360492706299
    4. ' l' → logprob: -3.171360492706299
    5. 'l' → logprob: -3.421360492706299
    6. ' lg' → logprob: -5.421360492706299
    7. 'b' → logprob: -5.671360492706299
    8. ' lb' → logprob: -6.546360492706299
    9. 'lb' → logprob: -7.921360492706299
    10. '`' → logprob: -8.296360969543457

Token 7: '_log' (ID: 9545)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007167731411755085
    2. ',' → logprob: -5.382167816162109
    3. '(' → logprob: -7.132167816162109
    4. '_' → logprob: -7.507167816162109
    5. ':' → logprob: -8.13216781616211
    6. ')' → logprob: -8.63216781616211
    7. 'import' → logprob: -8.63216781616211
    8. 'as' → logprob: -9.63216781616211
    9. '<|end|>' → logprob: -9.88216781616211
    10. '[' → logprob: -10.13216781616211

Token 8: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00039254239527508616
    2. '(
' → logprob: -8.62539291381836
    3. ' (' → logprob: -9.75039291381836
    4. ',' → logprob: -9.75039291381836
    5. '\(' → logprob: -9.75039291381836
    6. '.' → logprob: -11.12539291381836
    7. '(

' → logprob: -11.87539291381836
    8. 'a' → logprob: -13.12539291381836
    9. '```' → logprob: -13.25039291381836
    10. ' ' → logprob: -13.75039291381836

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00019901065388694406
    2. '(
' → logprob: -9.625199317932129
    3. ',' → logprob: -9.875199317932129
    4. '\(' → logprob: -10.375199317932129
    5. ' (' → logprob: -11.250199317932129
    6. '.' → logprob: -11.500199317932129
    7. '```' → logprob: -11.875199317932129
    8. '#' → logprob: -12.500199317932129
    9. 'a' → logprob: -12.875199317932129
    10. ')' → logprob: -13.500199317932129

Token 10: ' ceil' (ID: 35964)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.41747385263442993
    2. ' log' → logprob: -1.2924737930297852
    3. 'ceil' → logprob: -3.917473793029785
    4. ' math' → logprob: -4.667473793029785
    5. 'pow' → logprob: -4.667473793029785
    6. 'sqrt' → logprob: -5.292473793029785
    7. 'math' → logprob: -5.542473793029785
    8. ' sqrt' → logprob: -5.542473793029785
    9. ' sin' → logprob: -5.792473793029785
    10. 'sin' → logprob: -6.167473793029785

Token 11: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027998872101306915
    2. ',' → logprob: -6.252799987792969
    3. '(
' → logprob: -7.377799987792969
    4. ' (' → logprob: -9.627799987792969
    5. '\(' → logprob: -10.252799987792969
    6. '.' → logprob: -10.502799987792969
    7. '```' → logprob: -10.627799987792969
    8. ')' → logprob: -11.377799987792969
    9. '<|end|>' → logprob: -11.377799987792969
    10. '_' → logprob: -11.752799987792969

Token 12: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.11306465417146683
    2. ' math' → logprob: -2.238064765930176
    3. 'ceil' → logprob: -8.488064765930176
    4. '_math' → logprob: -11.238064765930176
    5. ' ceil' → logprob: -11.488064765930176
    6. 'Math' → logprob: -12.488064765930176
    7. 'm' → logprob: -12.738064765930176
    8. 'cmath' → logprob: -12.988064765930176
    9. 'mat' → logprob: -14.488064765930176
    10. ' maths' → logprob: -14.613064765930176

Token 13: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1609635055065155
    2. '_log' → logprob: -1.910963535308838
    3. '_math' → logprob: -7.910963535308838
    4. 'ceil' → logprob: -8.16096305847168
    5. '_ce' → logprob: -10.91096305847168
    6. ' _' → logprob: -11.41096305847168
    7. '_floor' → logprob: -11.78596305847168
    8. '_pow' → logprob: -11.91096305847168
    9. '```' → logprob: -12.03596305847168
    10. '_import' → logprob: -12.78596305847168

Token 14: 'ceil' (ID: 43552)
  Prédit: 'ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -1.981667537620524e-06
    2. 'log' → logprob: -13.375001907348633
    3. ' ceil' → logprob: -15.500001907348633
    4. '.ceil' → logprob: -16.875001907348633
    5. '```' → logprob: -17.500001907348633
    6. '_' → logprob: -17.875001907348633
    7. 'floor' → logprob: -18.000001907348633
    8. 'cel' → logprob: -18.750001907348633
    9. 'pow' → logprob: -19.625001907348633
    10. 'math' → logprob: -20.500001907348633

Token 15: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011052536778151989
    2. ',' → logprob: -4.88605260848999
    3. '(
' → logprob: -6.63605260848999
    4. '.' → logprob: -7.51105260848999
    5. ' (' → logprob: -7.76105260848999
    6. '
' → logprob: -8.386052131652832
    7. '<|end|>' → logprob: -8.636052131652832
    8. '```' → logprob: -8.761052131652832
    9. '\' → logprob: -8.886052131652832
    10. '\(' → logprob: -9.636052131652832

Token 16: 'input' (ID: 2586)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017438429640606046
    2. ',' → logprob: -7.626743793487549
    3. '(
' → logprob: -7.626743793487549
    4. '
' → logprob: -8.626744270324707
    5. '\(' → logprob: -8.751744270324707
    6. '\' → logprob: -9.501744270324707
    7. ' (' → logprob: -10.001744270324707
    8. 'a' → logprob: -10.126744270324707
    9. 'def' → logprob: -10.251744270324707
    10. '.' → logprob: -10.501744270324707

Token 17: '_value' (ID: 6734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020127551397308707
    2. ' (' → logprob: -10.000201225280762
    3. '('' → logprob: -10.125201225280762
    4. '_' → logprob: -10.500201225280762
    5. '(
' → logprob: -10.500201225280762
    6. 's' → logprob: -11.250201225280762
    7. '("("' → logprob: -11.375201225280762
    8. '_parent' → logprob: -12.375201225280762
    9. '()' → logprob: -12.375201225280762
    10. '```' → logprob: -12.750201225280762

Token 18: '_total' (ID: 23814)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008345892652869225
    2. ')' → logprob: -5.008346080780029
    3. '_' → logprob: -7.258346080780029
    4. '.' → logprob: -8.258345603942871
    5. '[' → logprob: -8.383345603942871
    6. ' (' → logprob: -9.258345603942871
    7. '(
' → logprob: -9.633345603942871
    8. '=' → logprob: -10.258345603942871
    9. ',' → logprob: -10.383345603942871
    10. '<|end|>' → logprob: -10.383345603942871

Token 19: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7653750777244568
    2. '_count' → logprob: -1.2653751373291016
    3. ')' → logprob: -2.2653751373291016
    4. '_size' → logprob: -3.1403751373291016
    5. '_counts' → logprob: -4.015375137329102
    6. '_input' → logprob: -4.390375137329102
    7. '_s' → logprob: -4.640375137329102
    8. 's' → logprob: -4.765375137329102
    9. '_amount' → logprob: -4.890375137329102
    10. '_length' → logprob: -4.890375137329102

Token 20: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4695432186126709
    2. 'input' → logprob: -1.344543218612671
    3. ' output' → logprob: -3.719543218612671
    4. 'output' → logprob: -3.719543218612671
    5. ' total' → logprob: -4.09454345703125
    6. 'total' → logprob: -4.21954345703125
    7. '=' → logprob: -5.09454345703125
    8. 'max' → logprob: -5.21954345703125
    9. ' =' → logprob: -5.34454345703125
    10. ' max' → logprob: -5.59454345703125

Token 21: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.07353506237268448
    2. '_count' → logprob: -3.1985349655151367
    3. '_total' → logprob: -4.573534965515137
    4. '_' → logprob: -5.573534965515137
    5. '_values' → logprob: -5.698534965515137
    6. '_size' → logprob: -6.323534965515137
    7. '_data' → logprob: -6.698534965515137
    8. '_amount' → logprob: -6.823534965515137
    9. '_output' → logprob: -6.948534965515137
    10. '_items' → logprob: -7.198534965515137

Token 22: '_threshold' (ID: 51747)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.23948684334754944
    2. '_' → logprob: -1.614486813545227
    3. ' =' → logprob: -4.8644866943359375
    4. '_count' → logprob: -5.9894866943359375
    5. '=' → logprob: -6.7394866943359375
    6. '_max' → logprob: -7.2394866943359375
    7. '_sum' → logprob: -7.8644866943359375
    8. '_input' → logprob: -8.614486694335938
    9. '_size' → logprob: -9.114486694335938
    10. '_=' → logprob: -9.114486694335938

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49104946851730347
    2. '=' → logprob: -1.2410495281219482
    3. '_' → logprob: -2.6160495281219482
    4. ',' → logprob: -3.7410495281219482
    5. ')' → logprob: -7.866049289703369
    6. '_=' → logprob: -7.991049289703369
    7. ' _' → logprob: -8.366049766540527
    8. '_,' → logprob: -8.491049766540527
    9. ' ' → logprob: -8.616049766540527
    10. '_space' → logprob: -8.741049766540527

Token 24: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33147457242012024
    2. '0' → logprob: -1.3314745426177979
    3. ' map' → logprob: -5.206474781036377
    4. ' input' → logprob: -5.456474781036377
    5. 'input' → logprob: -5.706474781036377
    6. ' None' → logprob: -6.206474781036377
    7. 'map' → logprob: -6.456474781036377
    8. 'int' → logprob: -7.956474781036377
    9. 'None' → logprob: -8.081474304199219
    10. ' int' → logprob: -8.456474304199219

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08662741631269455
    2. '<|end|>' → logprob: -3.83662748336792
    3. '(input' → logprob: -3.96162748336792
    4. '(lambda' → logprob: -3.96162748336792
    5. '(' → logprob: -4.71162748336792
    6. '(str' → logprob: -5.46162748336792
    7. 'int' → logprob: -5.58662748336792
    8. '<int' → logprob: -6.58662748336792
    9. '(eval' → logprob: -6.96162748336792
    10. 'input' → logprob: -7.21162748336792

Token 26: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2634437680244446
    2. ')' → logprob: -1.5134437084197998
    3. 'input' → logprob: -5.388443946838379
    4. '(' → logprob: -5.388443946838379
    5. '<|end|>' → logprob: -6.638443946838379
    6. ')(' → logprob: -8.388443946838379
    7. ',input' → logprob: -8.763443946838379
    8. '(user' → logprob: -9.263443946838379
    9. ',' → logprob: -9.763443946838379
    10. '<|end|>' → logprob: -9.888443946838379

Token 27: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023311514407396317
    2. ' input' → logprob: -3.7733116149902344
    3. ')' → logprob: -9.648311614990234
    4. '(input' → logprob: -14.273311614990234
    5. ',input' → logprob: -15.148311614990234
    6. ' )' → logprob: -15.523311614990234
    7. '<input' → logprob: -16.273311614990234
    8. '=input' → logprob: -16.273311614990234
    9. '[input' → logprob: -16.898311614990234
    10. '))' → logprob: -17.398311614990234

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008367887930944562
    2. '()' → logprob: -7.1258368492126465
    3. '(' → logprob: -10.875836372375488
    4. '())' → logprob: -11.750836372375488
    5. ')' → logprob: -12.750836372375488
    6. ' ().' → logprob: -14.125836372375488
    7. '()`' → logprob: -15.125836372375488
    8. '()
' → logprob: -15.250836372375488
    9. '('').' → logprob: -15.250836372375488
    10. '("").' → logprob: -15.750836372375488

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.464347173576243e-05
    2. 'strip' → logprob: -10.37503433227539
    3. 'rstrip' → logprob: -13.00003433227539
    4. ' split' → logprob: -14.25003433227539
    5. '(split' → logprob: -15.12503433227539
    6. 'spl' → logprob: -15.87503433227539
    7. 'read' → logprob: -17.37503433227539
    8. ')' → logprob: -17.62503433227539
    9. 's' → logprob: -19.12503433227539
    10. ' ' → logprob: -19.50003433227539

Token 30: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.8110702633857727
    2. ')' → logprob: -1.061070203781128
    3. '))' → logprob: -1.686070203781128
    4. '()))' → logprob: -3.936070203781128
    5. '()' → logprob: -5.561070442199707
    6. '('' → logprob: -8.061070442199707
    7. '(' → logprob: -8.686070442199707
    8. '),' → logprob: -9.561070442199707
    9. '()),' → logprob: -10.186070442199707
    10. '`)' → logprob: -10.186070442199707

Token 31: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5384469628334045
    2. 'result' → logprob: -1.6634469032287598
    3. 'n' → logprob: -1.9134469032287598
    4. 'if' → logprob: -4.28844690322876
    5. '_
' → logprob: -4.28844690322876
    6. '_' → logprob: -4.78844690322876
    7. 'def' → logprob: -5.03844690322876
    8. 'output' → logprob: -5.28844690322876
    9. '```' → logprob: -5.28844690322876
    10. 'x' → logprob: -5.78844690322876

Token 32: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.033922065049409866
    2. 'input' → logprob: -3.408921957015991
    3. ' ' → logprob: -8.53392219543457
    4. ' (' → logprob: -10.03392219543457
    5. '(input' → logprob: -11.40892219543457
    6. ' not' → logprob: -11.78392219543457
    7. '_input' → logprob: -11.90892219543457
    8. ' math' → logprob: -13.15892219543457
    9. 'Input' → logprob: -13.53392219543457
    10. '(' → logprob: -14.03392219543457

Token 33: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0010555570479482412
    2. '_' → logprob: -6.876055717468262
    3. ' _' → logprob: -10.876055717468262
    4. '_val' → logprob: -12.876055717468262
    5. '_values' → logprob: -15.001055717468262
    6. '_total' → logprob: -15.126055717468262
    7. '_v' → logprob: -16.376054763793945
    8. ' ' → logprob: -16.376054763793945
    9. '_input' → logprob: -16.501054763793945
    10. 'value' → logprob: -16.626054763793945

Token 34: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.0441758967936039
    2. '_threshold' → logprob: -3.294175863265991
    3. '_' → logprob: -5.41917610168457
    4. '_value' → logprob: -6.41917610168457
    5. '_tot' → logprob: -11.41917610168457
    6. '_thresh' → logprob: -11.41917610168457
    7. ' _' → logprob: -12.29417610168457
    8. 'total' → logprob: -12.79417610168457
    9. '_max' → logprob: -12.79417610168457
    10. '_val' → logprob: -13.29417610168457

Token 35: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.1837096214294434
    2. ' <' → logprob: -1.3087096214294434
    3. ' >=' → logprob: -1.3087096214294434
    4. ' <=' → logprob: -2.6837096214294434
    5. ' ' → logprob: -3.4337096214294434
    6. '>' → logprob: -3.8087096214294434
    7. '<' → logprob: -4.183709621429443
    8. '>=' → logprob: -4.683709621429443
    9. '<=' → logprob: -6.308709621429443
    10. ' ==' → logprob: -6.433709621429443

Token 36: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.38376984000205994
    2. 'input' → logprob: -1.3837698698043823
    3. '0' → logprob: -3.1337697505950928
    4. ' ' → logprob: -3.7587697505950928
    5. '1' → logprob: -6.883769989013672
    6. '2' → logprob: -9.133769989013672
    7. ' math' → logprob: -11.383769989013672
    8. '10' → logprob: -11.633769989013672
    9. '(input' → logprob: -11.883769989013672
    10. '3' → logprob: -12.071269989013672

Token 37: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.5928495486150496e-05
    2. '_' → logprob: -11.250016212463379
    3. '_threshold' → logprob: -13.375016212463379
    4. '_total' → logprob: -15.000016212463379
    5. ' _' → logprob: -15.250016212463379
    6. '_val' → logprob: -15.375016212463379
    7. '_Value' → logprob: -15.500016212463379
    8. '_VALUE' → logprob: -15.875016212463379
    9. '```' → logprob: -16.000015258789062
    10. '_values' → logprob: -17.125015258789062

Token 38: '_threshold' (ID: 51747)
  Prédit: '_threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_threshold' → logprob: -1.981667537620524e-06
    2. '_total' → logprob: -14.125001907348633
    3. '_thresh' → logprob: -14.500001907348633
    4. '_' → logprob: -14.875001907348633
    5. 'threshold' → logprob: -15.625001907348633
    6. '_thr' → logprob: -17.250001907348633
    7. '_th' → logprob: -17.500001907348633
    8. ' _' → logprob: -17.500001907348633
    9. '_value' → logprob: -18.000001907348633
    10. '_t' → logprob: -18.250001907348633

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.718606891809031e-05
    2. ' :' → logprob: -10.375066757202148
    3. ':
' → logprob: -11.000066757202148
    4. ':return' → logprob: -11.000066757202148
    5. ' or' → logprob: -14.000066757202148
    6. ':**' → logprob: -14.750066757202148
    7. ',' → logprob: -15.125066757202148
    8. '+:' → logprob: -15.250066757202148
    9. ' and' → logprob: -15.875066757202148
    10. '):' → logprob: -16.25006675720215

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36679211258888245
    2. ':' → logprob: -2.8667922019958496
    3. '
' → logprob: -2.8667922019958496
    4. '\n' → logprob: -2.8667922019958496
    5. 'print' → logprob: -2.8667922019958496
    6. ' print' → logprob: -2.9917922019958496
    7. ':
' → logprob: -3.9917922019958496
    8. '    
' → logprob: -5.61679220199585
    9. ' ' → logprob: -6.86679220199585
    10. ' 
' → logprob: -7.24179220199585

Token 41: ' probability' (ID: 34933)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.16061708331108093
    2. 'print' → logprob: -2.0356171131134033
    3. '   ' → logprob: -4.285616874694824
    4. ' result' → logprob: -6.160616874694824
    5. ' output' → logprob: -6.785616874694824
    6. 'result' → logprob: -8.410616874694824
    7. 'output' → logprob: -9.285616874694824
    8. '    ' → logprob: -9.410616874694824
    9. ' ' → logprob: -9.785616874694824
    10. ' input' → logprob: -10.035616874694824

Token 42: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009536851197481155
    2. '=' → logprob: -4.7595367431640625
    3. ' ' → logprob: -7.7595367431640625
    4. '_' → logprob: -8.009536743164062
    5. 's' → logprob: -9.509536743164062
    6. '   ' → logprob: -10.634536743164062
    7. '_space' → logprob: -10.759536743164062
    8. ',' → logprob: -12.634536743164062
    9. '  ' → logprob: -12.634536743164062
    10. '_prob' → logprob: -12.759536743164062

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01814560778439045
    2. '.append' → logprob: -4.518145561218262
    3. '.' → logprob: -5.768145561218262
    4. '=' → logprob: -6.393145561218262
    5. '[' → logprob: -6.768145561218262
    6. '[:]' → logprob: -7.143145561218262
    7. '_' → logprob: -9.768145561218262
    8. '=[]' → logprob: -9.768145561218262
    9. ' +=' → logprob: -10.518145561218262
    10. ' .' → logprob: -10.643145561218262

Token 44: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22694280743598938
    2. ' [' → logprob: -1.601942777633667
    3. '[]' → logprob: -7.351943016052246
    4. '[input' → logprob: -8.101943016052246
    5. ' []' → logprob: -8.601943016052246
    6. '[(' → logprob: -9.476943016052246
    7. '   ' → logprob: -10.476943016052246
    8. '[i' → logprob: -10.601943016052246
    9. ' ' → logprob: -10.601943016052246
    10. '[-' → logprob: -10.726943016052246

Token 45: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04941801726818085
    2. '0' → logprob: -3.1744179725646973
    3. 'input' → logprob: -5.924417972564697
    4. ' ' → logprob: -6.674417972564697
    5. '(' → logprob: -6.924417972564697
    6. '   ' → logprob: -7.424417972564697
    7. '100' → logprob: -8.924418449401855
    8. '(input' → logprob: -9.049418449401855
    9. 'math' → logprob: -9.299418449401855
    10. 'i' → logprob: -9.549418449401855

Token 46: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01339750923216343
    2. '.' → logprob: -4.513397693634033
    3. ',' → logprob: -6.763397693634033
    4. ']*' → logprob: -7.513397693634033
    5. ' ]' → logprob: -8.138397216796875
    6. ' for' → logprob: -8.888397216796875
    7. ']*(' → logprob: -9.763397216796875
    8. '.]' → logprob: -9.763397216796875
    9. ')' → logprob: -10.513397216796875
    10. ']+' → logprob: -11.638397216796875

Token 47: ' *' (ID: 425)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2127566784620285
    2. 'else' → logprob: -1.712756633758545
    3. '[' → logprob: -4.837756633758545
    4. ',' → logprob: -7.712756633758545
    5. '\n' → logprob: -7.837756633758545
    6. '[:]' → logprob: -7.962756633758545
    7. ']' → logprob: -8.212757110595703
    8. '.' → logprob: -8.337757110595703
    9. ' ' → logprob: -8.462757110595703
    10. '
' → logprob: -8.462757110595703

Token 48: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008262904360890388
    2. '(input' → logprob: -5.383263111114502
    3. ' input' → logprob: -6.008263111114502
    4. '(' → logprob: -6.883263111114502
    5. ' (' → logprob: -9.008262634277344
    6. '0' → logprob: -11.883262634277344
    7. ' ' → logprob: -12.383262634277344
    8. 'int' → logprob: -12.383262634277344
    9. '10' → logprob: -13.133262634277344
    10. '1' → logprob: -13.258262634277344

Token 49: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -8.292095299111679e-05
    2. '_' → logprob: -9.625082969665527
    3. ' _' → logprob: -12.750082969665527
    4. 'value' → logprob: -12.750082969665527
    5. '_val' → logprob: -12.750082969665527
    6. '_total' → logprob: -12.875082969665527
    7. '_input' → logprob: -13.000082969665527
    8. '```' → logprob: -13.375082969665527
    9. '_threshold' → logprob: -15.250082969665527
    10. '_probability' → logprob: -15.375082969665527

Token 50: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.029911896213889122
    2. '_value' → logprob: -3.654911994934082
    3. '_threshold' → logprob: -5.654911994934082
    4. 'total' → logprob: -9.779911994934082
    5. '_' → logprob: -10.654911994934082
    6. '_input' → logprob: -12.029911994934082
    7. 'value' → logprob: -12.404911994934082
    8. '```' → logprob: -12.654911994934082
    9. '_tot' → logprob: -13.404911994934082
    10. 's' → logprob: -13.779911994934082

Token 51: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2974555194377899
    2. '
' → logprob: -2.0474555492401123
    3. ' else' → logprob: -2.5474555492401123
    4. '\n' → logprob: -3.7974555492401123
    5. '    
' → logprob: -4.547455310821533
    6. 'elif' → logprob: -5.422455310821533
    7. ' 
' → logprob: -5.797455310821533
    8. '  
' → logprob: -6.172455310821533
    9. '
' → logprob: -6.422455310821533
    10. '   ' → logprob: -6.547455310821533

Token 52: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07017416507005692
    2. ' else' → logprob: -3.070174217224121
    3. '
' → logprob: -4.570174217224121
    4. 'elif' → logprob: -5.070174217224121
    5. '\n' → logprob: -6.820174217224121
    6. '    
' → logprob: -6.820174217224121
    7. '<|end|>' → logprob: -7.195174217224121
    8. ' 
' → logprob: -7.570174217224121
    9. '  
' → logprob: -8.195174217224121
    10. '[' → logprob: -8.820174217224121

Token 53: ' iteration' (ID: 43155)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.03533314913511276
    2. ' else' → logprob: -4.035333156585693
    3. 'elif' → logprob: -5.035333156585693
    4. '\n' → logprob: -5.410333156585693
    5. 'prob' → logprob: -6.285333156585693
    6. '
' → logprob: -6.660333156585693
    7. ')' → logprob: -7.785333156585693
    8. '\' → logprob: -8.160332679748535
    9. ']' → logprob: -8.160332679748535
    10. ' probability' → logprob: -8.285332679748535

Token 54: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04467271268367767
    2. '_count' → logprob: -4.04467248916626
    3. '_' → logprob: -4.16967248916626
    4. ' =' → logprob: -5.04467248916626
    5. '_s' → logprob: -5.91967248916626
    6. ' s' → logprob: -7.16967248916626
    7. '=' → logprob: -8.044672966003418
    8. ' ' → logprob: -8.919672966003418
    9. '   ' → logprob: -9.669672966003418
    10. '_range' → logprob: -10.044672966003418

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024344047997146845
    2. '=' → logprob: -6.127434253692627
    3. 's' → logprob: -8.377434730529785
    4. ' ' → logprob: -11.752434730529785
    5. '_' → logprob: -12.502434730529785
    6. ' +=' → logprob: -13.002434730529785
    7. ',' → logprob: -13.627434730529785
    8. '  ' → logprob: -14.002434730529785
    9. '   ' → logprob: -14.377434730529785
    10. ')' → logprob: -14.502434730529785

Token 56: ' input' (ID: 3422)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.548932671546936
    2. '1' → logprob: -2.2989325523376465
    3. ' math' → logprob: -2.2989325523376465
    4. 'input' → logprob: -2.5489325523376465
    5. 'math' → logprob: -2.6739325523376465
    6. ' ' → logprob: -3.2989325523376465
    7. ' input' → logprob: -3.2989325523376465
    8. '2' → logprob: -8.798933029174805
    9. '10' → logprob: -9.173933029174805
    10. 'int' → logprob: -9.423933029174805

Token 57: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0009683952084742486
    2. '_' → logprob: -7.5009684562683105
    3. '()' → logprob: -8.250967979431152
    4. '```' → logprob: -10.375967979431152
    5. '(' → logprob: -10.500967979431152
    6. '_VALUE' → logprob: -11.250967979431152
    7. '_total' → logprob: -11.500967979431152
    8. 'value' → logprob: -12.000967979431152
    9. '_values' → logprob: -12.125967979431152
    10. ' _' → logprob: -12.125967979431152

Token 58: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.1330375373363495
    2. '_threshold' → logprob: -2.133037567138672
    3. '_value' → logprob: -5.258037567138672
    4. '_' → logprob: -7.383037567138672
    5. 'else' → logprob: -9.258037567138672
    6. '_else' → logprob: -10.383037567138672
    7. '_
' → logprob: -10.758037567138672
    8. '_count' → logprob: -10.883037567138672
    9. '   ' → logprob: -10.883037567138672
    10. 'total' → logprob: -11.008037567138672

Token 59: ' +' (ID: 659)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1157568171620369
    2. '
' → logprob: -2.7407567501068115
    3. ' else' → logprob: -3.2407567501068115
    4. '<|end|>' → logprob: -6.490756988525391
    5. 'elif' → logprob: -6.490756988525391
    6. '\n' → logprob: -6.865756988525391
    7. '    
' → logprob: -7.865756988525391
    8. '```' → logprob: -8.36575698852539
    9. ':' → logprob: -8.74075698852539
    10. '<|end|>' → logprob: -9.11575698852539

Token 60: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007481207139790058
    2. ' ' → logprob: -5.757481098175049
    3. 'input' → logprob: -6.507481098175049
    4. 'math' → logprob: -7.132481098175049
    5. '10' → logprob: -7.507481098175049
    6. '0' → logprob: -7.507481098175049
    7. '100' → logprob: -8.507481575012207
    8. '2' → logprob: -8.632481575012207
    9. ' math' → logprob: -9.132481575012207
    10. '3' → logprob: -9.882481575012207

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04080454260110855
    2. 'input' → logprob: -3.415804624557495
    3. 'math' → logprob: -6.290804386138916
    4. '0' → logprob: -6.290804386138916
    5. '10' → logprob: -6.915804386138916
    6. '100' → logprob: -7.665804386138916
    7. '2' → logprob: -7.790804386138916
    8. '(' → logprob: -7.915804386138916
    9. '3' → logprob: -8.665804862976074
    10. '(input' → logprob: -8.665804862976074

Token 62: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3432556688785553
    2. '
' → logprob: -1.343255639076233
    3. '\n' → logprob: -4.593255519866943
    4. ' else' → logprob: -4.718255519866943
    5. '<|end|>' → logprob: -5.593255519866943
    6. 'elif' → logprob: -6.093255519866943
    7. '
' → logprob: -6.843255519866943
    8. '    
' → logprob: -7.093255519866943
    9. ':' → logprob: -7.468255519866943
    10. '  
' → logprob: -7.718255519866943

Token 63: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.01721428707242012
    2. '
' → logprob: -4.767214298248291
    3. 'elif' → logprob: -5.892214298248291
    4. ' else' → logprob: -5.892214298248291
    5. '\n' → logprob: -6.517214298248291
    6. '<|end|>' → logprob: -7.392214298248291
    7. ':' → logprob: -8.017213821411133
    8. '    
' → logprob: -8.767213821411133
    9. '#else' → logprob: -9.517213821411133
    10. ')' → logprob: -9.767213821411133

Token 64: ' cumulative' (ID: 75628)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0840442031621933
    2. '
' → logprob: -2.8340442180633545
    3. '\n' → logprob: -4.459043979644775
    4. ' else' → logprob: -5.709043979644775
    5. 'elif' → logprob: -5.709043979644775
    6. '    
' → logprob: -7.209043979644775
    7. '   ' → logprob: -7.334043979644775
    8. '<|end|>' → logprob: -7.459043979644775
    9. '```' → logprob: -8.084044456481934
    10. '  
' → logprob: -8.584044456481934

Token 65: '_score' (ID: 22555)
  Prédit: '_probability'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_probability' → logprob: -0.3413870632648468
    2. '_sum' → logprob: -1.9663870334625244
    3. '_prob' → logprob: -2.8413870334625244
    4. '_' → logprob: -3.3413870334625244
    5. '_value' → logprob: -3.4663870334625244
    6. '_count' → logprob: -4.5913872718811035
    7. ' _' → logprob: -5.9663872718811035
    8. ' =' → logprob: -6.8413872718811035
    9. '_log' → logprob: -6.8413872718811035
    10. '_threshold' → logprob: -6.9663872718811035

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01824616827070713
    2. '=' → logprob: -4.018246173858643
    3. 's' → logprob: -10.018245697021484
    4. ' +=' → logprob: -10.643245697021484
    5. '_score' → logprob: -12.143245697021484
    6. '_sum' → logprob: -12.393245697021484
    7. ',' → logprob: -12.643245697021484
    8. ' ' → logprob: -12.768245697021484
    9. '   ' → logprob: -12.893245697021484
    10. '_' → logprob: -13.143245697021484

Token 67: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3882235288619995
    2. ' ' → logprob: -1.1382235288619995
    3. ' input' → logprob: -7.638223648071289
    4. 'input' → logprob: -8.263223648071289
    5. '1' → logprob: -8.513223648071289
    6. ' [' → logprob: -9.263223648071289
    7. '   ' → logprob: -10.075723648071289
    8. ' -' → logprob: -10.263223648071289
    9. ' None' → logprob: -10.388223648071289
    10. '-' → logprob: -10.950723648071289

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009432930499315262
    2. 'input' → logprob: -5.634432792663574
    3. '1' → logprob: -6.134432792663574
    4. '-' → logprob: -7.009432792663574
    5. 'iteration' → logprob: -7.384432792663574
    6. ' ' → logprob: -7.634432792663574
    7. 'sum' → logprob: -7.884432792663574
    8. '[' → logprob: -8.009432792663574
    9. 'float' → logprob: -8.384432792663574
    10. '(' → logprob: -8.759432792663574

Token 69: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.20601674914360046
    2. '
' → logprob: -2.456016778945923
    3. '<|end|>' → logprob: -2.706016778945923
    4. 'elif' → logprob: -4.581016540527344
    5. ' else' → logprob: -4.581016540527344
    6. '\n' → logprob: -5.081016540527344
    7. '   ' → logprob: -6.081016540527344
    8. '<|end|>' → logprob: -6.956016540527344
    9. '    
' → logprob: -7.081016540527344
    10. ':' → logprob: -7.206016540527344

Token 70: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.14930759370326996
    2. '
' → logprob: -2.8993074893951416
    3. ' else' → logprob: -3.5243074893951416
    4. '   ' → logprob: -4.149307727813721
    5. '\n' → logprob: -4.274307727813721
    6. 'elif' → logprob: -4.649307727813721
    7. '<|end|>' → logprob: -5.649307727813721
    8. ':' → logprob: -5.649307727813721
    9. '    
' → logprob: -5.899307727813721
    10. '  
' → logprob: -6.774307727813721

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003852574387565255
    2. ':
' → logprob: -5.753852367401123
    3. ' :' → logprob: -7.628852367401123
    4. '<|end|>' → logprob: -9.503852844238281
    5. ',' → logprob: -10.128852844238281
    6. ' :
' → logprob: -10.753852844238281
    7. '   ' → logprob: -11.253852844238281
    8. '
' → logprob: -11.253852844238281
    9. '<|end|>' → logprob: -11.753852844238281
    10. '```' → logprob: -12.503852844238281

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21156935393810272
    2. ' probability' → logprob: -3.086569309234619
    3. ' n' → logprob: -3.336569309234619
    4. ' input' → logprob: -3.461569309234619
    5. '    ' → logprob: -3.961569309234619
    6. '```' → logprob: -4.336569309234619
    7. ' ' → logprob: -5.086569309234619
    8. 'prob' → logprob: -5.336569309234619
    9. ' 
' → logprob: -5.586569309234619
    10. '    
' → logprob: -5.586569309234619

Token 73: ' probability' (ID: 34933)
  Prédit: ' probability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' probability' → logprob: -0.6695725321769714
    2. 'prob' → logprob: -1.7945725917816162
    3. ' iteration' → logprob: -1.9195725917816162
    4. ' space' → logprob: -3.419572591781616
    5. 'iteration' → logprob: -3.669572591781616
    6. ' threshold' → logprob: -3.669572591781616
    7. ' input' → logprob: -3.794572591781616
    8. ' step' → logprob: -4.419572353363037
    9. 'threshold' → logprob: -4.794572353363037
    10. '   ' → logprob: -4.919572353363037

Token 74: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0074646431021392345
    2. '_' → logprob: -5.007464408874512
    3. '_value' → logprob: -8.132464408874512
    4. ' _' → logprob: -9.007464408874512
    5. '_threshold' → logprob: -9.882464408874512
    6. '_prob' → logprob: -10.257464408874512
    7. '_s' → logprob: -10.632464408874512
    8. '_count' → logprob: -10.757464408874512
    9. '_probability' → logprob: -11.007464408874512
    10. '_values' → logprob: -11.132464408874512

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0022196033969521523
    2. '=' → logprob: -6.1272196769714355
    3. '[' → logprob: -10.752219200134277
    4. '   ' → logprob: -12.627219200134277
    5. '_' → logprob: -13.377219200134277
    6. ' ' → logprob: -13.502219200134277
    7. ',' → logprob: -13.502219200134277
    8. ' =[' → logprob: -13.752219200134277
    9. '[:]' → logprob: -13.877219200134277
    10. ')' → logprob: -14.377219200134277

Token 76: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14393822848796844
    2. ' [' → logprob: -2.0189383029937744
    3. '[input' → logprob: -7.393938064575195
    4. '[(' → logprob: -8.143938064575195
    5. '[]' → logprob: -8.893938064575195
    6. '[p' → logprob: -10.393938064575195
    7. ' [(' → logprob: -10.518938064575195
    8. '[-' → logprob: -11.018938064575195
    9. '[int' → logprob: -11.143938064575195
    10. ' ' → logprob: -11.268938064575195

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46414998173713684
    2. '1' → logprob: -1.2141499519348145
    3. '(' → logprob: -3.0891499519348145
    4. 'input' → logprob: -4.8391499519348145
    5. ' ' → logprob: -4.9641499519348145
    6. ' (' → logprob: -5.8391499519348145
    7. '(input' → logprob: -5.9641499519348145
    8. 'round' → logprob: -6.0891499519348145
    9. ']' → logprob: -6.7141499519348145
    10. 'int' → logprob: -7.3391499519348145

Token 78: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004251931968610734
    2. ' ]' → logprob: -8.375425338745117
    3. ']*' → logprob: -9.125425338745117
    4. '.' → logprob: -10.250425338745117
    5. ' for' → logprob: -11.250425338745117
    6. '   ' → logprob: -11.625425338745117
    7. ',' → logprob: -11.750425338745117
    8. ')' → logprob: -12.125425338745117
    9. ']*(' → logprob: -12.250425338745117
    10. ' ' → logprob: -13.250425338745117

Token 79: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2706601023674011
    2. ' *' → logprob: -2.020660161972046
    3. ' ]' → logprob: -2.895660161972046
    4. '*' → logprob: -4.270659923553467
    5. ' for' → logprob: -4.270659923553467
    6. ',' → logprob: -5.145659923553467
    7. ' ' → logprob: -5.645659923553467
    8. '[' → logprob: -6.145659923553467
    9. ']*' → logprob: -6.395659923553467
    10. '```' → logprob: -6.395659923553467

Token 80: ' (' (ID: 350)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.007442874368280172
    2. '(input' → logprob: -5.007442951202393
    3. ' input' → logprob: -7.632442951202393
    4. '(' → logprob: -9.007442474365234
    5. 'math' → logprob: -9.632442474365234
    6. ' (' → logprob: -10.632442474365234
    7. '(math' → logprob: -11.757442474365234
    8. 'int' → logprob: -12.132442474365234
    9. '((' → logprob: -12.757442474365234
    10. '(int' → logprob: -12.757442474365234

Token 81: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.041548486799001694
    2. ' input' → logprob: -3.791548490524292
    3. 'math' → logprob: -4.416548252105713
    4. '(input' → logprob: -5.666548252105713
    5. ' math' → logprob: -6.791548252105713
    6. ' (' → logprob: -7.791548252105713
    7. '(math' → logprob: -7.791548252105713
    8. '(' → logprob: -8.041548728942871
    9. 'int' → logprob: -8.541548728942871
    10. '((' → logprob: -10.416548728942871

Token 82: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.696889623621246e-06
    2. '_' → logprob: -13.50000286102295
    3. 'value' → logprob: -13.87500286102295
    4. 'Value' → logprob: -17.000001907348633
    5. '-' → logprob: -17.000001907348633
    6. ')' → logprob: -17.500001907348633
    7. 'alue' → logprob: -17.625001907348633
    8. '_VALUE' → logprob: -17.750001907348633
    9. '-_' → logprob: -18.125001907348633
    10. '```' → logprob: -18.125001907348633

Token 83: '_threshold' (ID: 51747)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.6933984756469727
    2. '_threshold' → logprob: -0.6933984756469727
    3. 'total' → logprob: -8.693398475646973
    4. 'threshold' → logprob: -9.693398475646973
    5. '_' → logprob: -11.568398475646973
    6. '_value' → logprob: -12.068398475646973
    7. '_thresh' → logprob: -13.693398475646973
    8. '_max' → logprob: -14.193398475646973
    9. '_input' → logprob: -14.193398475646973
    10. '   ' → logprob: -14.818398475646973

Token 84: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030254056677222252
    2. '+' → logprob: -4.280253887176514
    3. ' )' → logprob: -4.780253887176514
    4. ' +' → logprob: -4.905253887176514
    5. '-' → logprob: -10.030254364013672
    6. '))' → logprob: -10.280254364013672
    7. ' -' → logprob: -10.655254364013672
    8. '   ' → logprob: -11.030254364013672
    9. ')
' → logprob: -11.030254364013672
    10. '+)' → logprob: -11.780254364013672

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011599794961512089
    2. ' ' → logprob: -4.636600017547607
    3. 'input' → logprob: -7.261600017547607
    4. '-' → logprob: -7.511600017547607
    5. '2' → logprob: -9.01159954071045
    6. '0' → logprob: -9.01159954071045
    7. ' input' → logprob: -9.38659954071045
    8. ' -' → logprob: -9.63659954071045
    9. '+' → logprob: -10.51159954071045
    10. 'math' → logprob: -10.51159954071045

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006191372871398926
    2. 'input' → logprob: -5.631191253662109
    3. 'total' → logprob: -7.131191253662109
    4. ' ' → logprob: -7.756191253662109
    5. '0' → logprob: -7.881191253662109
    6. '2' → logprob: -8.00619125366211
    7. '-' → logprob: -8.38119125366211
    8. 'math' → logprob: -9.63119125366211
    9. '3' → logprob: -10.00619125366211
    10. '(' → logprob: -10.13119125366211

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008810923318378627
    2. ' )' → logprob: -7.875881195068359
    3. '+' → logprob: -8.37588119506836
    4. ')
' → logprob: -8.62588119506836
    5. ' +' → logprob: -9.87588119506836
    6. '   ' → logprob: -11.12588119506836
    7. '))' → logprob: -11.37588119506836
    8. '```' → logprob: -12.37588119506836
    9. ')

' → logprob: -13.37588119506836
    10. ']' → logprob: -13.75088119506836

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23517128825187683
    2. '<|end|>' → logprob: -2.235171318054199
    3. ')' → logprob: -2.860171318054199
    4. '
' → logprob: -4.110171318054199
    5. ' ' → logprob: -4.860171318054199
    6. ':' → logprob: -5.735171318054199
    7. '    
' → logprob: -6.110171318054199
    8. '\n' → logprob: -6.110171318054199
    9. '<|end|>' → logprob: -6.235171318054199
    10. ',' → logprob: -6.235171318054199

Token 89: ' iteration' (ID: 43155)
  Prédit: 'iteration'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iteration' (adapté à ' iteration') → logprob: -0.25645822286605835
    2. '   ' → logprob: -1.6314582824707031
    3. ' iteration' → logprob: -4.256458282470703
    4. '
' → logprob: -5.131458282470703
    5. 'prob' → logprob: -5.756458282470703
    6. ')' → logprob: -6.881458282470703
    7. 'c' → logprob: -7.256458282470703
    8. ' ' → logprob: -7.256458282470703
    9. '_iteration' → logprob: -7.381458282470703
    10. '.' → logprob: -7.756458282470703

Token 90: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.943783253314905e-05
    2. '_' → logprob: -10.125059127807617
    3. '_value' → logprob: -11.500059127807617
    4. ' _' → logprob: -12.750059127807617
    5. '_counter' → logprob: -13.375059127807617
    6. '_c' → logprob: -13.750059127807617
    7. 's' → logprob: -14.000059127807617
    8. '_counts' → logprob: -14.750059127807617
    9. 'count' → logprob: -15.125059127807617
    10. '```' → logprob: -15.125059127807617

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858816787600517
    2. '=' → logprob: -3.048588275909424
    3. ' ' → logprob: -14.423587799072266
    4. ' +=' → logprob: -16.673587799072266
    5. '＝' → logprob: -17.048587799072266
    6. ',' → logprob: -17.298587799072266
    7. 's' → logprob: -17.548587799072266
    8. ')' → logprob: -18.048587799072266
    9. '   ' → logprob: -18.048587799072266
    10. '<|end|>' → logprob: -18.048587799072266

Token 92: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.45462876558303833
    2. ' input' → logprob: -1.7046287059783936
    3. 'math' → logprob: -2.0796287059783936
    4. ' math' → logprob: -2.9546287059783936
    5. 'int' → logprob: -5.454628944396973
    6. ' int' → logprob: -7.079628944396973
    7. '(input' → logprob: -8.204628944396973
    8. '1' → logprob: -8.454628944396973
    9. '2' → logprob: -8.954628944396973
    10. '(math' → logprob: -9.079628944396973

Token 93: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.5
    3. '_val' → logprob: -16.625
    4. 'value' → logprob: -17.625
    5. '_VALUE' → logprob: -18.625
    6. '```' → logprob: -18.625
    7. ' _' → logprob: -19.0
    8. 'Value' → logprob: -19.125
    9. '_Value' → logprob: -19.375
    10. '__' → logprob: -20.0

Token 94: '_threshold' (ID: 51747)
  Prédit: '_threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_threshold' → logprob: -0.0004959598300047219
    2. '_total' → logprob: -7.625495910644531
    3. '_' → logprob: -13.500495910644531
    4. ' _' → logprob: -13.500495910644531
    5. '_value' → logprob: -13.500495910644531
    6. 'threshold' → logprob: -14.000495910644531
    7. '_thresh' → logprob: -14.000495910644531
    8. '_input' → logprob: -14.875495910644531
    9. '_max' → logprob: -15.125495910644531
    10. '_t' → logprob: -15.125495910644531

Token 95: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08115115761756897
    2. '<|end|>' → logprob: -3.081151247024536
    3. ' +' → logprob: -4.081151008605957
    4. '
' → logprob: -4.956151008605957
    5. '-' → logprob: -6.081151008605957
    6. '   ' → logprob: -6.331151008605957
    7. '+
' → logprob: -6.831151008605957
    8. '*' → logprob: -6.831151008605957
    9. '<|end|>' → logprob: -7.081151008605957
    10. ' ' → logprob: -8.206151008605957

Token 96: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' cumulative' (ID: 75628)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03014233522117138
    2. '   ' → logprob: -3.655142307281494
    3. ' cumulative' → logprob: -5.780142307281494
    4. '
' → logprob: -8.405142784118652
    5. 'prob' → logprob: -8.405142784118652
    6. ' ' → logprob: -9.780142784118652
    7. ' c' → logprob: -10.030142784118652
    8. ')' → logprob: -10.155142784118652
    9. '```' → logprob: -10.655142784118652
    10. '	c' → logprob: -11.030142784118652

Token 98: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.00018792471382766962
    2. '_scores' → logprob: -9.375187873840332
    3. '_s' → logprob: -10.000187873840332
    4. '_' → logprob: -10.625187873840332
    5. '_value' → logprob: -12.000187873840332
    6. '_sc' → logprob: -12.375187873840332
    7. '_probability' → logprob: -12.375187873840332
    8. '_count' → logprob: -12.625187873840332
    9. '_code' → logprob: -13.125187873840332
    10. ' _' → logprob: -13.375187873840332

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04076357185840607
    2. '=' → logprob: -3.2907636165618896
    3. ' +=' → logprob: -5.9157633781433105
    4. '+=' → logprob: -10.790763854980469
    5. ' -=' → logprob: -14.040763854980469
    6. ' ' → logprob: -15.040763854980469
    7. ' *=' → logprob: -16.54076385498047
    8. ' <<=' → logprob: -17.29076385498047
    9. ' |=' → logprob: -17.66576385498047
    10. ' .=' → logprob: -17.91576385498047

Token 100: ' (' (ID: 350)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.9956267476081848
    2. '0' → logprob: -1.12062668800354
    3. ' input' → logprob: -1.62062668800354
    4. ' math' → logprob: -3.87062668800354
    5. ' ' → logprob: -3.99562668800354
    6. 'math' → logprob: -3.99562668800354
    7. ' (' → logprob: -4.370626926422119
    8. '(input' → logprob: -4.745626926422119
    9. '(' → logprob: -4.870626926422119
    10. '1' → logprob: -5.245626926422119

Token 101: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08550223708152771
    2. '(input' → logprob: -3.2105021476745605
    3. 'math' → logprob: -3.7105021476745605
    4. ' input' → logprob: -4.7105021476745605
    5. '(' → logprob: -6.4605021476745605
    6. 'log' → logprob: -6.5855021476745605
    7. '(math' → logprob: -6.5855021476745605
    8. '1' → logprob: -6.7105021476745605
    9. 'prob' → logprob: -7.5855021476745605
    10. ' math' → logprob: -7.7105021476745605

Token 102: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.081584716506768e-05
    2. 'value' → logprob: -11.000020980834961
    3. '_' → logprob: -13.000020980834961
    4. 'Value' → logprob: -14.125020980834961
    5. '_VALUE' → logprob: -15.375020980834961
    6. 'alue' → logprob: -15.750020980834961
    7. '-value' → logprob: -16.12502098083496
    8. ')_' → logprob: -16.37502098083496
    9. '_Value' → logprob: -16.50002098083496
    10. ')value' → logprob: -16.50002098083496

Token 103: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.2827528715133667
    2. '_threshold' → logprob: -1.4077528715133667
    3. '_value' → logprob: -7.157752990722656
    4. 'total' → logprob: -7.282752990722656
    5. 'threshold' → logprob: -9.407752990722656
    6. '_' → logprob: -10.907752990722656
    7. '_input' → logprob: -11.657752990722656
    8. '_score' → logprob: -12.407752990722656
    9. '-' → logprob: -12.657752990722656
    10. '   ' → logprob: -13.282752990722656

Token 104: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1271645426750183
    2. '-' → logprob: -2.127164602279663
    3. '+' → logprob: -9.002164840698242
    4. ')' → logprob: -10.127164840698242
    5. ' ' → logprob: -10.502164840698242
    6. ' +' → logprob: -11.377164840698242
    7. ' *' → logprob: -11.752164840698242
    8. '*' → logprob: -12.002164840698242
    9. ' -
' → logprob: -12.627164840698242
    10. ' )' → logprob: -13.002164840698242

Token 105: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.22897133231163025
    2. ' input' → logprob: -1.6039713621139526
    3. '(input' → logprob: -5.978971481323242
    4. ' (' → logprob: -7.353971481323242
    5. '   ' → logprob: -8.728971481323242
    6. '(' → logprob: -10.103971481323242
    7. ' math' → logprob: -10.103971481323242
    8. 'prob' → logprob: -10.103971481323242
    9. 'math' → logprob: -10.353971481323242
    10. 'iteration' → logprob: -11.103971481323242

Token 106: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -7.584239938296378e-06
    2. 'value' → logprob: -12.000007629394531
    3. '_threshold' → logprob: -14.000007629394531
    4. 'Value' → logprob: -14.875007629394531
    5. '_VALUE' → logprob: -16.50000762939453
    6. '_Value' → logprob: -16.75000762939453
    7. '_' → logprob: -17.12500762939453
    8. 'alue' → logprob: -17.37500762939453
    9. 'threshold' → logprob: -18.00000762939453
    10. '```' → logprob: -18.00000762939453

Token 107: '_threshold' (ID: 51747)
  Prédit: '_threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_threshold' → logprob: -2.1888679839321412e-05
    2. 'threshold' → logprob: -11.000021934509277
    3. '_value' → logprob: -12.250021934509277
    4. 'Threshold' → logprob: -15.875021934509277
    5. '_' → logprob: -16.50002098083496
    6. ' threshold' → logprob: -16.75002098083496
    7. ')' → logprob: -16.87502098083496
    8. '_THRESHOLD' → logprob: -17.62502098083496
    9. '_thresh' → logprob: -18.50002098083496
    10. '_total' → logprob: -18.75002098083496

Token 108: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1693108230829239
    2. ' +' → logprob: -2.4193108081817627
    3. '+' → logprob: -2.7943108081817627
    4. ' )' → logprob: -5.544311046600342
    5. ' -' → logprob: -7.294311046600342
    6. '-' → logprob: -7.419311046600342
    7. ')
' → logprob: -9.294310569763184
    8. ')*' → logprob: -9.419310569763184
    9. '   ' → logprob: -9.669310569763184
    10. ' ' → logprob: -9.919310569763184

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004921489744447172
    2. ' ' → logprob: -7.750492095947266
    3. ')' → logprob: -10.125492095947266
    4. '2' → logprob: -11.000492095947266
    5. '0' → logprob: -13.000492095947266
    6. 'input' → logprob: -14.125492095947266
    7. '```' → logprob: -15.125492095947266
    8. 'math' → logprob: -15.187992095947266
    9. '   ' → logprob: -16.000492095947266
    10. ' )' → logprob: -16.062992095947266

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025966696557588875
    2. '2' → logprob: -9.000259399414062
    3. ' ' → logprob: -9.125259399414062
    4. ')' → logprob: -11.250259399414062
    5. '0' → logprob: -12.000259399414062
    6. 'input' → logprob: -12.625259399414062
    7. '```' → logprob: -14.125259399414062
    8. 'math' → logprob: -14.375259399414062
    9. '   ' → logprob: -14.437759399414062
    10. 'prob' → logprob: -15.000259399414062

Token 111: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008909751777537167
    2. ' )' → logprob: -7.625891208648682
    3. ')*' → logprob: -7.875891208648682
    4. ')
' → logprob: -12.000890731811523
    5. ')**' → logprob: -12.875890731811523
    6. '))' → logprob: -12.875890731811523
    7. ' ' → logprob: -13.375890731811523
    8. '*' → logprob: -13.500890731811523
    9. ')*(' → logprob: -13.875890731811523
    10. '   ' → logprob: -14.000890731811523

Token 112: ' /' (ID: 820)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04011065885424614
    2. ' input' → logprob: -3.6651105880737305
    3. 'iteration' → logprob: -4.7901105880737305
    4. '(input' → logprob: -6.1651105880737305
    5. '2' → logprob: -6.5401105880737305
    6. '(' → logprob: -6.7901105880737305
    7. ' iteration' → logprob: -7.7901105880737305
    8. ' (' → logprob: -8.91511058807373
    9. '3' → logprob: -9.29011058807373
    10. '1' → logprob: -11.16511058807373

Token 114: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.816093228830141e-06
    2. 'value' → logprob: -13.12500286102295
    3. '_' → logprob: -14.37500286102295
    4. 'Value' → logprob: -16.625001907348633
    5. '_Value' → logprob: -16.875001907348633
    6. '_VALUE' → logprob: -17.000001907348633
    7. '_total' → logprob: -17.500001907348633
    8. '_val' → logprob: -17.625001907348633
    9. 'alue' → logprob: -17.750001907348633
    10. '_threshold' → logprob: -18.000001907348633

Token 115: '_total' (ID: 23814)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.3524557054042816
    2. '_total' → logprob: -1.852455735206604
    3. '_threshold' → logprob: -1.977455735206604
    4. 'total' → logprob: -6.8524556159973145
    5. 'value' → logprob: -7.8524556159973145
    6. 'threshold' → logprob: -8.727456092834473
    7. '_' → logprob: -9.227456092834473
    8. '_score' → logprob: -11.352456092834473
    9. 'else' → logprob: -11.602456092834473
    10. '_count' → logprob: -12.102456092834473

Token 116: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6307004690170288
    2. '\n' → logprob: -1.3807004690170288
    3. '<|end|>' → logprob: -1.6307004690170288
    4. 'newline' → logprob: -5.130700588226318
    5. '```' → logprob: -5.505700588226318
    6. '<|end|>' → logprob: -5.880700588226318
    7. '#' → logprob: -6.755700588226318
    8. ':' → logprob: -7.005700588226318
    9. '\' → logprob: -7.130700588226318
    10. '+' → logprob: -7.130700588226318

Token 117: 'for' (ID: 1938)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.11722993850708
    2. '<|end|>' → logprob: -1.24222993850708
    3. 'for' → logprob: -1.74222993850708
    4. '#' → logprob: -2.61722993850708
    5. ')' → logprob: -3.36722993850708
    6. '
' → logprob: -3.86722993850708
    7. ' for' → logprob: -4.11722993850708
    8. '+' → logprob: -4.24222993850708
    9. '\n' → logprob: -4.74222993850708
    10. '[' → logprob: -5.49222993850708

Token 118: ' loop' (ID: 11453)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011054890230298042
    2. 'i' → logprob: -5.011054992675781
    3. ' _' → logprob: -5.761054992675781
    4. ' index' → logprob: -7.636054992675781
    5. '_' → logprob: -7.886054992675781
    6. ' idx' → logprob: -8.386054992675781
    7. 'index' → logprob: -10.511054992675781
    8. ' value' → logprob: -10.886054992675781
    9. '_i' → logprob: -11.511054992675781
    10. ' ' → logprob: -11.636054992675781

Token 119: '_index' (ID: 7748)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.8984259366989136
    2. ' in' → logprob: -1.2734259366989136
    3. '_' → logprob: -1.6484259366989136
    4. ' i' → logprob: -2.398426055908203
    5. 'in' → logprob: -4.648426055908203
    6. '_i' → logprob: -5.273426055908203
    7. '_counter' → logprob: -5.773426055908203
    8. '_range' → logprob: -5.898426055908203
    9. '_in' → logprob: -6.023426055908203
    10. '_value' → logprob: -6.023426055908203

Token 120: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014179493300616741
    2. 'in' → logprob: -4.264179706573486
    3. ' ' → logprob: -12.139179229736328
    4. ',' → logprob: -12.264179229736328
    5. 'range' → logprob: -13.139179229736328
    6. '0' → logprob: -14.139179229736328
    7. '	in' → logprob: -14.139179229736328
    8. '   ' → logprob: -15.264179229736328
    9. ' ,' → logprob: -15.389179229736328
    10. '1' → logprob: -15.389179229736328

Token 121: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2519320547580719
    2. 'range' → logprob: -1.5019320249557495
    3. '	range' → logprob: -13.001932144165039
    4. '(range' → logprob: -15.376932144165039
    5. ' ' → logprob: -15.501932144165039
    6. 'prob' → logprob: -16.87693214416504
    7. '   ' → logprob: -16.87693214416504
    8. '  ' → logprob: -17.37693214416504
    9. '_range' → logprob: -17.50193214416504
    10. '0' → logprob: -17.50193214416504

Token 122: '(' (ID: 7)
  Prédit: '(iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(iter' → logprob: -0.005245260428637266
    2. '(' → logprob: -5.255245208740234
    3. '(prob' → logprob: -11.505245208740234
    4. '(input' → logprob: -14.880245208740234
    5. '(pro' → logprob: -14.880245208740234
    6. '(iterator' → logprob: -15.005245208740234
    7. 'iteration' → logprob: -15.880245208740234
    8. ' (' → logprob: -16.505245208740234
    9. '1' → logprob: -16.880245208740234
    10. '(it' → logprob: -17.130245208740234

Token 123: '1' (ID: 16)
  Prédit: 'iteration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iteration' → logprob: -0.0009404043667018414
    2. '1' → logprob: -7.125940322875977
    3. ' iteration' → logprob: -9.250940322875977
    4. 'prob' → logprob: -10.750940322875977
    5. '0' → logprob: -11.875940322875977
    6. 'input' → logprob: -12.250940322875977
    7. '   ' → logprob: -12.500940322875977
    8. 'iter' → logprob: -13.625940322875977
    9. ' ' → logprob: -14.250940322875977
    10. 'iterations' → logprob: -14.750940322875977

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001513312105089426
    2. ' ,' → logprob: -6.501513481140137
    3. ',input' → logprob: -11.751513481140137
    4. ',
' → logprob: -13.001513481140137
    5. '   ' → logprob: -14.626513481140137
    6. 'iteration' → logprob: -16.37651252746582
    7. ',int' → logprob: -16.50151252746582
    8. '+' → logprob: -16.75151252746582
    9. ',len' → logprob: -17.00151252746582
    10. ' ,
' → logprob: -17.00151252746582

Token 125: ' iteration' (ID: 43155)
  Prédit: 'iteration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iteration' → logprob: -0.07889056205749512
    2. ' iteration' → logprob: -2.578890562057495
    3. 'iter' → logprob: -15.078890800476074
    4. 'input' → logprob: -15.328890800476074
    5. '_iteration' → logprob: -15.953890800476074
    6. '   ' → logprob: -16.953889846801758
    7. 'iterator' → logprob: -16.953889846801758
    8. ' input' → logprob: -17.203889846801758
    9. 'iterations' → logprob: -18.078889846801758
    10. ' iter' → logprob: -18.953889846801758

Token 126: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.0564331205387134e-05
    2. '_' → logprob: -12.75001049041748
    3. '_value' → logprob: -12.87501049041748
    4. ' _' → logprob: -13.25001049041748
    5. '_index' → logprob: -13.37501049041748
    6. ')_' → logprob: -14.62501049041748
    7. '_counter' → logprob: -15.37501049041748
    8. '(_' → logprob: -15.75001049041748
    9. '__' → logprob: -15.87501049041748
    10. '_c' → logprob: -16.000011444091797

Token 127: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006745471036992967
    2. '):
' → logprob: -7.875674724578857
    3. '+' → logprob: -8.5006742477417
    4. ' ):' → logprob: -9.6256742477417
    5. ':' → logprob: -10.7506742477417
    6. ' +' → logprob: -13.6256742477417
    7. ')' → logprob: -13.7506742477417
    8. ',' → logprob: -15.3756742477417
    9. '():' → logprob: -15.5006742477417
    10. '+:' → logprob: -15.8756742477417

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017571711912751198
    2. ' probability' → logprob: -5.142571926116943
    3. 'prob' → logprob: -5.392571926116943
    4. ':' → logprob: -5.767571926116943
    5. '<|end|>' → logprob: -6.767571926116943
    6. '_probability' → logprob: -7.392571926116943
    7. '    
' → logprob: -7.767571926116943
    8. ' probabilities' → logprob: -8.017571449279785
    9. '    ' → logprob: -8.392571449279785
    10. '       ' → logprob: -8.767571449279785

Token 129: ' current' (ID: 2208)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.37989410758018494
    2. ' probability' → logprob: -1.7548941373825073
    3. '   ' → logprob: -2.7548940181732178
    4. ' if' → logprob: -4.129894256591797
    5. ' denominator' → logprob: -4.504894256591797
    6. ' numerator' → logprob: -4.504894256591797
    7. 'if' → logprob: -4.629894256591797
    8. ' p' → logprob: -5.254894256591797
    9. 'score' → logprob: -5.379894256591797
    10. 'p' → logprob: -6.129894256591797

Token 130: '_probability' (ID: 182299)
  Prédit: '_probability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_probability' → logprob: -0.27122360467910767
    2. '_value' → logprob: -1.646223545074463
    3. '_score' → logprob: -3.521223545074463
    4. '_prob' → logprob: -4.521223545074463
    5. '_' → logprob: -6.396223545074463
    6. '_pro' → logprob: -7.646223545074463
    7. '_count' → logprob: -7.896223545074463
    8. '_index' → logprob: -8.021224021911621
    9. 'prob' → logprob: -8.396224021911621
    10. '_threshold' → logprob: -8.396224021911621

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08937343955039978
    2. '=' → logprob: -2.4643733501434326
    3. '_probability' → logprob: -8.964373588562012
    4. '   ' → logprob: -9.464373588562012
    5. '_prob' → logprob: -9.839373588562012
    6. ' ' → logprob: -9.964373588562012
    7. '_' → logprob: -9.964373588562012
    8. ' +=' → logprob: -11.214373588562012
    9. ')' → logprob: -11.714373588562012
    10. ',' → logprob: -11.964373588562012

Token 132: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6567131876945496
    2. '(' → logprob: -1.1567132472991943
    3. '(input' → logprob: -2.9067132472991943
    4. '1' → logprob: -3.1567132472991943
    5. 'c' → logprob: -3.7817132472991943
    6. '(c' → logprob: -4.406713008880615
    7. '(loop' → logprob: -4.656713008880615
    8. ' cumulative' → logprob: -5.031713008880615
    9. 'input' → logprob: -5.781713008880615
    10. ' input' → logprob: -5.781713008880615

Token 133: '1' (ID: 16)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018728669732809067
    2. '(input' → logprob: -4.518728733062744
    3. ' input' → logprob: -5.393728733062744
    4. 'iteration' → logprob: -6.268728733062744
    5. '1' → logprob: -7.518728733062744
    6. '(' → logprob: -7.893728733062744
    7. 'prob' → logprob: -9.643728256225586
    8. 'c' → logprob: -9.768728256225586
    9. ' (' → logprob: -10.018728256225586
    10. '   ' → logprob: -10.143728256225586

Token 134: ' /' (ID: 820)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7369932532310486
    2. '-' → logprob: -1.1119933128356934
    3. ' /' → logprob: -2.3619933128356934
    4. '/' → logprob: -2.3619933128356934
    5. '   ' → logprob: -6.236993312835693
    6. ')' → logprob: -6.861993312835693
    7. ' ' → logprob: -8.236992835998535
    8. '+' → logprob: -8.486992835998535
    9. '/input' → logprob: -8.736992835998535
    10. 'input' → logprob: -9.236992835998535

Token 135: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.028433145955204964
    2. ' input' → logprob: -3.903433084487915
    3. '(input' → logprob: -5.028433322906494
    4. '(' → logprob: -7.528433322906494
    5. 'iteration' → logprob: -8.028432846069336
    6. ' (' → logprob: -8.278432846069336
    7. 'loop' → logprob: -9.903432846069336
    8. '
' → logprob: -10.278432846069336
    9. '(
' → logprob: -10.528432846069336
    10. ' iteration' → logprob: -10.778432846069336

Token 136: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.511406809295295e-06
    2. 'value' → logprob: -12.500006675720215
    3. '_index' → logprob: -14.125006675720215
    4. '_' → logprob: -14.500006675720215
    5. 'Value' → logprob: -14.750006675720215
    6. ')' → logprob: -14.750006675720215
    7. '_VALUE' → logprob: -15.125006675720215
    8. '_total' → logprob: -15.750006675720215
    9. '_Value' → logprob: -16.5000057220459
    10. '_loop' → logprob: -16.6250057220459

Token 137: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.00026336227892898023
    2. '_value' → logprob: -8.750263214111328
    3. '_threshold' → logprob: -9.375263214111328
    4. 'total' → logprob: -10.875263214111328
    5. '_' → logprob: -14.375263214111328
    6. 'Total' → logprob: -15.875263214111328
    7. '
' → logprob: -16.500263214111328
    8. '   ' → logprob: -17.000263214111328
    9. '_Total' → logprob: -17.250263214111328
    10. '_probability' → logprob: -17.250263214111328

Token 138: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006266565760597587
    2. ' )' → logprob: -7.750626564025879
    3. '*' → logprob: -9.625626564025879
    4. ')*' → logprob: -9.625626564025879
    5. ' *' → logprob: -10.125626564025879
    6. '   ' → logprob: -11.875626564025879
    7. ')
' → logprob: -11.875626564025879
    8. ')*(' → logprob: -12.625626564025879
    9. '-' → logprob: -13.750626564025879
    10. '*)' → logprob: -13.875626564025879

Token 139: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0905289575457573
    2. '*' → logprob: -2.465528964996338
    3. '   ' → logprob: -6.965528964996338
    4. ')' → logprob: -8.34052848815918
    5. ' /' → logprob: -9.21552848815918
    6. 'prob' → logprob: -9.34052848815918
    7. 'if' → logprob: -9.96552848815918
    8. ' if' → logprob: -10.21552848815918
    9. '*(' → logprob: -10.59052848815918
    10. '
' → logprob: -10.96552848815918

Token 140: ' pow' (ID: 9779)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6024258732795715
    2. '((' → logprob: -1.8524258136749268
    3. '(' → logprob: -2.4774258136749268
    4. '(loop' → logprob: -2.4774258136749268
    5. ' (' → logprob: -2.7274258136749268
    6. 'input' → logprob: -4.227426052093506
    7. '(iter' → logprob: -4.852426052093506
    8. 'loop' → logprob: -5.227426052093506
    9. ' ((' → logprob: -5.227426052093506
    10. '(max' → logprob: -5.352426052093506

Token 141: '(
' (ID: 1607)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04368489608168602
    2. '(' → logprob: -3.293684959411621
    3. '((' → logprob: -5.418684959411621
    4. '(loop' → logprob: -7.168684959411621
    5. 'input' → logprob: -8.168684959411621
    6. '(iter' → logprob: -9.293684959411621
    7. '(
' → logprob: -10.918684959411621
    8. '1' → logprob: -11.918684959411621
    9. '2' → logprob: -12.043684959411621
    10. ' input' → logprob: -12.543684959411621

Token 142: '       ' (ID: 309)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1883336901664734
    2. 'input' → logprob: -2.188333749771118
    3. '(' → logprob: -2.938333749771118
    4. '((' → logprob: -6.063333511352539
    5. '1' → logprob: -6.438333511352539
    6. '(loop' → logprob: -6.688333511352539
    7. '(iter' → logprob: -7.563333511352539
    8. '(
' → logprob: -7.688333511352539
    9. ' input' → logprob: -9.188333511352539
    10. '   ' → logprob: -9.438333511352539

Token 143: ' ' (ID: 220)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1903311163187027
    2. 'input' → logprob: -2.690331220626831
    3. '(' → logprob: -2.815331220626831
    4. '(loop' → logprob: -3.440331220626831
    5. '(iter' → logprob: -5.690330982208252
    6. '((' → logprob: -5.815330982208252
    7. '(
' → logprob: -6.190330982208252
    8. '1' → logprob: -6.190330982208252
    9. '(prob' → logprob: -6.815330982208252
    10. 'loop' → logprob: -7.565330982208252

Token 144: '0' (ID: 15)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.11335206031799316
    2. 'input' → logprob: -2.988352060317993
    3. '(' → logprob: -3.613352060317993
    4. '(loop' → logprob: -3.738352060317993
    5. '(iter' → logprob: -6.363351821899414
    6. '2' → logprob: -6.863351821899414
    7. '((' → logprob: -7.238351821899414
    8. 'loop' → logprob: -7.363351821899414
    9. '(prob' → logprob: -7.863351821899414
    10. 'iteration' → logprob: -8.113351821899414

Token 145: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12064804136753082
    2. ',' → logprob: -2.995648145675659
    3. ')' → logprob: -3.495648145675659
    4. '   ' → logprob: -4.87064790725708
    5. '(' → logprob: -5.37064790725708
    6. 'input' → logprob: -5.37064790725708
    7. '(input' → logprob: -6.12064790725708
    8. 'if' → logprob: -6.74564790725708
    9. '**' → logprob: -6.87064790725708
    10. ',
' → logprob: -6.99564790725708

Token 146: '5' (ID: 20)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10833617299795151
    2. '(' → logprob: -2.3583362102508545
    3. '((' → logprob: -6.108335971832275
    4. 'input' → logprob: -6.608335971832275
    5. ')' → logprob: -6.858335971832275
    6. '   ' → logprob: -7.233335971832275
    7. 'value' → logprob: -7.233335971832275
    8. '(value' → logprob: -7.358335971832275
    9. '(log' → logprob: -7.983335971832275
    10. '(i' → logprob: -8.983336448669434

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002101133344694972
    2. ' ,' → logprob: -7.002100944519043
    3. '**' → logprob: -7.877100944519043
    4. ',input' → logprob: -8.252100944519043
    5. ',
' → logprob: -8.377100944519043
    6. ',current' → logprob: -9.252100944519043
    7. ')' → logprob: -9.377100944519043
    8. '   ' → logprob: -10.127100944519043
    9. '*' → logprob: -10.877100944519043
    10. '**,' → logprob: -11.127100944519043

Token 148: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.4694346785545349
    2. 'loop' → logprob: -1.7194347381591797
    3. ' math' → logprob: -2.9694347381591797
    4. 'input' → logprob: -3.2194347381591797
    5. '(math' → logprob: -3.5944347381591797
    6. 'prob' → logprob: -3.8444347381591797
    7. '(loop' → logprob: -4.34443473815918
    8. ' loop' → logprob: -4.71943473815918
    9. 'int' → logprob: -5.21943473815918
    10. 'log' → logprob: -5.34443473815918

Token 149: '_' (ID: 62)
  Prédit: '_log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_log' → logprob: -0.014365517534315586
    2. '_' → logprob: -4.2643656730651855
    3. '_math' → logprob: -8.514365196228027
    4. '_loop' → logprob: -15.014365196228027
    5. '_pow' → logprob: -15.514365196228027
    6. '_-' → logprob: -15.889365196228027
    7. ' _' → logprob: -16.264366149902344
    8. 'ceil' → logprob: -16.264366149902344
    9. 'log' → logprob: -16.514366149902344
    10. '_floor' → logprob: -16.639366149902344

Token 150: 'ceil' (ID: 43552)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.02124074473977089
    2. 'ceil' → logprob: -3.896240711212158
    3. '_log' → logprob: -7.896240711212158
    4. 'loop' → logprob: -8.521241188049316
    5. 'floor' → logprob: -9.771241188049316
    6. 'math' → logprob: -10.396241188049316
    7. 'loor' → logprob: -12.021241188049316
    8. ' log' → logprob: -12.396241188049316
    9. 'ilog' → logprob: -12.521241188049316
    10. 'loge' → logprob: -12.896241188049316

Token 151: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.22027666866779327
    2. '(log' → logprob: -2.0952765941619873
    3. '(loop' → logprob: -3.2202765941619873
    4. '(-' → logprob: -3.7202765941619873
    5. '(' → logprob: -5.220276832580566
    6. '((' → logprob: -5.470276832580566
    7. '(
' → logprob: -8.470276832580566
    8. 'math' → logprob: -8.970276832580566
    9. '((-' → logprob: -9.095276832580566
    10. ' (' → logprob: -9.220276832580566

Token 152: '_log' (ID: 9545)
  Prédit: '_log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_log' → logprob: -0.0015411654021590948
    2. 'log' → logprob: -6.5015411376953125
    3. 'og' → logprob: -10.626541137695312
    4. '(log' → logprob: -12.001541137695312
    5. '_math' → logprob: -12.251541137695312
    6. '-log' → logprob: -13.001541137695312
    7. '/log' → logprob: -14.876541137695312
    8. ' log' → logprob: -15.126541137695312
    9. 'math' → logprob: -15.251541137695312
    10. '"log' → logprob: -15.626541137695312

Token 153: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -13.750003814697266
    3. ' ' → logprob: -13.750003814697266
    4. '(current' → logprob: -14.875003814697266
    5. 'current' → logprob: -14.875003814697266
    6. ')' → logprob: -15.000003814697266
    7. '(loop' → logprob: -15.875003814697266
    8. ' (' → logprob: -16.375003814697266
    9. '   ' → logprob: -16.500003814697266
    10. '₂' → logprob: -17.125003814697266

Token 154: '(input' (ID: 10054)
  Prédit: '(loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.011714677326381207
    2. '(' → logprob: -5.011714458465576
    3. '(input' → logprob: -5.386714458465576
    4. ' (' → logprob: -9.136714935302734
    5. '((' → logprob: -9.261714935302734
    6. '(current' → logprob: -10.136714935302734
    7. ')' → logprob: -10.261714935302734
    8. '(iter' → logprob: -10.386714935302734
    9. '(
' → logprob: -10.636714935302734
    10. 'loop' → logprob: -11.261714935302734

Token 155: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0030916777905076742
    2. '_index' → logprob: -6.003091812133789
    3. 'value' → logprob: -7.628091812133789
    4. 'loop' → logprob: -9.628091812133789
    5. '_loop' → logprob: -10.753091812133789
    6. 'index' → logprob: -11.003091812133789
    7. 'Value' → logprob: -11.253091812133789
    8. '_count' → logprob: -13.003091812133789
    9. ')' → logprob: -13.253091812133789
    10. '_iteration' → logprob: -13.753091812133789

Token 156: '_threshold' (ID: 51747)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.9656391143798828
    2. '_index' → logprob: -1.7156391143798828
    3. '_threshold' → logprob: -1.7156391143798828
    4. '_value' → logprob: -1.9656391143798828
    5. 'loop' → logprob: -2.715639114379883
    6. '_loop' → logprob: -4.090639114379883
    7. 'total' → logprob: -4.215639114379883
    8. 'index' → logprob: -5.465639114379883
    9. 'threshold' → logprob: -5.465639114379883
    10. '   ' → logprob: -5.715639114379883

Token 157: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7874583601951599
    2. ' -' → logprob: -0.9124583601951599
    3. '-' → logprob: -2.9124584197998047
    4. '))' → logprob: -3.1624584197998047
    5. ' /' → logprob: -3.9124584197998047
    6. ')))' → logprob: -4.787458419799805
    7. ' )' → logprob: -5.037458419799805
    8. '/' → logprob: -5.912458419799805
    9. '+' → logprob: -6.037458419799805
    10. ' +' → logprob: -6.662458419799805

Token 158: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.03586577996611595
    2. ' loop' → logprob: -3.4108657836914062
    3. 'input' → logprob: -7.035865783691406
    4. '(loop' → logprob: -7.410865783691406
    5. '   ' → logprob: -8.035865783691406
    6. 'iteration' → logprob: -9.035865783691406
    7. 'current' → logprob: -9.785865783691406
    8. '(' → logprob: -10.285865783691406
    9. 'max' → logprob: -10.410865783691406
    10. 'float' → logprob: -10.660865783691406

Token 159: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -6.957014556974173e-05
    2. 'index' → logprob: -10.000069618225098
    3. '_value' → logprob: -10.875069618225098
    4. 'dex' → logprob: -13.000069618225098
    5. 'Index' → logprob: -14.000069618225098
    6. '   ' → logprob: -14.750069618225098
    7. '_INDEX' → logprob: -14.750069618225098
    8. 'nd' → logprob: -15.000069618225098
    9. 'ex' → logprob: -15.375069618225098
    10. ')' → logprob: -15.625069618225098

Token 160: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1305207461118698
    2. ')))' → logprob: -2.130520820617676
    3. ')' → logprob: -6.130520820617676
    4. '))
' → logprob: -6.880520820617676
    5. '))))' → logprob: -8.380520820617676
    6. ')),' → logprob: -10.255520820617676
    7. ')))
' → logprob: -10.380520820617676
    8. '),' → logprob: -11.130520820617676
    9. ' ))' → logprob: -11.130520820617676
    10. ')
' → logprob: -11.380520820617676

Token 161: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032724079210311174
    2. '   ' → logprob: -8.750327110290527
    3. ' )' → logprob: -9.750327110290527
    4. '))' → logprob: -10.000327110290527
    5. ')
' → logprob: -10.125327110290527
    6. ')*' → logprob: -11.750327110290527
    7. '+' → logprob: -12.625327110290527
    8. ')))' → logprob: -13.125327110290527
    9. ')`' → logprob: -13.250327110290527
    10. '),' → logprob: -13.625327110290527

Token 162: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07033541053533554
    2. ')
' (adapté à ' )
') → logprob: -2.6953353881835938
    3. ' )' → logprob: -8.695335388183594
    4. ')
' → logprob: -9.695335388183594
    5. '   ' → logprob: -9.820335388183594
    6. ' )
' → logprob: -10.195335388183594
    7. ')

' → logprob: -10.695335388183594
    8. ')*' → logprob: -11.320335388183594
    9. ')`' → logprob: -11.445335388183594
    10. ')`
' → logprob: -11.695335388183594

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1792421191930771
    2. ')' → logprob: -2.5542421340942383
    3. 'prob' → logprob: -3.1792421340942383
    4. ' probability' → logprob: -3.9292421340942383
    5. '<|end|>' → logprob: -4.304242134094238
    6. '
' → logprob: -5.554242134094238
    7. '    
' → logprob: -6.179242134094238
    8. ',' → logprob: -7.054242134094238
    9. ')
' → logprob: -7.179242134094238
    10. ':' → logprob: -7.304242134094238

Token 164: ' probability' (ID: 34933)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.03321671113371849
    2. '   ' → logprob: -3.908216714859009
    3. ' probability' → logprob: -4.40821647644043
    4. ')' → logprob: -8.90821647644043
    5. '    
' → logprob: -9.03321647644043
    6. ' if' → logprob: -10.28321647644043
    7. '
' → logprob: -10.40821647644043
    8. 'if' → logprob: -11.40821647644043
    9. 'c' → logprob: -11.65821647644043
    10. 'current' → logprob: -11.78321647644043

Token 165: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.0
    3. 'list' → logprob: -16.25
    4. 's' → logprob: -17.125
    5. '[' → logprob: -17.875
    6. 'List' → logprob: -18.0
    7. '[_' → logprob: -18.5
    8. '_lst' → logprob: -19.125
    9. '_lists' → logprob: -19.5
    10. '.append' → logprob: -19.625

Token 166: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.23917081207037e-05
    2. '.append' → logprob: -10.375041961669922
    3. '```' → logprob: -12.875041961669922
    4. '[current' → logprob: -13.125041961669922
    5. '[line' → logprob: -14.000041961669922
    6. '[...]' → logprob: -14.125041961669922
    7. '[token' → logprob: -14.125041961669922
    8. '\[' → logprob: -14.250041961669922
    9. '[
' → logprob: -14.875041961669922
    10. '[next' → logprob: -15.125041961669922

Token 167: 'loop' (ID: 14294)
  Prédit: 'loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.011182100512087345
    2. ' loop' → logprob: -4.5111823081970215
    3. '(loop' → logprob: -9.011181831359863
    4. '
' → logprob: -12.636181831359863
    5. '_loop' → logprob: -13.261181831359863
    6. '-' → logprob: -13.261181831359863
    7. '-loop' → logprob: -13.261181831359863
    8. ']' → logprob: -13.636181831359863
    9. '.loop' → logprob: -14.636181831359863
    10. 'lo' → logprob: -14.886181831359863

Token 168: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0003485745983198285
    2. 'index' → logprob: -8.250349044799805
    3. 'ex' → logprob: -10.000349044799805
    4. 'dex' → logprob: -11.375349044799805
    5. 'Index' → logprob: -11.500349044799805
    6. '_' → logprob: -11.875349044799805
    7. 'x' → logprob: -12.000349044799805
    8. '_INDEX' → logprob: -13.375349044799805
    9. '   ' → logprob: -13.875349044799805
    10. 'nd' → logprob: -14.375349044799805

Token 169: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001965627772733569
    2. ' ]' → logprob: -6.751965522766113
    3. '-' → logprob: -7.251965522766113
    4. ']=' → logprob: -10.126965522766113
    5. ' -' → logprob: -10.876965522766113
    6. ']+=' → logprob: -11.001965522766113
    7. ')]' → logprob: -12.626965522766113
    8. '   ' → logprob: -13.001965522766113
    9. '[' → logprob: -13.751965522766113
    10. '`]' → logprob: -14.001965522766113

Token 170: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '<|end|>' → logprob: -17.000011444091797
    4. '0' → logprob: -17.250011444091797
    5. '```' → logprob: -18.125011444091797
    6. '   ' → logprob: -18.250011444091797
    7. ')' → logprob: -19.125011444091797
    8. ']' → logprob: -20.562511444091797
    9. '<|end|>' → logprob: -20.687511444091797
    10. '...' → logprob: -20.750011444091797

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.500001907348633
    3. '<|end|>' → logprob: -15.875001907348633
    4. '0' → logprob: -16.625001907348633
    5. '```' → logprob: -16.750001907348633
    6. ')' → logprob: -18.562501907348633
    7. '   ' → logprob: -19.000001907348633
    8. '۱' → logprob: -19.437501907348633
    9. '১' → logprob: -19.687501907348633
    10. '<|end|>' → logprob: -19.812501907348633

Token 172: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011224505578866228
    2. ' ]' → logprob: -9.250112533569336
    3. ']=' → logprob: -11.375112533569336
    4. ']+=' → logprob: -12.500112533569336
    5. '=' → logprob: -14.500112533569336
    6. ')' → logprob: -14.750112533569336
    7. ')]' → logprob: -16.875112533569336
    8. '   ' → logprob: -18.125112533569336
    9. ' +=' → logprob: -18.375112533569336
    10. ' ' → logprob: -18.625112533569336

Token 173: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03847059607505798
    2. ' =' → logprob: -3.288470506668091
    3. '+=' → logprob: -8.288470268249512
    4. ' +=' → logprob: -8.663470268249512
    5. ' *=' → logprob: -13.038470268249512
    6. '*=' → logprob: -13.288470268249512
    7. ')' → logprob: -15.538470268249512
    8. ')=' → logprob: -15.913470268249512
    9. ' ' → logprob: -16.038471221923828
    10. ' ^=' → logprob: -16.413471221923828

Token 174: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.004620830062776804
    2. ' current' → logprob: -5.3796210289001465
    3. 'cur' → logprob: -15.379620552062988
    4. '   ' → logprob: -16.504621505737305
    5. '0' → logprob: -16.629621505737305
    6. 'int' → logprob: -16.879621505737305
    7. '$current' → logprob: -17.254621505737305
    8. ' ' → logprob: -17.379621505737305
    9. '	current' → logprob: -17.379621505737305
    10. 'round' → logprob: -17.504621505737305

Token 175: '_probability' (ID: 182299)
  Prédit: '_probability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_probability' → logprob: -3.128163257315464e-07
    2. '_prob' → logprob: -15.5
    3. '_' → logprob: -17.625
    4. 'Probability' → logprob: -18.0
    5. 'prob' → logprob: -18.875
    6. '_current' → logprob: -18.875
    7. '_pro' → logprob: -19.25
    8. '_value' → logprob: -19.625
    9. '_frequency' → logprob: -19.875
    10. '\' → logprob: -20.5

Token 176: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: 'final' (ID: 17196)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: '_result' (ID: 11623)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.14388711750507355
    2. '_probability' → logprob: -2.6438870429992676
    3. '_result' → logprob: -3.1438870429992676
    4. '_' → logprob: -4.143887042999268
    5. '_value' → logprob: -6.518887042999268
    6. '_total' → logprob: -6.893887042999268
    7. '_sum' → logprob: -7.518887042999268
    8. '_prob' → logprob: -8.268887519836426
    9. '_answer' → logprob: -8.518887519836426
    10. '_output' → logprob: -8.768887519836426

Token 179: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16102997958660126
    2. ' =' → logprob: -1.9110299348831177
    3. '_' → logprob: -7.161029815673828
    4. '_=' → logprob: -11.786029815673828
    5. ')' → logprob: -12.161029815673828
    6. 's' → logprob: -12.411029815673828
    7. ' +=' → logprob: -13.036029815673828
    8. '+=' → logprob: -13.161029815673828
    9. '_score' → logprob: -13.911029815673828
    10. '_sum' → logprob: -14.161029815673828

Token 180: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.07999910414218903
    2. 'c' → logprob: -3.2049992084503174
    3. ' sum' → logprob: -3.4549992084503174
    4. ' cumulative' → logprob: -5.454998970031738
    5. 'prob' → logprob: -8.329998970031738
    6. 'max' → logprob: -9.329998970031738
    7. ' c' → logprob: -9.829998970031738
    8. '1' → logprob: -10.579998970031738
    9. ' max' → logprob: -11.204998970031738
    10. 'round' → logprob: -11.454998970031738

Token 181: '(prob' (ID: 180876)
  Prédit: '(prob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prob' → logprob: -0.00026646157493814826
    2. 'prob' → logprob: -8.250266075134277
    3. ' probability' → logprob: -13.000266075134277
    4. '(' → logprob: -13.250266075134277
    5. '_probability' → logprob: -14.250266075134277
    6. 'Probability' → logprob: -16.250267028808594
    7. '(
' → logprob: -16.250267028808594
    8. '(pro' → logprob: -16.250267028808594
    9. '(p' → logprob: -16.750267028808594
    10. '(problem' → logprob: -16.875267028808594

Token 182: 'ability' (ID: 3563)
  Prédit: 'ability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ability' → logprob: -0.0002394170151092112
    2. 'ality' → logprob: -8.375239372253418
    3. 'ility' → logprob: -11.750239372253418
    4. 'abil' → logprob: -15.125239372253418
    5. '_probability' → logprob: -15.375239372253418
    6. 'ailability' → logprob: -16.500240325927734
    7. 'prob' → logprob: -16.500240325927734
    8. ' ability' → logprob: -16.500240325927734
    9. 'a' → logprob: -16.875240325927734
    10. 'ail' → logprob: -17.000240325927734

Token 183: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.128163257315464e-07
    2. 'List' → logprob: -17.0
    3. 'list' → logprob: -17.25
    4. 's' → logprob: -17.5
    5. '[_' → logprob: -17.5
    6. '_' → logprob: -17.75
    7. '[' → logprob: -18.375
    8. 'ity' → logprob: -18.5
    9. 'e' → logprob: -18.75
    10. '_LIST' → logprob: -19.375

Token 184: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1756367712223437e-05
    2. '*' → logprob: -12.000011444091797
    3. ' )' → logprob: -12.750011444091797
    4. ' *' → logprob: -13.500011444091797
    5. '))' → logprob: -15.500011444091797
    6. ')*' → logprob: -15.625011444091797
    7. ')
' → logprob: -15.750011444091797
    8. ',' → logprob: -16.375011444091797
    9. '**' → logprob: -16.375011444091797
    10. ']' → logprob: -16.625011444091797

Token 185: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: ' cumulative' (ID: 75628)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.009764352813363075
    2. ' cumulative' → logprob: -4.634764194488525
    3. ' c' → logprob: -12.384764671325684
    4. '(c' → logprob: -12.759764671325684
    5. '	c' → logprob: -15.134764671325684
    6. '0' → logprob: -15.259764671325684
    7. '   ' → logprob: -15.509764671325684
    8. 'prob' → logprob: -16.009763717651367
    9. 'cum' → logprob: -16.009763717651367
    10. '(' → logprob: -16.134763717651367

Token 187: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -4.127333340875339e-06
    2. '_result' → logprob: -13.625003814697266
    3. 'score' → logprob: -13.875003814697266
    4. '_probability' → logprob: -14.000003814697266
    5. '_scores' → logprob: -15.250003814697266
    6. '_final' → logprob: -15.625003814697266
    7. '_s' → logprob: -15.750003814697266
    8. '_prob' → logprob: -15.875003814697266
    9. '_' → logprob: -16.250003814697266
    10. '_c' → logprob: -16.250003814697266

Token 188: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.26946431398391724
    2. '<|end|>' → logprob: -1.5194642543792725
    3. '
' → logprob: -4.144464492797852
    4. ' print' → logprob: -7.769464492797852
    5. '\n' → logprob: -8.144464492797852
    6. ')' → logprob: -8.269464492797852
    7. '```' → logprob: -8.269464492797852
    8. '#' → logprob: -9.394464492797852
    9. '<|end|>' → logprob: -9.644464492797852
    10. 'final' → logprob: -9.894464492797852

Token 190: '(final' (ID: 14111)
  Prédit: '(final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.06197093799710274
    2. '(' → logprob: -2.8119709491729736
    3. '(f' → logprob: -12.936970710754395
    4. 'final' → logprob: -15.686970710754395
    5. '('' → logprob: -16.06197166442871
    6. '(
' → logprob: -16.18697166442871
    7. '(fin' → logprob: -16.18697166442871
    8. '(`' → logprob: -16.31197166442871
    9. '(round' → logprob: -16.31197166442871
    10. '("("' → logprob: -16.43697166442871

Token 191: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.004753476474434137
    2. '_value' → logprob: -5.879753589630127
    3. '_final' → logprob: -7.379753589630127
    4. '_' → logprob: -7.754753589630127
    5. ')_' → logprob: -8.379753112792969
    6. '_val' → logprob: -8.629753112792969
    7. '_output' → logprob: -9.254753112792969
    8. ')' → logprob: -9.629753112792969
    9. '_results' → logprob: -9.754753112792969
    10. '_token' → logprob: -10.004753112792969

Token 192: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.625000953674316
    3. '))' → logprob: -15.000000953674316
    4. ')`' → logprob: -15.125000953674316
    5. ')
' → logprob: -15.500000953674316
    6. ')**' → logprob: -17.500001907348633
    7. '*' → logprob: -17.750001907348633
    8. '**' → logprob: -17.750001907348633
    9. '+' → logprob: -18.000001907348633
    10. ')}' → logprob: -18.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 190
Tokens correctement prédits (1ère position, stricte): 87
Tokens correctement prédits (1ère position, avec adaptation): 88
Tokens correctement prédits (top 10): 151
Précision stricte (1ère position): 45.79%
Précision adaptée (1ère position): 46.32%
Précision (top 10): 79.47%
================================================================================
