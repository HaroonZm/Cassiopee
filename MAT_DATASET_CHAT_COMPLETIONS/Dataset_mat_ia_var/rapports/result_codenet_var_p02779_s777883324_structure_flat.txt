================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:27:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
A = input().split()
for i in range(len(A)):
    A[i] = int(A[i])
unique = []
for x in A:
    if x not in unique:
        unique.append(x)
if len(A) == len(unique):
    print('YES')
else:
    print('NO')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001049736310960725
    2. '(N' → logprob: -10.625104904174805
    3. '(
' → logprob: -10.875104904174805
    4. '```' → logprob: -10.875104904174805
    5. ''' → logprob: -11.000104904174805
    6. '('' → logprob: -11.750104904174805
    7. '`' → logprob: -11.875104904174805
    8. '("("' → logprob: -12.500104904174805
    9. ')' → logprob: -13.625104904174805
    10. ' (' → logprob: -14.000104904174805

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405747294425964
    2. ')' → logprob: -0.9155747294425964
    3. '()' → logprob: -4.290574550628662
    4. '())' → logprob: -5.915574550628662
    5. '(
' → logprob: -8.41557502746582
    6. '```' → logprob: -9.16557502746582
    7. '))' → logprob: -9.29057502746582
    8. '")' → logprob: -9.54057502746582
    9. '(

' → logprob: -9.79057502746582
    10. '`)' → logprob: -9.79057502746582

Token 5: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5391327142715454
    2. 'if' → logprob: -2.289132595062256
    3. 's' → logprob: -2.664132595062256
    4. 'a' → logprob: -2.664132595062256
    5. 'x' → logprob: -3.539132595062256
    6. 'i' → logprob: -3.539132595062256
    7. ' ' → logprob: -4.039132595062256
    8. 'f' → logprob: -4.164132595062256
    9. '[' → logprob: -4.539132595062256
    10. ' for' → logprob: -4.664132595062256

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007823493797332048
    2. '[]' → logprob: -8.500782012939453
    3. '\[' → logprob: -9.125782012939453
    4. '.' → logprob: -9.250782012939453
    5. '[A' → logprob: -9.375782012939453
    6. '[i' → logprob: -9.500782012939453
    7. '[:]' → logprob: -9.750782012939453
    8. '+' → logprob: -10.250782012939453
    9. '=' → logprob: -10.750782012939453
    10. '[a' → logprob: -11.500782012939453

Token 7: ' input' (ID: 3422)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.603771984577179
    2. 'list' → logprob: -1.4787719249725342
    3. ' []' → logprob: -2.103771924972534
    4. '[]' → logprob: -2.728771924972534
    5. ' [' → logprob: -3.478771924972534
    6. '[' → logprob: -5.478772163391113
    7. '[int' → logprob: -6.478772163391113
    8. '[input' → logprob: -7.228772163391113
    9. '[list' → logprob: -8.353772163391113
    10. 'input' → logprob: -8.478772163391113

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007650759653188288
    2. ''' → logprob: -8.375764846801758
    3. '()' → logprob: -9.125764846801758
    4. '('' → logprob: -9.125764846801758
    5. ')' → logprob: -9.250764846801758
    6. '(
' → logprob: -9.250764846801758
    7. '"' → logprob: -10.750764846801758
    8. '`' → logprob: -10.875764846801758
    9. '.' → logprob: -11.000764846801758
    10. '```' → logprob: -11.125764846801758

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0024936108384281397
    2. 'strip' → logprob: -6.002493381500244
    3. 'rstrip' → logprob: -11.877493858337402
    4. ' split' → logprob: -12.502493858337402
    5. 'spl' → logprob: -12.752493858337402
    6. 's' → logprob: -13.002493858337402
    7. 'replace' → logprob: -13.502493858337402
    8. 'rs' → logprob: -15.002493858337402
    9. 'sp' → logprob: -15.002493858337402
    10. '(split' → logprob: -17.377492904663086

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.051023244857788086
    2. '()' → logprob: -3.051023244857788
    3. '('' → logprob: -6.426023483276367
    4. '("("' → logprob: -7.801023483276367
    5. '(`' → logprob: -9.676023483276367
    6. '(

' → logprob: -9.676023483276367
    7. '`' → logprob: -10.051023483276367
    8. '(
' → logprob: -10.051023483276367
    9. '`()' → logprob: -10.051023483276367
    10. ' (' → logprob: -10.676023483276367

Token 11: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4553567171096802
    2. 'A' → logprob: -1.0803567171096802
    3. 'result' → logprob: -4.830356597900391
    4. 'B' → logprob: -5.330356597900391
    5. 'a' → logprob: -5.455356597900391
    6. 'ans' → logprob: -5.955356597900391
    7. '[' → logprob: -6.580356597900391
    8. 's' → logprob: -7.205356597900391
    9. 'count' → logprob: -7.455356597900391
    10. ' for' → logprob: -7.705356597900391

Token 12: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7058168649673462
    2. ' i' → logprob: -0.7058168649673462
    3. '_' → logprob: -5.205816745758057
    4. '  ' → logprob: -5.580816745758057
    5. ' _' → logprob: -6.080816745758057
    6. 'i' → logprob: -7.705816745758057
    7. ' ‌' → logprob: -8.330817222595215
    8. ' ' → logprob: -9.455817222595215
    9. ' x' → logprob: -9.705817222595215
    10. ' a' → logprob: -10.705817222595215

Token 13: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.583364725112915
    2. ' in' → logprob: -0.958364725112915
    3. ' ' → logprob: -3.208364725112915
    4. '_' → logprob: -5.083364486694336
    5. 'n' → logprob: -5.333364486694336
    6. '=' → logprob: -5.958364486694336
    7. '  ' → logprob: -6.333364486694336
    8. ')' → logprob: -7.708364486694336
    9. ',' → logprob: -8.333364486694336
    10. ' n' → logprob: -8.333364486694336

Token 14: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740923047065735
    2. 'range' → logprob: -0.9740923047065735
    3. '	range' → logprob: -12.349092483520508
    4. '(range' → logprob: -12.724092483520508
    5. ' A' → logprob: -12.724092483520508
    6. ' ' → logprob: -13.349092483520508
    7. ' xrange' → logprob: -13.849092483520508
    8. 'A' → logprob: -13.974092483520508
    9. '.range' → logprob: -14.599092483520508
    10. '_range' → logprob: -14.974092483520508

Token 15: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023405389860272408
    2. '(N' → logprob: -3.7734053134918213
    3. '(len' → logprob: -9.023405075073242
    4. '(n' → logprob: -10.523405075073242
    5. ' (' → logprob: -12.898405075073242
    6. '(i' → logprob: -12.898405075073242
    7. '(
' → logprob: -13.523405075073242
    8. '()' → logprob: -13.648405075073242
    9. '(range' → logprob: -13.648405075073242
    10. '((' → logprob: -14.273405075073242

Token 16: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.018277421593666077
    2. '(' → logprob: -4.018277645111084
    3. '(N' → logprob: -9.018277168273926
    4. 'A' → logprob: -13.393277168273926
    5. '(
' → logprob: -13.893277168273926
    6. '(S' → logprob: -14.268277168273926
    7. ')' → logprob: -14.268277168273926
    8. '(s' → logprob: -14.393277168273926
    9. '(a' → logprob: -15.018277168273926
    10. '(

' → logprob: -15.018277168273926

Token 17: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.31005269289016724
    2. '))' → logprob: -2.0600526332855225
    3. '):' → logprob: -2.4350526332855225
    4. '[' → logprob: -3.5600526332855225
    5. '[i' → logprob: -4.435052871704102
    6. ')' → logprob: -4.560052871704102
    7. ')):
' → logprob: -8.435052871704102
    8. ')[' → logprob: -8.935052871704102
    9. ')))' → logprob: -9.310052871704102
    10. '```' → logprob: -10.435052871704102

Token 18: '   ' (ID: 271)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.833314061164856
    2. 'A' → logprob: -1.208314061164856
    3. ' ' → logprob: -2.2083139419555664
    4. '   ' → logprob: -2.7083139419555664
    5. '    ' → logprob: -2.9583139419555664
    6. ' if' → logprob: -4.708313941955566
    7. '```' → logprob: -4.708313941955566
    8. 'if' → logprob: -5.708313941955566
    9. '[' → logprob: -5.958313941955566
    10. '     
' → logprob: -6.208313941955566

Token 19: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.5977635979652405
    2. ' A' → logprob: -0.8477635979652405
    3. '   ' → logprob: -4.472763538360596
    4. ' if' → logprob: -5.097763538360596
    5. 'if' → logprob: -5.847763538360596
    6. '    ' → logprob: -7.722763538360596
    7. ' ' → logprob: -8.222764015197754
    8. 'print' → logprob: -9.222764015197754
    9. ' print' → logprob: -9.722764015197754
    10. ' for' → logprob: -9.972764015197754

Token 20: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0893913060426712
    2. '[i' → logprob: -2.4643912315368652
    3. '[A' → logprob: -8.464391708374023
    4. '\[' → logprob: -8.964391708374023
    5. '[int' → logprob: -10.089391708374023
    6. '[I' → logprob: -10.964391708374023
    7. '[...]' → logprob: -11.464391708374023
    8. '```' → logprob: -11.589391708374023
    9. '[a' → logprob: -12.464391708374023
    10. '.append' → logprob: -12.714391708374023

Token 21: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02042813040316105
    2. '=' → logprob: -4.14542818069458
    3. ' =' → logprob: -6.39542818069458
    4. ')=' → logprob: -6.64542818069458
    5. ']' → logprob: -7.02042818069458
    6. '=int' → logprob: -8.020427703857422
    7. ' )' → logprob: -9.895427703857422
    8. '[' → logprob: -10.645427703857422
    9. ']=' → logprob: -10.895427703857422
    10. '   ' → logprob: -11.270427703857422

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0025707832537591457
    2. '=int' → logprob: -6.127570629119873
    3. ' =' → logprob: -7.877570629119873
    4. '=
' → logprob: -12.752571105957031
    5. '+=' → logprob: -13.752571105957031
    6. '=

' → logprob: -14.502571105957031
    7. '=float' → logprob: -15.127571105957031
    8. '```' → logprob: -15.502571105957031
    9. '=i' → logprob: -15.627571105957031
    10. 'int' → logprob: -15.877571105957031

Token 23: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.038042984902858734
    2. ' int' → logprob: -3.2880430221557617
    3. '(int' → logprob: -14.788043022155762
    4. '[int' → logprob: -14.788043022155762
    5. '=int' → logprob: -15.538043022155762
    6. '   ' → logprob: -15.788043022155762
    7. '<int' → logprob: -16.163042068481445
    8. 'float' → logprob: -16.288042068481445
    9. ']int' → logprob: -16.413042068481445
    10. ' ' → logprob: -16.913042068481445

Token 24: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.06200958415865898
    2. '(' → logprob: -2.812009572982788
    3. '('' → logprob: -10.812009811401367
    4. '("("' → logprob: -12.062009811401367
    5. '(
' → logprob: -12.187009811401367
    6. '(`' → logprob: -12.562009811401367
    7. '(

' → logprob: -13.062009811401367
    8. ')(' → logprob: -13.437009811401367
    9. ')' → logprob: -14.437009811401367
    10. '```' → logprob: -14.437009811401367

Token 25: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.019518433138728142
    2. '[A' → logprob: -4.3945183753967285
    3. '[' → logprob: -5.5195183753967285
    4. ')' → logprob: -6.0195183753967285
    5. '[I' → logprob: -7.6445183753967285
    6. '[
' → logprob: -10.769518852233887
    7. ')[' → logprob: -11.019518852233887
    8. ' [' → logprob: -11.644518852233887
    9. 'A' → logprob: -12.269518852233887
    10. ')i' → logprob: -12.894518852233887

Token 26: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3260979950428009
    2. '])' → logprob: -1.3260979652404785
    3. '))' → logprob: -4.4510979652404785
    4. ')])' → logprob: -7.3260979652404785
    5. ']' → logprob: -8.451098442077637
    6. ')]' → logprob: -9.076098442077637
    7. ']))' → logprob: -10.201098442077637
    8. '[i' → logprob: -10.951098442077637
    9. ''])' → logprob: -11.951098442077637
    10. '})' → logprob: -11.951098442077637

Token 27: 'unique' (ID: 22365)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44473180174827576
    2. ' for' → logprob: -2.4447317123413086
    3. '[' → logprob: -2.8197317123413086
    4. 'A' → logprob: -3.0697317123413086
    5. 'if' → logprob: -3.4447317123413086
    6. ' if' → logprob: -3.5697317123413086
    7. ' 
' → logprob: -3.6947317123413086
    8. ' A' → logprob: -4.069731712341309
    9. '
' → logprob: -4.319731712341309
    10. ' ' → logprob: -4.444731712341309

Token 28: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4823126494884491
    2. '_' → logprob: -0.9823126792907715
    3. 's' → logprob: -4.9823126792907715
    4. '()' → logprob: -7.9823126792907715
    5. '(_)' → logprob: -8.482312202453613
    6. '_counts' → logprob: -9.357312202453613
    7. '.' → logprob: -9.482312202453613
    8. ')' → logprob: -9.857312202453613
    9. '_s' → logprob: -9.857312202453613
    10. '_values' → logprob: -10.107312202453613

Token 29: ' []
' (ID: 8911)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.43440091609954834
    2. ' set' → logprob: -1.0594009160995483
    3. 'list' → logprob: -5.934401035308838
    4. ' list' → logprob: -6.059401035308838
    5. 'len' → logprob: -7.559401035308838
    6. '(set' → logprob: -9.30940055847168
    7. ' len' → logprob: -9.80940055847168
    8. 'sorted' → logprob: -11.43440055847168
    9. 's' → logprob: -12.05940055847168
    10. '{}' → logprob: -12.30940055847168

Token 30: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00672211404889822
    2. ' for' → logprob: -5.0067219734191895
    3. 'if' → logprob: -12.756722450256348
    4. 'count' → logprob: -13.506722450256348
    5. '[' → logprob: -14.756722450256348
    6. 'seen' → logprob: -14.881722450256348
    7. '<|end|>' → logprob: -15.256722450256348
    8. '	for' → logprob: -15.381722450256348
    9. 'A' → logprob: -15.631722450256348
    10. ')' → logprob: -15.756722450256348

Token 31: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4041147232055664
    2. 'x' → logprob: -1.5291147232055664
    3. ' i' → logprob: -1.5291147232055664
    4. ' x' → logprob: -1.9041147232055664
    5. ' num' → logprob: -2.6541147232055664
    6. 'num' → logprob: -3.0291147232055664
    7. 'a' → logprob: -3.4041147232055664
    8. ' a' → logprob: -4.904114723205566
    9. ' number' → logprob: -5.654114723205566
    10. ' ' → logprob: -6.279114723205566

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012566984631121159
    2. 'in' → logprob: -4.387567043304443
    3. ' ' → logprob: -10.262566566467285
    4. 'not' → logprob: -11.887566566467285
    5. ' not' → logprob: -12.387566566467285
    6. 'import' → logprob: -13.137566566467285
    7. '  ' → logprob: -13.137566566467285
    8. '	in' → logprob: -13.387566566467285
    9. 's' → logprob: -13.762566566467285
    10. 'n' → logprob: -14.137566566467285

Token 33: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4740851819515228
    2. ' A' → logprob: -0.9740852117538452
    3. ' ' → logprob: -12.849084854125977
    4. ' unique' → logprob: -13.099084854125977
    5. 'unique' → logprob: -13.599084854125977
    6. ' range' → logprob: -14.099084854125977
    7. 'range' → logprob: -14.599084854125977
    8. '	A' → logprob: -15.224084854125977
    9. '   ' → logprob: -15.349084854125977
    10. '(A' → logprob: -15.599084854125977

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004038593906443566
    2. ' :' → logprob: -8.25040340423584
    3. ':
' → logprob: -9.12540340423584
    4. ' if' → logprob: -11.62540340423584
    5. ' not' → logprob: -11.75040340423584
    6. 'if' → logprob: -12.50040340423584
    7. ':**' → logprob: -12.87540340423584
    8. ' in' → logprob: -13.00040340423584
    9. 'not' → logprob: -13.62540340423584
    10. '):' → logprob: -13.62540340423584

Token 35: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.008722590282559395
    2. '   ' → logprob: -5.25872278213501
    3. ' ' → logprob: -6.00872278213501
    4. 'if' → logprob: -7.38372278213501
    5. '    ' → logprob: -8.633722305297852
    6. ' not' → logprob: -9.258722305297852
    7. '<|end|>' → logprob: -9.883722305297852
    8. '	if' → logprob: -11.633722305297852
    9. ' 
' → logprob: -11.758722305297852
    10. '```' → logprob: -11.883722305297852

Token 36: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02294948324561119
    2. 'if' (adapté à ' if') → logprob: -4.022949695587158
    3. ' ' → logprob: -5.522949695587158
    4. ' not' → logprob: -8.02294921875
    5. '<|end|>' → logprob: -8.14794921875
    6. ' unique' → logprob: -10.52294921875
    7. '```' → logprob: -10.77294921875
    8. '0' → logprob: -11.02294921875
    9. ''' → logprob: -11.39794921875
    10. '<|end|>' → logprob: -11.89794921875

Token 37: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.008616108447313309
    2. 'x' → logprob: -4.758615970611572
    3. ' not' → logprob: -14.00861644744873
    4. ' ' → logprob: -14.63361644744873
    5. ' ' → logprob: -15.63361644744873
    6. ')' → logprob: -17.133615493774414
    7. 'not' → logprob: -17.633615493774414
    8. '	x' → logprob: -17.633615493774414
    9. ')x' → logprob: -18.758615493774414
    10. '"x' → logprob: -18.883615493774414

Token 38: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.002482315758243203
    2. 'not' → logprob: -6.0024824142456055
    3. ' no' → logprob: -12.627482414245605
    4. ' ' → logprob: -13.752482414245605
    5. '	not' → logprob: -14.002482414245605
    6. ' in' → logprob: -14.877482414245605
    7. ')' → logprob: -15.002482414245605
    8. ' if' → logprob: -15.502482414245605
    9. '>' → logprob: -16.12748146057129
    10. '<|end|>' → logprob: -16.37748146057129

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0574522465467453
    2. 'in' → logprob: -2.9324522018432617
    3. ' unique' → logprob: -6.557452201843262
    4. 'unique' → logprob: -6.932452201843262
    5. ' ' → logprob: -8.932452201843262
    6. '(unique' → logprob: -11.932452201843262
    7. '<|end|>' → logprob: -12.057452201843262
    8. 's' → logprob: -12.557452201843262
    9. 'to' → logprob: -12.682452201843262
    10. ')' → logprob: -12.807452201843262

Token 40: ' unique' (ID: 5746)
  Prédit: ' unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unique' → logprob: -0.2811550199985504
    2. 'unique' → logprob: -1.406154990196228
    3. '(unique' → logprob: -12.65615463256836
    4. '.unique' → logprob: -14.78115463256836
    5. '_unique' → logprob: -15.28115463256836
    6. 'uni' → logprob: -15.65615463256836
    7. 'uniq' → logprob: -15.65615463256836
    8. ' uniques' → logprob: -15.78115463256836
    9. ' ' → logprob: -16.03115463256836
    10. ' uniqu' → logprob: -16.40615463256836

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0098650511354208
    2. ':
' → logprob: -4.6348652839660645
    3. ' :' → logprob: -10.259864807128906
    4. '_unique' → logprob: -11.009864807128906
    5. ' :
' → logprob: -11.134864807128906
    6. 'unique' → logprob: -11.259864807128906
    7. ' unique' → logprob: -11.509864807128906
    8. '):
' → logprob: -12.634864807128906
    9. ':

' → logprob: -12.634864807128906
    10. '=' → logprob: -12.634864807128906

Token 42: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5922161340713501
    2. '   ' → logprob: -1.71721613407135
    3. ' unique' → logprob: -1.71721613407135
    4. 'unique' → logprob: -2.8422160148620605
    5. ':
' → logprob: -4.2172160148620605
    6. '       ' → logprob: -5.0922160148620605
    7. '.unique' → logprob: -5.5922160148620605
    8. '_unique' → logprob: -6.9672160148620605
    9. '    ' → logprob: -7.2172160148620605
    10. '.' → logprob: -7.2172160148620605

Token 43: ' unique' (ID: 5746)
  Prédit: ' unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unique' → logprob: -0.0022181766107678413
    2. 'unique' (adapté à ' unique') → logprob: -6.127218246459961
    3. '       ' → logprob: -10.752218246459961
    4. '   ' → logprob: -12.502218246459961
    5. ' ' → logprob: -12.502218246459961
    6. '.unique' → logprob: -13.002218246459961
    7. '_unique' → logprob: -14.377218246459961
    8. '(unique' → logprob: -15.127218246459961
    9. ' 
' → logprob: -15.377218246459961
    10. '```' → logprob: -15.627218246459961

Token 44: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2519488036632538
    2. '.' → logprob: -1.5019488334655762
    3. ' .' → logprob: -12.001948356628418
    4. '.add' → logprob: -12.501948356628418
    5. 'append' → logprob: -12.501948356628418
    6. '.Append' → logprob: -13.751948356628418
    7. ').' → logprob: -14.126948356628418
    8. '.app' → logprob: -14.126948356628418
    9. '.extend' → logprob: -14.251948356628418
    10. '.push' → logprob: -14.251948356628418

Token 45: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.16022463142871857
    2. '(' → logprob: -1.9102246761322021
    3. '(
' → logprob: -15.035224914550781
    4. ' (' → logprob: -16.16022491455078
    5. '((' → logprob: -17.16022491455078
    6. '(

' → logprob: -17.78522491455078
    7. '(xs' → logprob: -18.28522491455078
    8. '(s' → logprob: -18.66022491455078
    9. 'x' → logprob: -19.03522491455078
    10. '('' → logprob: -19.03522491455078

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4974866644479334e-05
    2. ')
' → logprob: -11.125015258789062
    3. ' )' → logprob: -17.000015258789062
    4. '))' → logprob: -17.125015258789062
    5. ')#' → logprob: -17.625015258789062
    6. ')return' → logprob: -17.750015258789062
    7. '#' → logprob: -17.875015258789062
    8. '）' → logprob: -18.000015258789062
    9. '`)' → logprob: -18.000015258789062
    10. ')

' → logprob: -18.125015258789062

Token 47: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.025401152670383453
    2. 'for' → logprob: -4.1504011154174805
    3. 'unique' → logprob: -4.7754011154174805
    4. '[' → logprob: -8.77540111541748
    5. ' for' → logprob: -8.90040111541748
    6. ')' → logprob: -10.15040111541748
    7. 'sorted' → logprob: -10.15040111541748
    8. '#' → logprob: -10.15040111541748
    9. ' print' → logprob: -10.27540111541748
    10. ' unique' → logprob: -10.52540111541748

Token 48: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.04629753530025482
    2. 'len' → logprob: -3.171297550201416
    3. ' unique' → logprob: -6.296297550201416
    4. ' A' → logprob: -7.421297550201416
    5. ' ' → logprob: -8.171297073364258
    6. 'unique' → logprob: -8.546297073364258
    7. ' N' → logprob: -8.671297073364258
    8. ' x' → logprob: -9.921297073364258
    9. ' not' → logprob: -10.296297073364258
    10. 'A' → logprob: -10.546297073364258

Token 49: '(A' (ID: 10706)
  Prédit: '(unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(unique' → logprob: -0.0790448933839798
    2. '(' → logprob: -2.579044818878174
    3. '(A' → logprob: -8.829045295715332
    4. 'unique' → logprob: -12.954045295715332
    5. ' (' → logprob: -13.454045295715332
    6. '(u' → logprob: -14.329045295715332
    7. '(max' → logprob: -14.329045295715332
    8. '(set' → logprob: -14.704045295715332
    9. '(a' → logprob: -14.954045295715332
    10. '(un' → logprob: -15.079045295715332

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13329985737800598
    2. '>' → logprob: -2.7582998275756836
    3. ' >' → logprob: -3.3832998275756836
    4. ' ==' → logprob: -4.758299827575684
    5. '==' → logprob: -4.883299827575684
    6. ')>' → logprob: -5.258299827575684
    7. ' )' → logprob: -5.758299827575684
    8. ' !=' → logprob: -6.758299827575684
    9. ')==' → logprob: -7.258299827575684
    10. '!=' → logprob: -7.758299827575684

Token 51: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.046116895973682404
    2. '>' → logprob: -3.421116828918457
    3. ' ==' → logprob: -4.796116828918457
    4. ' <' → logprob: -6.046116828918457
    5. ' ' → logprob: -7.671116828918457
    6. ' !=' → logprob: -7.921116828918457
    7. ' <=' → logprob: -8.046116828918457
    8. '==' → logprob: -8.171116828918457
    9. ' >=' → logprob: -8.796116828918457
    10. '<' → logprob: -9.546116828918457

Token 52: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2292323112487793
    2. ' len' → logprob: -1.7292323112487793
    3. '0' → logprob: -4.229232311248779
    4. '1' → logprob: -4.479232311248779
    5. ' ' → logprob: -6.604232311248779
    6. '   ' → logprob: -9.979232788085938
    7. ' unique' → logprob: -10.604232788085938
    8. 'max' → logprob: -10.604232788085938
    9. '2' → logprob: -10.729232788085938
    10. 'unique' → logprob: -11.104232788085938

Token 53: '(unique' (ID: 110064)
  Prédit: '(unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(unique' → logprob: -0.009783834218978882
    2. '(' → logprob: -4.634783744812012
    3. 'unique' → logprob: -10.634783744812012
    4. ' (' → logprob: -12.884783744812012
    5. ' unique' → logprob: -15.009783744812012
    6. '(u' → logprob: -15.634783744812012
    7. '(`' → logprob: -16.384784698486328
    8. '_unique' → logprob: -17.009784698486328
    9. '(s' → logprob: -17.009784698486328
    10. '(set' → logprob: -17.134784698486328

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008740678429603577
    2. ')' → logprob: -4.7587409019470215
    3. ':' → logprob: -9.383740425109863
    4. ' ):' → logprob: -10.383740425109863
    5. '):
' → logprob: -12.008740425109863
    6. '():' → logprob: -13.008740425109863
    7. ' )' → logprob: -14.633740425109863
    8. ''):' → logprob: -15.258740425109863
    9. ' and' → logprob: -15.508740425109863
    10. ')：' → logprob: -15.633740425109863

Token 55: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.176332950592041
    2. '   ' → logprob: -1.176332950592041
    3. 'print' → logprob: -1.551332950592041
    4. ':
' → logprob: -2.176332950592041
    5. '
' → logprob: -3.801332950592041
    6. ' print' → logprob: -3.801332950592041
    7. '\n' → logprob: -4.676332950592041
    8. '    
' → logprob: -6.676332950592041
    9. '	print' → logprob: -7.551332950592041
    10. '       ' → logprob: -7.801332950592041

Token 56: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6490758061408997
    2. '   ' → logprob: -1.1490757465362549
    3. ' print' → logprob: -2.024075746536255
    4. '
' → logprob: -3.649075746536255
    5. '
' → logprob: -7.149075984954834
    6. '    
' → logprob: -7.649075984954834
    7. '\n' → logprob: -7.649075984954834
    8. '	print' → logprob: -8.649075508117676
    9. '    ' → logprob: -9.274075508117676
    10. '```' → logprob: -9.774075508117676

Token 57: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13443578779697418
    2. '("' → logprob: -2.1344358921051025
    3. '("("' → logprob: -5.759435653686523
    4. '('' → logprob: -6.384435653686523
    5. '("(' → logprob: -6.509435653686523
    6. '(True' → logprob: -7.384435653686523
    7. '()' → logprob: -8.009435653686523
    8. '(A' → logprob: -10.134435653686523
    9. '(-' → logprob: -10.634435653686523
    10. '("")' → logprob: -10.634435653686523

Token 58: 'YES' (ID: 31958)
  Prédit: 'YES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.09078993648290634
    2. 'yes' → logprob: -3.215790033340454
    3. 'unique' → logprob: -4.090789794921875
    4. 'Yes' → logprob: -4.215789794921875
    5. 'Unique' → logprob: -5.215789794921875
    6. 'NO' → logprob: -5.340789794921875
    7. '1' → logprob: -6.840789794921875
    8. '0' → logprob: -7.715789794921875
    9. 'no' → logprob: -8.090789794921875
    10. 'APP' → logprob: -8.090789794921875

Token 59: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5884208679199219
    2. '')
' → logprob: -0.8384208679199219
    3. ')' → logprob: -4.713420867919922
    4. ')
' → logprob: -6.463420867919922
    5. '')
' → logprob: -6.463420867919922
    6. ')')
' → logprob: -8.963420867919922
    7. 'else' → logprob: -9.088420867919922
    8. '!')
' → logprob: -11.213420867919922
    9. ')
' → logprob: -11.338420867919922
    10. '")' → logprob: -11.588420867919922

Token 60: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0006365468143485487
    2. ' else' → logprob: -7.375636577606201
    3. 'elif' → logprob: -11.750636100769043
    4. '```' → logprob: -14.125636100769043
    5. '_else' → logprob: -14.750636100769043
    6. 'elser' → logprob: -16.00063705444336
    7. '   ' → logprob: -16.00063705444336
    8. ')' → logprob: -16.25063705444336
    9. '	else' → logprob: -16.25063705444336
    10. '}else' → logprob: -16.37563705444336

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028872599359601736
    2. ':
' → logprob: -6.62788724899292
    3. '(' → logprob: -6.87788724899292
    4. '   ' → logprob: -7.87788724899292
    5. '():' → logprob: -9.752887725830078
    6. ' :' → logprob: -10.252887725830078
    7. '(
' → logprob: -10.627887725830078
    8. 'print' → logprob: -12.127887725830078
    9. '()' → logprob: -12.627887725830078
    10. '('' → logprob: -12.752887725830078

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021178409457206726
    2. 'print' → logprob: -4.396178245544434
    3. ' print' → logprob: -4.771178245544434
    4. '```' → logprob: -10.146178245544434
    5. '    ' → logprob: -10.521178245544434
    6. ''' → logprob: -10.646178245544434
    7. ' ' → logprob: -10.896178245544434
    8. '	print' → logprob: -10.896178245544434
    9. '       ' → logprob: -11.021178245544434
    10. '    
' → logprob: -12.271178245544434

Token 63: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.229141503572464
    2. ' print' → logprob: -1.6041414737701416
    3. '   ' → logprob: -5.604141712188721
    4. '```' → logprob: -10.604141235351562
    5. '	print' → logprob: -12.479141235351562
    6. ' ' → logprob: -12.979141235351562
    7. '.print' → logprob: -13.104141235351562
    8. '``' → logprob: -13.604141235351562
    9. ''' → logprob: -13.854141235351562
    10. '(print' → logprob: -14.104141235351562

Token 64: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.38692235946655273
    2. '(' → logprob: -1.1369223594665527
    3. '('(' → logprob: -10.511922836303711
    4. '("' → logprob: -11.011922836303711
    5. '()' → logprob: -13.011922836303711
    6. '(
' → logprob: -13.386922836303711
    7. '("("' → logprob: -13.511922836303711
    8. ' (' → logprob: -14.761922836303711
    9. '(('' → logprob: -15.011922836303711
    10. ''' → logprob: -15.136922836303711

Token 65: 'NO' (ID: 14695)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.014166681095957756
    2. 'NO' → logprob: -4.264166831970215
    3. ''N' → logprob: -13.014166831970215
    4. '('' → logprob: -15.389166831970215
    5. ' NO' → logprob: -16.1391658782959
    6. '   ' → logprob: -16.1391658782959
    7. '`' → logprob: -16.5141658782959
    8. ' ' → logprob: -16.7641658782959
    9. 'no' → logprob: -16.8891658782959
    10. ' '' → logprob: -16.8891658782959

Token 66: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3868826925754547
    2. '')' → logprob: -1.1368826627731323
    3. '")' → logprob: -11.761882781982422
    4. ''' → logprob: -13.386882781982422
    5. '`)' → logprob: -13.511882781982422
    6. ')'' → logprob: -15.011882781982422
    7. '')
' → logprob: -16.136882781982422
    8. '```' → logprob: -16.136882781982422
    9. '}')' → logprob: -16.261882781982422
    10. '('' → logprob: -16.761882781982422


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 64
Tokens correctement prédits (1ère position, stricte): 23
Tokens correctement prédits (1ère position, avec adaptation): 26
Tokens correctement prédits (top 10): 52
Précision stricte (1ère position): 35.94%
Précision adaptée (1ère position): 40.62%
Précision (top 10): 81.25%
================================================================================
