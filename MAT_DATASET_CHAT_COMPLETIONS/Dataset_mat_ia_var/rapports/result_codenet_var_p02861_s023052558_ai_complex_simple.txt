================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import combinations,repeat,starmap,chain
from operator import add
from math import hypot

n = int(input())
ls = list(starmap(lambda *args: list(map(int,args)),*(zip(*(input().split() for _ in range(n))))))

coords = list(zip(*ls))
points = list(zip(*coords))
pairs = list(combinations(range(n),2))
dists = list(starmap(lambda i,j: hypot(points[i][0]-points[j][0], points[i][1]-points[j][1]), pairs))
s = reduce(add, dists, 0)
b = s/(len(pairs))
print(b*(n-1))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019195254892110825
    2. '(lambda' → logprob: -4.394195079803467
    3. '.' → logprob: -5.144195079803467
    4. ',' → logprob: -8.019195556640625
    5. ' (' → logprob: -8.519195556640625
    6. '```' → logprob: -9.519195556640625
    7. '(
' → logprob: -10.144195556640625
    8. '\(' → logprob: -10.269195556640625
    9. '\' → logprob: -10.394195556640625
    10. 'lambda' → logprob: -11.019195556640625

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.4525923430919647
    2. ' operator' → logprob: -1.702592372894287
    3. ' itertools' → logprob: -2.202592372894287
    4. ' collections' → logprob: -2.702592372894287
    5. ' os' → logprob: -5.952592372894287
    6. 'operator' → logprob: -7.202592372894287
    7. 'math' → logprob: -7.827592372894287
    8. ' sys' → logprob: -8.702591896057129
    9. 'collections' → logprob: -9.202591896057129
    10. ' ' → logprob: -9.202591896057129

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.019087785854935646
    2. 'import' → logprob: -4.019087791442871
    3. '.' → logprob: -7.394087791442871
    4. ' ' → logprob: -8.644087791442871
    5. ' .' → logprob: -9.519087791442871
    6. '.import' → logprob: -10.019087791442871
    7. '	import' → logprob: -11.269087791442871
    8. '_import' → logprob: -12.144087791442871
    9. '<|end|>' → logprob: -13.519087791442871
    10. '.groupby' → logprob: -13.769087791442871

Token 8: ' combinations' (ID: 43835)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.8000409603118896
    2. 'group' → logprob: -2.0500409603118896
    3. 'acc' → logprob: -2.3000409603118896
    4. 'count' → logprob: -2.4250409603118896
    5. ' cycle' → logprob: -2.6750409603118896
    6. ' accumulate' → logprob: -3.1750409603118896
    7. 'cycle' → logprob: -3.3000409603118896
    8. ' chain' → logprob: -3.6750409603118896
    9. 'chain' → logprob: -4.175041198730469
    10. 'com' → logprob: -4.300041198730469

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019852841272950172
    2. '(
' → logprob: -4.144852638244629
    3. 'def' → logprob: -6.144852638244629
    4. '```' → logprob: -7.769852638244629
    5. '\' → logprob: -8.144852638244629
    6. '\n' → logprob: -8.644852638244629
    7. ',' → logprob: -8.894852638244629
    8. '\(' → logprob: -9.019852638244629
    9. '(

' → logprob: -9.144852638244629
    10. '`' → logprob: -9.519852638244629

Token 10: 'repeat' (ID: 63242)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.48691901564598083
    2. 'product' → logprob: -1.8619190454483032
    3. ' permutations' → logprob: -2.1119189262390137
    4. 'chain' → logprob: -3.1119189262390137
    5. ' product' → logprob: -3.8619189262390137
    6. ' chain' → logprob: -4.111918926239014
    7. 'group' → logprob: -4.611918926239014
    8. ' group' → logprob: -5.486918926239014
    9. 'count' → logprob: -5.611918926239014
    10. 'acc' → logprob: -5.611918926239014

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1235661506652832
    2. '(
' → logprob: -2.748566150665283
    3. '\' → logprob: -4.248566150665283
    4. '\n' → logprob: -4.373566150665283
    5. 'def' → logprob: -4.498566150665283
    6. ',' → logprob: -5.373566150665283
    7. '()' → logprob: -6.873566150665283
    8. ')' → logprob: -7.123566150665283
    9. '`' → logprob: -7.123566150665283
    10. 'for' → logprob: -7.248566150665283

Token 12: 'st' (ID: 302)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.9676429033279419
    2. 'count' → logprob: -1.217642903327942
    3. 'per' → logprob: -1.842642903327942
    4. 'chain' → logprob: -2.4676427841186523
    5. 'cycle' → logprob: -3.5926427841186523
    6. 'acc' → logprob: -4.217642784118652
    7. 'group' → logprob: -4.342642784118652
    8. 'filter' → logprob: -4.467642784118652
    9. 'st' → logprob: -5.217642784118652
    10. 'com' → logprob: -5.842642784118652

Token 13: 'arm' (ID: 2218)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.09250783920288086
    2. 'arm' → logprob: -2.592507839202881
    3. 'r' → logprob: -4.842507839202881
    4. 'arp' → logprob: -6.092507839202881
    5. 'art' → logprob: -6.842507839202881
    6. 'ep' → logprob: -7.342507839202881
    7. 'ring' → logprob: -7.592507839202881
    8. 'arl' → logprob: -8.467508316040039
    9. 'arb' → logprob: -8.467508316040039
    10. 'op' → logprob: -9.467508316040039

Token 14: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.2664456789934775e-06
    2. 'apse' → logprob: -14.125000953674316
    3. 'ethod' → logprob: -15.125000953674316
    4. 'ep' → logprob: -17.625001907348633
    5. '_ap' → logprob: -17.750001907348633
    6. 'apping' → logprob: -17.750001907348633
    7. 'at' → logprob: -17.875001907348633
    8. 'aps' → logprob: -18.250001907348633
    9. 'a' → logprob: -18.250001907348633
    10. 'atch' → logprob: -18.375001907348633

Token 15: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6356590390205383
    2. ',' → logprob: -1.7606589794158936
    3. '(
' → logprob: -2.5106589794158936
    4. '\' → logprob: -2.6356589794158936
    5. '\n' → logprob: -3.0106589794158936
    6. 'def' → logprob: -3.5106589794158936
    7. 'import' → logprob: -4.385659217834473
    8. ',
' → logprob: -4.635659217834473
    9. '.' → logprob: -5.135659217834473
    10. ')' → logprob: -5.135659217834473

Token 16: 'chain' (ID: 13289)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.7789459228515625
    2. 'per' → logprob: -2.0289459228515625
    3. 'acc' → logprob: -2.0289459228515625
    4. 'chain' → logprob: -2.1539459228515625
    5. 'group' → logprob: -2.7789459228515625
    6. 'count' → logprob: -3.9039459228515625
    7. 'filter' → logprob: -3.9039459228515625
    8. 'com' → logprob: -4.6539459228515625
    9. 'cycle' → logprob: -4.6539459228515625
    10. 'tee' → logprob: -4.6539459228515625

Token 17: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3918651342391968
    2. 'import' → logprob: -2.8918652534484863
    3. ' ' → logprob: -2.8918652534484863
    4. ')' → logprob: -3.0168652534484863
    5. '(' → logprob: -3.3918652534484863
    6. '.' → logprob: -3.6418652534484863
    7. 'def' → logprob: -3.7668652534484863
    8. '<|end|>' → logprob: -4.141865253448486
    9. '\n' → logprob: -4.266865253448486
    10. '\' → logprob: -4.516865253448486

Token 18: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4549766778945923
    2. ',' → logprob: -2.2049765586853027
    3. 'import' → logprob: -2.3299765586853027
    4. '
' → logprob: -3.7049765586853027
    5. '(' → logprob: -3.8299765586853027
    6. '#' → logprob: -4.079976558685303
    7. 'for' → logprob: -4.454976558685303
    8. ',
' → logprob: -4.454976558685303
    9. '(
' → logprob: -4.704976558685303
    10. 'from' → logprob: -4.829976558685303

Token 19: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.7186856865882874
    2. 'operator' → logprob: -1.3436856269836426
    3. 'math' → logprob: -2.0936856269836426
    4. ' math' → logprob: -2.2186856269836426
    5. 'collections' → logprob: -4.343685626983643
    6. ' collections' → logprob: -5.093685626983643
    7. ' ' → logprob: -9.0936861038208
    8. ' typing' → logprob: -9.9686861038208
    9. '_operator' → logprob: -9.9686861038208
    10. 'heap' → logprob: -10.0936861038208

Token 20: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.12723413109779358
    2. 'import' → logprob: -2.1272342205047607
    3. ' as' → logprob: -9.37723445892334
    4. ' ' → logprob: -9.75223445892334
    5. ',' → logprob: -9.87723445892334
    6. ' ,' → logprob: -10.25223445892334
    7. '_import' → logprob: -10.50223445892334
    8. '.' → logprob: -11.37723445892334
    9. '<|end|>' → logprob: -11.37723445892334
    10. '	import' → logprob: -11.62723445892334

Token 21: ' add' (ID: 1147)
  Prédit: ' mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.4489731192588806
    2. 'mul' → logprob: -1.4489731788635254
    3. 'add' → logprob: -3.3239731788635254
    4. ' add' → logprob: -3.3239731788635254
    5. ' item' → logprob: -3.6989731788635254
    6. 'item' → logprob: -3.8239731788635254
    7. 'getitem' → logprob: -6.198973178863525
    8. 'import' → logprob: -6.823973178863525
    9. ' import' → logprob: -7.198973178863525
    10. ' ' → logprob: -7.448973178863525

Token 22: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29014450311660767
    2. ',' → logprob: -1.915144443511963
    3. '\' → logprob: -3.415144443511963
    4. '(
' → logprob: -3.665144443511963
    5. '\n' → logprob: -4.415144443511963
    6. '
' → logprob: -4.915144443511963
    7. 'import' → logprob: -5.415144443511963
    8. 'def' → logprob: -5.540144443511963
    9. '.' → logprob: -5.915144443511963
    10. '#' → logprob: -6.040144443511963

Token 23: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34867948293685913
    2. '\' → logprob: -2.348679542541504
    3. '(' → logprob: -2.723679542541504
    4. 'd' → logprob: -3.598679542541504
    5. '(
' → logprob: -3.598679542541504
    6. ',' → logprob: -4.098679542541504
    7. '
' → logprob: -4.348679542541504
    8. '\n' → logprob: -4.598679542541504
    9. '

' → logprob: -5.098679542541504
    10. '#' → logprob: -5.223679542541504

Token 24: ' math' (ID: 13324)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.33637577295303345
    2. '_' → logprob: -2.0863757133483887
    3. ' math' → logprob: -2.9613757133483887
    4. 'math' → logprob: -3.9613757133483887
    5. 'collections' → logprob: -3.9613757133483887
    6. ' itertools' → logprob: -4.086375713348389
    7. 'fun' → logprob: -4.211375713348389
    8. ' collections' → logprob: -4.711375713348389
    9. ' ' → logprob: -5.586375713348389
    10. ' random' → logprob: -5.586375713348389

Token 25: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2576163709163666
    2. 'import' → logprob: -1.507616400718689
    3. ' ' → logprob: -5.8826165199279785
    4. '.' → logprob: -6.0076165199279785
    5. '_import' → logprob: -8.63261604309082
    6. '<|end|>' → logprob: -9.63261604309082
    7. '	import' → logprob: -10.13261604309082
    8. '_' → logprob: -10.38261604309082
    9. ' im' → logprob: -10.88261604309082
    10. '```' → logprob: -11.13261604309082

Token 26: ' hypot' (ID: 85756)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.6423513293266296
    2. ' comb' → logprob: -2.0173513889312744
    3. 'factor' → logprob: -2.5173513889312744
    4. 'prod' → logprob: -2.5173513889312744
    5. 'comb' → logprob: -3.0173513889312744
    6. 'sqrt' → logprob: -3.2673513889312744
    7. ' prod' → logprob: -3.7673513889312744
    8. ' gcd' → logprob: -4.142351150512695
    9. 'ceil' → logprob: -4.267351150512695
    10. 'log' → logprob: -4.642351150512695

Token 27: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.540864109992981
    2. 'def' → logprob: -1.790864109992981
    3. ',' → logprob: -2.1658639907836914
    4. '#' → logprob: -2.2908639907836914
    5. '(' → logprob: -2.2908639907836914
    6. '
' → logprob: -2.5408639907836914
    7. 'n' → logprob: -3.0408639907836914
    8. '\' → logprob: -3.1658639907836914
    9. '.' → logprob: -4.165863990783691
    10. 'x' → logprob: -4.415863990783691

Token 28: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24903026223182678
    2. 'd' → logprob: -2.374030351638794
    3. '#' → logprob: -2.749030351638794
    4. '\' → logprob: -4.374030113220215
    5. 'a' → logprob: -4.749030113220215
    6. '`' → logprob: -4.999030113220215
    7. '```' → logprob: -5.249030113220215
    8. '(' → logprob: -5.499030113220215
    9. ',' → logprob: -5.624030113220215
    10. 'import' → logprob: -5.749030113220215

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43439826369285583
    2. '=' → logprob: -1.4343982934951782
    3. ' ' → logprob: -2.9343981742858887
    4. ',' → logprob: -3.6843981742858887
    5. 'u' → logprob: -3.8093981742858887
    6. '_' → logprob: -4.934398174285889
    7. 'o' → logprob: -6.684398174285889
    8. ' ,' → logprob: -6.934398174285889
    9. 'umber' → logprob: -7.434398174285889
    10. 's' → logprob: -7.434398174285889

Token 30: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2758559286594391
    2. ' int' → logprob: -1.5258558988571167
    3. 'int' → logprob: -4.400856018066406
    4. '5' → logprob: -5.525856018066406
    5. '3' → logprob: -6.150856018066406
    6. '10' → logprob: -6.400856018066406
    7. '4' → logprob: -6.400856018066406
    8. '0' → logprob: -7.150856018066406
    9. '1' → logprob: -8.400856018066406
    10. '6' → logprob: -8.400856018066406

Token 31: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005031120381318033
    2. '(input' → logprob: -8.625503540039062
    3. '(n' → logprob: -8.625503540039062
    4. '('' → logprob: -9.875503540039062
    5. ' (' → logprob: -10.000503540039062
    6. '<|end|>' → logprob: -11.125503540039062
    7. '()' → logprob: -11.875503540039062
    8. '```' → logprob: -12.250503540039062
    9. '(`' → logprob: -12.375503540039062
    10. ' ' → logprob: -12.750503540039062

Token 32: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7421153783798218
    2. '(' → logprob: -0.8671153783798218
    3. '())' → logprob: -2.8671154975891113
    4. ')' → logprob: -3.1171154975891113
    5. '(()' → logprob: -6.867115497589111
    6. '('' → logprob: -7.242115497589111
    7. '(
' → logprob: -8.492115020751953
    8. '(

' → logprob: -8.992115020751953
    9. '(`' → logprob: -9.742115020751953
    10. '))' → logprob: -9.867115020751953

Token 33: 'ls' (ID: 3973)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.5822510719299316
    2. ' points' → logprob: -1.7072510719299316
    3. 'data' → logprob: -2.9572510719299316
    4. 'a' → logprob: -3.0822510719299316
    5. 'vectors' → logprob: -4.082251071929932
    6. 's' → logprob: -4.207251071929932
    7. 'numbers' → logprob: -4.457251071929932
    8. '_points' → logprob: -4.582251071929932
    9. ')' → logprob: -4.582251071929932
    10. ' ' → logprob: -4.707251071929932

Token 34: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.012321737594902515
    2. ' =' → logprob: -4.887321949005127
    3. '=' → logprob: -5.512321949005127
    4. '_' → logprob: -8.512321472167969
    5. 'it' → logprob: -8.512321472167969
    6. '_t' → logprob: -9.137321472167969
    7. 'ts' → logprob: -9.762321472167969
    8. '=[]' → logprob: -10.137321472167969
    9. '.' → logprob: -11.637321472167969
    10. '```' → logprob: -11.762321472167969

Token 35: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.04136653244495392
    2. '[list' → logprob: -3.2913665771484375
    3. '[' → logprob: -5.9163665771484375
    4. ' list' → logprob: -8.541366577148438
    5. '[]' → logprob: -8.791366577148438
    6. '[int' → logprob: -9.666366577148438
    7. '[input' → logprob: -10.041366577148438
    8. ' [' → logprob: -10.791366577148438
    9. '[n' → logprob: -10.791366577148438
    10. 'range' → logprob: -10.791366577148438

Token 36: '(st' (ID: 4065)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.47318461537361145
    2. '(' → logprob: -1.473184585571289
    3. '(chain' → logprob: -2.348184585571289
    4. '(range' → logprob: -3.473184585571289
    5. '(re' → logprob: -4.348184585571289
    6. '(map' → logprob: -4.973184585571289
    7. '()' → logprob: -8.098184585571289
    8. '(per' → logprob: -8.098184585571289
    9. '(input' → logprob: -8.348184585571289
    10. '(it' → logprob: -9.098184585571289

Token 37: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.0024987291544675827
    2. 'r' → logprob: -6.502498626708984
    3. 'ream' → logprob: -8.502498626708984
    4. 'erm' → logprob: -8.502498626708984
    5. 'art' → logprob: -8.877498626708984
    6. 'ar' → logprob: -9.502498626708984
    7. 'map' → logprob: -9.752498626708984
    8. 'range' → logprob: -9.752498626708984
    9. 'ertools' → logprob: -10.127498626708984
    10. 'ram' → logprob: -10.502498626708984

Token 38: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -2.816093228830141e-06
    2. 'map' → logprob: -12.87500286102295
    3. 'app' → logprob: -16.250001907348633
    4. 'ult' → logprob: -17.125001907348633
    5. 'ап' → logprob: -17.625001907348633
    6. 'ultiply' → logprob: -17.750001907348633
    7. 'apping' → logprob: -17.750001907348633
    8. 'a' → logprob: -17.875001907348633
    9. 'apply' → logprob: -18.000001907348633
    10. 'at' → logprob: -18.125001907348633

Token 39: '(lambda' (ID: 43341)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.418775737285614
    2. '(add' → logprob: -1.5437757968902588
    3. '(lambda' → logprob: -3.168775796890259
    4. '(' → logprob: -3.168775796890259
    5. '(tuple' → logprob: -3.668775796890259
    6. '(com' → logprob: -4.29377555847168
    7. '(abs' → logprob: -6.91877555847168
    8. '(pow' → logprob: -7.29377555847168
    9. '(int' → logprob: -7.41877555847168
    10. '(t' → logprob: -7.66877555847168

Token 40: ' *' (ID: 425)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.838482141494751
    2. ' a' → logprob: -0.963482141494751
    3. 'a' → logprob: -2.213482141494751
    4. 'x' → logprob: -2.713482141494751
    5. ' n' → logprob: -6.213481903076172
    6. ' lambda' → logprob: -6.463481903076172
    7. ' ' → logprob: -6.963481903076172
    8. ' r' → logprob: -7.088481903076172
    9. 'lambda' → logprob: -7.338481903076172
    10. ' s' → logprob: -7.713481903076172

Token 41: 'args' (ID: 4285)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0472518615424633
    2. 'a' → logprob: -3.7972519397735596
    3. 'args' → logprob: -4.1722517013549805
    4. 't' → logprob: -6.6722517013549805
    5. 'r' → logprob: -6.7972517013549805
    6. ' x' → logprob: -7.0472517013549805
    7. 'xy' → logprob: -7.0472517013549805
    8. 'xs' → logprob: -7.1722517013549805
    9. 'coords' → logprob: -7.6722517013549805
    10. 'p' → logprob: -7.7972517013549805

Token 42: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013204588554799557
    2. ' :' → logprob: -4.513204574584961
    3. ',' → logprob: -7.013204574584961
    4. ',h' → logprob: -7.388204574584961
    5. ':h' → logprob: -8.013204574584961
    6. ':n' → logprob: -9.388204574584961
    7. ':add' → logprob: -10.138204574584961
    8. ',n' → logprob: -10.513204574584961
    9. ':list' → logprob: -11.138204574584961
    10. ':return' → logprob: -11.138204574584961

Token 43: ' list' (ID: 1562)
  Prédit: 'hyp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hyp' → logprob: -0.18882818520069122
    2. 'map' → logprob: -2.938828229904175
    3. ' hypot' → logprob: -3.688828229904175
    4. 'tuple' → logprob: -3.938828229904175
    5. 'abs' → logprob: -4.188827991485596
    6. 'add' → logprob: -4.188827991485596
    7. ' map' → logprob: -4.438827991485596
    8. 'int' → logprob: -4.563827991485596
    9. ' tuple' → logprob: -5.938827991485596
    10. 'sum' → logprob: -6.063827991485596

Token 44: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.3717663586139679
    2. '(com' → logprob: -1.3717663288116455
    3. '(args' → logprob: -3.6217663288116455
    4. '(chain' → logprob: -3.9967663288116455
    5. '(' → logprob: -5.871766567230225
    6. 'map' → logprob: -5.996766567230225
    7. '(re' → logprob: -6.621766567230225
    8. '(h' → logprob: -6.746766567230225
    9. 'args' → logprob: -7.371766567230225
    10. '(st' → logprob: -7.371766567230225

Token 45: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3790062367916107
    2. '(h' → logprob: -1.379006266593933
    3. '(float' → logprob: -3.6290061473846436
    4. '(abs' → logprob: -3.7540061473846436
    5. '(' → logprob: -5.004006385803223
    6. '(lambda' → logprob: -5.879006385803223
    7. '(add' → logprob: -6.504006385803223
    8. '(s' → logprob: -7.629006385803223
    9. ')' → logprob: -7.754006385803223
    10. 'hyp' → logprob: -8.629006385803223

Token 46: ',args' (ID: 157312)
  Prédit: ',args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',args' → logprob: -0.03578055649995804
    2. ',' → logprob: -3.410780668258667
    3. '(args' → logprob: -6.285780429840088
    4. ',input' → logprob: -8.660780906677246
    5. ',arg' → logprob: -10.410780906677246
    6. ' ,' → logprob: -10.785780906677246
    7. 'args' → logprob: -11.785780906677246
    8. '	args' → logprob: -12.035780906677246
    9. ',list' → logprob: -12.535780906677246
    10. ',
' → logprob: -12.660780906677246

Token 47: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.36169588565826416
    2. '),' → logprob: -1.2366958856582642
    3. ' ' → logprob: -5.361695766448975
    4. '))),' → logprob: -5.736695766448975
    5. '))' → logprob: -6.486695766448975
    6. ')' → logprob: -6.611695766448975
    7. '()),' → logprob: -8.486696243286133
    8. '   ' → logprob: -8.486696243286133
    9. '()' → logprob: -8.486696243286133
    10. '  ' → logprob: -8.611696243286133

Token 48: '*(' (ID: 14793)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.3903747797012329
    2. 'repeat' → logprob: -1.640374779701233
    3. '[' → logprob: -2.8903746604919434
    4. 'chain' → logprob: -3.5153746604919434
    5. 'zip' → logprob: -4.390374660491943
    6. ' combinations' → logprob: -4.515374660491943
    7. ' repeat' → logprob: -5.390374660491943
    8. ' chain' → logprob: -5.765374660491943
    9. '(re' → logprob: -6.015374660491943
    10. ' [' → logprob: -6.140374660491943

Token 49: 'zip' (ID: 15571)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.3010319173336029
    2. '(re' → logprob: -1.6760319471359253
    3. '[' → logprob: -3.1760318279266357
    4. 'com' → logprob: -4.926032066345215
    5. 're' → logprob: -5.676032066345215
    6. '(com' → logprob: -5.801032066345215
    7. ' repeat' → logprob: -5.926032066345215
    8. 'chain' → logprob: -5.926032066345215
    9. 'ls' → logprob: -6.676032066345215
    10. 'rep' → logprob: -6.926032066345215

Token 50: '(*(' (ID: 103513)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.021621469408273697
    2. '(*(' → logprob: -4.7716217041015625
    3. '(re' → logprob: -5.6466217041015625
    4. '(ls' → logprob: -5.8966217041015625
    5. '(chain' → logprob: -6.1466217041015625
    6. '(' → logprob: -6.6466217041015625
    7. '(range' → logprob: -7.0216217041015625
    8. '(map' → logprob: -7.5216217041015625
    9. '((' → logprob: -7.7716217041015625
    10. '(*)' → logprob: -8.021621704101562

Token 51: 'input' (ID: 2586)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.3151501715183258
    2. 'input' → logprob: -1.9401501417160034
    3. 'map' → logprob: -3.065150260925293
    4. '[' → logprob: -3.565150260925293
    5. 'list' → logprob: -4.815150260925293
    6. 'iter' → logprob: -4.815150260925293
    7. '(re' → logprob: -4.940150260925293
    8. 'chain' → logprob: -5.065150260925293
    9. '[input' → logprob: -5.065150260925293
    10. 're' → logprob: -5.690150260925293

Token 52: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5774269104003906
    2. '().' → logprob: -0.8274269104003906
    3. '(),' → logprob: -7.827426910400391
    4. '())' → logprob: -8.32742691040039
    5. '()))' → logprob: -8.32742691040039
    6. '()(' → logprob: -8.70242691040039
    7. '())))' → logprob: -9.32742691040039
    8. 'split' → logprob: -10.20242691040039
    9. ' ()' → logprob: -10.57742691040039
    10. '(' → logprob: -10.57742691040039

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.012856307439506054
    2. 'strip' → logprob: -4.387856483459473
    3. 'rstrip' → logprob: -8.387856483459473
    4. ' split' → logprob: -9.262856483459473
    5. ' ' → logprob: -11.887856483459473
    6. '().' → logprob: -12.137856483459473
    7. '.split' → logprob: -12.387856483459473
    8. '(split' → logprob: -13.387856483459473
    9. '   ' → logprob: -13.762856483459473
    10. ' strip' → logprob: -13.887856483459473

Token 54: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11057054996490479
    2. '()))' → logprob: -3.3605704307556152
    3. '(n' → logprob: -3.4855704307556152
    4. '())' → logprob: -3.8605704307556152
    5. '())))' → logprob: -4.485570430755615
    6. '(' → logprob: -5.860570430755615
    7. '())))
' → logprob: -7.110570430755615
    8. '(),' → logprob: -7.235570430755615
    9. 'n' → logprob: -7.985570430755615
    10. ')))' → logprob: -8.235570907592773

Token 55: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2306443452835083
    2. '(n' → logprob: -1.9806443452835083
    3. 'for' → logprob: -3.3556442260742188
    4. '()))' → logprob: -4.230644226074219
    5. '())' → logprob: -5.355644226074219
    6. '(' → logprob: -5.480644226074219
    7. '())))' → logprob: -5.980644226074219
    8. ' for' → logprob: -6.730644226074219
    9. 'n' → logprob: -6.730644226074219
    10. ')' → logprob: -6.855644226074219

Token 56: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16381452977657318
    2. ' _' → logprob: -1.9138145446777344
    3. ' range' → logprob: -5.663814544677734
    4. 'range' → logprob: -9.538814544677734
    5. ' i' → logprob: -11.538814544677734
    6. '_range' → logprob: -11.663814544677734
    7. 'i' → logprob: -11.913814544677734
    8. ' _
' → logprob: -12.538814544677734
    9. ' ' → logprob: -12.788814544677734
    10. '_
' → logprob: -13.038814544677734

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3743850588798523
    2. 'in' → logprob: -1.749385118484497
    3. 'range' → logprob: -1.999385118484497
    4. ' range' → logprob: -6.249384880065918
    5. 'n' → logprob: -7.749384880065918
    6. 'i' → logprob: -8.499384880065918
    7. ')' → logprob: -8.999384880065918
    8. ' ' → logprob: -9.874384880065918
    9. '_' → logprob: -9.874384880065918
    10. 'ran' → logprob: -9.999384880065918

Token 58: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003542926860973239
    2. ' range' → logprob: -8.000354766845703
    3. '(range' → logprob: -11.875354766845703
    4. '[' → logprob: -12.000354766845703
    5. ')' → logprob: -12.625354766845703
    6. '   ' → logprob: -14.875354766845703
    7. ' ' → logprob: -15.125354766845703
    8. '	range' → logprob: -15.375354766845703
    9. 'repeat' → logprob: -15.750354766845703
    10. '...' → logprob: -15.750354766845703

Token 59: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00013882013445254415
    2. 'n' → logprob: -9.375139236450195
    3. '(' → logprob: -9.875139236450195
    4. ' (' → logprob: -13.750139236450195
    5. ' n' → logprob: -14.250139236450195
    6. '(
' → logprob: -15.250139236450195
    7. '((' → logprob: -16.250139236450195
    8. ')n' → logprob: -16.250139236450195
    9. '(s' → logprob: -16.375139236450195
    10. ',n' → logprob: -17.000139236450195

Token 60: '))))' (ID: 57459)
  Prédit: '))))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.31178227066993713
    2. '))' → logprob: -1.4367822408676147
    3. ')))' → logprob: -4.561782360076904
    4. ')))),' → logprob: -4.936782360076904
    5. ')))))
' → logprob: -4.936782360076904
    6. '))),' → logprob: -6.436782360076904
    7. '()))' → logprob: -7.061782360076904
    8. ' ))' → logprob: -7.186782360076904
    9. ')),' → logprob: -7.311782360076904
    10. ')' → logprob: -7.936782360076904

Token 61: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.13845069706439972
    2. ')))' → logprob: -2.1384506225585938
    3. ')' → logprob: -4.638450622558594
    4. '))))' → logprob: -7.388450622558594
    5. '))
' → logprob: -7.763450622558594
    6. '(' → logprob: -8.763450622558594
    7. '),' → logprob: -8.763450622558594
    8. '()))' → logprob: -8.888450622558594
    9. '(n' → logprob: -10.013450622558594
    10. ')))
' → logprob: -10.388450622558594

Token 62: 'coords' (ID: 78648)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34518688917160034
    2. '))' → logprob: -1.7201869487762451
    3. 'for' → logprob: -3.345186948776245
    4. ')
' → logprob: -3.470186948776245
    5. '))
' → logprob: -4.970186710357666
    6. '\n' → logprob: -5.095186710357666
    7. '[' → logprob: -5.345186710357666
    8. ')))' → logprob: -5.470186710357666
    9. ',
' → logprob: -5.845186710357666
    10. ',' → logprob: -5.970186710357666

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09024766087532043
    2. '=' → logprob: -2.465247631072998
    3. '[' → logprob: -6.965247631072998
    4. '[:]' → logprob: -9.215248107910156
    5. ')' → logprob: -9.465248107910156
    6. '.' → logprob: -10.090248107910156
    7. 's' → logprob: -10.340248107910156
    8. '=[]' → logprob: -10.465248107910156
    9. '_' → logprob: -11.215248107910156
    10. '=[' → logprob: -11.465248107910156

Token 64: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4385998547077179
    2. '[list' → logprob: -2.0635998249053955
    3. 'chain' → logprob: -2.4385998249053955
    4. '[' → logprob: -2.6885998249053955
    5. 'ls' → logprob: -3.5635998249053955
    6. '[(' → logprob: -4.313600063323975
    7. ' list' → logprob: -4.688600063323975
    8. '[[' → logprob: -5.063600063323975
    9. 'reduce' → logprob: -6.313600063323975
    10. 'zip' → logprob: -6.563600063323975

Token 65: '(zip' (ID: 87520)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.3190517723560333
    2. '(com' → logprob: -1.319051742553711
    3. '(zip' → logprob: -5.569051742553711
    4. '(map' → logprob: -7.194051742553711
    5. '(st' → logprob: -7.819051742553711
    6. '(' → logprob: -8.069051742553711
    7. '(product' → logprob: -8.819051742553711
    8. '(per' → logprob: -9.194051742553711
    9. '(ch' → logprob: -9.444051742553711
    10. 'com' → logprob: -10.069051742553711

Token 66: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.10972240567207336
    2. '(ls' → logprob: -2.484722375869751
    3. '(range' → logprob: -4.48472261428833
    4. '(*(' → logprob: -4.85972261428833
    5. '(' → logprob: -6.98472261428833
    6. '([' → logprob: -8.359722137451172
    7. '(coords' → logprob: -9.359722137451172
    8. '((' → logprob: -9.484722137451172
    9. '(chain' → logprob: -9.734722137451172
    10. '((*' → logprob: -10.484722137451172

Token 67: 'ls' (ID: 3973)
  Prédit: 'ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.0009910109220072627
    2. '(ls' → logprob: -7.250990867614746
    3. ' ls' → logprob: -9.375990867614746
    4. 'coords' → logprob: -9.625990867614746
    5. '[' → logprob: -10.125990867614746
    6. 'zip' → logprob: -11.000990867614746
    7. 'map' → logprob: -11.250990867614746
    8. '(' → logprob: -11.875990867614746
    9. 'tuple' → logprob: -12.000990867614746
    10. 'list' → logprob: -12.125990867614746

Token 68: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -3.5120287066092715e-05
    2. '))
' → logprob: -10.625035285949707
    3. ')))' → logprob: -12.375035285949707
    4. ')' → logprob: -12.625035285949707
    5. ' ))' → logprob: -14.000035285949707
    6. '))

' → logprob: -14.125035285949707
    7. '()))' → logprob: -14.750035285949707
    8. '[' → logprob: -14.875035285949707
    9. '))[' → logprob: -15.375035285949707
    10. '));' → logprob: -16.00003433227539

Token 69: 'points' (ID: 14011)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.45347481966018677
    2. 'd' → logprob: -2.203474760055542
    3. ')' → logprob: -3.078474760055542
    4. 'for' → logprob: -3.328474760055542
    5. 'coords' → logprob: -4.078474998474121
    6. 's' → logprob: -4.203474998474121
    7. 'pairs' → logprob: -4.203474998474121
    8. 'ranges' → logprob: -4.453474998474121
    9. 'length' → logprob: -4.828474998474121
    10. 'counts' → logprob: -4.953474998474121

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01445658691227436
    2. '=' → logprob: -4.264456748962402
    3. ',' → logprob: -9.014456748962402
    4. ')' → logprob: -9.264456748962402
    5. '[' → logprob: -10.514456748962402
    6. 's' → logprob: -11.139456748962402
    7. '=[]' → logprob: -11.764456748962402
    8. ' ' → logprob: -12.264456748962402
    9. '=[' → logprob: -12.639456748962402
    10. '[:]' → logprob: -13.014456748962402

Token 71: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.0594696998596191
    2. ' list' → logprob: -1.3094696998596191
    3. '[(' → logprob: -2.059469699859619
    4. '[' → logprob: -2.184469699859619
    5. 'coords' → logprob: -3.434469699859619
    6. ' coords' → logprob: -3.684469699859619
    7. ' [' → logprob: -3.684469699859619
    8. ' set' → logprob: -4.309469699859619
    9. ' [(' → logprob: -4.559469699859619
    10. 'set' → logprob: -4.684469699859619

Token 72: '(zip' (ID: 87520)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.5115119218826294
    2. '(com' → logprob: -1.0115119218826294
    3. '(zip' → logprob: -4.26151180267334
    4. '(coords' → logprob: -4.38651180267334
    5. '(points' → logprob: -5.88651180267334
    6. '(product' → logprob: -5.88651180267334
    7. '(co' → logprob: -6.01151180267334
    8. '(set' → logprob: -7.13651180267334
    9. '(' → logprob: -7.26151180267334
    10. '(map' → logprob: -8.26151180267334

Token 73: '(*' (ID: 9000)
  Prédit: '(coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coords' → logprob: -0.10212685912847519
    2. '(*' → logprob: -2.3521268367767334
    3. '(*(' → logprob: -6.7271270751953125
    4. '(' → logprob: -7.8521270751953125
    5. 'coords' → logprob: -8.852127075195312
    6. '(range' → logprob: -9.102127075195312
    7. '(coord' → logprob: -10.102127075195312
    8. '(co' → logprob: -11.602127075195312
    9. '(ls' → logprob: -12.227127075195312
    10. '((*' → logprob: -12.477127075195312

Token 74: 'coords' (ID: 78648)
  Prédit: 'coords'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.011422323994338512
    2. '(coords' → logprob: -4.636422157287598
    3. ' coords' → logprob: -6.761422157287598
    4. 'ls' → logprob: -8.261422157287598
    5. '[' → logprob: -9.511422157287598
    6. 'coord' → logprob: -10.261422157287598
    7. 'coordinates' → logprob: -10.261422157287598
    8. '(ls' → logprob: -10.636422157287598
    9. 'points' → logprob: -11.136422157287598
    10. '[(' → logprob: -11.136422157287598

Token 75: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03206811472773552
    2. '[' → logprob: -3.5320680141448975
    3. '))
' → logprob: -6.657068252563477
    4. ',' → logprob: -7.532068252563477
    5. '))[' → logprob: -8.907068252563477
    6. ' ))' → logprob: -9.407068252563477
    7. '[:-' → logprob: -10.157068252563477
    8. '[-' → logprob: -10.157068252563477
    9. '()))' → logprob: -10.282068252563477
    10. '[:' → logprob: -10.407068252563477

Token 76: 'pairs' (ID: 175838)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12273804843425751
    2. 'for' → logprob: -2.8727381229400635
    3. '))' → logprob: -3.4977381229400635
    4. ')
' → logprob: -4.997737884521484
    5. 'print' → logprob: -5.247737884521484
    6. 'points' → logprob: -5.747737884521484
    7. '(points' → logprob: -6.372737884521484
    8. '[' → logprob: -6.622737884521484
    9. 'dist' → logprob: -6.872737884521484
    10. '))
' → logprob: -6.997737884521484

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04317012056708336
    2. '=' → logprob: -3.168170213699341
    3. '(' → logprob: -9.543169975280762
    4. 's' → logprob: -10.043169975280762
    5. '=list' → logprob: -10.543169975280762
    6. '_pairs' → logprob: -12.418169975280762
    7. '_' → logprob: -12.543169975280762
    8. ',' → logprob: -12.668169975280762
    9. '(com' → logprob: -12.668169975280762
    10. ' =)' → logprob: -13.043169975280762

Token 78: ' list' (ID: 1562)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.06917426735162735
    2. 'list' → logprob: -2.944174289703369
    3. ' combinations' → logprob: -4.694174289703369
    4. ' list' → logprob: -5.944174289703369
    5. '(com' → logprob: -6.194174289703369
    6. 'chain' → logprob: -9.194173812866211
    7. '[' → logprob: -9.194173812866211
    8. '[(' → logprob: -10.194173812866211
    9. 'comb' → logprob: -10.444173812866211
    10. 'filter' → logprob: -10.944173812866211

Token 79: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.00020246754866093397
    2. '(' → logprob: -9.250202178955078
    3. 'com' → logprob: -9.875202178955078
    4. '(chain' → logprob: -10.500202178955078
    5. '(list' → logprob: -11.500202178955078
    6. '```' → logprob: -12.000202178955078
    7. '<com' → logprob: -13.125202178955078
    8. ' (' → logprob: -13.125202178955078
    9. '((' → logprob: -13.750202178955078
    10. '=com' → logprob: -14.125202178955078

Token 80: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.000217006730963476
    2. 'b' → logprob: -8.50021743774414
    3. 'inations' → logprob: -11.75021743774414
    4. 'bin' → logprob: -12.87521743774414
    5. 'positions' → logprob: -13.62521743774414
    6. '(b' → logprob: -14.00021743774414
    7. '(' → logprob: -15.12521743774414
    8. 'bon' → logprob: -15.75021743774414
    9. 'bat' → logprob: -15.87521743774414
    10. 'ib' → logprob: -16.00021743774414

Token 81: '(range' (ID: 50017)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -4.127333340875339e-06
    2. '(range' → logprob: -13.250003814697266
    3. '(' → logprob: -13.875003814697266
    4. 'points' → logprob: -14.750003814697266
    5. ')' → logprob: -15.250003814697266
    6. ' (' → logprob: -15.375003814697266
    7. ' points' → logprob: -15.625003814697266
    8. '(point' → logprob: -15.875003814697266
    9. ')(' → logprob: -16.625003814697266
    10. '(coords' → logprob: -16.750003814697266

Token 82: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.008823387324810028
    2. '(' → logprob: -4.883823394775391
    3. '(len' → logprob: -6.758823394775391
    4. '(points' → logprob: -9.88382339477539
    5. 'n' → logprob: -13.50882339477539
    6. ' (' → logprob: -14.00882339477539
    7. ' n' → logprob: -14.38382339477539
    8. ')' → logprob: -14.38382339477539
    9. 'len' → logprob: -15.13382339477539
    10. ')n' → logprob: -15.25882339477539

Token 83: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06237298250198364
    2. '),' → logprob: -2.812372922897339
    3. ' ,' → logprob: -8.187373161315918
    4. '2' → logprob: -9.687373161315918
    5. ' ),' → logprob: -10.562373161315918
    6. '},' → logprob: -11.562373161315918
    7. '>,' → logprob: -11.812373161315918
    8. ',),' → logprob: -12.062373161315918
    9. ' ' → logprob: -12.187373161315918
    10. ')' → logprob: -12.437373161315918

Token 84: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017086135921999812
    2. ' ' → logprob: -6.376708507537842
    3. '   ' → logprob: -13.126708984375
    4. '  ' → logprob: -14.251708984375
    5. '           ' → logprob: -15.001708984375
    6. ' ' → logprob: -15.001708984375
    7. '２' → logprob: -15.251708984375
    8. '                               ' → logprob: -15.376708984375
    9. '                           ' → logprob: -15.564208984375
    10. '    ' → logprob: -15.626708984375

Token 85: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07890532165765762
    2. ')' → logprob: -2.5789053440093994
    3. '))
' → logprob: -11.95390510559082
    4. '),' → logprob: -12.07890510559082
    5. ')))' → logprob: -13.57890510559082
    6. ')
' → logprob: -14.45390510559082
    7. ' ))' → logprob: -14.95390510559082
    8. '))

' → logprob: -15.07890510559082
    9. '):' → logprob: -15.82890510559082
    10. ')}' → logprob: -15.82890510559082

Token 86: 'd' (ID: 67)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2593466341495514
    2. 'd' → logprob: -1.884346604347229
    3. 'pairs' → logprob: -4.1343464851379395
    4. 's' → logprob: -4.2593464851379395
    5. 'edges' → logprob: -4.5093464851379395
    6. 'diff' → logprob: -5.1343464851379395
    7. 'res' → logprob: -6.1343464851379395
    8. 'distance' → logprob: -6.2593464851379395
    9. 'vals' → logprob: -6.3843464851379395
    10. 'lines' → logprob: -6.3843464851379395

Token 87: 'ists' (ID: 2549)
  Prédit: 'ists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ists' → logprob: -0.38862794637680054
    2. 'ist' → logprob: -1.1386280059814453
    3. ' =' → logprob: -7.513628005981445
    4. 'istance' → logprob: -7.763628005981445
    5. 'ef' → logprob: -8.513628005981445
    6. 'efs' → logprob: -8.513628005981445
    7. '=' → logprob: -8.888628005981445
    8. 'is' → logprob: -9.013628005981445
    9. 's' → logprob: -10.263628005981445
    10. '```' → logprob: -10.513628005981445

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002175584435463
    2. '=' → logprob: -2.350217580795288
    3. ' =[' → logprob: -13.225217819213867
    4. ' =
' → logprob: -13.475217819213867
    5. 's' → logprob: -13.475217819213867
    6. ',' → logprob: -13.850217819213867
    7. ' ' → logprob: -14.100217819213867
    8. '＝' → logprob: -14.225217819213867
    9. '=[]' → logprob: -14.350217819213867
    10. '=

' → logprob: -14.600217819213867

Token 89: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.47591644525527954
    2. '[' → logprob: -1.2259163856506348
    3. 'map' → logprob: -3.7259163856506348
    4. '[list' → logprob: -3.7259163856506348
    5. 'st' → logprob: -3.8509163856506348
    6. ' list' → logprob: -4.475916385650635
    7. ' [' → logprob: -6.350916385650635
    8. '[h' → logprob: -7.475916385650635
    9. '{' → logprob: -7.600916385650635
    10. '[(' → logprob: -7.975916385650635

Token 90: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.2567268908023834
    2. '(map' → logprob: -1.506726861000061
    3. '(h' → logprob: -5.7567267417907715
    4. '(chain' → logprob: -6.6317267417907715
    5. '(' → logprob: -8.88172721862793
    6. 'map' → logprob: -9.00672721862793
    7. 'st' → logprob: -10.75672721862793
    8. '```' → logprob: -12.00672721862793
    9. '(com' → logprob: -13.13172721862793
    10. ')' → logprob: -13.25672721862793

Token 91: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.003308062208816409
    2. 'ap' → logprob: -6.003308296203613
    3. 'arp' → logprob: -7.378308296203613
    4. 'map' → logprob: -9.128308296203613
    5. 'ar' → logprob: -10.253308296203613
    6. '(map' → logprob: -11.253308296203613
    7. 'r' → logprob: -11.253308296203613
    8. 'am' → logprob: -11.503308296203613
    9. 'art' → logprob: -12.503308296203613
    10. 'p' → logprob: -12.628308296203613

Token 92: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -2.339278580620885e-06
    2. 'map' → logprob: -13.375001907348633
    3. 'p' → logprob: -14.500001907348633
    4. '```' → logprob: -16.000001907348633
    5. 'app' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.375001907348633
    7. 'a' → logprob: -18.250001907348633
    8. 'ап' → logprob: -18.500001907348633
    9. '	ap' → logprob: -18.875001907348633
    10. 'apply' → logprob: -18.875001907348633

Token 93: '(lambda' (ID: 43341)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.07465072721242905
    2. '(lambda' → logprob: -2.699650764465332
    3. '(' → logprob: -5.449650764465332
    4. '(
' → logprob: -9.449650764465332
    5. 'hyp' → logprob: -9.449650764465332
    6. '((' → logprob: -9.824650764465332
    7. ')' → logprob: -9.824650764465332
    8. ')(' → logprob: -10.824650764465332
    9. '(H' → logprob: -10.949650764465332
    10. ' (' → logprob: -10.949650764465332

Token 94: ' i' (ID: 575)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.2917254567146301
    2. 'lambda' → logprob: -1.6667253971099854
    3. ' i' → logprob: -3.1667253971099854
    4. 'i' → logprob: -4.1667256355285645
    5. ' x' → logprob: -6.2917256355285645
    6. ' u' → logprob: -7.0417256355285645
    7. 'x' → logprob: -7.0417256355285645
    8. '(lambda' → logprob: -7.1667256355285645
    9. ' ' → logprob: -7.6667256355285645
    10. 'u' → logprob: -7.6667256355285645

Token 95: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.31618666648864746
    2. ',' → logprob: -1.3161866664886475
    3. 'j' → logprob: -6.441186904907227
    4. ',i' → logprob: -7.691186904907227
    5. ' j' → logprob: -8.066186904907227
    6. ' ,' → logprob: -8.066186904907227
    7. ',x' → logprob: -9.566186904907227
    8. '_,' → logprob: -9.941186904907227
    9. ',n' → logprob: -11.066186904907227
    10. ',u' → logprob: -11.191186904907227

Token 96: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3495906591415405
    2. ' ,' → logprob: -2.34959077835083
    3. ' :' → logprob: -2.59959077835083
    4. ':' → logprob: -2.97459077835083
    5. 'lambda' → logprob: -3.22459077835083
    6. ' lambda' → logprob: -3.59959077835083
    7. ',h' → logprob: -5.59959077835083
    8. ' points' → logprob: -7.47459077835083
    9. '=lambda' → logprob: -7.59959077835083
    10. '(lambda' → logprob: -7.72459077835083

Token 97: ' hypot' (ID: 85756)
  Prédit: 'hyp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hyp' → logprob: -0.38733038306236267
    2. ' hypot' → logprob: -1.137330412864685
    3. ' hyp' → logprob: -8.512330055236816
    4. ' hypers' → logprob: -10.262330055236816
    5. ' ' → logprob: -10.512330055236816
    6. '/h' → logprob: -10.762330055236816
    7. 'hy' → logprob: -10.762330055236816
    8. 'h' → logprob: -10.887330055236816
    9. 'int' → logprob: -10.887330055236816
    10. '(h' → logprob: -11.262330055236816

Token 98: '(points' (ID: 72131)
  Prédit: '(coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coords' → logprob: -0.5559548735618591
    2. '(points' → logprob: -1.055954933166504
    3. '(' → logprob: -2.555954933166504
    4. '(i' → logprob: -7.430954933166504
    5. '(ls' → logprob: -9.055954933166504
    6. '(co' → logprob: -9.430954933166504
    7. '(
' → logprob: -9.555954933166504
    8. 'coords' → logprob: -10.180954933166504
    9. ' (' → logprob: -10.805954933166504
    10. '((' → logprob: -11.055954933166504

Token 99: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00043698702938854694
    2. '[' → logprob: -7.750436782836914
    3. '[
' → logprob: -13.000436782836914
    4. '(i' → logprob: -14.250436782836914
    5. ')[' → logprob: -14.375436782836914
    6. ' [' → logprob: -14.625436782836914
    7. 'i' → logprob: -14.875436782836914
    8. '[I' → logprob: -15.125436782836914
    9. ')' → logprob: -15.375436782836914
    10. '[int' → logprob: -15.625436782836914

Token 100: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007532220799475908
    2. '][' → logprob: -5.257532119750977
    3. ')[' → logprob: -7.632532119750977
    4. '[i' → logprob: -7.632532119750977
    5. ')' → logprob: -8.507532119750977
    6. ',[' → logprob: -8.757532119750977
    7. ' [' → logprob: -9.132532119750977
    8. ',' → logprob: -9.257532119750977
    9. '[
' → logprob: -9.382532119750977
    10. ']' → logprob: -9.382532119750977

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.250001907348633
    3. '1' → logprob: -15.375001907348633
    4. '
' → logprob: -15.875001907348633
    5. '[' → logprob: -16.875001907348633
    6. '   ' → logprob: -16.875001907348633
    7. 'x' → logprob: -17.375001907348633
    8. '

' → logprob: -17.562501907348633
    9. ':' → logprob: -18.062501907348633
    10. ' :' → logprob: -18.687501907348633

Token 102: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18322105705738068
    2. ']-' → logprob: -1.8082211017608643
    3. ')' → logprob: -6.183220863342285
    4. '-' → logprob: -7.683220863342285
    5. ' -' → logprob: -8.058220863342285
    6. ')-' → logprob: -8.558220863342285
    7. '],' → logprob: -8.808220863342285
    8. '}' → logprob: -9.558220863342285
    9. '[' → logprob: -9.933220863342285
    10. ' ]' → logprob: -10.058220863342285

Token 103: 'points' (ID: 14011)
  Prédit: 'points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.006717863027006388
    2. ' points' → logprob: -5.006717681884766
    3. '(points' → logprob: -13.506717681884766
    4. '	points' → logprob: -13.881717681884766
    5. 'oints' → logprob: -16.631717681884766
    6. '.points' → logprob: -16.756717681884766
    7. 'point' → logprob: -17.006717681884766
    8. '<|end|>' → logprob: -17.256717681884766
    9. 'Points' → logprob: -18.006717681884766
    10. '_points' → logprob: -18.881717681884766

Token 104: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00045367187703959644
    2. 'j' → logprob: -8.00045394897461
    3. '][' → logprob: -10.12545394897461
    4. '[' → logprob: -10.12545394897461
    5. '[i' → logprob: -10.62545394897461
    6. ' j' → logprob: -11.87545394897461
    7. ',j' → logprob: -13.00045394897461
    8. ' ' → logprob: -13.62545394897461
    9. ']' → logprob: -14.12545394897461
    10. '	j' → logprob: -14.62545394897461

Token 105: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009955333080142736
    2. '[' → logprob: -7.125995635986328
    3. ' ][' → logprob: -9.750995635986328
    4. ']' → logprob: -9.875995635986328
    5. '0' → logprob: -10.500995635986328
    6. '"][' → logprob: -11.125995635986328
    7. '   ' → logprob: -11.750995635986328
    8. ''][' → logprob: -11.875995635986328
    9. '()][' → logprob: -13.000995635986328
    10. '1' → logprob: -13.250995635986328

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4378848391061183e-05
    2. ' ' → logprob: -11.375014305114746
    3. '1' → logprob: -13.250014305114746
    4. '[' → logprob: -14.000014305114746
    5. '][' → logprob: -16.250015258789062
    6. '
' → logprob: -17.062515258789062
    7. '

' → logprob: -17.125015258789062
    8. '  ' → logprob: -17.312515258789062
    9. '۰' → logprob: -17.562515258789062
    10. '   ' → logprob: -17.687515258789062

Token 107: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003925468306988478
    2. ' ,' → logprob: -5.628925323486328
    3. '),' → logprob: -8.378925323486328
    4. ',
' → logprob: -10.628925323486328
    5. '),(' → logprob: -11.378925323486328
    6. ' points' → logprob: -11.628925323486328
    7. '(points' → logprob: -11.878925323486328
    8. 'points' → logprob: -11.878925323486328
    9. '	points' → logprob: -12.253925323486328
    10. ' ' → logprob: -12.753925323486328

Token 108: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.6931532025337219
    2. 'points' → logprob: -0.6931532025337219
    3. '(points' → logprob: -12.568153381347656
    4. '	points' → logprob: -13.068153381347656
    5. '.points' → logprob: -16.318153381347656
    6. 'point' → logprob: -16.568153381347656
    7. ' ' → logprob: -17.068153381347656
    8. ' ' → logprob: -17.318153381347656
    9. 'coords' → logprob: -17.443153381347656
    10. '0' → logprob: -17.693153381347656

Token 109: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.787507714354433e-05
    2. '[j' → logprob: -11.00004768371582
    3. '][' → logprob: -11.25004768371582
    4. 'i' → logprob: -11.75004768371582
    5. '[' → logprob: -12.00004768371582
    6. 's' → logprob: -13.75004768371582
    7. 'points' → logprob: -14.50004768371582
    8. ']' → logprob: -15.25004768371582
    9. '```' → logprob: -15.25004768371582
    10. '[][' → logprob: -15.62504768371582

Token 110: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0010591294849291444
    2. '[' → logprob: -7.376059055328369
    3. ']][' → logprob: -8.751059532165527
    4. ']' → logprob: -9.376059532165527
    5. ' ][' → logprob: -9.376059532165527
    6. ')][' → logprob: -10.501059532165527
    7. '])[' → logprob: -10.626059532165527
    8. ''][' → logprob: -11.501059532165527
    9. '"][' → logprob: -11.876059532165527
    10. ')[' → logprob: -11.876059532165527

Token 111: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09428627043962479
    2. '1' → logprob: -2.4692862033843994
    3. '[' → logprob: -5.3442864418029785
    4. '][' → logprob: -7.9692864418029785
    5. 'j' → logprob: -9.59428596496582
    6. ' ' → logprob: -9.59428596496582
    7. '<|end|>' → logprob: -11.09428596496582
    8. '```' → logprob: -11.71928596496582
    9. ']][' → logprob: -12.28178596496582
    10. ']' → logprob: -12.28178596496582

Token 112: ']-' (ID: 27107)
  Prédit: ']-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.5299628973007202
    2. ']' → logprob: -1.2799628973007202
    3. '],' → logprob: -2.4049630165100098
    4. '][' → logprob: -3.9049630165100098
    5. '-' → logprob: -4.77996301651001
    6. ')' → logprob: -5.40496301651001
    7. ')-' → logprob: -5.90496301651001
    8. '],[' → logprob: -6.40496301651001
    9. '])' → logprob: -7.02996301651001
    10. '),' → logprob: -7.02996301651001

Token 113: 'points' (ID: 14011)
  Prédit: 'points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00020663968462031335
    2. ' points' → logprob: -8.50020694732666
    3. '(points' → logprob: -12.87520694732666
    4. '	points' → logprob: -15.62520694732666
    5. 'coordinates' → logprob: -16.125205993652344
    6. 'oints' → logprob: -16.625205993652344
    7. '.points' → logprob: -16.750205993652344
    8. ')' → logprob: -16.875205993652344
    9. '
' → logprob: -17.375205993652344
    10. 'point' → logprob: -17.875205993652344

Token 114: '[j' (ID: 7895)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.29502788186073303
    2. '[' → logprob: -1.7950278520584106
    3. '[j' → logprob: -2.5450279712677
    4. '1' → logprob: -5.170027732849121
    5. 'j' → logprob: -6.420027732849121
    6. '[i' → logprob: -7.170027732849121
    7. '0' → logprob: -7.795027732849121
    8. ']' → logprob: -7.795027732849121
    9. '"][' → logprob: -7.920027732849121
    10. 's' → logprob: -8.295027732849121

Token 115: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005094530060887337
    2. '1' → logprob: -5.755094528198242
    3. '[' → logprob: -7.255094528198242
    4. '])' → logprob: -8.130094528198242
    5. ']][' → logprob: -8.505094528198242
    6. '])[' → logprob: -8.880094528198242
    7. '"][' → logprob: -9.005094528198242
    8. ')][' → logprob: -9.130094528198242
    9. ']' → logprob: -9.255094528198242
    10. ''][' → logprob: -9.880094528198242

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. '0' → logprob: -11.750019073486328
    3. 'j' → logprob: -12.500019073486328
    4. ' ' → logprob: -13.125019073486328
    5. '[' → logprob: -13.500019073486328
    6. '])' → logprob: -13.625019073486328
    7. '   ' → logprob: -14.625019073486328
    8. '```' → logprob: -14.625019073486328
    9. ']' → logprob: -14.750019073486328
    10. ']))' → logprob: -15.562519073486328

Token 117: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.014503702521324158
    2. ')' → logprob: -4.264503479003906
    3. ')))' → logprob: -8.764503479003906
    4. ')),' → logprob: -9.264503479003906
    5. '))' → logprob: -10.389503479003906
    6. ' ),' → logprob: -10.889503479003906
    7. '),
' → logprob: -11.389503479003906
    8. '))),' → logprob: -11.764503479003906
    9. '),

' → logprob: -12.514503479003906
    10. ')
' → logprob: -12.889503479003906

Token 118: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.3484551012516022
    2. ' pairs' → logprob: -1.2234550714492798
    3. 'p' → logprob: -13.098455429077148
    4. '   ' → logprob: -13.348455429077148
    5. 'Pairs' → logprob: -13.473455429077148
    6. ' ' → logprob: -13.473455429077148
    7. '_pairs' → logprob: -13.598455429077148
    8. 'pair' → logprob: -13.973455429077148
    9. '  ' → logprob: -14.973455429077148
    10. '    ' → logprob: -15.348455429077148

Token 119: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005927092279307544
    2. ')' → logprob: -7.7505927085876465
    3. '))
' → logprob: -8.750593185424805
    4. ')))' → logprob: -13.375593185424805
    5. '),' → logprob: -14.250593185424805
    6. ' ))' → logprob: -14.875593185424805
    7. '))

' → logprob: -15.000593185424805
    8. ')
' → logprob: -15.875593185424805
    9. '));' → logprob: -16.250593185424805
    10. '()))' → logprob: -16.500593185424805

Token 120: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46084046363830566
    2. 'd' → logprob: -1.8358404636383057
    3. '+' → logprob: -3.0858404636383057
    4. 'max' → logprob: -3.5858404636383057
    5. '<|end|>' → logprob: -3.7108404636383057
    6. '#' → logprob: -4.335840225219727
    7. '
' → logprob: -4.335840225219727
    8. '[' → logprob: -4.710840225219727
    9. ',' → logprob: -4.835840225219727
    10. 's' → logprob: -5.210840225219727

Token 121: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.4702693819999695
    2. 'orted' → logprob: -1.2202694416046143
    3. 'ums' → logprob: -2.7202694416046143
    4. 'ort' → logprob: -5.845269203186035
    5. 'quares' → logprob: -6.345269203186035
    6. 'et' → logprob: -6.470269203186035
    7. 'cores' → logprob: -7.345269203186035
    8. 'hort' → logprob: -7.595269203186035
    9. 't' → logprob: -7.720269203186035
    10. 'p' → logprob: -7.720269203186035

Token 122: ' reduce' (ID: 10389)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.20123934745788574
    2. ' sum' → logprob: -2.3262393474578857
    3. 'reduce' → logprob: -2.7012393474578857
    4. ' reduce' → logprob: -5.201239585876465
    5. 'min' → logprob: -5.201239585876465
    6. 'um' → logprob: -5.576239585876465
    7. ' min' → logprob: -7.076239585876465
    8. 'round' → logprob: -7.576239585876465
    9. '0' → logprob: -7.701239585876465
    10. 'int' → logprob: -8.576239585876465

Token 123: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.0025351173244416714
    2. '(lambda' → logprob: -6.377535343170166
    3. '(' → logprob: -7.502535343170166
    4. '(operator' → logprob: -8.752534866333008
    5. 'add' → logprob: -9.377534866333008
    6. ' (' → logprob: -10.377534866333008
    7. '(s' → logprob: -12.877534866333008
    8. '(max' → logprob: -14.127534866333008
    9. '(sum' → logprob: -14.127534866333008
    10. ' add' → logprob: -14.377534866333008

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5783027410507202
    2. ',d' → logprob: -0.8283027410507202
    3. ' ,' → logprob: -6.07830286026001
    4. ',(' → logprob: -10.578302383422852
    5. ',p' → logprob: -11.328302383422852
    6. 'd' → logprob: -11.703302383422852
    7. ',s' → logprob: -11.953302383422852
    8. ',
' → logprob: -12.453302383422852
    9. ',[' → logprob: -12.578302383422852
    10. '(d' → logprob: -13.328302383422852

Token 125: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005353174638003111
    2. ' d' → logprob: -5.255352973937988
    3. '[' → logprob: -10.005352973937988
    4. '[d' → logprob: -11.005352973937988
    5. 'repeat' → logprob: -11.505352973937988
    6. 'chain' → logprob: -11.880352973937988
    7. '   ' → logprob: -11.880352973937988
    8. ')' → logprob: -12.005352973937988
    9. ' ' → logprob: -12.380352973937988
    10. 'map' → logprob: -12.630352973937988

Token 126: 'ists' (ID: 2549)
  Prédit: 'ists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ists' → logprob: -9.014684110297821e-06
    2. 'ist' → logprob: -12.250008583068848
    3. 's' → logprob: -13.250008583068848
    4. '[' → logprob: -14.375008583068848
    5. 'is' → logprob: -14.750008583068848
    6. 'irst' → logprob: -14.875008583068848
    7. 'i' → logprob: -15.750008583068848
    8. ' is' → logprob: -16.125009536743164
    9. 'ISTS' → logprob: -16.250009536743164
    10. '`' → logprob: -16.500009536743164

Token 127: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016910118283703923
    2. ',' → logprob: -6.626690864562988
    3. ')/' → logprob: -8.626690864562988
    4. ' )' → logprob: -9.751690864562988
    5. ')*' → logprob: -9.876690864562988
    6. ')
' → logprob: -10.626690864562988
    7. '))' → logprob: -11.126690864562988
    8. ')+' → logprob: -11.251690864562988
    9. '*' → logprob: -12.751690864562988
    10. ')`' → logprob: -12.876690864562988

Token 128: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020545389503240585
    2. ' ' → logprob: -3.895545482635498
    3. ' ' → logprob: -14.02054500579834
    4. ')' → logprob: -14.14554500579834
    5. '  ' → logprob: -14.27054500579834
    6. '   ' → logprob: -14.52054500579834
    7. '1' → logprob: -15.64554500579834
    8. '    ' → logprob: -15.77054500579834
    9. ' -' → logprob: -17.458045959472656
    10. '	' → logprob: -17.458045959472656

Token 129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005577972042374313
    2. ' ' → logprob: -7.500557899475098
    3. '-' → logprob: -13.375557899475098
    4. ')' → logprob: -13.750557899475098
    5. ' -' → logprob: -14.938057899475098
    6. '1' → logprob: -15.063057899475098
    7. '  ' → logprob: -15.188057899475098
    8. '   ' → logprob: -15.375557899475098
    9. '
' → logprob: -16.62555694580078
    10. '`' → logprob: -16.62555694580078

Token 130: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.522638169466518e-05
    2. ' )' → logprob: -11.000024795532227
    3. '))' → logprob: -12.375024795532227
    4. ')
' → logprob: -13.000024795532227
    5. ')`' → logprob: -14.500024795532227
    6. ')#' → logprob: -15.000024795532227
    7. '+' → logprob: -15.250024795532227
    8. ')+' → logprob: -16.125024795532227
    9. '),' → logprob: -16.500024795532227
    10. ')**' → logprob: -16.625024795532227

Token 131: 'b' (ID: 65)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.29018479585647583
    2. ')' → logprob: -1.915184736251831
    3. 's' → logprob: -3.290184736251831
    4. '
' → logprob: -3.540184736251831
    5. '+' → logprob: -4.79018497467041
    6. 'n' → logprob: -5.04018497467041
    7. '<|end|>' → logprob: -5.16518497467041
    8. '#' → logprob: -5.41518497467041
    9. 'p' → logprob: -6.41518497467041
    10. 'd' → logprob: -6.79018497467041

Token 132: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6014718413352966
    2. 'reak' → logprob: -1.2264719009399414
    3. 'est' → logprob: -2.6014719009399414
    4. '=' → logprob: -4.476471900939941
    5. 'y' → logprob: -4.851471900939941
    6. 'print' → logprob: -4.976471900939941
    7. 'ool' → logprob: -5.101471900939941
    8. ' =' → logprob: -5.226471900939941
    9. 'ounds' → logprob: -5.226471900939941
    10. 'e' → logprob: -5.351471900939941

Token 133: ' s' (ID: 265)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.4543921947479248
    2. 'min' → logprob: -1.7043921947479248
    3. ' float' → logprob: -2.204392194747925
    4. ' s' → logprob: -2.579392194747925
    5. ' max' → logprob: -2.829392194747925
    6. '0' → logprob: -2.954392194747925
    7. ' ' → logprob: -2.954392194747925
    8. 'float' → logprob: -3.204392194747925
    9. 'max' → logprob: -3.329392194747925
    10. 'reduce' → logprob: -3.579392194747925

Token 134: '/(' (ID: 27334)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8767839670181274
    2. '/' → logprob: -1.8767839670181274
    3. ' ' → logprob: -2.501783847808838
    4. '*' → logprob: -3.126783847808838
    5. '
' → logprob: -3.251783847808838
    6. '**' → logprob: -3.376783847808838
    7. '<|end|>' → logprob: -3.376783847808838
    8. '.' → logprob: -3.501783847808838
    9. '-' → logprob: -3.626783847808838
    10. ')' → logprob: -3.626783847808838

Token 135: 'len' (ID: 3303)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05314885079860687
    2. 'len' → logprob: -3.5531487464904785
    3. '(n' → logprob: -3.9281487464904785
    4. ' n' → logprob: -6.3031487464904785
    5. '(len' → logprob: -6.6781487464904785
    6. ' (' → logprob: -8.803149223327637
    7. ' len' → logprob: -9.303149223327637
    8. '(' → logprob: -9.428149223327637
    9. '2' → logprob: -11.178149223327637
    10. '((' → logprob: -12.428149223327637

Token 136: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.6331362724304199
    2. '(d' → logprob: -0.7581362724304199
    3. '(points' → logprob: -7.88313627243042
    4. '(' → logprob: -9.758136749267578
    5. '(s' → logprob: -10.383136749267578
    6. 'pairs' → logprob: -10.633136749267578
    7. ' pairs' → logprob: -11.633136749267578
    8. '(n' → logprob: -11.758136749267578
    9. '(ls' → logprob: -11.758136749267578
    10. 'd' → logprob: -12.008136749267578

Token 137: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.015245486050844193
    2. 'oints' → logprob: -4.76524543762207
    3. 'pairs' → logprob: -5.64024543762207
    4. ')' → logprob: -6.39024543762207
    5. 'air' → logprob: -7.01524543762207
    6. 's' → logprob: -8.64024543762207
    7. '(points' → logprob: -9.64024543762207
    8. 'r' → logprob: -9.89024543762207
    9. 'points' → logprob: -10.01524543762207
    10. '(' → logprob: -11.14024543762207

Token 138: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3870588541030884
    2. '))' → logprob: -1.1370588541030884
    3. ')))' → logprob: -9.637059211730957
    4. ')
' → logprob: -10.137059211730957
    5. '+' → logprob: -10.387059211730957
    6. '))
' → logprob: -11.012059211730957
    7. ' )' → logprob: -11.512059211730957
    8. ')+' → logprob: -11.887059211730957
    9. ')*' → logprob: -12.637059211730957
    10. ' ))' → logprob: -12.762059211730957

Token 139: 'print' (ID: 1598)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.272832453250885
    2. ')' → logprob: -2.6478323936462402
    3. '(' → logprob: -2.8978323936462402
    4. 's' → logprob: -3.5228323936462402
    5. 'n' → logprob: -3.8978323936462402
    6. '#' → logprob: -4.39783239364624
    7. '<|end|>' → logprob: -4.52283239364624
    8. ' ' → logprob: -4.64783239364624
    9. 'd' → logprob: -5.14783239364624
    10. ',' → logprob: -5.52283239364624

Token 140: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0015658074989914894
    2. '(round' → logprob: -6.751565933227539
    3. '(' → logprob: -7.876565933227539
    4. '(f' → logprob: -11.876565933227539
    5. 'b' → logprob: -12.876565933227539
    6. ' (' → logprob: -13.001565933227539
    7. 'round' → logprob: -13.376565933227539
    8. '((' → logprob: -14.751565933227539
    9. '(s' → logprob: -14.751565933227539
    10. '()' → logprob: -15.001565933227539

Token 141: '*(' (ID: 14793)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. '))' → logprob: -12.875004768371582
    3. ' )' → logprob: -13.500004768371582
    4. ')
' → logprob: -15.375004768371582
    5. ')`' → logprob: -15.750004768371582
    6. '`)' → logprob: -18.125003814697266
    7. ')))' → logprob: -18.375003814697266
    8. '')' → logprob: -18.500003814697266
    9. '),' → logprob: -18.625003814697266
    10. ')}' → logprob: -18.750003814697266

Token 142: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1792924404144287
    2. '2' → logprob: -2.6792924404144287
    3. '1' → logprob: -3.5542924404144287
    4. 'len' → logprob: -3.5542924404144287
    5. '(n' → logprob: -3.8042924404144287
    6. 'b' → logprob: -4.804292678833008
    7. '(' → logprob: -6.429292678833008
    8. '4' → logprob: -6.804292678833008
    9. '(len' → logprob: -6.804292678833008
    10. '3' → logprob: -6.929292678833008

Token 143: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0023103614803403616
    2. ' -' → logprob: -6.127310276031494
    3. ')' → logprob: -10.002310752868652
    4. '*(' → logprob: -10.002310752868652
    5. '**' → logprob: -11.377310752868652
    6. '*' → logprob: -11.377310752868652
    7. '(n' → logprob: -12.377310752868652
    8. '−' → logprob: -13.627310752868652
    9. '*n' → logprob: -13.627310752868652
    10. '<|end|>' → logprob: -14.252310752868652

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008590542711317539
    2. '2' → logprob: -7.125859260559082
    3. '3' → logprob: -10.500859260559082
    4. ' ' → logprob: -11.250859260559082
    5. '
' → logprob: -12.000859260559082
    6. '```' → logprob: -13.313359260559082
    7. '	' → logprob: -14.000859260559082
    8. '  ' → logprob: -14.313359260559082
    9. '１' → logprob: -14.375859260559082
    10. '

' → logprob: -14.500859260559082

Token 145: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01831815205514431
    2. '))' → logprob: -4.018318176269531
    3. ' )' → logprob: -9.268318176269531
    4. ')))' → logprob: -10.768318176269531
    5. '**' → logprob: -11.518318176269531
    6. ')**' → logprob: -11.518318176269531
    7. ')
' → logprob: -11.643318176269531
    8. '+' → logprob: -11.893318176269531
    9. '*' → logprob: -12.018318176269531
    10. ')`' → logprob: -13.393318176269531


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 143
Tokens correctement prédits (1ère position, stricte): 57
Tokens correctement prédits (1ère position, avec adaptation): 57
Tokens correctement prédits (top 10): 115
Précision stricte (1ère position): 39.86%
Précision adaptée (1ère position): 39.86%
Précision (top 10): 80.42%
================================================================================
