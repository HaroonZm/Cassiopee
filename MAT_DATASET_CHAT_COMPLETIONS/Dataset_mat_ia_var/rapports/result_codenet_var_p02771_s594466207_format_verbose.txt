================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

read_line_from_stdin = sys.stdin.readline

integer_values_list = list(map(int, read_line_from_stdin().split()))

number_of_unique_values = len(set(integer_values_list))

if number_of_unique_values == 1 or number_of_unique_values == 3:
    print("No")
else:
    print("Yes")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'read' (ID: 1293)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06772785633802414
    2. '\n' → logprob: -3.44272780418396
    3. 'import' → logprob: -3.81772780418396
    4. '<|end|>' → logprob: -5.817728042602539
    5. '\' → logprob: -6.317728042602539
    6. 'newline' → logprob: -6.692728042602539
    7. ',' → logprob: -6.942728042602539
    8. '' → logprob: -7.442728042602539
    9. '
' → logprob: -7.692728042602539
    10. '<|end|>' → logprob: -7.692728042602539

Token 4: '_line' (ID: 14418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004384197760373354
    2. '_' → logprob: -6.8793840408325195
    3. 'line' → logprob: -7.1293840408325195
    4. ' (' → logprob: -7.3793840408325195
    5. '()' → logprob: -7.6293840408325195
    6. 'er' → logprob: -8.00438404083252
    7. '(
' → logprob: -8.50438404083252
    8. '.' → logprob: -8.62938404083252
    9. 's' → logprob: -8.75438404083252
    10. 'space' → logprob: -8.87938404083252

Token 5: '_from' (ID: 12526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01003760751336813
    2. '()' → logprob: -4.760037422180176
    3. 's' → logprob: -6.635037422180176
    4. '('' → logprob: -10.135037422180176
    5. '(
' → logprob: -10.760037422180176
    6. ')' → logprob: -11.260037422180176
    7. '(`' → logprob: -11.885037422180176
    8. '```' → logprob: -12.635037422180176
    9. '(

' → logprob: -12.885037422180176
    10. '("' → logprob: -13.010037422180176

Token 6: '_st' (ID: 2518)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00046737297088839114
    2. '(sys' → logprob: -8.500467300415039
    3. '_' → logprob: -8.625467300415039
    4. ' (' → logprob: -10.375467300415039
    5. 'sys' → logprob: -11.000467300415039
    6. 's' → logprob: -11.750467300415039
    7. '(stdin' → logprob: -12.500467300415039
    8. '()' → logprob: -12.625467300415039
    9. '(s' → logprob: -12.750467300415039
    10. '(open' → logprob: -13.000467300415039

Token 7: 'din' (ID: 28388)
  Prédit: 'din'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'din' → logprob: -0.11294221132993698
    2. 'd' → logprob: -2.2379422187805176
    3. 'di' → logprob: -9.23794174194336
    4. 'rd' → logprob: -12.61294174194336
    5. 'ream' → logprob: -12.98794174194336
    6. 'r' → logprob: -12.98794174194336
    7. 'dio' → logprob: -12.98794174194336
    8. 'in' → logprob: -13.23794174194336
    9. 'derr' → logprob: -13.61294174194336
    10. 'dl' → logprob: -14.11294174194336

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008703332394361496
    2. '()' → logprob: -4.758703231811523
    3. ' (' → logprob: -10.508703231811523
    4. '=' → logprob: -11.008703231811523
    5. '('' → logprob: -11.133703231811523
    6. 's' → logprob: -11.508703231811523
    7. '(
' → logprob: -12.258703231811523
    8. '.' → logprob: -12.883703231811523
    9. ')' → logprob: -13.008703231811523
    10. ' =' → logprob: -13.133703231811523

Token 9: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.06200319528579712
    2. ' sys' → logprob: -2.8120031356811523
    3. 'lambda' → logprob: -10.562003135681152
    4. 'input' → logprob: -12.312003135681152
    5. ' lambda' → logprob: -12.937003135681152
    6. '(sys' → logprob: -13.562003135681152
    7. '=sys' → logprob: -13.937003135681152
    8. '	sys' → logprob: -14.937003135681152
    9. ' ' → logprob: -16.43700408935547
    10. '_sys' → logprob: -16.68700408935547

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.102253757417202
    2. '.stdin' → logprob: -2.3522536754608154
    3. '.readline' → logprob: -6.8522539138793945
    4. '.stdout' → logprob: -7.1022539138793945
    5. '.read' → logprob: -9.727253913879395
    6. '.argv' → logprob: -10.227253913879395
    7. '.import' → logprob: -10.852253913879395
    8. '.std' → logprob: -10.852253913879395
    9. '.stderr' → logprob: -11.727253913879395
    10. ' .' → logprob: -12.477253913879395

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.22302968800067902
    2. '.' → logprob: -1.7230297327041626
    3. '.read' → logprob: -3.848029613494873
    4. '.readlines' → logprob: -10.473030090332031
    5. ' .' → logprob: -11.973030090332031
    6. 'read' → logprob: -11.973030090332031
    7. '.Read' → logprob: -12.098030090332031
    8. '.\' → logprob: -12.848030090332031
    9. '.write' → logprob: -13.098030090332031
    10. '.
' → logprob: -13.098030090332031

Token 12: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2267068773508072
    2. '(' → logprob: -1.601706862449646
    3. '(
' → logprob: -7.2267069816589355
    4. '()
' → logprob: -8.101706504821777
    5. ')' → logprob: -9.101706504821777
    6. '()

' → logprob: -10.476706504821777
    7. '(

' → logprob: -10.601706504821777
    8. '
' → logprob: -10.726706504821777
    9. '().' → logprob: -11.101706504821777
    10. '```' → logprob: -11.226706504821777

Token 13: 'integer' (ID: 27378)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01830410398542881
    2. '(' → logprob: -4.018303871154785
    3. '()
' → logprob: -10.018303871154785
    4. ')' → logprob: -10.143303871154785
    5. '(
' → logprob: -11.018303871154785
    6. '```' → logprob: -11.143303871154785
    7. '#' → logprob: -11.268303871154785
    8. '()

' → logprob: -11.643303871154785
    9. 'def' → logprob: -12.893303871154785
    10. ',' → logprob: -13.143303871154785

Token 14: '_values' (ID: 20393)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08097780495882034
    2. '_' → logprob: -3.0809779167175293
    3. 's' → logprob: -3.7059779167175293
    4. '=' → logprob: -6.205977916717529
    5. '()' → logprob: -6.205977916717529
    6. ' =' → logprob: -6.580977916717529
    7. ')' → logprob: -7.580977916717529
    8. ' (' → logprob: -7.705977916717529
    9. '```' → logprob: -8.455977439880371
    10. '(s' → logprob: -9.205977439880371

Token 15: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8517503142356873
    2. '=' → logprob: -0.9767503142356873
    3. '(' → logprob: -2.226750373840332
    4. '_' → logprob: -3.101750373840332
    5. '[' → logprob: -3.351750373840332
    6. '.' → logprob: -6.101750373840332
    7. '[:]' → logprob: -6.351750373840332
    8. '()' → logprob: -6.726750373840332
    9. '[]' → logprob: -7.226750373840332
    10. ')' → logprob: -7.476750373840332

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10974292457103729
    2. '=' → logprob: -3.1097428798675537
    3. '_' → logprob: -3.4847428798675537
    4. '.' → logprob: -4.234743118286133
    5. '.append' → logprob: -4.859743118286133
    6. '[:]' → logprob: -5.609743118286133
    7. '[' → logprob: -6.859743118286133
    8. '.extend' → logprob: -7.984743118286133
    9. '.setdefault' → logprob: -8.609743118286133
    10. ' ' → logprob: -8.859743118286133

Token 17: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.07278729230165482
    2. '[]' → logprob: -3.197787284851074
    3. ' list' → logprob: -4.072787284851074
    4. ' [' → logprob: -5.072787284851074
    5. 'list' → logprob: -5.572787284851074
    6. '[' → logprob: -6.572787284851074
    7. ' ' → logprob: -7.572787284851074
    8. '[list' → logprob: -9.072787284851074
    9. '[int' → logprob: -9.322787284851074
    10. ' read' → logprob: -9.572787284851074

Token 18: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002655916614457965
    2. '(range' → logprob: -7.002655982971191
    3. '[int' → logprob: -7.877655982971191
    4. '(int' → logprob: -7.877655982971191
    5. '(read' → logprob: -8.752655982971191
    6. '(map' → logprob: -8.877655982971191
    7. '[' → logprob: -9.127655982971191
    8. '(filter' → logprob: -9.252655982971191
    9. '<|end|>' → logprob: -9.252655982971191
    10. '```' → logprob: -9.627655982971191

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.12722289562225342
    2. '(' → logprob: -2.127223014831543
    3. '(lambda' → logprob: -8.752223014831543
    4. 'int' → logprob: -9.877223014831543
    5. ')' → logprob: -10.252223014831543
    6. '(str' → logprob: -10.502223014831543
    7. '(
' → logprob: -11.377223014831543
    8. '<int' → logprob: -12.752223014831543
    9. ' int' → logprob: -13.252223014831543
    10. ' (' → logprob: -13.377223014831543

Token 20: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.27225399017333984
    2. '(sys' → logprob: -1.6472539901733398
    3. '(' → logprob: -3.39725399017334
    4. '))' → logprob: -5.89725399017334
    5. ' (' → logprob: -5.89725399017334
    6. ',' → logprob: -6.14725399017334
    7. 'read' → logprob: -6.77225399017334
    8. ')' → logprob: -7.02225399017334
    9. 'sys' → logprob: -7.77225399017334
    10. ' ,' → logprob: -8.02225399017334

Token 21: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.6328645348548889
    2. 'read' → logprob: -0.7578645348548889
    3. '(read' → logprob: -8.382864952087402
    4. ' readline' → logprob: -10.757864952087402
    5. '	read' → logprob: -12.507864952087402
    6. '.read' → logprob: -13.132864952087402
    7. ' ' → logprob: -13.382864952087402
    8. ' ))' → logprob: -13.507864952087402
    9. '))' → logprob: -13.882864952087402
    10. ' reads' → logprob: -14.007864952087402

Token 22: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -7.107425062713446e-06
    2. '_' → logprob: -12.375006675720215
    3. '_LINE' → logprob: -13.375006675720215
    4. '(_' → logprob: -14.750006675720215
    5. 'line' → logprob: -15.000006675720215
    6. '(' → logprob: -16.12500762939453
    7. ' _' → logprob: -16.25000762939453
    8. '_Line' → logprob: -16.37500762939453
    9. ')_' → logprob: -16.62500762939453
    10. '_lines' → logprob: -17.00000762939453

Token 23: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.00012523093027994037
    2. 'from' → logprob: -9.75012493133545
    3. '_to' → logprob: -11.12512493133545
    4. '_for' → logprob: -11.37512493133545
    5. ')_' → logprob: -11.50012493133545
    6. '_of' → logprob: -12.00012493133545
    7. '_line' → logprob: -12.25012493133545
    8. '(_' → logprob: -12.37512493133545
    9. '(' → logprob: -12.50012493133545
    10. '_FROM' → logprob: -13.25012493133545

Token 24: '_st' (ID: 2518)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.18388402462005615
    2. '_st' → logprob: -1.8088840246200562
    3. ')' → logprob: -6.308884143829346
    4. 'st' → logprob: -6.933884143829346
    5. 'sys' → logprob: -7.683884143829346
    6. 'stdout' → logprob: -8.058883666992188
    7. '_stdout' → logprob: -9.183883666992188
    8. '_' → logprob: -9.308883666992188
    9. '))' → logprob: -9.308883666992188
    10. '(stdin' → logprob: -9.308883666992188

Token 25: 'din' (ID: 28388)
  Prédit: 'din'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'din' → logprob: -0.10063815116882324
    2. 'd' → logprob: -2.3506381511688232
    3. 'in' → logprob: -8.975638389587402
    4. 'di' → logprob: -9.475638389587402
    5. 'stdin' → logprob: -9.475638389587402
    6. 'rin' → logprob: -10.975638389587402
    7. '```' → logprob: -11.100638389587402
    8. 'dx' → logprob: -11.225638389587402
    9. 'dn' → logprob: -11.350638389587402
    10. 'dtype' → logprob: -11.350638389587402

Token 26: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4830282926559448
    2. '()))' → logprob: -1.4830282926559448
    3. '))' → logprob: -2.2330284118652344
    4. '())' → logprob: -3.9830284118652344
    5. '()' → logprob: -4.358028411865234
    6. ')' → logprob: -4.983028411865234
    7. '('' → logprob: -5.233028411865234
    8. '(()' → logprob: -6.608028411865234
    9. '(
' → logprob: -7.358028411865234
    10. '((' → logprob: -7.483028411865234

Token 27: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.007246199529618025
    2. 'rstrip' → logprob: -5.507246017456055
    3. 'split' → logprob: -5.757246017456055
    4. ' strip' → logprob: -13.257246017456055
    5. ')' → logprob: -13.882246017456055
    6. '(strip' → logprob: -16.507246017456055
    7. '.strip' → logprob: -16.882246017456055
    8. 'replace' → logprob: -17.007246017456055
    9. ' split' → logprob: -17.882246017456055
    10. 'read' → logprob: -18.007246017456055

Token 28: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7269445061683655
    2. '()))' → logprob: -0.7269445061683655
    3. ')' → logprob: -4.476944446563721
    4. '())' → logprob: -4.601944446563721
    5. '()' → logprob: -4.726944446563721
    6. '(' → logprob: -6.601944446563721
    7. ')))' → logprob: -6.601944446563721
    8. '())))' → logprob: -8.476944923400879
    9. '()));' → logprob: -11.726944923400879
    10. ' ))' → logprob: -12.351944923400879

Token 29: 'number' (ID: 8096)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6044247150421143
    2. '.' → logprob: -1.2294247150421143
    3. '[' → logprob: -2.8544247150421143
    4. ')' → logprob: -2.9794247150421143
    5. '#' → logprob: -3.6044247150421143
    6. '=' → logprob: -5.604424476623535
    7. 'for' → logprob: -5.604424476623535
    8. 'print' → logprob: -5.979424476623535
    9. '
' → logprob: -6.354424476623535
    10. '\n' → logprob: -6.354424476623535

Token 30: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5815699100494385
    2. 's' → logprob: -1.5815699100494385
    3. '_s' → logprob: -1.7065699100494385
    4. '_of' → logprob: -2.9565699100494385
    5. '_values' → logprob: -6.831569671630859
    6. '(s' → logprob: -9.45656967163086
    7. '_space' → logprob: -9.58156967163086
    8. '_to' → logprob: -9.70656967163086
    9. '_counts' → logprob: -9.95656967163086
    10. 'of' → logprob: -10.20656967163086

Token 31: '_unique' (ID: 51840)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7969796657562256
    2. '_items' → logprob: -0.9219796657562256
    3. '_elements' → logprob: -2.6719796657562256
    4. '_values' → logprob: -3.5469796657562256
    5. '_spaces' → logprob: -4.171979904174805
    6. '_p' → logprob: -5.296979904174805
    7. '_space' → logprob: -5.296979904174805
    8. '_integer' → logprob: -5.546979904174805
    9. '_entries' → logprob: -5.671979904174805
    10. '_tokens' → logprob: -5.796979904174805

Token 32: '_values' (ID: 20393)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3806649446487427
    2. '_values' → logprob: -1.5056649446487427
    3. '_s' → logprob: -2.880664825439453
    4. '_elements' → logprob: -4.380664825439453
    5. '_unique' → logprob: -4.630664825439453
    6. '_items' → logprob: -4.755664825439453
    7. '_tokens' → logprob: -6.130664825439453
    8. 's' → logprob: -6.380664825439453
    9. '_users' → logprob: -7.130664825439453
    10. '_ids' → logprob: -7.755664825439453

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0922924131155014
    2. '=' → logprob: -2.467292308807373
    3. '_' → logprob: -5.842292308807373
    4. '.' → logprob: -8.592292785644531
    5. ' ' → logprob: -9.217292785644531
    6. '_space' → logprob: -10.467292785644531
    7. 's' → logprob: -10.717292785644531
    8. '<|end|>' → logprob: -10.717292785644531
    9. ' _' → logprob: -11.217292785644531
    10. ')' → logprob: -11.342292785644531

Token 34: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.008619185537099838
    2. 'len' → logprob: -4.75861930847168
    3. ' set' → logprob: -12.63361930847168
    4. ' ' → logprob: -13.88361930847168
    5. ' ' → logprob: -15.63361930847168
    6. '(len' → logprob: -16.25861930847168
    7. '=len' → logprob: -16.50861930847168
    8. '```' → logprob: -16.63361930847168
    9. 'set' → logprob: -17.25861930847168
    10. '	len' → logprob: -17.25861930847168

Token 35: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.16024382412433624
    2. '(' → logprob: -1.9102438688278198
    3. '(unique' → logprob: -11.41024398803711
    4. '(integer' → logprob: -12.66024398803711
    5. ' (' → logprob: -13.16024398803711
    6. '(s' → logprob: -13.41024398803711
    7. '(number' → logprob: -14.28524398803711
    8. 'set' → logprob: -15.03524398803711
    9. '(dict' → logprob: -15.28524398803711
    10. '(Set' → logprob: -16.16024398803711

Token 36: '(integer' (ID: 191023)
  Prédit: '(integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(integer' → logprob: -0.0019442226039245725
    2. '(' → logprob: -6.251944065093994
    3. 'integer' → logprob: -12.126944541931152
    4. ' (' → logprob: -12.126944541931152
    5. '(in' → logprob: -12.626944541931152
    6. '(number' → logprob: -13.876944541931152
    7. '(Integer' → logprob: -15.501944541931152
    8. ' integer' → logprob: -15.751944541931152
    9. ')' → logprob: -16.501943588256836
    10. '(
' → logprob: -17.001943588256836

Token 37: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -4.36574100604048e-06
    2. '_' → logprob: -12.500004768371582
    3. ' _' → logprob: -15.125004768371582
    4. ')_' → logprob: -16.250003814697266
    5. '_VALUES' → logprob: -16.250003814697266
    6. 'values' → logprob: -17.500003814697266
    7. '(_' → logprob: -17.625003814697266
    8. '_value' → logprob: -17.750003814697266
    9. ')' → logprob: -18.250003814697266
    10. '_vals' → logprob: -18.750003814697266

Token 38: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.052211083471775055
    2. '_values' → logprob: -3.052211046218872
    3. '))' → logprob: -5.927211284637451
    4. 'values' → logprob: -7.177211284637451
    5. 's' → logprob: -10.177210807800293
    6. ')' → logprob: -10.177210807800293
    7. 'list' → logprob: -10.302210807800293
    8. '_' → logprob: -10.427210807800293
    9. ')_' → logprob: -11.302210807800293
    10. ')))' → logprob: -11.552210807800293

Token 39: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.029770279303193092
    2. ')' → logprob: -3.5297703742980957
    3. ')))' → logprob: -11.154769897460938
    4. '()))' → logprob: -12.904769897460938
    5. '()' → logprob: -13.654769897460938
    6. '))
' → logprob: -13.779769897460938
    7. '())' → logprob: -15.654769897460938
    8. ' ))' → logprob: -15.779769897460938
    9. '),' → logprob: -15.904769897460938
    10. ')
' → logprob: -16.654769897460938

Token 40: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2798599302768707
    2. '<|end|>' → logprob: -1.5298599004745483
    3. 'print' → logprob: -4.154860019683838
    4. '
' → logprob: -5.654860019683838
    5. '```' → logprob: -6.404860019683838
    6. '#' → logprob: -6.654860019683838
    7. '%' → logprob: -7.029860019683838
    8. '(' → logprob: -7.154860019683838
    9. '+' → logprob: -7.529860019683838
    10. '<|end|>' → logprob: -7.529860019683838

Token 41: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.0015089125372469425
    2. 'number' → logprob: -6.501508712768555
    3. ' ' → logprob: -12.626508712768555
    4. ' not' → logprob: -13.751508712768555
    5. ' ' → logprob: -13.751508712768555
    6. ' len' → logprob: -13.876508712768555
    7. '	number' → logprob: -16.376508712768555
    8. '(number' → logprob: -16.501508712768555
    9. '_number' → logprob: -17.501508712768555
    10. '[number' → logprob: -17.876508712768555

Token 42: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -7.088138227118179e-05
    2. '_' → logprob: -9.625070571899414
    3. 'of' → logprob: -12.875070571899414
    4. '_o' → logprob: -14.750070571899414
    5. ' _' → logprob: -14.875070571899414
    6. '```' → logprob: -15.000070571899414
    7. '_for' → logprob: -15.375070571899414
    8. '>' → logprob: -15.625070571899414
    9. ' of' → logprob: -15.750070571899414
    10. '__' → logprob: -16.250070571899414

Token 43: '_unique' (ID: 51840)
  Prédit: '_unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_unique' → logprob: -6.992775888647884e-05
    2. '_' → logprob: -10.375069618225098
    3. 'unique' → logprob: -10.750069618225098
    4. '_values' → logprob: -11.875069618225098
    5. ' _' → logprob: -12.125069618225098
    6. '_uni' → logprob: -13.000069618225098
    7. ' unique' → logprob: -13.625069618225098
    8. ''_' → logprob: -15.500069618225098
    9. '```' → logprob: -15.750069618225098
    10. 's' → logprob: -16.125070571899414

Token 44: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -3.91732100979425e-05
    2. '_' → logprob: -10.250039100646973
    3. ' _' → logprob: -13.375039100646973
    4. '_vals' → logprob: -14.000039100646973
    5. '_value' → logprob: -14.625039100646973
    6. '_VALUES' → logprob: -15.250039100646973
    7. 'values' → logprob: -16.12504005432129
    8. 's' → logprob: -16.25004005432129
    9. '_val' → logprob: -16.62504005432129
    10. '__' → logprob: -16.62504005432129

Token 45: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.060677558183670044
    2. '>' → logprob: -3.6856775283813477
    3. ' ==' → logprob: -3.6856775283813477
    4. ' <' → logprob: -5.060677528381348
    5. ' ' → logprob: -6.935677528381348
    6. '==' → logprob: -7.560677528381348
    7. ' >=' → logprob: -7.685677528381348
    8. '<' → logprob: -9.060677528381348
    9. ' !=' → logprob: -9.560677528381348
    10. '  ' → logprob: -9.810677528381348

Token 46: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12255022674798965
    2. '1' → logprob: -2.3725502490997314
    3. '0' → logprob: -3.9975502490997314
    4. ' len' → logprob: -5.872550010681152
    5. '3' → logprob: -7.622550010681152
    6. '2' → logprob: -8.497550010681152
    7. 'len' → logprob: -8.622550010681152
    8. '4' → logprob: -11.122550010681152
    9. '5' → logprob: -11.497550010681152
    10. '6' → logprob: -12.622550010681152

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7009857296943665
    2. ' ' → logprob: -0.9509857296943665
    3. '0' → logprob: -2.3259856700897217
    4. '3' → logprob: -4.825985908508301
    5. ' len' → logprob: -5.075985908508301
    6. 'len' → logprob: -5.575985908508301
    7. '2' → logprob: -6.575985908508301
    8. '5' → logprob: -8.7009859085083
    9. '4' → logprob: -8.9509859085083
    10. '  ' → logprob: -10.5759859085083

Token 48: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -9.746380237629637e-05
    2. ' :' → logprob: -9.250097274780273
    3. ':
' → logprob: -14.125097274780273
    4. ':return' → logprob: -15.625097274780273
    5. ':**' → logprob: -16.250097274780273
    6. ':

' → logprob: -16.250097274780273
    7. ':def' → logprob: -17.500097274780273
    8. '):' → logprob: -18.375097274780273
    9. ',' → logprob: -18.500097274780273
    10. ':user' → logprob: -18.625097274780273

Token 49: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.22346757352352142
    2. 'number' → logprob: -2.0984675884246826
    3. ' len' → logprob: -2.9734675884246826
    4. 'len' → logprob: -4.3484673500061035
    5. ' not' → logprob: -4.5984673500061035
    6. ' integer' → logprob: -6.5984673500061035
    7. ' ' → logprob: -7.3484673500061035
    8. 'not' → logprob: -7.5984673500061035
    9. ' all' → logprob: -9.098467826843262
    10. '0' → logprob: -9.223467826843262

Token 50: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0002943479048553854
    2. 'of' → logprob: -8.37529468536377
    3. '_' → logprob: -11.00029468536377
    4. '__' → logprob: -11.25029468536377
    5. '_for' → logprob: -11.37529468536377
    6. '>' → logprob: -11.75029468536377
    7. ' of' → logprob: -11.87529468536377
    8. '==' → logprob: -13.00029468536377
    9. ' _' → logprob: -14.12529468536377
    10. '___' → logprob: -14.37529468536377

Token 51: '_unique' (ID: 51840)
  Prédit: '_unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_unique' → logprob: -0.42901867628097534
    2. '_values' → logprob: -1.4290187358856201
    3. 'unique' → logprob: -3.30401873588562
    4. ' ' → logprob: -3.92901873588562
    5. 'values' → logprob: -4.054018497467041
    6. '2' → logprob: -4.804018497467041
    7. '_' → logprob: -5.054018497467041
    8. '1' → logprob: -6.179018497467041
    9. 'value' → logprob: -6.179018497467041
    10. 'sys' → logprob: -6.304018497467041

Token 52: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -7.266944157890975e-05
    2. 'values' → logprob: -9.625072479248047
    3. '_' → logprob: -12.500072479248047
    4. '_value' → logprob: -14.250072479248047
    5. '_tokens' → logprob: -14.250072479248047
    6. '_unique' → logprob: -14.875072479248047
    7. ' values' → logprob: -15.375072479248047
    8. 'Values' → logprob: -15.750072479248047
    9. 's' → logprob: -16.000072479248047
    10. '_VALUES' → logprob: -16.000072479248047

Token 53: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9757296442985535
    2. ' >' → logprob: -1.2257297039031982
    3. ' <' → logprob: -1.4757297039031982
    4. ' ' → logprob: -3.2257297039031982
    5. '==' → logprob: -3.9757297039031982
    6. ' >=' → logprob: -4.100729465484619
    7. ' <=' → logprob: -4.600729465484619
    8. '>' → logprob: -4.600729465484619
    9. '<' → logprob: -5.600729465484619
    10. ' !=' → logprob: -7.725729465484619

Token 54: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1985386610031128
    2. ' ' → logprob: -2.1985387802124023
    3. '2' → logprob: -2.6985387802124023
    4. '3' → logprob: -6.948538780212402
    5. 'len' → logprob: -7.323538780212402
    6. ' len' → logprob: -9.573538780212402
    7. 'number' → logprob: -10.261038780212402
    8. '  ' → logprob: -11.073538780212402
    9. '```' → logprob: -11.511038780212402
    10. ' number' → logprob: -11.698538780212402

Token 55: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09612208604812622
    2. '2' → logprob: -2.9711220264434814
    3. ' ' → logprob: -3.5961220264434814
    4. 'len' → logprob: -4.7211222648620605
    5. '3' → logprob: -5.7211222648620605
    6. 'number' → logprob: -7.8461222648620605
    7. ' len' → logprob: -8.346121788024902
    8. '4' → logprob: -10.533621788024902
    9. ' number' → logprob: -11.096121788024902
    10. '1' → logprob: -11.221121788024902

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.868328920158092e-05
    2. ' :' → logprob: -10.500028610229492
    3. ':
' → logprob: -14.375028610229492
    4. ':**' → logprob: -15.875028610229492
    5. ':return' → logprob: -16.125028610229492
    6. ':

' → logprob: -17.000028610229492
    7. ':def' → logprob: -17.125028610229492
    8. '>:' → logprob: -17.875028610229492
    9. ' and' → logprob: -18.000028610229492
    10. ' or' → logprob: -18.125028610229492

Token 57: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1364225298166275
    2. 'print' → logprob: -2.261422634124756
    3. '   ' → logprob: -4.261422634124756
    4. ':
' → logprob: -5.386422634124756
    5. ' print' → logprob: -5.511422634124756
    6. '	print' → logprob: -8.136422157287598
    7. '
' → logprob: -9.136422157287598
    8. ' :' → logprob: -9.761422157287598
    9. '    ' → logprob: -10.761422157287598
    10. '\n' → logprob: -11.136422157287598

Token 58: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8517959713935852
    2. 'print' (adapté à ' print') → logprob: -1.3517959117889404
    3. ' print' → logprob: -1.4767959117889404
    4. '\n' → logprob: -3.2267959117889404
    5. '
' → logprob: -3.6017959117889404
    6. '    
' → logprob: -4.6017961502075195
    7. ' pass' → logprob: -5.6017961502075195
    8. '    ' → logprob: -6.2267961502075195
    9. 'pass' → logprob: -6.6017961502075195
    10. ' 
' → logprob: -7.1017961502075195

Token 59: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21659669280052185
    2. '("' → logprob: -1.9665967226028442
    3. '()' → logprob: -3.8415966033935547
    4. '(-' → logprob: -4.091596603393555
    5. '('' → logprob: -4.591596603393555
    6. '("("' → logprob: -5.966596603393555
    7. '(True' → logprob: -6.466596603393555
    8. '(False' → logprob: -6.716596603393555
    9. '("")' → logprob: -7.466596603393555
    10. '(None' → logprob: -8.716596603393555

Token 60: 'No' (ID: 3160)
  Prédit: 'NO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.8221301436424255
    2. 'Yes' → logprob: -1.4471302032470703
    3. 'No' → logprob: -1.8221302032470703
    4. 'YES' → logprob: -2.3221302032470703
    5. 'Three' → logprob: -3.3221302032470703
    6. '-' → logprob: -5.44713020324707
    7. 'Impossible' → logprob: -5.57213020324707
    8. '3' → logprob: -5.69713020324707
    9. '"' → logprob: -6.19713020324707
    10. 'Bob' → logprob: -6.32213020324707

Token 61: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00041398804751224816
    2. ')' → logprob: -8.37541389465332
    3. '!")' → logprob: -9.12541389465332
    4. '")
' → logprob: -10.75041389465332
    5. ')")' → logprob: -10.75041389465332
    6. ' ")' → logprob: -12.12541389465332
    7. 'e' → logprob: -12.12541389465332
    8. '"' → logprob: -12.12541389465332
    9. '!' → logprob: -12.62541389465332
    10. '")
' → logprob: -12.87541389465332

Token 62: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04884521663188934
    2. ' else' → logprob: -3.5488452911376953
    3. 'elif' → logprob: -4.048845291137695
    4. '
' → logprob: -7.298845291137695
    5. '<|end|>' → logprob: -7.548845291137695
    6. ' elif' → logprob: -9.423845291137695
    7. 'e' → logprob: -9.673845291137695
    8. '```' → logprob: -9.923845291137695
    9. '    
' → logprob: -11.173845291137695
    10. '   ' → logprob: -11.548845291137695

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.4285862057004124e-05
    2. ' :' → logprob: -10.50003433227539
    3. ':
' → logprob: -12.37503433227539
    4. '   ' → logprob: -13.50003433227539
    5. '():' → logprob: -14.62503433227539
    6. '<|end|>' → logprob: -15.25003433227539
    7. '    ' → logprob: -16.50003433227539
    8. '):' → logprob: -16.75003433227539
    9. ':

' → logprob: -17.12503433227539
    10. '```' → logprob: -17.25003433227539

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005639957962557673
    2. 'print' → logprob: -8.625563621520996
    3. ' print' → logprob: -8.875563621520996
    4. '       ' → logprob: -8.875563621520996
    5. '    
' → logprob: -10.500563621520996
    6. '```' → logprob: -10.625563621520996
    7. '    ' → logprob: -10.750563621520996
    8. ' ' → logprob: -11.375563621520996
    9. '   ' → logprob: -12.875563621520996
    10. '  ' → logprob: -13.000563621520996

Token 65: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4770820140838623
    2. 'print' (adapté à ' print') → logprob: -1.6020820140838623
    3. ' print' → logprob: -1.7270820140838623
    4. ' ' → logprob: -10.727082252502441
    5. ' if' → logprob: -10.727082252502441
    6. '	print' → logprob: -10.852082252502441
    7. '       ' → logprob: -10.852082252502441
    8. 'if' → logprob: -11.602082252502441
    9. '```' → logprob: -11.602082252502441
    10. '    ' → logprob: -12.102082252502441

Token 66: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06538685411214828
    2. '("' → logprob: -3.1903867721557617
    3. '("("' → logprob: -3.8153867721557617
    4. '('' → logprob: -10.315386772155762
    5. '("")' → logprob: -10.565386772155762
    6. '("(' → logprob: -10.815386772155762
    7. '("""' → logprob: -11.440386772155762
    8. '(""' → logprob: -11.565386772155762
    9. '()' → logprob: -12.815386772155762
    10. '("="' → logprob: -13.440386772155762

Token 67: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.04880809038877487
    2. '"' → logprob: -3.0488080978393555
    3. '("' → logprob: -8.673808097839355
    4. '“Yes' → logprob: -11.173808097839355
    5. 'No' → logprob: -12.298808097839355
    6. 'Ye' → logprob: -12.423808097839355
    7. '(' → logprob: -12.548808097839355
    8. 'yes' → logprob: -12.673808097839355
    9. '"No' → logprob: -12.798808097839355
    10. 'YES' → logprob: -12.923808097839355

Token 68: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -8.137130498653278e-05
    2. ')' → logprob: -10.000081062316895
    3. ')")' → logprob: -10.250081062316895
    4. '")
' → logprob: -14.625081062316895
    5. '\")' → logprob: -18.62508201599121
    6. '!")' → logprob: -18.75008201599121
    7. '}")' → logprob: -18.75008201599121
    8. '”)' → logprob: -19.12508201599121
    9. '')' → logprob: -19.12508201599121
    10. ' ")' → logprob: -19.12508201599121


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 66
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 51
Précision stricte (1ère position): 43.94%
Précision adaptée (1ère position): 43.94%
Précision (top 10): 77.27%
================================================================================
