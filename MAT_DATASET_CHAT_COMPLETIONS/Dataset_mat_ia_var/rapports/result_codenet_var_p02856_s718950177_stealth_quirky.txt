================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!/usr/bin/env python3
import sys as _s
I = _s.stdin.readline

N = int(I())
A, S = 0, 0
for _ in range(N):
    D, C = map(int, I().split())
    A, S = A + C, S + D * C

def _f(a, s):
    return (a - 1) + (s // 9) - int(s % 9 == 0)

print(_f(A, S))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!/' (ID: 20670)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/env' (ID: 34630)
  Prédit: '/env'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/env' → logprob: -0.3339137136936188
    2. '/' → logprob: -2.083913803100586
    3. '/python' → logprob: -2.083913803100586
    4. '/bin' → logprob: -3.583913803100586
    5. '/bash' → logprob: -4.958913803100586
    6. 'python' → logprob: -8.708913803100586
    7. '/b' → logprob: -11.083913803100586
    8. '/usr' → logprob: -11.958913803100586
    9. 'env' → logprob: -12.458913803100586
    10. ' /' → logprob: -12.833913803100586

Token 4: ' python' (ID: 22752)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.07900148630142212
    2. ' python' → logprob: -2.5790014266967773
    3. 'bash' → logprob: -9.329001426696777
    4. ' bash' → logprob: -11.329001426696777
    5. 'perl' → logprob: -12.704001426696777
    6. 'py' → logprob: -12.829001426696777
    7. 'php' → logprob: -13.329001426696777
    8. 'p' → logprob: -13.954001426696777
    9. 'ruby' → logprob: -14.079001426696777
    10. '/python' → logprob: -14.704001426696777

Token 5: '3' (ID: 18)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7183363437652588
    2. '3' → logprob: -1.0933363437652588
    3. 'import' → logprob: -2.218336343765259
    4. '```' → logprob: -3.218336343765259
    5. '\' → logprob: -4.09333610534668
    6. '-' → logprob: -6.09333610534668
    7. ' import' → logprob: -6.59333610534668
    8. '\r' → logprob: -6.71833610534668
    9. '  
' → logprob: -6.71833610534668
    10. '\x' → logprob: -7.09333610534668

Token 6: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.04118705168366432
    2. 'import' → logprob: -3.916187047958374
    3. '\' → logprob: -4.791187286376953
    4. '
' → logprob: -5.291187286376953
    5. '```' → logprob: -5.666187286376953
    6. '  
' → logprob: -6.791187286376953
    7. ' 
' → logprob: -6.791187286376953
    8. '' → logprob: -7.291187286376953
    9. '\x' → logprob: -8.916187286376953
    10. '\r' → logprob: -9.291187286376953

Token 7: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.04830752685666084
    2. 'import' → logprob: -3.423307418823242
    3. '
' → logprob: -5.798307418823242
    4. '```' → logprob: -5.923307418823242
    5. '\' → logprob: -6.048307418823242
    6. '  
' → logprob: -6.423307418823242
    7. '' → logprob: -6.798307418823242
    8. ' 
' → logprob: -6.798307418823242
    9. '<|end|>' → logprob: -6.798307418823242
    10. '#!/' → logprob: -8.298307418823242

Token 8: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.1361333429813385
    2. ' ' → logprob: -2.1361334323883057
    3. ' sys' → logprob: -6.761133193969727
    4. '<|end|>' → logprob: -6.761133193969727
    5. ' json' → logprob: -6.886133193969727
    6. ' space' → logprob: -7.136133193969727
    7. ' python' → logprob: -7.386133193969727
    8. ' math' → logprob: -7.761133193969727
    9. ' collections' → logprob: -7.761133193969727
    10. ' requests' → logprob: -7.761133193969727

Token 9: ' as' (ID: 472)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7235167026519775
    2. '<|end|>' → logprob: -1.2235167026519775
    3. '
' → logprob: -1.9735167026519775
    4. 'import' → logprob: -3.7235167026519775
    5. '```' → logprob: -4.098516464233398
    6. '<|end|>' → logprob: -4.348516464233398
    7. '\' → logprob: -4.848516464233398
    8. '' → logprob: -5.098516464233398
    9. 'newline' → logprob: -5.223516464233398
    10. '

' → logprob: -5.973516464233398

Token 10: ' _' (ID: 1175)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2608577013015747
    2. 'sys' → logprob: -1.5108577013015747
    3. ' sy' → logprob: -5.135857582092285
    4. 'sy' → logprob: -7.010857582092285
    5. 's' → logprob: -7.260857582092285
    6. ' s' → logprob: -8.135857582092285
    7. ' system' → logprob: -8.760857582092285
    8. ' py' → logprob: -8.760857582092285
    9. '=sys' → logprob: -9.010857582092285
    10. ' ' → logprob: -9.385857582092285

Token 11: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1873839795589447
    2. 'sys' → logprob: -1.812384009361267
    3. 'sy' → logprob: -5.062384128570557
    4. 'ys' → logprob: -7.062384128570557
    5. 'y' → logprob: -8.062383651733398
    6. '_s' → logprob: -11.062383651733398
    7. 'is' → logprob: -11.062383651733398
    8. 'sx' → logprob: -11.187383651733398
    9. 'py' → logprob: -11.312383651733398
    10. ' sys' → logprob: -11.687383651733398

Token 12: '
' (ID: 198)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.054904740303754807
    2. 'y' → logprob: -2.9299046993255615
    3. 'v' → logprob: -12.55490493774414
    4. '.' → logprob: -12.92990493774414
    5. '' → logprob: -13.05490493774414
    6. ' y' → logprob: -13.17990493774414
    7. 'YS' → logprob: -13.17990493774414
    8. 'u' → logprob: -13.30490493774414
    9. ' ys' → logprob: -13.30490493774414
    10. 'ystem' → logprob: -13.80490493774414

Token 13: 'I' (ID: 40)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0071988105773926
    2. '' → logprob: -1.5071988105773926
    3. 't' → logprob: -1.7571988105773926
    4. 'ys' → logprob: -1.8821988105773926
    5. '_' → logprob: -3.0071988105773926
    6. 'y' → logprob: -4.382198810577393
    7. 'ystem' → logprob: -5.257198810577393
    8. 'yste' → logprob: -5.757198810577393
    9. 'v' → logprob: -6.132198810577393
    10. ' ' → logprob: -6.257198810577393

Token 14: ' =' (ID: 314)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0025074053555727005
    2. 'mp' → logprob: -6.002507209777832
    3. 'mpl' → logprob: -11.752507209777832
    4. 'n' → logprob: -11.877507209777832
    5. 'mpr' → logprob: -12.252507209777832
    6. 'import' → logprob: -12.377507209777832
    7. 'nt' → logprob: -12.752507209777832
    8. '_m' → logprob: -13.377507209777832
    9. 'f' → logprob: -13.627507209777832
    10. 'mpi' → logprob: -14.502507209777832

Token 15: ' _' (ID: 1175)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.35592177510261536
    2. '_n' → logprob: -2.230921745300293
    3. 'n' → logprob: -2.980921745300293
    4. '_' → logprob: -2.980921745300293
    5. '_nt' → logprob: -3.355921745300293
    6. '_input' → logprob: -3.855921745300293
    7. 'int' → logprob: -4.230921745300293
    8. 'input' → logprob: -4.730921745300293
    9. ' ' → logprob: -6.730921745300293
    10. '_int' → logprob: -6.730921745300293

Token 16: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00863016489893198
    2. '_s' → logprob: -4.758630275726318
    3. '_' → logprob: -11.75862979888916
    4. ' s' → logprob: -12.88362979888916
    5. 'I' → logprob: -13.38362979888916
    6. '-s' → logprob: -13.63362979888916
    7. '`s' → logprob: -14.88362979888916
    8. 'm' → logprob: -15.25862979888916
    9. '```' → logprob: -15.25862979888916
    10. '_S' → logprob: -15.25862979888916

Token 17: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08911755681037903
    2. 'n' → logprob: -3.4641175270080566
    3. 'm' → logprob: -3.5891175270080566
    4. '.m' → logprob: -4.214117527008057
    5. '.n' → logprob: -5.839117527008057
    6. '.I' → logprob: -6.339117527008057
    7. ' .' → logprob: -6.589117527008057
    8. 'M' → logprob: -7.464117527008057
    9. '.i' → logprob: -7.839117527008057
    10. '.import' → logprob: -7.839117527008057

Token 18: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0775429829955101
    2. '.readline' → logprob: -3.202543020248413
    3. '.read' → logprob: -3.452543020248413
    4. 'read' → logprob: -6.202542781829834
    5. '.Read' → logprob: -9.327543258666992
    6. '.readlines' → logprob: -10.077543258666992
    7. ' .' → logprob: -10.577543258666992
    8. '<|end|>' → logprob: -10.827543258666992
    9. '.write' → logprob: -11.202543258666992
    10. '.\' → logprob: -11.327543258666992

Token 19: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23028156161308289
    2. '()' → logprob: -1.6052815914154053
    3. '(
' → logprob: -5.480281352996826
    4. ')' → logprob: -8.855281829833984
    5. '().' → logprob: -9.355281829833984
    6. '()
' → logprob: -9.480281829833984
    7. '#' → logprob: -9.730281829833984
    8. '.' → logprob: -9.730281829833984
    9. '(

' → logprob: -9.730281829833984
    10. '
' → logprob: -10.105281829833984

Token 20: 'N' (ID: 45)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004623799119144678
    2. '(' → logprob: -6.004623889923096
    3. '().' → logprob: -6.379623889923096
    4. '()
' → logprob: -8.129623413085938
    5. '(
' → logprob: -10.129623413085938
    6. '()

' → logprob: -10.879623413085938
    7. ' ()' → logprob: -10.879623413085938
    8. ')' → logprob: -11.254623413085938
    9. '
' → logprob: -11.379623413085938
    10. '())' → logprob: -11.504623413085938

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10056301951408386
    2. ' ' → logprob: -2.9755630493164062
    3. '=' → logprob: -3.2255630493164062
    4. ')' → logprob: -6.225563049316406
    5. '.' → logprob: -6.725563049316406
    6. ',' → logprob: -7.600563049316406
    7. '=int' → logprob: -8.225563049316406
    8. '  ' → logprob: -8.350563049316406
    9. ' )' → logprob: -8.475563049316406
    10. '(' → logprob: -9.475563049316406

Token 22: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.17074093222618103
    2. 'int' → logprob: -1.9207409620285034
    3. '_s' → logprob: -5.045741081237793
    4. ' _' → logprob: -5.920741081237793
    5. '=int' → logprob: -7.670741081237793
    6. ' ' → logprob: -8.670741081237793
    7. ' I' → logprob: -8.670741081237793
    8. '(int' → logprob: -8.795741081237793
    9. '_int' → logprob: -9.670741081237793
    10. 's' → logprob: -9.795741081237793

Token 23: '(I' (ID: 16705)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08103398233652115
    2. '(I' → logprob: -2.581033945083618
    3. '(N' → logprob: -6.456034183502197
    4. '('' → logprob: -7.581034183502197
    5. '(`' → logprob: -10.331033706665039
    6. '(
' → logprob: -12.081033706665039
    7. '((' → logprob: -12.456033706665039
    8. '(_' → logprob: -12.706033706665039
    9. '("("' → logprob: -13.206033706665039
    10. '("' → logprob: -13.456033706665039

Token 24: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005348078440874815
    2. '()' → logprob: -5.255348205566406
    3. '().' → logprob: -9.255348205566406
    4. ' ())' → logprob: -11.505348205566406
    5. '())
' → logprob: -12.630348205566406
    6. '(' → logprob: -13.505348205566406
    7. '()
' → logprob: -14.005348205566406
    8. '();)' → logprob: -14.130348205566406
    9. '()))' → logprob: -14.255348205566406
    10. ')' → logprob: -14.380348205566406

Token 25: 'A' (ID: 32)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11820264905691147
    2. ')' → logprob: -3.2432026863098145
    3. 'for' → logprob: -4.2432026863098145
    4. 'data' → logprob: -4.6182026863098145
    5. '_' → logprob: -4.7432026863098145
    6. 'a' → logprob: -4.8682026863098145
    7. 'n' → logprob: -5.7432026863098145
    8. '.' → logprob: -5.7432026863098145
    9. ' )' → logprob: -5.7432026863098145
    10. ' for' → logprob: -5.7432026863098145

Token 26: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06742935627698898
    2. '=' → logprob: -2.817429304122925
    3. '.' → logprob: -5.567429542541504
    4. '[' → logprob: -6.942429542541504
    5. '.append' → logprob: -7.942429542541504
    6. '_' → logprob: -9.817429542541504
    7. '[:]' → logprob: -9.817429542541504
    8. '[]' → logprob: -10.067429542541504
    9. '=[]' → logprob: -10.567429542541504
    10. '()' → logprob: -10.942429542541504

Token 27: ' S' (ID: 336)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0905629396438599
    2. '_' → logprob: -1.2155629396438599
    3. ' =' → logprob: -1.4655629396438599
    4. '=' → logprob: -2.7155628204345703
    5. ' _' → logprob: -4.09056282043457
    6. 'B' → logprob: -4.34056282043457
    7. ' [' → logprob: -4.46556282043457
    8. '[' → logprob: -4.84056282043457
    9. ' B' → logprob: -5.09056282043457
    10. ' []' → logprob: -5.46556282043457

Token 28: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12709587812423706
    2. ' =' → logprob: -2.127095937728882
    3. ',' → logprob: -8.752096176147461
    4. '=[]' → logprob: -12.502096176147461
    5. ' ' → logprob: -13.752096176147461
    6. '=input' → logprob: -13.752096176147461
    7. '_' → logprob: -14.127096176147461
    8. '[' → logprob: -15.002096176147461
    9. '=list' → logprob: -15.002096176147461
    10. '=int' → logprob: -15.377096176147461

Token 29: ' ' (ID: 220)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.4628535211086273
    2. ' [],' → logprob: -1.7128535509109497
    3. '0' → logprob: -2.46285343170166
    4. '[]' → logprob: -2.71285343170166
    5. '[' → logprob: -3.58785343170166
    6. ' [' → logprob: -5.83785343170166
    7. ' []' → logprob: -6.08785343170166
    8. '([],' → logprob: -6.21285343170166
    9. 'list' → logprob: -7.08785343170166
    10. ' ' → logprob: -7.08785343170166

Token 30: '0' (ID: 15)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.10249822586774826
    2. '0' → logprob: -3.1024982929229736
    3. 'map' → logprob: -3.7274982929229736
    4. '[' → logprob: -4.3524980545043945
    5. 'list' → logprob: -4.9774980545043945
    6. '[]' → logprob: -5.3524980545043945
    7. ' [],' → logprob: -6.6024980545043945
    8. 'div' → logprob: -7.2274980545043945
    9. '[N' → logprob: -8.102498054504395
    10. '([],' → logprob: -8.352498054504395

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003068026155233383
    2. ',
' → logprob: -6.628067970275879
    3. ' ,' → logprob: -6.878067970275879
    4. '
' → logprob: -8.753067970275879
    5. '<|end|>' → logprob: -8.878067970275879
    6. ' ' → logprob: -9.128067970275879
    7. ',N' → logprob: -9.878067970275879
    8. '```' → logprob: -10.628067970275879
    9. ',

' → logprob: -10.753067970275879
    10. '0' → logprob: -10.878067970275879

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05193088576197624
    2. ' ' → logprob: -3.5519309043884277
    3. '[]' → logprob: -4.176930904388428
    4. '''' → logprob: -6.301930904388428
    5. '""' → logprob: -6.301930904388428
    6. ' []' → logprob: -6.426930904388428
    7. '{}' → logprob: -8.30193042755127
    8. ' ''' → logprob: -8.55193042755127
    9. ''' → logprob: -8.92693042755127
    10. '_' → logprob: -9.05193042755127

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04499812051653862
    2. '[]' → logprob: -3.7949981689453125
    3. '""' → logprob: -4.6699981689453125
    4. '''' → logprob: -4.9199981689453125
    5. '{}' → logprob: -6.2949981689453125
    6. ' ' → logprob: -7.6699981689453125
    7. 'N' → logprob: -7.7949981689453125
    8. 'set' → logprob: -8.044998168945312
    9. '[]
' → logprob: -8.294998168945312
    10. '1' → logprob: -8.419998168945312

Token 34: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0088279964402318
    2. '<|end|>' → logprob: -4.883828163146973
    3. '\n' → logprob: -7.258828163146973
    4. 'for' → logprob: -8.883828163146973
    5. '
' → logprob: -8.883828163146973
    6. '<|end|>' → logprob: -9.633828163146973
    7. ' 
' → logprob: -9.758828163146973
    8. ' for' → logprob: -9.883828163146973
    9. '

' → logprob: -10.633828163146973
    10. ' ' → logprob: -11.883828163146973

Token 35: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025932958349585533
    2. ' for' → logprob: -3.775933027267456
    3. '
' → logprob: -6.150932788848877
    4. '<|end|>' → logprob: -7.900932788848877
    5. '\n' → logprob: -10.150933265686035
    6. ' 
' → logprob: -10.650933265686035
    7. 'n' → logprob: -10.900933265686035
    8. 'f' → logprob: -11.150933265686035
    9. '```' → logprob: -11.650933265686035
    10. '_' → logprob: -11.650933265686035

Token 36: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.01177428662776947
    2. ' ' → logprob: -4.511774063110352
    3. '_' → logprob: -7.511774063110352
    4. ' i' → logprob: -8.636774063110352
    5. ' range' → logprob: -14.011774063110352
    6. ' ' → logprob: -14.761774063110352
    7. ' ‌' → logprob: -14.886774063110352
    8. ' ```' → logprob: -16.01177406311035
    9. ' n' → logprob: -16.26177406311035
    10. ' _
' → logprob: -16.63677406311035

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021816655062139034
    2. ' ' → logprob: -6.252181529998779
    3. ' _' → logprob: -8.502182006835938
    4. 'in' → logprob: -10.752182006835938
    5. ' i' → logprob: -11.377182006835938
    6. '_' → logprob: -11.627182006835938
    7. 'n' → logprob: -13.377182006835938
    8. 's' → logprob: -13.502182006835938
    9. 'range' → logprob: -13.502182006835938
    10. '  ' → logprob: -13.627182006835938

Token 38: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1602710336446762
    2. 'range' → logprob: -1.9102710485458374
    3. '_' → logprob: -10.535270690917969
    4. ' ' → logprob: -12.035270690917969
    5. ' _' → logprob: -12.785270690917969
    6. 'I' → logprob: -13.160270690917969
    7. 'r' → logprob: -13.410270690917969
    8. 'rang' → logprob: -13.535270690917969
    9. ' I' → logprob: -13.660270690917969
    10. ' r' → logprob: -13.785270690917969

Token 39: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00247981958091259
    2. '(' → logprob: -6.0024800300598145
    3. '(I' → logprob: -13.377479553222656
    4. '(n' → logprob: -13.377479553222656
    5. ' (' → logprob: -14.252479553222656
    6. '(
' → logprob: -15.502479553222656
    7. '(int' → logprob: -16.252479553222656
    8. 'N' → logprob: -16.877479553222656
    9. '(A' → logprob: -17.377479553222656
    10. '()' → logprob: -17.627479553222656

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008665603818371892
    2. ':' → logprob: -8.500866889953613
    3. ')' → logprob: -8.625866889953613
    4. '+' → logprob: -8.750866889953613
    5. '):
' → logprob: -8.750866889953613
    6. ' ):' → logprob: -8.750866889953613
    7. '():' → logprob: -13.125866889953613
    8. ' ' → logprob: -13.750866889953613
    9. '+:' → logprob: -14.000866889953613
    10. '-' → logprob: -14.375866889953613

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2314833104610443
    2. ' line' → logprob: -2.606483221054077
    3. ' ' → logprob: -3.106483221054077
    4. ' a' → logprob: -3.606483221054077
    5. ' s' → logprob: -3.606483221054077
    6. ' x' → logprob: -4.481483459472656
    7. '    ' → logprob: -5.356483459472656
    8. ' A' → logprob: -5.481483459472656
    9. ' t' → logprob: -5.731483459472656
    10. 'a' → logprob: -5.981483459472656

Token 42: ' D' (ID: 415)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1178432703018188
    2. ' x' → logprob: -1.6178432703018188
    3. 'x' → logprob: -1.8678432703018188
    4. ' a' → logprob: -1.8678432703018188
    5. ' v' → logprob: -3.2428431510925293
    6. ' n' → logprob: -3.7428431510925293
    7. 'v' → logprob: -3.8678431510925293
    8. ' l' → logprob: -4.367843151092529
    9. ' t' → logprob: -4.617843151092529
    10. '   ' → logprob: -4.617843151092529

Token 43: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48924389481544495
    2. '=' → logprob: -0.9892438650131226
    3. ',' → logprob: -4.364243984222412
    4. '=int' → logprob: -6.739243984222412
    5. ' ' → logprob: -7.864243984222412
    6. '   ' → logprob: -8.364243507385254
    7. ' ,' → logprob: -8.989243507385254
    8. ',a' → logprob: -9.364243507385254
    9. '  ' → logprob: -10.239243507385254
    10. ',A' → logprob: -10.364243507385254

Token 44: ' C' (ID: 363)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.8886699080467224
    2. ' V' → logprob: -2.388669967651367
    3. 'T' → logprob: -2.763669967651367
    4. 'M' → logprob: -2.888669967651367
    5. ' M' → logprob: -3.513669967651367
    6. 'd' → logprob: -3.513669967651367
    7. 'W' → logprob: -3.638669967651367
    8. '_' → logprob: -3.763669967651367
    9. 'C' → logprob: -3.888669967651367
    10. 'v' → logprob: -4.013669967651367

Token 45: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17974971234798431
    2. ' =' → logprob: -1.8047497272491455
    3. ' ' → logprob: -12.679749488830566
    4. ',' → logprob: -14.554749488830566
    5. ')' → logprob: -15.054749488830566
    6. '=_' → logprob: -15.429749488830566
    7. '=line' → logprob: -15.554749488830566
    8. '=int' → logprob: -16.054750442504883
    9. '   ' → logprob: -16.054750442504883
    10. '＝' → logprob: -16.179750442504883

Token 46: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.05505187064409256
    2. 'map' → logprob: -2.930051803588867
    3. ' I' → logprob: -9.680051803588867
    4. 'I' → logprob: -10.555051803588867
    5. ' ' → logprob: -10.680051803588867
    6. ' _' → logprob: -10.680051803588867
    7. '_map' → logprob: -10.930051803588867
    8. '(map' → logprob: -12.430051803588867
    9. '_' → logprob: -12.555051803588867
    10. '	map' → logprob: -12.930051803588867

Token 47: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.033985674381256104
    2. '(' → logprob: -3.4089856147766113
    3. '(str' → logprob: -8.40898609161377
    4. '(lambda' → logprob: -9.65898609161377
    5. '<|end|>' → logprob: -11.28398609161377
    6. '[int' → logprob: -11.53398609161377
    7. '(
' → logprob: -11.78398609161377
    8. '<int' → logprob: -12.28398609161377
    9. '(eval' → logprob: -12.28398609161377
    10. '(float' → logprob: -13.03398609161377

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5558364987373352
    2. '(I' → logprob: -1.4308364391326904
    3. ',I' → logprob: -1.6808364391326904
    4. ' ,' → logprob: -7.8058366775512695
    5. '(' → logprob: -8.55583667755127
    6. ',_' → logprob: -8.68083667755127
    7. 'I' → logprob: -8.93083667755127
    8. ' I' → logprob: -9.55583667755127
    9. '(),' → logprob: -10.43083667755127
    10. ')' → logprob: -10.55583667755127

Token 49: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.3869333863258362
    2. ' I' → logprob: -1.1369333267211914
    3. '_I' → logprob: -10.386933326721191
    4. ')' → logprob: -11.386933326721191
    5. ' ' → logprob: -12.011933326721191
    6. '_' → logprob: -12.886933326721191
    7. '_input' → logprob: -13.011933326721191
    8. ' _' → logprob: -13.136933326721191
    9. '	I' → logprob: -13.136933326721191
    10. '   ' → logprob: -13.386933326721191

Token 50: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.56102097814437e-05
    2. '()' → logprob: -10.250045776367188
    3. '())' → logprob: -11.750045776367188
    4. '()))' → logprob: -14.000045776367188
    5. ' ().' → logprob: -14.375045776367188
    6. ')' → logprob: -14.750045776367188
    7. '()
' → logprob: -15.000045776367188
    8. '(' → logprob: -15.750045776367188
    9. '))' → logprob: -17.250045776367188
    10. '()

' → logprob: -18.625045776367188

Token 51: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008784979581832886
    2. 'strip' → logprob: -4.758784770965576
    3. 'rstrip' → logprob: -8.758785247802734
    4. ' split' → logprob: -11.758785247802734
    5. '(split' → logprob: -12.633785247802734
    6. '().' → logprob: -14.008785247802734
    7. 'spl' → logprob: -14.508785247802734
    8. 'sp' → logprob: -14.883785247802734
    9. 'rs' → logprob: -15.633785247802734
    10. ')' → logprob: -15.758785247802734

Token 52: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.49283742904663086
    2. ')' → logprob: -0.9928374290466309
    3. '))' → logprob: -4.367837429046631
    4. '()' → logprob: -5.367837429046631
    5. '()))' → logprob: -6.742837429046631
    6. '(' → logprob: -10.117837905883789
    7. '())
' → logprob: -11.742837905883789
    8. ')`' → logprob: -12.992837905883789
    9. '(),' → logprob: -13.242837905883789
    10. ')")' → logprob: -13.367837905883789

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9169678092002869
    2. '
' → logprob: -1.2919678688049316
    3. '<|end|>' → logprob: -1.6669678688049316
    4. ' ' → logprob: -3.0419678688049316
    5. ' 
' → logprob: -3.2919678688049316
    6. '    
' → logprob: -4.041967868804932
    7. '  ' → logprob: -4.791967868804932
    8. ')' → logprob: -4.791967868804932
    9. '  
' → logprob: -5.166967868804932
    10. 'S' → logprob: -6.041967868804932

Token 54: ' A' (ID: 355)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.7182427048683167
    2. ' S' → logprob: -1.3432426452636719
    3. 'A' (adapté à ' A') → logprob: -1.9682426452636719
    4. ' A' → logprob: -2.593242645263672
    5. '   ' → logprob: -3.593242645263672
    6. ' if' → logprob: -5.093242645263672
    7. ' ' → logprob: -6.718242645263672
    8. 'if' → logprob: -7.593242645263672
    9. 'C' → logprob: -7.843242645263672
    10. '    ' → logprob: -7.968242645263672

Token 55: ',' (ID: 11)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2838141620159149
    2. ' +=' → logprob: -1.4088141918182373
    3. '+' → logprob: -6.033813953399658
    4. ',' → logprob: -9.783814430236816
    5. '=' → logprob: -9.783814430236816
    6. '+=(' → logprob: -9.908814430236816
    7. ' =' → logprob: -10.533814430236816
    8. ' ,' → logprob: -10.783814430236816
    9. ' +' → logprob: -11.533814430236816
    10. '+,' → logprob: -11.658814430236816

Token 56: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.31714898347854614
    2. ' S' → logprob: -1.3171489238739014
    3. 'A' → logprob: -7.3171491622924805
    4. 'C' → logprob: -7.4421491622924805
    5. ' =' → logprob: -7.5671491622924805
    6. ' A' → logprob: -7.6921491622924805
    7. 'D' → logprob: -8.31714916229248
    8. ' ' → logprob: -8.31714916229248
    9. ' C' → logprob: -8.31714916229248
    10. '_' → logprob: -8.56714916229248

Token 57: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6217765212059021
    2. '+=' → logprob: -0.8717765212059021
    3. ' =' → logprob: -3.621776580810547
    4. ' +=' → logprob: -4.246776580810547
    5. '+' → logprob: -5.621776580810547
    6. '+=(' → logprob: -9.121776580810547
    7. '=A' → logprob: -12.496776580810547
    8. '-=' → logprob: -12.871776580810547
    9. '++' → logprob: -12.871776580810547
    10. ' +' → logprob: -12.871776580810547

Token 58: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2556164264678955
    2. ' A' → logprob: -1.5056164264678955
    3. 'S' → logprob: -6.380616188049316
    4. 'D' → logprob: -7.505616188049316
    5. ' S' → logprob: -8.005616188049316
    6. ' D' → logprob: -8.380616188049316
    7. 'C' → logprob: -8.505616188049316
    8. ' ' → logprob: -8.630616188049316
    9. '0' → logprob: -8.755616188049316
    10. '(A' → logprob: -9.505616188049316

Token 59: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5826900601387024
    2. '+D' → logprob: -1.2076900005340576
    3. ' +' → logprob: -1.9576900005340576
    4. '+C' → logprob: -6.832690238952637
    5. 'D' → logprob: -9.207690238952637
    6. '-D' → logprob: -9.957690238952637
    7. ',' → logprob: -10.207690238952637
    8. '-' → logprob: -10.332690238952637
    9. '*' → logprob: -10.332690238952637
    10. '+A' → logprob: -10.582690238952637

Token 60: ' C' (ID: 363)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.04320402815937996
    2. ' D' → logprob: -3.2932040691375732
    3. 'C' → logprob: -5.418203830718994
    4. ' ' → logprob: -8.293204307556152
    5. ' C' → logprob: -8.418204307556152
    6. '(D' → logprob: -9.793204307556152
    7. '1' → logprob: -10.043204307556152
    8. ' (' → logprob: -10.293204307556152
    9. '(C' → logprob: -10.668204307556152
    10. '   ' → logprob: -10.918204307556152

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021505149081349373
    2. '*' → logprob: -4.521505355834961
    3. ' *' → logprob: -5.021505355834961
    4. ' ,' → logprob: -6.021505355834961
    5. ',D' → logprob: -6.771505355834961
    6. 'D' → logprob: -9.521505355834961
    7. '*C' → logprob: -9.896505355834961
    8. '*,' → logprob: -10.896505355834961
    9. ',C' → logprob: -11.271505355834961
    10. ' D' → logprob: -11.271505355834961

Token 62: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.41606131196022034
    2. ' S' → logprob: -1.541061282157898
    3. 'D' → logprob: -2.6660614013671875
    4. ' D' → logprob: -3.1660614013671875
    5. 'A' → logprob: -5.0410614013671875
    6. ' A' → logprob: -5.2910614013671875
    7. ' max' → logprob: -7.0410614013671875
    8. 'max' → logprob: -7.2910614013671875
    9. 'C' → logprob: -7.4160614013671875
    10. ' ' → logprob: -7.7910614013671875

Token 63: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6338506937026978
    2. ' +' → logprob: -0.7588506937026978
    3. '+D' → logprob: -6.758850574493408
    4. '+C' → logprob: -11.008851051330566
    5. ' ' → logprob: -11.133851051330566
    6. '+A' → logprob: -12.133851051330566
    7. '>' → logprob: -12.196351051330566
    8. '+d' → logprob: -12.258851051330566
    9. 'D' → logprob: -12.258851051330566
    10. '-' → logprob: -12.258851051330566

Token 64: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.025744179263710976
    2. ' D' → logprob: -4.0257439613342285
    3. 'C' → logprob: -5.0257439613342285
    4. '(D' → logprob: -7.9007439613342285
    5. ' C' → logprob: -9.025744438171387
    6. ' ' → logprob: -9.150744438171387
    7. 'A' → logprob: -9.275744438171387
    8. ' (' → logprob: -9.275744438171387
    9. '(C' → logprob: -9.650744438171387
    10. '(' → logprob: -9.775744438171387

Token 65: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6787902116775513
    2. '+' → logprob: -2.3037900924682617
    3. ' ' → logprob: -2.3037900924682617
    4. ' if' → logprob: -2.4287900924682617
    5. '*' → logprob: -3.1787900924682617
    6. ' *' → logprob: -3.3037900924682617
    7. '<|end|>' → logprob: -3.4287900924682617
    8. 'if' → logprob: -3.5537900924682617
    9. ' +' → logprob: -4.678790092468262
    10. ' 
' → logprob: -4.678790092468262

Token 66: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0022004556376487017
    2. ' C' → logprob: -6.127200603485107
    3. 'A' → logprob: -11.75220012664795
    4. ' ' → logprob: -13.00220012664795
    5. '<|end|>' → logprob: -13.12720012664795
    6. '	C' → logprob: -14.00220012664795
    7. '   ' → logprob: -14.37720012664795
    8. 'D' → logprob: -14.62720012664795
    9. '  ' → logprob: -15.12720012664795
    10. 'S' → logprob: -15.12720012664795

Token 67: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1039958000183105
    2. '
' → logprob: -1.4789958000183105
    3. '<|end|>' → logprob: -1.4789958000183105
    4. '+' → logprob: -2.7289958000183105
    5. ' ' → logprob: -3.3539958000183105
    6. ')' → logprob: -3.4789958000183105
    7. ' if' → logprob: -3.9789958000183105
    8. 'if' → logprob: -4.2289958000183105
    9. ' print' → logprob: -4.8539958000183105
    10. ' 
' → logprob: -4.9789958000183105

Token 68: 'def' (ID: 1314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09877414256334305
    2. 'if' → logprob: -2.9737741947174072
    3. ' if' → logprob: -4.223773956298828
    4. ')' → logprob: -4.348773956298828
    5. ' print' → logprob: -5.098773956298828
    6. 'S' → logprob: -5.723773956298828
    7. 'A' → logprob: -6.848773956298828
    8. ')
' → logprob: -7.098773956298828
    9. ' 
' → logprob: -7.973773956298828
    10. ',' → logprob: -7.973773956298828

Token 69: ' _' (ID: 1175)
  Prédit: ' average'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' average' → logprob: -0.7264683246612549
    2. ' calculate' → logprob: -1.4764683246612549
    3. ' total' → logprob: -2.851468324661255
    4. ' S' → logprob: -3.726468324661255
    5. ' solve' → logprob: -3.851468324661255
    6. '_' → logprob: -4.226468086242676
    7. ' area' → logprob: -4.351468086242676
    8. ' mean' → logprob: -4.351468086242676
    9. ' ' → logprob: -4.476468086242676
    10. ' factorial' → logprob: -4.601468086242676

Token 70: 'f' (ID: 69)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -1.6807336807250977
    2. 'avg' → logprob: -2.3057336807250977
    3. 'S' → logprob: -2.6807336807250977
    4. '():' → logprob: -2.9307336807250977
    5. 's' → logprob: -2.9307336807250977
    6. 'calc' → logprob: -2.9307336807250977
    7. 'main' → logprob: -3.0557336807250977
    8. 'sum' → logprob: -3.3057336807250977
    9. 'a' → logprob: -3.4307336807250977
    10. 'g' → logprob: -3.5557336807250977

Token 71: '(a' (ID: 6271)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.44171279668807983
    2. '(' → logprob: -2.3167128562927246
    3. '(S' → logprob: -2.4417128562927246
    4. '(a' → logprob: -2.5667128562927246
    5. '(t' → logprob: -3.6917128562927246
    6. '(A' → logprob: -3.6917128562927246
    7. '(n' → logprob: -4.316712856292725
    8. '(s' → logprob: -5.191712856292725
    9. '(i' → logprob: -5.191712856292725
    10. '(u' → logprob: -5.816712856292725

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00942324846982956
    2. '):' → logprob: -4.88442325592041
    3. ',b' → logprob: -7.50942325592041
    4. ' ,' → logprob: -8.00942325592041
    5. ')' → logprob: -8.38442325592041
    6. ':' → logprob: -9.25942325592041
    7. ',a' → logprob: -9.25942325592041
    8. ',n' → logprob: -9.50942325592041
    9. '):
' → logprob: -9.88442325592041
    10. ',s' → logprob: -10.00942325592041

Token 73: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.29618600010871887
    2. 'b' → logprob: -1.7961859703063965
    3. ' s' → logprob: -2.5461859703063965
    4. ' b' → logprob: -4.7961859703063965
    5. 'n' → logprob: -7.2961859703063965
    6. 'c' → logprob: -7.2961859703063965
    7. 'l' → logprob: -8.171186447143555
    8. 'p' → logprob: -8.296186447143555
    9. 'x' → logprob: -8.421186447143555
    10. 'm' → logprob: -8.421186447143555

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10837287455797195
    2. ',' → logprob: -2.983372926712036
    3. '):
' → logprob: -2.983372926712036
    4. ':' → logprob: -7.483372688293457
    5. '):
' → logprob: -7.983372688293457
    6. ')' → logprob: -8.108372688293457
    7. ' ):' → logprob: -9.983372688293457
    8. ',a' → logprob: -9.983372688293457
    9. '=' → logprob: -10.608372688293457
    10. '   ' → logprob: -10.608372688293457

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018204499036073685
    2. ' return' → logprob: -4.893204689025879
    3. ' r' → logprob: -5.768204689025879
    4. '    ' → logprob: -5.768204689025879
    5. ' if' → logprob: -6.268204689025879
    6. ' ' → logprob: -7.393204689025879
    7. ',' → logprob: -8.268204689025879
    8. 'r' → logprob: -8.518204689025879
    9. ' 
' → logprob: -9.143204689025879
    10. ' a' → logprob: -9.393204689025879

Token 76: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6701149940490723
    2. ' if' → logprob: -1.2951149940490723
    3. ' return' → logprob: -2.6701149940490723
    4. 'if' → logprob: -3.0451149940490723
    5. ' r' → logprob: -3.5451149940490723
    6. 'r' → logprob: -3.7951149940490723
    7. 'return' (adapté à ' return') → logprob: -4.795114994049072
    8. ' l' → logprob: -5.170114994049072
    9. ' a' → logprob: -5.295114994049072
    10. 'l' → logprob: -5.420114994049072

Token 77: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.39698702096939087
    2. ' s' → logprob: -1.521986961364746
    3. 'a' → logprob: -2.646986961364746
    4. ' a' → logprob: -4.521986961364746
    5. '(s' → logprob: -4.896986961364746
    6. ' (' → logprob: -5.021986961364746
    7. 'S' → logprob: -5.771986961364746
    8. '0' → logprob: -6.021986961364746
    9. '(' → logprob: -6.646986961364746
    10. '(a' → logprob: -6.896986961364746

Token 78: 'a' (ID: 64)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.386151522397995
    2. 'a' → logprob: -1.2611515522003174
    3. '2' → logprob: -4.011151313781738
    4. ' s' → logprob: -4.761151313781738
    5. ' a' → logprob: -5.886151313781738
    6. '(' → logprob: -6.386151313781738
    7. '1' → logprob: -7.136151313781738
    8. '-' → logprob: -7.136151313781738
    9. '   ' → logprob: -7.261151313781738
    10. '(s' → logprob: -7.261151313781738

Token 79: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6428676247596741
    2. '+' → logprob: -1.7678675651550293
    3. '*' → logprob: -2.5178675651550293
    4. ' *' → logprob: -2.6428675651550293
    5. ',' → logprob: -2.8928675651550293
    6. ' -' → logprob: -2.8928675651550293
    7. '-' → logprob: -4.017867565155029
    8. '**' → logprob: -4.767867565155029
    9. '*s' → logprob: -6.017867565155029
    10. ' ,' → logprob: -6.142867565155029

Token 80: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5952761769294739
    2. '(' → logprob: -1.595276117324829
    3. '(s' → logprob: -2.345276117324829
    4. 's' → logprob: -2.845276117324829
    5. ' (' → logprob: -2.970276117324829
    6. ' ' → logprob: -3.970276117324829
    7. '((' → logprob: -4.220276355743408
    8. ' s' → logprob: -5.470276355743408
    9. ' ((' → logprob: -6.720276355743408
    10. '(a' → logprob: -7.845276355743408

Token 81: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8899849653244019
    2. '1' → logprob: -1.0149849653244019
    3. '(s' → logprob: -2.0149850845336914
    4. '(' → logprob: -2.6399850845336914
    5. '((' → logprob: -4.264985084533691
    6. ' (' → logprob: -6.139985084533691
    7. '2' → logprob: -6.514985084533691
    8. ' ' → logprob: -6.889985084533691
    9. '(abs' → logprob: -7.389985084533691
    10. '(a' → logprob: -7.514985084533691

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011996233835816383
    2. ' +' → logprob: -5.261996269226074
    3. ')*' → logprob: -6.011996269226074
    4. '+' → logprob: -6.761996269226074
    5. ')**' → logprob: -7.136996269226074
    6. ')*(' → logprob: -7.636996269226074
    7. ')//' → logprob: -7.886996269226074
    8. ' )' → logprob: -8.261996269226074
    9. '*' → logprob: -8.386996269226074
    10. ')>>' → logprob: -8.636996269226074

Token 83: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7381526827812195
    2. '//' → logprob: -1.2381527423858643
    3. '+' → logprob: -2.2381527423858643
    4. ' //' → logprob: -2.6131527423858643
    5. '*s' → logprob: -4.488152503967285
    6. ' +' → logprob: -4.738152503967285
    7. ' *' → logprob: -4.738152503967285
    8. '*(' → logprob: -5.238152503967285
    9. 's' → logprob: -5.488152503967285
    10. ' if' → logprob: -5.988152503967285

Token 84: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9555020332336426
    2. ' s' → logprob: -1.0805020332336426
    3. '(' → logprob: -2.0805020332336426
    4. 's' → logprob: -2.4555020332336426
    5. '(s' → logprob: -3.0805020332336426
    6. '((' → logprob: -4.580502033233643
    7. ' ((' → logprob: -5.580502033233643
    8. ' ' → logprob: -5.705502033233643
    9. '1' → logprob: -7.455502033233643
    10. '(a' → logprob: -8.205501556396484

Token 85: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7606238126754761
    2. ' s' → logprob: -0.7606238126754761
    3. ' (' → logprob: -3.3856239318847656
    4. '(s' → logprob: -3.7606239318847656
    5. '(' → logprob: -5.385623931884766
    6. '((' → logprob: -7.010623931884766
    7. ' ' → logprob: -7.385623931884766
    8. '1' → logprob: -7.885623931884766
    9. 'a' → logprob: -8.010623931884766
    10. ' ((' → logprob: -8.135623931884766

Token 86: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.22242480516433716
    2. ')' → logprob: -2.3474247455596924
    3. '//' → logprob: -2.4724247455596924
    4. ' /' → logprob: -4.7224249839782715
    5. ' )' → logprob: -5.4724249839782715
    6. '/' → logprob: -6.7224249839782715
    7. '/a' → logprob: -6.7224249839782715
    8. ' +' → logprob: -6.9724249839782715
    9. ' -' → logprob: -7.3474249839782715
    10. '-' → logprob: -7.7224249839782715

Token 87: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05490666255354881
    2. ' a' → logprob: -2.9299066066741943
    3. ' ' → logprob: -11.054906845092773
    4. '(a' → logprob: -13.179906845092773
    5. ' (' → logprob: -13.679906845092773
    6. '   ' → logprob: -13.804906845092773
    7. '  ' → logprob: -14.054906845092773
    8. 'A' → logprob: -14.304906845092773
    9. '	a' → logprob: -14.429906845092773
    10. '2' → logprob: -14.554906845092773

Token 88: '9' (ID: 24)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0010723463492468
    2. ' a' → logprob: -6.876072406768799
    3. '(a' → logprob: -10.87607192993164
    4. '(' → logprob: -12.00107192993164
    5. ' ' → logprob: -12.25107192993164
    6. ' (' → logprob: -12.87607192993164
    7. 'A' → logprob: -13.25107192993164
    8. '_a' → logprob: -13.25107192993164
    9. '   ' → logprob: -14.12607192993164
    10. '  ' → logprob: -14.75107192993164

Token 89: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008191835135221481
    2. ' )' → logprob: -6.00819206237793
    3. ' if' → logprob: -6.63319206237793
    4. '+' → logprob: -7.25819206237793
    5. ' +' → logprob: -7.25819206237793
    6. ')
' → logprob: -7.25819206237793
    7. ')+' → logprob: -7.50819206237793
    8. ' -' → logprob: -8.00819206237793
    9. '0' → logprob: -8.50819206237793
    10. ')+(' → logprob: -8.75819206237793

Token 90: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6778477430343628
    2. '<|end|>' → logprob: -0.8028477430343628
    3. '\n' → logprob: -4.552847862243652
    4. ')' → logprob: -4.677847862243652
    5. '*' → logprob: -4.927847862243652
    6. '+' → logprob: -5.052847862243652
    7. '(' → logprob: -5.677847862243652
    8. '```' → logprob: -6.427847862243652
    9. '(
' → logprob: -6.802847862243652
    10. '<|end|>' → logprob: -6.927847862243652

Token 91: ' int' (ID: 677)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9888112545013428
    2. '1' → logprob: -1.8638112545013428
    3. '((' → logprob: -2.2388112545013428
    4. '(a' → logprob: -2.2388112545013428
    5. '(' → logprob: -2.6138112545013428
    6. ' ((' → logprob: -2.6138112545013428
    7. ' ' → logprob: -2.8638112545013428
    8. '(s' → logprob: -3.9888112545013428
    9. ' min' → logprob: -4.363811492919922
    10. 'min' → logprob: -5.488811492919922

Token 92: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.3804488778114319
    2. '(a' → logprob: -1.755448818206787
    3. '(' → logprob: -2.130448818206787
    4. '((' → logprob: -4.505448818206787
    5. '(bool' → logprob: -5.005448818206787
    6. '(not' → logprob: -5.505448818206787
    7. '(len' → logprob: -7.505448818206787
    8. '(A' → logprob: -8.255449295043945
    9. '(abs' → logprob: -8.255449295043945
    10. '(False' → logprob: -8.505449295043945

Token 93: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.24787141382694244
    2. ' %' → logprob: -2.1228713989257812
    3. '==' → logprob: -2.8728713989257812
    4. '/' → logprob: -3.8728713989257812
    5. '>' → logprob: -4.997871398925781
    6. ' ==' → logprob: -5.122871398925781
    7. ' ' → logprob: -5.997871398925781
    8. ')' → logprob: -6.247871398925781
    9. ' /' → logprob: -6.622871398925781
    10. '>=' → logprob: -6.872871398925781

Token 94: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.020728852599859238
    2. ' ' → logprob: -3.895728826522827
    3. '10' → logprob: -9.395729064941406
    4. '99' → logprob: -10.895729064941406
    5. '91' → logprob: -11.270729064941406
    6. 'a' → logprob: -11.770729064941406
    7. '   ' → logprob: -12.145729064941406
    8. '  ' → logprob: -12.208229064941406
    9. '90' → logprob: -12.395729064941406
    10. '999' → logprob: -12.520729064941406

Token 95: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.779520092299208e-05
    2. ' ' → logprob: -9.625078201293945
    3. '10' → logprob: -12.875078201293945
    4. '90' → logprob: -13.000078201293945
    5. '91' → logprob: -13.687578201293945
    6. '99' → logprob: -14.187578201293945
    7. '  ' → logprob: -14.562578201293945
    8. '919' → logprob: -14.812578201293945
    9. '916' → logprob: -14.937578201293945
    10. '910' → logprob: -15.062578201293945

Token 96: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.44250455498695374
    2. '!=' → logprob: -1.8175045251846313
    3. ')' → logprob: -2.692504644393921
    4. ' ==' → logprob: -2.817504644393921
    5. ' !=' → logprob: -3.442504644393921
    6. '>' → logprob: -3.567504644393921
    7. ' ' → logprob: -5.442504405975342
    8. '0' → logprob: -6.817504405975342
    9. ' >' → logprob: -7.692504405975342
    10. ')==' → logprob: -8.0675048828125

Token 97: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006295174825936556
    2. ' ' → logprob: -7.375629425048828
    3. '   ' → logprob: -14.375629425048828
    4. '1' → logprob: -14.750629425048828
    5. '  ' → logprob: -14.750629425048828
    6. '4' → logprob: -15.000629425048828
    7. '۰' → logprob: -15.563129425048828
    8. '```' → logprob: -15.563129425048828
    9. '8' → logprob: -15.625629425048828
    10. '3' → logprob: -15.938129425048828

Token 98: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.778209353797138e-05
    2. ' ' → logprob: -9.625067710876465
    3. '1' → logprob: -15.125067710876465
    4. '۰' → logprob: -15.375067710876465
    5. '   ' → logprob: -15.562567710876465
    6. '  ' → logprob: -15.875067710876465
    7. '4' → logprob: -16.18756866455078
    8. '3' → logprob: -16.31256866455078
    9. '```' → logprob: -16.62506866455078
    10. '０' → logprob: -16.68756866455078

Token 99: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010187433508690447
    2. ' )' → logprob: -9.750102043151855
    3. ')
' → logprob: -10.750102043151855
    4. ')return' → logprob: -11.625102043151855
    5. '))' → logprob: -12.750102043151855
    6. ')+' → logprob: -13.000102043151855
    7. ' ' → logprob: -13.500102043151855
    8. '   ' → logprob: -13.750102043151855
    9. ')a' → logprob: -13.750102043151855
    10. ' and' → logprob: -13.875102043151855

Token 100: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8034431338310242
    2. '<|end|>' → logprob: -0.8034431338310242
    3. '(' → logprob: -2.678443193435669
    4. '*' → logprob: -4.42844295501709
    5. ':' → logprob: -5.42844295501709
    6. '
' → logprob: -5.55344295501709
    7. '+' → logprob: -5.67844295501709
    8. ' ' → logprob: -5.67844295501709
    9. '#' → logprob: -6.17844295501709
    10. '(
' → logprob: -6.30344295501709

Token 101: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.259149968624115
    2. '(' → logprob: -1.5091500282287598
    3. '_f' → logprob: -5.38415002822876
    4. '(f' → logprob: -6.63415002822876
    5. '(F' → logprob: -7.38415002822876
    6. '()' → logprob: -8.509149551391602
    7. '(A' → logprob: -8.759149551391602
    8. '(max' → logprob: -8.759149551391602
    9. '(len' → logprob: -10.634149551391602
    10. '(
' → logprob: -11.009149551391602

Token 102: 'f' (ID: 69)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.006718690041452646
    2. 'f' → logprob: -5.006718635559082
    3. '_s' → logprob: -12.756718635559082
    4. 'print' → logprob: -15.756718635559082
    5. 's' → logprob: -16.3817195892334
    6. '_' → logprob: -16.3817195892334
    7. 'F' → logprob: -16.7567195892334
    8. ' _' → logprob: -17.0067195892334
    9. ')' → logprob: -17.1317195892334
    10. ' f' → logprob: -17.3817195892334

Token 103: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.002105767372995615
    2. '(' → logprob: -6.377105712890625
    3. ')' → logprob: -8.002105712890625
    4. '(I' → logprob: -10.752105712890625
    5. ')(' → logprob: -11.002105712890625
    6. '(S' → logprob: -11.252105712890625
    7. 'A' → logprob: -12.502105712890625
    8. '(N' → logprob: -12.752105712890625
    9. '(a' → logprob: -12.752105712890625
    10. '((' → logprob: -12.752105712890625

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.922563963802531e-05
    2. ' ,' → logprob: -9.875079154968262
    3. ',S' → logprob: -10.500079154968262
    4. ',
' → logprob: -15.625079154968262
    5. ')' → logprob: -17.250080108642578
    6. ',s' → logprob: -17.875080108642578
    7. ' ' → logprob: -17.875080108642578
    8. 'S' → logprob: -19.375080108642578
    9. '   ' → logprob: -19.750080108642578
    10. ',

' → logprob: -19.750080108642578

Token 105: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.1269291490316391
    2. ' S' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.25192928314209
    4. ')' → logprob: -14.87692928314209
    5. '  ' → logprob: -16.251928329467773
    6. '_S' → logprob: -17.626928329467773
    7. '>S' → logprob: -17.626928329467773
    8. ' ' → logprob: -17.751928329467773
    9. '	S' → logprob: -17.751928329467773
    10. '   ' → logprob: -18.001928329467773

Token 106: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.386883020401001
    2. ')' → logprob: -1.136883020401001
    3. '))
' → logprob: -12.011882781982422
    4. ')
' → logprob: -12.886882781982422
    5. ')))' → logprob: -13.761882781982422
    6. ' )' → logprob: -14.386882781982422
    7. ' ))' → logprob: -15.011882781982422
    8. '),' → logprob: -15.386882781982422
    9. '})' → logprob: -15.386882781982422
    10. '())' → logprob: -16.011882781982422


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 104
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 81
Précision stricte (1ère position): 33.65%
Précision adaptée (1ère position): 33.65%
Précision (top 10): 77.88%
================================================================================
