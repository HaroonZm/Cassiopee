================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
def check(x): return x % 10 == 0
if check(n):
    print(10)
else:
    digits = []
    i = 0
    s = str(n)
    while i < len(s):
        digits.append(int(s[i]))
        i += 1
    print(reduce(lambda x, y: x + y, digits) if 'reduce' in globals() else sum(digits))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13287097215652466
    2. ')' → logprob: -2.13287091255188
    3. '()' → logprob: -5.382871150970459
    4. '())' → logprob: -7.382871150970459
    5. '(
' → logprob: -8.1328706741333
    6. '```' → logprob: -9.8828706741333
    7. '(

' → logprob: -10.2578706741333
    8. '('' → logprob: -10.3828706741333
    9. ''' → logprob: -10.6328706741333
    10. '(n' → logprob: -10.7578706741333

Token 5: 'def' (ID: 1314)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7043631672859192
    2. 'if' → logprob: -1.4543631076812744
    3. 'for' → logprob: -2.3293631076812744
    4. 's' → logprob: -2.4543631076812744
    5. 'f' → logprob: -4.3293633460998535
    6. ' ' → logprob: -4.4543633460998535
    7. 'x' → logprob: -4.8293633460998535
    8. ')' → logprob: -4.9543633460998535
    9. 'a' → logprob: -4.9543633460998535
    10. ''' → logprob: -5.0793633460998535

Token 6: ' check' (ID: 2371)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05204417556524277
    2. '_' → logprob: -3.927044153213501
    3. ' factorial' → logprob: -4.30204439163208
    4. ' space' → logprob: -4.55204439163208
    5. ' _' → logprob: -6.30204439163208
    6. ' f' → logprob: -7.05204439163208
    7. ' add' → logprob: -7.30204439163208
    8. ' my' → logprob: -7.42704439163208
    9. ' function' → logprob: -7.55204439163208
    10. ' calculate' → logprob: -8.552043914794922

Token 7: '(x' (ID: 4061)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01442685816437006
    2. '(' → logprob: -4.2644267082214355
    3. '_(' → logprob: -9.764427185058594
    4. ' _' → logprob: -9.889427185058594
    5. ')' → logprob: -10.514427185058594
    6. '_space' → logprob: -10.889427185058594
    7. '_s' → logprob: -11.014427185058594
    8. ' ' → logprob: -11.014427185058594
    9. '(_' → logprob: -11.514427185058594
    10. '(_)' → logprob: -11.639427185058594

Token 8: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07924710959196091
    2. ')' → logprob: -2.579246997833252
    3. ',' → logprob: -9.20424747467041
    4. ':' → logprob: -9.70424747467041
    5. '_' → logprob: -9.70424747467041
    6. ' ):' → logprob: -9.95424747467041
    7. '(' → logprob: -11.20424747467041
    8. '(x' → logprob: -11.20424747467041
    9. '[' → logprob: -11.32924747467041
    10. '=' → logprob: -11.70424747467041

Token 9: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12004983425140381
    2. ':' → logprob: -2.4950499534606934
    3. ' ' → logprob: -4.370049953460693
    4. '(' → logprob: -5.245049953460693
    5. '    ' → logprob: -5.495049953460693
    6. '```' → logprob: -6.370049953460693
    7. ':
' → logprob: -6.620049953460693
    8. ')' → logprob: -7.245049953460693
    9. '    
' → logprob: -7.245049953460693
    10. ' return' → logprob: -7.245049953460693

Token 10: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.09714885801076889
    2. ' ' → logprob: -2.972148895263672
    3. 'x' → logprob: -3.347148895263672
    4. ' True' → logprob: -5.722148895263672
    5. ''' → logprob: -7.347148895263672
    6. ' (' → logprob: -8.097148895263672
    7. ' n' → logprob: -8.222148895263672
    8. '"' → logprob: -8.222148895263672
    9. 'n' → logprob: -8.222148895263672
    10. ' abs' → logprob: -8.472148895263672

Token 11: ' %' (ID: 1851)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011317424476146698
    2. '+' → logprob: -5.761317253112793
    3. '(x' → logprob: -6.011317253112793
    4. '[' → logprob: -6.886317253112793
    5. '>' → logprob: -7.386317253112793
    6. ')' → logprob: -7.511317253112793
    7. '_' → logprob: -7.636317253112793
    8. '*' → logprob: -8.011317253112793
    9. ' ' → logprob: -8.136317253112793
    10. '%' → logprob: -8.136317253112793

Token 12: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.055391304194927216
    2. ' ' → logprob: -2.930391311645508
    3. '3' → logprob: -7.805391311645508
    4. '10' → logprob: -9.805391311645508
    5. '1' → logprob: -11.305391311645508
    6. '5' → logprob: -11.430391311645508
    7. '4' → logprob: -11.555391311645508
    8. '7' → logprob: -11.805391311645508
    9. '32' → logprob: -13.555391311645508
    10. '6' → logprob: -14.180391311645508

Token 13: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004133968614041805
    2. '3' → logprob: -5.879134178161621
    3. '7' → logprob: -7.254134178161621
    4. '5' → logprob: -8.129134178161621
    5. '10' → logprob: -8.379134178161621
    6. '4' → logprob: -9.879134178161621
    7. '1' → logprob: -11.254134178161621
    8. '11' → logprob: -12.129134178161621
    9. '9' → logprob: -12.254134178161621
    10. '6' → logprob: -12.629134178161621

Token 14: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8229259252548218
    2. '==' → logprob: -1.4479259252548218
    3. '(' → logprob: -2.0729260444641113
    4. ' ' → logprob: -2.3229260444641113
    5. '0' → logprob: -3.0729260444641113
    6. ')' → logprob: -3.9479260444641113
    7. '=' → logprob: -4.322926044464111
    8. '()' → logprob: -4.697926044464111
    9. ' !=' → logprob: -5.697926044464111
    10. 'x' → logprob: -6.697926044464111

Token 15: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3087429106235504
    2. ' ' → logprob: -1.433742880821228
    3. '5' → logprob: -4.558743000030518
    4. 'n' → logprob: -4.683743000030518
    5. ' n' → logprob: -5.683743000030518
    6. 'x' → logprob: -6.308743000030518
    7. '7' → logprob: -7.433743000030518
    8. '3' → logprob: -7.558743000030518
    9. ' x' → logprob: -7.558743000030518
    10. '1' → logprob: -7.933743000030518

Token 16: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1529974341392517
    2. 'n' → logprob: -2.6529974937438965
    3. '7' → logprob: -3.7779974937438965
    4. '3' → logprob: -3.7779974937438965
    5. '5' → logprob: -4.0279974937438965
    6. 'x' → logprob: -5.1529974937438965
    7. '1' → logprob: -7.1529974937438965
    8. '2' → logprob: -7.5279974937438965
    9. '4' → logprob: -8.027997016906738
    10. ' ' → logprob: -8.402997016906738

Token 17: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6318948864936829
    2. ' or' → logprob: -2.006894826889038
    3. ' ' → logprob: -2.256894826889038
    4. ' and' → logprob: -2.506894826889038
    5. '\n' → logprob: -2.756894826889038
    6. ')' → logprob: -4.256895065307617
    7. '\' → logprob: -4.506895065307617
    8. '<|end|>' → logprob: -4.631895065307617
    9. 'and' → logprob: -4.756895065307617
    10. '
' → logprob: -4.756895065307617

Token 18: 'if' (ID: 366)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02707054279744625
    2. '\n' → logprob: -4.65207052230835
    3. ':
' → logprob: -4.77707052230835
    4. '
' → logprob: -6.27707052230835
    5. ' ' → logprob: -6.40207052230835
    6. '\' → logprob: -7.27707052230835
    7. ' and' → logprob: -7.40207052230835
    8. '.' → logprob: -7.52707052230835
    9. ',' → logprob: -7.52707052230835
    10. ')' → logprob: -7.52707052230835

Token 19: ' check' (ID: 2371)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.004114969167858362
    2. 'n' → logprob: -5.504115104675293
    3. ' x' → logprob: -11.629115104675293
    4. ' check' → logprob: -11.629115104675293
    5. ' ' → logprob: -11.629115104675293
    6. ' ' → logprob: -12.129115104675293
    7. ' not' → logprob: -13.004115104675293
    8. 'check' → logprob: -14.129115104675293
    9. 'x' → logprob: -14.129115104675293
    10. '	n' → logprob: -15.629115104675293

Token 20: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06461909413337708
    2. '(n' → logprob: -2.8146190643310547
    3. '(x' → logprob: -5.939619064331055
    4. '(
' → logprob: -13.064619064331055
    5. '(s' → logprob: -13.189619064331055
    6. '(

' → logprob: -13.189619064331055
    7. ' (' → logprob: -13.439619064331055
    8. '('' → logprob: -13.689619064331055
    9. '((' → logprob: -13.814619064331055
    10. '("("' → logprob: -14.064619064331055

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023542670533061028
    2. ')' → logprob: -3.773542642593384
    3. ' ):' → logprob: -8.148542404174805
    4. ' )' → logprob: -12.773542404174805
    5. ':' → logprob: -13.398542404174805
    6. ')):' → logprob: -13.398542404174805
    7. ')n' → logprob: -14.273542404174805
    8. '):
' → logprob: -15.648542404174805
    9. ')==' → logprob: -15.648542404174805
    10. ')：' → logprob: -15.773542404174805

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4820367693901062
    2. ' print' → logprob: -0.9820367693901062
    3. 'print' → logprob: -5.732036590576172
    4. ' pass' → logprob: -6.482036590576172
    5. '    ' → logprob: -6.982036590576172
    6. '\n' → logprob: -7.607036590576172
    7. '	print' → logprob: -7.732036590576172
    8. ' n' → logprob: -7.857036590576172
    9. ' ' → logprob: -8.107036590576172
    10. ' return' → logprob: -9.357036590576172

Token 23: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.03094443865120411
    2. 'print' (adapté à ' print') → logprob: -3.530944347381592
    3. ' pass' → logprob: -7.030944347381592
    4. '   ' → logprob: -8.65594482421875
    5. ' n' → logprob: -9.15594482421875
    6. 'n' → logprob: -11.53094482421875
    7. 'pass' → logprob: -11.78094482421875
    8. '\n' → logprob: -12.40594482421875
    9. ' 
' → logprob: -13.40594482421875
    10. ' ' → logprob: -13.53094482421875

Token 24: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08728112280368805
    2. '(n' → logprob: -3.0872812271118164
    3. '("' → logprob: -3.5872812271118164
    4. '('' → logprob: -5.212281227111816
    5. '()' → logprob: -5.837281227111816
    6. '(True' → logprob: -6.587281227111816
    7. '("("' → logprob: -7.712281227111816
    8. '("")' → logprob: -10.837281227111816
    9. '("(' → logprob: -11.087281227111816
    10. '((' → logprob: -11.087281227111816

Token 25: '10' (ID: 702)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005345701705664396
    2. 'n' → logprob: -5.755345821380615
    3. ''' → logprob: -6.880345821380615
    4. ''n' → logprob: -7.755345821380615
    5. '0' → logprob: -9.005345344543457
    6. 'True' → logprob: -9.255345344543457
    7. '"No' → logprob: -9.255345344543457
    8. '"T' → logprob: -9.755345344543457
    9. '"x' → logprob: -9.755345344543457
    10. '"D' → logprob: -10.005345344543457

Token 26: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38756731152534485
    2. '0' → logprob: -1.1375672817230225
    3. '*' → logprob: -7.387567520141602
    4. ')
' → logprob: -11.137567520141602
    5. '*)' → logprob: -11.262567520141602
    6. '*n' → logprob: -11.637567520141602
    7. ' )' → logprob: -11.887567520141602
    8. '00' → logprob: -11.887567520141602
    9. ' ' → logprob: -12.012567520141602
    10. '**' → logprob: -12.512567520141602

Token 27: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0017286106012761593
    2. 'elif' → logprob: -7.001728534698486
    3. ' else' → logprob: -7.126728534698486
    4. '#else' → logprob: -12.376729011535645
    5. '   ' → logprob: -13.376729011535645
    6. '.' → logprob: -13.626729011535645
    7. '_else' → logprob: -13.876729011535645
    8. '0' → logprob: -14.126729011535645
    9. ')' → logprob: -14.126729011535645
    10. '<|end|>' → logprob: -14.251729011535645

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018113177502527833
    2. ':
' → logprob: -6.501811504364014
    3. '   ' → logprob: -8.126811027526855
    4. '    ' → logprob: -12.251811027526855
    5. '       ' → logprob: -13.376811027526855
    6. ' :' → logprob: -13.501811027526855
    7. ':
' → logprob: -14.001811027526855
    8. '```' → logprob: -14.126811027526855
    9. ',' → logprob: -14.626811027526855
    10. 'print' → logprob: -14.751811027526855

Token 29: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5694122910499573
    2. '   ' → logprob: -1.0694122314453125
    3. 'n' → logprob: -2.6944122314453125
    4. ' n' → logprob: -4.4444122314453125
    5. ' print' → logprob: -4.6944122314453125
    6. '    ' → logprob: -6.9444122314453125
    7. '(n' → logprob: -7.3194122314453125
    8. '10' → logprob: -7.8194122314453125
    9. '1' → logprob: -9.444412231445312
    10. '```' → logprob: -10.069412231445312

Token 30: ' digits' (ID: 37806)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.020793184638023376
    2. 'n' → logprob: -3.8957931995391846
    3. '   ' → logprob: -8.895792961120605
    4. ' print' → logprob: -9.520792961120605
    5. ' n' → logprob: -11.395792961120605
    6. '(n' → logprob: -11.395792961120605
    7. '(print' → logprob: -12.645792961120605
    8. 'printf' → logprob: -12.895792961120605
    9. 'for' → logprob: -13.270792961120605
    10. '1' → logprob: -13.395792961120605

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25831738114356995
    2. '=' → logprob: -1.7583173513412476
    3. '_' → logprob: -3.758317470550537
    4. '_count' → logprob: -3.883317470550537
    5. '_len' → logprob: -4.883317470550537
    6. '_sum' → logprob: -6.883317470550537
    7. '=len' → logprob: -7.008317470550537
    8. '_length' → logprob: -7.258317470550537
    9. 'len' → logprob: -8.633316993713379
    10. '_n' → logprob: -8.758316993713379

Token 32: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.0541702508926392
    2. ' n' → logprob: -1.6791702508926392
    3. ' list' → logprob: -1.6791702508926392
    4. 'list' → logprob: -2.6791701316833496
    5. '[' → logprob: -2.8041701316833496
    6. '[len' → logprob: -3.1791701316833496
    7. ' len' → logprob: -3.4291701316833496
    8. 'len' → logprob: -3.6791701316833496
    9. 'n' → logprob: -3.8041701316833496
    10. '[n' → logprob: -3.9291701316833496

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3450156450271606
    2. ' for' → logprob: -1.4700156450271606
    3. 'for' → logprob: -1.5950156450271606
    4. '<|end|>' → logprob: -2.345015525817871
    5. ' ' → logprob: -3.095015525817871
    6. '
' → logprob: -3.345015525817871
    7. 'n' → logprob: -3.595015525817871
    8. '    
' → logprob: -3.845015525817871
    9. ' n' → logprob: -4.095015525817871
    10. ' 
' → logprob: -4.220015525817871

Token 34: ' i' (ID: 575)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.286668986082077
    2. 'for' → logprob: -2.1616690158843994
    3. ' while' → logprob: -2.2866690158843994
    4. ' for' → logprob: -4.28666877746582
    5. 'temp' → logprob: -5.03666877746582
    6. 'num' → logprob: -5.66166877746582
    7. 'x' → logprob: -5.78666877746582
    8. 'n' → logprob: -6.16166877746582
    9. '   ' → logprob: -6.41166877746582
    10. 'i' (adapté à ' i') → logprob: -7.41166877746582

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08986255526542664
    2. '=' → logprob: -2.464862585067749
    3. 'n' → logprob: -7.46486234664917
    4. 'nt' → logprob: -8.214862823486328
    5. ' ' → logprob: -10.089862823486328
    6. 'f' → logprob: -11.339862823486328
    7. 'd' → logprob: -11.964862823486328
    8. ' n' → logprob: -11.964862823486328
    9. ' +=' → logprob: -12.214862823486328
    10. 'nd' → logprob: -13.339862823486328

Token 36: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7177898287773132
    2. '2' → logprob: -1.092789888381958
    3. ' ' → logprob: -1.967789888381958
    4. '0' → logprob: -3.842789888381958
    5. 'n' → logprob: -4.592789649963379
    6. ' n' → logprob: -5.342789649963379
    7. '10' → logprob: -7.717789649963379
    8. '9' → logprob: -8.342789649963379
    9. '100' → logprob: -11.342789649963379
    10. '   ' → logprob: -11.342789649963379

Token 37: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4845072329044342
    2. '2' → logprob: -1.2345072031021118
    3. 'n' → logprob: -2.7345073223114014
    4. '0' → logprob: -4.109507083892822
    5. '9' → logprob: -4.609507083892822
    6. '10' → logprob: -6.734507083892822
    7. ' ' → logprob: -8.35950756072998
    8. ' n' → logprob: -9.98450756072998
    9. '-' → logprob: -10.10950756072998
    10. '100' → logprob: -10.10950756072998

Token 38: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' s' (ID: 265)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.45402905344963074
    2. 'while' → logprob: -1.0790290832519531
    3. '   ' → logprob: -4.079029083251953
    4. ' ' → logprob: -5.704029083251953
    5. '1' → logprob: -6.329029083251953
    6. '0' → logprob: -7.079029083251953
    7. 'n' → logprob: -7.954029083251953
    8. '    ' → logprob: -8.079029083251953
    9. '10' → logprob: -8.329029083251953
    10. ' n' → logprob: -8.454029083251953

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4759553372859955
    2. 'um' → logprob: -1.1009553670883179
    3. '=' → logprob: -3.2259552478790283
    4. ' ' → logprob: -5.850955486297607
    5. 'tr' → logprob: -6.850955486297607
    6. '   ' → logprob: -7.600955486297607
    7. 't' → logprob: -8.22595500946045
    8. 'u' → logprob: -8.47595500946045
    9. 'umm' → logprob: -8.47595500946045
    10. 'n' → logprob: -8.97595500946045

Token 42: ' str' (ID: 989)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2705756425857544
    2. ' n' → logprob: -1.3955756425857544
    3. ' ' → logprob: -2.020575523376465
    4. '1' → logprob: -2.395575523376465
    5. ' str' → logprob: -2.645575523376465
    6. 'str' → logprob: -2.770575523376465
    7. '0' → logprob: -3.145575523376465
    8. '"' → logprob: -4.020575523376465
    9. '10' → logprob: -4.270575523376465
    10. ''' → logprob: -4.395575523376465

Token 43: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0013333364622667432
    2. '(' → logprob: -6.626333236694336
    3. '(abs' → logprob: -12.751333236694336
    4. '(i' → logprob: -13.001333236694336
    5. '((' → logprob: -13.376333236694336
    6. ' (' → logprob: -15.126333236694336
    7. 'n' → logprob: -16.251333236694336
    8. '(
' → logprob: -16.501333236694336
    9. '(x' → logprob: -17.001333236694336
    10. '(num' → logprob: -17.126333236694336

Token 44: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6778770089149475
    2. '[i' → logprob: -0.8028770089149475
    3. ')
' → logprob: -3.3028769493103027
    4. '[' → logprob: -5.677876949310303
    5. '   ' → logprob: -6.552876949310303
    6. '[n' → logprob: -6.802876949310303
    7. ')
' → logprob: -8.052877426147461
    8. ' )' → logprob: -8.302877426147461
    9. '+' → logprob: -8.552877426147461
    10. '+i' → logprob: -9.052877426147461

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041940197348594666
    2. ' ' → logprob: -4.166940212249756
    3. '    ' → logprob: -5.041940212249756
    4. '<|end|>' → logprob: -5.541940212249756
    5. ' while' → logprob: -6.166940212249756
    6. ':' → logprob: -6.291940212249756
    7. '[' → logprob: -6.666940212249756
    8. '[i' → logprob: -6.791940212249756
    9. '    
' → logprob: -6.791940212249756
    10. '  ' → logprob: -6.791940212249756

Token 46: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6651067137718201
    2. 'while' (adapté à ' while') → logprob: -0.9151067137718201
    3. '   ' → logprob: -3.165106773376465
    4. ' ' → logprob: -3.665106773376465
    5. 'i' → logprob: -5.665106773376465
    6. ' i' → logprob: -6.165106773376465
    7. '    ' → logprob: -6.165106773376465
    8. 'd' → logprob: -6.165106773376465
    9. '0' → logprob: -7.165106773376465
    10. 'for' → logprob: -7.165106773376465

Token 47: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.026770224794745445
    2. 'i' → logprob: -3.6517701148986816
    3. '   ' → logprob: -8.65177059173584
    4. ' ' → logprob: -9.27677059173584
    5. ' len' → logprob: -9.40177059173584
    6. '(i' → logprob: -10.27677059173584
    7. ' s' → logprob: -10.77677059173584
    8. '    ' → logprob: -11.02677059173584
    9. 'len' → logprob: -11.27677059173584
    10. ' not' → logprob: -11.52677059173584

Token 48: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.02594863995909691
    2. '<' → logprob: -3.9009485244750977
    3. '<len' → logprob: -5.275948524475098
    4. ' ' → logprob: -8.275948524475098
    5. '<size' → logprob: -11.900948524475098
    6. '<n' → logprob: -12.150948524475098
    7. ' <=' → logprob: -12.525948524475098
    8. '<int' → logprob: -13.025948524475098
    9. 'len' → logprob: -14.025948524475098
    10. '<num' → logprob: -14.275948524475098

Token 49: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.25198179483413696
    2. 'len' → logprob: -1.5019817352294922
    3. ' ' → logprob: -10.626981735229492
    4. '10' → logprob: -10.626981735229492
    5. '(len' → logprob: -13.751981735229492
    6. '6' → logprob: -14.501981735229492
    7. '   ' → logprob: -14.876981735229492
    8. '	len' → logprob: -15.001981735229492
    9. '7' → logprob: -15.376981735229492
    10. '5' → logprob: -15.376981735229492

Token 50: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.001351306913420558
    2. '(' → logprob: -6.626351356506348
    3. 's' → logprob: -11.001351356506348
    4. '(n' → logprob: -12.251351356506348
    5. ' (' → logprob: -12.876351356506348
    6. '(
' → logprob: -15.126351356506348
    7. ')' → logprob: -15.251351356506348
    8. '(i' → logprob: -15.501351356506348
    9. ' ' → logprob: -16.12635040283203
    10. '(

' → logprob: -16.12635040283203

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12209644913673401
    2. ')' → logprob: -2.497096538543701
    3. '):
' → logprob: -3.622096538543701
    4. ' and' → logprob: -5.497096538543701
    5. 'and' → logprob: -7.247096538543701
    6. ' ):' → logprob: -7.372096538543701
    7. '-' → logprob: -9.372096061706543
    8. '):
' → logprob: -9.497096061706543
    9. '):

' → logprob: -9.622096061706543
    10. ' )' → logprob: -9.622096061706543

Token 52: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6170750260353088
    2. '       ' → logprob: -0.8670750260353088
    3. 'digits' → logprob: -3.992074966430664
    4. ' digits' → logprob: -4.492074966430664
    5. ' if' → logprob: -5.992074966430664
    6. 'd' → logprob: -6.367074966430664
    7. '    ' → logprob: -6.492074966430664
    8. '+' → logprob: -6.742074966430664
    9. '```' → logprob: -7.367074966430664
    10. '0' → logprob: -7.867074966430664

Token 53: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' (adapté à ' digits') → logprob: -0.7079064846038818
    2. '   ' → logprob: -1.3329064846038818
    3. ' digits' → logprob: -1.9579064846038818
    4. 'd' → logprob: -3.207906484603882
    5. ' if' → logprob: -3.582906484603882
    6. 'if' → logprob: -4.332906723022461
    7. '       ' → logprob: -5.082906723022461
    8. '    ' → logprob: -5.207906723022461
    9. ' d' → logprob: -5.707906723022461
    10. 'digit' → logprob: -6.582906723022461

Token 54: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.030911384150385857
    2. ' =' → logprob: -3.780911445617676
    3. ' +=' → logprob: -5.655911445617676
    4. '=' → logprob: -6.405911445617676
    5. '.' → logprob: -7.280911445617676
    6. ' ' → logprob: -7.405911445617676
    7. '+=' → logprob: -7.655911445617676
    8. '   ' → logprob: -8.655911445617676
    9. '+' → logprob: -8.655911445617676
    10. 'append' → logprob: -9.030911445617676

Token 55: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.013437256217002869
    2. '(' → logprob: -4.388437271118164
    3. '(s' → logprob: -7.138437271118164
    4. '(ord' → logprob: -9.888437271118164
    5. '(i' → logprob: -10.263437271118164
    6. '(n' → logprob: -10.888437271118164
    7. '((' → logprob: -11.263437271118164
    8. 'int' → logprob: -12.013437271118164
    9. '(in' → logprob: -12.638437271118164
    10. ' (' → logprob: -13.513437271118164

Token 56: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.007684231735765934
    2. '(' → logprob: -4.882684230804443
    3. 's' → logprob: -9.632684707641602
    4. ')' → logprob: -12.382684707641602
    5. '(n' → logprob: -12.757684707641602
    6. '(
' → logprob: -13.757684707641602
    7. '((' → logprob: -14.007684707641602
    8. ' (' → logprob: -14.132684707641602
    9. '(i' → logprob: -14.257684707641602
    10. '(x' → logprob: -15.132684707641602

Token 57: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010819212911883369
    2. '[' → logprob: -9.375107765197754
    3. ')' → logprob: -11.125107765197754
    4. ' [' → logprob: -13.250107765197754
    5. '))' → logprob: -13.375107765197754
    6. 'i' → logprob: -14.000107765197754
    7. '[
' → logprob: -14.000107765197754
    8. ' ' → logprob: -14.000107765197754
    9. ')[' → logprob: -14.375107765197754
    10. ')i' → logprob: -14.750107765197754

Token 58: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.00504862517118454
    2. '])' → logprob: -6.255048751831055
    3. ']))
' → logprob: -6.755048751831055
    4. ']' → logprob: -7.005048751831055
    5. '))' → logprob: -8.005048751831055
    6. ')))' → logprob: -8.255048751831055
    7. '])))' → logprob: -9.005048751831055
    8. '']))' → logprob: -9.255048751831055
    9. ')])' → logprob: -10.130048751831055
    10. ' ]' → logprob: -10.505048751831055

Token 59: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7281771898269653
    2. 'i' → logprob: -1.6031771898269653
    3. '       ' → logprob: -1.7281771898269653
    4. ' i' → logprob: -2.603177070617676
    5. '    
' → logprob: -3.353177070617676
    6. '    ' → logprob: -5.478177070617676
    7. ' 
' → logprob: -5.603177070617676
    8. '
' → logprob: -5.603177070617676
    9. ' ' → logprob: -5.853177070617676
    10. '```' → logprob: -6.103177070617676

Token 60: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.08922833204269409
    2. ' i' → logprob: -3.089228391647339
    3. '   ' → logprob: -3.339228391647339
    4. '       ' → logprob: -6.08922815322876
    5. '+' → logprob: -6.83922815322876
    6. ' ' → logprob: -7.83922815322876
    7. ' +' → logprob: -9.089228630065918
    8. ')' → logprob: -9.214228630065918
    9. '	i' → logprob: -9.339228630065918
    10. '    ' → logprob: -9.464228630065918

Token 61: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.23268674314022064
    2. '+' → logprob: -1.7326867580413818
    3. ' +=' → logprob: -3.482686758041382
    4. '=' → logprob: -10.357686996459961
    5. '++' → logprob: -10.857686996459961
    6. ' +' → logprob: -12.607686996459961
    7. '<|end|>' → logprob: -12.857686996459961
    8. '+='' → logprob: -13.232686996459961
    9. '+="' → logprob: -13.607686996459961
    10. ' ' → logprob: -13.857686996459961

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.12509536743164
    4. '```' → logprob: -17.25009536743164
    5. '  ' → logprob: -18.31259536743164
    6. ' ' → logprob: -19.06259536743164
    7. '0' → logprob: -19.12509536743164
    8. '4' → logprob: -19.62509536743164
    9. '+' → logprob: -19.68759536743164
    10. '2' → logprob: -19.81259536743164

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -17.000009536743164
    4. '   ' → logprob: -17.812509536743164
    5. '0' → logprob: -18.875009536743164
    6. '  ' → logprob: -19.437509536743164
    7. '+' → logprob: -19.812509536743164
    8. '2' → logprob: -20.062509536743164
    9. '۱' → logprob: -20.250009536743164
    10. '`' → logprob: -20.250009536743164

Token 64: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.1335020065307617
    2. '
' → logprob: -1.5085020065307617
    3. '   ' → logprob: -1.6335020065307617
    4. ' ' → logprob: -1.8835020065307617
    5. '<|end|>' → logprob: -3.5085020065307617
    6. '    
' → logprob: -3.7585020065307617
    7. '  
' → logprob: -4.008502006530762
    8. '\n' → logprob: -4.758502006530762
    9. '#' → logprob: -5.258502006530762
    10. '0' → logprob: -5.883502006530762

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8561729788780212
    2. ' ' → logprob: -1.356173038482666
    3. ' 
' → logprob: -2.981173038482666
    4. '+' → logprob: -3.231173038482666
    5. ' if' → logprob: -3.231173038482666
    6. '0' → logprob: -3.356173038482666
    7. '<|end|>' → logprob: -3.856173038482666
    8. 'd' → logprob: -4.356173038482666
    9. '    
' → logprob: -4.481173038482666
    10. '    ' → logprob: -4.606173038482666

Token 66: ' print' (ID: 2123)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.6720348596572876
    2. 'digits' → logprob: -2.172034740447998
    3. 'max' → logprob: -2.297034740447998
    4. 'if' → logprob: -2.672034740447998
    5. 'for' → logprob: -2.922034740447998
    6. ' if' → logprob: -2.922034740447998
    7. 'm' → logprob: -3.172034740447998
    8. '0' → logprob: -3.172034740447998
    9. 'sum' → logprob: -3.297034740447998
    10. ' for' → logprob: -3.297034740447998

Token 67: '(re' (ID: 8178)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.332949161529541
    2. '(sum' → logprob: -1.832949161529541
    3. '(' → logprob: -2.207949161529541
    4. '(min' → logprob: -4.707949161529541
    5. '(d' → logprob: -5.957949161529541
    6. '(len' → logprob: -6.457949161529541
    7. '(s' → logprob: -9.957948684692383
    8. '((' → logprob: -10.332948684692383
    9. '(sorted' → logprob: -11.332948684692383
    10. '(n' → logprob: -11.582948684692383

Token 68: 'duce' (ID: 21375)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.27967870235443115
    2. 's' → logprob: -2.5296788215637207
    3. 'max' → logprob: -3.0296788215637207
    4. 'm' → logprob: -3.1546788215637207
    5. 'd' → logprob: -4.279678821563721
    6. 'turn' → logprob: -4.529678821563721
    7. 'min' → logprob: -5.404678821563721
    8. 'duced' → logprob: -5.404678821563721
    9. 'mainder' → logprob: -5.404678821563721
    10. 'digits' → logprob: -5.529678821563721

Token 69: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.6415647864341736
    2. '(' → logprob: -0.7665647864341736
    3. '(int' → logprob: -5.141564846038818
    4. '(sum' → logprob: -7.016564846038818
    5. '(max' → logprob: -7.391564846038818
    6. ')' → logprob: -7.641564846038818
    7. '(
' → logprob: -7.766564846038818
    8. '(abs' → logprob: -7.891564846038818
    9. '(len' → logprob: -8.89156436920166
    10. '(min' → logprob: -9.89156436920166

Token 70: ' x' (ID: 1215)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.2704915702342987
    2. 'lambda' → logprob: -1.770491600036621
    3. '(lambda' → logprob: -3.270491600036621
    4. ' ' → logprob: -4.145491600036621
    5. ' x' → logprob: -4.645491600036621
    6. 'x' → logprob: -6.395491600036621
    7. ' (' → logprob: -6.770491600036621
    8. '=lambda' → logprob: -8.770491600036621
    9. '<|end|>' → logprob: -9.270491600036621
    10. '(' → logprob: -9.895491600036621

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21687331795692444
    2. ' lambda' → logprob: -1.841873288154602
    3. 'lambda' → logprob: -3.7168734073638916
    4. ' ,' → logprob: -4.8418731689453125
    5. '=lambda' → logprob: -5.7168731689453125
    6. '(lambda' → logprob: -7.2168731689453125
    7. ' +' → logprob: -9.716873168945312
    8. ' x' → logprob: -9.966873168945312
    9. '+' → logprob: -10.091873168945312
    10. ' ' → logprob: -10.966873168945312

Token 72: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7306945323944092
    2. ' y' → logprob: -0.7306945323944092
    3. ' lambda' → logprob: -3.605694532394409
    4. 'lambda' → logprob: -4.855694770812988
    5. 'a' → logprob: -6.980694770812988
    6. ' ' → logprob: -7.855694770812988
    7. ' a' → logprob: -7.980694770812988
    8. 'x' → logprob: -9.230694770812988
    9. '  ' → logprob: -10.230694770812988
    10. ' x' → logprob: -10.355694770812988

Token 73: ':' (ID: 25)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.0372986793518066
    2. ' lambda' → logprob: -1.0372986793518066
    3. '+' → logprob: -1.7872986793518066
    4. '(lambda' → logprob: -3.4122986793518066
    5. ' x' → logprob: -3.5372986793518066
    6. 'lambda' → logprob: -3.6622986793518066
    7. ':' → logprob: -4.912298679351807
    8. ' ' → logprob: -5.037298679351807
    9. '=lambda' → logprob: -5.037298679351807
    10. ',' → logprob: -5.537298679351807

Token 74: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.202772319316864
    2. 'x' → logprob: -1.8277723789215088
    3. ' max' → logprob: -3.952772378921509
    4. 'max' → logprob: -6.32777214050293
    5. ' ' → logprob: -6.70277214050293
    6. '	x' → logprob: -9.70277214050293
    7. '  ' → logprob: -9.70277214050293
    8. ' (' → logprob: -9.82777214050293
    9. '<|end|>' → logprob: -9.82777214050293
    10. ' min' → logprob: -10.07777214050293

Token 75: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.748816192150116
    2. ' +' → logprob: -1.2488162517547607
    3. '+y' → logprob: -1.4988162517547607
    4. '*' → logprob: -4.623816013336182
    5. '*y' → logprob: -5.623816013336182
    6. ' *' → logprob: -6.248816013336182
    7. ' ' → logprob: -7.748816013336182
    8. 'y' → logprob: -8.12381649017334
    9. '+x' → logprob: -8.62381649017334
    10. ' y' → logprob: -8.87381649017334

Token 76: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.10036173462867737
    2. 'y' → logprob: -2.3503618240356445
    3. ' ' → logprob: -8.975361824035645
    4. '  ' → logprob: -11.850361824035645
    5. '	y' → logprob: -12.850361824035645
    6. '(y' → logprob: -13.037861824035645
    7. ' ' → logprob: -13.412861824035645
    8. '1' → logprob: -13.537861824035645
    9. ' max' → logprob: -13.537861824035645
    10. '   ' → logprob: -13.537861824035645

Token 77: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5472772717475891
    2. ')' → logprob: -1.5472772121429443
    3. ',' → logprob: -2.1722772121429443
    4. ' +' → logprob: -2.7972772121429443
    5. '+' → logprob: -4.672277450561523
    6. ' ,' → logprob: -4.922277450561523
    7. ')))' → logprob: -5.547277450561523
    8. 'digits' → logprob: -5.547277450561523
    9. ' digits' → logprob: -6.047277450561523
    10. '),' → logprob: -6.797277450561523

Token 78: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.12698039412498474
    2. 'digits' → logprob: -2.1269803047180176
    3. '    ' → logprob: -11.501980781555176
    4. ' ' → logprob: -11.751980781555176
    5. ')' → logprob: -11.876980781555176
    6. '   ' → logprob: -12.251980781555176
    7. '_digits' → logprob: -13.001980781555176
    8. 'Digits' → logprob: -13.064480781555176
    9. ' [' → logprob: -13.251980781555176
    10. ' )' → logprob: -13.439480781555176

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033942811191082
    2. '))' → logprob: -3.408942699432373
    3. ')))' → logprob: -8.283943176269531
    4. ' )' → logprob: -10.408943176269531
    5. '-' → logprob: -13.033943176269531
    6. '+' → logprob: -13.158943176269531
    7. '*' → logprob: -13.658943176269531
    8. ')
' → logprob: -13.658943176269531
    9. ')}' → logprob: -13.908943176269531
    10. ')`' → logprob: -14.033943176269531

Token 80: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.53050296427682e-05
    2. '))' → logprob: -9.75008487701416
    3. ' )' → logprob: -11.50008487701416
    4. ')))' → logprob: -12.12508487701416
    5. '`)' → logprob: -12.62508487701416
    6. ')
' → logprob: -13.00008487701416
    7. '+' → logprob: -13.87508487701416
    8. '   ' → logprob: -14.25008487701416
    9. ')#' → logprob: -14.25008487701416
    10. ')`' → logprob: -14.50008487701416

Token 81: ' '' (ID: 461)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3412226736545563
    2. ' not' → logprob: -2.2162227630615234
    3. ' len' → logprob: -2.7162227630615234
    4. ' check' → logprob: -3.0912227630615234
    5. 'n' → logprob: -3.5912227630615234
    6. ' ' → logprob: -4.216222763061523
    7. ' digits' → logprob: -4.716222763061523
    8. ' sum' → logprob: -5.341222763061523
    9. 'len' → logprob: -5.966222763061523
    10. '  ' → logprob: -6.216222763061523

Token 82: 'reduce' (ID: 49119)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5204788446426392
    2. 'len' → logprob: -2.5204787254333496
    3. 's' → logprob: -2.7704787254333496
    4. ''' → logprob: -3.1454787254333496
    5. ' n' → logprob: -3.3954787254333496
    6. 'check' → logprob: -3.6454787254333496
    7. '0' → logprob: -3.8954787254333496
    8. ' check' → logprob: -3.8954787254333496
    9. 'digits' → logprob: -4.02047872543335
    10. ' ' → logprob: -4.14547872543335

Token 83: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.042325809597969055
    2. ' not' → logprob: -4.292325973510742
    3. ' in' → logprob: -4.417325973510742
    4. ''in' → logprob: -5.167325973510742
    5. ')'' → logprob: -5.417325973510742
    6. ')' → logprob: -6.167325973510742
    7. ' '' → logprob: -6.667325973510742
    8. '('' → logprob: -6.792325973510742
    9. 'in' → logprob: -8.667325973510742
    10. 'not' → logprob: -8.917325973510742

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.37200772762298584
    2. ' not' → logprob: -1.4970077276229858
    3. ')' → logprob: -3.1220078468322754
    4. ' ' → logprob: -3.9970078468322754
    5. 'in' → logprob: -4.122007846832275
    6. ' )' → logprob: -5.247007846832275
    7. 'import' → logprob: -6.622007846832275
    8. 'not' → logprob: -7.122007846832275
    9. '  ' → logprob: -8.247007369995117
    10. ' import' → logprob: -8.997007369995117

Token 85: ' globals' (ID: 87840)
  Prédit: ' globals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' globals' → logprob: -0.9622386693954468
    2. 'globals' → logprob: -1.5872386693954468
    3. ' __' → logprob: -1.7122386693954468
    4. '__' → logprob: -1.7122386693954468
    5. ''' → logprob: -3.7122387886047363
    6. '_globals' → logprob: -4.337238788604736
    7. 'locals' → logprob: -6.212238788604736
    8. ' ' → logprob: -6.337238788604736
    9. '"' → logprob: -6.337238788604736
    10. ' '__' → logprob: -6.462238788604736

Token 86: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09159030020236969
    2. ' else' → logprob: -2.716590404510498
    3. ' )' → logprob: -4.091590404510498
    4. 'else' → logprob: -5.591590404510498
    5. '()' → logprob: -7.341590404510498
    6. ' ' → logprob: -8.96658992767334
    7. '())' → logprob: -9.34158992767334
    8. ' and' → logprob: -9.84158992767334
    9. '   ' → logprob: -11.21658992767334
    10. '))' → logprob: -11.34158992767334

Token 87: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.08813995122909546
    2. 'else' → logprob: -2.5881400108337402
    3. ')' → logprob: -4.83814001083374
    4. ' )' → logprob: -6.96314001083374
    5. ' ' → logprob: -8.713139533996582
    6. '    ' → logprob: -10.338139533996582
    7. ' and' → logprob: -10.338139533996582
    8. '))' → logprob: -10.463139533996582
    9. '   ' → logprob: -10.963139533996582
    10. '()' → logprob: -11.963139533996582

Token 88: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5231936573982239
    2. 'sum' → logprob: -0.8981936573982239
    3. '(sum' → logprob: -11.273193359375
    4. ' n' → logprob: -11.273193359375
    5. 'n' → logprob: -11.898193359375
    6. ' ' → logprob: -11.898193359375
    7. ')' → logprob: -12.148193359375
    8. '   ' → logprob: -12.523193359375
    9. ' str' → logprob: -12.648193359375
    10. 'print' → logprob: -13.023193359375

Token 89: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.023434847593307495
    2. '(' → logprob: -3.77343487739563
    3. ')' → logprob: -8.64843463897705
    4. ' (' → logprob: -12.02343463897705
    5. '()' → logprob: -13.02343463897705
    6. '(
' → logprob: -14.14843463897705
    7. '((' → logprob: -14.39843463897705
    8. '(n' → logprob: -14.39843463897705
    9. ' )' → logprob: -14.64843463897705
    10. '(de' → logprob: -15.02343463897705

Token 90: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.007133043371140957
    2. 'digits' → logprob: -5.0071330070495605
    3. 'ig' → logprob: -8.007133483886719
    4. 'igit' → logprob: -10.882133483886719
    5. 'igts' → logprob: -10.882133483886719
    6. ' digits' → logprob: -11.257133483886719
    7. ')' → logprob: -11.757133483886719
    8. '(d' → logprob: -12.132133483886719
    9. 'd' → logprob: -12.257133483886719
    10. '   ' → logprob: -13.007133483886719

Token 91: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001056626089848578
    2. '))' → logprob: -6.876056671142578
    3. ' )' → logprob: -11.126056671142578
    4. ')))' → logprob: -12.376056671142578
    5. '())' → logprob: -13.001056671142578
    6. ')
' → logprob: -13.626056671142578
    7. '   ' → logprob: -15.126056671142578
    8. '()' → logprob: -15.251056671142578
    9. '`)' → logprob: -15.626056671142578
    10. ')}' → logprob: -16.126056671142578


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 89
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 42.70%
Précision adaptée (1ère position): 44.94%
Précision (top 10): 78.65%
================================================================================
