================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
K_X = input().split()
K = int(K_X[0])
X = int(K_X[1])
min_x = X - (K - 1)
max_x = X + (K - 1)
result = []
for i in range(min_x, max_x + 1):
    result.append(str(i))
print(" ".join(result))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'K' (ID: 42)
  → Token d'amorce (pas de prédiction)

Token 1: '_X' (ID: 16245)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4858818054199219
    2. '[' → logprob: -1.7358818054199219
    3. ' K' → logprob: -2.110881805419922
    4. ' np' → logprob: -2.735881805419922
    5. '1' → logprob: -2.860881805419922
    6. '0' → logprob: -2.985881805419922
    7. '(' → logprob: -3.235881805419922
    8. ''' → logprob: -3.235881805419922
    9. '"' → logprob: -3.610881805419922
    10. ' []' → logprob: -3.735881805419922

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5292150378227234
    2. '[' → logprob: -1.2792150974273682
    3. '.' → logprob: -2.404215097427368
    4. ''' → logprob: -3.779215097427368
    5. '_' → logprob: -4.904214859008789
    6. '"' → logprob: -4.904214859008789
    7. ')' → logprob: -7.279214859008789
    8. '[:]' → logprob: -8.029214859008789
    9. '```' → logprob: -8.154214859008789
    10. ',' → logprob: -8.154214859008789

Token 5: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7022526264190674
    2. '+' → logprob: -0.8272526264190674
    3. '_' → logprob: -3.7022526264190674
    4. '[' → logprob: -4.202252388000488
    5. '*' → logprob: -4.702252388000488
    6. '(' → logprob: -5.077252388000488
    7. '=' → logprob: -6.202252388000488
    8. '#' → logprob: -6.452252388000488
    9. '()' → logprob: -6.702252388000488
    10. '.strip' → logprob: -6.827252388000488

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0047871763817965984
    2. '()' → logprob: -5.379786968231201
    3. '('' → logprob: -9.87978744506836
    4. '("("' → logprob: -10.12978744506836
    5. '(
' → logprob: -10.37978744506836
    6. '(

' → logprob: -10.75478744506836
    7. '(`' → logprob: -12.00478744506836
    8. '```' → logprob: -12.75478744506836
    9. '(**' → logprob: -12.87978744506836
    10. '"' → logprob: -13.25478744506836

Token 7: 'K' (ID: 42)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015447042882442474
    2. '.' → logprob: -5.01544713973999
    3. '.append' → logprob: -6.51544713973999
    4. '```' → logprob: -6.64044713973999
    5. '+' → logprob: -6.89044713973999
    6. '_' → logprob: -7.01544713973999
    7. '\[' → logprob: -7.26544713973999
    8. '=' → logprob: -7.26544713973999
    9. '[
' → logprob: -7.39044713973999
    10. '[int' → logprob: -7.51544713973999

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39679238200187683
    2. '_X' → logprob: -1.1467924118041992
    3. '[' → logprob: -5.396792411804199
    4. '[_' → logprob: -5.646792411804199
    5. '_[' → logprob: -6.646792411804199
    6. '_K' → logprob: -8.7717924118042
    7. ' _' → logprob: -9.5217924118042
    8. '_S' → logprob: -9.6467924118042
    9. '[X' → logprob: -10.2717924118042
    10. '_Y' → logprob: -10.5217924118042

Token 9: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.11934991180896759
    2. ' int' → logprob: -3.369349956512451
    3. 'list' → logprob: -3.369349956512451
    4. 'K' → logprob: -3.994349956512451
    5. '[int' → logprob: -4.369349956512451
    6. ' K' → logprob: -4.869349956512451
    7. ' list' → logprob: -5.744349956512451
    8. 'input' → logprob: -7.994349956512451
    9. ' [' → logprob: -7.994349956512451
    10. '[' → logprob: -8.119349479675293

Token 10: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.3887190520763397
    2. '(' → logprob: -1.138719081878662
    3. '('' → logprob: -7.013719081878662
    4. '("("' → logprob: -7.388719081878662
    5. 'K' → logprob: -8.263718605041504
    6. '((' → logprob: -11.013718605041504
    7. '(`' → logprob: -12.138718605041504
    8. '`' → logprob: -12.138718605041504
    9. '```' → logprob: -12.138718605041504
    10. ''' → logprob: -12.388718605041504

Token 11: '_X' (ID: 16245)
  Prédit: '_X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_X' → logprob: -0.08952092379331589
    2. '[' → logprob: -2.4645209312438965
    3. ')' → logprob: -8.214520454406738
    4. '_[' → logprob: -9.464520454406738
    5. '[X' → logprob: -9.589520454406738
    6. '[_' → logprob: -9.839520454406738
    7. '_K' → logprob: -9.964520454406738
    8. 'X' → logprob: -10.214520454406738
    9. '```' → logprob: -12.214520454406738
    10. '[-' → logprob: -12.714520454406738

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. ')' → logprob: -15.000000953674316
    3. '[K' → logprob: -15.250000953674316
    4. ' [' → logprob: -15.375000953674316
    5. '[
' → logprob: -16.375001907348633
    6. '\[' → logprob: -16.500001907348633
    7. '```' → logprob: -17.375001907348633
    8. '(' → logprob: -18.500001907348633
    9. '['' → logprob: -18.875001907348633
    10. '   ' → logprob: -19.375001907348633

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. '1' → logprob: -12.625004768371582
    3. ' ' → logprob: -13.500004768371582
    4. ')' → logprob: -16.8750057220459
    5. '```' → logprob: -18.0625057220459
    6. '۰' → logprob: -18.1250057220459
    7. '])' → logprob: -19.0000057220459
    8. '０' → logprob: -19.1875057220459
    9. '`' → logprob: -19.1875057220459
    10. '2' → logprob: -19.4375057220459

Token 14: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3137900233268738
    2. '])' → logprob: -1.3137900829315186
    3. ']' → logprob: -8.063790321350098
    4. ')]' → logprob: -9.938790321350098
    5. ')])' → logprob: -10.063790321350098
    6. ' ])' → logprob: -10.313790321350098
    7. ')
' → logprob: -10.438790321350098
    8. ' )' → logprob: -10.813790321350098
    9. ''])' → logprob: -11.188790321350098
    10. '))' → logprob: -11.438790321350098

Token 15: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0029837635811418295
    2. '_X' → logprob: -7.252983570098877
    3. '_' → logprob: -7.627983570098877
    4. 'x' → logprob: -7.877983570098877
    5. ',' → logprob: -8.252984046936035
    6. ' X' → logprob: -8.377984046936035
    7. 'N' → logprob: -8.377984046936035
    8. 'K' → logprob: -8.502984046936035
    9. '<|end|>' → logprob: -9.627984046936035
    10. ')' → logprob: -9.752984046936035

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42899131774902344
    2. '=' → logprob: -1.0539913177490234
    3. '_' → logprob: -8.303991317749023
    4. '=int' → logprob: -11.303991317749023
    5. ')' → logprob: -11.428991317749023
    6. ' ' → logprob: -12.428991317749023
    7. '[' → logprob: -12.678991317749023
    8. '_=' → logprob: -13.178991317749023
    9. ',' → logprob: -13.553991317749023
    10. '_token' → logprob: -13.928991317749023

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20141352713108063
    2. ' int' → logprob: -1.7014135122299194
    3. ' K' → logprob: -15.45141315460205
    4. ' ' → logprob: -17.576414108276367
    5. '(int' → logprob: -17.576414108276367
    6. '=int' → logprob: -17.576414108276367
    7. 'K' → logprob: -17.701414108276367
    8. '	int' → logprob: -18.326414108276367
    9. '[int' → logprob: -18.951414108276367
    10. '<int' → logprob: -19.201414108276367

Token 18: '(K' (ID: 28797)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25266900658607483
    2. '(K' → logprob: -1.5026689767837524
    3. '(X' → logprob: -7.377668857574463
    4. ' (' → logprob: -9.752669334411621
    5. '('' → logprob: -10.627669334411621
    6. '()' → logprob: -11.377669334411621
    7. '(`' → logprob: -12.002669334411621
    8. '(k' → logprob: -13.127669334411621
    9. '((' → logprob: -13.252669334411621
    10. ' ' → logprob: -13.252669334411621

Token 19: '_X' (ID: 16245)
  Prédit: '_X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_X' → logprob: -0.07960484176874161
    2. '[' → logprob: -2.5796048641204834
    3. ')' → logprob: -8.454605102539062
    4. '-' → logprob: -8.704605102539062
    5. '_' → logprob: -9.204605102539062
    6. '[_' → logprob: -10.079605102539062
    7. ']' → logprob: -10.454605102539062
    8. '])' → logprob: -10.579605102539062
    9. '][' → logprob: -11.079605102539062
    10. ']_' → logprob: -11.329605102539062

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.9153885558771435e-06
    2. '1' → logprob: -13.125005722045898
    3. ' [' → logprob: -13.125005722045898
    4. ')' → logprob: -14.625005722045898
    5. '][' → logprob: -15.125005722045898
    6. '```' → logprob: -15.375005722045898
    7. ')[' → logprob: -15.875005722045898
    8. '-' → logprob: -15.875005722045898
    9. '(' → logprob: -16.0000057220459
    10. '2' → logprob: -16.0000057220459

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.500014305114746
    3. '0' → logprob: -13.500014305114746
    4. '])' → logprob: -13.625014305114746
    5. '```' → logprob: -15.375014305114746
    6. '2' → logprob: -15.437514305114746
    7. '   ' → logprob: -15.937514305114746
    8. ']' → logprob: -16.06251335144043
    9. '-' → logprob: -16.12501335144043
    10. '`' → logprob: -17.12501335144043

Token 22: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4745621085166931
    2. ')' → logprob: -0.9745621085166931
    3. ']' → logprob: -8.59956169128418
    4. ')])' → logprob: -8.72456169128418
    5. '))' → logprob: -9.72456169128418
    6. ')]' → logprob: -10.22456169128418
    7. ''])' → logprob: -10.97456169128418
    8. '）' → logprob: -12.22456169128418
    9. ' ])' → logprob: -12.34956169128418
    10. '`)' → logprob: -12.97456169128418

Token 23: 'min' (ID: 1493)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6025055050849915
    2. 'print' → logprob: -0.8525055050849915
    3. ' if' → logprob: -4.102505683898926
    4. 'for' → logprob: -5.352505683898926
    5. ' ' → logprob: -6.477505683898926
    6. ' print' → logprob: -6.727505683898926
    7. 'range' → logprob: -7.602505683898926
    8. ' for' → logprob: -8.102505683898926
    9. 'i' → logprob: -8.352505683898926
    10. 'sum' → logprob: -8.477505683898926

Token 24: '_x' (ID: 7054)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1420956552028656
    2. '_val' → logprob: -2.1420955657958984
    3. '_value' → logprob: -4.767095565795898
    4. '_num' → logprob: -5.392095565795898
    5. 'imum' → logprob: -7.267095565795898
    6. '_=' → logprob: -7.642095565795898
    7. '_range' → logprob: -8.392095565795898
    8. '_number' → logprob: -8.767095565795898
    9. '_sum' → logprob: -9.017095565795898
    10. '_i' → logprob: -10.517095565795898

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35232415795326233
    2. '=' → logprob: -1.22732412815094
    3. '_' → logprob: -5.60232400894165
    4. '_=' → logprob: -9.727324485778809
    5. '_value' → logprob: -10.477324485778809
    6. '_val' → logprob: -10.852324485778809
    7. '_possible' → logprob: -11.352324485778809
    8. '=int' → logprob: -11.477324485778809
    9. 'imum' → logprob: -11.477324485778809
    10. '=_' → logprob: -12.477324485778809

Token 26: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.045737095177173615
    2. ' X' → logprob: -3.1707370281219482
    3. 'max' → logprob: -6.670737266540527
    4. 'K' → logprob: -7.295737266540527
    5. ' max' → logprob: -7.420737266540527
    6. ' K' → logprob: -9.545737266540527
    7. '100' → logprob: -10.670737266540527
    8. ' ' → logprob: -11.045737266540527
    9. '10' → logprob: -11.045737266540527
    10. '1' → logprob: -11.295737266540527

Token 27: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12973925471305847
    2. ' -' → logprob: -2.129739284515381
    3. '-K' → logprob: -5.879739284515381
    4. '<|end|>' → logprob: -12.754738807678223
    5. '-min' → logprob: -13.254738807678223
    6. ' ' → logprob: -13.754738807678223
    7. '-Key' → logprob: -13.879738807678223
    8. ' ' → logprob: -13.879738807678223
    9. '-k' → logprob: -14.004738807678223
    10. '-ID' → logprob: -14.504738807678223

Token 28: ' (' (ID: 350)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.06271238625049591
    2. 'K' → logprob: -2.8127124309539795
    3. ' (' → logprob: -7.9377121925354
    4. '(' → logprob: -7.9377121925354
    5. '(k' → logprob: -11.687712669372559
    6. ' K' → logprob: -12.187712669372559
    7. '100' → logprob: -12.562712669372559
    8. '200' → logprob: -13.187712669372559
    9. '1' → logprob: -13.812712669372559
    10. '0' → logprob: -13.937712669372559

Token 29: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0006851525395177305
    2. '(K' → logprob: -7.375685214996338
    3. ' K' → logprob: -10.00068473815918
    4. ' (' → logprob: -12.62568473815918
    5. ' ' → logprob: -13.25068473815918
    6. '(' → logprob: -13.25068473815918
    7. '0' → logprob: -13.75068473815918
    8. '   ' → logprob: -13.75068473815918
    9. '	K' → logprob: -14.25068473815918
    10. '2' → logprob: -14.37568473815918

Token 30: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07051817327737808
    2. ' -' → logprob: -2.6955182552337646
    3. '1' → logprob: -7.6955180168151855
    4. ')' → logprob: -9.070518493652344
    5. ' ' → logprob: -12.070518493652344
    6. '*' → logprob: -13.445518493652344
    7. '2' → logprob: -14.320518493652344
    8. ' )' → logprob: -14.320518493652344
    9. '-)' → logprob: -14.570518493652344
    10. '```' → logprob: -14.633018493652344

Token 31: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.682846287731081e-05
    2. ' ' → logprob: -9.625066757202148
    3. ')' → logprob: -14.500066757202148
    4. '   ' → logprob: -16.43756675720215
    5. '۱' → logprob: -17.25006675720215
    6. '１' → logprob: -17.43756675720215
    7. '2' → logprob: -17.93756675720215
    8. '-' → logprob: -17.93756675720215
    9. '  ' → logprob: -18.00006675720215
    10. '١' → logprob: -18.37506675720215

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.762356209335849e-05
    2. ' ' → logprob: -10.25003719329834
    3. '   ' → logprob: -14.18753719329834
    4. ')' → logprob: -14.81253719329834
    5. '2' → logprob: -14.87503719329834
    6. '  ' → logprob: -15.93753719329834
    7. '１' → logprob: -16.812538146972656
    8. '```' → logprob: -17.250038146972656
    9. '১' → logprob: -17.437538146972656
    10. '۱' → logprob: -17.500038146972656

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004932218580506742
    2. ')
' → logprob: -7.750493049621582
    3. ' )' → logprob: -10.625493049621582
    4. '<|end|>' → logprob: -11.125493049621582
    5. ')

' → logprob: -11.625493049621582
    6. ')*' → logprob: -12.125493049621582
    7. '*' → logprob: -12.250493049621582
    8. ' ' → logprob: -14.375493049621582
    9. '```' → logprob: -14.375493049621582
    10. ')
' → logprob: -14.625493049621582

Token 34: 'max' (ID: 3228)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0611003041267395
    2. '_' → logprob: -2.9361002445220947
    3. 'X' → logprob: -6.311100482940674
    4. '_X' → logprob: -6.436100482940674
    5. ' =' → logprob: -6.811100482940674
    6. 'x' → logprob: -7.811100482940674
    7. ' _' → logprob: -8.061100006103516
    8. ' ' → logprob: -8.436100006103516
    9. '=' → logprob: -8.561100006103516
    10. '*' → logprob: -8.561100006103516

Token 36: ' =' (ID: 314)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2709806263446808
    2. ' =' → logprob: -1.7709805965423584
    3. '+' → logprob: -3.1459805965423584
    4. '=' → logprob: -4.0209808349609375
    5. ' ' → logprob: -5.3959808349609375
    6. ',' → logprob: -7.7709808349609375
    7. ')' → logprob: -8.270980834960938
    8. '*' → logprob: -8.645980834960938
    9. ' *' → logprob: -9.145980834960938
    10. ' >=' → logprob: -9.145980834960938

Token 37: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.20147259533405304
    2. 'X' → logprob: -1.7014726400375366
    3. ' ' → logprob: -9.951472282409668
    4. ' (' → logprob: -12.951472282409668
    5. ' x' → logprob: -13.451472282409668
    6. 'x' → logprob: -13.576472282409668
    7. ' ' → logprob: -13.951472282409668
    8. '0' → logprob: -14.076472282409668
    9. '1' → logprob: -14.201472282409668
    10. '	X' → logprob: -14.451472282409668

Token 38: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12482516467571259
    2. ' +' → logprob: -2.6248252391815186
    3. '<|end|>' → logprob: -3.1248252391815186
    4. '+
' → logprob: -8.374825477600098
    5. '<|end|>' → logprob: -8.624825477600098
    6. ' ' → logprob: -8.874825477600098
    7. '
' → logprob: -8.999825477600098
    8. ' if' → logprob: -8.999825477600098
    9. ' +
' → logprob: -10.249825477600098
    10. ')' → logprob: -10.374825477600098

Token 39: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2182985544204712
    2. '(K' → logprob: -1.7182985544204712
    3. '(' → logprob: -4.093298435211182
    4. ' K' → logprob: -10.46829891204834
    5. 'K' → logprob: -10.59329891204834
    6. ' ' → logprob: -12.84329891204834
    7. '(k' → logprob: -13.71829891204834
    8. '(KERN' → logprob: -14.46829891204834
    9. '(X' → logprob: -15.09329891204834
    10. '1' → logprob: -15.21829891204834

Token 40: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.1713072657585144
    2. '(K' → logprob: -1.9213073253631592
    3. ' K' → logprob: -5.29630708694458
    4. ' (' → logprob: -5.54630708694458
    5. '(' → logprob: -6.17130708694458
    6. '1' → logprob: -11.671307563781738
    7. ' ' → logprob: -12.546307563781738
    8. 'k' → logprob: -12.796307563781738
    9. ')' → logprob: -13.421307563781738
    10. '	K' → logprob: -13.671307563781738

Token 41: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16054093837738037
    2. '-' → logprob: -1.9105409383773804
    3. ')' → logprob: -8.285540580749512
    4. ' ' → logprob: -10.035540580749512
    5. '<|end|>' → logprob: -11.035540580749512
    6. '<|end|>' → logprob: -12.910540580749512
    7. ' )' → logprob: -13.785540580749512
    8. ' ' → logprob: -15.035540580749512
    9. ')-' → logprob: -16.223041534423828
    10. '  ' → logprob: -16.473041534423828

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038517288863658905
    2. ' ' → logprob: -3.2885172367095947
    3. ')' → logprob: -7.788517475128174
    4. '<|end|>' → logprob: -10.413516998291016
    5. ' )' → logprob: -11.163516998291016
    6. '<|end|>' → logprob: -11.413516998291016
    7. '0' → logprob: -12.913516998291016
    8. '2' → logprob: -13.788516998291016
    9. ' -' → logprob: -14.288516998291016
    10. '  ' → logprob: -14.288516998291016

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.394135612528771e-05
    2. ' ' → logprob: -10.125043869018555
    3. '0' → logprob: -12.625043869018555
    4. '-' → logprob: -14.750043869018555
    5. '(' → logprob: -16.250043869018555
    6. ' -' → logprob: -16.750043869018555
    7. '<|end|>' → logprob: -16.875043869018555
    8. '2' → logprob: -17.125043869018555
    9. '9' → logprob: -17.250043869018555
    10. '<|end|>' → logprob: -17.500043869018555

Token 44: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019758609123528004
    2. '+' → logprob: -6.501976013183594
    3. ')
' → logprob: -7.751976013183594
    4. ' )' → logprob: -10.751976013183594
    5. ')+' → logprob: -11.126976013183594
    6. ' +' → logprob: -12.626976013183594
    7. ')

' → logprob: -13.251976013183594
    8. '```' → logprob: -14.376976013183594
    9. ')#' → logprob: -15.126976013183594
    10. '+)' → logprob: -15.626976013183594

Token 45: 'result' (ID: 2521)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1800258606672287
    2. '=' → logprob: -1.8050258159637451
    3. ' ' → logprob: -8.680026054382324
    4. '_' → logprob: -10.305026054382324
    5. 's' → logprob: -10.805026054382324
    6. '.' → logprob: -11.555026054382324
    7. ')' → logprob: -11.805026054382324
    8. ',' → logprob: -12.180026054382324
    9. '_range' → logprob: -12.305026054382324
    10. ':' → logprob: -12.430026054382324

Token 47: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.0620781183242798
    2. '[min' → logprob: -1.3120781183242798
    3. 'range' → logprob: -2.3120779991149902
    4. '"' → logprob: -2.6870779991149902
    5. '[' → logprob: -3.0620779991149902
    6. ''' → logprob: -3.3120779991149902
    7. ' list' → logprob: -3.3120779991149902
    8. '[max' → logprob: -3.5620779991149902
    9. 'min' → logprob: -3.6870779991149902
    10. ' [' → logprob: -4.56207799911499

Token 48: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001987994182854891
    2. ' for' → logprob: -6.251987934112549
    3. '<|end|>' → logprob: -10.376988410949707
    4. 'f' → logprob: -12.001988410949707
    5. ' ' → logprob: -12.126988410949707
    6. '.' → logprob: -12.126988410949707
    7. ')' → logprob: -12.751988410949707
    8. '```' → logprob: -12.876988410949707
    9. 'range' → logprob: -13.126988410949707
    10. 'result' → logprob: -13.751988410949707

Token 49: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2064102441072464
    2. 'i' → logprob: -1.70641028881073
    3. '_' → logprob: -6.5814104080200195
    4. ' x' → logprob: -6.9564104080200195
    5. ' _' → logprob: -7.2064104080200195
    6. 'x' → logprob: -7.3314104080200195
    7. ' ' → logprob: -7.4564104080200195
    8. '_i' → logprob: -8.08141040802002
    9. ' num' → logprob: -9.45641040802002
    10. '_x' → logprob: -9.83141040802002

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2829562723636627
    2. 'in' → logprob: -1.4079562425613403
    3. 'range' → logprob: -7.032956123352051
    4. ' ' → logprob: -7.157956123352051
    5. 'n' → logprob: -9.65795612335205
    6. '_' → logprob: -11.03295612335205
    7. '  ' → logprob: -11.40795612335205
    8. 'space' → logprob: -11.65795612335205
    9. '	in' → logprob: -12.15795612335205
    10. 's' → logprob: -12.40795612335205

Token 51: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.17983296513557434
    2. 'range' → logprob: -1.804832935333252
    3. '(range' → logprob: -10.42983341217041
    4. ' ' → logprob: -11.30483341217041
    5. '	range' → logprob: -11.30483341217041
    6. ' rang' → logprob: -11.80483341217041
    7. 'rang' → logprob: -11.92983341217041
    8. ' ran' → logprob: -12.42983341217041
    9. 'ra' → logprob: -13.05483341217041
    10. '   ' → logprob: -13.17983341217041

Token 52: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0013021418126299977
    2. '(' → logprob: -6.751302242279053
    3. '(max' → logprob: -9.626301765441895
    4. ' (' → logprob: -9.751301765441895
    5. ' min' → logprob: -12.001301765441895
    6. '(m' → logprob: -14.251301765441895
    7. 'min' → logprob: -14.501301765441895
    8. '(len' → logprob: -15.876301765441895
    9. '(range' → logprob: -16.12630271911621
    10. ',min' → logprob: -17.00130271911621

Token 53: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.0683535037969705e-05
    2. '_' → logprob: -11.62501049041748
    3. '(x' → logprob: -14.87501049041748
    4. '(' → logprob: -15.25001049041748
    5. '_)' → logprob: -15.37501049041748
    6. 'x' → logprob: -15.87501049041748
    7. '_i' → logprob: -16.000011444091797
    8. ')' → logprob: -16.000011444091797
    9. '(_' → logprob: -16.125011444091797
    10. '(max' → logprob: -16.375011444091797

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045700959162786603
    2. ' ,' → logprob: -8.125456809997559
    3. ',max' → logprob: -8.750456809997559
    4. ',min' → logprob: -13.000456809997559
    5. 'max' → logprob: -16.250457763671875
    6. '，' → logprob: -16.750457763671875
    7. ',end' → logprob: -18.000457763671875
    8. ' ' → logprob: -18.000457763671875
    9. ',int' → logprob: -18.125457763671875
    10. ',m' → logprob: -18.625457763671875

Token 55: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.069992795586586
    2. ' max' → logprob: -2.694992780685425
    3. 'min' → logprob: -9.819993019104004
    4. ' min' → logprob: -13.569993019104004
    5. ',max' → logprob: -15.694993019104004
    6. ' ' → logprob: -15.819993019104004
    7. '	max' → logprob: -15.819993019104004
    8. '(max' → logprob: -16.069992065429688
    9. '+' → logprob: -16.444992065429688
    10. '_max' → logprob: -17.194992065429688

Token 56: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -4.008129963040119e-06
    2. 'x' → logprob: -13.125003814697266
    3. '_' → logprob: -13.500003814697266
    4. ' _' → logprob: -16.125003814697266
    5. ')' → logprob: -16.250003814697266
    6. '_i' → logprob: -16.500003814697266
    7. '+' → logprob: -17.000003814697266
    8. '_)' → logprob: -18.062503814697266
    9. '__' → logprob: -18.062503814697266
    10. ' ' → logprob: -18.187503814697266

Token 57: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740828275680542
    2. ' +' → logprob: -0.9740828275680542
    3. ' ' → logprob: -12.974082946777344
    4. ')' → logprob: -13.849082946777344
    5. ',' → logprob: -14.099082946777344
    6. '+
' → logprob: -15.661582946777344
    7. ' ' → logprob: -15.661582946777344
    8. '+)' → logprob: -15.661582946777344
    9. '```' → logprob: -15.786582946777344
    10. '1' → logprob: -16.036582946777344

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033649615943431854
    2. ' ' → logprob: -3.4086496829986572
    3. ')' → logprob: -13.283649444580078
    4. '2' → logprob: -14.283649444580078
    5. '  ' → logprob: -14.908649444580078
    6. '```' → logprob: -15.283649444580078
    7. '   ' → logprob: -15.471149444580078
    8. ' ' → logprob: -15.783649444580078
    9. ' )' → logprob: -16.596149444580078
    10. '_' → logprob: -16.783649444580078

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.0033853515051305e-05
    2. ' ' → logprob: -9.750060081481934
    3. ')' → logprob: -13.375060081481934
    4. '2' → logprob: -17.250059127807617
    5. '  ' → logprob: -17.500059127807617
    6. '```' → logprob: -17.562559127807617
    7. '１' → logprob: -18.000059127807617
    8. '   ' → logprob: -18.000059127807617
    9. ' )' → logprob: -18.375059127807617
    10. ',' → logprob: -18.562559127807617

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10074755549430847
    2. ':' → logprob: -2.350747585296631
    3. ')' → logprob: -7.975747585296631
    4. '):
' → logprob: -8.600747108459473
    5. ']:' → logprob: -12.475747108459473
    6. ':
' → logprob: -12.475747108459473
    7. '}:' → logprob: -14.100747108459473
    8. ',' → logprob: -14.350747108459473
    9. '```' → logprob: -14.350747108459473
    10. ' ):' → logprob: -14.725747108459473

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01085975393652916
    2. ' result' → logprob: -4.885859966278076
    3. 'result' → logprob: -5.885859966278076
    4. '    
' → logprob: -8.635859489440918
    5. '```' → logprob: -9.135859489440918
    6. '	result' → logprob: -10.010859489440918
    7. ' 
' → logprob: -10.635859489440918
    8. ' if' → logprob: -10.885859489440918
    9. '   ' → logprob: -11.135859489440918
    10. ' ```' → logprob: -11.510859489440918

Token 62: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.2527864873409271
    2. 'result' (adapté à ' result') → logprob: -1.5027865171432495
    3. '   ' → logprob: -7.127786636352539
    4. ' ```' → logprob: -11.627786636352539
    5. '	result' → logprob: -11.877786636352539
    6. '    ' → logprob: -11.877786636352539
    7. '```' → logprob: -12.002786636352539
    8. ' ' → logprob: -12.127786636352539
    9. '[result' → logprob: -12.627786636352539
    10. ' if' → logprob: -12.752786636352539

Token 63: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008616226725280285
    2. '.' → logprob: -4.7586164474487305
    3. '.app' → logprob: -15.00861644744873
    4. '.extend' → logprob: -15.00861644744873
    5. 'append' → logprob: -15.25861644744873
    6. ' .' → logprob: -15.25861644744873
    7. '.ap' → logprob: -15.38361644744873
    8. '.push' → logprob: -15.75861644744873
    9. '.add' → logprob: -15.88361644744873
    10. '.Append' → logprob: -16.383615493774414

Token 64: '(str' (ID: 7946)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0020604499150067568
    2. '(' → logprob: -6.252060413360596
    3. 'i' → logprob: -9.002060890197754
    4. '(str' → logprob: -12.127060890197754
    5. '(chr' → logprob: -13.627060890197754
    6. '((' → logprob: -14.627060890197754
    7. '('' → logprob: -14.752060890197754
    8. '(
' → logprob: -15.127060890197754
    9. '(int' → logprob: -15.627060890197754
    10. ' i' → logprob: -15.877060890197754

Token 65: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0002613358374219388
    2. '(' → logprob: -8.250261306762695
    3. '(
' → logprob: -17.500261306762695
    4. ' (' → logprob: -17.625261306762695
    5. ')' → logprob: -18.875261306762695
    6. '((' → logprob: -19.000261306762695
    7. '(x' → logprob: -19.000261306762695
    8. 'i' → logprob: -20.000261306762695
    9. '(min' → logprob: -20.750261306762695
    10. '(a' → logprob: -20.875261306762695

Token 66: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12695057690143585
    2. '))' → logprob: -2.12695050239563
    3. ')
' → logprob: -11.25195026397705
    4. '))
' → logprob: -12.25195026397705
    5. ')))' → logprob: -12.87695026397705
    6. ' )' → logprob: -13.87695026397705
    7. ' ))' → logprob: -15.00195026397705
    8. ' ' → logprob: -15.62695026397705
    9. '   ' → logprob: -15.75195026397705
    10. ')`' → logprob: -16.376951217651367

Token 67: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00020926215802319348
    2. ' print' → logprob: -8.750208854675293
    3. ' 
' → logprob: -10.500208854675293
    4. '  
' → logprob: -11.500208854675293
    5. ' ' → logprob: -12.125208854675293
    6. '```' → logprob: -13.250208854675293
    7. '
' → logprob: -13.375208854675293
    8. '    
' → logprob: -14.375208854675293
    9. '\n' → logprob: -14.750208854675293
    10. '' → logprob: -14.750208854675293

Token 68: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.106423020362854
    2. '(' → logprob: -2.6064229011535645
    3. '("' → logprob: -3.6064229011535645
    4. '("("' → logprob: -12.481423377990723
    5. ''' → logprob: -12.981423377990723
    6. '()' → logprob: -13.731423377990723
    7. '"' → logprob: -14.106423377990723
    8. '(
' → logprob: -15.481423377990723
    9. '(len' → logprob: -15.481423377990723
    10. '(*' → logprob: -15.731423377990723

Token 69: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.14622549712657928
    2. ' ' → logprob: -2.3962254524230957
    3. ''' → logprob: -3.1462254524230957
    4. ' "' → logprob: -6.396225452423096
    5. ' )' → logprob: -8.646225929260254
    6. '(' → logprob: -10.396225929260254
    7. '  ' → logprob: -10.771225929260254
    8. ' ,' → logprob: -10.896225929260254
    9. ',' → logprob: -11.521225929260254
    10. ' ")' → logprob: -11.896225929260254

Token 70: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.531315314830863e-06
    2. 'j' → logprob: -13.000003814697266
    3. 'jo' → logprob: -14.000003814697266
    4. ' join' → logprob: -15.375003814697266
    5. 'print' → logprob: -15.625003814697266
    6. '```' → logprob: -17.250003814697266
    7. 'write' → logprob: -19.625003814697266
    8. '(join' → logprob: -19.625003814697266
    9. ' ' → logprob: -20.000003814697266
    10. '.' → logprob: -20.000003814697266

Token 71: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -2.0100624169572257e-05
    2. 'result' → logprob: -11.500020027160645
    3. '(' → logprob: -11.625020027160645
    4. ')' → logprob: -14.750020027160645
    5. '(results' → logprob: -15.625020027160645
    6. '=result' → logprob: -15.625020027160645
    7. ',result' → logprob: -15.750020027160645
    8. '(res' → logprob: -16.37502098083496
    9. ' result' → logprob: -17.50002098083496
    10. ' (' → logprob: -17.50002098083496

Token 72: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00671584764495492
    2. ')' → logprob: -5.006715774536133
    3. '))
' → logprob: -15.131715774536133
    4. ')))' → logprob: -15.381715774536133
    5. ' ))' → logprob: -16.756715774536133
    6. '"))' → logprob: -16.881715774536133
    7. '])' → logprob: -17.881715774536133
    8. ')
' → logprob: -18.256715774536133
    9. ''))' → logprob: -18.506715774536133
    10. '),' → logprob: -19.006715774536133


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 70
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 56
Précision stricte (1ère position): 51.43%
Précision adaptée (1ère position): 51.43%
Précision (top 10): 80.00%
================================================================================
