================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, d = map(int, input().split())
l = [[] for _ in range(n)]
for i in range(n):
    l[i] = list(map(int, input().split()))
ans = 0
for i in range(n - 1):
    for j in range(i + 1, n):
        c = 0
        for h in range(d):
            c += (l[i][h] - l[j][h]) ** 2
        if (int(c ** 0.5)) ** 2 == c:
            ans += 1
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' d' (ID: 272)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09697900712490082
    2. ',' → logprob: -2.9719789028167725
    3. ' =' → logprob: -3.2219789028167725
    4. ')' → logprob: -7.221979141235352
    5. ' ' → logprob: -8.971979141235352
    6. '+' → logprob: -9.096979141235352
    7. '*' → logprob: -9.221979141235352
    8. '_' → logprob: -9.471979141235352
    9. '[' → logprob: -9.596979141235352
    10. '.' → logprob: -10.471979141235352

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34155362844467163
    2. ' map' → logprob: -1.4665536880493164
    3. 'map' → logprob: -4.091553688049316
    4. ' n' → logprob: -4.091553688049316
    5. '0' → logprob: -4.591553688049316
    6. ' input' → logprob: -5.466553688049316
    7. '10' → logprob: -5.966553688049316
    8. 'input' → logprob: -6.091553688049316
    9. ' np' → logprob: -6.216553688049316
    10. '1' → logprob: -6.341553688049316

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008940126746892929
    2. '(lambda' → logprob: -5.50894021987915
    3. '(int' → logprob: -6.13394021987915
    4. '(str' → logprob: -6.25894021987915
    5. '<|end|>' → logprob: -8.008939743041992
    6. '```' → logprob: -9.508939743041992
    7. ')' → logprob: -10.508939743041992
    8. '(user' → logprob: -10.633939743041992
    9. '[int' → logprob: -10.758939743041992
    10. '(token' → logprob: -10.758939743041992

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.050596535205841064
    2. ')' → logprob: -3.3005964756011963
    3. 'input' → logprob: -4.675596714019775
    4. '(' → logprob: -6.175596714019775
    5. '```' → logprob: -8.300596237182617
    6. '`)' → logprob: -8.925596237182617
    7. '[input' → logprob: -9.300596237182617
    8. ' input' → logprob: -9.300596237182617
    9. '`' → logprob: -9.550596237182617
    10. '=input' → logprob: -10.050596237182617

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06210537999868393
    2. ' input' → logprob: -2.812105417251587
    3. '(input' → logprob: -8.937105178833008
    4. ')' → logprob: -12.187105178833008
    5. ',input' → logprob: -14.687105178833008
    6. '<input' → logprob: -15.312105178833008
    7. '=input' → logprob: -16.312105178833008
    8. '```' → logprob: -16.312105178833008
    9. '[input' → logprob: -16.312105178833008
    10. '(' → logprob: -16.812105178833008

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4964120090007782
    2. '()' → logprob: -1.1214120388031006
    3. ')' → logprob: -3.6214120388031006
    4. '(' → logprob: -4.2464118003845215
    5. '().' → logprob: -5.2464118003845215
    6. '`()' → logprob: -5.7464118003845215
    7. '(""))' → logprob: -6.1214118003845215
    8. '('' → logprob: -6.1214118003845215
    9. '`)' → logprob: -6.6214118003845215
    10. '>>()' → logprob: -6.8714118003845215

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019607478752732277
    2. 'strip' → logprob: -6.251960754394531
    3. 'rstrip' → logprob: -10.376960754394531
    4. ' split' → logprob: -14.501960754394531
    5. 'read' → logprob: -15.126960754394531
    6. '(split' → logprob: -15.251960754394531
    7. ')' → logprob: -17.12696075439453
    8. 'spl' → logprob: -17.50196075439453
    9. 'startswith' → logprob: -17.75196075439453
    10. '_split' → logprob: -18.37696075439453

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0828104242682457
    2. '())' → logprob: -2.707810401916504
    3. '))' → logprob: -4.457810401916504
    4. '()' → logprob: -7.082810401916504
    5. '()))' → logprob: -8.832810401916504
    6. '`)' → logprob: -9.332810401916504
    7. '(' → logprob: -9.457810401916504
    8. ')`' → logprob: -11.957810401916504
    9. '```' → logprob: -11.957810401916504
    10. '('' → logprob: -12.082810401916504

Token 11: 'l' (ID: 75)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3990740776062012
    2. '\n' → logprob: -1.3990740776062012
    3. 'for' → logprob: -2.149074077606201
    4. ' ' → logprob: -2.899074077606201
    5. '\' → logprob: -3.149074077606201
    6. ''' → logprob: -3.274074077606201
    7. ',' → logprob: -3.274074077606201
    8. '`' → logprob: -3.524074077606201
    9. 's' → logprob: -3.649074077606201
    10. '#' → logprob: -3.899074077606201

Token 12: ' =' (ID: 314)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39339739084243774
    2. 'ist' → logprob: -2.268397331237793
    3. ' =' → logprob: -2.518397331237793
    4. 'e' → logprob: -3.268397331237793
    5. '=' → logprob: -3.393397331237793
    6. 'is' → logprob: -3.768397331237793
    7. 's' → logprob: -4.143397331237793
    8. '_' → logprob: -5.268397331237793
    9. 'en' → logprob: -5.268397331237793
    10. '[i' → logprob: -5.518397331237793

Token 13: ' [[]' (ID: 182908)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4147230088710785
    2. '[' → logprob: -1.7897230386734009
    3. 'list' → logprob: -2.1647229194641113
    4. '[int' → logprob: -3.7897229194641113
    5. '[list' → logprob: -4.414722919464111
    6. ' []' → logprob: -4.539722919464111
    7. ' [' → logprob: -5.539722919464111
    8. '[input' → logprob: -5.664722919464111
    9. ' list' → logprob: -5.789722919464111
    10. '[n' → logprob: -7.289722919464111

Token 14: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012016837485134602
    2. 'for' → logprob: -5.262016773223877
    3. ' for' → logprob: -5.512016773223877
    4. ',' → logprob: -6.512016773223877
    5. '[' → logprob: -7.137016773223877
    6. ']' → logprob: -8.637017250061035
    7. ',)' → logprob: -9.262017250061035
    8. ')]' → logprob: -10.012017250061035
    9. '()' → logprob: -10.387017250061035
    10. '(' → logprob: -10.637017250061035

Token 15: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02184462547302246
    2. ' range' → logprob: -4.521844863891602
    3. ' _' → logprob: -4.771844863891602
    4. 'range' → logprob: -6.646844863891602
    5. '_range' → logprob: -8.146844863891602
    6. ' i' → logprob: -8.146844863891602
    7. ' ' → logprob: -8.646844863891602
    8. '(' → logprob: -9.396844863891602
    9. '(range' → logprob: -9.396844863891602
    10. 'i' → logprob: -10.771844863891602

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0018046533223241568
    2. 'in' → logprob: -7.126804828643799
    3. '_' → logprob: -7.751804828643799
    4. '(' → logprob: -8.25180435180664
    5. 'range' → logprob: -8.37680435180664
    6. 'i' → logprob: -10.87680435180664
    7. ' ' → logprob: -11.00180435180664
    8. ' range' → logprob: -11.00180435180664
    9. ' i' → logprob: -11.50180435180664
    10. '(n' → logprob: -12.62680435180664

Token 17: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '(range' → logprob: -17.000431060791016
    4. '	range' → logprob: -20.375431060791016
    5. ' ' → logprob: -20.500431060791016
    6. ')' → logprob: -20.750431060791016
    7. 'r' → logprob: -21.250431060791016
    8. '   ' → logprob: -21.750431060791016
    9. 'rang' → logprob: -22.500431060791016
    10. '  ' → logprob: -23.000431060791016

Token 18: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000344640837283805
    2. '(' → logprob: -8.000344276428223
    3. '(d' → logprob: -11.625344276428223
    4. ' (' → logprob: -15.875344276428223
    5. '(l' → logprob: -17.25034523010254
    6. '((' → logprob: -17.62534523010254
    7. 'n' → logprob: -17.62534523010254
    8. '(len' → logprob: -18.12534523010254
    9. '(s' → logprob: -18.25034523010254
    10. ')(' → logprob: -18.75034523010254

Token 19: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.000763510703109e-05
    2. ')' → logprob: -11.375040054321289
    3. ' )' → logprob: -11.750040054321289
    4. ']' → logprob: -12.000040054321289
    5. ')])' → logprob: -12.000040054321289
    6. '])]' → logprob: -12.000040054321289
    7. '])' → logprob: -13.875040054321289
    8. '')]' → logprob: -15.125040054321289
    9. '))' → logprob: -15.375040054321289
    10. ')],' → logprob: -15.500040054321289

Token 20: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005096645909361541
    2. ' for' → logprob: -7.625509738922119
    3. 'd' → logprob: -11.750509262084961
    4. '```' → logprob: -12.125509262084961
    5. 'n' → logprob: -12.750509262084961
    6. '`' → logprob: -13.750509262084961
    7. 'f' → logprob: -14.125509262084961
    8. 'r' → logprob: -14.250509262084961
    9. ')' → logprob: -14.500509262084961
    10. 'i' → logprob: -14.625509262084961

Token 21: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.056202132254838943
    2. ' _' → logprob: -3.6812021732330322
    3. '_' → logprob: -4.056201934814453
    4. ' ' → logprob: -4.431201934814453
    5. 'i' → logprob: -8.681201934814453
    6. ' range' → logprob: -10.556201934814453
    7. ' ' → logprob: -10.931201934814453
    8. ' ‌' → logprob: -10.931201934814453
    9. '_i' → logprob: -12.681201934814453
    10. ' d' → logprob: -12.931201934814453

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0791701227426529
    2. 'in' → logprob: -2.5791702270507812
    3. ' ' → logprob: -8.329170227050781
    4. 'n' → logprob: -10.829170227050781
    5. '_' → logprob: -12.454170227050781
    6. 'range' → logprob: -12.454170227050781
    7. '  ' → logprob: -12.829170227050781
    8. '	in' → logprob: -13.204170227050781
    9. 's' → logprob: -14.204170227050781
    10. ')' → logprob: -14.454170227050781

Token 23: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931503415107727
    2. 'range' → logprob: -0.6931503415107727
    3. ' ' → logprob: -13.193150520324707
    4. '_' → logprob: -15.068150520324707
    5. '	range' → logprob: -15.693150520324707
    6. '(range' → logprob: -15.943150520324707
    7. 'in' → logprob: -16.19314956665039
    8. ' xrange' → logprob: -16.31814956665039
    9. 'd' → logprob: -16.44314956665039
    10. ')' → logprob: -16.44314956665039

Token 24: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07913928478956223
    2. '(' → logprob: -2.579139232635498
    3. '(d' → logprob: -8.329139709472656
    4. '(m' → logprob: -12.954139709472656
    5. '(s' → logprob: -13.704139709472656
    6. '()' → logprob: -13.829139709472656
    7. ' (' → logprob: -13.954139709472656
    8. '(l' → logprob: -14.329139709472656
    9. '(a' → logprob: -14.579139709472656
    10. '(i' → logprob: -14.829139709472656

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00015252856246661395
    2. ')' → logprob: -9.375152587890625
    3. '):
' → logprob: -10.250152587890625
    4. ':' → logprob: -10.875152587890625
    5. ' ):' → logprob: -12.000152587890625
    6. ']:' → logprob: -13.125152587890625
    7. '-' → logprob: -13.500152587890625
    8. '+' → logprob: -13.500152587890625
    9. '}:' → logprob: -14.625152587890625
    10. 'd' → logprob: -15.000152587890625

Token 26: '   ' (ID: 271)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5915688872337341
    2. '   ' → logprob: -0.8415688872337341
    3. 'l' → logprob: -4.966568946838379
    4. ' for' → logprob: -6.341568946838379
    5. '    ' → logprob: -6.466568946838379
    6. ' ' → logprob: -6.716568946838379
    7. ' n' → logprob: -6.841568946838379
    8. '```' → logprob: -7.216568946838379
    9. 'd' → logprob: -7.591568946838379
    10. ' d' → logprob: -7.716568946838379

Token 27: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.37403595447540283
    2. ' l' → logprob: -1.4990359544754028
    3. 'd' → logprob: -2.9990358352661133
    4. 'for' → logprob: -4.499035835266113
    5. ' d' → logprob: -4.499035835266113
    6. ' for' → logprob: -4.749035835266113
    7. 'a' → logprob: -6.374035835266113
    8. 'x' → logprob: -6.374035835266113
    9. 'data' → logprob: -7.874035835266113
    10. '   ' → logprob: -7.874035835266113

Token 28: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001176893594674766
    2. '[' → logprob: -6.751176834106445
    3. '[int' → logprob: -13.001176834106445
    4. '\[' → logprob: -13.126176834106445
    5. '[l' → logprob: -14.501176834106445
    6. '[I' → logprob: -15.001176834106445
    7. '[input' → logprob: -15.001176834106445
    8. 'i' → logprob: -15.126176834106445
    9. '[o' → logprob: -16.001176834106445
    10. '[u' → logprob: -16.126176834106445

Token 29: ']' (ID: 60)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.03977493569254875
    2. ').' → logprob: -3.5397748947143555
    3. '.append' → logprob: -4.7897748947143555
    4. '.' → logprob: -7.0397748947143555
    5. ']' → logprob: -7.9147748947143555
    6. ')' → logprob: -8.539774894714355
    7. 'append' → logprob: -9.289774894714355
    8. '=' → logprob: -9.414774894714355
    9. ' ].' → logprob: -10.664774894714355
    10. '}.' → logprob: -12.664774894714355

Token 30: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2659268379211426
    2. '.append' → logprob: -1.5159268379211426
    3. '=' → logprob: -4.390926837921143
    4. '.=' → logprob: -6.640926837921143
    5. 'append' → logprob: -9.765926361083984
    6. '.extend' → logprob: -9.765926361083984
    7. ' =' → logprob: -10.390926361083984
    8. '.app' → logprob: -11.390926361083984
    9. '_append' → logprob: -11.765926361083984
    10. '.ap' → logprob: -12.015926361083984

Token 31: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.18830189108848572
    2. ' list' → logprob: -1.813301920890808
    3. '[]' → logprob: -5.813302040100098
    4. '[' → logprob: -5.813302040100098
    5. '[list' → logprob: -6.313302040100098
    6. ' [' → logprob: -8.063302040100098
    7. 'map' → logprob: -9.063302040100098
    8. ' []' → logprob: -9.063302040100098
    9. '[input' → logprob: -9.938302040100098
    10. 'input' → logprob: -9.938302040100098

Token 32: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.16221119463443756
    2. '(' → logprob: -1.9122111797332764
    3. '(int' → logprob: -6.9122114181518555
    4. '(input' → logprob: -7.1622114181518555
    5. '(range' → logprob: -9.287211418151855
    6. '(s' → logprob: -9.787211418151855
    7. '(list' → logprob: -10.287211418151855
    8. '(eval' → logprob: -12.037211418151855
    9. '((' → logprob: -12.287211418151855
    10. '(
' → logprob: -12.787211418151855

Token 33: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004438971809577197
    2. 'int' → logprob: -8.250443458557129
    3. '(' → logprob: -8.750443458557129
    4. '[int' → logprob: -11.625443458557129
    5. '<int' → logprob: -11.750443458557129
    6. '(input' → logprob: -12.500443458557129
    7. '```' → logprob: -13.625443458557129
    8. '(lambda' → logprob: -14.375443458557129
    9. ',int' → logprob: -14.875443458557129
    10. '=int' → logprob: -15.000443458557129

Token 34: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.252200186252594
    2. ',input' → logprob: -1.6272001266479492
    3. ',' → logprob: -3.752200126647949
    4. '(' → logprob: -6.002200126647949
    5. 'input' → logprob: -7.752200126647949
    6. ' ,' → logprob: -10.87720012664795
    7. '(int' → logprob: -11.37720012664795
    8. ' (' → logprob: -11.62720012664795
    9. ' input' → logprob: -12.25220012664795
    10. ')' → logprob: -12.50220012664795

Token 35: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.038111720234155655
    2. ' input' → logprob: -3.288111686706543
    3. '(input' → logprob: -9.913111686706543
    4. ',input' → logprob: -11.163111686706543
    5. ')' → logprob: -12.288111686706543
    6. '_input' → logprob: -14.913111686706543
    7. 'list' → logprob: -15.038111686706543
    8. '	input' → logprob: -15.413111686706543
    9. '=input' → logprob: -15.413111686706543
    10. '[input' → logprob: -15.538111686706543

Token 36: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0025133544113487005
    2. '()' → logprob: -6.002513408660889
    3. '())' → logprob: -11.25251293182373
    4. ')' → logprob: -11.37751293182373
    5. '()))' → logprob: -11.87751293182373
    6. '(' → logprob: -13.62751293182373
    7. ' ().' → logprob: -13.62751293182373
    8. '()
' → logprob: -14.50251293182373
    9. '())))' → logprob: -14.62751293182373
    10. '()).' → logprob: -14.75251293182373

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.676292231422849e-05
    2. 'strip' → logprob: -11.625017166137695
    3. ' split' → logprob: -11.875017166137695
    4. '(split' → logprob: -14.625017166137695
    5. 'rstrip' → logprob: -15.375017166137695
    6. 'spl' → logprob: -16.000017166137695
    7. ')' → logprob: -18.625017166137695
    8. ' ' → logprob: -19.125017166137695
    9. 'read' → logprob: -19.500017166137695
    10. 'plit' → logprob: -19.500017166137695

Token 38: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.13293056190013885
    2. '())' → logprob: -2.1329305171966553
    3. '))' → logprob: -5.882930755615234
    4. '()' → logprob: -6.007930755615234
    5. '(' → logprob: -7.882930755615234
    6. ')' → logprob: -8.507930755615234
    7. '()))
' → logprob: -9.257930755615234
    8. '())))' → logprob: -10.382930755615234
    9. '()));' → logprob: -12.132930755615234
    10. '('' → logprob: -12.257930755615234

Token 39: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022108059376478195
    2. ')' → logprob: -5.39710807800293
    3. '[' → logprob: -6.02210807800293
    4. ' for' → logprob: -6.14710807800293
    5. '```' → logprob: -6.39710807800293
    6. 'f' → logprob: -6.39710807800293
    7. 'i' → logprob: -6.52210807800293
    8. 'm' → logprob: -6.77210807800293
    9. '
' → logprob: -6.77210807800293
    10. '\n' → logprob: -6.89710807800293

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38244301080703735
    2. '=' → logprob: -1.8824429512023926
    3. '[' → logprob: -2.1324429512023926
    4. '_' → logprob: -3.5074429512023926
    5. '(' → logprob: -5.257442951202393
    6. '[:]' → logprob: -5.257442951202393
    7. 's' → logprob: -6.257442951202393
    8. '[]' → logprob: -6.507442951202393
    9. '.' → logprob: -6.632442951202393
    10. '=[]' → logprob: -7.382442951202393

Token 41: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5768283009529114
    2. '[' → logprob: -2.0768282413482666
    3. '[]' → logprob: -2.3268282413482666
    4. ' []' → logprob: -2.4518282413482666
    5. ' [' → logprob: -2.5768282413482666
    6. ' ' → logprob: -3.4518282413482666
    7. '[max' → logprob: -5.451828479766846
    8. 'max' → logprob: -6.076828479766846
    9. '[n' → logprob: -6.201828479766846
    10. ' l' → logprob: -6.576828479766846

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5292503833770752
    2. '[' → logprob: -1.5292503833770752
    3. '[]' → logprob: -1.7792503833770752
    4. 'max' → logprob: -5.279250144958496
    5. 'sum' → logprob: -5.404250144958496
    6. '[max' → logprob: -5.404250144958496
    7. 'set' → logprob: -6.154250144958496
    8. '[n' → logprob: -6.279250144958496
    9. 'l' → logprob: -6.654250144958496
    10. '1' → logprob: -6.779250144958496

Token 43: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0110020712018013
    2. '
' → logprob: -5.386002063751221
    3. '\n' → logprob: -5.636002063751221
    4. ' for' → logprob: -6.136002063751221
    5. '```' → logprob: -7.886002063751221
    6. '\' → logprob: -9.136002540588379
    7. '<|end|>' → logprob: -9.136002540588379
    8. '``' → logprob: -11.886002540588379
    9. '' → logprob: -12.011002540588379
    10. '\
' → logprob: -12.636002540588379

Token 44: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.710618905955926e-05
    2. '```' → logprob: -10.375097274780273
    3. ' for' → logprob: -10.625097274780273
    4. 'f' → logprob: -10.875097274780273
    5. '\n' → logprob: -11.500097274780273
    6. '\' → logprob: -12.625097274780273
    7. '
' → logprob: -13.125097274780273
    8. 'i' → logprob: -13.125097274780273
    9. '`' → logprob: -13.625097274780273
    10. 'r' → logprob: -14.375097274780273

Token 45: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0008061755215749145
    2. ' _' → logprob: -8.250805854797363
    3. ' ' → logprob: -8.625805854797363
    4. ' range' → logprob: -8.625805854797363
    5. ' j' → logprob: -9.250805854797363
    6. '_' → logprob: -9.875805854797363
    7. 'i' → logprob: -11.500805854797363
    8. ' a' → logprob: -12.000805854797363
    9. ' n' → logprob: -12.125805854797363
    10. ' I' → logprob: -12.750805854797363

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02382080815732479
    2. ' ' → logprob: -4.273820877075195
    3. 'in' → logprob: -4.648820877075195
    4. '  ' → logprob: -11.273820877075195
    5. 'range' → logprob: -12.148820877075195
    6. ' range' → logprob: -12.273820877075195
    7. ' i' → logprob: -12.773820877075195
    8. ' n' → logprob: -12.898820877075195
    9. 'n' → logprob: -13.273820877075195
    10. ' ' → logprob: -13.523820877075195

Token 47: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011055837385356426
    2. 'range' → logprob: -4.511055946350098
    3. ' r' → logprob: -12.761055946350098
    4. ' ' → logprob: -13.386055946350098
    5. '(range' → logprob: -13.761055946350098
    6. ' ran' → logprob: -14.136055946350098
    7. '	range' → logprob: -14.636055946350098
    8. ' ra' → logprob: -15.136055946350098
    9. ' xrange' → logprob: -15.636055946350098
    10. ' l' → logprob: -15.761055946350098

Token 48: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.008617054671049118
    2. '(' → logprob: -4.758616924285889
    3. '(range' → logprob: -14.508617401123047
    4. '(len' → logprob: -14.633617401123047
    5. ' (' → logprob: -14.758617401123047
    6. ' n' → logprob: -14.883617401123047
    7. '(d' → logprob: -15.133617401123047
    8. '(s' → logprob: -15.758617401123047
    9. 'n' → logprob: -16.258617401123047
    10. '()' → logprob: -16.508617401123047

Token 49: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023645009845495224
    2. '+' → logprob: -4.398644924163818
    3. ')' → logprob: -5.148644924163818
    4. '):
' → logprob: -5.648644924163818
    5. '-' → logprob: -6.648644924163818
    6. ' ):' → logprob: -8.273645401000977
    7. '   ' → logprob: -9.148645401000977
    8. ' -' → logprob: -11.023645401000977
    9. ',' → logprob: -11.148645401000977
    10. ' +' → logprob: -11.273645401000977

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16023945808410645
    2. ' ' → logprob: -1.9102394580841064
    3. '2' → logprob: -11.535239219665527
    4. '  ' → logprob: -12.660239219665527
    5. '-' → logprob: -14.035239219665527
    6. '   ' → logprob: -14.660239219665527
    7. ' -' → logprob: -15.597739219665527
    8. '    ' → logprob: -16.035240173339844
    9. '3' → logprob: -16.160240173339844
    10. ')' → logprob: -16.222740173339844

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.215330409351736e-05
    2. ' ' → logprob: -10.125041961669922
    3. '2' → logprob: -13.250041961669922
    4. '-' → logprob: -15.500041961669922
    5. '１' → logprob: -17.750041961669922
    6. '   ' → logprob: -17.875041961669922
    7. 'd' → logprob: -18.000041961669922
    8. ')' → logprob: -18.000041961669922
    9. '  ' → logprob: -18.125041961669922
    10. ' -' → logprob: -18.750041961669922

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04077089577913284
    2. ')' → logprob: -3.915771007537842
    3. ',' → logprob: -4.040771007537842
    4. ' ):' → logprob: -6.165771007537842
    5. ':' → logprob: -9.290770530700684
    6. '):
' → logprob: -9.415770530700684
    7. '+' → logprob: -9.790770530700684
    8. ' ,' → logprob: -10.165770530700684
    9. ' ' → logprob: -10.915770530700684
    10. ' )' → logprob: -11.290770530700684

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08030211925506592
    2. ' for' → logprob: -2.5803022384643555
    3. ' ' → logprob: -7.5803022384643555
    4. 'for' → logprob: -7.8303022384643555
    5. '```' → logprob: -8.455302238464355
    6. '    ' → logprob: -9.330302238464355
    7. '	for' → logprob: -9.705302238464355
    8. '       ' → logprob: -10.705302238464355
    9. '  ' → logprob: -11.080302238464355
    10. '
' → logprob: -11.205302238464355

Token 54: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1610969454050064
    2. 'for' (adapté à ' for') → logprob: -1.9110969305038452
    3. '   ' → logprob: -7.161097049713135
    4. ' ' → logprob: -9.911096572875977
    5. '	for' → logprob: -10.786096572875977
    6. '    ' → logprob: -11.036096572875977
    7. ' ' → logprob: -12.536096572875977
    8. '```' → logprob: -12.786096572875977
    9. '  ' → logprob: -14.411096572875977
    10. ' ```' → logprob: -14.786096572875977

Token 55: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2212173193693161
    2. ' range' → logprob: -1.9712172746658325
    3. 'range' → logprob: -3.471217393875122
    4. 'j' → logprob: -3.596217393875122
    5. ' ' → logprob: -8.096217155456543
    6. '   ' → logprob: -9.221217155456543
    7. '    ' → logprob: -9.471217155456543
    8. '  ' → logprob: -10.221217155456543
    9. ' i' → logprob: -10.846217155456543
    10. '<|end|>' → logprob: -10.846217155456543

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021148066967725754
    2. 'in' → logprob: -3.8961479663848877
    3. ' ' → logprob: -8.021147727966309
    4. 'range' → logprob: -8.896147727966309
    5. ' i' → logprob: -9.896147727966309
    6. '  ' → logprob: -10.271147727966309
    7. ' range' → logprob: -10.396147727966309
    8. '	in' → logprob: -11.396147727966309
    9. '   ' → logprob: -12.896147727966309
    10. 'n' → logprob: -12.896147727966309

Token 57: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.575955867767334
    2. 'range' → logprob: -0.825955867767334
    3. ' ' → logprob: -11.700956344604492
    4. '(range' → logprob: -12.200956344604492
    5. '	range' → logprob: -14.200956344604492
    6. ' i' → logprob: -14.450956344604492
    7. '  ' → logprob: -14.450956344604492
    8. 'r' → logprob: -15.200956344604492
    9. '   ' → logprob: -15.325956344604492
    10. ' ran' → logprob: -15.575956344604492

Token 58: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.002710961503908038
    2. '(range' → logprob: -6.502710819244385
    3. ' range' → logprob: -7.502710819244385
    4. '(' → logprob: -7.627710819244385
    5. 'range' → logprob: -8.877711296081543
    6. ' i' → logprob: -11.252711296081543
    7. '(j' → logprob: -11.627711296081543
    8. ' (' → logprob: -12.752711296081543
    9. '(n' → logprob: -12.877711296081543
    10. 'i' → logprob: -13.502711296081543

Token 59: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12694071233272552
    2. ' +' → logprob: -2.1269407272338867
    3. '1' → logprob: -11.751940727233887
    4. '+i' → logprob: -13.126940727233887
    5. '+j' → logprob: -13.876940727233887
    6. '   ' → logprob: -14.876940727233887
    7. ' ' → logprob: -15.126940727233887
    8. '+
' → logprob: -15.126940727233887
    9. '+)' → logprob: -15.251940727233887
    10. ')' → logprob: -15.376940727233887

Token 60: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03139379993081093
    2. 'n' → logprob: -4.156394004821777
    3. ' n' → logprob: -4.656394004821777
    4. ' ' → logprob: -5.906394004821777
    5. '(n' → logprob: -5.906394004821777
    6. '(' → logprob: -8.531394004821777
    7. ',' → logprob: -9.781394004821777
    8. ' ,' → logprob: -10.906394004821777
    9. ',n' → logprob: -12.031394004821777
    10. '   ' → logprob: -12.281394004821777

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47570958733558655
    2. 'n' → logprob: -0.9757095575332642
    3. '(n' → logprob: -6.475709438323975
    4. '(' → logprob: -10.100709915161133
    5. ' n' → logprob: -10.100709915161133
    6. 'i' → logprob: -12.725709915161133
    7. ' ' → logprob: -13.850709915161133
    8. 'int' → logprob: -13.975709915161133
    9. ')' → logprob: -14.100709915161133
    10. ')n' → logprob: -14.600709915161133

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026189515367150307
    2. ' ,' → logprob: -4.15118932723999
    3. ',n' → logprob: -4.65118932723999
    4. '(n' → logprob: -7.77618932723999
    5. 'n' → logprob: -9.276189804077148
    6. '):' → logprob: -10.776189804077148
    7. ' n' → logprob: -11.651189804077148
    8. '(' → logprob: -13.026189804077148
    9. ' ):' → logprob: -13.276189804077148
    10. ' ' → logprob: -13.401189804077148

Token 63: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25193241238594055
    2. ' n' → logprob: -1.5019323825836182
    3. ' ' → logprob: -13.626932144165039
    4. '   ' → logprob: -13.626932144165039
    5. '	n' → logprob: -14.376932144165039
    6. ')n' → logprob: -15.876932144165039
    7. '    ' → logprob: -16.50193214416504
    8. ')' → logprob: -16.50193214416504
    9. '  ' → logprob: -17.75193214416504
    10. '(n' → logprob: -18.25193214416504

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018280261429026723
    2. ' ):' → logprob: -9.50018310546875
    3. '):
' → logprob: -10.00018310546875
    4. ')' → logprob: -10.12518310546875
    5. ':' → logprob: -10.75018310546875
    6. '   ' → logprob: -15.25018310546875
    7. '}:' → logprob: -15.87518310546875
    8. '):
' → logprob: -15.87518310546875
    9. '():' → logprob: -16.50018310546875
    10. ''):' → logprob: -17.00018310546875

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003947794437408447
    2. '   ' → logprob: -6.253947734832764
    3. ':' → logprob: -7.253947734832764
    4. '<|end|>' → logprob: -7.628947734832764
    5. '    ' → logprob: -8.503948211669922
    6. '        
' → logprob: -9.003948211669922
    7. ' ' → logprob: -9.503948211669922
    8. ':
' → logprob: -9.753948211669922
    9. '    
' → logprob: -10.003948211669922
    10. '      ' → logprob: -10.378948211669922

Token 66: ' c' (ID: 274)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1909809559583664
    2. '       ' → logprob: -2.690980911254883
    3. ' k' → logprob: -3.440980911254883
    4. ' sum' → logprob: -3.940980911254883
    5. ' s' → logprob: -4.190980911254883
    6. 'sum' → logprob: -5.065980911254883
    7. ' d' → logprob: -5.315980911254883
    8. ' c' → logprob: -5.940980911254883
    9. ' distance' → logprob: -5.940980911254883
    10. 'k' → logprob: -5.940980911254883

Token 67: ' =' (ID: 314)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -1.007508635520935
    2. ' =' → logprob: -1.382508635520935
    3. '=' → logprob: -1.507508635520935
    4. 'nt' → logprob: -1.882508635520935
    5. 'o' → logprob: -5.632508754730225
    6. 'ont' → logprob: -6.507508754730225
    7. 'ounter' → logprob: -6.507508754730225
    8. ' ' → logprob: -7.257508754730225
    9. '_' → logprob: -7.257508754730225
    10. '   ' → logprob: -8.257508277893066

Token 68: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002401816425845027
    2. ' ' → logprob: -6.252401828765869
    3. 'sum' → logprob: -7.877401828765869
    4. ' sum' → logprob: -10.377401351928711
    5. 'd' → logprob: -10.502401351928711
    6. '   ' → logprob: -11.627401351928711
    7. 'abs' → logprob: -11.877401351928711
    8. '1' → logprob: -12.252401351928711
    9. ' d' → logprob: -12.502401351928711
    10. 'l' → logprob: -13.877401351928711

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01647476851940155
    2. 'sum' → logprob: -4.141474723815918
    3. 'abs' → logprob: -8.516474723815918
    4. '1' → logprob: -9.641474723815918
    5. 'd' → logprob: -9.766474723815918
    6. '[' → logprob: -10.391474723815918
    7. ' ' → logprob: -10.766474723815918
    8. 'l' → logprob: -11.016474723815918
    9. '[d' → logprob: -11.516474723815918
    10. 'True' → logprob: -12.391474723815918

Token 70: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003922976087778807
    2. '
' → logprob: -6.253922939300537
    3. '<|end|>' → logprob: -7.003922939300537
    4. '   ' → logprob: -8.003923416137695
    5. ' for' → logprob: -8.003923416137695
    6. '	' → logprob: -8.753923416137695
    7. '        
' → logprob: -10.003923416137695
    8. 'for' → logprob: -10.128923416137695
    9. '           ' → logprob: -10.253923416137695
    10. '<|end|>' → logprob: -10.878923416137695

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03252794221043587
    2. '<|end|>' → logprob: -3.9075279235839844
    3. '           ' → logprob: -5.657527923583984
    4. ' for' → logprob: -5.782527923583984
    5. '   ' → logprob: -6.657527923583984
    6. '        ' → logprob: -6.782527923583984
    7. ' ' → logprob: -7.032527923583984
    8. 'for' → logprob: -7.282527923583984
    9. '    ' → logprob: -8.032527923583984
    10. '<|end|>' → logprob: -8.282527923583984

Token 72: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0059577180072665215
    2. ' for' → logprob: -5.25595760345459
    3. '       ' → logprob: -7.88095760345459
    4. 'k' → logprob: -8.88095760345459
    5. 'while' → logprob: -9.13095760345459
    6. '           ' → logprob: -10.25595760345459
    7. '   ' → logprob: -10.50595760345459
    8. ' ' → logprob: -11.38095760345459
    9. '```' → logprob: -12.00595760345459
    10. 'd' → logprob: -12.63095760345459

Token 73: ' h' (ID: 312)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.006283782888203859
    2. ' k' → logprob: -5.131283760070801
    3. 'x' → logprob: -8.0062837600708
    4. 'm' → logprob: -12.3812837600708
    5. ' x' → logprob: -12.7562837600708
    6. 't' → logprob: -12.7562837600708
    7. 'p' → logprob: -13.0062837600708
    8. 'v' → logprob: -13.2562837600708
    9. 'a' → logprob: -13.3812837600708
    10. 'd' → logprob: -14.0062837600708

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001121999230235815
    2. 'in' → logprob: -7.001121997833252
    3. ' ' → logprob: -9.87612247467041
    4. ' range' → logprob: -9.87612247467041
    5. 'range' → logprob: -9.87612247467041
    6. '   ' → logprob: -10.25112247467041
    7. '    ' → logprob: -11.62612247467041
    8. '  ' → logprob: -13.00112247467041
    9. '       ' → logprob: -13.37612247467041
    10. 'd' → logprob: -13.37612247467041

Token 75: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000553151941858232
    2. ' range' → logprob: -7.500553131103516
    3. 'r' → logprob: -16.500553131103516
    4. '(range' → logprob: -18.250553131103516
    5. 'ran' → logprob: -19.250553131103516
    6. '	range' → logprob: -19.375553131103516
    7. ' ' → logprob: -19.500553131103516
    8. '   ' → logprob: -19.750553131103516
    9. 'rang' → logprob: -19.750553131103516
    10. 'l' → logprob: -19.750553131103516

Token 76: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0014928421005606651
    2. 'd' → logprob: -6.626492977142334
    3. '(' → logprob: -8.751492500305176
    4. ' d' → logprob: -12.126492500305176
    5. ' (' → logprob: -13.376492500305176
    6. '	d' → logprob: -14.626492500305176
    7. '   ' → logprob: -15.001492500305176
    8. '       ' → logprob: -15.126492500305176
    9. '(
' → logprob: -15.876492500305176
    10. ')d' → logprob: -16.001493453979492

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007647087797522545
    2. '):
' → logprob: -5.1326470375061035
    3. ')' → logprob: -6.8826470375061035
    4. ' ):' → logprob: -7.8826470375061035
    5. '           ' → logprob: -8.382647514343262
    6. '       ' → logprob: -9.882647514343262
    7. '):
' → logprob: -10.882647514343262
    8. ' ):
' → logprob: -12.757647514343262
    9. ' )' → logprob: -13.007647514343262
    10. '   ' → logprob: -13.382647514343262

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001191298826597631
    2. ' if' → logprob: -7.876191139221191
    3. '       ' → logprob: -8.751191139221191
    4. 'if' → logprob: -9.126191139221191
    5. '	       ' → logprob: -9.251191139221191
    6. '<|end|>' → logprob: -9.251191139221191
    7. ' ' → logprob: -9.376191139221191
    8. '               ' → logprob: -9.751191139221191
    9. '          ' → logprob: -9.876191139221191
    10. '            
' → logprob: -10.126191139221191

Token 79: ' c' (ID: 274)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11262346059083939
    2. 'if' → logprob: -3.237623453140259
    3. '               ' → logprob: -3.487623453140259
    4. ' if' → logprob: -3.737623453140259
    5. 'c' (adapté à ' c') → logprob: -4.612623691558838
    6. ' c' → logprob: -6.487623691558838
    7. ' ' → logprob: -7.487623691558838
    8. '            ' → logprob: -8.11262321472168
    9. '       ' → logprob: -8.86262321472168
    10. '          ' → logprob: -9.11262321472168

Token 80: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5768097043037415
    2. '+=' → logprob: -0.8268097043037415
    3. '+=(' → logprob: -7.326809883117676
    4. '+' → logprob: -9.451809883117676
    5. '=' → logprob: -9.701809883117676
    6. '   ' → logprob: -10.826809883117676
    7. ']+=' → logprob: -10.826809883117676
    8. ' =' → logprob: -11.326809883117676
    9. ' ' → logprob: -12.076809883117676
    10. ' +' → logprob: -12.451809883117676

Token 81: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.056666210293769836
    2. '(abs' → logprob: -3.056666135787964
    3. 'abs' → logprob: -5.056666374206543
    4. ' (' → logprob: -6.681666374206543
    5. '   ' → logprob: -8.181666374206543
    6. ' abs' → logprob: -10.056666374206543
    7. '(' → logprob: -10.181666374206543
    8. '((' → logprob: -10.556666374206543
    9. '       ' → logprob: -12.181666374206543
    10. '(a' → logprob: -12.306666374206543

Token 82: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.014348366297781467
    2. '(l' → logprob: -4.51434850692749
    3. ' l' → logprob: -6.01434850692749
    4. 'abs' → logprob: -7.51434850692749
    5. ' (' → logprob: -8.764348030090332
    6. '   ' → logprob: -9.639348030090332
    7. '	l' → logprob: -10.764348030090332
    8. '(abs' → logprob: -10.889348030090332
    9. ' abs' → logprob: -11.139348030090332
    10. '(' → logprob: -12.014348030090332

Token 83: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.034592388459714e-06
    2. '[j' → logprob: -12.375005722045898
    3. '[' → logprob: -14.375005722045898
    4. 'i' → logprob: -14.625005722045898
    5. '[h' → logprob: -14.750005722045898
    6. '[I' → logprob: -16.1250057220459
    7. '[l' → logprob: -17.3750057220459
    8. ' [' → logprob: -17.6250057220459
    9. '[u' → logprob: -17.8750057220459
    10. '[x' → logprob: -18.0000057220459

Token 84: '][' (ID: 2696)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -8.77627644513268e-06
    2. '][' → logprob: -12.500008583068848
    3. '[' → logprob: -12.875008583068848
    4. 'h' → logprob: -13.250008583068848
    5. ' [' → logprob: -14.625008583068848
    6. ')[' → logprob: -16.750009536743164
    7. '[
' → logprob: -17.625009536743164
    8. '[j' → logprob: -17.625009536743164
    9. '[k' → logprob: -17.875009536743164
    10. '[m' → logprob: -18.125009536743164

Token 85: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -3.8889261304575484e-06
    2. '[h' → logprob: -13.125003814697266
    3. ' h' → logprob: -13.500003814697266
    4. '	h' → logprob: -14.750003814697266
    5. '   ' → logprob: -17.000003814697266
    6. ']' → logprob: -17.125003814697266
    7. '<h' → logprob: -17.625003814697266
    8. '][' → logprob: -17.875003814697266
    9. ' ' → logprob: -18.125003814697266
    10. ''h' → logprob: -18.125003814697266

Token 86: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2035801261663437
    2. '-' → logprob: -1.8285801410675049
    3. ' -' → logprob: -4.328579902648926
    4. ']-' → logprob: -4.578579902648926
    5. ' ]' → logprob: -9.828579902648926
    6. ' ' → logprob: -11.453579902648926
    7. '   ' → logprob: -11.703579902648926
    8. ')' → logprob: -12.078579902648926
    9. '-l' → logprob: -13.078579902648926
    10. '	' → logprob: -13.078579902648926

Token 87: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1128472238779068
    2. ' -' → logprob: -2.237847328186035
    3. '!=' → logprob: -11.612847328186035
    4. '-l' → logprob: -12.112847328186035
    5. ' !=' → logprob: -12.737847328186035
    6. '-)' → logprob: -13.487847328186035
    7. ')' → logprob: -13.737847328186035
    8. ' ' → logprob: -14.112847328186035
    9. '   ' → logprob: -14.487847328186035
    10. '-
' → logprob: -14.612847328186035

Token 88: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03805755823850632
    2. ' l' → logprob: -3.288057565689087
    3. '<|end|>' → logprob: -11.913057327270508
    4. '	l' → logprob: -12.163057327270508
    5. '           ' → logprob: -13.288057327270508
    6. ')' → logprob: -13.663057327270508
    7. ' ' → logprob: -15.413057327270508
    8. '+l' → logprob: -15.663057327270508
    9. '          ' → logprob: -16.038057327270508
    10. ',l' → logprob: -16.038057327270508

Token 89: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0017374205635860562
    2. '[' → logprob: -7.001737594604492
    3. '][' → logprob: -7.251737594604492
    4. 'j' → logprob: -9.751737594604492
    5. 's' → logprob: -10.626737594604492
    6. '[i' → logprob: -11.626737594604492
    7. '[h' → logprob: -11.876737594604492
    8. '[
' → logprob: -12.876737594604492
    9. '[s' → logprob: -13.751737594604492
    10. '```' → logprob: -13.751737594604492

Token 90: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0029467977583408356
    2. '[h' → logprob: -6.002946853637695
    3. ']' → logprob: -8.502946853637695
    4. '"][' → logprob: -9.752946853637695
    5. 'h' → logprob: -9.752946853637695
    6. ' ][' → logprob: -10.127946853637695
    7. '[' → logprob: -10.377946853637695
    8. ''][' → logprob: -10.627946853637695
    9. ')[' → logprob: -10.752946853637695
    10. ')' → logprob: -11.752946853637695

Token 91: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.6286106983898208e-05
    2. ' h' → logprob: -11.875016212463379
    3. '1' → logprob: -12.125016212463379
    4. '2' → logprob: -13.000016212463379
    5. '[h' → logprob: -14.250016212463379
    6. ')' → logprob: -15.250016212463379
    7. ']' → logprob: -15.375016212463379
    8. '0' → logprob: -16.375017166137695
    9. '```' → logprob: -16.500017166137695
    10. '])' → logprob: -16.625017166137695

Token 92: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15144547820091248
    2. ')**' → logprob: -2.0264453887939453
    3. '])' → logprob: -4.776445388793945
    4. ' )' → logprob: -8.901445388793945
    5. '）' → logprob: -9.901445388793945
    6. '`)' → logprob: -10.651445388793945
    7. '")' → logprob: -10.901445388793945
    8. '})' → logprob: -11.026445388793945
    9. '   ' → logprob: -11.401445388793945
    10. '**)' → logprob: -11.401445388793945

Token 93: ' **' (ID: 6240)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.31461769342422485
    2. '**' → logprob: -1.31461763381958
    3. ' **' → logprob: -7.56461763381958
    4. ' ' → logprob: -7.68961763381958
    5. '*' → logprob: -8.689618110656738
    6. ')**' → logprob: -9.314618110656738
    7. ')' → logprob: -9.689618110656738
    8. '(' → logprob: -10.939618110656738
    9. '```' → logprob: -11.314618110656738
    10. '()' → logprob: -11.814618110656738

Token 94: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '```' → logprob: -17.250179290771484
    4. '۲' → logprob: -17.500179290771484
    5. '  ' → logprob: -17.625179290771484
    6. '２' → logprob: -17.875179290771484
    7. '   ' → logprob: -18.375179290771484
    8. '0' → logprob: -18.625179290771484
    9. '٢' → logprob: -18.875179290771484
    10. '`' → logprob: -19.250179290771484

Token 95: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012403888104017824
    2. ' ' → logprob: -9.000123977661133
    3. '۲' → logprob: -16.375123977661133
    4. '```' → logprob: -16.437623977661133
    5. '   ' → logprob: -16.937623977661133
    6. '２' → logprob: -17.437623977661133
    7. '"' → logprob: -17.562623977661133
    8. '٢' → logprob: -17.625123977661133
    9. '=' → logprob: -17.812623977661133
    10. '२' → logprob: -17.875123977661133

Token 96: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03313438221812248
    2. '
' → logprob: -3.5331344604492188
    3. '   ' → logprob: -6.408134460449219
    4. '        
' → logprob: -7.658134460449219
    5. ' ' → logprob: -7.783134460449219
    6. ')' → logprob: -8.533134460449219
    7. 'if' → logprob: -9.033134460449219
    8. '           ' → logprob: -9.158134460449219
    9. '  
' → logprob: -9.408134460449219
    10. ' if' → logprob: -9.658134460449219

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02228003926575184
    2. '
' → logprob: -3.897279977798462
    3. '        
' → logprob: -7.147280216217041
    4. '   ' → logprob: -7.522280216217041
    5. '<|end|>' → logprob: -8.772279739379883
    6. '
' → logprob: -9.647279739379883
    7. 'if' → logprob: -9.897279739379883
    8. ' if' → logprob: -10.397279739379883
    9. '  
' → logprob: -11.022279739379883
    10. '           ' → logprob: -11.022279739379883

Token 98: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011236205697059631
    2. 'import' → logprob: -5.261236190795898
    3. '       ' → logprob: -5.386236190795898
    4. ' if' → logprob: -7.011236190795898
    5. '   ' → logprob: -8.136236190795898
    6. 'ans' → logprob: -8.886236190795898
    7. 'from' → logprob: -10.011236190795898
    8. '```' → logprob: -11.136236190795898
    9. '
' → logprob: -12.011236190795898
    10. 'c' → logprob: -13.636236190795898

Token 99: ' (' (ID: 350)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.22446390986442566
    2. ' c' → logprob: -1.724463939666748
    3. 'int' → logprob: -4.099463939666748
    4. ' int' → logprob: -5.099463939666748
    5. 'pow' → logprob: -10.22446346282959
    6. ' ' → logprob: -10.84946346282959
    7. '(int' → logprob: -11.22446346282959
    8. ' (' → logprob: -11.47446346282959
    9. 'abs' → logprob: -11.72446346282959
    10. '(c' → logprob: -12.47446346282959

Token 100: 'int' (ID: 491)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.000793185958173126
    2. 'int' → logprob: -7.250792980194092
    3. ' c' → logprob: -9.50079345703125
    4. ')c' → logprob: -12.87579345703125
    5. 'pow' → logprob: -13.00079345703125
    6. '   ' → logprob: -13.62579345703125
    7. ' int' → logprob: -14.50079345703125
    8. ')' → logprob: -14.50079345703125
    9. 'abs' → logprob: -15.00079345703125
    10. '(c' → logprob: -15.00079345703125

Token 101: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0019441033946350217
    2. '(' → logprob: -6.626944065093994
    3. ')c' → logprob: -8.001944541931152
    4. 'c' → logprob: -8.376944541931152
    5. '(s' → logprob: -10.251944541931152
    6. ')' → logprob: -11.876944541931152
    7. ')(' → logprob: -12.251944541931152
    8. '((' → logprob: -13.501944541931152
    9. ' c' → logprob: -13.626944541931152
    10. '	c' → logprob: -14.001944541931152

Token 102: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0012129719834774733
    2. ' **' → logprob: -6.751213073730469
    3. '**)' → logprob: -11.001213073730469
    4. ')' → logprob: -11.876213073730469
    5. ' ' → logprob: -12.126213073730469
    6. ')**' → logprob: -12.251213073730469
    7. '*' → logprob: -13.251213073730469
    8. '()' → logprob: -13.501213073730469
    9. ' **)' → logprob: -13.626213073730469
    10. ''s' → logprob: -13.751213073730469

Token 103: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015790171455591917
    2. ' ' → logprob: -6.5015788078308105
    3. '.' → logprob: -9.876579284667969
    4. '(' → logprob: -10.626579284667969
    5. '   ' → logprob: -14.501579284667969
    6. '    ' → logprob: -15.376579284667969
    7. ' (' → logprob: -16.25157928466797
    8. ')' → logprob: -16.37657928466797
    9. ' .' → logprob: -16.50157928466797
    10. '  ' → logprob: -16.75157928466797

Token 104: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00048167374916374683
    2. '(' → logprob: -8.125481605529785
    3. '.' → logprob: -8.750481605529785
    4. ' ' → logprob: -10.625481605529785
    5. '{' → logprob: -14.125481605529785
    6. '5' → logprob: -14.625481605529785
    7. '   ' → logprob: -15.000481605529785
    8. '```' → logprob: -15.625481605529785
    9. '`' → logprob: -16.2504825592041
    10. ')' → logprob: -16.2504825592041

Token 105: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.228561349213123e-05
    2. '5' → logprob: -10.500052452087402
    3. '0' → logprob: -11.750052452087402
    4. ' .' → logprob: -12.000052452087402
    5. ')' → logprob: -12.625052452087402
    6. '1' → logprob: -13.375052452087402
    7. '2' → logprob: -13.875052452087402
    8. '```' → logprob: -14.125052452087402
    9. '3' → logprob: -14.625052452087402
    10. '..' → logprob: -14.750052452087402

Token 106: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.2113979209971149e-05
    2. '6' → logprob: -12.375012397766113
    3. '```' → logprob: -13.250012397766113
    4. '75' → logprob: -13.687512397766113
    5. '   ' → logprob: -14.312512397766113
    6. '25' → logprob: -14.625012397766113
    7. '``' → logprob: -14.687512397766113
    8. '4' → logprob: -14.687512397766113
    9. ')' → logprob: -15.500012397766113
    10. ' ' → logprob: -15.937512397766113

Token 107: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015081813558936119
    2. ')**' → logprob: -4.640081882476807
    3. '))' → logprob: -5.515081882476807
    4. ' )' → logprob: -6.765081882476807
    5. ')==' → logprob: -9.890081405639648
    6. '()' → logprob: -10.640081405639648
    7. '0' → logprob: -11.140081405639648
    8. '())' → logprob: -11.140081405639648
    9. ')*' → logprob: -11.265081405639648
    10. '**' → logprob: -12.765081405639648

Token 108: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.12315169721841812
    2. '*' → logprob: -2.8731517791748047
    3. ' ==' → logprob: -3.8731517791748047
    4. ' *' → logprob: -4.123151779174805
    5. '==' → logprob: -4.123151779174805
    6. ' **' → logprob: -5.498151779174805
    7. ')' → logprob: -6.748151779174805
    8. '()' → logprob: -8.623151779174805
    9. ' ' → logprob: -8.873151779174805
    10. '2' → logprob: -8.998151779174805

Token 109: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01252119429409504
    2. ' ' → logprob: -4.387521266937256
    3. '```' → logprob: -13.012520790100098
    4. '{' → logprob: -13.137520790100098
    5. '1' → logprob: -13.137520790100098
    6. '(' → logprob: -13.950020790100098
    7. '<|end|>' → logprob: -14.262520790100098
    8. ',' → logprob: -15.200020790100098
    9. '0' → logprob: -15.200020790100098
    10. '**' → logprob: -15.262520790100098

Token 110: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002666999935172498
    2. ' ' → logprob: -8.750267028808594
    3. '1' → logprob: -9.625267028808594
    4. '0' → logprob: -10.250267028808594
    5. '<|end|>' → logprob: -13.375267028808594
    6. '```' → logprob: -13.625267028808594
    7. '{' → logprob: -15.187767028808594
    8. '    ' → logprob: -15.312767028808594
    9. '<|end|>' → logprob: -15.312767028808594
    10. '(' → logprob: -15.437767028808594

Token 111: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07132326811552048
    2. '==' → logprob: -2.6963231563568115
    3. ' <=' → logprob: -6.696323394775391
    4. '<=' → logprob: -10.07132339477539
    5. '=' → logprob: -10.19632339477539
    6. ' =' → logprob: -10.32132339477539
    7. ' ' → logprob: -11.69632339477539
    8. ')' → logprob: -11.82132339477539
    9. ' ' → logprob: -11.94632339477539
    10. ')==' → logprob: -12.57132339477539

Token 112: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20141451060771942
    2. ' c' → logprob: -1.7014144659042358
    3. ')c' → logprob: -14.576414108276367
    4. '	c' → logprob: -14.951414108276367
    5. ' ' → logprob: -15.076414108276367
    6. ' ' → logprob: -16.076414108276367
    7. '_c' → logprob: -17.951414108276367
    8. '   ' → logprob: -18.201414108276367
    9. '<c' → logprob: -18.201414108276367
    10. '>' → logprob: -18.451414108276367

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09111450612545013
    2. ':
' → logprob: -2.9661145210266113
    3. '           ' → logprob: -3.4661145210266113
    4. '       ' → logprob: -5.466114521026611
    5. ',' → logprob: -10.216114044189453
    6. '   ' → logprob: -11.216114044189453
    7. '):
' → logprob: -11.466114044189453
    8. ' and' → logprob: -11.591114044189453
    9. '):' → logprob: -11.716114044189453
    10. '               ' → logprob: -11.966114044189453

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.107425062713446e-06
    2. '               ' → logprob: -12.250006675720215
    3. '       ' → logprob: -13.625006675720215
    4. ' ans' → logprob: -14.750006675720215
    5. '          ' → logprob: -15.750006675720215
    6. '	       ' → logprob: -16.00000762939453
    7. '```' → logprob: -16.12500762939453
    8. 'ans' → logprob: -16.37500762939453
    9. '   ' → logprob: -16.87500762939453
    10. '
' → logprob: -17.00000762939453

Token 115: ' ans' (ID: 3345)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047285296022892
    2. 'ans' (adapté à ' ans') → logprob: -3.297285318374634
    3. ' ans' → logprob: -4.797285079956055
    4. '               ' → logprob: -8.047285079956055
    5. '   ' → logprob: -8.172285079956055
    6. '       ' → logprob: -8.172285079956055
    7. '	ans' → logprob: -10.047285079956055
    8. ' ' → logprob: -11.547285079956055
    9. '          ' → logprob: -12.297285079956055
    10. 'answer' → logprob: -13.547285079956055

Token 116: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.39206555485725403
    2. '+=' → logprob: -1.1420655250549316
    3. '+' → logprob: -5.267065525054932
    4. '   ' → logprob: -11.26706600189209
    5. ' +' → logprob: -12.64206600189209
    6. ']+=' → logprob: -13.01706600189209
    7. '+='' → logprob: -13.51706600189209
    8. '    ' → logprob: -13.51706600189209
    9. '+="' → logprob: -14.64206600189209
    10. '=' → logprob: -14.76706600189209

Token 117: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -21.0
    4. '１' → logprob: -21.25
    5. '<|end|>' → logprob: -21.25
    6. '۱' → logprob: -21.375
    7. '+' → logprob: -21.625
    8. '```' → logprob: -22.625
    9. '0' → logprob: -22.875
    10. '2' → logprob: -23.0

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '１' → logprob: -19.125001907348633
    4. '۱' → logprob: -19.375001907348633
    5. '   ' → logprob: -20.000001907348633
    6. '<|end|>' → logprob: -20.750001907348633
    7. '+' → logprob: -20.812501907348633
    8. '2' → logprob: -20.875001907348633
    9. '111' → logprob: -20.875001907348633
    10. '0' → logprob: -21.062501907348633

Token 119: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019436265574768186
    2. '
' → logprob: -6.251943588256836
    3. ' print' → logprob: -11.251943588256836
    4. '
' → logprob: -13.751943588256836
    5. '```' → logprob: -15.001943588256836
    6. ')
' → logprob: -15.501943588256836
    7. ' 
' → logprob: -15.751943588256836
    8. '  
' → logprob: -16.126943588256836
    9. '    
' → logprob: -17.126943588256836
    10. '(print' → logprob: -17.251943588256836

Token 120: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005668530357070267
    2. '
' → logprob: -7.5005669593811035
    3. ' print' → logprob: -11.250566482543945
    4. '
' → logprob: -15.000566482543945
    5. '  
' → logprob: -15.250566482543945
    6. ' 
' → logprob: -15.875566482543945
    7. '```' → logprob: -15.875566482543945
    8. '    
' → logprob: -17.500566482543945
    9. '\n' → logprob: -18.125566482543945
    10. '

' → logprob: -18.500566482543945

Token 121: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38701921701431274
    2. '(ans' → logprob: -1.137019157409668
    3. '('' → logprob: -9.262019157409668
    4. '("("' → logprob: -10.012019157409668
    5. '()' → logprob: -13.762019157409668
    6. '((' → logprob: -14.012019157409668
    7. '(answer' → logprob: -14.137019157409668
    8. '(`' → logprob: -14.137019157409668
    9. '("' → logprob: -14.137019157409668
    10. 'ans' → logprob: -14.262019157409668

Token 122: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.75
    3. '))' → logprob: -17.375
    4. ')`' → logprob: -17.875
    5. ')
' → logprob: -18.125
    6. '')' → logprob: -19.75
    7. ')}' → logprob: -20.0
    8. '`)' → logprob: -20.0
    9. '）' → logprob: -20.25
    10. '}' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 120
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 59
Tokens correctement prédits (top 10): 113
Précision stricte (1ère position): 46.67%
Précision adaptée (1ère position): 49.17%
Précision (top 10): 94.17%
================================================================================
