================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import itemgetter
from itertools import accumulate, count, takewhile

n = int(input())
L = list(map(int, input().split()))

indices = list(range(n))
pairs = zip(indices, L)
maxima = list(accumulate(L, max))

cnt = sum(map(lambda t: t[1] == t[2], zip(indices, L, maxima)))
print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6123510599136353
    2. 'wrap' → logprob: -0.8623510599136353
    3. 'reduce' → logprob: -3.4873509407043457
    4. 'l' → logprob: -6.112350940704346
    5. ' wraps' → logprob: -6.362350940704346
    6. 'cached' → logprob: -7.612350940704346
    7. 'cache' → logprob: -7.987350940704346
    8. 'cmp' → logprob: -9.112351417541504
    9. '```' → logprob: -9.237351417541504
    10. ' partial' → logprob: -9.487351417541504

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014403714798390865
    2. '(
' → logprob: -5.139403820037842
    3. '(lambda' → logprob: -5.389403820037842
    4. 'def' → logprob: -6.639403820037842
    5. ',' → logprob: -7.139403820037842
    6. '\' → logprob: -8.139403343200684
    7. ' ' → logprob: -8.264403343200684
    8. ' (' → logprob: -8.389403343200684
    9. '
' → logprob: -9.139403343200684
    10. '' → logprob: -9.139403343200684

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.8995416760444641
    2. ' operator' → logprob: -1.3995416164398193
    3. ' collections' → logprob: -1.7745416164398193
    4. ' itertools' → logprob: -1.7745416164398193
    5. ' os' → logprob: -5.149541854858398
    6. 'operator' → logprob: -7.399541854858398
    7. ' sys' → logprob: -8.524541854858398
    8. ' typing' → logprob: -8.524541854858398
    9. 'math' → logprob: -8.774541854858398
    10. 'collections' → logprob: -8.899541854858398

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04439019411802292
    2. 'import' → logprob: -3.6693902015686035
    3. '.' → logprob: -4.1693902015686035
    4. ' ' → logprob: -6.1693902015686035
    5. ' .' → logprob: -8.419389724731445
    6. '.import' → logprob: -9.169389724731445
    7. '	import' → logprob: -11.419389724731445
    8. '_import' → logprob: -11.544389724731445
    9. '<|end|>' → logprob: -11.794389724731445
    10. ' Import' → logprob: -13.169389724731445

Token 8: ' item' (ID: 2169)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.31903505325317383
    2. ' import' → logprob: -1.9440350532531738
    3. 'add' → logprob: -2.444035053253174
    4. ' ' → logprob: -4.069035053253174
    5. ' mul' → logprob: -4.194035053253174
    6. 'import' → logprob: -4.819035053253174
    7. 'mul' → logprob: -6.194035053253174
    8. ' item' → logprob: -8.694034576416016
    9. 'item' → logprob: -9.569034576416016
    10. ' ad' → logprob: -9.819034576416016

Token 9: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.008991529233753681
    2. 'get' → logprob: -4.758991718292236
    3. 'getitem' → logprob: -8.008991241455078
    4. 'gett' → logprob: -10.258991241455078
    5. 'item' → logprob: -12.258991241455078
    6. 'g' → logprob: -12.883991241455078
    7. 'ge' → logprob: -14.133991241455078
    8. 'gt' → logprob: -15.758991241455078
    9. 'attr' → logprob: -15.758991241455078
    10. 'got' → logprob: -15.758991241455078

Token 10: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5537190437316895
    2. ',' → logprob: -1.8037190437316895
    3. '\n' → logprob: -2.0537190437316895
    4. '\' → logprob: -2.9287190437316895
    5. '(
' → logprob: -3.0537190437316895
    6. ',
' → logprob: -5.1787190437316895
    7. '.' → logprob: -5.3037190437316895
    8. '
' → logprob: -5.8037190437316895
    9. '()' → logprob: -5.8037190437316895
    10. 'newline' → logprob: -6.1787190437316895

Token 11: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0330226421356201
    2. '(' → logprob: -1.5330226421356201
    3. '\' → logprob: -2.28302264213562
    4. '\n' → logprob: -2.78302264213562
    5. 'def' → logprob: -2.78302264213562
    6. '(
' → logprob: -2.90802264213562
    7. ',
' → logprob: -3.53302264213562
    8. '.' → logprob: -4.158022880554199
    9. '
' → logprob: -4.158022880554199
    10. '`' → logprob: -4.158022880554199

Token 12: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.09373306483030319
    2. ' collections' → logprob: -2.593733072280884
    3. ' math' → logprob: -4.343732833862305
    4. 'collections' → logprob: -7.343732833862305
    5. ' os' → logprob: -7.593732833862305
    6. ' operator' → logprob: -8.968732833862305
    7. 'math' → logprob: -8.968732833862305
    8. ' heap' → logprob: -9.093732833862305
    9. ' typing' → logprob: -9.343732833862305
    10. ' datetime' → logprob: -10.593732833862305

Token 13: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.15762174129486084
    2. 'import' → logprob: -2.0326218605041504
    3. '.' → logprob: -4.28262186050415
    4. '.import' → logprob: -7.40762186050415
    5. ' .' → logprob: -8.032621383666992
    6. '	import' → logprob: -10.282621383666992
    7. ' ' → logprob: -10.532621383666992
    8. '_import' → logprob: -11.782621383666992
    9. '.im' → logprob: -11.907621383666992
    10. '<|end|>' → logprob: -12.532621383666992

Token 14: ' accumulate' (ID: 74226)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.5794703364372253
    2. 'group' → logprob: -0.9544703364372253
    3. 'is' → logprob: -4.204470157623291
    4. ' is' → logprob: -4.454470157623291
    5. ' chain' → logprob: -4.829470157623291
    6. 'chain' → logprob: -4.954470157623291
    7. 'acc' → logprob: -5.704470157623291
    8. 'count' → logprob: -5.829470157623291
    9. 'com' → logprob: -6.454470157623291
    10. 'product' → logprob: -6.704470157623291

Token 15: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0532276630401611
    2. '\n' → logprob: -1.5532276630401611
    3. '\' → logprob: -1.9282276630401611
    4. ',' → logprob: -2.178227663040161
    5. '
' → logprob: -3.178227663040161
    6. 'import' → logprob: -3.803227663040161
    7. '.' → logprob: -4.053227424621582
    8. ',
' → logprob: -4.303227424621582
    9. '(' → logprob: -4.303227424621582
    10. '(
' → logprob: -4.428227424621582

Token 16: ' count' (ID: 3605)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.6808233857154846
    2. ' group' → logprob: -0.8058233857154846
    3. ' chain' → logprob: -4.05582332611084
    4. 'chain' → logprob: -4.43082332611084
    5. 'count' → logprob: -5.55582332611084
    6. 'com' → logprob: -5.55582332611084
    7. 'product' → logprob: -6.30582332611084
    8. ' product' → logprob: -6.43082332611084
    9. 'st' → logprob: -6.80582332611084
    10. 'tee' → logprob: -6.93082332611084

Token 17: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16802337765693665
    2. '\' → logprob: -2.6680233478546143
    3. ',' → logprob: -3.5430233478546143
    4. '.' → logprob: -4.043023586273193
    5. '(
' → logprob: -4.293023586273193
    6. '\n' → logprob: -4.418023586273193
    7. 'def' → logprob: -5.668023586273193
    8. '```' → logprob: -6.793023586273193
    9. '[' → logprob: -6.918023586273193
    10. '#' → logprob: -7.043023586273193

Token 18: ' take' (ID: 2304)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.43544864654541016
    2. ' group' → logprob: -1.9354486465454102
    3. ' chain' → logprob: -2.68544864654541
    4. 'cycle' → logprob: -3.31044864654541
    5. ' drop' → logprob: -3.81044864654541
    6. ' take' → logprob: -3.81044864654541
    7. ' is' → logprob: -4.43544864654541
    8. ' filter' → logprob: -4.81044864654541
    9. 'group' → logprob: -4.81044864654541
    10. 'take' → logprob: -5.18544864654541

Token 19: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0011170001234859228
    2. 'import' → logprob: -8.126116752624512
    3. 'w' → logprob: -8.501116752624512
    4. 'n' → logprob: -8.501116752624512
    5. 'While' → logprob: -8.876116752624512
    6. '_' → logprob: -9.376116752624512
    7. 'from' → logprob: -10.001116752624512
    8. 'until' → logprob: -10.376116752624512
    9. 'wh' → logprob: -10.501116752624512
    10. 'exact' → logprob: -11.001116752624512

Token 20: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25101912021636963
    2. '(
' → logprob: -2.50101900100708
    3. ',' → logprob: -3.00101900100708
    4. '\' → logprob: -3.37601900100708
    5. '\n' → logprob: -3.87601900100708
    6. '(

' → logprob: -5.00101900100708
    7. 'def' → logprob: -5.12601900100708
    8. '
' → logprob: -5.37601900100708
    9. ',
' → logprob: -5.62601900100708
    10. '

' → logprob: -6.50101900100708

Token 21: 'n' (ID: 77)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4977737665176392
    2. '(' → logprob: -1.4977737665176392
    3. 'def' → logprob: -1.7477737665176392
    4. '.' → logprob: -2.8727736473083496
    5. 'd' → logprob: -2.8727736473083496
    6. ',' → logprob: -2.9977736473083496
    7. '\' → logprob: -3.1227736473083496
    8. '=' → logprob: -3.3727736473083496
    9. 'for' → logprob: -3.7477736473083496
    10. '[' → logprob: -3.9977736473083496

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.545333206653595
    2. '=' → logprob: -1.0453331470489502
    3. ' ' → logprob: -3.04533314704895
    4. '_' → logprob: -4.670333385467529
    5. ',' → logprob: -5.545333385467529
    6. 'u' → logprob: -5.920333385467529
    7. '  ' → logprob: -6.420333385467529
    8. '   ' → logprob: -6.795333385467529
    9. 'a' → logprob: -7.420333385467529
    10. '.' → logprob: -7.545333385467529

Token 23: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01573343016207218
    2. '10' → logprob: -4.890733242034912
    3. ' int' → logprob: -5.140733242034912
    4. '1' → logprob: -7.515733242034912
    5. '0' → logprob: -7.765733242034912
    6. '20' → logprob: -7.890733242034912
    7. '100' → logprob: -8.14073371887207
    8. '5' → logprob: -8.14073371887207
    9. 'int' → logprob: -8.51573371887207
    10. '50' → logprob: -10.51573371887207

Token 24: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014478093013167381
    2. '(input' → logprob: -4.2644782066345215
    3. '('' → logprob: -8.264477729797363
    4. 'input' → logprob: -10.514477729797363
    5. '("' → logprob: -11.764477729797363
    6. '(n' → logprob: -12.389477729797363
    7. ''' → logprob: -12.389477729797363
    8. ' (' → logprob: -12.514477729797363
    9. '()' → logprob: -13.639477729797363
    10. '(user' → logprob: -13.889477729797363

Token 25: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3941841423511505
    2. '()' → logprob: -1.3941841125488281
    3. '())' → logprob: -3.144184112548828
    4. ')' → logprob: -3.519184112548828
    5. '(()' → logprob: -6.019184112548828
    6. '('' → logprob: -6.269184112548828
    7. '(
' → logprob: -8.269184112548828
    8. '))' → logprob: -9.644184112548828
    9. '(

' → logprob: -9.644184112548828
    10. '(`' → logprob: -10.019184112548828

Token 26: 'L' (ID: 43)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0975615978240967
    2. 'result' → logprob: -1.2225615978240967
    3. 'data' → logprob: -2.2225615978240967
    4. 'lst' → logprob: -2.2225615978240967
    5. 'numbers' → logprob: -3.0975615978240967
    6. 'arr' → logprob: -3.5975615978240967
    7. 's' → logprob: -4.347561836242676
    8. 'sequence' → logprob: -4.972561836242676
    9. 'for' → logprob: -5.097561836242676
    10. 'results' → logprob: -5.222561836242676

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06079288199543953
    2. '=' → logprob: -3.435792922973633
    3. '.' → logprob: -4.435792922973633
    4. '[' → logprob: -4.560792922973633
    5. '[:' → logprob: -5.810792922973633
    6. '[:]' → logprob: -8.060792922973633
    7. ',' → logprob: -8.310792922973633
    8. '_' → logprob: -8.435792922973633
    9. ' ' → logprob: -8.560792922973633
    10. 'ist' → logprob: -9.310792922973633

Token 28: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.23763810098171234
    2. 'list' → logprob: -2.112637996673584
    3. ' [' → logprob: -2.487637996673584
    4. '[' → logprob: -5.612637996673584
    5. '[list' → logprob: -5.987637996673584
    6. '[input' → logprob: -7.487637996673584
    7. ' []' → logprob: -8.237638473510742
    8. ' input' → logprob: -8.987638473510742
    9. '[]' → logprob: -9.112638473510742
    10. '[int' → logprob: -9.362638473510742

Token 29: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12988194823265076
    2. '(range' → logprob: -2.5048818588256836
    3. '(t' → logprob: -4.129881858825684
    4. '(map' → logprob: -4.504881858825684
    5. '(input' → logprob: -5.379881858825684
    6. '(acc' → logprob: -5.879881858825684
    7. '(filter' → logprob: -6.254881858825684
    8. '(int' → logprob: -6.504881858825684
    9. '(count' → logprob: -7.379881858825684
    10. '(item' → logprob: -7.879881858825684

Token 30: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0022806229535490274
    2. '(' → logprob: -6.1272807121276855
    3. '(lambda' → logprob: -10.127280235290527
    4. 'int' → logprob: -11.127280235290527
    5. '(str' → logprob: -11.252280235290527
    6. ')' → logprob: -12.002280235290527
    7. '<int' → logprob: -12.002280235290527
    8. '(input' → logprob: -12.502280235290527
    9. '(eval' → logprob: -12.752280235290527
    10. '(
' → logprob: -12.752280235290527

Token 31: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09885890781879425
    2. ',input' → logprob: -2.4738588333129883
    3. ',' → logprob: -5.098858833312988
    4. '(' → logprob: -5.723858833312988
    5. 'input' → logprob: -7.973858833312988
    6. ')' → logprob: -10.098858833312988
    7. ' ,' → logprob: -10.598858833312988
    8. '))' → logprob: -10.973858833312988
    9. '=input' → logprob: -11.098858833312988
    10. '```' → logprob: -11.473858833312988

Token 32: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018275195732712746
    2. ' input' → logprob: -4.018275260925293
    3. '(input' → logprob: -9.643275260925293
    4. ',input' → logprob: -10.143275260925293
    5. 'range' → logprob: -12.393275260925293
    6. ' ' → logprob: -12.393275260925293
    7. '=input' → logprob: -13.018275260925293
    8. 'lambda' → logprob: -13.018275260925293
    9. '	input' → logprob: -13.518275260925293
    10. '[input' → logprob: -13.768275260925293

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.266944157890975e-05
    2. '()' → logprob: -10.250072479248047
    3. '(' → logprob: -11.125072479248047
    4. '()))' → logprob: -12.000072479248047
    5. ')' → logprob: -12.500072479248047
    6. '))' → logprob: -12.750072479248047
    7. '())' → logprob: -13.500072479248047
    8. ' ().' → logprob: -13.500072479248047
    9. ' .' → logprob: -13.875072479248047
    10. '.split' → logprob: -14.000072479248047

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005595852271653712
    2. 'strip' → logprob: -7.5005598068237305
    3. '(split' → logprob: -12.75055980682373
    4. ' split' → logprob: -13.12555980682373
    5. 'rstrip' → logprob: -13.50055980682373
    6. ')' → logprob: -16.000558853149414
    7. 'spl' → logprob: -16.250558853149414
    8. 's' → logprob: -16.875558853149414
    9. 'read' → logprob: -18.500558853149414
    10. 'sp' → logprob: -19.125558853149414

Token 35: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.31696048378944397
    2. ')' → logprob: -1.3169604539871216
    3. '()))' → logprob: -6.316960334777832
    4. ')))' → logprob: -6.816960334777832
    5. '())' → logprob: -7.691960334777832
    6. '(' → logprob: -8.441960334777832
    7. '),' → logprob: -9.816960334777832
    8. '()' → logprob: -10.441960334777832
    9. ''))' → logprob: -11.441960334777832
    10. ' ))' → logprob: -12.816960334777832

Token 36: 'indices' (ID: 30992)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7611790895462036
    2. 'c' → logprob: -2.136178970336914
    3. 's' → logprob: -2.136178970336914
    4. 'result' → logprob: -3.011178970336914
    5. 'prefix' → logprob: -3.636178970336914
    6. 'res' → logprob: -3.761178970336914
    7. 'for' → logprob: -3.886178970336914
    8. '
' → logprob: -4.011178970336914
    9. 'd' → logprob: -4.136178970336914
    10. 'max' → logprob: -4.261178970336914

Token 37: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021251242607831955
    2. '=' → logprob: -3.8962512016296387
    3. ' =' → logprob: -7.521251201629639
    4. '=(' → logprob: -10.396251678466797
    5. 's' → logprob: -11.021251678466797
    6. '(`' → logprob: -11.146251678466797
    7. '(

' → logprob: -11.396251678466797
    8. '(
' → logprob: -11.646251678466797
    9. '=lambda' → logprob: -11.646251678466797
    10. ')' → logprob: -11.771251678466797

Token 38: ' list' (ID: 1562)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7673014402389526
    2. '(range' → logprob: -1.2673014402389526
    3. 'range' → logprob: -2.392301559448242
    4. '(count' → logprob: -4.017301559448242
    5. '(filter' → logprob: -4.017301559448242
    6. '(list' → logprob: -4.142301559448242
    7. '(item' → logprob: -4.392301559448242
    8. 'list' → logprob: -4.392301559448242
    9. '(i' → logprob: -4.517301559448242
    10. 'filter' → logprob: -4.517301559448242

Token 39: '(range' (ID: 50017)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26114004850387573
    2. '(range' → logprob: -2.7611401081085205
    3. '(filter' → logprob: -2.7611401081085205
    4. '(map' → logprob: -2.8861401081085205
    5. '(item' → logprob: -3.3861401081085205
    6. '(t' → logprob: -4.511139869689941
    7. '(<' → logprob: -7.636139869689941
    8. '(chain' → logprob: -8.011139869689941
    9. '((' → logprob: -8.261139869689941
    10. '(com' → logprob: -8.386139869689941

Token 40: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0015521175228059292
    2. '(' → logprob: -6.751552104949951
    3. '(len' → logprob: -7.876552104949951
    4. 'n' → logprob: -14.00155258178711
    5. ')n' → logprob: -14.50155258178711
    6. ')' → logprob: -14.87655258178711
    7. '(
' → logprob: -15.50155258178711
    8. ')(' → logprob: -16.37655258178711
    9. '((' → logprob: -16.37655258178711
    10. ' (' → logprob: -16.50155258178711

Token 41: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00022892709239386022
    2. ')' → logprob: -8.625228881835938
    3. '))
' → logprob: -11.000228881835938
    4. ' ))' → logprob: -11.250228881835938
    5. ')))' → logprob: -11.500228881835938
    6. ',' → logprob: -12.375228881835938
    7. '),' → logprob: -13.000228881835938
    8. '+' → logprob: -14.000228881835938
    9. '))

' → logprob: -14.625228881835938
    10. '));' → logprob: -14.625228881835938

Token 42: 'pairs' (ID: 175838)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47504737973213196
    2. ')
' → logprob: -2.1000473499298096
    3. '
' → logprob: -2.8500473499298096
    4. '.sort' → logprob: -3.7250473499298096
    5. '[' → logprob: -3.9750473499298096
    6. 'sorted' → logprob: -4.100047588348389
    7. 's' → logprob: -4.350047588348389
    8. 'indices' → logprob: -4.350047588348389
    9. ')

' → logprob: -4.350047588348389
    10. '```' → logprob: -4.850047588348389

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2577787935733795
    2. '(' → logprob: -2.0077788829803467
    3. '=' → logprob: -2.3827788829803467
    4. ')' → logprob: -8.882779121398926
    5. ',' → logprob: -9.382779121398926
    6. '.' → logprob: -9.757779121398926
    7. ' ' → logprob: -9.882779121398926
    8. 's' → logprob: -9.882779121398926
    9. ' =)' → logprob: -10.007779121398926
    10. '_pairs' → logprob: -10.507779121398926

Token 44: ' zip' (ID: 16216)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.1954481601715088
    2. ' zip' → logprob: -1.4454481601715088
    3. '(zip' → logprob: -1.5704481601715088
    4. 'zip' → logprob: -1.8204481601715088
    5. '((' → logprob: -2.820448160171509
    6. ' [(' → logprob: -4.44544792175293
    7. '(filter' → logprob: -5.32044792175293
    8. '(' → logprob: -5.57044792175293
    9. 'filter' → logprob: -6.44544792175293
    10. 'sorted' → logprob: -6.57044792175293

Token 45: '(indices' (ID: 161036)
  Prédit: '(indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(indices' → logprob: -0.02496081218123436
    2. '(' → logprob: -3.77496075630188
    3. '(L' → logprob: -6.399960994720459
    4. '(p' → logprob: -10.8999605178833
    5. '((' → logprob: -11.1499605178833
    6. '(n' → logprob: -12.1499605178833
    7. '(ind' → logprob: -12.3999605178833
    8. '(numbers' → logprob: -13.0249605178833
    9. 'indices' → logprob: -13.7749605178833
    10. '(index' → logprob: -13.7749605178833

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004706495441496372
    2. ' ,' → logprob: -5.629706382751465
    3. '(' → logprob: -6.879706382751465
    4. ',L' → logprob: -10.754706382751465
    5. '(),' → logprob: -11.254706382751465
    6. ')' → logprob: -11.254706382751465
    7. ',n' → logprob: -12.254706382751465
    8. ' (' → logprob: -12.754706382751465
    9. ',)' → logprob: -12.754706382751465
    10. '(indices' → logprob: -12.879706382751465

Token 47: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.16034740209579468
    2. ' L' → logprob: -1.9103474617004395
    3. ' ' → logprob: -10.660346984863281
    4. 'indices' → logprob: -10.785346984863281
    5. '	L' → logprob: -10.910346984863281
    6. ')' → logprob: -11.035346984863281
    7. ' indices' → logprob: -11.410346984863281
    8. ' pairs' → logprob: -12.035346984863281
    9. ')L' → logprob: -12.472846984863281
    10. '   ' → logprob: -12.535346984863281

Token 48: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4153549020411447e-05
    2. '))' → logprob: -11.00002384185791
    3. ' )' → logprob: -12.12502384185791
    4. ')
' → logprob: -14.50002384185791
    5. ',' → logprob: -14.50002384185791
    6. ')`' → logprob: -15.37502384185791
    7. ',)' → logprob: -15.50002384185791
    8. '())' → logprob: -15.87502384185791
    9. '),' → logprob: -16.500024795532227
    10. ')))' → logprob: -16.625024795532227

Token 49: 'max' (ID: 3228)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.07740188390016556
    2. ')' → logprob: -3.077401876449585
    3. 'sorted' → logprob: -3.827401876449585
    4. 'filtered' → logprob: -5.952402114868164
    5. ')
' → logprob: -7.077402114868164
    6. 'filter' → logprob: -7.452402114868164
    7. '#' → logprob: -7.827402114868164
    8. ',' → logprob: -7.952402114868164
    9. 'indices' → logprob: -8.077402114868164
    10. '),' → logprob: -8.702402114868164

Token 50: 'ima' (ID: 3226)
  Prédit: '_pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.6767148375511169
    2. '_' → logprob: -1.1767148971557617
    3. '_pairs' → logprob: -2.1767148971557617
    4. '_value' → logprob: -4.051714897155762
    5. '_index' → logprob: -4.301714897155762
    6. '_val' → logprob: -4.551714897155762
    7. '_by' → logprob: -4.676714897155762
    8. '_key' → logprob: -5.301714897155762
    9. 'ed' → logprob: -5.801714897155762
    10. 's' → logprob: -6.051714897155762

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47598201036453247
    2. '=' → logprob: -0.9759820103645325
    3. '_' → logprob: -6.475982189178467
    4. ',' → logprob: -8.975981712341309
    5. 's' → logprob: -9.600981712341309
    6. ')' → logprob: -9.850981712341309
    7. '_=' → logprob: -10.350981712341309
    8. ' ' → logprob: -10.725981712341309
    9. '_iter' → logprob: -11.850981712341309
    10. '_pairs' → logprob: -12.100981712341309

Token 52: ' list' (ID: 1562)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.18391089141368866
    2. 'take' → logprob: -2.183910846710205
    3. '(acc' → logprob: -3.808910846710205
    4. ' accumulate' → logprob: -4.558910846710205
    5. 'list' → logprob: -5.058910846710205
    6. 'map' → logprob: -5.308910846710205
    7. 'max' → logprob: -5.808910846710205
    8. 'filter' → logprob: -6.183910846710205
    9. ' take' → logprob: -6.683910846710205
    10. 'it' → logprob: -6.808910846710205

Token 53: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.12795886397361755
    2. '(t' → logprob: -2.1279587745666504
    3. '(' → logprob: -7.50295877456665
    4. '(ac' → logprob: -8.377959251403809
    5. '(it' → logprob: -9.002959251403809
    6. '(filter' → logprob: -9.627959251403809
    7. '(map' → logprob: -11.002959251403809
    8. '(max' → logprob: -11.127959251403809
    9. 'acc' → logprob: -11.752959251403809
    10. '(pair' → logprob: -12.127959251403809

Token 54: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.0001766040368238464
    2. 'um' → logprob: -9.000176429748535
    3. 'ulate' → logprob: -10.750176429748535
    4. 'om' → logprob: -11.125176429748535
    5. 'umul' → logprob: -12.500176429748535
    6. 'umulator' → logprob: -13.250176429748535
    7. '```' → logprob: -13.250176429748535
    8. 'max' → logprob: -13.750176429748535
    9. 'umut' → logprob: -13.875176429748535
    10. 'uminate' → logprob: -14.000176429748535

Token 55: '(L' (ID: 11075)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.001183204003609717
    2. '(' → logprob: -7.251183032989502
    3. '(lambda' → logprob: -8.12618350982666
    4. '(item' → logprob: -9.25118350982666
    5. '(max' → logprob: -10.50118350982666
    6. '(
' → logprob: -10.75118350982666
    7. '(pair' → logprob: -11.00118350982666
    8. ')' → logprob: -12.25118350982666
    9. 'pairs' → logprob: -12.50118350982666
    10. '((' → logprob: -13.62618350982666

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.5027299822540954e-05
    2. ',max' → logprob: -11.125055313110352
    3. '),' → logprob: -11.250055313110352
    4. ' ,' → logprob: -11.750055313110352
    5. '))' → logprob: -11.875055313110352
    6. ',key' → logprob: -13.000055313110352
    7. '[' → logprob: -13.500055313110352
    8. ',
' → logprob: -13.750055313110352
    9. 'max' → logprob: -13.875055313110352
    10. '2' → logprob: -14.375055313110352

Token 57: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.009944136254489422
    2. 'lambda' → logprob: -4.634943962097168
    3. ' max' → logprob: -8.884943962097168
    4. 'min' → logprob: -11.509943962097168
    5. ' lambda' → logprob: -11.509943962097168
    6. '	max' → logprob: -11.634943962097168
    7. ')' → logprob: -11.634943962097168
    8. 'maximum' → logprob: -12.759943962097168
    9. '   ' → logprob: -13.134943962097168
    10. '(lambda' → logprob: -13.509943962097168

Token 58: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00029852005536668
    2. '))
' → logprob: -8.375298500061035
    3. ')))' → logprob: -10.875298500061035
    4. ',' → logprob: -11.125298500061035
    5. ')' → logprob: -11.250298500061035
    6. '))

' → logprob: -11.500298500061035
    7. '()))' → logprob: -13.125298500061035
    8. ' ))' → logprob: -13.250298500061035
    9. '),' → logprob: -13.750298500061035
    10. ' ' → logprob: -14.000298500061035

Token 59: 'cnt' (ID: 33160)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8314557075500488
    2. ')
' → logprob: -1.7064557075500488
    3. '(' → logprob: -2.206455707550049
    4. 'pairs' → logprob: -2.581455707550049
    5. 'def' → logprob: -3.081455707550049
    6. '(
' → logprob: -3.581455707550049
    7. 'result' → logprob: -3.706455707550049
    8. 'for' → logprob: -4.206455707550049
    9. ',
' → logprob: -4.831455707550049
    10. 'print' → logprob: -4.956455707550049

Token 60: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25918254256248474
    2. ' =' → logprob: -1.6341825723648071
    3. '_' → logprob: -4.009182453155518
    4. '(' → logprob: -4.634182453155518
    5. 's' → logprob: -5.509182453155518
    6. ' ' → logprob: -8.009182929992676
    7. ',' → logprob: -8.384182929992676
    8. 'u' → logprob: -8.509182929992676
    9. '  ' → logprob: -9.009182929992676
    10. ')' → logprob: -9.384182929992676

Token 61: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04639256000518799
    2. ' ' → logprob: -3.1713924407958984
    3. 'sum' → logprob: -6.296392440795898
    4. '1' → logprob: -7.546392440795898
    5. ' sum' → logprob: -7.796392440795898
    6. '(' → logprob: -7.921392440795898
    7. '[' → logprob: -9.921392440795898
    8. ' n' → logprob: -10.671392440795898
    9. 'len' → logprob: -10.796392440795898
    10. 'max' → logprob: -10.796392440795898

Token 62: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01881617307662964
    2. '((' → logprob: -4.643815994262695
    3. '(x' → logprob: -5.268815994262695
    4. '(i' → logprob: -6.268815994262695
    5. '(max' → logprob: -7.268815994262695
    6. '(p' → logprob: -7.393815994262695
    7. '(pair' → logprob: -8.518815994262695
    8. '([' → logprob: -9.143815994262695
    9. '(l' → logprob: -9.893815994262695
    10. '(((' → logprob: -10.143815994262695

Token 63: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.01008516550064087
    2. '(' → logprob: -4.760085105895996
    3. '(operator' → logprob: -6.760085105895996
    4. '(int' → logprob: -9.385085105895996
    5. ')' → logprob: -9.510085105895996
    6. '(len' → logprob: -10.135085105895996
    7. '(item' → logprob: -10.635085105895996
    8. '(
' → logprob: -10.760085105895996
    9. '(None' → logprob: -11.135085105895996
    10. '(bool' → logprob: -11.385085105895996

Token 64: ' t' (ID: 260)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25181713700294495
    2. 'x' → logprob: -1.7518171072006226
    3. ' pair' → logprob: -4.251817226409912
    4. ' p' → logprob: -4.876817226409912
    5. ' (' → logprob: -5.626817226409912
    6. ' ' → logprob: -5.751817226409912
    7. 'pair' → logprob: -5.876817226409912
    8. '(x' → logprob: -6.251817226409912
    9. '(' → logprob: -6.376817226409912
    10. 'p' → logprob: -6.501817226409912

Token 65: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009295677882619202
    2. ' :' → logprob: -7.625929355621338
    3. ':t' → logprob: -8.000929832458496
    4. ':
' → logprob: -10.250929832458496
    5. 't' → logprob: -10.750929832458496
    6. ':(' → logprob: -10.875929832458496
    7. ',' → logprob: -11.750929832458496
    8. ' t' → logprob: -13.375929832458496
    9. ':max' → logprob: -13.375929832458496
    10. ':not' → logprob: -13.500929832458496

Token 66: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.37263166904449463
    2. 't' → logprob: -1.2476316690444946
    3. ' max' → logprob: -4.747631549835205
    4. ' (' → logprob: -4.872631549835205
    5. '(' → logprob: -5.872631549835205
    6. '(t' → logprob: -6.622631549835205
    7. ' ' → logprob: -6.997631549835205
    8. 'max' → logprob: -6.997631549835205
    9. '1' → logprob: -8.372632026672363
    10. ' all' → logprob: -8.622632026672363

Token 67: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7047779560089111
    2. '[' → logprob: -0.7047779560089111
    3. ' :' → logprob: -5.204777717590332
    4. ' t' → logprob: -6.079777717590332
    5. 't' → logprob: -6.579777717590332
    6. ',' → logprob: -7.579777717590332
    7. ')' → logprob: -7.704777717590332
    8. ':t' → logprob: -7.954777717590332
    9. '[t' → logprob: -8.704777717590332
    10. ':[' → logprob: -9.204777717590332

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.228824645280838
    2. '0' → logprob: -1.6038246154785156
    3. ' ' → logprob: -5.853824615478516
    4. ':' → logprob: -8.603824615478516
    5. '-' → logprob: -9.228824615478516
    6. ']' → logprob: -10.291324615478516
    7. '   ' → logprob: -10.541324615478516
    8. '  ' → logprob: -10.728824615478516
    9. '2' → logprob: -10.791324615478516
    10. '
' → logprob: -11.291324615478516

Token 69: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.6535077095031738
    2. ' >' → logprob: -1.7785077095031738
    3. '==' → logprob: -1.7785077095031738
    4. ' >=' → logprob: -1.9035077095031738
    5. '>' → logprob: -2.278507709503174
    6. ',' → logprob: -2.903507709503174
    7. '>=' → logprob: -2.903507709503174
    8. '),' → logprob: -3.528507709503174
    9. ')' → logprob: -3.653507709503174
    10. ' ,' → logprob: -4.278507709503174

Token 70: ' ==' (ID: 951)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.2810138463974
    2. ' ==' → logprob: -1.5310138463974
    3. ' >' → logprob: -1.9060138463974
    4. '==' → logprob: -2.0310139656066895
    5. '>=' → logprob: -2.5310139656066895
    6. '>' → logprob: -3.1560139656066895
    7. ',' → logprob: -3.5310139656066895
    8. ')' → logprob: -3.6560139656066895
    9. ' ,' → logprob: -4.7810139656066895
    10. '))' → logprob: -4.7810139656066895

Token 71: ' t' (ID: 260)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2132992446422577
    2. 't' → logprob: -1.96329927444458
    3. ' max' → logprob: -3.96329927444458
    4. ' t' → logprob: -4.21329927444458
    5. ')' → logprob: -5.08829927444458
    6. 'm' → logprob: -5.83829927444458
    7. '0' → logprob: -5.96329927444458
    8. ' maxima' → logprob: -6.96329927444458
    9. '1' → logprob: -7.33829927444458
    10. 'acc' → logprob: -7.83829927444458

Token 72: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00036918214755132794
    2. '0' → logprob: -8.25036907196045
    3. ':' → logprob: -10.25036907196045
    4. 'max' → logprob: -10.37536907196045
    5. '2' → logprob: -11.37536907196045
    6. ')' → logprob: -11.87536907196045
    7. ']' → logprob: -12.37536907196045
    8. '1' → logprob: -13.00036907196045
    9. '][' → logprob: -13.43786907196045
    10. ',' → logprob: -13.50036907196045

Token 73: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8136741518974304
    2. '1' → logprob: -0.8136741518974304
    3. '2' → logprob: -2.188674211502075
    4. '-' → logprob: -7.563673973083496
    5. ']' → logprob: -8.563673973083496
    6. '[' → logprob: -8.876173973083496
    7. '3' → logprob: -9.501173973083496
    8. '])' → logprob: -9.688673973083496
    9. '5' → logprob: -9.813673973083496
    10. '4' → logprob: -10.001173973083496

Token 74: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04872963950037956
    2. ' and' → logprob: -3.173729658126831
    3. 'and' → logprob: -6.298729419708252
    4. '),' → logprob: -6.423729419708252
    5. ' ,' → logprob: -6.548729419708252
    6. '   ' → logprob: -9.17372989654541
    7. '[' → logprob: -9.29872989654541
    8. ' -' → logprob: -9.29872989654541
    9. ')' → logprob: -9.29872989654541
    10. ',max' → logprob: -9.42372989654541

Token 75: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.3884032368659973
    2. ' zip' → logprob: -1.1384031772613525
    3. 'pairs' → logprob: -7.138403415679932
    4. ' pairs' → logprob: -7.888403415679932
    5. '(zip' → logprob: -8.888402938842773
    6. '   ' → logprob: -9.763402938842773
    7. 'pair' → logprob: -10.138402938842773
    8. ' ' → logprob: -10.638402938842773
    9. 'enumer' → logprob: -10.638402938842773
    10. ' zipped' → logprob: -11.388402938842773

Token 76: '(indices' (ID: 161036)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0355423167347908
    2. '(indices' → logprob: -3.5355422496795654
    3. '(L' → logprob: -6.1605424880981445
    4. '(' → logprob: -6.1605424880981445
    5. '(max' → logprob: -6.6605424880981445
    6. '(range' → logprob: -9.910542488098145
    7. '((' → logprob: -10.035542488098145
    8. 'pairs' → logprob: -10.285542488098145
    9. ' pairs' → logprob: -10.910542488098145
    10. '(zip' → logprob: -11.285542488098145

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034112412482500076
    2. ',p' → logprob: -3.9091124534606934
    3. '(p' → logprob: -5.034112453460693
    4. ' ,' → logprob: -5.284112453460693
    5. ',max' → logprob: -7.034112453460693
    6. '(' → logprob: -7.659112453460693
    7. '(max' → logprob: -8.534111976623535
    8. ',n' → logprob: -9.534111976623535
    9. '<|end|>' → logprob: -10.159111976623535
    10. ' pairs' → logprob: -10.284111976623535

Token 78: ' L' (ID: 451)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.09092360734939575
    2. ' maxima' → logprob: -2.465923547744751
    3. ' max' → logprob: -6.71592378616333
    4. 'L' → logprob: -8.840923309326172
    5. '[max' → logprob: -8.965923309326172
    6. 'maximize' → logprob: -9.340923309326172
    7. 'indices' → logprob: -9.465923309326172
    8. 'pairs' → logprob: -9.590923309326172
    9. ' L' → logprob: -10.090923309326172
    10. 'maximum' → logprob: -10.090923309326172

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055234406143426895
    2. ',max' → logprob: -3.055234432220459
    3. ')))' → logprob: -6.430234432220459
    4. ' ,' → logprob: -6.680234432220459
    5. 'max' → logprob: -6.805234432220459
    6. '[' → logprob: -6.930234432220459
    7. '[max' → logprob: -7.055234432220459
    8. '),' → logprob: -8.8052339553833
    9. '))' → logprob: -9.4302339553833
    10. ')' → logprob: -9.5552339553833

Token 80: ' maxima' (ID: 196604)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.14296719431877136
    2. ' maxima' → logprob: -2.0179672241210938
    3. '[max' → logprob: -9.892967224121094
    4. '   ' → logprob: -9.892967224121094
    5. 'maximum' → logprob: -10.142967224121094
    6. ' max' → logprob: -10.267967224121094
    7. 'maximize' → logprob: -10.642967224121094
    8. ' ' → logprob: -10.892967224121094
    9. '(max' → logprob: -11.267967224121094
    10. 'indices' → logprob: -11.392967224121094

Token 81: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0027460309211164713
    2. ')' → logprob: -6.252746105194092
    3. '))' → logprob: -7.127746105194092
    4. '))))' → logprob: -12.002745628356934
    5. ')))
' → logprob: -12.127745628356934
    6. ')));' → logprob: -13.877745628356934
    7. '),' → logprob: -14.002745628356934
    8. ')))

' → logprob: -14.877745628356934
    9. ' ' → logprob: -15.002745628356934
    10. '')))' → logprob: -15.877745628356934

Token 82: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018990058451890945
    2. '
' → logprob: -6.876899242401123
    3. '<|end|>' → logprob: -7.626899242401123
    4. 'print' → logprob: -9.001898765563965
    5. 'cnt' → logprob: -9.126898765563965
    6. '+' → logprob: -10.626898765563965
    7. '```' → logprob: -10.751898765563965
    8. ')
' → logprob: -10.876898765563965
    9. '\n' → logprob: -11.251898765563965
    10. '*' → logprob: -11.376898765563965

Token 83: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.5761304497718811
    2. '(' → logprob: -0.8261304497718811
    3. '(max' → logprob: -9.576130867004395
    4. '(f' → logprob: -10.326130867004395
    5. '("("' → logprob: -10.576130867004395
    6. '('' → logprob: -10.826130867004395
    7. '()' → logprob: -11.326130867004395
    8. '(len' → logprob: -11.701130867004395
    9. '((' → logprob: -12.076130867004395
    10. '(`' → logprob: -12.326130867004395

Token 84: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10021260380744934
    2. '))' → logprob: -2.350212574005127
    3. ' )' → logprob: -12.725213050842285
    4. ')
' → logprob: -14.225213050842285
    5. ')))' → logprob: -14.225213050842285
    6. ')`' → logprob: -14.225213050842285
    7. '`)' → logprob: -15.100213050842285
    8. '))
' → logprob: -15.600213050842285
    9. '})' → logprob: -15.725213050842285
    10. ' ))' → logprob: -16.35021209716797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 82
Tokens correctement prédits (1ère position, stricte): 28
Tokens correctement prédits (1ère position, avec adaptation): 28
Tokens correctement prédits (top 10): 60
Précision stricte (1ère position): 34.15%
Précision adaptée (1ère position): 34.15%
Précision (top 10): 73.17%
================================================================================
