================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# On demande à l'utilisateur de saisir une valeur entière via le clavier.
# La fonction input() recueille une chaîne de caractères (string).
# La fonction int() convertit cette chaîne de caractères en un entier (integer).
# Le résultat est stocké dans la variable X.
X = int(input())

# On souhaite déterminer combien de fois 500 peut aller dans X sans dépasser X (division entière).
# L'opérateur // effectue une division entière (le quotient sans la partie décimale).
# Cela donne le nombre de billets de 500.
# On stocke ce résultat dans la variable x.
x = X // 500

# On cherche maintenant le reste de la division de X par 500,
# c'est-à-dire ce qui reste après avoir retiré tout ce qui pouvait être couvert par les billets de 500.
# L'opérateur % retourne le reste.
# Le résultat est stocké dans la variable res.
res = X % 500

# Maintenant, à partir du reste res, on cherche combien de pièces de 5 peuvent y entrer.
# Encore une division entière : res // 5.
# Cela donne le nombre de pièces de 5.
# On stocke ce résultat dans y.
y = res // 5

# On va maintenant calculer le montant total obtenu en additionnant :
# - 1000 fois le nombre de billets de 500 (car chaque billet rapporte 1000 points),
# - 5 fois le nombre de pièces de 5 (car chaque pièce rapporte 5 points).
# On utilise l'opérateur * pour la multiplication et + pour l'addition.
# La fonction print() affiche le résultat à l'écran.
print(x * 1000 + y * 5)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' On' (ID: 2160)
  → Token d'amorce (pas de prédiction)

Token 2: ' demande' (ID: 26737)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23130616545677185
    2. 'l' → logprob: -2.3563060760498047
    3. ' à' → logprob: -2.9813060760498047
    4. '_' → logprob: -4.231306076049805
    5. ' ```' → logprob: -4.606306076049805
    6. ' ' → logprob: -5.356306076049805
    7. ' =' → logprob: -5.606306076049805
    8. ' a' → logprob: -5.731306076049805
    9. '```' → logprob: -5.731306076049805
    10. ' #' → logprob: -5.856306076049805

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.016145572066307068
    2. ' l' → logprob: -4.391145706176758
    3. 'u' → logprob: -6.516145706176758
    4. ''' → logprob: -6.641145706176758
    5. ' ' → logprob: -8.016145706176758
    6. '_' → logprob: -9.141145706176758
    7. '`' → logprob: -9.516145706176758
    8. '#' → logprob: -9.891145706176758
    9. 'user' → logprob: -10.391145706176758
    10. 'la' → logprob: -10.391145706176758

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.13966824114322662
    2. ''' → logprob: -2.6396682262420654
    3. 'u' → logprob: -4.0146684646606445
    4. 'a' → logprob: -4.0146684646606445
    5. '’utilisateur' → logprob: -4.5146684646606445
    6. 'e' → logprob: -5.2646684646606445
    7. ' utilisateur' → logprob: -6.2646684646606445
    8. '_' → logprob: -6.3896684646606445
    9. 'util' → logprob: -7.0146684646606445
    10. 'é' → logprob: -7.5146684646606445

Token 6: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5787424445152283
    2. ' ' → logprob: -1.828742504119873
    3. ' de' → logprob: -2.078742504119873
    4. 's' → logprob: -2.828742504119873
    5. '_' → logprob: -3.953742504119873
    6. 'd' → logprob: -4.203742504119873
    7. '`' → logprob: -4.203742504119873
    8. ' a' → logprob: -4.453742504119873
    9. ',' → logprob: -5.453742504119873
    10. ''' → logprob: -5.703742504119873

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3297625482082367
    2. ' saisir' → logprob: -1.704762578010559
    3. 'r' → logprob: -2.5797624588012695
    4. 'entr' → logprob: -4.0797624588012695
    5. ' entrer' → logprob: -6.0797624588012695
    6. ' rentrer' → logprob: -6.8297624588012695
    7. ' ' → logprob: -6.9547624588012695
    8. '```' → logprob: -7.7047624588012695
    9. 'don' → logprob: -8.70476245880127
    10. 'mettre' → logprob: -8.82976245880127

Token 8: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21120788156986237
    2. ' un' → logprob: -2.586207866668701
    3. ''' → logprob: -3.336207866668701
    4. ' une' → logprob: -3.836207866668701
    5. 's' → logprob: -3.961207866668701
    6. '_' → logprob: -4.211207866668701
    7. 'un' → logprob: -5.711207866668701
    8. 'r' → logprob: -5.961207866668701
    9. ''un' → logprob: -5.961207866668701
    10. ' ' → logprob: -6.336207866668701

Token 9: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23636040091514587
    2. 'chaine' → logprob: -2.8613603115081787
    3. 's' → logprob: -3.3613603115081787
    4. ' chaîne' → logprob: -3.6113603115081787
    5. 'ligne' → logprob: -4.486360549926758
    6. 'n' → logprob: -4.736360549926758
    7. '_' → logprob: -4.861360549926758
    8. 'v' → logprob: -4.861360549926758
    9. 'l' → logprob: -4.986360549926758
    10. ' ligne' → logprob: -5.236360549926758

Token 10: ' entière' (ID: 61583)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1057504415512085
    2. '_' → logprob: -1.7307504415512085
    3. 'x' → logprob: -1.7307504415512085
    4. '\n' → logprob: -2.605750560760498
    5. 's' → logprob: -2.980750560760498
    6. 'val' → logprob: -3.480750560760498
    7. '```' → logprob: -3.480750560760498
    8. '\' → logprob: -3.730750560760498
    9. '`' → logprob: -3.980750560760498
    10. 'value' → logprob: -4.230750560760498

Token 11: ' via' (ID: 4493)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6594696044921875
    2. 'v' → logprob: -1.6594696044921875
    3. 'x' → logprob: -2.0344696044921875
    4. 'i' → logprob: -2.0344696044921875
    5. 'val' → logprob: -5.4094696044921875
    6. '`' → logprob: -5.5344696044921875
    7. '_' → logprob: -5.6594696044921875
    8. 'value' → logprob: -5.9094696044921875
    9. '\n' → logprob: -5.9094696044921875
    10. 's' → logprob: -6.2844696044921875

Token 12: ' le' (ID: 505)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.18203014135360718
    2. 'input' → logprob: -1.807030200958252
    3. '=input' → logprob: -7.057030200958252
    4. 'l' → logprob: -7.557030200958252
    5. ' l' → logprob: -8.432029724121094
    6. ' ' → logprob: -8.432029724121094
    7. '<input' → logprob: -9.307029724121094
    8. '(input' → logprob: -9.432029724121094
    9. 'une' → logprob: -9.557029724121094
    10. ' une' → logprob: -10.432029724121094

Token 13: ' clavier' (ID: 187878)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.367878258228302
    2. ' input' → logprob: -1.2428781986236572
    3. '=input' → logprob: -4.367878437042236
    4. 's' → logprob: -6.742878437042236
    5. 'prompt' → logprob: -6.992878437042236
    6. '_' → logprob: -6.992878437042236
    7. '(input' → logprob: -7.742878437042236
    8. ' prompt' → logprob: -7.742878437042236
    9. ' clavier' → logprob: -7.742878437042236
    10. ' ' → logprob: -7.867878437042236

Token 14: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5577566623687744
    2. 'v' → logprob: -1.4327566623687744
    3. 'i' → logprob: -2.4327566623687744
    4. 'x' → logprob: -2.5577566623687744
    5. 'val' → logprob: -5.682756423950195
    6. 'value' → logprob: -5.682756423950195
    7. '`' → logprob: -5.682756423950195
    8. '```' → logprob: -5.682756423950195
    9. '#' → logprob: -6.307756423950195
    10. 'e' → logprob: -6.557756423950195

Token 15: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20558765530586243
    2. 'x' → logprob: -2.58058762550354
    3. 'v' → logprob: -3.20558762550354
    4. '\' → logprob: -4.330587863922119
    5. 'i' → logprob: -4.330587863922119
    6. '\n' → logprob: -4.330587863922119
    7. 'val' → logprob: -4.830587863922119
    8. '```' → logprob: -5.080587863922119
    9. '#' → logprob: -5.330587863922119
    10. 'ent' → logprob: -6.205587863922119

Token 16: ' La' (ID: 3038)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.45087650418281555
    2. 'value' → logprob: -1.8258764743804932
    3. 'n' → logprob: -2.075876474380493
    4. 'x' → logprob: -3.325876474380493
    5. 'ent' → logprob: -4.075876712799072
    6. 'nombre' → logprob: -4.450876712799072
    7. 'user' → logprob: -5.950876712799072
    8. 'v' → logprob: -6.075876712799072
    9. ' valeur' → logprob: -6.700876712799072
    10. 'number' → logprob: -6.825876712799072

Token 17: ' fonction' (ID: 17610)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3595156669616699
    2. ' valeur' → logprob: -1.35951566696167
    3. ' val' → logprob: -4.23451566696167
    4. ' ' → logprob: -4.35951566696167
    5. 's' → logprob: -4.60951566696167
    6. 'value' → logprob: -6.10951566696167
    7. '#' → logprob: -6.60951566696167
    8. ' value' → logprob: -7.60951566696167
    9. ' sais' → logprob: -7.60951566696167
    10. 'v' → logprob: -7.60951566696167

Token 18: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.038937248289585114
    2. ' input' → logprob: -3.2889373302459717
    3. 'int' → logprob: -7.288937091827393
    4. 'def' → logprob: -9.66393756866455
    5. 'print' → logprob: -9.78893756866455
    6. '```' → logprob: -10.66393756866455
    7. '=input' → logprob: -10.66393756866455
    8. '`' → logprob: -10.91393756866455
    9. ' int' → logprob: -11.41393756866455
    10. 's' → logprob: -12.41393756866455

Token 19: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023691088426858187
    2. '()' → logprob: -6.377368927001953
    3. '('' → logprob: -8.252368927001953
    4. '("' → logprob: -8.377368927001953
    5. '(
' → logprob: -9.127368927001953
    6. '(

' → logprob: -11.502368927001953
    7. '(`' → logprob: -11.627368927001953
    8. '("""' → logprob: -11.877368927001953
    9. ')' → logprob: -12.002368927001953
    10. '("("' → logprob: -12.127368927001953

Token 20: ' recue' (ID: 134861)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0022499379701912403
    2. ' (' → logprob: -6.877249717712402
    3. '('' → logprob: -7.627249717712402
    4. '()' → logprob: -8.502249717712402
    5. '("' → logprob: -8.627249717712402
    6. '(
' → logprob: -9.252249717712402
    7. 's' → logprob: -9.627249717712402
    8. ' ' → logprob: -10.127249717712402
    9. '"' → logprob: -10.752249717712402
    10. '("""' → logprob: -10.752249717712402

Token 21: 'ille' (ID: 3301)
  Prédit: 'ille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ille' → logprob: -0.00930927973240614
    2. 'illit' → logprob: -5.5093092918396
    3. 'ill' → logprob: -5.7593092918396
    4. 'il' → logprob: -7.3843092918396
    5. 'illir' → logprob: -8.134308815002441
    6. 't' → logprob: -8.634308815002441
    7. '#' → logprob: -8.759308815002441
    8. 'iller' → logprob: -8.884308815002441
    9. 'nt' → logprob: -9.009308815002441
    10. 'p' → logprob: -9.134308815002441

Token 22: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6702521443367004
    2. ' une' → logprob: -1.4202520847320557
    3. ' l' → logprob: -2.2952520847320557
    4. 'l' → logprob: -2.5452520847320557
    5. 'la' → logprob: -3.6702520847320557
    6. 'une' → logprob: -4.545252323150635
    7. 's' → logprob: -4.920252323150635
    8. 'ent' → logprob: -5.420252323150635
    9. '()' → logprob: -6.045252323150635
    10. 't' → logprob: -6.170252323150635

Token 23: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.4520609974861145
    2. 'cha' → logprob: -1.4520609378814697
    3. 'chaine' → logprob: -2.2020609378814697
    4. 's' → logprob: -5.327061176300049
    5. 'entrée' → logprob: -5.577061176300049
    6. ' chaine' → logprob: -5.577061176300049
    7. 'str' → logprob: -6.077061176300049
    8. 'val' → logprob: -6.452061176300049
    9. ' valeur' → logprob: -6.702061176300049
    10. ' ' → logprob: -7.202061176300049

Token 24: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3569268584251404
    2. 'de' → logprob: -2.231926918029785
    3. '(' → logprob: -3.606926918029785
    4. '.' → logprob: -3.731926918029785
    5. '()' → logprob: -3.731926918029785
    6. 's' → logprob: -4.106926918029785
    7. ')' → logprob: -4.106926918029785
    8. ' de' → logprob: -4.606926918029785
    9. '_v' → logprob: -4.731926918029785
    10. '"' → logprob: -4.731926918029785

Token 25: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.12805065512657166
    2. ' caractères' → logprob: -2.1280505657196045
    3. 'texte' → logprob: -7.503050804138184
    4. '#' → logprob: -8.503050804138184
    5. ' caractère' → logprob: -9.003050804138184
    6. ' caracteres' → logprob: -9.128050804138184
    7. ' caract' → logprob: -10.128050804138184
    8. ' ' → logprob: -11.003050804138184
    9. 'entrée' → logprob: -11.378050804138184
    10. '```' → logprob: -11.628050804138184

Token 26: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6160668730735779
    2. 'val' → logprob: -2.1160669326782227
    3. ',' → logprob: -2.3660669326782227
    4. '.' → logprob: -2.6160669326782227
    5. '#' → logprob: -2.8660669326782227
    6. 'v' → logprob: -3.2410669326782227
    7. 'ent' → logprob: -3.9910669326782227
    8. 'x' → logprob: -4.241066932678223
    9. 's' → logprob: -4.866066932678223
    10. 'value' → logprob: -4.866066932678223

Token 27: 'string' (ID: 1655)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02349446900188923
    2. ' )' → logprob: -4.398494243621826
    3. ').' → logprob: -5.023494243621826
    4. '),' → logprob: -6.023494243621826
    5. '')' → logprob: -8.648494720458984
    6. ' de' → logprob: -8.898494720458984
    7. '")' → logprob: -8.898494720458984
    8. ' ).' → logprob: -9.273494720458984
    9. 'de' → logprob: -9.398494720458984
    10. ' utilisateur' → logprob: -9.398494720458984

Token 28: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003921549301594496
    2. ' )' → logprob: -6.3789215087890625
    3. '")' → logprob: -7.0039215087890625
    4. '),' → logprob: -7.8789215087890625
    5. ').' → logprob: -8.003921508789062
    6. '')' → logprob: -8.753921508789062
    7. ')")' → logprob: -9.128921508789062
    8. '()' → logprob: -9.503921508789062
    9. 'e' → logprob: -9.878921508789062
    10. '`)' → logprob: -10.378921508789062

Token 29: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8971307873725891
    2. 'val' → logprob: -1.0221307277679443
    3. 'x' → logprob: -2.0221307277679443
    4. 'ent' → logprob: -3.6471307277679443
    5. 'nombre' → logprob: -3.6471307277679443
    6. 'v' → logprob: -3.7721307277679443
    7. 'value' → logprob: -4.897130966186523
    8. '#' → logprob: -4.897130966186523
    9. '```' → logprob: -5.522130966186523
    10. 'a' → logprob: -7.147130966186523

Token 30: ' La' (ID: 3038)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.32449328899383545
    2. 'n' → logprob: -2.074493408203125
    3. 'x' → logprob: -2.824493408203125
    4. 'ent' → logprob: -3.449493408203125
    5. 'value' → logprob: -3.699493408203125
    6. 'nombre' → logprob: -3.824493408203125
    7. 'v' → logprob: -5.199493408203125
    8. '#' → logprob: -6.199493408203125
    9. 'a' → logprob: -6.449493408203125
    10. '```' → logprob: -6.949493408203125

Token 31: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.7139342427253723
    2. 'val' → logprob: -1.0889341831207275
    3. ' fonction' → logprob: -2.7139341831207275
    4. '#' → logprob: -3.4639341831207275
    5. ' valeur' → logprob: -3.7139341831207275
    6. ' conversion' → logprob: -4.213934421539307
    7. 'conversion' → logprob: -4.463934421539307
    8. 'int' → logprob: -5.463934421539307
    9. 's' → logprob: -5.838934421539307
    10. 'suite' → logprob: -6.088934421539307

Token 32: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2814294695854187
    2. 'int' → logprob: -1.4064295291900635
    3. '=int' → logprob: -8.531429290771484
    4. ' input' → logprob: -9.906429290771484
    5. 'input' → logprob: -10.781429290771484
    6. ' ' → logprob: -12.406429290771484
    7. '<int' → logprob: -13.531429290771484
    8. '(int' → logprob: -13.781429290771484
    9. ' `' → logprob: -14.531429290771484
    10. '=input' → logprob: -14.531429290771484

Token 33: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009816531091928482
    2. '(' → logprob: -4.634816646575928
    3. '(convert' → logprob: -11.63481616973877
    4. '('' → logprob: -11.88481616973877
    5. '()</' → logprob: -12.13481616973877
    6. 'convert' → logprob: -12.38481616973877
    7. '()">' → logprob: -12.38481616973877
    8. ')' → logprob: -12.75981616973877
    9. '()?>' → logprob: -13.13481616973877
    10. '()>' → logprob: -13.13481616973877

Token 34: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11932399868965149
    2. ' transforme' → logprob: -2.994323968887329
    3. ' convert' → logprob: -3.619323968887329
    4. ' permet' → logprob: -4.619324207305908
    5. 'convert' → logprob: -4.619324207305908
    6. '()' → logprob: -4.744324207305908
    7. '(convert' → logprob: -6.244324207305908
    8. ')' → logprob: -6.369324207305908
    9. '(
' → logprob: -6.994324207305908
    10. ' (' → logprob: -7.244324207305908

Token 35: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0009502872708253562
    2. 'i' → logprob: -7.500950336456299
    3. 'ir' → logprob: -8.50094985961914
    4. ' it' → logprob: -9.25094985961914
    5. 'ît' → logprob: -10.75094985961914
    6. '()' → logprob: -10.87594985961914
    7. 'er' → logprob: -11.37594985961914
    8. '   ' → logprob: -12.37594985961914
    9. 't' → logprob: -12.50094985961914
    10. '(' → logprob: -12.50094985961914

Token 36: ' cette' (ID: 7696)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.25017058849334717
    2. ' cette' → logprob: -2.3751707077026367
    3. '(' → logprob: -3.2501707077026367
    4. ' ' → logprob: -3.3751707077026367
    5. ' une' → logprob: -4.250170707702637
    6. '()' → logprob: -4.625170707702637
    7. 'la' → logprob: -4.875170707702637
    8. ' (' → logprob: -5.125170707702637
    9. ' l' → logprob: -5.250170707702637
    10. 'l' → logprob: -6.125170707702637

Token 37: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.03553921356797218
    2. ' valeur' → logprob: -3.785539150238037
    3. ' ' → logprob: -5.285539150238037
    4. ' chaine' → logprob: -5.285539150238037
    5. 'chaine' → logprob: -7.660539150238037
    6. ' string' → logprob: -7.660539150238037
    7. 's' → logprob: -8.410539627075195
    8. '```' → logprob: -9.160539627075195
    9. '  ' → logprob: -9.285539627075195
    10. '   ' → logprob: -9.410539627075195

Token 38: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007633600849658251
    2. '()' → logprob: -5.132633686065674
    3. '#' → logprob: -8.007633209228516
    4. ')' → logprob: -8.132633209228516
    5. '(
' → logprob: -8.132633209228516
    6. ' en' → logprob: -9.007633209228516
    7. ' (' → logprob: -9.257633209228516
    8. 's' → logprob: -9.382633209228516
    9. '('' → logprob: -9.757633209228516
    10. '```' → logprob: -10.257633209228516

Token 39: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.011469470337033272
    2. ' caractère' → logprob: -5.76146936416626
    3. ' car' → logprob: -6.01146936416626
    4. ' ' → logprob: -6.26146936416626
    5. ' caracteres' → logprob: -7.01146936416626
    6. ' caract' → logprob: -7.13646936416626
    7. 'car' → logprob: -7.38646936416626
    8. ' type' → logprob: -8.261469841003418
    9. 'v' → logprob: -8.511469841003418
    10. '_' → logprob: -8.636469841003418

Token 40: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004900033236481249
    2. ' (' → logprob: -8.875490188598633
    3. ',' → logprob: -9.500490188598633
    4. ')' → logprob: -9.625490188598633
    5. '()' → logprob: -9.625490188598633
    6. 's' → logprob: -9.875490188598633
    7. '(
' → logprob: -10.500490188598633
    8. ' ' → logprob: -10.500490188598633
    9. '('' → logprob: -12.750490188598633
    10. ''' → logprob: -12.750490188598633

Token 41: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14926835894584656
    2. ' un' → logprob: -2.024268388748169
    3. ' espace' → logprob: -6.14926815032959
    4. 'un' → logprob: -6.89926815032959
    5. '  ' → logprob: -6.89926815032959
    6. ' une' → logprob: -7.14926815032959
    7. ' entier' → logprob: -7.77426815032959
    8. ' ' → logprob: -8.02426815032959
    9. ' nombre' → logprob: -8.64926815032959
    10. 'n' → logprob: -9.02426815032959

Token 42: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7909181118011475
    2. ' espace' → logprob: -0.7909181118011475
    3. ' entier' → logprob: -2.7909181118011475
    4. ' nombre' → logprob: -3.9159181118011475
    5. 'e' → logprob: -5.665918350219727
    6. 'es' → logprob: -6.040918350219727
    7. '  ' → logprob: -6.665918350219727
    8. ' space' → logprob: -7.040918350219727
    9. ' espaces' → logprob: -7.665918350219727
    10. ' ' → logprob: -7.790918350219727

Token 43: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15955869853496552
    2. 'x' → logprob: -2.5345587730407715
    3. 'v' → logprob: -3.2845587730407715
    4. '#' → logprob: -4.1595587730407715
    5. '```' → logprob: -5.4095587730407715
    6. 'val' → logprob: -6.2845587730407715
    7. 'a' → logprob: -6.5345587730407715
    8. 'i' → logprob: -7.0345587730407715
    9. 'nombre' → logprob: -7.0345587730407715
    10. 'u' → logprob: -7.1595587730407715

Token 44: 'integer' (ID: 27378)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020423108711838722
    2. ' )' → logprob: -4.64542293548584
    3. 'int' → logprob: -5.64542293548584
    4. ' ' → logprob: -6.64542293548584
    5. ' int' → logprob: -6.77042293548584
    6. ' entier' → logprob: -6.77042293548584
    7. ').' → logprob: -6.89542293548584
    8. ' integer' → logprob: -6.89542293548584
    9. 'ent' → logprob: -7.02042293548584
    10. 'integer' → logprob: -8.39542293548584

Token 45: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010366239439463243
    2. ').' → logprob: -9.750103950500488
    3. ' )' → logprob: -10.875103950500488
    4. '.' → logprob: -11.750103950500488
    5. ')`' → logprob: -12.750103950500488
    6. 'e' → logprob: -13.000103950500488
    7. '#' → logprob: -13.000103950500488
    8. ')#' → logprob: -13.250103950500488
    9. '):' → logprob: -13.875103950500488
    10. ')
' → logprob: -13.875103950500488

Token 46: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.30486348271369934
    2. 'v' → logprob: -1.929863452911377
    3. 'x' → logprob: -2.429863452911377
    4. '#' → logprob: -3.929863452911377
    5. 'i' → logprob: -6.304863452911377
    6. '```' → logprob: -6.304863452911377
    7. 'a' → logprob: -6.429863452911377
    8. 'u' → logprob: -6.804863452911377
    9. 'val' → logprob: -7.304863452911377
    10. 'value' → logprob: -7.429863452911377

Token 47: ' Le' (ID: 2018)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6870516538619995
    2. 'v' → logprob: -0.8120516538619995
    3. 'x' → logprob: -3.812051773071289
    4. '#' → logprob: -3.937051773071289
    5. 'i' → logprob: -5.437051773071289
    6. 'a' → logprob: -6.062051773071289
    7. 'u' → logprob: -6.312051773071289
    8. 'val' → logprob: -7.187051773071289
    9. 'e' → logprob: -7.562051773071289
    10. 's' → logprob: -7.812051773071289

Token 48: ' résultat' (ID: 62556)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.039945393800735474
    2. '_' → logprob: -4.664945602416992
    3. 'a' → logprob: -4.664945602416992
    4. 'n' → logprob: -5.289945602416992
    5. 'val' → logprob: -6.164945602416992
    6. 'nombre' → logprob: -6.789945602416992
    7. 'e' → logprob: -7.039945602416992
    8. ' 
' → logprob: -7.039945602416992
    9. '   
' → logprob: -7.164945602416992
    10. '  
' → logprob: -7.164945602416992

Token 49: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.047083571553230286
    2. ' =' → logprob: -3.172083616256714
    3. 's' → logprob: -6.422083377838135
    4. '=' → logprob: -7.047083377838135
    5. '_' → logprob: -7.422083377838135
    6. ' est' → logprob: -8.547083854675293
    7. '  ' → logprob: -8.672083854675293
    8. ' a' → logprob: -9.672083854675293
    9. ',' → logprob: -9.797083854675293
    10. ' de' → logprob: -10.297083854675293

Token 50: ' stock' (ID: 6546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04657384008169174
    2. ' =' → logprob: -3.2965738773345947
    3. '=' → logprob: -5.921573638916016
    4. ' stock' → logprob: -6.546573638916016
    5. '_' → logprob: -6.796573638916016
    6. ' a' → logprob: -7.546573638916016
    7. 'r' → logprob: -7.796573638916016
    8. 's' → logprob: -7.921573638916016
    9. ',' → logprob: -8.171573638916016
    10. ' r' → logprob: -8.921573638916016

Token 51: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.5451681974809617e-05
    2. ' é' → logprob: -12.375015258789062
    3. 'u' → logprob: -12.500015258789062
    4. 'ée' → logprob: -12.625015258789062
    5. 'e' → logprob: -12.750015258789062
    6. '�' → logprob: -14.875015258789062
    7. 'ê' → logprob: -15.125015258789062
    8. 'a' → logprob: -15.750015258789062
    9. 'ė' → logprob: -16.500015258789062
    10. ' ' → logprob: -16.625015258789062

Token 52: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013009272515773773
    2. '_' → logprob: -4.763009071350098
    3. 's' → logprob: -6.388009071350098
    4. '  ' → logprob: -6.638009071350098
    5. ' dans' → logprob: -7.763009071350098
    6. ' _' → logprob: -8.763009071350098
    7. ' a' → logprob: -9.013009071350098
    8. 'dans' → logprob: -9.388009071350098
    9. ' ' → logprob: -9.763009071350098
    10. ',' → logprob: -10.138009071350098

Token 53: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01306833978742361
    2. ' la' → logprob: -5.513068199157715
    3. ' l' → logprob: -5.888068199157715
    4. '  ' → logprob: -6.513068199157715
    5. ' une' → logprob: -6.763068199157715
    6. ' a' → logprob: -7.263068199157715
    7. ' ' → logprob: -7.388068199157715
    8. 'a' → logprob: -7.888068199157715
    9. 'l' → logprob: -8.263068199157715
    10. 's' → logprob: -8.263068199157715

Token 54: ' variable' (ID: 11076)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020366225391626358
    2. ' variable' → logprob: -4.270366191864014
    3. 'variable' → logprob: -5.770366191864014
    4. '_' → logprob: -6.020366191864014
    5. 'v' → logprob: -8.895366668701172
    6. 'a' → logprob: -9.270366668701172
    7. ' a' → logprob: -9.770366668701172
    8. '  ' → logprob: -10.020366668701172
    9. 'space' → logprob: -10.645366668701172
    10. ' `' → logprob: -10.770366668701172

Token 55: ' X' (ID: 2127)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013324107974767685
    2. '_' → logprob: -5.76332426071167
    3. ' _' → logprob: -6.26332426071167
    4. 'n' → logprob: -6.76332426071167
    5. 'a' → logprob: -6.76332426071167
    6. 's' → logprob: -7.01332426071167
    7. ' valeur' → logprob: -7.51332426071167
    8. 'space' → logprob: -7.63832426071167
    9. ' espace' → logprob: -7.63832426071167
    10. 'u' → logprob: -7.88832426071167

Token 56: '.
' (ID: 558)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.06454075127840042
    2. 'x' → logprob: -2.8145408630371094
    3. '#' → logprob: -6.939540863037109
    4. 'n' → logprob: -7.439540863037109
    5. ',' → logprob: -8.43954086303711
    6. 's' → logprob: -8.93954086303711
    7. ' ' → logprob: -9.06454086303711
    8. '=' → logprob: -9.18954086303711
    9. '_' → logprob: -9.68954086303711
    10. '```' → logprob: -9.81454086303711

Token 57: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00012678056373260915
    2. 'x' → logprob: -9.125126838684082
    3. '#' → logprob: -11.500126838684082
    4. '```' → logprob: -12.625126838684082
    5. ' X' → logprob: -13.000126838684082
    6. ' ' → logprob: -13.875126838684082
    7. 'n' → logprob: -15.125126838684082
    8. '`' → logprob: -15.750126838684082
    9. ' 
' → logprob: -16.125125885009766
    10. '_' → logprob: -16.125125885009766

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01879207231104374
    2. '=' → logprob: -4.018792152404785
    3. ' ' → logprob: -7.393792152404785
    4. ' =
' → logprob: -11.393792152404785
    5. ',' → logprob: -12.643792152404785
    6. '.' → logprob: -12.768792152404785
    7. ' ' → logprob: -13.143792152404785
    8. 'space' → logprob: -13.643792152404785
    9. ')' → logprob: -13.768792152404785
    10. '=input' → logprob: -14.018792152404785

Token 59: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.051559481769800186
    2. 'int' → logprob: -3.5515594482421875
    3. ' input' → logprob: -3.9265594482421875
    4. 'input' → logprob: -6.3015594482421875
    5. ' ' → logprob: -11.176559448242188
    6. ' ' → logprob: -12.176559448242188
    7. ' in' → logprob: -12.551559448242188
    8. '=int' → logprob: -13.676559448242188
    9. '<int' → logprob: -14.051559448242188
    10. '<input' → logprob: -14.801559448242188

Token 60: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20152853429317474
    2. '(input' → logprob: -1.701528549194336
    3. '()' → logprob: -9.451528549194336
    4. '('' → logprob: -10.826528549194336
    5. ' (' → logprob: -12.201528549194336
    6. 'input' → logprob: -12.326528549194336
    7. '(
' → logprob: -13.701528549194336
    8. '(X' → logprob: -13.701528549194336
    9. '(in' → logprob: -14.326528549194336
    10. '((' → logprob: -14.326528549194336

Token 61: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3562570810317993
    2. '())' → logprob: -1.7312570810317993
    3. '()' → logprob: -2.2312569618225098
    4. '('' → logprob: -4.60625696182251
    5. '("' → logprob: -6.23125696182251
    6. '(""))' → logprob: -6.73125696182251
    7. '("("' → logprob: -6.73125696182251
    8. '()))' → logprob: -8.231257438659668
    9. '("")' → logprob: -8.981257438659668
    10. ')' → logprob: -9.356257438659668

Token 62: '#' (ID: 2)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.043405532836914
    2. ' ' → logprob: -1.418405532836914
    3. '*' → logprob: -1.668405532836914
    4. ')' → logprob: -1.918405532836914
    5. '#' → logprob: -3.793405532836914
    6. '.' → logprob: -4.668405532836914
    7. '<|end|>' → logprob: -4.668405532836914
    8. ' 
' → logprob: -5.168405532836914
    9. '+
' → logprob: -5.543405532836914
    10. '
' → logprob: -5.918405532836914

Token 63: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7565273642539978
    2. ' if' → logprob: -1.0065274238586426
    3. '(' → logprob: -3.1315274238586426
    4. ' ' → logprob: -3.1315274238586426
    5. 'print' → logprob: -3.6315274238586426
    6. '#' → logprob: -3.7565274238586426
    7. 'X' → logprob: -4.631527423858643
    8. ''' → logprob: -5.881527423858643
    9. ')' → logprob: -6.006527423858643
    10. 'i' → logprob: -6.006527423858643

Token 64: ' souhaite' (ID: 68897)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006359712220728397
    2. ''' → logprob: -6.131359577178955
    3. '(' → logprob: -7.006359577178955
    4. ')' → logprob: -7.381359577178955
    5. ' print' → logprob: -7.631359577178955
    6. '_' → logprob: -8.131360054016113
    7. 'print' → logprob: -8.256360054016113
    8. ' ' → logprob: -8.506360054016113
    9. ' a' → logprob: -9.131360054016113
    10. '()' → logprob: -9.131360054016113

Token 65: ' déterminer' (ID: 122024)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3171647787094116
    2. ' afficher' → logprob: -1.4421647787094116
    3. ' continuer' → logprob: -4.817164897918701
    4. ' effectuer' → logprob: -5.067164897918701
    5. ' vérifier' → logprob: -5.317164897918701
    6. ' calcul' → logprob: -5.567164897918701
    7. ' faire' → logprob: -6.942164897918701
    8. ' ajouter' → logprob: -7.067164897918701
    9. 'Afficher' → logprob: -7.192164897918701
    10. '_' → logprob: -7.317164897918701

Token 66: ' combien' (ID: 106648)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.512018084526062
    2. '<|end|>' → logprob: -1.637018084526062
    3. ' if' → logprob: -2.3870182037353516
    4. ' si' → logprob: -3.3870182037353516
    5. ' X' → logprob: -3.7620182037353516
    6. '  ' → logprob: -4.387018203735352
    7. ' la' → logprob: -4.512018203735352
    8. ')' → logprob: -5.012018203735352
    9. '<|end|>' → logprob: -5.137018203735352
    10. ' )' → logprob: -6.012018203735352

Token 67: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.692375659942627
    2. ' de' → logprob: -1.817375659942627
    3. '<|end|>' → logprob: -1.942375659942627
    4. '_' → logprob: -2.442375659942627
    5. ' ' → logprob: -2.817375659942627
    6. 's' → logprob: -4.067375659942627
    7. 'd' → logprob: -5.067375659942627
    8. 'de' → logprob: -5.192375659942627
    9. '_space' → logprob: -6.192375659942627
    10. '<|end|>' → logprob: -6.442375659942627

Token 68: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.8024039268493652
    2. ' ' → logprob: -1.3024039268493652
    3. ' jours' → logprob: -2.1774039268493652
    4. 'fois' → logprob: -3.9274039268493652
    5. ' secondes' → logprob: -4.177403926849365
    6. ' espaces' → logprob: -4.677403926849365
    7. ' chiffres' → logprob: -4.802403926849365
    8. ' valeurs' → logprob: -4.927403926849365
    9. 's' → logprob: -5.052403926849365
    10. ' nombres' → logprob: -5.052403926849365

Token 69: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06591008603572845
    2. '<|end|>' → logprob: -3.9409101009368896
    3. '  ' → logprob: -4.4409098625183105
    4. ' X' → logprob: -4.9409098625183105
    5. ''' → logprob: -5.1909098625183105
    6. 'space' → logprob: -5.4409098625183105
    7. ' espace' → logprob: -5.8159098625183105
    8. ' espaces' → logprob: -6.3159098625183105
    9. ' space' → logprob: -6.8159098625183105
    10. ' l' → logprob: -6.8159098625183105

Token 70: '500' (ID: 3234)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.4286056756973267
    2. 'le' → logprob: -1.6786056756973267
    3. 'la' → logprob: -2.178605556488037
    4. ' ' → logprob: -2.303605556488037
    5. ' X' → logprob: -2.303605556488037
    6. 'l' → logprob: -2.428605556488037
    7. '"' → logprob: -3.178605556488037
    8. ''' → logprob: -3.178605556488037
    9. ' la' → logprob: -4.428605556488037
    10. ' "' → logprob: -4.553605556488037

Token 71: ' peut' (ID: 9216)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8458746075630188
    2. 's' → logprob: -1.595874547958374
    3. '0' → logprob: -1.970874547958374
    4. ')' → logprob: -2.470874547958374
    5. ' )' → logprob: -3.095874547958374
    6. ' est' → logprob: -4.595874786376953
    7. 'entr' → logprob: -5.345874786376953
    8. ' s' → logprob: -5.533374786376953
    9. '.' → logprob: -5.595874786376953
    10. ' peut' → logprob: -5.595874786376953

Token 72: ' aller' (ID: 18383)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9792044162750244
    2. ' être' → logprob: -2.1042044162750244
    3. ' "' → logprob: -2.3542044162750244
    4. 's' → logprob: -2.3542044162750244
    5. ' rentrer' → logprob: -3.1042044162750244
    6. 'être' → logprob: -3.2292044162750244
    7. '"' → logprob: -3.3542044162750244
    8. ' s' → logprob: -3.9792044162750244
    9. ' conten' → logprob: -4.104204177856445
    10. ' tenir' → logprob: -4.479204177856445

Token 73: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.3641042411327362
    2. 'dans' → logprob: -1.7391042709350586
    3. ' ' → logprob: -2.1141042709350586
    4. ' into' → logprob: -5.614104270935059
    5. ' dan' → logprob: -7.364104270935059
    6. ' dedans' → logprob: -7.489104270935059
    7. 'ent' → logprob: -7.864104270935059
    8. 'd' → logprob: -7.989104270935059
    9. '<|end|>' → logprob: -7.989104270935059
    10. ' d' → logprob: -8.114104270935059

Token 74: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.06955953687429428
    2. 'X' → logprob: -2.8195595741271973
    3. ' ' → logprob: -4.944559574127197
    4. ' la' → logprob: -8.694559097290039
    5. ' l' → logprob: -9.694559097290039
    6. 'l' → logprob: -9.694559097290039
    7. ' ' → logprob: -10.694559097290039
    8. '100' → logprob: -10.694559097290039
    9. '  ' → logprob: -11.319559097290039
    10. 'la' → logprob: -11.507059097290039

Token 75: ' sans' (ID: 9828)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29186293482780457
    2. ',' → logprob: -2.541862964630127
    3. ':' → logprob: -3.416862964630127
    4. ' ' → logprob: -3.791862964630127
    5. '' → logprob: -3.791862964630127
    6. ' 
' → logprob: -4.291862964630127
    7. '\' → logprob: -4.416862964630127
    8. '.
' → logprob: -4.541862964630127
    9. '  
' → logprob: -4.541862964630127
    10. ' :' → logprob: -4.791862964630127

Token 76: ' dépasser' (ID: 187375)
  Prédit: ' dépasser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dépasser' → logprob: -0.10656361281871796
    2. 's' → logprob: -3.7315635681152344
    3. 'r' → logprob: -4.231563568115234
    4. ' ' → logprob: -4.356563568115234
    5. ' dépasse' → logprob: -4.356563568115234
    6. ' remainder' → logprob: -4.981563568115234
    7. ' dépass' → logprob: -5.356563568115234
    8. 'es' → logprob: -5.481563568115234
    9. '_' → logprob: -5.856563568115234
    10. '<|end|>' → logprob: -6.731563568115234

Token 77: ' X' (ID: 2127)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25664767622947693
    2. ',' → logprob: -2.6316475868225098
    3. '.' → logprob: -2.8816475868225098
    4. ' ,' → logprob: -3.0066475868225098
    5. ' X' → logprob: -3.8816475868225098
    6. 'X' → logprob: -4.88164758682251
    7. ' (' → logprob: -5.75664758682251
    8. '  ' → logprob: -5.88164758682251
    9. ' .' → logprob: -6.13164758682251
    10. ' '' → logprob: -6.88164758682251

Token 78: ' (' (ID: 350)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08360613882541656
    2. '.
' → logprob: -4.208606243133545
    3. ' 
' → logprob: -4.458606243133545
    4. '  
' → logprob: -4.583606243133545
    5. ',' → logprob: -4.708606243133545
    6. ' ' → logprob: -5.083606243133545
    7. ':' → logprob: -5.333606243133545
    8. 's' → logprob: -5.583606243133545
    9. '\' → logprob: -5.958606243133545
    10. '' → logprob: -5.958606243133545

Token 79: 'division' (ID: 50596)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4005693793296814
    2. ' )' → logprob: -1.2755694389343262
    3. ').' → logprob: -3.650569438934326
    4. ' ).' → logprob: -4.025569438934326
    5. ' ' → logprob: -6.025569438934326
    6. ' ),' → logprob: -6.775569438934326
    7. ',' → logprob: -6.900569438934326
    8. '),' → logprob: -7.400569438934326
    9. '.' → logprob: -7.650569438934326
    10. ' )
' → logprob: -8.400568962097168

Token 80: ' entière' (ID: 61583)
  Prédit: ' entière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entière' → logprob: -0.21220020949840546
    2. 'ent' → logprob: -2.587200164794922
    3. ' ' → logprob: -3.212200164794922
    4. '_' → logprob: -3.712200164794922
    5. ')' → logprob: -4.212200164794922
    6. ' )' → logprob: -4.712200164794922
    7. '_ent' → logprob: -4.962200164794922
    8. 'e' → logprob: -4.962200164794922
    9. ' enti' → logprob: -5.337200164794922
    10. ' ' → logprob: -6.587200164794922

Token 81: ').
' (ID: 6294)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.48113560676574707
    2. ')' → logprob: -1.106135606765747
    3. ' ).' → logprob: -3.606135606765747
    4. ').' → logprob: -3.856135606765747
    5. ' ' → logprob: -6.856135368347168
    6. '.)' → logprob: -7.731135368347168
    7. 'X' → logprob: -8.106135368347168
    8. '.' → logprob: -8.356135368347168
    9. ' )
' → logprob: -9.106135368347168
    10. ' ),' → logprob: -9.231135368347168

Token 82: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9612823128700256
    2. '' → logprob: -1.9612822532653809
    3. ' ' → logprob: -2.336282253265381
    4. ' 
' → logprob: -2.336282253265381
    5. '\' → logprob: -2.836282253265381
    6. 'r' → logprob: -3.211282253265381
    7. 'nombre' → logprob: -3.211282253265381
    8. 'result' → logprob: -3.711282253265381
    9. '\n' → logprob: -4.586282253265381
    10. ' ' → logprob: -4.711282253265381

Token 83: ' L' (ID: 451)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.7123892307281494
    2. 'n' → logprob: -1.8373892307281494
    3. 'result' → logprob: -2.2123892307281494
    4. ' ' → logprob: -2.3373892307281494
    5. ' n' → logprob: -2.3373892307281494
    6. 'nombre' → logprob: -2.5873892307281494
    7. ' nombre' → logprob: -3.3373892307281494
    8. ' result' → logprob: -3.3373892307281494
    9. ' 
' → logprob: -3.4623892307281494
    10. 'r' → logprob: -3.7123892307281494

Token 84: ''op' (ID: 70747)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1574665606021881
    2. 'e' → logprob: -3.6574666500091553
    3. 'r' → logprob: -3.9074666500091553
    4. 'a' → logprob: -4.157466411590576
    5. ' ' → logprob: -4.157466411590576
    6. 'o' → logprob: -4.282466411590576
    7. ' nombre' → logprob: -4.907466411590576
    8. ' résultat' → logprob: -5.532466411590576
    9. 'b' → logprob: -5.657466411590576
    10. ' a' → logprob: -5.782466411590576

Token 85: 'érateur' (ID: 108528)
  Prédit: 'ération'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.046080127358436584
    2. 'é' → logprob: -4.421080112457275
    3. 'érateur' → logprob: -4.546080112457275
    4. 'ér' → logprob: -4.671080112457275
    5. 'érations' → logprob: -4.671080112457275
    6. 'èr' → logprob: -6.796080112457275
    7. 'éra' → logprob: -7.421080112457275
    8. 'érant' → logprob: -7.671080112457275
    9. 'éré' → logprob: -8.671080589294434
    10. 'érence' → logprob: -8.796080589294434

Token 86: ' //' (ID: 602)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33107179403305054
    2. ' //' → logprob: -1.9560718536376953
    3. '//' → logprob: -2.8310718536376953
    4. '_' → logprob: -3.8310718536376953
    5. '  ' → logprob: -4.706071853637695
    6. '```' → logprob: -5.081071853637695
    7. '   ' → logprob: -5.206071853637695
    8. '"' → logprob: -5.331071853637695
    9. ' `' → logprob: -5.331071853637695
    10. ' de' → logprob: -5.456071853637695

Token 87: ' effect' (ID: 3159)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5678766965866089
    2. ' est' → logprob: -1.5678766965866089
    3. ' permet' → logprob: -1.9428766965866089
    4. 's' → logprob: -4.317876815795898
    5. '<|end|>' → logprob: -4.692876815795898
    6. ' s' → logprob: -5.067876815795898
    7. ' réalise' → logprob: -5.442876815795898
    8. ' va' → logprob: -5.442876815795898
    9. ' peut' → logprob: -5.567876815795898
    10. ' (' → logprob: -5.817876815795898

Token 88: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0005939012626186013
    2. 'u' → logprob: -8.125594139099121
    3. 'uer' → logprob: -8.375594139099121
    4. 'uera' → logprob: -11.250594139099121
    5. 'uent' → logprob: -11.500594139099121
    6. 'uée' → logprob: -11.750594139099121
    7. 'ué' → logprob: -11.875594139099121
    8. '```' → logprob: -12.750594139099121
    9. 'úe' → logprob: -12.875594139099121
    10. 'uez' → logprob: -13.000594139099121

Token 89: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.06493730843067169
    2. ' une' → logprob: -3.0649373531341553
    3. 'la' → logprob: -5.439937114715576
    4. 'l' → logprob: -5.814937114715576
    5. ' ' → logprob: -5.939937114715576
    6. ' l' → logprob: -6.314937114715576
    7. 'une' → logprob: -6.439937114715576
    8. 'a' → logprob: -6.939937114715576
    9. ' ' → logprob: -8.189937591552734
    10. '  ' → logprob: -8.439937591552734

Token 90: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.29732200503349304
    2. ' division' → logprob: -1.5473220348358154
    3. 'div' → logprob: -3.1723220348358154
    4. ' ' → logprob: -6.422321796417236
    5. ' div' → logprob: -8.422322273254395
    6. 'd' → logprob: -8.922322273254395
    7. ' /' → logprob: -8.922322273254395
    8. '  ' → logprob: -10.297322273254395
    9. '/' → logprob: -10.609822273254395
    10. ' d' → logprob: -10.859822273254395

Token 91: ' entière' (ID: 61583)
  Prédit: ' entière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entière' → logprob: -0.467994749546051
    2. 'ent' → logprob: -1.0929946899414062
    3. ' ent' → logprob: -3.9679946899414062
    4. ' enti' → logprob: -4.342994689941406
    5. 'enti' → logprob: -6.217994689941406
    6. '_ent' → logprob: -6.842994689941406
    7. 'int' → logprob: -6.967994689941406
    8. ' ' → logprob: -7.467994689941406
    9. '	ent' → logprob: -8.217994689941406
    10. ' integer' → logprob: -8.217994689941406

Token 92: ' (' (ID: 350)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2465932369232178
    2. ' ' → logprob: -1.9965932369232178
    3. 'n' → logprob: -2.1215932369232178
    4. ' 
' → logprob: -2.4965932369232178
    5. ',' → logprob: -2.8715932369232178
    6. ' :' → logprob: -2.9965932369232178
    7. 'result' → logprob: -3.2465932369232178
    8. ':' → logprob: -3.3715932369232178
    9. '500' → logprob: -3.4965932369232178
    10. ' ' → logprob: -4.121593475341797

Token 93: 'le' (ID: 282)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.22817958891391754
    2. ')' → logprob: -1.6031795740127563
    3. ' ).' → logprob: -7.103179454803467
    4. ' ' → logprob: -7.228179454803467
    5. ').' → logprob: -7.728179454803467
    6. ')#' → logprob: -8.603179931640625
    7. ' )
' → logprob: -9.603179931640625
    8. ' ),' → logprob: -10.353179931640625
    9. ' entière' → logprob: -10.478179931640625
    10. 'div' → logprob: -10.728179931640625

Token 94: ' quotient' (ID: 169302)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.7797840237617493
    2. ' résultat' → logprob: -0.9047840237617493
    3. ' quotient' → logprob: -3.5297839641571045
    4. ' ' → logprob: -3.7797839641571045
    5. ' reste' → logprob: -4.279784202575684
    6. 'nombre' → logprob: -4.404784202575684
    7. 'rés' → logprob: -4.404784202575684
    8. 's' → logprob: -4.779784202575684
    9. 'e' → logprob: -4.904784202575684
    10. ' resultat' → logprob: -5.654784202575684

Token 95: ' sans' (ID: 9828)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8793115615844727
    2. ' )' → logprob: -1.2543115615844727
    3. ' entier' → logprob: -2.0043115615844727
    4. ' sans' → logprob: -3.3793115615844727
    5. ' de' → logprob: -3.5043115615844727
    6. ' entière' → logprob: -3.6293115615844727
    7. ').' → logprob: -3.8793115615844727
    8. ' ' → logprob: -4.504311561584473
    9. ' ).' → logprob: -4.879311561584473
    10. 'sans' → logprob: -4.879311561584473

Token 96: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5962554812431335
    2. 'la' → logprob: -0.9712554812431335
    3. 'le' → logprob: -3.3462555408477783
    4. ' le' → logprob: -3.9712555408477783
    5. 'l' → logprob: -5.721255302429199
    6. ' partie' → logprob: -5.721255302429199
    7. ' reste' → logprob: -6.221255302429199
    8. ' ' → logprob: -6.471255302429199
    9. 'reste' → logprob: -6.471255302429199
    10. ' ' → logprob: -6.721255302429199

Token 97: ' partie' (ID: 22139)
  Prédit: ' partie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partie' → logprob: -0.5409265756607056
    2. 'part' → logprob: -0.9159265756607056
    3. ' ' → logprob: -5.540926456451416
    4. 'reste' → logprob: -5.790926456451416
    5. ' part' → logprob: -6.415926456451416
    6. ' ' → logprob: -6.540926456451416
    7. '   ' → logprob: -6.540926456451416
    8. '	' → logprob: -7.290926456451416
    9. 'fraction' → logprob: -7.290926456451416
    10. 'r' → logprob: -7.665926456451416

Token 98: ' déc' (ID: 8498)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3880865573883057
    2. ' déc' → logprob: -1.3880865573883057
    3. ' ' → logprob: -2.2630865573883057
    4. ' partie' → logprob: -2.5130865573883057
    5. '```' → logprob: -2.7630865573883057
    6. 'reste' → logprob: -3.0130865573883057
    7. 'fraction' → logprob: -3.3880865573883057
    8. ' reste' → logprob: -3.5130865573883057
    9. 'rest' → logprob: -3.8880865573883057
    10. 'quot' → logprob: -4.763086318969727

Token 99: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.006480526644736528
    2. 'imal' → logprob: -5.256480693817139
    3. '```' → logprob: -7.506480693817139
    4. 'ale' → logprob: -9.25648021697998
    5. '>' → logprob: -9.50648021697998
    6. 'on' → logprob: -10.00648021697998
    7. '#' → logprob: -10.13148021697998
    8. '%' → logprob: -10.13148021697998
    9. 'om' → logprob: -10.50648021697998
    10. '</' → logprob: -10.69398021697998

Token 100: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.06294278055429459
    2. 'al' → logprob: -2.8129427433013916
    3. 'nale' → logprob: -9.312942504882812
    4. 'ales' → logprob: -9.437942504882812
    5. '```' → logprob: -9.687942504882812
    6. 'alité' → logprob: -9.687942504882812
    7. '%' → logprob: -9.687942504882812
    8. '   ' → logprob: -9.812942504882812
    9. '2' → logprob: -9.812942504882812
    10. 'але' → logprob: -10.312942504882812

Token 101: ').
' (ID: 6294)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.6607328653335571
    2. ')' → logprob: -0.7857328653335571
    3. ' ).' → logprob: -4.410732746124268
    4. ' )' → logprob: -4.410732746124268
    5. ').
' → logprob: -7.035732746124268
    6. ')
' → logprob: -7.910732746124268
    7. 'e' → logprob: -8.285733222961426
    8. ').

' → logprob: -8.285733222961426
    9. 's' → logprob: -8.535733222961426
    10. 'de' → logprob: -8.785733222961426

Token 102: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1549171209335327
    2. 'result' → logprob: -1.1549171209335327
    3. 'nombre' → logprob: -1.9049171209335327
    4. 'r' → logprob: -2.7799172401428223
    5. 'Y' → logprob: -3.4049172401428223
    6. '  
' → logprob: -3.5299172401428223
    7. '```' → logprob: -4.154917240142822
    8. 'nb' → logprob: -4.529917240142822
    9. 'N' → logprob: -4.779917240142822
    10. 'count' → logprob: -5.029917240142822

Token 103: ' Cela' (ID: 44403)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5745513439178467
    2. 'Y' → logprob: -2.0745513439178467
    3. 'nombre' → logprob: -2.1995513439178467
    4. 'n' → logprob: -3.3245513439178467
    5. 'quot' → logprob: -3.4495513439178467
    6. 'N' → logprob: -3.4495513439178467
    7. 'nb' → logprob: -3.9495513439178467
    8. 'count' → logprob: -4.199551582336426
    9. 'div' → logprob: -4.699551582336426
    10. 'R' → logprob: -4.699551582336426

Token 104: ' donne' (ID: 30004)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peut' → logprob: -1.5367543697357178
    2. ' correspond' → logprob: -1.5367543697357178
    3. ' signifie' → logprob: -1.9117543697357178
    4. ' s' → logprob: -2.1617543697357178
    5. ' veut' → logprob: -2.7867543697357178
    6. ' permet' → logprob: -2.7867543697357178
    7. ' revient' → logprob: -2.9117543697357178
    8. 's' → logprob: -3.6617543697357178
    9. ' se' → logprob: -3.9117543697357178
    10. ' va' → logprob: -4.161754608154297

Token 105: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.394404798746109
    2. ' X' → logprob: -1.8944047689437866
    3. ' ' → logprob: -2.894404888153076
    4. ' combien' → logprob: -3.144404888153076
    5. ' nombre' → logprob: -4.019404888153076
    6. 'le' → logprob: -4.019404888153076
    7. 'X' → logprob: -4.394404888153076
    8. 'nombre' → logprob: -4.644404888153076
    9. ' la' → logprob: -5.144404888153076
    10. ' ' → logprob: -5.394404888153076

Token 106: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.09273482859134674
    2. 'nombre' → logprob: -2.5927348136901855
    3. ' quotient' → logprob: -5.7177348136901855
    4. ' résultat' → logprob: -6.0927348136901855
    5. 'quot' → logprob: -6.3427348136901855
    6. 'n' → logprob: -6.4677348136901855
    7. ' nom' → logprob: -6.7177348136901855
    8. ' nb' → logprob: -7.4677348136901855
    9. 'nb' → logprob: -7.8427348136901855
    10. ' ' → logprob: -7.8427348136901855

Token 107: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.11135216057300568
    2. 'de' → logprob: -3.1113522052764893
    3. ' d' → logprob: -3.8613522052764893
    4. '_' → logprob: -4.11135196685791
    5. ' ' → logprob: -4.36135196685791
    6. 'd' → logprob: -4.86135196685791
    7. '_de' → logprob: -6.36135196685791
    8. ' ' → logprob: -7.86135196685791
    9. '  ' → logprob: -9.48635196685791
    10. '\' → logprob: -9.67385196685791

Token 108: ' billets' (ID: 146301)
  Prédit: ' fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.16064581274986267
    2. 'fois' → logprob: -2.0356457233428955
    3. ' billets' → logprob: -5.285645961761475
    4. ' ' → logprob: -6.035645961761475
    5. 'bil' → logprob: -6.035645961761475
    6. '500' → logprob: -6.160645961761475
    7. ' bil' → logprob: -6.410645961761475
    8. 'b' → logprob: -6.410645961761475
    9. '5' → logprob: -7.660645961761475
    10. 'f' → logprob: -8.035645484924316

Token 109: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1318977326154709
    2. ' de' → logprob: -2.8818976879119873
    3. '500' → logprob: -3.1318976879119873
    4. 'de' → logprob: -4.631897926330566
    5. ' ' → logprob: -5.131897926330566
    6. '_de' → logprob: -5.256897926330566
    7. 'b' → logprob: -7.506897926330566
    8. 'd' → logprob: -7.631897926330566
    9. ' =' → logprob: -7.756897926330566
    10. '```' → logprob: -8.381897926330566

Token 110: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3152743875980377
    2. '500' → logprob: -1.3152743577957153
    3. '5' → logprob: -6.440274238586426
    4. '50' → logprob: -8.815274238586426
    5. ' cinq' → logprob: -8.940274238586426
    6. ' cinqu' → logprob: -9.940274238586426
    7. '  ' → logprob: -11.065274238586426
    8. 'bil' → logprob: -11.065274238586426
    9. ' billets' → logprob: -11.190274238586426
    10. ' five' → logprob: -12.252774238586426

Token 111: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.12853246927261353
    2. ' ' → logprob: -2.1285324096679688
    3. '5' → logprob: -6.628532409667969
    4. '50' → logprob: -8.378532409667969
    5. '  ' → logprob: -11.003532409667969
    6. ' cinq' → logprob: -11.878532409667969
    7. ' cinqu' → logprob: -11.878532409667969
    8. '```' → logprob: -12.691032409667969
    9. '100' → logprob: -12.753532409667969
    10. 'cin' → logprob: -13.316032409667969

Token 112: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5035766363143921
    2. ' ' → logprob: -2.0035767555236816
    3. '_' → logprob: -2.2535767555236816
    4. ' nécessaires' → logprob: -3.0035767555236816
    5. '500' → logprob: -3.2535767555236816
    6. '.' → logprob: -4.003576755523682
    7. ' =' → logprob: -5.128576755523682
    8. 'b' → logprob: -5.253576755523682
    9. ' billets' → logprob: -5.503576755523682
    10. ' :' → logprob: -5.878576755523682

Token 113: '#' (ID: 2)
  Prédit: 'bil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bil' → logprob: -0.969761848449707
    2. 'nombre' → logprob: -1.719761848449707
    3. 'nb' → logprob: -1.844761848449707
    4. 'n' → logprob: -2.469761848449707
    5. '
' → logprob: -3.094761848449707
    6. ' billets' → logprob: -3.469761848449707
    7. 'b' → logprob: -3.719761848449707
    8. 'N' → logprob: -4.094761848449707
    9. 'Y' → logprob: -4.344761848449707
    10. '
' → logprob: -4.594761848449707

Token 114: ' On' (ID: 2160)
  Prédit: 'bil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bil' → logprob: -0.2018849402666092
    2. 'nombre' → logprob: -2.2018849849700928
    3. 'nb' → logprob: -3.3268849849700928
    4. 'n' → logprob: -4.451884746551514
    5. 'b' → logprob: -4.826884746551514
    6. 'N' → logprob: -5.326884746551514
    7. 'Y' → logprob: -5.951884746551514
    8. 'nbr' → logprob: -6.201884746551514
    9. 'num' → logprob: -6.326884746551514
    10. ' billets' → logprob: -6.451884746551514

Token 115: ' stock' (ID: 6546)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.7632062435150146
    2. '500' → logprob: -1.8882062435150146
    3. 'bil' → logprob: -2.5132062435150146
    4. 'n' → logprob: -2.8882062435150146
    5. 'b' → logprob: -3.0132062435150146
    6. ' nombre' → logprob: -3.5132062435150146
    7. ' billets' → logprob: -3.6382062435150146
    8. '_' → logprob: -4.263206481933594
    9. 's' → logprob: -4.388206481933594
    10. ' n' → logprob: -4.513206481933594

Token 116: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.004576326813548803
    2. 'é' → logprob: -5.504576206207275
    3. ' e' → logprob: -8.129576683044434
    4. 'age' → logprob: -9.379576683044434
    5. 'er' → logprob: -9.754576683044434
    6. '	e' → logprob: -10.754576683044434
    7. 'ée' → logprob: -11.129576683044434
    8. 'a' → logprob: -11.379576683044434
    9. '#' → logprob: -13.504576683044434
    10. 'era' → logprob: -13.692076683044434

Token 117: ' ce' (ID: 2357)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4091809093952179
    2. '_' → logprob: -1.1591808795928955
    3. ' le' → logprob: -4.909181118011475
    4. ' dans' → logprob: -5.284181118011475
    5. ' _' → logprob: -5.534181118011475
    6. '_le' → logprob: -6.034181118011475
    7. ' nombre' → logprob: -7.659181118011475
    8. '_b' → logprob: -7.784181118011475
    9. 'nombre' → logprob: -8.034180641174316
    10. 'le' → logprob: -8.159180641174316

Token 118: ' résultat' (ID: 62556)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.16333554685115814
    2. ' résultat' → logprob: -2.9133355617523193
    3. 'nombre' → logprob: -3.2883355617523193
    4. '_' → logprob: -3.4133355617523193
    5. ' ' → logprob: -4.66333532333374
    6. 's' → logprob: -5.28833532333374
    7. ' nombres' → logprob: -6.41333532333374
    8. ' resultat' → logprob: -6.66333532333374
    9. 'e' → logprob: -6.91333532333374
    10. ' result' → logprob: -7.03833532333374

Token 119: ' dans' (ID: 2671)
  Prédit: ' billets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' billets' → logprob: -0.5506047606468201
    2. '_' → logprob: -1.9256048202514648
    3. ' dans' → logprob: -2.175604820251465
    4. ' ' → logprob: -3.175604820251465
    5. ' _' → logprob: -3.425604820251465
    6. ' billet' → logprob: -3.550604820251465
    7. ' bil' → logprob: -3.925604820251465
    8. 'bil' → logprob: -4.300604820251465
    9. ' nb' → logprob: -5.300604820251465
    10. '_b' → logprob: -5.425604820251465

Token 120: ' la' (ID: 557)
  Prédit: ' billets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' billets' → logprob: -1.3668389320373535
    2. ' la' → logprob: -1.6168389320373535
    3. ' nb' → logprob: -2.1168389320373535
    4. ' n' → logprob: -2.4918389320373535
    5. ' billet' → logprob: -2.4918389320373535
    6. ' ' → logprob: -2.9918389320373535
    7. ' nombre' → logprob: -3.1168389320373535
    8. ' l' → logprob: -3.1168389320373535
    9. ' ' → logprob: -3.9918389320373535
    10. ' le' → logprob: -3.9918389320373535

Token 121: ' variable' (ID: 11076)
  Prédit: ' variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.2899281084537506
    2. 'variable' → logprob: -1.4149280786514282
    3. ' nombre' → logprob: -5.664927959442139
    4. 'nombre' → logprob: -5.789927959442139
    5. '_' → logprob: -7.289927959442139
    6. ' ' → logprob: -7.914927959442139
    7. '_variable' → logprob: -8.539928436279297
    8. 'var' → logprob: -8.539928436279297
    9. ' ' → logprob: -9.164928436279297
    10. ' espace' → logprob: -9.664928436279297

Token 122: ' x' (ID: 1215)
  Prédit: 'bil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bil' → logprob: -0.8048655986785889
    2. 'nombre' → logprob: -1.3048655986785889
    3. 'nb' → logprob: -2.304865598678589
    4. 'n' → logprob: -2.554865598678589
    5. ' billets' → logprob: -2.929865598678589
    6. 'num' → logprob: -4.554865837097168
    7. ' nb' → logprob: -4.554865837097168
    8. 'b' → logprob: -5.304865837097168
    9. 'N' → logprob: -5.554865837097168
    10. 'nbr' → logprob: -5.804865837097168

Token 123: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7641527056694031
    2. '_b' → logprob: -0.8891527056694031
    3. '500' → logprob: -2.639152765274048
    4. ' =' → logprob: -3.889152765274048
    5. '_nb' → logprob: -4.889152526855469
    6. '_B' → logprob: -5.514152526855469
    7. '_nombre' → logprob: -5.639152526855469
    8. 'Bil' → logprob: -6.139152526855469
    9. '_x' → logprob: -6.514152526855469
    10. 'b' → logprob: -6.639152526855469

Token 124: 'x' (ID: 87)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9287273287773132
    2. ' x' → logprob: -0.9287273287773132
    3. 'x' → logprob: -1.678727388381958
    4. ' 
' → logprob: -4.428727149963379
    5. '_' → logprob: -6.178727149963379
    6. ' X' → logprob: -6.428727149963379
    7. 'b' → logprob: -6.553727149963379
    8. '  
' → logprob: -6.803727149963379
    9. 'X' → logprob: -7.053727149963379
    10. '500' → logprob: -7.178727149963379

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014616011641919613
    2. '=' → logprob: -4.264616012573242
    3. ' ' → logprob: -7.889616012573242
    4. '_' → logprob: -10.889616012573242
    5. 's' → logprob: -11.014616012573242
    6. '1' → logprob: -11.889616012573242
    7. ' ' → logprob: -11.889616012573242
    8. 'space' → logprob: -12.139616012573242
    9. ' =
' → logprob: -12.639616012573242
    10. ',' → logprob: -12.764616012573242

Token 126: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.02635347843170166
    2. 'X' → logprob: -3.651353359222412
    3. ' ' → logprob: -9.90135383605957
    4. ' ' → logprob: -13.40135383605957
    5. ' x' → logprob: -14.15135383605957
    6. '	X' → logprob: -14.77635383605957
    7. '  ' → logprob: -15.65135383605957
    8. 'x' → logprob: -15.77635383605957
    9. ' 
' → logprob: -17.40135383605957
    10. '   ' → logprob: -17.52635383605957

Token 127: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.001443568617105484
    2. '//' → logprob: -6.751443386077881
    3. ' ' → logprob: -8.376443862915039
    4. ' //
' → logprob: -10.751443862915039
    5. ' ' → logprob: -10.876443862915039
    6. '1' → logprob: -15.001443862915039
    7. ')' → logprob: -15.251443862915039
    8. ' #' → logprob: -15.376443862915039
    9. '```' → logprob: -15.438943862915039
    10. '"' → logprob: -15.563943862915039

Token 128: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0006410692585632205
    2. ' ' → logprob: -7.375640869140625
    3. '5' → logprob: -11.250640869140625
    4. '50' → logprob: -13.625640869140625
    5. ' ' → logprob: -16.250640869140625
    6. '```' → logprob: -17.000640869140625
    7. '501' → logprob: -17.000640869140625
    8. '  ' → logprob: -17.125640869140625
    9. '   ' → logprob: -17.875640869140625
    10. '`' → logprob: -18.000640869140625

Token 129: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '5' → logprob: -16.125001907348633
    4. '50' → logprob: -17.125001907348633
    5. '```' → logprob: -18.500001907348633
    6. '   ' → logprob: -19.250001907348633
    7. '  ' → logprob: -19.500001907348633
    8. ' ' → logprob: -19.750001907348633
    9. '501' → logprob: -20.000001907348633
    10. '`' → logprob: -20.062501907348633

Token 130: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03161466121673584
    2. '#' → logprob: -4.656614780426025
    3. '
' → logprob: -5.156614780426025
    4. 'print' → logprob: -5.781614780426025
    5. ' ' → logprob: -5.781614780426025
    6. '

' → logprob: -6.031614780426025
    7. ' 
' → logprob: -6.156614780426025
    8. '' → logprob: -6.531614780426025
    9. '<|end|>' → logprob: -6.781614780426025
    10. 'x' → logprob: -7.031614780426025

Token 131: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6152235865592957
    2. '
' → logprob: -1.1152236461639404
    3. ' 
' → logprob: -3.6152236461639404
    4. '' → logprob: -3.6152236461639404
    5. '\n' → logprob: -3.8652236461639404
    6. 'x' → logprob: -3.8652236461639404
    7. ' ' → logprob: -4.365223407745361
    8. '
' → logprob: -5.615223407745361
    9. 'print' → logprob: -5.740223407745361
    10. '  
' → logprob: -5.865223407745361

Token 132: ' On' (ID: 2160)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2897266447544098
    2. 'r' → logprob: -2.414726734161377
    3. '#' → logprob: -3.289726734161377
    4. 'print' → logprob: -3.539726734161377
    5. 'x' → logprob: -4.164726734161377
    6. 'n' → logprob: -4.289726734161377
    7. ' y' → logprob: -4.289726734161377
    8. 'reste' → logprob: -4.539726734161377
    9. 'nombre' → logprob: -5.164726734161377
    10. 'rest' → logprob: -5.164726734161377

Token 133: ' cherche' (ID: 52345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1058309078216553
    2. '#' → logprob: -1.7308309078216553
    3. ' reste' → logprob: -1.7308309078216553
    4. ' print' → logprob: -2.1058309078216553
    5. ' ' → logprob: -3.1058309078216553
    6. ' #' → logprob: -3.8558309078216553
    7. 'r' → logprob: -3.9808309078216553
    8. '_' → logprob: -4.105831146240234
    9. 'reste' → logprob: -4.230831146240234
    10. 'n' → logprob: -4.355831146240234

Token 134: ' maintenant' (ID: 35735)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04368957504630089
    2. ' l' → logprob: -4.793689727783203
    3. ' le' → logprob: -5.293689727783203
    4. 'l' → logprob: -5.543689727783203
    5. ' la' → logprob: -5.543689727783203
    6. ' à' → logprob: -5.668689727783203
    7. '_' → logprob: -5.793689727783203
    8. '#' → logprob: -5.918689727783203
    9. 'le' → logprob: -6.543689727783203
    10. ' a' → logprob: -6.793689727783203

Token 135: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21518246829509735
    2. ' à' → logprob: -2.0901825428009033
    3. 'l' → logprob: -4.465182304382324
    4. ' le' → logprob: -4.590182304382324
    5. ' l' → logprob: -4.715182304382324
    6. ' a' → logprob: -5.215182304382324
    7. ' la' → logprob: -5.340182304382324
    8. '_' → logprob: -5.465182304382324
    9. 'à' → logprob: -5.590182304382324
    10. 'a' → logprob: -5.840182304382324

Token 136: ' reste' (ID: 26769)
  Prédit: ' reste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.0399550125002861
    2. 'reste' → logprob: -4.664955139160156
    3. ' montant' → logprob: -5.039955139160156
    4. 'r' → logprob: -5.164955139160156
    5. ' r' → logprob: -5.664955139160156
    6. ' restant' → logprob: -6.039955139160156
    7. ' nombre' → logprob: -6.164955139160156
    8. ' rest' → logprob: -6.414955139160156
    9. ' #' → logprob: -6.539955139160156
    10. 's' → logprob: -6.664955139160156

Token 137: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24519795179367065
    2. '_' → logprob: -1.9951980113983154
    3. ' =' → logprob: -3.8701980113983154
    4. ' X' → logprob: -3.9951980113983154
    5. 'X' → logprob: -4.245197772979736
    6. 'r' → logprob: -5.120197772979736
    7. '=' → logprob: -5.495197772979736
    8. ' de' → logprob: -5.745197772979736
    9. 'x' → logprob: -5.870197772979736
    10. ',' → logprob: -5.870197772979736

Token 138: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7750949859619141
    2. ' X' → logprob: -0.9000949859619141
    3. ' l' → logprob: -3.150094985961914
    4. ' ' → logprob: -3.400094985961914
    5. 'X' → logprob: -3.775094985961914
    6. 'l' → logprob: -4.150094985961914
    7. 's' → logprob: -4.275094985961914
    8. 'a' → logprob: -6.650094985961914
    9. 'la' → logprob: -6.900094985961914
    10. 'div' → logprob: -8.275094985961914

Token 139: ' division' (ID: 21629)
  Prédit: ' division'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' division' → logprob: -0.269919753074646
    2. 'division' → logprob: -2.2699198722839355
    3. 'div' → logprob: -3.1449198722839355
    4. ' X' → logprob: -3.5199198722839355
    5. 's' → logprob: -3.6449198722839355
    6. ' div' → logprob: -4.2699198722839355
    7. ' somme' → logprob: -5.0199198722839355
    8. 'X' → logprob: -5.3949198722839355
    9. ' ' → logprob: -5.8949198722839355
    10. ' monnaie' → logprob: -6.5199198722839355

Token 140: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7600103616714478
    2. 'X' → logprob: -1.5100103616714478
    3. ' X' → logprob: -1.8850103616714478
    4. '_' → logprob: -3.010010242462158
    5. ' %' → logprob: -3.510010242462158
    6. 'x' → logprob: -4.135010242462158
    7. '%' → logprob: -4.385010242462158
    8. ',' → logprob: -4.510010242462158
    9. ' ' → logprob: -5.135010242462158
    10. ' (' → logprob: -5.260010242462158

Token 141: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.18037189543247223
    2. 'X' → logprob: -1.805371880531311
    3. ' ' → logprob: -8.18037223815918
    4. ' la' → logprob: -8.68037223815918
    5. ' l' → logprob: -9.55537223815918
    6. 'l' → logprob: -10.18037223815918
    7. ' ' → logprob: -10.43037223815918
    8. 's' → logprob: -11.05537223815918
    9. 'x' → logprob: -12.18037223815918
    10. 'u' → logprob: -12.80537223815918

Token 142: ' par' (ID: 686)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11411640048027039
    2. ' %' → logprob: -2.9891164302825928
    3. '%' → logprob: -3.2391164302825928
    4. ' X' → logprob: -4.489116191864014
    5. ' ' → logprob: -6.114116191864014
    6. 'X' → logprob: -6.114116191864014
    7. '  ' → logprob: -8.114116668701172
    8. 's' → logprob: -8.239116668701172
    9. ' ,' → logprob: -8.614116668701172
    10. ',' → logprob: -8.614116668701172

Token 143: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06255574524402618
    2. '500' → logprob: -2.8125557899475098
    3. ' ' → logprob: -7.81255578994751
    4. '5' → logprob: -8.812555313110352
    5. '  ' → logprob: -12.375055313110352
    6. '50' → logprob: -12.625055313110352
    7. 'x' → logprob: -12.875055313110352
    8. ' cinq' → logprob: -12.937555313110352
    9. '450' → logprob: -13.500055313110352
    10. '400' → logprob: -13.562555313110352

Token 144: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0003122247871942818
    2. ' ' → logprob: -8.125311851501465
    3. '5' → logprob: -11.625311851501465
    4. '50' → logprob: -12.000311851501465
    5. ' ' → logprob: -15.375311851501465
    6. 'x' → logprob: -16.12531280517578
    7. '  ' → logprob: -16.18781280517578
    8. '501' → logprob: -16.31281280517578
    9. '499' → logprob: -16.50031280517578
    10. '```' → logprob: -16.68781280517578

Token 145: ',
' (ID: 412)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9110392332077026
    2. 'r' → logprob: -1.6610392332077026
    3. ',' → logprob: -2.286039352416992
    4. ' ,' → logprob: -2.536039352416992
    5. '.' → logprob: -3.036039352416992
    6. ' r' → logprob: -3.161039352416992
    7. ' reste' → logprob: -3.661039352416992
    8. 'rest' → logprob: -4.036039352416992
    9. 'y' → logprob: -4.286039352416992
    10. ' remainder' → logprob: -4.411039352416992

Token 146: '#' (ID: 2)
  Prédit: ' which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' which' → logprob: -0.8455641269683838
    2. ' ' → logprob: -2.220564126968384
    3. ' i' → logprob: -2.220564126968384
    4. ' qui' → logprob: -2.470564126968384
    5. ' X' → logprob: -2.845564126968384
    6. 'X' → logprob: -3.595564126968384
    7. ' x' → logprob: -3.720564126968384
    8. ' r' → logprob: -3.970564126968384
    9. ' y' → logprob: -4.095563888549805
    10. 'x' → logprob: -4.470563888549805

Token 147: ' c' (ID: 274)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -1.0070912837982178
    2. ' y' → logprob: -1.2570912837982178
    3. 'r' → logprob: -2.2570912837982178
    4. 'y' → logprob: -2.7570912837982178
    5. ' reste' → logprob: -3.1320912837982178
    6. ' rest' → logprob: -3.6320912837982178
    7. 'reste' → logprob: -4.007091522216797
    8. ' ' → logprob: -4.257091522216797
    9. ' espace' → logprob: -4.257091522216797
    10. 'rest' → logprob: -4.882091522216797

Token 148: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.36663591861724854
    2. ''est' → logprob: -2.116635799407959
    3. 'es' → logprob: -2.741635799407959
    4. 'est' → logprob: -3.491635799407959
    5. '#' → logprob: -3.866635799407959
    6. 'ela' → logprob: -3.991635799407959
    7. 'et' → logprob: -4.616635799407959
    8. ' e' → logprob: -4.741635799407959
    9. 'el' → logprob: -4.866635799407959
    10. ''' → logprob: -5.366635799407959

Token 149: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.19317005574703217
    2. ' le' → logprob: -2.9431700706481934
    3. ' à' → logprob: -3.4431700706481934
    4. ' ce' → logprob: -3.8181700706481934
    5. 'à' → logprob: -3.8181700706481934
    6. 'le' → logprob: -4.068170070648193
    7. ' la' → logprob: -4.693170070648193
    8. '-' → logprob: -4.943170070648193
    9. ' ' → logprob: -5.693170070648193
    10. 'la' → logprob: -6.693170070648193

Token 150: '-dire' (ID: 76064)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.28909099102020264
    2. 'l' → logprob: -2.539091110229492
    3. 'à' → logprob: -3.039091110229492
    4. 'la' → logprob: -3.664091110229492
    5. 'r' → logprob: -3.664091110229492
    6. '-dire' → logprob: -3.789091110229492
    7. '-' → logprob: -4.664091110229492
    8. 'a' → logprob: -5.539091110229492
    9. 'x' → logprob: -5.539091110229492
    10. 'ld' → logprob: -5.664091110229492

Token 151: ' ce' (ID: 2357)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.32684558629989624
    2. 'X' → logprob: -2.451845645904541
    3. ' ' → logprob: -2.826845645904541
    4. ' l' → logprob: -2.951845645904541
    5. ' la' → logprob: -3.326845645904541
    6. ' le' → logprob: -4.201845645904541
    7. 'l' → logprob: -4.576845645904541
    8. ' x' → logprob: -5.701845645904541
    9. 'le' → logprob: -5.826845645904541
    10. ' ' → logprob: -5.951845645904541

Token 152: ' qui' (ID: 2780)
  Prédit: ' qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qu' → logprob: -0.9956738948822021
    2. ' qui' → logprob: -0.9956738948822021
    3. ' que' → logprob: -1.8706738948822021
    4. 'qui' → logprob: -2.995673894882202
    5. 'l' → logprob: -4.120674133300781
    6. ' ' → logprob: -4.495674133300781
    7. '_' → logprob: -4.995674133300781
    8. 'que' → logprob: -5.370674133300781
    9. ' q' → logprob: -5.620674133300781
    10. 'qu' → logprob: -5.620674133300781

Token 153: ' reste' (ID: 26769)
  Prédit: ' reste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.16202883422374725
    2. '_' → logprob: -2.0370287895202637
    3. ' ' → logprob: -4.412028789520264
    4. ' X' → logprob: -6.537028789520264
    5. 'reste' → logprob: -6.537028789520264
    6. ' restera' → logprob: -7.287028789520264
    7. ' dépasse' → logprob: -7.787028789520264
    8. ' ne' → logprob: -7.912028789520264
    9. ' _' → logprob: -7.912028789520264
    10. ' espace' → logprob: -8.162029266357422

Token 154: ' après' (ID: 16460)
  Prédit: ' après'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' après' → logprob: -0.3036346137523651
    2. ' à' → logprob: -2.4286346435546875
    3. ' de' → logprob: -3.0536346435546875
    4. ' ' → logprob: -3.0536346435546875
    5. ' =' → logprob: -4.3036346435546875
    6. ' dans' → logprob: -4.4286346435546875
    7. ' apres' → logprob: -4.5536346435546875
    8. 'ap' → logprob: -4.9286346435546875
    9. ' X' → logprob: -4.9286346435546875
    10. 'X' → logprob: -4.9286346435546875

Token 155: ' avoir' (ID: 16595)
  Prédit: ' avoir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avoir' → logprob: -0.21695774793624878
    2. ' la' → logprob: -2.5919578075408936
    3. ' le' → logprob: -3.5919578075408936
    4. ' l' → logprob: -3.8419578075408936
    5. ' X' → logprob: -4.3419575691223145
    6. 'avoir' → logprob: -4.4669575691223145
    7. ' x' → logprob: -4.5919575691223145
    8. 'l' → logprob: -4.8419575691223145
    9. 'la' → logprob: -5.0919575691223145
    10. 'x' → logprob: -5.2169575691223145

Token 156: ' retir' (ID: 35638)
  Prédit: ' retir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retir' → logprob: -0.4240606725215912
    2. ' en' → logprob: -1.2990607023239136
    3. ' sou' → logprob: -4.174060821533203
    4. ' pris' → logprob: -4.299060821533203
    5. ' utilisé' → logprob: -4.674060821533203
    6. 'en' → logprob: -5.299060821533203
    7. ' effectué' → logprob: -5.424060821533203
    8. ' retirer' → logprob: -5.549060821533203
    9. 'sou' → logprob: -6.174060821533203
    10. ' extrait' → logprob: -6.424060821533203

Token 157: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0013406005455181003
    2. 'er' → logprob: -6.626340389251709
    3. 'e' → logprob: -11.876340866088867
    4. '#' → logprob: -13.501340866088867
    5. 'É' → logprob: -13.501340866088867
    6. 'né' → logprob: -14.126340866088867
    7. 'ré' → logprob: -14.251340866088867
    8. ' é' → logprob: -14.626340866088867
    9. '_' → logprob: -14.751340866088867
    10. 'r' → logprob: -15.126340866088867

Token 158: ' tout' (ID: 5501)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04798772931098938
    2. ' ' → logprob: -3.797987699508667
    3. 'x' → logprob: -4.172987937927246
    4. ' les' → logprob: -5.047987937927246
    5. ' (' → logprob: -6.422987937927246
    6. ' le' → logprob: -8.672987937927246
    7. ' ' → logprob: -8.797987937927246
    8. '500' → logprob: -9.172987937927246
    9. ' la' → logprob: -9.422987937927246
    10. '(x' → logprob: -9.735487937927246

Token 159: ' ce' (ID: 2357)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9495155215263367
    2. ' ' → logprob: -1.1995155811309814
    3. 'es' → logprob: -1.9495155811309814
    4. ' ce' → logprob: -3.1995155811309814
    5. 'e' → logprob: -3.3245155811309814
    6. ' les' → logprob: -3.8245155811309814
    7. 'x' → logprob: -4.199515342712402
    8. ' le' → logprob: -4.449515342712402
    9. '#' → logprob: -5.199515342712402
    10. ' x' → logprob: -5.199515342712402

Token 160: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -1.1055151224136353
    2. 's' → logprob: -1.2305151224136353
    3. 'qui' → logprob: -1.3555151224136353
    4. 'ce' → logprob: -3.1055150032043457
    5. ' ce' → logprob: -3.6055150032043457
    6. 'x' → logprob: -4.105515003204346
    7. ' que' → logprob: -4.730515003204346
    8. 'es' → logprob: -5.105515003204346
    9. ' ' → logprob: -5.230515003204346
    10. 'e' → logprob: -5.855515003204346

Token 161: ' pouvait' (ID: 77416)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.7431718111038208
    2. 's' → logprob: -2.2431716918945312
    3. ' a' → logprob: -2.6181716918945312
    4. 'a' → logprob: -2.7431716918945312
    5. 'pe' → logprob: -2.8681716918945312
    6. ' est' → logprob: -3.1181716918945312
    7. ' tient' → logprob: -3.1181716918945312
    8. 'ent' → logprob: -3.6181716918945312
    9. ' rent' → logprob: -3.7431716918945312
    10. ' ' → logprob: -3.9931716918945312

Token 162: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.9846659898757935
    2. 'aller' → logprob: -1.8596659898757935
    3. ' rentrer' → logprob: -1.9846659898757935
    4. 'être' → logprob: -2.234665870666504
    5. ' aller' → logprob: -2.609665870666504
    6. ' conten' → logprob: -3.859665870666504
    7. ' tenir' → logprob: -3.984665870666504
    8. ' entrer' → logprob: -4.109665870666504
    9. ' ' → logprob: -4.234665870666504
    10. ' ' → logprob: -4.484665870666504

Token 163: ' couvert' (ID: 140806)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.16599953174591064
    2. 'com' → logprob: -3.165999412536621
    3. ' div' → logprob: -3.290999412536621
    4. ' retir' → logprob: -3.665999412536621
    5. ' payé' → logprob: -3.665999412536621
    6. 'pay' → logprob: -5.165999412536621
    7. 'd' → logprob: -6.040999412536621
    8. 'multip' → logprob: -6.165999412536621
    9. ' pris' → logprob: -6.290999412536621
    10. 'sou' → logprob: -7.040999412536621

Token 164: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.0215451717376709
    2. ' ' → logprob: -4.52154541015625
    3. 'par' → logprob: -4.64654541015625
    4. ' avec' → logprob: -7.64654541015625
    5. ' de' → logprob: -9.27154541015625
    6. ' by' → logprob: -9.89654541015625
    7. ' des' → logprob: -10.27154541015625
    8. ' ' → logprob: -10.52154541015625
    9. '#' → logprob: -10.64654541015625
    10. ' x' → logprob: -11.14654541015625

Token 165: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14359039068222046
    2. ' les' → logprob: -3.1435904502868652
    3. '500' → logprob: -3.1435904502868652
    4. ' des' → logprob: -3.8935904502868652
    5. ' x' → logprob: -4.768590450286865
    6. 'x' → logprob: -5.393590450286865
    7. ' la' → logprob: -5.518590450286865
    8. ' ' → logprob: -6.018590450286865
    9. 'les' → logprob: -6.143590450286865
    10. 'des' → logprob: -6.268590450286865

Token 166: ' billets' (ID: 146301)
  Prédit: 'bil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bil' → logprob: -0.03494780883193016
    2. ' billets' → logprob: -3.6599478721618652
    3. ' bil' → logprob: -5.284947872161865
    4. 'b' → logprob: -5.909947872161865
    5. '500' → logprob: -7.409947872161865
    6. ' ' → logprob: -9.409947395324707
    7. ' billet' → logprob: -9.909947395324707
    8. 'bi' → logprob: -10.284947395324707
    9. 'x' → logprob: -11.159947395324707
    10. '	b' → logprob: -12.034947395324707

Token 167: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.10225677490234375
    2. ' ' → logprob: -3.2272567749023438
    3. 'de' → logprob: -3.2272567749023438
    4. '500' → logprob: -4.727256774902344
    5. ' X' → logprob: -5.852256774902344
    6. 'X' → logprob: -6.477256774902344
    7. 'd' → logprob: -7.352256774902344
    8. ' x' → logprob: -7.352256774902344
    9. ' rest' → logprob: -7.352256774902344
    10. 'x' → logprob: -7.477256774902344

Token 168: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31360945105552673
    2. '500' → logprob: -1.3136094808578491
    3. '5' → logprob: -8.43860912322998
    4. ' ' → logprob: -10.06360912322998
    5. '50' → logprob: -10.06360912322998
    6. '  ' → logprob: -12.12610912322998
    7. ' cinq' → logprob: -12.25110912322998
    8. ' X' → logprob: -12.68860912322998
    9. 'bil' → logprob: -12.93860912322998
    10. '```' → logprob: -13.06360912322998

Token 169: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.029849069193005562
    2. ' ' → logprob: -3.529849052429199
    3. '5' → logprob: -9.9048490524292
    4. '50' → logprob: -10.4048490524292
    5. '  ' → logprob: -12.5923490524292
    6. '```' → logprob: -12.5923490524292
    7. ' ' → logprob: -12.9048490524292
    8. '100' → logprob: -14.4048490524292
    9. '`' → logprob: -14.5298490524292
    10. ' cinq' → logprob: -14.6548490524292

Token 170: '.
' (ID: 558)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.376745581626892
    2. ' reste' → logprob: -1.626745581626892
    3. 'reste' → logprob: -1.751745581626892
    4. '.' → logprob: -2.2517457008361816
    5. ' ' → logprob: -2.6267457008361816
    6. 'r' → logprob: -3.1267457008361816
    7. ' rest' → logprob: -3.1267457008361816
    8. ' remainder' → logprob: -3.5017457008361816
    9. ' restante' → logprob: -4.376745700836182
    10. 're' → logprob: -4.501745700836182

Token 171: '#' (ID: 2)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2892965078353882
    2. 'reste' → logprob: -1.4142965078353882
    3. 're' → logprob: -2.4142966270446777
    4. ' reste' → logprob: -2.5392966270446777
    5. ' r' → logprob: -2.6642966270446777
    6. 'rest' → logprob: -2.6642966270446777
    7. 'R' → logprob: -3.2892966270446777
    8. ' y' → logprob: -3.6642966270446777
    9. 'y' → logprob: -3.6642966270446777
    10. 'x' → logprob: -3.7892966270446777

Token 172: ' L' (ID: 451)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.7324517369270325
    2. 'r' → logprob: -1.3574516773223877
    3. 're' → logprob: -2.3574516773223877
    4. ' reste' → logprob: -2.8574516773223877
    5. 'rest' → logprob: -2.9824516773223877
    6. ' r' → logprob: -3.7324516773223877
    7. 'R' → logprob: -4.357451915740967
    8. 'y' → logprob: -5.357451915740967
    9. ' remainder' → logprob: -5.482451915740967
    10. ' R' → logprob: -5.857451915740967

Token 173: ''op' (ID: 70747)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2749861180782318
    2. ' reste' → logprob: -2.1499860286712646
    3. '_' → logprob: -3.0249860286712646
    4. 'est' → logprob: -4.024986267089844
    5. 'reste' → logprob: -4.524986267089844
    6. '#' → logprob: -4.649986267089844
    7. 'r' → logprob: -4.899986267089844
    8. ' e' → logprob: -5.024986267089844
    9. 're' → logprob: -5.024986267089844
    10. ' ' → logprob: -5.524986267089844

Token 174: 'érateur' (ID: 108528)
  Prédit: 'érateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érateur' → logprob: -0.577839732170105
    2. 'er' → logprob: -2.0778398513793945
    3. 'ur' → logprob: -2.7028398513793945
    4. 'r' → logprob: -2.8278398513793945
    5. 'érant' → logprob: -3.2028398513793945
    6. 'ér' → logprob: -3.8278398513793945
    7. 'érieur' → logprob: -3.9528398513793945
    8. 'é' → logprob: -4.7028398513793945
    9. 'ération' → logprob: -4.7028398513793945
    10. 'rés' → logprob: -4.9528398513793945

Token 175: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.044187191873788834
    2. '%' → logprob: -3.169187307357788
    3. ' ' → logprob: -6.794187068939209
    4. ' %=' → logprob: -10.294187545776367
    5. ' ' → logprob: -12.044187545776367
    6. '_' → logprob: -12.044187545776367
    7. 'space' → logprob: -12.544187545776367
    8. ',' → logprob: -13.044187545776367
    9. ' =' → logprob: -13.544187545776367
    10. '  ' → logprob: -13.919187545776367

Token 176: ' retourne' (ID: 178818)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08354747295379639
    2. ' permet' → logprob: -3.083547592163086
    3. ' donne' → logprob: -5.083547592163086
    4. ' calc' → logprob: -5.083547592163086
    5. ' retourne' → logprob: -5.708547592163086
    6. ' est' → logprob: -5.958547592163086
    7. ' effect' → logprob: -6.083547592163086
    8. ' calcul' → logprob: -6.208547592163086
    9. ' calculate' → logprob: -6.708547592163086
    10. ' (' → logprob: -7.208547592163086

Token 177: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.4765329957008362
    2. ' ' → logprob: -1.9765329360961914
    3. ' l' → logprob: -2.1015329360961914
    4. 'le' → logprob: -2.9765329360961914
    5. ' la' → logprob: -4.101532936096191
    6. ' X' → logprob: -4.101532936096191
    7. 'l' → logprob: -4.351532936096191
    8. ' ' → logprob: -5.101532936096191
    9. 'X' → logprob: -5.351532936096191
    10. '_le' → logprob: -6.976532936096191

Token 178: ' reste' (ID: 26769)
  Prédit: ' reste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.01560246292501688
    2. 'reste' → logprob: -4.5156025886535645
    3. ' remainder' → logprob: -6.2656025886535645
    4. 're' → logprob: -7.0156025886535645
    5. ' ' → logprob: -7.6406025886535645
    6. 'rest' → logprob: -7.8906025886535645
    7. 'mod' → logprob: -8.265602111816406
    8. 'X' → logprob: -9.265602111816406
    9. ' X' → logprob: -9.265602111816406
    10. ' restant' → logprob: -9.640602111816406

Token 179: '.
' (ID: 558)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.04325266182422638
    2. 'de' → logprob: -3.41825270652771
    3. 'X' → logprob: -5.918252468109131
    4. 'x' → logprob: -6.168252468109131
    5. ' X' → logprob: -6.293252468109131
    6. ' ' → logprob: -6.418252468109131
    7. ' x' → logprob: -7.668252468109131
    8. '_' → logprob: -8.293252944946289
    9. '500' → logprob: -9.043252944946289
    10. ' =' → logprob: -9.543252944946289

Token 180: '#' (ID: 2)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.47994571924209595
    2. 'x' → logprob: -1.7299456596374512
    3. 'reste' → logprob: -2.354945659637451
    4. 're' → logprob: -3.854945659637451
    5. 'rest' → logprob: -3.854945659637451
    6. 'y' → logprob: -3.979945659637451
    7. ' r' → logprob: -4.229945659637451
    8. ' reste' → logprob: -4.729945659637451
    9. 'R' → logprob: -4.854945659637451
    10. ' x' → logprob: -5.229945659637451

Token 181: ' Le' (ID: 2018)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.9246402978897095
    2. 'r' → logprob: -1.2996402978897095
    3. 're' → logprob: -1.6746402978897095
    4. 'rest' → logprob: -2.42464017868042
    5. 'y' → logprob: -4.17464017868042
    6. ' reste' → logprob: -4.42464017868042
    7. 'x' → logprob: -4.54964017868042
    8. ' r' → logprob: -5.17464017868042
    9. 'remaining' → logprob: -6.04964017868042
    10. ' remainder' → logprob: -6.17464017868042

Token 182: ' résultat' (ID: 62556)
  Prédit: ' reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.246125265955925
    2. 'reste' → logprob: -2.4961252212524414
    3. 'r' → logprob: -2.8711252212524414
    4. ' r' → logprob: -3.1211252212524414
    5. 're' → logprob: -4.496125221252441
    6. ' y' → logprob: -5.246125221252441
    7. 'rest' → logprob: -5.496125221252441
    8. ' ' → logprob: -5.996125221252441
    9. 'y' → logprob: -6.121125221252441
    10. ' rest' → logprob: -6.371125221252441

Token 183: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1964583396911621
    2. '=' → logprob: -2.446458339691162
    3. ' ' → logprob: -2.821458339691162
    4. '_' → logprob: -4.071458339691162
    5. ' est' → logprob: -5.571458339691162
    6. ' reste' → logprob: -5.946458339691162
    7. 'est' → logprob: -6.196458339691162
    8. 's' → logprob: -6.321458339691162
    9. 'r' → logprob: -6.946458339691162
    10. 'x' → logprob: -6.946458339691162

Token 184: ' stock' (ID: 6546)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.04171532392501831
    2. 'X' → logprob: -3.291715383529663
    3. ' ' → logprob: -5.666715145111084
    4. ' ' → logprob: -9.541715621948242
    5. ' x' → logprob: -9.916715621948242
    6. 'x' → logprob: -9.916715621948242
    7. '  ' → logprob: -11.541715621948242
    8. '	X' → logprob: -11.916715621948242
    9. ' ' → logprob: -12.666715621948242
    10. 's' → logprob: -12.979215621948242

Token 185: 'é' (ID: 377)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05140548571944237
    2. 'é' → logprob: -3.176405429840088
    3. '=' → logprob: -4.926405429840088
    4. ' =' → logprob: -7.801405429840088
    5. ' ' → logprob: -8.301405906677246
    6. 'u' → logprob: -9.426405906677246
    7. 'e' → logprob: -9.551405906677246
    8. ' dans' → logprob: -9.676405906677246
    9. '_=' → logprob: -9.926405906677246
    10. '_d' → logprob: -10.176405906677246

Token 186: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.0109105808660388
    2. 'dans' → logprob: -4.760910511016846
    3. ' ' → logprob: -7.135910511016846
    4. '_' → logprob: -7.510910511016846
    5. ' x' → logprob: -7.635910511016846
    6. 'x' → logprob: -9.635910987854004
    7. ' _' → logprob: -10.135910987854004
    8. ' d' → logprob: -10.385910987854004
    9. '_d' → logprob: -10.510910987854004
    10. ' a' → logprob: -10.510910987854004

Token 187: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.602041482925415
    2. 'r' → logprob: -1.602041482925415
    3. ' x' → logprob: -2.977041482925415
    4. 'X' → logprob: -3.102041482925415
    5. 'reste' → logprob: -3.227041482925415
    6. 're' → logprob: -3.477041482925415
    7. 'rest' → logprob: -3.727041482925415
    8. ' r' → logprob: -3.727041482925415
    9. ' X' → logprob: -4.102041244506836
    10. ' reste' → logprob: -5.602041244506836

Token 188: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.28353020548820496
    2. 'x' → logprob: -1.9085302352905273
    3. ' variable' → logprob: -2.6585302352905273
    4. 'r' → logprob: -4.283530235290527
    5. 'reste' → logprob: -5.408530235290527
    6. 'rest' → logprob: -5.533530235290527
    7. 're' → logprob: -6.783530235290527
    8. 'var' → logprob: -6.908530235290527
    9. ' reste' → logprob: -7.158530235290527
    10. ' x' → logprob: -7.533530235290527

Token 189: ' res' (ID: 694)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.19531631469726562
    2. 'reste' → logprob: -2.8203163146972656
    3. 're' → logprob: -3.4453163146972656
    4. ' r' → logprob: -3.8203163146972656
    5. 'rest' → logprob: -4.195316314697266
    6. 'x' → logprob: -4.320316314697266
    7. 'R' → logprob: -4.570316314697266
    8. 'X' → logprob: -4.820316314697266
    9. 'y' → logprob: -5.070316314697266
    10. ' reste' → logprob: -5.695316314697266

Token 190: '.
' (ID: 558)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00021891399228479713
    2. 'ta' → logprob: -10.375219345092773
    3. ' =' → logprob: -10.500219345092773
    4. 'te' → logprob: -10.875219345092773
    5. 'e' → logprob: -11.000219345092773
    6. '```' → logprob: -11.125219345092773
    7. 'res' → logprob: -11.250219345092773
    8. '=' → logprob: -11.250219345092773
    9. 'idue' → logprob: -11.250219345092773
    10. 'idual' → logprob: -12.125219345092773

Token 191: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -2.935296834039036e-06
    2. 'rest' → logprob: -13.75000286102295
    3. ' res' → logprob: -14.00000286102295
    4. '```' → logprob: -14.87500286102295
    5. '
' → logprob: -15.12500286102295
    6. 're' → logprob: -16.125003814697266
    7. 'ress' → logprob: -16.875003814697266
    8. '	res' → logprob: -17.250003814697266
    9. 'r' → logprob: -17.500003814697266
    10. 'resi' → logprob: -17.625003814697266

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326082944869995
    2. '=' → logprob: -0.7576082944869995
    3. ',' → logprob: -12.632608413696289
    4. ' ' → logprob: -13.007608413696289
    5. 's' → logprob: -13.757608413696289
    6. '_' → logprob: -13.882608413696289
    7. '.' → logprob: -14.882608413696289
    8. ')' → logprob: -15.757608413696289
    9. ' ' → logprob: -15.757608413696289
    10. ' =
' → logprob: -16.38260841369629

Token 193: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.12692862749099731
    2. ' X' → logprob: -2.1269285678863525
    3. ' ' → logprob: -14.751928329467773
    4. '	X' → logprob: -16.001928329467773
    5. ' ' → logprob: -17.001928329467773
    6. 'x' → logprob: -17.001928329467773
    7. '   ' → logprob: -18.251928329467773
    8. '  ' → logprob: -19.251928329467773
    9. '_X' → logprob: -20.251928329467773
    10. ' x' → logprob: -20.251928329467773

Token 194: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06196824833750725
    2. '%' → logprob: -2.8119683265686035
    3. ' ' → logprob: -14.936967849731445
    4. ' ' → logprob: -15.436967849731445
    5. ' %
' → logprob: -16.811967849731445
    6. '%x' → logprob: -18.436967849731445
    7. ' %=' → logprob: -18.936967849731445
    8. ' %

' → logprob: -19.686967849731445
    9. '%s' → logprob: -19.936967849731445
    10. '٪' → logprob: -19.936967849731445

Token 195: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.2519306540489197
    2. ' ' → logprob: -1.5019307136535645
    3. ' ' → logprob: -14.376930236816406
    4. '```' → logprob: -15.251930236816406
    5. '  ' → logprob: -15.876930236816406
    6. '`' → logprob: -16.001930236816406
    7. '50' → logprob: -16.376930236816406
    8. '5' → logprob: -16.376930236816406
    9. '501' → logprob: -16.626930236816406
    10. '499' → logprob: -16.626930236816406

Token 196: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '5' → logprob: -17.375
    4. '50' → logprob: -18.375
    5. '```' → logprob: -19.0
    6. '501' → logprob: -19.875
    7. '`' → logprob: -20.125
    8. '  ' → logprob: -20.875
    9. '   ' → logprob: -20.875
    10. '499' → logprob: -22.0625

Token 197: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3085409998893738
    2. 'print' → logprob: -2.3085410594940186
    3. '#' → logprob: -2.5585410594940186
    4. '
' → logprob: -3.5585410594940186
    5. 'n' → logprob: -4.0585408210754395
    6. 'x' → logprob: -4.3085408210754395
    7. '\n' → logprob: -4.9335408210754395
    8. ' 
' → logprob: -5.3085408210754395
    9. '500' → logprob: -5.4335408210754395
    10. ' if' → logprob: -5.8085408210754395

Token 199: ' Maintenant' (ID: 163349)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5753263831138611
    2. 'bil' → logprob: -1.4503264427185059
    3. 'y' → logprob: -2.700326442718506
    4. 'print' → logprob: -2.950326442718506
    5. '#' → logprob: -3.450326442718506
    6. 'x' → logprob: -4.075326442718506
    7. 'n' → logprob: -4.325326442718506
    8. '500' → logprob: -4.825326442718506
    9. 'nombre' → logprob: -5.575326442718506
    10. 'b' → logprob: -5.700326442718506

Token 200: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.127214789390564
    2. ' x' → logprob: -1.252214789390564
    3. ' ' → logprob: -1.502214789390564
    4. ' if' → logprob: -2.3772149085998535
    5. 'if' → logprob: -4.2522149085998535
    6. '#' → logprob: -4.3772149085998535
    7. ' n' → logprob: -4.6272149085998535
    8. 'bil' → logprob: -4.8772149085998535
    9. ' billets' → logprob: -4.8772149085998535
    10. ' bil' → logprob: -5.5022149085998535

Token 201: ' à' (ID: 1221)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7519112229347229
    2. 'x' → logprob: -1.7519111633300781
    3. 'bil' → logprob: -1.7519111633300781
    4. ' y' → logprob: -2.751911163330078
    5. ' billets' → logprob: -3.001911163330078
    6. '#' → logprob: -3.251911163330078
    7. ' billet' → logprob: -5.376911163330078
    8. 'n' → logprob: -5.501911163330078
    9. ' x' → logprob: -5.501911163330078
    10. ' bil' → logprob: -5.626911163330078

Token 202: ' partir' (ID: 12100)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -1.197440266609192
    2. 'pp' → logprob: -1.572440266609192
    3. ' partir' → logprob: -2.6974401473999023
    4. 'près' → logprob: -2.8224401473999023
    5. 'ussi' → logprob: -3.0724401473999023
    6. 'x' → logprob: -3.1974401473999023
    7. 'prés' → logprob: -3.4474401473999023
    8. 'p' → logprob: -3.6974401473999023
    9. 'cc' → logprob: -4.072440147399902
    10. '#' → logprob: -4.072440147399902

Token 203: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.36081463098526
    2. ' du' → logprob: -1.2358145713806152
    3. 'de' → logprob: -5.360814571380615
    4. '#' → logprob: -5.485814571380615
    5. 'res' → logprob: -6.360814571380615
    6. ' des' → logprob: -7.235814571380615
    7. 'du' → logprob: -7.735814571380615
    8. ' res' → logprob: -7.860814571380615
    9. ' d' → logprob: -10.485815048217773
    10. ' #' → logprob: -10.485815048217773

Token 204: ' reste' (ID: 26769)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.026318764314055443
    2. 'x' → logprob: -3.7763187885284424
    3. 'rest' → logprob: -6.651318550109863
    4. 'reste' → logprob: -7.776318550109863
    5. 'rés' → logprob: -7.776318550109863
    6. ' res' → logprob: -8.151318550109863
    7. '500' → logprob: -8.276318550109863
    8. 'ress' → logprob: -9.276318550109863
    9. 'r' → logprob: -9.651318550109863
    10. 'result' → logprob: -10.276318550109863

Token 205: ' res' (ID: 694)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35747408866882324
    2. ' ,' → logprob: -1.2324740886688232
    3. ' de' → logprob: -5.357474327087402
    4. ' ' → logprob: -6.607474327087402
    5. ' =' → logprob: -7.607474327087402
    6. 'de' → logprob: -7.982474327087402
    7. '=' → logprob: -8.232474327087402
    8. '   ' → logprob: -8.357474327087402
    9. ' d' → logprob: -8.357474327087402
    10. '%' → logprob: -8.732474327087402

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44283556938171387
    2. ' ,' → logprob: -1.0678355693817139
    3. 'x' → logprob: -4.817835807800293
    4. ' ' → logprob: -6.192835807800293
    5. ' x' → logprob: -6.442835807800293
    6. '500' → logprob: -7.317835807800293
    7. '_' → logprob: -7.942835807800293
    8. '#' → logprob: -8.067835807800293
    9. ' =' → logprob: -8.692835807800293
    10. ' on' → logprob: -9.317835807800293

Token 207: ' on' (ID: 402)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9639800190925598
    2. ' y' → logprob: -1.463979959487915
    3. ' x' → logprob: -1.463979959487915
    4. 'y' → logprob: -2.213979959487915
    5. ' ' → logprob: -3.838979959487915
    6. '#' → logprob: -5.088980197906494
    7. ' on' → logprob: -5.213980197906494
    8. 'n' → logprob: -5.588980197906494
    9. ' #' → logprob: -5.588980197906494
    10. ' n' → logprob: -6.588980197906494

Token 208: ' cherche' (ID: 52345)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -1.0345758199691772
    2. 'x' → logprob: -2.034575939178467
    3. ' souhaite' → logprob: -2.284575939178467
    4. ' x' → logprob: -2.534575939178467
    5. ' continue' → logprob: -2.534575939178467
    6. 'continue' → logprob: -3.034575939178467
    7. ' calc' → logprob: -3.284575939178467
    8. ' veut' → logprob: -3.659575939178467
    9. ' ' → logprob: -3.909575939178467
    10. ' #' → logprob: -4.034575939178467

Token 209: ' combien' (ID: 106648)
  Prédit: ' combien'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combien' → logprob: -0.06910696625709534
    2. ' le' → logprob: -3.3191070556640625
    3. ' ' → logprob: -4.4441070556640625
    4. 'comb' → logprob: -5.4441070556640625
    5. 'le' → logprob: -5.8191070556640625
    6. ' nombre' → logprob: -6.3191070556640625
    7. ' à' → logprob: -6.5691070556640625
    8. 'nombre' → logprob: -6.5691070556640625
    9. ' ' → logprob: -6.6941070556640625
    10. ' comb' → logprob: -6.6941070556640625

Token 210: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.015354190021753311
    2. 'de' → logprob: -4.765354156494141
    3. ' ' → logprob: -6.015354156494141
    4. ' d' → logprob: -6.265354156494141
    5. '   ' → logprob: -7.515354156494141
    6. 'd' → logprob: -7.515354156494141
    7. '  ' → logprob: -7.765354156494141
    8. ' x' → logprob: -8.26535415649414
    9. '    ' → logprob: -8.76535415649414
    10. '500' → logprob: -8.76535415649414

Token 211: ' pièces' (ID: 49165)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '200' → logprob: -0.26387226581573486
    2. '100' → logprob: -2.7638721466064453
    3. 'bil' → logprob: -2.8888721466064453
    4. ' billets' → logprob: -3.0138721466064453
    5. ' bil' → logprob: -3.1388721466064453
    6. 'b' → logprob: -4.763872146606445
    7. ' ' → logprob: -4.763872146606445
    8. 'fois' → logprob: -7.263872146606445
    9. ' fois' → logprob: -7.263872146606445
    10. ' x' → logprob: -7.388872146606445

Token 212: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.03074534982442856
    2. 'de' → logprob: -3.780745267868042
    3. ' ' → logprob: -5.155745506286621
    4. '100' → logprob: -7.280745506286621
    5. ' d' → logprob: -8.530745506286621
    6. '500' → logprob: -8.655745506286621
    7. 'd' → logprob: -8.905745506286621
    8. '  ' → logprob: -9.155745506286621
    9. '   ' → logprob: -9.280745506286621
    10. 's' → logprob: -9.655745506286621

Token 213: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.3142959773540497
    2. '100' → logprob: -1.314296007156372
    3. ' ' → logprob: -6.939295768737793
    4. '20' → logprob: -10.439295768737793
    5. '50' → logprob: -11.314295768737793
    6. '2' → logprob: -11.689295768737793
    7. '  ' → logprob: -12.564295768737793
    8. '   ' → logprob: -12.814295768737793
    9. '	' → logprob: -13.064295768737793
    10. '1' → logprob: -13.439295768737793

Token 214: '5' (ID: 20)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '200' → logprob: -0.31352365016937256
    2. '100' → logprob: -1.3135236501693726
    3. '20' → logprob: -8.938523292541504
    4. ' ' → logprob: -9.688523292541504
    5. '50' → logprob: -10.188523292541504
    6. '250' → logprob: -11.313523292541504
    7. '2' → logprob: -11.563523292541504
    8. '10' → logprob: -12.813523292541504
    9. '1' → logprob: -13.563523292541504
    10. '	' → logprob: -13.688523292541504

Token 215: ' peuvent' (ID: 21321)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -3.309382373117842e-05
    2. '00' → logprob: -11.125033378601074
    3. ' ' → logprob: -11.625033378601074
    4. 'res' → logprob: -12.500033378601074
    5. '٠' → logprob: -13.750033378601074
    6. 'o' → logprob: -14.187533378601074
    7. '۰' → logprob: -14.375033378601074
    8. ' res' → logprob: -14.500033378601074
    9. '०' → logprob: -15.250033378601074
    10. '000' → logprob: -15.375033378601074

Token 216: ' y' (ID: 342)
  Prédit: 'aller'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aller' → logprob: -0.005062025971710682
    2. 'entr' → logprob: -6.505062103271484
    3. ' aller' → logprob: -6.630062103271484
    4. 'all' → logprob: -7.255062103271484
    5. 'go' → logprob: -7.380062103271484
    6. 'venir' → logprob: -8.755062103271484
    7. 'on' → logprob: -8.880062103271484
    8. 'allo' → logprob: -8.880062103271484
    9. ''aller' → logprob: -9.005062103271484
    10. ' ' → logprob: -10.255062103271484

Token 217: ' entrer' (ID: 111917)
  Prédit: 'aller'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aller' → logprob: -0.015604927204549313
    2. 'entr' → logprob: -4.8906049728393555
    3. ' aller' → logprob: -5.2656049728393555
    4. 'tenir' → logprob: -6.6406049728393555
    5. 'all' → logprob: -7.5156049728393555
    6. ''aller' → logprob: -9.140604972839355
    7. 'venir' → logprob: -9.515604972839355
    8. 'x' → logprob: -9.515604972839355
    9. ' entrer' → logprob: -9.640604972839355
    10. ' ' → logprob: -9.640604972839355

Token 218: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.153971791267395
    2. 'pieces' → logprob: -1.278971791267395
    3. 'x' → logprob: -2.1539716720581055
    4. 'p' → logprob: -2.4039716720581055
    5. '5' → logprob: -3.4039716720581055
    6. ' ' → logprob: -3.5289716720581055
    7. '_' → logprob: -3.7789716720581055
    8. '=' → logprob: -3.9039716720581055
    9. 'pi' → logprob: -4.2789716720581055
    10. ' pieces' → logprob: -4.4039716720581055

Token 219: '#' (ID: 2)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -1.0007073879241943
    2. 'x' → logprob: -1.2507073879241943
    3. ' x' → logprob: -2.5007073879241943
    4. 'n' → logprob: -2.6257073879241943
    5. 'p' → logprob: -3.3757073879241943
    6. ' pieces' → logprob: -3.6257073879241943
    7. 'coins' → logprob: -3.8757073879241943
    8. ' n' → logprob: -4.250707626342773
    9. ' p' → logprob: -4.250707626342773
    10. 'y' → logprob: -4.500707626342773

Token 220: ' Encore' (ID: 118329)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.8307534456253052
    2. 'x' → logprob: -1.4557534456253052
    3. 'y' → logprob: -2.0807533264160156
    4. 'n' → logprob: -2.8307533264160156
    5. 'p' → logprob: -2.8307533264160156
    6. 'coins' → logprob: -2.9557533264160156
    7. 'c' → logprob: -4.955753326416016
    8. 'piece' → logprob: -4.955753326416016
    9. 'pi' → logprob: -5.330753326416016
    10. 'coin' → logprob: -5.580753326416016

Token 221: ' une' (ID: 2463)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2733949422836304
    2. ' x' → logprob: -1.6483949422836304
    3. ' ' → logprob: -1.7733949422836304
    4. 'res' → logprob: -2.27339506149292
    5. ' de' → logprob: -3.02339506149292
    6. ' =' → logprob: -3.52339506149292
    7. ' à' → logprob: -3.64839506149292
    8. '5' → logprob: -3.77339506149292
    9. '  ' → logprob: -3.89839506149292
    10. ' res' → logprob: -4.14839506149292

Token 222: ' division' (ID: 21629)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.3114840090274811
    2. ' fois' → logprob: -1.4364839792251587
    3. 'x' → logprob: -3.8114840984344482
    4. 'res' → logprob: -5.436483860015869
    5. '#' → logprob: -6.311483860015869
    6. ' ' → logprob: -7.686483860015869
    7. 'une' → logprob: -8.311484336853027
    8. ' x' → logprob: -8.436484336853027
    9. '500' → logprob: -8.686484336853027
    10. '%' → logprob: -9.686484336853027

Token 223: ' entière' (ID: 61583)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.60317462682724
    2. ' entière' → logprob: -1.4781746864318848
    3. '_ent' → logprob: -2.2281746864318848
    4. '_' → logprob: -2.3531746864318848
    5. 'enti' → logprob: -4.228174686431885
    6. ' enti' → logprob: -6.103174686431885
    7. ' ent' → logprob: -6.353174686431885
    8. '_integer' → logprob: -7.728174686431885
    9. 'int' → logprob: -7.978174686431885
    10. ' ' → logprob: -8.228174209594727

Token 224: ' :' (ID: 712)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.2875852584838867
    2. 'p' → logprob: -1.5375852584838867
    3. 'pieces' → logprob: -1.9125852584838867
    4. 'x' → logprob: -2.4125852584838867
    5. 'coin' → logprob: -3.0375852584838867
    6. 'n' → logprob: -3.2875852584838867
    7. ' coins' → logprob: -3.9125852584838867
    8. 'rest' → logprob: -4.412585258483887
    9. 'de' → logprob: -4.412585258483887
    10. '5' → logprob: -4.412585258483887

Token 225: ' res' (ID: 694)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.8495792746543884
    2. 'p' → logprob: -2.224579334259033
    3. 'coins' → logprob: -2.349579334259033
    4. 'n' → logprob: -2.474579334259033
    5. 'x' → logprob: -3.099579334259033
    6. 'res' → logprob: -3.099579334259033
    7. 'y' → logprob: -3.724579334259033
    8. ' pieces' → logprob: -3.849579334259033
    9. ' p' → logprob: -3.974579334259033
    10. 'nb' → logprob: -3.974579334259033

Token 226: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.03004111908376217
    2. '//' → logprob: -3.530041217803955
    3. '_' → logprob: -9.030040740966797
    4. ' =' → logprob: -9.780040740966797
    5. '=' → logprob: -10.155040740966797
    6. ' ' → logprob: -10.405040740966797
    7. ' ' → logprob: -10.655040740966797
    8. '//=' → logprob: -11.655040740966797
    9. '#' → logprob: -12.530040740966797
    10. ' #' → logprob: -13.280040740966797

Token 227: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.004621780011802912
    2. ' ' → logprob: -5.379621982574463
    3. ' ' → logprob: -13.879621505737305
    4. '   ' → logprob: -15.504621505737305
    5. '  ' → logprob: -15.692121505737305
    6. '```' → logprob: -17.254621505737305
    7. '٥' → logprob: -17.504621505737305
    8. ' ' → logprob: -17.754621505737305
    9. '50' → logprob: -17.754621505737305
    10. ' cinq' → logprob: -17.879621505737305

Token 228: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -17.187559127807617
    4. '500' → logprob: -17.562559127807617
    5. '٥' → logprob: -17.562559127807617
    6. '   ' → logprob: -17.812559127807617
    7. '  ' → logprob: -17.937559127807617
    8. ' ' → logprob: -18.000059127807617
    9. '۵' → logprob: -18.500059127807617
    10. '50' → logprob: -18.625059127807617

Token 229: '.
' (ID: 558)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.6227111220359802
    2. '5' → logprob: -2.122711181640625
    3. 'pi' → logprob: -2.872711181640625
    4. 'n' → logprob: -3.372711181640625
    5. 'p' → logprob: -3.497711181640625
    6. 'coins' → logprob: -3.622711181640625
    7. 'x' → logprob: -3.747711181640625
    8. '  
' → logprob: -3.747711181640625
    9. 'res' → logprob: -4.497711181640625
    10. ' pieces' → logprob: -4.747711181640625

Token 230: '#' (ID: 2)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.48743295669555664
    2. 'coins' → logprob: -1.3624329566955566
    3. 'p' → logprob: -3.6124329566955566
    4. 'y' → logprob: -3.6124329566955566
    5. 'n' → logprob: -4.112432956695557
    6. 'c' → logprob: -4.737432956695557
    7. 'coin' → logprob: -4.737432956695557
    8. 'piece' → logprob: -4.862432956695557
    9. 'nb' → logprob: -4.862432956695557
    10. 'm' → logprob: -5.112432956695557

Token 231: ' Cela' (ID: 44403)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.5244126319885254
    2. 'coins' → logprob: -1.2744126319885254
    3. 'y' → logprob: -3.2744126319885254
    4. 'p' → logprob: -4.149412631988525
    5. 'piece' → logprob: -4.524412631988525
    6. 'n' → logprob: -4.524412631988525
    7. 'nb' → logprob: -4.649412631988525
    8. 'coin' → logprob: -4.899412631988525
    9. 'pi' → logprob: -4.899412631988525
    10. 'c' → logprob: -4.899412631988525

Token 232: ' donne' (ID: 30004)
  Prédit: 'don'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'don' → logprob: -0.847197949886322
    2. '=' → logprob: -1.7221980094909668
    3. ' =' → logprob: -2.097198009490967
    4. ' donne' → logprob: -2.222198009490967
    5. 'per' → logprob: -3.347198009490967
    6. ' permet' → logprob: -3.472198009490967
    7. 'pe' → logprob: -3.597198009490967
    8. ' va' → logprob: -4.472198009490967
    9. ' donnera' → logprob: -4.847198009490967
    10. ' peut' → logprob: -5.097198009490967

Token 233: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.6785426735877991
    2. 'le' → logprob: -1.3035426139831543
    3. ' res' → logprob: -2.4285426139831543
    4. 'res' → logprob: -3.6785426139831543
    5. 'pi' → logprob: -4.303542613983154
    6. ' pieces' → logprob: -4.303542613983154
    7. 'pieces' → logprob: -4.303542613983154
    8. ' nombre' → logprob: -5.053542613983154
    9. 'nombre' → logprob: -5.178542613983154
    10. ' la' → logprob: -5.178542613983154

Token 234: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.02233308181166649
    2. ' nombre' → logprob: -4.272333145141602
    3. 'n' → logprob: -5.522333145141602
    4. 'number' → logprob: -6.397333145141602
    5. 'nb' → logprob: -6.647333145141602
    6. 'num' → logprob: -8.147333145141602
    7. 'nbr' → logprob: -8.522333145141602
    8. 'nom' → logprob: -9.397333145141602
    9. 'res' → logprob: -9.647333145141602
    10. ' number' → logprob: -9.647333145141602

Token 235: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14180530607700348
    2. ' de' → logprob: -2.266805410385132
    3. '_de' → logprob: -4.266805171966553
    4. '_p' → logprob: -5.016805171966553
    5. 'de' → logprob: -5.516805171966553
    6. ' ' → logprob: -6.266805171966553
    7. '_d' → logprob: -7.516805171966553
    8. '_pi' → logprob: -7.891805171966553
    9. ' _' → logprob: -8.141805648803711
    10. 'd' → logprob: -8.391805648803711

Token 236: ' pièces' (ID: 49165)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -1.0303711891174316
    2. ' pièces' → logprob: -1.2803711891174316
    3. 'pi' → logprob: -1.6553711891174316
    4. ' pieces' → logprob: -2.2803711891174316
    5. 'coins' → logprob: -3.5303711891174316
    6. ' pi' → logprob: -4.155371189117432
    7. ' coins' → logprob: -4.405371189117432
    8. '5' → logprob: -5.530371189117432
    9. ' ' → logprob: -5.780371189117432
    10. 'piec' → logprob: -6.780371189117432

Token 237: ' de' (ID: 334)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.4350516200065613
    2. 'de' → logprob: -1.560051679611206
    3. '_' → logprob: -2.310051679611206
    4. ' de' → logprob: -3.560051679611206
    5. '_p' → logprob: -5.185051441192627
    6. ' =' → logprob: -5.185051441192627
    7. '_d' → logprob: -7.310051441192627
    8. '_pi' → logprob: -7.310051441192627
    9. '_res' → logprob: -7.560051441192627
    10. 'd' → logprob: -8.060051918029785

Token 238: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6329300403594971
    2. '5' → logprob: -0.7579300403594971
    3. ' cinq' → logprob: -8.882929801940918
    4. ' monnaie' → logprob: -10.007929801940918
    5. ' pièces' → logprob: -10.507929801940918
    6. 'res' → logprob: -10.882929801940918
    7. '  ' → logprob: -11.132929801940918
    8. ' res' → logprob: -11.257929801940918
    9. 'c' → logprob: -11.632929801940918
    10. ' five' → logprob: -11.945429801940918

Token 239: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.643152740551159e-05
    2. ' ' → logprob: -10.750036239624023
    3. 'c' → logprob: -12.000036239624023
    4. 'res' → logprob: -12.625036239624023
    5. ' cinq' → logprob: -13.250036239624023
    6. 'cin' → logprob: -14.250036239624023
    7. '```' → logprob: -14.500036239624023
    8. 'mon' → logprob: -14.625036239624023
    9. 'five' → logprob: -15.187536239624023
    10. '

' → logprob: -15.500036239624023

Token 240: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6518746614456177
    2. '.' → logprob: -1.7768746614456177
    3. 'x' → logprob: -2.401874542236328
    4. '5' → logprob: -2.776874542236328
    5. '  
' → logprob: -3.776874542236328
    6. ' x' → logprob: -3.901874542236328
    7. '"' → logprob: -4.276874542236328
    8. 's' → logprob: -4.526874542236328
    9. 'd' → logprob: -4.901874542236328
    10. ',' → logprob: -5.026874542236328

Token 241: '#' (ID: 2)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.6909557580947876
    2. 'pieces' → logprob: -1.0659557580947876
    3. 'y' → logprob: -2.565955638885498
    4. 'five' → logprob: -3.440955638885498
    5. 'coin' → logprob: -4.815955638885498
    6. 'n' → logprob: -4.815955638885498
    7. 'c' → logprob: -5.065955638885498
    8. 'p' → logprob: -5.315955638885498
    9. 'piece' → logprob: -5.440955638885498
    10. 'nb' → logprob: -5.565955638885498

Token 242: ' On' (ID: 2160)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.7827826142311096
    2. 'pieces' → logprob: -1.2827825546264648
    3. 'y' → logprob: -2.157782554626465
    4. 'five' → logprob: -2.782782554626465
    5. 'coin' → logprob: -3.782782554626465
    6. 'c' → logprob: -3.782782554626465
    7. 'piece' → logprob: -4.657782554626465
    8. 'p' → logprob: -4.782782554626465
    9. 'm' → logprob: -5.282782554626465
    10. 'n' → logprob: -5.407782554626465

Token 243: ' stock' (ID: 6546)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.493426114320755
    2. 'y' → logprob: -0.9934260845184326
    3. ' x' → logprob: -5.493426322937012
    4. 'x' → logprob: -5.743426322937012
    5. ' =' → logprob: -5.743426322937012
    6. 'p' → logprob: -6.368426322937012
    7. 'pieces' → logprob: -6.368426322937012
    8. ' pieces' → logprob: -7.243426322937012
    9. '=' → logprob: -7.368426322937012
    10. ' p' → logprob: -7.493426322937012

Token 244: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.30123764276504517
    2. 'o' → logprob: -1.9262375831604004
    3. 'age' → logprob: -3.4262375831604004
    4. '=' → logprob: -3.6762375831604004
    5. 'er' → logprob: -4.5512375831604
    6. ' =' → logprob: -4.5512375831604
    7. 'era' → logprob: -4.8012375831604
    8. 'x' → logprob: -5.3012375831604
    9. 'a' → logprob: -5.5512375831604
    10. 'pe' → logprob: -6.5512375831604

Token 245: ' ce' (ID: 2357)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6568442583084106
    2. ' p' → logprob: -2.156844139099121
    3. ' ' → logprob: -2.781844139099121
    4. 'pi' → logprob: -3.281844139099121
    5. 'p' → logprob: -3.531844139099121
    6. 'pieces' → logprob: -3.656844139099121
    7. '_p' → logprob: -4.031844139099121
    8. ' pieces' → logprob: -4.156844139099121
    9. ' pi' → logprob: -4.281844139099121
    10. 'les' → logprob: -4.281844139099121

Token 246: ' résultat' (ID: 62556)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.020436307415366173
    2. '_p' → logprob: -4.5204362869262695
    3. '_pi' → logprob: -6.2704362869262695
    4. '5' → logprob: -7.0204362869262695
    5. '_nombre' → logprob: -7.0204362869262695
    6. '_d' → logprob: -7.1454362869262695
    7. ' ' → logprob: -7.3954362869262695
    8. '_x' → logprob: -7.6454362869262695
    9. ' _' → logprob: -8.02043628692627
    10. 'pi' → logprob: -8.14543628692627

Token 247: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3508302569389343
    2. '=' → logprob: -1.350830316543579
    3. 'p' → logprob: -4.100830078125
    4. 'pi' → logprob: -5.350830078125
    5. 'd' → logprob: -5.600830078125
    6. '_' → logprob: -5.600830078125
    7. '_p' → logprob: -6.225830078125
    8. 'pieces' → logprob: -6.350830078125
    9. '_pi' → logprob: -7.600830078125
    10. ' ' → logprob: -7.600830078125

Token 248: ' y' (ID: 342)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.1587356328964233
    2. 'pieces' → logprob: -1.6587356328964233
    3. 'res' → logprob: -2.158735752105713
    4. 'coins' → logprob: -2.408735752105713
    5. 'pi' → logprob: -2.533735752105713
    6. ' p' → logprob: -3.158735752105713
    7. 'x' → logprob: -3.908735752105713
    8. 'y' → logprob: -4.033735752105713
    9. 'la' → logprob: -4.408735752105713
    10. ' coins' → logprob: -4.533735752105713

Token 249: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02631853148341179
    2. '=' → logprob: -3.6513185501098633
    3. ' ' → logprob: -11.651318550109863
    4. 'y' → logprob: -12.151318550109863
    5. ' ' → logprob: -13.526318550109863
    6. ' y' → logprob: -13.776318550109863
    7. ' =
' → logprob: -14.276318550109863
    8. ',' → logprob: -14.901318550109863
    9. '=y' → logprob: -15.276318550109863
    10. ' ,' → logprob: -15.651318550109863

Token 250: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.7610454708337784e-05
    2. ' y' → logprob: -10.500027656555176
    3. '
' → logprob: -17.75002670288086
    4. '	y' → logprob: -18.37502670288086
    5. '```' → logprob: -18.75002670288086
    6. '5' → logprob: -18.87502670288086
    7. ' ' → logprob: -18.87502670288086
    8. '
' → logprob: -20.25002670288086
    9. '   ' → logprob: -20.25002670288086
    10. ' 
' → logprob: -20.37502670288086

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692999839782715
    2. '=' → logprob: -2.126929998397827
    3. '=y' → logprob: -14.376930236816406
    4. ' ' → logprob: -14.501930236816406
    5. ' =
' → logprob: -14.876930236816406
    6. ' y' → logprob: -15.501930236816406
    7. 'y' → logprob: -16.251930236816406
    8. '=

' → logprob: -16.251930236816406
    9. ',' → logprob: -16.501930236816406
    10. ' ' → logprob: -16.751930236816406

Token 252: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.16022635996341705
    2. 'res' → logprob: -1.9102263450622559
    3. '5' → logprob: -14.535226821899414
    4. ' ' → logprob: -14.785226821899414
    5. ' ' → logprob: -14.785226821899414
    6. '(res' → logprob: -14.910226821899414
    7. '	res' → logprob: -15.035226821899414
    8. 'r' → logprob: -16.660226821899414
    9. '_res' → logprob: -17.410226821899414
    10. '$res' → logprob: -17.785226821899414

Token 253: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0486181378364563
    2. '//' → logprob: -3.0486180782318115
    3. ' ' → logprob: -10.79861831665039
    4. '#' → logprob: -12.54861831665039
    5. ' //
' → logprob: -12.92361831665039
    6. ' ' → logprob: -13.42361831665039
    7. '//=' → logprob: -14.17361831665039
    8. ' #' → logprob: -14.54861831665039
    9. ')' → logprob: -15.17361831665039
    10. '"' → logprob: -15.17361831665039

Token 254: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.014164102263748646
    2. ' ' → logprob: -4.264163970947266
    3. ' ' → logprob: -14.389163970947266
    4. '  ' → logprob: -18.389163970947266
    5. '```' → logprob: -19.139163970947266
    6. '   ' → logprob: -19.264163970947266
    7. '٥' → logprob: -19.514163970947266
    8. '' → logprob: -19.639163970947266
    9. '500' → logprob: -19.889163970947266
    10. '	' → logprob: -20.014163970947266

Token 255: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '٥' → logprob: -18.625036239624023
    4. '```' → logprob: -18.625036239624023
    5. '  ' → logprob: -19.250036239624023
    6. '۵' → logprob: -19.625036239624023
    7. '５' → logprob: -19.625036239624023
    8. ' ' → logprob: -20.312536239624023
    9. '' → logprob: -20.562536239624023
    10. '   ' → logprob: -20.625036239624023

Token 256: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4943690299987793
    2. '<|end|>' → logprob: -1.3693690299987793
    3. '#' → logprob: -2.3693690299987793
    4. 'z' → logprob: -3.8693690299987793
    5. '
' → logprob: -5.369369029998779
    6. ' 
' → logprob: -5.494369029998779
    7. '.' → logprob: -5.869369029998779
    8. '```' → logprob: -6.494369029998779
    9. ' ' → logprob: -6.869369029998779
    10. 'y' → logprob: -7.119369029998779

Token 258: ' On' (ID: 2160)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.9266722798347473
    2. 'res' → logprob: -0.9266722798347473
    3. '#' → logprob: -2.4266722202301025
    4. 'print' → logprob: -2.4266722202301025
    5. 'r' → logprob: -4.301672458648682
    6. 'rest' → logprob: -5.051672458648682
    7. 'y' → logprob: -5.926672458648682
    8. '5' → logprob: -6.301672458648682
    9. 'reste' → logprob: -6.426672458648682
    10. 'p' → logprob: -6.551672458648682

Token 259: ' va' (ID: 3423)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2721257507801056
    2. 'print' → logprob: -1.7721257209777832
    3. 'res' → logprob: -3.022125720977783
    4. 'rest' → logprob: -4.272125720977783
    5. 'z' → logprob: -6.397125720977783
    6. 'reste' → logprob: -6.772125720977783
    7. 'r' → logprob: -7.147125720977783
    8. ' #' → logprob: -7.397125720977783
    9. '#print' → logprob: -8.397126197814941
    10. 'rem' → logprob: -9.022126197814941

Token 260: ' maintenant' (ID: 35735)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.9544538259506226
    2. 'res' → logprob: -1.2044538259506226
    3. 'print' → logprob: -1.4544538259506226
    4. '#' → logprob: -2.704453945159912
    5. ' afficher' → logprob: -5.579453945159912
    6. 'im' → logprob: -6.204453945159912
    7. 'calcul' → logprob: -6.704453945159912
    8. 'rés' → logprob: -7.079453945159912
    9. 'rest' → logprob: -7.204453945159912
    10. ' res' → logprob: -7.454453945159912

Token 261: ' calcul' (ID: 7559)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.023519271984696388
    2. 'calcul' → logprob: -4.023519039154053
    3. '#' → logprob: -6.273519039154053
    4. 'print' → logprob: -6.398519039154053
    5. 'im' → logprob: -7.648519039154053
    6. ' calcul' → logprob: -8.148519515991211
    7. ' afficher' → logprob: -8.273519515991211
    8. 'calc' → logprob: -9.023519515991211
    9. 'assign' → logprob: -9.648519515991211
    10. 'é' → logprob: -9.773519515991211

Token 262: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.007134697865694761
    2. 'ate' → logprob: -5.007134914398193
    3. '#' → logprob: -8.132134437561035
    4. 'e' → logprob: -9.382134437561035
    5. 'ater' → logprob: -10.757134437561035
    6. 'ateur' → logprob: -12.257134437561035
    7. 'print' → logprob: -12.257134437561035
    8. 'ter' → logprob: -13.382134437561035
    9. 'ier' → logprob: -13.382134437561035
    10. 'ent' → logprob: -13.632134437561035

Token 263: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6731964945793152
    2. 'z' → logprob: -1.29819655418396
    3. 'res' → logprob: -1.92319655418396
    4. 'la' → logprob: -3.54819655418396
    5. '#' → logprob: -4.298196315765381
    6. 'les' → logprob: -4.673196315765381
    7. 'rest' → logprob: -5.173196315765381
    8. 'y' → logprob: -5.548196315765381
    9. 'l' → logprob: -5.798196315765381
    10. 'reste' → logprob: -5.923196315765381

Token 264: ' montant' (ID: 72364)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.06353620439767838
    2. 'rest' → logprob: -3.6885361671447754
    3. '#' → logprob: -4.188536167144775
    4. 'res' → logprob: -4.938536167144775
    5. 'nombre' → logprob: -5.063536167144775
    6. 'z' → logprob: -6.313536167144775
    7. 're' → logprob: -6.563536167144775
    8. 'r' → logprob: -7.188536167144775
    9. 'rés' → logprob: -7.188536167144775
    10. 'mont' → logprob: -7.313536167144775

Token 265: ' total' (ID: 3609)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.6311162710189819
    2. '#' → logprob: -1.506116271018982
    3. 'final' → logprob: -2.5061163902282715
    4. ' restant' → logprob: -3.1311163902282715
    5. 'reste' → logprob: -3.3811163902282715
    6. ' rest' → logprob: -4.1311163902282715
    7. '_' → logprob: -4.2561163902282715
    8. 'res' → logprob: -5.2561163902282715
    9. ' #' → logprob: -5.3811163902282715
    10. 're' → logprob: -5.5061163902282715

Token 266: ' obtenu' (ID: 117330)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13789618015289307
    2. '_total' → logprob: -2.7628960609436035
    3. 'total' → logprob: -4.0128960609436035
    4. ' =' → logprob: -4.7628960609436035
    5. '_rest' → logprob: -4.8878960609436035
    6. '_de' → logprob: -5.1378960609436035
    7. 'rest' → logprob: -5.3878960609436035
    8. 'de' → logprob: -5.5128960609436035
    9. '_des' → logprob: -6.1378960609436035
    10. '_m' → logprob: -6.1378960609436035

Token 267: ' en' (ID: 469)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6895718574523926
    2. ' =' → logprob: -1.0645718574523926
    3. '=' → logprob: -3.0645718574523926
    4. 'en' → logprob: -3.6895718574523926
    5. ' total' → logprob: -4.189571857452393
    6. '_' → logprob: -4.314571857452393
    7. '_total' → logprob: -4.564571857452393
    8. '#' → logprob: -5.189571857452393
    9. ' en' → logprob: -5.439571857452393
    10. ' de' → logprob: -5.564571857452393

Token 268: ' addition' (ID: 5856)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -1.1623430252075195
    2. ' addition' → logprob: -1.6623430252075195
    3. '500' → logprob: -1.7873430252075195
    4. ' multip' → logprob: -2.5373430252075195
    5. 'addition' → logprob: -2.5373430252075195
    6. 're' → logprob: -4.0373430252075195
    7. ' re' → logprob: -4.2873430252075195
    8. 'x' → logprob: -4.4123430252075195
    9. 'comb' → logprob: -4.5373430252075195
    10. 's' → logprob: -4.6623430252075195

Token 269: 'nant' (ID: 48648)
  Prédit: 'nant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nant' → logprob: -0.46989381313323975
    2. ' =' → logprob: -1.0948938131332397
    3. '=' → logprob: -3.8448939323425293
    4. ' y' → logprob: -5.219893932342529
    5. ' x' → logprob: -5.219893932342529
    6. 'n' → logprob: -5.719893932342529
    7. 'né' → logprob: -6.594893932342529
    8. 'ner' → logprob: -7.469893932342529
    9. 'ne' → logprob: -7.594893932342529
    10. ' ' → logprob: -7.719893932342529

Token 270: ' :
' (ID: 10039)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06926882266998291
    2. '(x' → logprob: -3.1942687034606934
    3. ' x' → logprob: -4.194268703460693
    4. '(' → logprob: -5.569268703460693
    5. ' (' → logprob: -6.444268703460693
    6. ' les' → logprob: -6.444268703460693
    7. '500' → logprob: -6.694268703460693
    8. 'les' → logprob: -6.694268703460693
    9. ' ' → logprob: -7.194268703460693
    10. 'le' → logprob: -7.944268703460693

Token 271: '#' (ID: 2)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6429387331008911
    2. ' x' → logprob: -0.8929387331008911
    3. ' ' → logprob: -3.1429386138916016
    4. '500' → logprob: -4.267938613891602
    5. ' (' → logprob: -5.517938613891602
    6. '(x' → logprob: -6.267938613891602
    7. ' les' → logprob: -8.142938613891602
    8. '(' → logprob: -8.642938613891602
    9. '5' → logprob: -9.392938613891602
    10. '#' → logprob: -9.580438613891602

Token 272: ' -' (ID: 533)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2110396772623062
    2. ' x' → logprob: -1.836039662361145
    3. '(x' → logprob: -4.4610395431518555
    4. ' (' → logprob: -4.8360395431518555
    5. '500' → logprob: -4.9610395431518555
    6. '(' → logprob: -6.2110395431518555
    7. ' ' → logprob: -6.2110395431518555
    8. '5' → logprob: -10.211039543151855
    9. 'b' → logprob: -10.461039543151855
    10. '50' → logprob: -10.461039543151855

Token 273: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7018857002258301
    2. ' x' → logprob: -0.9518857002258301
    3. ' les' → logprob: -3.07688570022583
    4. '(x' → logprob: -3.82688570022583
    5. ' (' → logprob: -4.32688570022583
    6. ' ' → logprob: -4.32688570022583
    7. 'les' → logprob: -4.57688570022583
    8. '500' → logprob: -5.20188570022583
    9. '(' → logprob: -5.57688570022583
    10. ' la' → logprob: -6.45188570022583

Token 274: '100' (ID: 1353)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14987121522426605
    2. '(x' → logprob: -2.3998711109161377
    3. '500' → logprob: -3.1498711109161377
    4. 'les' → logprob: -5.899871349334717
    5. '(' → logprob: -6.399871349334717
    6. 'le' → logprob: -7.774871349334717
    7. ' (' → logprob: -8.649870872497559
    8. '100' → logprob: -9.024870872497559
    9. 'la' → logprob: -9.524870872497559
    10. '50' → logprob: -9.524870872497559

Token 275: '0' (ID: 15)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.29826125502586365
    2. '*' → logprob: -2.1732611656188965
    3. ' x' → logprob: -2.5482611656188965
    4. '*x' → logprob: -3.4232611656188965
    5. '0' → logprob: -4.6732611656188965
    6. 'x' → logprob: -4.6732611656188965
    7. ' +' → logprob: -5.2982611656188965
    8. ' ' → logprob: -5.9232611656188965
    9. '_' → logprob: -6.2982611656188965
    10. '500' → logprob: -6.6732611656188965

Token 276: ' fois' (ID: 14697)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20953112840652466
    2. '*' → logprob: -2.33453106880188
    3. '*x' → logprob: -2.58453106880188
    4. ' x' → logprob: -4.959531307220459
    5. 'x' → logprob: -5.334531307220459
    6. '0' → logprob: -6.834531307220459
    7. ' +' → logprob: -6.834531307220459
    8. ',' → logprob: -7.209531307220459
    9. ' ' → logprob: -7.334531307220459
    10. '*y' → logprob: -7.959531307220459

Token 277: ' le' (ID: 505)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10856089740991592
    2. ' x' → logprob: -2.358560800552368
    3. 'le' → logprob: -5.983561038970947
    4. ' la' → logprob: -6.108561038970947
    5. '500' → logprob: -7.108561038970947
    6. ' le' → logprob: -7.108561038970947
    7. 'la' → logprob: -7.483561038970947
    8. ' les' → logprob: -7.483561038970947
    9. 'les' → logprob: -7.983561038970947
    10. ' ' → logprob: -8.483560562133789

Token 278: ' nombre' (ID: 9733)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.051442746073007584
    2. 'nombre' → logprob: -3.426442861557007
    3. ' nombre' → logprob: -4.301442623138428
    4. ' x' → logprob: -5.926442623138428
    5. '500' → logprob: -6.801442623138428
    6. 'y' → logprob: -9.926443099975586
    7. 'nb' → logprob: -10.051443099975586
    8. 'Nombre' → logprob: -10.176443099975586
    9. ' ' → logprob: -10.801443099975586
    10. ' montant' → logprob: -11.176443099975586

Token 279: ' de' (ID: 334)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.324012815952301
    2. ' de' → logprob: -2.0740127563476562
    3. ' x' → logprob: -2.5740127563476562
    4. 'de' → logprob: -2.8240127563476562
    5. '<|end|>' → logprob: -4.699012756347656
    6. ' ' → logprob: -5.699012756347656
    7. 'd' → logprob: -6.574012756347656
    8. 's' → logprob: -8.199012756347656
    9. '100' → logprob: -8.324012756347656
    10. ' d' → logprob: -8.449012756347656

Token 280: ' billets' (ID: 146301)
  Prédit: 'bil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bil' → logprob: -0.28131303191185
    2. ' billets' → logprob: -2.031312942504883
    3. 'x' → logprob: -2.656312942504883
    4. ' bil' → logprob: -4.531312942504883
    5. 'b' → logprob: -4.531312942504883
    6. '500' → logprob: -4.656312942504883
    7. ' x' → logprob: -5.156312942504883
    8. ' ' → logprob: -5.531312942504883
    9. ' billet' → logprob: -7.031312942504883
    10. '100' → logprob: -7.656312942504883

Token 281: ' de' (ID: 334)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2691940367221832
    2. ' ' → logprob: -2.3941941261291504
    3. 'x' → logprob: -2.5191941261291504
    4. ' de' → logprob: -2.8941941261291504
    5. '500' → logprob: -5.89419412612915
    6. '  ' → logprob: -6.89419412612915
    7. ' d' → logprob: -7.01919412612915
    8. 'de' → logprob: -7.39419412612915
    9. '100' → logprob: -7.64419412612915
    10. '   ' → logprob: -7.89419412612915

Token 282: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.05871012061834335
    2. ' ' → logprob: -3.0587100982666016
    3. 'x' → logprob: -5.308710098266602
    4. '100' → logprob: -5.808710098266602
    5. ' x' → logprob: -6.308710098266602
    6. 'X' → logprob: -9.308710098266602
    7. ' X' → logprob: -9.933710098266602
    8. '5' → logprob: -10.433710098266602
    9. '```' → logprob: -11.121210098266602
    10. '  ' → logprob: -11.308710098266602

Token 283: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.010568438097834587
    2. 'x' → logprob: -5.010568618774414
    3. ' ' → logprob: -5.885568618774414
    4. '5' → logprob: -7.885568618774414
    5. ' x' → logprob: -7.885568618774414
    6. '100' → logprob: -9.010568618774414
    7. '50' → logprob: -9.135568618774414
    8. 'X' → logprob: -11.010568618774414
    9. '  ' → logprob: -11.698068618774414
    10. '1' → logprob: -11.885568618774414

Token 284: ' (' (ID: 350)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.712782621383667
    2. ' *' → logprob: -0.712782621383667
    3. '0' → logprob: -4.587782859802246
    4. ' +' → logprob: -5.587782859802246
    5. 'x' → logprob: -6.337782859802246
    6. ' x' → logprob: -6.337782859802246
    7. '500' → logprob: -7.337782859802246
    8. ' ' → logprob: -7.962782859802246
    9. '+' → logprob: -7.962782859802246
    10. '2' → logprob: -9.337782859802246

Token 285: 'car' (ID: 6830)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2538386881351471
    2. '500' → logprob: -2.1288387775421143
    3. ' x' → logprob: -2.8788387775421143
    4. ' ' → logprob: -3.1288387775421143
    5. '100' → logprob: -5.753838539123535
    6. '5' → logprob: -8.003838539123535
    7. ')' → logprob: -8.128838539123535
    8. '2' → logprob: -8.378838539123535
    9. ' )' → logprob: -8.503838539123535
    10. '   ' → logprob: -8.878838539123535

Token 286: ' chaque' (ID: 21194)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.48169559240341187
    2. 'x' → logprob: -1.1066956520080566
    3. ' x' → logprob: -3.7316956520080566
    4. ' ' → logprob: -4.606695652008057
    5. ' chaque' → logprob: -4.856695652008057
    6. 'each' → logprob: -6.106695652008057
    7. 'on' → logprob: -6.481695652008057
    8. ' each' → logprob: -7.106695652008057
    9. ' on' → logprob: -7.231695652008057
    10. 'les' → logprob: -7.356695652008057

Token 287: ' billet' (ID: 117706)
  Prédit: 'bil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bil' → logprob: -0.44321826100349426
    2. ' billet' → logprob: -1.1932182312011719
    3. ' bil' → logprob: -2.943218231201172
    4. 'b' → logprob: -7.068218231201172
    5. ' billets' → logprob: -7.693218231201172
    6. ' x' → logprob: -8.568218231201172
    7. ' ' → logprob: -8.568218231201172
    8. 'x' → logprob: -9.193218231201172
    9. '500' → logprob: -9.443218231201172
    10. ' bille' → logprob: -9.568218231201172

Token 288: ' rapporte' (ID: 180891)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5357244610786438
    2. 'de' → logprob: -1.285724401473999
    3. ' a' → logprob: -2.785724401473999
    4. ' vaut' → logprob: -3.285724401473999
    5. 'a' → logprob: -3.910724401473999
    6. ' x' → logprob: -5.785724639892578
    7. ' val' → logprob: -6.035724639892578
    8. '500' → logprob: -6.285724639892578
    9. 'val' → logprob: -6.285724639892578
    10. 'x' → logprob: -6.285724639892578

Token 289: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02944345586001873
    2. '500' → logprob: -3.9044435024261475
    3. ' x' → logprob: -5.029443264007568
    4. 'x' → logprob: -7.404443264007568
    5. '*' → logprob: -8.029443740844727
    6. '  ' → logprob: -8.154443740844727
    7. ' deux' → logprob: -8.154443740844727
    8. '2' → logprob: -8.904443740844727
    9. ' des' → logprob: -9.154443740844727
    10. ' ' → logprob: -9.404443740844727

Token 290: '100' (ID: 1353)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.020563611760735512
    2. ' ' → logprob: -4.14556360244751
    3. '100' → logprob: -5.77056360244751
    4. 'x' → logprob: -7.52056360244751
    5. '  ' → logprob: -8.520564079284668
    6. ' x' → logprob: -8.645564079284668
    7. '2' → logprob: -9.020564079284668
    8. ' ' → logprob: -10.145564079284668
    9. '*' → logprob: -10.395564079284668
    10. '   ' → logprob: -10.395564079284668

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4491352438926697
    2. ' *' → logprob: -1.0741353034973145
    3. '*' → logprob: -3.9491353034973145
    4. ' ' → logprob: -7.6991353034973145
    5. ' x' → logprob: -8.449134826660156
    6. '   ' → logprob: -9.574134826660156
    7. '*x' → logprob: -9.949134826660156
    8. ' ' → logprob: -10.324134826660156
    9. '  ' → logprob: -10.699134826660156
    10. ' #' → logprob: -10.949134826660156

Token 292: ' points' (ID: 5571)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.18514089286327362
    2. ')' → logprob: -1.81014084815979
    3. '*' → logprob: -5.935141086578369
    4. ' *' → logprob: -6.685141086578369
    5. ' )
' → logprob: -7.560141086578369
    6. ' ),' → logprob: -8.060140609741211
    7. ' ' → logprob: -8.185140609741211
    8. '0' → logprob: -9.185140609741211
    9. ' ' → logprob: -9.310140609741211
    10. '),' → logprob: -10.560140609741211

Token 293: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1482420712709427
    2. ' )' → logprob: -2.0232419967651367
    3. '*' → logprob: -5.523241996765137
    4. 's' → logprob: -8.023241996765137
    5. ' )
' → logprob: -8.273241996765137
    6. ')
' → logprob: -8.273241996765137
    7. ' *' → logprob: -8.523241996765137
    8. '#' → logprob: -8.648241996765137
    9. ' ' → logprob: -9.398241996765137
    10. '),' → logprob: -9.773241996765137

Token 294: '#' (ID: 2)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11309509724378586
    2. '#' → logprob: -2.8630950450897217
    3. '100' → logprob: -3.7380950450897217
    4. ' ' → logprob: -4.613095283508301
    5. ' x' → logprob: -4.863095283508301
    6. '*' → logprob: -5.863095283508301
    7. '500' → logprob: -6.738095283508301
    8. ' #' → logprob: -7.113095283508301
    9. ' (' → logprob: -7.738095283508301
    10. '(' → logprob: -7.988095283508301

Token 295: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1884090155363083
    2. ' x' → logprob: -2.8134090900421143
    3. '100' → logprob: -2.9384090900421143
    4. 'x' → logprob: -3.5634090900421143
    5. '+' → logprob: -4.688408851623535
    6. '<|end|>' → logprob: -4.813408851623535
    7. '#' → logprob: -5.188408851623535
    8. ' #' → logprob: -6.313408851623535
    9. ' +' → logprob: -6.563408851623535
    10. '500' → logprob: -7.063408851623535

Token 296: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.17378439009189606
    2. ' ' → logprob: -2.0487844944000244
    3. '100' → logprob: -4.548784255981445
    4. 'x' → logprob: -5.048784255981445
    5. '#' → logprob: -5.548784255981445
    6. ' x' → logprob: -5.673784255981445
    7. '5' → logprob: -6.548784255981445
    8. '50' → logprob: -6.798784255981445
    9. 'y' → logprob: -6.923784255981445
    10. ' y' → logprob: -7.048784255981445

Token 297: '5' (ID: 20)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.13498620688915253
    2. '5' → logprob: -2.384986162185669
    3. '100' → logprob: -4.009986400604248
    4. '200' → logprob: -5.384986400604248
    5. ' ' → logprob: -5.509986400604248
    6. '50' → logprob: -5.884986400604248
    7. 'x' → logprob: -6.384986400604248
    8. 'y' → logprob: -6.759986400604248
    9. '300' → logprob: -7.884986400604248
    10. 'res' → logprob: -8.75998592376709

Token 298: ' fois' (ID: 14697)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.38698723912239075
    2. ' *' → logprob: -1.1369872093200684
    3. '*y' → logprob: -10.011987686157227
    4. ' ' → logprob: -10.511987686157227
    5. '0' → logprob: -11.011987686157227
    6. ' ' → logprob: -11.761987686157227
    7. 'times' → logprob: -13.011987686157227
    8. '**' → logprob: -13.011987686157227
    9. 'y' → logprob: -13.136987686157227
    10. '*x' → logprob: -13.386987686157227

Token 299: ' le' (ID: 505)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5236868262290955
    2. 'y' → logprob: -0.8986868262290955
    3. ' le' → logprob: -8.273686408996582
    4. 'le' → logprob: -8.398686408996582
    5. ' ' → logprob: -10.398686408996582
    6. ' la' → logprob: -10.773686408996582
    7. '	y' → logprob: -12.398686408996582
    8. 'the' → logprob: -12.523686408996582
    9. ' the' → logprob: -12.773686408996582
    10. ' les' → logprob: -12.898686408996582

Token 300: ' nombre' (ID: 9733)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002037487458437681
    2. ' y' → logprob: -6.252037525177002
    3. 'nombre' → logprob: -9.752037048339844
    4. 'x' → logprob: -10.502037048339844
    5. ' nombre' → logprob: -10.877037048339844
    6. 'number' → logprob: -13.752037048339844
    7. ' ' → logprob: -14.002037048339844
    8. '5' → logprob: -14.877037048339844
    9. ' number' → logprob: -14.877037048339844
    10. '500' → logprob: -15.002037048339844

Token 301: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.04928832873702049
    2. 'de' → logprob: -3.674288272857666
    3. ' ' → logprob: -5.049288272857666
    4. 'y' → logprob: -5.299288272857666
    5. 'x' → logprob: -5.799288272857666
    6. ' y' → logprob: -5.924288272857666
    7. '#' → logprob: -6.424288272857666
    8. ' of' → logprob: -6.799288272857666
    9. ' x' → logprob: -7.049288272857666
    10. ' d' → logprob: -7.174288272857666

Token 302: ' pièces' (ID: 49165)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07012081891298294
    2. ' y' → logprob: -2.6951208114624023
    3. ' ' → logprob: -9.570120811462402
    4. ' pièces' → logprob: -10.195120811462402
    5. 'pieces' → logprob: -10.445120811462402
    6. 'pi' → logprob: -10.570120811462402
    7. ' pieces' → logprob: -12.070120811462402
    8. '	y' → logprob: -12.695120811462402
    9. ' pi' → logprob: -13.070120811462402
    10. '5' → logprob: -13.195120811462402

Token 303: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.06412917375564575
    2. 'de' → logprob: -2.814129114151001
    3. 'y' → logprob: -7.18912935256958
    4. '#' → logprob: -7.68912935256958
    5. ' ' → logprob: -8.189128875732422
    6. ' y' → logprob: -8.439128875732422
    7. ' d' → logprob: -9.189128875732422
    8. 'd' → logprob: -9.439128875732422
    9. ' #' → logprob: -9.439128875732422
    10. 'x' → logprob: -10.314128875732422

Token 304: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.08581408858299255
    2. ' ' → logprob: -2.5858139991760254
    3. 'y' → logprob: -5.335813999176025
    4. ' y' → logprob: -6.210813999176025
    5. ' cinq' → logprob: -9.835814476013184
    6. '  ' → logprob: -12.210814476013184
    7. 'c' → logprob: -12.335814476013184
    8. ' five' → logprob: -12.960814476013184
    9. '50' → logprob: -13.335814476013184
    10. ' ' → logprob: -13.585814476013184

Token 305: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.07010282576084137
    2. 'y' → logprob: -2.8201029300689697
    3. ' ' → logprob: -5.070102691650391
    4. ' y' → logprob: -6.320102691650391
    5. ' cinq' → logprob: -12.32010269165039
    6. '  ' → logprob: -12.69510269165039
    7. '```' → logprob: -12.82010269165039
    8. '	y' → logprob: -13.07010269165039
    9. '<|end|>' → logprob: -13.94510269165039
    10. '500' → logprob: -14.44510269165039

Token 306: ' (' (ID: 350)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4453190863132477
    2. 'points' → logprob: -2.195319175720215
    3. '.' → logprob: -2.570319175720215
    4. '*
' → logprob: -3.320319175720215
    5. ' points' → logprob: -3.820319175720215
    6. 'x' → logprob: -3.820319175720215
    7. ' *' → logprob: -3.945319175720215
    8. '.
' → logprob: -4.320319175720215
    9. 'y' → logprob: -4.320319175720215
    10. ',' → logprob: -5.070319175720215

Token 307: 'car' (ID: 6830)
  Prédit: ' car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.9805659055709839
    2. 'car' → logprob: -1.2305659055709839
    3. ')' → logprob: -2.1055660247802734
    4. ' y' → logprob: -2.2305660247802734
    5. 'y' → logprob: -3.1055660247802734
    6. '#' → logprob: -3.2305660247802734
    7. ' parce' → logprob: -4.855566024780273
    8. ' )' → logprob: -5.730566024780273
    9. ' #' → logprob: -5.855566024780273
    10. ' because' → logprob: -5.855566024780273

Token 308: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.05815129354596138
    2. ' y' → logprob: -3.1831512451171875
    3. ' each' → logprob: -4.9331512451171875
    4. 'y' → logprob: -5.4331512451171875
    5. 'cha' → logprob: -6.3081512451171875
    6. 'each' → logprob: -8.058151245117188
    7. ' les' → logprob: -8.058151245117188
    8. ' chacune' → logprob: -8.058151245117188
    9. '#' → logprob: -8.808151245117188
    10. ' cha' → logprob: -9.308151245117188

Token 309: ' pièce' (ID: 56132)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.5741859674453735
    2. ' pièce' → logprob: -0.9491859674453735
    3. 'piece' → logprob: -3.449185848236084
    4. ' piece' → logprob: -5.074185848236084
    5. ' pi' → logprob: -5.324185848236084
    6. ' ' → logprob: -5.574185848236084
    7. 'piec' → logprob: -7.324185848236084
    8. ' ' → logprob: -7.824185848236084
    9. '5' → logprob: -7.824185848236084
    10. ' pièces' → logprob: -7.949185848236084

Token 310: ' rapporte' (ID: 180891)
  Prédit: ' rapporte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rapporte' → logprob: -0.5588832497596741
    2. ' de' → logprob: -1.5588831901550293
    3. 'de' → logprob: -2.3088831901550293
    4. ' apporte' → logprob: -2.6838831901550293
    5. ' rapport' → logprob: -3.4338831901550293
    6. ' vaut' → logprob: -4.683883190155029
    7. ')' → logprob: -6.183883190155029
    8. ' multipl' → logprob: -6.433883190155029
    9. 'rap' → logprob: -7.183883190155029
    10. ' y' → logprob: -7.558883190155029

Token 311: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1427852213382721
    2. '5' → logprob: -2.0177853107452393
    3. ' y' → logprob: -9.51778507232666
    4. ' ' → logprob: -11.76778507232666
    5. '  ' → logprob: -12.01778507232666
    6. 'c' → logprob: -12.14278507232666
    7. 'y' → logprob: -12.26778507232666
    8. ' )' → logprob: -13.01778507232666
    9. '1' → logprob: -13.01778507232666
    10. ' cinq' → logprob: -13.64278507232666

Token 312: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.2015077769756317
    2. ' ' → logprob: -1.701507806777954
    3. ' ' → logprob: -10.326507568359375
    4. '1' → logprob: -10.701507568359375
    5. '  ' → logprob: -11.826507568359375
    6. 'c' → logprob: -11.951507568359375
    7. '2' → logprob: -12.076507568359375
    8. ' y' → logprob: -12.514007568359375
    9. '3' → logprob: -13.076507568359375
    10. '10' → logprob: -13.264007568359375

Token 313: ' points' (ID: 5571)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4301835596561432
    2. ' )' → logprob: -1.1801835298538208
    3. 'points' → logprob: -3.8051836490631104
    4. ' points' → logprob: -4.305183410644531
    5. ' ' → logprob: -6.180183410644531
    6. '),' → logprob: -6.680183410644531
    7. ' ),' → logprob: -6.680183410644531
    8. ').' → logprob: -6.805183410644531
    9. ' ).' → logprob: -7.680183410644531
    10. 'y' → logprob: -9.180183410644531

Token 314: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05075111240148544
    2. ')
' → logprob: -3.050751209259033
    3. ')

' → logprob: -6.925751209259033
    4. ').' → logprob: -7.925751209259033
    5. ')
' → logprob: -8.175750732421875
    6. ' )' → logprob: -8.175750732421875
    7. ' )
' → logprob: -9.550750732421875
    8. '#' → logprob: -10.050750732421875
    9. 'x' → logprob: -10.675750732421875
    10. '*' → logprob: -11.050750732421875

Token 315: '#' (ID: 2)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.11669944226741791
    2. 'points' → logprob: -2.991699457168579
    3. 'score' → logprob: -3.116699457168579
    4. 'result' → logprob: -4.86669921875
    5. 'z' → logprob: -5.86669921875
    6. 'point' → logprob: -6.36669921875
    7. 'mont' → logprob: -6.86669921875
    8. 'tot' → logprob: -7.49169921875
    9. 'T' → logprob: -8.49169921875
    10. 'pts' → logprob: -8.74169921875

Token 316: ' On' (ID: 2160)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.205917090177536
    2. 'points' → logprob: -2.3309171199798584
    3. 'score' → logprob: -2.5809171199798584
    4. 'result' → logprob: -4.955916881561279
    5. 'mont' → logprob: -6.080916881561279
    6. 'point' → logprob: -6.205916881561279
    7. 'tot' → logprob: -7.705916881561279
    8. 'pts' → logprob: -7.955916881561279
    9. 'amount' → logprob: -9.205917358398438
    10. 's' → logprob: -9.205917358398438

Token 317: ' utilise' (ID: 70283)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.6644412875175476
    2. 'total' → logprob: -1.1644413471221924
    3. 'score' → logprob: -2.7894413471221924
    4. ' total' → logprob: -3.2894413471221924
    5. ' points' → logprob: -3.2894413471221924
    6. '_points' → logprob: -4.414441108703613
    7. ' =' → logprob: -5.289441108703613
    8. 'point' → logprob: -5.664441108703613
    9. 'z' → logprob: -5.789441108703613
    10. '_' → logprob: -6.289441108703613

Token 318: ' l' (ID: 305)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6994836926460266
    2. '100' → logprob: -1.3244836330413818
    3. 'points' → logprob: -2.574483633041382
    4. 'score' → logprob: -2.699483633041382
    5. 'x' → logprob: -3.199483633041382
    6. ' total' → logprob: -3.699483633041382
    7. 'result' → logprob: -5.199483871459961
    8. 'point' → logprob: -5.199483871459961
    9. ' x' → logprob: -5.949483871459961
    10. 'le' → logprob: -6.199483871459961

Token 319: ''op' (ID: 70747)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6242597103118896
    2. 'total' → logprob: -1.7492597103118896
    3. '=' → logprob: -2.3742597103118896
    4. ' =' → logprob: -2.9992597103118896
    5. 'x' → logprob: -3.3742597103118896
    6. 'a' → logprob: -3.8742597103118896
    7. 's' → logprob: -4.124259948730469
    8. ' ' → logprob: -4.124259948730469
    9. 'e' → logprob: -4.499259948730469
    10. ' x' → logprob: -4.874259948730469

Token 320: 'érateur' (ID: 108528)
  Prédit: 'érateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érateur' → logprob: -0.7160634398460388
    2. 'ér' → logprob: -1.4660634994506836
    3. 'ération' → logprob: -1.8410634994506836
    4. 'er' → logprob: -2.5910634994506836
    5. 'é' → logprob: -4.591063499450684
    6. 'érations' → logprob: -4.716063499450684
    7. 'érant' → logprob: -5.341063499450684
    8. 'érer' → logprob: -5.341063499450684
    9. 'èr' → logprob: -5.716063499450684
    10. 'éré' → logprob: -5.841063499450684

Token 321: ' *' (ID: 425)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17162711918354034
    2. 'total' → logprob: -2.6716270446777344
    3. ' =' → logprob: -3.1716270446777344
    4. ' total' → logprob: -4.046627044677734
    5. '+' → logprob: -4.296627044677734
    6. '*' → logprob: -4.421627044677734
    7. 's' → logprob: -7.046627044677734
    8. '_' → logprob: -7.421627044677734
    9. '_total' → logprob: -7.421627044677734
    10. 'points' → logprob: -8.296627044677734

Token 322: ' pour' (ID: 1930)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14779743552207947
    2. 'total' → logprob: -3.2727973461151123
    3. 'x' → logprob: -3.8977973461151123
    4. ' *' → logprob: -4.147797584533691
    5. ' ' → logprob: -4.272797584533691
    6. ' total' → logprob: -4.897797584533691
    7. ' x' → logprob: -5.022797584533691
    8. 's' → logprob: -5.397797584533691
    9. '(' → logprob: -5.397797584533691
    10. '*
' → logprob: -5.647797584533691

Token 323: ' la' (ID: 557)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.5655311942100525
    2. 'calcul' → logprob: -1.0655312538146973
    3. ' multiplier' → logprob: -2.6905312538146973
    4. 'cal' → logprob: -4.690531253814697
    5. 'mult' → logprob: -5.315531253814697
    6. '*' → logprob: -7.440531253814697
    7. 'multip' → logprob: -7.440531253814697
    8. ' calc' → logprob: -7.440531253814697
    9. ' calcular' → logprob: -7.690531253814697
    10. ' effectuer' → logprob: -8.065530776977539

Token 324: ' multiplication' (ID: 86340)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.5250234007835388
    2. 'calcul' → logprob: -1.1500234603881836
    3. ' multiplication' → logprob: -3.0250234603881836
    4. 'mult' → logprob: -4.025023460388184
    5. ' calcul' → logprob: -4.900023460388184
    6. '*' → logprob: -5.025023460388184
    7. 'm' → logprob: -6.275023460388184
    8. 'mont' → logprob: -6.400023460388184
    9. 's' → logprob: -6.525023460388184
    10. 'mul' → logprob: -6.525023460388184

Token 325: ' et' (ID: 859)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.545953631401062
    2. 'points' → logprob: -1.420953631401062
    3. 'result' → logprob: -2.9209537506103516
    4. 'z' → logprob: -3.2959537506103516
    5. '.
' → logprob: -3.6709537506103516
    6. '.' → logprob: -4.670953750610352
    7. 'point' → logprob: -4.795953750610352
    8. '*
' → logprob: -5.045953750610352
    9. '
' → logprob: -5.295953750610352
    10. '\n' → logprob: -5.920953750610352

Token 326: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0710398256778717
    2. ' +' → logprob: -2.696039915084839
    3. '(' → logprob: -8.571040153503418
    4. 'x' → logprob: -8.946040153503418
    5. ' ' → logprob: -8.946040153503418
    6. '=' → logprob: -9.321040153503418
    7. 'le' → logprob: -9.571040153503418
    8. '#' → logprob: -9.571040153503418
    9. ''' → logprob: -9.696040153503418
    10. ')' → logprob: -10.321040153503418

Token 327: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.28300997614860535
    2. '=' → logprob: -2.6580100059509277
    3. ' y' → logprob: -3.2830100059509277
    4. ' ' → logprob: -3.2830100059509277
    5. ' =' → logprob: -3.6580100059509277
    6. ' for' → logprob: -3.9080100059509277
    7. 'pour' → logprob: -4.283010005950928
    8. ' x' → logprob: -4.408010005950928
    9. ' la' → logprob: -5.408010005950928
    10. ' l' → logprob: -5.783010005950928

Token 328: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4101041853427887
    2. 'l' → logprob: -1.4101041555404663
    3. ' la' → logprob: -3.160104274749756
    4. ' addition' → logprob: -3.285104274749756
    5. 'addition' → logprob: -4.660104274749756
    6. 'la' → logprob: -6.910104274749756
    7. ' les' → logprob: -7.660104274749756
    8. ' ' → logprob: -8.285103797912598
    9. ' lâ' → logprob: -8.285103797912598
    10. 'lass' → logprob: -9.035103797912598

Token 329: ''' (ID: 6)
  Prédit: 'addition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'addition' → logprob: -0.16056255996227264
    2. ' addition' → logprob: -1.910562515258789
    3. ''' → logprob: -9.035562515258789
    4. 'a' → logprob: -9.660562515258789
    5. 's' → logprob: -9.910562515258789
    6. 'add' → logprob: -10.410562515258789
    7. '+' → logprob: -11.035562515258789
    8. ' somme' → logprob: -11.160562515258789
    9. 'e' → logprob: -11.285562515258789
    10. 'Addition' → logprob: -13.035562515258789

Token 330: 'addition' (ID: 198155)
  Prédit: 'addition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'addition' → logprob: -0.1660907119512558
    2. ' addition' → logprob: -1.916090726852417
    3. 's' → logprob: -5.666090488433838
    4. ' somme' → logprob: -6.291090488433838
    5. '+' → logprob: -8.291090965270996
    6. 'sum' → logprob: -9.416090965270996
    7. 'add' → logprob: -10.166090965270996
    8. ' ' → logprob: -10.291090965270996
    9. ' +' → logprob: -10.791090965270996
    10. 'som' → logprob: -10.916090965270996

Token 331: '.
' (ID: 558)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2375549077987671
    2. 'score' → logprob: -2.2375550270080566
    3. 'points' → logprob: -2.7375550270080566
    4. 'result' → logprob: -3.8625550270080566
    5. 'z' → logprob: -4.737555027008057
    6. 'point' → logprob: -5.362555027008057
    7. 'x' → logprob: -7.112555027008057
    8. 'mont' → logprob: -7.112555027008057
    9. 'Z' → logprob: -7.487555027008057
    10. '
' → logprob: -7.737555027008057

Token 332: '#' (ID: 2)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3069307506084442
    2. 'score' → logprob: -1.6819307804107666
    3. 'points' → logprob: -2.9319307804107666
    4. 'result' → logprob: -4.6819305419921875
    5. 'mont' → logprob: -5.0569305419921875
    6. 'point' → logprob: -5.5569305419921875
    7. 'z' → logprob: -6.4319305419921875
    8. 'tot' → logprob: -7.0569305419921875
    9. 'T' → logprob: -7.6819305419921875
    10. 'Z' → logprob: -7.8069305419921875

Token 333: ' La' (ID: 3038)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.1811034083366394
    2. 'score' → logprob: -2.556103467941284
    3. 'points' → logprob: -2.931103467941284
    4. 'mont' → logprob: -4.181103229522705
    5. 'result' → logprob: -4.681103229522705
    6. 'point' → logprob: -5.181103229522705
    7. 'z' → logprob: -6.806103229522705
    8. 'tot' → logprob: -7.056103229522705
    9. 'pts' → logprob: -8.181103706359863
    10. 'Z' → logprob: -8.306103706359863

Token 334: ' fonction' (ID: 17610)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5162340998649597
    2. 'score' → logprob: -1.1412341594696045
    3. 'points' → logprob: -3.3912341594696045
    4. 'point' → logprob: -4.391233921051025
    5. 'result' → logprob: -4.516233921051025
    6. 'mont' → logprob: -5.016233921051025
    7. 'z' → logprob: -5.266233921051025
    8. 'note' → logprob: -5.766233921051025
    9. 's' → logprob: -6.016233921051025
    10. ' total' → logprob: -6.141233921051025

Token 335: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0033601049799472094
    2. ' print' → logprob: -5.878360271453857
    3. 'total' → logprob: -7.753360271453857
    4. 'score' → logprob: -9.6283597946167
    5. 'result' → logprob: -10.7533597946167
    6. 'points' → logprob: -11.3783597946167
    7. 'prin' → logprob: -11.5033597946167
    8. ' total' → logprob: -12.0033597946167
    9. 'pr' → logprob: -12.3783597946167
    10. 'prix' → logprob: -13.0033597946167

Token 336: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014255298301577568
    2. '()' → logprob: -4.264255523681641
    3. ' (' → logprob: -10.51425552368164
    4. '(print' → logprob: -10.63925552368164
    5. '(x' → logprob: -11.51425552368164
    6. '("' → logprob: -11.51425552368164
    7. '('' → logprob: -12.13925552368164
    8. '(
' → logprob: -12.51425552368164
    9. '(

' → logprob: -13.01425552368164
    10. '(X' → logprob: -13.01425552368164

Token 337: ' affiche' (ID: 127479)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.037187524139881134
    2. '(print' → logprob: -3.4121875762939453
    3. '(x' → logprob: -6.537187576293945
    4. '()' → logprob: -7.037187576293945
    5. 'print' → logprob: -7.162187576293945
    6. '(X' → logprob: -8.287187576293945
    7. '(Print' → logprob: -10.037187576293945
    8. '(pr' → logprob: -10.537187576293945
    9. ' (' → logprob: -10.537187576293945
    10. '((' → logprob: -11.287187576293945

Token 338: ' le' (ID: 505)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3174954652786255
    2. '(' → logprob: -1.3174954652786255
    3. '(y' → logprob: -6.067495346069336
    4. '((' → logprob: -6.817495346069336
    5. '()' → logprob: -7.692495346069336
    6. '(X' → logprob: -8.692495346069336
    7. '("' → logprob: -9.817495346069336
    8. 'x' → logprob: -10.442495346069336
    9. '(
' → logprob: -10.692495346069336
    10. '(sum' → logprob: -11.567495346069336

Token 339: ' résultat' (ID: 62556)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022581255063414574
    2. 'total' → logprob: -4.897581100463867
    3. '()' → logprob: -6.022581100463867
    4. 's' → logprob: -6.147581100463867
    5. '(x' → logprob: -6.272581100463867
    6. 'result' → logprob: -6.272581100463867
    7. ' (' → logprob: -6.647581100463867
    8. '(total' → logprob: -7.147581100463867
    9. ' total' → logprob: -7.272581100463867
    10. '(
' → logprob: -7.522581100463867

Token 340: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17760974168777466
    2. '(' → logprob: -2.05260968208313
    3. '(
' → logprob: -4.052609920501709
    4. '()
' → logprob: -4.927609920501709
    5. '
' → logprob: -5.552609920501709
    6. '100' → logprob: -6.177609920501709
    7. '(print' → logprob: -6.677609920501709
    8. 'x' → logprob: -8.05260944366455
    9. '500' → logprob: -8.05260944366455
    10. '\n' → logprob: -8.17760944366455

Token 341: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.18325063586235046
    2. 'la' → logprob: -1.9332506656646729
    3. ' l' → logprob: -4.183250427246094
    4. 'à' → logprob: -5.808250427246094
    5. ' la' → logprob: -6.308250427246094
    6. 'é' → logprob: -6.808250427246094
    7. 'a' → logprob: -7.933250427246094
    8. ' ' → logprob: -8.433250427246094
    9. 'lac' → logprob: -8.683250427246094
    10. 'lin' → logprob: -8.808250427246094

Token 342: ''écran' (ID: 147901)
  Prédit: ''écran'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''écran' → logprob: -0.030361024662852287
    2. 'a' → logprob: -4.155361175537109
    3. 'é' → logprob: -5.030361175537109
    4. '’écran' → logprob: -5.155361175537109
    5. ' écran' → logprob: -7.155361175537109
    6. 'e' → logprob: -7.780361175537109
    7. '#' → logprob: -8.78036117553711
    8. ''utilisateur' → logprob: -9.15536117553711
    9. ''é' → logprob: -9.53036117553711
    10. 'iné' → logprob: -10.15536117553711

Token 343: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.027433879673480988
    2. '
' → logprob: -3.6524338722229004
    3. '
' → logprob: -8.527434349060059
    4. '```' → logprob: -8.902434349060059
    5. ' print' → logprob: -9.027434349060059
    6. '  
' → logprob: -9.277434349060059
    7. 'total' → logprob: -9.652434349060059
    8. 'result' → logprob: -9.777434349060059
    9. '`
' → logprob: -10.027434349060059
    10. 'x' → logprob: -10.277434349060059

Token 344: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004764518700540066
    2. 'points' → logprob: -5.629764556884766
    3. 'total' → logprob: -7.504764556884766
    4. 'result' → logprob: -8.254764556884766
    5. 'score' → logprob: -8.254764556884766
    6. 'point' → logprob: -9.754764556884766
    7. 'pts' → logprob: -11.379764556884766
    8. 'prin' → logprob: -11.754764556884766
    9. '```' → logprob: -13.004764556884766
    10. ' print' → logprob: -13.129764556884766

Token 345: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.057004187256097794
    2. '(x' → logprob: -2.93200421333313
    3. '((' → logprob: -6.182003974914551
    4. ' (' → logprob: -10.18200397491455
    5. '(X' → logprob: -11.93200397491455
    6. 'x' → logprob: -13.43200397491455
    7. '(
' → logprob: -13.55700397491455
    8. ' ' → logprob: -13.55700397491455
    9. '(y' → logprob: -13.93200397491455
    10. '()' → logprob: -14.05700397491455

Token 346: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12693136930465698
    2. '*' → logprob: -2.1269314289093018
    3. ' ' → logprob: -13.001931190490723
    4. ' ' → logprob: -14.001931190490723
    5. ')' → logprob: -15.626931190490723
    6. '**' → logprob: -18.00193214416504
    7. '100' → logprob: -18.25193214416504
    8. ' **' → logprob: -18.37693214416504
    9. ' )' → logprob: -18.50193214416504
    10. '1' → logprob: -18.75193214416504

Token 347: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.17974869906902313
    2. ' ' → logprob: -1.8047486543655396
    3. ' ' → logprob: -13.67974853515625
    4. '1' → logprob: -13.92974853515625
    5. ')' → logprob: -13.92974853515625
    6. '10' → logprob: -15.17974853515625
    7. '  ' → logprob: -15.55474853515625
    8. '   ' → logprob: -15.67974853515625
    9. '_' → logprob: -15.67974853515625
    10. '１００' → logprob: -16.80474853515625

Token 348: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -8.53050296427682e-05
    2. ' ' → logprob: -9.37508487701416
    3. '1' → logprob: -15.37508487701416
    4. '１００' → logprob: -17.000085830688477
    5. '   ' → logprob: -17.750085830688477
    6. '500' → logprob: -18.000085830688477
    7. '  ' → logprob: -18.125085830688477
    8. '10' → logprob: -18.625085830688477
    9. '```' → logprob: -19.937585830688477
    10. ')' → logprob: -20.000085830688477

Token 349: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '۰' → logprob: -16.75
    4. ')' → logprob: -18.0
    5. '０' → logprob: -18.3125
    6. '00' → logprob: -18.375
    7. '   ' → logprob: -18.625
    8. '০' → logprob: -18.8125
    9. '०' → logprob: -18.9375
    10. '٠' → logprob: -19.0

Token 350: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.014165159314870834
    2. '+' → logprob: -4.264164924621582
    3. ')' → logprob: -14.014164924621582
    4. '+y' → logprob: -14.264164924621582
    5. ' ' → logprob: -16.7641658782959
    6. ' +
' → logprob: -17.0141658782959
    7. ' ' → logprob: -17.8891658782959
    8. '+x' → logprob: -18.3891658782959
    9. ' )' → logprob: -18.7641658782959
    10. ')+' → logprob: -19.2641658782959

Token 351: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.10021745413541794
    2. 'y' → logprob: -2.350217342376709
    3. '5' → logprob: -11.600217819213867
    4. ' ' → logprob: -13.475217819213867
    5. ')' → logprob: -16.100217819213867
    6. '	y' → logprob: -16.475217819213867
    7. ' ' → logprob: -17.850217819213867
    8. ')y' → logprob: -18.850217819213867
    9. '7' → logprob: -19.225217819213867
    10. '    ' → logprob: -19.225217819213867

Token 352: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.029753385111689568
    2. '*' → logprob: -3.5297534465789795
    3. ')' → logprob: -13.029753684997559
    4. ' ' → logprob: -14.529753684997559
    5. '5' → logprob: -15.779753684997559
    6. ' ' → logprob: -16.154752731323242
    7. ' )' → logprob: -17.904752731323242
    8. '*)' → logprob: -18.779752731323242
    9. '**' → logprob: -19.404752731323242
    10. ' *)' → logprob: -19.404752731323242

Token 353: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0699373260140419
    2. ' ' → logprob: -2.694937229156494
    3. '  ' → logprob: -14.819937705993652
    4. ' ' → logprob: -15.069937705993652
    5. '```' → logprob: -16.007436752319336
    6. '   ' → logprob: -16.569936752319336
    7. '۵' → logprob: -17.069936752319336
    8. '٥' → logprob: -17.632436752319336
    9. ')' → logprob: -17.757436752319336
    10. '５' → logprob: -17.944936752319336

Token 354: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '  ' → logprob: -17.125139236450195
    4. '```' → logprob: -18.250139236450195
    5. '   ' → logprob: -18.625139236450195
    6. '۵' → logprob: -19.125139236450195
    7. ' ' → logprob: -19.750139236450195
    8. '٥' → logprob: -19.875139236450195
    9. '５' → logprob: -19.937639236450195
    10. ')' → logprob: -20.812639236450195

Token 355: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.024604277219623e-05
    2. ' )' → logprob: -10.125040054321289
    3. '))' → logprob: -17.12504005432129
    4. ')`' → logprob: -17.62504005432129
    5. ')#' → logprob: -17.62504005432129
    6. ')
' → logprob: -17.75004005432129
    7. '')' → logprob: -19.12504005432129
    8. '())' → logprob: -20.25004005432129
    9. '）' → logprob: -20.50004005432129
    10. '()' → logprob: -20.50004005432129


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 353
Tokens correctement prédits (1ère position, stricte): 104
Tokens correctement prédits (1ère position, avec adaptation): 104
Tokens correctement prédits (top 10): 214
Précision stricte (1ère position): 29.46%
Précision adaptée (1ère position): 29.46%
Précision (top 10): 60.62%
================================================================================
